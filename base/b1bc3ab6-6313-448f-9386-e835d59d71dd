{
    "title": "Flash 05: A Friend Indeed",
    "pages": [
        "<p align=\"center\">Flash 05: A Friend Indeed</p>\n\nWhile this story can be read on its own, I suggest you read the first four parts to get a full understanding of what is going on here.\n\nThis story contains elements of sci-fi and mind control. I have chosen to put it here after a number of comments suggesting I keep the whole series in one area of Literotica.\n\nMany thanks to reader Gary Mitchell for suggesting this series -- and for giving me permission to publicly credit him for the tip. I would also like to thank those who offered comments and constructive criticism on my previous stories.\n\nFor those who want to say this or that would never happen, remember this is my universe, a place where nearly anything can, and often does, happen. At least on paper...\n\nPlease refer to my profile for more on my personal policy regarding comments, feedback, follows, etc. (Yes, I DO moderate comments) And please remember, this is a work of fiction, not a docu-drama...\n\n...\n\n\"Push!\" I shouted.\n\n\"I AM pushing,\" Ginger snapped back as she dug her fingernails deeper into my arm. I gritted my teeth through the pain and fully expected to see blood on my arm. I took the cold washcloth and wiped the sweat off her forehead before it got into her eyes.\n\n\"Breathe,\" I said, trying to follow the instructions we got in our Lamaze classes. I saw her eyes flash briefly before she snapped.\n\n\"If you tell me to breathe one more time, I'm gonna burn this fricking hospital to the ground!\" she growled, causing the nurses to look at each other with concern. I saw the looks and tried to reassure them.\n\n\"It's okay,\" I said. \"She doesn't really mean it.\" I got close to her ear and whispered. \"Remember what Smith and Jones taught you, dear. Breathe. Close your eyes and breathe deeply.\" She nodded her head and followed my instruction. Soon, she relaxed her death grip on my arm and seemed to be doing a bit better. I looked and saw the deep red marks where her fingernails had been. No blood, at least, not yet.\n\nEventually, both children made their entrance into the world. Jefferson (Jeff) and Genevieve (Jenny) -- named after my maternal grandfather and Ginger's maternal grandmother -- were cleaned and presented to me one at a time.\n\nI was struck first by their beauty. I had never seen such beautiful children before in my life. As I held each one, I saw the gold specks in their little blue eyes sparkle, then felt a strange snap in my head as they linked to my mind. They couldn't vocalize it, but they each knew I was their father. I never felt such unconditional love in my entire life and I saw myself, or rather, I saw myself as they saw me. I nearly cried as I held them in my arms.\n\n\"Look at them, Cam,\" Ginger said. That's me, by the way -- Cameron Drake, Cam to my friends and family. \"Aren't they the most beautiful children you've ever seen?\" she asked after I handed the children to her. Tears fell down her checks as she looked into their sweet, innocent faces. I could tell they had also made the neural link to her mind as well.\n\n\"Yes, they are,\" I said. \"But they have a beautiful mother, so I'm not surprised.\" She looked at me with a smile.\n\n\"Do you feel them in your mind?\" she asked.\n\n\"Yes, I do,\" I said. It was a bit... different... feeling their presence in my mind. \"This is going to take some getting used to.\"\n\n\"Yes, it is,\" she said. \"But at least we won't need a baby monitor.\" I chuckled at that. \"I'm really very sorry about what I said earlier. I didn't mean any of it.\" I knew from our birthing classes what to expect, but I was a bit surprised at the level of invective she hurled at me while she was in labor.\n\n\"I'll give you a pass this time,\" I said with a smile, which she returned. After they got Ginger settled into her room, my parents came by and we went to see the twins. They were just as awestruck as I was when they first looked at the children. For a moment, I thought my mother would lay claim to them.\n\nJack Peabody, Ginger's current boss and now a good friend, came by to see the children and check up on Ginger. Her company had given her three months of paid maternity leave and Jack had talked about the possibility of her telecommuting so she could stay at home with the children. Max and Adrestia also stopped by and were equally struck by the childrens' beauty.\n\n\"Well, if I'm going to be a godmother, I couldn't have any more beautiful godchildren than these,\" Adrestia said with a smile. We had approached them about being godparents to the children a couple months ago. They were a bit uncertain at first, but finally decided to throw caution to the wind. Adrestia, however, jokingly suggested she be referred to as their \"goddess-mother.\"\n\n\"I suppose under the circumstances, that might be okay,\" I joked back.\n\nI was a bit disappointed that Bill Collins, my oldest and best friend, hadn't come by, but I knew he was out of town working to secure a new client for the company he works for -- Apex Tech Solutions -- the same IT company I used to work for.\n\nHe was my first choice to be the childrens' godfather, but he turned me down when I asked, saying he wasn't really in any shape to be much of anything to anyone. I knew he was going through a lot with his own children and the aftermath of his own contentious divorce, so I didn't press the issue.\n\n\"How about if you let me be their god-uncle or something?\" he asked when he saw the look on my face.\n\n\"Of course,\" I said.\n\nWe finally got home and settled into a routine. To my amazement, the children quickly adapted to our schedule and actually slept through most of the whole night from the time we got home. They didn't cry very much, which also surprised me.\n\nBut they did have ways of letting us know when they were hungry or when they needed their diapers changed. Since Ginger breast-fed them, they learned to associate her breasts with \"food.\" So, when they were hungry, for example, one or both of us would get a mental picture of Ginger's breasts. I won't bother describing what we got when they needed a diaper changed. Let's just say, we got the message, loud and clear.\n\nAs for me, I got a kick out of being a father and spent as much time as I could with the two of them. More than once, Ginger would come into the front room to see me asleep on the floor with one or both of them snuggled up on my chest, also sound asleep.\n\nSince Ginger was staying at home with the kids, Max decided I should also stay home with her as much as possible and use the time to get as far ahead in my online course work as I could, which I did. I helped him on a couple of cases, but most of my time was at home.\n\nSmith and Jones, the two aliens whose \"experiment\" made me what I am today, resumed their weekly visits and examined the children. They ran their strange devices over the two youngsters and conferred with each other as they looked at the results.\n\n\"Your offspring are well within normal parameters,\" Smith declared.\n\n\"Is their DNA in flux like mine?\" I asked.\n\n\"Yes and no,\" Jones said. \"Their DNA is in flux, but not quite like yours.\"\n\n\"Will they develop abilities like mine?\" I asked.\n\n\"Yes, they will, but there is a good chance their abilities may one day exceed yours,\" Smith added. Ginger and I looked at each other with concern. \"There is no need for concern. Your offspring appear to be far more mature than their age might suggest. Nevertheless, we will work with all of you to see them through this period of their lives. Just be the kind, loving parents you are.\"\n\nThe children had been home for about two months when Bill came by to visit. We had just finished dinner, and was giving the children a bath when I heard the doorbell ring.\n\n\"Go ahead, I'll finish up here,\" Ginger said. I gave her a kiss and answered the door to see Bill standing there. It didn't require any telepathy or special abilities to see something was eating at him.\n\n\"Bill, long time, no see,\" I said. \"Come on in.\" He came into the front room and I offered him a beer, which he gladly accepted.\n\n\"I can't stay very long, Cam,\" he said when we sat down in the front room.\n\n\"What's wrong?\" I asked. I could've searched his mind, but decided to respect his privacy and let him tell me for himself.\n\n\"I've... lost my job at Apex,\" he finally said. \"I just came by to let you know I'll be moving out of the condo in a couple weeks.\"\n\n\"What happened?\" I asked.\n\n\"It's been a while coming, but something happened about three weeks ago,\" he said. \"I came in and heard a couple of the guys talking smack about you and Ginger. They called her a round-heeled slut and said you were a wimp for keeping her.\"\n\n\"Let me guess. Edward Trujillo and Ralph Banks,\" I said. He nodded his head.\n\n\"Yeah,\" he said. \"I told them they had no idea what happened and if they had any balls, they'd tell you to your face. They didn't like that and Trujillo poked me in the chest with his finger. Well, we got into it, and old man Jennings came in. Fired all three of us.\"\n\n\"Damn. I'm really sorry to hear that, Bill,\" I said.\n\n\"I just couldn't stand there and let them talk you down like that,\" he said.\n\n\"I appreciate you standing up for us, Bill. Really, I do. But you know I've never cared what other people think. Besides, Trujillo and Banks have always been assholes. That's just the way they are,\" I said. \"So, why are you moving out?\"\n\n\"I've been looking for a job, but with this economy... No one is hiring right now. So, I'm going to hit the road, see what else is out there,\" he said.\n\n\"There's something else going on, isn't there?\" I asked. He slowly nodded his head.\n\n\"Yeah. Gloria and her asshole boyfriend has been giving me a lot of grief about stuff lately,\" he said. \"They keep filing papers with the court demanding I reveal all my income and explain where I got the condo from. They even harassed Apex before Jennings let me go.\"\n\n\"Why?\" I asked. \"You're divorce is final, you've been paying everything like you're supposed to. Why is she harassing you?\"\n\n\"Because, she's a blood-sucking bitch from which there is no escape,\" he said. \"So you see, I have to get out of town, go someplace where I can start over, someplace where she can't find me.\"\n\n\"You know if she really wants to find you all she has to do is hire a PI,\" I said.\n\n\"Then I'll move again,\" he said. \"And again and again, if that's what it'll take to get her to leave me the hell alone.\"\n\n\"What about the kids?\" I asked.\n\n\"I hardly ever get to see them anyway,\" he said. \"They've turned the kids against me so much they hardly ever want to see me anyway.\" I thought for a few moments before saying anything.\n\n\"How long have we been friends?\" I asked.\n\n\"Since first grade,\" he said.\n\n\"Yeah,\" I said. \"You remember that time I slept over at your place? I think we were about what, seven years old? We had just finished watching some old westerns when you pulled out your Old Timer and we did that Indian blood brother ceremony thing.\" He laughed at the memory.\n\n\"Yeah, I remember,\" he said. \"I thought my mom was gonna tear me a new asshole for that.\"\n\n\"Me too,\" I said. I held out my hand and pointed to a faint line in my palm. \"See, I still have a scar from that. You see, Bill, we're not just friends. We're blood brothers. Which means we help each other out.\"\n\n\"Yeah, but you and Ginger have already done so much for me,\" he said. I felt Ginger in my mind. She had been listening in to our conversation and she knew what I was thinking.\n\n\"Go for it,\" she said in my mind.\n\n\"Look, Bill, running from this isn't going to do you any good,\" I said. \"Why don't you come work for us?\" He looked at me, shocked.\n\n\"Work for you?\" he asked. \"Doing what?\"\n\n\"Pretty much what you were doing for Apex,\" I said. \"Business development, research, that sort of thing. You still are the king of the Google searches, aren't you?\"\n\n\"You know it,\" he said.\n\n\"And you still have your Lexis/Nexus access, right?\"\n\n\"Yes,\" he said.\n\n\"Well, there you go,\" I said. \"Ginger and I have been talking about bringing in someone to help ever since the kids were born. A lot of her time is spent looking after them, and she could really use the help. I'll top whatever Apex was paying you and you can stay in the condo. Call it a fringe benefit.\"\n\n\"But what kind of business are we talking about here?\" Bill asked.\n\n\"It's kinda like a full-service investigative agency,\" I said. \"We're still in the start-up phase of things right now, but once we get going full-bore, I think it'll be 'Katy bar the door.' So, what do you think? You up to the challenge?\" Bill thought about it for a few moments before answering.\n\n\"Alright, count me in,\" he said with a smile.\n\n\"There's just a few things you need to know before we go any farther. And I need your complete and total confidence on this. You can't say anything to anyone,\" I said.\n\n\"I won't,\" he said. \"You know you can trust me.\"\n\n\"I know I can,\" I told him. \"But you may not want to work for us after you hear what I'm about to tell you.\"\n\n\"I find that hard to believe,\" he said. \"But lay it on me.\"\n\n\"All right. Here goes,\" I said. \"You already knew about me being able to hear other people's thoughts after that lightning strike, right?\"\n\n\"Yeah, I remember that,\" he said.\n\n\"Well, there's a whole lot more to the story,\" I said. For the next hour, I explained everything to him. I told him about Smith and Jones, my ever-increasing mental abilities, even what I had done to Chad and the goons who tried to kill Ginger. In short, I told him absolutely everything. When I finished, his eyes were as big as saucers.\n\n\"Fuck,\" he exclaimed when I finished. \"And you say Ginger has abilities as well?\"\n\n\"Yes, but not quite as advanced as mine. At least, not yet,\" I said.\n\n\"What about the twins?\" he asked.\n\n\"I've been told their abilities may one day exceed mine.\"\n\n\"And you're still advancing?\" he asked.\n\n\"Yes,\" I said.\n\n\"Any idea for how long?\"\n\n\"No one knows yet,\" I said. \"It could take another 20 years before I reach my maximum potential.\"\n\n\"Twenty years?\" he asked. I nodded my head.\n\n\"Any idea what kind of new abilities you might get between now and then?\"\n\n\"None,\" I told him. \"So, are you still in?\" He thought for a few moments, then nodded his head.\n\n\"Count me in,\" he said. \"You've always been there for me. It's the least I can do for you.\"\n\n\"I'm glad to hear you say that,\" I said, extending my hand. He took it and we shook hands. \"Now, why don't you go on home, get a good night's rest and come back first thing in the morning. We'll get your employment stuff taken care of and then work on getting your situation with Gloria under control.\"\n\n\"Thanks, Cam, that means the world to me,\" he said.\n\n\"Hey, what are friends for?\" I asked. \"How are you set for funds, by the way?\"\n\n\"I've got a little bit left, enough for a few days,\" he said.\n\n\"Alright. Well, if you need anything, let me know,\" I said.\n\n\"I will,\" he said. \"Thanks again.\" I walked him to the door and watched as he drove away. I turned around to find Ginger standing in the front room.\n\n\"That was a very nice thing you did for him,\" she said as she wrapped her arms around me.\n\n\"Well, Bill and I go way back,\" I said.\n\n\"Still, it was very nice what you did,\" she said. \"Why don't you go say good night to the kids. They love it when you tuck them in.\"\n\n\"Of course,\" I said. I walked into the darkened room and instantly spotted small flashes of light. I stood in the doorway and looked to see what was going on. The kids were in their cribs, laying on their backs with their faces turned to each other. The gold specks in their eyes were flashing, almost as if using some form of Morse code. Were they communicating with each other?\n\nThe flashing stopped as I stepped further into the room. I picked them up, one by one, and gave each of them a kiss, telling them I love them. They cooed and gurgled as babies do. As I held Jenny in my arms, I thought I heard a childlike \"da\" in my mind. I looked at her and saw one of the specks in her eyes briefly flash. Did she just call me \"Da?\" I put them back in their cribs and covered them up before going into the master bedroom.\n\n\"I take it you saw it?\" Ginger asked.\n\n\"Yes, I did,\" I told her. \"How long has that been going on?\"\n\n\"I first saw it about three days ago,\" she said. \"I've seen it a couple times since then. You think they're communicating with each other?\"\n\n\"That's the only thing that makes any sense to me,\" I said.\n\n\"You think maybe we should do something to stop it?\" I shook my head.\n\n\"No, there's no harm being done. Let them develop and see what happens. We'll need to ask Smith and Jones about it the next time they're here,\" I said. \"Come on, let's go to bed and get a good night's sleep.\"\n\n...\n\nBill came by at 8:00 the next morning, ready to get to work. I walked him to the office and ushered him inside. After showing him around a bit, we went through the standard employment paperwork Ginger had already put together when we first started talking about bringing someone on board.\n\n\"So, what now?\" Bill asked.\n\n\"I think the first thing we need to do is get your brain feed saved,\" I said.\n\n\"Brain feed?\" he asked.\n\n\"Yes, it's all of your combined memories, thoughts and secrets.\" He looked at me, shocked. \"Don't worry, it doesn't hurt, and it'll help us figure out what's going on. It's completely confidential, by the way.\"\n\n\"That's good to hear,\" he said. \"I've done some things I'm not too proud of.\"\n\n\"We all have those in our past,\" I said.\n\n\"So, what do I do?\" he sked.\n\n\"Shake my hand,\" I said. I held out my hand and he took it. I knew exactly where to touch to get the desired result, and he felt the shock as his feed was dumped into my head. \"See, that wasn't so bad,\" I said when it was all finished.\n\n\"So, what now?\" he asked. I pulled out my headset and plugged it into my computer.\n\n\"Now I transfer everything to the main server,\" I said. \"Once that's done, the application will process it, sorting everything out by date. Then we'll have a fully searchable feed we can use.\" I started the process and let it run. \"That could take some time. So, while that's processing, why don't you tell me about your divorce. You never really told me much except that Gloria had cheated on you. What happened? Exactly?\"\n\n\"I never told you because I was so damned humiliated about the way it all happened,\" he said. \"I came home from work one day and she met me, wearing the shortest skirt I had ever seen her wear. I asked her where the kids were and she told me her folks had them for the night. I thought she wanted me to take her out, so I offered to get changed.\n\n\"That's when she told me that 'WE' weren't going out. Instead, her date was on his way to pick her up, and she would be gone most, if not all, of the night with him. Well, you could've knocked me over with a feather. We argued. I told her there was no way I was gonna put up with that.\n\n\"She told me I had no choice. Either put up with being a cuckold or she and her lover would ruin me in a divorce. Well, I told her I was not going to be her willing cuckold, and said if she left with him to not bother coming back. She laughed in my face.\n\n\"When her lover got to the house, he just walked in like he owned the place. I can't even repeat what happened after that, it's so humiliating,\" he said, his face turning red with shame.\n\n\"That's alright,\" I said. \"We've got the memory stored. I can look at it later. Just give me the basic story. First off, who was this guy?\"\n\n\"H. Ross Simpson, Gloria's boss,\" he said.\n\n\"You mean, THE H. Ross Simpson, the big-shot family law attorney?\" I asked.\n\n\"Yeah, him,\" Bill said. \"He told me that from now on, what was mine was his. That he would come and go as he pleased and take my wife whenever he wanted. I told him he could kiss my ass and that's when he decked me.\"",
        "\"He assaulted you?\" I asked.\n\n\"Yeah. Right there in my own home. Gloria laughed and told him to kick my ass more if he wanted to. I fought back, but in the end, they left me on the floor. Warned me against calling the cops. Said bad things could happen if I did. And they did.\"\n\n\"What do you mean?\"\n\n\"Well, I called the cops after they left. They came and began accusing me of domestic violence, claimed there was a report that I had abused the children and nearly took me to jail. Imagine that! I'm the one who gets beaten, and they want to take me to jail. Over a false charge. And that was just the beginning.\" Just then, his phone buzzed. He looked at it and showed it to me.\n\n\"Ross and I are coming to your place this afternoon,\" the message said. \"Be there with this month's support check or else. 1:30 pm.\"\n\n\"I've already paid all my support for this month,\" he said. \"I even have the bank statement showing I've paid it.\"\n\n\"Does she do this all the time?\" I asked.\n\n\"Yes,\" he said. \"It never ends.\"\n\n\"Alright,\" I said. \"Let me call someone.\" I grabbed my phone and called Drew Henson, the lawyer I worked with nearly a year ago when I considered divorcing Ginger. The receptionist put me through to him right away.\n\n\"Mr. Drake,\" he said enthusiastically. \"How are things going? Do you need my services after all?\"\n\n\"Yes, Drew, I do, but not for me. It's for a friend who happens to work for me,\" I said. He listened as I explained the situation to him. \"Is there anything you can do? File an order of protection or something? This Ross guy has already assaulted him at least once before.\"\n\n\"You need this by 1:30, you say?\" Drew asked.\n\n\"Yes,\" I said.\n\n\"That doesn't give me much time,\" he said. \"I'll do what I can and meet you two there. Give me the address.\" I gave it to him. \"Alright, let me get going on this. I'll see you there at 1:30.\"\n\n\"Thanks, Drew, I appreciate this,\" I said. I put my phone away and turned to my friend, who sat with his head in his hands. I could see the tears coursing down his face. I could tell this was a man nearly at the end of his rope. Someone is definitely going to pay for this, I thought.\n\n\"It's going to be alright, Bill,\" I said. \"Drew Henson is working on something. I'll go with you to the condo. He'll meet us there. Why don't you get a cup of coffee and collect yourself.\"\n\n\"Yeah, thanks,\" he said, heading toward the Keurig I kept in the office.\n\n\"That poor man,\" Ginger said in my mind. \"He doesn't deserve any of this.\"\n\n\"No, he doesn't,\" I responded. I felt two other presences in my mind -- the children. I wondered what they would think of all this if they understood what Bill was going through. After filling a mug with coffee, Bill came back and sat down.\n\n\"Feel better?\" I asked.\n\n\"A bit,\" he said.\n\n\"So, did Gloria ever give you any reason for what she did?\" I asked.\n\n\"Claimed she wanted 'excitement' in her life. Said she didn't want to spend the rest of her life married to a 'salesman.' Worse yet, she said she had been screwing Ross for a couple months already and decided she didn't want to hide it from me any more,\" he said.\n\n\"So basically, she got what she wanted,\" I said.\n\n\"No, she didn't,\" he told me.\n\n\"What do you mean?\" I asked.\n\n\"She wanted to control me. She still does. That's why she keeps harassing me the way she does,\" he said. I looked and saw the app had finished processing Bill's brain feed.\n\n\"It's done,\" I said. \"Why don't I show you how to use this thing?\"\n\n\"Sure,\" he said. I spent the next couple hours showing him the features of the application. He took right to it and I could tell he enjoyed working with the application.\n\n\"How would you like to go through Gloria's and Ross' brain feeds?\" I asked.\n\n\"That would be fan-fucking-tastic,\" he said. \"But how are we going to get them?\"\n\n\"Leave that to me,\" I said. \"I'm going with you back to the condo. It'll be a piece of cake.\" Just then, Ginger let me know that lunch was ready. I didn't realize it was that late in the day. Guess time does fly when you're having fun, I thought.\n\n\"You ready for some lunch?\" I asked Bill.\n\n\"Is it that time already?\" he asked.\n\n\"Yep. Ginger made up some olive and cream cheese sandwiches,\" I said.\n\n\"Olive and cream cheese?\" he asked.\n\n\"Yeah, you ought to try one. I can make myself sick eating those things,\" I said.\n\n\"Well, okay,\" he said. I grabbed the folder with Bill's employment stuff for Ginger to send to Nathan. We went to the kitchen where Ginger had the sandwiches already on plates for us. She also piled some chips and dip on the plates as well.\n\n\"The kids have already had their lunches,\" she told me. \"So you two eat up and I'm going to spend some tummy time with them.\"\n\n\"Okay, sounds good,\" I said. \"After we eat, we're going to the condo. Gloria and her boyfriend are going to meet us there. Would you mind making sure Nathan gets Bill's paperwork?\" Nathan was Jack Peabody's nephew and the man who took care of the company's accounts.\n\n\"Sure, no problem,\" she said. We ate our sandwiches and gathered our things to go. On the way out the door, I stopped and gave Ginger a kiss. Then I smiled down at the children.\n\n\"Daddy's getting ready to go burn a bitch,\" I said with a smile. \"Would you like to help Daddy burn a bitch?\" Their eyes briefly flashed and they smiled up at me. \"You make Daddy so proud,\" I said as I gave them each a kiss.\n\n\"You're so bad,\" Ginger said in my mind.\n\n\"You know it, baby,\" I responded with a wink.\n\n\"You know, Cam, sometimes you really scare me,\" Bill said after we got in the car.\n\n\"You haven't seen anything yet,\" I told him as we sped to the condo. \"You're not getting cold feet on me, are you?\"\n\n\"Oh hell no,\" he said with a smile. We got to the condo at 1:15 and saw Drew had already made it. He held a folder as he waited at the door for us.\n\n\"I was wondering when you two would get here,\" he said.\n\n\"Sorry, had to eat lunch,\" I said. I introduced Drew and Bill and waited for Bill to open the door. When we got inside, Drew turned to Bill.\n\n\"You got a buck or two on you?\" he asked. Bill pulled out his wallet and looked.\n\n\"I have a five,\" he said.\n\n\"That'll work,\" Drew said, his hand out. Bill pulled out a five dollar bill and handed it over.\n\n\"You're now officially my client,\" Drew said. \"Let me do the talking, okay?\"\n\n\"You're the boss,\" Bill said. A couple minutes later, we heard a knock at the door. Bill opened the door and we all saw Gloria and Ross standing there. They seemed somewhat surprised to see me and Drew in the condo. The 3-D anaglyph effect was strong with these two and I had some difficulty focusing on them as they stood there.\n\n\"Aren't you going to invite us in?\" Gloria asked. Bill looked at Drew, who nodded his head.\n\n\"Yeah, I guess so,\" he told Gloria. They stepped inside, not sure of what to make of this development.\n\n\"Cam, it's been a long time,\" Gloria said nervously as she held her hand out. I took it and felt the tell-tale shock. She flinched for a moment.\n\n\"Sorry, must be static,\" I said as her brain feed downloaded into my mind.\n\n\"This is H. Ross Simpson,\" she said, pointing to the tall, muscular man with her. \"Ross, this is Cameron Drake.\" I held out my hand, which he accepted. He also flinched as he felt the shock.\n\n\"Good to meet you, Mr. Drake,\" he said with a smirk. \"What the fuck is up with his eyes,\" I heard in his mind. After I released his hand, he turned to Drew. \"Drew. What an unexpected surprise. Good to see you again.\"\n\n\"And you, Ross,\" Drew said as they shook hands.\n\n\"Bill, what are these men doing here?\" Gloria asked. \"I thought we were going to discuss this in private.\"\n\n\"You can address your questions to me, Ms. Collins,\" Drew said. \"I represent Mr. Collins now.\"\n\n\"Oh?\" Ross asked.\n\n\"Yes,\" Drew said. \"He tells me there's been some confusion regarding his most recent support payment. I took the liberty of checking and I see that Ms. Collins has already deposited the check -- for the full amount -- that my client sent.\"\n\n\"Oh... well, maybe I got it confused with something else,\" Gloria said.\n\n\"I doubt that, Ms. Collins,\" Drew said. \"From what my client tells me, I suspect this was just another attempt on your part to harass my client, something the two of you have been doing quite a lot lately. Which brings me to the reason I'm here.\" He opened the folder and pulled out two sheets of paper. He handed one to Gloria and another to Ross.\n\n\"What's this?\" Gloria asked.\n\n\"I'm glad you asked, Ms. Collins,\" Drew said. \"That is an order of protection and you both have been officially served. In short, that order states that the two of you, and anyone working on your behalf, are ordered to remain at least 500 feet from my client, his residence and his place of employment, which currently happens to be Mr. Drake's residence. It also prohibits any contact whatsoever, be it by phone, email or text message.\"\n\n\"Well, I'll be sure to take this with me the next time I go to the men's room,\" Ross said with a smirk.\n\n\"Do with it as you see fit, Ross. In fact, you can shove it all the way up your ass if you want, but know this. If either of you violate this order, my client will have you arrested,\" Drew said. Ross looked like he was about to explode.\n\n\"Do you people have any idea what you're messing with?\" he asked.\n\n\"Do you?\" I asked him, focusing on the area around his heart muscle for just a few seconds. His face turned white as he felt a sharp pain in his chest. I released the pressure on his heart and the color returned to his face.\n\n\"What is this guy to you?\" Ross asked after he caught his breath. \"Why do you care what happens to him?\"\n\n\"Because, asshole, he's my friend. And my employee,\" I told him, my eyes briefly flashing red. He and Gloria stepped back, shocked and a bit afraid. I could smell the fear emanating from him, which, oddly enough, smelled an awful lot like freshly released feces. Maybe he actually crapped his pants, I thought.\n\n\"By the way, Ross,\" Drew added. \"I've taken a preliminary look at the divorce order and I intend to fully examine the entire file.\"\n\n\"Everything is in order,\" Ross said.\n\n\"Is it? Are you certain of that? We'll see,\" Drew said. \"I do know that Ms. Collins hasn't exactly been following the child visitation schedule the court ordered and established with CPS. That looks to me like cause for a contempt citation. Are you advising your client to be in contempt of court?\" Ross looked even more nervous now.\n\n\"The kids have been tied up with extracurricular activities and haven't been able to make it to the scheduled visits,\" Gloria said.\n\n\"How convenient,\" Drew said. \"Perhaps you can explain it to the judge.\"\n\n\"Now see here, Drew,\" Ross began before I interrupted him.\n\n\"SHUT UP! Just shut up,\" I declared. \"Look. The two of you need to get the fuck outta my house and stay away from Bill. And don't ever come back. Understand?\" They looked at each other for a moment, then nodded their heads.\n\n\"All right,\" Ross said. \"We'll back off.\" But his mind wasn't finished. \"But we'll be back -- soon,\" I heard in his thoughts. \"C'mon, Gloria, let's go.\" They turned and left the condo. Bill slammed the door behind them.\n\n\"That went well,\" Bill said. Drew and I chuckled.\n\n\"I get the feeling we haven't seen the last of those two,\" I said.\n\n\"Listen, I have to get back to court, but I wanna take a couple days and go through your file, Bill,\" Drew said. \"Then I'd like for the two of us to sit down and go over everything. That is, if your boss can spare you for a few hours,\" he added, looking at me.\n\n\"Of course,\" I said.\n\n\"I don't know that I can afford to pay you right now,\" Bill said.\n\n\"Don't worry about it, Bill, I'll take care of it,\" I said.\n\n\"Are you sure?\" my old friend asked.\n\n\"Hey, what are friends for?\" I responded.\n\n\"All right, well, I'll be in touch. Call me if anything happens,\" Drew said, shaking our hands. Bill and I sat down on the couch after he left. Bill started to say something, but I held up my hand as I was connecting to Gloria's mind to see what the two of them were doing. At that moment, they were in Ross' car, talking about what just happened.\n\n\"You said this would be a piece of cake,\" Gloria said angrily.\n\n\"I wasn't expecting this,\" he told her. \"What do you know about this Cameron Drake? The name is vaguely familiar but I can't quite place it.\"\n\n\"He's an old friend of Bill's,\" she said. \"They've known each other forever.\" Ross punched some buttons on his dash and I could hear the sound of a phone ringing. Then a man's voice spoke through the speaker in the car.\n\n\"Jenkins,\" the man said.\n\n\"Al, this is Ross. I got a job for you.\"\n\n\"What's up?\" the man at the other end said.\n\n\"I need you to do a deep dive on someone. A Cameron Drake. And I need everything you can get me like, yesterday,\" Ross said.\n\n\"Want me to tail him?\" Jenkins asked.\n\n\"Not yet,\" Ross said. \"Just do a check. I wanna know everything there is to know about him.\"\n\n\"Alright,\" Jenkins said. \"I'll be in touch.\"\n\n\"Make it fast,\" Ross said.\n\n\"On it,\" Jenkins said before ending the call. Ross turned to Gloria.\n\n\"What do we do now?\" she asked.\n\n\"We wait,\" Ross said. I disconnected from her mind and looked at Bill.\n\n\"What's going on?\" he asked. \"You spaced out on me there for a couple minutes.\"\n\n\"I connected to Gloria's mind to see what the two of them were up to,\" I said.\n\n\"And?\"\n\n\"Seems Ross has taken an interest in me, personally,\" I said. \"Come on, let's get back to the office. I'll get you started on these brain feeds.\" We went back to the house and made our way to the office, where I downloaded the two feeds. After they had processed, I set Bill up at his workstation.\n\n\"So, where do I start?\" he asked.\n\n\"There's no need and certainly no time to go through everything,\" I said. \"The application has a search feature that works a lot like Google. You can enter search terms just like you would there, specify a date range and see what you get.\"\n\n\"What kind of terms do you think I should use?\" he asked.\n\n\"Oh, I don't know. Maybe something they might say to each other in a conversation,\" I said.\n\n\"You mean, like, 'kill Bill,' or something?\" he asked.\n\n\"Why not?\" I responded. \"Give it a shot. See what you get.\" He shrugged his shoulders and typed \"+kill AND +Bill\" in the search bar, selected the previous eighteen months for the date field and hit enter. We watched the application and were somewhat surprised when it returned five results.\n\nThe first four showed Gloria screaming in anger about something Bill had done to thwart her in the divorce. What the search tool had picked up on was her screaming that she was going to \"kill Bill\" for what he had done. It wasn't anything serious -- just the type of venting one might expect from a former spouse.\n\nBut the fifth entry was far more serious. This incident happened about three weeks before Bill was fired from Apex. Gloria and Ross had just finished screwing in what used to be Bill's marital bed. As Gloria lay in Ross' arms, she looked over at him.\n\n\"What are you thinking?\" he asked her.\n\n\"I was wondering what it would take to get rid of Bill... forever,\" she said quietly. He looked at her, curious.\n\n\"What do you mean?\" he asked.\n\n\"I mean, like, what would it take for him to completely disappear off the face of the Earth,\" she said.\n\n\"You mean, like, kill him? Kill Bill?\" he asked.\n\n\"Yeah, something like that. What would it take?\"\n\n\"Why would you want to do that? I thought you intended to make him miserable and broke for the rest of his life,\" he said.\n\n\"Yeah, I do,\" she said. \"But I was thinking that maybe... if something happened to him, that I could get my hands on his insurance and his estate.\"\n\n\"You know he's changed the beneficiary of his policy,\" Ross said. \"Everything now goes to the kids.\"\n\n\"Yeah, but as their mother, I would have control of it, wouldn't I?\" she asked.\n\n\"Not unless he had it all put into a trust for them,\" Ross said. He looked at her, concerned. \"Are you serious about wanting him killed?\"\n\n\"I've been thinking about it a lot lately,\" she said. \"It's his own fault, really. If he had just let me do what I wanted, everyone would be happy. Well, except maybe for Bill. He'd be my little cuckold, forced to wear a cock cage for the rest of his life and forced to be my slave. But at least we'd still be married. I'd have someone to take care of the kids for me and you'd still have exclusive rights to my body. But he screwed all that up. So tell me, what would it take?\"\n\n\"There's lots of ways,\" Ross said. \"Someone could sabotage his car. He could run into a mugger who wanted more than just his money. Why are you talking like this? Why not just let it go? You've got everything now. The house, the kids, a huge chunk of his salary.\"\n\n\"But I don't have everything I want. He's not under my control. I still wanna know how he managed to get into that condo he's in,\" she said. \"He had to get the money for that from somewhere. Those condos are fairly expensive. I know he couldn't afford to pay for that himself.\"\n\n\"I thought you said his friend is letting him stay there,\" Ross said.\n\n\"That's what he said, but I don't believe him. There's something fishy going on there and I want to get to the bottom of it,\" she said.\n\n\"Okay, but no more talk about murder, all right? Look, Gloria, you know I love you and I'd do anything for you. Heaven knows I've put my entire career on the line with some of the motions you asked me to file against him. You know as well as I do that he never once abused you or the kids the way you claimed. If his attorney at the time wasn't so damn incompetent, I'd probably be facing all kinds of ethics charges. We'll look deeper into his finances, but seriously, I think for your sake and the sake of the kids, you need to let this go,\" he said.\n\n\"I guess you're right,\" she said. \"But I still won't be happy until I can flush his ashes down the toilet.\" I stopped the video, marked it and gave Bill a USB drive.\n\n\"Save that to this thumb drive,\" I said. Bill looked at me, shocked, then took the drive and saved the video.\n\n\"She wants me murdered,\" he said quietly. \"I don't get it. Why? What did I ever do to her to deserve this?\"\n\n\"Nothing,\" I said. \"In my opinion, she's got a screw loose and needs professional help.\"\n\n\"Can we take this to the police?\" he asked.\n\n\"And tell them what? That we hacked into her memories? They'd put us both in the looney bin. No, this can't be used in court. But maybe Drew can use it as leverage against the two of them,\" I said. \"Listen, Ginger needs my help with dinner. You wanna come down and get a bite to eat?\"\n\n\"No, I'm not hungry, but thanks anyway. If you don't mind, I'd like to keep going through this stuff for a while,\" he said.\n\n\"Alright. Stay as long as you need to, just make sure the door is locked when you leave, okay?\"\n\n\"Thanks, I will,\" he said. I went downstairs and helped Ginger set the table for dinner.\n\n\"Is Bill going to join us?\" she asked.\n\n\"No, he wants to stay and go through Gloria's brain feed, see what he can find,\" I said. We ate dinner, then settled into the front room to relax and unwind. Ginger was shocked when I told her what we found so far.\n\n\"Do you think maybe you should get Max and Adrestia involved?\" she asked.\n\n\"No, I think it's time I learned to work without a net,\" I said. \"Besides, Bill is my friend, and I want to be the one to help him. If it gets too bad, though, I'll reach out to them.\"\n\n\"It's a shame you can't go to the police with this,\" she said.\n\n\"Yeah, I know,\" I said. We talked for a while longer and played with the kids. It was nice spending time with them. Finally, it was time to get them ready for bed, so we bathed them and dressed them in their pajamas. After we put them to bed, we headed into the master bedroom.\n\n...\n\nThe next morning, I was just a bit surprised to see Bill's car in the driveway. Had he stayed all night, I wondered. After wolfing down a hard-boiled egg, I went to the office and saw him slumped over his workstation, asleep. I also saw his notepad, filled with video references.",
        "I tapped him on the shoulder to wake him up. He jerked upright and rubbed the sleep out of his eyes, then looked up at me.\n\n\"Were you here all night?\" I asked. He nodded his head and ran a hand through his hair.\n\n\"Yeah, sorry,\" he said. \"I just got started and couldn't stop.\"\n\n\"Trying to impress the boss are you?\" I asked with a smile. He laughed at that.\n\n\"Well, I did learn an awful lot,\" he said. \"Can I get a cup of coffee or something?\"\n\n\"Yeah, sure, help yourself,\" I said. He went to the Keurig and made himself a cup of coffee. \"Want some breakfast?\"\n\n\"No, I'm fine, but thanks anyway,\" he said. \"I got video of the two of them planning to frame me for all kinds of stuff -- they even talked about planting child porn on my computer, then calling the cops.\"\n\n\"Damn,\" I said. \"You made copies of all that, I hope.\"\n\n\"I sure did,\" he said. \"I'm taking it with me when I see Drew tomorrow. By the way, I have an appointment to see him in the morning.\"\n\n\"Good,\" I said. \"Take whatever time you need. Get any sleep last night at all?\"\n\n\"Not much. Maybe a couple hours,\" he said.\n\n\"Well, why don't you go on home and take the day off,\" I said. \"It looks like you've gotten quite a bit done last night anyway.\"\n\n\"You sure?\" he asked.\n\n\"Positive,\" I said. \"I'm the boss, remember?\"\n\n\"Yeah, I guess so,\" he said with a laugh. \"Thanks, boss. I feel like I'm starting to get a handle on things now. At least I know what I'm up against.\" He gathered his things and stood up. \"Thanks again, Cam. For everything.\"\n\n\"Think nothing of it,\" I said. \"Call if you need anything, okay?\"\n\n\"I will,\" he said. \"Right now, I feel like I could sleep for a week.\" I laughed and slapped him on the shoulder.\n\n\"Go on, get outta here. Get some sleep,\" I said with a smile. After he left, I pulled out the tablet Max had given me. I fired it up, then set it to hone in on Ross Simpson. I could have connected to his mind, but I wanted a record of his thoughts as well as his actions. When I focused on him, he was sitting at a table with Gloria. His phone had just buzzed.\n\n\"Hello,\" he said, answering the call. He looked at Gloria and put the phone on speaker. \"I've got you on speaker. Gloria is here with me.\"\n\n\"Okay,\" the man at the other end said. I recognized the voice -- it was Jenkins, the man Ross spoke to the previous day.\n\n\"What do you have for me?\" Ross asked.\n\n\"I did a pretty deep dive on Drake,\" Jenkins said. \"He's married, two young children. Used to work for Apex.\"\n\n\"Apex? Isn't that where Bill Collins worked?\" Ross asked.\n\n\"Yes, it is,\" Jenkins said. \"Anyway, Drake now owns his own company -- Drake Investigative Services.\"\n\n\"So he's a PI?\" Ross asked.\n\n\"Well, yes and no,\" Jenkins said.\n\n\"What the hell is that supposed to mean?\" Ross asked. \"Either he is or he isn't.\"\n\n\"He doesn't have his PI license yet, but he's working on it,\" Jenkins said. \"You don't need to have a license to own a PI firm in this state. But he does have a permit to operate as an apprentice.\"\n\n\"An apprentice? So, who is he working with?\" Ross asked.\n\n\"A fellow named Max Burnage,\" Jenkins said.\n\n\"Burnage. Never heard of him,\" Ross said.\n\n\"I haven't dealt with him either, but from what I've heard, he's one scary son-of-a-bitch. Something else. Drake's name came up in connection with a missing person's case, a Chad Wheeler. His wife used to work for Wheeler before she ended up in a coma,\" Jenkins said. \"Cops still haven't been able to find him.\"\n\n\"Wait a minute,\" Ross said. \"Now I know where I've heard that name before. I followed that case. Didn't Drake get a huge settlement out of all that?\"\n\n\"Yeah, he's currently worth just under a billion dollars,\" Jenkins told him. \"There's one other thing.\"\n\n\"What?\"\n\n\"I spoke to a retired PI on the phone last night. A fella named Tom Hammer. Went by the moniker of 'Sledge' Hammer,\" Jenkins said. \"He's in a long-term care facility in southern California writing a book or something. Anyway, when I asked him about Drake, I thought he was gonna go into vapor lock. Said the best thing I could do was stay as far away from Drake as humanly possible.\"\n\nI could tell from the thought bubble at the bottom of the video that Ross recalled the way his chest began to hurt when we were at the condo yesterday.\n\n\"Interesting,\" he said as he mulled that over in his mind.\n\n\"I thought so, too. So, you want me to keep tabs on this guy?\" Jenkins asked.\n\n\"Can you do it from more than 500 feet away?\" Ross asked.\n\n\"It won't be easy, but I think I can manage that,\" Jenkins said.\n\n\"Alright, do it,\" Ross said. \"Don't approach him, though.\"\n\n\"Got it,\" Jenkins said. \"I'll send you my full report.\"\n\n\"I look forward to seeing it,\" Ross said. \"Good work. Thanks.\"\n\n\"No problem,\" Jenkins said before ending the call. Ross looked at Gloria before speaking.\n\n\"It looks like we have bigger problems than we originally thought,\" he said. \"I'm going to have to rethink some things.\" A single sentence scrolled through the thought monitor: \"Someone is going to have to die after all.\" I stopped the video, saving it to the tablet.\n\nI looked at my watch, and wondered how long before Jenkins showed up in the neighborhood. I had no idea where he was calling from, so I had no point of reference. I also had no idea what this guy looked like or what he drove. And for all I knew, he was already on his way.\n\nThere were other concerns. Would he try to pass himself off as something to get into the house? Or would he be content to sit on the side of the road? There wasn't a lot of traffic out here, and a car sitting on the side of the road watching one particular driveway might get the attention of one or two others who live out here.\n\nI considered my options for a few minutes, then went back into the main part of the house. Ginger and the kids looked at me when I walked in. Their faces all showed concern. I wondered if the kids had any idea what was going on.\n\n\"I'm going for a little walk down the road,\" I said.\n\n\"Be careful, Cam,\" Ginger said. \"You're not bulletproof, you know.\"\n\n\"I know,\" I said quietly so as not to alarm anyone. I gave all three of them a kiss and smiled, hoping to alleviate their fears. Then I walked out the front door and headed for the main road. When I got there, I looked both ways.\n\nOur place sits on the north side of the road, which runs east to west. If Jenkins was coming from town, he would probably come from the east. I turned left and walked down the road for a bit, listening for any traffic. There wasn't much happening this morning, as everyone in the neighborhood who commutes to town had already done so.\n\nI thought I heard a vehicle coming down the road, so I jumped behind the foliage along the road and knelt down, watching to see if anyone would drive by. Sure enough, a black SUV slowly made its way down the road from the east. The driver pulled to the side of the road and stopped, just a few feet from my property line.\n\nI made a note of the license plate and committed it to memory. As I watched, the man inside set up a camera and aimed it at my house, then pulled out a pair of binoculars and surveyed the area. I got as low as I could and crept silently to the driver's side window, which was open. His attention was riveted on my house, which made it a bit easier to creep up on him. I finally made it to his door and stood there for a moment before saying anything.\n\n\"You must be Jenkins,\" I said, causing him to jump out of his skin. He looked at me, shocked and I saw him start for the pistol in his shoulder holster. I flashed my eyes, which caused him to pause. \"Don't even think of it,\" I snarled.\n\n\"You must be Drake,\" he said.\n\n\"I am,\" I told him. \"If you're here on Simpson's order, you should know you're violating a restraining order. My property line is right over there,\" I added, pointing to a spot about 20 feet away. \"You know, you should've listened to Hammer when he told you to stay as far away from me as possible. How do you think he ended up in that wheelchair?\" He looked at me, shocked.\n\n\"How do you...\" I interrupted him with another flash of my eyes.\n\n\"I'd tell you but then I'd have to melt your brain,\" I said with a grim smile. His face turned white and I applied just the right amount of pressure to the inside of his cranium. Suddenly, his eyes grew wide and bloodshot and he put his hands to the side of his head.\n\n\"Make... it... stop,\" he said.\n\n\"You'll leave us alone?\" I asked.\n\n\"Yes, I promise. You'll never see or hear from me again,\" he begged. I released the hold on his brain and grabbed his left hand long enough to download his brain feed.\n\n\"Take the gun out, slowly,\" I said. He obeyed, wondering what I was going to make him do. I could sense the fear in his mind. \"Remove the magazine,\" I told him. Again, he obeyed. \"Now, disassemble the weapon. Toss the parts in the back seat. Now!\" He followed my orders to the letter, and soon, the pieces of his pistol were scattered in his back seat. I planted a hypnotic suggestion in his brain, then had a brainstorm.\n\n\"You know, it's a lovely day, don't you think?\" I asked.\n\n\"Uh, yeah,\" he said nervously.\n\n\"In fact, I think it would be a great day for a naked drive to the river, don't you?\"\n\n\"I... suppose so,\" he said.\n\n\"Good. Then strip.\"\n\n\"What?\" he asked.\n\n\"I said, strip. Now,\" I commanded. He looked at me funny, then began removing his clothes, slowly. \"Faster!\" His hands flew as he removed his clothing. \"Everything!\" He continued to obey, his hands shaking. When he was finished, he looked at me, scared.\n\n\"Now, why don't you just take a nice leisurely drive down to the river?\" I suggested. He looked at me, scared, then nodded his head. \"Well, what are you sitting here for? GO!\" I stepped back as he turned the SUV around and headed back into town.\n\n\"You are so naughty,\" Ginger said in my mind as I watched Jenkins drive off. I felt the children in my mind as well and somehow knew they were smiling.\n\n\"You know it, baby,\" I told them. I walked back to the house and was greeted with smiles, laughter and kisses. A couple hours later, I saw a newsflash on television. It seems police had fished a black SUV out of the river after a naked man drove into the water.\n\nWitnesses said the man appeared to be masturbating as he drove. The man was arrested for reckless operation of a motor vehicle, public indecency and lewd and lascivious behavior, the news report said. According to police, parts of a disassembled firearm were found in the vehicle. I went to the office, connected to Ross' mind and saw him talking to Jenkins at the jail.\n\n\"What the fuck is wrong with you?\" Ross screamed. \"I sent you to check out Drake and... My God, what is that awful smell?\" He looked and saw that Jenkins had soiled himself. I was pleased that my hypnotic suggestion worked so well. \"Did you just shit your pants? That's disgusting!\" Ross exclaimed. Jenkins looked down, embarrassed. \"Did you manage to learn anything at all about Drake?\" Ross asked, holding one hand over his nose.\n\nJust then, Jenkins began sobbing. I looked and saw that he had involuntarily crapped himself again and smiled. Ross shook his head and turned to the guard.\n\n\"Do something, willya?\" he asked. \"He's already shit himself twice. Clean him up and get a doctor to check him out.\" The guard nodded his head and spoke into a telephone on the wall. Jenkins looked up at Ross, tears streaming down his face.\n\n\"Hammer was right,\" he said. \"Stay away from... him,\" he added. \"You have no idea.\"\n\n\"What are you talking about?\" Ross asked.\n\n\"He... He can... make you do things. Against your will. And his eyes. My God, those eyes... Stay as far away from him as you can. Don't even mention his name,\" Jenkins sobbed. Ross stepped back as a medic and two orderlies came into the room, wearing masks and gloves, pushing a wheelchair. The orderlies helped Jenkins into the chair and wheeled him out of the room.\n\n\"What happened?\" the medic asked. Ross shook his head.\n\n\"I don't know,\" Ross said. \"He crapped himself twice, then started blubbering about some guy with weird eyes making him do things against his will.\"\n\n\"Any idea what caused him to defecate like that?\" the medic asked.\n\n\"No, it seemed to happen right when I mentioned someone's name. But that's not possible, is it?\" The medic shrugged his shoulders.\n\n\"I've seen some pretty strange things in here,\" he said. \"Maybe it was a reaction to something he ate earlier. Do you know if he takes any drugs?\"\n\n\"No, I've never known him to take anything,\" Ross said.\n\n\"Interesting. We'll check him out. Maybe call someone in from the behavioral health clinic,\" the medic said.\n\n\"Yeah, do that,\" Ross said before walking away. When he got to his car, he called Gloria.\n\n\"Hey, lover, what's up?\" she sked.\n\n\"You know I sent Jenkins out to tail Drake, right?\"\n\n\"Yeah.\"\n\n\"Well, he went spastic on me or something,\" Ross said. \"Cops fished his SUV out of the river. Said he was naked when he drove into the water. Strange, he crapped his pants whenever I mentioned Drake by name, claimed he made him do things against his will, then went on about his eyes.\"\n\n\"You remember his eyes flashed at the condo, and you said you felt a sharp pain in your chest,\" she said.\n\n\"I remember. I thought it was just a reflection from something. You think Drake did that on purpose?\"\n\n\"I don't know, but maybe you should back off of him,\" she said.\n\n\"Something about this just doesn't add up,\" Ross said.\n\n\"What are you going to do?\" she asked.\n\n\"I don't know. Let me think about it some. We'll talk about it tonight,\" he said.\n\n\"You know where to find me,\" she teased. They ended the call and I made a note to check them out later with the tablet Max had given me. Just then, Ginger interrupted my thoughts to let me know Smith and Jones had arrived. Grabbing the tablet, I made my way to the main part of the house and saw the two aliens examining the children.\n\n\"How are they?\" I asked when they finished.\n\n\"They appear to be very well-adjusted and in excellent health,\" Smith said.\n\n\"Good,\" I said. \"While you're here, I have a question. We've noticed their eyes flashing, almost as if using a code. Is it possible they're communicating with each other?\" The two of them conferred with each other, then re-examined the kids, running a device over their heads. They looked at the results, then back at us.\n\n\"To answer your question, yes,\" Jones said. \"They seem to have developed their own communication protocol.\"\n\n\"Any idea what they're saying?\" Ginger asked.\n\n\"No,\" Smith said. \"But we can tell you without a shadow of a doubt, that they love and admire the two of you more than you can possible imagine.\"\n\n\"They told you this?\" I asked.\n\n\"It is the central basis of all their communication,\" Smith said with a smile. I looked at the children, and saw them both smiling up at me. I couldn't help but smile back.\n\n\"Well, we love them more than they'll ever know,\" I said. \"They're the best things to have ever happened to us.\"\n\n\"That is good to know. They sense that from both of you. They also seem to believe you have something of a singular wit, Cameron. Although I'm not entirely sure why. Might I suggest the two of you begin reading to them,\" Jones said. \"And not from those silly children's books the two of you have wasted so much money on. Their ability to grasp certain precepts and ideas is far more advanced than their unenhanced human counterparts.\"\n\n\"I see,\" I said, looking at Ginger. \"What about their training? When can they start that?\"\n\n\"The sooner the better,\" Smith said. \"Perhaps you can start including them tonight.\" I looked at the children before responding.\n\n\"Would you like that?\" I asked. They smiled and their eyes briefly flashed. That answers that, I thought. We went through our paces with the children observing. Smith and Jones even worked with them for a short time, being careful to not tax them too much.\n\nAfter they left, we ate dinner, then bathed the kids and got them ready for bed. The kids seemed to like the exercises Smith and Jones put them through, which made me feel better. They were quite tired, however, and went to sleep almost as soon as we placed them in their cribs. We sat down on the couch, exhausted.\n\n\"Well, what do you think?\" I asked Ginger.\n\n\"You mean, about the kids communicating? Frankly, I'm not surprised,\" she said.\n\n\"Neither am I,\" I said.\n\n\"I wish we knew what they were talking about,\" she said.\n\n\"Well, you heard Smith and Jones,\" I told her. \"Maybe we should let them have this, at least for now. I think when they're comfortable enough, they'll let us in on their little secrets.\"\n\n\"You really think so?\" she asked.\n\n\"I do.\"\n\n\"What about all those kid's books we bought? You think we should get rid of them?\" she asked.\n\n\"I don't know,\" I said. \"I was kinda looking forward to reading the adventures of the purple dinosaur.\" She giggled at that.\n\n\"Then maybe I'll read it to you one of these nights,\" she playfully said.\n\n\"You'd do that for me?\" I asked with a smile. She laughed back. I grabbed the tablet and fired it up. \"Wonder what's happening in the old Collins house?\" Ginger watched with me as I let the video and thought monitors sync. Then I set the device to record.\n\nRoss and Gloria were laying in bed, naked. Her head was on his shoulder and one of his arms was draped over her.\n\n\"Any idea what we're going to do now?\" she asked.\n\n\"I've been thinking about that all day today,\" Ross said. \"You remember talking about taking Bill out?\" She looked at him, a bit surprised.\n\n\"Yeah, but you shot that down. Plus, there's that order of protection,\" she said.\n\n\"I've been thinking about that as well,\" he said. \"But that's not gonna be a problem. Did I ever tell you what I did in the service?\"\n\n\"No, you didn't,\" she said.\n\n\"I was a sniper,\" he said. \"I can take out a target over 1,000 yards away.\"\n\n\"Are you serious?\" she asked.\n\n\"Yes,\" he said. \"It's been a while since I've shouldered a rifle, but there's some things you just never forget. At that range, he'll never even hear the shot. One second, he's alive, the next, his head is gone. Just like that.\" She looked at him, shocked. \"Then I'll take out Drake. He'll never know what hit him.\" I looked at Ginger and saw her eyes widen.\n\n\"Is that wise?\" she asked. \"I mean, it'll take the cops all of about 15 minutes to figure out what you've done.\" He laughed at that.\n\n\"I admit, I need to work out the logistics. Right now, all I have is a germ of an idea,\" he said.\n\n\"What made you change your mind? I don't get it. You said yourself I'll never see anything from Bill's insurance,\" Gloria said.\n\n\"Drew Henson is no slouch,\" he said. \"He's certainly not like that bumbling, half-drunk idiot your ex had representing him before. In fact, he's one of the few family law attorneys who's ever beaten me in court. If he's going through the file, then he'll probably find enough to land me in hot water with the state bar. I could lose my license. And this Drake... There's something about him that just sets me off. You didn't see Jenkins today.\"\n\n\"But you could end up in prison if you kill Bill and Drake,\" she said. \"Then what will I do?\"\n\n\"I may end up in prison anyway,\" he said. \"Don't worry. You'll be okay. I've made some arrangements.\"\n\n\"What kind of arrangements?\" she asked.\n\n\"If anything happens to me, you'll be taken care of for the rest of your life,\" he said, kissing her on the top of her head. I saw what scrolled through the thought monitor at the bottom of the screen: \"Either in a Mexican whorehouse or at the bottom of an unmarked grave...\"\n\n\"Well, thank you for that,\" she said, returning his kiss. \"You're so good to me.\" He smiled at her as the words, \"stupid cunt\" flashed across the thought monitor.\n\n\"Listen, why don't we take off for parts south, maybe spend a weekend in Cancun or something, help us get our minds off all this crap,\" he said. \"Think your parents could take the kids for a few days?\"",
        "\"That sounds wonderful,\" she said. \"I'm sure they will. I'll ask them tomorrow.\"\n\n\"Good. You do that. I'll make the travel arrangements,\" he said. \"Then it's adios forever,\" flashed in the thought monitor.\n\nI ended the surveillance, saved the video and looked at Ginger.\n\n\"I'd say this complicates things just a bit,\" I said.\n\n\"Yes, it does. Maybe you need to get Max and Adrestia involved before he tries to kill you. Or us,\" she said.\n\n\"Not quite yet,\" I said. \"Remember, knowledge is power. We have the advantage in that we know what Ross is planning. And he has no idea that we already know. That can work to our advantage. Plus, you heard him -- this is only the germ of an idea. It's been a while since he's used a rifle, so he's bound to be a bit rusty. Up until now, he's had other people do his dirty work for him.\"\n\n\"There's something else you're not telling me,\" she said. \"Why not call in Max and Adrestia. They can resolve this in no time.\"\n\n\"I don't doubt that,\" I said. \"But I can't go running to them on every case that gets a little hairy. No, I need to handle this myself.\"\n\n\"I understand that,\" she said. \"But the least you can do is give them a heads-up.\" I thought about her words for a bit before making my decision.\n\n\"You may have a point,\" I said. \"I'll brief Max on the case tomorrow. Bill is set to see Drew tomorrow, so I'll make sure both of them have this video. Then I intend to take Ross Simpson down. Do you think you're advanced enough in your training to watch over the kids?\"\n\n\"Absolutely,\" she said. I had seen her destroy watermelons in our back yard during target practice, but that's quite different from facing a human being. But, I realized, she's got two children she'll be protecting.\n\n\"Got that right, buster,\" she said in my mind, interrupting my thoughts. \"This is one mama bear who won't tolerate anyone endangering our children.\" I looked at her and saw the serious look on her face. She meant it.\n\n\"Damn right, I mean it,\" she said. \"So, what are you going to do now?\"\n\n\"Right now, I'm going to the office, get this video off to Bill and Drew,\" I said. \"Something Ross said gave me an idea. I'm going to do a little search in his brain feed, then I think I'm going to play a little game of divide and conquer.\"\n\n\"Alright,\" she said. \"By the way,\" she added a few moments later. \"What DID you plant in Jenkins' mind anyway?\"\n\n\"I simply suggested that he crap his pants every time he hears my name,\" I said. She busted out laughing.\n\n\"A singular wit, indeed,\" she said as she laughed. I laughed with her. \"Go on, get to work. You know where I'll be when you get done.\" I gave her a kiss and headed for the office. The first thing I did was send the video to both Bill and Drew. Then I called my old friend.\n\n\"Hey, boss, what's up?\" he asked when he answered.\n\n\"I just sent you a video I think you'll find very interesting. I also sent a copy to Drew. It looks like Ross is going to up his game a bit, so you need to be on your toes,\" I said.\n\n\"Okay, I'll take a look,\" he said.\n\n\"Just so you know, he's now talking about killing both of us,\" I said. \"And Gloria.\"\n\n\"WHAT?!\" Bill exclaimed.\n\n\"It's okay,\" I said, trying to calm him down. \"Right now, it's only talk. We know what he's planning to do, but it's not going to happen. I'm going to throw a monkey wrench into his plan tonight.\"\n\n\"Are you sure about that?\" he asked.\n\n\"Absolutely,\" I said. \"Trust me.\"\n\n\"Alright, I trust you,\" he said.\n\n\"Good. Get some sleep. I'll call you in the morning.\" With that, we ended the call and I pulled up Simpson's brain feed. I searched for the time he spent in the service. From what I could tell, he actually was a sniper at one time, and a fairly good one at that.\n\nHowever, there was an incident where he accidentally shot and killed an Afghan girl. She was maybe six years old at the time. Nothing happened to him, however, the memory of that haunted him for quite some time. That's the ticket, I thought. I also wondered why he was now so eager to dump Gloria, so I searched his brain feed further, digging deep into his thoughts.\n\nIt turned out that Gloria was pressuring him to marry her and adopt her children. Simpson, however, wasn't looking for a commitment or a ready-made family, just a quick fuck. Gloria had served that purpose well for quite some time, but he now felt that she was becoming too clingy and demanding.\n\nArmed with this knowledge, I connected to Gloria's mind first and planted the seeds of doubt, passing on to her subconscious mind Ross' evil plot to leave her in Mexico. Once that was complete, I exited her mind, then connected to Ross.\n\nI made him relive that fateful day in Afghanistan in his dreams, and kept replaying that memory in his head until he woke up. Then I projected myself through his mind, taking the form of the Afghan girl, complete with the bullet hole in her forehead. He woke with a start, turned and saw the girl -- which was really me -- and nearly fainted.\n\n\"Why did you kill me, mister?\" I said in a little girl's voice. \"I never did anything to you. Now my parents are so sad. Why? Tell me, please.\"\n\n\"I... I don't know. It was an accident. Really. I didn't mean to hurt you,\" Ross cried, shaking as he watched the apparition in front of him. The little girl looked so real to him. How is this even possible, he asked himself.\n\n\"But you did hurt me. You MURDERED me for no good reason,\" I said in the little girl's voice. Apparently, Ross hadn't picked up on the fact the girl was speaking in English and not her native language. \"And now you plan to murder two men and leave your girlfriend in a Mexican whorehouse.\"\n\n\"What?\" Ross asked. \"How do you know that?\"\n\n\"I know everything about you, H. Ross Simpson,\" I said in the girl's voice. \"I know how you tried to frame your girlfriend's husband for things he never did. How you deliberately destroyed his life and his family with lies. And soon, the authorities will know.\"\n\n\"Wait,\" Ross said. \"You're not real. You're a figment of my imagination. This is a dream.\"\n\n\"It's no dream, Mr. Simpson. It's real. But soon, it will become your personal nightmare. I am going to see to that,\" I said in the girl's voice.\n\n\"What do you want me to do?\" he asked.\n\n\"Confess,\" I said. \"Confess everything now.\"\n\n\"I can't do that,\" he said.\n\n\"Then do humanity a favor and KILL yourself! Rid the world of your evil, because that's what you are,\" the \"girl\" said.\n\n\"No! I won't,\" he said.\n\n\"Those are your choices. Confess. Or die. You choose. I'll never leave you alone until you do,\" I added. The apparition disappeared and I left Ross' mind, but before I did, I searched through his mind and found his knowledge of firearms.\n\nUsing a newly-learned technique, I erased all knowledge of guns from his mind. From this moment forward, he wouldn't know which end of a gun was which. I also planted the image of the girl in his mind so he would see her even when he was awake. The girl's image would haunt him wherever he went, encouraging him to either confess his actions or do himself in.\n\nI came to in my office, sweat pouring off my head. Connecting to a mind like that takes a lot of work. It takes even more work to project myself through someone's mind. I caught my breath and smiled. The game's afoot, I thought, recalling the old Sherlock Holmes story, \"The Adventure of the Abbey Grange.\"\n\nI sent Bill an email to let him know of my nocturnal adventure, then headed back to the main part of the house. I found Ginger in bed, sitting up with the purple dinosaur book we bought for the kids.\n\n\"You know, this really isn't such a bad book after all,\" she said with a smile. \"How did it go? You look beat.\"\n\n\"I think things are going to get interesting between Gloria and Ross,\" I said.\n\n\"Good,\" she said. \"Now, why don't you take a shower, get into your pajamas and let momma read you a story about the purple dinosaur.\"\n\n\"Oh, goody,\" I said, heading to the bathroom.\n\n...\n\nThe next morning, I fired up my tablet and checked in on Gloria and Ross. Neither of them had slept very well the night before and were irritable and short-tempered.\n\n\"You look about the way I feel,\" Gloria said as she poured their coffee.\n\n\"I didn't sleep too well last night,\" Ross said.\n\n\"Neither did I,\" she said. They wolfed down a bagel, drank their coffee and headed out the door for work. I made sure the \"girl\" in Ross' dream would haunt him wherever he went, then called Max to brief him on the situation.\n\n\"Yeah, I figured it was you when I saw the story about Jenkins,\" he said. \"You need any help on this?\"\n\n\"Not right now, boss,\" I said. \"Besides, Bill is a friend and I'd like to handle this on my own if you don't mind.\"\n\n\"Not at all,\" he said. \"In fact, Adrestia and I were thinking it was about time you starting operating without a net, so to speak.\"\n\n\"So you're cutting me loose, then?\" I asked.\n\n\"Not at all. I just feel you need the freedom to pursue some of your own caseload for a change. Just keep me in the loop and feel free to shout if you need any help. I assure you, there's plenty here to keep us both busy,\" he said.\n\n\"Thanks, Max, I appreciate that,\" I said.\n\n\"No problem. By the way, how are my godchildren doing?\" he asked.\n\n\"Growing like weeds,\" I said. He laughed at that.\n\n\"That's good to hear. I gotta head out now, so stay in touch,\" he said.\n\n\"Will do,\" I said. My next call was to Bill.\n\n\"Hey, boss,\" he said. \"Just getting ready to head over to see Drew. How'd it go last night?\"\n\n\"I think we're getting close to administering the coup de grace,\" I said. \"Let me know how it goes with Drew.\"\n\n\"I will,\" he said. We ended the call and I kept tabs on both Ross and Gloria for the day. What I had done the previous night was taking its toll on both of them. They were both on edge, short-tempered and shaky for the entire day. I especially made sure Ross saw the little girl several times throughout the day. By the end of the business day, they were quite rattled. Good, I thought. I intended to repeat my performance that night.\n\nI also checked in on Jenkins. The man was now being held in solitary at the behavioral health clinic. Concerned about his mental state and the wild claims he was making, the doctors put him on a regimen of various drugs that kept him sedated most of the day.\n\nI finally heard from Bill that afternoon. He came by the house and we went into the office. From what he told me, Drew was putting together a pretty solid case against both Ross and Gloria. Some of the criminal charges included extortion and perjury, while a civil case was being prepared for intentional infliction of emotional distress and defamation. He was also putting together a case to present to the State Bar.\n\nDrew said a possible case might be made for conspiracy to commit murder, but he doubted the district attorney would accept the video evidence we provided, given its source. Still, he said it could be used as leverage against the two of them if they decided to fight the civil case he intended to file. He also planned to file for a modification of the final divorce decree.\n\n\"So basically, Ross is fucked,\" I said.\n\n\"Pretty much,\" Bill said.\n\n\"Couldn't happen to a better asshole,\" I said. Bill agreed.\n\nThat night, I made another visit to the bed shared by Gloria and Ross. This time, I appeared to Gloria in her dreams and told her flat out that Ross intended to dump her in Mexico or leave her for dead in an unmarked grave.\n\n\"That's not true,\" she said. \"He'd never do that to me.\"\n\n\"Right,\" I said. \"This is the same man who filed false charges against your ex-husband and the same man who intends to kill the father of your children.\"\n\n\"How do you know about all that?\" she asked in her dream.\n\n\"I know everything about your boyfriend. He's about to get hit with a ton of charges. And guess what? You're getting charged as an accessory,\" I said. \"Cut your losses now, Gloria. Do the right thing for once in your life. You know Bill loves the kids and you know what you have done is wrong.\"\n\n\"If I do this, what will I get?\" she asked. I shrugged my shoulders.\n\n\"Can't say for certain. But I know you're going to lose even more if you keep going the way you are. Maybe even your life. Is that worth it?\"\n\n\"I... I guess not,\" she said. I disconnected from Gloria's mind and reconnected to Ross, again as the girl he killed overseas.\n\n\"Why are you still alive when I'm dead?\" she asked. Ross backed away and shook his head.\n\n\"Leave me alone. Go away,\" he begged.\n\n\"Never! Confess! Now! Or kill yourself. But know this. It's very hot where you're going, and they just love to play with little bitches like you,\" I had her say. \"Hahahaha! I'd love to see you spit-roasted by a few demons. That would make my day.\"\n\n\"Nooooooooo!\" Ross screamed. He shot upright in bed and looked around. The image of the girl dissipated and he looked at Gloria, who was sitting up in bed, looking at him with murder in her eyes. \"What?\" he demanded.\n\n\"You were really going to do it, weren't you?\" she asked.\n\n\"Do what? What are you babbling about, bitch?\"\n\n\"You were going to leave me in Mexico, maybe sell me off to a whorehouse or worse. Weren't you?\" When he didn't say anything, it dawned on her that the being in her dream was telling her the truth. \"Oh my God, it IS true. Get out. Get out of my house right fucking now.\"\n\n\"No,\" he said, shaking his head. \"I'm not going anywhere.\" He opened the nightstand drawer next to him and pulled out a 9 mm pistol. He looked at it, and suddenly realized he didn't know how to operate the thing. He didn't even know where the bullets went.\n\nJust then, Bill Jr., came into the room, having been woken up by his mother's screams. He saw the gun and screamed. Ross pointed the gun at him, and Gloria launched herself at her boyfriend.\n\n\"Call 911, Bill,\" she screamed as she struggled with Ross. The boy fled the room and called the police as his mother fought with Ross. A few moments into the call, the sound of two gunshots rang throughout the house. The 911 operator told the youngster to stay on the line as officers were on their way.\n\nNeighbors, hearing the gunshots, ran to the house and knocked on the door. The young boy answered the door just as a police cruiser pulled up with lights flashing. Two officers ran into the house, their guns drawn. Bill pointed the way to the master bedroom.\n\nWhen the officers went in, they saw a man with a gunshot wound in his upper chest on the floor. Next to him was a woman with a gunshot wound to her arm. Both were covered in blood. A 9 mm pistol lay on the floor next to the man. Officers checked both of them and found they were still alive.\n\nAn ambulance came and paramedics took both of them to the hospital. After talking to the boy, they let him call his father. Bill gladly came to the house to pick the children up, but called me first. When I got to the house, officers were going through the house collecting whatever evidence they could find.\n\nBill took the kids to the condo and I gleaned whatever information I could from the officers. From what they could gather, the couple fought in the bed over the gun, eventually falling on the floor.\n\nRoss managed to take the safety off and pulled the trigger, causing the first bullet to travel the length of Gloria's upper arm. Somehow, she got the weapon pointed back at Ross just as he pulled the trigger, sending a second shot into his upper chest at point-blank range.\n\nI tried to connect to their minds, but found that I couldn't. That meant they were either dead or unconscious. I hoped it meant the latter. I made my way to the hospital and probed the minds of the emergency staff to see what I could learn.\n\nH. Ross Simpson was dead on arrival, and Gloria was undergoing surgery. That explained why I couldn't connect with her mind. I called Bill to let him know. He told me he would contact her parents to let them know what had happened. There was nothing more I could do here, so I went back home.\n\n...\n\nThe next day, I went to the hospital with Bill after he dropped the kids at my house. We learned that Gloria had survived the surgery and was recovering in her hospital room. We caught up with her parents, who were shocked at what they learned. All this time, they thought Bill was the bad guy in their daughter's marriage and refused to have anything to do with him.\n\n\"I'm really so very sorry, Bill,\" Gloria's mother cried. \"I had no idea.\"\n\n\"I understand,\" he said. \"She had a lot of people fooled.\" They hugged and said their goodbyes and we went to Gloria's room. She looked a mess with all the tubes and wires going into her arms. She looked at Bill and a tear fell down her cheek.\n\n\"Ross didn't make it,\" he said, causing her to start crying harder. She calmed down long enough to look at me, then her eyes lit up with recognition.\n\n\"It was you,\" she said. \"You're the one who told me about Ross. Was it true? Was he really going to leave me in a Mexican whorehouse?\"\n\n\"I'm afraid so,\" I told her. \"Or dead.\" She looked at Bill before speaking.\n\n\"It was all his idea, setting you up with those false charges, making you defend yourself from things you never did,\" she said.\n\n\"I know,\" Bill said. \"But you signed off on the papers. And you wanted me dead so you could have my insurance money.\" She looked down, ashamed.\n\n\"I'm sorry for that,\" she said.\n\n\"And you knew he planned to kill the two of us,\" I said. She looked at me, shocked.\n\n\"How do you know that?\" she asked.\n\n\"We know everything,\" I said. \"I'm an investigator. It's my job to know.\"\n\n\"What happens now?\" she asked Bill.\n\n\"There'll be an investigation,\" he said. \"Then there'll be charges filed. Someone is going to jail over this. Since Ross is dead, that leaves you. I'm filing to have the divorce decree modified. I intend to take full custody of the children, but I'll let you see them, provided you're not in jail. I won't deny you visitation the way you denied me. The house will be sold and we'll split the proceeds. I'm asking for a 60-40 split based on what I've had to pay.\"\n\n\"I guess that's only fair after what I put you through,\" she said. \"I'm sorry, Bill, really I am.\"\n\n\"Yeah,\" Bill said. \"Well, we'd better get going. Goodbye, Gloria.\"\n\n\"Goodbye, Bill,\" she said quietly. We left and went back to my place.\n\n...\n\nEpilogue (Three months later)\n\nBill's divorce decree was modified pretty much the way he said it would be. His house sold pretty fast, and he split the proceeds 60-40 with Gloria. He also got full custody of his kids and they're all doing just fine now. It wasn't easy after all the trouble Gloria had put them through.\n\nBill brings them by when he comes to work most mornings and they help Ginger around the house. They're good kids, but were put in a horrible position by their mother.\n\nGloria was found guilty of all the charges put against her. Because of her clean record, she was given a suspended sentence. She still works as an administrative assistant for the firm Simpson used to work for and rents an apartment not far from her office.\n\nTrue to his word, Bill lets her see the children pretty much whenever she wants. As far as I know, she's not dating anyone. She tried to maneuver Bill into taking her out, but he refused, saying that ship had already sailed. Besides, he's now dating a pretty blonde he met at a club a few weeks ago.\n\nDrew filed a lawsuit against Simpson's estate and is still litigating that action. Bill tells me it could take quite some time for that to get settled.\n\nJenkins is still at the local behavioral health facility, and from what I could gather, doctors still don't know why it is he involuntarily defecates whenever he hears, \"Drake.\" He should've listened to Hammer...\n\n\"Not bad for a few days' work,\" Max said. \"I've got some cases that need to be worked if you can spare the time.\"",
        "\"Of course,\" I said.\n\nThe kids are growing like weeds and developing quite nicely. The other day, I picked Jenny up and saw the specks in her eyes twinkle. Then I heard, \"love da\" in my mind. I smiled and kissed her pretty face.\n\n\"I love you too, sweetheart,\" I told her. She smiled back and I felt surrounded by a blanket of love.\n\n\"Sweetheart,\" Ginger said when I set Jenny back into her crib. I turned to look at her.\n\n\"What's up?\" I asked.\n\n\"I really could use a big dose of genetic material right about now,\" she purred. I looked and saw the kids' eyes twinkle. They seemed to know what their mother wanted. I looked back at her and kissed her deeply.\n\n\"Well, let's go see what we can do about that,\" I said.\n\n...\n\nFade to black..."
    ],
    "authorname": "saddletramp1956",
    "tags": [
        "divorce",
        "cheating",
        "justice",
        "revenge"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/flash-05-a-friend-indeed"
}