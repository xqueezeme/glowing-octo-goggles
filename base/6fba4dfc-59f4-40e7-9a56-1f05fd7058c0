{
    "title": "Georgie and Claire Ch. 01",
    "pages": [
        "\"Georgie! You made it!\"\n\n\"Um, what choice did I have?\" I laughed as I walked into the backyard. \"You threatened my life if I didn't show!\"\n\n\"Well, I only graduate from high school once,\" Carol replied as she walked over and gave me a quick hug. \"What fun would it be without my favorite cousin here?\"\n\n\"I heard that!\" my little brother Carl cried, but he wasn't really upset.\n\nEveryone knew that Carol and I were close. At nineteen I was only a year older than her and although we lived one town over we ended up with a lot of the same friends. It had a lot to do with her dating one of my classmates. Lou was a good guy. I was disappointed when they broke up last summer. I guess it made sense in a way. He graduated with me and went to college across country.\n\n\"Hey G-Man,\" my little brother grinned. \"I hope you stopped home first and saw mom, otherwise...\"\n\n\"Of course,\" I interjected with a snort. \"Do you think I'm stupid?\"\n\nMom wasn't happy when I decided to stay at school for summer break, but I had great job near campus and I didn't want to lose it. Besides, a few of my closest friends were also staying. One, a girl named Annie, had the added benefit of being pretty good in bed. We weren't dating or anything, but we hung out and frequently ended up at one of our places when the night ended. I loved college, not that high school hadn't been fun in its way too.\n\n\"Can it get any hotter?\" Carol complained. I had to agree with her. It had to be close to ninety already despite it still being relatively early.\n\nMy cousin was dressed for the heat. She looked good. Her dirty blond hair had grown out and she clearly spent time on her tan. It went well with her soft brown eyes. She was wearing a yellow bikini that made the most of her average sized breasts. She also had a colorful sarong wrapped around her hips and ass. The former were a bit wide and the latter somewhat flat, but the combination was sexy and appealing to me for some reason.\n\nI knew I shouldn't be looking at Carol the way I was considering she was my cousin, but it was just the way I was built. I couldn't look at any woman without appreciating what she had to offer and my cousin had a nice body, a very nice body.\n\n\"At least your pool will earn its keep today,\" I offered, forcing myself to make eye contact before she realized where I was looking. Carol, being Carol would not be amused.\n\n\"Oh yeah!\" Carl crowed. \"Bikini heaven!\"\n\n\"Down little brother,\" I laughed. \"Most of the girls will be high school graduates and you're only going into your junior year.\"\n\n\"A guy can dream, can't he?\" he retorted.\n\n\"Typical man,\" Carol put in, rolling her eyes. Carl and I exchanged a grin.\n\n\"What can I do to help?\" I asked, changing the subject. The party wasn't scheduled to start for another couple of hours. I stopped by early to say hi. Mom told me that Uncle Stan had shanghaied Carl. I figured I'd offer to help since I was back in town early.\n\n\"I already have some volunteers,\" Carol said in a way that made me look at her. She nodded ever so slightly. I knew what that meant. Beth was here...damn!\n\n\"Hello 'Whore'gie.\" Speak of the devil.\n\n\"Seriously?\" I asked, shaking my head as the honey blond walked out the back door of the house carrying the metal holders for some chaffing dishes. She looked better than I remembered. Maybe it was the flowery bikini she was wearing. She had on a sarong similar to my cousin's around her small waist, but it was a solid blue. \"Don't you think you're getting a little old for name calling?\"\n\nBeth was a short, thin girl and didn't have much of a chest, but she made up for it in other areas. She was prettier than my cousin, at least in the classic sense of beauty and obviously worked hard at making the most of what she did have. My favorite aspect of her was her ass. No surprise there. I always was a bit of a butt man. Hers was small and round. It was the type that could fit in the palm of your hand. I didn't quite lick my lips when I saw it.\n\n\"Not if your case,\" she answered succinctly as she laid out where the chaffing dishes would sit. Her pale blue eyes could have been made out of ice based on the way she was looking at me.\n\n\"You're never going to forgive me, are you?\" I sighed.\n\n\"Not likely. I was in love with you and you broke my heart.\"\n\n\"Please!\" I snorted. \"We barely knew each other when it happened.\"\n\n\"It was puppy love,\" my cousin's other close friend interjected as she exited the house and joined us with the tins that would be filled with water to keep the chaffing dishes warm. Things were looking up. Claire and I usually got along well. \"After all, you were Carol's cute older cousin. Beth spent months watching you from afar.\"\n\n\"You should know,\" Carol said pointedly. \"You were right there with her.\" Claire blushed as expected. She was the shy and unassuming one in their crowd. You know the type, beautiful and clueless about it. I had no idea how someone who looked like her graduated high school without realizing the truth.\n\nClaire had long, dark hair and pale skin. Her eyes were deep blue and her lips were shaped perfectly for kissing. She wasn't really prettier than Beth, but I found her more attractive. To be fair, I always did have a thing for the sweat and innocent ones. Her hour-glass shape didn't hurt either.\n\nHer breasts were bigger than both Carol's and Beth's, but it seemed to me that she was more embarrassed by the fact than anything else. You could tell by the full length cover-up she chose to wear and the fact that her shoulders were slightly slumped as if she were trying to hide her assets. She didn't like to draw attention to her tits which was disappointing to say the least. I was certain that there was a conservative one-piece bathing suit under the cover-up. What a waste!\n\nI knew I could help Claire with her confidence issue. Hell, I'd love to do it! Of course, Carol would kill me if I tried. My cousin made me swear off her friends after the fiasco with Beth.\n\nClaire had a thin waist despite the fact that her ass was perhaps a little larger than one might expect. I didn't mind. It added to her hourglass shape and I liked meaty asses. Who was I kidding? I liked all types of asses and my cousin and her two friends ran the gambit.\n\n\"You know,\" Claire said, turning to me. I quickly shifted my eyes up from her ass. \"Beth might have been able to forgive you for cheating on her, but you picked Vicky Johnson to do it with. They hate each other.\"\n\n\"The girl is a major bitch!\" Beth snapped.\n\n\"Sure,\" I couldn't help laugh. \"But she was awfully friendly that night.\"\n\n\"You're not helping yourself here,\" Carol said, shaking her head. I had enough.\n\n\"The whole thing is ridiculous!\" I snapped in frustration. \"I did not 'cheat on' Beth. We weren't even dating, much less going steady.\"\n\n\"Did you or did you not kiss her earlier that day?\" my cousin asked.\n\n\"Sure,\" I shrugged, although if I remembered correctly, she'd been more of the instigator of our lip lock. \"But we didn't talk about anything long term. Besides, she disappeared and left me at the party all alone. I got drunk and...\"\n\n\"...And as they say,\" my little brother interjected with a grin. \"The rest is history!\"\n\n\"I had to leave,\" Beth said angrily. \"I went home floating on a cloud, only to see Vicky's Facebook page a couple of hours later. She was sitting on your lap!\"\n\n\"She did more than that,\" Carol snorted.\n\n\"Exactly,\" Beth said. \"You earned the nickname 'whore'gie that night, and from what your cousin says, you've lived up to it ever since.\" I gave Carol a pointed look, but she just shrugged.\n\n\"It's true,\" she said. \"You're a male slut. Everyone knows it.\" I was annoyed, but it's not like I could deny it. I was good with women, just like my father and I took full advantage of it.\n\n\"Alright G-man!\" my little brother cried. \"Finally, a reason to look up to you!\" Carol hit him and Beth threw a bunched up napkin that bounced off his head. Claire just shook her head.\n\n\"Let's go help Uncle Stan before one or both of us ends up getting hurt,\" I said, leading my brother away. I did glance back at the ladies once more before searching out my uncle. Thankfully, they were focused on setting up for the party and didn't notice. \n\nThe three of them worked well together. My cousin was directing the other two. I didn't quite smile at that. Carol was obviously the ring leader of their little group. She was also the youngest. She'd just turned eighteen a month ago. \n\nI found myself wondering if they would stay close considering they were all off to college next year. I hoped so. Not everyone had the kind of friendship they did. It would be a shame if they grew apart. Besides, it was always interesting to see all three together. They didn't look much alike, but all three were pretty damn hot in their own way. Now if I could only convince my cousin to relax her rule on no dating her friends. Beth had a tight little body and I had the feeling she'd be a hellcat in bed, but my eyes lingered longer on Claire. There was just something about her.\n\n**********\n\nI jumped into the in-ground pool a few hours later after taking my turn at the barbeque for Uncle Stan. It felt amazing. I let the chlorinated water cool my overheated body and wash away the sweat and barbeque smoke. The shallow end of the pool was pretty crowded so I shifted to other side and dove deep just for the sheer joy of swimming unencumbered. I briefly came up for air and dove again. A small, lithe female body shot past me.\n\nI wasn't expecting her and didn't really get a good look, but what I did notice was that her bathing suit was riding up her ass, and what an ass it was! I followed it almost without thought. I wanted another look.\n\nThe pool was packed so it took me a few seconds to catch up to the girl. By the time I did, we were in the shallow end of the pool. I came up and out of the water to see her standing there looking at me with an unpleasant frown. It was Beth of all people. I didn't quite grimace despite realizing that I should have recognized her. Who else here had such a perfect, small, round butt?\n\n\"Oops,\" I offered as I tried hard not to notice that her hands were under the water. I failed miserably. She was obviously fixing her bathing suit. Beth shook her head, but then surprised me by moving close, very close. I could smell the alcohol on her breath. Beth's body pressed against mine as she leaned forward and whispered in my ear.\n\n\"This all could have been yours.\" She knew full well what she was doing to me. \"But you chose Vicky instead.\" She pulled back, splashed me in the face and started to swim away. I reached out and grabbed her ankle, pulling her back to me as I blinked the water out of my eyes. \"Hey! Let me go!\" Instead, I pulled her closer.\n\n\"Let's get one thing straight,\" I said softly. \"Maybe you and my cousin are right. Maybe I am a male slut, but I did not choose Vicky over you. I was drunk and she was there. You were, and I expect still are, way hotter than her.\" I let Beth go with that. She pulled back and frowned at me for a moment before disappearing. I watched her go, or more specifically, I watched her ass as she left. It really was mouthwatering. I shrugged to myself and dove back under the water.\n\nThe party was a mix of family and Carol's friends. I knew just about everyone. It was nice to see my family. Well, everyone except my cousin Will. He was a year older than me and just as good with the ladies. He didn't live close, but we'd had some good times together going out and picking up girls the summer before I went away to school. Will was an inch or two taller than me, but not as wide in the shoulders. I never begrudged him his ability with the ladies, but he was talking up Claire today. Bastard.\n\nClaire seemed to enjoy his company, but I doubted she was falling for any of his come-ons. I could only hope. Well, that and focus on some of the other women available at the party. There was quite a bevy. Carol's friends were always a cute bunch, but some of them had become downright hot over the last year.\n\nOne or two caught my interest and then some, but every time I started talking them up Carol, Beth or even Claire when she wasn't busy with Will would show up until I got the message. If it weren't so irritating, it would have been funny.\n\nThe family started disappearing as it got later, leaving just the friends. I was relieved when Will left with his parents. Carol's friends all sat in a circle at one end of the yard and talked. I sat with them for a few minutes, but then saw my aunt and uncle start to clean up. I stood and went to help. It wasn't like Carol, Claire and Beth were going to let me have any fun anyway.\n\nIt was pretty obvious that some of my cousin's friends were drinking despite Uncle Stan doing his best to keep them away from the alcohol. I myself was feeling no pain. Uncle Stan face showed his concern. Finally, he pulled Carol to one side at around ten. They exchanged words, but Uncle Stan was firm. The party ended a couple of minutes later. He checked all drivers before letting them leave. One was in pretty bad shape. My uncle decided to give the guy a ride himself. The problem was that Carol's drunken friend kept saying he had work the next morning and couldn't leave his car. Carol's parents exchanged a few words. Moments later my uncle was driving the guy in his own car while my aunt followed them in hers.\n\n\"What about you?\" Beth asked after they left. \"Aren't you leaving?\"\n\n\"Me? What about you?\" I frowned.\n\n\"Claire and I are spending the night,\" she retorted. Her eyes were shiny. She looked like she was drunk and looking for a fight.\n\n\"Damn,\" I sighed. \"I was planning on catching up with Carol. I wish I'd known you were staying before everyone else left. I'm in no shape to drive. Let me eat something. I should be fine in an hour or so.\"\n\n\"You could sleep in Dad's den,\" Carol offered.\n\n\"No thanks,\" I said, shaking my head. \"A guy can only taking being called 'whore'gie and male slut so much. I'm going inside to raid the left overs.\"\n\n\"Don't go empty handed!\" Beth snapped. I shook my head and picked up the last serving platter. Everything else had already been brought inside. Carol and Beth were cleaning the tables. Uncle Stan told me not to bother breaking them down before he left. The place he rented them from was coming tomorrow and the breakdown was part of the cost.\n\nI walked in the house to find Claire by the sink washing the dishes. There was still quite a stack. I grabbed some of the leftover pasta and began wolfing it down quickly.\n\n\"Just give me two minutes and I'll help,\" I said. Claire smiled and nodded, chatting about the party while I ate in silence. She didn't seem to notice me checking out her body. She had her cover-up on once again, but it couldn't hide all her curves. Mostly, all I could really see from behind her was her thick, nicely shaped ass. Don't get me wrong. It wasn't huge, just full and a bit oversized. Yummy!\n\nDespite me being an ass man, it wasn't the only thing about her that caught my interest. I also couldn't stop myself from daydreamed about kissing her. Claire's lips were full and inviting. The truth be told, if I was going to hit seriously on one of Carol's friends, it would be Claire and not Beth, but that was never going to happen. I sighed to myself, finished my hasty meal and grabbed a towel to help her with the dishes.\n\n\"Thanks,\" she smiled.\n\n\"So, who was the guy with the red tank top?\" I asked, just trying to hold up my end of the conversation. I also made an effort not to focus on her breasts. They swayed as she scrubbed.\n\n\"You mean Danny?\" she asked.\n\n\"Could be,\" I replied with a shrug. \"Tall guy, plenty of muscles?\"\n\n\"Danny,\" she nodded. \"He's a sweety.\"\n\n\"Thinking about going out with him?\" I asked, hoping I knew the answer.\n\n\"He has a girlfriend,\" Claire said. \"We're just friends.\"\n\n\"And what about my cousin Will?\" I asked, getting to my real fear.\n\n\"He was funny,\" she replied. \"But not my type.\"\n\n\"He was really into you,\" I said almost without thought. \"He was hitting on you pretty hard.\"\n\n\"Not everyone is like you,\" Claire said, blushing. Normally I could care less what people thought about me, but Claire's words bothered me. I shook it off.\n\n\"Maybe not,\" I agreed easily enough. \"But that doesn't mean he wasn't into you.\"\n\n\"You're wrong,\" she insisted. \"You just have a one track mind!\" Beth walked in, but only heard the last line.\n\n\"Is 'whore'gie hitting on you?\" she asked angrily.\n\n\"No,\" Claire replied. \"But he's insisting that his cousin Will was.\"\n\n\"Oh that,\" Beth said, calming considerably. \"He was. It was pretty funny, but stay away from him. Will is even worse than 'whore'gie here.\"\n\n\"Really?\" Claire asked in surprise.\n\n\"I'm not that bad,\" I sighed.\n\n\"Yes you are,\" Beth snapped, but then she relented and added, \"But despite being a male slut, you're a decent human being. Will's a different story altogether, at least that's what Carol says.\"\n\n\"He can be pretty bad,\" I said, remembering some of our conversations. Will was one of those guys who thought women were a different species. They were here to be used and dumped. He had no guilt when it came to how he treated girls.\n\n\"I'm surprised he wanted to be with me,\" Claire said thoughtfully. \"There were so many girls to choose from.\"\n\n\"Claire, you have to get over your lack of confidence,\" I said, forgetting about my cousin and focusing on her. \"You're beautiful. Everyone knows it except you. Don't you think it's time you admitted it to yourself?\" Our eyes locked and I felt a connection forming. There was a part of her that wanted to believe me. The fact that it was the truth in this case made it even better.\n\n\"You are hitting on her!\" Beth cried, distracting Claire and ruining the moment. I couldn't tell if she was jealous or just being overprotective of her friend, but in either case I had enough.\n\n\"This is getting ridiculous!\" I snapped. \"We need to talk. Come with me.\" I grabbed Beth's hand and led her out of the kitchen. We needed some privacy for this so I led her to Carol's bedroom, pushed her inside, followed her and shut the door.\n\n\"What's your problem?\" I cried, facing her angrily. \"I'm not going to continue to pay for something that happened two years ago! I'm sorry I hurt you. It wasn't intentional, but don't you think it's time you get over it?\"\n\n\"You're an asshole!\" she retorted, just as angry as me. I suddenly realized that this confrontation was a mistake. She was clearly drunk. The problem was, so was I.\n\n\"Beth, what the hell do you want from me?!\" I cried in frustration.\n\nShe looked ready to continue to tear into me, so my surprise was even more complete when she threw herself at me and thrust her tongue into my mouth. This so wasn't what I expected, but with her tongue in my mouth there was only one option. I kissed her back and reached up, squeezing her small breasts. I thought she might protest, but instead she moaned into my mouth. \n\n\"I want this from you!\" she gasped between kisses, her eyes flashing with her desire. \"In two years I haven't forgotten what it feels like to be in your arms.\" I knew Beth well enough to realize it wasn't an omission of love, but of pure and simple lust which was almost as shocking. Beth hated me. She'd made it clear every time we met.\n\nShe surprised me again by taking what we were doing to the next level. Beth reached between us and took hold of my cock through my bathing suit. Her eyes were afire and suddenly I realized that despite her dislike of me and the fact that she never came across as the promiscuous type, she wanted more, possibly a lot more. Her next words proved it.\n\n\"I can still remember how it felt to have your body pressed against mine, my stomach trembling in desire with your stiffness crushed against it. I was so young and inexperienced. You awoke things in me I didn't understand until much later.\" I couldn't quite believe my ears. Was this really Beth talking? Instead of waiting to find out, I reacted, not wanting to miss my chance with her.",
        "I pulled Beth's bikini top off. Her breasts were small and pert, but were capped with surprisingly large nipples. They were very enticing. I leaned forward, taking one into my mouth. It was more thick than long. I nibbled and sucked on it until she moaned again. I was wondering just how far she'd let me go when Beth used both hands to push my suit to the ground. She took hold of my cock and gasped.\n\n\"I can barely reach around it!\" she said huskily. \"It so big and hard!\" She pulled my lips back to hers and our kisses became even more passionate. Her stiff nipples burrowed into my chest as she began slowly stroking my cock. This was going fast, but Beth seemed on a mission and who was I to argue? I untied the sarong from around her hips. It and the bottom of her bathing suit joined mine on the floor. We were both naked now. I reached around her and squeezed her small and tight ass. I could probably have done it with one hand, but I used both. It was more fun. \n\n\"I want to taste you!\" Beth gasped eventually, breaking our lustful lip lock. She pushed me back against my cousin's dresser, dropped to her knees and looked up at me. Her eyes continued to burn hungrily as her hands continued to keep busy. She knew what she wanted, so did I, but she hesitated. \"You were supposed to be my first. Instead, it was Jimmy Forsithe. What a disappointment!\"\n\n\"Didn't you date him for a year?\" I asked, not even sure why.\n\n\"Yes,\" she replied, no longer looking into my eyes. Hers were now locked on my cock. My surprise and anticipation grew when she didn't immediately fall on it. She had the look, but instead she clarified. \"He was captain of the football team and being his girlfriend was exciting in its own way. It was too bad he never developed much in the bedroom. Frankly, I think I scared him a little.\"\n\n\"Wow, I had no idea what type of girl you were. If I'd only known!\" I groaned. \"Cause you sure as hell don't scare me!\"\n\n\"You would have,\" she replied, rubbing the head of my cock along her cheek, still focused on it despite our conversation. \"If you'd only been a little more patient. Now you'll have to deal with....what do the guys call it? Oh yeah! Sloppy seconds.\" She was grinning when she said it, but was still too focused on my cock to look up into my eyes.\n\n\"And I'm the slut!\" I snorted, but it turned into a gasp when Beth ran her teeth along the head of my cock. She was looking up at me now.\n\n\"I am not a slut,\" she warned, biting down, but not too hard. Still, I got the message.\n\n\"Not a slut,\" I agreed quickly. \"Got it!\" She stayed that way for a moment longer.\n\n\"What I am, is a drunk high school graduate in the mood to do something crazy stupid before going off to college,\" Beth continued, releasing my cock from between her teeth. Her eyes locked on mine for a moment longer before they returned to my stiffness. She licked her lips and then ran her tongue along the underside of my cock. She opened her mouth, clearly about to take me in when the door to the room swung opened. I groaned in disappointment. This was going to be bad!\n\nIt was Claire. Frankly, I would have preferred being caught by my cousin, but life was just that way sometimes. Besides, it's not like I ever had a chance with her anyway. Damn.\n\n\"Are you two okay...\" Claire began to ask with real concern before she registered what was going on, but then she saw and froze. She turned bright red and look at me angrily. \"You bastard! You're taking advantage of Beth and she's drunk!\"\n\n\"I'm not the one taking advantage here!\" I argued, but I knew it was pointless, or at least I thought I did. That's when Beth spoke up.\n\n\"Get out!\" she snapped at her friend. \"I want this!\"\n\n\"Beth!\" Claire cried in shock.\n\n\"What?\" Beth retorted. \"You're the virgin of the group, not me. I'm off to college soon and I don't want my only experience to be with Jimmy.\"\n\n\"You can't be serious?\" Claire asked. \"This is not like you!\"\n\n\"Claire, look at this thing!\" Beth cried, holding my cock out. \"It's twice the size of Jimmy's!\" Now, my cock looked impressive in Beth's small hand and was bigger than average, but not that much bigger. Poor Jimmy.\n\n\"It does seem big,\" Claire admitted, looking at my cock and licking her lips without realizing it.\n\n\"It is!\" Beth moaned. \"I want to feel this inside of me. No, I need to feel it!\"\n\nI can't say I was surprised again by this point, but the moment was definitely surreal. Beth ignored Claire after that. The golden haired girl fell on my cock and took at least three quarters into her mouth. I groaned, grabbed her head with both hands and began stroking in and out. The sight of her working my cock was hot as hell, but despite that I found myself closing my eyes to focus on just how good it felt. \n\nBeth had a very talented tongue and what she was doing with it was pretty amazing, but something nagged in the back of my head distracting me a little. It didn't take long for me to figure out what it was. I hadn't heard the door close again. My eyes popped open to find Claire still standing there. The brunette was clearly mesmerized by the scene in front of her. Her lips were parted ever so slightly. She licked them once, and then a second time. I could hear her breathing quicken.\n\nI let go of Beth's head with one hand. It's not like it was necessary. The blond was trying to take my entire length into her mouth with more gusto then I would have pushed for. I could care less whether she succeeded or not, just as long as she kept trying. The feeling of my cock pushing into her throat was amazing!\n\nClaire was only a couple of feet away from us, watching. She was so hypnotized by what was happening that she forgot her normal insecurity about her body and stood tall with her shoulders back for a change. Her excited breathing was making her heavy breasts heave slowly. The sight was stunning to say the least, but still it was the sight of her full, parted lips that got to me the most. Unable to resist, I reached for her. \n\nMy own need was too strong by now for any type of subtlety. I grabbed the back of Claire's neck and pulled her mouth to mine. I don't know if I'd say she came willingly. She didn't fight me, but she might just have been too surprised. All the same, her lips tasted as incredible as I expected.\n\nClaire closed her eyes and moaned once as my tongue slipped into her mouth. Hers met mine almost tentatively, but the passion behind her kiss grew quickly to match my own, which was saying something considering just how excited I was at the moment. I was kissing Claire while Beth worked my cock expertly. It was a fantasy come to life.\n\nI couldn't ignore Claire's heaving breasts any longer. I shifted both hands to them, cupping and squeezing their soft fullness. They were heavier than I expected and their weight somehow enticed me in ways I didn't understand despite my breath of experience. Frankly, all I wanted to do in that moment was pull off Claire's cover-up, rip off her bathing suit and bury my face between them. It was a pure instinctual need and must have shown in my expression. I obviously scared Claire because suddenly she was pulling away from me.\n\n\"No!\" she cried, disappearing out the door before I could stop her.\n\n\"Damn!\" I cursed in disappointment for a myriad of reasons, some I don't think I fully understood myself.\n\n\"Don't worry,\" Beth said lustfully, squeezing my cock until I looked away from the door and down at her. \"I'm more than enough woman for you.\" I wasn't sure that was necessarily true, not after kissing Claire.\n\n\"I hope so,\" I sighed. \"Cause I'm pretty worked up right about. I was so close to having one of my biggest fantasies fulfilled! Two women at once...damn!\" It was the truth, but only explained part of my disappointment. Beth didn't need to know about the rest.\n\n\"Don't worry 'Whore'gie,\" Beth retorted. \"It's bound to happen eventually with the reputation you have. Not with me, mind you, but I'm sure you can find two sluts to help you out.\" I could tell she was starting to get annoyed so I made an effort to shake off my disappointment. It wasn't easy. There was just something about Claire. She was hot as hell whether she realized it or not, and I wanted her badly, especially now that I knew how her lips tasted. No surprise there. Yet, what I was feeling for her was more than simple sexual desire. I might be a male slut, but that didn't mean I didn't have feelings and something about Claire reached me in ways I couldn't put into words. \n\nOn the other hand, she wasn't here, Beth was, and the honey blonde was in a mood that I could fully appreciate. It was time to forget about Claire and focus on the moment. I was generally pretty good at that.\n\n\"Oh, I'm not worried,\" I grinned. \"I just figured I should warn you. You better be ready for a workout. Try and keep up.\" Her eyes flashed. She might be pissed at cocky attitude, but it also drew her to me. Some girls were like that. Besides, taunting Beth was just too much fun.\n\n\"Asshole!\" she snapped, falling on my cock once more. \"We'll see who has a problem keeping up.\" She worked at taking me all the way if for quite a while before coming up for air. \"I am going to take this monster all the way in whether it kills me or not!\" \n\nHer pale blue eyes might have seemed like they were made out of ice earlier, but now they were smoldering lustfully. There was nothing distant or cold about Beth at the moment. Her honey blond hair was slightly tangled. It only added to her attraction.\n\nI watched her take a deep breath and then fall on my cock yet again. She stopped when she had about three quarters of my length in, but then moaned around my dick and pushed for more, and kept on pushing until she hit bottom. This time I was the one who moaned. Beth pulled off, grinning triumphantly.\n\nI gave the honey blond her moment of victory and then grabbed her head with both hands and pushed my cock back in. I was in need. Beth didn't fight me as I pumped in and out of her mouth. In fact, she clearly loved it. I was so worked up from everything that it didn't take me long to cum.\n\n\"I'm going to blow!\" I warned. Beth didn't pull back like I expected. Instead, she started sucking hard. I lost it. My cum spewed into her mouth. She swallowed for a time and then pulled off, letting the last of my cum spray her small chest. She grinned and took my cock in to the root afterward with ease. I was no longer hard.\n\n\"It's not so difficult now,\" she joked.\n\n\"Give me five minutes,\" I gasped as I fought to recover from my orgasm.\n\n\"Oh, I can help your recovery along faster than that.\" Beth took my hand and pulled me toward Carol's bed. She smiled sexily and lay on her stomach, lifting her small, round butt off the sheets. She swayed it enticingly. Beth knew her ass was one of her better features. She must also have guessed that it was one of my biggest weaknesses.\n\nI climbed on top of her, grabbing her hair and turning her head just enough for us to kiss. Beth was in obvious need. Her body glowed with unspent lust, but even if it hadn't, the passion of her kisses would have made it obvious.\n\nI slowly shifted down her body, kissing and licking my way past her sexy neck to her smooth, unblemished back. One of my hands could almost reach across the narrowest part. My lips paused at the small of her back before moving lower.\n\nBeth's butt was tight. I left a trail of kisses down and around both cheeks. She lifted her ass high as her need built. She also spread her legs giving me a glimpse of her golden bush. There was a darker patch where her juices first dampened and then soaked the hair there. Unable to resist, I leaned forward and tasted Beth.\n\n\"Oh yes!\" Beth moaned. \"I was hoping you'd be willing. Jimmy didn't like to do it.\"\n\n\"Jimmy is an idiot!\" I groaned. \"You taste amazing!\" I made sure to prove my point by attacking her center. The lips spread of their own accord and I could see more of her juices coming free. I lapped them up.\n\n\"Oh Gorgie! I feel it! I'm going to cum!\"\n\nI had my face buried between the cheeks of her small ass. I took hold of her hips and shifted them so I had better access to her pussy. The pinkness there was swollen in desire. I wanted to shift up and thrust my cock inside, but first things first. I thrust my tongue deep for a few moments and then shifted to her clit.\n\n\"Oh...my...God!\" Beth cried as her orgasm took her. She thrashed for a few moments while I continued to lick her. I was rewarded with a healthy dose of her cum. I did my best to drink it all in, but I ended up wearing as much as I tasted.\n\nI forced myself to continue until she was completely spent, but that was as long as I could wait. As soon as she was done I shifted up and lined my cock up with her entrance. I pushed in as slowly as I could.\n\n\"Definitely a lot bigger than Jimmy!\" Beth moaned, but didn't try to stop me. I took my time working in and out of her. She needed to recover first. I thought she was just about ready when we were interrupted again.\n\n\"Beth! Georgie!\" Carol was knocking on the door. I froze again, but thankfully she didn't barge in like Claire. That would have been too weird. My fantasies about my cousin should stay just that, fantasies.\n\n\"What?\" Beth yelled, clearly annoyed at being interrupted.\n\n\"I called my parents on mom's cell and asked them to stop for ice-cream at Sam's on the way home,\" Carol replied. \"They weren't happy, but they agreed. That will buy you another fifteen, twenty minutes. You'd better finish what you're doing before that!\"\n\n\"Thanks!\" Beth yelled back.\n\nI was a bit stunned. I knew Carol was cool, but this was something else. I'd completely forgotten about my aunt and uncle. They would not be happy to realize what was going on.\n\n\"Well, what are you waiting for?\" Beth asked a moment later. \"I want to feel you cum inside of me!\"\n\n\"You are such a slut!\" I laughed.\n\n\"I am not! You assh...\" the golden haired girl under me began to reply angrily, but by then I was thrusting in and out of her again and Beth couldn't focus on what she was saying. I grinned as she lost track of her words. I also picked the pace up.\n\nBeth came pretty quickly despite it being her second orgasm. I just kept pushing into her. We didn't have the time for breaks and I wanted to fill this horny slut with my cum before my aunt and uncle returned just as much as she wanted me to.\n\nI held her narrow hips and slammed into her. Her small, round ass slapped against my pelvis with every thrust. The sound was a real turn on. She must have liked it too because she came yet again.\n\n\"Oh fuck!\" she moaned. \"Too much! Too much!\" Of course, that didn't stop her from enjoying what I was doing.\n\nI tried picking up the pace again, but I was already going as hard and heavy as I could, so instead I made my strokes longer. My orgasm was quickly building and I wanted Beth to come with me since it would be the last time. My aunt and uncle would probably be home any minute!\n\nMy need was so great that I accidently pulled all the way out. I pushed back as quickly as I could. I realized my mistake when I met strong resistance. Oh fuck! I was pushing at the entrance to her ass. I quickly pulled back, slipped my cock lower and thrust back into her pussy. My cock hardened even more despite my fear of her reaction, but I needn't have worried. Beth just moaned louder which got me thinking despite the nearness of my orgasm.\n\nI had a thing about asses, but never met a girl willing. Okay, that's not quite true. I convinced a girl to try anal sex once, but she stopped us cold after the first few moments. She said it hurt too much. She wouldn't even let me touch her the rest of that night. Yet, Beth's moan made me think that maybe, just maybe she was different. I could be wrong of course, but I was willing to take that chance for a shot of one of my biggest fantasies.\n\nBeth's little ass shivered and shook with every thrust. My eyes were locked on it now. I used both hands to spread her cheeks enough for me to see everything. I then moved one of my thumbs closer and closer to her small puckered opening. I circled it a few times, hesitating, not sure how she would take what came next. Beth moaned again letting me know that she obviously like what I'd done so far. That's all it took for me to decide I had to try for what I wanted. I pushed one thumb against the entrance to her ass. \n\n\"Don't you dare!\" Beth cried, but she was clearly more excited than angry. Still, she resisted what I was doing. I could force the issue, but knew it would hurt her so instead I pushed my thumb passed her ass and rested it along the entrance to her pussy. My cock was thrusting in and out of her driving her crazy. Each time I pulled free her juices coated my hardness. I rested my thumb against my cock as I moved, letting her excitement make it ready for what came next.\n\nBeth was very close to her next orgasm when I shifted my thumb back to the entrance to her small ass. She was so in the moment that she didn't notice at first. That only lasted until I pushed past the initial resistance, thrusting my thumb up her ass to the first knuckle. \n\n\"Oh fuck! What are...\" Beth began to cry, but then stopped as her orgasm exploded from her. Suddenly, my thumb was able to sink even deeper into her ass. Her pussy was squeezing down on my cock with a vice like grip, but it was the feel of her ass doing the same to my thumb that brought me close to the brink. I fought my orgasm with every ounce of will I had. It was a close thing.\n\nBeth seemed half out of it afterward so I pulled free of her. I knew I didn't have a lot of time left, but I seriously wanted her ass. I shifted down the bed and leaned forward, tasting her pussy once more. I also rubbed her small, tight ass with my hands. I waited until she finally had enough strength to lift her hips to give me better access. I smiled and let my tongue drift up toward her ass. She gasped at the first touch.\n\n\"You wouldn't!\" she cried, but it sounded more like a challenge to me than anything else, at least that's how I took it. I thrust my tongue past the initial resistance. \"That's so nasty!\"\n\nI wanted to take my time, but with my aunt and uncle being home soon, I couldn't. That didn't mean Beth wasn't ready for what came next by the time I shifted up her body. Of course, just because she liked how my kisses and tongue felt doing what I was doing, it didn't mean that she'd be willing to take it to the next level and give me her ass. On the other hand, this was as close as I' ever gotten and I wasn't going to stop now. I lined my cock up with her ass.\n\n\"You nasty bastard!\" Beth gasped. \"Are you crazy? You're too big!\" The head of my cock pushed past the initial resistance and she moaned. I pushed a little deeper and she moaned louder. \"It's so dirty...so hot and dirty!\"\n\nHoly fuck! Beth liked it. She liked me fucking her ass! I was finally fulfilling one of my twisted fantasies and it was with Beth of all people.\n\nI went as slow as I could. My cum was boiling by this time, but I didn't want to ruin the moment by cumming too soon. My hands were still on her hips once more which were so narrow that the fingers and thumbs from my hands could almost touch. I continued to press deeper until I was completely buried in her small ass. Beth surprised me yet again by reaching under herself and obviously rubbing her clit. I leaned forward and kissed her neck for a few moments before moving my mouth near her ear.\n\n\"It doesn't matter what you say anymore. I know the truth now. You are such a slut!\" I whispered hungrily. This time she didn't even bother to deny it. Instead, she moaned even louder.\n\nI shifted back up and began stroking in and out of her ass more seriously. It was tight, but yielded to my cock willingly enough. It felt amazing!\n\n\"Too big!\" Beth gasped. It looked like my cock was splitting her in half and her cries only added to the illusion, but I knew she was loved every second of it. She was almost one constant moan.",
        "I was pounding Beth's small frame by this point. I watched her round ass cheeks shiver with every thrust. I did my best to fight off my orgasm for as long as I could, but eventually I couldn't take any more.\n\n\"I'm going to blow!\" I groaned.\n\n\"Yes! Do it you nasty bastard!\" Beth cried. \"Cum in my ass!\"\n\n\"Cumming!\" I cried.\n\nI squeezed her hips tight and thrust one last time. I also pulled her up to meet me. She was so small that I lifted her off the bed as I exploded. My cum boiled out of my cock and into her tight bottom.\n\nI could hear her hand literally slapping her clit now that I held her hips suspended above the bed. She cried out and joined me in release. My balls jumped again and again as I filled her ass with even more of my juices.\n\nBeth passed out, a spent, sweat covered mess, just like me. All I wanted to do was lie down next to her and let happy oblivion take me too, but I hadn't forgotten about my aunt and uncle this time.\n\nI stumbled out of the bed and almost fell over when I reached down for my bathing suit. It took me three tries to get it on. I made my way downstairs, but no one was there. I walked into the yard. Carol and Claire were sitting in longue chairs by the pool. They were sipping drinks and talking quietly. Carol saw me first.\n\n\"It's about time,\" she said, shaking her head and standing. \"You two were so loud that we decided to wait out here. Where's Beth?\"\n\n\"Passed out,\" I replied, running my hand through my sweaty hair. I really was exhausted. I also smelled of sex.\n\n\"You'd better go up and check on her,\" Carol said to Claire, who stood and left without a word. The brunette had avoided making eye contact from the moment I joined them. I wasn't really surprised, just disappointed.\n\n\"You know,\" Carol sighed once we were alone. \"You really are a male slut. You asshole!\"\n\n\"Hey! This was all Beth's idea,\" I argued.\n\n\"I'm not talking about her!\" my cousin snapped. \"Claire is too damn innocent for a guy like you!\"\n\n\"Claire?\" I frowned. What did she have to do with what happened with Beth and me?\n\n\"Did you or did you not kiss her and grab her boobs?\"\n\n\"Oh that,\" I frowned.\n\n\"Yes that!\" my cousin cried angrily, actually hitting me. I knew she was planning to continue to tear into me, but just then we heard my aunt's car pull into the driveway. Carol glared at me for a moment longer and then shoved me. I fell into the pool. \"Wash off. You stink!\" She was gone by the time I surfaced.\n\nI hadn't planned on kissing Claire. Hell, I hadn't planned any of what happened, but honestly despite my cousin's anger, I couldn't help feeling satisfied. I always regretted not getting together with Beth and kissing Claire was just as amazing as I expected...maybe even more so. Add to that the fact that Beth let me take her ass and I was in Male Slut Heaven. Sue me.\n\nDon't get me wrong. I'd apologize to Claire when I got the chance. I liked her and what happened obviously upset her, but right at that moment I felt too content floating in the pool to dwell on it. Beth's small, round ass had been my first, but I promised myself that it wouldn't be my last.\n\nI shook my head as I realized that my libido must be in overdrive despite my exhaustion because I caught myself thinking about Claire's meaty bottom. I even spent a moment picturing Carol's ass which was pretty bad considering she was my cousin, but her ass was just as enticing as the others in its way.\n\n\"Georgie! Ice cream!\" my aunt called from the sliding door. \"I got your favorite!\"\n\n\"Coming!\" I called back, but then grinned, remembering yelling the same thing with a completely different meaning only a few short minutes ago. Ice cream might be one of my weaknesses, but the other was...well, you know.\n\nMy grin turned into a laugh as I climbed out of the pool. I hadn't expected to get lucky today, especially not with Beth, but I had no complaints despite knowing that my cousin Carol wasn't done reading me the riot act for what happened. The night was still young. Maybe I could lay some ground work with Claire now that Beth was out of the way.\n\n\"Definitely a male slut,\" I mumbled to myself with another laugh, but at the moment I could live with that."
    ],
    "authorname": "JoeDreamer",
    "tags": [
        "cousin"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/georgie-and-claire-ch-01"
}