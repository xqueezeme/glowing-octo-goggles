{
    "title": "How to Appreciate a Man",
    "pages": [
        "Author's Note: I am not eligible to win this contest--just entered it for fun. I do hope you enjoy this entry and I welcome feedback. -SK\n\n--------\n\nI love men. I love the way they move\u2014their straight, tall spines and the way their eyes check out the perimeters of any new room they enter. I love the way they will protect anything smaller and more vulnerable than themselves. I love how generous and kind they are at heart. I love their focus and direction, how they can spend hours figuring out how it all works, endlessly fascinated. And yes, I love that they can lift the heavy stuff, start lawn mowers, open jars, and kill spiders.\n\nI have grown up in a culture that doesn't give up the love to men very much. From bumbling dads like Bill Cosby who feed kids chocolate cake for breakfast to the comical but idiotic-like Homer Simpson or Everybody Loves Raymond, the images of men in our culture have served to show them as silly and superfluous.\n\nMy daughter, now fifteen, has an even less clear definition of the masculine to go on. She is entering a world of dating where men are \"metrosexual\" or \"ubersexual\"\u2014perfectly coiffed, buff, hairless men who can go head-to-head with her in deciding on wedding favors and colors for the curtains. It makes my head spin.\n\nTo me, one of the best things about men is how different they are from women. It is, admittedly, one of the most frustrating things about them, too. I can understand the world's constant pressure to create a gender neutral ground where we can all communicate in the same language, instead of trying to speak two versions of alien to each other. On the other hand, if you take all the masculine out of the masculine and all the feminine out of the feminine, you no longer have anything to attract the other. Neutral things have no charge, no spark.\n\nAs a woman, I love and revel in the differences between the sexes, physical and otherwise. I know too many women, though, who hate men. I don't even know if they know they hate men, but the way they talk about men\u2014their husbands, brothers, fathers\u2014is so demeaning and castrating that it makes me cringe to hear it. I know, because I used to talk about and think about men this way, too, at a certain point in my life.\n\nIn my marriages, one failed, and one a work in progress, I have discovered a few things about really appreciating the men in my life. I learned it by trial-and-error and by making a lot of mistakes. I'm still by no means perfect\u2014I often lapse in my appreciation of the opposite sex\u2014but I always come back to it now, and remember how much I really do love men. They are amazing, and so deserving of feminine recognition.\n\nAnd the secret is\u2014are you ready for this?\u2014they live for it. In fact, if a man isn't being appreciated by the feminine, eventually, he just disappears. Sometimes, he literally leaves, and sometimes he just checks out of the relationship somehow. He craves appreciation, acknowledgment and respect. Now, let me be clear. I'm not talking about approval. That sets up a power dynamic, more like a mommy approving (or disapproving) of a son. That's not what he wants.\n\nI'm talking about appreciation, an open expression of heartfelt gratitude. It's so simple. He carries in the groceries. You say thank you. He fixes the dishwasher. You listen to all the ins and outs of his trial and error method, ooo-ing and ahh-ing in all the right places, and in the end, you kiss him and thank him for your amazing new working convenient and time-saving appliance.\n\nIt sounds contrived, but I'm not saying you should do it in an insincere way. In fact, he'll know if you're not really appreciative. And frankly, aren't you truly glad that he's strong enough to carry in the groceries? Aren't you glad you don't have to wash dishes by hand? And beyond that, aren't you grateful that he's willing to do something so generous for you?\n\nGiving him a genuine expression of your appreciation in the moment is like putting money in your relationship bank. You are investing in the future of your relationship with every smile, kind word, touch, and thank you.\n\nHere's another little secret\u2014the more you thank him and appreciate what he does\u2014the more he will do. This doesn't mean you should say thank you as a manipulation. It should always be a genuine expression of your heart. Still, expressing your gratitude creates this wonderful cycle of generosity from your partner, which in turn inspires more appreciation from you, and so it goes.\n\nMen are actually very kind and generous souls. When women make demands on men, they feel burdened, and often seem stingy. You can tell a man what you want, and in fact, you should. Contrary to feminine belief, men are not mind readers. They want a woman who knows what she wants, and who will express that. But that doesn't include making demands or bargains to get it.\n\nI knew a woman once who hated oral sex\u2014giving it, of course\u2014but she wanted a new diamond ring for their tenth anniversary. So, she made a bargain. \"I will give you a blowjob every time you put away a hundred dollars toward my ring.\" After the newness of oral sex wore off for him, though, he got bored, and stopped putting money away.\n\nYes, a man bored with blowjobs. How could this be? Because he knew that, for her, it was just a means to an end. There are very few men that I know who want to feel as if a woman is with them just to get something. He would rather forgo the oral sex than feel like he was being used or manipulated. If you are giving your \"appreciation\" just to get something, you can forget it. It will backfire every time.\n\nAnd here we come to another secret about men. Do you know the best way you can show a man you truly appreciate him? You might not believe me, but I've found that it's generally true. Men want to experience a woman experiencing pleasure. It is the most tantalizing thing in the world for the masculine. That doesn't necessarily mean in bed, although there, too, of course, but it can be as simple as laughing at his jokes, smiling at him when he does something goofy, or saying \"Mmm!\" when he brings you chocolate.\n\nIt's really as simple as enjoying life in his presence. He loves and lives for giving you pleasure, in bed and out. I knew a woman whose husband constantly complained about how much she spent on clothes. She was a beautiful woman, with a great figure, and she was, admittedly, a huge clothes horse. You know the kind, with more shoes than Imelda Marcos. This was a huge power struggle between them, until finally, she gave up and said, \"Fine. I won't buy any clothes unless you buy them for me.\"\n\nWhat happened? She discovered that her husband was actually much more generous with her than she had been with herself. He took her shopping, bought her beautiful dresses that she would have been afraid to purchase because their price tags were cost-prohibitive. Instead of sneaking her purchases here and there, filling her closets on the sly, she allowed him to give her pleasure, which in turn gave him pleasure, and the outcome was better than she could have imagined.\n\nThis applies to between the sheets as well. The best way you can appreciate your man in bed? Open yourself to receiving pleasure from him. Go ahead and ask your man what gives him more pleasure\u2014his enjoyment, or yours. You'll be surprised by the response. \n\nHe gets an incredible rush from giving you orgasms, from making you moan and squeal and giggle and gasp. There is nothing that makes a man feel more appreciated and acknowledged than watching his lover's face as she dies into bliss in his arms, knowing he took her to that place.\n\nNow, that said\u2014men don't want a performance. In spite of the \"When Harry Met Sally\" conjecture that a man doesn't really know when a woman is faking\u2014men aren't stupid. They are linear, focused, clear and direct, but they aren't stupid. They know when a woman is acting, when she isn't really feeling what she's expressing. They know when someone is being insincere and disingenuous, and they will know if you are faking, even if they don't say so.\n\nWhich brings us to the two things that you can do to cultivate appreciation for a man: 1.) Know what you want 2.) Ask for what you want. I know it sounds like a paradox, but the best appreciation a man can receive is to experience the deepest, most genuine pleasure of a woman.\n\nIn or out of bed, this applies. And of course rule number three would be: 3.) Thank him for giving you what you wanted. It's so simple, and yet so many women don't have a clue what they want, or if they do know, they don't know how to ask for it... and then, if they get it, they're so embarrassed for wanting it in the first place, they find it hard to say \"thank you.\"\n\nWhat you need to remember is that a woman's enjoyment is the secret ingredient. He wants to see that everything he does, everything he works for, everything he offers, is appreciated by his woman, whether that's watching her face when she opens the gift, or seeing her eyes light up when he gives her flowers, or watching her toes curl when she cums.\n\n\"But what if my man doesn't do that kind of stuff!\" you say? Recognize what he does do, right now. I don't care how small it is. Did he bring in the garbage cans? Thank him. Did he rinse his dinner dishes? Thank him. Did he take the baby for an hour? Thank him. I don't care if you asked him to do it, or if it's something he's \"supposed to do and why should I thank him for that?\" Thank him.\n\nFind that spark of gratitude in your heart, and give it to him. The more you do, the brighter the fire will burn between you.\n\nNow, there is one caveat to appreciating a man. A woman has to be able to express her pleasure and enjoyment without demeaning him or making him small in the process. In other words, there should be no \"Buts\" attached to the \"Thank yous.\"\n\n\"Thank you for rinsing your dishes... BUT you could have put them in the dishwasher.\"\n\n\"Thank you for taking the baby... BUT you didn't change his diaper.\"\n\n\"Thank you for bringing in the garbage cans... BUT you forgot to shut the back door.\"\n\nThat \"BUT\" will serve to negate the appreciation. It's like putting money in the bank and taking it right back out again. You never build a surplus. So what if you're right? And of course, you are. But would you rather feel pleasure or anger? Would you rather feel right or feel loved?\n\nSo, he didn't put the dishes in the dishwasher, or change the baby's diaper, or shut the back door... but he did rinse his dishes, take the baby and bring in the garbage cans. Acknowledge and appreciate the small stuff. You will find, soon enough, that you will have more and more to acknowledge, as time goes on, because the more you do, the more he will do, too.\n\nThe hardest part I've found is saying \"Thank you\" when my own tank doesn't feel full. When I feel like I'm running on empty, it's the last thing I want to do. When this happens, I know I'm not experiencing enough joyful things in my life. I need to take some time for myself\u2014take a bath, take a walk, take a break. Usually, after I do something for me, I can find that gratitude in my heart again.\n\nOne of the ways I've found to really appreciate my man when I know I've been slacking off in the appreciation department (and I know, because I start feeling grouchy and hostile and resentful of everything) is to stand in front of him, put my hand on his heart, and say, \"My magnificent man... I really appreciate you for_____.\" You fill in the blank.\n\nIt can be one thing, or ten. The more, the better, actually. You'll find yourself softening, too, the more things you can find to acknowledge him for. And ask any man reading this right now, even as goofy as the \"my magnificent man\" part sounds, if he would love to have his woman put her hand on his heart and say such a thing with all the love in the world in her eyes? Go ahead, ask. You might be surprised.\n\nWhen it comes to appreciating men, a woman really has everything she needs already. She's built for pleasure and he craves her enjoyment of it. It's really a beautiful thing, when it works. A woman who is self-confident, who knows what she wants and expresses it without being demanding, and who can revel in her sincere, genuine enjoyment and pleasure, will go a long way toward being able to truly appreciate the man in her life. "
    ],
    "authorname": "Selena_Kitt",
    "tags": [
        "self-help",
        "sex advice",
        "relationship advice"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-appreciate-a-man"
}