{
    "title": "I Thought I Hated Him Ch. 07",
    "pages": [
        "[Just another note to thank you all for your patience with the infrequency of my posting of late. Life outside of Lit is a little busy to say the least, and my writing moments are too few and far between. I'm so glad you're sticking around for the ride! If you notice a marked improvement in my grammar/spelling/punctuation in this chapter it's because I've found myself an editor --- many thanks to Diatikan for putting up with my tendency to butcher the English language. I'm not sure he fully understood what he was in for when he signed on with me! All the best -~- firstkiss]\n\nIt was the longest twenty minutes of my life, and I regretted in a moment the decision to carpool to the City Hall meeting with Mr. Maddock. On the way to the meeting we'd chattily discussed business; on the ride back the silence hung awkwardly between us.\n\nI was doing my best not to feel guilty. After all, Daniel and I had done nothing wrong. There wasn't a written rule stipulating that interoffice dating was forbidden. It just wasn't done and everyone knew that. I wanted to explain to Mr. Maddock that I never had the intention of sleeping with Daniel, that wasn't the kind of girl I was or the sort of behaviour I regularly indulged in, but his silent, taciturn mood didn't encourage conversation, so by the time he'd pulled his expensive Cadillac into the parking lot of the office I all but sprinted out of it to escape the uncomfortable silence.\n\nDaniel was lurking in the reception area, no doubt waiting to hear of our triumphant success over the schmucks at City Hall. All I wanted to do was intercept him and whisk him off for a quick debriefing of the entire Lawrence Mallory situation, but Mr. Maddock was right behind me and I had to begrudgingly admit he was pretty spry for a senior citizen.\n\n\"Sutcliffe. My office. Now,\" Maddock grumbled as he stalked past, drawing amazed looks from Daniel and the receptionist. The shock on Daniel's face upon hearing his favourite order being barked at him for once did me in. My wobbly knees wouldn't hold me up any longer, and I collapsed in a nearby chair with an audible gasp which melted into frantic, weary giggles. Daniel eyed me warily, but thought better of disobeying Maddock's orders. I watched his retreating back with hysteria-tinged laughter.\n\nWhen I'd collected myself, I made my way slowly to Daniel's office. Since we'd started working on the Kendall project in earnest I'd hardly been at my own desk -- hell, I'd hardly been aware of what else was happening at Maddock Architects. All the other junior architects had been giving me a wider berth too, although whether that was because of something I'd done or my association with Daniel, I'd yet to figure out. Personally I didn't much care what the other juniors thought of me, but I wasn't looking forward to them all knowing about my little office fling, and it was only a matter of time before they did.\n\nI settled myself at Daniel's drafting table, where my current drawing of the east-facing side elevation was only half completed. I stared at it unseeingly for the longest time, wondering over and over what was happening in Maddock's office. What would Daniel's response be? What did Maddock think of me now? Maddock was such an old-fashioned sort of man, from a generation vastly different than my own, or even Daniel's. The sick, heavy feeling in my stomach only intensified as the minutes dragged on.\n\nWhen Daniel finally did enter the room he did it so quietly and so coldly that I knew something was wrong. I'd much rather that he'd yelled and slammed doors. The stony, blank-faced Daniel was infinitely more frightening.\n\n\"Perhaps,\" he said softly, closing the office door with a quiet click. \"You would like to explain to me just what the hell happened today?\"\n\n\"D-didn't Maddock tell you?\" I gasped. I watched Daniel with caution, afraid to spark his ire further.\n\n\"Oh, I've heard what Maddock has to say on the subject, Clara, but I'd like to hear your side of the story. And I suggest you tell it well.\"\n\nI considered his handsome, expressionless face, trying to find some glimmer of warmth in his blue-grey eyes. There was none. The first time I opened my mouth, no sound came out of it. I had to fight the urge to get up and bolt from the room, anything but face another second of Daniel's inscrutable gaze.\n\nSomehow the words happened. In a rush I told Daniel all about my early morning run-in with Lawrence Mallory in the elevator, about how rude I'd been to him, how sarcastic and condescending. I hadn't thought anything of it at the time, it had all seemed so trite, but these things always have a way of coming back to bite me in the ass. Bad karma, I suppose.\n\nHow I was to know Lawrence Mallory worked for the land developer? That I'd ever have to have any dealings with him in a professional sense? And when he walked into that boardroom, I'd been prepared to be completely professional with him -- to ignore our little unpleasantries in the elevator -- but he hadn't extended me the same courtesy. I didn't know what I should have said to Maddock about it afterwards, so I said nothing. \n\nDaniel listened silently to my increasingly panicked explanations. I could hear myself repeating the same useless excuses time and again but was powerless to keep the words from pouring out of my mouth. I was desperate for some sign from him that I hadn't made a huge mistake, hadn't jeopardized both of our careers simply because I couldn't keep my mouth shut to Mallory. \n\nDaniel gave me no quarter. Eventually I grew tired of my cyclical babblings and stopped talking almost mid-sentence, and still Daniel was silent.\n\nI couldn't take the stillness in the room. Every cell in my body was straining, waiting for some sort of response, some sort of emotion. Anger, disappointment, relief: anything would have satisfied me at that moment.\n\n\"What did Maddock say, Daniel?\" I asked after a long stretch of painful silence.\n\nDaniel regarded me emotionlessly for a moment, as if he didn't really see me, like I was someone he'd accidentally bumped into on a crowded sidewalk. It felt like every moment we'd had together over the past few weeks had just ceased to exist. They counted for nothing if he could look at me like that.\n\n\"Basically,\" Daniel rasped, \"I've taken advantage of a young girl who knows no better and should be ashamed of myself.\" His voice was dry, rough-edged with sarcasm, and wholly unnerving to hear. \"I've been distracted by a nice set of breasts and a pretty face to the detriment of my focus and, hence, my career.\"\n\nI watched wide-eyed and silent as Daniel began pacing the length of the room. It was a gesture of old, one I hadn't seen since my first days of dealing with Daniel and it didn't bode well for the situation that he'd begun it again. \n\n\"Maddock feels I've been a fool to allow things to happen between us. After all...\" Daniel paused to look over at me. His silver eyes were lifeless in the dark hollows of his face. He'd aged over the course of the afternoon; the bitterness had crept back into the lines around his eyes and mouth. \"After all, I have a notoriously bad record with women and I should know better than to expect it would be any different with someone like you.\"\n\n\"Someone like me?\" The disbelief in my voice was evident. I couldn't believe what I was hearing. It didn't sound like Daniel speaking at all, but an empty husk of the man I'd come to know.\n\n\"Someone young, beautiful, and ambitious. Someone who sees what they want and will do anything to get it. You're not to be blamed, of course,\" Daniel hurried on before I could interrupt his tirade. \"You're inexperienced; you don't know all the rules of the game yet. Well, I'm certain this has been a good lesson for you. The next time you'll have the routine down pat.\"\n\nThere were no words, only an aching throb in my stomach that would never fade. It would have hurt less if he'd hit me.\n\n\"Maddock is taking you off the project and assigning me another junior architect. You can work with Jim Farrell; he's married and has like, ten kids. There's enough busy work to do around here to keep you and your considerable talents well employed. Considerable architectural talents,\" Daniel added, \"as to your other considerable talents, well... I'm afraid I can't help you with those.\"\n\nEverything felt numb and acutely painful at the same time, like a foot that's fallen asleep. The room spun around me and the edges of my vision dimmed and faded despite my deep, gasping breaths. \n\n\"I-is that what you think of me?\" I spat out, unsurprised at the bitterness which infused each syllable; apparently it was contagious.\n\nDaniel didn't reply, but he stopped his pacing and stood motionless in the centre of the room. My disbelief kept me frozen in place for a time, each of Daniel's accusations sat festering in the air between us. I didn't know what to say, what to do to make him see his mistake, but eventually my astonishment and doubt faded away to reveal an emotion I was much more familiar with: anger.\n\n\"No,\" I said loudly, jumping up from my perch on the drafting stool and crossing the room in a few angry strides. \"This is unacceptable, Daniel. That's not how I am and you know it!\"\n\nDaniel regarded me blandly. My fury increased.\n\n\"This is fucking ridiculous. I can't believe for one minute that you would think I was capable of using you like that. After all this time do you know nothing about me? I don't know about the women in your past, Daniel, but you know I'm not like them. You know.\" I tried to hold Daniel's gaze but he looked away, focussing on a spot over my shoulder. I took another step closer until I could feel the heat radiating off his broad chest. \n\n\"So you're going to let it end like this? A coward's death is what this is. You told me last night you admired me because I fight for what I want. I wanted this: you and me. I wanted it and I was prepared to do anything for it. It was never about the job, about getting ahead. It was about how you made me feel. Everything was clearer when we were together, things just made sense. I know you felt the same, despite your damn need to keep everything inside. \n\n\"You think I haven't learned a thing or two about you since we've slept together? I'm not your ex-wives, Daniel, or any of the other women you've been with. I was never going to use you, to bail on you when things got hard, to leave you for someone I wrongly perceived as better.\"\n\nDaniel's blue-grey eyes flickered down to meet mine and just for a second I saw a little glimmer of hurt there that stole the breath from my lungs, but the cold, icy glare was back before I could be sure of what I had seen. Daniel straightened his back and stood a little taller, towering over me by almost a foot, treating me once more to the look which I'd forever remember as \"the Dragon.\"\n\nAnd then he turned and made for the door. I stood in stunned disbelief for a millisecond and then bolted after him as quickly as I could and threw myself at the door just as he was about to open it.\n\n\"Never walk away from me,\" I snarled lowly, feeling the anger boil over into something more. It didn't matter that Daniel outweighed me by a hundred pounds and that he could throw me aside without so much as breaking a sweat; there was no way I was going to let him do that.\n\nDaniel arched his dark eyebrow in the all-too familiar gesture which made my heart ache underneath my anger. \n\n\"It is not ending like this,\" I said, my voice wobbling with fury. \"I will not let it end like this. It's the goddamn twenty-first century and what Maddock thinks about us sleeping together doesn't matter in the least to me. What we do together after hours is none of his freakin' business and I'm not about to let some crusty old man make my decisions for me. Being with you doesn't hurt what I do as an architect; hell, it makes me better. I make you better too, Daniel, and you know it. \n\n\n\"Shit, this morning Maddock was praising you to the rafters and saying he wanted to make you partner, and now he's going to take it all away just because the truth has come out? I don't believe it. I fight for what I want; why the hell won't you?\"\n\n\"What did you just say?\" Daniel hissed. He grabbed my wrist and backed me against the door, pinning me in place with the broad weight of his body. \n\n\"Fight for what you want, Daniel. If you want me, truly want me, then you have to fight for it.\" \n\nDaniel waved his free hand dismissively. \"Not that, the other thing, before that. What did you say?\"\n\nMy mind blanked for a moment; Daniel's expression was so fierce that I was a little scared beneath my bravado. The difference between us was clear: my anger was only on the surface, masking my stubbornness ; Daniel's ran much, much deeper and hid much, much more.\n\nWhen I realized what I'd said I gasped aloud, and the noise confirmed what Daniel thought he'd heard. \n\n\"What did Maddock say, Clara?\" His grip tightened cruelly on my wrist. \"Tell me what he fucking said.\"\n\nI repeated the contents of my discussion with Maddock earlier, about how he was looking to retire soon and wanted to leave the firm in good hands. How Maddock had asked me of my opinion of Daniel and I'd given it freely. About how hard he'd worked for Maddock for twenty-odd years and how much he deserved the promotion. I made no mention of Maddock's promises for my own career.\n\n\"This job is everything to you, Daniel; I know that, I've always known that. And Maddock knows it too.\" It was hard to breathe with Daniel pressed so solidly against me, but I'd opened my big mouth already and wasn't going to let the opportunity to speak my mind pass me by. \n\n\"Stand up for yourself and he'll back down. He doesn't really want you to throw your career away. He respects you too much, knows how much of his success he owes to you. You are Maddock Architects. As for what's between us -- I know you'll never be happy until you have this firm, so if you feel I get in the way of that, then at least have the balls to admit it to me instead of walking away.\"\n\nDaniel looked down at me with an inscrutable expression, which I resented but would not back down from. We were both breathing hard and fast and the room was so warm it made my head spin. I felt flayed raw; ripped open by the intensity of every emotion I was capable of feeling, and it only felt worse for Daniel's lack of emotion. How could two people be so opposite to one another and survive?\n\nI didn't know what to say so I just watched Daniel, memorizing every line of his remarkable face, every fleck of silver in his blue-grey eyes. My anger slowly dissipated and left behind a hollow, aching hurt which made me want to reach out and smooth the dark hair from Daniel's forehead before curling into the warmth of his body and sobbing out my frustration and fear. \n\nBut tears wouldn't get a reaction from the Dragon and I knew it, so I kept them back and did instead the one thing I knew might reach him: I kissed him.\n\nFor a moment Daniel's mouth was motionless against my own, and my heart all but stopped from the fear that I had lost him forever, that I'd become nothing more than a sacrifice to his ambition. When Daniel did respond however, it was with a ferocity which made me cry aloud. He swallowed my whimper with greed and kissed me hard until we were both clutching frantically at the other, the battleground between us condensed into the heat of our mouths and the insistent thrust of our tongues.\n\nThis is what we are together, I thought as Daniel plundered and I moaned. His arms were rock solid as I hung on to him, dizzy with the desire only he could evoke in me. Maddock can't stop this; Lawrence Mallory can't stop it; hell, even Daniel's stubborn, emotionless facade can't stop it. I'd tried resisting the pull between Daniel and me in the beginning and lost, and now that I was lost in it I wasn't going to let it go, and if the only way to make Daniel realize the same was by using my body, then I was prepared to do so. \n\nWith a low-pitched moan that bordered on a growl, Daniel's hands spanned my waist and lifted me up, grinding his hips into my own. He grabbed my leg and lifted it out, his agile fingers finding their way under my skirt to grasp at my ass. Unbalanced, I wrapped my legs around his waist, gasping as Daniel's erection ground into the heat of my pussy. Even through the layers of our clothing I could feel how hard he was.\n\nI knew in an instant he was going to fuck me then and there, in his office, the one place where we'd always avoided acting on the physical side of our attraction. And I knew as well that it would be amazing, the best we'd ever had. My heart beat so frantically it hurt and I could feel my need pooling wetly between my legs.\n\nDaniel's mouth travelled down to find the sensitive place where my neck met my shoulder; the shadow of his stubble scratched my skin and made me purr. I couldn't stop gasping, couldn't get enough air in my lungs, yet somehow I didn't care. Daniel's slim fingers crept under the fabric of my panties and met hot, wet flesh; the two of us moaned in unison. I wanted him so badly I could practically taste it.\n\nThe knock on the door was right beside my ear and so loud I jumped in Daniel's arms. Swearing lowly, Daniel released his hold on me, easing me down until my feet touched the floor. We stepped away from each other and Daniel watched wordlessly as I smoothed my skirt back down before he wrenched open the door.\n\nMaddock stood in the hallway, the look on his usually kindly face was dark. He glanced past Daniel to where I stood. \"Jesus, Sutcliffe,\" he said loudly, his grandfatherly face painted with disgust. \"You can't keep your hands off the girl for ten minutes?\"\n\n\nOver the railing of the mezzanine, I could see heads at the desks on the ground floor pop up, every pair of eyes in the building watched us with undisguised curiosity.\n\nDaniel stood glaring at Maddock and for a split second I could see the hesitation on his handsome face. Maddock was his boss, his mentor, the man who'd held Daniel's career in his hands for twenty years, who'd long ago shaped a young, talented man into one of the city's best architects. If there was one person in the world who Daniel liked and respected it was Robert Maddock. My stomach sank.\n\n\"I don't want to keep my hands off 'the girl,' \" Daniel snarled, his response a surprise to both myself and Maddock, whose shocked expression must have mirrored my own. \"I happen to quite like 'the girl'; and she has a name, Maddock, I suggest you use it. Yesterday you didn't have enough good things to say about Clara. Nothing has changed.\"\n\nMaddock stood open-mouthed and silent as Daniel strode to the mezzanine balcony to address the room below. \n\n\"Does anyone else have a problem?\" he yelled sharply. The silence was profound. Not a single person dared to breathe. \"No? Good.\" Daniel breezed past Maddock again and re-entered his office to stand beside me. He took both my hands and managed a small, crooked grin. \"I'm sorry, Clara, if anything that's been said today, by anyone,\" he paused to shoot a dark glance in Maddock's direction, \"has hurt you. You were right: my relationship with you doesn't interfere with what I do here. If anything, it challenges me to be better.\"\n\nDaniel reached up to brush a wayward curl out of my eyes. I held my breath. \"I don't want to be partner in this firm if I can't work with you,\" Daniel confessed huskily. I only half-heard Maddock's gasp of disbelief because Daniel had already leaned down to kiss me. He curled one strong hand around my waist and drew me in to press against the solid length of his body, and with the other hand he reached out and shut the office door in Maddock's face. "
    ],
    "authorname": "firstkiss",
    "tags": [
        "co-workers",
        "older man",
        "younger woman"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/i-thought-i-hated-him-ch-07"
}