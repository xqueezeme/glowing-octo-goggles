{
    "title": "M is for Masturbate",
    "pages": [
        "\"Hey buddy, how'd you like to have a chance to win a million dollars, and have fun doing it?\"\n\nJack attempted to give the guy a wide birth. He wasn't that he looked creepy or anything, but he was sure it was some kind of a scam. \"Ah no thanks,\" he said nearly stepping down into the gutter.\n\n\"You enjoy masturbating?\"\n\n\"Ok, now it's gotten creepy,\" Jack thought as the guy handed him a flyer.\n\nHe made it around the guy not daring to even look back, half tempted to just wad up the paper he'd been given and throw it away, but with his luck, some cop would site him for littering.\n\n\"Read it, don't just toss it,\" he heard from behind as though the guy was somehow able to read his mind.\n\nJack made it to the corner without incident. He'd been on his way to pick up his early morning coffee from a nearby Starbucks. Spotting a trash container just outside the door before entering he made his way towards it. At the last second he glanced at the wrinkled flyer and stopped dead in his tracks.\n\n\"Enjoy masturbating? Win a million dollars for doing it!\"\n\nThe problem was, Jack did. Especially as he was currently between girlfriends at the moment so had been doing so frequently. A young attractive looking woman came up to him at that moment however and spoke. Embarrassed, Jack crunched the paper he was holding before she could see what it said, still about to throw it away. Which is when he realized, she was holding one too!\n\n\"Thinking about it?\" she asked.\n\nFlustered, Jack felt his face grow crimson. \"No, not really. This guy just handed it to me, didn't even know what it said,\" Jack responded lamely.\n\n\"Oh, too bad,\" she smiled reaching behind him, forcing Jack to step out of the way so she could enter through the door he was still blocking.\n\n\"Sorry,\" Jack apologized once again allowing her to enter, which she did. He stood there for a moment longer, staring back at the crumpled paper, then towards the door where he could see her placing her order inside. Jack entered.\n\nHe'd stood in line waiting for his \"Mocha Latte' Grande, skinny\" spotting the girl he'd briefly spoken with sitting over in a secluded corner of the shop. Jack approached, uncertainty written in his face.\n\n\"Excuse me, but would you mind it if I joined you?\"\n\nShe smiled, \"Not at all, feel free.\"\n\nShe was attractive, but not overly so. Not the kind of woman that would turn heads more than once. But having a disarming smile and way about her that just made her average ordinary features suddenly appealing. She wore her hair long, pulled back into a ponytail, medium sized breasts that neither jumped out at you, nor caused you not to notice them either.\n\n\"Thanks,\" Jack said sitting down.\n\n\"So. You thinking about it?\" she asked pointedly.\n\n\"About what?\" Jack answered evasively, answering a question with a question. She laughed.\n\n\"Maybe you wouldn't make it through the auditions,\" she said flatly. \"You're too shy for one thing, and certainly inhibited.\"\n\nJack was truly at a loss for words.\n\n\"Did you even look at it? The flyer,\" she reminded him not accepting his 'act'. Maybe you should.\"\n\nJack took the crumpled paper from his pocket where he'd stashed it, spreading it out on the small round table between them.\n\n\"Enjoy masturbating? Win a million dollars for doing it!\" Jack read again, then continued.\n\nThe flyer went on to say that there would be ten teams made up of men and women, all carefully selected through auditions, which would continue throughout the rest of the week. Various times were included as well as the location which happened to be an old movie theatre now turned into a 'Comedy Club' that he was very familiar with. It mentioned only briefly that there would be challenges, and as those were either met or failed, teams would be eliminated until there was only one final pairing. At that time the final pairing would be given the final challenge against one another for the million dollars.\n\n\"This is for real?\" Jack said finally looking up. She was grinning.\n\n\"Yep, it is! I've already called the number to verify it. By the way, my name's Kate, though my friends call me Kay,\" she said extending her hand. Jack took it.\n\n\"Ok...Kay...Kate,\" he amended quickly feeling awkward, then silly at the double sound of her name.\n\n\"Call me Kay,\" she said easily. \"And yours?\"\n\nJack felt like a fool, like some teen-age pimply kid about to feel his first tit. Though why he felt that way sitting here as he was, he had no idea.\n\n\"Ah Jack,\" he said simply.\n\n\"Ok...Ah Jack,\" she responded with that same disarming look, and then burst out laughing.\n\n\"What's so funny?\"\n\n\"Was just thinking.\"\n\n\"About?\"\n\n\"Well, if somehow we do both manage to make it through the auditions, and dependant upon what kind of challenges we're given...\"\n\n\"Yeah?\" he interrupted briefly.\n\nShe laughed again, and then continued. \"Well, it will be the first time I've ever jacked a Jack off!\" she said giggling.\n\n\"Oh yeah...guess it would,\" and then he laughed, though his head was now filled with the image of her doing just that.\n\n#\n\nThe reason Kay was even there having coffee was because it was her intention to be amongst the first to audition, figuring it would give her a better than average chance. The first time was less than an hour from now, just a short walk further on down the street.\n\n\"I'll be right back,\" he told her. \"Don't go anywhere...I need to make a phone call!\"\n\nJack called into work informing his boss who he got along with very well that something important had come up, but not only that, he might also have to re-schedule his upcoming vacation a little earlier than he'd originally intended.\n\n\"Well?\" she asked upon his return. \"Everything 'cum' out all right?\" she asked emphasizing the word. Once again Jack felt his face flush.\n\n\"No really, I really did need to make a call. So now...I can go with you,\" he finally smiled excitedly. \"I just hope this isn't some kind of race to see who comes first or something, or last for that matter. I wouldn't win either.\"\n\n\"That's nice to know,\" Kay responded with a flirtatious look. Which then caused Jack to wonder about something else.\n\n\"You know, if that is the case, if this is some sort of a kinky race or some kind of endurance test, wouldn't a woman have a distinct advantage over a man?\"\n\nKay spun the paper back towards him. \"You didn't finish reading it, check out the footnotes at the bottom of the page.\" He did, his eyes suddenly growing wide.\n\n\"Only women with the ability to ejaculate need apply.\"\n\n\"Oh!\" Jack exclaimed suddenly, looking up into Kay's grinning face. \"OH!\"\n\n#\n\nAlthough Jack knew about it, having downloaded a few movies off the Internet, he'd never actually known, or seen a woman who could. As he and Kay made their way towards the old theatre, visions of Kay doing that filled his mind now too. In fact, he had all kinds of wonderful thoughts racing around inside his head, and an erection to match.\n\n\"Nice!\" Kay said looking down towards him. \"Glad to see you getting excited about this!\"\n\nJack nearly stumbled, taking a quick glance down at himself as he'd tripped over the curb.\n\n\"It's ok Jack,\" she leaned in whispering. \"I'm horny too!\"\n\nAs they turned the corner, they both stopped short. A line with at least thirty or forty people standing in it stood waiting to get in. \"Ah oh, maybe we should have come earlier!\" Kay said in surprise. \"Come on!\" she said grabbing his hand, forcing him to keep up as she all but ran towards the end of the line. Which for Jack wasn't an easy thing to do with a full-blown erection.\n\nInterestingly as he and Kay stood there, Jack noticed that for the most part these were all everyday average looking people. Sure, there were one or two that stood out in the crowd as appearing a little \"creepy\" as he was fond of saying. But beyond a small handful, these were people you would pass along the street, even see in an office similar to one he worked in himself, \"Or...\" he considered. \"Meet going in to order a coffee.\"\n\nTen minutes before the scheduled time, several people came out with clipboards and pencils with questionnaires. They began handing them out to everyone.\n\nA very professional looking woman in a three-piece business suit spoke, \"Please fill out these forms prior to leaving today after the auditions, provided you're still interested in participating afterwards.\"\n\nAfter that, they were invited in taking various seats within the cozy audience area while another professional looking guy, also in a business suit stood on stage with a microphone in hand waiting for everyone to be seated. After several minutes the back doors were closed and the lights came down with a soft spotlight now on stage.\n\n\"Ok, everyone...listen up! I know most of you are wondering if this is for real. I can assure you that it is!\"\n\nJack along with everyone else listened as they were told of a somewhat eccentric, to remain anonymous, billionaire who had come up with the idea while at a party. The more he'd thought about it, the more he liked the idea, finally approaching some contacts he had in the entertainment business who were willing to go out on a limb, all underground of course, and create their own little reality show around the theme of 'masturbation.' He'd gone on to say that the money was already in an account on deposit with the access codes even then held in the envelope, which he held up for everyone to see. It was of course sealed and only to be opened upon awarding the eventual winner.\n\n\"Damn,\" Jack leaned over whispering to Kay. \"This really is for real!\" he exclaimed in abject surprise. Kay giggled. \"I certainly hope so, I have every intention of winning it!\" she whispered back.\n\n\"Ok, here's how it works,\" their host began. \"We will select ten women, and ten men who will then be randomly paired. No one is allowed to be partnered with someone they know, or someone they are currently in any sort of a relationship with. Should that happen, both participants will be immediately disqualified.\"\n\nThat brought a nervous chitterling along with a few giggles from the audience.\n\n\"Over the course of a week, each team will be given two challenges to accomplish in one twenty-four hour period. One of which will be relatively easy, the other fairly difficult. As teams complete these challenges, they will return here and clock in. Any team failing to complete their combined, or separate challenges will be immediately eliminated. In addition, the last team arriving to check in will also of course be immediately eliminated. When the last team is finally determined, there will then be a final challenge against the two for the ultimate winner of 'One Million Dollars!'\" he exclaimed enthusiastically amidst a sudden roar excitement.\n\nA number of questioning hands had already shot up into the air as well.\n\n\"Before I open it to any questions, let me make one or two additional comments and see if I can't answer some of those before we begin the preliminary auditions themselves. First, you will be escorted with a cameraman at all times who will videotape your challenges. The equipment they will be using will be the type often found in security surveillance, so it will not be obvious to anyone except perhaps for yourselves that you will be on camera, nor that any of this is actually being filmed for verification and accomplishment of your challenges. Secondly, as there is some potential risk involved here, you are to be advised that should anything happen, should you be arrested, or otherwise discovered, that will be at your own risk!\"\n\nA few groans and worried murmurings could be heard amongst the audience.\n\n\"However,\" their host began once again. \"Any legal fees, posting of bail or things of that nature will also be provided by our benefactor in the event this should happen to any of you.\"\n\nThat seemed to pacify everyone for the most part, though a very small handful of people actually stood and began making their way out of the theatre.\n\n\"Well, that increases our chances a little bit!\" Kay said happily as they watched the others soon leave the establishment.\n\n\"And now for the hard part,\" their host informed everyone. \"For each of you who are willing to stay, you must first go through a rigorous challenge right here to determine if you're to be selected. Anyone not wishing to face this challenge will also be invited to leave the premises immediately!\"\n\n\"Here we go!\" Kay said sitting up even further in her seat. \"This is where I'm sure it gets interesting!\"\n\n#\n\n\"You will notice a stack of baskets,\" their host stated holding one up for everyone to see. \"As your name is called, you will be invited to come up on stage, take one of these with you as you come by them. Each has an envelope containing a hundred dollar bill, which is yours to keep once you have finished undressing whether you continue on or not from there. You will then be invited to take one of the seats at random until we have the first group of ten on stage with us. After that, each of you will be asked to openly masturbate in front of everyone else, both those in our audience as well as those on stage. A selected panel of judges will observe, make notes and comments, perhaps even ask you personal selected questions as you do, gauging your response, as well as your enthusiasm. So be mindful of that, it's important enough to go along way with the judges in making their final decisions.\"\n\nJack was nervously grateful that his name was not called amongst the first ten participants. While Kay on the other hand was wickedly delighted when hers was.\n\n\"Good luck,\" Jack told her as she excitedly stood.\n\n\"Thanks, you too!\" she beamed. \"Just remember Jack, \" she giggled turning back towards him briefly for a moment. \"You're jacking off for a million bucks...keep that in mind!\" she offered.\n\nJack allowed a small cleansing breath to escape his lips. He'd try and remember that while jerking himself off in front of a bunch of total strangers.\n\n#\n\nMost if not all appeared nervous, apprehensive save for one or two, including Kay who unabashedly sat nude upon her chair listening to some last minute instructions. Many, especially the women didn't seem to know what to even do with their hands. Some crossed breasts as though it were cold, which it wasn't. Others sat with crossed legs effectively and demurely positioning themselves against prying eyes from the audience.\n\nMost of the men Jack also noticed with the exception of one guy were still as limp and flaccid as they'd ever been. And one of the \"creep\" guys hiding his dick entirely by bending over so far you'd have thought he was waiting for a prostrate exam.\n\nWhen at last they were told to begin, Jack sat watching along with everyone else as the six men and four women began, or rather mostly began masturbating. Three guys sat there like zombies, eyes closed even though they were jerking themselves off. \"Creepoid\" just continued to look until first invited, then escorted off stage. One of the guys, like Kay, seemed to be looking and watching everyone else, obviously enjoying not only what they were doing, but seeing. One of the women finally stood and began to dress. She was quickly ushered off the stage as well. Finally, the guy who Jack termed as \"Mr. Happy Dick\" finally ejaculated, sitting back seemingly enjoying it as his spunk flew from the head of his dick actually hitting the floor. Jack was happy to see the sticky messed cleaned up shortly after the stage area was vacated before anyone else was called up.\n\nAnd then there was Kay.\n\nJack had watched as the judges mingled between the contestants, for the most part merely observing, occasionally asking questions. He watched as they stood before Kay, talking to her, but more importantly, he watched as she 'continued' to play with herself even as they did! Her fingers flicking at her exposed clit as she sat there spreading her luscious lips a part. He was amazed she could do that, and noticed too...the judges seemed to pay particular attention to that.\n\nNever once did Kay appear uncomfortable, awkward. If anything, she seemed to grow and become more and more excited, animated by the minute. As it became evident that her orgasm approached, even many of the others on stage began to notice, eyes focused, some smiling, others appearing surprised, even embarrassed as Kay cried out, giggling, laughing and then...squirting!\n\nShe all but melted into her chair, a tiny little fountain of female cream arching into a long streamer of bliss. She cried out in delirious pleasure, another, and then another of the pearly little streams leaping from within the delicate folds of her pussy, several judges stopping to watch, many making notes, nodding.\n\nJack knew then, she was a shoe-in.\n\nPerhaps it was a blessing in disguise, but watching Kay had 'lifted' his spirits, he felt his erection hard, strong and needful. When his name was called...he was ready.\n\n#\n\nThey had walked out together, holding hands as they did. \"So? What did you think?\"\n\n\"I think...watching you cum was one of the most incredible things I've ever seen!\" he told her.\n\n\"You too!\" she answered. \"Though I was worried about you at first, but when you starting slapping your dick the way you did...well that got the judges attention. None of the other guys did that!\" she giggled. \"And fuck, when you came! Boy! Did you!\" \n\nJack felt himself blushing. \"Well I owe that all to you,\" he admitted. \"Seeing you cum? Fuck! That was one of the hottest things I've ever seen before in my entire life! I think you're going to be picked as a finalist for sure!\"\n\n\"Well if I were to make any predictions myself, I think you and that model guy will probably make it. None of the judges paid as much attention to anyone else.\"\n\n\"So what did they ask you while you were sitting there?\" he wondered.\n\nKay giggled. \"Asked me if I preferred watching, or being watched while masturbating.\"\n\n\"Yeah, me too,\" he said.\n\n\"What'd you say?\"\n\n\"I told them both.\"\n\n\"Good answer!\" Kay smiled as they reached the corner where the Starbucks stood.\n\n\"Well, this is where I need to catch my bus,\" she informed him as he finally released her hand.\n\n\"Yeah, should probably head back into work anyway myself,\" Jack said suddenly feeling a bit dejected.\n\n\"Do you have too?\" she asked.\n\nJack looked at her curiously, smiled. \"Well no...not really. Why?\"\n\n\"I think maybe we should practice!\"\n\n\"Practice?\"\n\n\"Yeah...here comes my bus!\"\n\nOnce again Jack looked at her inquisitively. \n\n\"Come on, come with me,\" she urged. \"We'll go back to my place, I'll fix us something to eat. After,\" she added.\n\n\"After?\"\n\nKay reached down unzipping his fly, \"Leave it,\" she admonished him just as the bus pulled along side. \"Lets go find us a nice seat!\"\n\nShe led him towards the back, though the very back seat had a couple already sitting on it. Locating another two rows up from them, and two rows behind anyone else, Kay had Jack slide in first. \n\n\"Keep a look-out,\" she cautioned him, her hand already fishing his semi-erect prick from inside his pants.\n\n\"Shit!\" Jack exclaimed a bit nervously, but allowed her to remove his prick, which she immediately began, stroking and playing with even before the bus finished pulling back out into traffic.\n\n\"If you cum before we get to my stop, I promise I'll fix you a really nice lunch. If you don't...then you can fix yourself a P.B. & J. or something. How's that for incentive?\"\n\nHer hand on his prick, stroking it, which had been a while since anyone had, was incentive enough. \n\n#\n\nJack had just stepped out of the shower when the phone rang.\n\n\"Hello?\"\n\n\"Jack Keaton?\"\n\n\"Yes?\"\n\n\"Good morning and congratulations!\"\n\n\"Excuse me?\" he wondered thinking this was one of those sales pitches for some sort of weekend get-away.\n\n\"You're one of the finalists for the million dollars!\"",
        "\"No shit?\" Jack exclaimed excitedly, though stunned, as he'd honestly not expected it. \"I am?\"\n\nHe listened while given instructions, told where and when the actual contest would begin, and reminded that he'd need to schedule the time if he was still planning on participating.\n\n\"Oh trust me! I've already got things arranged just in case I was selected!\" he assured the woman who he remembered in the three-piece suit. He'd no sooner hung up when his phone rang once again.\n\n\"Hello?\"\n\n\"Jack?\"\n\n\"Kay!\"\n\n\"Guess what? I'm in!\"\n\n\"Me too!\" he responded happily. He heard Kay sigh a breath of relief. \n\n\"That's so fucking cool!\" she told him. \"By the way, did they tell you who you've been partnered with?\"\n\n\"Yeah, someone named Stacy?\" he said still trying to remember anyone by that name.\n\n\"Oh, I think I know who she is. Wasn't she that tall blonde with the big tits? You should be happy about that, might help,\" she paused. \"I got stuck with the fucking model!\"\n\nFor some strange reason, Jack felt a twinge of jealousy. \"Damn...sorry,\" he told her not really feeling so.\n\n\"You excited? I sure as hell am. Fuck Jack! A chance at a million bucks! And all we have to do is masturbate!\"\n\n\"Maybe so Kay, but it's the where and what we have to do while doing it that worries me!\"\n\nKay laughed. \"Don't be so worried. It'll be both fun AND exciting. You just need to keep things in focus, keep alert, and enjoy yourself. Even with Mr. Model, I'm planning on doing just that. And more importantly, I'm going to win this fucking contest!\"\n\n\"You know Kay...if anyone can. I think you probably will too!\"\n\n#\n\nThey'd been given a set of instructions, told to \"dress appropriately\" suggesting clothing that wouldn't hamper activities. No belts, underwear, or things that would prove difficult should the situation arise. As agreed, he met Kay at the Starbucks for coffee, something that had become personal now for them, looking at it as a good-luck omen, and a good way to start things off.\n\n\"Nervous?\"\n\n\"Hell yes! Aren't you?\"\n\nKay giggled. \"A little, but damn fucking excited too!\"\n\nThey soon made their way over to the Comedy Club and joined all the finalists anxiously waiting for last minute instructions along with their first set of 'challenges'.\n\n\"Good luck!\" Kay said honestly. \"Remember Jack...stay focused!\"\n\n\"Before we begin,\" their host said gathering everyone's attention. \"Unfortunately there have been a couple of last minute changes. Kay Dalton? Are you here?\" he asked.\n\nKay nervously, apprehensively raised her hand. \"Here!\" \n\n\"I'm sorry to inform you Kay,\" he began. Jack suddenly seizing her hand in his expecting some horrible turn of events. \"But your partner, Jerry Williams has backed out of the competition. Apparently his manager felt this would ruin rather than help his career.\"\n\nA smattering of boo's quickly followed. Their host laughed, settling the crowd. \"But, we do have some alternates who are thrilled they will now be joining us. Jack Keaton?\" he now asked.\n\nJack felt his stomach roll. \"Yes?\" he almost squeaked.\n\n\"Stacy Burkhoff has also been disqualified. Seems that her husband had no idea she had entered the competition. Apparently she forged her husband's signature stating that he was aware of his wife's participation in the contest. So as such, you'll now be pared with Ms. Dalton.\"\n\nJack turned towards Kay with a grin a mile wide, that was, until he saw her face. She was actually frowning.\n\n\"What's wrong?\" he asked suddenly.\n\n\"Competing against you...at the end,\" she stated. \"That's what!\"\n\nJack laughed. \"Kay? We've got a long way to go before we ever make it to that point. Why don't we first just play the game, work together, and then deal with that if and when we actually make it that far ok?\"\n\nShe smiled. \"Deal. But Jack? You need to realize something. Regardless of how I'm beginning to feel about you, and yes...excited we're now paired up together. I AM going to win this million dollars!\"\n\n\"Guess we'll see won't we?\" Jack said, and then surprised her as he slipped his hand down between her legs, giving her an affectionate caress. \n\n#\n\nInterestingly, they soon learned that of the ten teams selected, two teams were made up of two guys together, as well as another two teams with two women together. For some reason, Jack hadn't considered that possibility. The remaining six teams were male and female. They were then introduced to their \"glued to their sides\" cameramen as they were told, for as long as they were actively pursuing their challenges. Handed out the first of their \"challenge\" envelopes, that would send all ten groups out in differing directions to differing areas. Though everyone would eventually perform or do the same assigned tasks, provided they were of course not eliminated.\n\n\"Ok everyone,\" their host readied them. \"You will have exactly eight hours from now to complete your challenges and clock back in here. As you do, you will be informed as to what position you arrived in so that you may return to your homes for some rest prior to returning here tomorrow at this exact same time for your next set of challenges. Ok everyone...get ready? Get set! GO!\"\n\nLike bee's, all ten teams tore into their envelopes, then in a near perfect swarm, headed out of the theatre on a dead run.\n\n#\n\n\"Where are we going to?\" Jack asked, as it had been Kay who had opened, and then read their first challenge. \n\n\"The amusement park!\" she said laughing. \"Oh and Jack? This one say's it's 'YOUR' challenge, and unfortunately for me, the easy one.\"\n\nHe felt slightly relieved as they ran down the street heading towards his car. \"So what do I have to do?\" he asked her as they headed to their own sides jumping in.\n\n\"You get to jerk off while riding the rollercoaster...you know, the one they call Monster?\"\n\n\"FUCK!\" Jack groaned as they headed out onto the highway.\n\n\"What?\" she asked.\n\n\"Well for one...I fucking HATE rollercoaster's. And two...if that's the easy one, can you even begin to imagine what yours is going to be like. And then mine? Tomorrow?\"\n\nKay laughed. \"We have to make it through today first Jack,\" she reminded him. \"And don't worry...a rollercoaster's not that bad. They heard the snicker of the cameraman who just like they'd been told would be literally glued to their side. He'd gotten in the back seat and was still filming.\n\n\"What are you laughing about?\" Jack asked. \"I really do hate rollercoaster's. I'm apt to throw up if anything!\"\n\n\"I hope you do,\" he told them. \"It will make for some interesting entertainment for our closed-circuit audience.\"\n\n\"Fuck me!\" Jack groaned once again while Kay laughed.\n\n#\n\nThe amusement park was a half hours drive. Kay read carefully through this particular challenges rules and requirements several times. She wanted to make sure they didn't do anything that might cause them to be eliminated.\n\n\"It says here, that if you climax before the rides over, then we get an extra hour bonus time knocked off whatever time we check back in!\" Kay said excitedly.\n\n\"Little good that will do us for this one,\" Jack responded. \"It's a long ride...but not that long for one thing. And for another...I already told you how much I hate rollercoaster's! It'll be tough enough just trying to jack-off while I'm riding the damn thing!\"\n\nKay giggled. \"It doesn't say anything anywhere in the rules that we can't get you ready to 'pop' before hand!\" she said wickedly. \"Nor does it say you have to be the one doing it. So the way I see it, we'll get you nearly there to begin with, then see if we can keep you excited until we get on. With luck, maybe it won't take too much effort, and I'll be the one playing with you the whole time. How's that sound?\"\n\nSuddenly, it didn't sound half-bad. \"OK,\" he grinned. \"That just might work!\"\n\nThey hurriedly made their way to the 'Monster', David, their cameraman following closely behind them. As there was a restroom facility close by, Kay had Jack check it. There was only one other guy using the urinal. \"Haven't got time to wait,\" she told him. \"Lets go!\"\n\nThey ran in, ducking into one of the stalls before the lone guy inside was even aware that a woman had entered. As quietly as she could, Kay drew Jack's prick out, surprisingly hard already...and began sucking it.\n\n\"Holy shit!\" Jack moaned a bit too loudly. \"You never said anything about...\"\n\n\"Shhh!\" Kay warned still sucking him. \"There's no rules about this either, except for on the rollercoaster.\"\n\nIt didn't take long, Kay apparently was good at nearly everything she did. \"OK...I'm pretty fucking close!\" he warned gritting his teeth. \n\n\"Then lets get to the ride!\" \n\nOnce again they dashed out of the restroom just as a group of teenage kids entered. \"Hot damn!\" one of them spoke as Jack and Kay came flying out. Jack didn't dare look down at himself, he knew the front of his pants were tightly stretched over his bulging cock.\n\n\"Just stay behind me as close as you can while we stand in line, don't worry...I'll take care of everything!\" Kay said excitedly.\n\nAnd she did. Luckily it wasn't busy, so the line wasn't very long at all. They stood waiting to get into the next car, Jack standing pressed closely behind Kay who nonchalantly stood in front of him, hand down and behind her as she continued petting and stroking his dick keeping it hard and excited beneath his short pants.\n\nWhen at last it came their turn to board, David climbed into the seat in front of them grinning evilly as he continued filming their adventure. Even before the car began moving, once the attendant had walked by checking that their harnesses were secure, Kay released Jack's prick, immediately stroking it. \"You getting all this?\" she asked directly into the camera.\n\nAll David did was nod his head and smile.\n\nThey began the long upward climb towards the first hair-raising drop that would send them racing downwards in a sidewards dive before spinning in the opposite direction through two quick loops, and then what was affectionately known as the 'cork-screw'.\n\n\"Oh fuck!\" Jack said as they climbed.\n\n\"Just relax! Concentrate on what I'm doing, how it feels,\" Kay said stroking Jack's prick smoothly up and down, up and down. \"Just close your eyes...don't even think about the ride, just think about this...think about how good it feels, how nice it feels to have me stroking you, hand-fucking this gorgeous hard cock!\"\n\nJack was barely even aware they'd already toppled over the crest rapidly gaining speed as they tilted sideways into the first of several torturous dives. Keeping his eyes closed just as she'd told him, it was easier. And...the sensation of the cool air rushing past, the feel of it on his exposed cock had an interestingly erotic affect as Kay continued stroking him, pumping his cock furiously now up and down.\n\n\"Come for me baby...let this fucker squirt for me. Shoot all that marvelous juice right into my fucking face!\" she was literally screaming.\n\nEven David groaned pleasurably hearing that one.\n\nThey had made it through nearly three quarters of the ride without Jack's sicking up. And to his surprise, he felt the first bubbly tingle of his orgasm's approach. \"Oh fuck! Yeah baby! Now! Now!\" he cried out in complete surprise.\n\nKay was laughing hysterically as the cream from Jack's prick exploded, disappearing almost immediately as they went into a series of vicious twists followed by a complete roll going into the last dive. \"You are getting all this yes?\" she asked once again. \n\n\"Yes!\" came the simple reply. \"I am!\"\n\nTheir section of cars came screaming into the station. Jack hurriedly fumbled with his prick putting it away just in the nick of time as the operator's began unlocking the doors allowing their exit. Jack laughed, almost speaking, then closed his mouth as one of the attendants stood, opened their door and froze while looking at Kay as she stood up.\n\n\"Enjoy the ride?\" he asked suddenly grinning.\n\n\"Yes, very much...thank you!\" Kay answered, then all but pulled Jack in a hard run down the exit ramp.\n\n\"Ah...you'd better take five to go into the women's restroom he told her.\"\n\n\"Why?\"\n\nJack burst out laughing, as did David. \"Cause honey...you got a natural cum-part sitting on top of your hair!\"\n\nKay turned towards the cameraman. \"I suppose you got that too yes?\" And again, he nodded.\n\n#\n\n\"Ok, open the second envelope!\" Jack pressed, now feeling giddy as well as excited. \"What do we do next?\"\n\n\"Bumper cars!\"\n\n\"Bumper cars? Fuck Kay...how the hell does this one work?\"\n\n\"Easy...you drive, I play. Just try not to hit anyone if you can, and stay away from everyone as much as possible!\" \n\nThe camera guy had already scouted out a location where he could stand and follow their antics inside the ride. \"Just make sure you come by me several times so I can film you,\" he warned. \"I need at minimum ten seconds of pussy touching, or you fail this particular challenge.\"\n\n\"Shit...ten seconds in a ride like this is an eternity!\" Jack stated.\n\n\"Like I said Jack...you got the easy one today!\" Kay reminded. \"Ok, let's do it!\"\n\nShe had worn a simple short skirt zippered along one side. Just before climbing into the bumper car they'd been given, she twisted it, bringing the zipper around to in front, unzipping as she did. She looked carefully over towards the ride attendant who at the moment was busily helping someone else climb inside their own car. Close enough, without too much risk, Kay bared her pussy facing towards were David stood filming them. She gave herself several quick strokes through the passage of her quim until Jack spoke forcing her to close her skirt, sitting down.\n\n\"He's coming!\"\n\n\"I should have gotten at least two or three seconds for that bit of pussy play,\" she said hopefully. \"Now...just make sure you drive this fucker as often and as quickly as you can towards David, I'll make sure he gets what he needs as you do!\"\n\nWhen the ride actually began, it was a lot tougher than Jack thought it actually might be. With so many bumper cars slamming into one another, chasing one another around, Jack was forced into taking a series of time-consuming detours before freeing himself from the pack, making a mad long dash along the side.\n\n\"We're gonna have to risk it some!\" Kay realized, needing to accumulate some time. She'd already prepared herself, flipping her skirt completely open as they ran down along side one stretch of the arena, right past the rides operator. Luckily for them, the girl manning the station took no notice of them as they passed, content to be looking ahead of them where most of the action was taking place. Jack even slowed their car, trying to squeeze as much time in as he could as Kay played, spreading her pussy, fingers furiously working her slit as David stood at the far end in the corner filming, with a welcomed relief 'thumbs up' as they passed. \n\n\"You need three more seconds!\" he shouted out at them as they screamed by. It wasn't a lot, but they soon found themselves being battered by a group of driver's intent on hitting anyone and everyone.\n\n\"Ok, hang on Kay,\" Jack told her. \"I'm putting this fucker into a spin if I can, and when we come out of it...we should be right in front of him, so be ready!\"\n\nJack braked, then yanked hard on the steering wheel just missing another of the cars intent on ramming into them. Sure enough, as they came out of the move they were in front of David's camera once again. Kay had anticipated the move, her skirt once again fully open, pussy clearly displayed as she inserted not one, but two fingers inside herself as they swung by. The feel of power suddenly leaving the vehicles left them coasting a short distance away. Kay quickly re-zipped her skirt, stepping out moments later.\n\n\"God...did we do it?\" she asked.\n\nHurriedly they made their way out of the ride over to where David was standing.\n\n\"Well?\"\n\nHe grinned. \"Congratulations, you two met both of your challenges. Time to head back!\"\n\n#\n\n\"Jack and Kay? You're team number three!\" Their host said in greeting upon their return. \"I'm assuming you'd like to bank the hour you earned for getting Jack to climax during the ride yes?\"\n\n\"Yes!\" they said in unison. \"Ok, you two will go out third tomorrow exactly at this time. Congratulations to you both...now go home and get some rest because tomorrow I am sure will prove to be another very interesting day!\"\n\n#\n\nThey of course arrived well ahead of their appointed time to leave. Watching as the first group, Kit and Preston two of the gay guys headed out first with a little over an hours lead over the second group, and just a bit more times lead over Jack and Kay. They had come in only minutes behind the second group, so they'd be leaving shortly after them.\n\n\"Whew...wonder what's in store for us today?\" Jack asked nervously. Now down to eight teams with one team failing to accomplish their challenges, and the last one to arrive still being eliminated.\n\nThey were soon given their envelope, though unable to open it until their time actually began. The second group quickly headed out, Kay and Jack anxiously counting down the seconds until they could.\n\n\"Ok, open it!\" Jack yelled. \"What's it say?\"\n\n\"Oh God!\" Kay moaned.\n\n\"What? What?\"\n\n\"Baskin Robins!\"\n\n\"Ice cream?\"\n\n\"Yeah...ice cream. But wait until you hear what it is we have to do!\"\n\n#\n\nWith David once again riding along in the backseat, they drove towards the closest Baskin Robins they could find. Kay had read, and then re-read the challenge carefully, making sure she understood exactly what was required of them.\n\n\"Shit...and this is the easy one?\" he whistled. \"God...can you imagine what mines gonna be like then?\" he added worriedly. \n\n\"Yeah...and this one could really kill us on time too. A lot depends on how busy they are, how much privacy we may or may not have in order to pull this one off. And besides...it's gonna be cold too!\" she said already feeling a shiver just thinking about it.\n\n\"So...it really does say we have to make you into a banana split huh?\"\n\n\"Yep! Complete with a cherry on top!\" she added. \"And then...and then...I have to play with myself using all the ice-cream, whipped cream and toppings for five full seconds!\"\n\n\"Not to mention the banana,\" David spoke from the back seat.\n\n\"You would have to mention the banana!\" Kay said shooting him a look.\n\nJack laughed...\"Focus Kay, focus. Remember? We'll just need to time it, hope for a little luck, and turn you into a deliciously sweet desert as quickly as we can, and move on to mine.\"\n\n\"Focus Jack, focus,\" Kay said as Jack's thoughts suddenly turned to horror.\n\n#\n\nThey had placed their order noticing the puzzled look on the clerk's face who stood there serving them.\n\n\"We like to make it ourselves,\" Jack lamely told her. \"And we're happy to pay extra for it that way,\" he added. \"A scoop of vanilla, a scoop of chocolate, a cup of whipped cream, and a cherry.\"\n\n\"Don't forget the banana,\" Kay giggled actually blushing, which in turn made the clerk behind the counter stare even harder at the two of them.\n\n\"Yes, one firm hard banana,\" he added as Kay reached over to pinch him.\n\nMinutes later they walked outside taking one of the available tables. And though it wasn't all that busy, it was just busy enough that there was no way possible they could turn Kay's pussy into a banana split without being seen.\n\n\"Fuck! The ice creams beginning to melt too!\" Jack said nervously. \"If and when...\"\n\n\"Not IF Jack...but when yes,\" Kay interjected.\n\n\"Ok, when we finally manage to do this, you're gonna be a mess!\" \n\nThey sat for the better part of an hour, several times just about to attempt their decadent little desert when someone would either come, or leave, keeping them from doing it. \"You sure it says that?\"\n\n\"I'm sure. I read the rules a number of times already,\" Kay informed him. \"It specifically says we have to make me into a banana split at one of the establishments table areas.\"",
        "Jack thought. \"Doesn't say anything else huh?\"\n\n\"Nope...just that.\"\n\n\"I have an idea,\" Jack said suddenly standing up. \"Here, grab your end and come with me.\" They stood as she and Jack walked the table around to the side of the building. \"Nothing in the rules say we can't do this,\" he told her.\n\nDavid stood filming the entire time.\n\n\"Ok, now hurry!\" Jack exclaimed as Kay removed her skirt, lying crossways along the table as Jack hurriedly turned her pussy into a banana split. \"Go baby go!\" he almost yelled as Kay began rubbing, smearing, and using the banana to masturbate with.\n\n\"Time!\" David called out informing them of their success.\n\nKay jumped off the table just seconds before anyone came outside. Sitting down, still unable to dress, she sat as though waiting as Jack stood in front of her, blocking the view of the driver who then slipped behind the wheel of his car, finally driving away.\n\n\"Whew! That was close!\"\n\n\"No shit!\" Kay said throwing her skirt back on without even bothering to clean up until she had.\n\n\"Now what?\" They opened the second envelope. Kay laughed.\n\n\"Fuck!\" Jack said before hearing it.\n\n\"We go horseback riding, bare back!\" Kay stated. \"This should be interesting!\"\n\nThey quickly drove to the stables where they had a standing reservation waiting for them. \n\n\"You an experienced rider Jack?\" Kay asked. \n\n\"Ridden some...but never...naked,\" he said re-reading the rules. \"You sure this is what they meant by bare-back huh?\"\n\n\"Yep...says right here, you have to ride naked...and masturbate as you do for a minimum of ten minutes, or until you cum at least.\"\n\n\"What about you?\" he asked.\n\n\"Doesn't say anything about me,\" she said reading once again. \"You think they'd let us ride the same horse together?\" he asked hopefully.\n\n\"Hmmm, I don't know...maybe. Why?\"\n\n\"It might help,\" Jack grinned. \"You sitting behind me?\"\n\n\"Naked too? You know it doesn't say anything about me having to do that.\"\n\n\"I know.\"\n\n\"Ok,\" she grinned. \"Least we can do is ask!\"\n\nIt took some convincing, but eventually the owner agreed to let the two of them go out together on the same horse, especially as they wouldn't be going for very long, or for very far. In addition, Jack had paid the guy an extra hundred, the one he'd gotten for just taking his clothes off during additions for allowing them to even do that.\n\nDavid followed along on his own horse, camera in hand filming everything.\n\nAs soon as they'd ridden out of sight of the ranch, he and Kay quickly stripped off the few clothes they were wearing, handing them to David for safekeeping. Remounting their horse, Jack sat in front holding the reins with Kay sitting behind, holding onto him.\n\nShe began stroking his hard thick cock slowly up and down in perfect tempo with the slow easy gate of their horse.\n\n\"Damn...this ain't half bad,\" he stated as Kay continued stroking, playing and working his penis. \"Not bad at all!\" he said smiling.\n\n\"Ah Jack? Before you get too lost in this, we're on a time clock, remember?\"\n\n\"Oh...yeah,\" he said sheepishly. \"Ok baby, giddy up!\"\n\nThey went about a mile further before turning their horses around heading back, Jack was beginning to feel the \"tingly\" as he called it, Kay's hands expertly milking him as they rode, though the press of her nice firm tits against his back was certainly helping.\n\n\"Shit...you know what?\" Kay said.\n\n\"What?\" Jack just managed teetering on the edge now.\n\n\"I think I'm gonna cum too!\" she said in surprise. \"Think you can make this horse bounce just a little more for me?\"\n\nJack put the horse onto an even brisker gallop, just as he felt the semen fly from the head of his prick as David rode along side, smiling filming giving each of them a congratulatory thumbs up.\n\n#\n\n\"Jack and Kay? You're team number six!\" They were informed.\n\n\"Shit!\" Jack exclaimed. \"The damn ice cream really hurt us!\"\n\n\"Yeah, but we're still in it honey, and tomorrows another day. We'll do better, now come on, lets go back to my place. There's another horse I'd like to ride.\"\n\n#\n\nIt was now down to just three teams. Jack and Kay had made up considerable time with yesterdays challenge, one that was easier for both of them. They'd had to drive thirty miles in a rented pickup. Jack drove on the way down, with Kay sitting in the open back of the truck itself masturbating. Disallowed from going over the speed limit, a number of cars passed, many of which had no clue as to what she was doing, though curious perhaps as to why she was sitting back there instead of up front with Jack. It was the eighteen-wheelers that passed that provided her the most difficulty, though she continued masturbating as David sat in the back with her filming the entire thing. On this one, she not only had to climax, but she had to show she was able, and could squirt when doing it. To Jack's delight, she managed to do just that.\n\n\"Ok baby...my turn to drive,\" she informed him. \"And your turn to jerk off for the camera.\"\n\nThough Jack had found it difficult, having to cover up repeatedly as one car after another passed them, eventually he managed to climax before reaching the turn-off as well as the deadline for successfully achieving their challenge.\n\n#\n\n\"Just one more day,\" Kay told him that night as they snuggled up in bed together. \n\n\"And just two other teams to worry about now too!\" he added.\n\nThough both of the gay teams had been eliminated, they were still up against one of the women's teams, and another young couple who'd pretty well dominated the last couple of days, arriving in first both times.\n\n\"We're going to have to find a way to beat them!\" Kay said. \"No matter what challenges we face tomorrow Jack, it has to be balls out! Literally!\" she added. \"I've no intention of losing this thing, not now. Not when we're this close!\"\n\n\"All we can do is give it every thing we've got baby. And I promise you...for you, I will!\"\n\n#\n\n\"Sky diving?\" Jack stammered. \"You've got to be kidding me! Skydiving? And these guys who'll be taking us tandem with them are in on it? Seriously?\"\n\n\"Money goes along way Jack,\" Kay told him. \"And the fact that all three teams are doing this one together as the final challenge makes it all the more difficult. Bottom line is this, we jump out naked from an airplane for one. Two, we masturbate during a free-fall for another...third, anyone climaxing before hitting the ground receives bonus time. And right now, we need all the extra time we can get jack!\" Kay said worriedly. \"We're still behind almost an hour! So...unless one, or both of us manages to cum before landing, chances are, we'll lose. Like I said yesterday sweetie, this one really is balls out this time!\"\n\n\"Fuck...you can say that again,\" he told her.\n\n#\n\nWearing their own head-cameras this time, it was up to each of them to record their activities, especially if able to reach and achieve orgasm before landing. Jack was at least grateful for the fact that his 'buddy' was a female, who'd be in charge of the free-fall, opening the chute, and the emergency chute if necessary, which Jack didn't even want to think about. But the thought of being able to so openly masturbate while doing so truly had him bothered. Rollercoaster's had been bad enough. But now this!\n\nAll three teams took off in the same plane together. All naked, all seemingly anxious as they waited their respective turns to jump. Thankfully, Jack discovered this was everyone's first time jumping, so no one had an edge there. But whether they would somehow pull off this final stunt and emerge victorious was a whole different matter altogether!\n\n\"Jack?\" Kay said gathering his attention towards her and off his very limp flaccid looking cock.\n\n\"Yeah?\"\n\n\"Do what you did on the rollercoaster, just don't think about it, don't even look if you don't want to. But make sure...whatever you do, that camera has to film you jerking off...and more importantly, cumming too if you can manage it. It's important Jack, you need to climax, it might be our only chance!\"\n\n\"You actually think you'll be able to do it in that amount of time?\" he asked seriously.\n\nKay smiled. \"Honey...that may be the only advantage on this one that we do have. I'm so fucking wet now just thinking about jumping like this!\"\n\nJack actually laughed. \"Only you could get turned on thinking about jumping out of an airplane, and squirting your pussy juice all over the ground somewhere below you while doing it,\" he told her.\n\n\"That and for a million dollars! Remember?\"\n\nHe was surprised when the thought of that actually started to make his dick hard.\n\nJack stood in the door of the airplane with dick in hand already stroking it. According to the rules, as soon as they were allowed to stand there just prior to jumping, they could begin. As odd as it felt to be attached to a fully clothed woman while he himself was naked, sporting an erection, it was nothing in comparison to the overwhelming fear he had as he stood looking at the ground below that seemed to be absurdly far away for one. And for another, that he was going to somehow have to find a way to actually climax before landing if they were to have any chance of winning this thing at all. All he wanted to do at the moment was throw up, and that was a long ways from cumming.\n\nKay and her instructor stood behind, she too already fingering her pussy, though unlike Jack, seemingly enjoying it as she furiously worked her clit much to the delight of the onboard camera crew.\n\nJack heard the warning buzzer. \"Five seconds!\" his diving companion warned. \"Four...Three...Two...GO!\"\n\nJack leapt into nothingness, and for a moment thought he was going to throw up, that or black out. Fear seized him momentarily, panic taking over. Then he heard Kay's words inside his head. \"Focus Jack...focus. Remember, you're jerking off for a million bucks!\"\n\nAnd so he did.\n\nAmazingly, after the reasonably short free-fall, as soon as he felt the chute finally open, and their horrifyingly quick descent finally slow, he found himself actually enjoying the sensation. And with it, his erection suddenly growing stiffer, harder in his hands as he began masturbating with renewed determination. He was also very careful to ensure his head-camera was indeed filming himself as he did, which he could see through the tiny monitor that half-wrapped around the side of his helmet so he could see what the camera was seeing.\n\nHe took a quick brief look around, spotting Kay just above and off to the right. It was a deliciously amazing sight when he did. There she was, suspended mid-air, legs spread, hands busily working between her legs.\n\n\"Focus Jack, Focus,\" he told himself as he looked towards her, smiling. And felt the first delicious tingle of orgasms approach.\n\n#\n\nStepping up to their host after landing, they stood waiting patiently to hear if they'd succeeded or not.\n\n\"Kay and Jack?\" I regret to inform you, you've finished second,\" he announced.\n\nJack felt himself go limp, knew without even turning to look at her what Kay must be feeling.\n\n\"However...\" their host added, now suddenly smiling. \"Both you as well as Kay managed to climax before landing. Neither of the other two teams were able to accomplish that. And because of that...with the added bonus time allowed, that places the two of you into first place! Congratulations! You will now go against one another for the million dollar prize!\"\n\n#\n\nHe and Kay stood hugging one another joyously. \"When?\" Jack finally asked after a few moments of congratulating one another.\n\n\"Two hours from now,\" their host informed them. \"Back on stage where this all began. Just the two of you in front of a jam-packed audience! How's that sound?\"\n\n\"Fuck!\" Jack moaned as he heard Kay burst out giggling.\n\n#\n\nTwo hours later they were sitting on stage though upon a very large, very comfortable couch...nude.\n\nThe theatre was packed. They'd both been given a set of instructions with very specific details regarding their final challenge. They were to sit side by side, masturbating one another. The first one to climax would be of course...the loser. At no time could either one remove a hand from the other. As long as a hand was on the other persons body at all times, it didn't matter where it was. As long as at least one hand was on at all times. A tricky condition to be sure, but even more problematic for Jack, though certainly not a premature ejaculator, he seriously doubted he had the same kind of willpower and determination that Kay had. Especially when what it all boiled down to was a million dollars!\n\n\"Ok...regardless how long it takes, the two of you will remain here until one of you reaches orgasm? Understood?\"\n\n\"Yes!\" Both Jack and Kay answered.\n\n\"Good luck to you both then. And so...for a million dollars Jack and Kay...start masturbating!\"\n\nAt least they weren't total strangers, or Jack would have been at an even bigger disadvantage than he felt he already was. He at least knew a few of Kay's 'sweet-spots' things she liked, how she liked being touched. And so he began to use those. But likewise, Kay also knew him pretty well too. Unlike as many might expect, she didn't just simply start jerking his cock up and down rapidly. That...he could take. For some reason, too much of that and he could be come numb, losing sensation. No...Kay knew him well enough to know that he liked it, preferred it actually when she stroked him softly...slowly at first.\n\nAnd so she did.\n\nBut just as she knew his weaknesses, wants...he too knew a few of hers as well. He knew Kay loved having her nipples toyed with, especially as he merely petted, stroked her fur-lined pussy rather than assaulting it, or even making any attempt to directly touch her clit. No...like he, she found the pathway to orgasms approach far sweeter, far more intense, and actually quicker when Jack aroused her beyond the point of being able to withstand it any more.\n\n\"You fucker,\" she moaned half seriously. \"You know how much I like that,\" she hissed as Jack twiddled her hard extended nipple, his fingers spreading into a 'V' as he continued strumming her passage without quite entering, enclosing his fingers briefly though frequently around her blood engorged clit.\n\nBut though Jack felt some encouragement at her audible sigh of pleasure, she too was driving his arousal constantly upwards. Capturing the head of his prick between her index and middle finger, she used her thumb to gently circle the tip, all the while holding him, this way, softly squeezing, until finally coaxing the first pearly drop of arousal from the head of his penis.\n\nFrom overhead, camera's panned in for close-ups, providing the audience with an even greater view than what they were seeing. Audible gasps, groans and even whispered murmurings could be heard as the excitement began to build throughout the entire theatre, and not just on stage.\n\n\"You like the way I stroke your cock don't you baby?\" she suddenly spoke. \"You like the way I play with it...making it feel good, making it all slippery, wanting to cum for me, to spurt all that hot delicious juice all over me, all over my face, my tits and especially my pussy!\"\n\nGroans and moans could be heard all over the audience. Obviously the words now being spoken were just as easily heard as the decadent close-ups now revealed as they continued torturing one another with their hands.\n\n\"Yeah I do,\" Jack said catching her off guard momentarily. \"But you also like the way I'm petting your pussy, that precious little clit just begging for me to suck it, to lick it...to hold it between my lips while my fingers stroke inside you, fingering you just like this!\"\n\nA deep groan escaped Kay's lips, her head momentarily tossed back as Jack's fingers finally entered her for the first time, his middle finger now crooked inside her, the pleasure spot now directly stroked, the palm of his hand riding up high enough to gently graze her clitoris simultaneously as his fingers worked their magic on her aroused flesh.\n\nHe felt her thumb suddenly increase tempo, the ridge of his prick just beneath the head suddenly being strummed like the strings of a guitar.\n\n\"Oh fuck,\" he allowed without thinking. Somehow gathering the willpower as she continued to tease the supersensitive head of his prick. \"Oh you beautiful cunt you, yeah that feels good...your hand on my cock feels damn good, but so does my finger inside you pussy...and now, inside your ass!\"\n\nKay was as liquid as it was possible for her to be. Rivulets of her female cum-cream ran in tiny streams from her pussy lips, soaking his fingers which he now began using to encircle the tiny bud of her ass, coating it, lubricating it before easing just the tip of one finger inside.\n\nJack felt her free hand suddenly cup his tight balls, kneading them like bread, stroking them gently, now urging the desire that began to tingle deep within the depths of his soul.\n\n\"Cum for me baby,\" she purred, cum hard for me. Splash all that hot sticky cum all over my face!\"\n\nJack spotted more than one couple in the audience who where now openly masturbating themselves, or in many cases one another. Even that vision hurt rather than helped as he quickly averted his eyes partially closing them. He could feel his climax approach, knew the warning signs that would soon have him arriving at the point of no return. He had one last card to play, or all was lost, and he knew it. It might surprise some...probably most, but it was something he'd inadvertently discovered during one of their nights together.\n\nStill keeping one hand upon her breast, her nipple gingerly caressed as he continued to lightly thumb it, encircling it, he removed his finger from her pussy, lifting it upwards and then placing it upon her own lips. There he began smearing the fragrance of her femininity, her own want, need and desire. She sucked his finger in as though attempting to keep it there, disallowing him from doing that again. But he did. Again, his hand down between her legs, now directly stroking her clit in deliciously slow circles, a quick slip of his finger inside her, then up again once more to spread the coating of her lubrications around and upon her lips. He felt her body shake uncontrollably, felt it tense, felt as well as heard her as she reached nearer and nearer the edge of ecstasy and bliss that she fought so hard now to keep from reaching.\n\nJust as he was.\n\nToo little too late perhaps, as the first sign of his surrender began to manifest itself. Trying to stave off the explosion, no longer possible. Grimacing in near pain as he felt his cock suddenly strain, suddenly expand...the first jettison of his spunk already building to explode from the tip of his cock.\n\nKay, removed her hand and then came. Jack spun towards her in shocked surprise, even as his prick lurched, the first hard-felt jettison of his cream skyrocketing into the air. Kay's hand once again upon him, now jacking him softly, slowly...purposefully just as he liked, just as he loved and enjoyed. Kay, her hand now holding his against her, gyrating obscenely as her pussy exploded, the fine misty spray of her joy covering his hand, coating it as she cried out deliriously, her eyes now locked with his as she came, came looking at him, came as he continued looking at her.\n\nNothing else mattered, nothing else existed. For a moment, all that was, was them.\n\n\"Congratulations Jack, you're the winner of one million dollars!\" he heard moments later after both of them were given time to recover their senses, slowly gradually as had many within the audience also needed to do.\n\n\"Why Kay why?\" he asked. \"You had me! You KNOW you had me!\" he questioned her.\n\n\"Because I realized...I wanted, needed you more than I needed a million dollars,\" she told him. \"I wanted you to know, just how much you mean to me.\"\n\n#\n\n\"Kay? Jack?\" A voice suddenly came from somewhere over a nearby loud speaker. \"This is Robert K. Preston speaking. I want to thank you both for your erotically powerful efforts. You have certainly fulfilled my wildest expectations and enjoyment during this competition. And just to prove how much I do appreciate it, I am happy to inform you, that you are 'both' winners of the grand prize of One Million Dollars!\"",
        "They sat staring into one another's eyes. As exciting as it was to learn they had both won, in that moment it hardly mattered. They smiled, seeing in one another something that hadn't been there until now.\n\n\"So what are the two of you going to do now?\" came their host's question as he walked up beside them.\n\n\"We're going to Disney Land!\" Kay said giggling.\n\n\"The hell we are!\" Jack said drawing her back into his arms. \"We're going home...and fuck!\" "
    ],
    "authorname": "Many Feathers",
    "tags": [],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/m-is-for-masturbate"
}