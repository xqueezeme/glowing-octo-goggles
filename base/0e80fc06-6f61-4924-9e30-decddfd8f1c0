{
    "title": "It's Who You Know Ch. 06",
    "pages": [
        "---\n\nTyler\n\nThose few weeks of 'living safe' were a drag. I ran out of interesting things to cook, no matter how many recipes I googled. I didn't eat spicy food so that halved everything at least. When I was regularly bottoming in sex I just wasn't going to risk spices. Sometimes Darren could go so hard and rough I needed a few days' break anyways. Especially if he wanted me to stay tight. Jesus.\n\nWe had a lot of sex. It was one of the more entertaining things to do.\n\nZack made a speedy recovery and I wasn't surprised. I think he demanded some kind of new respect at the workplace, like he could just push into a queue at the canteen if he wanted. He was like a kid who everyone avoided on the playground now. I kept forgetting that him being a hardnut wasn't normal to everyone else.\n\nAmelia was impatiently waiting for his rib to get better. After the initial horror and worry was over, it dawned on her that her man had taken on four guys, and essentially won. Her husband was a fucking stud. One lunchtime when he had that goofy grin on his face and she just raised an eyebrow at him, I knew she had finally given him the loving she thought he deserved.\n\nWe had a legitimately finished drone in the labs, and we flew it around like kids at Christmas, trying to see how hard we could crash it until it broke. We weren't pissing around - it was a real test. Maybe just a very fun one. It felt good to report up to Darren's office with the news, and invite him to see it.\n\nPeople were clueing in to our relationship. I'd never felt so proud of something in my life. I wanted everyone to know I was with this man. He was mine. His hitching chuckle that made his chest bounce. His beautifully trimmed bearded jaw, his perfectly straight hair. How he looked so dapper in a suit. Nobody knew what he looked like beneath those clothes, but I did, and it was amazing.\n\nHe got out of my car every morning, and he got into it every night.\n\nSummer was drawing to its end. There'd slowly be less mosquitoes, that September flux of craneflies buzzing everywhere instead. The year was going surprisingly fast, and yet it felt like so much had happened.\n\nThere were still some tensions beneath the surface Darren, but he seemed to get over his rough patch and relax again. I couldn't judge him for it. I didn't know how anyone managed to live with a case like that hanging over their lives. He only seemed to be truly happy whenever he forgot about it.\n\nWe didn't hear from Jackson in weeks, so life went on.\n\nAt some point I almost couldn't remember why we were 'living safe' in the first place. We first broke it when we went out to eat with Zack and Amelia. A second time when Darren was invited out, surprisingly, by Marcus. Who was also supposed to be 'living safe'.\n\nThey were hilariously awkward when they talked. It was like Marcus was trying really hard to accept that his cousin was gay, but couldn't. He kept looking between us, as if his brain was short-circuiting every few minutes. His wife, Kate, was much more laid back and friendly, and we sat trying not to laugh when Darren and Marcus kicked off into a petty argument, sounding for all they were worth, like a pair of 12 year olds.\n\n\"Have you ever gotten along with him?\" I asked once we were driving home.\n\n\"Nope.\"\n\n\"He seems a bit of a twat.\"\n\n\"Youngest spoilt brat syndrome, all his life.\"\n\n\"Do you actually get along with anyone in your family?\"\n\nHe sighed. \"I used to get along great with Jamie. Before the accident.\"\n\n\"Sorry.\"\n\n\"What, I can never talk about it?\" It was good to see him smile. His wakings from the nightmares about it had chilled me to the bone. \"Andy was always so much older, like an adult when I was still a child. I saw him a lot, since he was running business with my father, but he was just like another authority figure. Never had problems with Adrianne, even if she was a right bitch when she was fourteen or so. I just can't do it with Marcus, however much I try. We've never gotten along.\"\n\n\"How come you were an only child when your aunt popped out so many?\"\n\n\"Because my mother died giving birth to me.\"\n\n\"... Holy shit. I am so sorry.\" Why the fuck hadn't I known this sooner?\n\n\"Why? I never knew her.\"\n\n\"Jesus Christ, Darren.\" I had never heard his mother mentioned in conversation, ever, yet hearing that she was dead was still a shock.\n\n\"I don't have a lucky family, you know this.\" He grinned at me. \"When am I gonna meet yours?\"\n\n\"Oh, erm.\" I hadn't really given thought to that. \"You probably don't want to.\"\n\n\"Why?\"\n\n\"My sister still lives like a chav, my dad is a grumpy git, and my mum's not right in the head.\"\n\n\"And you think that's worse than mine? You think anything can be worse than my uncle?\"\n\n\"You're gonna hear how many 'likes' and 'innits' my sis fits into a single sentence and want to rip your ears off.\"\n\nHe chuckled. \"Big loop earrings?\"\n\n\"Yup.\"\n\n\"Hair scraped back into a ponytail like a facelift?\"\n\n\"Yup. She's a walking stereotype. I dare you to decipher one of her texts.\"\n\n\"Oh God, let me see.\"\n\nI pulled out my phone and brought up one of the conversations I'd recently had with my sister, handing it over to him. I got to enjoy his laughter pretty much the rest of the drive home.\n\n\"And she's twenty-five?\"\n\n\"The thing is, to be fair, I don't think I was much better two years ago, either.\"\n\n\"It's comedy gold, your perfect grammar against this.\"\n\n\"To give it to my family, I think we're pretty hilarious at Christmas dinners and shit.\"\n\n*\n\nWe finally decided to go out, the two of us. It was the 1st of September. I was refilling my petrol tank when Darren suggested it, leaning out the window. Diana, that friend who owned the restaurant where we'd met, was wanting to know where the hell he'd been.\n\nI had no objections.\n\nMy whole relationship with Darren was associated with the hot and sweaty summer of that year. I was curious how it would be once the weather got colder. I hadn't seen his winter wardrobe yet, but I'd got some glimpses of leather jackets that made me excited. Why was this man so damn suave and attractive?\n\nHe looked exactly like he'd done on our first date - loosened work clothes, black waistcoat over his shirt, hugging his body. We sat at the same window table. I was suffering so much nostalgia, and even Tracy came over to serve us.\n\n\"So,\" she teased. \"Are you getting married?\"\n\nDarren sighed and rubbed his temple. \"Tracy.\"\n\nNights out like this, with just the two of us, had been the norm for so long. Now it felt like something special and rare. Darren did his typical routine of switching his phone off and leaving it face down on the table. I had a WhatsApp group from work blinking away on mine, too, so I followed suit.\n\nHis flirting looks, his legs rubbing against mine beneath the table. I was getting all fired up again, yet at the same time felt so familiar with him, that it was this warm glow in my heart.\n\nWe were there for a couple of hours, well into dark. A part of me was content to stay longer, a part of me couldn't wait to get home. Maybe we could just do something in the backseat of my car again, in loving memory. It might sound strange, but I felt like my car was an important part of our relationship. It and Darren just went together in my head. He owned that passenger seat.\n\nHe had been watching me drive quite closely recently, and I wondered if he wanted to try behind the wheel again. Preferably not hitting over a hundred miles an hour and drifting turns. I really wanted to help him get over his car anxiety. As much as I loved how he relied on me for lifts, I knew it'd be good for him to get some of that independence back, where he could take himself the places he needed to go.\n\nWe cuddled on the sofa-seat while he finished his wine, but I bit his ear before he reached for his phone.\n\n\"Should we go?\"\n\nHe chuckled, squeezed his arm around my waist, then started to get to his feet.\n\n---\n\nDarren\n\nTyler's fingers were locked with mine, swinging my arm slightly as we walked around to the carpark. He was so cheerful. I pulled my phone from my pocket with my spare hand, bright screen almost hurting my eyes in the dark as it switched on. I knew he wanted the night to be just us, but I couldn't help the compulsive urge to check it.\n\n\"Hey!\" a voice barked. The screen was showing some missed calls and voicemails, but I looked up.\n\nThere were two cars parked up on the curb on the opposite side of the road. Someone was walking away from them, and towards us. Tyler had stopped, I bumped into his shoulder. He was frowning.\n\n\"Yeah,\" the man said. \"You.\"\n\nMe, or Tyler? What was going on?\n\nThree more men were following over from the cars. I knew something was wrong, but my mind had blanked. At first I genuinely thought it was some kind of hate attack. Being approached on the street like this, while the only obvious thing I was doing wrong, was being affectionate in public with another man.\n\nTyler's fingers slipped away from mine. \"What do you want?\"\n\n\"The least you can do is stop 'n talk,\" the man replied. He had this thick east London accent. \"You looked so nice and cosy in there. Been waiting out here for hours.\"\n\nI still hadn't figured out which one of us he was trying to address. Were these people Tyler knew? Or was he trying to talk to me? My heart was thudding against my ribs and I looked down at my phone, as if I could somehow act casual and nothing would happen.\n\nThree voicemails were from Jackson.\n\n\"Mister S\u00f6rensen?\" the man asked. He said it so... mockingly. Not quite pronouncing it right.\n\nI was starting to shake.\n\n\"Darren, is it?\"\n\nThe other three were circling. I saw Tyler's hackles rising. Silent threats were starting to hang in the air and I realised what it was. The phone. Put it away. Slowly. Easy.\n\n\"Do I know you?\" I managed, barely keeping my voice steady.\n\n\"I doubt it. But we knew your father. Well, that's a bit of a stretch. Our boss knew your father. We've been trying t' reach you for a while.\"\n\nThis couldn't be happening. This couldn't be real.\n\n\"We tried making contact before, but y' had some bear of a bodyguard who fucked that up.\"\n\nIt was connected? Jackson? You'd been wrong?\n\nThere was a long silence where I stared into the man's eyes. He was a person. He was a person like anybody else, he had a life behind those eyes. A wife? Kids? Why was he doing this?\n\n\"What do you want?\" I finally asked.\n\n\"To talk. We didn't want t' interrupt your lil' date. I didn't know you was a queer. It's a shame, I guess, won't be having any kids t' carry on the name.\"\n\nI was scared. Tyler was bristling. I knew what he was feeling - the danger in the air and the disgusting tone - but he had to hold himself together. If I could get us out of this by talking, then I would do it.\n\n\"Start talking,\" I said.\n\nThe man's eyes flashed for a moment and he took a little side-step, to put some distance from Tyler, closer to me. My mind was racing, trying to think of an escape. We just had to go back around the corner and we were at the restaurant. Around the other corner was the carpark. It wasn't exactly empty around there. In fact, someone was walking down the opposite side of the road right now, looking over, probably picking up on bad vibes. If I called for help, was anyone going to come?\n\n\"Our boss wants t' meet you,\" the man said.\n\n\"Why?\"\n\n\"Because you're building an empire on stuff that ain't yours, on money that ain't yours.\"\n\n\"So this is about money? You want me to pay off my father's debts?\"\n\n\"No, it's more than that. He's quite impressed with you. He wants t' meet you.\" He took a step closer. \"You ain't gonna be hurt, just come with us.\"\n\nHe could sound so amicable. My mind desperately wanted to believe that good-natured facade, but I couldn't. \"I don't trust you.\"\n\n\"I swear on me life you ain't gonna be hurt, so long as you come nicely.\"\n\n\"And you're gonna knock me over the head, toss me in the boot if not?\"\n\nHe shrugged. \"Maybe if it comes t' that.\"\n\n\"I need to know more about your 'boss'.\"\n\n\"Nah, we ain't here t' negotiate things. Just to bring you in.\"\n\nThere was another long silence. I was trying to think clearly. Maybe the smartest thing to do was go with them, and let Tyler get away safely so he could tell Jackson. I had no idea what would happen to me, but in that moment all I cared about was Tyler.\n\nMy phone was ringing my in pocket. The vibrations were so loud and the eyes of the four men all stared at me. Why was it four men again? My gaze darted about their faces but none of them looked familiar from before. Shit, Zack, if you could be here now.\n\nMy hand instinctively reached to stop the vibrations. \"Don't answer it,\" the lead man said. I froze. There was a pause, then it started ringing again. I just knew it was Jackson. When my hand jerked again the man surged forward. \"I said don't-\"\n\nTyler stepped in front of him.\n\nIf I had never truly known what it looked like, when two men stared each other down before a fight, I was seeing it now. The chest-bump, the glaring, foreheads almost close enough to touch. It was like some street language that was alien to me. And yet base instincts understood it. This wasn't erupting tempers where people swung fists before thinking. They were sizing each other up, putting on a display, trying to make each other back down before it went any further.\n\nThey were going through the threats, like wild animals doing their best to stop a real fight from starting, because the loser was going to die. This wasn't some light scuffle. Tyler was a little taller, but the man was bigger than him, and three more had his back. He was giving Tyler a chance to stand down.\n\nPlease, Tyler. Stop.\n\nThe man actually relaxed first and leant back, hooking his thumbs in his belt. I didn't like his hands going anywhere I couldn't see them. Tyler's posture didn't change.\n\nMy phone was ringing a third time.\n\n\"This doesn't have t' concern you,\" he said to Tyler.\n\n\"But it does.\"\n\n\"You know this ain't smart.\"\n\n\"I don't care.\"\n\nEverybody was distracted watching Tyler. My fingers touched at the opening of my pocket...\n\nSurges, movement.\n\nTyler swung first. It was some sledgehammer flash that nearly knocked the man to the floor. I had my phone out, thumb swiping across the screen, but a body collided with me.\n\nMy head smacked against the brick wall. I was winded. Everything was a blur. I could hear Jackson's crackly, furious voice, swearing from the phone. Tyler's guttural roars as he took on three men.\n\nThe man gripping my arms wasn't trying to fight me, he was trying to apprehend, drag me towards the cars. I wasn't going. I was so fucking angry. This wasn't going to happen.\n\nI fought back, he kicked me in the stomach. I had a grip on his jacket, I pulled him to the floor, I was on top of him. With all the strength in my arm, I punched him. Again and again. He struggled like his life depended on it. My hands closed around his throat, slamming his head against the concrete, my knee in his gut. His eyes were wide, terrified. Glazing. Struggles getting weaker. Was I going to kill him? Was I going to do this?\n\nSomething ripped me off him, struck me in the side of the head. I tried to get up, stumbled, a body came down on top of me. I was aware that I was being hit in the face, but I couldn't feel it. Each impact just felt like it knocked more and more sense out of me.\n\nTyler lifted the man off me, threw him down. Stamped on his stomach. Shit.\n\nWhat the fuck was happening? My phone...\n\nThe choked man was coughing, gasping on the floor. The other wheezed, swore, got to his feet with a roar of anger.\n\nThey couldn't take Tyler down. He'd gone insane. It wasn't like watching Zack. He didn't take every hit and keep going like he was made of bricks. He was so fast. Everything missed him. Water around rocks. They couldn't get a grip. Couldn't land a hit.\n\nI tried to stand but the floor was spinning.\n\nTyler fought dirty. He didn't care about honour. He fought to incapacitate. To win. Hair pulling, kicks to the groin, headbutts on the nose. When one was on the floor he kept kicking. There were these feral noises coming from him that I'd never heard before.\n\nThe knife came out and I tried to yell.\n\nIt plunged into Tyler's stomach, he pulled away. It slashed across his shoulder and he kept going.\n\nThe lead man staggered back from a skull-cracking headbutt.\n\nTyler was wrestling for the knife, twisting the man's arm, his wrist. With another knee in his gut he got it. But with it in his grasp his arm swung around.\n\n\"Tyler!\" I screamed.\n\nNothing would have stopped him. The blade sliced across the man's throat. It wasn't only my voice piercing the air. There was another shriek.\n\nThere were people. Spectators.\n\nTracy was shrieking.\n\nThe man writhed on the floor. The other two were falling back. For a moment Tyler just stood there, drenched in blood, knife glistening in the dark. Then he threw it at one of them who ducked and yelled.\n\nHis eyes were like amber fire in the street light. \"Move!\"\n\nI managed to get my phone from the floor. We were running for the car. I heard gunshots behind. No. No. No.\n\nWas I hit? I couldn't feel anything.\n\nI could barely breathe as I clambered into the passenger side. The engine roared to life and we were moving. Tyler was covered in wounds, clothing ripped, but he seemed oblivious.\n\n\"Call Jackson!\" he said. \"Call Jackson!\"\n\nThe phone was still in the call. I held it to my ear. His voice was deadpan and tight.\n\n\"Where are you.\"\n\nOne of the cars was trying to block our way from the carpark. Tyler accelerated and smashed into it. I was nearly flung against the dashboard. I desperately scrabbled around for my seatbelt.\n\n\"Darren!\" Jackson's voice roared.\n\nThere was another gunshot as we rolled across the pavement. The back window shattered. I was flung against the seat as Tyler accelerated again. I tried to explain to Jackson, but my mind couldn't shape words.\n\nThe car was following us. Tyler ran lights, dodged other cars, fumbling with the wheel and gearstick. We couldn't stop. I knew what he was trying to do. We needed open space and this car could easily outrun them.\n\nI tried to explain to Jackson what roads we were heading towards. A person crossing in front, shining in the headlights, barely moved out of the way.\n\nI couldn't breathe.\n\nWe screeched around a corner and there was another gunshot. This open stretch. The shifting gears, accelerating. I watched the car on our tail growing more and more distant in the rearview mirror. Jackson's voice was still speaking into my ear. I could barely hear it.\n\nTyler was swooping and weaving around other cars as if he played some racing game. The seatbelt tugged at my body. People were honking at us. Nobody understood what we were running from.\n\nI thought we were loosing them. I needed to breathe. My breaths were ragged, almost whistling in my throat.\n\nThe lights were suddenly shining in through Tyler's window. The second car coming in for a pincer. Everything seemed to happen so slow.\n\nThe window shattered before impact. A gunshot. Tyler's eyes were wide, looking at me, a silhouette against the headlights. He was leaping out of his seat. He threw his body across me. His side of the car crunched.\n\nI felt... nothing.\n\nWhat could I do, but once again be a helpless victim of the raw power of physics?\n\nThe car smashed into something, bounced. We were rolling. I heard nothing but the crunching metal and shattering glass. Silence in the air. Crashing back down. Our bodies were like ragdolls. Everywhere I was thrown, Tyler's body was there, cushioning me. The seatbelt felt like it was ripping into me. He was clinging to me and I clung back.\n\nWe were rolling down some grassy slope. There was another hard knock and Tyler's body went limp.",
        "The car stopped. I took a moment to realise. All my weight was on my head and shoulders. I couldn't breathe. I fumbled to undo my seatbelt, collapsing awkwardly, trying to free my windpipe from being crushed. Glass was cutting into me.\n\nTyler. No.\n\nHe was sprawled across the car ceiling, unmoving. There was so much blood.\n\nNo. No.\n\nThis couldn't be happening.\n\nMy body was like rubber. I couldn't breathe. I could hardly move. I had to fight this, I had to do something. I gasped, trying to suck in lungfuls of air. My hands fumbled around Tyler's head, trying to find his neck.\n\nI couldn't find a pulse.\n\nPlease. Please. Tyler, please.\n\nHis face was so still, like he was sleeping. More still than sleeping. There wasn't blood when sleeping.\n\nYou can't die, Tyler. Please.\n\nI wanted to scream. I wanted to cry. I felt like the insides of the car were closing in on me, crushing me.\n\nHis chest was moving. He was breathing. He was alive.\n\nI didn't know how broken his body was, but I had to get him out. Something was pumping into my veins, forcing me to be calm. If whatever I did now was going to save his life, I needed to do it right.\n\nI kicked out the shattered remains of the windscreen. More glass cut into me, I didn't care. A large chunk was jutting out of my cheek, below my right eye. I could see it in my vision. When I touched it I only felt searing pain in my whole face, like I was bending my cheekbone.\n\nI pulled Tyler's body against mine, started to drag him out. Scrambling to fit beneath the car's crumpled bonnet, crawling across grass and damp earth. Was he always this heavy? Was I breathing? I was aching and hurting so much. My hand couldn't grip. My arm was giving out. I was collapsing every time I put my weight on it.\n\nWhen I had space to stand I could only carry him so far. I stumbled to my knees, laid him out flat in the dark. Why was there so much blood? My clothes were sticking to me. He hadn't worn a black shirt today. Breathe.\n\nBreathe.\n\nA voice was calling to me. I looked up. Some lad and his girlfriend, running across the grass towards us. People who had seen the crash. My brain couldn't process what they were saying.\n\nThe lad crouched down to check Tyler's pulse. The girl was calling on her phone.\n\nI looked up towards the road, saw the second crash of the men who had hit us. A body just laying in the open. More cars that had piled up, caught up in it. So many flashing lights. Growling engines. Slamming doors as people were pulling over, getting out. Trying to see what the fuck was going on.\n\nThere were already sirens in the distance.\n\nI felt like I was going to vomit. I passed out slowly - I thought I was dying. At first I couldn't move. My vision went black, but I could still hear things. Then everything... stopped.\n\n---\n\nTyler\n\nI woke up in the middle of an operation.\n\nIt was like one of those crazy nightmares.\n\nI was covered in sheets, and the only bit of me I could see, just above my left hip, was cut open.\n\nI couldn't really move. I lifted my head slightly, blinking, trying to talk. There were tubes down my throat. Masked faces snapped around to me in alarm, hands pushed me down. Then something happened to knock me out.\n\n---\n\nDarren\n\n\"You fucking idiot,\" Jackson said. \"The one time, the one fucking time, and you have your phone off.\"\n\nI wasn't supposed to have visitors yet, but he'd worked his way in, as usual. I was still in a hospital bed, stitches in three places - my face, my left arm, my left leg. I'd had glass pulled out of me, and my right arm was in a sling from strained tendons. I was bruised and battered, but relatively unscathed, considering the extent of the crash.\n\nHow fucking familiar. Apparently I had all the luck in my family.\n\nI was learning the full extent of the chaos that happened that night. Jackson had been to my house and seen no-one was in. My phone was off. So was Tyler's. He panicked and called up Zack.\n\nZack had gone straight with him to find me. Apparently the restaurant was the first place he thought to check. They had been on their way the whole time. If Tyler and I had managed to stagger those men maybe five more minutes, they would have arrived.\n\nAnd then what? A bigger fight where both Zack and Jackson had been stabbed and shot?\n\nThey had arrived at the site of the crash while Tyler and I were being hauled into ambulances.\n\n\"This is a mess,\" Jackson continued. He leant both arms on the bed and glared at me. \"Tyler killed a man.\"\n\nI swallowed.\n\n\"And if you want to count the crash, he killed a second one.\"\n\n\"They hit us.\"\n\n\"Manslaughter is manslaughter.\"\n\n\"You have to get him out of this. I don't care how much money you want. I'll pay it. Jump through whatever hoops, do whatever you have to do. Clean his slate.\"\n\n\"There's too many witnesses. It'll be going through court, whatever I do.\"\n\n\"Jackson. I will sell everything and shut down my company to clean his slate.\"\n\nHe stared at me for a long moment. \"Let's see if he even wakes up first.\"\n\nMy stomach twisted. I was so angry, but too exhausted to feel it. I was grateful to have my life, but it seemed to mean nothing if Tyler couldn't keep his.\n\n\"Jackson, how long did you know they were tracking me?\"\n\nHe didn't reply. This was what made me so angry. He couldn't blame us for fucking up if he had been fucking up too.\n\nI growled at him. \"Tell me.\"\n\n\"Two days.\"\n\n\"And you didn't think to say anything earlier?\"\n\n\"I was on their tail and I was dealing with them.\"\n\n\"Those first men, the fight at my complex. That was related. You knew?\"\n\n\"I found out after I'd already told you it was no worry. I didn't want to go back on my word.\"\n\n\"Jackson.\"\n\n\"For fuck sake, how would you have reacted if I told you? You'd have panicked like a school girl and been straight on a plane to New Zealand.\"\n\n\"You're supposed to tell me if my life is in danger.\"\n\n\"And you were supposed to be living safe. What happened to that?\"\n\n\"You said a few weeks. It'd been a few damn weeks.\"\n\n\"You're to keep doing whatever I tell you, until I tell you otherwise.\" He glared at me again. \"You're living the high life, enjoying yourself, because I'm always down in the dirt, trudging through this shit, doing what I can to keep you safe. For fuck sake, Darren. When I tell you to do something, you do it.\"\n\nThere was a silence and I stared across the room. \"I'm sorry.\"\n\nHis voice quietened. \"Do you know how horrific it is to have to listen down the phone, to something like that? Someone you care about is going through something like that, and you can't do shit, but listen?\"\n\nIt stunned me. I wanted to look around but I couldn't tear my eyes off the wall. \"I thought you're not supposed to get attached to clients.\"\n\n\"It's hard not to get attached when I've been working with you for so long. When my entire career is centered around protecting you and your family, how do you think that makes me feel?\"\n\nI didn't know what to say.\n\n\"You're a naive rich boy, but you were a good kid back then, and you're still a good man now. Your head's always been screwed on better than normal. Probably because being gay ruined your privilege and you had to taste the grit like the rest of us.\"\n\n\"I honestly thought you hated me.\"\n\n\"I do, kinda. But it doesn't mean I don't care.\" I looked around and he was smirking. \"If you ran out of money I think I'd still be here, collecting 'I-owe-you' slips.\"\n\n\"... Thanks.\"\n\n\"Not that I'm complaining about the money. It's gone to a lot of good things. Both my kids are going through uni and they've always had great summer holidays with their mum.\"\n\nI was getting emotional and trying to hold it in. He squeezed my knee beneath the blanket.\n\n\"You need to get better,\" he said. \"I'm gonna go see what I can find out about Tyler. Wave this badge around and see if anyone will tell me something.\" He turned and headed for the door.\n\n\"Jackson.\"\n\n\"What?\"\n\n\"Your kids are really lucky to have you.\" I wanted to tell him what a hero, what an incredible man I thought he was. I couldn't shape the sentence.\n\nHe smiled. \"Darren. You know your uncle loves you, he's just shit at showing it?\"\n\nI stared at the blanket. \"I know.\"\n\n*\n\nThey put Tyler into a medically induced coma. He had some severe head injuries and they were monitoring him carefully.\n\nHe'd been through everything in one night. Stab wounds, gunshot wounds, a car crash. The things his body could endure were remarkable. Apparently he had come awake during surgery to remove a bullet from his kidney and scared everyone shitless. They still might have to take out that kidney if it didn't heal well.\n\nI knew these things because Jackson managed to get friendly with his doctor, casually chatting away, and he fed everything back to me. I would never understand how he did it, but I couldn't complain. Perhaps it was because the doctor was a woman.\n\nAmelia, Zack, and myself, were finally able to go in and see Tyler after a couple days of me walking free. He was still unconscious and hooked up to a machine, but to see his breathing body was a relief. His hand was warm.\n\nWe went back out to the waiting room, to make room for his family. The three of them were already there. A young woman leapt to her feet, accosting Zack in instant recognition. She threw her arms around his middle and hugged him.\n\n\"Is he awake?\" she asked.\n\n\"No, not yet.\"\n\nHer dark brown hair was tied up in a high ponytail, almost on the top of her head, which honestly just reminded me of a palm tree. She had big hoops for earrings, and she wore a little too much makeup. She turned to me and frowned.\n\n\"Oh my God, you must be his boyfriend. You're like, cute.\" She gave my hand a vigorous shake. \"Dad, Ty's got, like, a cuter boyfriend than me.\"\n\n\"Probably something to do with your face,\" the man gruffly replied.\n\nZack was clasping his brow and grinning as the three filed into the room. They were in there maybe five minutes before coming out again. His sister's ignorant attitude was gone. She was solemn. She came over and hugged me, and I didn't really know what to do about it.\n\n\"You were in the crash too?\" she asked, staring at the stitches on my face.\n\n\"Yes.\"\n\nShe hugged me again, hair of her ponytail tickling my nose. I received a smirk and shrug from Zack.\n\n\"When does he wake up?\" Tyler's mother asked.\n\n\"I don't know,\" Zack replied.\n\n\"I'm gonna ask,\" his father said, marching off. \"All this way just to see him fuckin' sleeping.\"\n\nWe ended up sitting somewhere else, waiting to see Tyler's doctor. His family was very friendly with Zack, which didn't surprise me, and his sister was starting to hit it off with Amelia, suddenly gasping out loud from their chatter.\n\n\"Oh my God! Innit though?\"\n\nHis mother came to sit next to me, a hand on my knee, giving me this strange look which was both affectionate and suspicious. \"So you are a gay man?\"\n\n\"Yes.\"\n\nNicole gasped again. \"Oh my God. Mum, you are so rude!\"\n\nHis father grunted. \"Is Tyler gay now?\"\n\n\"No,\" Nicole said, rolling her eyes. \"He's bi.\"\n\n\"But he's with a man.\"\n\n\"Yeah,\" she drawled. \"And you know what being bi means? Like, he likes men.\"\n\n\"So he's gay?\"\n\n\"Oh my God. You're stupid, Dad.\"\n\n\"I just want to know what he is!\"\n\n\"He's bi!\"\n\n*\n\nThey took him out of the coma about four days later. I was told that everything with his brain seemed okay, but they could see the full extent of things once he woke up.\n\nI didn't leave the hospital. I wanted to be there when he came to. I spent that night with my arms crossed on the bed, head down, the slightest noises always jarring me awake. I ate from the cafe on the ground floor.\n\nThey said it could take two or three days for him to wake up. Maybe even a week.\n\nA week? No, this was Tyler. He came to after a day.\n\nA hand was clumsily touching my head. \"Hey. Hey. Wake up.\"\n\nI looked up into his drowsy eyes. He could talk. That was good. No brain damage so far.\n\n\"You have to tell Zack that it's okay,\" he said.\n\nHe was a bit delirious. There wasn't really much going on behind his eyes. It was like he was sleep talking, this blank gaze with random words.\n\n\"I'll tell him,\" I replied.\n\n\"Yeah. It wasn't his fault.\" He blinked, then frowned. \"You have to tell Zack that it's okay.\"\n\n\"He knows, Ty.\"\n\n\"Okay, good.\" He touched my face. \"You're really beautiful.\"\n\nI smiled. \"So are you.\"\n\n\"You know me, yeah? I had this dream that you hit your head and didn't remember me anymore.\"\n\n\"I could never forget you.\"\n\nHe grinned, and fidgeted. \"Can I, like... Where's the bathroom? I need to piss.\"\n\n\"They got you all wired up. You can just go.\"\n\n\"What, like I got a tube in my dick?\"\n\n\"Yeah.\"\n\n\"Holy shit. Will that hurt if I get a boner? You always give me boners.\"\n\nI chuckled and he grinned more, but then frowned, and tried to fidget again. His head turned on the pillow. He bucked and growled.\n\n\"What's wrong with me?\"\n\n\"They drugged you to sleep.\"\n\n\"Am I supposed to be awake?\"\n\n\"It's wearing off at the moment. You should probably sleep more.\"\n\n\"Okay. You'll stay, yeah?\"\n\n\"I'm not going anywhere.\"\n\nHe smiled and rested back against the pillow. Then he was gone again.\n\nThe second time he woke up was a bit more violent. He started thrashing around, gasping, then bolted up and nearly made it out the side of the bed before I grabbed him. A nurse from the corridor came rushing in at the noise. I had to wrestle him down while he looked at me with these dark eyes, like he was going to kill me. The moment he gripped the nape of my neck it faded. He was bewildered. I wondered what was going through his mind, what parts he was remembering.\n\nHe was staring at me as if he couldn't believe I was real. Then he kissed me. The nurse tutted and told him to get back into bed, and told me she was going to find his doctor.\n\nHe propped up against the pillows, and just sat there in silence for a bit. I stroked my fingers over his knuckles, turned his hand over and stroked his palm. He stared at the movement, then his eyes flicked up to my face.\n\n\"Is my car fucked?\"\n\n\"Yeah.\"\n\nHe rubbed his eyelids, face screwing up like everything was a nightmare. \"This is all real?\"\n\n\"Yeah. You... You did some really stupid stuff to protect me.\"\n\n\"Of course I did.\" He looked hurt. \"I love you.\"\n\n\"I love you too.\"\n\nHis hand cupped my cheek, thumb stroking the dented scar from the glass. \"What's happening? Are you safe?\"\n\n\"Jackson's doing his job. Everything is fine.\"\n\n\"How long has it been?\"\n\n\"Bit over a week.\"\n\n\"When can I go home?\"\n\n\"I don't know.\"\n\nI leant over him and our lips met. He smelt so familiar compared to all these sterilized surroundings, it flooded me and soothed me. It was a passionate kiss, heavy and deep and honestly perfect. Making out on a hospital bed, that was something new. Thank fucking God he was alive. I held him tight and didn't want to let go.\n\nI had to as the door opened and the doctor came in. \"Mister Andrews,\" she said, walking around to the bed. \"You are a very, very lucky man.\"\n\n\"I know,\" he replied, with a mischievous lip curl. \"Have you seen my boyfriend?\"\n\nShe sighed and gave him a look. \"Your injuries, or lack thereof. The state of your recovery.\"\n\n\"Can you tell me what the hell you've been doing to me? I woke up and I was being cut open. Or was that a dream?\"\n\n\"No, that was real.\"\n\nI had to act like everything she was about to explain was news to me, too. Or Jackson would get in trouble.\n\n---\n\nTyler\n\nBeing in hospital is boring. I could swear I was fine much quicker than they said, but they had to keep me in. To monitor me. I wanted to make my recovery at home.\n\nHome. Darren's house. That was my home.\n\nI don't think Darren ever left. He disappeared a few times and came back with fresh clothes, but he ate like shit and he slept like shit, constantly at my bedside. He got this thick full beard on his jaw, and so did I. We both looked pretty fucking awful, like we'd had 5 years slapped on, but we looked awful together.\n\nThe visits kept me going. Zack showed up shortly after 5pm like clockwork, every single day. One time he brought David, who climbed all over me and chattered away in his cute voice. The poor kid's brain was having to process a lot of violence recently. He'd seen Darren, Zack, and now me, all with various injuries. The world could be a bad place and he couldn't stay sheltered from it. He always got blunt and matter-of-factly answers.\n\nYes, Uncle Tyler nearly died. But it's all good because he's alive. He sat quietly for a minute, and I think he was trying to imagine what life would be like if I was gone. He burst into tears and hugged me tight and told me I shouldn't drive cars any more. He was also upset that the loud car was gone forever.\n\nShit, I was upset. I loved that car.\n\nMy family came a lot, too. Nicole was just as annoying as ever. She had to take a picture of me to upload on her Facebook - 'Ty totaled his car'. She pattered away on her screen while it blipped with messages. Hundreds of them. There seemed to be a lot of people in her contacts who cared about me.\n\nShe tried to take a picture of Darren, too, but he snapped and knocked the phone from her hand. Luckily it landed on the bed, but she stared at him in shock and he scowled back.\n\n\"Seriously, don't.\" He had a commanding tone when he wanted it. She didn't push it.\n\nShe was running a series of status updates every day from there, letting people know how it was going. I honestly felt like Jackson might have a fit about it, but hey, I wasn't the one being hunted by criminals, right?\n\nOr maybe I was now.\n\nI had killed a man. Shit. I tried not to think about it.\n\nOn the last couple of days when I was walking, Nicole made damn videos, trying to show the stitches and scars. It looked pretty ridiculous for a car crash, but nobody had to know that some of those were from bullets and knives. I saw one of the videos, and I have to admit, it was pretty funny. Me, barefoot, in nothing but a pair of grey tracksuits, walking down hospital corridors with a can of coke, drinking from a straw, swearing at her as she kept zooming in on my stomach, then my butt as I pushed past her. You could hear Darren's chuckling in the background, but never see him.\n\nWhen I had a moment alone with Darren, he touched the marks with affectionate fingers. My old scar from a knife was hidden by the new line where they'd cut me open to get at my kidney. On the other side I sported a fresh new stab wound, and I think the slash on my shoulder was forever going to leave a mark, too.\n\nHis touch turned me on. He gave me that look. I'd been through a near-death experience and now I was high on life. I desperately wanted to get him somewhere private. Fucking hospital.\n\nI was getting ready to leave a day later, and Nicole brought me my charged phone. I decided to check my own Facebook just for the hell of it, and it had exploded with messages, just as I thought. A few new friend requests, too. I looked through her pics and videos of me, then just kept scrolling through.\n\nIt was like I was going back in time. I had never really uploaded much to my own page, I was mostly tagged in other people's pictures of me. Me at parties, me at clubs, me looking drunk and stupid. People mostly snapped pictures of me at random moments, doing random things. I never really posed and actually looked at the camera, nobody could get me to stay still that long. But there was a string of very photogenic pictures, where a friend who wanted to be a photographer had used me as a model. Jesus Christ, that felt long ago.\n\nI got younger and younger the further I went through. Pictures from shittier quality phones. Pictures from old times. There was the iconic one of Zack and I, when I was 19 or so. I had my arm around his neck and he had a handful of my hair. We looked mid-wrestle, but were both managing to look at the camera, and laughing. That had been 'the' photo back then. Christ. I had one of those cringeful mirror selfies in my profile pics, too - from Myspace days. Did I even have a speck of facial hair? Holy shit.",
        "Darren came in and I looked up, staring at him for a moment. How had this stupid partying kid scored a man like him? I felt like a whole new person. His eyebrow rose at my blank face.\n\n\"You all right?\"\n\n\"Look at this,\" I said, bringing up the photo of me with Zack. I handed him my phone and watched the grin spread across his face.\n\n\"How old were you?\"\n\n\"Nineteen. He was what, twenty-one?\"\n\n\"So basically he was a chav, and you were a punk?\"\n\n\"I believe the term was 'mosha' back then. But yeah. We looked kinda funny together.\"\n\n\"The hell was a 'mosha'?\"\n\n\"Mosher. Like, a hardcore emo. They still used it as an insult though.\"\n\n\"What?\"\n\n\"Yeah, exactly.\" I flicked a finger at the screen to show him the next one, then he continued, looking through everything. But he went the opposite way to me, starting at the youngest ones and ending at the most recent.\n\n\"This is hot,\" he said, pausing at one of the greyscale 'model' ones. I was pulling a generic pose, thumbs hooked in pockets, leaning against a wall, staring straight into the lens with a smirk. My shirt was barely buttoned up, my hair had a freshly shaven pattern on the side of my head. \"How old were you here?\"\n\n\"Like twenty-three?\" The timeline felt muddled in my head. I cringed inside knowing what photos were coming up next. \"Most of them are embarrassing.\"\n\n\"Nah. You even look sexy in your bad pictures.\"\n\n\"No.\"\n\n\"Yes. You'd make a good model.\"\n\n\"Not right now. I look like, forty.\"\n\nHe chuckled and stroked my scruffy beard. \"No you don't.\" He was leaning in to kiss me when a woman cleared her throat at the door.\n\n\"Hey, cuties.\"\n\nIt was Amelia. Her even-toned voice seemed such a nice break from Nicole. I was actually really happy to see her. Apparently so was Darren, because he was flicking back through my phone to bring up the photo with Zack.\n\n\"Have you seen this?\" he asked.\n\nShe clasped a hand over her mouth and giggled. \"Oh, yes. Zack looked a lot like that when I first met him.\" She touched at Darren's wrist. \"I, um. Your uncle's here.\"\n\nHe scowled. \"What? Why?\"\n\n\"He wants to see Tyler.\"\n\n\"Why?\"\n\n\"It's nothing bad or I wouldn't have brought him in.\"\n\n\"I'll believe that when I see it.\"\n\nShe disappeared and came back with the grey-haired man, then left us in privacy. His icy stare made me nervous as he walked over. I wasn't feeling quite as invincible as that night at the networking. He was well groomed in his suit. I was a mess in hoodie and tracksuits.\n\n\"I hear you're a very loyal man,\" Vincent said, not taking his eyes off me once.\n\n\"Erm,\" I started.\n\n\"You did some remarkable things to protect Darren.\"\n\n\"Yeah.\"\n\n\"I also hear your actions may be stirring up some legal troubles.\" Now he looked at Darren. \"I'll be helping out on his case. Any expenses you need, I'll cover. You will have the best lawyers in this country.\" He looked back to me. \"You're a man who's not afraid to put down scum, and I won't see you behind bars for it.\"\n\nI was stunned into silence.\n\n\"Thank you for being there when you were.\" He gripped Darren's shoulder, and I thought it was the most affection I'd ever see from him. \"My nephew is alive and well because of you.\"\n\n\"I love him,\" I said. I still had to cross the line.\n\nVincent's brow creased. \"Yes.\" He turned and headed for the door. \"It's a shame the crash couldn't knock the pair of you straight, but God will be judge of that.\"\n\nI bristled slightly as he left, but Darren placed a hand on my chest. His voice was quiet. \"It's his way, Ty... He's lost a brother and two sons. He's been hurting for a long time.\" He looked into my eyes and his voice went even quieter. \"You're accepted in the family.\"\n\nShit, was Darren about to cry? I think I was tearing up, too. I hugged him to hide my face. He let out a single sniff and rubbed at his eyes.\n\n\"Fucking hell.\" His voice was tight. \"It's not over, Tyler. Nothing is.\"\n\n*\n\nI got to stay around Darren's for one night before the police took me in.\n\nI'd be lying if I said I wasn't terrified. I was on trial for a list of things, but above all, manslaughter.\n\nI had to keep my cool. I had to stay focused.\n\nMy story must stay the same. It must be involuntary manslaughter. It must be.\n\nMitigating factors. That was what Jackson kept saying to me. We were going to get me out of this, because all I had done was accidentally kill a criminal who was trying to kill me. It was self defence. It was an accident. I might have some arrests on my record for assault before, but never a conviction. As far as the system was concerned, I was clean.\n\nThose next few weeks of my life were a blur. I was out on bail, covered by Darren and Vincent, and my trial was scheduled for early October. Things were going fast. Incredibly fast. There were people in the background making wheels turn, trying to get me through this.\n\nI was on a tense auto-pilot. I don't know how to describe what it's like, living your life on a ticking clock, knowing that in a matter of weeks you might get five or more years in jail. I went in to work because I didn't know what the fuck else to do. You just can't live like normal. You can't.\n\nMy family learnt the truth about why the crash had happened. It made me shake all over. How can you just casually talk about that with your loved ones? Yeah, I stabbed a man in the throat. I didn't mean to. I was just so pissed off because he'd already stabbed me.\n\n*\n\nSo many questions.\n\nI explained, in detail, every step of what had happened. What I could remember.\n\n\"So, as soon as you had hold of this knife, the first thing you did was swing at your assailant's throat?\"\n\n\"It was an accident,\" I said. \"I was in the middle of a fight, my arms were swinging anyways, I had the knife in my hand, and he was too close. I wasn't purposely aiming. I didn't mean to do it.\"\n\n\"After you had commited this act, you instantly fled from the scene. Why?\"\n\n\"The other three men were still there, and one of them was pulling out a gun.\"\n\n\"One of these shots hit you in the back while you ran, yes?\"\n\n\"Yes.\"\n\nThey had witnesses stand up to give their stories. One was a man who explained how he had been walking down the road at the time, and seen us get accosted.\n\n\"I was on the phone to the police already when the fight started.\"\n\n\"You were already calling the police?\"\n\n\"Yeah.\"\n\n\"Why?\"\n\n\"'Cause it was obviously something bad.\"\n\n\"How could you tell?\"\n\n\"These four men circling these two, with the two in the middle looking obviously uncomfortable. I know what a mugging looks like.\"\n\n\"Would it interest you to know, that what you witnessed was supposedly not a mugging, but an attempted kidnapping?\"\n\n\"A kidnapping? Why? Because the two men were in expensive clothes? Do thugs do that in real life? Do they try to kidnap people and ransom their families?\"\n\n\"Questions we'd all like answered, sir.\"\n\nThey had Tracy there as a witness. Oh God. She started tearing up as she recounted the events.\n\n\"We heard shouting outside, and someone came running into the restaurant asking for help. I wanted to do something to stop it but I didn't know how... I was scared.\"\n\n\"The violence you saw scared you?\"\n\n\"Yes.\"\n\n\"You saw what Tyler did?\"\n\n\"Yes.\"\n\n\"And it scared you? Did it seem... out of character?\"\n\n\"Yes. He always just seemed such a sweet man, I...\" She stared across the room, straight at me. \"I had no idea you had that in you.\"\n\n\"Neither did I,\" I replied. I received a quick glare for speaking.\n\nShe swallowed and continued. \"The man had already stabbed him about three times before he got the knife off him.\"\n\n\"Three times?\"\n\n\"Something like that. He... He was covered in blood. I thought he was going to die.\"\n\nThey even got Darren to stand up as a witness. I thought he was a participant more than anything, but apparently it worked. Somehow. Once again Darren had been involved in a fight and didn't see any arrest. He had punched the living shit out of that man...\n\nHis voice filled the room and I closed my eyes. Could he save me?\n\n\"I instigated the fight, because they told me not to answer my phone, and I still reached for it.\"\n\n\"Why were you so intent on answering your phone?\"\n\n\"Because I knew it was Jackson calling.\"\n\n\"How?\"\n\n\"Gut instinct.\" He stared with his cold eyes. \"Everything Tyler did, he did to protect me.\"\n\n\"Witnesses say you shouted at him to stop.\"\n\n\"Yes.\"\n\n\"And he didn't?\"\n\n\"If he had stopped, he would have died.\"\n\n\"Mister S\u00f6rensen, we would all like to know why these men were after you in the first place. What was going on, for Mister Andrews to find himself in this situation?\"\n\n\"I would like to ask my family's private investigator to stand up and answer your question.\"\n\nSo Jackson stood up and explained the case. Pure silence descended into that room. Eyes stared at Darren. His face was completely still, he only glanced at the jury once. My trial was becoming a part of something much larger, going over people's heads.\n\n\"What these men weren't counting on,\" Jackson said, \"is that when they tried to take Darren, they met their match. Someone who was willing to defend the man he loved to the bitter end. They needed to kill him and get him out of the way. He was fighting for his life.\"\n\n\"So Mister S\u00f6rensen and Mister Andrews have been romantically involved for a while?\"\n\n\"Yes.\"\n\n\"How long?\"\n\n\"I'm sorry, I don't see how that is relevant.\"\n\nJackson handled a court room with finesse.\n\nMy lawyer stood up to give a speech. You could somehow tell that he was a man hired by Darren's uncle. There was a subtle similarity in attitudes.\n\n\"Ladies and gentlemen, I want you to give a good long think about what happened that night. This was a man acting in self defence of not only himself, but a loved one. He accidentally killed a man, yes. He killed a criminal. A renowned hitman who had accepted a life of crime and was, at the time of his death, on the run from the police. I have his files on hand, if anyone would like to hear the long list of his disgusting offences.\"\n\n\"I don't think that's necessary.\"\n\n\"What Mister Andrews did was not an act of manslaughter. It was an act of clearing up our streets. He was faced with a situation beyond him, and he could have chosen to leave Mister S\u00f6rensen to his fate. He could have chosen to run. He did not. Ask yourself what you would have done.\"\n\nI was shaking. I locked eyes with Zack across the room. He looked like he was hurting, unable to stand how helpless he was. He had shot a man dead. It had never caught up with him. My mistake was having witnesses.\n\n\"If police had arrived on time to the scene, there is a high chance they would have used lethal force to subdue the victim, and he might have killed officers in the process. Unfortunately, they did not have a timely arrival. Tyler did what he needed to do. As grey as this area may be, do not let his life be ruined for ultimately doing the right thing.\"\n\nThe judge asked me a simple question of his own.\n\n\"Mister Andrews, how do you feel about what you did?\"\n\nI stared at the floor for a moment, before looking up to meet his gaze. \"I wish I'd never swung that knife.\"\n\n\"If you could go back in time, would you rather have died, than take a life yourself?\"\n\n\"I don't know. I don't know if my instincts would have allowed me. All I know is that nothing is worth suffering the conscience of taking a life.\" It was the weight of a second life on me. Maybe actually the third or fourth. A lot of people had been affected by that car crash...\n\nMaybe the men Zack and I had killed, had deserved it. But who am I to say that? How did I really feel about what I had done? Regret, maybe. But deep down I knew that if someone ever attacked me like that in the future, I'd do it again.\n\nThere are some people like me in this world. We lose ourselves in the moment.\n\nStanding there and awaiting my sentence, I couldn't feel anything. I was emotionally exhausted. I was trying to prepare myself, bracing to hear how many months I would spend in prison. Everybody had done what they could, but manslaughter was what I had done.\n\nThe judge started to give some speech. It was very similar to what my lawyer had said. I could barely listen to it, I was just waiting for the 'but', the change in tone. I might be seen as a hero by some, but the law does not make allowances.\n\n\"Mister Andrews, we find you not guilty.\"\n\nNot guilty.\n\nNot guilty.\n\nManslaughter was what I had done, but I wasn't guilty of it?\n\nHow was this fucking happening.\n\nI looked across the room. Amelia was crying. Zack was wide-eyed. My mother was doubled over with her head against her knees. My father was scowling like normal. My sister was holding her head, mouthing 'Oh my God' over and over. Jackson looked... smug. But genuinely happy. Darren was trembling and getting to his feet. Vincent also rose, and started to clap.\n\nThere was this applause. I couldn't feel my legs. I couldn't feel anything.\n\n\"Mister Jackson,\" the judge said. \"I hope you receive plenty of police support in your continued efforts to protect the S\u00f6rensen family.\"\n\nFucking Jackson. He had done this. Who was this man? Really?\n\nI just stood there for a moment, not knowing what to do next. I could leave? This was all over?\n\nI was still going to be charged with some lesser things. The crash was not one of them, as they had some proof that in that very moment I had been doing nothing wrong, and the other car purposely hit us. But I had been speeding before that, so I was charged with reckless driving, had a fine, and another point on my license.\n\nI was still being charged with aggravated assault. 12 months. I felt like I was going to faint as I listened to it. Shit. Shit. I wasn't free?\n\nI was being put straight on probation.\n\nHoly fucking shit.\n\nI glanced across the room and Jackson winked at me.\n\nThe court was dismissed and I was walking out a relatively free man. So long as I obeyed all the conditions of my probation, the whole thing was going to blow over and fade into history.\n\nThe air felt cold as I stood out there. I stared at Jackson. What do you do when someone has just done something like this for you? How do you express it? I wasn't alone in life. I had powerful friends.\n\nI hugged him. He wheezed with a puff of smoke, but chuckled and returned it, heavy slaps on my back.\n\n\"You're all good, Tyler.\"\n\nThere were lots of hugs. From Amelia, from Zack. From my family. Nicole squeezing my ribs like she wanted to kill me. Then finally Darren, who stood there waiting patiently. He held me for a long time before pulling back a little, forehead pressed against mine, eyes closed.\n\nThe moment was ruined by the fake shutter sound of a smartphone taking a picture. Fucking Nicole. She took another one as our heads snapped around.\n\n\"Nicole,\" Darren growled.\n\n\"It's not going online,\" she replied. \"It's just for us, innit?\"\n\nHe sighed. \"You know what, just put it up. Whatever.\"\n\nOh wow.\n\nJackson came up and held both our shoulders. I hadn't realised how short he was compared to the pair of us, until he was standing there, so close, the top of his head only level with my cheek. He had always seemed one of those giant people who filled the room. I guess a person's presence can do a lot. He had a shell, and it smelt a lot like smoke, but it was down. He was talking to us genuinely, earnestly.\n\n\"Case is wide open, and the police are taking a heavy interest again.\" He regarded Darren. \"I'm gonna be very busy for a while.\"\n\n\"Good luck, Jackson.\"\n\n\"Cheers. Get yourselves home and get some rest. First meeting with your probation officer is in a week, Tyler.\"\n\nWe got into Zack's car and I pulled my phone out, secretly curious to see Nicole's pictures.\n\nJesus Christ. It was a good photo. It was amazing. That was me, that was my Darren, and that was what we looked like together. Just casually looking super photogenic after coming out of a trial about manslaughter, as you do.\n\nThe second, slightly blurrier one was great in its own way, too - Darren's sexy grumpy face, my typical snarl. Darren peered over my shoulder, I showed him. He chuckled and rubbed his brow.\n\nThe new chapter of my life was up on my timeline. I was proud of this one.\n\n---"
    ],
    "authorname": "IvoryTusk",
    "tags": [
        "gay romance",
        "drama",
        "street fight",
        "fight",
        "car crash",
        "car accident",
        "police",
        "arrest",
        "trial",
        "hospital"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/its-who-you-know-ch-06"
}