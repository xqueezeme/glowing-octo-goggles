{
    "title": "Ass-ignation",
    "pages": [
        "\"Are you really sure you want to go through with this?\" he asked her.\n\nJennifer smiled. \"Relax, I'm sure. This is what a fuck buddy is for, isn't it?\"\n\nMike paced the floor around the bottom of the bed in the cramped little motel room. \"Yeah, but it's a lot to ask.\"\n\nHer auburn curls bouncing, she shook her head. \"No it's not, Michael. You and I have been friends since kindergarten and you've always helped me out with anything I wanted.\"\n\nGrinning ruefully, he dropped into the sofa facing the bed. \"Jen, you still don't understand men. You can't call it a favour when you ask one to fuck you. Any guy would be happy to oblige. Especially with someone as hot as you.\"\n\n\"Flattery will get you everywhere,\" she winked. \"But it is a favour you do me. If it wasn't for the way you are so understanding about me I'd have to pick up random guys, and in this day and age that isn't a good idea. You letting me use your cock whenever the urge takes me is a thing I really appreciate.\"\n\n\"Not half as much as I do,\" he laughed.\n\nShe batted her emerald eyes at him. \"You'd be surprised.\"\n\n\"I'm getting to the stage where nothing about you surprises me.\"\n\nHer beautiful face creased into a mock pout. \"Oh? Guess I'll have to try harder in that case.\" Glancing down at her watch, she then looked at the door. \"Come on, Sarah, you should have been here by now.\"\n\n\"Maybe she doesn't want to do it after all.\"\n\nJennifer shook her head. \"No, she always does this. The girl will be late for her own funeral, given chance.\"\n\nShe leant back on the bed so that she was supported by her elbows. It allowed him to see far enough up her minidress to glimpse the shaven lips of her bare pussy. The way she shifted her legs a tiny amount let it peek from the shadows, promising him a great time to come. She smiled when she saw where his eyes were lingering and crossed her legs.\n\nHe had always admired Jenny's killer legs, and she knew they were one of her best assets so took every opportunity to show them off. The dress she wore for their meeting was a one piece little black number that barely covered her modesty when she stood up. It was so tight that any underwear beneath it would have shown and so she wore none. It didn't matter because, although Jennifer had breasts that were small for a girl of her age, they were firm and pert, needing no artificial support.\n\n\"Are you sure she'll do these types of things?\"\n\n\"Of course. Anal play is a huge part of our sex life.\"\n\nMike frowned. \"I didn't think lesbians would do something like that.\"\n\nJen giggled. \"Bisexuals. Even Sarah likes a cock once in a while. Admittedly not as often as I do, but still. Just because we prefer to date women doesn't mean that's all we do.\"\n\n\"Do you both play with your asses even when there is just you girls?\"\n\n\"You bet! A tongue wriggling in my ass feels unbelievable, and so does fingers. Then there is the strap-on. God, that feels wonderful! I love it when she fucks me up the ass with one of those, pulling my hair as she does. Sarah loves it to be done to her, too.\" She broke into a huge smile at the growing lump in his trousers. \"Getting turned on by that, buddy?\"\n\nHe shrugged, a little embarrassed. \"A girl talking about being fucked up the ass by another girl. Who wouldn't get turned on by that?\"\n\nBoth turned to the door when there was a knock upon it. Jennifer sprung off the bed and flung it open. \"Ta-da! Speak of the devil and she appears.\"\n\nSarah stepped into Jenny's arms and the two women exchanged a deep and passionate tongue kiss. The blonde wore frayed blue denim jeans and a yellow tee shirt. Her long golden hair cascaded about her shoulders like a silk waterfall. \"Mmmm. Hi Babe. Hi Mike.\"\n\n\"Hey Sar. Are you up for this?\" he asked.\n\nThe blonde shot her redheaded girlfriend a quick glance. \"Sure. I'd do anything for Jen and so here I am.\"\n\n\"Yeah, but if you don't want to do this, we won't.\"\n\n\"Oh, I'm up for it, alright. Reckon seeing my girl get her asshole fucked hard will be a complete turn on. You never know your luck, if I get turned on enough, you can do me too.\"\n\nThat surprised him.\n\nWhen he had first mentioned his fantasy about two women letting him watch them licking and fingering each other's asshole to Jennifer, they had been lying in the darkness, hot and sweaty upon the twisted sheets. She had phoned him an hour before saying she 'just had to get laid' and, as always, he had been happy to help. After all, that's what friends were for.\n\nIt had started when they were in school, the best of friends who used each other to satisfy their natural curiosity about the opposite sex. Jennifer had been his first for everything; she had been the first naked girl he had seen, during a game of 'show me yours and I'll show you mine', she had given him his first blowjob, he had taken her virginity on prom night, and she had been the first girl to let him have anal sex with her.\n\n\"This is pretty one-sided,\" she had said, turning on her side to lay her head upon his chest, her fingers drawing lazy spirals in the sheen on his stomach. \"We fuck only when I want, in whatever way I choose. Isn't there something you'd like to do? Anything.\"\n\nStaring at the ceiling, he gently stroked her back. \"I'm happy with this.\"\n\nHer chuckle was dirty. \"Sure you are. You get the best thing possible - pussy with no commitment.\" She twisted to look up at him. \"But I'm serious Michael. Tell me some fantasy I can fulfil for you. It can be anything. The more deviant the better. Want me to dress as a schoolgirl? Want to fuck me over the hood of your car?\"\n\nHe nearly asked her then, but decided it was too embarrassing and so shook his head. Jennifer knew him well enough to know that he was holding back so she playfully tickled him. \"Come on. Whatever it is, I'll do it.\"\n\n\"Well, er, I, ah... You know I love anal sex, yeah?\"\n\n\"Honey, I am so grateful that you do. It's a favourite of mine. Isn't it weird? There is almost nobody who doesn't feel strongly about anal. Either they think it is very sexy, or they think it is totally disgusting. No halfway with it.\"\n\n\"Yeah. Well, I've seen porn of girls rimming...\"\n\n\"And you'd like to see it in real life?\" she finished for him.\n\nHe shifted uncomfortably. \"It's disgusting. Forget I mentioned it.\"\n\n\"No. No, it's not. Really. I can arrange that, no problem. Leave it to me. Sarah owes me a favour, I gave her brother a lap dance for his birthday.\"\n\n\"Lucky him. Any chance I can get one of them for my birthday?\"\n\nShe pressed her lips to his. \"Mike, you can have one anytime, no need to wait.\"\n\nThat had been a week ago. When she had phoned to say it was on for tonight, Mike had not suspected that Sarah would actually let him have sex with her too.\n\n\"Sit down on the sofa facing the bed Mike, and just watch until you're invited to join in,\" Jennifer told him, swaying over to the bed. \"Sar, come give me a kiss.\"\n\nSarah smiled. \"Yes Ma'am.\" She turned to Michael. \"Makes me wet when she gets bossy.\"\n\n\"A glimpse of ankle gets you wet,\" Jen laughed.\n\nSarah wiggled her eyebrows lasciviously. \"Sure does. And shin, and leg, and knee, and thigh, and...\"\n\n\"We get the picture,\" her girlfriend smiled, wrapping a hand in her long blonde hair and pulling her in for a kiss to silence her. Their breathing turned to whimpers and moans as they probed each other's mouth quickly. Mike could see their tongues flicker against each other then dart into one mouth only to writhe their way back out and disappear into the other one.\n\nSarah pressed forward, pushing Jennifer flat onto the bed, covering her body with her own. The redhead's long, graceful and slim legs rose around the blonde, hooking one ankle behind her knee and the other across her buttocks. The position made Jennifer's minidress ride up so that her naked pussy made contact with her girlfriend's body. With a wiggle, she ground her crotch against her lover, making her pussy rub excitingly on the girl's denim groin. The doubled material over the zipper ran roughly over Jen's clit, making her gasp into Sarah's mouth.\n\n\"Oh, Baby, that feels good! Stay there!\" she begged, hardly taking her lips a hair's breadth away from the blonde's.\n\nSarah grinned down at her girl, then gave her hips a thrust as if she were driving a cock into the spread young woman. \"Tell me you're going to lick my cunt, Jen. Tell me you're going to work your nimble little tongue right up inside me. That you're going to fuck me with it. That you are going to drag it over my asshole and spear it inside.\"\n\n\"Yes!\" Jennifer moaned, lifting her head an inch off the bedspread so that she could steal a kiss. \"I'm going to tongue-fuck your cunt and ass! I'm going to suck your clit and bite your nipples.\" As she spoke, she tangled her fingers in her girlfriend's hair, feeling its silkiness glide through her grasp. \"I love you Sar.\"\n\nChuckling, the blonde rolled aside, pulling free from the ensnaring legs and playfully swatting the girl's thigh. \"You better.\"\n\n\"I do. Terribly.\"\n\nNow that Sarah was off to one side, Mike had a clear view of Jennifer's exposed cunt. Her bare lips had darkened with arousal, flushing and swelling, opening like a wet flower. He could see how she gaped in readiness for her lover's touch, and how her oozing juices sparkled when they caught the light. He stirred and tugged at the front of his trousers, trying to ease the discomfort of having a stiff cock trapped within.\n\nGrabbing the little black dress by the waist, Sarah tugged it up Jennifer's body, and the sexy redhead lifted her hips to allow it to slip beneath her bottom. That only served to give Mike an even better glimpse of the pink depths inside her.\n\nNow that the dress was past her hips, Jen sat up and lifted her arms, allowing Sarah to drag it over her head and off. With a dirty giggle, the blonde cast it aside onto the floor of the motel room.\n\nJennifer was now naked, and sat up so that Mike could see her upper body. He'd seen her breasts many times, but never got tired of them. They were small and pert, like juicy pears on her chest that ached to be sucked. Her nipples were delicate pink and quite long. They stood like little pillars jutting out from the cone of her breasts because they were taut and swollen. The smattering of freckles that ran over her cleavage had always appealed to Mike and he often tried to kiss each one.\n\n\"Oh, Babe,\" Sarah moaned, letting her eyes trace all over her lover. \"You are so beautiful it makes my heart soar.\"\n\nFor an answer, Jennifer cupped a hand over the nape of the blonde's neck and dragged her head forward for another deep kiss. Mike watched their mouth's chew at each other hungrily, their passion making them rough. He doubted they realised all the little sighs and moans, gasps and groans they were making.\n\nWhile they kissed, Jen's hands sought out the hem of Sarah's tee shirt and dragged it upward. They broke the kiss only long enough for the garment to pass their lips. The yellow shirt lay crumple where it landed on the floor beneath the window.\n\nSarah was now kneeling on the bed, clad only in her denim jeans. Jennifer sat before her, her neck craning upward for the lusty, wet and probing tonguing her mouth was receiving.\n\nAlthough she was side on to Mike, he could still see Sarah's breasts. They were slightly larger than Jenny's, but just as mouth-watering. Probably a full cup size bigger, they pressed against the little mounds of the redhead and their nipples bumped and rubbed together as though in a miniature sword fight.\n\n\"Mmmm,\" sighed Sarah, shimmying her upper body to increase the duelling contact of breasts.\n\nJennifer gave a sharp intake of breath as she wiggled back. Watching her girlfriend's breasts bob for a moment, then leant forward and fastened her mouth onto the girl's throat.\n\nSarah moaned loudly and grasped the back of Jen's head, clasping it firmly to her. Mike heard sucking slurps as he watched his best friend draw a big love bite from the blonde's flesh. When she was satisfied with it, Jen glanced at Mike and winked. \"A girl's gotta mark her territory.\"\n\n\"I remember,\" he smiled, thinking back to all the bite marks and scratches she had left upon him.\n\nTurning back to Sarah, Jennifer used both hands to tug open the button and draw down the zipper in her jeans. Pulling the crotch down a fraction, she then thrust one hand inside, looking up into the girl's eyes as she did so. \"You're panties are wet, honey. Is it turning you on to be watched?\"\n\nSarah ran both hands through her own long hair, letting it cascade free down her back as she lifted her hips in a little grind against the probing hand. \"Ahuh. And then some. I'm so hot I can't wait to get sunk into your pussy.\"\n\nWith a surprisingly girlish giggle, Jen swatted her friend's ass. \"Well, you'll have to wait a few moments yet. Let's get these things off you, okay?\"\n\nIn one fluid motion, Sarah sat back from on her knees onto her butt. As she did so, she pulled her jeans off her ass and then Jenny helped yank them off her legs. The jeans hit the corner of the headboard and slid off the side of the bed.\n\nNow the only garment worn by the two beautiful young women was Sarah's panties. They were white cotton, with a little red logo on the front that said, \"Kiss here\". Without a word, Jennifer obeyed and pressed her lips to the outside of her lover's panties. Sarah leant back onto her elbows, watching her girlfriend closely, and spread her lovely legs wide for easy access.\n\nJennifer nibbled her lips against the damp cotton gusset. \"Mmmm, you smell as edible as always, Babe.\"\n\nMike could see Jen's tongue flick out and run the length of Sarah's hidden slit. The damp material clung to the wet flesh beneath and formed the outline of her pussy clearly. Using the flat of one hand to press Sarah's inner thigh further away, Jennifer put her nose to the cotton, just above the hidden clitoris and inhaled deeply.\n\n\"Mmmm, oh yeah.\" She turned to Mike. \"Isn't hot pussy just one of the best scents in the world?\"\n\n\"It is,\" he agreed, rubbing the covered length of his throbbing cock.\n\n\"Sure is,\" Jennifer nodded, before making a show of lapping her pink tongue over the white cotton panel.\n\nSarah flexed her hips, turning her drooling opening upward a little. \"Stop teasing, Jen, and kiss me. French kiss me.\"\n\nJennifer chuckled and pulled at the top band of the panties, stretching them out so that she could peer down into the wet nest of silky blonde hair. She looked surprised. \"Oh, you've trimmed it into a little landing strip.\"\n\nSarah laughed. \"Yeah. I wanted my lips bare but didn't want to go all the way, so I compromised. I know how you like to rub your cheeks into my damp pussy hair.\"\n\n\"Ahuh,\" Jen grunted, flattening her hand inside the panties and thrilling to the feel of the damp hair tickling her palm. Her fingers were pointed downward and her middle one pressed between the fleshy inner lips of her girlfriend's swollen sex.\n\nMike could see the blonde writhe her hips in response. The movement sank the tip of Jen's finger into the opening of Sarah's sheath, letting her feel the damp, soft, inner walls. \"Baby, you're flowing like a broken fire hydrant. I haven't seen you this turned on since we did that straight girl.\"\n\nSarah moaned and thrust her hips once more. \"Yeah, that was good. Reckon we converted her, alright.\"\n\n\"Darling, a lovely creature like you could convert the most dedicated of nuns.\"\n\nRemoving her hand, Jennifer sucked her glistening fingers. She licked her lips, signalling how tasty she found the moisture. With a renewed vigour, she grabbed at the hips of the panties and pulled them down, watching them glide over Sarah's smooth thighs.\n\nMike couldn't see the woman's pussy because her thigh blocked his view, but he could see the narrow two inch long and one inch wide strip of soft silk that was all that remained of the young woman's pussy hair. It was trimmed close to her skin, but he could still see the juice sparkling in its matted curls.\n\nPulling the panties from Sarah's pointed foot, Jennifer crumpled them into her hand and covered her nose and mouth with them. The girl's tiny breasts rose as her chest swelled when she took a deep, slow lungful of the sexy scent.\n\n\"Pussy hound,\" Sarah giggled, watching her lover's emerald eyes glaze over with desire.\n\nJenny didn't respond, she just took another deep breath of the damp garment. Moaning, she unravelled the white ball of cotton and turned it until she found the wet spot on the gusset. Staring at it for a moment, she then popped it into her mouth and sucked hard.\n\nMike felt his cock lurch forcefully and, for a second, though he was cumming. He'd never seen a girl do anything like that, and had assumed that liking panties was a guy thing. Obviously not, because Jennifer moaned as if she had just got a mouthful of the most exquisite tasting chocolate cake. Her eyes rolled up and she sagged down onto her haunches, letting the hand clasping the panties drop against her thigh. \"Sar, I adore you.\"\n\n\"Shut up and show me how much,\" the blonde purred, wiggling her naked pussy in offering.\n\nJenny didn't need another invitation. She threw the panties across to Mike and then put a hand on each of Sarah's inner thighs as she ducked her mouth down to the glorious fruit that was on offer.\n\nMike fumbled catching the panties, but lifted them from his lap and pressed them to his nose to experience the scent that had so aroused his lifelong friend. The dampness was very noticeable, quite a bit more than he had expected. In fact, he doubted he'd been with a girl who juiced as much as Sarah. Although, that wasn't that many; he'd not really been dating since Jennifer had started fucking him. Why eat anywhere else when your usual restaurant provided a wonderful banquet on your slightest whim?\n\nBreathing deep, he drew in the girl's intoxicating aroma. It was heady and contained hints of musk and desire. With a slight moan of lust, he reluctantly put the panties aside so as not to miss any of the act unfolding before him.\n\nJenny slid her tongue through the moist folds of Sarah's sex. The blonde's fleshy, floppy inner lips rippled around her probing tongue in a way that left the redhead buzzing with lust.\n\n\"Jeez, Jen!\"\n\nLapping the full length of the hot slit, Jennifer fluttered her tongue around the hood of her girlfriend's pearl, wakening but not touching it. Her warm breath gusted out over Sarah's wet flesh, making it tingle.\n\n\"Oh God, Baby! Put it in, for heaven's sake!\"\n\nChuckling into the eager cunt, Jen used her left hand to spread open its petals, exposing the gentle pink inside. She pursed her lips and planted a puckered kiss upon the intimate area. Sarah bucked and issued a little gasp. With her index and middle finger, Jennifer made a vee, spreading the lips open around Sarah's clit, making it stand out from its protective hood.\n\nGently, tenderly, she drew her tongue around the little nub, circling its sides. As she brushed the sensitive pearl, Sarah grunted and humped her pussy into Jen's face. \"Ungh! Oh, yeah! Come on Baby, do it, you know what I like.\"\n\nJennifer did. She pursed her lips over the throbbing little button and wriggled her tongue over it in rapid lashes. At the same instant she stiffened two fingers on her right hand and thrust them inside the hot hole. Sarah grunted in delight at the penetration, feeling her lover shove them in to the hilt.\n\nCurling them, Jenny twisted her fingers about, stroking all the crinkled inner flesh, probing to the very centre of her girlfriend. Her mouth and hand worked in unison, driving the blonde mad with delight. Long acquaintance left Jen knowing just how Sarah liked to be mouthed, just how she liked to be fingered. At the perfect moment, she stopped her tongue lashing, locked her lips and hummed as she pistoned the pussy like a rocket.",
        "Sarah went wild.\n\nMichael could not believe it when the girl thrashed about, her body arching so that only her head, shoulders and heels touched the bed. Jennifer was lifted with Sarah's hips, but didn't lose her hold as she continued to stir the honey pot until it turned molten.\n\nThe blonde went stiff and juddered and, as she did so, Jen homed her fingertips in on the girl's g-spot with explosive results.\n\n\"YYYYeeeeeesssss! YYYeeeesss! YesYesYesYes, YES!\" Sarah wailed.\n\nShe started humping her hips into Jenny's mouth. The rough pounding smeared her glistening juice all over her lover's face, but neither girl cared.\n\n\"Fucking hell!\" Mike whispered.\n\nSarah let out a long, almost painful groan and sagged limply back to the bed. It left Jennifer hovering over her, grinning broadly down. \"Show off. That was a good one, huh?\"\n\n\"D-Does she always cum like that?\" Michael asked.\n\nJen shook her head. \"Hardly ever.\" She then laughed. \"When she does cum hard though, it's like a train wreck.\" Tenderly, she caressed Sarah's sweat-soaked forehead. \"Gotta keep my girl happy. That way she forgives me when I get on her tits.\" She cocked her head to one side thoughtfully and smiled, \"Not literally. You got that, right?\"\n\nHe laughed. \"Yeah, Jen, got it loud and clear.\"\n\n\"Good,\" she grinned, turning to peer down into Sarah's eyes. \"You okay, Babe?\"\n\nBlowing a jet of hair to dislodge a sweat-soaked lock of hair, Sarah answered with a faint voice. \"Gimme a minute to get my breath back, then I'm going to rock your world, red.\"\n\nCoquettishly, Jennifer twirled a lock of her auburn hair. \"Are you going to make me tingle?\"\n\nSarah giggled and playfully swatted her lover's thigh. \"Girl, I'm going to make you melt.\"\n\nWrinkling her nose in an affectionate manner, Jenny slid down the bed until she was sat on its bottom edge, facing Mike. \"Enjoying the show so far?\"\n\n\"Loving it,\" he answered, his voice thick with lust.\n\n\"Don't peak too soon,\" she said with a smile, \"we've not even started the bit you want yet.\" She glanced down at the fat bulge along his upper thigh. \"And try not to blow your load, Michael. Save that for inside my ass, okay?\"\n\nThere was a tormented hitch in his voice when he replied. \"I'll try, just don't talk like that, huh.\"\n\n\"Oh, Mikey, I'm going to be talking a lot dirtier than that in a minute. So will Sar.\"\n\nSarah sat up and slowly slid down the bed to sit beside her girlfriend. The room was so small that their legs nearly knocked with Michael's; there was only a couple of feet between the bottom of the bed and the sofa. Sarah kissed Jennifer's cheek and patted her thigh gently. \"Ready Jen. Assume the position.\"\n\n\"Yes, Ma'am.\"\n\nSmiling, the redhead stood up, twisted around to bend over the bottom of the bed and placed her hands upon the sheets. It presented Mike with a close view of her lovely ass.\n\nCrack! Sarah spanked Jenny's left buttock and grinned at Michael. \"Hasn't she got a wonderful ass? It's so round and smooth, pert. I just love it.\" Crack! She spanked it again, leaving a red handprint to blossom as Jennifer gave a little wriggle. \"It was made to be spanked,\" Sarah continued. \"But it was also made to be kissed.\"\n\nDucking forward, she lightly placed her lips into the centre of the rosy flush and kissed it. Pulling back about an inch, she looked at the smooth skin and then gave it another kiss.\n\n\"Mmmm,\" she murmured, lifting a hand to caress the backs of Jenny's thighs. \"Her skin tastes so sweet.\"\n\nMike's eyes followed her hand as it drifted in circles, gradually moving from the slim thigh onto the curve of Jennifer's right buttock. Her hand clasped the flesh and gave it a squeeze, then pushed the globe away. It made the crease in Jen's ass widen, revealing the furrow to the man's gaze.\n\nHidden in it was the pale pink puckered ring of Jennifer's asshole. She was perfectly clean and the little muscle flexed a small amount as Sarah played with the cheeks of her ass. The blonde slid down onto her knees beside her girlfriend, then used her free hand to take hold of the girl's left buttock. Now her hands were both filled, she spread them apart, widening the crease so that Michael could see the asshole clearly.\n\n\"Look, Mike,\" she said quietly. \"Isn't it pretty? It's like a pale rose flowering just for us.\"\n\nTilting her face, Sarah blew a slow, gentle jet of cool breath over the puckered muscle. It twitched and Jennifer rose up on the balls of her feet and then sank back down. \"Oh, Honey!\"\n\nBecause her ass was held spread, Mike could watch the crinkled little sphincter tighten. It drew into a narrow slit, then relaxed back into a circle. He noticed that the little pink orifice was actually a raised circle of puckered flesh. It was probably due to the way Sarah was pulling that exposed it thus, but whatever the reason, it made his cock feel like a steel bar.\n\nOnce more Sarah dipped forward and blew gently upon the nether gate. \"Mmmm, it looks good, doesn't it? Very good. Good enough to eat.\"\n\nWith that, she slowly extended her tongue. Her eyes flicked to Michael to see he was watching carefully and that her face wasn't blocking his view, and then she pressed her tongue into the centre of Jennifer's pucker.\n\nThere was no licking, she just kept her tongue stiff and let it rest there.\n\n\"Ohhhh,\" Jenny moaned. \"Hmmm, yes. That's nice, Baby. Tongue my ass. Stick your tongue right in my asshole.\"\n\nSarah pulled away and moistened her lips. Pulling her girlfriend's buttocks wide again, she pursed her lips and planted a long, tender kiss right on the crinkled hole. She hummed after a second and that made Jennifer squeal in delight and jerk away. Sarah giggled and spanked her ass again. \"Stay still girl!\"\n\n\"Owwwuhh!\" Jennifer complained, half-heartedly. \"It tickles!\"\n\n\"So does this,\" Sarah whispered, putting out her tongue and quickly flickering it all over Jen's asshole. Mike watched the woman lave the girl's tight sphincter and saw it pulse in and out with pleasure. After a minute of tongue lashes, Sarah timed it just right so that when the little ring flexed open a fraction, she stiffened her tongue and forced it into the pink centre.\n\nThe circular muscle closed on the probing length, grasping it as it was pushed further in. Jen sighed and relaxed. Her asshole blossomed and allowed Sarah to give it a tongue fuck.\n\nMike moaned in lust and unbuckled his trousers, releasing his aching staff. He closed a fist around the hot, fat meat and began to masturbate himself to relieve the tension. His eyes never left the amazing sight before him as he watched the stunningly beautiful blonde force her tongue in and out of the young redhead's backdoor.\n\nHe couldn't believe that two such lovely and girly women would do something so kinky.\n\nSarah readjusted her grip on Jennifer's ass to spread it as she thrust her tongue into the puckered hole. Her hot breath beat on Jen's most sensitive skin and made a shiver run up the girl's spine. With constant stimulation, Sarah had softened the taboo ring until it stayed open when she pulled back.\n\n\"Look Mike!\" she gasped. \"What a little slut she can be, huh? Our Jenny is a dirty girl, alright. She loves my tongue up her ass, don't you Baby?\"\n\n\"Fuck yeah!\" Jen breathed, her voice laden with desire. \"Get it back up there Honey. Fuck my ass with your tongue. Fuck it deep. Give my ass a French kiss.\"\n\nSarah complied and thrust her tongue as deep as she could. Jen gasped and hunched her back, her hands making fists in the bedspread. \"Jesus! Oh yeah! Oh, hell yeah!\"\n\nMike watched Sarah's chin dance up and down as she mouthed Jennifer's asshole, and saw her tongue wriggling in and out of the clenching hole. Saliva ran down the crease of Jen's ass and mixed with the clear fluid drooling from her cunt. Strands dripped from her pussy lips and also from Sarah's chin. The slathering noises the blonde was making as she hungrily tongue-fucked the puckered gate gave him an extra thrill.\n\nFinally, Sarah sat back on her heels. \"Look Michael. Look at that gaping fucking hole. Isn't it amazing? God it gets me wet seeing that!\"\n\nReleasing Jenny's left buttock, which hardly narrowed her crease at all, Sarah slipped a finger into her mouth and made it wet. She then took it out and held it upright for Mike to see. \"Guess where this is going?\" she purred.\n\nGently, she used just her index finger to scoop up some of the saliva running down Jenny's butt and stroked the fluid back up to her asshole. With the pad of her finger, she circled around and around the forbidden gate. Jennifer rolled her hips in anticipation. \"Oh Baby. Do it. Go on, do it.\"\n\nMaking tiny spirals, Sarah worked her finger over the still slightly gaping ass and settled it in the centre. It took barely any pressure at all to begin sinking it into the tight chute.\n\n\"Mmmm,\" the blonde murmured as she felt the inner heat bathe her digit as the anal canal clutched it and squeezed. \"That's a girl,\" she whispered, encouragingly. \"Take it, Jen. Take my finger all the way into your asshole.\"\n\n\"I am,\" Jennifer giggled, looking over her shoulder at Michael. She saw he had his cock in his hand, slathering his glistening pre-cum all over his thick shaft. She loved to watch him wank that hard rod and so she gave him a sexy wink. \"Liking it so far?\" \n\n\"Fuck yes!\" he nodded, not able to meet her eyes. He had that wide-eyed stare of a man who cannot believe what he is seeing, but dare not blink in case he missed anything. She smiled and blew a kiss at Sarah. The blonde blew one back then returned her attention to her lover's asshole.\n\n\"I'm half way in,\" she said, providing commentary for the drooling man. \"It's a tight little slot, this ass. I bet it will feel wonderful as you force your cock up it. I bet it feels like it is trying to choke the life out of your dick. Yeah. It sure is tight.\"\n\nKeeping her finger straight, she pressed it in past the second knuckle. There she rotated her hand ever so slightly, so that her finger pressed evenly outward on the tight muscle, softening it. Using a miniscule corkscrew motion, she worked her finger deeper into her girlfriend's ass until she could go no further. \"That's it,\" she told them. \"She's taken it all.\"\n\nHolding still for a moment, she let the man see her finger tightly gripped by the puckered pink ring. It was beautiful to behold. Then she began to slowly withdraw it using the same rotary motion she had to bury it. When just the pad was left inside, she ducked forward and licked her finger all over, adding more lubrication to it. Then she slowly slid it back home again.\n\nMike watched in delight as the blonde buried her finger in his best friend repeatedly. Each time she sped up the insertion and withdrawal until she was pumping it in and out like a tiny cock.\n\n\"Ungh!\" Jennifer gasped, her body moving in time to the rhythm. \"Uh! Oh God that feels so wonderfully dirty! Fuck me, Sarah!\"\n\nThe kneeling woman complied, thrusting her finger in and out faster. Suddenly she slowed and Michael felt his cock jerk with lust when he saw her slide her middle finger straight, alongside her index. Carefully, she pressed them both into the puckered ring and it expanded to take them. She sank them in slowly while Jennifer moaned in uncomfortable delight.\n\n\"Is it okay, Babe?\" Sarah asked.\n\n\"Oof! Yeah. Ooo! Okay, yeah. Do it, Hon. Fuck me like a slut.\"\n\nSarah coughed up a mouthful of spit and spat it right onto the crinkled ring. Her disappearing fingers dragged the lubrication inward, easing their passage. She felt her two fingers squeezed hard by Jenny's ass muscles, but worked them all the way in regardless. Only when her knuckles and curled fingers were pressed up tight against the flexing rose did she stop.\n\n\"There you go, Mike. Two fingers up her ass. What do you think of that?\"\n\n\"I think I'm going to cum like a volcano!\" he grunted, his hand sliding fast on his staff.\n\n\"Don't you dare!\" Jennifer scolded. \"Stand up and get that thing up my asshole where it belongs.\"\n\nHe glanced at Sarah, who smiled. \"You heard the lady.\"\n\nStanding, he pulled his shirt over his head, too eager to get it off to undo the buttons, then he kicked off his trousers and shoes. Wanking his cock, he moved close to the bent Jennifer, aiming at her stuffed asshole.\n\n\"I think it needs some added lube,\" Sarah purred, looking up into his eyes while still finger-fucking her lover's pucker. \"Be a darling and pop it in my mouth, would ya?\"\n\nHe didn't need asking twice. Swinging his bobbing erection around, he pointed it at Sarah's beautiful face and she covered it with her mouth. Instantly he was plunged into a hot, wet, sucking heaven. Her tongue squirmed under his shaft, rubbing flatly across his sensitive frenulum, making him gasp.\n\nUsing no hands, because one was still holding Jennifer's ass cheek spread and the other was fucking in and out of her, Sarah swallowed his length with fish gulps. Her lips pulled back and then closed an inch further along his shaft each time. Mike was amazed at how easily she seemed to do this. Surely a preferential lesbian shouldn't be as good at sucking cock as she was proving to be!\n\nShe pumped her mouth up and down his pole, turning it frothy with her saliva as she went. Strands of drool soon hung from his underside and her chin. She wiggled her tongue out to collect them and spread them across his fiery stalk.\n\nHe grunted when he felt her sink so far onto his weapon that his cockhead nudged the back of her mouth. That grunt turned to a gasp when she gulped and swallowed him down her throat. Pressing her head forward firmly, Sarah forced his cock down the tight passage of her gullet, her muscles forming a grasping ring on his flesh.\n\n\"Jesus! Fuck!\" he moaned, his hand tangling in her long blonde hair. \"Oh God!\"\n\nJenny had been pressing her forehead to the sheets, lost in her own pleasure of the ass fingering, but now she lifted her head and grinned at him. \"Skilled little minx, isn't she?\"\n\n\"Hell yes,\" he panted, looking down to marvel at Sarah's lips nuzzling against his pelvis. \"Bloody hell!\"\n\nSeductively slowly, her eyes turned up to meet his and he found himself gazing deep into them as she deep-throated his shaft. Her head drew back, letting him slip right out until only his pee slot was still touching her lips, then she sank it back so that his whole fat length slithered down her throat.\n\nIt was a miracle to him how he found the restraint not to cum.\n\nAfter three more swallows, Sarah drew away completely, loudly gasping in air. She grinned up at him and then inclined her head toward her pumping fingers and the redhead's plundered asshole. \"Want to slip it in there, now?\"\n\n\"You bet your life I do,\" he growled.\n\nWaiting until his hot cock was beside her fingers, she then slipped them out and guided him up to the forbidden hole. \"There you go, stud, she's all yours. Take her and fuck her hard. She likes it like that,\" Sarah giggled. \"At least she likes it like that when I fuck my strap-on up there.\"\n\nMichael felt Jennifer's ring pucker and flex against the hot head of his cock. He pushed gently but firmly and felt the tight muscle open for him, inviting him inside. He went with a song in his heart. The crinkled skin of her asshole slithered wider around his fat shaft, clutching it tightly, but expanding slowly to accommodate. Michael moaned in pleasure and Jennifer moaned in discomfort.\n\nLeaning over her slick back, he hooked a forearm around her belly and drew her firmly against him, giving him more leverage to force his thick meat into her. He felt the springy muscle give a 'pop' and his cockhead entered her fully. He closed his eyes due to the pleasure of the tightness and dry warmth. Sighing, he hunched his hips and fed his shaft into her rear eye.\n\n\"Ungh!\" she grunted. \"Fuck that's thick. Oh, God Mike! Wow. Yeah. Ahuh. Ah! Uh, nearly there. Oh, fuck.\"\n\nHer moans and gasps excited him. Knowing that she was willingly taking this uncomfortable fucking made his blood hot. Inch after fat inch he worked his shaft into her tight pucker, savouring every clutching pulse the muscle gave. Finally he was buried all the way and she let out a sigh of relief.\n\nMike kissed her shoulder blade, still hugging her waist firmly against him. Now, he had the wonderful feeling of having her soft buttocks moulded fully to the curve of his groin while his rampant sword was sheathed right up into her bowels. \"Christ, Jen. That feels so good!\"\n\n\"Yeah, it does, doesn't it,\" she said, her eyes closed tight and her brow wrinkled. Now that he was motionless, her body was adjusting to the stretched feeling and pleasure was chasing away the discomfort. All the nerve endings in her asshole tingled from the invading fiery spear, but now it was a tingle of growing delight.\n\nWith a quiet mewl, she wiggled her ass to signal he could begin.\n\nGlacially slowly, he began to withdraw. She gasped, as did he, at the feeling of her asshole dragging over his thickness. It seemed to take forever, but finally the rim of his cockhead butted up to the inside ring of her sphincter. Not wanting to stretch her too much until she was more relaxed, he went no further out and began to slide back in.\n\nJennifer whimpered and shivered in his grasp. \"Slowly Mike. Oh, that's it. Like that. Oh! Ohhh, yeah. Ahuh. Jesus. Yeah. Oof! Ow! Slowly. Yeah.\"\n\nHe followed her instructions and fed his cock up her ass inch by glorious inch. When he had his hips nestled up to her buttocks for the second time, he paused for a moment. Gradually he repeated the motion as she got used to his thickness. After that, he slowly increased his tempo, working that little bit faster each time.\n\nSarah had knelt beside them, her face at his hip getting a close up view of her girlfriend's asshole being fucked, but now she moved onto the bed, getting on her hands and knees before Jennifer. \"Your turn girl. Poke your tongue up my ass for me, would you, my love?\"\n\nJennifer nodded, moving her mouth between the blonde's cheeks. Sarah's asshole was a light brown in colour, standing out clearly from her flawless skin. Mike leant to the side slightly so that he could see when Jen began to lap at the crinkled pucker. He slid his cock back and forth in her asshole and watched as she slathered her spit all over another.\n\n'I must have died and gone to Heaven,' he thought.\n\nFaster now, he humped his rigid cock into the beautiful redhead's ass. She took him easily now that she had adjusted, but it was still a tight fit. Her sphincter clutched at his hammering rod like it never wanted to let go.\n\n\"Is it good in her ass?\" Sarah asked over her shoulder as Jennifer curled her tongue into a point and worked it deep.\n\n\"Yes!\" he grunted over the slapping noise of his hips and her buttocks. \"It's great!\"\n\n\"Good,\" the blonde smiled. \"You'll be able to tell me which of us is tighter.\"\n\nFor nearly ten seconds that didn't register through the intense pleasure of his cock being driven deep into humid ass, then his eyes flew wide. \"You mean...?\"\n\n\"Yep. Two for the price of one today. Just give her a few more minutes to get me all nice and slippery.\"\n\nMichael purposefully slowed his humping then, hoping the lesser pace would allow him to stave off his desire to cum. He took it slow and steady, pumping Jenny's ass almost lazily as he watched her tongue fuck her girlfriend's puckered backdoor.\n\nSarah rolled away from Jen and crawled down the bed, then turned around on her hands and knees until her ass was toward Mike. \"Here it is, but take it slow.\"\n\n\"Yeah, Mike, go slow,\" Jennifer cautioned.\n\nWith a little reluctance, he pulled his hard cock out of Jen's ass. They both grunted in delight when her sphincter popped over his bulbous cockhead.\n\nQuickly, he moved a step to the left and nudged his large glans up against Sarah's backdoor. She shifted her legs a little wider, positioning her asshole at the best height for him and then he pressed forward.",
        "She was a lot more resistant, not having had the finger-fucking first. He felt his cock want to bend in the middle, then she took a deep breath and her rosebud blossomed. With a surprised gasp, he was taken inside, his cockhead snapping through the tight ring of muscle to house itself in her inner warmth.\n\n\"Oof!\" she yelped. \"Ow! Oh, fuck that's big!\"\n\n\"Not quite the same as a strap-on, is it?\" Jennifer giggled, laying kisses down Sarah's spine. When she reached the swell of ass, Jenny laid her head upon it like a pillow, eyes fastened on the point where man became girl. \"Oh, that looks sexy,\" she murmured.\n\nMike fed his cock up Sarah's taboo chute the same way he had Jennifer's; slowly and carefully. As before, it took time but eventually he had got her accustomed to the impalement and was sliding back and forth at a steady pace. She bucked a little at first, the thickness of him stretching her sphincter uncomfortably, but now she was getting used to it.\n\nWhen he had a good speed going, Jennifer glanced up at him. \"Pull out a sec, will you?\"\n\nNot really wanting to, he did as he was told. When his cock popped out of her girlfriend's sphincter, Jennifer ducked forward and wrapped her lips around his slick shaft.\n\nJust like that.\n\nNo quick grip of her hand to wipe it, no slow taking, just one quick plunge to get as much as she could. Wrapping her lips around him, she pumped her mouth up and down his cock, tasting the mixture of pre-cum and ass.\n\n\"Fuck me!\" he gasped, barely holding back from filling her mouth with boiling spunk.\n\n\"Anytime,\" she grinned, releasing his shaft and then feeding it back up her lover's ass.\n\nMike lost it. He was too overcome by the kinky act and could hold back no longer. Giving his lust free reign he grabbed hold of Sarah's waist and savagely plundered her rectum.\n\nHe was intense, he was forceful, he was a Viking.\n\nShe grunted in mixed pain and pleasure as her sore ring was used mercilessly. Back and forth through its clenching grip he ploughed, yelling as he felt his climax begin.\n\nWith a last mighty shove, he buried himself to the hilt in her ass so hard that he drove her flat to the bed, himself falling on top of her. As they bounced, his cock hosed its hot tribute into the very depths of her bowels, bathing them in a salty white tide.\n\n\"YEEEAAAHHH!\" he growled, slamming his hips hard against her buttocks. Sarah could only cry out in ecstasy as she endured his assault, pinned beneath his savage bulk.\n\nFinally, he froze and then sagged upon her. They lay there for a minute until he felt Jennifer pressing his side, trying to roll him off Sarah. His senses returning to normal, he let himself be turned and moaned when his cock came out of that heavenly hole with a sucking squelch.\n\n\"Look what you've done,\" Jennifer grinned, spreading her lover's ass.\n\nMike leaned over and saw the tender hole, red now through abuse. It flexed and heaved as if struggling for breath and then a small drip of cum bubbled up to puddle over the crinkled muscle. A little more followed it as his spunk leaked out of her rectum.\n\nIt was the sexiest thing he had ever seen.\n\nOr was until he saw what Jennifer did next.\n\nWith no word, the auburn haired beauty leant forward and began to lap at the oozing cum like a gentle kitten.\n\n++++++++++\n\nFROM THE AUTHOR: I hoped you enjoyed that. If you did, please take a moment to send me feedback. The more in-depth about what you liked the better. It is what motivates me to keep writing. As always, my deepest thanks to OMEGAZONE for taking the time to edit my work."
    ],
    "authorname": "MindFiend",
    "tags": [
        "lips bare",
        "tongue wriggling",
        "thing jennifer",
        "sarah grunted",
        "finger straight",
        "he'd girl",
        "sofa facing",
        "watching girlfriend",
        "mike watch",
        "hair sarah"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/ass-ignation"
}