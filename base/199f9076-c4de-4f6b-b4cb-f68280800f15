{
    "title": "The Preacher Man",
    "pages": [
        "Chapter 1. The Stone Floor\n\nI lay prone and exhausted on the floor, arms by my sides, the smooth stone against my forehead hard but pleasantly cold. I was midway into the last hour of prayer for the day, the hour of The Prayer of Repose, and I could feel the polished stone chilling my sweat and pulling the excess heat from my body. I remained motionless in my thin white Initiate robe. After the previous grueling hour of The Prayer of Weakness, it would be so easy to drift and relax and dream. But that would be a fatal mistake.\n\nI am Ilias, and tomorrow will be the first day of The Holy's Year 8235 and the beginning of the 52rd year of the reign of Abdul Quddus, the 83th Great Cunif Califar and First Servant of the Holy. The numbers signify a year of Jubilee. It will also be the year I reach twenty-one years of age, and as such tomorrow I will be at the last of the three great gates of my childhood. In two days I will either be an adult or dead.\n\nThe faint sounds of my classmates' breathings are totally ignored. My senses are tuned to one purpose, to detect the presence of Fateen as he walks among the Initiates in his clothed feet. He is Citizen-Level 13, only three levels below royalty, and it is somewhat unusual for such a high ranking Priest to work as Imul with children. But Fateen loves his work, and he is a master of silent walking.\n\nWhen I was very young, two years before my eighth year and the first of my childhood gates, a group of my classmates and I had quietly discussed Fateen's age. Recklessly ignoring the danger of the conversation, we had all concluded he must be at least a hundred years old, and probably much more. It was impossible to tell by outward appearance of course. With the anti-aging drugs, Fateen looked exactly the same as when he completed his own journey from child to adult. But to all of us though, the image of Fateen as child was beyond our comprehensions.\n\nThere has been no detectable sound, but I sensed the vibrations of footfalls along the stone, and then, stillness. Fateen was standing a meter in front of me. I did not have to open my eyes to know upon whom his gaze was fixed. For all the hundreds of Initiates in my class, only I had never received demotion in Open Prayer. In all the years, I was the only Initiate Fateen had never managed to trip up, and we both knew tonight was his last chance. I focused myself in a Prayer of Suspension, and kept my heartbeat slow and resting.\n\nThere was the slightest sound of a touch as Fateen's onyx rod came upon the Summoning Apex of the stone before me. My head snapped up in obedience with my eyes wide open, alert and bright. Any sign of drowsiness now would be a sign of drifting and impure thoughts. Such a mark of weakness so close to my control gate could well be a fatal handicap in my imminent competition for survival with my classmates. By holy Law, one tenth of Initiates do not survive each childhood gate. I gazed into Fateen's eyes and waited for his test.\n\n\"Ilias, describe the holiness of the digits.\"\n\nI kept all expression of surprise from my face. Fateen had asked me a question proper for a child approaching his first gate, not his third. Any slip now with such a simple question would be a disaster. I quoted verbatim from my earliest Catechisms.\n\n\"The digits two, three, five, and eight are holy, ordained by the Holy for His Greatness. The digits four, six, and nine are the digits of the Earth, not directly holy but formed by holy products. The digits zero, one, and seven can not be the product of holiness, and thus must be the digits of Shaitan.\"\n\n\"Ah, very good young Ilias. But how do we know this is true?\"\n\nA dangerous question to ask, especially for someone below royal level. But it was an even more dangerous question for an Initiate not to answer. I worked to keep my voice calm as I spoke the correct affirmation from The Book of Bel'dar. \"Because it has been preached, and the Holy is One, and Bel'dar is His one true preacher. Thus he preached, therefore thus he preaches.\"\n\nFateen stared at me, his eyes hard and cold. I returned his stare in obedience, and almost didn't catch the slight lifting of his rod off my Apex. I immediately snapped my head down and closed my eyes. There was the softest of sounds as the rod gently touched the stone again. Damn him! His summoning call was far softer than appropriate. But it would be hard to debate the issue if I were dead. My eyes snapped up and locked with his. I watched him glare at me.\n\n\"And what is the order of the day?\"\n\nAnother question from my early youth, this one going so far back my response came from my nursery days, when females encapsulated in blue body coverings watched and cared for us as the priests taught their lessons. I replied immediately. \"The order of the day is based on the holiness of two, three, and eight. One third of our time is for The Holy, one third for Earth, and one third for Shaitan. The holiness of two divides the Holy time into morning prayers and evening prayers.\"\n\n\"And what is the direction of the day?\"\n\n\"The four morning prayers take us from Shaitan to Holy. Then in a state of Holy grace, we work eight hours for our masters the Priesthood and the Guilds. The four evening prayers return us from Holy to Shaitan, leaving us eight hours to dream in his low impurity.\"\n\n\"And what are the names and directions of the prayers?\"\n\n\"The morning direction is mind to body to church to Holy. The names of the four hours are The Prayer of Ascension, The Prayer of Purification, The Prayer of Wonder, and the Prayer of Counted Failings. The evening direction is the reverse, from Holy to church to body to mind. The evening prayers are The Prayer of Uncounted Failings, The Prayer of Joy, The Prayer of Weakness, and the Prayer of Repose.\"\n\nThe rod left the Apex. My head snapped down. There was the faintest whisper of a click. My eyes and head snapped back up, none of my internal fury visible upon my face.\n\n\"Tell me Ilias,\" Fateen whispered without a sound, moving only his lips. \"You are the top student. There's no doubt you'll pass tomorrow. We're all expecting you to book the run. How far will you ride the lion?\"\n\nWas he mad?! To begin chatting as an Initiate during Prayer, especially about personal ambition, would mean instant death. And yet, not to respond on point to such a direct question would also disqualify me from adulthood. Did he really hate me that much? If I spoke to such a question, even with my lips alone, my death was assured; and his also, once the security videos of this conversation were reviewed by the local execution council. But if I remained silent, it would be up to Fateen to decide whether to press a charge of disobedient silence against me.\n\nI realized my Imul had entwined us, both of us holding both our lives in our hands. I had first choice, to decide whether we both would die, or if we both had a chance to live. If I voted in silence for life, both our fates were in Fateen's hands. I stared at him and thought, \"Perhaps he missed his last chance for promotion, or perhaps he is so old the anti-aging drugs are about to fail anyway. Does he hate me so much, that he will drag me down with him into oblivion?\"\n\nI had no wish to die. My mouth remained closed, my lips unmoving. I waited for Fateen's decision.\n\nThe rod left the stone. My head snapped back down. After a timeless period of utter silence, I heard the whisper of my Imul's dry voice. \"Excellent Ilias. Your discipline serves you well.\" I sensed the faint clothed footfalls moving on.\n\nChapter 2. Day of Judgment\n\nAccording to the preacher's texts, The Holy revealed His new calendar when Bandar the Wanderer entered the seaport city of Punta Arenas at the southern end of the ancient and mythical country of Chile. He came less than a month after the War of the Burning Metals and the blazing of Shaitan's fires across the globe. Eight years later the Holy revealed Bandar as His preacher and anointed him Bel'dar, creating the first of the Cunif Califar.\n\nWe are all taught geography as children of course. It is fascinating to think what life must have been like back then, with the survivors of the war forming a global refugee population. The southernmost areas of the globe suffered by far the least of the fallout, and for decades they were the only regions habitable. The place that eventually became Bandar Arenas had one of the lowest radiation levels in the world outside of Antarctica, and it was a magnet for humanity.\n\nIt's difficult to imagine how small the city was at the beginning. The Book of Bel'dar suggests its population was only about 100,000 before the war, 2% of the present size of five million. By current law, both the world capital and the Priesthood contain one fifth of the world's population.\n\nIt took the Earth several hundred years to recover from the war. Two of the most serious isotopes in the fallout were cesium-137 and strontium-90. They both have half-lives of about 28 years. It also took several centuries for the ozone layer to recover from being destroyed by the nitric oxides produced by the bombs. The primary lingering health concern from the war is now carbon-14, with a half life of 5600 years. Fortunately the oceans and biosphere have recycled much of it out of the atmosphere.\n\nBandar Arenas is the southernmost city on Earth, at 53 o 10' S and, by definition, 0 o 0' W. There are also 120 townships scattered in North and South America, with populations averaging 167,000 each. Each township is sponsored by one of the 120 Guilds, and the Priesthood is the sponsor of the capital.\n\nThe name of my childhood township is Anqara, and it is the home township of the Guild for specialty metal fabrication. We are located at 48 o 20' N, 0 o 6' W, built at the ancient site of Bagotville, Quebec. Anqara has the distinction of being the farthest township from Bandar Arenas, but with our close match in longitude with the capital, we also have the smallest shift in solar time. Our solar noon occurs only 24 seconds later than official solar noon. Official time is the same everywhere of course. There are no time zones. The rhythm of the daily Prayer is not fragmented. \n\nIn Bel'dar's calendar, each year has 2x2x3=12 months, and the months have kept their ancient names. Each month has 2x3x5=30 days. In addition to the twelve months, there is a five-day festival to celebrate the Holy's Judgment. The festival is at the beginning of year, shortly after the summer solstice in the southern hemisphere. When the calendar year is divisible by twelve, the festival is lengthened to eight days in order to keep the calendar in synch with Earth's solar orbit.\n\nThe festival of The Judgment is the appropriate time for the childhood gates, and also for the gates that control adult advancement from one citizen level to the next. The childhood gates are used to test and cull all male children as they enter their 8th, 13th, and 21'st year of life. Each of the three gates culls 10%. There is also continuous culling due to medical, behavioral, or heretical problems, for both children and adults. The end result is 65% of the 120,000 male children born each year survive the challenge of entering adulthood.\n\nThe First Day of Judgment of 8235 began as usual for me with 6 AM prayers. I and the 577 other members of the Initiate class of Anqara found ourselves in the presence of the Bandar Arenas test monitor. Some seemed to find it difficult not to be intimidated by his purple insignia of royalty.\n\nThe class moved through the familiar cycle of the morning prayers. The Prayer of Purification hour was filled with tests of power and form in the martial arts. The exhaustion tests of endurance would come later in the evening Prayer of Weakness.\n\nAt 10 AM I began eight hours of qualifying tests with the Guild that had been sponsoring me since my thirteenth year. I have spent the last eight years of my life as an acolyte member of the Security Guild.\n\nSecurity is a coveted Guild for membership. It is a small Guild, only three thousand adults, but it is very well represented in the royal levels. All rulers and royalty are part of the Priesthood of course, but 25 of the 4,092 current royals (citizen levels 16 through 23) entered royalty through the Security Guild. The previous Cunif Califar, Abdul Matin, Servant of the Firm, entered royalty through Security.\n\nThe ancient counterpart of the Security Guild would be a combination of domestic and international spy agencies. The Guild does not do installation and maintenance of the worldwide monitoring systems, but it does have ownership of their operation and technical evolution, and Security works closely with the Priesthood, in particular their embedded military and police units.\n\nThe Security Guild's township is called Jizari. It is located 360 km northeast of the capital, across the Straits of Magellan at the ancient site of Rio Gallegos, Argentina, 51 o 37' S, 1 o 37' E. Not surprisingly, Security's home is the closest township to Bandar Arenas.\n\nThere is a saying all males learn in nursery school, that the boy chooses the girls, but it is the Guild that chooses the boy. As a young child though, I discovered I have a unique talent, a secret gift that is the fuel for my hidden ambition. My gift let me choose my Guild. I have a perfect memory.\n\nAm I a mutation? Probably. So many of our religious practices evolved from the mutations problems of the war, and how urgent it was to adapt society to the new reality. The culling was necessary to stop the degradation slide of the human genome, and it made the Genetics Guild one of the most powerful organizations under the Priesthood.\n\nMajor genetic changes were engineered in the first few thousand years after the war, as the Genetics Guild mastered the science of writing DNA at the level of complexity of the human genome. Evolution jumped from geological to generational timescales, and the Ruling Priesthood became the supreme legislature for determining the definition of human.\n\nThe ability of the species to repopulate was a critical concern, and one of the first successful genetic modifications was to change the male/female probability birth ratio from roughly 1:1 to 1:3. There are currently 120,000 male births a year and 360,000 female births. Daily sleep requirements are also half of what they used to be before the war.\n\nAnother genetic modification made the human genome compatible with anti-aging drugs. No one has lived to be 400 yet, but with continual use of the drugs 300 to 350 years of life can be expected, with all but the last few months in fully functional health.\n\nMy memory mutation is a powerful gift. It goes far beyond the ability of perfect recall of experiences. I have perfect recall over everything I sense. I can stare at my monastery study monitor flashing several pages a second and then read what I've observed at my leisure when I have time to close my eyes. I was six years old when I learned the trick of stealing Imul passwords by glancing from the corner of my eye, watching them type long and rapid password strings. I would later replay their finger movements in my mind.\n\nFor years I did nothing with my illegal access to knowledge. But when I was nine and had passed my first gate, my class went through a basic course on network security, and I realized Anqara has a weakness in its local security design. There is a six-second window every night at 11:30 PM when the township's network establishes new security handshaking protocols with the worldwide web. During this period, worldwide Security can't monitor local data access directly, and relies on the local logs to bridge the six-second gap once handshaking is reestablished.\n\nBut there is a flaw in the local monitoring software. It polls central video memory every 400 milliseconds for the image being transmitted to my room's monitor. With access to the monastery computers through an unrelated course on graphical displays, I used my stolen passwords and left behind a small and I hope untraceable daemon.\n\nThe end result is I have fifteen 400-millisecond windows every night to access adult data. I start my process just after the end of the security polling cycle; loading the data into my video buffer, flashing it to my screen for 350-ms, and then shutting down and terminating the data request before the security poll asks my video buffer again what it is doing. End result? I get fifteen views a night with as much data as I can fit onto my screen, and there is absolutely no record of my activity.\n\nIn the last decade, I have had access to vast stores of information, far beyond what an Initiate is ever allowed to see. It is an extremely dangerous game. Sidestepping the local audit logs is not easy, but my greatest fear is someday showing that I know not too little but too much.\n\nWhen I was eleven years old, I decided that the only truly safe way of protecting the use of my gift would be to have access to the Priesthood's master security logs, and the only way to do that would be from inside the Security Guild. I modified my performance on my aptitude tests to appear especially attractive to them, and at my thirteenth year, when the Guilds pick their acolytes from the survivors of the second gate, I succeeded in my quest to have the boy choose the Guild.\n\nAnd the years passed. I reached my third gate. My final day of childhood continued. After four hours of Guild testing, I was pleasantly surprised to be served a lunch at 2 PM. Except for Guild training materials and courses, all children are completely under the control of the Priesthood, and the acolytes for adult Priesthood would be finding this a fasting day. But the other acolytes are owned by both the Priesthood and their Guild on Judgment Day, and it is permissible after morning prayers for the sponsoring Guilds to feed their acolytes.\n\nI was touched by my Guild's generosity. They had sent me a magnificent lunch, one worthy of a royal. There was a fine selection of delicate fishes and meats wrapped in small pastries, plus an assortment of fresh fruit slices and greens from the southern hemisphere. It wasn't a large amount of food, but with the Prayer of Weakness testing in six hours, stuffing myself now would be foolhardy. The lunch was perfect. I thought about the message my Guild was sending me with their extravagant feast as I savored each bite.\n\nI had to keep my wits about me during the last hours of testing. I was being asked to make intelligent guesses about matters that I had factual knowledge of only through my nocturnal data access. I intentionally made numerous guesses reasonable but wrong, especially those concerning the political alliances within the ruling Priesthood (the 87 Priests of Citizen Level 24 though 31).\n\nOne of the last tests from my Guild measured my memory and manual dexterity. I was shown long strings of random characters on a monitor for a brief period of time, and then required to rapidly type them. All adults have a minimum requirement of entering twenty-character complex passwords in ten seconds, but Security's requirement is a minimum of twenty-four characters in eight. I passed the test easily, overshooting my Guild's requirements by a considerable margin, but then holding back so as not to reveal my hidden talent.\n\nThe hours of Prayers passed quickly. I had no trouble with the theology. It did surprise me that the Hour of Weakness was used for unrelenting full-contact sparring. I am not the most aggressive fighter, but my form is excellent, and I received only three minor demerits, two for taking too long to defeat my friend Afeef, a clearly weaker opponent, and a third demerit for being too merciful with the selection of the combination kick that ended my final contest. The judge ruled I had a perfect opportunity for a back-knuckle strike to my opponent's nose.\n\nMy class spent the Hour of Repose in perfect silence. It didn't feel like a test until near the end, when I realized other acolytes bruised from the sparring or worried about passing might be finding it difficult to maintain the required perfect stillness. When the closing bell sounded, there were numerous sighs of exhaustion. We all rose and quickly walked to our small bedrooms. I glanced around at some of my classmates, trying to make eye contact and offer encouragement. The testing was over. Talking was not strictly prohibited, but it certainly wasn't encouraged either, and we all make our way back to our rooms in silence.",
        "I closed the door of my room as required, hearing the lock click and the door seal behind me. The time was 10:09 PM, and the Day of Judgment was almost over. Sometime within the next five hours, I would hear a gas hissing into my room. It would either be a simple nitrogen-oxygen mix, or something just as odorless but extremely lethal. By tradition, acolytes void their bladders and undress, in order to minimize the work of the acolytes in next year's class.\n\nSome acolytes doubt this, but bedrooms really are unmonitored. The human psyche needs a place to wallow in peace during the hours of low impurity, and the Priesthood does provide that place. One thing I've learned about the Priesthood over the years is that they are many things, but they are not liars.\n\nI actually fell into a restful sleep shortly after entering my room. I was that confident, and regardless the matter was out of my hands. I've learned the lesson to grab rest when I can. I was awakened by the faint sound of hissing air. I opened my eyes and glanced at the clock display on my monitor, 2:53 AM.\n\nIt was later than I expected. The test administrators are required by law to complete all executions by 3 AM. I shuddered as I thought about being one of the thousands of judges for the gate. A vast amount of the scoring is based on computer tabulation, but the final decisions are human, done over a worldwide teleconference. With over 87,000 Initiates per year, there are rumors of many heated discussions for the exacting rankings near the cutoff.\n\nI laughed at myself as I realized I was sniffing the air. My subconscious demand to live was overwhelming my reasoning. Sniffing the air made no sense. I tried to calm myself by thinking of the soft hissing sound as relaxing. I looked at my sealed door, and waited for my adult life to begin.\n\nChapter 3. Adulthood\n\nAt exactly 3 AM the hissing stopped and I heard my bedroom door unsealing. A moment later the lock clicked and a woman entered carrying adult clothes for me. I couldn't tell what she looked like of course. She was encased in a full burqa. Purdah (the curtain law) forbids any part of a woman's body to be visible in public. I thought she might be one of the wives of the monastery's priests. It was the first female I had seen in thirteen years.\n\nI got dressed quickly. My shirt had insignia on both arms, showing a bright green circle (the symbol for Citizen Level Two), and underneath that the insignia of the Security Guild. There was also a small card telling me where to report to my Guild's representative for my debriefing.\n\nAll males are required to display their Citizen Level when in public. There are color codes for the different levels. Blue is for children (Level One). Green is the base color for labor (Levels Two and Three), and like Level One uses a circular emblem. Yellow is the base color for management (Levels Four through Seven) and uses a triangular emblem. Red is the base color for command (Levels Eight through Fifteen) and uses a diamond shaped emblem.\n\nAt the very top is purple for both Royalty (Levels Sixteen through Twenty-Three) and Ruling Royalty (Levels Twenty-Four through Thirty-One). Royalty uses a square emblem, except for the Cunif Carifar who wears a pentagon bearing all five colors, signifying his role as the representative of all people to the Holy.\n\nMy bedroom had been my small place of refuge for the last thirteen years. I took one quick last look around and then left.\n\nThe hall was busy with the new adults heading off to their own meetings. Within the coming hours and days, we would all be traveling to the home cities of our various Guilds. Mixed with the feelings of joyful relief and excitement was an air of nostalgia. After two decades of very close living, most of us would not see each other again for years. Or never. I grimaced when I saw Afeef's door had not unsealed.\n\nThe door was open to my interview room. I saluted the superior there from my Guild, a CL-12, his diamond emblem red at the bottom half and yellow at the top. I was pleased someone of such high rank had been sent to debrief me. The man snapped a sharp salute back, and then signaled me to close the door and sit down.\n\nHe went back to reviewing his monitor while I waited. I couldn't see his screen, but I guessed he was reviewing my test scores. Finally he sighed and looked up at me. \"I'm Commander Fadil. Welcome to Security! Before we begin the debriefing, is there anything you'd like to know?\"\n\n\"Yes, thank you sir. The testing, how did we do?\"\n\n\"You mean Anqara?\"\n\n\"Well, that would be interesting too, but I meant Ghazi and Hakem.\" I was referring to two CL-23 Royal priests who were both taking their advancement tests this year. Both had entered Royalty through the Security Guild.\n\nFadil raised his eyebrows and then smiled in approval at me. \"That's the right attitude Ilias! And the answer is the Guild did extremely well! As of today, we have twenty-six Royalty from Security, including two at the ruling level.\" He then shot me a sly grin. \"Can you guess who was promoted?\"\n\nI weighed my answer before I replied, \"Ghazi sir, I'm almost sure.\"\n\nThe Commander blinked. \"Correct! Judging from your test essays, I thought you might pick Hakem.\"\n\nI nodded. \"With all respect sir, I had to document my essays with references to official capital news. There was nothing from Bandar Arenas to suggest Ghazi, nothing that I had access to anyway, and putting unsupportable hunches into my essays would be, well...\" I smiled and shrugged my shoulders.\n\nFadil gave me a long, thoughtful stare. \"Indeed. I'm beginning to see why the Guild is so excited about you.\" He finished up with his monitor and then looked at me. \"Let's begin the debriefing. Your combat scores, do you think they were fair?\"\n\n\"The three minors?\" I paused for a moment. \"Yes sir, the demerits were fair.\"\n\n\"In total, I think so too. Maybe not the last demerit itself, your combination roundhouse spin kick was a thing of beauty. But in your eighth match, you pulled a knife-hand strike to the throat so early the blow wasn't scored, and the judge let that one go.\"\n\nI nodded. \"I agree sir.\"\n\n\"But your third match, the one with Afeef, what was up with that?\"\n\n\"Ah...\" I thought for a moment and decided to be completely honest. \"A friend sir, since early childhood. I suspected he was low in the rankings.\"\n\nFadil typed on his monitor for a moment. \"Fourth percentile, not even close. You should have known you had no chance of pushing him above the cutoff.\"\n\nI was properly chastised. \"Yes sir, agreed.\"\n\nFadil looked at me. \"Ilias, your defensive skills are world class. Seriously, if defense were everything, you could compete in the world competitions right now. You're that good. And nobody is ignoring the fact you were the only Anqara Initiate who did not suffer a single solid hit during the sparring. But you have to work on your aggression!\"\n\n\"Yes sir!\"\n\nHe shook his head in disbelief. \"Your ninth opponent, Uday, you took him down in less than five seconds.\"\n\nI smiled at the memory. \"I had no choice. His punches are lightning! He could well have taken me in a longer fight.\" I have a reputation for being a careful fighter, and I had used my reputation as a weapon against a superior opponent. Uday was so surprised by my wild combination attack that I scored a quick takedown.\n\nFadil finally understood my strategy for the competition. \"Interesting,\" he mumbled as he went back to reviewing the test scores. \"You'll be happy to know you're the top rated Initiate from Anqara. And Anqara made their 8% again, which means you're among the top scorers in the world, out of 78,044 survivors to adulthood. You're definitely in the top 1%. Security will be very interested in your decision about booking the run.\"\n\nTo understand Fadil's comments, I'll have to explain how promotional gates work.\n\nWorldwide, across the 120 townships and the capital, 90% of the Initiates survive the final childhood gate. It's a worldwide ranking, but the competition between townships is also capped by a minimum monastery culling of 8% and a maximum of 12%. Anqara has a reputation of having one of the toughest monasteries on the planet, and it is one of a handful of townships that consistently hits the lower cutoff.\n\nAdult gates are designed differently than the childhood gates. There is no culling for failure, at least not directly. The name for Citizen Level Two is Lower Labor. Under usual circumstances, I would take my tests to advance to Level Three (Upper Labor) in two years, on the First Day of Judgment in 8237. Test success is based on ranking. The top 20% of the applicants will advance to Level Three (which has an emblem of a green lower hemisphere and an upper blue), and 80% will remain at Level Two.\n\nFor those who fail the first gate, there is a second gate three years later, again with the top 20% of the remaining applicants passing. Similarly, there is a third gate five years after that, a fourth gate eight years later, and a fifth gate thirteen years after that. By the time of the fifth and final gate, citizens would have lived 31 years at the same Level. Success at any gate starts the whole process of advancement over again, taking the next Level's first gate two years later.\n\nFailure at the fifth gate is not an immediate death sentence, but it does put your future access to the anti-aging drugs into a lottery system. There is no further possibility of promotion, and the lottery odds get exponentially worse each year, culling about half the population after ten years, and then rapidly culling the remainder. The record for survival in the lottery system after failing a fifth gate is twenty-two years. That record was set over three thousand years ago.\n\nCitizens in the lottery show up for their annual shots along with the other citizens, but the lottery system might assign them a placebo. Somewhere between their fifth and eighth month, those who receive the placebo will notice their bodies begin to age rapidly, more than one year per day. By this time their medical condition is hopeless, even with access to the real drugs. Death always comes before the twelfth month, and in mercy the Priesthood will offer assistance in suicide.\n\nIn addition to the C.L. gates, there is also adult culling due to criminal behavior or heresy. There are no prisons. The end result? Slightly less than 62% of all citizens entering each Level will advance to the next higher Level, and 38%+ will die within the Level. The average age for all adult males (exclusive of children) is 51 years and 4 months, including the long, thin tail of the distribution of the citizens living hundreds of years. By law, the average age of the adult women is exactly the same, although they are on a completely different system.\n\nThere are only two exceptions to this process, one at each end of the Citizen Levels. Promotion and culling within the Ruling Royalty are processes not of formal testing but political infighting, and the Cunif Califar is appointed for life. At the other end is the Asad, the Lion. That is what Fadil was referring to when he asked me about booking the run.\n\nThe Lion is only available to the top 1% of the surviving population entering adulthood. From what Fadil told me, a total of 780 new adults would be offered the chance for advanced placement in the Citizen Levels. Historically, close to 90% will accept the challenge, and a third will target two-level advancement for immediate placement into management. How far the new adult wishes to \"ride the Lion\" is declared to the Priesthood on the Fifth Day of Judgment. Once declared, there is no turning back.\n\nLion tests are given on the 21'st day of each month, starting in January for the advancement to Level Three. Most of the testing is over by February, though a very few ambitious candidates will target the higher levels. Success brings the additional status, prestige, and privileges of the higher levels, including the entitlement for an adult male to have his number of wives equal his citizen level. But the primary reason to ride the Lion is the dream of Royalty. One must start adult life at a minimum of Level-Three to have any chance at Royal promotion. On average, there are 93 promotions into Level-Sixteen each year. And one must start adult life at a minimum Level-Four Management Level to ever enter Ruling Royalty (an average of two promotions per year into Level-Twenty-Four).\n\nThe downside risks are considerable. First of all, Lion passing rates are wildly unpredictable. The scoring process is somewhat of a mystery. All scoring is supposed to be by computer, but some years almost all will make it, and other years less than half. There seems to be a large random element for how high the bar is raised. The year 7777 was a horror, when not a single candidate made it to Level Four.\n\nFailure on the Lion automatically fails you for all your future adult gates. You get 31 guaranteed years of the anti-aging drugs, and then are put in the lottery. Declining the drugs at the beginning of adulthood and trying to age normally is not an option. The human genome (at least in its present definition) can not tolerate that.\n\nIs it worthwhile to ride the Lion? The risk of failure plus the lost years of not living at the lower Levels result in no net increase of life expectancy. Booking the run is really about ambition, not the desire to live longer through Royalty. And in three days I would have to declare my choice.\n\nFadil smiled at me and went on. \"I reviewed the security logs of the day before your exam. What Fateen did to you on December 30th was way out of line. Do you want the Guild to make an issue of it?\"\n\n\"The Hour of Repose, his last question? No sir, not at all. I realize now Fateen was teaching me one last lesson, about ambition and discipline, a lesson well worth knowing.\"\n\nFadil nodded slowly. \"Very well.\" We chatted a bit more about my performance, and then he surprised me with an unexpected offer. \"The Guild's ramjet will be taking off for Jizari at 5:30 AM. We'll make a brief landing at Bandar Arenas first, to drop off the Royal test monitor. There's one vacant seat on the plane.\" He grinned at me. \"Want to hitch a ride?\"\n\nIt was an extremely magnanimous offer. The other new adults in ancient Canada and the ancient U.S. northeastern seaboard would be flying to the hub city of Aleppo, at 42 o 21' N, 0 o 9' W, the ancient site of Boston Massachusetts. The city had been slowly rebuilt over centuries, long after being directly burned by Shaitan's fire 8,235 years ago.\n\nThe Judgment Days are the busiest time of the year for air transport, with all the successful Initiates making transfers to their new homes. The opportunity to travel sub-orbital in the Guild's plush private jet was a pure gift. And I would probably have the chance to chat informally with the Royal monitor. Fadil's offer was priceless. I gratefully accepted, and we left for Anqara's airport shortly after.\n\nChapter 4. The Choice of a Lifetime\n\nThe jet was a lot smaller than I expected, only four passenger seats. Everything about the interior screamed wealth and power, four huge plush leather seats arranged two by two with the aisle in between. We received Anqara departure clearance at 5:28 AM and took off immediately. The plane rose steeply right after takeoff, the turbine engines near maximum power. As we approached our cruising altitude of 20,000 meters, we went supersonic and the ramjets activated. The acceleration was considerable, and within a few minutes we reached our target velocity of Mach 3.77. We were cruising at 4000 kph, and scheduled to land in Bandar Arenas shortly before 9 AM.\n\nI was in the rear left-side seat. To my right was the capital's Royal test monitor, Mufeto Khatib, with his executive assistant Dabir sitting directly in front of me. Fadil sat diagonally across from me.\n\nI couldn't help but stare out the window after takeoff. This was not just my first jet ride. This was my very first trip away from Anqara. I stared at the township in the moonlight, watching it fall rapidly away. The moon was full and the sky clear. The view of the snow covered landscape of ancient Quebec was mesmerizing.\n\nI finally tore my eyes away to glance at my fellow passengers. They were all busily working with their laptops, totally ignoring the view out the windows. I however found the sight of the virgin Earth from twenty kilometers up irresistible.\n\nThere was a chuckle on my right. I turned back from my window and saw the mufeto smiling kindly at me. \"We are scheduled to fly over Aleppo twelve minutes after going supersonic. Its runways will be a hub of activity today, and should already be well lit. You're on the right side of the plane to see it.\"\n\nI nodded gratefully and gazed again out the window. I could see the Atlantic shoreline angling in from the horizon to meet us, and then, there it was up ahead, Aleppo! I sat transfixed at its beauty. I could even see one plane far below us, its lights flashing in a landing approach. At 4000 kph the scene fell rapidly behind. The shoreline actually receded east for a while, but then three minutes south of Aleppo all land abruptly ceased.\n\n\"That's it for land until we pass over Metula,\" the mufeto went on. \"Probably in about another thirty-five minutes. That far south, it'll be well past sunrise.\"\n\nI turned back and nodded again slowly. I was more than a bit puzzled by his kind demeanor. The mufeto was acting like a tour guide, and to a lowly CL-2 no less! His smile was totally different than the stiff and formal countenance I saw during my Initiate testing.\n\nThe next township he was referring to was built near the ancient city of Santo Domingo, Dominican Republic, 18 o 29' N, 1 o 0' E. It seemed incredible to be traveling around the world this quickly. I paused for a moment and considered the time. It was almost 6 AM. Something was troubling me. \"Great Mufeto,\" I asked. \"May I ask a question?\"\n\nHe laughed. \"Oh, when we're alone like this, just call me Khatib. I'll tell you a secret. I'm an honorary member of Security. Isn't that right, Fadil?\"\n\nFadil looked up from his laptop, gave one snorting laugh, and then went back to his work.\n\nI would not have been more stunned if a giant pterodactyl had magically appeared outside my window and seized our jet in its massive beak. A CL-12 treating Royalty like this?! Was Fadil insane?! What was going on? Was this some elaborate test to see if I would also be disrespectful? If not, there were clearly dynamics here that I did not understand. I suddenly felt very tense and was unsure how to proceed. I did not understand my environment. I looked across the aisle and saw the mufeto waiting for my question.\n\nI cleared my throat. \"Yes, thank you for the honor Khatib. My question, how will morning prayers be done while flying?\"\n\n\"Ah yes, thank you for reminding me.\" The mufeto waited until precisely 6 AM, and then clicked on his intercom to the cockpit. The two pilots from the air transport Guild respectfully acknowledged his call at once. Khatib recited a Prayer of the Mind in Ascension, one of the shorter ones, and then clicked off and went back to his work.\n\n\"What?!\" I thought. I felt totally confused about what to do next. Back in my monastery, idle chatter now would be severely punished, even to the point of death. But my three fellow passengers were acting as if they were still not in the Prayer Cycle. Again I felt a shiver of fear and wondered if this bizarre scene were some sort of test. Fadil sensed my distress and looked up from his work. I stared at him grinning at me.\n\n\"Ilias, you're going to have to learn that being an adult is not like living in a monastery. Observance of the Prayers varies by Guild. Not in public though! When you are on a Guild mission, you'll put in a full eight hours of Church in whatever township you are. But alone like this, or at Guild headquarters, things are a little more... relaxed.\"",
        "Dabir spoke up from ahead of me. \"At Jizari, you'll find hourly prayers during the Cycle, but most days the only real time commitments will be the Prayers of Purification and Weakness. Security likes to keep our members fit!\"\n\n\"Our members?!\" I thought wildly. But Dabir was a priest! I suddenly realized Khatib was being perfectly candid when he revealed his closeness to my Guild. But I still couldn't figure out why he, and Dabir too for that matter, were so open with me with such remarkable information. I suddenly felt grateful no one was pressing me for conversation. I'm not sure what I would have said. I took out a book from the seatback in front of me. It was a leather bound copy of the Book of Bel'dar.\n\nShortly afterwards Dabir got up and began working the controls on the cabin's galley. After a few minutes he began informally to serve us all a hot breakfast, Khatib first, then Fadil, and finally me. I glanced at his insignia as he served me. Imagine the center point of a triangle being used to form three inner triangles. Dabir's emblem had a lower yellow triangle framed by a green triangle on the upper left and a blue triangle on the upper right. It was the emblem for Top Management, CL-7. And below that was the insignia for his priesthood.\n\nThere are some 648,000 priests in the world, 20% of all adult males, and Dabir was in the top 10% of that population. And yet, here he was, casually serving breakfast to me, my green circle of CL-2 barely a few hours old. As Dabir returned to his seat with his own meal, I worked to understood the implications.\n\nIn all my years of nocturnal reading, there had been no hint of much informality between the classes, and certainly not with the Priesthood! Clearly something very unusual was being shown to me. I thought in silence as I ate my excellent hot eggs, bagel and fruit.\n\nSecurity does have a special relationship with the Priesthood. The Security Guild is the only Guild where Class rank carries over to command authority with the Priesthood's police and military units. As a Security commander, Fadil would expect to be saluted and obeyed as an officer by the Holy militia, and could order lower-level police around at will.\n\nPerhaps... Yes. It was a test after all. Without explanation, my fellow passengers were showing me just how close relationships could be between the Priesthood and Security. The test was to see how well I could jump from private to public behavior. When we landed at Bandar Arenas, any informality on my part would be an absolute disaster. I would have to stay alert!\n\nI ate the last of my sumptuous breakfast and then in silence got up and cleared everybody's trays. Fadil gave me a brief approving grunt, the other two ignored me. I returned quietly to my seat.\n\nThe time passed quickly. The thunder of the mighty ramjets was just a moderate hiss inside the plush cabin. I tried to do some reading, but often found myself gazing to my left. We were traveling so fast! And the sun was spectacular as it rose above the winter Caribbean.\n\nTime: Judgment 5, 8235 10:29 PM\n\nI lay on my bed in my room at Security's complex in Jizari. It was a much larger room than my cubical at Anqara. My new quarters were three meters by four meters, with windows along one entire wall with a fine prospect of the city below. The room was very well appointed and it felt like a mini-palace. I was not resting though. I was still dressed in my robe from the Hour of Repose. Somehow I figured I might be getting company tonight.\n\nJudgment is sometimes referred to as the zeroth month, but it's only five days long. Tomorrow will be January 1 and the real start of the yearly work cycle of budgets and objectives and performance tracking. Performance tracking... I closed my eyes as I lay on my bed and thought through the memories of my last four days.\n\nI was right about the difference between public and private behavior. When our ramjet landed at Bandar Arenas, I was treated like a female by my traveling companions, ignored except for curt hand gestures ordering me to portage the luggage. My only recognition was when we parted. Dabir held out his hand and allowed me to kneel and kiss his signet ring.\n\nFadil and three other Priests rode the jet back to Jizari. I took the high-speed magneto-rail, relieved to be on my own, and made the 360 km journey in less than two hours.\n\nJizari is a beautiful city, much richer than Anqara, and I was looking forward to the day when I would be able to wander its streets in leisure. But for now as a new Guild member my time was booked. Security had forty-eight Initiates this year, forty-five survived the final childhood gate and three (including me) had the opportunity for Asad. After days of special orientation and encouragement for the three potential Lion riders, we finally declared our intentions to the Priesthood tonight, at the moment of close of the Prayer of Repose. My two colleagues had both chosen to ride to Level-4, demonstrating their desire for future consideration for promotion to Ruling Royalty.\n\nThere was sound of a command override code being typed at my door, and then the door opened and Zaim walked in. He is CL-15, the highest rank outside the Royal Priesthood. Zaim is also one of the eleven Top Commanders in Security, his diamond emblem carrying four quadrants of red, yellow, green, and blue. I began to rise in respect, but he glared at me and barked the word \"Sit!\" I saluted and sat back down on my bed as he closed the door and sat in a chair opposite me.\n\nI decided it would be appropriate to let him begin the conversation. After a moment of staring, he growled, \"Do you know how much time and resources the Guild has invested in you?\"\n\n\"Somewhat sir.\"\n\n\"Somewhat indeed! And you decided to throw it all away! Why?!\" He saw me struggling to respond. \"Permission to speak freely!\"\n\n\"Yes sir, thank you. I'm not throwing it away sir. I think I can succeed.\"\n\n\"You are delusional! And how this was never caught in our profiling, I intent to investigate!\"\n\nHe hadn't asked me a question, and even though I had permission to speak freely, somehow arguing his low opinion of me didn't seem like the right idea. I worked to calm myself and waited for Zaim to continue.\n\n\"Ilias,\" he said at last. \"You know Haytham and Mu'awiyah?\" He was referring to the two other Security Initiates with access to the Asad.\n\n\"Yes sir. We've become good friends.\"\n\n\"But I gather their friendship did not teach you sanity! Did you mention your intentions to them?\"\n\n\"For the Asad? No, of course not sir. It is forbidden.\"\n\n\"Shaitan!\" Zaim hissed. \"What an attitude!\" He sat there frowning at me for the longest time, and then finally sighed. \"We were expecting so much from you Ilias. There would have been full honor for you in choosing as your two teammates did. Ending at Level-3 also would have been perfectly acceptable, and declining the Lion or choosing to ride to Level-5 would have been unexpected but tolerated. But this?!\"\n\nIt was a semi-question. I decided I needed to reply. \"I think I can do this sir. I have considered the risks, and am dedicated to succeed.\"\n\n\"You know, don't you, that there's no correlation with Asad passing rates and fact that this is a Jubilee year?\"\n\nI nodded. \"Yes sir. The Year 7777 was a horror, but in general there is no correlation with the severity of the Lion and the Holiness of the year's digits.\" I thought for a moment about all the statistical analyses done over the millennia on the Asad. The only definite correlation found has been the ratio of riders targeting two Levels of advancement. If the percentage of riders targeting Level-4 becomes greater than a third, the testing becomes wildly unpredictable in its severity. Paradoxically, the more people thinking the Lion is rideable, the less rideable the Lion becomes.\n\nZaim stared at me silently, and then decided he had nothing further to say. He shook his head once in dismissal and got up and walked out of the room.\n\nAnd the reason for his dismay? An hour ago I had declared my intention to the startled Priests to Ride the Lion to its maximum possible length, twelve full months. I would delay the selection of my wives and be tested on the 21'st of every month this year, until I reached CL-14 on December 21'st or failed a gate along the way and be assigned a lifetime lower class. Zaim thought my attempt was hopeless. No one had successfully ridden the Lion to command level (CL-8) in the last six thousand years.\n\nChapter 5. The Class Journey\n\nTime: January 22, 8235 noon\n\nI showed up at Zaim's outer office shortly before noontime as ordered. Haytham and Mu'awiyah were already waiting there. They gave me brief, discreet nods of greetings and then pretended that I wasn't there.\n\nI didn't blame them. The word had spread quickly after my first meeting with Zaim that I was no longer viewed favorably by command. No one desired to be associated with me. I turned politely away and watched the fierce summer storm lash the panoramic windows with violent sheets of rain.\n\nJizari and Bandar Arenas have an even more extreme difference in the seasonal sunlight than Anqara. Here we were a full standard month after the solstice, and there was still almost seventeen hours of daylight. My thoughts turned to Anqara. It would be in the coldest part of its winter right now, the countryside in a deep snowy sleep waiting for the rebirth of spring.\n\nZaim's secretary came to our waiting area and led Mu'awiyah into the inner office. The interruption returned my thoughts to the present.\n\nFor the first twenty days of January, Haytham's and Mu'awiyah's Guild assignment had been to prepare for the Asad, receiving six to eight hours of coaching daily from former riders within the Guild. My assignment had been to prepare for life as a laborer. I was learning an immense amount of information about operational procedures for the security network, and my only study hours for the Asad were in my free time at night.\n\nI was somewhat surprised I was allowed to keep my prime quarters, but then thought that the Security leadership didn't want to bother with pettiness and would wait until I had fallen off the Lion before reassigning me. Perhaps they thought the extra time in the opulent quarters would more deeply set the memory of what my life could have been like, if I had chosen more wisely.\n\nThe secretary returned and gestured for Haytham to follow him. Neither of us had seen Mu'awiyah exit the office. He was either still with Zaim, which would be unexpected, or had left by another door. I risked giving Haytham a \"good luck\" gesture with my head as he passed near me. He kept his eyes averted but gave me a discreet gesture of gratitude with his hand in return. And then I was alone.\n\nAll three of us had spent six hours yesterday riding the Lion. The questions were strange, unexpected, full of mathematical puzzles mixed in with morality questions. The first three hours were filled with far more questions than anyone could possibly answer, and many of the questions in the second half of the test made references to the first half. It was a severe test of memory under stress, my secret strength. I still felt drained and exhausted by the end though and welcomed the evening prayers, especially the focus on the Shotokan Katas during the Prayer of Weakness. They are among my favorite exercise, and they helped relieve my tension.\n\nAs I stood waiting by the window, I thought again of the rumors flying around headquarters. Supposedly Zaim and the three other Security CL-15 currently at Jizari had an emergency meeting with Ghazi very early this morning at the capital, traveling by rail because of the storm.\n\nThe secretary returned again and escorted me into Zaim's office. He was alone, his back towards me as he stared out the window. Apparently I'm not the only one who enjoys watching the furies of the storms. I heard the secretary seal the door behind me and waited for the meeting to begin.\n\n\"Sit down Ilias, at ease,\" Zaim said, his back still towards me. As I took a seat in front of his desk, I couldn't help but notice a new Security shirt folded on his desktop, the green and blue hemispheres of Class Level 3 clearly visible. I didn't think Zaim would be cruel enough to tease me, and breathed a sigh of relief.\n\nZaim heard my sigh and then turned around and sat down facing me. He nodded to confirm my understanding of the shirt, and then asked, \"Do you know the procedure for the announcement of the Lion results?\"\n\n\"Yes sir. Results will be posted worldwide at the end of evening Prayers today. The Guilds and the Priesthood are permitted to inform and promote individuals after noontime.\"\n\nZaim nodded and glanced at the shirt. \"You've succeeded in your first run with the Lion.\" He took a deep breath. \"You're the only rider from Security that did.\"\n\nI grimaced, thinking of my two friends.\n\nZaim went on. \"General results are not to be released until 10 PM. Therefore, the rest of this conversation never takes place.\"\n\nAs an Anqara Initiate, such a violation would have shocked me, but I had learned much in my one month at Jizari. I nodded my understanding. \"Yes sir, thank you.\"\n\n\"A total of 719 chose to ride the Lion this year, out of a possible 780.\"\n\nI nodded. The percentage was high but not remarkable.\n\nZaim went on, \"There were 359 riders targeting Level-3, 343 riders for Level-4, fifteen for Level-5, one for Level-6, and of course you for Level-14.\"\n\nIt took me a second to realize Zaim's point. \"The Holy!\" I whispered. \"Half sir?!\"\n\n\"One over! More than half the riders this year targeted above Level-3. This shatters the previous record of 42%.\" Zaim paused for a moment. \"A total of 131 passed yesterday's ride, you, 123 of the riders targeting Level-3, and seven of the riders targeting Level-4. Regardless of what happens next, this will go down as the most severe Lion in history.\"\n\nI thought for a moment about the skewness of the numbers. \"A damnable year for ambition sir.\"\n\n\"Indeed. The Lion is well known for its temper, and to turn and bite the group of riders who are too ambitious. Part of the test yesterday was to overlay an overwhelming requirement for mathematical problem solving with questions testing morality and ambition. It takes much more effort and time to lie consistently than to tell the truth consistently. Any rider attempting to deceive the Lion is thus eaten for his low production of consistent answers. But this year, the Lion also devoured those who were forced to reveal their great ambition.\"\n\nI sighed. \"Except me sir.\"\n\nZaim gave me a slow, thoughtful nod. \"Yes, except for you. Ghazi remarked this morning how interesting it was that you passed, given the current mood of the Lion. The Security leadership council agreed. Ilias, your position is still almost certainly hopeless, but the Guild has decided it will support your ride.\" He gestured for me to take the shirt and flicked his hand at a rear door. \"Dismissed!\"\n\nI saluted and left.\n\nFive months later...\n\nTime: June 24, 8235 6:47 AM\n\nAs the highest ranking priest on the flight, a CL-6 Upper Manager had assumed the role of Mukkarib and was leading the Prayer Cycle in the passenger cabin. His attitude with the travelers was stern and judgmental, except for me of course.\n\nI smiled at the memory. I had been turning to put away my laptop at 5:50 AM, about a half hour after departure from Hadramawt. I was preparing for the Prayers when the CL-6 reached my aisle and snapped his fingers at me and pointed to his insignias, showing me a triangle yellow and green, and below that his identity as a Priest. He was indicating to me that he was a force to be obeyed.\n\nFrom the pride in his countenance, I guessed he was a recent promotion. Perhaps last year the green at the top his Class insignia had been blue. I smiled at him in return and nodded pleasantly. His face turned to a deep frown, but before he could make a major mistake I took pity on him and turned to show him my own insignia, the solid red diamond of command and below that the emblem of the Security Guild.\n\nHe gasped at the blunder he had almost made. I didn't blame him for his surprise. Out of twenty-five million people on the planet, there are currently only a total of 374 Security Commanders (CL-8 to 15). Subtract from that the standard operating procedure of at least two of us stationed at each of the 120 townships, and the odds against bumping into any of us in flight are really quite high.\n\nI caught a quick smile from the upper level commander of the Mining Guild in the aisle across from me, a CL-13, who then tried to hide his grin in a cough. His Class alone was not enough to stand against this pompous Priest. It was only the combination of my command rank and my Guild that made me the superior authority here.\n\n\"Name?\" I asked.\n\nThe Priest gulped. \"Mundhir sir.\"\n\n\"Mundhir, will you be able to start the Prayer Cycle on time?\" Was this a question of Security concern? Perhaps not, but Mundhir was in no position to argue the point. If I ordered him to jump off the plane, theoretically he was supposed to obey.\n\n\"Yes, of course sir.\"\n\n\"And will you demonstrate the humility proper for a servant of the Holy?\" The man visibly froze and quivered! In what monastery did he spend his childhood, I wondered. Fateen would never have allowed him through the second gate at Anqara.\n\nHe finally found the courage to answer my question. \"Yes, of course sir.\"\n\n\"Excellent. Proceed.\"\n\nHe nodded stiffly and fled back to the front of the cabin to prepare for the service.\n\nI found his first hour of the Prayer of Ascension very mundane, but at least he picked variations of Yoga exercises for the Prayer of Purification. Given his class had to remain seated, it was a reasonable choice. In the silence of the relaxation period at the end, I allowed my mind to drift back to the last four months of my life at Hadramawt.\n\nThe Security Guild spent some time in late January thinking of what sort of training program they would provide me for the Lion. The issues were complex, and they even invited me in on some of the discussions. We decided that given the Lion's aversion to ambition, a program that simulated a normal career through the Management Classes would be appropriate. And as standard procedure, Security members do not work as Managers in the same cities in which they were Laborers. So when I earned my yellow triangle in February, the top-level Commanders sent me away.\n\nMy post was Hadramawt, the easternmost of all townships, built at the very eastern tip of South America at the ancient site of Recife, Brazil. Located at 8 o 4' S, 36 o 1' E, Hadramawt had a geographical temporal shift of two hours and twenty-four minutes compared to the time standard at Bandar Arenas. That and its closeness to the equator meant that 6 AM prayers at Hadramawt always start well after sunrise, and that took some getting used to.\n\nOver the last four months I rode the Lion at the beautiful central cathedral complex at Hadramawt. The Royal test monitor Khatib stayed there the entire four months with me. We met several times, both formally and informally, but always in public, and he never once showed me any sign of personal warmth. He did however provide a beautiful room for the testing days, a spacious private library with a rich d\u00e9cor of polished stone and gleaming rainforest hardwoods. I sat at a large table of solid Brazilian cherry wood for my tests, the sparkling waters of the tropical Atlantic filtering though the stained-glass windows as I rode the Lion.\n\nMy Class insignia changed monthly from yellow to yellow and blue, to yellow and green, to yellow, green, and blue, and finally on June 22'nd to a diamond red as I finally make Commander. And then it was time to go. I have many fond memories of Hadramawt. I spent much of my time learning the Management procedures of Security, but also had time to enjoy touring the tropical countryside. I saw the people's pride in their areas of specialty. Hadramawt is one of the major fishing and agricultural townships of the world.",
        "I was touched that several Security Upper Commanders conferenced me from Jizari to congratulate me with the news that I passed my sixth ride on the Lion. The last person to do that eventually became Abdul Aziz, Servant of the Powerful One and 41'st Cunif Califar, more than six thousand years ago. His reign lasted longer than three hundred years, a record many expect to remain unbroken unless there are new breakthroughs with the anti-aging drugs. For the first time, I sensed a small seed of hope within my Guild that I might successfully complete the Asad.\n\nThe Guild has kept the news of my Lion ride away from the general public. My work colleagues in the other Guilds at Hadramawt assumed I was working undercover with fake lower ranks as I advanced through the months. I was known within Security of course. It's required that we all recognize each other on sight, all three thousand of us.\n\nMy new assignment was the township of Qataban, built at the site of La Paz, the capital of ancient Bolivia. At 16 o 30' S, 2 o 45' E, it was only eleven minutes ahead of Bandar Arenas in solar time, something I was looking forward to. The township is also high in the Andean mountains, 3,270 meters above sea level, the highest township in the world. It is the home for the Guild specializing in the mining of refractory metals. Their tantalum and niobium production is highly prized and a key component of the super-conducting legs of the worldwide magneto-rail system. I should know. Anqara's Guild was specialty metal fabrication, and Qataban was one of our primary suppliers.\n\nMining presents a special challenge to the Priesthood and Security. Almost all other activities, even agriculture to a great degree, can be planned and situated near township locations. Mining of course can not. It must follow the natural locations of the ores. The result is that the Mining Guild is a large one, with many important offices throughout the world. A large number of its members are always on field assignments away from the townships. That presents special issues to my own Guild.\n\nIn particular, there have been a series of transient breakdowns in security handshaking protocols between Qataban and several of its mining outposts. The losses of central monitoring ability have been brief, rarely longer than a few minutes, but they remain unexplained. The two Security commanders currently stationed at Qataban, a CL-8 and a CL-10, requested a third member of command rank to help with their investigation. That's my current assignment.\n\nIt was a long flight from Hadramawt to Qataban, 3,554 kilometers along the great circle arc, and our sub-sonic plane was fighting a stiff headwind. The result was the flight still had almost an hour to go when the Priest mercifully ended his Prayer of Counted Failings at 10 AM. He really was quite dreadful, reciting rote prayers in a very flat, monotonic voice for hours. After the close, a pair of laborers from the Air Transport Guild began handing out small snacks, and a line formed at the lavatories in the rear.\n\nI glanced at my traveling companion across the aisle, the CL-13. \"Are you based at Qataban?\"\n\nHe looked at me and nodded. \"That's right. I'm Ammar, Qataban's current station commander.\" He didn't have to mention that he was in the Mining Guild, his insignia was clearly visible. I could also see he was curious about me, but was far too diplomatic to initiate any questions. Except for Royalty, one just doesn't ask Security commanders what they're doing.\n\nFor someone of such high rank though, diplomacy is a two-way street. By law, all 120 Guilds are represented in Royalty with at least three members. I had every reason to be polite. Ammar was five Classes my senior, but more importantly, he might one day be a Royal himself and have direct authority over me.\n\nI nodded back and replied, \"I am Ilias. I'm pleased to meet you. I expect we'll meet again in a few days.\"\n\nAmmar nodded thoughtfully and then went back to his laptop. I had satisfied his curiosity, and we both knew an open passenger cabin was no place for us to have a conversation. I returned to my own work. After a while the plane reduced its speed and banked as we began our landing approach.\n\nChapter 6. An Explosive Encounter\n\nTime: September 27, 8235 9:47 PM\n\nWell, it took more than three months of dogged detective work, but I finally solved the mystery of Qataban's monitor disconnects. I now have both the public answers and the private answers. The public answers have already been transmitted back to Jizari, where they earned me warm congratulations and a flight back to Jizari at the end of the month. My assignment here at Qataban was over.\n\nI was riding an ore train back to Qataban from one of the mining outposts. Much of the refining had already been done at the mining site, and our cargo bays were heavy with almost pure metal. Our mining train had the most powerful locomotives in the world, but we were still right at the limit for weight capacity.\n\nThe train crew was a mixed lot of engine laborers and managers from the Rail Guild, plus a young CL-2 Priest to lead the evening prayers. At first the crew seemed terrified about having a CL-11 Security commander hitch a ride with them, even though I insisted that I was only along for the ride and that they should just go about with their normal duties. I finally broke the ice by turning the Prayer of Weakness into an informal class on Tae Kwon Do, and taught some of my favorite throws. The mood really lightened up after that. The Priest's closing blessing for the night was quite touching.\n\nQataban is such an interesting place. It's not the lush, tropical paradise of Hadramawt, not the rich and powerful township of Jizari, not the forest wonder of Anqara, but it does have an intensely competitive spirit and a mountain beauty that is all its own. I will miss my time here, and my friends. I'll never forget the look of gratitude from Tamir, the CL-10 Security station head, when I suggested he keep his post a few days ago, even though I now outrank him. It will look better on his resume if his command is unbroken, and he will be at his fifth and final gate for promotion to CL-11 next year.\n\nCL-11, I can hardly believe it for myself. My Lion rides are moving me through life so fast! Was I a na\u00efve child less than a year ago? It seems impossible.\n\nAfter his blessing, the Priest had turned the Hour of Repose into a Prayer of quiet meditation, setting us free to consider our lives in peace as the train chugged the last of its journey home. My fingers came up and caressed my new Class emblem, a diamond red at the bottom, green at the upper left, and blue at the upper right. Assuming I'm successful on my next Ride, both the green and blue will change to yellow next month. Otherwise I'll wear my current colors until I die.\n\nAnd the public answer to the mystery? There was a freakish incompatibility in the complex overlaps of procedures between the Guilds, in particular driven by the fact that implementation in the field is not always exactly the same procedure of the theoretical textbook explanations of how things are supposed to be done. The errors were all very innocent, and the corrective solutions are now in place. The problem is solved.\n\nAnd the private answer to the mystery? So far I've kept the private knowledge completely to myself. I have a perfect excuse. Everything I've seen and deduced has a clear and reported explanation. It's only in my personal examination of the combination of operations codes and security logs that I spotted the subtle signatures of intentional deception. My intimate knowledge of how I tricked the network at Anqara as a boy provided me a fleeting glimpse of a secret organization of unknown purpose. Its size is also unknown, but it has to be more than a few people. I caught a glimpse of a secret organization, and for now this glimpse is visible only within my mind.\n\nAfter the ore train pulled into Qataban, I said good night to the crew and started to hike back to my room at Security HQ. I was halfway there, passing through a very old and semi-used industrial part of the township, when it seemed the entire world exploded around me and I descended into a fiery pit.\n\nThere were loose cables that I managed to scissor with my legs, enabling me to brake my fall. Some sort of explosion, industrial chemicals I thought wildly. The blast didn't have quite the concentrated punch of military explosives. I had plunged more than ten meters below street level to land on a bed of filthy debris, mixtures of stone and old iron and destroyed wooden shelves. Papers and books were scattered everywhere. I guessed I had been walking over an ancient city archive when the explosion occurred.\n\nThere was no power, but the area began to be dimly lit with the red glow of a fire at one end of the debris. There were shattered wooden shelves and paper books everywhere. I had to get out of here! I stood and looked around, trying to see a way out, amazed I seemed unhurt except for bruises. Yes! These loose cables, not yet near the fire! I could just climb my way out of this! And then I heard a hammering sound, as if one piece of debris was being struck rapidly against another. Was someone down here with me? I judged the fire and the cables. I had a few minutes. I went to investigate the sound.\n\nI found her down the slope of debris. She was in an Initiate burqa, showing that she very close to her marriage gate. The left part of her body was encased in the debris, and her head and neck were cruelly pinned and twisted. She was being strangled by her burqa, and had picked up a wooden shard in her right hand. She was banging out a pleading sound for help.\n\nI took the thin throwing knife I keep strapped to my calf and cut the head veil from her burqa. Exposing her like this was a serious crime for both of us, but she would have died otherwise. In the growing red glow of the fire, I felt a bundle of soft hair cascade around my fingers. I left her gasping for air and tried to free the rest of her body. Damnation! Her left leg from just below the hip was firmly wedged in the debris. This would take a while. I looked around hastily for a lever.\n\nThe young woman recovered quickly, looked around and saw the approaching fire. She started to tug uselessly at her leg as she realized the danger she was in. She saw me looking around for a lever and probably thought I was searching for a way to leave.\n\n\"Oh, don't leave me! Don't leave me to burn!\" she pleaded. She jerked again at her leg. It was wedged tight. I shook my head in dismay. We didn't have much time, and I thought I would need both a lever and her cooperation to have any chance at all of saving her. I was afraid she was getting hysterical.\n\n\"Don't leave me here to burn!\" she sobbed.\n\n\"What's your name?!\"\n\n\"Don't leave me here to burn!\" she screamed.\n\n\"What's your name?!\" I screamed back.\n\n\"Abigail!\"\n\nSuccess! I got through to her. \"Abigail, I won't leave you! Stand or fall, we're in this together, I promise! Now help me, or we're both going to die!\"\n\nMy promise had a startling effect. The hysterics disappeared and she became all business. \"What should I do?\"\n\n\"I need to make a lever, try to wedge apart the debris. Pull your leg out when I do.\"\n\nShe nodded and looked around the area as I searched for a beam. I found something, a thin iron pipe. I thought it might be from a gas line. It didn't look like much but I was running out of time to search for better.\n\n\"What's our escape route?\" she asked.\n\n\"The cables!\" I replied, pointing up the slope towards the fire. \"If you can ride my back, I'm strong enough to carry you out of here.\"\n\nAbigail nodded, frowning at the nearness of the flames. \"Hurry,\" she cried, \"We're almost out of time!\"\n\nI nodded, completely agreeing with her assessment. I placed my lever in the debris by her leg, and placed all my weight on the other end. Abigail got ready to slide her leg, but the debris did not budge.\n\nA look of calm crossed her face. \"Any bigger levers around?\"\n\nI looked around wildly. \"I don't think so, not nearby.\" Damnation! What to do, what to do?!\n\n\"What's your name?\" she asked.\n\n\"Huh? Ilias.\"\n\n\"Ilias, go!\"\n\n\"What?! No!\"\n\n\"You can just make it if you leave now. Go!\"\n\nI examined another possibility for a lever. Useless! I looked at the escape cables. The flames were almost reaching them. If I sprinted away this second, I could probably just make it with minor burns on my legs. I looked back at Abigail.\n\n\"Ilias, I release you from your promise. Go!\"\n\nI stared at her, her calm face full of nobility. It was the first female face I had ever seen. The moment seemed silent.\n\nI shook my head. \"I need to make a compound lever!\"\n\n\"What?! We'll have no escape!\"\n\n\"Worry about that later!\" I rooted around the debris, picked something that would have to do. \"Here! Wedge this near your leg, as deep as you can push it in!\" I set up my first lever to push against the upper half of the second. My feet would have poor purchase on the thin rod, so I did a handstand on the first lever, my feet catching the flat face of an overhead broken steel beam. And then upside down I tried to straighten my body with all my might.\n\nI pushed my end of the lever more than a meter, pushing the end of the second lever along the ground by about 40 cm and the wedge by Abigail's leg about 15 cm.\n\n\"It's working!\" she screamed. She wiggled her leg madly as I grunted under the strain, wondering how long I could hold my position.\n\n\"I'm free!\" She screamed again.\n\nI let go and came to her side. \"Can you walk?\" I asked.\n\nShe grimaced. \"I think my foot is broken. I can hobble though, or crawl! But where do we go?! There's no escape up!\"\n\nI looked around and nodded. \"We'll have to head down! I'll carry you!\" The fire was almost upon us and the air was turning foul. I picked her up and moved down the hill of debris as fast as I could. She was so light, like a feather! Beyond comprehension! It was only later I realized my adrenaline was giving me a distorted sense of her weight.\n\n\"Ilias, I think I know where we are! We've broken through to the library's restricted level. There won't be an exit here!\"\n\n\"But I see a door!\" Besides which, there was no other place to go.\n\nShe shook her head. \"It has to be an archive room, a dead end! It'll be locked!\"\n\nWe got to the door a moment later. There were large red signs with white lettering on either side of the door, but there was no time to read them. Abigail was right, the door was locked, and also unpowered. But as a Security commander I had an omega pass. Thanking the Holy it seemed undamaged, I slid the card into the mag-slot and keyed in my authorization code for override access.\n\nMy omega card didn't have the power to slide the door open, but it did unclick the lock. As Abigail gasped in astonishment, I slid the door open with my hands. The fire behind us was turning into a raging inferno. We had absolutely no time to spare! I helped Abigail through the portal and slid the door closed behind us. I turned on a small pocket flashlight and looked around the room.\n\nIt was a moderate sized vault, filled with aisles of floor shelves holding old papers and books, truly ancient looking stuff. But I noticed something else far more alarming. The air! It had no smell, but seemed to offer no benefit when I breathed it!\n\nAbigail noticed it too. She wailed, \"It's a nitrogen room, to protect the archives!\"\n\nI panted and thought perhaps our struggle was over. \"Any ideas?\"\n\nAbigail considered. \"Perhaps there's a cold vault! Search the walls!\"\n\nI carried her as she held my light and we both searched for another door. We found one in the back, along with more warning signs posted in red near it. We were both getting dizzy from breathing the pure nitrogen. We ignored the red signs. I used my pass again to override the door, and this time the door slid open on its own power and the ceiling lights switched on. We entered an inner vault and quickly sealed the door so as not to dilute the new air with the nitrogen.\n\nIt was a small vault, an aisle about four meters long and one meter wide, with shelves along all the walls except for the door behind us. It was not nearly as cold as I feared, probably about 10C. There were two small vents in the room, and the one on the floor was gently blowing clean cold air into the room. The ceiling vent was the exhaust. Thank the Holy the air was breathable! Abigail and I lay gasping on the floor near the vent to catch our breath. From here, the raging fires two rooms away were not even audible. Perhaps we were safe! And then the ceiling lights failed.\n\nChapter 7. Cold Storage\n\nWe lay in darkness for several minutes catching our breaths by the vent. The only sound in the room was our breathing, and occasionally Abigail's chattering teeth. The floor was made of metal, and at 10C was rapidly pulling the heat from her body. I thought about telling her to stand, but then remembered her broken foot. Another minute passed in silence.\n\n\"I'm going to keep the flashlight off, unless we need light for something.\"\n\nThere was no response. I suddenly realized I hadn't asked a question, and it would be forbidden for her to talk otherwise.\n\n\"Permission to talk freely.\"\n\n\"Yes sire, thank you.\"\n\n\"Sire?\" I thought. At first I felt surprised, and then I was astonished by my surprise. Abigail using my name before had broken a dozen laws. So why did I feel sad, that she was now observing the correct protocols? More teeth chatter...\n\n\"Cold?\"\n\n\"A little sire, thank you.\"\n\nI had memories of my winter survival training at Anqara. I never thought I'd be doing this with a girl! \"Here, lie on your side. Cuddle with me.\"\n\nI turned on the light for a moment. I got my first calm look at her face, and her body. She was as I had dreamed women to be, so beautiful. She seemed startled by my command but grateful, and quickly complied. We pressed ourselves against each other, my right arm underneath her, curling around the small of her back to hold her to me by her hip.\n\nSo wide! Such a pleasant, flaring curve from her trim and fit waist, so different than a man! I felt her shiver in her thin burqa and realized her problem. I had on outdoor clothes, she was dressed for interiors. She must have been underground inside the, what did she call it, a library? My mind drifted. I looked up into her eyes only a few centimeters from my face. She gave me a shy smile. I nodded and turned off the light.\n\nI felt like making conversation. \"What kind of a vault is this?\"\n\nAbigail replied very precisely. \"Sire, the disks on the shelves are based on a mylar composite, protected with a dura-plasti coating. Oxygen in the air is not an issue, but the information substrates would degrade if kept at room temperature.\"\n\n\"Ah. Well, at least the air is breathable.\" I suddenly felt a little foolish for talking so inanely.\n\n\"Yes sire. It's more economical to seal the door, rather than set up a separate line for cold nitrogen.\" She still seemed so stiff and formal. This was so different than our brief time before the vault. I found myself yearning for her to call me Ilias again.\n\nPerhaps her foot was bothering her. \"How are you feeling? How is your foot?\" I asked. \"Please speak freely and honestly.\"\n\nThere was a pause. \"Thank you sire. My foot is throbbing but the pain is bearable.\" There was another pause, even longer, and then she cried, \"Sire! I owe you a deep apology for my hysterics!\"\n\nFor all my command training, I was at a loss for what to say. The silence stretched out to a very long moment. Without thinking, I patted the side of her hip to show understanding.\n\nAt my pat, Abigail sighed and continued. \"In 8224, I was in my tenth year. There was a fire here at Qataban, at the girl's monastery. Do you know of it sire?\"",
        "\"No. I've only been stationed here for a few months.\" There was more silence. I realized that even with permission to speak freely, Abigail was going out on a limb to initiate a topic of conversation. \"Continue.\"\n\nI felt her nod. \"It was a huge fire, on the western edge of the city. Several areas of the girl monastery dorms got involved. My wing was safe, but both our escape routes were blocked. The escape routes of the adjoining wing were also blocked...\"\n\nI felt her tremble and gasp in my arms, and then she whispered, \"I heard them scream. I heard all my friends scream as they burned, and then they were gone...\" She sighed. \"I had nightmares for weeks, bad ones. So bad I was almost culled for my inability to adjust.\"\n\nI tried to comfort her. I stroked the side of her hip, from her waist to her thigh, and whispered back, \"Childhood fears...\"\n\n\"Yes!\" she hissed. \"They shape us, become us, cause us to fail! Sire, I deeply apologize!\"\n\n\"Abigail, there's absolutely nothing to forgive.\" There was another long moment of silence. \"Continue to speak freely, about anything you want.\"\n\nShe nodded. \"What do you think our chances are sire?\"\n\n\"To survive from here? Excellent. This last door still had power when I used my card. Data and power flow on the same line. There's a record of my entry in the Security logs, and Tamir is not one to miss a thing like that.\"\n\n\"Tamir? The Security Commander?! You speak of him as a friend sire!\"\n\n\"He is my friend.\"\n\nShe gasped. \"The third Security Commander! I've heard rumors one was at Qataban.\"\n\nI laughed. \"That's right. Not what you were expecting, am I?\" I felt her tremble in my arms, and my laughter turned to shame. \"Abigail, I'm so sorry. I didn't mean to frighten you.\"\n\nI felt her tense, even more than before, and realized my apology had turned her fear into astonishment. I sighed and tried to change the subject. \"Any idea what caused the explosion?\"\n\n\"I know a little sire. I was in one of the archives, the section on the fourth millennium, when I heard the snap-hiss-snap of a power coupling reset.\"\n\n\"What?! Was maintenance being done on the power grid?\"\n\nI felt Abigail shake her head in the darkness. \"At night sire? Certainly not scheduled, and there were no emergency sirens. I feared a network problem sire, a bad remote controller tripping and resetting a power coupling. That's very dangerous! We have industrial gas lines running here! I was running to report the problem when... when the world exploded.\"\n\nI nodded, thinking about the remarkable coincidence of the street exploding beneath me a few days after I discovered a secret organization. \"How many people were with you?\"\n\n\"In the archive sire? I was alone.\"\n\n\"You were alone in an archive?! Isn't that illegal?\"\n\n\"I have a special permit sire,\" Abigail replied, and then, with a bit of pride, \"My class is zero point nine.\"\n\nI blinked in surprise. Abigail had just told me she was in the top ten of all the women approaching their marriage gate this year, a number probably about 282,000. She was being raised to be a wife of royalty. Or at least had been until now, I realized with dismay. As far as The Book of Bel'dar was concerned, I being with her like this would be considered the ruin of her virginity. Surely Abigail must know this too I thought, yet she was relaxed in my arms. Had she accepted her fate so easily?\n\nIt puzzled me as a child, being taught that the Holy's dual purposes for women were for them to bear children and to be eternal virginal slaves for their husbands. I almost laughed at the contradiction, but that of course would have been my last laugh.\n\nIt wasn't until the following year that I saw the pure evil, saw the monstrous perspective of The Book of Bel'dar that virginity is a state of mind and memory. I made my secret decision at that moment that I would someday ride the Asad for as far as the Lion would take me, no matter what the cost.\n\nThere are about 500,000 human pregnancies per year in the world. About 120,000 boys and 360,000 girls will reach six months of age, and about 78,000 boys and 282,000 girls will reach adulthood. There are no specific culling gates for the girls, just the usual culling for behavior and heresy, and their survival chances for reaching adulthood is much greater than the boys, 78% versus 65%.\n\nThe last time I looked at the census numbers, there were about 12,750,000 adult women in the world, an average of about 3.6 wives per husband. With the anti-aging drugs, prime female fertility occurs between 21 and 70 years of age, and 5% of the ten million women in this age group become pregnant each year. After age 70, women enter a lottery for the anti-aging drugs that is somewhat more generous than the one for males. Most women who reach seventy will survive until their mid nineties, but there's rapid culling after that. I believe the oldest woman currently alive is 104.\n\nThere are no advancements in rank possible for adult women. With the priesthood enforcing their sick definition of female virginity, that would be impossible. But there is a classification system for the girls running upward from 0.0 to 0.9, each level one third the size of the level below it. For all the girls entering their 21'st year (their marriage gate year), there will be about 189,000 at level 0.0, 63,000 at level 0.1, 21,000 at level 0.2, and so on, up to about 10 at level 0.9.\n\nI realized Abigail had demonstrated herself to be one of the most talented women on the planet, reserved for marriage solely to Royalty or Upper Commanders (CL-12 and above). And now I had contaminated her. As a CL-11, I would not be allowed to marry her myself, and no one else would want her. It was hard for me to tell whether she realized it yet, but she was about to be culled, probably within days, and there was absolutely nothing I could do about it.\n\nI hugged her to me and sighed. \"What is your area of specialty? Music?\" Women initiates of level 0.9 receive years of advanced training, most commonly in the musical arts.\n\nAbigail shook her head. \"No sire. History.\"\n\n\"Huh?\"\n\n\"I am a student of history. Even as a young girl, it was my passion and my love. I can look for patterns, find new causes and meaning in historical events. I have a special permit from the Priesthood to study the non-restricted archives. That's why I was in the library so late. I spend all my free time there. My goal is to help the future political career of my husband, add historical insight to the problems he might face. I want to learn as much as I can before my marriage, when my virginity will be sealed and...\" Abigail took a huge breath and let out a long sigh, saying no more.\n\nShe didn't have to. I knew the horror before her, although I have yet to meet a male who seems to recognize that a monster lives among us. If Abigail did manage to survive this night with me and be married, further learning for her would be physically impossible.\n\nThe vault was tomblike, so quiet. As the time wore on, I gently tugged at Abigail, offering that she lie partially on me. She gratefully accepted, completely leaving the cold metal floor that was robbing her of her heat. I held her in both my arms to keep her from rolling off. Soon her soft hair was all over my lower face and neck. Her hair, so soft! It tickled my throat.\n\nShe rested her head on my chest and became still. Her body, so different than mine, so beautiful, such a wonder of contradiction, so full of strength and softness, both at the same time. How is that possible?\n\nI felt her breathing turn slow and steady, and all tension drained from her body. I was amazed she could find such peace with me, enough to fall asleep. My own mind was full of turmoil. I pondered my emotions for her for hours, in the quiet blackness of the vault. And then I heard the hiss of the vault door unsealing.\n\nChapter 8. The Quality of Mercy\n\nTime: October 23, 8235 10:37 AM\n\nAfter spending four hours in morning prayers with some visiting Royalty who had come for the occasion, I hurried off to the nuptial wing of Jizari's central cathedral. My time in the wing was a stark contrast to the friendliness of the Royalty, so many of whom seemed eager to be my friend. The nuptial procedure itself was all business, and very dry, as was the specially trained Priest who performed the marriage.\n\n\"As you can see,\" commented the Nikahaldi, \"There is some damage to the left foot. You'll have to key in your approval that this is acceptable.\"\n\nMy master ID card was already inserted and active in the consoles. I typed in my additional approval as requested. As I waited for the next step, my eyes went to the large monitor on my right.\n\nAnd there she was, Abigail! Standing as required, and dressed in a simple burqa that was pulled back and tied to the back of her left leg to show her cast. There was also the required marriage hood above the burqa, preventing her from seeing anything.\n\nI hadn't seen Abigail since we left the vault at Qataban. She didn't even know for sure whom she was marrying, though I was hoping she could guess. My heart was singing with the expectation of having her see me again!\n\nA number of unexpected pages of text showed up on the Nikahaldi's monitors. There were several blocks of bold red lettering. \"What is this?!\" he muttered, looking totally flummoxed. He spent several minutes reading. \"Sir, this woman has been defiled!\" \n\n\"Yes, I know.\"\n\n\"And you still want her as a wife?!\"\n\n\"Yes.\"\n\n\"I don't understand! I didn't even know such a thing was possible!\"\n\nI sighed. \"I was the one who defiled her. I've been over the legality of this several times with Royalty. As the one who defiled her, it is permissible for me to marry her. The difference is she can be a virgin only to me. She has to be culled if I die. It's all there on your screen. I have several Royal friends who were with me in morning prayers today. Would you like to talk to them about this?\"\n\n\"Oh no sir! That won't be necessary!\" The Nikahaldi typed in his approval codes and the marriage registration program moved onto the next phase. He nodded in approval as he scanned through the medical logs. \"Eternal virginity injections were completed during your four hours of morning prayers sir, full spectrum as required. If you have any problems sir, report them immediately.\"\n\n\"Should I expect any?\"\n\nThe Nikahaldi Priest laughed. \"I'm required by law to say that! There hasn't been a problem in seven thousand years. These injections work!\" He continued to type as his console.\n\nI nodded and then looked back to the monitor of Abigail, not trusting myself to make a verbal comment. Fateen was right, I thought. My discipline does serve me well, well enough to hide a disgust that was without boundary.\n\n\"I'm ready for you to key in your final approval sir.\" The Priest then laughed again. \"Last chance to change your mind! It's the easy road out sir. With her flags, divorcing her would tie you up with an execution council for a month!\"\n\n\"Keying it in now...\"\n\n\"Confirmed. I'm keying in my final clearance... Congratulations sir! You have married! I hope you have many years of good use from her!\"\n\nIt was a traditional blessing. I gave the traditional reply. \"Thank you Nikahaldi, for a fine marriage ceremony. I hope so too.\"\n\nI withdrew my ID card from the console and was now permitted to meet my bride. I walked a short path of corridors and stepped into her holding pen.\n\nShe stood trembling under her burqa and hood. I could only imagine her turmoil, and her courage, willingly submitting to the four hours of the evil injections that had sealed her virginity. I stood before her as her legal husband, wondering and hoping that she would also accept me as the husband of her heart. I reached up and released her both her hood and burqa veil.\n\nHer eyes met mine, and her face burst with a smile of happiness. I nodded for her to follow me. She nodded and veiled herself, head and leg, making herself legal to walk in public. Then she picked up her crutches and followed me out of the cathedral.\n\nMy home, the world's central Security complex was adjacent to the cathedral. Grateful Abigail did not have far to walk with her crutches, we made our way to my temporary quarters, a fine private bedroom of almost thirty square meters. Abigail seemed stunned by the beauty of the countryside outside the bay windows.\n\nI nodded as she smiled at me. \"The countryside here is river valleys crossing in an east-west direction. I know, it's very beautiful.\"\n\nShe nodded and then saw her marriage book upon the bed. It contained a description of me and all the rules and regulations I wanted in our marriage. I was free to edit the book as I saw fit, and Abigail's normal duty would be to read the book just after waking each day. She glanced at me for permission and I nodded again. She sat on the bed and was soon eagerly reading the book.\n\nI walked to the window and watched the scenery for a while, and then sat in a chair near her and waited.\n\nShe looked up at me and raised her eyebrows at me playfully. \"This is so generous Ilias! Complete familiarity when we're alone! From my heart, thank you!\"\n\nI smiled back. \"You must have so many questions! Please ask!\"\n\nAbigail nodded. \"The book explained much. You are a CL-12 now, still riding the Asad. And we are flying to Jericho?! So soon?\"\n\n\"Yes, very soon, shortly before evening prayers, in the same ramjet that brought you here. I'll be the Security station commander there.\"\n\nAbigail nodded in approval. \"I will support you husband, with every fiber of my being!\" She then gave me a shy smile and looked at the clock. It was after 11 AM. \"The first purge cycle of my virginity injections will kick in very soon, probably within a few minutes. I'm going to be deeply asleep for four hours.\"\n\nI nodded kindly. \"Yes, I know. I will hold you as you sleep.\"\n\nAbigail nodded back. \"Thank you Ilias. You are so sweet to me, sweet and kind. Ilias... Do you want my virginity now?\"\n\n\"Uh... Perhaps when you wake up?\"\n\n\"Thank you again! I've received so much training on how to please you! I'd hate to have you excited and then have me forced into sleep by the cycle. I promise, my heart is set on pleasing you!\" She paused for a moment, looking a little sleepy. \"Ilias?\"\n\n\"Yes?\"\n\n\"I do have a question. How were you ever able to stop my execution?\"\n\n\"Ah, that was Ammar's doing.\"\n\nAbigail frowned, blinking her eyes awake, and then gave a small gasp. \"The mayor of Qataban?!\"\n\nI laughed. \"Yes! But he is an amazingly humble person. He prefers his Guild title of station commander.\"\n\n\"Yes, I've heard that. But what could he do? Execution decisions are controlled entirely by the Priesthood.\"\n\nAbigail yawned and suddenly looked very drowsy. I got up and came to her side. In a moment we were both lying down on the bed. My fingers came up and caressed her face for the first time. \"Comfortable?\"\n\nAbigail sighed. \"Extremely. Ilias, I'm so happy you are... my husband,\" she yawned again.\n\nI gently kissed her. \"Since Qataban is Ammar's Guild's home town, he had some influence in the civic resources needed for an execution. One novel delay after another! He is my good friend, and I am so grateful for his help.\"\n\nAbigail nodded sleepily. \"And I owe him my life. Perhaps if you would be so kind, to make a note of this... in my marriage book... Stay with me Ilias... Hold me...\" Her eyes fell shut and she was deeply asleep in moments.\n\nI did stay with her, holding her and crying and praying silently. Oh Abigail, flower of my heart! I didn't want to tell you now. I don't know if this will work! I couldn't bear to give you false hope! Please, please, good and true Holy, so hidden from my world, let my acts of treason be enough... Let them stand against the evil. I lay with my wife and prayed for four hours...\n\nAbigail's eyes blinked open. She turned her head and saw me looking at her and trembling. She began to smile back, and then inhaled a huge choking gasp.\n\n\"Abigail! Are you all right?\"\n\n\"I...\" She looked at me with wild, frightened eyes and seemed to struggle with what to say. She finally decided. \"Sorry! I remember going into the nuptial cathedral for my injections. Nothing after that!\"\n\n\"You don't remember coming here with me?\"\n\n\"No, of course not! Oh!!!\" she whispered and wailed.\n\nMy heart was bursting with joy. I didn't believe her! \"Abigail! It's all right! It's okay for you to remember!\"\n\nShe looked wildly unhappy, sitting up and grabbing her marriage book. She began flipping through the pages in a very determined manner. \"It says I may call you Ilias and be informal, whenever I want... Oh!!!\" She bent her head and burst into tears.\n\nI repeated my whisper. \"Abigail! It's all right! It's okay for you to remember!\"\n\nShe looked at me trembling. She shook her head and whispered back, \"How can you say that?! No it's not!\"\n\n\"Abigail, I forgive you! I utterly forgive you! I would try to hide it too. But you do remember, don't you? Please say yes. You do remember, don't you?\"\n\nAbigail sat there trembling for a moment, and then agreed with a small nod of her head.\n\nI hugged her, holding her in my arms as we lay. I cried in a whispering voice, \"My wife! I've saved you!\"\n\nAbigail cried with me, looking distraught and confused. \"I don't understand. What did you do? How is this possible?\"\n\n\"The virginity drugs, I've been working on this for years, ever since I was a boy, ever since I understood what the drugs do. I've spent years in study at night. And as a CL-12 Security commander, I have access to the logs. Who watches the watchers? It has to end somewhere! Oh Abigail, I've saved you!\"\n\n\"Saved me? Ilias!\" she whispered. \"What did you do?\"\n\n\"There are only two key injections in the process. All the others are for preparations and cleaning and forcing the first sleep cycle. The saline solutions clear the lines, and the preparation drugs eliminate your brain's ability to resist the virginity drugs. I reprogrammed the injection cycle. The two key injections were flushed into sewage, and you got two extra saline solutions instead. The inventory balances, and the report logs are all confirming something that never happened. I did it! Abigail, my wife! I did it!\"\n\n\"My life!\" Abigail whispered as she cried. \"My life! Ilias! This is the second time you've risked your life to save mine!\" She looked at me with such adoration that I became embarrassed.\n\nThere really wasn't much time to discuss what our future would be like. Our jet to North America was leaving in less than two hours. We had a few minutes to laugh and cry and hold each other, and then we departed for the airport.\n\nVirginity is a state of mind, and therefore a state of memory. Thus the Book of Bel'dar proclaims. It was the first lesson taught in my sex education class as a boy. I looked at Abigail as we made our way through the complex. With her study of history, she might know so much, about how such an evil philosophy ever was born. And one must understand one's enemy before it can be defeated.\n\nThe Book of Bel'dar is also very clear on this, that a woman's purpose is to serve a man. From the limited ancient history available to me, I knew that this attitude was there from the very beginning, and some of the oldest texts suggest even before the beginning, from before the War of the Burning Metals. Defilement was called rape and was used to degrade, was used as a weapon of war and of control. And the religion prized the virginity, and sought to capture it forever. Abigail is a student of history. There is so much she can teach me!\n\nThe virginity drugs totally and forever block the creation of long-term memories. Each day seems normal, but nothing is remembered across a sleep cycle. At each morning, all the adult women on Earth awake with the memory of their nuptial injections as the last thing they can remember. They reach for their marriage book to learn who their husband currently is, what year it is, how old they are, and what is expected of them. They train hard at this for years as girls, frantically storing up the skills that they will need for their lifetimes, since no further learning is possible after their wedding day. Each day becomes an isolated trip in time, further and further into their future until they die. It is a fearsome evil and it will not stand, I swear it! ",
        "And every day their husbands may enjoy their novice understanding of sex, enjoy introducing them to their first sexual experience, day after day, year after year, each sexual encounter their first, even through pregnancies. They become eternal virgins, because the virginity of their minds is forever sealed by the drugs. And even if they become unwanted and divorced, they can be virgin brides to their next husbands, because virginity is a state of mind, and thus a state of memory.\n\nThat is why Abigail must be culled if I die. Her encounter with me at Qataban occurred before her nuptial injections. Her first memories of me can not be erased.\n\nMy heart was singing with joy as we went to the airport. When it was possible, Abigail would lift her veil and give me lots of shy and playful smiles. From my secret studies, I believe the preparation drugs in her body are harmless without the principal injections, and they should flush naturally from her in a few days. I saved her! And I will save others! This was my vow to the Lion, so long ago, that the monster would not stand, no matter what the cost.\n\nAnd yet there is still so much I don't understand! How could such a monster ever have been born? Oh Abigail, history! Yes! There is so much you can teach me!\n\nChapter 9. The Walls of Jericho\n\nTime: October 23, 8235 4:27 PM\n\nWhen we arrived at Jizari's airport, I was given some unexpected information. A high ranking Royal was in the city and wanted to travel immediately to Aleppo. He had commandeered my Guild's ramjet. Abigail and I had few minutes and we went to find a quiet place to sit in Security's VIP lounge. I pulled out my scheduler and typed in a few queries. I looked up and gave Abigail a small smile.\n\n\"It's not so bad. There's a non-stop rail connection from Aleppo to Jericho, 293 kilometers. The rail trip will take just 75 minutes. At least the storm here is breaking up. I don't think we'll have any trouble with takeoff.\" A brief but fierce spring storm had started an hour ago. I sighed, thinking about missing the coming summer, but winter in North America does have its own beauty.\n\nAbigail gave me a small nod through her burqa, keeping the correct protocol by not replying verbally in public without a direct question being asked of her. Within an hour our jet departed. The 10,400 kilometer trip to the ancient site of Boston Massachusetts would take only three hours.\n\nI was stunned by our passenger. Mudar! Not just Royalty, not just Ruling Royalty! Mudar is one of the most feared and imposing men in the world, and not just because of his flaming red hair and two full meters in height. He is also the youngest of the three CL-29 in the world, and as such the number-six man on the eleven-member supreme ruling executive council.\n\nIt was a worrisome development. Mudar could have easily ordered the jet to be for his sole use. The fact that he was permitting us to fly with him was not without danger. Given the choice, I probably would have preferred taking a day to get to Jericho by sub-sonic transportation.\n\nMudar motioned with his hand as we boarded how he wanted us to sit. I was in the back left side, with Abigail in front of me. Mudar was in the front right, with one of his wives in back of him and on my right. Mudar's presence dominated us, 10 cm above me and 25 cm taller than Abigail, more with her bent with the crutches. He smiled at her as he gestured her with his hands, but the smile never touched his eyes. I think Abigail realized it too. We were both on our guard.\n\nAt 6 PM Mudar started the evening prayers, beginning with a free-form version of The Prayer of Uncounted Failings. For a while it made sense, but then it became very difficult to follow. Afterwards there was a period of silence. Mudar just sat there turning, slowly shifting his gaze back and forth between Abigail and me. I couldn't help but notice the class insignia on his sleeve, the Royal square with the tri-colors of the supreme ruling executive council (purple, red, and yellow) and an addition band of blue on top. And out of the corner of my eye, I could see Mudar's wife trembling in her seat beside me. I briefly wondered what she looked like under her burqa.\n\n\"So,\" Mudar said, finally fixing his gaze upon me, \"Quite a ride on the Lion so far.\"\n\nI gazed back. If he had said, \"Quite a ride on the Lion so far, don't you think?\", that would have given me a firm legal reason for replying. But without a direct question, and without explicit permission to speak freely, technically any response at all could get me into trouble, even a simple nod of my head. I stared back in silence. After a while Mudar's face broke into a small frown, and his eyes were totally without warmth. \"I've spoken several times about this issue, even with Abdul Quddus himself occasionally, on why we allow the Lion to maintain such independence from the Priesthood. What is your opinion?\"\n\n\"My opinion Grand Mufeto, is that the Lion exists as described in the Book of Bel'dar.\" I bowed my head slightly as required, waiting patiently for him to continue.\n\n\"Do you know Ilias, that I was a Nikahaldi as a Priest?\"\n\n\"Yes, Grand Mufeto.\"\n\n\"That is the proper way to mature, slowly through the classes. I think your ride on the Lion is...\" He paused for a moment to consider and then frowned. He finally seemed to realize that a direct criticism of the Lion would be a direct criticism of the Book of Bel'dar, and that he was flying in a ramjet of the Guild that monitors the world. I was astonished to see him come so close to such a blunder, though I showed no outward sign of it. Discipline, Fateen, discipline! You were so right! What would life be without it?\n\nMudar changed topics. \"Regardless Ilias, another successful ride! You made the ranks of the Upper Commanders.\" He paused for a moment, giving me another chance to trip up and respond. After a moment he continued, \"So how many Upper Security Commanders are there now in Security?\"\n\nHe was referring to the citizen levels of CL-12 to CL-15, commanders who have both red and yellow in their diamonds, the highest levels below Royalty. It's a huge jump to earn the yellow and go from CL-11 to CL-12. All Guilds reserve executive power to within the ranks of their Upper Commanders. As a CL-12, I could contact my Guild's eleven CL-15s directly anytime I thought it necessary. I would never dare to that as a CL-11.\n\nI answered Mudar's question. \"Including me now, seventy-six, Grand Mufeto.\"\n\nHe feigned surprise. \"What?! So many?! In a Guild of what, three thousand?\"\n\nHis point was real. Outside the Priesthood, the average Guild had twice as many Upper Commanders, but was also eight times our size. Security is a great Guild for promotion.\n\nBut before I could affirm Mudar's comment, he turned to Abigail and asked, \"And what is your opinion?\"\n\n\"My opinion, Grand Mufeto? I believe your number of three thousand Security members is accurate.\"\n\n\"No, not about that. I mean about the Guild having so many Upper Commanders.\"\n\n\"It's not my place to have an opinion on such matters, Grand Mufeto.\"\n\nHe chuckled at her. \"No, indeed not. And what should you have an opinion on?\"\n\n\"My opinion is that I will faithfully serve my husband, Grand Mufeto.\"\n\n\"A correct opinion, my servant. And you also think of me as your master, don't you?\"\n\n\"Yes, you are also my master, Grand Mufeto.\"\n\n\"And you will obey me in all things, correct?\"\n\nAbigail paused for mere fraction of a second. \"As described in The Book of Bel'dar, yes, Grand Mufeto.\"\n\nMudar fidgeted for a moment. He seemed annoyed about something and pulled a small cloth from inside his robe and wiped the left side of his neck and cheek. He scowled at me. \"Have the pilot reduce the air temperature in here Ilias.\"\n\nI complied at once.\n\nHe returned to his conversation with Abigail. \"And so this is your wedding day! Such a wonderful day of freedom for you. No more worries about trying to remember things, no more studying. How I envy you! So young, and to have such a care-free life ahead! You are so fortunate! Don't you agree?\"\n\nI worked mightily and kept a completely neutral expression. Without my intervention, this would have been a day of horror for Abigail, a day of great and evil degradation, the day she would have lost her abilities to grow and to learn and to chose new purpose for her life. Except for my treason, all these things would have been irrevocably ripped from her mind. And yet Abigail answered with sincerity, \"Oh yes, Grand Mufeto, I am very fortunate!\"\n\nMudar seemed startled by her words. \"Really? You were zero point nine, one of ten this year, while there were over two hundred Royal promotions and marriage opportunities! Don't you feel cheated, that you were defiled and married by a lowly Citizen Level twelve?\"\n\nI was so proud of Abigail. The monster! If he were so envious of her fate, why didn't he take the eternity drugs himself?! But Abigail didn't miss a beat. She replied kindly, \"It's not my place to feel such things, Grand Mufeto.\"\n\nI think we both heard it, both Mudar and I, perhaps even Mudar's wife. Abigail was not only sincere; her voice also had more than a hint of compassion for Mudar, perhaps even pity. It totally unsettled him. He tried a few more desultory attempts to trap Abigail and then gave up. We flew the rest of the trip in silence, the remainder of the evening Prayer cycle abandoned.\n\nOur jet landed at Aleppo on time. It was a very dark night, thick clouds and a cold drizzle. We parted company for Mudar and his wife, and Abigail and I headed to the adjoining train terminal. The stormy weather outside provided a nice contrast with the train interior, warm and cozy as we flew across the landscape at close to 250 km/hour. The super-conducting magneto-rails provided an almost completely silent ride.\n\nAs we approached our destination, the train slowed and we got a good view of the fabled Walls of Jericho, four meters of solid stone built late in the first millennium and now over seven thousand years old. Jericho was the oldest township in North America, and the walls were originally built to keep out bears. They still serve that purpose.\n\nThe early pilgrims originally intended to settle at the seaport site of Aleppo, but Boston took at least two direct hits during the War of the Burning Metals, and at the time the residual radiation was too much for the first North American pioneers to handle. So they moved to Jericho, founded on the ancient site of Burlington, Vermont, at 44 o 28' N, 2 o 15' W. Its solar time would lag nine minutes behind the standard of Bandar Arenas, a pleasantly small difference.\n\nMy private chauffeur was waiting for us as we pulled into the Jericho train station. Abigail and I were in my private suite at Guild HQ by 11 PM. We took quick showers, and then I joined Abigail by a large window and put my arm around her waist. Our Guild was right at the edge of the city, along the lake, the one side without the wall.\n\nI kissed my wife and smiled. \"About fifteen kilometers to get across the water, and then vast stretches of deep forests. Mid fall, it will be very beautiful there. Perhaps someday when you're off the crutches, we can do some recreational camping. The other side of the lake used to belong to the ancient State of New York.\" And then I remembered to whom I was talking. Abigail could probably tell me much I didn't know about New York.\n\nShe nodded sweetly and then in an act of boldness leaned up and kissed me. \"Ilias, before you bed me, I should tell you something, something I strongly suspect, something I noticed about Mudar.\"\n\n\"Oh? What?\"\n\nAbigail paused for a moment. \"Somehow men don't seem to recognize the burqa is a powerful tool when handling a delicate conversation. I can stare and watch a man's eyes and body language, much more closely than another man could and not be rude. And the man can't stare back and watch my eyes. It's a decided advantage.\"\n\nI nodded. \"True. And you're right, I've never thought about it.\"\n\n\"In the plane, Mudar had a brief moment of sweat, asymmetric, only on the left side of his face and neck. He acted both annoyed and surprised by it. I think it was the first time it has happened to him. If I'm right about the cause, it won't happen again.\"\n\n\"Huh? Abigail, what are you talking about?\"\n\n\"The gene for red hair, the over-active pituitary gland, the asymmetric sweat, Ilias! It all fits! I found two separate references to this, once in the second millennium and once in the forth. Foolish Priests! They think they can separate out the value of history into restricted and non-restricted sections!\"\n\nI smiled and caressed her hair. \"Yes, I've thought about that too. History is holistic, like a hologram. Tear away a piece of the hologram, you don't lose a piece of the image. Instead you make the entire image fuzzy. And the more you tear, the fuzzier the image becomes.\"\n\n\"Yes Ilias, exactly! And the mind is much more powerful than a laser beam in reconstructing an image. The mind has the power to infer and deduce, to create great bridges of understanding from small building blocks, and to use broad principles to dive down and find the truth of hidden details. The mind can make the torn image whole again!\"\n\n\"So what do you know about Mudar?\"\n\n\"Between ten to twenty days from now, certainly within a month, he will suffer the onset of Class-1A Progeria.\"\n\nI blinked. \"What?!\" Abigail had just mentioned a rare but extremely deadly disease, a complete auto-immune system rejection of the anti-aging drugs. Much faster than a body's failure due to lottery placebo injections, Mudar's death would occur within days of the onset of a lightning fast aging process.\n\nI stared at Abigail. \"Are you sure?\"\n\nShe frowned for a second. \"I have just two independent reports. But so many of the attributes fit Ilias! In both my cases, the men were between 220 and 230 years of age. How old is Mudar?\"\n\n\"I can find out!\" I typed at my bedroom console for a moment. Then I gestured for Abigail to stand aside and out of sight, and I place a video call to Zaim.\n\nI'll give him credit. He answered the call in seconds, dressed in a night shirt and obviously roused from sleep. He recognized me immediately, and began the conversation with a single word. \"What?\"\n\nI filled him in on the details, quoting Abigail's references. No one had ever made the connection of these specific symptoms to the disease. It was a nugget of pure gold information lying naked and unnoticed in the unrestricted sections of the Qataban libraries. \"And the final two pieces of the puzzle,\" I concluded. \"One: Mudar is 227 years old. Two: He had a brief moment of senility on the jet. It surprised me greatly. He almost directly criticized the Book of Bel'dar.\"\n\nZaim sat unmoving as I talked. He finally looked up and smiled at me. \"Ilias, this is huge! I see now why you bothered to save that female! I was worried before it might be a sign of stupid sentimentality. Others were too. But now we'll understand. Well done! Tell no one else about this.\"\n\n\"Yes sir, of course. Our observations never happened. One more thing?\"\n\n\"Yes?\"\n\n\"I've been thinking. If you could get me top-level clearance for data access, I could have my female prospect for more nuggets of information like this.\"\n\nZaim considered thoughtfully. \"Well, your female is a proper virgin now, no issue there... But top level access for a CL-12? That would be difficult...\"\n\n\"One more find like this sir... It would be worth a lifetime of the female's effort.\"\n\n\"Oh, undoubtedly. Hmmm... Wait until your next ride on the Lion. This will be a lot easier to do when you're CL-13. Again Ilias, well done!\"\n\nI took a gamble and decided to speak with complete familiarity. \"When I'm CL-13?! Quite a change in expectation, don't you think, from our first meeting?\"\n\nZaim cracked a very rare smile. \"I'll leave you to the remainder of your wedding night!\" He then shut down the connection. I was sure the rest of his night would be extremely busy.\n\nSeeing the video terminated, Abigail walked with her crutches to me and leaned down and lightly kissed me as I sat. I looked up and smiled, and then stood and carried her to bed, her sweet laughter of anticipation filling my heart. We soon undressed and were under the covers, naked with each other for the first time. The wind and rain had picked up outside, and was beating against the windows. But I had beautiful and willing Abigail with me, and my heart was singing with desire!\n\nAbigail shivered as I broke our kiss, my mouth wandering to her throat and breasts. I sighed and shivered as we held each other. My mouth descended still lower, down to her navel. My breathing was in pants, my heart racing, my fingers curling in the stiff hairs of her pubis, my elbow bumping lightly against the side of her cast.\n\nI felt Abigail's hands gently grip my penis and cup my sac. My loins were on fire for her. I opened my mouth and pressed my open lips against her abdomen, shuddering with overwhelming desire, and then I felt her mouth close upon my penis head, her lips locking behind the ridge and her tongue lapping the sensitive tip. My hips thrust forward uncontrollably and I began to orgasm, one gasping release after another, pouring myself into Abigail's sweet mouth. The emotions and physical pleasure washed over me like a river. I was only dimly aware of Abigail's hands releasing my sac as she turned to cuddle with me afterwards. I lay exhausted and drained.\n\n\"Abby,\" I whispered, \"I...\"\n\n\"Sweet Ilias, it's all right,\" she whispered back. \"A perfect and gentle way to start our marriage! I know our future play times will be longer. I will cherish the memory of this moment forever. I am so happy to be your wife!\" She was quiet for a long moment.\n\nI smiled at her in my sleepiness. \"I will cherish the moment too,\" I murmured. Foolish, stupid world, I thought. Why would I ever want to erase the memory of this moment from my wife? Abigail was cooing in contentment as she lay in the warmth of my side, her hand upon my breast, her fingers softly caressing my male nipples.\n\nShe spoke in the quietest of a whisper, \"Ilias, I love you!\"\n\nLove... My mind drifted at the thought. Such a strange concept. I had been taught since childhood, and had been instructed from the Book of Bel'dar, that humans are incapable of the emotion. Love is reserved for the Holy alone to express, allowing our existence in spite of our counted and uncounted failings. Love... And yet, perhaps Abigail could teach me... My mind drifted, returning to the more familiar patterns of my Guild...\n\n\"You see why the information is so important...\" I murmured.\n\nA giggle. \"Mudar?\" whispered Abigail back. \"Of course. I've been reading about power politics all my life, eight thousand years of it...\" She gave me the softest of a kiss. \"Go to sleep, my darling...\" I drifted into a peace of infinite depth.\n\nZaim got no further sleep that night. The political chess games within the Royal Priesthood never stop, and thus neither does the job of the Guild which keeps track of all the players' positions and scores. Abigail's observation enabled Security to make major realignments of its multiple alliances within Royalty, negotiating far better deals than would be possible if Mudar's condition were already public knowledge.\n\nOn November 10th, right on schedule, Mudar was stricken with the disease and died two days later. The power structures underneath him temporarily crashed with the news, and Security was perfectly positioned to pick up the pieces as they lay briefly available. And then the game continued.\n\nChapter 10. The Forest Primeval\n\nTime: November 25, 8235 3:56 PM\n\nAfter helping to unpack the survival gear, the pilots returned to the helicopter. They quickly went through their preflight checklist, started their rotors, and then waited for me to give them clearance to depart. I waited until precisely 4 PM, the official start of the test, and gave them the expected hand signal. They saluted smartly, I saluted back, and then there was a blasting rush of wind as the craft lifted. It cleared the trees after a few seconds and then banked and tilted forward. The noise and the wind and the flashing running lights quickly receded to the south."
    ],
    "authorname": "hammingbyrd7",
    "tags": [
        "science fiction romance",
        "sci-fi romance",
        "virginity",
        "sci-fi novella",
        "science fiction novella",
        "religion",
        "war",
        "polygamy",
        "pregnancy",
        "science fiction"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-preacher-man"
}