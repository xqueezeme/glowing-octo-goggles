{
    "title": "Accidental Adam",
    "pages": [
        "\"Come on Adam, it'll be great,\" Ken cajoled.\n\n\"You can go, I already told you that you don't need me there,\" Adam responded for the umpteenth time in two days.\n\n\"I'm the new kid in town, I can't just show up uninvited, plus I won't know anyone there. You have to come with me.\" Ken pleaded in a whiney voice.\n\n\"Fine,\" Adam said in defeat, his shoulders slumping as he finally gave into the avalanche of nagging his brother had put him through. \"What are we going to do for costumes?\" he asked, dreading the response.\n\n\"You won't regret it. I promise this will be the best Halloween party ever!\" Ken ignored the shake of Adam's head and the look of martyrdom on his face. \"I've got the costumes covered. Do you know nothing about me?\" he said, grinning widely.\n\n\"Oh God,\" Adam groaned. \n\n\"I promise something macho and manly. Just because I prefer a bit of bling doesn't mean I will force it on you,\" Ken laughed. \"Not that you wouldn't look stunning as a drag queen with those legs,\" he teased and moved to safety behind the kitchen bench before Adam launched a cushion from the couch at him. \"It's hard enough to meet a nice guy in this town without you giving him mixed signals,\" he continued to laugh as Adam pulled a face in mock disgust and threw a second cushion.\n\n\"I think its fairy obvious which side of the fence I play on. Just don't make me regret this,\" Adam huffed, already regretting giving in to Ken's nagging.\n\nFor a city of several thousand, Adam hated that he and his ex-girlfriend, Maddy, still seemed to run into each other constantly, and he was sure tonight would be no different. They maintained too many mutual friends and acquaintances. Although they had broken up amicably over a year ago now, he still had no desire to see his ex with someone new when his own love life was so lacking. Still with costumes involved, there was always the hope that he wouldn't recognise her in the crowd. It was a slim chance but a chance none the less.\n\nHe had every reason to hold a grudge but he didn't. She had left him with huge debts that she had hidden until he discovered the bills. She had said she had been paying them and he was sure that she had meant to catch up, but they hit the point of no return and their electricity had been turned off. She had been hiding a lot of money problems and, when he finally had enough, she left him with large debts and a lease on a house he could no longer afford on his own. \n\nDespite that, he remembered the good things about her, her generosity and kindness, her laughter and humour and the sound of her orgasms. Oh how he missed the sex.\n\nThey had ended it amicably after both growing tired of the constant bickering over their finances. They had divided up the assets and the debts evenly, possibly too evenly if he was honest about it, but he cared enough about her to not force her to move back home to her parents and the suffocation she felt from them.\n\nHaving Ken move in was a godsend for both of the brothers. It relieved some of the financial burden for Adam and gave Ken the opportunity to escape the old school values of their parents more easily than otherwise might have been the case for the young university graduate. The fact that his brother was flamboyant and was enjoying his new sense of freedom to its fullest didn't bother Adam unless he was getting dragged into some scheme as he was tonight.\n\nHe dreaded to think about what type of costume Ken would give him to wear and dismally he hoped that it would render him unrecognisable to anyone he might know at the party. He didn't have long to wait.\n\n\"Taadaah!\" Ken sashayed into the room holding two costumes. \"Which would you like to be tonight? The sexy nurse?\" He waggled his eyebrows. \"Or the manly fireman, hero and protector of the people?\"\n\n\"Just give me the damn costume,\" Adam groaned. \"Leave some hot water for me,\" he called as Ken made a bee line for the bathroom. He had been pleasantly surprised by the costume choice but he still wasn't going to make his acceptance of going to this party easy on Ken.\n\n*****\n\n\"Why did I let you talk me into this,\" Adam groaned, throwing the heavy jacket into the back of the car and climbing into the driver's seat.\n\n\"Because you're the awesome big brother who loves me like the little sister he never had,\" Ken grinned.\n\nAdam rolled his eyes dramatically but acknowledged that Ken was partially right. He did feel protective toward him. He had been his brother's keeper since for as long as he could remember. One of the joys of living in the rural town was that the school campuses were all nestled together so that, despite the gap in their ages, he had been able to keep an eye on his little brother and warn off any potential bullies.\n\n\"A little sister would have been easier to deal with,\" Adam grumbled teasingly. \"You take longer to get ready than any girl I know.\"\n\n\"This kind of perfection takes time. I look gorgeous and you know it,\" Ken laughed. \n\n\"That's one word for it,\" Adam smirked, but had long since given up trying to curtail his brother's choice of clothes. Whether dressed as a man or a woman he always made a statement, this particular outfit was possibly one of the more subdued numbers he had seen recently.\n\n\"So what's Maddy going as?\" Adam asked, knowing Ken would have found out what his ex would be wearing.\n\n\"Cat,\" Ken replied abruptly.\n\n\"A cat?\" Adam was startled by the tone in his voice.\n\n\"No! Cat!\" Ken pointed out of the widescreen to the street before them. \n\n\"Matilda!\" A woman's voice shouted and though he didn't see the woman, he saw the cat. Adam braked hard and swerved, narrowly missing the cat but managing to hit a parked car on the other side of the road. Being in a suburban area, he hadn't been travelling at speed so the impact was minimal, but the crush of metal and glass told him there would be damage to both cars. Reversing and pulling into the curb, Adam jumped from the car to check behind him for the cat, not knowing for sure if he had swerved in time. Not seeing a cat on the road, he turn back to inspect the damage on his car and the one he had run into.\n\n\"Could have been worse,\" Ken said, appearing beside him. He looked around, \"I'm guessing the owner of that car will be along in a minute.\"\n\n\"Matilda!\" A woman yelled. \"Matilda's in the tree!\" The woman was a pretty blonde who was pointing at the tree and looking around for help. Adam could see it was the cat that he had almost hit that was stuck in the tree and he groaned, shaking his head. \n\n\"Don't look at me,\" Ken held his hands up dramatically in a \"can't touch this\" way at the look Adam gave him. \"I can't climb a tree in these heels, let alone a skirt this short! You're the fireman. Go save the woman's cat.\"\n\nAdam couldn't believe the irony of the situation. Not seeing the owner of the other car approaching him yet, he approached the nearly hysterical woman, \"Hey, calm down, I'll go get her,\" Adam said in a soothing tone. \"Leave it to me.\" He smiled apologetically. \"It's my fault she's in the tree.\" With that he began to climb, cursing himself for getting into this situation, he should have just stayed home and watched the football like he had planned.\n\nKen watched in amusement as Adam began to climb the tree. He knew his brother hated heights but would try and save the day like the good guy in a movie. It had always been that way with him, if anyone was in trouble Adam was there to save the day. He couldn't count the number of times Adam had helped him out of particularly messy situations. Ken looked up as another young woman came towards him from a neighbouring house. Her hand covered her mouth in shock looking at the cars.\n\n\"I don't suppose that's your car we bumped into?\" Ken asked and the woman turned her wide eyed expression onto him. \"I could pinch you so you know it's not a nightmare,\" Ken offered helpfully.\n\n\"Yeah, I saw the whole thing.\" She shook her head as if coming out of a daze. \"It wasn't your fault,\" she said with a note of resignation in her voice and looking toward the pretty blonde who was still visibly upset and calling to her cat from beneath the tree. \"Life sucks,\" she thought morosely as she inspected her car briefly and turned to watch the fireman clutching a large branch several metres from the ground and inching toward the cat. \n\nShe had thought it was so sweet that one of the guys had gone to save the cat and had considered that maybe the accident was fate and she would finally meet a nice guy that wouldn't fawn all over Liz. Now not only was her car damaged but the first good looking guys she had met in ages were gay. She sighed again, at least no one was hurt and it got her away from her sister's manic preparations for her kids' Halloween sleep over.\n\n\"Don't worry, sweetie\" Ken said in a conciliatory tone, hearing her sighs, \"Adam's a good guy and he will take care of it. He has great insurance.\" Ken did his best to reassure her that they would make everything right.\n\n\"Rachel,\" she said distractedly, and at his inquiring look explained, \"as opposed to sweetie.\"\n\n\"Oh Rachel honey, I call everyone sweetie. Even that big idiot brother of mine, up the tree,\" he chuckled. \n\n\"Brother, not partner?\" Rachel again looked at Ken with wide eyes.\n\n\"Ha, no Adam's as straight as they come, despite the best efforts of some of my friends to persuade him otherwise,\" he laughed lightly and looked back at the tree.\n\nBy this stage quite a crowd had gathered on the street, including several of the elderly neighbours who had come out from peaking behind their curtains to get a better look at what was going on.\n\n\"Matilda!\" the blonde in skin tight active wear yelled again.\n\nAdam could see and hear Ken and Rachel from his vantage point in the tree. He was glad she didn't seem angry that he had hit her car. At the prompt of the renewed yelling he reached his hand out to the cat, only to have it batted away by a sharp claw and an angry hiss. He saw a little old lady cross the road to stand near the cars rather than approaching the tree like everyone else who had come out to watch and the movement made him feel dizzy. \"Fuck I hate heights! What on earth and I doing up here?!\" His thoughts screamed at him and he clutched at the branch he was balanced on.\n\n\"Don't you worry, Dear, I called the emergency number. These dandy boys won't be going anywhere in a hurry,\" a frail looking older lady whispered loudly to Rachel, giving Ken a disgusted look. As if the words were heralding their arrival, a moment later sirens sounded close by and not only police but the real firemen and ambulance officers arrived on the scene. They parted the crowd to get close to where Adam was obviously having difficulty coaxing Matilda from the tree and moved everyone back a little way.\n\n\"Fuck,\" Adam groaned under his breath, \"Why the hell did I come up here? I hate heights!\" He looked own and felt another wave of dizziness. \"Come on furball. Everyone is watching now.\"\n\n\"Ooh hello, handsome,\" Ken stepped forward as a fireman came toward him. \"What can I, do.. for.. You.\"\n\n\"You know the guy in the tree?\" His tone was abrupt and no nonsense.\n\n\"My brother Adam,\" Ken smiled, helpfully and hopefully.\n\n\"Thanks,\" the fireman turned back to the tree and raised a megaphone to his mouth, \"Steady now Adam, we don't want you to fall from there.\"\n\n\"Fuck, fuck, fuck,\" Adam cursed under his breath. How could this be happening? He was just trying to help and now he was stuck in a great big bloody tree with a feral devil cat that wouldn't let him save it. \n\n\"Don't worry, I'm good with pussies despite appearances,\" Ken announced and stepped under the tree. \"Here pussy, pussy, come on,\" he pursed his lips and made kissing sounds. The cat immediately jumped into his arms. \"See Adam, I told you I could get pussy if I wanted to,\" he laughed loudly up at his brother, who clung precariously to the branch.\n\n\"Oh for fuck's sake, piss off Ken,\" Adam hissed, realising to his horror that he would have to find a way out of this tree himself now. He looked down on the crowd below him and another small wave of dizziness hit him.\n\n\"You can come down now Adam,\" the fireman on the megaphone announced loudly.\n\n\"Yeah in a minute,\" he called back, his arms tightening around the branch.\n\n\"Seems he's still not so good with heights,\" Ken chuckled. \"Vertigo,\" he explained further to the looks of confusion the others gave him.\n\n\"Why the hell did he climb a tree then?\" Rachel blurted.\n\n\"Hero complex, I did mention he was a good guy, right?\" Ken continued to chuckle, watching as the firemen continued to coax Adam from the tree now that the cat was safely on the ground.\n\n\"Come on Adam, the cat jumped, you can do it,\" one particularly burly fireman was saying. \"Just let go, we got ya,\" he called louder than necessary, putting on a show for the onlookers.\n\nGroaning at his own stupidity, he let go of the branch and fell, shouting in alarm as he dropped and bounced from the small inflatable mat that had been positioned below him on the ground. A loud cheer went up as the paramedics moved in to check him over.\n\n\"Ouch, that's gotta hurt,\" Rachel winced at the sound of him hitting the ground.\n\n\"Probably hurt his pride more than anything,\" Ken said, trying to stifle his laughter. \"Nurse Ken to the rescue though.\" He grinned and sauntered toward where his brother was being helped to his feet by the paramedics.\n\nIt was Rachel's turn to laugh as Ken all but pranced over to where the firemen stood dismantling the cushion of air that had broken Adam's fall. She noted that he all but forgot his brother as he flirted outrageously with the men in uniform. \n\nThe crowd started to dissipate and Rachel and turned to inspect the damage to her car again and talk to the police officer that approached her.\n\n\"Looks worse than it is. It's just the front side panel. Luckily he was already breaking when he swerved,\" the policeman said.\n\nShaking off any assistance from the paramedics, Adam pulled together what little dignity he had left and approached Rachel. Humiliated by the whole experience, he tried to ignore the woman whose cat had caused it all when she ran after him.\n\n\"Look I just wanted to say thanks,\" the blonde grinned. \"I mean there was no need to go up there being afraid of heights and all if your friend could just get her down like that. Thanks though,\" she leaned forward and kissed his cheek.\n\n\"No worries,\" Adam groaned, just wanting the humiliation to end. \"I was just trying to help after almost running over the cat, you know.\"\n\n\"Actually, I think it was pretty cool,\" Rachel butted into the conversation from behind him. \"A lot of guys would be pretty pissed that your cat caused the accident, Liz,\" she said pointedly to the pretty blonde.\n\n\"Oh Matilda didn't mean it,\" Liz cuddled her cat to her chest. \"You're cool with that, right?\" She rested a hand softly on his arm and looked at him with wide blue eyes. She knew she was beautiful and she was used to getting her own way with men, even gay men.\n\n\"Yeah sure,\" Adam just wanted the whole scene to end. \"No one got hurt and the cars can be fixed. I'll just grab my licence for you umm, Rachel?\" He walked to his car inspecting the damaged bonnet on the way.\n\n\"Sorry I have to rush, but thanks again,\" Liz said. \"I have a date,\" she said, pointedly looking at Rachel. \"You hanging out with your sister again tonight, Rachel?\"\n\nRachel gave her a look that said volumes about what she thought of the vain, vapid woman but she said nothing in return, rather focusing her attention on Adam. He was tall and good looking, she wondered if he had a girlfriend. \"Of course a guy like that has a girlfriend,\" she thought. Nice guys like that don't stay single long, that's for sure.\n\nAdam remained aloof and distracted as he and Rachel exchanged details. He was embarrassed about the scene that had occurred and wanted to get away from it as soon as possible. His car wasn't drivable, so he left it there on the side of the road to be picked up by a tow truck from his insurance company the next day. Ken called them a taxi, declaring that the party would take his mind off everything and was a much better alternative to going home.\n\n\"Now that you're not driving there's no excuse not to relax and have a drink at this party, who knows you might meet some nice girl to take your mind off things,\" Ken grinned as he fished the fireman's coat from the back seat. \"Nice to meet you Rachel, maybe we'll run into you again someday,\" he chuckled at his own joke and pushed his brother toward the waiting taxi.\n\nRachel watched them going. Adam was single, shit, why hadn't she been brave enough to find out before they left. She looked back at the cars; berating herself for not seizing the opportunity to get to know the guys better.\n\n*****\n\nThe atmosphere at the party was festive. The hosts had gone to a lot of trouble with decorations and spooky treats. Ken immediately got into the spirit of things and became a social butterfly, leaving Adam to mingle on his own with friends he hadn't seen for a while for fear of coming into contact with his ex, Maddy.\n\nHe had begun to release all the tension he felt from the scene on the way to the party when Maddy arrived. \"Fuck,\" he said soft to no one in particular, \"She did come as a cat.\" He looked around for Ken, but in a sea of costumes, spotting his brother was difficult. There were at least three sexy nurses in attendance and Adam admitted grudgingly that Ken pretty much out shone them all. Thinking that he recognised Ken's blonde wig, he touched the shoulder of a sexy nurse only to find himself looking into the face of the blonde woman whose cat had caused the earlier accident.\n\n\"Fuck,\" he said, \"I mean sorry, I was looking for my brother. You haven't seen him have you?\"\n\n\"You thought I was your brother,\" Liz all but yelled, anger coloured her face. \"I will have you know that I have been on the covers of some big name magazines! I am a super model and you thought I was your brother!\" her voice was rising in pitch as she began her rant.\n\n\"Oh fuck I am so sorry, I wasn't really looking I just saw the hat,\" he tried to head off the inevitable argument when Ken arrived.\n\n\"Sweetie you wish you looked as good as I do in this outfit,\" Ken sashayed through a three step catwalk impersonation. \"Besides this big idiot saved your cat earlier as if you don't remember so just chill and enjoy the party.\" Ken pulled Adam away from the stunned beauty, \"I have a guy for you to meet.\"\n\n\"Gay guys,\" Liz rolled her eyes. They all pretended they didn't notice how gorgeous she was but she knew she could have anyone of them, they were just men after all and she hadn't met one yet she could get to do her bidding. She laughed to herself; those two already had done her bidding earlier when they had saved Matilda. Feeling better that the world had been made right again, she turned back to her companions and the elaborate story she had concocted as to why the guy she had invited had stood her up.\n\nAdam was doing his best to avoid Maddy and her new boyfriend. He caught up with friends he hadn't seen for a while during his self-imposed exile from the group. The group had been hanging out together since high school almost and he admitted it was time to branch out and find some new friends to add to the mix. He was standing with a group of guys he used to run track with when Maddy finally tracked him down.\n\n\"Hey there stranger,\" she leaned in to kiss his cheek and he smiled.\n\n\"Hey yourself. You're looking good,\" he said with sincerity and a small hint of regret.\n\n\"You too,\" she inspected him. \"Fireman suits you, always rushing off to help damsels in distress. I heard about your adventure on the way to the party,\" she said trying not to smile.\n\n\"Oh God,\" he groaned. \n\n\"You were always the hero type; I was expecting a super hero costume though. What happened to your obsession with the Avengers?\" she teased. ",
        "\"Alter ego,\" Ken said coming to his rescue again. \"All the best superheroes have them.\" He hugged Maddy tightly. \"Great to see you gorgeous, now come tell me what has been happening in your life girlfriend, I have missed you.\" He led her off to another part of the house and Adam watched them go. He knew he was better off without the worry and the lies, but he missed her and what they had had together.\n\nHe grabbed a beer and went out to the back yard to catch up with another old friend. The party wound on and, not able to get into the swing of things with this crowd which was always more of Maddy's friends than his, he went to sit on a comfortable looking couch in a corner of the large deck and watch the party from there as he drank his beer. It was always fun to see the costumes people picked to wear and how it told a little bit about their personality. He found it amusing to guess the ones that had been bullied into questionable costume choices by their wives and girlfriends. Once again he silently thanked Ken for his understated manly looking costume. \n\nFor a long time Adam sat alone within a crowd of people at the party, still stinging from the bark scratches and the blow to his pride that he had incurred earlier that evening when a strangely familiar voice said his name.\n\n\"Adam isn't it?\" Liz said as she hovered above him.\n\n\"Could this night get any worse?\" he thought to himself and he recognised the young woman from earlier. Out loud he said, \"Yeah and your Liz, right? Look sorry about earlier I just wasn't thinking.\"\n\n\"Did your date stand you up too?\" she asked in a sulky voice. \n\n\"Nope, she's over there having fun,\" he chuckled, pointing at his brother who was talking to a small group of men, thinking she would get the joke but instead she seemed to tilt her head and eye him speculatively. \n\n\"I just realised I hadn't thanked you for helping Matilda today,\" Liz grinned. She had no doubt about her own powers of seduction and, while she wouldn't sleep with just anyone, she decided it was time to show this gay man how good sex with a real woman could be. She was stinging with the rejection of being stood up for the first time in her life and needed to prove she was still as sexy and desirable as she had always been. What better way than to get this guy to change teams.\n\n\"No need, like I said I was just trying, unsuccessfully I might add, to help after almost running her over,\" Adam waved his hand as if to brush away the thanks.\n\n\"Oh but I have the perfect reward for you. Come with me... it won't take long I promise,\" she was confident in her own abilities and, being that he was certainly a novice at the ways of women, she didn't think it take longer than a few minutes for this guy to blow his bolt.\n\n\"It's really not necessary,\" he tried to prevaricate. The few beers he had imbibed on an empty stomach and his wounded ego made him less inclined to fight the tugging on his arm and creating a scene, so he followed her. She led him to a bedroom and before he could think to protest, she pushed him down onto the bed and straddled his thighs. Leaning over and brushing against him sinuously, she kissed him with a hot wet open mouth, her tongue exploring his surprised response.\n\n\"God,\" he thought. It had been so long since he had been kissed like that and he gave way to what was happening with no further resistance. In his semi-drunk state, he decided that if she wanted to give him a thank you fuck, who was he to turn it down. One night stands weren't his thing as a rule but this chick was like a succubus and he was rapidly becoming her willing accomplice in his own demise.\n\nHe touched her gently on her sides, slowly lifting her shirt, over her stomach, over her breasts, over her head. He threw it across the room. Then he reached back with one hand and undid her bra, taking it off as well to follow her shirt. He reached up and cupped both breasts, lightly teasing her nipples. She started to squirm. He tore his mouth away from hers, and took one nipple into his mouth, sucking on it. \n\n\"Oh yeah,\" Liz murmured, enjoying the feel of his hand and mouth. Even the gay guys couldn't resist her. She enjoyed a few minutes of this attention and then she began to tug at his shirt to pull it off. She was hot and horny and feeling aggressive after being stood up by her boyfriend. She finally got him to sit up and pulled the shirt off over his head, pressing against him to feel the warmth of skin on skin only to find that his arms locked around her and he rolled her to her back, pinning her there and kissing her deeply with that hot wet mouth of his. \"Fuck this guy knew how to kiss,\" she thought and considered if all gay guys kissed like that.\n\nShe brought up both of her hands and placed them on his smooth chest, stroking over to his shoulders, down his arms, to his waist. Then she reached down and undid his belt, his jeans button, his zipper. She reached her hand into his pants to stroke the rapidly swelling hot shaft of his cock. She stretched her hands back to his ass and started to push his jeans down. He sensed what she needed, stood up. He took the rest of his clothes off, slowly while she rapidly kicked off her skinny jeans and let them fall in a heap beside the bed.\n\nShe sat up and looked at him. Lord he was beautiful. He was tall and lean, but everything was in proportion. Why did all the gorgeous guys have to be gay, she lamented but smiled as her eyes took in his cock. She need that cock tonight and she was more than pleased to see his answering smile as her eyes travelled back up to his face.\n\n\"So why did you bring me back here? Something about a reward for services rendered?\" He smirked, the alcohol giving him more confidence than he usually possessed. \n\n\"I needed to thank you properly and perhaps show you what sex with a real woman is like,\" she said boldly, feeling her sexual aggression return and make her hot for him in a way she hadn't counted on. Maybe it was because she knew his boyfriend was out at the party probably looking for him while she was converting him to pussy worship in here. The whole idea of it thrilled her and fed her already overblown ego.\n\nShe licked her lips, got up and walked over to him. She kissed him full on the mouth, teasing him with her tongue. She reached down and lightly touched the tip of his dick with her fingers, then wrapping her hand around him; she started to stroke him from base to tip. She slowly lowered to her knees, kissing her way down his body, nipping with her teeth. When she finally got to her knees, she looked at the object of her fascination. He was larger than any guy she had ever been with, but not too large. \n\nShe looked up at him, saw he was waiting anxiously for what she was going to do. She kissed the tip, and then ran her tongue along the underside of his cock; starting by his balls and ending at the very tip, where she swirled her tongue around it before finally taking him in her mouth. She started slow, letting the anticipation build. She took as much as she could, slowly released him, and started over again. She really enjoyed sucking cock, and it showed. Her enthusiasm for it was starting to mount. Her pace quickened, her grip tightened; then suddenly she reached her right hand and cupped his balls, gently tickling. She pressed her thumb to the sensitive spot underneath his balls that she knew would drive him crazy. As her head bobbed up and down she stroked this spot in time with her movements until he finally couldn't take anymore. \n\nHe pulled her to her feet. \"Your turn now,\" Adam growled. He pushed her up against the wall. He leaned down and took one nipple in his mouth, sucking strongly, while his other hand was pinching the other. Then he switched the attention. Suddenly he dropped to his knees, pulled her legs apart, shoved one leg over his shoulder, and kissed her pussy. He licked from the back to the front. She trembled in pleasure and thought her legs were going to give out on her. He grabbed her by the ass to hold her still and buried his face deep in her pussy. He licked, he bit, he sucked and finally he shoved two fingers into her dripping pussy. Clamping his lips around her clit, and sucking hard he was rewarded when her orgasm hit hard, slamming her back into the wall for balance. She came for what seemed an age. She had never experienced anything like it before. She fell to the floor. Her legs just couldn't hold her anymore.\n\nHe lifted her up and laid her on the bed. He came down over her and kissed her. \"How do you like the way you taste?\" \n\n\"I love it,\" she whispered in a shaky voice.\n\n\"Hang on.\" He went to his jeans, thankful for the ever present condom his brother perpetually forced on him when they went out, then came right back. He hovered over her, lifted her hips, and then slowly entered her.\n\nHer eyes closed of their own free will. She wrapped her arms around his back, her legs around his hips and held on. \n\nHe started slowly, pulling all the way out, then all the way in. After a few minutes he increased his speed. Her hands stroked up and down his back. She just held on for the ride. \"Fuck he missed sex since he had split up with Maddy,\" he thought as he savoured the feel of the beautiful woman beneath him. Then without ever leaving her, he rolled her to the top and moaned loudly as she sank down, taking all of him into her. \n\nShe sat there for a second savouring the feel of the new position, and how deep he was, then she started to move slowly up and down his hard cock. She stayed down and ground her pelvis into his, which sent him even deeper into her. He met her every thrust. She reached down and rubbed her clit, riding him faster and faster as her second orgasm approached. She exploded. She couldn't even keep her pace anymore, so he lifted her and pounded her from the bottom. She cried out with her pleasure and she soaked his cock with cum.\n\nShe fell over to the side and looked at him through her lashes. \"That was fantastic.\"\n\n\"Oh, I haven't even come yet, sweetheart. This isn't over.\" He moved to grab her again and rolled her onto her stomach, lifted her hips into the air, and he entered her from behind. She whimpered from the pleasure. She didn't think she could take too much more of this. Then he pulled out, stuck his middle finger into her, then re-entered her. \n\nBefore she knew what was happening, he was teasing her asshole with his finger. He started to push a little. Realizing she wasn't protesting, he shoved his middle finger, wet with her own cum, deep into her, the whole time pounding away from the back. It took a minute, because she wanted to savour the feeling of having a finger in her ass, something she had never let anyone do to her before. She came for a third time from the sheer nastiness of this hot fuck. \n\nThe feel of her climax finally sent him over the edge. He shoved into her, grunting with his release. He held her tightly until he was finally sated, then let her collapse with exhaustion to the bed, falling down beside her and rolling to look at her. The tussled hair and ruined makeup was a far cry from the glamorous girl who had entered the room and he was quite proud that he had caused that look to occur. She was still beautiful but in a whole different way. \n\n\"My turn to say thank you?\" he said, a sly grin curling the corners of his mouth. \n\nShe didn't even have the strength to answer him. She just nodded her head and closed her eyes, and lifted her finger as if to say \"Give me a minute,\" and he gave a soft chuckle, rolling onto his back and looking up at the ceiling. A minute later he sat up and began to pull his jeans back on.\n\n\"Better get back out there before Ken comes looking for me,\" Adam said, hating himself for leaving her here alone. She'd done him a favour, he had been wallowing in his own self-imposed exile since Maddy left but he knew now he needed someone in his life, not just for sex but it would be a start. He looked at the blonde speculatively. \"Would you like me to call you, maybe?\"\n\n\"Oh no baby,\" she said in a pitying tone. \"This was a once off thing, to show you what you were missing.\" Still under the illusion that he was gay, she felt that she had done him a great service by having sex with him. It hadn't gone exactly as she planned; she certainly wasn't regretting the encounter. She just knew that no matter good they were in bed, sleeping with a gay guy was a one-time thing, just to prove she could get any guy she wanted.\n\n\"Great,\" he said, standing and pulling on his shirt. He was unsure if that was a good or a bad thing, but reassured himself that this chick already seemed like she would be too much hard work from the little he had seen of her today. Stuffing his socks in his pocket and slipping his shoes on, he turned to her a last time and said, \"Well thanks again,\" feeling awkward.\n\n\"Just remember... girls are fun too, not all of them are as hot as me but they can be fun\" she said with a smile and absolute sincerity. \"Now run along and find your sexy nurse, I won't tell him if you don't.\" She winked and bent to retrieve her own clothes.\n\n\"Wait! What?\" Adam stopped in the process of opening the door. Then his off-hand remark where he pointed out Ken as his date came back to mind and he laughed. He had been an ego fuck for the stuck-up bitch. He had seen models throw themselves at Ken just to prove they could get any guy they wanted, gay or not. Had he not just had great sex it could have been the final humiliation to top off an already dreadful day, but he shrugged it off as he left the room.\n\nThinking he had just dodged a bullet when she turned down giving him her number, he smiled to himself. He couldn't be mad about it. It had been great sex and had reminded him that it could be even better with someone he cared about. He consoled himself with the thought that she wouldn't be forgetting him for a while.\n\nHe grabbed a fresh beer and went to find Ken, feeling better than he had in a while and considering the other young woman at the accident today. He had her details maybe he could give her a call, remembering her smile her name came to mind, \"Rachel,\" he said out loud. She had already seen him humiliate himself, so what did he have to lose.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "halloween",
        "costume",
        "fireman",
        "sexy nurse",
        "crossdressing",
        "brothers",
        "accident",
        "hero"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/accidental-adam"
}