{
    "title": "Ambiramus Ch. 04",
    "pages": [
        "Cindy had been quiet since I'd arrived to pick her up. Holding my hand tightly as I drove us to pick up my daughter, Natalie, I glanced at her more than once when I had the chance. She was chewing her bottom lip, and I felt her almost shaking. I eventually pulled over two minutes from my old house. Switching off the engine, I turned towards her. \"We don't have to say anything, sweetheart,\" I said.\n\n\"I'm just worried about how she'll react, her husband dating a transwoman...\"\n\n\"A woman.\"\n\nShe smiled at me ever so sweetly. \"Mark, I love the fact you always say that. But not everyone is so open-minded about it. People still lose their shit over which bathroom I should use. I don't know your ex-wife. You know her, but what do you think she'll say?\"\n\n\"I honestly don't know. She'll be surprised. Anything other than that...\"\n\n\"She was good about Mike and Chris?\"\n\n\"Of course, they're my best friends. They liked her in return, until she did the dirty on me.\" I took both her hands in mine. \"In the end, it's about the kids, helping them understand that their father is dating a woman, but she has one minor difference to their mother. We explain it simply and leave it at that.\" Turning back to grab the steering wheel, I added, \"Natalie adores you anyway. You've spoken to her on the phone every night I was at yours this week.\"\n\nI held her hand the rest of the way. Soon as I parked up, I ran around to open her door, earning a smile and kiss on the cheek as always. Taking her hand, feeling her fingers slide between mine, I knocked on the door. Megan opened it within a few seconds, polite enough to invite us in. Glancing at Cindy once we were standing in the living room, I looked at my ex-wife. \"We need to have a quick chat, Megan.\"\n\nMegan and I rarely had quick chats about anything. We managed to talk about the kids calmly. Anything else? I'll admit, I had a short fuse with her nowadays. \"What about the kids?\"\n\n\"It's something the adults need to discuss first.\"\n\n\"Take a seat in the dining room. Would you like a coffee?\"\n\n\"I'd love one,\" Cindy replied. I nodded I'd like one too. After asking how she liked it, and remembering how I liked mine, we followed her into the joint kitchen and dining room.\n\nMegan made coffee, glancing at Cindy and I occasionally, but she remained silent, bringing over a mug each for Cindy and I before sitting opposite us. \"You okay?\" I asked. I shouldn't have really cared, but she looked... sad. I was left thinking my ex-wife was regretting some choices made previously. Probably didn't help that I was looking happy with life, and had a beautiful woman on my arm, looking at me with devotion and love in her eyes.\n\n\"I'm fine,\" she replied bluntly. Then she took a deep breath. \"Work is a pain as always. Don't worry about it.\" She managed a tight grin, taking a sip of her coffee before asking, \"What do we need to talk about?\"\n\nCindy squeezed my hand. \"Cindy and I have been dating for a month now,\" I replied, \"I obviously have the kids, well, only Natalie now, every second weekend. And there is something she might see that will lead to questions. Rather than you finding out second-hand through her, the fact Cindy and I are already quite serious...\"\n\n\"You are?\" Megan asked, hearing the surprise in her voice.\n\n\"Once my tenancy agreement with my apartment expires, I'm moving in with Cindy.\"\n\n\"Oh...\" She tried her best not to sound nor look upset by the news. I knew my ex-wife well...\n\n\"Anyway, Cindy and I are already rather serious with each other. But there is something about Cindy that Natalie might discover by accident. Cindy mentioned that talking to you first might be best, then Cindy and I will sit down with Greg and Natalie and explain the situation.\"\n\nMegan's brow furrowed, no doubt wondering what the hell I was going to say. Cindy squeezed my hand, taking a deep breath. \"Megan, you don't know me at all as much as I don't know you. But Mark has suggested you are an open-minded woman. Therefore, I feel safe enough to tell you that I'm trans. I'm a transwoman, though Mark always insists I'm a woman. Being a transwoman, I still have... extras...\"\n\nMegan blinked at us in silence, her jaw dropped slightly. She looked from Cindy to me. \"Oh... Well, I didn't expect that. So you still have a, um, penis?\"\n\n\"I do,\" Cindy replied, glancing to see her smiling.\n\n\"Um... okay...\" She looked at me again. \"Well, I certainly never thought...\"\n\n\"This is why we're telling you now, Megan,\" I said, \"Natalie might walk in on her using the bathroom or if she's showering, or she might even walk into our bedroom and see something she might not quite understand. And then she might come home and tell you. So I thought it best telling you first, then explaining to the kids. They're old enough to understand.\"\n\nShe looked at me. \"Does that mean you...\" She stopped and shook her head. \"No. No. I don't need nor want to know. What you do is your business.\" Then she managed another slight grin. \"Thank you for telling me. I don't know really know much about the issues, but I don't see why it would be a problem? Mark is free to date who he wants. And I agree that the kids are old enough to understand, to a point.\"\n\nI couldn't help smile. \"Thank you, Megan.\"\n\n\"Thank you for still having the confidence in me to share something like that.\"\n\n\"We'll tell Natalie when we get home, and I'll talk with Greg on Sunday. Guess he's with friends?\"\n\n\"If you want, I can talk to him... if we can talk without having an argument...\"\n\n\"Sunday is fine, Megan. Don't worry about it.\"\n\nFinishing our coffees, Natalie was waiting patiently in her room, running and leaping onto me as soon as I appeared in the doorway. I knew there was going to come a time when she would stop wanting to visit me every second weekend as well, so I was going to appreciate it every time until then. Taking her hand and her bag, Cindy and Megan had moved to the living room. Cindy took Natalie by the hand, leading her out to the car. Standing outside the front door, I turned back to Megan.\n\n\"Thanks...\" I said, not sure what else to say.\n\n\"Mark?\" I met her eyes. \"I'm glad you've found someone.\" Before Cindy, I'd have scoffed at that. But she'd already helped smooth some of the edges off me, helped ease the bitter feelings that had left me wounded. What she said next left me speechless. \"I'm sorry. It was my fault.\"\n\nTaking a deep breath, I probably surprised her in return by shaking my head. \"No, it wasn't entirely just yours. You had the affair, but we both fucked it up. We were unhappy. We could have done something about it. But we just drifted apart. You had an affair, but... I have to take responsibility in the sense that I almost pushed you into thinking about it.\"\n\nShe looked down and, for the first time in perhaps two years, I stepped forward and hugged her. \"I'll talk with Greg when he gets home or tomorrow,\" she said, \"He needs to spend time with his father.\"\n\n\"Okay. Just don't push him. I know it's not easy for either of you.\"\n\nI actually felt her laugh. \"Jesus, she has calmed you down, hasn't she?\"\n\n\"I love her, Megan. I'm in love with her.\"\n\nShe sighed as I let her go, taking an awkward step back as she met my eyes again. \"I never hated you, Mark, even when our marriage hit the skids. I know you hated me for what I did, and I don't blame you. But...\"\n\n\"Give it some more time, Megan. Maybe, one day, with the passage of time, we might find common ground again. Whatever the case, you'll always be the mother of our children. That means something.\"\n\nI hadn't seen her smile at me in a long time. \"Go on, get out of here. One last thing, though. She's beautiful, Mark. Bloody cradle snatcher.\"\n\nI laughed as I wished her goodnight and wandered back to the car. Natalie was in the back seat, Cindy leaning over to kiss me as soon as I sat down. Stopping for take away before driving us to her place, Natalie was curious where we were, letting her know we'd be staying with Cindy. That excited my daughter as we headed to her apartment.\n\nCindy's apartment is definitely 'girly'. We showed Natalie where everything was, including where she'd be sleeping. Sitting at the kitchen table for dinner, Natalie talked at length about her week, what she was doing at school, what she did with her friends, what she watched on TV. Frankly, it was exhausting, but she had Cindy and I sharing glances and chuckling away.\n\nDinner finished, I cleared up as Cindy took Natalie into the living room. I joined them a few minutes later, taking Natalie onto my lap, sitting her sideways so she could see Cindy. We had agreed before picking her up that getting it out of the way quickly would be for the best, giving her time to digest what she was told. We'd just keep it very simple.\n\nCindy learned that my daughter is intelligent, which I already knew, understanding, which I already knew, but that she liked Cindy more than either of us realised. We kept it very simple but my daughter understood what we were trying to tell her. I don't think they were taught those sort of issues at that age, but she grasped enough. Natalie slid over onto her lap and hugged her tightly. Cindy met my eyes, hers wet with unshed tears. \"I think you're very pretty, Cindy. I'm glad you make daddy so happy.\" She leaned back and smiled. \"Do you love my daddy?\"\n\n\"I love him very much.\"\n\n\"Will you be my mummy too one day?\"\n\nThat made Cindy nearly break down, hugging my daughter tightly. \"I'd love to be your other mummy,\" she whispered.\n\nAfter putting Natalie to bed a couple of hours later, insisting she received a hug from Cindy then myself, she was waiting for me in the hallway as I pulled the door closed. She met my eyes and almost collapsed into my arms. \"That daughter of yours is amazing,\" she finally managed to say.\n\nI couldn't help but agree. It was still early, so after grabbing a drink each, we returned to the living room, Cindy snuggling into me as always, not bothering to turn on the TV, chatting way about our week, future plans, and just the general conversation that passes between couples. We were still learning about each other. She knew I was still curious about her, but I'd suggested that I would ask more when I met her family next weekend. She thought that was a good idea, as her mother and sister could certainly share their own experiences.\n\nStraddling my lap a little later, her t-shirt ended up on the floor along with her skirt, leaving her in just her underwear, her cock poking out of the top of her red panties. Her lips barely left mine as she shuffled enough to undo the button of my jeans, lowering the zip to fish out my cock. That's when I suggested that we just head to the bedroom.\n\nTo my amusement, she had me naked first as I just loved her in lingerie. \"Want me to pose for you?\" she asked, \"Use my phone and I'll send you the photos.\"\n\n\"Seriously?\"\n\n\"You make me feel so sexy every fucking day, Mark. I'd love to.\"\n\nFor half an hour, I must have taken over a hundred photos of her, the posing ending with Cindy stroking her cock on the bed, a dildo in her arse at the same time. She didn't cum, wanting to cum in my mouth. By the time she was finished posing for me, I was dying for release. As soon as I was on my back, she turned around and offered her cock. Soon as her lips were wrapped around mine, I groaned and knew I wasn't going to last long at all. She was quickly thrusting into my mouth, though she stopped blowing me when she realised her cock was going all the way into my throat.\n\n\"Baby... that's so hot...\"\n\n\"Shoot straight into my stomach, sweetheart.\"\n\nGrabbing her arse, she didn't fuck my throat but it was probably the hardest she had thrust into my mouth. Within two minutes, I felt her cock throb and the first spurt missed everything my mouth, pulling back just enough so I could taste and swallow the rest of her cum. That just made her more determined to suck my cock to completion. No teasing, doing everything she could to make me cum quickly. I groaned so loudly, I worried about waking my daughter next door, Cindy using her groin to cover my face, making both of us laugh.\n\nSpinning around so she was resting above me, she kissed me deeply, her tongue exploring my mouth as usual, running my fingers through her brunette hair. Her cock was still semi-hard, feeling her press it against me. I couldn't help grin as I could figure out what was on her mind. \"You want to fuck me, sweetheart?\" I whispered.\n\n\"God yes. I've been thinking about it the past couple of days.\"\n\n\"Cindy... I'll never say no if you want to.\"\n\n\"Really?\" she asked, her face lighting up.\n\n\"Of course. I love making love with you. I know how much you love fucking me, and trust me, I'm going to grow to love it. Our first time was fantastic. The time after that was even better.\"\n\nShe leaned forward to grab the lube that was now always on her bedside table. Actually, there were tubes to either side of the bed. Lubing me up first, she then lubed her cock as I turned around onto my knees and forearms. She giggled as she knew what I was after. Caressing my cheeks, I felt her press the head of her cock against me. \"Want my cock, baby?\"\n\n\"Fuck yes,\" I moaned. My cock was already rock hard again in anticipation.\n\nShe pressed my lower back with a hand to lower my arse a little more before she gently slid the head of her cock inside me. That earned another moan, stopping and giving me time, before she started to slide more in. Once she was inside me entirely, she grabbed my hips and wasted no time starting to thrust. Fucking hell, the feeling was almost indescribable at times. I could almost feel every ridge and bump of her cock with every thrust. One hand remained at my hips as she caressed my back with her other.\n\n\"Fuck me, sweetheart,\" I groaned.\n\nShe started to pump into me even faster. I could pre-cum leaking from my cock as I lowered my upper half, turning my head so I could watch her. She looked marvellous as she fucked me. \"I do love fucking your arse, Mark.\"\n\n\"Keep going. As long as you can!\"\n\nLeaning forward, a hand to either side, she really started to drive her cock into me, and that's when I felt the angle have her cock pressing into my prostate. I'll be honest, she had me making noises that I'd only heard a woman make. I mean the sort of whimpering that had me begging for release. Feeling her kiss my neck, she breathed against my ear. \"Going to make you cum with my cock buried in your arse,\" she whispered, biting my earlobe.\n\nI loved fucking Cindy, but those times when she fucked me, she really got into it. Faster and faster she pumped her cock into me. I had to bite a pillow to stop all the noise I was making. And then I felt my cock just erupt, groaning into the pillow as I just covered her blanket in my seed. I felt better for it, relaxing as she pushed my arse flat on the bed and proceeded to fuck me harder than ever.\n\n\"Fucking... love... you,\" she cried softly before I felt her cock erupt inside me. I'm fairly sure she fired six full spurts of her delicious cum before she just collapsed on my back, feeling her breasts pressing into me. Within a few seconds, I felt drops on my upper back, turning to see her searching for my eyes. She quickly pulled out and cuddled into me, now taking on the role as her lover and protector, holding her in my arms as she buried her head into my chest. \"Sorry,\" she murmured, \"That was... intense...\"\n\n\"Wonderful,\" I whispered, \"Fantastic. Loved every second.\" She lifted her head, her bottom lip still trembling. Caressing her cheek, running fingers through her hair, she had turned from a seductress into an innocent woman, needing nothing more than to feel loved in those moments.\n\n\"When you're ready...\" She took a deep breath, \"When you're ready...\"\n\nRolling onto her back, I kissed her and waited until I was ready to make love to her. Didn't take long to prepare either of us, slowly sliding my cock inside her. She barely wanted me to move, just wanting to feel me inside her again. We did eventually make love, but compared to what we'd done earlier, it was very slow and gentle. I don't think either of us actually cared about another orgasm, though after go knows how long, I did feel the urge to cum. As always, she wanted me to finish inside her.\n\nAfter a shower, she fell asleep in my arms, same as she did nearly every night we were together. I lay there wide awake for a few more minutes, wondering if I shouldn't just move in already, but even though we were in love, that seemed like a step taken too quick.\n\nI woke up alone, smiling to myself as I knew Cindy was already up making breakfast for my daughter and I. She really was a little homemaker. Felt a little guilty about that. If we had a house, I'd certainly be outside mowing lawns, tending the garden, and doing other 'manly' things I'd done while married. I did look around her house for things to possibly fix, but I was left thinking Cindy was more than capable of holding a screwdriver and hammer.\n\nNatalie was already awake, the pair making pancakes together. I watched them in silence together for a few minutes, listening to them chatter and laugh. Honestly, if my heart swelled any further, it was going to burst out of my chest. Cindy eventually turned, noticing me. \"Hello, handsome.\"\n\n\"Daddy, we're making pancakes!\"\n\nKissing the most important women in my life on the cheek, I took a seat at the table as they finished up preparing breakfast. A pile of pancakes was soon in the middle of us, with all the condiments one might want with a pancake or two. My daughter was very excited to be having pancakes for breakfast, her enthusiasm proving rather infectious on Cindy and I at the same time.\n\nThe plan for Saturday was to take Natalie to see a movie. The sort my daughter loved, and I knew she'd packed a dress specifically for the movie. We'd go for lunch first before we walked to the cinema, so I asked her to go and get ready, Cindy suggesting she'd help her and get changed herself. I waited in the living room,\n\nNatalie was the first to appear, wearing a light blue dress and tiara. \"I'm a princess, daddy!\" she exclaimed excitedly. She was just so damned adorable, I had to give her a hug, picking her up and twirling her around, her giggles echoing around the otherwise silent room.\n\n\"Is there room for another one?\"\n\nCindy appeared out of her bedroom... I nearly had a heart attack. She blushed as she walked towards me, my daughter cuddling into my side. \"She's so pretty, isn't she, daddy?\"\n\nShe was wearing a red number that accentuated her curves, her face, her entire body. I'd never seen something so beautiful in my life. \"Wow,\" I finally managed to whisper.\n\n\"When you mentioned taking Natalie to the movies today, I looked for a costume to wear with her.\"\n\n\"Let me take a couple of photos of you together.\"\n\nThe pair were happy to pose for me, though after a couple of minutes, I had to turn around and gather myself, feeling foolish when I had to wipe my cheeks. Cindy turned me around, cuddling into my chest, my daughter doing the same thing next to her. \"I think your father approves, Natalie,\" Cindy said.\n\n\"I'll send one to Megan. I'm sure she'll love it.\"\n\nI sent one of Cindy and Megan cuddled up and smiling at me. I wasn't sure how Megan would react, but within minute, she sent a reply.\n\n'Our daughter and your girlfriend look beautiful, Mark. Thank you. Have a fun day.'\n\n'I wasn't sure if I should send it. Glad you appreciate the thought.'\n\n'She's part of your life, and also our daughter's life. I'm happy to see them bonding, Mark. Make sure she comes around again soon. I'd like to get to know her.'\n\n'You would?'\n\n'Of course. As you said, we'll always have our connection due to our children. And Cindy will be part of my life, one way or another.'\n\nI showed Cindy the messages. She smiled and kissed my cheek. \"Maybe this will help thaw things out between you two further?\"",
        "\"I hope so... Would be even better for the kids.\"\n\nCindy and Natalie had a fantastic day together. I just loved the fact they seemed to be bonding so well. It actually caused me a moment of panic more than once, just in case... things went wrong. We had lunch in the food court of the mall, nothing more than something deep fried and fattening. Then it was off to the cinemas. They were ever so excited to be going to see the film. I received more than one sympathetic glance from other men being dragged along, though to be honest, I'd do anything for my daughter. A ninety-minute princess film was something I could endure if it made her happy.\n\nAfter a post-film ice cream, I drove us home where Natalie wanted to watch another movie. We were happy to let her watch that as I sat back, enjoying a beer, Cindy a glass of wine as we cuddled on the couch. Natalie would look back every so often and giggle before returning her attention to the screen. I'd done my best not to be miserable in front of her after the separation, but kids are more attuned than people realised. She knew her father wasn't happy for a long time.\n\nCindy cooked dinner, though Natalie and I helped out where we could, little surprise that Natalie had tuckered herself out so she fell asleep rather early on the couch. I easily carried her to her room, waking up just enough to ask for cuddles from us too. \"I love you, Cindy,\" she whispered before she hugged me, \"Love you too, Daddy.\"\n\nI found Cindy in the hallway, almost on her knees, hugging her tightly as she sobbed. Stroking the back of her head, I whispered, \"Well, she's not the only Pritchard to love you, Miss Williams.\"\n\n\"I love her already too. She's just too adorable. Going to break a million hearts when she's older.\"\n\n\"Let her know tomorrow when we drop her off. Hug her, tell her. Children need all the love they can get. If you love her, let her know.\"\n\nShe met my eyes. \"Maybe one day, in the future, I could be her... step-mother?\"\n\n\"Thinking that far in the future, are you?\"\n\n\"You're not?\"\n\n\"Got me. I do far too much thinking as it is.\"\n\n\"About me? About us?\"\n\n\"This has all happened so fast, it does scare me sometimes. But it's also felt right, from that moment we talked in the caf\u00e9 and made the first tentative steps. I knew then you were someone I wanted to know more and more...\"\n\n\"I'm scared sometimes too, but the overriding feeling is that I just want more and more of this feeling. Of being with you.\"\n\nApart from a lot of making out later in bed, we spent the rest of the time cuddling. Sure, we were both hard but neither of us felt the urge to make love or fuck. I just pulled her as close to me as possible and caressed her body, fingers running from the back of her neck down her back, over her arse, her thigh, then back up. Her eyes gazed into mine the entire time. There was an intensity that made me gulp more than once. Fairly sure I looked back at her the same way though.\n\nReturning Natalie home mid-afternoon the next day, Cindy stopped Natalie on the path leading to the front door. Getting down to a knee, she took my daughter in her arms and whispered something into her ear. Natalie cried. Cindy cried. I looked away, needing to wipe my cheeks. Megan opened the door and seemed to see what was going. Walking towards her, she smiled, resting her hand on my forearm. \"Stay for coffee?\" she wondered.\n\n\"Yeah. That'll be good. Greg home?\" She nodded. Turning back, Cindy was leading Natalie towards the house, following Megan and I into the kitchen. Taking a seat at the dining table, Natalie immediately started to fill in her mother with what we'd been up to. Hearing his sister, Greg appeared from his room, taking a seat next to his mother once she returned with drinks for all of us.\n\nTaking Cindy's hand in mine, we told Greg what we'd already told his mother and sister. He was surprised, which we expected. But he made me grin when he just shrugged. \"You're happy, Dad. I don't care who you date. We're taught all this stuff anyway. Probably know more than you about all this sexuality and gender stuff.\"\n\nI glanced at Cindy. \"He's probably not wrong there,\" I admitted, chuckling to myself.\n\n\"What do you think, Mum?\" Greg wondered. I gave him a look as he was clearly looking for an argument. To my relief, Megan smiled at him.\n\n\"Your father is happy. We both made mistakes, Greg. I made the worst one by doing what I did. What matters most is that your father and I love you two, and our focus is on ensuring you turn into good little human beings, those we can be proud. Cindy is now part of your father's life, will be part of yours, will even be part of mine in a way. I just want an end to the awkwardness.\"\n\nCindy leaned across the table and took her hand. Megan's grin broadened. \"That's all we want too. I'm not a replacement, just an addition.\"\n\nMegan looked at me. \"You've got yourself one hell of a woman here, Mark.\"\n\n\"Trust me, I know.\"\n\nShe looked between us for a moment. \"Would you like to stay for dinner?\"\n\nCindy and I shared one single glance before I replied, \"We'd love to.\"\n\nIt was the first time Megan and I were capable of staying in the same room for longer than thirty minutes without it dissolving into bitter arguments about everything that happened. Natalie was delighted. Greg didn't retreat to his bedroom, remaining with us until Cindy and I had to go. Greg wanted a hug from his father. Natalie hugged us both for a long time before heading to bed. As I walked out, Megan took Cindy by the hand, asking for a quiet word.\n\nLeaning back against my car, I noticed the two have a short conversation, surprised it ended with the pair sharing a hug. Watching Cindy walk towards me, Megan waved goodbye before shutting the door. Standing before me, Cindy stood on her tiptoes and kissed me. \"I'm getting a glimpse of why you did love her, Mark.\"\n\n\"Really?\"\n\n\"She just told me something. That I'm to look after you for her. She fucked up. Her words. She knows she hurt you, and now she can see how happy you are again. So she warned you not to fuck it up too.\"\n\n\"I'm glad you're getting along.\"\n\n\"We all make mistakes in life, Mark. The only thing she asks that, one day in the future, that you find in your heart to forgive her?\"\n\nI felt my brow furrow. \"That's... difficult, Cindy. I know I wasn't a perfect husband...\"\n\n\"You don't feel hate in your heart any longer?\"\n\n\"No. I was bitter, not hateful. I felt like I lost everything. In a way, I did. My wife. My kids. My home. I ended up in a small apartment with nothing.\"\n\nShe caressed my cheek. \"You have me now, Mark. And I'm not letting you go.\"\n\nI smiled, leaning down to kiss her softly on the lips. \"Let's go home.\"\n\nI spent all week at her place, stopping at home to pack a bag so I didn't need to return to my apartment at all. She loved having my presence around the apartment. I was home before her the first three nights of the week, getting a start on preparing dinner, greeting her with a long hug and kiss, feeling her just melt into me each time. We made love every night, switching around who would make love to who. I loved going down on her. She really loved going down on me. I enjoyed having her fuck me. But while she did enjoy fucking me, there was no doubt she preferred me making love to her. We showered together every morning and evening, sometimes unable to resist the idea of fooling around.\n\nEach night, we chatted with Natalie together, while Cindy said she was swapping the occasional message with Megan. I'm sure many would have found that a little weird, but frankly, if my ex-wife and current girlfriend could build some sort of relationship, that would only make things easier going forward.\n\nAt work on Friday, Mike knocked on my office door, Chris following in his footsteps. Shutting the door, they took a seat opposite me, leaving me wondering what they wanted. \"Doing anything tomorrow night?\"\n\n\"No. Cindy and I are going to see her mother and sister on Sunday though.\"\n\n\"Want to join us on a night out tomorrow night?\"\n\n\"Long as it doesn't end with us getting in at 5am. Let me call her.\"\n\nShe answered rather quickly. \"Hey baby, I was just thinking of you. I've got an erection at my desk that is in desperate need of attention.\"\n\nI cleared my throat as Mike and Chris chuckled. \"Um, sweetheart, I've got you on speaker. Mike and Chris are here.\"\n\n\"Okay. I still have an erection I'd love to feel your lips around, baby. Maybe you'd like to give me a blowjob when I get home? I know how much you love swallowing my cum.\"\n\nMike and Chris had shit-eating grins on their faces. \"That's a nice thought, sweetheart, though I'm going to fuck you afterwards.\"\n\n\"You know I love your cock buried in my arse, baby. God, I might have to go jerk off in the bathroom now. Anyway, was there something you needed, or do I need to send you a selfie of my thick cock, aching for your mouth?\"\n\n\"Send the selfie, but Mike has asked if we'd like to join him out tomorrow night? Warned them about seeing your family on Sunday, but it would be nice to go out for a few drinks.\"\n\n\"I'm assuming it'll be the same sort of places where we met?\"\n\nMike nodded at my glance. \"That's right, sweetheart. Mike and Chris will no doubt be out on the pull like usual.\"\n\n\"He knows us well, Chris,\" Mike muttered.\n\n\"Our weekends are usually the same,\" Chris retorted.\n\n\"Sounds like fun, baby. Just let me know the details when I get home. Now, I'm going to head to the bathroom to jerk off. Want a video, baby?\"\n\n\"God yes. Actually, these two can fuck off. Video call me while you're doing it, gorgeous.\"\n\nMike and Chris left. I locked the door, placed my phone on the desk, and had a free show as Cindy jerked herself off for me. She undid her blouse and came all over her chest, scooping it all up and putting it in her mouth, continuing to stroke her cock for me until she simply had to get back to work. Turning so I could see her face, she blew me a kiss. \"I love you so much, baby.\"\n\n\"Love you too, sweetheart. I'll see you at home.\"\n\nSoon as she shut the door upon getting home, I found myself pushed against the counter as she dropped to her knees and had my cock out within a matter of seconds. I was then given what could only be described as a spectacular blowjob. What I didn't expect was for her to take my entire load on her face. She was usually content swallowing what I gave her, but my baby batter ended up everywhere.\n\nStanding up, she then turned to lean back against me, taking a selfie of us. \"I'm going to send that to my friends,\" she said, \"Oh shit, I haven't added you to the chat!\"\n\n\"I don't mind.\"\n\n\"Oh no, you need to be part of it, sweetheart. You'll love it. Lots of selfies and videos from me and my friends.\"\n\n\"You wouldn't mind?\"\n\n\"Of course not. My friends are gorgeous, but you're here with me. That's what matters.\" She glanced around and smiled. \"I was expecting take-out.\"\n\n\"I'm making stir-fry. It was something I managed to not fuck up when living alone.\"\n\nShe disappeared immediately for around five minutes, so I just carried on preparing dinner. She returned naked, and when she leaned against the kitchen counter, I noticed her arse already glistened with lube. Glancing back over her shoulder, she smiled. \"Fuck me, baby.\"\n\nDinner was put on hold for around half an hour as I absolutely nailed her. We ended up rutting on the floor, Cindy on her hands and knees as I pounded her from behind. It was perhaps the first time we really let go, a no holds barred fuck session. I grabbed her ponytail and pulled hard as I slammed into her. Little surprise she came all over the floor, barely touching her cock, and I filled her arse with cum barely a couple of minutes later.\n\n\"Lick up your cum,\" I demanded. Grabbing my phone, I filmed her doing just that, before she approached me, taking my still semi-hard cock in her mouth. Caressing her face, her eyes lit up as she eventually released my cock, putting my phone down as I pulled her close and kissed her. \"I fucking love you,\" I murmured.\n\n\"Move in,\" she whispered, \"Stay here permanently. Once your rental agreement ends, we'll figure things out there. Please move in with me.\"\n\n\"Okay.\" I paused before asking, \"It's not too fast?\"\n\n\"Who cares if it's too fast, too slow, too whatever. Do you love me?\"\n\n\"God yes.\"\n\n\"I feel the same way. Therefore, we should live together.\"\n\n\"I'll sort shit out during the next couple of weeks. I'll grab the important stuff tomorrow morning.\"\n\nFinishing dinner preparation, we sat on the couch naked as we ate. After cleaning up the kitchen, we returned to the living room, where she straddled my lap and ensured my cock was inside her once again. She was rather insatiable that evening, riding me in the living room until I came inside her again, then had me fuck her a third time once we'd gone to bed. I was exhausted by the time we drifted off to sleep.\n\nAfter breakfast the next morning, Cindy and I did three trips from her apartment to mine, packing all my clothes, anything personal I might need, then a third trip to collect anything that my daughter would want, taking it all back to hers. She made space in her wardrobes for my things, while the second bedroom was turned into a bedroom for my daughter for whenever she visited. We were finished by mid-afternoon, needing a shower as all the packing and lifting had left us both a little sweaty.\n\nMike called just as we stepped out of the shower, letting us know the taxi would be around to pick us up within the hour. To my amusement, Cindy stopped me just throwing on jeans and a shirt, looking through my clothes. \"I can dress myself,\" I muttered.\n\nShe walked towards me in just her bra and panties, resting her hands on my bare chest. \"Dress for me?\" she whispered, \"I want my man looking as handsome as ever. And put on that cologne I just love. The same you wore that first night we met.\"\n\nRunning my hands down her back, I cupped her arse. \"You're very convincing sometimes.\"\n\n\"I know you dress what you feel comfortable in, but...\"\n\n\"I understand, sweetheart. Maybe we'll go... shopping?\"\n\nShe squealed with delight. Then she kissed me. Ended up on her knees. I called Mike and let him know we might be a few minutes later as I took the phone away from my head and groaned, glancing down to see Cindy's head bobbing up and down on my cock. \"Still want to go out?\" She sat back for a moment before nodding.\n\n\"She's blowing you, isn't she?\"\n\n\"Uh, yeah.\"\n\n\"Fucking hell... Okay, we'll have the taxi circle the block a couple of times or something.\"\n\n\"Soon as I'm finished, we'll get dressed.\"\n\n\"You're not even...\" I heard the sigh, hearing Cindy snicker despite my cock being in her mouth. \"Okay, we'll delay it picking us up for half an hour.\"\n\n\"You're a champion.\"\n\nCindy leaned back. \"How about an hour, Mark?\"\n\n\"For crying... you two are just fucking me over now, aren't you?\" Cindy giggled. Even I couldn't help chuckle at his exasperation. \"Fine. You two owe me though.\"\n\n\"We'll get the first couple of rounds in,\" I said.\n\nJust over an hour later, Cindy was in a gorgeous dress, tight to every curve on her body, hem halfway down her thigh, wearing stocking and heels so she was only an inch or so shorter than me. Top of the dress was strapless, just a hint of cleavage. She verged on looking like a model, and I was the lucky bastard to have her on my arm. She'd picked out a good dress shirt, a pair of trousers, and my best pair of leather shoes. I had a good watch I rarely wore, and she ensured I smelled nice too. And she always loved the stubble, something I always worried irritated her, but she enjoyed running her fingers along my cheeks with a day's growth.\n\nMike gave me a filthy look from his position in the front seat as Cindy and I slid into the back seat next to Chris, who gave me a knowing glance at the same time. Cindy put on a fake wince as she sat down, shuffling every so often for the first few minutes. \"I'm feeling very tender right now, Mark,\" she not so subtly whispered into my ear. I hadn't actually fucked her, we'd just blown each other for a while before enjoying an orgasm together.\n\n\"Fucking hell,\" Chris muttered, \"Can tell you two are still in the honeymoon phase of your relationship.\"\n\nCindy cuddled into me, running her hand up and down my chest. \"We're in love, Chris.\"\n\n\"Yeah... I know...\"\n\nI glanced his way. \"You okay, mate?\"\n\nHe shrugged. \"Seeing you two is just a little reminder. We'll go out tonight, probably meet someone, but...\" He shrugged again. \"We're the same age, but my last relationship, serious one at least, was five years ago. Mike's last one just ended badly around the time you left Megan.\"\n\n\"Don't remind me,\" he muttered from the front seat.\n\n\"Why don't you two...\" Cindy started to ask. Both started to chuckle as she asked, \"What?\"\n\n\"It wouldn't really work as neither of us are particularly versatile.\"\n\n\"We both love to fuck,\" Mike emphasised. He then dropped a bombshell. \"We do have an agreement though.\"\n\n\"Oh, and that is?\"\n\nI glanced at Chris, who returned a smile, using his eyes to gesture at Mike. \"If we're both single at forty, we'll just say 'fuck it' and get together.\"\n\nI shook my head. \"Jesus, just do it now,\" I muttered, \"You're best mates, you've slept together before. Surely you can make it bloody work?\"\n\n\"Trying to set us up?\" Chris asked, grinning at me.\n\n\"No, I think you do actually love each other but are too bloody stubborn to admit it, so use all this bullshit like tonight so you don't confront your feelings.\"\n\nCindy kissed my cheek. \"Mark Pritchard, the matchmaker. Or should I call you Cupid?\"\n\nI snorted before we all laughed. \"No, I've just known these two clowns more than half my life.\"\n\nConversation moved on for the rest of the ride into the city, left wondering what the driver thought until I realised he had earbuds in so figured he listened to something while driving along. The four of us headed to a regular pub first for a couple of drinks, men drinking beer, Cindy enjoying a glass of wine. Slowly making our way to the favourite club frequented by Mike and Chris, by the time we arrived, the bouncers recognised them and they were let in without a problem, Mike stating we were with them, and the bouncers were happy to let us in.\n\nMike and Chris headed off straight away to mingle, Cindy taking my hand and leading me to the bar. Cass was working it again, her face lighting up seeing Cindy, the two women leaning across to kiss the cheeks of the other. \"And you remember, Mark?\"\n\nThe smile remained as she kissed my cheeks too. \"Oh, I remember this handsome man. Heard all about him too.\" I felt myself blush. I was used to Cindy calling me handsome at least a dozen times a day. I still wasn't used to hearing it from other people. \"Take a seat, honey. Want the same as last time?\" I raised my eyebrows at the fact she could remember. \"Honey, you are a topic of conversation in our group chat. To say we all adore you isn't an understatement.\"\n\nIt was my turn to look at Cindy and see her blush. I took her hand and kissed her palm. \"My role in life is to now make her as happy as I am,\" I said.\n\n\"Okay, first round is on me, because frankly, you two are just too damn adorable.\"\n\nCindy moved her stool as close to mine as possible, wrapping my arm around her as she leaned into me, sipping at her cocktail. We made the usual small-talk, no-one really paying attention to us otherwise, though Cass stopped by whenever she had a free minute to talk to us. She was quite the character. No idea what he natural hair colour was, but it was dark blue that night. A wonderful pair of blue eyes. She was tall, I was guessing the same height as me, big chest, and a tanned complexion. She was gorgeous.",
        "Cindy drank her cocktails faster than I sipped at my drinks, so she was rather giggly after a couple of hours, her hand finding its way to my crotch as she had no problem kissing me deeply in front of everyone. Moving her lips from my mouth to my ear, she whispered, \"Want me to rock your world?\"\n\n\"What are you thinking?\"\n\n\"Something special for my boyfriend.\"\n\nShe waved at Cass and beckoned her over. Leaning forward, she whispered something into her ear, watching as Cass looked at me and grinned. Whispering something back to Cindy, she turned to me and smiled too. Glancing between them, I was wondering what they were up to. No idea what Mike and Christ were up to as the dance floor was now rather full, and the area around the bar was also packed with people. Cindy finished her cocktail and hopped down from the stool. \"Follow me,\" she whispered into my ear.\n\nTaking my hand, she led me through the crowd towards the stairs leading up to the bathrooms. Getting intimate in a bathroom wasn't my idea of a good time, and I let her know that. She stopped, turned and smiled. \"No, we're not doing that,\" she said, giggling away, leading me upstairs.\n\nLeading me towards a door that said 'Staff Only', she opened it to reveal what looked like a room where staff would take their breaks. The usual assortment of lockers, a couple of couches, a vending machine, and an assortment of crap I just ignored. She led me to the couch and had me sit down before she straddled my lap, taking my hands and putting them on her breasts. \"I fucking love you,\" she murmured.\n\n\"I love you,\" I chuckled, \"And you're drunk.\"\n\n\"Only a little bit.\" She leaned forward and kissed me, resting her hands on my shoulders. She bit her lip for a few seconds. \"Mark... my friends... I love them dearly...\"\n\n\"I know you do, sweetheart.\" What I didn't expect were the tears to drip down her cheeks, moving my hands from her breasts, using a thumb to dry her tears. \"What's wrong?\"\n\n\"Finding a man like you for all of us is almost impossible.\" She took a deep breath. \"So we agreed long before I met you that, if any of us met someone that we loved, we would... share them from time to time.\"\n\n\"What?\" I asked deadpan.\n\n\"I know how much you love me, Mark. But would it interest you if we maybe had fun with my friends?\"\n\nI took a moment to consider that question. \"You're serious?\" She nodded. \"How do you mean?\"\n\n\"I mean something like... maybe a threesome?\" I smiled as I knew exactly what she'd organised. \"Cass will be up here in a few minutes for her break.\" She leaned forward and kissed me again. \"She likes you already, Mark. She knows all about you, of course.\"\n\n\"Are we just talking about Cass or...\" She chewed her lower lip again, meeting my eyes. I caressed her cheek immediately, seeing how nervous she was. \"How long have you been thinking about this?\"\n\n\"Remember that night you met all my friends the first time?\" I nodded. I remembered vividly. \"The group chat the next morning. Mark, they fucking love you, mostly because of how much you love me, and they see how much I love you in return. My friends are looking for the right man. Unfortunately, there is only one of you... You're my boyfriend, and one day, you'll be my husband.\"\n\nI grinned immediately. \"I will, will I?\"\n\n\"You're buying me a ring and I'll be Mrs Cindy Pritchard.\" I loved the sound of that. So did she, wiping her cheeks again before I hugged her tightly for a couple of minutes. When she'd calmed down, she leaned back enough to meet my eyes. \"But I see no problem with the two of us having fun with my friends. I'm aware of what happened with... your ex-wife. I'm not saying we're opening our relationship. God no. I can't even bear the thought of you being with one of my friends without me being there, and I know you won't like that either.\"\n\n\"Definitely not. I think open relationships are a recipe for disaster unless they start immediately like that.\"\n\n\"What I'm saying is that we will have fun together with my friends. And perhaps we can do other things together for fun. I love the intimacy we share. I've never had better sex, Mark. But maybe we can also have sex just for fun?\"\n\n\"Have you done that before?\"\n\n\"I've fooled around with my friends when we were all single. We're young, horny and need to cum.\"\n\nBefore I could really give my thoughts, the door opened and Cass breezed through, grinning at us before she locked the door with a key, keeping the key in the lock so the door couldn't be opened. She sauntered over and sat down next to me. \"I'm assuming you've been discussing everything, Cindy.\"\n\n\"I told him why we're up here, Cass.\"\n\nShe turned towards me. \"And what do you think, Mark?\"\n\n\"I'm wondering what you look like naked, Cass.\n\nShe smirked. \"You just want a look at my big, thick cock.\"\n\n\"I'll admit to some curiosity.\"\n\n\"Cindy tells us you're quite the cocksucker.\"\n\n\"I do love blowing Cindy.\"\n\n\"And you love it up the arse from time to time.\"\n\n\"I've certainly grown to enjoy it recently.\"\n\nLeaning across, she didn't stand on ceremony by kissing me. It was a little awkward with Cindy right there on my lap, but as soon as Cass pulled back, Cindy leaned forward to kiss her friend, which turned me on more than I thought, before Cindy kissed me. Getting Cindy out of her dress was easy once I lowered the zip at her back, leaving her in bra, panties, stockings and heels. I was now rock hard while Cass made a sound of approval. She was wearing a crop top and jeans, taking both off quickly. Her breasts were obviously fake, larger than Cindy's, immediately stating they were Ds. I grinned approvingly. Standing up in just a pair of very thin panties, she hadn't tucked herself away, lowering those without hesitation to unleash a long, thick cock.\n\n\"What do you think, Mark?\"\n\n\"Fucking hell, you got a permit for that thing?\"\n\nCindy giggled on my lap. Cass smiled down at me. \"So you're impressed?\"\n\n\"As I tell Cindy all the time, you're clearly a woman, Cass, you just got with an additional feature or two. A large cock and... yes, some rather large balls.\"\n\nSliding off my lap, Cindy and Cass both helped me to my feet, Cindy helping take off my shirt, Cass bending down to take off my shoes and socks, before her hands found their way to my belt, then button and fly of my trousers. My cock then sprung free, Cass grabbing the base but I took her by the hand so she could stand up. I was amused that we were the same height.\n\n\"I'm thinking I look after you two ladies tonight,\" I said.\n\nBoth smiled brightly as they sat side by side on the couch. Getting down on my knees, I asked, \"Should I take care of your friend first, Cindy?\"\n\n\"Please do. When were you last blown, Cass?\"\n\n\"By a man? Far too long, honey. Far too long.\"\n\nSettling myself in front of Cass, I ran my hands down her thighs as I leaned up to kiss her again, a soft kiss that turned rather passionate quickly, sliding my tongue into her mouth as her hands ran up my arms to my back. Cindy shuffled closer, noticing her already stroking her cock at the same time. Cass had a fantastic set of tits, her nipples already hard, giving them some attention with my mouth as I started to stroke her cock.\n\n\"Oh god,\" she moaned softly, using my left hand on Cass, reaching across to grab Cindy's cock with my right.\n\n\"Oh baby, looking after me as always,\" Cindy murmured.\n\nCass was soon gently pushing my head to go further south, kissing down her rather toned stomach, no surprise her groin was shaved smooth as I arrived at her thick cock. Judging it with a curious eye, I glanced up and asked, \"Eight inches?\"\n\n\"That's going in your arse later, Mark,\" she replied, \"I've been wanting to fuck you since you came in that first time I met you.\"\n\n\"If you haven't figured, Mark, Cass does prefer to fuck.\"\n\n\"Fine with me.\"\n\n\"Though, for the right man, I'm more than willing to be fucked too.\"\n\nLicking up and down her thick shaft a few times immediately earned a little pre-cum which I licked up, meeting her eyes as I moaned softly. Cindy knew how much I now loved swallowing her cum. I think I then surprised Cass by opened my mouth and devouring at least two-thirds of her cock, earning a loud groan as I clasped my lips tightly as used my tongue, just like how Cindy had been showing me.\n\nRemoving my right hand from Cindy, I placed that around the base of Cass's cock as I used my left hand to fondle her balls. Her hips were soon moving in unison with my mouth as I wanted to get her off as quickly as possible. She did only have a short time before needing to head back downstairs. Feeling her fingers run through my hair, she didn't try and fuck my face, though I'm sure she was holding back.\n\nA loud moan was earned when I swallowed her entire length. \"Oh fuck yes, baby!\" she cried.\n\n\"I've trained him well,\" Cindy said, giggling to herself.\n\n\"Oh, we're going to have such fun with him, though one good turn will deserve another next time. He's got a nice dick.\"\n\nI removed my mouth for a moment and grinned. \"Thanks, Cass.\"\n\n\"You're fucking hot, Mark. I'm a little jealous, though we all are, to be honest. Now, make me cum, then I'm going to fuck you hard but quickly.\"\n\n\"Want to cum now or cum in my arse?\"\n\nShe glanced at Cindy. \"Arse?\" Cindy smiled and nodded. \"Okay, handsome, let's get in a good position for the three of us.\"\n\nThe two women enjoyed lubing me up first, feeling more than one set of fingers inside me, Cindy eventually moving around to sit on her knees before me. Resting on my forearms, I wrapped my lips around her cock, slowly sucking her off as I felt Cass rest one hand at my hip as she pressed her thick cock against me. Sucking Cindy was a good distraction as she was a little thicker than Cindy, thankfully easing herself into me nice and slow.\n\n\"Fuck,\" I muttered.\n\n\"Okay, handsome?\" Cass asked.\n\n\"Yeah, you feel pretty fucking good already,\" I admitted once the head of her thick cock had slid into me. After that, all she had to do was slide the rest into me. She made me groan a couple of times, it felt so good, really filling my arse nicely. Feeling her body press into me, I glanced back for a moment. \"Ease me into it, but once I'm ready, you can fuck me. Wouldn't mind feeling another woman cum in me.\"\n\n\"Won't be the last either, if what Cindy told me happens.\"\n\nI turned back to Cindy, who smiled at me before offering her cock again. I resumed sucking her cock as Cass gently fucked me, feeling her pull back until only the head of her cock remained inside me until she thrust forward. After a few minutes, she picked up the pace of her thrusts, forcing her cock into me a little harder at the same time. Once she had me grunting and moaning, I felt a hand on my lower back as she started to fuck me.\n\nSucking Cindy was a good distraction, and once she started to thrust, I was being fucked at both ends. It was an enormous turn-on, something I'd never thought would happen in my life. Cindy's fingers ran through my hair as she gently thrust her cock, positioning my head so her cock went down my throat each time. I was now moaning constantly, and once Cass really started to fuck me as I felt her lean forward, I knew I was probably going to cum first.\n\n\"You've got a fantastic arse, Mark,\" Cass whispered into my ear, earning a grunt with each hard thrust of her cock, \"No wonder Cindy enjoys your company.\"\n\n\"Better when he fucks me, Cass. You know what I prefer.\"\n\n\"I know, honey, but I'm glad he's so open-minded like this.\" I made an approving sound around Cindy's cock. \"I'm close, handsome. So close. Want me to fill your arse?\" I nodded eagerly. She nuzzled into my neck, kissing my cheek. \"Okay, give me a couple of minutes.\"\n\nThose last couple of minutes, it did start to hurt as she rammed her cock into me as hard as possible, or so it seemed. I could endure it though as, despite that, I found it all rather enjoyable. Cindy was now just watching her fuck me hard. I felt her cock start to throb in my arse as she started to cum, her loud groan the only sound as I felt that warm feeling inside, spurt after spurt of cum firing deep inside me. It must have been a torrent as it seemed to last a minute before she practically collapsed onto my back, able to support her weight.\n\n\"Holy shit,\" she murmured, \"That was... wonderful.\" I turned my head, earning a soft kiss. \"Thank you, Mark.\"\n\n\"You're welcome. That was fun.\"\n\nI was actually disappointed when she pulled out, feeling some of her cum immediately leak out of me. She sat back on the floor, her cock slowly deflating as I turned onto my back, looking up to see Cindy smiling down at me. \"Mark, can I... fuck you too?\"\n\n\"Of course, sweetheart. Want to add your load to that of Cass?\" She nodded eagerly, moving around quickly to slide her cock inside me. She didn't last long at all, I think excited by what she'd just watched. Her cum filled me within five minutes, wrapping my arms and legs around her once she was finished. Cass was getting dressed by then, looking down to see Cindy snuggling on my chest.\n\n\"Okay, now I know how you two are together,\" she said softly, \"Cindy... Thank you.\"\n\n\"You're welcome, Cass. And this won't be a one-time thing. I have plans for Mark. We're going to have a lot of fun together.\"\n\n\"And Mark, if you want to... make love to me one day...\"\n\n\"I'd like that, Cass. But maybe we could just get coffee one day and get to know each other too?\"\n\nThat earned a smile before she leaned down to kiss us both. \"That sounds like a great idea too. Right, I've got to get back to work. I'll tell no-one to come in here just yet. Get cleaned up, then I'll make sure you get seats back at the bar.\"\n\nCass left Cindy and I alone, my girlfriend immediately meeting my eyes, knowing she was concerned. \"Are you okay?\" she asked softly.\n\n\"Wonderful, sweetheart. But I was honest about one thing. Sex is fantastic, but they're your friends, and I'd like them to be our friends. So I should get to know them too.\"\n\nOne minute later, or just about, she was riding my cock after the very quick application of lube. Resting on her elbows, she rode me hard and fast, simply wanting my cum inside her. She kissed me deeply, hungrily, passionately. Pumping up into her, she was soon crying out, begging for my cum. Hands on her arse, I was driving up into her, always worried about hurting her, though she'd tell me if it was. Instead, she begged for more, kissing me intensely, resting her forehead against mine, caressing my cheek.\n\nI groaned as I came inside her. I was on the verge of climaxing when Cass had been fucking me, able to hold it back just in time. She collapsed on my chest again, while I lay back in that post-orgasmic bliss I always felt with Cindy. \"Fucking hell, I love you,\" I murmured.\n\n\"You always say that after you fill my arse,\" she retorted, giggling away, \"But I fucking love you too.\"\n\nWe could have stayed there all night, eventually getting up, wiping ourselves down with some wet wipes that were left lying around, before we dressed and headed back downstairs. The place was packed, but Cass had kept her word, keeping two stools available for us. I did wince sitting down, feeling a little tender, Cass winking at me as I smiled at her.\n\nMike and Chris eventually appeared an hour or so later, surprised both of them were still alone. \"Not feeling it tonight,\" Mike muttered. He'd been down since our ride in the taxi.\n\n\"Mate, it wasn't anything I said, was it?\"\n\n\"It was, but in a good way, mate. In a good way.\" He sighed and shrugged. \"You guys want to head off soon?\"\n\n\"Pull up a stool and join us. Cass is getting us drinks.\"\n\nWe stayed for around another hour before Cindy and I were also feeling tired. Cass leaned over to kiss Cindy, seeing the surprise on the faces of Mike and Chris, before she leaned across and then kissed me. \"Looking forward to fucking you again soon, Mark,\" she said.\n\n\"Hang on, what?\" Mike asked.\n\n\"See you soon, Cass,\" Cindy said, grabbing my hand and leading me outside, Mike and Chris trailing after us.\n\n\"Whoa! Whoa! Whoa! What's that about fucking you again, Mark?\" Chris wondered.\n\nCindy kissed my cheek. \"Mark and I headed upstairs for fun with Cass during her break. Mark currently has a nice load from Cass and myself inside him.\" I returned what could only be caused a shit-eating grin in the direction of my friends. \"Think we've worn him out though. Poor baby,\" she added, kissing me on the lips.\n\n\"Fucking hell...\" Mike muttered, shaking his head.\n\nCindy and I fell asleep on the way home, thankful we were dropped off first. I told Mike to call me the next day, or we'd catch up on Monday. He seemed to understand why, grasping his hand in two of mine. \"I'm okay, mate. Just... guess I need to do some thinking of my own,\" he said.\n\n\"Have a good night, mate. You too, Chris.\"\n\n\"I'm going home to bed. I'm knackered.\"\n\nCindy and I managed a shower before collapsing into bed. I'm not sure who fell asleep first."
    ],
    "authorname": "UltimateSin",
    "tags": [
        "romance",
        "transgender",
        "threesome",
        "blowjob",
        "anal"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/ambiramus-ch-04"
}