{
    "title": "Working Late",
    "pages": [
        "I have always loved to masturbate. As long as I can remember, even before puberty, I've enjoyed the deep, tingling sensation of stroking my clit, of using my hands to give myself a high unparalleled by drugs or sex with another person. As I aged, and became used to my body, I could and would masturbate anywhere. I can masturbate in the car, in bed, in public restrooms, and even discretely and dangerously in public places -- more on this later. \n\nHow do I masturbate? I use three fingers to rub around and over my clit - side to side and up and down, hard and rhythmically. My clit is medium sized; when it is hard it sticks up as a little nub, not unlike the nipple on a breast, and is exquisitely sensitive. I keep my dark blond pubic hair trimmed but long enough to pull on and play with, which provides a strong and pleasurable twinge. As I play with myself my clit and labia swells and becomes engorged, and every once in a while I slide my finger into my vagina, getting the tips of my fingers wet and enjoying the sensation of being fingered internally -- even better is sticking a vibrating dildo inside while I rub my clit; if it hits my g-spot while also rubbing my clit I invariably come hard, sometimes gushing over the sheets. I like to masturbate when my bladder is full, too -- the extra pressure makes everything feel better, like I might burst. Sometimes I play with my own nipples, which are attached to a sensitive, oversized pair of breasts -- so oversized that sometimes I suck on my own nipples while I masturbate. My nipples are small, but can get so hard it's physically painful unless I relieve them with massage or a tongue. I can rub on my clit for hours, and sometimes do so out of distraction while I'm really doing other things, like reading. But I can also edge myself while looking at or reading pornography, and then when I come finally it is like an earthquake, every muscle in my body tensing for long moments. I am quiet when I masturbate, but gasp when I come, breathing hard. They say it's harder for women to come, but I have never had a problem when using my right hand, and for years I have rubbed myself off everyday, sometimes multiple times a day. \n\nAll of this is to say, as this story opens, that I love to masturbate, and have many years of practice doing so.\n\nI had been working hard recently at work on a large project that was due later in the month. It involved a great deal of research and planning, trying to get many moving parts in line. There were GANTT charts and lots of meetings - so many meetings that I often didn't have time to do research until the rest of the workday was over. So I was working late, and had been working late for several days. I would get absorbed in reading and clicking through information on my computer, and lose all track of time until I looked up at the clock and it was 6:30 or 7, or sometimes even 8, at night. \n\nAlthough my description of how much I like to masturbate might make you think I'm oversexed -- and perhaps I am -- I was also single, and hadn't had any dates in some time. I am a bit of a homebody, and don't go out much, which didn't help -- but I am also particular about who I date, and though I love a good lay, look for someone who is kind and intelligent and competent to let into my life. I'm bi-sexual but tend towards men -- and I hadn't found anyone who met my criteria who was also interested in me in a long time. Though I was sometimes lonely, I had a good life with many friends, work I loved, and a supportive family. And though I missed sex, I could of course take the edge off (and did) with my nightly masturbation. \n\nI've already mentioned my large breasts. They are (and have been since I was a teenager) very large - I'm currently a 36H, large enough that they stand out in photographs and are the most noticeable thing when someone looks at me. I've gotten used to having so much weight on my chest, though it's not always comfortable. The rest of me? I'm tall and could stand to lose a little weight, but I have a curvy bottom and hips and long legs with strong calves and thighs from my habit of bicycling. My dark blonde hair is medium length, curling down my back. I am not a supermodel, but as I enter my mid-30s I'm not unattractive. Of course, I dress professionally, but sometimes I do enjoy wearing tight sweaters like the college students at the university I work at -- tight enough and I can make heads swivel, especially if it's cold out and my nipples pop through. Each breast is slightly smaller than my head, which among other things means my bill for bras and lingerie is higher than that for my actual clothes! And though like most women I wish I could get my waist smaller and get stronger, I have always basically liked my figure, though sometimes I wish my breasts weren't so prominent. \n\nOn this particular evening, I was once again working late. I work in an office with cubicles, though mine has windows and some plants and slightly higher walls than usual, which screens it a bit. Our open office holds around ten people in different groups. It was late enough that it was dark out, and everyone had gone home long since. It was quiet, just the quiet ticking of some piece of HVAC in the background. I was cosy in my cubicle with a small space heater on my feet and an iced coffee. I was completely absorbed in the research I was doing, two monitors displaying graphs and figures on my desk. \n\nWithout too much conscious thought, I had started to masturbate. I slipped my hand in between my pants and was fingering my clit through my silky, thin beige panties. Of course, I tried hard not to masturbate around other people -- I had no desire to offend or sexually harass anyone -- and I realized that I could be fired for it at work. But I loved it so much that sometimes I would forget, and then realize with a guilty start that I was right next to coworkers, who could probably hear my breathing speed up -- and I would pull my hand from my pants quickly. During the day, this accidental masturbation usually resulted in me running to the ladies room, to finish off in one of the stalls, holding my breath if anyone came in. \n\nRight now, though, I was alone and sure I wouldn't be disturbed. So I decided to really go for it. The masturbation was making my reading so much more pleasurable and I was feeling particularly horny -- at this time of month my hormones sped up, and I felt especially sexy, and would sometimes imagine sleeping with random handsome strangers if I wasn't getting the real thing. On this night at the office, I was horny and I really wanted to come before I went home. I undid the top button of my pants and unzipped the zipper a bit, and then decided to slide my hand under the panties, sighing as I touched the familiar fleshy clit and labia. My vagina was soaking wet at this point, with a noticeable scent, and my wetness had soaked into my panties. \n\nI continued to click through reports on student success and other topics, but I was becoming increasingly focused on my masturbation. My clit felt particularly good and my pussy was, as I've said, very wet - it felt like a gaping, slickly wet opening demanding insertion. I stuck my fingers in my pussy and then spread the moisture around my pubic hair and vulva, getting my hand to the knuckles and the whole area wet. I even brought my hand out of my pants to smell and taste myself, before plunging it back under my panties to attack my clit with renewed vigor. I was really horny this evening, and I even thought about finding some porn in my web browser's incognito mode - but thought that would be too dangerous on my work computer. So I imagined instead -- imagined men with chiseled abs and large cocks, attacking me from behind, their cockheads penetrating my soaking vagina and gripping my hips with their strong hands before they unloaded a huge load of cum inside my pussy. I imagined men licking my asshole before stabbing me there with their cocks, and beautiful women licking my nipples, nursing on my huge breasts and bringing me to my knees as they sucked and sucked and I, in return, sucked on their big smooth breasts and dipped down to lick their pussies. \n\nI was just on the brink of cumming. I had my hand poised over my mouse and there was a report on my computer monitor, but I stared at it without seeing it. My body was starting to shake as I began to come, and my hand was moving over my clit at lightning speed, furiously rubbing. \n\nIt was then that a small sound, a rustle and a slight cough, made its way through my foggy head. I jerked my head around as I instinctively and guiltily quickly pulled my hand out of my pants. \n\nMy coworker was standing against the side of my cubicle, looking over the wall down at me with a bemused expression on his face. \n\nThis was my worst nightmare. Though I was usually horny, and not above masturbating in public places, it was not a fantasy of mine to get caught. All the repercussions started flashing through my mind and I blushed deep red. I wondered if I could pretend I hadn't been masturbating - but my zipper was wide open, my panties scrunched down so the top edge of my pubic hair was showing, and the scent was unmistakable. I started scooting forward to hide my open zipper under my desk as my coworker continued to stare. \n\nThis particular coworker was a new addition to our office; he'd been there a few months. He seemed pleasant but I hadn't gotten to know him well. I had to admit he was handsome; he had light brown hair cut short with hipster sideburns, cute glasses, blue eyes and a well-shaped chin. He was medium height, fairly thin and dressed in unremarkable but at least well-fitting clothes. More importantly, he was kind and always paid attention in our meetings, listening closely and sometimes offering a helpful suggestion. So I liked him: I just didn't know him, and I didn't permit myself to fantasize about coworkers. \n\nI looked down and then back up. He was still there, still looking at me, still looking at my exposed panties which had a visible wet spot edging up from the crotch. He could probably even see my clit poking up through the panties if he looked closely, which it certainly seemed like he was doing.\n\n\"Hi, Joe,\" I croaked. \"Hi, Susan\" he managed after a long moment. I noticed that he, too, was blushing. \n\nFinally, he tried again. \"I just saw the light on over here and was going to come let you know I was leaving. I've been working late on the big report.\" \n\n\"Yes, me too\", I said. \"I've been working on the research for the middle section of the report. I didn't realize you were still in the office, though\". \n\n\"I like to keep my light off and just have my monitors on - the light hurts my eyes. So it's hard to tell I'm here in the office at night.\" \n\n\"Oh, I see.\" \n\nWe continued to stare at each other for a long moment. As we did, many thoughts went through my head, including that Joe really was pretty cute. His light stubble accentuated his face, and his lips looked very kissable. As I thought that, I couldn't help but smile. I noticed Joe swallow, hard. \n\n\"So...\" we both said simultaneously. I paused and Joe turned his head. I thought he was leaving - but then he came around the corner to the doorway of my cube, standing in the doorway so that I could see his whole frame. \n\nI was the senior employee; I decided to face up to it. \"How long were you standing there?\" I began. \n\n\"Wait\", he said. \"Before you say anything.\" He swallowed again. I waited. My zipper, treacherous evidence, was still hanging open - I couldn't see a way to zip it without admitting the truth. \n\n\"I just wanted to let you know that I did see you. But I didn't mind. I definitely won't say anything.\" He said this fast, and in an embarrassed tone, looking away from me. \n\nAt this, I looked up at him and really looked at him -- at his face, and body. And that's when I noticed that his belt buckle and top button of his pants was undone, and he was sporting a large and obvious erection, tenting his pants away from his body. \n\n\"Oh....oh.\" I said. \"I....see.\" \n\nNothing like this had ever happened to me, in my fantasies or in real life. Who was this Joe? \n\n\"I just wanted to say...\" here he blushed and swallowed again, \"you're very pretty, and I really enjoy working with you.\" \n\n\"I ....see. Thank you, Joe.\" \n\n\"And I would never intentionally bother you late at night when you think you're alone in the office.\" \n\n\"I really appreciate that, Joe.\" \n\nThere was another long pause. This time though I raised my head and looked him straight in the eye, and he looked back. We held eye contact for a long time, and there was something in it that sent a tingle through my body, straight through to my pussy and clit. After the initial shock, I was beginning to be more aroused than ever. \n\nWe broke eye contact and looked down. I noticed Joe's erection was as hard as ever -- and it seemed like he had a very large cock. I also saw, looking down, that my nipples were rock-hard and poking through my button-up shirt. I felt my heart pounding. \n\nI looked up again and swallowed. \"Joe... were you enjoying watching me?\" \n\nHe paused before answering. \"I hope you don't take offense, Susan. You are so gorgeous. I coughed but you didn't hear me. And I just couldn't tear my eyes away.\" \n\nI came to a decision. \n\n\"We are both in an awkward spot. But -- I don't know about you -- I was quite worked up -- and not about this report. And if it wouldn't offend you, or bother you, I would like to keep doing what I was doing when you walked up.\" \n\nI saw Joe jerk his head up at this, and slowly an incredulous look on his face was replaced by a smile. He started to speak quietly, then cleared his throat and said, \"Do you think I could watch?\" \n\n\"Yes. I'd like that, Joe.\" \n\nThere was a pause. I continued, \n\n\"You should feel free to... get comfortable, too. If you want to do anything to yourself while you watch.\" \n\nI couldn't believe I was giving my coworker permission to masturbate with me in my office. But there we were - this evening had gotten really weird. We might as well go with it. I could see Joe's breath catch as I saw this, but his eyes looked joyful. I nodded toward the other chair in my office, but he said \"I think I'll just stand, if that's ok.\" \n\n\"That's fine, Joe. Please tell me if anything makes you uncomfortable, and I'll never talk about this with anyone else either. This stays between us.\" \n\nOur eyes met, and we seemed to understand each other. Without breaking eye contact, I swiveled so I faced Joe. My pants zipper was gaping -- but I lifted my hips slightly, and pushed my pants off my hips and on to my thighs. Now I was sitting in my office chair in my panties, which as I've said were thin and silky -- and slightly transparent due to being soaking wet. I spread my legs and angled my ass so that pussy was pointing out and up on full display, and Joe could see the outline of my labia and pubic hair and the huge wet spot. There was no going back now. \n\nJoe couldn't keep his eyes off my crotch. He swallowed, and his hand moved down to his crotch and started rubbing his cock on the outside of his pants. \n\n\"Joe,\" I said. \"Would you like me to take off my shirt too?\" \n\nHe just nodded dumbly. \n\nI unbuttoned my shirt, which was strained across my breasts anyway -- it's hard to find buttonups that fit me. With the last button undone It sprang open, showing my pale stomach and the curve of my breasts, encased in a black lacy bra that could barely contain them. My small pink nipples, as I've said, were rock hard and poking through the lace. I reached a hand up and started to tweak my own nipple. I saw Joe smile.\n\n\"Do you like that?\" \n\nHe nodded. \n\n\"Would you like to see my breasts?\" \n\nHe nodded again, vigorously, and his hand on his cock sped up. \n\nI don't fantasize about getting caught, but I am a bit of an exhibitionist, and I was getting into this. I ran my fingers over my nipples again. Then I took both hands and stroked my own breasts, holding them and lifting them up, weighing them. Joe was transfixed. I shrugged my shoulders and the shirt fell away. Then I reached behind myself and undid the clasp of the bra, and shrugged the shoulder straps off. I used my hands to take the cups off my breasts, then tossed it away. My tits sprang out. There I was in my office chair, naked from the waist up, my huge tits on display -- they sagged down a bit, together covering my entire chest, with creamy skin, hard pale pink nipples and puckered aereolas. \n\n\"Oh my god\" breathed Joe. \n\nAt this point, he'd stuck his hand inside his pants, and it looked like he was stroking his cock fast. \n\nI stuck my hands inside my panties and started rubbing my clit. By now I was really worked up and my hand on my clit felt great. I started rubbing hard. I could feel my moisture soaking from my vagina onto the seat of the office chair, and rendering my whole panty transparent. I pulled my pubic hair. \n\n\"Should I take them off?\" I asked suddenly.\n\nJoe nodded again, mutely. \n\nI pulled out my hand off my clit, raised my ass, and used both hands to slide my panties down -- over my ass, over my hips, and pushed them down with my pants over my calves, ankles, and off. Now I was completely naked in my office chair, gushing wet, my pubic hair glistening. \n\nJoe was breathing hard but smiling. I looked at him and nodded at his pants. \n\nHe nodded, and undid his zipper all the way. Then he removed his hand from his cock and pushed his pants over his bulge and down, pushing them down around his ankles and stepping out of them.\n\nThis time it was my turn to gasp. Joe was going commando! And his cock was large and gorgeous. It jutted from his body for 5 or 6 inches, coming to rest in a medium mushroomy head. It was quite straight, and a slim diameter. He was visibly dripping pre-cum; as I looked, a drop fell from the head of his cock and dripped to the floor. He also unbuttoned his shirt, so I could see his surprisingly built chest and stacked abs - his cock stood out straight from a muscled pelvis. His skin was faintly tan, and had light brown pubic hair, matching his head. His large balls were tucked up and looked swollen, about to explode, and his cockhead was faintly purple. \n\nA greek god was standing in my office doorway, and I was naked. \n\nI slowly brought my hand back to my pussy and clit. With the other hand, I started pinching my own nipple. Slowly I dipped my head, and I lifted my left breast to my mouth and started sucking hungrily on my nipple. I saw Joe's eyes grow wide in wonder. I switched sides and started sucking on the other breast. All the while I was furiously rubbing my clit, getting faster and faster.\n\nJoe's hand sped up on his cock too, using the precum as a lubricant, rubbing it up and down his cock as he used a whole-hand, twisting grip to slide up and down. A bit shyly, he reached down with his other hand, swiped up a bit of precum on his finger, and then reached with his wet finger around his slim, toned ass and started rubbing his own asshole. \n\nThis was so hot I moaned, and started rubbing even faster. I could feel the familiar muscle contractions start after a minute of furiously rubbing my clit. \n\n\"I'm going to come\" I gasped. \n\n\"Me too\" Joe croaked. \n\nI looked at him and made a decision. \"Come closer then, stand here\" I said, looking into his blue eyes. \n\nI saw him lick his lips and then my orgasm started taking me. As I pressed hard into my clit with three wet fingers, my vision started to black out. Every muscle in my core contracted and my toes curled. I gasped aloud. At the same time, from the corners of my barely functional vision I saw Joe arch his back and throw his head back, and heard him shout \"oh god\" before I felt the first shot of wet cum land across my breasts. \n\nHe continued to come on my naked breasts as I also continue to shake with a followup orgasm, one two three four five shots of cum until it was sliding and dripping down my breasts and off my nipples. I felt a huge wet spot under me and realized that I had squirted, soaking my office chair. ",
        "We both slowed our hands and then eventually stopped rubbing. We looked at each other -- both of our chests were heaving and we were gasping for breath. We were both nearly naked, and my tits were covered in cum. It was the best orgasm I'd had in years. \n\nWe looked at each other for a long moment and then Joe stepped forward, leaned down and kissed me. It was a sweet, slow kiss and after a half-second I responded, opening my lips and licking his. After a long minute he pulled back and looked at me. \n\n\"That was wonderful. Thank you. I'll get some paper towels.\" \n\nAfter we were clean and dressed, we stood next to the elevator and door leaving the office. I put my hand on Joe's shoulder, and he put his hands on my waist. We were shy with each other, for two people who had just masturbated and come together. \n\n\"I'll see you at work tomorrow,\" he said. \n\nI nodded.\n\n\"We have that report to finish\" he continued. \n\n\"It will probably take a lot more late nights to finish on time,\" I said. \"I'll need to be here long after everyone else is gone.\" \n\nHe licked his lips. \"Indeed,\" he said. \"I'll definitely be working late.\" "
    ],
    "authorname": "secretfiche",
    "tags": [
        "masturbation",
        "large breasts",
        "mutual masturbation",
        "office",
        "female masturbation",
        "getting caught",
        "caught masturbating",
        "masturbating at work"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/working-late-49"
}