{
    "title": "A Visit to Grandmother's House",
    "pages": [
        "Sally Liebowitz hummed a tune as she walked down East 53rd st. It was a beautiful Friday afternoon and she was on her way to have dinner with her Grandmother. Actually she was several hours early for her usual Friday Dinner but it was such a beautiful spring afternoon she had skipped a boring lecture at the City University. \n\nOne of the conditions her parents had set when they agreed to let her move back into the city while she attended college, was that she check in with her grandmother at least once a week. Sally was sure that her parents were more concerned with Grandma Shirley keeping an eye on her rather than the other way around. Not that the 19 yr old minded. Shirley Klein was her favorite person in the whole world. If she hadn't been her Grandmother, Sally would've adopted her as such. All her life, Shirley had been the one to encourage her to reach out and grab all that life had to offer. The brunette smiled as she recalled Grandmother's favorite advice. \"You can't just sit on your ass waiting for your ship to come in, you have to row out and meet it!\" \n\nShe smiled at the doorman of Shirley's building as he opened the door for her. He assured her that her Grandmother was home and asked if she wanted to be announced.\n\n\"No thanks, Mr. Collins,\" Sally said. \"I have my key. Grandmother usually takes a nap in the afternoon, I'd hate to wake her.\"\n\n\"Well enjoy your visit.\" He replied.\n\nAs she entered the lobby, Sally could feel the gray haired doorman's eyes following her. Feeling a little frisky, she gave her ass a little wiggle. Might as well give the old man a little treat she mused to herself. \n\nThe long hair brunette liked to tweak the interest of the men she passed. 5'6\" and 105 lbs, she had a figure that was more than pleasing to the male eye. The short sleeved yellow blouse and blue skirt completed the picture. \n\nAs the elevator rose to the 12th floor, Sally reached into her purse for her keys. Grandmother always told her, have your keys ready before you get out of the elevator. It's safer that way. Sometimes, Shirley Klein sounded like the proverbial Jewish Grandmother.\n\nExiting the elevator, Sally walked quickly to apt 12b and opened the door. The apartment was quiet as she entered, no television or radio on. Dropping her purse on the table, Sally was about to call out and then thought better of it. If she was napping, no sense waking her. \n\nAs was her habit, Sally took a minute to check out the latest addition to the photo gallery on the wall. Grandmother had been a professional photographer when she was young and still liked to spend at least a few days a month photographing the city. The gallery ranged from pictures of last weeks Memorial Day to a photo of her Grandparents and her father. Everyone said that Sally was almost the image of Shirley when she was a teenager, but Sally never really saw the resemblance. At least not in any picture she had ever seen. That was one thing she always found strange about the wall. There were dozens of photographs of every other member of the family, but almost none of her Grandmother. The great photographer was, she always claimed, camera shy. Reaching the end of the long wall of pictures, Sally decided she was thirsty.\n\nMoving to the kitchen, she checked the fridge, only to find that there was no soda. Settling for juice, she poured herself a glass. \n\n\"I guess putting on the TV is out,\" Sally said to herself as she finished the glass and put it into the sink. \"Maybe shouldn't have come so early after all.\"\n\nA sudden noise from the direction of the bedroom started the young girl. She quickly walked to the back bedroom and began to open the door.\n\n\"Gran...\" Sally started to say, but the word froze in her throat as she looked into the room.\n\nStretched out on the bed, was her 62 yr old Grandmother - totally naked. Her legs stretched out in each direction, the dark haired woman was furiously pumping a large rubber dildo in and out of her gray haired pussy. Her eyes were tightly closed and a soft moaning could be heard from her lips. It was that which Sally had heard.\n\nSally's first impulse was to turn and gracefully exit. But she found herself transfixed by the image before her. In fact She found herself taking a good long look at her Grandmother. Shirley Klein may have gained a few pounds and wrinkles over the years, but she was still a good looking woman. Her hair may have been dyed, but that was her only vanity. She ignored the effects of time through a daily exercise program, one which helped keep her large breasts from sagging to the level of most women her age. \n\nShirley had, Sally noted, the largest nipples she had ever seen, surrounded by dark 2\" circles. That was one thing she had always been secretly glad to have inherited from her father's side of the family. While Sally's mounds were no where near in her Grandmother's class, they were a definite improvement over the flat chested 32a's of both her Mother and her maternal Aunts.\n\nFinally backing quietly out of the room, Sally quickly decided to leave the apartment and come back later. Grandmother would be really embarrassed if she knew her Granddaughter had seen her fucking herself. As she rode down the elevator, Sally couldn't get the image out of her mind. It was hard enough picturing her parents as sexual partners. Thinking of Grandmother Shirley as having sexual needs was near impossible. \n\n\"Well it's been thirty years since Grandfather died, you dummy!\" She told herself. \"Do you think she just turned off a switch at 32 and just forgot all about sex. You should be so lucky to still be getting off when you get to be her age.\"\n\nTaking a long walk, Sally killed about two hours and found herself back at the building about five. This time she had Mr. Collins call ahead.\n\n\"Oh my Sally,\" Shirley called out as she met her at the apartment door. \"I was afraid that you had forgotten your old Grandmother.\" \n\n\"You'll never be old, Grandma.\" Sally replied as she kissed her cheek. \n\n\"Can I get you a soda? Shirley asked as she closed the door behind her.\n\n\"There isn't any sod...\" Sally started to reply then caught herself. \"I mean sure, anything you have is fine.\"\n\n\"Its going to have to be something really simple tonight, Sally.\" She said as she poured a glass of fruit juice. \"Mrs. Silverstein called this afternoon and asked if I would go to the theater with her. Mr. Silverstein has to attend a business function. I hope you don't mind?\"\n\n\"Of course not, Grandma.\" She replied as she took the glass of juice. \"You go and enjoy yourself, I'll be fine. I'll just crash on the couch and watch a movie on the cable.\"\n\n\"If you'd find yourself a nice boy you'd have a lot more interesting things to do on a Friday night than baby-sit your Grandmother.\" Shirley said as she set the table. \"In fact Mrs. Weinsten over in apt. 11c was just telling me the other day about her nephew, Norman. He's an accountant, not much older than you.\"\n\n\"Lets not have that conversation again, Grandma.\" Sally said with a sigh. \"I'll find my own boyfriends, in my own time.\"\n\n\"Suite yourself, Sally.\" Shirley continued as she followed the place settings with a casserole dish and began serving dinner. \"But if you keep letting all these eligible young men go by, I might just grab one of them for myself.\"\n\nSally nearly choked on the juice at that remark. For a split second, she imaged her naked Grandmother laying in bed with a \"nice young man.\"\n\nThat's a crazy idea, she quickly told herself. Playing with sextoys was one thing, but the idea of Shirley having a lover young enough to date Sally was totally ludicrous.\n\nYet all though dinner, Sally found herself wondering if Shirley did have a man in her life. Not some young stud of course, but someone more her own age. Knowing her Grandmother's zest for life, she couldn't believe she was settling for a piece of rubber.\n\nNo sooner had they cleared the dishes when the doorbell rang. Shirley said she'd get it, it must be Mrs. Silverstein. Sure enough it was.\n\nGolda Silverstein was about 5 years younger than Shirley. They had become friends about twenty years before when Shirley had first moved into this building. She had light blonde hair, dyed of course, and was on her second face lift. Sally had always found her a little stuck up, but then again she was Grandmother's friend, not hers.\n\n\"Sally darling...\" Golda gushed as she reached out for the girl and planted a wet kiss on her cheeks. \"It's been far too long.\"\n\n\"Hello, Mrs. Silverstein.\" Sally said in an unemotional tone.\n\n\"My you're going into quite a young lady.\" She continued. \"Pretty soon some young man is going to sweep you off your feet. In fact, My Grandson Sidney just graduated from Columbia and...\"\n\n\"Sally prefers to meet her own young men, Golda.\" Shirley quickly interjected.\n\n\"Oh well...\" Golda said, a little disappointed.\n\n\"Thanks...\" Sally said under her breath to Shirley.\n\n\"We shouldn't be too late.\" Shirley said as the two older women headed for the door. \"Be sure to make sure the door is locked behind us.\"\n\n\"I will.\" Sally said with a smile.\n\nSally waited at the door until the elevator doors closed behind the two women. Then she closed the door and locked it. After stepping away from the door, she hesitated for a second, then stepped back and rechecked the lock.\n\n\"Now she's got me doing it!\" Sally said to herself as she laughed. \n\nTwo hours later, Sally was totally bored with TV. What good were 70 channels if none of then carried anything she wanted to watch. Getting up from the couch, she began to pace the apartment. Eventually, her mind began to drift back to the afternoon's events. She began to wonder about the large dildo she had seen her Grandmother playing with. While she had seen pictures of such things, she had never really seen one up close. \n\n\"She must keep it in the bedroom.\" Sally said to herself. \"It wouldn't hurt if I took a quick look at it.\"\n\nCuriosity quickly overcame discretion, and Sally was soon going through the dresser's in Shirley's bedroom. Twenty minutes later, she was about to give up the search. Wherever Shirley kept it, it was a good hiding place.\n\n\"Might as well straighten up a little in here.\" Sally thought. \"At least it'll give me something to do.\"\n\nTen minutes later, the room was neater than she had found it and Sally was headed for the door.\n\n\"Ooops\" She called out as she stumbled over the large rug under the bed. \n\nRegaining her balance, Sally bent down to straighten out the rug. It was when she lifted it to smooth it out that she noticed the trapdoor like panel beneath it. Pulling the rug as far back as she could, the young woman opened the panel.\n\nA wide smile filled her face as she saw the rubber phallus resting atop a large black book in the cutaway section of the floor. Lifting it up, sally was fascinated by the detail of the toy. It even had little veins carved onto it.\n\nAbout ten inches long and wider than any real cock Sally had ever seen, she began to wonder if she would be able to handle something as large as this. It had been a long time since she had been a virgin. As far back as her sixteenth birthday in fact. Yet none of the half dozen boys she had been with since then had been anywhere half as big as this.\n\nPlacing the dildo on the bed, Sally turned her attention to the large black book that had laid beneath it. Lifting it out of the cubbyhole, she was surprised by it's weight. It was obviously a photo albums of sorts and based on it's size, must've held over a thousand pictures.\n\nSally's eyes opened in amazement as she laid the album on the bed and flipped it open. For someone who claimed to be camera-shy, her Grandmother appeared in literally hundreds of the photos within. What set these pictures apart from all the others Sally had seen before was that in everyone of them - her Grandmother was either nearly or totally naked. And in most of the pictures...she wasn't alone.\n\nFascinated by the incredible collection of erotica, Sally laid out on the bed and began to take a second look at the album. Spreading it out on the bed, she turned again to the front and started with the first photo. Many of them were dated, and as she read each one, a familiar wetness appeared between her thighs.\n\nThe oldest photo was dated 1949. It showed a younger, dark haired Shirley performing fellatio on a much older man. Next to it was one dated 1951, in which her Grandmother was on the receiving end of a cock nearly as big as the rubber dildo now laying at the foot of the bed. Sally looked again at the date and realized that it was taken almost a year and a half after Shirley had married Morty Klein. Whoever the man in the photo was, he definitely wasn't her Grandfather.\n\nPage upon page showed a variety of sexual acts with a even greater variety of partners. Oral, anal, vagina, even multiple partners...it seemed like Shirley had tried them all. Sally had gotten up to the middle fifties when she suddenly realized what fascinated her about the photos, apart from the obvious that is. Except for the really old hair style, they could be pictures of her. She really was almost a double of Grandmother Shirley in her younger days.\n\nSally felt her hand slide down between the elastic of her panties almost automatically as she continued to turn the pages. By the time she stopped at a large 8 x 10 photo of Shirley mounting a incredibly huge black man, the girl had three fingers inside of her and was frenetically pumping them in and out. The date on the photo read 1956 and Sally remembered that it would be almost a decade before interracial sex became the social thing to do.\n\nEven more incredible were the pictures that started with the mid 1960's. That would be the point where Shirley became a widow. The collection began to include photo's of the older woman and other women. Sally gasped as she looked down at the image of her beloved Grandmother licking the pussy of a large Hispanic woman. Taking a second look at the large woman's face, Sally recognized her as Maria Ortega, the live in maid who had worked for Shirley for about ten years.\n\nSally herself was no stranger to lesbian sex. In her last year of high school, she and Donna Levy had spent a lot of time playing with each other. The usual sort of experimenting that many girls did. It wasn't until her first term of college however that Sally had her first real lovemaking session with another woman. She had accepted a dinner invitation from an graduate student who made no secret of her lesbianism. Spending the night at her off campus apartment, Sally had been treated to a seemingly endless night of orgasms.\n\nMoving on, the photos began to include scenes of group sex as the dates moved to the late sixties and early seventies. Looking at a photo of Shirley in her middle forties, Sally hoped her body looked that good in another twenty years or so.\n\nA sudden sense of recognition caused the girl to turn back the page. She held the book closer to the light and looked again at the face of the short woman locked in a passionate kiss and embrace with her Grandmother.\n\n\"My God!\" Sally exclaimed to the empty room. \"That's Golda Silverstein!\"\n\nBy now, the wetness between her legs now covered her entire hand. Sally couldn't remember that last time she'd felt so horny. It had been over a month since she'd last been with a man and even then the night had ended with her only giving him a quick blow job.\n\nHer eyes caught sight of her Grandmother's dildo. Did she dare? The longing within her cried yes. She had to have some relief and her hand just wasn't going to do. Looking at the large clock on the bureau, Sally noted that it was only a quarter to nine. The play wouldn't even let out for another hour or so. Even if they came right home rather than stopping for a quick bite as was their usual custom, Shirley and Golda wouldn't be home until at least ten thirty.\n\nSlipping off her skirt and panties, Sally propped herself up on the pillows. She unbuttoned her blouse and undid the clasp of her bra. Her nipples were already hard and erect and they tingled in the warm night air. She ran a nail across them and was rewarded with an even greater sensation that ran through her body. If she had breasts as large as Shirley, she thought, she would be able to lick her own nipples.\n\nPositioning the large cockhead at the entrance of her sexuality, she applied a slight pressure to bring it inside. Even wet as her pussy was, she had to go slow. On her first attempt it went in barely a half inch before she felt she had to remove it. Well, she had plenty if time. Sally continued to slide it in a half inch at a time, covering it with her slippery juices and making each re-entry that much easier. She could feel the fullness of the hard rubber filling her tunnel. Biting her lips, she slid it in even deeper, anticipation the pleasure she would find when she took it all inside of her. \n\nYet even as she kept one hand on the substitute cock and continued to work it within her, the young woman still studied the photographic history of her Grandmother's sexual life. \n\nBy the time the dates reached the mid- eighties and Shirley reached her fifties, her partners captured on film began to become younger and younger. Earlier, Sally had easily discarded the image of her Grandmother with a lover in his mid twenties. Spread out before her was the photographic record of lovers who looked barely out of high school. In fact there was a blow up of a photo that was marked Mexico, 1987 showing Shirley in bed with a younger girl. Although rather generously endowed, the girl didn't look as much as 21.\n\nSally's patience with the dildo was soon rewarded as she soon found that she could now easily slide in almost eight inches without effort. Quickening the pace of her ministrations, she began to send ripples of delight throughout her body. No longer to split her attention between the album and the increasing ripples of ecstasy that began to rip outward from deep between her legs, Sally reluctantly put the book aside. As she laid back and closed her eyes, she could still see the last photo clearly in her mind. Taken very recently, right here in the apartment vestibule, it showed a 62 year old Shirley energetically sucking the cock of a teenage delivery boy.\n\nHer mind now totally focused on her task, Sally could feel the rising torrid within her. Her breathing had become labored, and sweat covered her chest. Both hand were wrapped around the dildo as she plummeted it in and out of her quaking body. Her hips lifted off the bed with each thrust, causing the old bed to creak, just as it had done for her Grandmother this afternoon. Then with a loud shout, Sally climaxed like she hadn't in months.\n\nTime seemed to stop as Sally as if her spirit had left her body. Nothing existed excepted the pulsating joy that filled her body. She collapsed back onto the bed, her body exhausted. She was only vaguely aware of the beating of her heart or that fact that she was still breathing. All she knew was that she had never felt so drained - or so good. \n\n\"I just have to rest a few minutes.\" She told herself. \"Then, I'll clean up and take a shower.\"\n\nNo sooner as she finished that thought when her eyes closed and she found herself deep in the purple mists of dreams.\n\n\"People have always said that you took after me.\" Said the quiet voice that pieced Sally's sleep induced fog. \"I guess they were right after all.\"\n\n\"Grandma?\" Sally asked as she slowly opened her eyes.\n\nIt took a few moments for her to focus on the image of Shirley Klein standing over the bed. It only took another second for Sally to remember that she was still naked and her thighs were covered with small river of dried cum. Or that the massive dildo was still buried between her legs.\n\n\"Oh God!\" Sally muttered as she pulled herself up, causing the dildo to slide out a little. her face now totally red with embarrassment. ",
        "\"I don't mind you playing with my toys...\" Shirley said as she reached down and pulled the dildo all of the way out. \"But you could at least clean it after you're finished.\"\n\nWith that, she lifted the rubber to her mouth and licked off a small spot of still wet cum. A smile quickly replaced the false look of indignation.\n\n\"I see you also inherited my good taste.\" Shirley purred. \"Lets get you cleaned up and we'll have a little girl to girl chat.\"\n\nSally quickly jumped out of the bed and headed for the master bedroom and the shower within. Watching the swaying curves of her Granddaughter's ass, Shirley found herself wondering if maybe she could also use a shower...\n\nEND"
    ],
    "authorname": "Ann Douglas",
    "tags": [
        "solo",
        "masturbation"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/a-visit-to-grandmothers-house"
}