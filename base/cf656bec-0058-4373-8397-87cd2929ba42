{
    "title": "What I Wish I Knew",
    "pages": [
        "It feels odd writing a preface for an article this short, but what the hell. Anyway, these are some things that I wish that I had known when I started out. The existence of this \"how-to\" should in no way lead anyone to infer that I think that I am a top tier Literotica writer. I don't. What I do believe is that I'm better now than I was when I started.\n\nAdvice For New Writers\n\nDeal With It\n\nYou're going to receive critical comments. Some will be valuable and without malice. Learn from them. Some will be baffling. Use these to remind yourself that the readership of Literotica is both wide and deep. You're going to run into people who aren't the best at expressing themselves. Some will be pure bile. It's inevitable. Go into the experience with that knowledge. \n\nI'm sure that over the years I've posted comments that covered all three of those categories. I've tried to be helpful. I've certainly failed to get my point across. There have been times when I've been a dick. \n\nDevelop a thick skin. You're going to need it.\n\nHow Long?\n\nA Literotica page is roughly 3500 words. If you are trying to figure out how long your story is going to be, that's a good rule of thumb. Dialogue heavy stories will have fewer words per page. \n\nHow long should your story be? There is no set length. Some people will swear by a three page optimal and a four-page allowable. On the other hand, many stories in the Hall of Fame exceed that dramatically. \n\nWhat about posting chapters separately? One page chapters will frustrate readers. Don't do it. Also, you may want to consider having the entirety of your story written before posting any chapters. \n\nGetting Help\n\nIn my opinion, beta-readers and basic grammar editors are of equal importance. If you happen to luck into an editor who can also offer feedback on characterization, story architecture, and plotting, you've struck gold. \n\nAnyone can be a beta-reader. If you respect their opinions, see if they would be willing. Keep in mind that friends and family will often be overly positive. Critique Corner (Google it) is an excellent resource for finding beta-readers. You may want to ask people who Favorited your first story to beta-read your next. They also have a forum for beta-readers on GoodReads. The people that reach out to you through the Literotica email system and insightful commenters may be your best resource. \n\nFinding an editor is difficult. Finding an excellent editor is exponentially more difficult. I can't self-edit. I'm atrocious and abysmally lacking in the editing skillset. Because of that, I'm tremendously grateful to the people that have been kind enough to edit my writing. \n\nUse the editor's forum on the Literotica Bulletin Board. It's not going to be easy to get someone to respond to you. Be persistent. Ask for recommendations from writers on Lit that you admire. If worse comes to worst, you can pay someone to edit your work. Fiverr has reasonable rates. \n\nIf you do decide to go the self-edit route, consider using a free automated service like Grammarly (Google it) or the Spelling and Grammar function of Word. They are both far from perfect, but it might help as a last resort. \n\nPulling in Readers\n\nThere are a few things to consider here. The first is the genre you are writing in and where you are placing your story. I'm not kink-shaming, but if you are writing cuck or humiliation stories, put them in Fetish, not Loving Wives. The readership in one will be welcoming, the readership in the other will be hostile. [Editor's Note: stories of swinging and partner sharing DO belong in Loving Wives, as that is the purpose of the category per the category description.]\n\nEstablish a conflict and dialogue as early as possible. Conflict hooks the reader and dialogue helps with immediacy. Don't time hop. No one is interested in going from a guy cheating on his wife in paragraph A to the subsequent ten paragraphs being about his childhood, teenage years, college, first years on the job, and his wedding day. \n\nIf it's not necessary for the plot, excise it.\n\nAnswer emails. Update your bio information. Both actions will help you develop a dedicated readership. \n\nGetting Better\n\nTo reiterate what I said earlier, learn from your critiques. Even if they are couched in negativity, some comments offer sound advice. \n\nTry to learn from the authors you admire. What do they do that you enjoy?\n\nWork on dialogue. It should 'sound' the same as a conversation you might overhear at Starbucks. Read it aloud to yourself. \n\nFormatting\n\nIf you are using multiple Point of View characters, find a way to display when perspectives shift. Five asterisks might do the trick (*****). Putting the name of the new POV character in bold at the start of that section might work. Find your own style, just make sure that the reader knows who is telling the story at all times. \n\nThis section is going to be tricky. I literally can't use a symbol that I'm referring to as it is reserved in Lit's system for HTML. So, when I try to discuss HTML tagging, I can't use the actual symbol that is needed. I'll describe it instead. \n\nYou remember when you were a kid and the teacher told you about the greater than and lesser than symbol? How the hungry alligator always at the most and all of that stuff? Well, the symbol looks like a V turned on its side to the right. On a PC keyboard, it's often above the comma. We're going to call that (Greater Than). If it's turned to its left, we'll call that (Lesser Than). When I use either reference, just imagine the actual symbol. \n\nLiterotica allows HTML tagging. That means that you can use italics, boldface or other effects. You have to start and end the text that you want to be modified with an HTML tag. The starting is easy. You use this Greater Than and then inside you put I for italics or B for bold or CENTER if you want the text centered and then you follow that with Lesser Than. At the end of the area of text you want to modify, you do almost the exact same thing, but you put a backslash before the letter. For example: /i or /b or /center. \n\nLame example: (Greater Than)b(Lesser Than)Here is the text I want to be in bold.(Greater Than)/b(Lesser Than)\n\nThere should be no spaces. It should be (Greater Than) followed directly by the letter, followed directly by the (Lesser Than). I can't demonstrate that for you as the Lit system will think I'm trying to modify the text and you will see the effect, not my example, but that's how I italicized and bolded the words in this article. \n\nI'll try to give a better example in the comments as I don't believe there's an issue with HTML there. \n\nIf there's any confusion, shoot me an email.\n\nWhat to Use\n\nUse whatever writing program you're most comfortable with. I prefer Word and Google Docs. There are programs specifically designed for writing fiction (google Scrivener). If you have the money to invest, go for it. Google Docs is free and it also allows for easy collaboration with editors and beta-readers. \n\nBest Resource\n\nOther writers. Ask questions. When I started out, I asked a ton of questions and not one author was rude or dismissive. Use the Literotica email system and if you have a question, reach out. \n\nKeep in mind that some authors aren't active, others choose not to answer emails and some may be extremely busy. In general, though, the people who have successfully done what you want to do are the best people to ask questions of.\n\nWhy Are You Writing?\n\nKnow what your goal is going in and try to balance your goals and your expectations. If you have a compulsion to write and just want to get your work out there, cool. There's no need for further reflection. If you want to use Literotica to get better as a writer, try to challenge yourself. Write something out of your comfort zone. Like writing action-packedaction packed Westerns? Write a romance. Are your POV characters well-educatedwell educated women? Write a story where the POV character is a down on his luck ex-boxer. Do you tend to be loquacious? Write a 750 word story. \n\nMost importantly, enjoy the process. None of this is mandatory. If writing and posting is causing you angst, modify your expectations or stop posting on Lit. Life is too short to put yourself through needless hassle. \n\nHere are some thoughts by one of my favorite authors, MsCherylTerra. \"The advice I'd add if it were me, and it's not so don't feel obligated to add this, would be \"know why you're writing.\" Are you writing for yourself? Are you writing for enjoyment? Are you writing to be the very best like no one ever was? Figure out why you're doing it so you can remind yourself of it when you hit a block, get a critical comment, or something you write doesn't take off the way you think it should.\"\n\nReaders have expectations and those expectations are often reasonable. It's fairly easy to figure out what those expectations are. Look at what scores well and what doesn't. Try to match category and story. If you choose not to, expect pushback and negative results. The time and attention of a reader is a resource. Don't squander it. \n\nGood luck! As a reader, I sincerely hope that you find success. It's always great to find a new talented writer. As an author, please reach out if I can offer any help.\n\n<center>*****</center>\n\nWith thanks to the friends that were kind enough to offer feedback and editing."
    ],
    "authorname": "Bebop3",
    "tags": [
        "author advice",
        "new writers"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/what-i-wish-i-knew"
}