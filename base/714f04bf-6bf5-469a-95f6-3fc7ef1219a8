{
    "title": "Imperius Ch. 07",
    "pages": [
        "Author's note: This story includes nonconsensual anal sex.\n\n \n\n~&lt; &gt;~\n\n \n\n \n\nMagnus untied the cloth that bound Lilah' hands from the post above her head and lowered them in front of her. She was limp in his hold, her exhaustion absolute.\n\nHe lifted her, her slender legs draped over his forearm.\n\n\"Praetor,\" said Saphir, near his shoulder, his voice whisper-soft to avoid waking her. He stood a head shorter than Magnus, closer to Lilah's height, \"I would suggest having Daegon carry her to your ship.\"\n\nMagnus continued to stare down at Lilah's face. Her head was tilted back and her lips were parted slightly, their color deeper than he had ever seen them. Her golden curls were a wild, damp mess around her pale face.\n\nSaphir lowered his head respectfully, \"The choice is yours, of course, but the others will be watching for any signs of attachment.\"\n\nMagnus gazed at her a moment longer, and then\u2014, \"Take her,\" he instructed Daegon without looking at him. The Gauthrian lowered his crossed arms and did as he was told. Where Magnus was a head taller than Saphir, Daegon was two head's taller than Magnus. Lilah looked like a fragile doll in his immense arms, and Magnus shoved down a flare of possessiveness at the sight.\n\nHe turned to Saphir as Daegon left the tent. \"To work,\" he said.\n\n~&lt; &gt;~\n\nHours later, Magnus looked out over the imperial camp from the window of his sky ship, his forearm resting against the glass. His clothing was simple, with neither praetorial regalia nor ballistic armor carefully fitted over the black fabric. The sky he saw was an ivory sunrise, its colors muted through the tinted window, and the room he was in was made of such dark colored steel that it might as well not have been daylight at all.\n\nThe door opened behind him with a soft, electronic hiss, and Saphir entered, his blue eyes placid. \"I've sent new orders to my contacts, Praetor,\" he said. \"If any of them sight our targets, they'll know what to do.\"\n\n\"Where would you guess they ran?\" Magnus asked without turning toward him.\n\n\"The capitol, most likely,\" Saphir replied, his eyes on Magnus' back. \"The last our people saw of her, the operative had the Lieutenant draped across her shoulder while she fled into the mountains.\"\n\n\"Mmn,\" Magnus hummed the sound thoughtfully, tilting his head. \"Is she as strong as they claim?\"\n\n\"Surprisingly yes, considering she was only supposed to be a prototype,\" said Saphir. \"Her instincts were impressive.\"\n\nMagnus was staring in the direction of the Legatus tent, where a horde of reclaimed Illythian captives were being roughly processed and tallied by Imperial guards.\n\nThus far, it seemed that they'd recovered nearly all of the ones who had escaped.\n\nSmall consolation, when the ones they hadn't captured included two members of the most elite regiment in the Illythian military.\n\nAnd when the commander of that regiment was dead, and his intel with him.\n\n\"Has the legatus overseen the interrogation of MacCrannach's regiment?\"\n\n\"Yes,\" Saphir replied, and tilted his head. \"They will know what Lilah did. They will want to know why.\"\n\n\"Well, that's easily answered,\" Magnus said with a sigh, and dropped his forearm from the window as he turned to face his right hand. \"The intel he could have given us\u2014Especially when we have his son.\"\n\n\"Still-,\" Magnus said as he sipped the wine and lowered into a chair, a minuscule crease forming between his brows.\n\n\"I had no idea she had it in her to sacrifice a life so...strategically.\"\n\nMagnus made a study of the wine in his glass, barely touched. In a moment, he would set it aside and likely forget it was there. He drank the stuff occasionally, but rarely enjoyed it. He'd never liked to imbibe much of anything that dulled his perceptions. Usually.\n\n\"For her to act so decisively in that moment\u2014,\" Magnus said, his eyes narrowed pensively, \"\u2014there's something else at play. Something close to her heart.\"\n\nHis gaze sharpened, losing their deep thoughtfulness and cutting back to Saphir.\n\n\"Bathe her, but don't discuss where we're going,\" he instructed. \"I'll join you in a little while.\" He ran a hand through his wavy black hair. \"I have a report to prepare first.\"\n\n~&lt; &gt;~\n\nWhen Lilah woke, she was in a dark room, in a soft bed, back on Magnus' sky ship.\n\nShe rolled over, tossed the blankets off, sat up, and buried her face in her hands.\n\nWhen she had first come here, she had been so frightened that she might be in the hands of someone who would torment her, who might offer her body to his allies, or expose her to a myriad of physical grotesqueries.\n\nWhat she hadn't been prepared for, was a calculated siege against her very sense of self. What she hadn't been prepared for, was Magnus.\n\nThe light from the window was soft, morning bright but mellowed by the tint of the window and the more golden glow of the lamplight. Clearly the sun was on the other side of the sky ship.\n\nShe shook off the urge to wonder if Magnus had arranged her here by thoughtful design, or mere happenstance, when a faint sound from behind her prompted her to turn.\n\nHer breath caught, teetering on the edge of alarm when she caught sight of Daegon. He was staring like one might watch a small, wild animal\u2014his posture so still that it might have been unsettling if she hadn't witnessed enough of Magnus' focus to inoculate her nerves against anything less.\n\nShe tugged at the bed sheet to cover herself.\n\nHis eyes stayed watchful, as her gaze moved to the injury on his upper chest.\n\nShe lifted her chin to indicate the wound. \"That doesn't look like it's been disinfected,\" she said.\n\nHe looked, if possible, more wary. Another time, another life, she might have smiled. At the moment, she felt too hollow to even summon the energy.\n\nShe inhaled deeply and rose from the bed, giving the bed sheet a second little tug and wrapping it around herself loosely as she walked over to the washroom. Behind her, Daegon moved closer.\n\n\"The door stays open,\" he said, and she didn't doubt he could close the distance to stop her, in the time it would take for her to disobey him.\n\nBut she only wet the first cloth she saw, and returned to him.\n\nShe approached him, unfazed by his looming height, and paused a few steps away.\n\n\"Please let me clean that,\" she said, meeting his eyes, using the kind of inflection that didn't invite refusal. He didn't move, and didn't respond.\n\nShe closed the distance between them and touched the damp cloth to the bare skin of his chest. He seemed...bemused. Perhaps it made for an amusing visual, her treating him with a serious expression while he loomed stoically over her, about twice her size.\n\nShe reached out with the cloth, but paused when she felt him tense.\n\n\"I'm a good medic,\" she said, looking at him evenly. \"I promise I won't attack you or try to make it worse.\"\n\n\"No,\" he said, surprising her with the thoughtfulness of his tone, and in his expression when she glanced up at his face. \"But you did run.\"\n\n\"I did run,\" she agreed, her voice still sounding hollow to her own ears. \"Would you have?\"\n\nThere was a long pause, before he responded.\n\n\"I would have stayed and killed as many of my enemies as I could find,\" he said. Quite loquacious, this man before her, in comparison to the giant who had instructed her simply to \"follow\" when they'd first met, and then thrown her over his shoulder when she hadn't moved quickly enough.\n\n\"I, in contrast, simply killed my own commander,\" she said, and while she had meant for it to sound matter of fact, the words sawed through her throat like a dull blade. Something heaved in her chest, trying to follow in the wake of that pain, but she shoved it back down and ignored the feeling of his eyes on her face as she finished cleaning his wound.\n\nThe door opened with a soft whooshing sound, and there stood Saphir.\n\n\"What's this?\" he asked, moving into the room fluidly and taking in their standoff with eyes of the deepest blue.\n\nShe turned to him. The last time she'd seen him, he'd stood and watched while Magnus fucked her with his fingers to the point of exhaustion.\n\nThe time before that, he'd slaughtered her regiment.\n\n\"This wound needs treatment,\" she said evenly, gesturing at Daegon's chest.\n\nSaphir looked back at her a moment, his expression impossible to read. \"Perhaps later,\" he said. \"For now, we worry about you.\"\n\nHe gestured to the door. \"Follow me, please,\" he said, and waited for her to begin moving before he led the way. Daegon followed behind her, a massive shadow in the dark halls.\n\nHe led her to the bath chamber, the familiar one with the off white, near golden glow against gleaming marble. It had been just as well lit last time she was here, but this time Saphir glanced at her and moved to a control gauge on the wall, dimming the lamps until they were softer and the color of the marble deepened to almost amber.\n\nHe made a strange attendant, stranger than she had realized before. Perhaps it was a result of what she knew now, of what she had seen, but she didn't think so. He moved differently now, every gesture more precise. She could see the deadliness in him, and she suspected this was only because he allowed her to see it.\n\nThere was already water in the tub, and he came to her and moved to take the sheet she still held around her shoulders. She removed it herself before he could and handed it to him, moving swiftly into the water so that he didn't feel the need to help her. It was hot, a little too hot to submerge into as quickly as she did, but the pain was almost welcome as she curled her knees to obscure her chest.\n\nWhen she saw Saphir come back into her eye line, picking up a comb from a vanity, she lifted her eyes to look at him. Something, some frustrated and resentful part of her, made her ask, \"Not sending Daegon outside this time?\"\n\nHer attempt to sound casual rang hollow and tense, and she only kept her gaze lifted and steady out of brittle pride.\n\nHe turned to her, his expression considering and more than stoic, deeper than the un-emotive mask everyone around Magnus seemed to wear. Only a day before, she would have been unprepared to see it on Saphir's face, but now it seemed that for him, it wasn't a mask at all.\n\n\"I could if you'd like,\" he said, in a tone of perfect courtesy, \"--Though I suspect he isn't the source of your discomfort any more.\"\n\nShe lowered her gaze in quiet acknowledgement, and the moment passed with the uncomfortable realization that she was still curious about him\u2014She wondered if he was comfortable with the role of assassin--if he had chosen it or if it had been chosen for him--but as soon as the thought occurred to her, she tried to shove it away.\n\nHe moved behind her, and spoke softly. \"I'm going to wash your hair.\"\n\nShe nodded, opening her mouth to say she understood, only to choke on the words and close it again.\n\nThey were silent as he wet her hair, and massaged fresh smelling oils into the tresses. Daegon still stared, but he seemed less ready for her to lash out than before, the wariness in his eyes less pronounced.\n\nStill something about it, about the entire experience, needled her.\n\n\"This scent is different from before,\" she remarked, her voice coming out clipped.\n\nHis hands paused in her hair for only the briefest instant. \"Yes,\" he agreed.\n\n\"The choice of waterlily perfume last time wasn't a coincidence\u2014you were fishing for my reaction,\" she said, her eyes fixed forward. \"And like a fool I told you, without thinking, they were common where I grew up. I all but told you where I was from.\"\n\nThis time, his hands were quite still.\n\n\"Lilah\u2014,\" he began carefully.\n\n\"Please don't,\" she said, cutting him off. Tears were forming in her eyes, threatening to spill over, and it took all of her will to fight them. \"Please, I'm sorry I said anything.\"\n\nThe pause lengthened, and then\u2014 \"As you wish,\" he said quietly, and guided her to lean back and wash away the suds from her hair.\n\nWhen it was done, Saphir dried her off and laid her on a massage table and applied oil to her skin, and his doing so felt so much more invasive now than it had before. He began at her shoulders and covered her arms, working the oil smoothly into the skin of her back, soothing and massaging her muscles until her body turned limp and warm.\n\nWhen she shifted, he maneuvered her firmly back into the position he wished, and she felt a surreal reminder that he was likely strong enough to hold her in place with one hand, in spite of his svelte musculature.\n\nHe didn't apply any cosmetics this time, leaving her natural features unvarnished, but he did soften the curl of her hair, letting it fall in waves around her shoulders, longer than it usually looked and a little brighter. When she looked in the mirror, the tapered point of her chin looked softer for it.\n\nBehind her, there came the familiar hiss of a sky ship door opening, and she didn't have to look to know who would be standing there.\n\n~&lt; &gt;~\n\nSaphir and Daegon both turned, but Lilah could see Magnus standing in the doorway, a golden chain linking two manacles hanging in one gloved hand. He wore a kind of uniform, different from the armor of last night, all black with understated silver embellishments and leather gloves.\n\nShe met his eyes in the mirror without moving. His gaze was thorough, eternally assessing, as he took in the sight of her.\n\nMagnus jerked his chin just slightly, and said, \"Wait outside.\"\n\nThe words were for Saphir and Daegon, but his gaze never left Lilah, not when he gave the command and not when they followed it.\n\nThe door shut behind them, the whoosh of the metal was barely audible to her as she met his eyes in the mirror. They stared at one another in a heavy blanket of silence that felt somehow less constricting than usual with the proxy of the mirror between them.\n\nThe manacle in his hand clinked softly.\n\nLilah inhaled slowly, and stood, and turned to face him. There had to be a way to desensitize herself against the potency of him. She couldn't simply continue this way forever, with the force of his attention turning the air into hurricane pressure whenever he looked at her.\n\nIf she could become used to Daegon, surely she could become accustomed to this as well.\n\nOr at least, pretend to.\n\nShe looked down, and tried not to furrow her brow. She wouldn't have ever believed it if someone else had told her a person could make you feel like the earth had shifted on its axis whenever they entered a room, and now that she knew it could happen she wasn't at all sure how to live with it.\n\nShe held out her hands, that he might put them into the manacle he held.\n\n\"Lilah,\" he said, and she looked up, reading the instruction to do so in the way he said it. It was a marvel, how he could tell her so much with just her name, a language of one word.\n\n\"Look at me,\" he said.\n\nSo she looked at him, and he searched her face for several lingering moments before he came forward and attached the contraption. The metal clinked. There was length enough on the chain that she could hold her hands almost normally, but his hand lingered, gripping her wrist. He rubbed his thumb against the place her pulse lived, with a leisure that was entirely at odds with the intent, almost angry way that he watched her.\n\nSomething caught in her throat as she looked back at him. He had a way of making her feel overstimulated with any look that lasted longer than a moment, no matter how much she tried to brace herself beforehand.\n\n\"These hands,\" he said, tracing the lines of her fingers, \"\u2014are as warm as I remember,\"\n\nHer breaths were shallow. She forced herself to take a deep one.\n\nHe turned her palm upward, touching two of his fingertips to the centre and caressing slowly, taking in the obedient shudder that coursed through her in response. Her body was always obedient to him, so much more than it was to her.\n\n\"You tended to me in that camp, when you saved my life. On the rare occasion I wasn't asleep, I pretended I was, but I could hear your voice--your precise little movements. The first time, I heard you sit down and rub your hands together, and I opened my eyes just enough to see. I half expected you to notice, to be looking back at me. I wonder to this day if you would have been startled if you had. But you were only looking intently at my wound, taking the time to warm up your hands before you treated me.\"\n\nThere was something deeply unnerving when he moved his thumb back to her pulse, to feel her erratic heart rate.\n\n\"The question now, is what could compel the nurse so dedicated and gentle that she rescues enemies on the battlefield and warms her hands before touching a patient, to turn around and shoot her own commander?\"\n\nShe was simply not breathing now, like an animal that hopes if it can be still enough, that the predator will simply pass by.\n\n\"Where does my Lilah get that kind of nerve?\" he whispered into her ear, threatening and seductive.\n\nShe didn't answer and he took hold of the chain with one hand, and lifted it over her head, drawing her close and kissing her, softly at first and then so deeply it was like he was trying to inhale her soul.\n\n~&lt; &gt;~\n\nMagnus searched her mouth with his tongue, almost losing himself the sweetness of her. When she moaned, his cock jumped like an eager beast. Her breasts were pressed against his chest plate, and he yearned to suckle at them hungrily, even while his mind protested at the idea of ending the kiss. She was in his arms, the heat of her sex pressed to his stomach and her legs against his sides. His fingers dug into the supple flesh of her buttocks as he continued to plunder her mouth urgently for what might have been moments or hours, before he released her lips and turned his attention to those round, lovely breasts. He drew one nipple between his lips and she cried out, the sound as involuntary as the way she arched her back, giving him even better access to her flushing bosom.\n\nA growl rose in his chest. He reveled wordlessly in the feeling that she was safe and soft in his arms and his. The nipple in his mouth was hard and velvety, and he lapped at it once with his tongue before turning his attention to the other, savoring the sensation as it hardened under his attention as well. His eyes cut to her face, but she was arched too far for him to see much. He felt a flare of delicious frustration. Nothing was enough.\n\nHe lifted the chain of her manacle away from his neck and turned her around, and placed her against the leather covered massage table, face down. He held her in place with a single hand, and while she didn't struggle in earnest, her body arched against him, the metal chain clinking at every movement. Her toes trailed against the floor, with most of her weight supported by the table.\n\nThere was a mirror in front of them, and the sight of himself towering over her was enough to have his cock wrenching needfully against his pants.\n\nHe thrust his pelvis against her thigh and she let out that gasping moan in response, his favorite sound. His eyes wanted to close and savor it as much as they wanted to stay open and watch her slender back shifting helplessly under him.\n\nMine, he thought as he stared down at the sight, his grip tightening around each globe with ruthless possessiveness.\n\nHis hands were still in gloves, which he removed with efficiency and laid to the side before brushing her hair away from her back, admiring the way the lustrous, golden waves rippled against her clean, pale skin. She shuddered at the sensation of his flesh against hers.\n\nMagnus bent over her and touched his lips to her left shoulder blade, pausing when she writhed in response. He kissed the spot again, and she keened. So responsive. He explored every inch of her back then, transfixed by the beauty of her arousal and her instinctive resistance.",
        "He moved to the silk-soft skin of her throat, and her breathing turned still more shallow. He frightened her as obviously as he aroused her--not because she feared he wanted to do her harm\u2014not because she didn't see what he would do to protect her--but because she saw too well. She saw the jagged, greedy hunger underneath the stoicism.\n\nHer placed his palm against her back, holding her in place as he straightened, stepped back, and reached down to trace the folds of her sex, a low rumble rising in his throat when he felt dampness against his fingertips.\n\n\"Always, Lilah. Every time, you're wet for me.\"\n\nHer breaths were shallow, and he could feel her effort to sustain the rhythm, to cling to some semblance of composure.\n\nHe lowered over her once more, touching his lips to the place just behind her ear, her hair soft against his cheek. \"Good girl,\" he murmured, and was rewarded when her ass jerked against him.\n\nHis cock responded again, hard and straining for her now, and Magnus loosened his belt and fished it out, forcing himself to be patient long enough to line himself up with her sex carefully, long enough to ease into her slowly. His eyelids closed against the sensation, the tight wet heat of it and the instinct to drive deeper into her, rough and merciless.\n\nLilah moaned beneath him, her body turning on her in arousal, and he soothed her with caresses as one might soothe an anxious animal.\n\nHer skin was warm to the touch, and so supple, and when he burrowed a hand into her hair, he was rewarded with a gush of arousal, pouring from her quim and saturating his cock.\n\nHis eyes rolled back and he thrust deep, so deep. She was so wet and pliant and needy around him, the muscles of her quim flexing and squeezing so snugly that he groaned, yearning for more.\n\nShe was gasping, her voice quaking with pleasure, but she wasn't screaming yet.\n\nHe would fix that.\n\nHe withdrew, and thrust in again, and she let out the cry he wanted to hear.\n\nThe smile that formed on his lips was more feral satisfaction than joy. His grip pressed into the supple flesh of her buttocks as he built a rhythm to the music of her rising cries, higher and more keening with each thrust. She was as aroused as he was now, her hips moving with him, and when he tightened his grip in her hair and pulled until her dainty back arched as far as it could go, he was rewarded with a whimpering sound rife with wanton pleasure.\n\nHe could see her expression in the mirror, lips parted and eyes so dilated they looked dark and deep. She was losing herself in the lust, hiding from him without even trying to.\n\nHis lips curled again, and he slowly withdrew his cock from her sex, savoring the moan that escaped her lips when he did so.\n\nHe was already coated in her slick, copious arousal, but he still reached down, burrowing his fingers into the dripping wetness of her quim, and dragged that wetness slowly, teasingly from there to the tight, rosebud-colored flesh of her other hole while spreading her cheeks so that he could admire the sight.\n\nWhen she felt his fingers play against the tightness there, her eyes widened in realization and she squirmed, immediately frantic.\n\n\"Please, Magnus, I can't. I'll do anything else\u2014,\" she jerked when he pushed a finger into her, slow and teasing, \"please!\"\n\n\"Lilah, Lilah,\" he shushed and soothed her tenderly, and caressed her hair until she quieted beneath him, her chest wracked with silent sobs.\n\n\"Hush, little dove. I think you know better than that,\" he whispered against her ear, his timbre so low and sensuous that he felt her clench more tightly around him in response\u2014responding as positively to him as ever, as though her own body felt the protests of her mind were a mild inconvenience, and allied with him against her. He had a hundred favorite things about her body, but none of them made triumph swell in his chest more than that.\n\nHe continued to work her own arousal around the hole, massaging, loosening. It was so tight, so small, and she'd just confirmed for him that it was untouched. He would be the first, the first and only one to stretch this part of her. The air felt jagged in his throat, and he took his time, forcing himself to maintain composure.\n\nShe writhed in futility, clearly not knowing how to fight both her panic and her arousal simultaneously.\n\n\"You know that I want every part of you,\" he said, his voice laced with false and familiar sympathy. It was the sympathy he used to show her that he saw how piteous her struggle was, and how he relished it. \"\u2014especially the parts you don't want to give me,\" he added, and began pushing the head of his cock into her tight, resisting hole.\n\nShe whimpered, and covered her own mouth to stop from screaming.\n\n\"None of that,\" he snarled from behind her, and snatched her hand in his.\n\n\"I will hear you cry out, Lilah,\" he whispered, his tone transitioning back to velvety seduction, \"\u2014in pain and pleasure and every mewl of discomfort in between.\"\n\n\"A moment ago you told me to 'hush,'\" she said, panicked into protesting.\n\n\"You'll do as I want at every moment that I want it,\" he growled against her ear, \"And now I want you to be a good pet and scream for me.\"\n\nHer chest heaved, the tears falling freely, all the resigned dignity she had worn when he entered the room utterly shed.\n\nHe burrowed his cock further in, watching her fall apart beautifully under him. It was such an overwhelmingly snug fit\u2014velvety and tight and deliciously resistant\u2014he struggled not to come apart himself, struggled not to plunge as deeply as he could go, and again and again, exultant at being the first to feel her ass clenching, the muscles rippling tightly. The first to make her feel this way.\n\nBut he waited, as her sobbing steadied and became muted, massaging her buttocks and allowing her to become used to his width. He gripped one of her dainty wrists in his hand, to feel her skin and her pulse, and to savor holding it in place.\n\nHe felt it when her senses betrayed her, when the little pleasure signals took over and drowned her panic enough that she felt her arousal more than the fear, and that was when he slowly, agonizingly pushed the rest of the way in.\n\nHe inhaled sharply, the pleasure spiking to something almost like pain. It was a luxury, a decadence he'd never felt before. He'd experienced the sensation, surely, though perhaps not as tight as this particular virginal hole, but it was the way she moved, a little bird he could keep in place with one hand even as she tried to hide from him, tried to let her hair fall over her face as she tried to fight off her own need to wail.\n\nAs before, her effort wouldn't be enough. When he withdrew slowly\u2014excruciatingly slowly\u2014she groaned low in her little throat.\n\nHe moved his hand there, the better to feel the tiny muscles in her neck with each sound, and then pushed in again.\n\nShe screamed, the sound shredded with desperation and desire and pain, and he repeated the thrust. Again, and again. She was coming close\u2014so close\u2014just from this, from him fucking her ass.\n\n\"Oh, god,\" she said, lost to herself, lost to anything but what he did to her. \"Oh, god,\" she repeated, between screams and between thrusts. \"Oh, my god.\"\n\nThis time, when he reached down and touched her quim, massaging at the first place she reacted to, she came apart immediately. The orgasm wrung her out, a long trembling, agonizing thing that left her body wracked and made her muscles tighten around him harder than ever. For once, he was gasping as much as she was in the wake of that sensation. The groan he released was a lion's rumble, coming from somewhere deep in his chest.\n\nNot yet, little dove, he thought, as he came close himself. Not quite yet, but I will be.\n\nHe came, squeezing her hips roughly as he did and driving into her one last time as deeply as he could go, filling her ass with his seed\u2014so much that when he stepped back to see, it dripped out, trickling down her pale thigh.\n\nHe kissed her neck and her cheek as she cried, brushing her hair away from her face tenderly.\n\n~&lt; &gt;~\n\nAuthor's Note: Thanks so much to HarbingerSovereign and Karaline for editing this chapter.\n\n \n\nI'm always eager to know what readers think and feel about what I've written, and comments mean the world to me. \n\n \n"
    ],
    "authorname": "Damoiselle",
    "tags": [
        "anal",
        "captive",
        "chained",
        "chains",
        "dominant male",
        "slave",
        "spoils of war",
        "war"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/imperius-ch-07"
}