{
    "title": "New Girl in Town Pt. 02",
    "pages": [
        "All characters are at least 18 years old.\n\nApologies for the delay on this story. Real life got in the way but I'm back at it now.\n\nThank you for your patience and for reading. \n\n*****\n\n\"So where do you guys eat lunch?\" Jessica asks as she and Shelly are walking towards the cafeteria.\n\n\"Out in the stadium,\" Shelly answers. \"The royal court table is not for you huh?\"\n\n\"Ugh, no,\" Jessica answers her. \"All they did was throw things at people, called them names or made unwanted advances to every girl that passed by.\"\n\n\"Or sat with them,\" Shelly asks.\n\n\"I didn't want to say it but yeah, it was pretty blatant. I think I tried saying 'No' in three different languages.\"\n\n\"That why you brought your lunch today?\" \n\n\"Exactly,\" Jessica answers.\n\n\"Well if you go out that side door there, you can skip the cafeteria and head right to stadium.\" Shelly tells her pointing towards the door where the buses let out each morning.\n\n\"Okay, cool but how will I know where you guys sit?\"\n\n\"Jake and Bobby will already be out there just look for them. They usually bring their own too so they can skip the cafeteria. Jake says it's too loud.\"\n\n\"I agree with him there. See you out there.\"\n\n****\n\n\"I've got a turkey, ham and cheese sandwich, Cheetos and Little Debbie Brownie, Bobby,\" I ask laying out my lunch on the metal bench.\n\n\"Dibs on that brownie,\" Roxie calls out before Bobby can begin.\n\n\"Rox, you can't call dibs until we've all gone.\" Bobby informs her.\n\n\"Ugh fine, but I'd better get that brownie. Just sayin',\" She states as she opens her own bag.\n\n\"Room for one more,\" Jessica asks as she approaches the trio seated at the top of the stadium bleachers.\n\n\"Hey Jessica,\" Bobby says giving her a smile.\n\nI make a point of looking around the nearly empty stadium then turn to her. \"I dunno Jess, this place is pretty full.\"\n\n\"I see that stammer of yours cleared up nicely.\" She shoots back as she takes a seat.\n\n\"Nothing that a little time melting my brain in Geometry couldn't cure,\" I tell her then turn to Roxie. \"Rox, this is Jessica. Jessica, this is Roxie.\"\n\n\"Nice to meet you Roxie,\" Jessica says.\n\n\"Don't try and take my brownie Tall Girl.\" Roxie tells her.\n\n\"Okay... what's happening?\" Jessica asks.\n\n\"Us brown baggers run a system of trade,\" Bobby explains as he starts to pull out his lunch. \"For example, I have a ham and cheese sandwich, a bag of regular chips and a chocolate chip cookie.\"\n\n\"Any item that I want,\" Roxie picks up, \"Say that brownie, that I will get by the way, I have to trade for. My trade items are a chicken salad sandwich, a bag of barbecue chips and grapes.\"\n\n\"Ah I gotcha,\" Jessica says. \"Am I allowed to join the trade group?\" \n\n\"Let's see what you got and then we'll decide.\" Roxie tells her.\n\n\"Um, sure,\" She says opening her bag. \"I've got a Pimento Cheese sandwich, a bag of Salt & Vinegar chips and a fruit cup. How's that?\"\n\n\"I'll trade my ham, turkey and cheese for your pimento cheese sandwich.\" I offer.\n\n\"Whoa, hold up.\" Roxie states. \"I believe you were in the process of giving me my brownie.\"\n\n\"Yes sweetie,\" I state handing it over.\n\n****\n\nPatrick is looking all over the cafeteria but doesn't see Jessica anywhere. \"Where the hell is she,\" he wonders when he spots Shelly and Jody standing in line so he makes his way over to them.\n\n\"Hey Shelly, where's Jessica?\" He asks interrupting their conversation.\n\n\"I'm not sure. She headed towards her locker after class. That's the last I saw her,\" Shelly lies.\n\n\"Have you seen her Jody?\" He asks.\n\n\"Nope,\" Jody answers choosing a salad. \"I'll tell her that you were looking for her though.\" \n\n\"Yeah, I bet you will,\" He grumbles as he takes his leave to make another sweep of the cafeteria.\n\n\"Is she really out in the stadium?\" Jody asks once Patrick is gone.\n\n\"She asked where we sat and I told her,\" Shelly explains as she pays for her lunch. \"She was headed that was a few minutes ago.\"\n\n\"Think she'll have more fun with our group than she did with Patrick and his?\" Jody asks.\n\nThey both look over and see Jamie tossing fries at a group of kids causing Patrick and Scott to burst out laughing. Only Ray and Staci look uncomfortable out of everyone at the table.\n\n\"I'd say the odds are in our favor,\" Shelly states.\n\n\"Let's hope she doesn't do anything to piss off Roxie,\" Jody states.\n\n\"I think she'll be all right, as long as she trades fair.\"\n\n****\n\n\"Grapes for a brownie is kind of a rip off,\" I state as I pluck one from the stem and pop it into my mouth.\n\n\"You didn't have to okay the trade ya know,\" Roxie points out as she savors the chocolate goodness.\n\n\"And get on your bad side, no way.\" I state.\n\n\"He just wants Roxie to make him some of her peanut butter cookies,\" Jody points out as she polishes off my Cheetos that she snagged as soon as she and Shelly sat down. Her offer of the cucumber slices out of her salad was denied but Jody gets a pass on trading.\n\n\"I really do but no pressure or anything Rox,\" I tell her as Roxie covers her eyes and looks down.\n\n\"Someone tell me when he stops doing his pitiful puppy dog eyes so I can look up again.\" She sighs.\n\n\"Oh god, this could take awhile,\" Bobby moans as he chomps into another of Jessica's chips.\n\nShelly turns to Jessica, \"Last time he did puppy dog eyes, Roxie baked him ten batches of cookies.\"\n\n\"It was not ten it was a metal tin which I appreciated immensely. Also I only use my powers for good.\" I argue.\n\n\"Good cookies, you mean,\" Jody quips.\n\n\"I'm glad that Jessica joined us on \"lets pick on Jake day\".\" I state pulling another grape free but before I can pop in my mouth Jessica snatches it. \"Hey, that's my grape.\"\n\n\"It was,\" She says popping it into her mouth then turns to Roxie. \"You're safe now Roxie, he's making sad eyes at me now.\"\n\nRoxie looks up and laughs. \"Thanks Tall Girl, I was wondering what those looked like when directed at someone else.\"\n\n\"Her name's Jessica, Roxie,\" Shelly reminds her.\n\n\"It's Tall Girl until she earns my trust,\" she answers.\n\n\"I can live with that,\" Jessica smiles then turns back towards me. \"Aw, you look so sad.\"\n\n\"Someone stole my grape,\" I pout exaggeratedly.\n\n\"Ugh fine,\" She sighs then spears a piece of pineapple from her fruit cup with her fork. She proceeds to dab it on my lips until I open up and take it. \"Better,\" She asks.\n\nI nod as I chew. \"Fair,\" I answer, \"but you still owe me for not being able to focus in Geometry because of you.\"\n\n\"Wait, how'd Jessica cause you lose focus in Geometry? She was in Trig with me.\" Shelly asks.\n\n\"Yeah and she mentioned that he was stammering too when she first got here. What happened?\" Bobby chimes in.\n\n\"I'm not sure I can give you guys a firm answer to that,\" Jessica states her emphasis causing me to picture her in volleyball shorts again as she gives me a wink.\n\n\"Because of the tire thing last night, it was an ear buds type of morning.\" I say proud that I only stammer a little but my friends all notice and laugh. \"Jessica took it upon herself to make sure that I didn't stay wrapped up in that funk. She's been pretty amazing at it and I'm grateful.\"\n\n\"Aw, you say the sweetest things Jake. I probably won't even tease you any more today, maybe, okay like for the next five minutes.\"\n\n****\n\n\"We really need to find a new place to sit during lunch,\" Staci says to Ray as he walks her to her next class.\n\n\"Yeah, they're antics are getting really old and I'm sick of the way Patrick treats you.\" Ray says.\n\n\"He couldn't find his precious Jessica so I'm supposed to go make out with him because his ego is bruised.\"\n\n\"It'd be shattered if he saw that.\" Ray says nodding towards a pair of students walking ahead of them.\n\n\"Is that Jake with Jessica?\" Staci asks.\n\n\"I don't think they're a couple but they seem pretty happy.\" \n\n\"Damn, go Jake.\" Staci states giving Ray's hand a squeeze.\n\n\"Maybe that's how we can help her.\" Ray adds. \n\n\"By getting her together with Jake,\" Staci asks. \"I'm not so sure that's a great idea.\"\n\n\"Because of the Jennifer thing,\" Ray asks.\n\nShelly nods, \"I don't want to be a party to anything like that happening again.\"\n\n\"Maybe we should do some more research together so we don't mess this up.\"\n\n\"Together. As in as a couple,\" She tentatively asks.\n\n\"I'd really like that.\"\n\n\"But,\" She asks.\n\n\"But nothing,\" He answers squeezing her hand in his.\n\n\"What about Patrick?\"\n\n\"I couldn't care less about Patrick.\"\n\n\"You know what he's done in the past.\"\n\n\"Yes, and it's time that it ends. I've already gone against the status quo at practice and I'm willing to pay whatever price to be with you.\" He tells her.\n\nStaci bites her bottom lip then leans up and quickly kisses him. \"After practice, we need to do a lot more of that.\"\n\n\"Looking forward to it,\" Ray says smiling.\n\n****\n\nAs we take our seats in Biology, Jessica gives me a serious look. \"Jake, I honestly didn't mean to tease you like I did. I... I'm not normally like that.\"\n\n\"You're not normally nice or funny or helpful? Which one is it?\" I jokingly ask her. \n\n\"I'm trying to be serious here.\" She states.\n\n\"There's no reason to be. I've known you for only a couple of days but you don't strike as the kind of person that... well that kind of person.\"\n\n\"Oh, okay cool,\" She says relieved that he seems to understand her. \"That makes this next part a bit easier then.\"\n\n\"You want a better lab partner,\" I state.\n\n\"I believe that yesterday proves that I couldn't get a better one. Well maybe one other but I'm not standing in the way of anyone's crush.\" She says looking over at Lee Ann and Dean as the pair chats quietly. \"They're too cute together.\"\n\n\"So what do you want to ask?\"\n\n\"This weather exhibition that's coming up,\" She begins.\n\n\"Sure, I can take you to that.\" I answer before she can even ask the question.\n\n\"Wait, how'd you know that's what I was going to ask?\"\n\n\"Couple of reasons,\" I tell her. \"First, you're new in town and probably have no idea where the planetarium is and second, you wanted to make sure I knew that your teasing was just that so I wouldn't agree thinking you were offering anything more. How'd I do?\"\n\nShe stares at me open mouthed for a second then gives me a radiant smile. \"You used way too many words but basically, yes.\"\n\n\"Then, as I stated, it would be my pleasure to take you ou... to the exhibit. Wouldn't want anyone thinking it's a date now would we?\" I ask as the bell rings. Jessica doesn't get a chance answer as Mrs. Harper launches into the days lesson.\n\n\"Hey you two, wait up,\" Lee Ann says as we're exiting class. \"What's up,\" I ask as she and Dean fall in step with us.\n\n\"Are you guys going to the weather thing for extra credit this weekend?\" She asks.\n\n\"Sure are,\" Jessica answers.\n\n\"Together,\" Lee Ann asks.\n\n\"I don't know where the planetarium is so yes,\" Jessica answers.\n\n\"You could use Google Maps,\" Dean points out.\n\n\"I could,\" Jessica says, \"but then I would miss out on being shown around town by my lab partner.\"\n\n\"In that Mustang of his, I can't say as I blame you.\" Dean admits.\n\n\"Mustang, really,\" Jessica asks. \"I didn't figure you for a sports car.\"\n\n\"Oh it's not a sports car Jessica, that thing's a beast from hell disguised as a car.\" Lee Ann tells her.\n\n\"She's just a car to anyone who doesn't have a foot full of lead.\" I tell her.\n\n\"You'll see what I'm talking about Jessica. That thing rumbles like jungle cat that's just itching to pounce. A little goose on the gas and she leaps like a jet plane taking off.\" Lee Ann shares as we near the art room.\n\n\"You've drove it,\" Dean asks her sounding in awe.\n\n\"On my street over the summer. The black marks are still there by the way.\"\n\n\"Lead for a foot,\" I add.\n\n\"Be nice and bat those pretty eyes of yours at him Jessica and he'll let you take her for a spin.\" Lee Ann laughs.\n\n\"The latter I can pull off but being nice to him; he makes that impossible.\" Jessica laughs.\n\n\"Yeah, he's a handful that for sure.\" she jokes back.\n\n\"Thankfully this is us,\" I tell Dean and Lee Ann. \"We'll see you two tomorrow so the abuse train can roll on.\"\n\n\"Looking forward to it,\" Lee Ann laughs.\n\nAfter we say our goodbyes, Jessica and I head in.\n\n\"Now I can't wait to see this car of yours.\" Jessica states with a laugh causing Coach Pennington to look at as we enter.\n\n\"Guess there's no way I'm getting out of taking you Saturday now, am I?\" I jokingly ask.\n\n\"What is it with you two trying to get rid of one another when you come into my class?\" Coach asks.\n\n\"This is their third class together Coach, plus she had lunch with us today too,\" Bobby tells him. \"That's too much Jake for anyone.\"\n\n\"Thank goodness Shelly has your back Jessica,\" Coach Pennington jokes as Shelly enters the classroom.\n\n\"That I do Mr. Pennington,\" Shelly answers giving Jessica a smile. \"What are we talking about?\"\n\n\"Jake...\" Bobby begins but I cut him off.\n\n\"Nope, uh huh, leave my name out of this. I declare \"pick on Jake day\" is officially over.\"\n\n\"It's so cute that you think you can just declare that,\" Jessica says patting my face lightly before turning and heading back to Shelly and her table. I can't help but watch her butt as she walks away and Bobby catches me then laughs.\n\n\"Man, you have got it so bad.\" He chuckles. I just shake my head and sigh as I take my seat.\n\n\"Agreed,\" Coach Pennington says as he begins to pass out the drawings from yesterday for us to finish. He makes sure that my flower vase drawing is on top of the other. The one that is a three quarter view of Jessica's smiling face.\n\nCoach stops me as we're heading out of class.\n\n\"I'd really like to enter this drawing into the art fair later this month.\" He says tapping his pen on my drawing of Jessica.\n\n\"I'm not sure that's a great idea coach. I mean Jess and I are friends, sort of, but I didn't ask her if I could draw her. I mean this borders on stalker territory doesn't it?\"\n\n\"You can always just show it to her,\" He states.\n\n\"Yeah, I can't see that ending well for me.\"\n\n\"Well think about it,\" He states. \"About both letting me enter this and telling her. It's really great work.\"\n\n\"I will coach,\" I tell him. \"See you at practice.\"\n\n\"What was all that about?\" Bobby asks as I join them.\n\n\"Just something about the Art Fair this year,\" I answer.\n\n\"Aw, you draw pretty flowers.\" Bobby teases.\n\n\"Didn't I declare all this picking on me to be over?\"\n\n\"Jessica dismissed that for us so you're still fair game.\"\n\n\"I'm glad to contribute,\" Jessica says with a laugh.\n\n\"I can get this kind of punishment anywhere; I hope you all know this.\" \n\n\"True but it wouldn't be nearly as good since I've known you all of your life.\" Shelly jumps in. \"Should I tell them about the bike incident or the Bigfoot thing?\"\n\n\"I don't know which bike incident you could be referring to since there's been a few and also shut up.\" I tell her.\n\n\"I want to hear about Bigfoot,\" Jessica says looking down at my feet. \"Is it about him being clumsy?\"\n\n\"No it's about an actual Bigfoot, well one that he thought roamed the woods behind his house. He had a journal about it and everything.\" Shelly explains.\n\n\"All right,\" I state trying to stop the conversation but it's no use.\n\n\"He had a diary,\" Bobby needles me.\n\n\"Dearest Bigfoot, I thought I saw you today, did you see me?\" Jody chimes in and I begin wishing I was anywhere but here. The two a day practices in ninety-plus degree heat would be preferable.\n\n\"Oh my god, you are so cute when you're blushing,\" Jessica cries excitedly.\n\n\"That can't possibly be true. I'm fairly sure that I blush anytime I ask a girl out and they still say no.\" I argue.\n\n\"Stop trying to date airheads,\" Jessica counters much to Shelly and Jody's delight.\n\nBobby laughs, \"That's what I keep telling him.\"\n\n\"Are you saying that he needs a smart girl, Bobby?\" Jody asks giving Jessica a smile.\n\nJessica, seeing where this is heading, tries to cut it off by turning to me. \"Don't you have a practice to get to?\" \n\n\"That I do, thank you,\" I nod giving her a wink. \"See you guys later.\"\n\n****\n\nPractice begins with two laps for the team, four for me, so I pace myself though I want to be at the front of the pack just to piss Patrick off. After my final lap, I look at Coach Yates who yells, \"'Bout time! Get your ass over with defense!\"\n\nWorking with the defense is a demotion from second team. You aren't taught the offensive playbook by actually running through it when you were with the defense. The only thing you learn when quarterbacking for the defense was how fast you can dodge even though they aren't suppose to hit you, it happens. Coach Pennington gives me a nod as he goes over which defense he wants the guys to line up in.\n\n\"Dime package, double coverage,\" He tells them then tosses me the red cover that is supposed to mark me as a non-target. \"Put that on, but head on a swivel. Five step drop then let fly.\"\n\nI nod, pull on the jersey and take the ball. \"On your go Coach,\" I tell him as I squat as if I'm behind a center.\n\n\"Set... Go,\" Coach shouts starting the play. I drop the five step, spot a receiver with a step on his coverage man and let fly. The ball spirals out of my hand and hits his perfectly in stride but slips through his fingers.\n\n\"That's one,\" Jamie snickers as he goes to his outside linebacker position.\n\n\"Nice heave Jake,\" Coach Pennington compliments then goes over to show his D-back what he did wrong.\n\nThe receiver comes over and gives me a sheepish look. \"I should have got that one.\"\n\n\"Next one,\" I tell him. The kid looks like a sophomore that got kicked up from JV, most likely due to his speed. Once he gets used to catching the ball he'll be a shoe in for all state.\n\n\"Okay D, four three formation, Cat blitz, cover two and remember we stop on red!\" Coach calls out then turns to me. \"Play action, three step drop and get rid of it. Watch the blitz.\"\n\nI appreciate his warning since he's called our special Cat blitz meaning both our outside linebackers were going to be coming. The \"stop on red\" part is to remind them to not hit me since I'm wearing the red jersey.\n\n\"Left side,\" I tell the running back as he lines up then nod at Coach.\n\n\"Set... go,\" Coach calls out. I take a step back and fake the hand off to the back. I sell the hand off and as I plant I notice Jamie coming on my left and Tank on my right.\n\n\"Well this is going to hurt,\" I let myself think for a second before I let the ball fly over the middle. Tank passes me with a simple tap on my padded shoulder. If he laid me out, it'd be a legal hit since the ball just left my hand. Jamie, two steps behind him slams into me at full speed throwing me back onto my ass.\n\n\"Damn it Jamie, what in the hell was that?\" Coach Pennington shouts.\n\n\"Sorry coach, guess I didn't know my place.\" Jamie answers with a chuckle.\n\n\"Well in a game you just cost us fifteen yards on top of the ten Jake completed with that pass.\" He tells him then turns to me. \"Are you all right?\"\n\n\"Fine coach,\" I answer as I dust myself off.\n\n\"You sure,\" he asks.\n\n\"He should hit harder if he wants me to stay down,\" I state giving coach a smile. \"Next play?\" \n\n****\n\n\"So how was your day sweetie,\" Mr. Golden asks as the family sit down for dinner.\n\n\"Soooo boring,\" Sarah sighs dramatically garnering laughs from the family.\n\n\"Why was it boring Sar-bear?\" Jessica asks.\n\n\"I already know eeeevvvveeerrrything,\" Sara groans getting more laughs.\n\n\"And just how do you eeeevvvveeerrrything young lady,\" Dr. Golden mimics.\n\n\"My sissy taught me,\" she answers. \"I'm too smart for first grade.\"\n\nTheir dad gives Jessica a look that says \"See what you did\" and Jessica just smiles.\n\n\"Be careful Sarah or you'll end up in all the smart classes and be buried under a homework avalanche.\" Jessica warns her.\n\n\"Oh no,\" Sarah cries out then laughs when Jessica reaches over and tickles her.",
        "\"Jessica, no tickling at the table,\" Dr. Golden says as she grabs Sarah's glass before it spills.\n\n\"Oops, sorry mom,\" Jessica says leaning back.\n\n\"How was your day Jess,\" her mom asks.\n\n\"It was pretty fun,\" she answers. \"I ate lunch with a different group today and they do trades.\"\n\n\"Trades,\" Mr. Golden asks so Jessica explains and he chuckles. \"They sound like an innovative bunch.\"\n\n\"I get the impression that they started this a long time ago but they let me join in.\"\n\n\"Sounds like fun. How'd you do?\" Her dad asks.\n\n\"I kept my fruit cup, well most of it, but got a different sandwich and chips. They were pretty good.\"\n\n\"So who is this new group you sat with?\"\n\n\"Shelly and Jody, I've told you about them, there's also Jake, Bobby and Roxie. Jake's in three of my classes, Bobby's in art with us but I don't share a class with Roxie.\"\n\n\"So this Jake is in the AP program as well?\" Mr. Golden asks.\n\nJessica nods. \"He's in my English and Biology class. He's my lab partner actually. Oh, that reminds me, we're going out Saturday night.\"\n\n\"You've got a date already, I thought that you weren't going to date anyone this year,\" Her mother asks excitedly.\n\n\"Oh no, sorry, it's not a date, not really. See our biology teacher gives extra credit if you attend science-based events around town and there's one at the planetarium Saturday night. I asked Jake to take me. Well, I was going to ask him but he agreed before I got the chance.\"\n\n\"How's that work?\" Dr. Golden asks.\n\n\"I was building up to ask him and he agreed before I could actually ask him.\"\n\n\"Sounds an awful lot like a date to me,\" Mr. Golden says with a grin.\n\n\"Boy's are icky,\" Sarah reminds her.\n\n\"This one is okay Sar-bear,\" Jessica says giggling then turns back to her parents. \"We both say that it's not a date. He knows the city and is nice enough to show me around.\"\n\n\"Well make sure that you have him come over before Saturday so that we can meet him before you go on your date,\" her mother says.\n\n\"It's not a date Mom.\" \n\nA little later Jessica is seated on the couch, her knees drawn up and her biology book resting on her thighs when the doorbell chimes.\n\nDr. Golden looks up from her tablet. \"Who could that be?\"\n\n\"I dunno,\" Jessica, says looking at the clock.\n\n\"I'll get it,\" Sarah announces hoping to her feet but Jessica stops her.\n\n\"You stay, I'll get it,\" Jessica tells her as she gets up. She flips on the porch light as she pulls open the door and is surprised at who's standing there. \"Patrick?\"\n\n\"Surprise.\"\n\n****\n\nWednesday\n\n\"Heard you took a couple of shots at practice yesterday Shadow,\" Patrick calls out as I approach Ms. Simpson's classroom.\n\n\"Yeah, how's that ass feel after I knocked you on it,\" Jamie adds with a laugh.\n\n\"Your concern about my ass is touching Jamie,\" I tell them as I get closer but they just laugh.\n\n\"It's not like you're going to do anything about it bitch,\" Jamie chuckles and I again feel the urge to launch my fist into his smug face but I just pass by and head to my seat.\n\nI'm surprised to see Jessica already in her seat and give her a smile. \"Good morning,\" I say giving her a smile.\n\n\"Can I ask you something?\"\n\n\"You just did,\" I jokingly answer.\n\n\"I'm serious,\" she states.\n\n\"Sorry,\" I apologize. \"What's up?\"\n\nShe takes a breath. \"What would you think if a classmate just showed up at your house without letting you know they were coming over? Also, they shouldn't even know your address but they got it without asking you.\"\n\n\"I guess it would depend on the classmate.\" I answer.\n\n\"Like if she were hot, it wouldn't be a problem,\" She asks sounding angry. \"Thanks, that helps a lot.\"\n\n\"Hey, that isn't what I said,\" I respond. \"Why don't you tell me what this is about so I don't piss you off even more?\"\n\nShe pauses for a moment; I hope to calm down and then answers me. \"Patrick showed up at my house last night after practice.\"\n\n\"Oh, that's... odd.\" I say trying to figure out the correct word to use.\n\n\"To say the least,\" She answers. \"I'm right that it's weirding me out aren't I?\"\n\n\"Since I'm fairly certain that he's not in any of your classes, yes it's weird. How'd he even get your address?\"\n\n\"He said he \"has a connection\" in the school office.\"\n\n\"Sounds pretty illegal,\" I tell her.\n\n\"Right,\" She agrees.\n\n\"Did it get worse?\"\n\nShe shakes her head. \"Not really I guess. He said he came by because he missed me at lunch yesterday and blah blah blah. My parents were not happy about it and made sure they stayed where they could see us the whole time.\"\n\n\"Sorry about that,\" I apologize.\n\n\"You didn't have anything to do with it.\"\n\nI start to tell her that it was because I was sorry she had to put up with him but Ms. Simpson calls the class to order so I let it drop. Jessica looks a bit more relieved now so I assume that everything is good.\n\n****\n\n\"I meant to ask you something else before class but kind of got derailed by the Patrick talk.\" Jessica says as we're walking together towards our second classes.\n\n\"Ask away,\" I tell her.\n\n\"Do you have practice tonight?\" \n\nI shake my head. \"Nope, Wednesday is our free night. I think it's because some kids have church and whatnot.\"\n\n\"So you're free tonight?\"\n\n\"I have no plans for the night other than homework.\" I answer.\n\n\"Would you be able to come over to my place to meet my parents? They want to meet you before we go to that weather thing on Saturday.\" She explains.\n\n\"Is that a great idea? I mean they're already pissed about Patrick and if I show up the next night...\"\n\n\"They know Patrick wasn't invited over and you have been asked to come over. Also I'm giving you my address, not some office sneak.\" She explains.\n\n\"I guess that would make a difference,\" I concede.\n\n\"Huge one,\" She answers as we reach her classroom.\n\n\"See you at lunch,\" I ask.\n\n\"Of course, I brought some good trades for today.\"\n\n****\n\n\"Give me your cell phone,\" Jessica states as we're sitting down to eat lunch the next day.\n\n\"That's not up for trade.\" I tell her.\n\n\"Just give it or no more pineapple feeding for you,\" She threatens.\n\n\"That was nice,\" I comment as I pull out my phone and pass it to her. Bobby and Roxie share a look of curiosity as Jessica pecks away for several moments before handing it back.\n\n\"My number and address is in there so go ahead and call me so I can get your info,\" She orders me.\n\nI open the contacts and find her entry. \"You just put \"Jessica,\" I tell her. \n\n\"You know another Jessica,\" she asks.\n\n\"No but I figured that you'd out in some joke name or something.\"\n\n\"Check the nickname,\" She says with a smile.\n\nI scroll a bit and blush slightly when I find it. This is not missed by Bobby or Roxie.\n\n\"Ooo, what did you put on there Tall Girl?\" Roxie asks.\n\n\"It must be good, look as his face,\" Bobby laughs.\n\n\"Just a private joke between my lab partner and me,\" She answers cryptically.\n\n\"Whoa, what did we miss,\" Shelly asks as she and Jody join the group.\n\n\"I don't think I've seen Jake so red before,\" Jody adds as she sits.\n\n\"Jessica got him again,\" Bobby says laughing.\n\n\"She's good,\" Roxie says, \"we could have used her freshman year when he was all tight lipped and shy.\"\n\n\"Him,\" Jessica asks pointing at me.\n\n\"He had his moments,\" Roxie says giving me a look before continuing, \"but he was a quiet guy for the longest time.\"\n\n\"Aw, I hate I missed that. The quiet would be so nice at times.\" Jessica teases.\n\n\"Are you planning on abusing me like this in front of your parents tonight?\" I ask.\n\n\"Wait, what,\" Shelly asks nearly choking on her grilled chicken.\n\n\"I told my parents about the extra credit thing on Saturday and since Jake's taking me, they want to meet him.\" Jessica explains to Shelly then turns to me. \"I'm nothing compared to my little sister. She got Patrick so pissed that I swear I could see steam coming out of his ears.\"\n\n\"Serves him right for coming over without permission,\" Shelly says. \"I still can't believe he did that.\"\n\n\"He's an asshole, of course he did that.\" Roxie states happily munching on her brownie.\n\n\"You still need to call me,\" Jessica reminds me.\n\n\"Not sure I want to now,\" I joke.\n\n\"Now he wants to be quiet,\" She shoots back. \"Just push the button lab partner.\"\n\n\"Yes ma'am,\" I nod and do as ordered. Her phone rings a moment later and she picks up just long enough for her phone to register my number then hangs up so she can start entering my info with the number. \"I expect an appropriate ring tone to be chosen for me.\"\n\n\"I'm making a mental note to download \"You Drive Me Crazy\" by Britney the first chance I get and you'd better choose carefully for mine mister.\"\n\n\"I'll be careful,\" I answer as Bobby begins to hum L. A. Gun's song \"I Wanna Be Your Man.\"\n\n\"What's that song Bobby,\" Jessica asks.\n\n\"Just a suggestion for Jake and I'm sure he'll tell you if he takes it.\"\n\n\"While I appreciate the suggestion, I'll choose something a little more appropriate for my lab partner.\" \n\n\"Can't use Blinded Me with Science,\" Jessica tells me.\n\n\"I... wasn't.\"\n\n\"Better cancel that download quick Jake,\" Jody teases and once again, everyone is laughing at my expense but at least I can laugh along with my friends.\n\n****\n\nAt six thirty four I'm standing on Jessica's porch with my finger depressing the doorbell button. She'd told me when we were leaving Art class that anytime between six thirty and six forty five should be fine. Inside I hear the chime sound then take a step back, readjust my backpack nervously and wait.\n\nA couple of seconds pass then the door opens and a man is standing there. \"Yes, can I help you?\" He asks.\n\n\"Um, Yes sir, is this the Golden residence?\"\n\n\"I gave at the office,\" he states and starts to close the door.\n\n\"Daddy, stop messing around,\" I hear Jessica say from behind him. He steps to the side and I see her smiling face.\n\n\"Hey Jess,\" I say giving her a relieved smile. \"Did I come at a bad time?\"\n\n\"No, you're right on time; Dad was just having some fun with you.\" She tells me.\n\n\"Nice one sir,\" I tell him.\n\n\"Come on in Jake, it's nice to meet you.\" He says extending his hand. I start to shake it but he stops and goes, \"No way!\"\n\n\"Okay Dad, enough with the jokes,\" Jessica tells him.\n\n\"So that rumbling was your car pulling up. Is she a '69?\" He asks and I realize that he's looking past me to my car.\n\n\"Yes sir, sorry about that,\" I answer. \"I try not to rattle the windows but she's always been like that.\"\n\n\"Man, I'd love to take a look at her.\" He begins but Jessica pulls him back.\n\n\"Can I do introductions before you drag him outside to ogle the lines of his car?\"\n\n\"Of course, sorry Jess, please come in and meet the family Jake,\" Mr. Golden states stepping back.\n\nJessica takes me by my arm, \"Come on Jake, let the gauntlet begin.\"\n\n\"Jake, I'd like you to meet my mom, Dr. Valerie Golden. She works in the emergency room at the hospital.\" Jessica explains. This is my little sister Sarah and you met my dad already. His name's Tim.\"\n\n\"I'll stick with Sir if it's all the same,\" I joke getting a small laugh from the adults.\n\n\"You don't look like a shark when you smile,\" Sarah points out.\n\n\"Sarah,\" Jessica warns but I chuckle.\n\n\"No, I guess I don't but I do that thing a dog does when you scratch behind my ears.\" I tell Sarah.\n\n\"Nu huh,\" She counters so I kneel down to her level and point to the back of my neck. Sarah hops down from the couch and immediately begins scratching behind my left ear so I start making a kicking motion with my right leg. She squeals with laughter then switches ears so I switch legs garnering about peal of laughter from the pint sized Jessica clone.\n\n\"You're funny,\" She determines. \"Wanna see my room?\"\n\nJessica laughs and tells her, \"In a little while Sar-bear.\"\n\n\"Deal,\" Sarah asks sticking out her hand to me, which I promptly shake.\n\n\"Deal,\" I tell her and she seems satisfied with that so I get back to my feet. \"It's nice to meet you Dr. Golden. You have a lovely home.\"\n\n\"Thank you dear, that's awfully sweet of you to say,\" Dr. Golden says giving me a warm smile. \"We just finished dinner, would you care for something? A drink maybe?\"\n\n\"I'm good for now but thank you,\" I answer.\n\n\"Please have a seat and make yourself comfortable Jake,\" Mr. Golden says. \"We just wanted to have a quick chat with you before your date Saturday.\"\n\n\"It's not a date, dad,\" Jessica says then looks at me. \"Back me up please.\"\n\n\"Not a date,\" I answer.\n\n\"It's an extra credit thing for Biology class.\"\n\n\"Not that I think Jess needs it but it comes in handy.\"\n\n\"Extra credit is always a plus,\" Mr. Golden states. \"So Jake, Jessica tells me that you're on the football team as well.\"\n\n\"Yes sir,\" I answer and before I can elaborate, Sarah chimes in.\n\n\"Football's boring. Can I show you my room now?\" \n\nWe all laugh and I get up. \"I'd be honored Sarah. Lead the way.\"\n\nShe takes my hand and leads me to the stairs leaving the rest of the family seated in the living room sharing smiles.\n\n****\n\n\"That's my teddy bear and that's my dolly,\" Sarah points out as she gives the tour of her room.\n\n\"Greetings Mr. Bear,\" I say shaking his stuffed paw then I turn to the doll and bow. \"Madam, it's an honor to make your acquaintance.\"\n\n\"Let's have a tea party,\" Sarah announces but Jessica pops her head in the door.\n\n\"Okay, Sar-bear, I need Jake back.\" \n\n\"Awww,\" Sarah sighs.\n\n\"Sorry sweetie but he and I have homework to work on and I promised dad that he could look at Jake's car.\"\n\n\"Sarah, how about I come back when we have more time and I'll gladly have a tea party with you?\"\n\n\"Promise,\" she asks.\n\nI hold out my pinky and she locks it with her own. \"I promise.\" As I'm leaving I again bow to the doll and nod towards the bear, \"I thank you for your hospitality and I shall see you both again soon.\"\n\n****\n\n\"That was really sweet of you,\" Jessica states as we sit at her kitchen table working on our individual homework assignments.\n\n\"I just felt like I was being rude if I gave you that pencil that I was chewing on.\"\n\nShe nudges my arm causing me to make an inadvertent mark on my paper. \"Serves you right,\" She giggles as I erase it.\n\n\"Yeah, I know. Sarah's a sweetheart, I just hope I didn't overstep.\"\n\n\"How so,\" She asks.\n\n\"I practically invited myself back over. That was presumptuous of me.\"\n\n\"Whoa, five dollar word usage. Wait until I tell Ms. Simpson about this.\" She jokes.\n\n\"Jessica, don't tease your friend like that,\" Dr. Golden scolds her. \"Jake, you are more than welcome to come back over and see Sarah; Jessica too if you want that burden put upon yourself.\"\n\n\"Mom,\" Jessica cries out laughing.\n\n\"Thank you Dr. Golden. I see where Jessica gets her sharp wit from.\"\n\n\"Oh she's made you a target huh,\" she asks.\n\n\"All in good fun, or at least that's what I tell myself so I don't cry myself to sleep at night,\" I tell her.\n\n\"You do not,\" Jessica shouts at me then turns to her mom, \"He does not. Look at how well he dishes it out; I know he can take it.\" \n\nDr. Golden laughs. \"It certainly sounds like he can.\"\n\n\"This is the loudest study session I believe I've ever heard,\" Mr. Golden says as he enters. \"Is anyone getting any work done?\"\n\n\"Sorry sir,\" I apologize.\n\n\"We're taking a much needed break daddy,\" Jessica tells him.\n\n\"They've earned it Tim,\" Dr. Golden assures him. \"You just want to them to hurry up so you can get a look at Jake's Mustang.\"\n\n\"Busted,\" Jessica laughs.\n\n\"Careful with this one Jake, I think she got the mind reading powers that her mom posses.\" He tells me. \"Now can we go look at that piece of artwork that's sitting in my driveway?\"\n\n\"We were just about done anyway,\" Jessica says. \"Come on Jake; dad's an architect so let's allow him to drool over your beast before you have to go.\"\n\n**** \n\n\"So how'd Jake go over with your parents?\" Shelly asks when Jessica calls her after Jake had left.\n\n\"Oh my god Shelly, where do I start,\" Jessica asks.\n\n\"Uh oh, what happened?\" \n\n\"He was such a huge hit that he got himself invited to come over whenever he wants.\" Jessica tells her.\n\n\"For real,\" Shelly asks.\n\n\"Yep,\" Jessica confirms. \"My little sister took him to her room and didn't want to give him back!\"\n\n\"I guess I should have warned you that kids love him.\"\n\n\"It was so cute,\" Jessica shares. \"He had her laughing within five minutes and got himself invited to a tea party.\"\n\n\"Of course he did,\" Shelly laughs. \"So you two are still on for Saturday then?\"\n\n\"Our quote, unquote date is still on.\"\n\n\"Sorry Jess but you know how it is, when a guy and a girl go someplace together it's going to be called a date.\" \n\n\"It's fine,\" She says. \"Jake and I both know that it's not a date and I learned long ago that I can't control what others think.\"\n\n\"Previous troubles in that area,\" Shelly asks.\n\n\"More like continuing troubles but I'm used to it. You guys being so welcoming to me really helped.\"\n\n\"Hey you fit right in, how could we not welcome you to the misfits?\"\n\n\"How did you guys all become friends anyway?\" Jessica asks.\n\n\"Yeah, we're an oddly assembled bunch for sure. Well Jake and I are related which you knew.\"\n\n\"You act like brother and sister half the time.\"\n\n\"Blame our parents. Our mom's are sisters and they're close so that put Jake and me together a lot. Jody came along in middle school and became my bestie. Jake brought in Roxie our freshman year and Bobby came along our sophomore year.\"\n\n\"Now I've wormed my way in,\" Jessica says.\n\n\"Wormed nothing, we dragged you in.\"\n\n\"I was lured in with lunch trading.\"\n\nShelly laughs. \"That's your story huh?\"\n\n\"It's the one I'm sticking too.\" Jessica answers then looks at her clock. \"Wow, it's getting late. I should be getting to bed.\"\n\n\"Same,\" Shelly says. \"I'll see you tomorrow.\"\n\n\"Night Shelly,\" Jessica says.\n\n****\n\nThursday\n\n\"Hey Jessica wait up a second,\" Patrick says catching her coming in the school door the following morning.\n\n\"What do you want Patrick?\" She asks not hiding her annoyance.\n\n\"What's going on with you and Shadow?\"\n\n\"His name is Jake and I don't see how it's any of your business.\" She answers.\n\n\"I thought you and I had something going on but last night I swing by your house and his car's there.\"\n\n\"So you were just going to drop in uninvited again huh,\" she asks. \"I told you not to do that again. My parents weren't happy about the other night.\"\n\n\"But it's okay for Shadow to be there though,\" He asks angrily.\n\n\"He was invited. My parents wanted to meet the guy that's taking me out on Saturday.\"\n\nPatrick is stunned into a brief silence so Jessica continues on. \"Look I've got to get to class. See ya.\"\n\n\"What's wrong with you?\" Jamie asks as he finds his pal standing in the hall looking dumbfounded.\n\n\"She's... she's going out on Saturday.\" He stammers.\n\n\"Congrats then,\" Jamie laughs patting his back. \"Hey, you gotta let me if the curtains match the drapes all right?\"\n\n\"It's not with me,\" He answers. \"She's going out with Shadow.\"\n\n\"Bullshit,\" Jamie laughs thinking it's a joke. \n\n\"His car was in her driveway last night so she isn't lying about it.\"\n\n\"Damn, I guess Ray was right about Shadow being ahead of you.\"\n\n\"Shut the fuck up. I've still got this, it just might take a little longer than usual.\"\n\n****\n\n\"So how bad did this bozo screw up when he met your parents?\" Bobby asks Jessica as she sits down on the stadium bleachers.\n\n\"I'm surprised they let me come back to school after meeting him.\" Jessica quips.\n\n\"Seriously,\" Roxie asks.\n\nJessica shakes her head. \"No, I'm only teasing him. He got himself invited back anytime he pleases.\"\n\n\"That's Jake all right,\" Bobby laughs.\n\n\"So does that mean that the date...\"\n\n\"Not a date,\" Jessica and I both say cutting her off then we share a laugh.\n\n\"Call it a... SPOT if you have to call it anything.\" I tell them.",
        "\"SPOT, why would I call it a SPOT,\" Bobby asks.\n\n\"Because it's a Strictly Platonic Outing, Thanks,\" I tell them.\n\nJessica laughs, \"You named it! I love it!\"\n\n\"Of course he did,\" Jody says as she and Shelly take their seats.\n\n\"I gotta text it to my mom right now, she's going to love it too.\" Jessica says excitedly.\n\n\"You just keep earning those brownie points don't you, cuz,\" Shelly whispers while Jessica's distracted with her phone.\n\n\"You know that he just can't help himself. It's who he is.\" Jody says with a giggle.\n\n\"Mom says that's the cutest thing she's heard,\" Jessica announces. \"She texting my dad right now to tell him about it.\"\n\n\"You're making me infamous with your parents.\" I tell her.\n\n\"You're making yourself infamous; I'm just reporting your antics so they know what all to expect once you come and pick me up Saturday for our SPOT.\"\n\n\"That's going to be all over school within the hour, I can guarantee it.\" Jody states with a laugh and I just sigh knowing that once word gets to Patrick I'll be looking at more flat tires in my future.\n\n****\n\n\"What in the hell is a SPOT?\" Patrick asks Jaime as the pair are seated together in History class.\n\nJamie shrugs, \"Was that what we were suppose to read about last night?\"\n\n\"Mr. Greene, please pay attention.\" Mr. Russell calls out.\n\n\"I am,\" Patrick calls back so Mr. Russell goes back to his lesson. Patrick turns to Staci, \"Do you know what I'm talking about?\"\n\nStaci shakes her head but she had already heard that whatever it is, it involved Jake and Jessica and she knew that keeping that news from Patrick was the smart choice.\n\nOnce class lets out, Staci is met by Ray and the two clasp hands before walking towards the next class.\n\n\"Hey, have you heard about this SPOT thing?\" She asks.\n\n\"Something to do with the Double J's is all I know,\" Ray answers using the simplistic code name the pair came up with over the phone last night.\n\nStaci nods then notices the pair walking ahead of them as usual. \"Should we ask them?\"\n\n\"They're right there if you want to.\"\n\n\"I'm not sure Jake would even speak to me.\"\n\n\"Let's find out,\" Ray says then pulls her slightly faster to catch up. \"Hey Jake, wait up.\"\n\nI turn and see Ray and Staci hand in hand walking up to us.\n\n\"Hey Ray, Staci, how's it going?\" I ask.\n\n\"Good, well pretty great actually,\" Ray answers holding up his and Staci's clasped hands. \n\n\"I heard a rumor that you two might be together.\" I say as Jessica stops with me and gives them a smile.\n\n\"The rumor mill is always hard at work,\" Ray says returning Jessica's smile.\n\n\"Oh sorry Jess, I'm forgetting my manners,\" I say. \"Ray this is Jessica. Jessica this is Ray. He's a tight end for the team.\"\n\n\"That true Staci,\" Jessica asks with a grin.\n\nStaci laughs and makes a show of looking at Ray's rear then answers, \"Mmm hmmm.\"\n\n\"Very funny you two,\" Ray says blushing slightly.\n\n\"I take it that you two know each other,\" I ask Staci as I point to Jessica.\n\nStaci nods, \"We've got French for fourth period together.\"\n\n\"Speaking of rumors, we heard one about you two.\"\n\n\"Any truth to them,\" Staci asks.\n\n\"We have a rumor going around about us,\" Jessica asks them then gets a devilish grin. \"I hope it's a juicy one.\"\n\nStaci laughs. \"I don't know about juicy until one of explains what this SPOT thing is.\"\n\nJessica laughs and gives me a look. \"Jody called it. Damn, the rumor mill does run fast here.\"\n\n\"You have no idea,\" I tell her.\n\n\"So is it like you two are going to a spot or...\" Staci asks.\n\n\"Not entirely. SPOT is something this guy came up to call this thing we're doing on Saturday.\"\n\n\"So it's not a date,\" Ray asks.\n\nI shake my head. \"It's a Strictly Platonic Outing Thanks, or SPOT since everyone seems to love acronyms.\"\n\n\"That is too great. You came up with that Jake?\" Staci says as she and Ray share a laugh.\n\n\"He did,\" Jessica answers. \"I had to text it to my mom because I knew she'd get such a kick out of it.\"\n\n\"Aw, that's so sweet,\" Staci says then pulls Ray's hand towards the stairwell. \"Come on, we can't be late. It was really great talking to you two.\"\n\n\"Nice talking to you too,\" I answer. \"See you at practice Ray.\"\n\n\"Count on it,\" He answers. I watch as he puts his arm around Staci's waist before they disappear up the stairs. \n\n\"They're cute together,\" Jessica says as we reach art class.\n\n\"Well look who showed up not talking about getting rid of one another.\" Coach Pennington says as we enter.\n\n\"Give her a second,\" I tell him.\n\n\"Shelly save me!\" Jessica cries out as she hurries to their table getting a laugh from the whole class.\n\n\"See,\" I point out as I take a seat.\n\n\"Not the first time I've seen a girl run away from you Jake,\" Coach jabs. \"Now, let's some pens out and we're going to go over inking today.\"\n\n****\n\nPatrick and Jamie are padding up for practice and talking.\n\n\"If you get another shot at Jake today, I want you to take it,\" Patrick tells him.\n\n\"Man, you don't have to tell me to do that. I love knocking that fucker on his ass.\" Jamie laughs.\n\n\"Cool, and hey I've got Coach to send Ray over with you guys. Lay his ass out too. He and Staci are getting way too close for my tastes.\"\n\n\"Love to,\" He states. \"He's been doing a lot that gets on my nerves so I'd love to lay him out.\"\n\n\"Leave him hurting, I want Staci to see how weak he is so she'll come running back to me.\"\n\n\"I got ya. Hey, if I pull off a two'fer think I get a bit of Staci? That little slut turns me on.\"\n\n\"If you get Jake and Ray I guarantee I can get her to wrap those long legs of hers around your waist. After I'm done with her of course.\"\n\n\"Sloppy seconds don't bother me none,\" Jamie laughs. \n\nOnce practice starts I'm sent over to work with the defense again but I'm surprised when Ray jogs up beside me.\n\n\"Ray, you're first team,\" I state. \"What's going on?\"\n\nHe shrugs. \"I dunno, Coach said for me to go with you.\"\n\nI glance back and notice Patrick smirking. \"Watch yourself, I think your old pal is up to something.\"\n\nRay glances back as well and nods. \"I think he's getting pissed at me about Staci. Not sure if he's more pissed because of me and her or you and Jessica.\"\n\n\"There's nothing going on with Jessica and me.\" I tell him.\n\n\"If you say so Jake,\" He simply says as we reach Coach Pennington.\n\n\"Okay let's line up, four three formation, outside stunt blitz, man to man coverage.\" Coach states then hands me the red cover up. \"Put it on but you already know what to do.\"\n\n\"Duck,\" I joke as I pull it on over my practice jersey.\n\nHe chuckles and hands me the ball. \"Bootleg to your right, you're free to run or pass once you're outside the pocket.\"\n\nI nod. \"On your go Coach.\"\n\n\"Set... Go,\" Coach calls out. I take a three step drop, pump fake a quick throw that freezes Tank who was already in the backfield. I spin and roll right my eyes scanning downfield looking for anyone that might be open. Ray looks open but the throw would be across the field. Too easy to be picked so I tuck the ball and run. I can see the glee on Jamie's face as he barrels towards me. I'm almost sad that I'm unable to see his face when I fake a step right and he comes up with nothing but air. I hear him hit the ground hard behind me as I take off downfield. I end up hopping out of bounds just as the corner back closed in.\n\n\"Damn Jake, nice run,\" He calls out as we jog back to the coach.\n\n\"Thanks man,\" I answer.\n\n\"Line it up, Nickel package and cover four.\" Coach Pennington calls out then says to the receivers and I, \"Five step drop, curl pattern for you receivers, Ray you slant over the middle.\"\n\nWe nod and get into formation. \"On your go Coach,\" I say.\n\n\"Set... go,\" He calls out.\n\nI drop back and when I plant my back foot I spot Ray break into the open. I launch the pass where it will hit him in stride. He snags the ball and gets a step before Jamie unloads on him. He hits him square in the chest then picks him and drives him into the ground.\n\nI hear Ray grunt as Jamie lands on him driving the air from his lungs.\n\n\"Fuck,\" I mutter as I head towards the pair with Coach Pennington right along with me. \n\nJamie hops to his feet with a laugh. \"Suck it up Ray.\"\n\n\"Give him some room,\" Coach Pennington says kneeling by Ray who hasn't moved. \"Ray, are you all right?\"\n\n\"Can't... can't catch... my breath,\" He struggles to get out.\n\n\"Give yourself a second,\" Coach Pennington tells him then turns to the rest of us. \"Go grab some water and take ten.\"\n\nFrom behind us we hear the cheerleader coach shout Staci's name. I turn and see her running towards us.\n\n\"Ray,\" She shouts dropping to her knees beside him.\n\n\"I'm... all right,\" He manages to tell her then turns to me. \"Help me... up.\"\n\nI look at Coach Pennington who nods and takes an arm. I take the other while Staci takes a step back to give us room.\n\n\"He did that on purpose,\" I state.\n\n\"Yep,\" Ray answers as he begins to sit up.\n\n\"What is going on with you kids,\" Coach Pennington asks.\n\n\"Kind of obvious isn't it coach,\" I ask nodding at Staci who is now helping Ray towards the water buckets.\n\n\"That doesn't explain Jamie trying to clean your clock the other day.\"\n\n\"You know they've never liked me Coach,\" I answer. \"They gotta get their shots in where they can I guess.\"\n\n****\n\n\"Caught your breath yet Ray,\" Patrick asks with a laugh after practice is over.\n\n\"Hard to do around that sexy girl coming this way,\" Ray answers as Staci walks up after showering from cheerleader practice.\n\n\"Hard to do what baby,\" She asks him.\n\n\"He was breathing all right until you strutted up cutie,\" I tell her.\n\n\"That was not a strut,\" She says giving Ray a quick kiss then she smiles at me. \"And who knew that you were such a flirt Jake?\"\n\n\"He's a pussy,\" Jamie states.\n\n\"And you're a goon,\" Staci snaps. \"Your whole little gang of cronies are assholes Patrick and don't think for one second I don't know that you told your goon to hurt Ray.\"\n\n\"If he can't take a little hit then he should get his little pussy ass off the field.\" Patrick states.\n\nStaci almost says something but then starts laughing.\n\n\"What's so funny,\" Jamie asks.\n\n\"You thought that if I saw Ray get hurt that I'd come running back to you. Newsflash Patrick, I've grown up and I wouldn't come back to you if you were the last boy in this school.\"\n\nShe takes Ray with one of her hands and mine with the other. \"Walk me out of here before I rip this asshole a new one for trying to hurt my boyfriend.\"\n\n\"Gladly,\" Ray answers.\n\n\"What he said,\" I joke.\n\nThey stop with me as we reach my car. \"You sure you're feeling all right Ray,\" I ask him.\n\n\"I want to go back there and kick his ass,\" Staci growls.\n\n\"Staci, we agreed that it's best to just let it go remember?\"\n\n\"But they tried to hurt you and on purpose.\"\n\n\"Nothing that a little tender, loving care from his cute cheerleader girlfriend couldn't cure,\" I tell her with a wink.\n\n\"That I can handle,\" She says then leans up and gives him a gentle kiss.\n\n\"Better already,\" Ray sighs once their lips part.\n\n\"You guys don't need an audience so I'll take my leave,\" I state as I hop into my car. \"Take good care of him Staci and Ray that goes double for you.\"\n\n\"You know it,\" He laughs.\n\n\"See you tomorrow Jake,\" Staci says giving me a radiant smile.\n\n\"If this pile of homework I've got doesn't do me in first.\"\n\n**** \n\n\"Are you sure you're okay,\" Staci asks as she and Ray are parked in her driveway.\n\n\"I'm sure my chest will be sore for a few days but I'm fine, really.\" He tells her. \n\n\"Maybe I can kiss you and make it better,\" She offers.\n\n\"Gladly,\" He says before her lips meet his. After only a few seconds her hot tongue slides across his lips. He sucks it in and after a couple of minutes of fogging up the windows Staci pulls back.\n\n\"Wow,\" She says smiling and taking a breath.\n\n\"Yeah wow,\" Ray answers trying to subtly adjust himself.\n\nStaci notices his swollen member tenting his pants and smiles. \"Can I help you out with that?\"\n\n\"What,\" He asks freezing in place.\n\nHer fingers trace lightly up his jean clad thigh causing him to moan under his breath. \"We haven't dated long enough for me to be doing this Ray,\" she sighs but doesn't stop her advancing fingers.\n\nHe reaches down and stops her hand as she closes it over his covered prick. \"Staci, you don't have to,\" He begins to tell her but moans when she gives him a squeeze.\n\n\"I promised that I'd take care of you,\" She whispers into his ear then takes a playful nip at his earlobe.\n\n\"Oh fuck,\" He utters.\n\n\"Not quite baby,\" She giggles. \"Take him out for me.\" \n\n\"Won't your parents wonder why your out here so long?\" He asks.\n\nShe shakes her head and begins to massage him through his jeans. Ray reaches down and manages to extract himself from his jeans. \n\nStaci takes him into her hand and begins slow lingering strokes.\n\nRay pulls her over and begins to kiss her passionately. She momentarily loses her rhythm while she kisses him back but quickly begins to stroke him faster. \n\n\"Gonna cum,\" He cries out pulling his mouth from hers.\n\nStaci covers his tip with her other hand and instantly feels his sticky hot seed pumping into it. She continues sliding her hand up and down him softly until he's empty.\n\n\"Better,\" She jokingly asks.\n\n\"Awesome,\" He answers then reaches across her for the glove box. He pulls out a handful of napkins and begins to clean his pleasure off her hand.\n\nStaci is touched by this simple display. The guys she would usually date would tell her she should have swallowed it if she didn't want to a mess. It always made her feel cheap and used but with this simple gesture she feels loved.\n\n\"Did I miss any,\" Ray asks looking over her hand.\n\n\"It was a lot but I think you got it all,\" She tells him then gives him a brief kiss. \"Thank you Ray.\"\n\nHe chuckles. \"I think that's supposed to be my line, beautiful. I didn't get to do very much for you.\"\n\n\"Next time,\" she promises him. \"I should be getting in.\"\n\n\"Uh huh,\" He says then pulls her in for another ardent kiss.\n\nShe's breathless when she pulls away a few moments later.\n\n\"Sweet dreams Staci,\" He says\n\n\"The sweetest tonight thanks to you,\" She assures him as she gets out of his car. She waits until his tail lights disappear before heading inside.\n\n****\n\nFriday\n\n\"It's like for like,\" I'm telling Jessica when Ray and Staci walk up to our lunch spot holding hands.\n\n\"Room for two more,\" Ray asks.\n\n\"Sure,\" Jessica answers before anyone else then continues arguing with me. \"There are no grapes in my fruit cap so it's different.\" \n\n\"Ray, Staci,\" I acknowledge then turn back to Jessica. \"It's all fruit so it's like for like.\"\n\n\"Uh, what's going on,\" Staci asks as she takes a seat.\n\n\"Jake is arguing with Tall Girl,\" Roxie explains.\n\n\"She means Jessica and Jake's losing like usual.\" Bobby adds with a chuckle.\n\n\"I am not,\" I argue.\n\n\"Yeah, ya are,\" Jessica giggles as she takes the grapes from me. I give her my sad eyes look and she groans. \"That should not be as effective as it is.\" She grumbles.\n\n\"He spent years honing them Jessica,\" Shelly shares.\n\n\"Just my luck that he's perfected them when I get here,\" Jessica sighs then looks at Staci and Ray. \"There's only one way I've figured to get him to cut this out.\"\n\n\"How's that,\" Ray asks.\n\nOn cue, I hand Jessica the fruit cup and she spears a piece of fruit out then feeds it to me. \"If he starts asking me to make airplane noises, I'm out.\"\n\n****\n\nAs lunch ends Roxie stops me as Jessica and I are leaving.\n\n\"I'll catch up Jess,\" I tell her. She looks confused but nods before turning to head into the building. I can't help watching her ass as she goes.\n\n\"You're such a perv, you know that,\" Roxie asks punching my arm.\n\n\"Sorry Rox, I'm trying not to be but it's hard.\"\n\n\"TMI Jake,\" She laughs.\n\n\"That's not what I meant,\" I blush.\n\n\"Uh huh,\" She answers. \n\n\"So what's up,\" I ask.\n\n\"That's what I was going to ask you Jake. I'm used to our little band of misfits then Jessica shows up...\"\n\n\"Tall Girl you mean,\" I joke garnering another punch. \"Ouch.\"\n\n\"You earned it.\" She states. \"As I was saying; first Jessica joins us, now Ray and Staci show up and we just welcome them in. Staci for fuck's sake Jake. Up until recently she was Patrick's little fuck buddy and all of the sudden she's with Ray and on the outs with Captain Wonderful and his goon squad. I'm not buying it.\"\n\n\"You're worried that this is all some kind of maneuver by Patrick to set us up?\" I ask.\n\n\"I wouldn't put it past him given his history where you're concerned.\"\n\n\"I doubt he would come up with something that clever besides I've seen first hand that they have it in for Ray this year.\"\n\nShe thinks about that for a minute then nods. \"All right, I'm still not sure that I believe in Staci's meteoric fall from grace but I trust you on this. Just know that if they stab us in the back I'm kicking someone's ass.\""
    ],
    "authorname": "AuroraIncident",
    "tags": [
        "football",
        "volleyball",
        "virgin",
        "blonde",
        "high school",
        "nerd",
        "bullies",
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/new-girl-in-town-pt-02"
}