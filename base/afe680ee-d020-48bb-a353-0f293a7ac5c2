{
    "title": "Secret Smiles and Three Little Words Pt. 36",
    "pages": [
        "Chapter 47 \n\nAlex dropped her keys on the table by the door and checked her stack of mail. Nothing important, so she dumped the envelopes in the trash can next to the table. \n\n\"Hey!\" she called out as she looked into the living room, she heard the bumble of bodies from the back of the apartment. She smiled and shook her head. Ooops. \n\nShe made her way to her bedroom and pushed the door open, her eyes furrowed at the scene. She walked in and turned in a full three hundred and sixty degree circle. Her entire room was now in neatly taped boxes. Her bed stripped of its sheets. There were things that didn't belong to her taking up corners now. \n\n\"Hey you,\" Lena said from behind her. \n\n\"What the hell is this?\" Alex asked. She was a bit shocked and angry that her room was packed. \n\n\"Well, I figured since you were getting married now, I could pack up your room,\" Lena said cautiously, hearing the anger in her friend's voice. \n\n\"We had talked about it,\" Alex agreed. \"But...\" \n\n\"But?\" \n\n\"Sorry,\" Alex said laughing at herself, realizing she was over reacting. \"It just took me a second to process it!\" She turned around and hugged Lena who smiled. \n\n\"Now,\" Alex said stepping back putting her scowl back on. \"Do you want to explain that?\" She asked sharply, pointing to the set of golf clubs in the corner. \n\n\"Yeah,\" Lena smiled. \"About those, they kinda belong to my new roommate.\" \n\n\"You've already rented my room?\" Alex gasped. \n\n\"Not exactly rented,\" Lena hedged, embarrassed. Just then Mike came up behind Lena and Alex burst into laughter as all the pieces fell into place. \n\n\"Humprf,\" Alex said to him with a broad smile. \"I see.\" \n\n\"Hey Miss Lasko,\" Mike said sheepishly. \n\n\"Miss Lasko?\" Alex growled. \"You are stealing my roommate, putting your shit in my room, and it is still Miss Lasko?\" She railed at him. \n\n\"Sorry Alex,\" he corrected. \"I'm going to make coffee, want some?\" Alex nodded and he kissed Lena's head and went away sheepishly. \n\n\"I see how it is,\" Alex said moving close to her friend. \"You like your roommates with a side of penis now, huh?\" \n\n\"Worked for you, didn't it?\" Lena pointed out. \n\n\"I'm calling slut,\" Alex teased as she crossed her arms across her chest. \n\n\"I'm calling kinky as fuck slut,\" Lena shot back mimicking her stance. \n\n\"Jealous?\" \n\n\"Uh, hell yeah!\" Lena laughed taking Alex in her arms. \"At least Mike has a good sense of adventure! Not as adventurous as your Gavin, but a hell of a lot better than my last clown!\" \n\n\"Don't tell me, I don't want to know your dirty little secrets,\" Alex said shaking her head. \"So, he is moving in?\" \n\n\"He has been living here for over a month now,\" Lena admitted. \n\n\"Get the fuck out of here? How did I miss that?\" Alex asked her. \n\n\"Probably because of all the wedding shit!\" Lena told her with a snort. \n\n\"God! Don't bring up the wedding!\" Alex growled. \n\n\"Now what?\" \n\n\"She wants a full orchestra!\" Alex said of Madelyn's elaborate plans. \n\n\"What happened to the DJ?\" Lena gasped. \n\n\"Yeah, you figure that out let me know!\" Alex laughed as they walked toward the kitchen where Mike was making coffee. \n\n\"Oh man, what does Gavin say about that?\" Lena asked as they sat down. \n\n\"He's gone to calling me Faust,\" Alex laughed with a shake of her head. \n\n\"He did warn you that you were making a deal with the devil,\" Lena reminded. \n\nAlex dropped her head to the table and shook it. \n\n\"Is it too late to elope?\" Alex asked. \n\n\"You are talking about a lady who knows the head of the Armed Services Committee, and the director of the CIA...do you think there is anywhere you can go where she won't find you?\" Mike laughed. \n\n\"Nobody asked you,\" Alex laughed with her head still down. \"Room thief.\" \n\n\"Just saying,\" Mike said as he set her coffee down near her. \n\n*** \n\n\"There you are,\" Madelyn called out as Alex crossed the foyer. Alex froze in mid-step. \n\n\"Charles! Save me!\" Alex begged the man as he stood by the door he just let her in. \n\nCharles smiled and pretended to tip toe away. \n\n\"Traitor!\" Alex laughed at his response. \n\nSince the wedding plans began, the two of them had been earning rebukes from Madelyn for their constant poking at her for the elaborate plans and the sudden changes of ideas. The two of them had been joking behind Madelyn's back about being a taskmaster and would lean in to whisper a joke, when Madelyn wasn't looking of course. \n\n\"You, my lady, are on your own!\" he said from the doorway to the Library. \"She has brow beat me enough today!\" \n\n\"I can see I'm going to have to really turn on my bitch,\" Madelyn warned them. Charles smiled at Alex, then left her there. Alone. \n\n\"Now,\" Madelyn began when Alex finally turned to her. \"I have someone for you to meet.\" \n\nAlex rolled her eyes as she followed Madelyn back into the sitting room she just came out of, dragging her feet as she went causing Madelyn to turn and glower at her. Alex giggled when she did. \n\n\"Trying my patience today?\" Madelyn asked her. \n\n\"Me?\" Alex asked in a laugh. \"Nawwww!\" Alex drawled. \n\n\"I'm not above putting you over my knee young lady!\" Madelyn threatened. \n\n\"Yes ma'am,\" Alex nodded. \n\nWalking into the sitting room she found an elegant woman in her mid-seventies sitting on the couch with a cup of tea in her hand. The woman was beautiful and graceful. She stood as Madelyn brought Alex to her. \n\n\"Alex,\" Madelyn smiled. \"This is Carolina Herrera. Carolina, this is Alexandria Lasko.\" Alex gently took the elegant woman's hand and shook it. \n\n\"It's a pleasure to finally meet you,\" the woman said to Alex. \"Madelyn has been raving about you all morning!\" \n\n\"Don't believe all she tells you, she is blinded by her love for me,\" Alex smiled, trying to tamp down what was surely high praise from Madelyn. \n\n\"Absolutely gorgeous!\" the woman said to Madelyn. She then turned her eyes back to Alex. \n\n\"Have we met before?\" Alex asked her. \"It seems like I have seen you before.\" \n\nMadelyn laughed then covered her smile with her hand. \n\n\"I would hope you would know this woman!\" Madelyn chuckled, shaking her head. \"Carolina is the preeminent designer of women's clothing.\" \n\n\"She has dressed women from the likes Jackie Onassis to First Lady Michelle Obama!\" Madelyn said with a shake of her head at Alex's naivet\u00e9. \"Now, she is going to add you to that list.\" \n\n\"What?\" Alex asked as Carolina began to walk around Alex measuring her up with her eyes. \"What are you doing Madelyn?\" \n\n\"We seem to be at odds over your dress,\" Madelyn said watching her friend look Alex over. \n\n\"I know,\" Alex said shifting her eyes from Madelyn to the world famous designer who was now touching her and picturing something in her mind. \n\n\"Well, I've asked Carolina to come and help us, she is going to design you a dress,\" Madelyn shrugged. \n\nAlex put her face in her hands and let out a short scream of frustration. Her wedding to the man of her dreams went from a simple vineyard wedding, to a subtle backyard marriage to what has now turned into a wedding fit for royals! Full orchestra? Catered meal for over 300? Now a world famous designer to custom make a dress for her? Holy shit! \n\n\"Real lady like,\" Madelyn scolded. \n\n\"Trust me,\" Carolina smiled. \"I deal with temperamental super models all the time! I can deal with a little fit now and then!\" \n\n\"Madelyn!\" Alex complained. \"This is too much!\" \n\nMadelyn said nothing, instead she began drilling holes into Alex with her eyes. \n\n\"Gavin is going to kill me,\" Alex grumbled as she dropped her head, recognizing that look after weeks of getting it. It meant there would be no arguing her way out. \n\n\"Better,\" Madelyn smiled as she realized Alex had just accepted her fate. \"But stop slouching so Carolina gets the full and accurate picture.\" \n\nAlex lifted her head and looked at the fashion designer who smiled sympathetically at her. \n\n\"She is absolutely gorgeous,\" Carolina said to Madelyn. \"I hope you aren't shy!\" She smiled as she turned her eyes back to Alex. \n\n\"What?\" Alex sighed after she lifted her head disappointedly. She looked to her left to see a man get up with a camera. She shook her head. \"Really?\" \n\n\"It's either him or come to New York so you can stand in my office while I design your dress,\" Carolina said firmly. \n\nAlex closed her eyes, now she could see why Carolina and Madelyn were friends. Same temperament. Forceful and demanding. Obviously traits needed to become powerful women of stature. \n\n\"Take a few of her like this and a few of her in just her undergarments,\" Carolina told the photographer. \n\n\"What?\" Alex asked again, her face draining of color as she heard the statement. \n\n\"I have to know your whole body,\" Carolina told her. \"If I'm going to put you in one of my dresses, I need to know every nuance, every curve and every deliciously beautiful angle.\" \n\n\"But you want me to stand in my underwear?\" Alex gasped looking at the strange man with the camera. \"With a total stranger?\" \n\n\"Yes,\" both Madelyn and Carolina said at once, showing there would be no denial of the demand. Alex looked to the ceiling and blew out a nervous breath. There was no way she could just take off her clothes! She looked to both Madelyn and Carolina, both had the same determined look. \n\n\"Well,\" Alex said shaking her head. \"This won't be awkward!\" Alex said with a huff as she pulled on the back of her dress opening it to let it fall into a puddle around her ankles. \n\n\"Absolutely stunning!\" Carolina raved. \"I could put you on a catwalk anywhere in the world and you would hold your own!\" The woman said with a broad smile as she drank Alex in. \n\n\"Oh God!\" Alex said to the ceiling as she stood there in her lacy garments. She was glad she put underwear on this morning with her garters and stockings, otherwise this would have been really revealing! \n\n\"Do you plan on wearing something as elegant and sexy on your wedding day?\" Carolina asked coming to inspect her sexy underwear. Alex just nodded as her face flushed a deeper crimson in embarrassment with every click of the shutter on the camera.  \n\n\"I will design something special then, to go under your dress,\" Carolina smiled as she brushed Alex's skin and stepped away. \"Anytime you need a job, let me know, I would love to drape you in my designs!\" \n\nCarolina spent the next forty five minutes directing Alex into several positions as the photographer took pictures from every angle imaginable. After the initial embarrassment of standing in her underwear in front of total strangers, one of whom was a man, Alex began to enjoy the attention being doused on her. The gushing praise the two women would rave with as they discussed her while she stood there. They sipped their tea and discussed various ideas of design they could put Alex in. \n\nCarolina would come to her from time to time and mention something to Madelyn who looked and nodded as she watched Alex pose and move about under Carolina's direction. \n\nAfter the photo session, Madelyn showed the fashion designer out and came back with a triumphant smile. Alex was laying on the couch, her feet up on the cushions her face buried under a pillow in humiliation as she thought fully about what she had just endured. \n\n\"I can't believe I just took my clothes off in front of perfect strangers!\" Alex whined. \n\n\"You were absolutely stunning,\" Madelyn assured her. \"You heard Carolina, she could put you on a catwalk anywhere in the world!\" \n\n\"How much did that little session cost you?\" Alex asked lifting her head from beneath the pillow. \n\n\"Carolina and I are good friends, so I got the discounted rate!\" Madelyn assured her. \n\n\"Yeah, but I bet that is still more than the average person makes in a year!\" Alex guessed. \n\n\"For certain,\" Madelyn smiled. \"But I'm not your average person!\" Madelyn said proudly as she left Alex to wallow in her embarrassment. \n\n\"That ain't no shit!\" Alex said shaking her head as she buried it back under the pillow. \n\n*** \n\n\"How did the day go at Madelyn's\" Gavin asked with a wicked and telling grin. \n\nAlex let her fork fall to the table with a growl. \n\n\"That well?\" Gavin teased. \n\n\"That woman is impossible!\" Alex growled. \"Sir.\" \n\n\"I warned you,\" Gavin chuckled as he sipped his wine. \"My beautiful Faust.\" \n\n\"You could have given me that warning before I made the deal!\" Alex said picking up her fork angrily. \n\n\"You know, some things I assume are common sense,\" Gavin continued to tease. \"Like poking a big bear with a stick...do I need to tell you not to do that?\" he laughed as his phone rang. \n\n\"There are days you can be so charming,\" Alex smiled at him falsely. \"Today isn't one of them!\" \n\n\"Yes Maddy,\" Gavin laughed into the phone as his eyes sparkled at her in laughter. \"No, she is still angry.\" \n\nHe looked to Alex who was shaking her head and having a conversations with herself silently. Her lips moving, but no sound coming out. It appeared she was arguing with her invisible shoulder angel/devil combo, as she turned her head to talk to one silently, then the other with a sarcastic shake of her head. \n\n\"Really?\" Gavin's change in tone caused her to snap her head up and look at him. \"Tell that photographer I would like copies of those!\" \n\n\"Gavin! Don't you dare!\" Alex threatened as he got up and walked away from the table. \"You don't need pictures you have the real thing!\" \n\nGavin laughed all the way to the office. \n\n\"Asshole!\" Alex gasped softly from the table. \n\n\"Asshole...Sir! That will be twenty!\" Gavin called out from the office. This caused Alex to laugh as she didn't expect him to hear her. \n\n*** \n\nAlex laid on the bed, her body naked, her face down on the soft sheets. Her hands bound together and tied to the headboard. Her legs spread and tied individually to the side posts of the footboard. \n\nGavin ran his lips gently over her skin, causing a cascading wave of goose bumps to radiate from his lips across her accepting flesh. She shivered when the pleasure bumps hit the edges of her body. \n\nHis hot, soft tongue eased out of his mouth and followed her spine lower. Starting from her shoulder blades, down. His magical hands gently running his fingertips over her hot skin. He had already made her cum multiple times, her body hot from her throes of orgasms. Now he slowed the pace down. From her rocketing elation of bliss to a slow tango of pleasurable kisses from his skilled lips. \n\nHer hips raised when he hit her waistline, her firm ass lifting off the mattress to invite him in. He smiled when she did this. Knowing she was wanting to please him in every facet of their lives. Gently tempting him with a most delicious treat. How does he explain to her that she has accomplished pleasing him without even getting undressed? \n\nHis trailing hands gently took a half moon each and eased her apart. Her delta of pleasure revealing all to him. His tongue continued to taste her flesh. To taste her perfume, her sweat. Her. He reveled in its entirety as it saturated his tongue.  \n\nHis tongue found her slightly gaped anus, and he ran his tongue around it. The rippled edges smoothing out as he pulled her cheeks further apart to allow himself access into her most taboo recesses. She gasped as he tongued her there. Her hands pulling on the restraints as her pleasure took over her body. \n\nPulling his tongue from her caused her to whimper slightly. He allowed his hands to release her cheeks and his finger tips to follow the mid line of her ass down and under her, his fingers gently brushing the lips of her glorious sex causing her to jolt with convulsions as the sensitivity of them were already heightened from her repeated orgasms. \n\nHe laid on his stomach, flat, in between her legs. His hands slowly sliding up her legs, across her waxed sex and cupping her hips from underneath. He sat there admiring the view, her completely hairless sex in front of him. Her lips engorged with blood, her holes slightly open, inviting whatever invasion he had in mind. Her sex glistening with her cum. \n\nShe waited with her eyes closed, feeling his hot breath on her most sensitive and most private of areas. Her legs began to tremble in anticipation, her breathing quickened as only Gavin could make her do. \n\nHe started by barely touching her with his tongue, the very tip on the very edges of her, causing her to gasp as her whole body began to match her legs. The shaking of excitement causing her to smile. God this man knew what the fuck he was doing! He knew just how to touch her, just how to kiss her. He knew things that even she didn't know about her own pleasure until he showed her. He was an encyclopedia of knowledge on how to please a woman! \n\nAfter a few moments of gently touching her outer sex, he pulled hard on her hips and drove his face forward burying his tongue in her, his nose pressing against her anus to double the feelings. It wasn't intentional, his nose, it just seemed to be right where her taboo was when he buried his tongue deep within her. Yet another sign from God himself, that this man, was made just for her she assumed. \n\nHe ravaged her, leaving no recess unplundered by this tongue. Her cum gushing out of her to show him just how satisfied she was. Her body releasing its pleasure for him to lap up before diving into her ass. His tongue reaching deep within her as she pressed back into his face, pulling his tongue deeper, but she wanted him even deeper! \n\nBack and forth he went, from her sex to her ass, then back again. Bringing her orally to Nirvana time and time again. She stopped counting the number of orgasms altogether, she didn't care. Now it was only about losing each other in their pleasure. \n\nHe began to trail his tongue back up, leaving her sex moving up her body slowly, with one last dive into her tight anus before swirling it around to leave to follow the split in her magnificent ass. \n\nBack across the small of her back, up her spine, returning from where he came. Only this time, he let his cock fall in between them, his large head slipping easily into her wet and sticky sex. With one firm thrust he buried himself deep within her. \n\n\"Fuck yes!\" she gasped as he filled her. \"That's what I need Sir!\" \n\nHe said nothing as he used his lips and teeth to nibble on her delicious flesh. He could eat her in every way imaginable right now. She always brought this out of him. This desire to possess her wholly. To swallow her completely. Body, mind and soul. \n\nHis hand firmly pulled her head to the side to reveal half her beauty. Her profile. He suckled on her ear, his hot, heavy breath filling it with his passion. It caused her to convulse as yet another orgasm washed from her. Her mouth opening and hanging ajar as her orgasm controlled her body muscles. \n\nHer face reddening beautifully as he watched her for a moment as her orgasm ebbed. He took the opportunity to cover her mouth with his and his tongue to dance with hers. As his fingers wrapped tightly in her auburn locks to keep her from moving away, like she would if she could. \n\nShe screamed happily into his mouth as she came hard, the sloshing of her sex telling them both she had squirted. She never used to do that, she remembered. Only with him did she find that not only was she capable of such a powerful orgasm, but it had become the norm. He had told her it was because she was finally at ease with her lover, no holding back, no reservations. Completely submitted to her pleasure. \n\nHe then hooked his arms under her and cupped her shoulders from underneath. He pulled her down and shoved his hips up, driving his rock hard cock deep within her over and over. His groin slapping her cheeks slowly at first, but powerfully. The sound of their skin striking making them both smile. Gradually he increased his speed. Faster and faster, stronger and stronger. \n\nHer body rocking back as best she could, driving back into him, meeting his every thrust. Gaining speed when he did. Soon it was like a jackhammer pounding into her, the only time she didn't thrust back was when her orgasm locked her into a fit of strained, paralyzed muscles, only released when her cum washed out around him. She then would fall right back into rhythm with him, like she had never missed a beat. ",
        "She watched from the corner of her eye. She saw it building on his face and she reveled in it. \n\n\"Yes,\" she said in between grunts of her thrusts. \"Give it to me Sir! Please! Give it to me! Fill me with your cum!\" \n\nWith a growl and a plant of his mouth over hers he spilled into her, his body flooding hers with hot shots of passion. His cock bucking against her soft folds of her sex, while her sex greedily gripped and milked every drop of him. He laid his body across hers, their breathing sharp and rapid. Matching their lovemaking. \n\nHe released her very reluctantly, and she laid there while he gently rubbed her body. Her muscles loosening as he gently massaged away her fatigue brought on by her mind numbing orgasms. It didn't matter that she was working out daily now. Trying to lose that last ten pounds before the wedding. Ten pounds he argued she didn't need to lose. Her body still felt completely exhausted after each and every one of their sessions. He just completely wore her out! \n\nNow she laid there as he gently kneaded the stiffness away. His lips still hovering on her skin from time to time as he couldn't stop tasting her it seemed. She let him. Without a complaint or care in the world. \n\n*** \n\nChapter 48 \n\n\"Hey Dad,\" Livy smiled as she opened the door fully to let him in. \n\n\"Hey baby,\" he smiled kissing his daughter on the cheek. \"There she is!\" Al called out as Nora came to him in a dead sprint then leapt into his arms. \n\n\"Grandpa!\" she screeched through the air. \n\n\"How's my girl?\" he asked hugging her. \n\n\"Great!\" Nora exclaimed as she bounced in his arms. \n\n\"Poker again tonight?\" Al asked looking at Livy. She nodded. \"I can't believe you are shearing the shepherds!\" He mocked about her constant victories on Thursday night against the religious leaders of the town. \n\n\"Hey, I'm on a mission from God!\" Livy teased. \n\n\"Or Satan,\" Al joked. \n\n\"Now you sound like Mom!\" Livy warned with a playful smile. \n\n\"Ouch!\" \n\n\"How's everything going there?\" Livy asked carefully trying to mask the adult question from her daughter. \n\n\"The same,\" Al frowned. This made Livy shake her head. Her parent's marriage was still on the rocks then. \"Don't you worry about it!\" Al demanded, lifting her chin with his finger. \n\n\"How could I possibly not worry about it?\" Livy gasped. \"Everything I touch if falling to pieces! I'm worse than Schleprock!\" \n\n\"This is not about you,\" Al said firmly. \"This is all about her.\" \n\n\"Dad!\" Livy shook her head. \n\n\"This is not your doing,\" Al said again. Livy wiped her tear away before Nora saw it. She shook her head to disagree with him. \n\nShe closed the door after they left and rested her forehead on the wood. She had ended her marriage, because of it, her parents were now in constant fight mode. Her older sisters were shunning her. They had not spoken to her in weeks, they were not returning her phone calls or her invitations for dinner or lunch. Neither of them had even come to see her apartment. \n\nHer mother hadn't spoken to her since the night she kicked her out of the apartment. And if that wasn't enough, her feelings for her priest were not waning as she hoped. If anything they were growing. He knew it too, she could tell by the guilt on his face as he tried to just be her spiritual advisor. Each and every innocent touch had them both thinking thoughts they shouldn't be having. \n\nShe thought about just leaving the poker games, limiting her interactions with Father Jack with just Mass on Sunday, but each time she would spend the first part of the week convincing herself to stay away, only to go to Wednesday night Catechism classes and see him there, which blew her plans to stay away to smithereens. \n\nIf there could be anything that could possibly put more stress on her she couldn't think of it! Her world was a fa\u00e7ade! She smiled and assured Jack she was fine, when she wasn't. She smiled when her father would ask if she was ok about her sisters, she wasn't. Then when Jack asked about her parents she smiled the lie to him as well. When Alex would ask about her new life in the Catholic Church, she would lie there as well. \n\nHer life was one big mess, and she had no idea on how to clean it up. She had no idea how move amongst the problems of her life. It was bearing down on her like an avalanche of regret. One decision seemed to wreck her entire life. Maybe this was actually a punishment from God for breaking her vow. Perhaps Jack had it wrong. Father Jack she reminded herself. She sat in front of the door and cried. \n\nShe picked up her phone and called Alex. She needed a pick me up, and Alex seemed the only one who could provide it. \n\n\"Hello?\" Gavin's voice came over the line. \n\n\"Hey Gavin,\" Livy smiled at his deep voice. A man who made her sister smile. \n\n\"Hey Liv, what's wrong?\" he asked immediately. \n\n\"What makes you think something is wrong?\" Livy asked. \n\n\"Your voice,\" he said firmly. \n\n\"You can tell something is wrong by two words?\" Livy asked, astonished. \n\n\"Yes,\" he said simply. \n\n\"How is Alex doing with the wedding stuff?\" Livy asked trying to dodge his concern. \n\n\"I figure Maddy will have her in an asylum before it is all said and done,\" Gavin told her with a chuckle. \"Now, stop changing the subject...what's wrong?\" \n\n\"Impossible men,\" Livy smiled. \n\n\"We are,\" Gavin agreed. \"How can I help?\" \n\n\"I don't think there is anything you can help with,\" Livy said with a sigh, wiping the tear away. \n\n\"Livy,\" Gavin began slowly. \"I know you still think the problems you have are your doing, but they are not! You deserve happiness. One day you are going to find a man that makes you smile with the mere mention of his name. That's what you deserve.\" \n\n\"What if I find this illusion of a man you speak of and he's taken?\" Livy asked as she let her head drop back with a thud to the door. \n\n\"You mean Jack?\" Gavin asked carefully. \n\n\"What did my sister tell you?\" Livy asked her face draining. \n\n\"Nothing,\" Gavin smiled. \"I have talked to you enough to know you have feelings for him. It is obvious to me, because I see your sister talk about me the same way. The same tone of voice.\" \n\n\"What kind of horrible person am I that I have eyes for the town priest?\" Livy asked him in disbelief. \n\n\"It makes you human,\" Gavin corrected. \"Not horrible. You can't stop love, it's an emotion beyond control.\" \n\n\"So I'm damned?\" \n\n\"Not at all,\" Gavin disagreed. \"I'm just afraid you might get hurt again if he chooses his service to God over you. Is that what you want?\" \n\n\"No. What I really want, is to become numb, to stop thinking, to stop caring,\" Livy told him. \"Most of all I want to stop crying! I want to become the lie I have painted for my daughter! To stop crying in front of her!\" \n\n\"Don't you do that!\" Gavin growled. \"This world has enough monsters, enough anger, enough racism, enough hatred and enough apathy! What it doesn't have enough of is humanity! Don't stop being human! Crying means you are human, that you need help, that you have a heart!\" \n\n\"Thanks Gavin,\" Livy smiled. \"I'm so glad my sister found a good man!\" \n\n\"Who is this man you speak of?\" Gavin mocked angrily. \"I shall have his head on a platter!\" \n\n\"You goof,\" Livy laughed. \"If you weren't so perfect for each other I would feel sorry for you having to marry my sister!\" \n\n\"See, just like a man,\" Gavin teased. \"I'm lying and cheating to steal the perfect woman from mankind!\" \n\n\"Speak of the Devil,\" Gavin chuckled. \"Here is Faust.\" There was a shuffling as he handed the phone to Alex. \n\n\"Hey!\" Alex greeted happily \n\n\"Faust?\" Livy laughed. \n\n\"Don't ask!\" Alex growled. \n\n\"Oh no! That has to be explained!\" Livy demanded. Her heart lightening with the story Alex spun and the words Gavin said to her. A temporary reprieve from the avalanche of guilt she was buried in almost constantly now. \n\n*** \n\n\"Hey Dad!\" Livy smiled as she watched her father and Nora come up the sidewalk. \"Hey Baby!\" Livy said squatting down to take her daughter in for a hug. But this hug was different. Nora didn't wrap her arms around her mother like she normally did. She didn't squeeze her. \n\n\"You ok?\" Livy asked, her face showing her concern. Nora didn't answer except with a single nod. Livy looked up to her father who shrugged as he watched the scene. \n\n\"Well, guess what? I won you some more money for you college fund!\" Livy said excitedly as she gently shook her daughter's hips. \n\n\"Thanks Mom,\" Nora said with little emotion. \n\nLivy felt her daughter's forehead, checking for a fever, because this was not the normal Nora behavior. She hoped she wasn't coming down with some sort of bug. \n\n\"You feeling ok?\" Livy asked her daughter again. \n\n\"Yes Mother, I'm fine,\" Nora said staring at the ground. \n\n\"Ok baby,\" Livy choked out. The robotic name 'mother' caused her skin to crawl. She had never heard Nora call her that. \"Why don't you go inside and brush your teeth and get ready for bed.\" \n\nLivy watched over her shoulder as her daughter maneuvered around her and went inside. She looked up at her father and stood. \n\n\"I don't know,\" Al said, answering Livy's questioning eyes. \"She was fine all night!\" \n\n\"Then what's up?\" Livy asked him. Al shrugged. \"Something happened! That's not Nora's normal behavior!\" \n\n\"I agree,\" Al nodded. \"She was that way when she came home from getting ice cream with Marylyn.\" \n\n\"Did Mom say something happened?\" Livy asked holding her stomach. \n\n\"No,\" Al said softly. \"I just...\" \n\n\"What?\" Livy questioned when he stopped talking. \n\n\"Nora was fine, her normal rambunctious self...then she goes for ice cream and comes back...well that!\" Al said pointing to the open door that Nora disappeared through. \n\n\"But Mom didn't say anything?\" \n\n\"No, she didn't,\" Al affirmed. \"Look it's probably nothing.\" Al said knowing they both knew that was a lie. The energetic girl could not be calmed down without an animal tranquilizer. She ran constantly. She talked constantly. She was always 100 miles an hour until sleep hit her. \n\n*** \n\nLivy hardly slept, the concern for Nora kept her walking in and checking on her in the night. When the alarm went off the next morning, Livy drug herself out of bed and into Nora's room only to find the girl already up and dressed. \n\n\"You're up!\" Livy tried to smile to keep things normal. Nora nodded. Dammit, Livy snarled to herself when her normal chatter box daughter didn't talk. \"Have you bathed?\" Livy asked her. Nora shook her head. \n\n\"Baby you can't go all day without bathing, back to the bathroom and let's take a quick bath,\" Nora nodded and pushed away from the table. \n\nRunning the bathwater Livy checked the temperature of the water. When she turned she gasped. On Nora's tiny arm were distinct bruises, just above the elbow. \n\n\"Nora!\" Livy barked. \"What happened to your arm?\" Livy was on her in a flash as Nora tried to cover up the purple bruises with her small hand. \n\n\"Nothing,\" Nora lied. \n\n\"Absolutely not!\" Livy told her pulling her hand away. \"Where did you get these?\" \n\nNora shook her head and shrugged. \n\n\"Nora!\" Livy said exasperatingly. \n\n\"It's ok Mommy, she didn't mean to!\" Nora tried to defend. \n\n\"Someone did this to you?\" Livy asked, the air leaving her lungs with the statement from her daughter. Livy's lip trembled and her stomach twisted. Nora nodded. \"Who?\" \n\n\"Daddy's girlfriend,\" Nora whispered. \n\n\"What?\" Livy was beside herself now. \n\n\"Are you mad at me Mommy?\" Nora asked her with tears filling her eyes. \n\nLivy took her shaking daughter in her arms and held her tightly. The tears running down her face, the fear being replaced with anger, then remorse. \n\n\"No, absolutely not!\" Livy assured her. \"You have done nothing wrong!\" She kissed her daughter multiple times and found Nora crying too. The two just sat on the floor of the bathroom holding each other, sharing their tears and their comfort with one another. \n\n\"I need you to tell me the truth, I want to know what happened,\" Livy said after a good cry. \n\nNora explained what had happened, Livy seethed with every word her daughter said. She hoped that the anger that was coursing through her was not coming out and worrying her daughter but there was no way to keep the anger back. No way, no how! \n\n*** \n\nLivy nearly blasted through her parent's front door. Her anger boiling over and spilling out, destroying everything she touched. \n\n\"Where is she?\" Livy growled at her father who could only look to his daughter stunned and confused at the anger exploding from her. \n\n\"Your mother is in the kitchen,\" Al said looking upon Livy as if she would attack him at any moment. Livy blew by him headed for the kitchen and Al hurried to catch up with her. Slamming through the swinging door causing it to hammer the counter behind it causing Marylyn to jump at the sudden explosive sound. \n\n\"What did I say?\" Livy yelled, her face red with anger. \n\n\"What?\" Marylyn mumbled as she saw the rage in her daughter's eyes. \n\n\"What did I say?\" Livy repeated her voice cracking with tears and anger. \"I said my daughter was not to be taken over to Don's house! I can't believe you directly disrespected my wishes!\" \n\n\"I...I...,\" Marylyn began to stutter, shocked at the rage. \n\n\"That cunt hurt my NORA!\" Livy raged vehemently. Stalking her mother around the table which her mother was trying to keep between them. \"I fucking said not to take her there, but you let her get hurt! You did this to her!\" Livy tossed her phone to the table with a clatter as Al took his daughter in his arms to keep her from attacking her mother. \n\nMarylyn carefully picked up the phone and saw the picture on it, the distinct bruises easily seen. \n\n\"No,\" Marylyn tried to say in defense. \"This must have happened sometime when she was playing!\" \n\n\"Are you out of your fucking mind?\" Livy screamed as she struggled against her father's hold. The defense her mother tried to come up enraging her, an attempt to blame Nora. Marylyn looked to Al who was doing all he could to keep Livy at bay. Suddenly Livy collapsed to the floor sobbing as Al fell to the floor with her. \n\n\"How could you?\" Livy kept repeating as Al held her tightly. \"You let my Nora get hurt! You fucking bitch! You fucking bitch! You hurt my Nora!\" \n\n\"I didn't, I didn't!\" Marylyn defended looking at the picture as it blurred in her tears. \n\nThe scream filled the kitchen and Livy was gone from Al's grip as she suddenly changed direction and ran from the house. Al tried to go after her, but Livy was gone with a bark of the tires. \n\nAl came back in and glared at his wife as she stared at the phone while she sat at the table. \n\n\"What did Livy tell you to do?\" Al asked her. His arm screaming in pain. His chest crushing in on itself. \n\n\"She said Nora wasn't to see her father,\" Marylyn whispered. Al clutched his chest as he struggled with his breath. \n\n\"Why did you take her then?\" Al growled with raspy breath. \n\n\"We raised our daughter better than that!\" Marylyn tried to defend her actions. \"He loves his daughter, he wants to see her!\" \n\n\"Fuck you,\" Al hissed. \"Livy is in control of Nora's future! Don wanted nothing to do with her, he only wanted that little bitch of whore he knocked up!\" \n\n\"I'm sorry!\" Marylyn tried. \n\n\"You haven't even scratched the surface of being sorry!\" Al threatened. His body becoming rigid as he grabbed his keys from the counter. \n\n\"Where are you going?\" she asked him. \n\n\"After our daughter, where else would I go?\" Al screamed at her suddenly causing her to jump. He turned and slammed his hand through the door. \"That's it, you had better hope Livy forgives you! If not, this marriage is over! I can't believe your stupidity and pride allowed our little Nora to get hurt! I will never, ever, forgive you for that!\" \n\nMarylyn let her head fall to the table as she sobbed. \n\n*** \n\n\"Marylyn,\" Don's face was as surprised as his voice. \n\n\"Where is she?\" Marylyn barked. \n\n\"She's gone,\" Don said dropping his head. \"She told me today, the baby isn't mine, and she left me for the real father.\" Don dropped the bombshell. \n\n\"What?\" Marylyn gasped. \n\n\"She lied to us,\" Don said as they stood there in the doorway. \"It belongs to another man.\" \n\n\"Oh my heavens!\" Marylyn said her tears falling from her eyes. \n\n\"My whole life, a shambles,\" Don cried. \"I lost Livy, Nora and now her.\" \n\nMarylyn looked up at him. \n\n\"Come with me,\" Marylyn demanded. \"We need to see Rev. Sellers!\" \n\nDon nodded and followed Marylyn to her car. He couldn't think anymore. He couldn't believe he had destroyed everything for a woman who didn't love him and a child that wasn't his. \n\n*** \n\nThe social worker came out with the plain clothes police officer. Livy stood as did Al who finally caught up with Livy as she sobbed at a stop light with people blaring their horns at her as she cried while the light was green. She just couldn't go anymore. \n\n\"How is she?\" Livy asked softly. \n\n\"She's fine, she told us everything,\" the social worker said sitting the mother back down. \"She overheard a phone call between your ex-husband's fianc\u00e9e and someone else. She didn't hear everything but it sounds like she heard that your ex isn't the father of her baby. She found Nora listening and took her by the arm and shook her telling her not to say anything.\" \n\n\"Oh my God!\" Livy gasped. \"How did I let that happen?\" \n\n\"Livy!\" Al scolded. \"You did not do this!\" \n\n\"I'm her mother! I supposed to protect her from the monsters!\" Livy sobbed into her hands. \n\n\"Livy,\" Al said firmly pulling her face to his. \"You did not do this! She did! He allowed it! But that little bitch did this! No one else!\" \n\n\"I'm supposed to protect her!\" Livy continued to cry. \"If I can't protect her, I'm worthless! I don't deserve to be her mother!\" Al pulled her in his arms and held her. He knew she would not listen to reason right now. Not with all that was swirling around her. \n\n\"What now?\" Al asked. \n\n\"We will question the ex,\" the officer said. \"And the fianc\u00e9e. If we find this is true, then I'm suggesting an order of protection be sworn out.\" \n\n\"Ms. Lasko?\" the officer said softly touching her hand. \"You will need to file charges on your daughter's behalf for this to go any further.\" \n\n\"What will happen?\" Livy asked. \n\n\"If we find out this is true?\" the officer asked. Livy nodded. \n\n\"If that is the case, the fianc\u00e9e will be charged with battery of a minor, and anyone that put her in that position may be liable as well,\" the officer said gently. \n\n\"My mother?\" Livy asked. \n\n\"Possibly,\" the officer nodded. \"If she knew this woman was a danger, yes, she will be liable.\" \n\nLivy looked to her father who nodded at her. \n\n\"Do it,\" Al said for his daughter. \"Nail anyone who hurt our Nora!\" The officer nodded as Livy buried her face and howled tears as she agreed with a nod. \n\n*** \n\nLivy opened her apartment door, she had spent the better part of the afternoon crying. Crying for allowing Nora to get hurt. Her father had tried to assure her that she was a good mother, but it had fallen on deaf ears. Livy was not about to absolve herself from her inability to protect Nora. It had destroyed her to her very core. \n\nSeeing her mother standing outside of her apartment made her want to scream, the second thought was to punch her mother so hard that all her frustrations would relieve themselves. \n\n\"What do you want?\" Livy scowled instead. \n\nHer mother tilted her head sympathetically. \n\n\"I would have never allowed Nora to go over there if I felt she was in danger!\" Marylyn tried to defend. \n\n\"I told you she wasn't to go over there at all!\" Livy reminded. \n\n\"I have done a pretty good job at raising kids! I should know if someone is in danger!\" Marylyn continued. \n\n\"Obviously you are wrong!\" \n\n\"Are you going to make your mother stand outside?\" Marylyn asked as Livy hadn't moved from the doorway. ",
        "\"What do you want?\" Livy asked again unbendingly. \n\n\"I'm sorry,\" Marylyn said finally. \"Is that what you want to hear?\" Marylyn waited for Livy to say something but she didn't. Instead she looked at her mother with an unhealthy hatred. \n\n\"I'm...sorry!\" her mother tried again. \n\nLivy reluctantly moved to the side and allowed her mother to come in, which really wasn't what she wanted. Marylyn came in smiling and went to the couch and set her purse down and sat near the chair. She patted it when Livy stood across from her with her arms across her chest defiantly. \n\nLivy was seething. She wanted to tear her mother apart, not just verbally, but physically as well. She just couldn't comprehend how her mother was taking a side against her daughter. How she could put one of her grandkids in position to be hurt. Father Jack had counseled her that her mother may not have known that Nora was in danger and that she was just as shocked as the rest of them. \n\nAt first, Livy thought Jack was defending her mother but he corrected her quickly. He was not defending Marylyn, only pointing out that it was possible that she didn't know. He agreed with Livy that it was irrelevant as Marylyn should have respected her daughter's wishes by not putting Nora in that position to begin with. \n\nLivy reluctantly sat. \n\n\"I have some good news!\" Marylyn said excitedly. \n\n\"What's that?\" \n\n\"I talked to Don and Rev. Sellers,\" Marylyn began picking up her daughter's hand and holding it. Livy looked down to it. It was the first time she had touched her daughter affectionately since Livy left Don. \n\n\"You did?\" Livy asked beginning to prepare herself. \n\n\"Yes!\" Marylyn said happily. \"Don is willing to take you back! And Rev. Sellers said the church would welcome you back with open arms if you and Don got back together!\" \n\nLivy sat there staring at her mother, it must have been some sick joke. Maybe her anger had made her ears decipher what her mother said wrong. Perhaps, just perhaps, Rod Serling was going to come out and begin his monologue on this episode of the Twilight Zone. \n\n\"What?\" Livy was stunned, and she was now glad she was sitting down as her legs would not have been able to hold her upright after such a declaration. \n\nThe church would welcome her back with open arms IF? What the hell did that mean? And Don was willing to take her back? Livy's mind scrambled to decipher what was going on. This was turning into some horrible nightmare. Her daughter abused, her mother now sitting here trying to convince her to go back to her ex-husband. \n\n\"Don't you see?\" Marylyn asked. \"Now that the truth has been revealed, Don isn't the father of the baby...that's why you left him. Now you know he didn't get another woman pregnant so you have no reason to be divorced!\" \n\n\"What about the fact he has cheated on my repeatedly?\" Livy asked shocked. \n\n\"Now, you know Rev. Sellers has already told you that God doesn't look at what he did as a sin!\" Marylyn told her patting her hand. Trying to sell this suggestion. \"Look, he has promised me he would never do that again if you came back!\" \n\n\"He promised you?\" Livy scoffed. \"Why is he promising you anything? It was me he betrayed!\" \n\n\"Livy,\" Marylyn began with a shake of her head. \"This is an opportunity to return to the church, to walk away from that devil's playground wrapped around the idea of Catholicism!\" \n\nLivy buried her face in her hands and laughed. Not because she was happy. Not because this was good news and definitely not because she found this funny! She laughed because it was the only thing her brain could come up with. It was as if Livy's brain was throwing up its hands and saying 'Yeah, I got nothing' in reference to coming up with something to say. \n\n\"You want me to go back to Don, a man who turned his back on me and our vows. A man who signed away his daughter for a house?\" Livy repeated back in an effort to show her mother how ludicrous this sounded. Perhaps if her mother heard just how crazy it sounded she would retract the statement. Livy looked to her and saw that wasn't going to happen. \n\n\"You want me to return to a church that vilified me, shunned me when I needed it the most but accepted those that should have been held accountable?\" Livy continued slowly, waiting for her mother to interrupt her and say it was a crazy idea to suggest it. \n\n\"Think of how much this whole sordid divorce has damaged our reputation in the church!\" Marylyn defended. \"It's bad enough to have one daughter who has fallen from God's graces! But to have two defy our Lord and the church?\" \n\n\"How this has damaged your reputation?\" Livy repeated back to her mother carefully. \n\n\"Yes, we have been humiliated that this sin of yours had torn this family apart!\" Marylyn told her with a shake of her head. \n\n\"But he cheated on me! He broke his vow to me and to God!\" Livy cried. \n\n\"The Bible says men aren't held to that standard! Some of the Bible's greatest men had multiple women!\" Marylyn reminded. \n\n\"You can't pick and choose what parts of the Bible to live by!\" Father Jack's voice startled Marylyn as he came from the kitchen. His black suit and white collar told Marylyn exactly who he was. \n\n\"You are taking parts of the Bible that have no relevance in today's society,\" Jack continued as he came and put a comforting hand on Livy's shaking shoulder as she sat there with her fingers over her mouth still trying to decide if this was an episode of the Twilight Zone. \n\n\"I'm sorry,\" Marylyn began. \"I wasn't aware you were here!\" \n\n\"Don had obligations, to Livy, to his daughter...but most of all, he had a promise to God himself!\" Jack told her. \"The vows of marriage are not negotiable! You can't pick and choose which vows to obey and which vows to betray.\" \n\n\"And you are?\" Marylyn asked. \n\n\"I'm Livy's spiritual advisor...I'm Livy's friend,\" Jack told her. \n\n\"I see,\" Marylyn frowned looking at her daughter. \n\n\"This is Father Jack,\" Livy said taking his hand which was resting on her shoulder. \"He and Alex have been my greatest help!\" \n\n\"You should know Livy has been baptized in our church,\" Marylyn pointed out. \n\n\"In contaminated water,\" Jack said. \n\n\"Excuse me?\" Marylyn countered. \n\n\"Your church is tainted with the wrong beliefs,\" Jack informed her. \"I don't normally fault other religions as I believe a person's belief is a personal choice. But after hearing what you are saying, and what your preacher said before. Couple all of that with the way your church as chosen to excommunicate Livy...I can unequivocally say, your church doesn't have the first damn clue as to what God is about, and He most certainly has blessed anything in it!\" \n\n\"How dare you interfere with the raising of our daughter?\" Marylyn gasped. \n\n\"You are not raising me!\" Livy came in. \"I'm a woman, I'm an adult! I have a child of my own! I'm in charge of my life!\" \n\n\"And look where that has gotten you!\" Marylyn barked. \n\nLivy looked at her blankly. Then laughed. She covered her mouth with her fingers and looked to Jack who watched her carefully. Livy turned back to her mother. \n\n\"Let me see if I have this straight,\" Livy said shaking her head. \"You want me to go back to Don, not because you want me happy...but you want to save face?\" \n\n\"You were happy with Don!\" Marylyn pointed out. \n\n\"I haven't been happy with Don since the first time he cheated on me years ago!\" Livy told her. \"But for the first time in a long time, I am happy now!\" \n\n\"Yeah,\" Marylyn countered angrily. \"You look it!\" \n\n\"I look it?\" Livy growled. \"Fuck you! I'm not happy right now because my bitch of a mother disobeyed my wishes and put my daughter in a position to be abused! I'm not happy that half of my family has disowned me because I won't allow my ex-husband to cheat on me at will! Taking his side over me!\" \n\n\"I'm not happy you are standing her looking at the one man in my life that has tried to help me through all the bullshit you are putting me through like he is the enemy!\" Livy continued standing up suddenly causing Marylyn to draw back as Jack held on to Livy's shoulder. \n\n\"I'm done with you Marylyn,\" Livy told her angrily. \"You stay away from me! And if I catch you within a hundred feet of Nora, I will fucking beat the shit out of you! We are done!\" Livy stormed away from the living room slamming the door to her bedroom. \n\nMarylyn looked to the hallway shocked at her daughter's words. Shocked at how this opportunity to return to the good graces of her church was now shattered. She would still be the laughing stock of the church. \n\nShe had heard the whispers behind her back from the other parishioners. She had spun the defiance by Alex into sympathy from the church. But that ended when Livy defied her mother and Rev. Sellers by not forgiving Don and sticking with the marriage. \n\nNow she was ridiculed for having two daughters who lived in sin. Blame was being placed on her for that. They said she wasn't the good mother or the good Christian she proclaimed herself to be! If one daughter lived in sin it was excusable, but two? That it was poor parenting! She looked up to Jack who was watching her carefully. \n\n\"Do you see what you have done?\" Marylyn asked. \n\n\"Yes,\" Jack said with a nod. \"I have given Livy the strength to find God and to understand, she is in charge of her happiness.\" \n\n\"You think talking to her mother that way is what God wants?\" Marylyn asked him. \n\n\"That depends,\" Jack sighed realizing Marylyn was not about to take any accountability for the situation. He began to walk back towards the bedroom where Livy had disappeared. \n\n\"On what?\" Marylyn asked standing up. Jack turned to face her. \n\n\"On the mother,\" Jack shrugged. \"I'm sure you can find your way out.\" Jack left Marylyn standing in the living room shocked. \n\n*** \n\nMarylyn sat at the kitchen table, her Bible open in front of her. Her coffee untouched as she thought of ways to salvage everything. She thought of her marriage, was Al serious in his threat? Her standing in the church, could she revive her once good name if Livy didn't come back and become Don's wife again? \n\nAl walked in and looked to her and her open Bible. \n\n\"Did you apologize to our daughter?\" Al asked her. He had sent Marylyn over to apologize. Something she refused to do because she felt she had done nothing wrong. \n\n\"I tried,\" Marylyn told him softly. \n\n\"What did she say?\" Al asked her. \n\n\"She rejected everything I had to offer,\" she told him looking down at her hands. \n\n\"Everything you had to offer?\" Al asked her. He didn't like the way she said it. \n\n\"Yes,\" Marylyn nodded. \"I thought she would be happy to know that Don was willing to take her back as his wife. That the church would forgive her for her sin of divorce if she remarried Don. That things could go back to the way they were!\" \n\nAl's heart broke. This woman before him was not the woman he fell in love with. This was not the woman he married. She was not the woman he bore children with and made a life together with through the years. Somewhere along the way, the woman he fell in love with disappeared. Replaced with the religious zealot in front of him. \n\n\"So let me see if I have this straight,\" Al began slowly leaning against the counter as his legs weakened. His chest began to tighten and his breath became labored. He was finding his vision blackening and he shook his head. His body began to gather a light film of sweat even though it was cool in the house. His back, neck and jaw hurt from the stress. \n\n\"I sent you over there to apologize to Livy, to get her forgiveness,\" Al continued as he rubbed his upper arm. \"As a way to save our marriage...you instead tried to save your precious pride in front of your church.\" \n\n\"My church is my foundation!\" Marylyn shot back not lifting her eyes. \n\n\"Your foundation?\" Al repeated. \"No, it's your everything,\" Al pointed out. \"It's a good thing too...let's see how your church accepts you when you are a divorcee yourself. I refuse to live with a woman who puts her pride, a woman who puts herself before her children...or her husband.\" \n\nAl made his way to the door as Marylyn looked to him with tears rocketing down her face. His feet drug, and he staggered slightly. He stopped at the door to gather his breath, it wouldn't come back to him. \n\n\"I want you to pack some things, go over to Brandy's or Krista's for the time being,\" Al told her. \"I can't even stand the sight of you right now!\" \n\n\"Al!\" Marylyn gasped as she thought how this would look in the church. \n\n\"Enough!\" Al bellowed causing her to cower. \"You are so quick to use your God, your Bible, your Church's teaching to defend yourself. Well your precious church says my daughter has to obey her husband, even though he is the one that cheated! Therefore you have to do the same! That is, unless of course, you know that to be bullshit! Which is it? Is the wife to obey her husband no matter what, otherwise it is direct defiance to God? Or can she pick and choose? That is what you are saying, so which is it? Are you going to defy God and disobey me? Hypocrite!\" \n\nAl slammed the door so hard that coffee cups fell from their hooks under the cabinet and shattered on the counter. \n\n*** \n\n\"No,\" Gavin said as he ran his hand over his face. He just couldn't believe what he was hearing. His heart hurt and he was on the verge of tears. \n\nAlex walked in and dropped her purse on the floor by the couch and fell to it dramatically, like a tree being cut down in the forest, as she had to endure another long afternoon with Madelyn. \n\n\"No, I'll take care of it,\" Gavin said into the phone. He hung up and looked to his beautiful, exhausted fianc\u00e9. \n\n\"That woman is going to be the death of me,\" Alex said with her face buried within the pillow. \n\n\"Alex,\" Gavin began slowly as he sat on the table in front of the couch. \n\n\"Alex?\" the woman laughed from the pillow. \"Are we going to have that discussion again?\" Alex dropped the pillow and looked to him. Her smiled waned as she saw the pain in his eyes and the stress in his face. \n\n\"What's the matter?\" she asked him sitting up quickly. \"I was just kidding about Madelyn!\" \n\n\"No,\" he said with a shake of his head. \"It's not that.\" He took Alex's hand and stared at it for a minute and Alex forgot how to breathe. He looked to her and then brought his other hand to her face softly. \n\n\"We have to go to Pennsylvania,\" Gavin began slowly, softly and lovingly. \"They have rushed your father into emergency surgery.\" \n\nAlex screamed. It was short and fearful. \n\n\"What happened?\" she asked, her voice quivering. \n\n\"Your neighbor found him in the yard,\" Gavin explained. \"It looks like a heart attack.\" \n\n\"NO!\" Alex gasped. \"NO! NO! NOOOO!\" Gavin took Alex into his arms and squeezed her tightly as she clutched him. \"How bad is it?\" \n\n\"I don't know for sure, they don't know for sure, and won't until they get him open,\" Gavin explained. \"Madelyn has the jet waiting for us, let's go.\" \n\n\"We need to pack,\" Alex said her brain struggling to work. \n\n\"No,\" Gavin said firmly. \"Anything we need we can buy...right now we just need to get there!\" Alex nodded numbly as he lifted her up as he stood. He held her tightly as he walked her out of the apartment. \n\n*** \n\nChapter 49 \n\nThe family sat in the hallway leading to the operating rooms. Marylyn, Krista, Brandy and their families to one side of the hallway. Livy and Nora on the other side. While separated by only a few physical feet, the emotional and mental divide was wider than the oceans. It was evident to even those who didn't know the family. Most people who passed assumed they were waiting on separate surgeries. \n\nTrevor watched his mother and grandmother scowl at Livy, the three of them barely saying a word except with their eyes. He didn't like all the blame being placed at Livy's feet. He didn't agree with them, Livy did what she had to do. Divorcing Don, in his opinion at least, was the least she could have done. His opinion was met with ridicule and even punishment. Being grounded for defending Livy at dinner one night. \n\nTrevor got up and went to Livy and squatted to look at Nora. \n\n\"Hey squirt,\" he said softly taking her hand. \"What do you say we go downstairs to the cafeteria and see what they have in their vending machines to snack on?\" \n\nLivy smiled at him and wanted to hug him for breaking the icy cold silence there in the hallway. Nora nodded her head and slipped from her mother's lap. \n\n\"Thank you Trevor,\" Livy smiled. She pulled her purse to her. \n\n\"No, I got it,\" he said with a shake of his head at the offer of money. He stood and leaned into her hugging her. She choked back a sob. \"We'll take our time,\" he whispered in her ear. She nodded at him and kissed his cheek. \n\nShe watched Nora and Trevor go to the elevator. Trevor holding her hand the entire way. Nora looked back at her mother and Livy braved a smile and a wave. Nora waved back just as the door opened and they stepped on. \n\nOnce the kids were gone Livy leaned forward and buried her face in her hands and disappeared into the darkness of them. \n\n\"I hope you are happy with yourself,\" came Krista's voice. \n\nLivy looked up at her. \n\n\"What?\" she whispered. \n\n\"This is your doing,\" Brandy scowled. Livy furrowed her brow in shock and shook her head. \n\n\"Don't shake your head!\" Krista growled. \"If you hadn't been so selfish! The divorce, dividing this family, putting all this pressure on Dad!\" \n\n\"This isn't my fault,\" Livy squeaked with a shaking lip. \n\n\"How can it not be your fault?\" Brandy asked her. \n\n\"Everybody was happy until you decided you needed a divorce!\" Krista pointed out. \"Precious little Livy has to have her way!\" Livy shook her head as the world that was being held together by a thin thread began to unravel and come apart at the seams. \n\n\"I didn't want a divorce!\" Livy tried. \"I was left no choice!\" \n\n\"You had a choice,\" her mother finally chirped. \"You chose to walk with the devil instead of God and this is His punishment! You committed the sin, but my husband is paying the price!\" \n\n\"No, that's not fair!\" Livy cried. Her lips trembling, matching her hands. \n\n\"You've killed your father!\" Marylyn yelled causing Livy to jump. \n\n\"No, the doctor said...,\" Livy stumbled. \n\n\"The doctor said not to get our hopes up,\" Brandy yelled standing with her mother now side by side as they walked toward Livy who coward backward into her seat. \n\n\"That's what doctors say when they know all is lost!\" Krista pointed out. \n\nLivy's head began to shake from side to side her tears cascading down her face, her mind scrambling from believing what they were saying to fighting to believe that everything was going to be ok. \n\n\"So, in the matter of months, you have destroyed your marriage, and killed your father,\" Marylyn said cruelly. \"You call that walking with God? Is that what you have learned at that Catholic Church?\" \n\nLivy hung her head and cried. Large, heavy tears, falling to make a puddle on the floor as she struggled to breathe. She struggle to comprehend that her family had fully turned on her. She looked up at the way they were towering over her now and for the first time, she was afraid. Afraid they may hurt her. But most of all, afraid they were right! \n\nLivy bolted from them running for the door of the hospital, her mind screaming and tearing in a hundred different directions. Like her life. Like her family. \n\n*** \n\nAlex and Gavin rushed up to the hospital, right before entering they turned their heads and thought they saw Livy run out the other door down the way. They didn't stop to check, instead rushing towards the surgery center. \n\nMarylyn, Krista and Brandy all swallowed hard when Alex came around the corner. \n\n\"How is he?\" she asked immediately. \n\n\"He's in surgery, they aren't telling us anything,\" Krista said coolly looking to Brandy. Both had a look of fear, they didn't expect Alex to get here so quickly. ",
        "Alex looked to Gavin. \n\n\"I'll go back,\" he told her touching her face softly. \"I'll be right back.\" He promised. She watched him enter the restricted zone, and a nurse go up to him. She saw him explain who he was and the nurse nodded that he could continue. \n\n\"Aunt Alex!\" Nora's voice had Alex spinning on her heel to see the young girl drop Trevor's hand and run towards her. Alex dropped to her knees instantly and took the girl in her arms and held her tightly. The small girl squeezed Alex tightly letting her know she didn't want to be let go. \n\n\"Hey Trevor,\" Alex smiled at the teen. \n\n\"Hey Aunt Alex,\" Trevor said to her. \"She's been waiting for you.\" He said to his aunt. \"We both have!\" Trevor looked to his mother and grandmother. \n\nNow he knew they would back off Livy, there was no way the three of them had the balls to take on Alex. Not in this lifetime. He knew that for sure. Not against Alex! None dared to stand up to her, the one family member who could keep the wolves at bay. Livy could now relax, there would be no ganging up on her and he was thankful. \n\n\"Where's your mommy?\" Alex asked Nora. Nora shook her head. \n\n\"She left,\" Brandy said shortly. \n\n\"To go where?\" Trevor asked. \n\n\"Who cares,\" Marylyn growled. \"Because of her, my husband is probably going to die!\" \n\n\"What?\" Trevor got out before Alex could. \n\n\"Trevor,\" Krista warned with her voice. She wanted her son to stay out of this, she warned him with her voice and her stare. \n\n\"No, that's bullshit!\" Trevor barked, ignoring both warnings. \"You guys have been trying to blame her for everything!\" \n\n\"Trevor!\" Krista barked. \n\n\"What are going to do? Ground me again?\" Trevor barked back. \"Big deal!\" \n\n\"You are blaming this on Livy?\" Alex snarled standing up pushing Nora back to Trevor. Trevor let a small grin cross his face as the three of them took a half step back. \n\n\"Not so big and bad now that Alex is here!\" he said to himself. Alex would settle this and put this family straight. He knew that! \n\n\"If she hadn't got a divorce!\" Brandy tried to say but Alex's look shut her off. \n\n\"You bitch!\" Alex growled taking another step towards her mother. Krista and Brandy moved away. \"Is that what you have been filling her head with?\" \n\n\"It's true,\" Marylyn squeaked. \n\nThe slap was sudden and loud. It spun Marylyn's head and caused her to stumble backwards. Krista and Brandy jumped at the assault just put on their mother. Alex's fiery eyes warned them they were next if they intervened. They instead took another cowardly step back. Alex continued to stalk her mother. Anger was drowning her! Her rage filling her body with trembles and tears. \n\n\"ALEXANDRIA!\" Gavin's voice carried down the hallway causing nurses to stop what they were doing and turn to the family now at war within itself. \n\nAlex froze, allowing Marylyn to stop moving away. \n\n\"That is absolutely enough,\" Gavin warned her. \"All of you. This bullshit ends right now!\" \n\nThey looked to him as he stood in front of the doors leading back to surgery. \n\n\"Al is fighting for his life,\" Gavin told them. \"The absolute last thing he needs is to see his family tearing itself apart! You had better get it together, for Al, he needs all of this to end!\" \n\nAlex stood there shaking, seething at her mother who stood alone now. Krista and Brandy had backed off to where their husbands stood. Trevor had taken a hold of Nora and was holding her. \n\nGavin walked to Alex and stood in front of her, cutting off her view of her mother. Alex hung her head, humiliated and infuriated. \n\n\"How is he?\" Alex whispered. \n\n\"He's out of surgery,\" Gavin told her taking her gently into his arms. \"He's going to be fine...they had to put stents in. It appears the doctor had been warning him to watch what he was eating, to lose some weight and start taking better care of himself...none of which he was doing.\" \n\n\"He's going to be ok?\" Trevor asked. \n\n\"Yes,\" Gavin told him. \"He can forget about the greasy hamburgers he likes so much! But yes, he is going to be fine. The stents are in, and he will have to do what the doctor said, he will have to change his diet, lose some weight...but he should be just fine!\" He said this tilting Alex's face up. \"The dangerous part is over, he is in post op, awake. I said hello and he smiled.\" \n\n*** \n\nLivy ran to the rectory behind the church. She pounded on the door, her tears falling, her body aching. He didn't answer, she had to talk to him. She spun and saw lights on in the church. She ran towards the sanctuary. \n\nShe startled the nun who was praying there when she flung open the side door. \n\n\"Livy,\" the woman said holding her hand over her heart to control the surprise at the woman who burst through the doors. \n\n\"Where is Father Jack?\" Livy asked her. \n\nThe nun took the woman's hand. \n\n\"He is in Mansfield, one of our parishioners had a baby,\" she told Livy. \"He went to check on them.\" \n\nLivy closed her eyes and forced more tears to run down her face. \n\n\"When is he due back?\" Livy whispered. \n\n\"I don't know...soon,\" the nun told her watching the tears fall. \n\n\"Can I wait for him here?\" Livy asked her. \n\n\"Of course, my dear,\" the nun smiled. \"I will tell him you are waiting for him.\" \n\n\"Thank you,\" Livy smiled. \n\n\"Are you ok?\" the nun asked. \n\n\"Yes,\" Livy lied. She was anything but ok, but she didn't want the woman to wait around with her. She needed privacy, she needed to be alone. \n\n\"Ok,\" the nun smiled touching her face. \"I'm sure he won't be long.\" Livy smiled, it took every ounce of energy she had. \n\nThe nun left her in the sanctuary, Livy drug her feet all the way to the front pew. She more collapsed than sat. She looked up at the stained glass behind the pulpit. Christ in his final moments. His face tilted upward, the blood dripping from his crown of thorns and the spear's entry wound. It appeared Jesus was looking for someone, like she was. \n\n\"Dear Heavenly Father,\" Livy began softly. \"I need you now! I know I haven't been the best of your children...I have committed some atrocious sins! But my heart can't take this anymore! I have failed my daughter...allowing her to be hurt when I was charged with her safety. I have failed at marriage...thinking selfishly that we were better off separated...I now know that was wrong!\" \n\n\"I have lived in sin, thinking of sexual thoughts about your servant...I have tempted his faith in You...a shame and a sin I will never be forgiven for, I know. How can I possibly sit in Your house begging?\" \n\nShe reached into her pocket and pulled it out, she looked to her hand as she sat there with her father's pocket knife. He had worked on her car stereo, and had dropped it and forgot to pick it up. She never had a chance to give it back to him. She had taken it from the console of her car on the way in to talk to Jack. Her hands shook as she stared at it. \n\n\"If I can't forgive myself, how can I ever expect You to forgive me?\" she continued her prayer. \"How can I possibly taint my child with my sin?\" She pulled open the blade. \"I can't. I won't! Please forgive my child, bless her for none of this was her fault!\" \n\n\"Forgive me Jack!\" with that, Livy drew the sharp blade across her skin on her wrist. The pain causing her to scream out but she clamped her lips shut. She followed suit with her other wrist. She couldn't go as deep as the first as she couldn't hold onto the knife and it tumbled from her hands. \n\nShe watched the warm crimson pour out of her wrists, she looked up at the image of Christ, but now it appeared he was looking down at her, instead of skyward as before. She hit her knees in front of Him. \n\n\"With my blood, forgive my daughter and help her through this life!\" she begged the Son. \n\n*** \n\nJack looked to Livy's car as he got out of his. He looked around but didn't see her. He saw the nun come out of the residence. \n\n\"Corrine,\" he called out to her. \"Where is Livy?\" \n\n\"She is in the Sanctuary,\" the nun told him. He nodded and made his way to the church. A gnawing began in his stomach as he walked. He quickened his steps. \n\nOpening the door on the side, he saw her. He stopped momentarily as his brain wouldn't comprehend what his eyes were seeing. Livy was curled up on the floor, appearing as she was sleeping there at the altar. \n\n\"Livy?\" he whispered. His feet glued to the entryway of the church. \n\nFinally his brain clicked and he ran to her, sliding on the floor to scoop the woman in his arms. \n\nLivy opened her eyes to look at him. \n\n\"Jack,\" she whispered. \n\n\"What have you done?\" he gasped as the tears fell down his face blurring her in his eyes. \"Oh my God Livy!\" He clamped his hands over her wrists in an attempt to stop the bleeding. The pool of blood she was in now soaked into his pants. \n\n\"I'm so sorry,\" she whispered. \n\n\"No, NO!\" he barked at her. \n\nJack heard the gasp from the doorway. \n\n\"Corrine! Call for an ambulance!\" He yelled at her, when he saw the nun in the doorway crossing her chest with her fingers. Up, down, left, right. \"Now!\" The nun jumped at his loud command and ran from the Sanctuary. \n\n\"Look at me!\" he commanded softer to Livy. \n\n\"Jack,\" she whispered. Her voice as weak as she looked. Her face ashen, her skin cold. \"I'm sorry, I should have never done this! I have left Nora alone!\" \n\n\"No, you are going to be fine!\" he tried to convince her. \"Stay strong! Stay with me!\" \n\n\"I know I shouldn't say this, but...I love you,\" she told him. He nodded as the tears fell to her face. \"But now, I'm going to leave...you must stay with God! He needs you!\" Jack shook his head. \"You are a priest! God loves you, and needs you!\" \n\n\"I'm so sorry I wasn't here for you when you needed me!\" Jack tried to say. \n\n\"No,\" she whispered her voice growing so soft he had to put his ear to her lips. \"Stay with God...make sure Nora finds her way to Him!\" \n\n\"Shhhh,\" he begged as he rocked her. \n\n\"I need a priest,\" she said softly. \n\n\"I'm here,\" he whispered back. \"Are you sorry for your sins?\" He asked her softly. \n\nHis words never rose above that whisper, his hands shook as he pulled his rosary out and the sacramental oils and water he had in his pocket. He begged his prayers, he cried his tears all with a shaking voice. He felt her leave...and was crushed beneath it, dropping his Holy items to take her in his arms and clutched her. He had been at the bedside of many people who died. None crushed his soul the way this woman did. \n\nLooking to the heavens his scream filled the church and echoed though the town of Averin. To the gates of Heaven itself. \n\n*** \n\n\"We have to find Livy,\" Alex said to Gavin. \n\n\"Stay with Nora, they will have your dad out of post op soon, then they will let you see him when he is in ICU,\" Gavin said to her kissing Nora's head. \"I'll find her, I'll go to her apartment.\" \n\n\"She won't be there,\" Alex told him. \"If anywhere, given what's going on, she will be at Father Jack's.\" \n\nGavin nodded and kissed her. \n\n\"He's going to be ok,\" Gavin assured her. \"I'll be back soon.\" Alex nodded as he kissed her lips. \n\n\"I love you,\" he whispered against her lips. \n\n\"I love you more,\" she said back. \n\nGavin pulled up to the church and saw the flashing lights of the ambulance and his stomach dropped. \n\n\"No, no, no!\" Gavin hissed as he threw the rental car in park before it was even fully stopped. His door flew open and he jumped from the car and ran towards the front of the church where the priest sat on the steps. \n\nGavin could see the blood on his hands and on his face. The holy man was covered in smears of the crimson truth. Staring at the ground, unable to look at anyone or anything. \n\n\"Jack?\" Gavin called out as he pushed past a police officer. He saw the morgue bag, zipped and full with a small body. \n\nJack looked to him. He recognized him from a picture in Livy's apartment. \n\n\"Gavin,\" he called out. \"I've lost her!\" Gavin heard the words and stopped in his tracks. \n\n\"I failed her Gavin!\" Jack called out again. \"I failed Livy!\" \n\nGavin hit his knees, and put his face in the grass as he doubled over as the feel of vomit surged upward through his throat, burning as it came up, but his lips held it back. \n\nFlashes of his own past came back to him, his dying mother. His father. Carla. \n\n*** \n\nChapter 50 \n\nThe cold rain pelted the umbrellas with a steady rumble. Alex clutched Gavin's hand with one hand while her other hand held Nora's as she was held by Gavin. Trevor stood and held the umbrella for the four of them. Refusing to stand with his mother and father as they stood on the other side of the casket. The division in the family becoming larger, starting on the next generation. Something Gavin took full stock of and began to wonder how to keep it from further rupturing. \n\nRev. Sellers conducted the funeral, Alex's mind not letting her protest as she knew Livy was going to a different church. She was too tired to argue. Too broken to fight. Sellers spoke about sins, and the past, dust to dust. Alex heard little of it. Gavin could feel her breaking by his side. Nora flooded his neck with her warm tears never lifting her face from his warmth. \n\nOn Marylyn's side of the casket she stood with Krista and Brandy and their husbands. A few members of the church she attended were there. Most stayed away as they felt Livy's soul was condemned for her mortal sin. There was no reason to waste time on the fallen from Grace. \n\nOn Alex's side, there were several people she didn't know. A nun stood a short distance away with a man who shunned the umbrella and stood in the rain. She wondered who he was because he looked as lost as she felt. \n\nTrevor had several of his friends there, supporting him. Alex found she was numb. She had cried for three days now, it took her one day just to get out of bed. Gavin took care of Nora who slept with Alex at night. They would hold each other for comfort. \n\nMadelyn had made the trip from Chicago, she stood there with Charles, never too far away from Alex. Lena and Mike came too, all hovered around Alex, there if she needed them. But right now she had the ones she had to have. Gavin and Nora. \n\nAl was distraught, there was some discussion of when and what to tell him. He ended the dancing around the subject when he demanded to see Livy. Gavin broke it as gently as he could as Alex couldn't say anything without bawling. Al shook as the tears leaked down the side of his face, Gavin held his hand while Alex buried her face into his neck and he weakly held her, his body not strong enough to squeeze her. \n\nHe wanted to, but the surgery kept him from attending his daughter's funeral. Al refused to speak to his wife, he didn't know about the angry words spoken to Livy. Gavin telling Trevor there was a time and a place, and this wasn't it. Al needed to rest, and not fight with family, especially his wife. \n\nAlex looked to her mother whose face held a look she had never seen on the woman. Rev. Sellers finished his eulogy and walked to Marylyn and those standing with her. He shook their hands and offered some words of comfort before he walked away. \n\nThe other mourners began to filter away, a few at a time. Gavin looked to Alex and saw the blank look of loss. He knew it well, it had coated his face. First his mother and father, then Carla who sucked the life from him for years. He shook the feelings that were creeping in on him, emotions he had kept at bay. He couldn't weaken now, not with Alex and Nora in desperate need of him. \n\n\"Are you ready?\" He asked her softly. She could only nod. He held her with one arm while the other held Nora, her head on his shoulder. His arm was numb now, from holding her up the entire time. It burned for the longest of time but she refused to be put down. \n\nHe turned Alex and Trevor followed behind them. \n\n\"Nora baby,\" Marylyn's voice called out stopping Gavin. He turned around but felt Alex's hand tighten on his. He squeezed back, assuring her it was going to be ok. \n\nNora lifted her head and slowly turned her face to her grandmother. Her eyes were red from tears but now they lit up with anger...and hatred. Something no small child should ever know. \n\n\"Baby,\" Marylyn began as she walked towards them. \n\n\"Shut up!\" Nora suddenly barked causing even Gavin to jump. \"Shut up! Shut up! SHUT UP!\" \n\nAlex and Trevor threw their arms around Gavin and Nora as the girl screamed at her grandmother. The child watched as her aunts came to comfort their mother. \n\n\"All of you did this to her!\" Nora said, her small body shaking so hard that Gavin had to drop Alex's hand to hold her. \"I hate...hate...hate you!\" With that the girl wailed into Gavin's neck. \n\n\"Take me away Uncle Gavin!\" Nora begged. \"Please!\" Gavin did as requested pulling Alex with him. He made his way to where Madelyn waited with her car. Charles holding the door to the limo open. Madelyn looking on the distraught family as she burrowed her anger into Marylyn as Gavin and Alex walked with the small child towards her. \n\n\"I hope you are happy now,\" Trevor said standing in the rain looking at them. \"You got what you wanted. You and your church!\" \n\n\"Trevor!\" Krista barked at him. \"How dare you talk to your Grandmother that way?\" \n\n\"It's easy,\" Trevor said with a soft huff of a laugh that held absolutely no humor. \"I learned from all of you over these past months. I learned hatred...I learned venom. I learned how to rip people apart with my words. I learned how to blame others for my wrongs! I learned everything I need to know about hatred...from all of you!\" \n\n\"Where are you going?\" Trevor's father called out to him as he turned to follow Alex and Gavin. \n\n\"I'm going where I'm needed, where love stands alone,\" he said over his shoulder at his father. \"With Nora. You have all you need. You have each other and your despicable lives and your so called church!\" \n\n\"Trevor!\" His dad barked. \"Come back here!\" \n\n\"Or what?\" Trevor turned his face hardening with anger. His body beginning to shake with his welling fury. \"Going to disown me as well?\" Trevor laughed as he threw up his in a vehement shrug. \n\n\"Going to push me to suicide as you did Livy? Please do...I'm so ashamed right now that it might be better than to stand around and call you my family!\" \n\n\"What?\" His father gasped. \n\n\"I'm ashamed for my silence,\" the teen cried, the tears falling as the friends that came out to support him came to his side and put their hands in his. \"I'm complicit in her death...and I refuse to be silent any longer! So please, disown me the way you did Livy...it's the greatest thing you could do for me! I refuse to be a part of a family that is so horrid that it blames someone to their death. Not just someone...but family!\" \n\nHe turned with his friends leaving his parents standing there dumbfounded, crushed by his pain. Stunned by his stinging words. Alex turned at the car as Madelyn held her hand. Gavin secured Nora in the back in her booster seat. Alex turned away from her mother and sisters as they looked to her and got into their cars. She looked back to where Livy was being put to rest. She saw a single solitary man there. His hand on the casket. \n\n\"I'll be right back,\" Alex said as she dropped Madelyn's hand. Gavin nodded. \n\n\"Want me to go with you?\" he asked. \n\n\"No, stay with Nora,\" she said walking back. She took Trevor into her arms as she reached him and his friends. She kissed his head as he hugged her and made for his friend's car. \n\nShe quietly came up behind him. He was blessing the casket, whispering his prayers over her. His hands visibly shaking as he did. Alex watched him, she knew it was Father Jack even without being introduced. She let him finish his nearly solitary duty. She watched his body weaken with every word, the only thing keeping him upright was his duty. His duty to God, and Livy. \n\n\"Father?\" Alex whispered softly. ",
        "\"I'm sorry Alex,\" he said not turning to her. \"When she needed me the most...I wasn't there.\" \n\n\"No, you don't have any reason to apologize,\" Alex said taking his hand to stand next to him. \n\n\"Your mother wouldn't let me officiate the funeral,\" he explained without her asking. \n\n\"I figured,\" Alex nodded. \n\nThey stood there in the rain for a few moments. \n\n\"Is she in Hell Father?\" Alex asked finally. \n\n\"No,\" he said firmly. \n\n\"But...,\" \n\n\"NO!\" He said cutting her off. \"Alex, she wasn't...gone when I got there. She was repentant. I gave her Last Rights, as a Catholic she deserved them. She was truly sorry for what she had done...so I gave her absolution!\" \n\n\"Can you do that?\" Alex asked him, her heart lifting that he did. \n\n\"I'm her priest,\" Jack told her. \"She was truly sorry...so yes I can.\" \n\n\"Suicide?\" Alex asked. \n\n\"Is like any other sin,\" Jack said firmly. \"Once you are sorry for it and ask for the Lord's forgiveness, it's given. He gives absolution I just say the words.\" \n\n\"How do you know for sure?\" Alex doubted. \n\n\"Because my heart tells me so,\" Jack said turning to her. Alex took the priest in her arms. \n\n\"Your sister was a spectacular woman,\" Jack whispered to her. \"The world got a little darker today.\" \n\n\"I agree,\" Alex whispered in his arms. \n\n***"
    ],
    "authorname": "CJT",
    "tags": [
        "anal tongueing",
        "bondage"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-36"
}