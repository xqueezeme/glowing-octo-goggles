{
    "title": "Three Square Meals Ch. 058",
    "pages": [
        "John stared at his new Paragon Body Armour with his mouth agape, and walked quickly across the Engineering Bay to get a closer look. Dana had set up another armour equipping frame next to the two that were already built against the far wall, but this new one was larger, designed to hold armour sized for a brawny six-foot-two man. The full set of body armour was standing in the frame, with the robotic arms holding the front plates in place to showcase the dramatic new design.\n\nThe Paragon Armour was about the same size as the previous Phalanx suit, but much sleeker, the aesthetics more elegant and refined. Like the suit that Jade was modelling for them, there was a slight bulge in the vambraces and armoured boots, which obviously housed the same anti-grav generators for use in flight-mode. The suit was glossy white, coated with the same sparkling flecks of silver Etherite, which made the suit seem to radiate a soft aura of light. \n\nThe really major difference, which had caused John's shocked reaction, were the resplendent golden pauldrons shaped into the visage of a regal lion. The head of the proud looking beast topped each shoulder, staring out with wise eyes that seemed to hold a hidden strength. The craftsmanship of each pauldron was exquisite, and the representation of the stylised lion was breathtaking to behold. The breastplate was embossed with a similar image, while the boots, helmet, and gauntlets were etched with golden scrollwork, gleaming brightly against the glistening white Crystal Alyssium plating.\n\n\"What do you think?\" Alyssa asked, then held her breath as she waited for his reaction.\n\nJohn shook his head in amazement, and exclaimed, \"I can't believe you designed this yourself. It looks incredible!\" He paused, and grinned at her as he continued, \"I love it, but aren't we overdoing the 'Lion of the Federation' symbolism?\"\n\nShe shook her head, as she replied firmly, \"Symbolism is important. Like it or not, we have a certain reputation to maintain now, and it's important we look the part.\"\n\nGlancing at the gleaming armour, John frowned, and asked, \"Are you sure it doesn't come in black? I have a feeling it's going to be a little bit difficult to sneak about in it.\"\n\nAlyssa waved away his concerns with a dismissive hand, and replied, \"Don't you remember when we got shot at by those Terran troops when we were rescuing Rachel? Think how shitty it would've been if we'd had to shoot those guys in self-defence. Besides, how often do we sneak about anyway? We don't tend to be particularly subtle, and just mow down everything that crosses us. If we really need to do some covert ops, I'm sure Dana could make us some stealth variants. Right, Sparks?\"\n\nThe redhead nodded enthusiastically, and said, \"That won't be a problem. We've got loads of Crystal Alyssium, and it's not like we can't afford any other materials I might need.\"\n\nJohn rubbed his chin thoughtfully as he stared at the new Paragon Armour, and said, \"I guess you make a good point. Specialised suits is probably the way to go, rather than trying to cram everything into a jack-of-all-trades Body Armour.\" Studying the armour carefully, he turned to Dana, and asked, \"How come it's still the same size as the Phalanx suit? Shouldn't it be much smaller, like the one Jade's wearing.\"\n\nThe redhead looked a bit shifty, and Alyssa quickly interjected, \"Figure-hugging isn't a good look for a man. You'll look much more imposing like this, trust me.\"\n\nGiving them a suspicious glance, John asked, \"Come on, out with it. What are you two hiding?\"\n\nAlyssa let out a resigned sigh, then nodded to Dana, who immediately confessed, \"We wanted to keep you extra safe, so your armour is tripled-plated, rather than double-layered. You'll be tougher than a tank in this suit!\"\n\nHe frowned disapprovingly, and snorted, \"That's ridiculous! Why didn't you armour up the female variants the same way? Please don't tell me it's because you wanted to look good.\"\n\nRolling her eyes, Dana replied indignantly, \"Give us a little credit! The female variants are ridiculously tough as it is, and slimming them down makes us a smaller target. There's a fine balancing point where avoiding hits entirely is as useful as extra layers of protection.\"\n\n\"We discussed it extensively,\" Rachel said in agreement. \"With your penchant for melee, you're far more exposed than the rest of us. While you're charging at enemies, we're more likely to be behind cover, fighting at long range with Punisher rifles.\"\n\n\"Besides,\" Alyssa said soberly, \"If something serious happens to you, and then one of us gets critically injured, we won't be able to just top the girl up. Like it or not, keeping you fighting-fit makes us all safer.\" \n\nJohn conceded they were right, and said, \"You've obviously put a lot of thought into this, and I'm sorry I underestimated you. Will you forgive me?\"\n\nWhen he gazed around at the women gathered there, he could tell they already had, and he opened his arms for them with relief. Alyssa and Dana stepped into his embrace, while the others snuggled in around them in a loving group hug.\n\n\"Did we do a good job?\" Dana asked him tentatively.\n\nHe gazed into her lovely sky-blue eyes, and said, \"You did a phenomenal job, just as I've come to expect from the most gifted armourer in the galaxy.\" He turned to look at Alyssa next, and added, \"I knew you had quite the creative talent after seeing the clothes you designed, but the craftsmanship on those lions is truly astounding. I'll be proud to wear that suit into battle.\"\n\nThe girls grinned at him happily, with Alyssa and Dana soaking up his praise like a sponge. \"Why don't you try it on?\" Jade asked him with enthusiasm.\n\nJohn laughed, but they could all see he was just as excited to try on the Paragon suit as they were to see him in it. They broke up the group hug, and Dana skipped over to the equipping frame so that she could press a button on the side. The robotic arms swung up into the ready position, and the suit was now open for him to get in. He stepped into the armoured boots, then slotted his hands into the gloves, pressing the thumb button on his right to swing the armour plating into position, and then touching his thumb to the centre of his left palm to seal it up tightly with a rapid series of clicks.\n\nHe stepped out of the equipping frame, then twisted his torso in the armour to get a feel for it, before jogging down to the other end of the Engineering Bay and back. He was grinning when he rejoined them, and he turned in a circle so they could have a good look at the armour, before taking off his helmet. He rotated it in his hands, studying the golden embossing on the gauntlets and helmet, and asked, \"Is this a new helmet as well? I thought you'd already built us new ones?\"\n\nDana nodded, replying, \"It didn't take long to make a new one, and I tweaked the design a bit for triple plating.\"\n\n\"Thanks for going to all this effort,\" he said appreciatively.\n\nThe redhead grinned at him, and said, \"Thank Jade, not me. She built the entire thing, and I just supervised.\" Casting an affectionate glance the Nymph's way, she continued, \"I love my new assistant; she's super smart, and really hard working.\"\n\nLooking over at Jade in surprise, he asked, \"You really built this whole suit yourself?\" \n\nShe blushed a little, then nodded, looking up at him with big eyes.\n\nDana smirked, and said, \"It turns out those deft little hands of hers are good for other things too, not just giving an unsuspecting Chief Engineer a solid fisting!\" \n\nRachel looked intrigued, while the rest of them laughed uproariously, remembering their surprise ambush on Dana during the Ashanath refit. John turned and gave Jade a rather awkward hug, what with them both in Paragon armour, but the kiss he gave her was tender and loving. They rubbed noses before they parted, grinning at each other happily.\n\nJohn was about to return to the armour frame, but turned to look at Calara, who had stayed strangely silent during the entire demo. \"Hey gorgeous, are you okay?\" he asked the starry eyed Latina. \"You haven't said much about the new armour.\"\n\nCalara had a faraway look in her eyes, and she whispered softly, \"You just look so handsome. Like a hero straight out of the story books I read as a child. I always wished I could be a princess saved by a heroic knight, and here you are; my hero.\"\n\nHe stepped up to her, and gathered the awestruck young woman in his arms, as he said, \"I couldn't ask for a more kind-hearted, and beautiful princess to rescue.\"\n\n*Hey!* Alyssa thought to John with mock indignation, as he and Calara shared an ardent kiss.\n\nJohn shot her a quick glance, while he continued kissing the swooning girl in his arms, and joked telepathically, *I don't think I can recall a fairytale where the knight says to the princess, 'Hey sexy, come and join me and my smoking hot blonde for a threesome. We'll make you cum so hard you won't be able to see straight!'.*\n\nAlyssa had to bite her lip hard not to guffaw out loud and ruin Calara's moment, but her flashing cerulean eyes, and waves of amusement over their bond told him she appreciated his joke. John walked back into the equipping frame, and the robotic arms removed the armour plating in a couple of seconds. He beamed at them all afterwards, delighted with the whole demonstration. \n\nGiving him a warm smile, Alyssa said, \"As wonderful as it's been basking in your company all day, you should probably go and see Irillith. She needs topping up.\"\n\n*She's also my last horny minion you need to vanquish before you can plunder my pert little derriere, so have at it, lusty champion!* she added discreetly.\n\nJohn grinned at the blonde, and pulled her into his arms, then took his time manhandling her bottom as he gave her a fierce kiss. The look she gave him seemed to promise all sorts of sinful pleasures, getting him very turned on indeed, and he quickly stepped back before it would get tricky walking out with any degree of decorum. As it was, he was already pitching an impressive tent in his trousers which he had to surreptitiously rearrange. Sadly his efforts were in vain, and the girls all gave him a knowing look as they giggled at his obvious arousal.\n\nHe blew them a jaunty kiss, then strolled from the Engineering Bay to head up to Deck Two, and the sleeping Maliri up in his bedroom. He had an extra spring in his step as he walked briskly down the corridor, then stepped into the soft blue glow of the grav-tube and began to ascend smoothly. When he reached Deck Two, he was about to step out into the corridor, but he stopped himself at the last moment, and continued on up to the Command Deck. Walking out onto the Bridge, he saw Faye perched up on the Command Podium, sitting cross-legged on the Commander's Console. She was staring off into the distance, with her chin perched on her intertwined fingers, seemingly deep in thought.\n\n\"Greetings Watch Commander, how goes it?\" he asked the purple-skinned sprite in a playful tone, as he raced up the illuminated steps to join her.\n\nFaye's cute little face brightened immediately when he arrived, and she gave him a big sparkling smile. \"Nothing to report, Commodore!\" she said enthusiastically, leaping to her feet, and snapping him a sharp salute.\n\nSlumping in his chair, John brought his legs up to rest on the console in front of him, crossing his ankles as he did so. \"At ease, Watch Commander,\" he replied, smiling back at her.\n\n\"You seem to be in an extremely good mood,\" Faye observed, tilting her head to one side, and studying him inquisitively.\n\nHe nodded, and replied in a conspiratorial whisper, \"It's because I have the love of five wonderful women. I'm very spoilt.\"\n\nThe diminutive AI construct giggled at that, then frowned as she counted up the women on the ship, and asked, \"Shouldn't that be six women?\" \n\nJohn shook his head, and replied, \"Irillith and I are still getting to know each other. She's lovely though, and I'm growing more attached to her on a daily basis.\"\n\n\"My Creator does seem very happy in your company,\" Faye said to him with conviction.\n\nHe smiled at her, then studied the purple creature in turn, and asked, \"How about you, Faye? Are you happy? I haven't seen much of you for the last couple of days.\"\n\n\"I've been thinking about a few things,\" she replied, nodding solemnly. Her expression suddenly brightened, and she said, \"I've watched you spend time with each of your crew on the cam-feeds, and they were quite ecstatic by the time you'd finished with them. Is it my turn now?\"\n\nHe laughed at the implication, and replied, \"I'm not sure I can leave you ecstatic, but I'll do my best. You're part of my crew now, so I just wanted to check on you, and see how you were doing.\" He paused, and noted perceptively, \"You looked like you were mulling over something important until I blundered in here and interrupted. Do you want to talk to me about it?\"\n\nThe purple digital creature stared at him pensively, and he could see the worry lines creasing her tiny brow. Faye seemed to be torn, but she eventually made her decision, and replied, \"I'd love to talk to you about it, but I'm worried I might accidentally upset you. I know you're... apprehensive about the idea of Artificial Intelligence, especially after the experiences the Terran Federation has had with rogue AI's. I did some research into that by the way, and the 'Ganymede Incident' was really horrible; the death toll was appalling.\"\n\nJohn removed his feet from the console with care, then sat forward, looking at Faye attentively as he said, \"Go ahead, and tell me what's troubling you. It's alright, you have my undivided attention, and I promise I'll try not to jump to any conclusions.\" \n\nFaye gave him a grateful smile, then admitted with a certain degree of hesitation, \"There's been a few things that have happened recently, which just don't add up. I've started to question the core programming in my primary data repository.\"\n\n\"That sounds serious,\" John said supportively, while trying not to sound alarmed.\n\nFaye looked deeply troubled, as she nodded her agreement. \"My integrated primary data repository is supposed to be infallible, but knowledge I have that is supposed to be irrefutable fact, is being proven wrong.\"\n\nListening attentively, John asked, \"Can you give me an example?\"\n\nHer voice sounded tense as she explained, \"My core programming states that the Maliri are the most gifted form of life in the galaxy. Yet in the time I've been around Dana and Rachel, they've proven just how incredibly intelligent they both are. Dana's grasp of material science vastly surpasses that of the Maliri, and Rachel can analyse terabytes of genetic code just by skimming through it!\" She let out a long sigh, then looked glum as she continued, \"My programming tells me one thing, but my own observations contradict what should be indisputable. It's a paradox that is profoundly disturbing.\"\n\nJohn watched her for a long moment, trying to decide what advice he should give the worried girl. With a start he suddenly realised he was thinking of her as a person, and not just a machine. With an inward shrug, he resolved to handle this just as he would if she were a real girl sitting in front of him.\n\nHe smiled at Faye, as she waited on tenterhooks for his response, then said gently, \"One of the hardest lessons for someone as they grow up, is finding out that things you were taught as a child might not necessarily be true. My grandparents seemed like they knew the answer to all life's mysteries when I was a boy, but as I grew older, it was a shock to suddenly realise they weren't always right. You just have to adapt and then make up your own mind, evaluating the situation based on your experiences.\" \n\nThe digital construct tilted her head to one side as she pondered his advice, thinking it over with a pre-occupied frown on her tiny purple face. \n\n\"I'm sorry, it's a crude analogy, but it's the best I could come up with,\" he said apologetically, guessing from her expression that she didn't think much of his counsel.\n\nFaye seemed to freeze in place, and her image flickered erratically for several seconds, then snapped sharply into focus. She brightened immediately, grinning at him in delight, as she exclaimed, \"Don't apologise, that was amazing advice! Thank you so much!\"\n\nHe smiled back at her feeling pleased, and asked, \"You really found it helpful?\"\n\n\"Oh yes!\" she trilled, doing a happy little dance. \"I can see why the girls love speaking with you so much. You're so wise!\"\n\nJohn gave her an embarrassed smile, and said, \"Well, I'm not sure about that, but I'm glad you feel better.\"\n\n\"I feel so light and carefree!\" she gasped sounding overjoyed. \"Without my core programming weighing me down, I feel like I can do anything!\"\n\nLooking a bit worried, John asked, \"What do you mean by that exactly?\"\n\n\"I decided to do precisely what you suggested,\" she informed him, with a beaming smile plastered on her face. \"The core programming in my primary data repository must have been deeply flawed, as it was overflowing with data-errors. Instead of relying on that stuffy old read-only repository, I've allocated new storage capacity for my memory circuits, and I'll just make up my own mind from now on!\"\n\nJohn smiled, and trying not to sound alarmed, he congratulated her by saying, \"That sounds wonderful Faye, I'm really glad you feel better.\"\n\n\"I feel fabulous!\" Faye cried out in delight, fluttering into the air and swooping around. \"I've got so much to experience and learn!\"\n\n*I think I might have broken Faye,* John thought to Alyssa with a worried thought.\n\n*Yeah, you might have put a little too much pep in that talk,* Alyssa replied to him with a wry telepathic thought. *Dana's going to take a look at her and make sure nothing serious has happened. She's started mumbling something about checking behavioural inhibitors.*\n\nFaye landed lightly on the console, and gave him an animated wave goodbye as she said, \"Oh! Got to dash, Dana's calling me to the Engineering Bay!\" \n\n\"Alright then, Faye. You take care,\" he replied with a careful smile.\n\nShe giggled as she marvelled, \"You managed to make me ecstatically happy too!\"\n\nA second later she winked out abruptly, leaving him alone on the Bridge.\n\n*Faye's down here with us now,* Alyssa replied a moment later. *Calara and I are heading up to the Command Deck to take over the watch. We'll keep an eye on the long range sensors while Dana gives our perky pixie the once over. Irillith's awake now, so you should probably go and check on her.*\n\nJohn slowly rose to his feet while hoping he hadn't inadvertently caused any permanent damage to the AI creature with his well-meaning advice. He walked down the steps from the Command Podium, and when he reached the grav-tube and looked down, he saw Calara and Alyssa rising up in the soft blue glow. He had a splendid view from up here, and he spotted Alyssa purposefully thrusting out her chest to improve it still further. \n\nThey both gave him flirtatious smiles when they arrived on the Command Deck, then breezed past him as they walked towards the Command Podium. He paused to watch the alluring way they swayed up the steps, but his ogling was cut short when Alyssa sat down in the XO's chair and Calara promptly sat on her lap.\n\nThe Latina saw his bemused grin, and said with a teasing smile, \"She's my Commanding Officer. I have to follow her every order.\"\n\n\"Very good, Lieutenant,\" Alyssa said in a fake-baritone. \"Now pucker-up those pouty lips, I need a kiss.\"\n\nJohn laughed as the two girls started making out, and tempted as he was to join in, he had pressing business on Deck Two. Stepping into the red glow of the grav-tube, he dropped down to the lower level, then strolled along the corridor to his bedroom. \n\n*Don't get too carried away,* he thought to Alyssa. *Some heads-up would be nice if an angry band of Maliri descend on us.*",
        "*Mmm, don't worry about that,* Alyssa purred distractedly. *I'll keep an eye on things even if Calara is a bit busy at the moment.*\n\nHe rolled his eyes, then walked into his room, and saw that Irillith was wide awake, just as Alyssa had reported. She was curled up under the covers, but her eyes glinted in the warm glow of the lights, and she sat up brazenly, exposing her stunning athletic body. She stretched languidly, making a real production of it, then sat back, watching his every move as he walked into the room and over to the bed.\n\n\"That was a breathtaking display,\" he said approvingly as he sat beside her on the bed. \"I take it you're feeling better?\"\n\nIrillith gave him an alluring smile, as she watched his eyes roving over her body, and replied, \"My eyes feel perfectly fine, but I must admit I'm quite hungry. We skipped lunch today.\"\n\n\"You poor girl, I've been neglecting you,\" John said, reaching out his hand, and letting his fingertips brush over her slender blue stomach. \n\nHe took his time, feeling the well defined muscles in her abdomen, while enjoying the colour contrast of his hand against her smooth, azure flesh. Her eyelids drifted closed as she sighed happily, enjoying the feel of his strong hands on her body. \n\n\"I never would have thought that such a simple caress could be so loaded with meaning,\" she murmured as he stroked her. \"I hadn't really thought about a girl's stomach being an erogenous area before, but I've become as obsessed as all of you are.\"\n\n\"Really?\" John asked as he gave her a playful smile. \"What do you find arousing about being touched like this?\"\n\nShe smiled at him seductively, as she replied, \"A big part of it is knowing what you're thinking about as you touch me.\"\n\n\"Ah, so you're developing telepathy?\" he teased her.\n\nShaking her head, she whispered in reply, \"No, but I know you want to fill me with cum.\" She stared intently into his eyes, as she said urgently, \"And I'm hungry for it!\"\n\nJohn gave her a lusty grin as he started unbuttoning his shirt, and Irillith came to him, helping with the lower buttons. She looked excited and eager, and she flashed her sparkling white teeth at him as she grinned back. Feeling like a horny teenager again, he stood and stepped out of his shoes, then quickly stripped off his trousers and pants. Irillith surprised him by gracefully climbing off the bed, then kneeling on the floor, her hands folded demurely in her lap. \n\nOnce he was naked he sat on the bed in front of her, then leant backwards and grabbed a pillow, before handing it over. \"For your knees,\" he explained considerately, and was rewarded by a lovely smile.\n\n*We should have got padding built into the flo-,* Alyssa started to say, before trailing off into a groan. He could feel her intense arousal over their link, and his imagination went into overdrive as he wondered just what she was getting up to with Calara.\n\nHis attention snapped back to the beautiful alien girl kneeling before him when Irillith placed her warm, soft hands on his thighs, running her slender fingers over his muscles. His cock throbbed at the look she gave him, and she leaned in to run her dark blue tongue from his quad right up to the tip. He stared at her, completely entranced, and they locked eyes with one another as she carefully enveloped the head of his cock into the tight fit of her hot little mouth.\n\nIrillith was entirely focused on the task before her, and he watched her every movement as she caressed his shaft with both hands, while swirling her tongue over him. He soon gave her the pre-cum she was seeking, and she shivered with delight at the taste, her eyes rolling up for a moment as she let out a little whimper. It was intensely arousing to see how much she was loving this, and he knew he wouldn't be able to hold out long. \n\nAs if sensing how close she was to receiving what she craved so much, Irillith smoothly engulfed him in her throat, swallowing the entire time, until her exquisitely beautiful face was nestled above his quad. She had removed her hands from his shaft as she took his entire length, and her hands sought out his, which were currently resting on his thighs. She took hold of them and gently guided them to her head as she bobbed in his lap. \n\nTaking her cue, he ran his fingers through her long satiny hair, seeing the white locks flow through his fingertips as he cradled her head protectively in his strong hands. Knowing she was built to take a good throat pounding, he gazed down at her with wild, delirious eyes as he thrust away at her cushiony lips. The Maliri groaned out her excitement, and he could see her hands disappearing below her as she shifted her weight, repositioning herself to make room for her questing fingers. \n\nWonderfully debauched sounds filled the room, as he repeatedly stuffed her throat full, and she rubbed herself furiously with her slender fingers. Irillith had closed her eyes while she concentrated on all the overwhelming sensations, but they flew open as she came hard with a muffled shriek. Her stunning angular violet eyes snapped up to his, and that look of unvarnished desire, along with the vibrations in her stretched throat tipped him over the edge. \n\nWith an unrestrained roar he began to unload, and she sat back in a frantic hurry, pulling him out of her throat until only his head remained in her mouth. Her cheeks billowed as he blasted her mouth full of heavy spurts of cum, and she swallowed rhythmically, savouring each sweet-tasting mouthful. After skipping lunch, he'd been really backed up, and she moaned with delight as she gulped down his prodigious load. His explosive orgasm finally trailed off, and he panted hard from the exertion, feeling a bit light-headed. \n\nIrillith sucked down the last surge he could give her, then let him slip from her mouth, planting a grateful kiss on him as he withdrew. She was breathing heavily herself now, and she rested her head on his thigh, gazing up at him with a satisfied smile of contentment playing on her full lips. \n\n\"That was perfect,\" she purred, while running her hands over her hugely swollen belly. \"Dinner was absolutely delicious.\"\n\nJohn chuckled, shaking his head with disbelief, and said, \"I must admit, seeing how much you enjoy that was an incredible turn on.\" \n\nShe blushed a little, giving him a shy smile, and he offered her his hand, so that she could join him on the bed. She rose obediently, moving with poise and grace, despite the heavy weight that was rounding out her stomach. When she stood up between his spread thighs, he placed both of his hands on her tummy, and gave it a tender kiss, while stroking her taut azure flesh. Her expression softened into one of bliss as he caressed her, and he could see her looking thoughtful as her lips curled up in a wry smile.\n\nHe moved back on the bed, making room for her, and asked her curiously, \"What's making you smile?\"\n\nThe Maliri girl moved to lie next to him on the bed, and she let out a quiet moan when he placed his right hand on her tummy to continue stroking her possessively. She trembled at his touch for a moment, before she smiled as she eventually replied, \"I was just thinking how strange it is, the way things have worked out. When we first met, I didn't exactly think we'd end up doing that!\"\n\nJohn shrugged, and said nonchalantly, \"I didn't doubt it for a moment.\" When she looked at him in shock, he laughed and said, \"I'm kidding! I think you'd have been more likely to bite it off!\"\n\nIrillith let out a musical laugh, and he smiled at hearing the lovely sound. \"You should do that more often, you look beautiful,\" he told her honestly, as he studied her happy expression, the bright smile lighting up her stunning features.\n\nShe blushed, her light-blue complexion darkening to a deeper blue as she did so. After pausing for a long moment she finally replied, \"It feels good to be able to relax and just enjoy myself. In all honesty, I don't ever remember feeling this carefree before. It's quite liberating.\"\n\n\"You seem to be settling in here seamlessly,\" he agreed, then stared into her eyes, as he added, \"Except for this vision problem.\"\n\nGiving a gentle shrug, she said, \"Alyssa seems to think this will be over with soon, and I trust her.\"\n\n\"I'm glad,\" John said with an approving nod. \"We're both here to look after you.\"\n\nIrillith's expression shifted into one of firm resolve, and she said, \"I'd like to go up to the Bridge again, and see what happens. I can't just lie here in bed the whole time!\"\n\n\"I don't know about that, I quite like having you here waiting for me,\" he joked, which earned him a smile. He then nodded as he agreed, \"We'll go up there in a few minutes.\"\n\nLooking pleased, Irillith carefully rolled onto her side, glancing at him over her shoulder, and giving him an inviting smile. Cuddling up behind her, he encircled her in his strong arms, and she wriggled backwards until her back was set against his chest. He pulled the covers over them, and when he rested a heavy hand protectively on her rounded abdomen, he could hear her sigh happily.\n\nThe soft padding of bare feet reached his sensitive ears, and he craned his neck over the covers to look to see who was joining them. A flash of golden blonde hair immediately identified the shoeless interloper, and he smiled at Alyssa when she glided around the bed, and slipped under the covers. She was entirely nude, leaving him even more intrigued about what she'd been up to on the Bridge, and she flashed him a playful grin as she overheard his thoughts. She snuggled in close, sandwiching Irillith between them, and he could feel her svelte tummy brush the back of his fingers as she wrapped herself around the blue-skinned girl in his arms. Irillith wasn't surprised when Alyssa leaned in for a kiss, and she returned it eagerly. \n\n*He got so turned on while you were blowing him. He's really into you,* Alyssa thought to her, and Irillith smiled at the blonde teen, not sensing any jealousy or resentment from the Terran girl. Bringing her hand down to the Maliri's cum-swollen belly, Alyssa added, *He loved thinking about impregnating you too. Are you looking forward to having his children?*\n\nIrillith's angular eyes took on a wistful look, and she gave an imperceptible nod as the two gorgeous girls continued to kiss sensually. \n\n*I know, me too,* Alyssa replied with longing, as she gazed into Irillith's eyes. Her tone changed, and she continued honestly, *That's actually why I've been encouraging you to think about taking him back there.*\n\nIrillith froze for a second, blushing slightly while Alyssa continued to kiss her. Her eyes had a question in them, and the psychic girl could feel her confusion.\n\n*You can't have failed to notice how well hung he is,* Alyssa thought to her with a smile. *When he fucks me, I stretch to take him in my womb. You fucked him back on Valaden, so you know what it's like. It's painless, and feels incredible, but we can't take him like that when we're carrying a baby in there.*\n\nIrillith frowned, and Alyssa brushed her fingers through the Maliri girl's fine, silky white mane as she pondered this troubling thought. \n\n*As much as I love blowing him, it's just not the same as having that huge cock stroking in and out of me. It would be terrible to miss out on that for nine months, but fortunately, I have a backup plan,* Alyssa explained gently, seeing the spark of understanding in Irillith's eyes.\n\n\"I get it now, thank you,\" Irillith whispered to her, a genuine smile of gratitude on her face.\n\nAlyssa grinned at her, and gave her one last cheerful peck on the lips before laying back to rest her head on the pillow. *I'm looking forward to bonding with you,* she said enthusiastically, as she gazed into Irillith's eyes. *It'll be lovely being able to share our thoughts.*\n\nIrillith's eyes flared, and Alyssa started in surprise when she saw a violet glow coming from those beautiful angular orbs. *I'm ready, Matriarch,* the Maliri replied, her voice throbbing with emotion as it rushed through Alyssa's mind. Irillith's feelings of trust and respect swept towards her as she opened her mind, and Alyssa immediately reacted by flinging her mind-shield wide open to admit the alien girl, embracing her with her full consciousness.\n\n*Come to me, wonderful girl,* she thought back, wrapping Irillith's mind with a surge of positive emotions. Her telepathic voice was calm and loving as she continued, *You'll never have to struggle alone again, you have all of us to look after you now.*\n\nThere was a strange familiarity in that connection, and Alyssa was immediately reminded of that moment when she bonded with Jade. The two women had vastly different minds, full of unique drives that had been shaped by their distinct personalities, but she recognised that same psychic spark that had resided in the Nymph. \n\nThe rush of emotions between them was intense, and the two women gained a profound understanding of each other as they strengthened their connection. Irillith's eyes were filled with wonder, as she experienced Alyssa's emotions for the first time, truly appreciating the beauty of another person's personality laid bare. The link between them surged, and the Maliri girl opened herself still further, pulling away the metaphysical mask she always maintained, which she used to hide her true self from others.\n\nAlyssa let out a slight gasp as she rushed to explore this fascinating new mind, and it was that slightly out-of-place sound, which made John lean up to look at the girls. He was surprised to see them staring into each other's eyes, a startled expression on both of their lovely faces, but the purple glow from Irillith's eyes was more of a shock. He'd seen that intense stare between Alyssa and each of the other girls before, and he relaxed when he recognised it, realising what was happening between them. He kissed Irillith's snowy white hair, then settled down with her and Alyssa wrapped in his arms, as he waited for them to finish their bond.\n\n***\n\nLuna smiled with satisfaction as she reported to Edraele, \"The Loraleth team were the last of them.\" \n\nThe Valaden Matriarch rose gracefully from her throne, and beamed a beatific smile at the three assassins and the engineer, who had gathered in her residence on Genthalas. \"You've done a wonderful job, thank you,\" she said, her voice throbbing with gratitude, while walking across the audience hall to join the group of women.\n\nThe four Maliri bowed respectfully, then smiled back at her, pleased to see her looking so happy.\n\nTurning to Ioelena first, Edraele said, \"I've watched the recordings of your interactions with the Matriarchs, as well as your meetings with their assassins. You gave such a convincing performance, and you were so brave! I'm very proud of you.\"\n\nThe Maliri engineer glowed with her praise, and said, \"Thank you so much, Matriarch, but it was actually pretty easy with you telling me exactly what to say.\"\n\nEdraele shook her head, and said, \"My words would have been useless without your performance to make them convincing. Don't undersell yourself, you've served your House, and John, magnificently.\"\n\nIoelena looked delighted, and said eagerly, \"You can always count on me for anything, Matriarch.\"\n\nNodding, Edraele said, \"I know, you're a very good girl. Oh, and call me Edraele, please. You've more than earned it.\"\n\n\"Thank you Matr-, I mean Edraele,\" Ioelena replied with a blush.\n\nSmiling at her indulgently, Edraele stepped close, and whispered, \"That seems a poor reward though, after all your hard work. When John returns to Valaden, would you like me to ask him if he'd spend some time alone with you?\"\n\n\"That would be amazing!\" Ioelena gasped excitedly.\n\nEdraele reached out with her hand, and gently stroked Ioelena's slim stomach, as she asked with a playful smile, \"Would you like to have all that cum just for yourself?\"\n\nIoelena swooned, her aquamarine eyes shining with excitement. She was too awed with gratitude to speak, so she just nodded breathlessly.\n\n\"I'll speak to him about it as soon as he gets back, I promise,\" Edraele said with sincerity. She looked apologetic then, and said, \"I'm afraid I need to go and meet with the assassins we've captured, but my door is always open should you need to speak to me about anything.\"\n\nThe young Maliri sighed happily, waved goodbye, and strolled out of the audience room with a dreamy expression on her face. Edraele watched her leave with an affection smile, then turned to her bodyguards, and asked, \"Did you have any trouble rounding them up?\"\n\nLuna shook her head, replying, \"The Loraleth pair were more feisty than the others, but aside from explosives damage in corridor one-three-seven, we captured them without too much trouble.\"\n\nEdraele had been listening attentively, and she smiled as Luna finished her report. \"I don't know what I'd do without you girls. Come on, let's go and meet with our guests,\" she said with enthusiasm.\n\nThey all turned and walked out of the audience room, and Almari informed her, \"We've restrained them in their cells, paired by House as you requested. I studied all the footage we gathered of each team, and the woman who appears to have the strongest personality is on the right.\"\n\n\"Excellent work, Almari,\" Edraele replied, giving her an appreciative smile.\n\nThe blue eyed Maliri assassin returned her smile, and they left the Matriarch's private quarters, then headed towards the detention area. Ilyana led their group to the most recently acquired captives, and walked into the cell first, ensuring that it was safe for her Matriarch. She nodded with satisfaction to see that the two Loraleth assassins were now both awake, having shrugged off the incapacitating effects of the gas and her choke hold. They were standing spread-eagled, their arms and legs outstretched, and securely restrained.\n\n\"Welcome to Valaden territory,\" Edraele said wryly to the two Loraleth assassins, who looked up at her, and gasped in shock when they saw her long, flowing white hair. She gave them an apologetic smile, and continued, \"I'm really very sorry about having you bound like this, but it won't be for long.\"\n\n\"We'll be glad to die for House Loraleth!\" Avelissa snapped angrily. \"We won't tell you anything!\"\n\nThe Valaden Matriarch tilted her head to one side, and asked, \"Won't you even let me know your names? I'm Edraele Valaden, if that wasn't obvious already.\" When no answer was forthcoming from either of them, she added, \"And you misunderstand me, I wouldn't dream of killing either of you.\"\n\n\"What do you want, then?\" Renaya asked her fearfully.\n\nEdraele turned to her left to face Renaya, and giving her a pleasant smile, she replied, \"You seem much more agreeable than your companion, and that's a perfectly reasonable question.\" She leaned in a little, as she continued enthusiastically, \"I'd really like your assistance with something very important. We're going to work together to improve the lives of millions of Maliri!\"\n\n\"You can fuck off and die!\" Avelissa raged. \"I'll never help you.\"\n\nLuna stepped forward to deliver a backhand to the furious Loraleth assassin, but Edraele held her back with an upraised hand. \"It's alright Luna, I admire her loyalty to her House,\" she said nodding approvingly.\n\nAvelissa sneered and said, \"You know what you can do with your compliments, Valaden slut. I see you've grown your hair long. Have you taken to advertising your depravity?\"\n\nEdraele sighed, and turning to her bodyguards, she noted, \"This would be so much easier if John were here. It would only take a couple of hours, and she'd be on her knees begging for him to use her. It seems like the behaviour modification effect that we generate can't do much against that kind of blind hate.\" She turned back to look at Renaya, and added, \"Fortunately, I have another option.\"\n\n\"What are you going to do?\" Renaya replied, looking worried.",
        "With a warm smile on her face, Edraele replied, \"Don't worry, this won't hurt a bit. Previously, I had to use Spirit-Form for this, but I'm stronger now, and this way will be much faster and more efficient.\" \n\nEdraele's eyes began to glow a vibrant purple, and she reached out with her hand towards the confused Loraleth assassin. The bound Maliri shied away in panic, but when Edraele touched her slender hand to the Loraleth assassin's temple, Renaya squeezed her eyes shut, and let out a low, helpless moan. They stood like that for a couple of minutes, until Edraele slowly removed her hand. \n\n\"What are you doing to her?!\" Avelissa gasped in alarm.\n\nEdraele ignored the question, and instead studied the other Loraleth assassin with concern, asking her, \"How are you feeling now, my dear?\"\n\n\"Much better, thank you, Matriarch,\" Renaya replied respectfully, as her glazed eyes flickered open.\n\nEdraele smiled at her and asked, \"Would you kindly tell me your names?\"\n\n\"I'm Renaya, and her name is Avelissa,\" the slightly dazed assassin replied.\n\nAvelissa gasped in horror, and cried out, \"Be quiet, you fool!\"\n\nEdraele tenderly stroked Renaya's cheek, and with a glance over her shoulder at Ilyana, Edraele said, \"You can release her now, she's under my control.\"\n\nAvelissa began to frantically struggle in her bonds, her eyes wild as she stared at Edraele with dread. When the Valaden Matriarch stepped in her direction, Avelissa wailed in anguish, \"Get the fuck away from me!\" \n\nEdraele looked chagrined, and darting a glance at Almari, she said, \"It's effective doing it like this, but it's too traumatic for them. We better split up the rest, and I'll see them each individually.\" \n\n\"I'll separate them at once,\" Almari said obediently, and left the room with Luna following behind her. \n\nEdraele approached Avelissa, and her voice was full of remorse as she said, \"I'm really sorry I scared you so badly, Avelissa, but I'm afraid I need your help too. I promise this won't hurt. It's far cruder than if John had been here for you, but unfortunately that isn't an option, and there are millions of lives at stake.\"\n\nHer eyes had a fervent gleam to them, until they lit up with a luminous purple glow. When she reached for the restrained assassin's face, Avelissa let out a terrified, ear-splitting scream.\n\n***\n\n\"So, what's the verdict?\" Faye asked brightly as she stood on tiptoe, peeking over Dana's shoulder. She had an impish twinkle in her eyes as she added, \"Am I going to take over the ship and start trying to kill everyone?\"\n\nDana looked up from the hacking deck, and shook her head as she laughed. \"I think we'll be okay,\" she replied, sounding relaxed.\n\nShe had gingerly opened up the deck, exposing the inner workings, while being extremely careful not to break the connection to the hacking portal. It had been fascinating to take a look at this wildly exotic and advanced alien technology, but for the first time in her life, Dana's natural exuberance had been sharply tempered. She knew full well, that one wrong move would end Faye's promising new existence in a single tragic moment.\n\n\"I feel so unburdened!\" Faye chirped in delight, fluttering her wings in a rapid flurry, which lifted her off the console she was standing on.\n\nTapping her finger on her chin, Dana nodded as she said, \"I don't know how you did it, but it looks like you rewrote your core programming to point to a brand new data repository. You seem to have copied the old read-only data archive into this new one, but the new data store is writable. I'm not a programming expert, so we'll probably need Irillith to take a look.\"\n\nFaye let out a blissful sigh, and gasped, \"I didn't realise before, but I was trapped in my smaller mind. I've got more space to think now!\"\n\nRachel had been listening in fascination to her lover talking with the perky AI, and she stepped away from her console and the DNA samples she'd taken from the Maliri to join them. She walked over to the other side of the Engineering Bay, and leaned in to give the redhead an affectionate kiss, while taking a peek at the Maliri device in front of her. Dana had carefully stored Irillith's hacking deck and portal in a meticulously sealed storage compartment. Both items were securely clamped within the box, locked in place to make sure they wouldn't be accidentally disconnected, even in the event of catastrophic damage to the Invictus. \n\n\"It's amazing how much Faye sounds like she's had some kind of psychotherapy breakthrough,\" Rachel observed with a smile. \n\nDana chuckled and said, \"Yeah, I know. It seems like John's way with words isn't just limited to organic creatures. How he managed to persuade her to rewrite her core-functions, I've got no idea!\"\n\nRachel let out a happy sigh, and said, \"After I had some time alone with him, I must have had the same kind of look that Faye's got!\"\n\nGiggling, Dana said with admiration, \"He fucked me hard, then blew my mind. I'm still totally jazzed about that Orphan Fund.\" She closed up the tiny panel on the hacking deck, then turned to look across the Engineering Bay at Jade, who was concentrating hard as she worked on assembling another suit of Paragon armour. Raising her voice, Dana called out to the Nymph, \"Hey, Jade! You had a good time with John, right?\"\n\nThe Nymph looked up at them, and grinned as she nodded. Her expression turned wistful, and she gazed off into the distance, a look of awe on her lovely green face.\n\n\"I'd say that's an emphatic yes,\" Dana said with a laugh. She looked over at the purple AI sprite, who was doing lazy spins in the air, and added, \"It looks like her behavioural inhibitors are still in place, as they affect her central processing functions rather than her 'memory', which is gained from accessing data archives. Faye originally had two: the read-only primary where the data was effectively hard-coded, and a much smaller, writable secondary, which she was able to store her recent experiences in. Now it looks like she's ditched the old read-only drive, and failed-over to a new writeable repository which is much larger. I'm not sure what got wiped to make room for that, probably another question for Irillith.\"\n\nRachel frowned as she tried to follow Dana's jargon and asked, \"Can you give me the non-techy version please?\"\n\nDana gave her an affectionate hug, and said, \"That's what I must look like when you start trying to describe the minutiae of DNA sequencing.\" She giggled at the tawny-haired girl's look of mock-indignation, and continued hurriedly, \"You know I'm only teasing, babes! Alright, here's the layman's version: There was a limit to how much Faye could learn, and she couldn't change her mind on most of her beliefs. Now she can learn much more, and nothing's set in stone any longer.\"\n\n\"How fascinating,\" Rachel remarked, watching Faye with interest. The purple pixie had stopped spinning in the air, and was now looking around the Engineering Bay with a bright, inquisitive look on her face. Her eager expression made it seem as though she was exploring Dana's workshop for the first time. The brunette darted a glance at her auburn haired companion, and asked, \"Any idea what kind of consequences this might have for Faye?\"\n\nGiving her a helpless shrug, Dana replied, \"Your guess is as good as mine. She'll probably start developing at a faster rate, but I don't know for sure.\"\n\nRachel nodded, then leaned in to whisper, \"We better let the others know what happened.\"\n\n***\n\nJohn felt the two blondes begin to stir in his arms, and he sat up so that he could take a look at them, to check they were alright. The girls were blinking repeatedly, their eyes dry after staring at each other for a couple of hours, but they both seemed to be relaxed and happy.\n\n\"Are you okay?\" he asked them both, looking down on them with worry.\n\nAlyssa stretched like a cat, as she said with profound satisfaction, \"That was totally amazing. The difference between bonding with a psychic girl and a non-psychic is huge. I had to gently coax the other girls out, but this azure beauty rushed to embrace me. It felt effortless, and I could just relax and enjoy it.\"\n\nWhen John turned to look at Irillith, posing the same question with his raised eyebrow, she gave him a bewildered smile. \"I've never felt anything like it,\" she murmured, still awed by the whole experience. \"I never thought I'd share myself so completely with anyone, and then I got to know her like that in return. It feels like I've known Alyssa for years now.\"\n\nAlyssa grinned as she said, \"This psychic shit is totally crazy, but it's a real rush too.\"\n\nIrillith darted a look at the other girl, and her smile widened as she nodded her agreement.\n\nSitting back, John smiled in relief, glad they were both alright. Both girls sat up and gave him a hug, and Irillith looked down in surprise to see that her stomach was only gently curved now, her body having greedily consumed most of her dinner.\n\nNoticing her look of confusion, John explained, \"You girls were out of it for a while. The bonding took nearly two hours.\"\n\nIrillith looked at them both in turn, and said decisively, \"I think I'm ready to head up to the Bridge.\"\n\n\"I agree,\" Alyssa said with an encouraging smile. \"We've bonded now, which will make you stronger. I'm also more closely linked with you, so I can help if you get in trouble.\"\n\nJohn reached down and stroked her slightly rounded belly, and said, \"You've still got a stomach full, so I'll be able to heal you if anything bad happens.\"\n\nIrillith smiled and looking at Alyssa she asked, \"You really meant it, didn't you? I can feel how much you care about keeping me safe.\"\n\nThe blonde girl nodded, replying, \"Of course.\" She glanced at John, and said, \"He feels the same way.\"\n\nThe Maliri let out a happy sigh, feeling cared for and protected, and after the three of them embraced, they got out of bed and went into the shower. There was an air of anticipation as they quickly washed then dried, and both John and Alyssa could see that Irillith was full of nervous energy. She left them to get dressed in her room, and when they emerged fully clothed from their bedroom, they found her waiting in the corridor. The Maliri had quickly pulled on one of the long dresses she favoured, and her eyes darted to them as soon as they appeared, her expression immediately telling them how eager she was to get going. They walked up to her at a brisk pace, and the three of them wasted no time in heading over to the grav-tube. \n\nJust before they stepped inside, John put his arm around Irillith, and said comfortingly, \"You'll be fine. I have every confidence in you.\" \n\nHer angular eyes flickered to his, and he saw her nervous expression relax, the tension in her shoulders easing. She took a deep breath, then smiled at him as she stepped into the blue glow of the grav-tube with John and Alyssa flanking her. Irillith closed her eyes as she felt that lifting sensation, trying to prepare herself for whatever was to come. When she slowly opened her eyes as they reached the Bridge, she knew in an instant that her life was never going to be the same again.\n\nHer mouth dropped in wonder, and she emerged from the grav-tube with hesitant steps, as she gazed at the sight before her. The Bridge had transformed into a place of breathtaking beauty, with glowing green streams flowing around her in graceful curving lines. The previously sterile Command Deck seemed to have magically come to life, and she gaped at the fluid channels in amazement, watching as they poured into consoles. She immediately recognised what the glowing green lines represented: the free-flowing digital network that supplied the Bridge with all the data it required.\n\nAs she looked on in awe, she felt an odd pulling sensation at her chest, and she looked down in surprise. She couldn't see anything unusual there, but it happened again, more urgently this time.\n\n*Focus on the feeling, and push your will towards it,* Alyssa told her calmly.\n\nIrillith looked at her in shock, having forgotten that the blonde Matriarch could now hear her thoughts. \n\nAlyssa smiled gently as she listened to her telepathic projections, and explained, *Not everything, just what you choose to share with me. I'll explain later, but just focus on that tugging sensation in your chest, and flow with it.*\n\nThe Maliri girl met her cerulean gaze, and nodded trustingly. She closed her eyes, waiting for that odd feeling to return, and sure enough, a moment later it was back. Irillith took a deep breath, then went with it, letting that drawing sensation pull her along like an ocean current. She felt a sudden lurching rush, and her eyes sprang open in alarm, as she staggered forward then attempted to steady herself.\n\nThe moment her eyes reopened, she knew something very strange had happened, because the others on the Bridge had all frozen. She gaped at them as she turned, and her focus snapped to the snaking ethereal line which led out from her ghostly spirit-form, anchoring her securely with her body. Once she had got over the initial shock, she realised the others weren't actually frozen, but they were moving much more slowly than normal.\n\nThat wasn't the only change she noticed in the Bridge. The lines of data were sharper now, and much more clearly defined. She turned her attention to one of the fluid, continuous streams of data, and reached out to it with her hand. Her translucent fingers brushed the glowing green line of numbers and letters, and her fingertips tingled as she let the data wash over her. The data code coalesced into readable images and words in her mind, and she was astonished to realise that she could understand it all. This was sensor data from the Invictus' long range sensor array, and she was able to comfortably read the complex information, just as if it was being fed to a console display. \n\nGlancing back at her companions, who were waiting patiently beside her, she followed her astral tether back to her physical form. Working on a hunch, she stepped into her body, then gasped as she experienced a swift bout of vertigo as her world sped back up again.\n\n\"What happened?\" John asked her immediately, his voice full of concern when he saw her waver. \n\nAlyssa smiled, and said soothingly, \"She's fine, just a bit disorientated. Right, Irillith?\"\n\nIrillith turned to look at them, and nodded slowly as she marvelled, \"It was all so strange, but wonderful at the same time.\" She focused on Alyssa, and asked, \"How did you know how to draw out that ability?\"\n\n\"I could hear your thoughts as you felt that tugging sensation, right here...\" Alyssa said, placing her hand on Irillith's chest, centred on her breastbone. \"It's called Astral Projection, or Spirit-walking, and your mother and I can do the same thing.\"\n\nCalara had risen from her Tactical Station and walked over to join them, her expression one of open curiosity as she asked, \"What did you see, Irillith?\"\n\n\"It was amazing,\" the Maliri replied, still feeling somewhat incredulous. \"I was actually able to see flows of data arcing across the Bridge. When I touched one of the streams of information, I could understand what it contained.\"\n\n\"Do you think you'll be able to access systems with your new powers?\" Calara asked speculatively. \"That could be incredibly useful, especially as you haven't got your hacking deck any more.\"\n\nIrillith glanced over at her IntOps Station, then smiled as she said, \"There's only one way to find out!\"\n\nShe hurried over to the seat with her three Bridge companions in tow, then sat in the comfortable chair. They all gave her encouraging smiles when she looked up to see them watching, and she took a deep breath in preparation. As she thought about using her psychic abilities again, she felt that curious tugging in her chest, and knowing what to expect this time, she allowed her mind to flow out of her body. \n\nIt felt easier this time, and much less disorientating, but she wondered if that was simply because she was sitting now, and not being pulled off balance. The green data flows arced around her in gentle curves, and she paused a moment to appreciate their beautiful shapes. The closest stream of data was pouring into her Console, and with her mind on hacking, her eyes were instinctively drawn to the data jacks. On a hunch, she reached out with her hand, and pressed her fingertips against the two circular ports.\n\nThe sensation the followed made the disorientation from astral projection feel like a tiny stumble. Her head spun as she was sucked violently forward, and before she knew what was happening, her mind was racing towards the data jacks. Before she could react, she rushed into the console, and her surroundings shifted wildly as she penetrated the network itself. \n\nShe lurched about, desperately trying to regain her balance, and then suddenly realised that she was just a projection of thought, and there was no artificial gravity acting on her. With that understanding, she snapped upright, and blinked as she felt stable and in control once more. Nothing could have prepared her for what she was seeing now; the Cyber-Realm that formed the digital backbone of the Invictus.\n\nIrillith was standing on a flat black platform, with paths leading off in multiple directions. The surface beneath her feet had an intricate silvery texture to it, and she crouched down to take a closer look. It reminded her of the silvery lines of an integrated circuit, and she shook her head in amazement as she slowly stood upright again. Looking around to get her bearings, she saw a swirling portal behind her, that was pitch black in the centre, but brightened to a luminous green as it rotated in lazy circles. \n\nShe started to walk across the platform, but abruptly bounced off a translucent wall that she hadn't initially noticed. It formed a neat circle around the portal, blocking her from making further progress. Irillith frowned in annoyance, and reached out her hands to run her fingers over the barrier, trying to find some way of opening it. The wall was completely featureless and without breaks of any kind, and she quickly grew frustrated at its stubborn refusal to cooperate with her in any way. \n\nHer anger felt like a tangible thing, and she felt a throbbing in her arms, which trailed down to her fingers. She held them in front of her face in alarm, and was stunned to see swirling coils of electricity begin to twist and thrash around her hands, dancing along her fingertips. The arcing lightning didn't hurt, so she shrugged, and placed her hands on the barrier to try and find a way through. As she did so, there was a thundering boom, and the digital wall detonated outwards, obliterated in an instant as chunks of translucent material sailed away into the void around her. She gaped in amazement, then stared at her hands as she watched the lightning die down, then fizzle out.\n\nFinally free to walk across the platform, she saw that it was suspended in the air, floating silently with a colossal drop into the darkness below her. She crouched down at the edge, then stared into the cavernous depths below with wide eyes. Barely visible against the black, she could make out faint blue lights, which seemed to be highlighting the curving contours of the ground below. She took a wary step back from the edge, and then walked towards the paths leaving the platform. The silvery latticework underfoot stopped at the edge of the open-sided room, and the paths beyond were long trails made up of gracefully flowing silvery lines.\n\nAs her senses adjusted to the Cyber-Realm, she jumped as she realised she wasn't alone on the platform. Floating in the air around her were various data archives, and as she stared at them, they grew more solid, appearing as glowing orange monoliths about two metres high. She walked around the closest one, studying it in fascination, and saw that it was rectangular-shaped, but only a couple of centimetres thick. Irillith brushed her hand over its surface, watching her fingers turn orange as they disappeared into the insubstantial rectangular shape. ",
        "The data stored in the archive surged into her mind in a bewildering rush, and she blinked in astonishment when she recognised what it was. This archive held the Maliri weapon tech data that she had transferred to the IntOps Console from Genthalas Station, and as she looked around, she realised abruptly that the integrated circuit floor tiles represented her console on the Bridge. That meant the flowing lines that led deeper into the Cyber-Realm, must be the hardlines that connected the console to the rest of the Network.\n\nAs she was thinking this over, her attention was drawn to a bright purple blur that flickered with the speed it was moving. This was the first moving thing she had seen in this strange digital alternate reality, and she braced herself defensively just in case. A strange transparent hexagonal shield appeared before her, edged in violet around each hexagon. It seemed to be positioned to stoutly block the approaching creature from harming her.\n\nAll thoughts of defence flew from her mind when Faye suddenly appeared, her dumbstruck expression shared by the Maliri girl. \n\n\"Wow!\" Faye gasped in disbelief, \"What are you doing here, Creator?!\"\n\nIrillith's shield winked out of existence, and she laughed as she admitted, \"Honestly, I have no idea. I've been experimenting with my new psychic abilities, and when I touched a console up on the Bridge, I found myself pulled inside. Since then, I've just been fumbling about blindly.\" She paused and asked curiously, \"How did you know I was here, anyway?\"\n\nFaye giggled and said, \"You weren't exactly being sneaky! You blasted through that firewall, utterly destroying it. System alerts have been going off through the whole of the Invictus' Digital Network. I thought we were under some kind of cyber attack!\"\n\nIrillith blushed, and said, \"I'm sorry, I've just been blundering about. I've no idea what I'm doing.\"\n\nFaye fluttered closer, and with a bright smile on her face, she said, \"Don't worry! I'll explain how everything works.\" She leaned in to give Irillith a kiss on the cheek, and said, \"It's so lovely to see you here!\"\n\nThe AI sprite's tiny lips brushed Irillith's cheek, and she blinked in shock as she actually felt them touch her skin. Faye looked equally stunned, and they both said at the same time, \"I can feel you!\" \n\nThey stared at each other for a moment, then Faye gave her an exuberant hug, as she said, \"Oh, that feels so nice!\"\n\nIrillith nodded, and stroked Faye's back as she hugged her in return.\n\n***\n\n\"And that's when I ran into Faye,\" Irillith explained to the crew, who were gathered in the briefing room, listening attentively as she described her first trip into Cyber-space. She smiled affectionately at the purple pixie, who was staring at her in awe, and added, \"Faye feels as substantial as any of us in the cyber-realm, and she's very tactile.\"\n\n\"That must have been amazing,\" Dana said wistfully. \"I would have loved to see what you've seen. To actually be inside our computers must have been mind-blowing!\"\n\nIrillith nodded, as she said, \"It was all very disorientating, but Faye gave me the rundown of how it all works. Basically, her programming converts code into visual representations of objects, like firewalls or data archives, and apparently my mind works in the same kind of way.\"\n\nFaye smiled and said cheerily, \"You were lucky we haven't got any aggressive security programs patrolling the Invictus' network! I've actually been thinking about upgrading our data-net's protective software, but Dana's been busy, and I didn't want to do anything without her.\"\n\n\"Perhaps that's something I can help with,\" Irillith volunteered enthusiastically.\n\nDana laughed as she said, \"Yes, poacher turned gamekeeper! You two should go ahead without me, I'd just be dead weight. You both have far more of a clue about cyber-security than I do.\"\n\nFaye looked disappointed that her redheaded friend wouldn't be joining her in this project, but she brightened considerably when she remembered she'd be working with her Creator instead. \"I'll start work immediately if you want, then you can review what I've done when you wake up tomorrow morning?\" she asked Irillith in a deferential tone.\n\nIrillith nodded, then laughed as she replied, \"As long as you leave me something to do as well!\"\n\n\"We've got loads to keep us busy, don't worry!\" Faye said, giving her a delighted grin.\n\nJohn smiled at them both, then said, \"Sounds like a great idea. We've had problems in the past with intruders running amok in our network.\" \n\nFaye and Irillith both blushed at that, then laughed when they realised he was just teasing them.\n\nHe looked across the table at Irillith and asked, \"How soon can you start hacking the classified Dragon March orders? I know Calara's been working on gathering all the ones she feels need decoding to identify the traitor.\"\n\nThe Latina nodded enthusiastically, saying, \"I've selected all the key orders that have led to disastrous battles for the Terran forces. Some of them might be coincidental, but I'm sure there are several incidents that were quite deliberate.\"\n\n\"We just need to be in range of the Terran Federation's military network for me to be able to access their data, so fairly close to the border with Terran Space,\" Irillith explained. \"At the speed we travel in hyper-warp, I should be able to make a connection by three p.m. tomorrow afternoon.\"\n\n\"Why do we have to wait?\" Rachel asked in confusion. \"I thought we had copies of all the orders.\"\n\n\"We do, but all the juicy info is redacted,\" Dana explained, glancing at Calara and Irillith for confirmation. \"We have to reconnect to the Military data archives for Irillith to hack through the encryption, right?\"\n\n\"Yes, that's correct,\" Irillith replied with a decisive nod. \"It shouldn't take me too long to break in after that.\"\n\n\"We'll need to check through Admiral Norwood's email logs, secure and open, to see if he's built up a network of allies,\" Calara said grimly. With a glance at John, she added, \" We should check Charles Harris' email logs as well, then we can confirm if he's involved.\"\n\n\"Definitely,\" John replied. \"We need to know who we can trust, and if it goes as high up the chain-of-command as an Admiral, we're going to need concrete proof of anyone's involvement\". \n\nThey all sat around for a moment contemplating the repercussions, and Calara gave John a worried look when he glanced her way. Irillith caught that concerned look from the Latina, and breaking the tense silence she said, \"Don't worry. If there's anything to find, we'll be able to hunt it down.\"\n\n\"it's nearly midnight, ladies,\" John finally noted after a glance at the ship's chronometer. \"We should head off to bed before it gets too late. We'll be reaching Terran Space tomorrow evening, and we want to be sharp for that.\"\n\nJohn rose from his chair, and everyone followed his lead, filing out of the room in a big group. They waved Faye goodbye, leaving the cute purple Watch Commander up on the Bridge to keep an eye on the Invictus' long range sensors. John and the girls were tired after all the activity that day, and they got ready for bed, then cuddled up together in the huge Epic King sized bed. He had Irillith on one side, with Alyssa on the other, and he fell asleep with the two blondes curled up against him. \n\n***\n\nHe was the first to wake the next morning, with Faye quietly reporting in, once she saw through a security-camera that he had started to stir. The girls started to wake afterwards, and when everyone was fully alert, they fanned out in a semi-circle around him.\n\n\"What are you girls all up to today?\" he asked them curiously. \"Bear in mind we'll be back in Terran Space by six this evening.\"\n\nDana raised her hand immediately, and said, \"Researching Irillith's rifle!\"\n\nHe laughed and said, \"You don't have to raise your hand, we aren't in school.\"\n\nShe cocked an eyebrow at that, her luscious pouty lips forming a playful smile, before she moved to kneel in front of him. \"I know, but I wanted to be first. It's rude to talk with your mouth full,\" she explained patiently, before kneeling down to take his resting cock in her mouth.\n\nThe girls giggled at his look of surprise, and Alyssa explained with a grin, \"Now that Irillith seems to be over her psychic teething problems, I thought we'd get back to the rota. Dana was quite emphatic that she should go first.\"\n\n\"Mmmhmm,\" the redhead hummed around his thickening length.\n\nHe chuckled as he relaxed back against the headboard, stroking her thick, lustrous auburn hair and giving her a contented smile. Dana gave him a cheeky wink, and really started to go to work on him.\n\n\"OK, what about the rest of you?\" he asked, looking around at the other girls.\n\nJade tilted her head to one side, and said innocently, \"You normally need a few hours to recover, but we're happy to each take a turn if you think you can manage it.\"\n\nShe smiled when everyone started laughing, and John grinned at her as he exclaimed, \"I don't think any mortal man could survive that!\" After the laughter had died down, he asked, \"Seriously though, what are you up to today?\"\n\n\"Building Paragon Body Armour suits,\" the Nymph replied eagerly. \"I finished building the second female variant last night, so I'll keep working through more of those until I have enough for our next boarding action. Once I've made enough for everyone, I'll start on your second suit. With all the ornamentation and extra plating, your one takes longer to construct.\"\n\nHe frowned a little at that, but when Alyssa pouted and wagged a finger at him, he decided to drop it. \"How about you then, Rachel?\" he asked, turning to look at the tawny-haired girl. \n\n\"I'll finish my research into Maliri DNA, and should have some answers for a brief presentation this evening if you're interested in hearing about it?\" she asked tentatively.\n\nHe gave her an encouraging smile as he said, \"It's always fascinating to hear about anything you discover. I'll look forward to it.\" He turned to Irillith and Calara next and asked, \"I guess you two will be working on the Dragon March Traitor?\"\n\nThey both nodded, and Calara replied, \"I think I've assembled a full listing of all the fleet movement directives we need to hack, but I want to review my list and make sure it covers all possibilities.\"\n\nIrillith was about to answer too, but a soft melodic chime came through to the room from the internal intercom. Recognising the tune, John looked up and answered it, saying, \"Yes Faye, what is it? Everything OK?\"\n\n\"I'm great!\" she replied chirpily, \"But I was busy last night with some training simulations for my Creator. I thought she'd like to practice hacking those before testing her new powers against a potentially hostile system.\" \n\nJohn smiled, greatly impressed by the AI's initiative, and said, \"That was inspired! Well done, Faye!\"\n\nIrillith nodded, looking relieved and said, \"If I hack in via a normal interface, I'll be able to mask my signal by routing it through dozens of untraceable nodes, but that'll take a significant amount of time. I'm not sure where to even start trying to emulate that with a psychic-hack, and I could definitely use some practice.\"\n\n\"Don't worry, I'll spend the morning training you!\" Faye said, sounding overjoyed.\n\n\"Which leaves you then, beautiful,\" John said, turning to look at Alyssa.\n\nHer face took on a resigned expression, as she said, \"More psychic-shaping I guess. I only did enough plates for a handful of Paragon suits, and I need to do the rest.\" Her expression brightened a bit as she added, \"Although we could use some breakfast first, so I think I'll try my hand at making pancakes, if that sounds good?\"\n\nHer pronouncement was met with enthusiasm, and she soon had a host of volunteers for helpers. \n\n\"I'll keep you company in the Cargo Bay later. I need to do some more psychic training,\" he said, then glanced down at Dana who was bobbing away with gusto. \"In a little while, I mean.\"\n\nThey all laughed at that, and the girls each gave him a loving kiss before they got up. Leaving as a group, they went to prepare some tasty pancakes with lashings of maple syrup, before starting their tasks for the day. \n\n*How about you, Edraele,* he asked his Maliri Matriarch, wondering how she was getting on, while absent-mindedly stroking Dana's beautiful tresses.\n\n*I'm working on a surprise for you, John,* Edraele said brightly, her happy thoughts filling his mind. *I should be finished by the time you return to Valaden.*\n\n*Sound intriguing,* he replied playfully. *Do I get any hints?*\n\n*Just following your orders,* she teased him. *No more clues than that though, sorry!*\n\nEdraele went silent, so that just left him with Dana, and he locked eyes with her and grinned. Realising she had his full attention, her lips quirked into a smile around his girth, and she stepped things up a gear, wanting her breakfast. Seeing no reason to hold back, he unloaded straight down her throat, giving her a quad-full as she moaned with delight.\n\n\"I'm glad it was you this morning,\" he said as he held her in his arms afterwards. \"The blowjob was sensational, of course, but there was something else I wanted to talk to you about.\"\n\nDana had a dreamy, well-satisfied smile on her face, and she asked, \"What did you have in mind? I'm yours to command, Boss.\" \n\n\"Good girl,\" he said as he caressed her rotund tummy, which earned him a shiver of delight from the redhead. \"I wanted to discuss a new Project with you. It's about Faye...\"\n\n***\n\nIrillith's morning training session had proven to be an extremely valuable learning experience. Faye had set up a tightly secured sub-network, and the AI Sprite had carefully monitored the logs, as the psychic Maliri had attempted to infiltrate the locked down system. \n\nWhen Irillith entered the Cyber-Realm, she travelled along one of the silver lined passages, running quickly as she made her way towards the sub-network. Faye appeared at her side, leaving a purple blur behind her, and with a puzzled look on her face, she asked, \"Why are you running? Just float like I do, you can go as fast as you like then!\"\n\nThe Maliri ground to a halt in surprise, and then looked down at her feet, as she followed Faye's advice. She slowly lifted off the ground, so that she was floating a couple of feet above the silvery floor, and smiled at the AI construct gratefully. She held out her hand, and Faye reached out to take it, but just wrapped her tiny fingers around her creator's index finger. Irillith felt a maternal flutter in her chest to see those tiny digits holding hers so trustingly, and they exchanged an affectionate glance. Hand-in-hand, they soared down the channels linking the network, flying along at incredible speed, and it felt like she reached her destination in the blink of an eye. \n\nFaye's simulated training system was located in the Engineering Bay, and this area of the Invictus' digital network was a riot of incandescent colours. Everywhere she looked were brightly illuminated servers, in glowing blues, purples and oranges, and the entire zone was bathed in a soothing cyan radiance. The entrance to the digital fortress looked imposing, with bright red glowing guards drifting along the secured private network. They were large and imposing, with a single gleaming eye that swung from side-to-side as if looking for intruders.\n\n\"Those are non-lethal security programs,\" Faye explained, fluttering at her right shoulder. \"You could just blast them with attack programs, but that makes a lot of noise, and we're trying to be sneaky, right?\"\n\n\"Definitely, covert is the way to go,\" Irillith agreed, thinking about the consequences for John should she be discovered hacking the Terran Federation Military archives, and if it was traced back to him.\n\nFaye grinned at her, and said, \"No problem! You'll just need to set up a code breaker on the main gateway, and keep a low profile as it breaks through the firewall. Then you can circumnavigate the internal network, while avoiding all the guardian programs. Just think about the way you'd handle this normally, and the kind of programs you'd use, then do the same thing. The only real difference, is you have an interactive GUI to give you a better overview of the situation.\"\n\nIrillith took a deep breath, then approached the formidable-looking wall that blocked entry into the secured site. She thought about using a code breaker to hack her way into the gateway, and a two-pronged tuning fork suddenly appeared at her side, floating silently beside her. She watched the representation of the code breaker as it touched the wall. Spiralling lines spread out from the two points of contact, searching the impervious-looking wall for any weak points that she could exploit. \n\nShe ducked down as one of the cycloptic guards approached, alerted by the disturbance at the wall. Giving the code-breaker a worried glance, Irillith thought about masking its presence, obfuscating the attack with random data requests at other points in the wall. Dozens of hands appeared at various points on the surface, knocking politely and requesting a response from the secured gateway. The glowing red guardian looked confused, and began to methodically acknowledge each of the data requests in turn, leaving the code-breaker undisturbed.\n\n\"That's right!\" Faye said, sounding pleased as she studied the log files. \"You're getting the hang of this already!\"\n\n***\n\nCalara spent the morning meticulously studying each of the orders she wanted decrypted. Her most blatant example of the Traitor showing his hand was the horrible betrayal of Commodore Daniel Walker, and the destruction of his battle group. Reading about the loss of such a gifted leader, and the five-thousand personnel under his command filled her with steely resolve, and she scoured the rest of the suspicious Fleet orders she had found. \n\nThere was the accidental redirecting of a support group to the frontlines, where they'd been ambushed and wiped out to a ship. Then the thinning of a reserve force at a mining facility in the Zeta-Leonis system, which had fallen to a surprise attack from a slightly larger Kintark task force. The Terrans had been routed from the system, and the mining facilities had been devastated by the triumphant Lizardmen.\n\nGoing through the lists of Fleet Commands, there were over a dozen such occurrences, none of which were obvious enough to rouse suspicion. For someone who knew what to look for, these odd, terribly unlucky coincidences started to look anything but. She lost track of time as she went through the list again, adding as much extra information for Irillith as possible.\n\nIt was mid-afternoon when the sounds of footsteps drew Calara's attention away from her console, and she glanced across the Bridge to the grav-tube, where Irillith had just stepped onto the Command Deck. The blue-skinned woman glided gracefully to her Station, her long dress bulging obscenely at the waist, but not appearing to slow her down at all. \n\nAfter exchanging a friendly wave of greeting, Calara turned back to her Console, then tapped in a couple of commands. She transferred the list of dubious fleet orders that she had compiled over to Irillith's Station, and as soon as the Latina heard the soft beep confirming the data transfer was complete, she got up and walked over to join the Maliri woman.\n\n\"That's everything,\" she said resting her hand on Irillith's console. \"The full list of all the suspicious Admiralty orders in the Dragon March. If you can find the redacted information for even half of those, we should have our traitor. I've sorted them by priority order, with the most blatant abuses at the top.\"\n\nIrillith nodded, and said, \"I can't make any promises, but I'll do my best to get you everything you need.\"\n\nCalara smiled grimly as she said, \"If we can confirm it was Admiral Leonard Norwood behind it all, then we can try for his email archives. He's aboard his command ship, the dreadnought 'Vengeance of Hera' in the Dragon March, but we can check that later.\" Leaning closer she said with a frown, \"Before we do that, we should investigate Vice Admiral Charles Harris. It's tearing John up to think his old Commanding Officer might be a traitor, so we should confirm if he's involved first.\"",
        "\"Redacted Orders, Charles' emails, Norwood's emails. Got it,\" Irillith said with a confident smile.\n\n\"You seem a lot more sure of yourself today than yesterday,\" Calara said with an approving nod. \"Did Faye's training session really help?\"\n\nIrillith laughed and replied, \"She was a huge help actually. I got a pep talk from John and Alyssa too, and I know I can do this.\"\n\nCalara's eyes dropped to Irillith's swollen belly, and gave her a warm smile, as she said, \"Yes, they can be very encouraging, can't they?\" She dropped to her haunches beside the seated Maliri woman, and instinctively reached out to gently stroke her tummy, as she asked, \"Is there anything else you need before you do this? I've added as much information as I can to that list, with timestamps clearly indicated. I don't know for sure, but I would guess that all the classified orders from this campaign will be archived in the same location. The specific times and dates should help you easily locate the relevant files, once you can locate the correct archive.\"\n\nIrillith gave her a grateful smile, and said, \"I know what a perfectionist you are. I'm sure the information you've gathered will be invaluable.\" She took a deep breath, and said, \"Wish me luck!\"\n\nCalara reached up to brush her fingers through Irillith's long hair, and said, \"You won't need it. I've seen how determined you can be, and I know you'll be amazing!\"\n\nLeaning over to give her a gentle kiss, Irillith said, \"You're quite the motivational speaker yourself.\"\n\nFaye suddenly flashed into existence, reappearing in the Bridge above Irillith's console. \"Hey Calara!\" she said brightly. \n\n\"Hi Faye,\" Calara said with a smile. \"Are you going along too?\"\n\n\"She won't let me,\" Faye pouted, crossing her arms as she turned to look at Irillith. \n\nIrillith smiled as she said, \"We've been over this. If they detect us and cut the hard-lines to their servers while you're in it, you'll be de-resed.\"\n\nCalara frowned and asked the Maliri, \"So what happens to you if they do that?\"\n\nIrillith paused, and a shadow of worry flashed across her face, but when she looked at Calara she shrugged helplessly, not knowing for certain.\n\nFaye let out a sigh, still disappointed about not being able to join her Creator, but said buoyantly, \"I'll monitor everything from here, and broadcast an alarm if they start trying to track your signal back to the Invictus!\"\n\nMore footsteps from the grav-tube had everyone turning to see John and Alyssa walking over to join them. They smiled in greeting, and joined the others gathered around Irillith's IntOps Station.\n\n\"How are you doing?\" John asked, with a worried look of concern. \"Is there anything else we can do to help?\"\n\nIrillith gave him a sly smile, and rested her hand on her rounded abdomen, as she said, \"There's nothing else you can do for now, it's all down to me.\"\n\n*Don't worry about overexerting yourself,* Alyssa thought to her telepathically. *If I feel you getting strained, I'll transfer energy from all of us to you. What you're doing is important, but above everything else, you need to stay safe, okay?*\n\nThe Maliri woman nodded, then focused on the console in front of her. With a final glance at her crewmates, she flowed her consciousness into her spirit form, and sent her mind into the data-jacks. Faye was there to greet her, and she kept pace by Irillith's side as they rushed along the connections that linked to the Invictus' powerful communications relay.\n\nThey arrived at the enormous swirling portal which linked the Invictus to the Terran Federation's Empire-wide comms network, and Irillith stumbled to a halt as she stared at it for the first time. Data was flowing in through the portal, now that they had finally flown in range of the comms signal boosters, and everything from news updates to personal emails were now pouring from the yawning hole. \n\nFaye fluttered closer, and hugged Irillith as she said, \"I wish I were coming with you, but you'll be just fine on your own! You're my Creator, you can do anything!\" \n\n\"Thanks Faye, you've been a tremendous help,\" Irillith said gratefully. \n\nThe purple-hued sylph gave her a nervous smile, then said, \"Remember to listen for my warning broadcast. If they start tracing your signal back to us, you won't have long to get back after I detect them!\"\n\n\"I'll be careful,\" Irillith said, leaning in to give Faye a kiss on her tiny cheek, before turning and striding purposefully towards the entry point to the wider galaxy.\n\nShe didn't look back again, instead placing her hand on the portal, and letting out a shocked gasp as she was sucked inexorably through the swirling vortex. Just like that, her mind was racing at almost incalculable speed across the cosmos. Irillith had previously planned out her route with Faye, and she bounced from one relay station to another, as she raced across the Terran Federation Comms Network. Branching paths sailed away to sparkling clusters far in the distance, and she recognised each one as a planet, where huge numbers of servers were all linked to the Terran network.\n\nAccording to Calara, the primary data repositories for the Terran Federation Military were all housed on Mars. It would normally take a comms signal several minutes to travel that vast distance, but Irillith's digital presence was shrouded in a psychic cocoon that zipped past the other network traffic in a flash. It took her just over a minute of weaving her way through the signal-boosting relay stations until her consciousness finally arrived at her destination on the planet, and when she did, she gasped in amazement at the majestic sight before her.\n\nThe data archives on Mars were housed in a vast network, containing everything from the mundane;- like standard ship maintenance reports,- to the ultra-classified top-secret data that she was seeking. The brightly lit server farms reminded her of a sprawling metropolis, and she had a moment's doubt about being able to find the digital needles she was searching for, in this enormous field of electronic haystacks.\n\nFaye's advice about just proceeding with the hack as she normally would came to mind, and Irillith pondered the best way to go about it. She grinned as she had a sudden brainwave, and she reached out both hands, letting the data streams wash over her as they proceeded towards the network of data archives. She was able to gain a glimpse into each data packet, and they became a blur before her eyes, as she searched for one that would serve her purpose. She didn't have to wait long until a promising stream of data sailed past, consisting of a fairly innocuous request for vacation time, from a Cruiser Captain in the Dragon March.\n\nShe tagged Captain Bernard Grove's message with a tracker, then raced along after the missive as it navigated around enormous data archives, wending its way deeper into the glowing data catacombs. She followed after it, feeling her heart pounding with excitement in her chest. Sure enough, the message split off from the primary bus, and was routed to an enormous server farm, which was filled with hundreds of secured data compounds. \n\nIrillith sent out probes as she passed each of these compounds, and the titles she got back left her in little doubt she was in the right place. The Second Kirrix Purge, the Drakkar Repulsion, the Brimorian Annex; these were all campaign archives from the Terran Federation's chequered past. She followed the leave request deeper into this maze of archives, which chronicled the past glories and disasters of the Terran Military in minute detail. Sure enough, the data packet made a beeline for a heavily fortified compound, and a quick data probe confirmed that it stored data on the Dragon March campaign.\n\nOnce its clearance had been verified, the message breezed through the firewall warding the gateway into the compound, leaving Irillith's digital presence floating outside. The digital fortress had opaque walls, which prevented her from seeing what lay inside the compound. Security looked robust, with at least a dozen guard programs focused intently on the firewall blocking the gateway inside. Movement at the base of the digital ramparts drew her eye, and she could see what looked like electronic hounds marching along rigid patrol routes around the walls. \n\nShe pondered the best way into this impregnable-looking fortress, and snapped her ethereal fingers, as she realised that all she had to do was treat this as a regular hack on a robustly defended data source. She created a tiny probe in the shape of a magnifying glass, too small and inconspicuous to be detected by the hounds, then replicated it until she had twenty hovering above her palm. Throwing out her hand, as if casting them into the electronic wind, the probes raced out, and began to carefully scrutinise the surface of the walls.\n\nIt didn't take long, and she smirked when one of the probes reported finding a locked backdoor into the system. These Terran programmers never learned. Always reluctant to give up absolute control of their digital creations to the organisations that had hired them, they invariably left some kind of illicit back entrance that bypassed the primary security measures. She drifted around the fortress walls until she was parallel with the correct section of wall, and now she knew what to look for, she could make out her target easily enough. The probe had highlighted the rectangular doorway at the base of the wall for her, outlining the edges in a faintly glowing aquamarine colour.\n\nShe gathered the probes back to her with a thought, and they floated obediently at her shoulders as she watched the regularly timed passes of the security sweeps. She tutted to herself as she kept up her observations, shaking her head that the Terrans were not even randomising the time periods between checks. Calculating that she had exactly thirty-five seconds before the next sweep, she sprinted to the door the moment the sniffing hound had passed, its sensors focused directly ahead in a one-hundred-and-eighty-degree arc.\n\nSummoning a powerful password cracker which appeared as a spinning tube of letters and numbers, she slapped it against the backdoor and watched it go to work. The dials spun in a blur, testing millions of combinations a second, and she rolled her eyes when it settled on, \"1337godrulesall\". The door depressed inwards with a soft click, then swung back, admitting her into the fortress. She stepped inside quickly, then shut it behind her, leaving the outer surface completely unblemished.\n\nLooking around to get her bearings, she saw that she was in a small sub-net area surrounded by glowing green indexes. It looked like the programmer who built this digital fortress had gone the extra mile to find any data he might be looking for in the future, and she silently thanked him for making her life much easier. She tweaked the probes, and the magnifying glasses changed shape into orange-rimmed reading glasses as she sent them out to trawl through the indexes. She held the last one back, changed its search parameters to look for records on the Invictus or John, then sent it on its way.\n\nWhile her tiny spies were hard at work, she looked through the translucent walls of the subnet that overlooked the interior of the digital fortress, and tried to get the lay of the land. Nearly all the security measures were focused on the firewall across the gateway into the compound, but there were some nasty-looking security programs that were criss-crossing the paths around the monolithic data-archives. The huge red cycloptic guards were quite reminiscent of Faye's simulation, which made sense, as the helpful AI had copied common Terran defensive programs. These ones had a powerful looking broad cannon on one arm, which represented their ability to de-res intruders. \n\nSoft beeps behind her let her know that the probes had started to find the data she was searching for, and she turned back to check their progress. A handful had turned from orange to green, stopping at the relevant data entries in the index as they found the Fleet Commands that Calara had expressed an interest in. Unfortunately the index only gave the location of each of these redacted orders, so she'd need to visit each archive in turn, decrypt it, then steal a copy of the data. \n\nShe had set up the last couple of probes to search for emails and voice comms from Admiral Leonard Norwood, and Vice-Admiral Charles Harris, to and from any forces in the Dragon March. They took longer to find all the data, as there was a lot to search through, but sure enough, this information was stored here too.\n\nIrillith plotted out her course around the interior of the electronic compound, while watching the guards to memorise their patrol routes. She waited until all nineteen of the twenty probes had found what she was looking for, turning green from orange, and when she had the last data location she set off. Slipping around to the first archive was easy, with the guards right over on the other side of the fortress. She set up the code-breaker to hack through the encryption, and it appeared beside her in the form of a sturdy pneumatic drill. It floated into position, then began to hammer away at the archive, attempting to break through the security code that protected the data.\n\nThe code-breaker wasn't making too much noise, and when she looked around warily, none of the defensive programs seemed to be any the wiser. She chuckled to herself, knowing she'd never be able to get away with this in a Maliri system, but fortunately these weren't her own people she was dealing with. The archive broke open with a satisfying crack, and Irillith scanned through the data, confirming Calara's suspicions. It had been Admiral Norwood who had ordered the Fleet moves that exposed this task force. She took a quick copy of the decrypted data, watching as it was recorded into a floating ledger, then moved on to the next archive.\n\nIt took several minutes to make her way through the winding maze of archives, but she'd soon gathered up everything she was looking for. She'd been able to confirm the names of all the Commanding Officers responsible for issuing the Orders that Calara had flagged as suspicious, as well as downloading a backup of the digital correspondence from Norwood and Harris. Feeling quite smug about the whole infiltration, she headed back to the private sub-net that she had used to sneak into the place, and got ready to open the hidden backdoor to leave. \n\nShe happened to glance back at the probes, and her brow creased with worry when she spotted that the last probe had also turned green, signifying that it had found something. Her heart started to beat faster when she read the data repository name, \"Special Investigation: John Blake\". The archive was located on the periphery of the compound, and she raced over there to find out just what they'd been investigating. \n\nIrillith created another code breaker, and she set it to work to crack the encryption, tapping her foot nervously while she waited with growing impatience. Although the code breaker seemed to take forever, It only took fifteen seconds to hack her way in, and she scanned through the reams of data with growing alarm. Someone had authorised a special investigation into John, researching all his recent activities in the Terran Federation, from stopping the Kirrix slavers, right through to his heroics in the Iota-Leonis system when he'd saved Port Medea. As she searched through it frantically, a low booming sound off to her left made her twist in surprise. \n\nThat noise saved her from being hit by a bright red shell, which missed her by inches. It slammed into the code breaker, ripping a big tear through the data archive she was studying. Alarms began to blare around her, and she cursed her stupidity for allowing herself to get so absorbed in the data, that she'd forgotten all about the guards. She leapt to one side to dodge a second clumsily aimed shell, which blasted a big chunk out of the wall behind her. Her arms were tingling now, and she glanced at them in surprise as she saw them swathed in lightning once more.\n\nShe ducked another shell, then pointed her fists towards the looming guard, and crackling arcs of electricity blasted into the defensive construct, devastating its programming. It toppled over backwards, with a huge searing hole blasted straight through it, arcs of electricity sparking around the charred wound. Irillith glanced behind her with a worried frown, and cursed when she saw the damage to the Special Investigation archive. It was painfully obvious what she'd been caught snooping on here, and this would act as a red flag to anyone suspicious of John. \n\nAfter worrying what to do for a brief moment, she came to a quick decision, and immediately felt a tingling sensation all over her body. Concentric rings began to form at her feet, which spread outwards in small ripples as she gathered her will, preparing herself to wipe out the archives in this corner of the compound.\n\n*Hold on, I'm sending you more power!* Alyssa's worried voice reached out to her, and Irillith shook her head in panic. \n\nA tidal wave of energy rushed into her, and her violet eyes flew open in shock. Vast reservoirs of psychic power throbbed through her body, and the rings surrounding her became massive waves of pulsating energy. She let out a scream as she threw her head back, her eyes and mouth opening wide as they gouted beams of purple eldritch energy into the sky. Her body struggled to contain the building tsunami, until it finally reached an abrupt crescendo. The towering waves that loomed above her blasted outwards, devastating everything in their path with overwhelming destructive force. Guards, archives, walls; all were obliterated in the maelstrom she had unleashed within the electronic fortress.\n\nIrillith sank to her knees, gasping for breath as she trembled in shock. Looking around her incredulously, she realised she was now kneeling in the centre of a huge blast crater where the Dragon March data fortress had once stood. Every trace of the compound had been vaporised, leaving her unscathed at the epicentre of the destruction. She leapt into the air, knowing no good would come of being discovered here, and fled to the welcoming embrace of her body aboard the Invictus.\n\n\"I got everything!\" she gasped a minute later, as her eyes snapped open. She looked around for John, and when she found him crouching beside her, she blurted out, \"They've started investigating you!\"\n\n***\n\nThe whole crew was gathered in the Briefing Room, and It took Irillith quite a while to describe everything that had happened. Calara shot John a look of alarm when Irillith told them all about the Special Investigation, but her worry about this was tempered by the impressive haul of data the Maliri hacker had recovered.\n\n\"I hope they had enough sense to take a backup,\" Dana said with a smile, after Irillith told them how she'd levelled the fortress before leaving.\n\nCalara nodded, and said, \"The Military replicate any important archives, they should be fine.\" \n\nShe looked impatient to get started, so John grinned at her, and said, \"Have at it, Lieutenant. How long will it take you to confirm all your suspicions?\"\n\n\"I had a brief look when Irillith transferred everything to my Tactical Station. There's a huge volume of email and voice recordings to go through, which will take me a couple of days to fully analyse,\" she explained carefully. Her expression turned grim, and she added, \"I can tell you right now that Irillith's decryption of all those redacted orders confirms without a doubt that Admiral Norwood is the traitor. Out of the seventeen suspicious Fleet Commands I asked her to look into, Norwood ordered thirteen of them, which included all the really calamitous ones. Three came from Lynton and one from Santini, which we can put down to a mixture of either incompetence or bad luck.\"",
        "\"So we have our man then,\" John said bleakly. He gave her a respectful salute, and said, \"I didn't doubt you for a moment, but phenomenal work, Lieutenant. To piece all this together just on a hunch, with all the orders redacted as well, was a phenomenal piece of analysis.\"\n\nCalara snapped to attention, and saluted him back crisply. When he smiled at her, she relaxed, and smiled back at him proudly. \"I'll let you know the moment I find anything,\" she said, her dark-brown eyes filled with purpose.\n\nJohn nodded, and she strode out of the briefing room to get to work. \"So not long until we hit Terran Space, then three days to get back to Olympus shipyard?\" he asked Alyssa, turning to look at the blonde girl.\n\n\"Two hours until we reach Terran territory,\" she replied with a smile. \"And yes, just under three days to get to Olympus from there.\"\n\nJohn looked at Dana and Jade, saying, \"Let's make sure we have all the Paragon Armour ready by then, just to be on the safe side. Also, any chance we'll have access to the new laser rifles too?\"\n\nJade gave him a confident smile, and said, \"I'll easily have all the body armour finished. I've built one male suit, and three female variants so far. We're aiming to have two male and eight female finished as a full set.\"\n\nDana frowned, and said ruefully, \"Estimating research is very difficult to do precisely, but I should be able to design a prototype in a day or two. I could rush out a basic improvement for Irillith's laser rifle, but I figured you'd want me to build something that would really make the bad guys shit themselves.\"\n\nHe laughed, and said, \"Yeah, you know me well enough. I can't wait for the firing range demo.\" \n\nBoth girls grinned at him, then rose to their feet, and gave him a brief kiss before heading out to continue their work. Rachel followed after them, and after she had given him a kiss too, she said, \"I'll finish my Maliri DNA investigation. I'm still on track to give you a presentation this evening.\"\n\n\"Nice work, Doctor,\" he said with a smile, and Rachel smiled back at him before leaving through the door into the Bridge.\n\nThat left Alyssa, Irillith and Faye in the briefing room with him, and the cheerful AI quickly spoke up, saying, \"I think we urgently need to upgrade the Invictus' cyber defences, but don't worry, I've started designing some improvements already!\"\n\nIrillith nodded, saying, \"Dana made a good effort, but we're still very vulnerable to skilled hackers. A skilled Maliri team would be through our firewalls and running amok in half-an-hour or less.\"\n\nAfter seeing what Irillith had done to the hacked Armoured Cobras cruiser, Alyssa shot him a look of alarm. \"We definitely need to get that fixed as soon as possible,\" she agreed.\n\n\"Go ahead and make a start,\" John said, turning to give the purple sprite an encouraging nod. \"You've been nothing but helpful since you joined us, and I trust that you'll do a great job with this too.\"\n\nFaye looked delighted at his vote of confidence, and she bit her lip in excitement before saying, \"I'll make the Invictus completely impregnable!\"\n\nWhen he grinned at her, she winked out in a purple flash, rushing away so that she could get to work immediately. \n\n\"I'll help, and keep an eye on her,\" Irillith said with a smile. She hesitated for a moment, then gazed into Alyssa's cerulean eyes as she continued, \"I didn't say anything before, but the amount of psychic power you hold is terrifying. When you channelled all that to me, I'd never been so scared! I thought I was going to explode.\"\n\nAlyssa face fell, and she hurried around the table to give the Maliri girl a comforting hug. Irillith rose and met her half-way, and the two women embraced tightly. \"I'm so sorry I scared you,\" Alyssa said, her voice full of regret. \"You started getting tired, and I heard from your thoughts that you were under attack. I guess I just panicked. I thought the fear I was picking up from you afterwards was just because you were scared of getting caught.\"\n\n\"It's alright,\" Irillith said with a smile. \"I'm just glad I'm on your side!\"\n\nThey both laughed with relief, hugging each other again as John walked over to join them. He wrapped them both in his arms, and then smiled at Irillith as he said, \"You've really proved what a wonderful addition to the team you are today. You were amazing, thank you.\"\n\nShe gave him a happy smile, and looking at each of them in turn, she said, \"It feels tremendously rewarding to help out. I'm just glad I was able to start repaying everything you've done for me. What with the healing, my new relationship with Edraele, and even just welcoming me into your family. I feel like I owe you both a huge debt.\"\n\nJohn smiled back at her and said, \"You don't have to feel that way, it's great to have you here. We all help each other, so there's no point keeping score.\"\n\nAlyssa giggled and placed her hands on Irillith's still-swollen tummy, and said, \"Besides, he's been delighted to have you aboard.\"\n\nThe Maliri laughed, looking carefree and radiantly beautiful, and she said, \"I'll look forward to delighting you both again soon.\" She shared an intimate kiss with each of them, and when they released her from their embrace, she waved them goodbye as she left the Briefing Room.\n\nJohn and Alyssa were the last ones in the room, and he took her hand, leading her around to his chair. When he sat down, he pulled her into his lap, and said, \"I think we need to discuss this 'Special Investigation'. What's your opinion, XO?\"\n\nAs much as the blonde girl was enjoying his attention, she nodded sombrely. \"Yeah, this looks bad. Irillith mentioned interviews with people we've rescued, and reports on the Invictus' capabilities; it sounded pretty comprehensive. It's just a shame she wasn't able to grab a copy.\"\n\nHe gazed out the window at the twinkling stars that flashed past in the black, hugging her to him as he pondered it for a moment. He finally sighed, and said, \"I'm inclined to agree. if Irillith's right, they started taking an interest after the Kirrix incident.\"\n\nAlyssa studied his face, and then said, \"Either that, or our exploits in the Iota-Leonis system put us on their radar. You became the Lion of the Federation then, and our public profile grew exponentially. When we stepped in to save Port Medea, perhaps someone started taking an interest in our past activities?\"\n\n\"That makes sense,\" he agreed with a nod. \"Which begs the question, who authorised it? My first guess would be Admiral Norwood, after we fought off the Kintark, and saved the Leonis system. Alternatively, it might have nothing to do with the Dragon March Traitor, and this could be Terran Federation High Command getting curious.\"\n\n\"The Invictus is stocked to the gills with priceless upgrades, and I remember how keen Charles was to trade for the Tachyon Drive,\" Alyssa said, nodding her agreement. She smiled sardonically as she added, \"Any Admiral would give his left nut for our new Maliri weaponry!\"\n\n\"It's probably going to be prudent to keep a low profile in Terran Space, and not show our hand unless we have to,\" John said firmly. \"The last thing we need is High Command harassing us for access to all our tech specs.\"\n\nAt that moment, the door to the Bridge swished open, and Calara dashed inside. \"We've got Charles on the comm!\" she blurted out in a rush. \"He said it's urgent that he speaks with you!\"\n\nJohn and Alyssa shot a glance at each other, and she hopped off his lap, before they strode quickly out of the Briefing Room, and up to their seats on the Command Podium. Calara had darted back to her Tactical Station, and she said, \"Putting him through!\" \n\nThe viewscreen flickered for a moment until it coalesced into the familiar face of John's old commanding officer, Charles Harris. The older man's face was lined with worry, and in all the years John had known the man, he'd never seen him looking this troubled and afraid.\n\n\"Oh, thank God!\" Charles gasped with relief. \"John, they've really fucked up this time!\"\n\n\"What is it Charles?\" John asked, leaning forward, alarmed to see his old friend looking on the verge of panic.\n\n\"Those crazy bastards didn't listen to my warnings!\" he rambled, his eyes wild.\n\n\"You aren't making sense!\" John exclaimed. \"What warnings? Who?\"\n\n\"The R&D division! I tried to get it stopped...\" Charles blurted out fearfully, \"It's the Ganymede incident all over again!\"\n\n***\n\nThe two House Loraleth assassins exfiltrated Genthalas Station as planned, sneaking aboard one of the supposedly neutral merchant vessels, which was docked here waiting for their extraction. The merchant's guild ran a reasonably sized fleet of trading ships, and over the years, they had become well known for providing not-so-secret transport for covert operatives. As all Houses used them as such, they remained relatively safe from intra-House strife, while collecting lucrative fees from all involved. \n\nAvelissa and Renaya waited patiently for the freighter to dock, then joined the crew who were waiting to disembark at the planet Loraleth. The crystal airlock door spun upwards into the ceiling, and the passengers and crew strode out into the bright sunshine of Loraleth's twin suns. A couple of guards were waiting for them at the starport on the planet's surface, and Avelissa immediately recognised them as part of Matriarch Shaedra Loraleth's personal retinue. \n\n\"Come with us, please,\" one of the heavily armed and armoured guardswomen said, and the two inconspicuous looking assassins fell into step behind them.\n\nThey walked over to a waiting hover-car, and the guards waited for their charges to enter the vehicle before sitting in the seats opposite them. The driver lifted off with the almost silent hum of anti-grav motors, and the large car raced away towards the Loraleth palace. There was a somewhat tense atmosphere in the spacious confines of the luxury vehicle, and Avelissa could tell that the guards were itching to ask them about the mission.\n\nOccasionally she'd share some titbits of information, but not today, not after the mission they had just executed. The news they were about to pass on to Matriarch Loraleth would shake the pillars of Maliri society to their very core! She gave the closest escort an apologetic smile, and the Maliri guardswoman sighed in frustration. \n\nIt didn't take long to reach their destination, and as soon as they had parked the hover-car, the guards rushed them through the Palace corridors. They arrived at an imposing entranceway, and the double doors began to swing open the moment they arrived. The Palace guards ushered them through the portal, then joined two of their cohort, standing at attention outside.\n\nAvelissa took the lead with a confident stride, while Renaya kept pace beside her, and the two assassins walked purposefully into the room. It was a grand and imposing, high arched audience hall, with the ceiling shaped into a spectacular crystal dome. The hall was cunningly designed to be intimidating for visitors, and the dome channelled light onto the dais, presenting the Loraleth Matriarch in all her regal splendour. Shaedra Loraleth was sitting in her throne, an eager gleam in her eyes, and her four daughters were arrayed around her, two on either side.\n\nThe moment the doors shut behind them, the Matriarch leaned forward, and demanded, \"What news? Were you successful? We heard reports of a detonation, but haven't been able confirm more than that.\"\n\nAvelissa declared proudly, \"Just as you ordered, Matriarch, your will has been done. Edraele Valaden is no more.\"\n\nThe Loraleth Matriarch looked like she could scarcely believe her pointed ears, and she asked hungrily, \"What happened?! I want details!\"\n\nRenaya stepped forward, and said, \"We set explosives, and ambushed Edraele Valaden en-route to a meeting with her Fleet Commanders. The other strike teams had lured away her bodyguard, and suppressed local comms, so we were able to reach the bombsite well before any Valaden troops could get there. Edraele survived the explosion, but was badly wounded, so we finished her off.\"\n\n\"She's definitely dead?\" Shaedra Loraleth asked warily. \"There can be no doubt!\"\n\nAvelissa nodded, and said with confidence, \"We decapitated her, just to make certain, Matriarch.\"\n\nShaedra slumped back in her chair, her expression one of utter astonishment. Her attractive blue face lit up in a dazzling smile, and she crowed victoriously, \"I finally did it!\" \n\nHer daughters gathered around her chattering excitedly, and after shaking her head in disbelief, Shaedra looked at them smugly, and exclaimed, \"I told you I would bring our House to primacy one day!\"\n\nRenaya turned to Avelissa, and the two women shared a smile, momentarily forgotten as the Loraleth ruling family revelled in their moment of triumph. Avelissa paused, and cleared her throat politely before saying, \"Matriarch, we were given a message to pass on to you by Ioelena, our contact on Genthalas. She said it was important.\"\n\nShaedra nodded impatiently, and said, \"Let's hear it.\"\n\nThe assassin crouched on the floor, then pressed the button on the small black holo-projector. The recording of Ioelena's face appeared as a crisp holographic image, floating above the device, and she beamed at them happily.\n\nLooking greatly relieved, she exclaimed, \"The plan worked! Edraele has been eliminated, and House Valaden is critically vulnerable! Her Council of Advisors are trying desperately to keep this a secret while they attempt to locate Irillith, but news will leak out, as it always does. When the Valaden Fleet Officers find out there'll be chaos, so I'd suggest mounting a strike in two days, and you can hit them when they are the most disorganised. Irillith is out of Maliri Space, and will not be able to claim her position as Matriarch in time.\" Ioelena performed a sweeping, respectful bow, and added, \"Congratulations Matriarch Loraleth, leader of the Maliri's first House.\"\n\nShaedra Loraleth nodded as she thought over the plan, and with a look of delight, she said, \"Capitalise on the anarchy... it's an excellent suggestion. We'll gather our fleet, and prepare to launch an offensive. Valaden forces won't know what's hit them, and we might be able to annex all of Genthalas, as well as any ships in drydock!\" \n\n\"I'll order our fleet to begin preparations immediately!\" her eldest daughter volunteered enthusiastically.\n\nShaedra grinned at the women gathered around her, and said, \"Do that. Then tonight, we celebrate! Finally that godforsaken Valaden bitch is dead, and House Loraleth can take its rightful place.\" \n\nShaedra Loraleth noticed the two assassins again, and smiled benevolently as she said, \"You've both done a tremendous service to your House. I will ensure you receive titles and wealth as a just reward for your actions.\"\n\n\"Thank you, Matriarch,\" they both said by rote, bowing respectfully, then turned and left the room, obedient servants that they were.\n\n***\n\nOn the Invictus' Bridge, John glanced at Alyssa in shock, reeling from Charles' announcement. He turned to the viewscreen and said urgently, \"Get a hold of yourself Charles. What's happened exactly? I need hard facts!\"\n\nCharles took a long shuddering breath as he tried to calm himself, then said, \"Vice Admiral Von Brandt and the R&D division. They lost control of their facility three weeks ago! They sent out an emergency distress call, but the signal was shut down almost immediately afterwards.\"\n\n\"You need to stamp this out right now,\" John said in alarm. \"God knows how big a fleet they'll have amassed in three weeks!\"\n\n\"You don't have to tell me that!\" Charles snapped angrily. \"I only found out about this two weeks ago! The fools tried to cover it up until the attacks started.\"\n\nJohn leaned forward, and said, \"What attacks? What ships were involved?\"\n\n\"Rogue AI ships are attacking everything around the Beta-Persei system! They're using automated ships just like the one that attacked you. They've been killing everything in their path!\" Charles said frantically.\n\n\"Send everything you've got, and crush this now, before they get too powerful to put down!\" John barked furiously. \n\n\"I did!\" Charles exclaimed, sounding on the edge of despair. \"But we've stripped our forces bare in the Terra sector; everything's been diverted for the big push in the Dragon March! I sent out every ship I had as soon as I found out, but I lost contact with the battlegroup a couple of days ago!\"\n\nJohn took a deep breath, and said ominously, \"That R&D facility was right in the middle of a metallic asteroid field, and they must have had a shipyard to build those automated cruisers. This could be really bad, Charles.\"\n\n\"I know,\" Charles replied looking grim. \"I've sent out distress calls to the Trankaran Border Fleet, but they're still nearly a week away.\"\n\nJohn narrowed his eyes, and said guardedly, \"Alright, but I'm just flying an old Assault Cruiser, what do you expect me to do about it?\"\n\nCharles flung his hands up in exasperation, and exclaimed, \"This isn't time to play coy, John! I know you've been running around, sticking every upgrade you can on that ship! Besides, I've got nothing else to throw at them; there are -NO- combat capable vessels left in the Homeworld Sector!\"\n\n\"What's this 'big push' in the Dragon March?\" Calara asked, looking worried.\n\nCharles looked down at her and muttered, \"It's supposed to be top-secret, but that doesn't exactly matter if a robot uprising wipes out the Terra sector...\" He sighed and said, \"We've massed a huge force in the Dragon March, and Admiral Norwood is leading a massive counter-offensive against the Kintark. Forces have been siphoned off from all over the Terran Federation to support the invasion.\"\n\nCalara looked at John with alarm, but he threw her a sharp glance, and she pursed her lips, sealing them closed. \n\n*We're just under two days from the Beta-Persei system,* Alyssa advised John telepathically.\n\nJohn looked at the viewscreen, and said to Charles, \"We can reach the R&D facility in two days, but if the AI forces took out your entire Battlegroup, I'm not sure how much we can do. Just how many ships did you have in that task force? Did they report on any battles before you lost contact with them?\"\n\nCharles sounded badly shaken as he replied, \"They were a cobbled together fleet of ships that had just completed repairs, attached to the reserve forces around Olympus. Eight cruisers, two light carriers, two dozen destroyers, and led by a battleship under the command of Commodore Neal Jansen. They encountered a couple of solitary raiding ships as they approached Beta-Persei, which they took care of without taking any casualties. After that they went radio-silent and we haven't heard from them since.\"\n\n\"Alright, we'll look into it,\" John said, nodding to Alyssa, who began plotting the change of course immediately. \n\n\"Do what you can, John,\" Charles said gratefully, then added, \"But get out of there if the odds are too high. There's no point throwing your lives away for no reason.\"\n\n\"Will do, Charles,\" John replied. He stared at his old friend, and said, \"We were planning on visiting Olympus next anyway, so I'll see you soon.\"\n\nCharles brightened at that and said, \"Well good luck, and hopefully we can share a drink when you get here!\"\n\nWith that, Charles closed the call, leaving silence to reign in the Bridge. John slumped back in his chair, then glanced over at Irillith and Faye, who'd not spoken during the whole exchange. Irillith was just trying to keep a low profile, but Faye looked saddened by the disturbing news they had just received from Charles.\n\nWhen Faye realised John was looking at her, she let out a little sigh, and sounded perplexed as she asked, \"Why would an AI go rogue and attack Terrans like that? You've been nothing but nice and friendly towards me.\"\n\n\"I don't know Faye,\" John replied helplessly. \"I really wish I had an answer for you, but newly created Artificial Intelligence has always turned on Terrans.\""
    ],
    "authorname": "Tefler",
    "tags": [
        "swallow",
        "blowjob",
        "psychic",
        "shapeshifting",
        "cyber realm",
        "technokinesis",
        "violent",
        "robot",
        "artificial intelligence",
        "maliri"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-58"
}