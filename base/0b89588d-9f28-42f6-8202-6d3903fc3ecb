{
    "title": "Jezebel's New Look",
    "pages": [
        "Jezebel was not what you thought of when you heard the word 'Succubus.' More bookish than bombshell, she often retreated to the back of the lecture hall to avoid being called on or otherwise stared at. Nonetheless, she was pretty noticeably a demon; bright red skin, a spade-tipped tail and a pair of cute little black horns poking out from her forehead, surrounded by a neat bob of white hair. To a human, she looked to be about twenty-one, but after reaching even partial maturity, a lot of demons aged exceptionally slowly. She didn't quite know how old she actually was in human years - time worked differently back home - but Jezebel had a sneaking suspicion she was older than most of the faculty. Especially considering how long it had taken to convince her very traditionalist mother that she really didn't want to spend her life preying on mortals and having lots of kinky sex.\n\nHer last class of the day had been Fundamentals of Marketing, which ended just in time for lunch. As usual, Jezebel was leaving with another two pages of notes, stuffed to the margins with extraneous details, and was feeling very pleased with herself. She walked across the white tiled floor of the enormous atrium, passing under potted olive trees and nervously waving to the few people she vaguely recognised. Never any more than a wave, though. A fellow demon flashed a smile at her, complete with a cheeky wink and not so subtle pulling back of his open shirt. She rolled her eyes; she found it hard to believe that would work on anyone, let alone her. And yet still the purple-skinned moron had a harpy or two going cooing over him from the upper floors. She shook her head. She ducked under the spidery torso of one of the professors, narrowly dodging the minotaur on the other side.\n\nA paper slipped out from her stack, and she stooped to pick it up. By the time she had straightened herself out, a pair of somethings had wrapped themselves around her face and plunged her into darkness.\n\n\"Guess who!\" A voice sang behind her.\n\n\"Nadia, you're the only one who does this,\" Jezebel said.\n\n\"Aw, you're no fun.\"\n\n\"That's me alright,\" Jezebel giggled as she pulled the hands away, turning to face her fluffy-haired roommate. Most werewolves -or werecreatures in general- were incredibly hard to distinguish from ordinary humans. Nadia made it blatantly apparent by showing off her little fangs as much as possible, and by wearing a black leather collar. The buckle on said collar was almost always jingling since Nadia was almost always bouncing around. \"So, what're you doing here? Don't you have volleyball practice?\"\n\n\"Coach cancelled it again. Probably because she's off banging one of the soccer players,\" Nadia shrugged, \"So... I figured we could hang out together for once!\"\n\n\"We hang out all the time.\"\n\n\"Yeah, at home. It's not the same at all.\"\n\n\"Okay, fine,\" Jezebel mockingly rolled her eyes, \"I was just about to get lunch anyway.\"\n\n\"Woohoo! Where are we going?\"\n\n\"The on-campus stuff is pretty good.\"\n\n\"Blech, really? Where's your sense of adventure?\"\n\n\"They have those flapjacks you really like.\"\n\nNadia hissed. \"Hmm... I really shouldn't, I'm on a diet.\"\n\n\"You are so not on a diet.\"\n\n\"I could be!\"\n\n\"Your last diet only lasted two hours.\"\n\n\"But that chicken parmesan was so good!\" Nadia whined.\n\n\"Come on,\" Jezebel said, \"Not like you need to diet anyway.\"\n\n\"I dunno, I think I'm developing some major love handles...\"\n\nNadia's crop top and miniskirt made it pretty evident that she was not, in fact, developing love handles. The perfectly toned muscles and subtle curves seemed permanently statuesque, especially given Nadia's impressive height. All of that packaged under skin like dark amber and some artfully arranged and colourful makeup made her a guaranteed head-turner. Even Jezebel couldn't help but feel just a little bit into her, though she rationalised it as a succubus' inherent need to pin down anything that has a pulse. \n\nOkay, she was a lot into her. Nadia's habit of lounging around in her paw-print underwear didn't help things.\n\nThey made their way through a corridor that looked like it'd been cut out with a cake-knife. The cafe was the kind of place that tried it's very best to be trendy and only managed to fool the people in charge. Foot-long sandwiches in art nouveau paper or cardboard packaging, furniture with so many curves it was borderline impractical, and drinks that came in sizes which were just different words for 'big.' All staffed by people and monsters with mostly forced smiles and mandatory knickknacks pinned to them. At least it was cheap.\n\nJezebel pursed her lips and scanned over the racks of sourdough and Italian bread, trying to pick out something that wasn't soaked in mayonnaise or came with an unnecessary \"exotic\" ingredient. Which meant ham and cheese again. She balanced it atop her papers and shuffled into line.\n\n\"Is that it?\" Nadia asked, stacking a few more flapjacks onto her pile.\n\n\"What?\" Jezebel said.\n\n\"You sure you're okay with just a sandwich?\"\n\n\"Yeah, it's fine. I can't eat a whole one anyway.\"\n\n\"Huh. That explains a lot...\"\n\n\"And what's that supposed to mean?\"\n\n\"Nothing, nothing!\" Nadia insisted, \"It's just, you know... you'd think someone like you would have a little more meat on her bones.\"\n\n\"That's stereotyping,\" Jezebel said with just enough playful edge.\n\n\"I mean, yeah, but is it really wrong though?\"\n\n\"No, not really. Mom was pretty bummed out about it too. She thinks there's something super wrong with me because I haven't hit my second yet.\"\n\n\"Second?\"\n\n\"Puberty.\"\n\n\"Oh. Ouch... I can't imagine having to go through it twice.\"\n\n\"I mean, the second one's a lot faster. Like, a lot.\"\n\n\"But still!\" Nadia flopped down into a chair, spreading her various sweets onto the table, \"I guess it does explain all the... you know.\"\n\n\"Mhmm,\" Jezebel sat opposite her, \"I was a late bloomer the first time too. She was freaking out a lot, which is not something you want at that kind of age.\"\n\n\"Man, she must be super pissed you didn't get her tits.\"\n\n\"Urgh, tell me about it... She tried to buy me an engorgement spell as a present when I got my acceptance letter!\"\n\n\"No way!\"\n\n\"Yep. Mom can't wrap her head around life without double Fs,\" Jezebel took a bite out of her sandwich and sighed.\n\n\"She does know people are into things other than tits, right?\"\n\n\"Honestly? I have no idea. I think she'd be okay if I had an ass like Auntie Marion's, but...\"\n\n\"Don't get yourself down over it!\" Nadia said through a mouthful of oats and honey, \"You're cute as you are. Besides, a lot of people like the geek chic nowadays. Not that you even need to, you know... With the career focus and all.\"\n\n\"Thanks. It's just hard to shake sometimes, you know?\"\n\n\"Mmm. I can practically feel my Dad leaning over my shoulder, bugging me about my studies.\"\n\n\"You're majoring in Sports Therapy, do you even have anything to study?\" Jezebel giggled as Nadia threw an empty wrapper at her.\n\nThe conversation floated in and out between bites, jumping from subject to subject. Nadia rambled on about how much she 'admired' -Jezebel mentally added the air quotes- the volleyball captain and her body; and their plans for the future, near and far. It was almost dull in how domestic it was, but Jezebel was happy to have it. She didn't get many conversations outside her roommate, and it was nice to watch Nadia enthusiastically waffle about everything. It was cute, in an overwhelming kind of way. Jezebel sucked her fingers clean absent-mindedly.\n\n\"Hey, uh... Jez?\" Nadia asked, \"Are you okay?\"\n\n\"Huh? Yeah, sure. Why?\"\n\n\"Well... you've already eaten the whole sandwich.\"\n\nJezebel looked down. There it was; a paper wrapper completely devoid of leftovers. How on earth had she eaten the whole thing and not noticed? Her hand moved to her stomach as it growled. Loudly. She was still so hungry. She snatched up one of the flapjacks and ravenously bit into it.\n\n\"Hey!\" Nadia said.\n\n\"Sorry! I just... I dunno, my appetite is out of control or something.\"\n\n\"Jez, honey, that's what we call normal,\" Nadia giggled, \"But yeah, ask next time okay?\"\n\n\"Sure...\" She said as she finished the flapjack off with an enormous bite, \"Oh... oh damn...\"\n\n\"You still hungry?\"\n\n\"A little.\"\n\n\"You sure you're okay?\"\n\n\"Yeah, yeah...\" Jezebel said. Although... she was feeling a little odd. Warm. Not quite feverish, but like someone had just dropped a lump of hot coal into her belly. She rubbed her forehead as a dull throb of pain moved through it. Was she coming down with something? Succubi didn't get sick, at least not from mortal stuff. Her hand brushed over her horns as she rubbed, and she froze. Her hands moved up. And up, and up. Much further than her horns had ever stretched to.\n\nOh shit.\n\n\"I-I have to go!\" Jezebel said, standing up and rushing off before Nadia could make a comment. Why now? Why in public? She was years overdue, right? This shouldn't be happening! She shook her head as she rushed through the atrium. There wasn't going to be a lot of time before the changes set in. She keeled over as the first pulse worked its way out of her torso and over her body. It wasn't just warmth, it was... need. Hunger. She needed somewhere private. Now. \n\nJezebel crashed through the door to the ladies room. It felt like it was going to be over quickly, so maybe she could hide here and ride it out. The stalls were empty, thankfully, which left her to writhe against the white tiled walls until she could settle with her hands on the enormous row of sinks. She stared into the mirror. Her hair was sticking to her sweaty skin as she panted. Jezebel bit her lip; she didn't want to change too much. She knew changes were going to happen but... she liked her look. It was a little dorky, sure, but it was professional. Like she belonged in an actual business, not in a second-rate soap-opera set in an office. She reached up to her horns, stroking along the new length. She didn't mind that so much. The extra height might make doors awkward, but it wasn't a huge change. She shuddered, looking back at her tail; no change there. None of that spike or sucker nonsense.\n\nHer stomach roared, and Jezebel moaned as the most wonderful heat flared inside her. It was like a private sauna leaking out onto her skin. The body changes were starting. Her clothes were starting to feel restrictive. Unnecessary. Her hands quivered as her nails grew into talons. She tore open the plain white shirt, watching in fascination as the stubborn paunch on her stomach melted away, leaving only taut, flat abdominals. She traced a finger along her navel, shivering with delight at the newly sensitive skin. \n\nThe warmth began to move, worming its way upwards until it pooled into her chest. She bit her lip, fumbling with the front clasp of her bra and tossing the thoroughly unsexy thing away. Cupping her modest, perky little breasts for the last time she waited. And groaned as the heat swelled, the flesh growing too. Her whole body shook as the soft flesh billowed and jiggled, slowly filling and spilling over her palms, her fingers... Her knees knocked together, and her eyes rolled as she squeezed her buxom bust. Fuck, it felt amazing. Like someone was tugging her nipples and massaging her chest from the inside. She almost whimpered as the growth slowed to a stop.\n\nShe wasn't comically huge, thankfully. But still definitely on the bigger end of the spectrum. And just as perky as when they were itty bitty titties. She shook her chest from side to side, watching the flesh jiggle and move. They were so full and heavy! There was no way she could ever keep them cooped up in those everyday bras anymore. Tits like these deserved a little decoration. Even if, well... no one ever got to see it. \n\nJezebel blushed profusely, watching her face subtly shift in the mirror. Little imperfections vanished, her acne scars melted into smooth skin, the crooked top of her nose snapped into perfect straightness. It was still hers, no doubt about it. But sort of... her plus. She was thankful her freckles stayed; she always thought they were one of her cutest features. But somehow they were sexy now. She adjusted her glasses, and the Jezebel in the mirror somehow turned the dorky little square frames into librarian chic.\n\nShe squeaked as the warmth moved downward, and her skirt grew tighter. Much tighter. She could feel it ride up her legs until it stopped mid-thigh, stretched almost painfully by... Jezebel gave her arse a quick smack. It was definitely plumper. The kind you could sink your fingers into that jiggled and bounced so wonderfully every time it slammed down on a thick cock. Her cheeks grew hotter; she was starting to think like her mother now. Was that a side effect?\n\nHer next few breaths were deep and shaky. It was okay, wasn't it? Nothing had changed up there; her brain was intact. She wasn't dumber, or anything. Being a CEO was still a dream job, her favourite food was still Croque madame, and the thought of making a presentation in front of the class again made her shiver. No, she was the same dorky businesswoman-in-training she'd been before she'd walked in. But now... now she had a craving for something. A hunger that no simple food could satisfy. She licked up her fingers, the long tongue curling around the digits like a snake. \n\nYes... she needed to fuck. \n\nShe needed to ride a cock right this second; to grind against another pussy; to fuck and suck and lick every inch of skin she could find. She ran her hands down her new body, shuddering as every subtle brush set her skin on fire. She looked like sex incarnate. Felt like it too. A red-skinned demon librarian, stripping down to take a few 'late fees.' Or maybe a manager giving one of her loyal thralls -employees- a reward for all their hard work. Ooh, she liked the sound of that. Perhaps later though; right now all she wanted was to strut out into the atrium stark naked and metaphorically devour the nearest cutie. The only thing stopping her was the unchanged part of her brain, reminding her of how horrific that would be for her future career.\n\nA sound snapped her attention away from the mirror and towards the door.\n\n\"Hey, Jezebel, are you alright in he-\" Nadia began as she pushed the door open. She froze, her eyes wide as Jezebel turned. Nadia gulped loudly, \"U-um... you're really busy here so I'll just... leave, okay?\"\n\nShe turned to go and let out a little strangled noise as Jezebel's spade-tipped tail wrapped around her throat. Jezebel had no idea it could go quite that far. Or that fast. She pulled Nadia back inside the bathroom, dropped her inelegantly against the side of the sink and pinning her there; hands on either side of the terrified face and thighs straddling her victim's. Despite the apparent size difference, the werewolf seemed an awful lot smaller when Jezebel was on top.\n\n\"It's no trouble at all,\" Jezebel purred.\n\n\"You know, I really have other things I need to be doing, a-and, um...\" Nadia stammered as Jezebel drew closer. She smelt of citrus perfume and fear. Delicious fear, \"Oh god... You're not going to...?\"\n\n\"Shh... It's okay,\" -She gently stroked along Nadia's hair- \"Relax. Look into my eyes and just... melt away...\"\n\nJezebel was never a fan of using the glamour. It wasn't mind-control -not really, anyway. More like a... relaxant. Something to soothe the nerves and make someone flop down into a suggestible little ragdoll. They wouldn't do anything you told them, but you could nudge the victim one way or the other. She'd always thought it was cheating a bit, and it was far too easily abused in everyday life. But right now she needed to sate her thirst; she needed to fuck someone right this second, and Nadia was going to be the lucky one no matter what. Jezebel cooed and shushed, stroking along Nadia's face as the magic took hold. Her eyes slowly glazed over, her body going limp and relaxed. Her breathing was slow and steady, almost like she was asleep.\n\n\"That's it... nice and peaceful. No one to hurt you here,\" Jezebel said, \"You're going to do as I say, aren't you?\"\n\n\"Yes, Jezebel,\" Nadia said.\n\n\"You're not going to tell anyone what happened here.\"\n\n\"Yes, Jezebel.\"\n\n\"Good girl... You like being called a good girl, don't you?\"\n\n\"Y-yes, Jezebel.\"\n\n\"That's it... deeper. Good girl. Good girl. It makes you feel so wonderful to be called that. Makes you so wet down there.\"\n\n\"Yes... Jezebel...\" Nadia's breath was beginning to hitch. Had she stumbled upon something secret? A little kink? Jezebel chuckled, licking up Nadia's neck and watching her shiver. She really shouldn't be exploiting it, but...\n\n\"Every time I say 'good girl', you're going to get hornier and hornier. Every time I say 'good girl' you're going to sink deeper and deeper, your throbbing cunt wiping out all traces of resistance.\"\n\n\"H-hah...\"\n\n\"That's it. Good girl, Nadia. What are you?\"\n\n\"I-I'm a... good girl...\"\n\n\"A good, horny, obedient girl.\"\n\n\"A good, horny, obedient girl,\" Nadia panted.\n\n\"Do you think about other good girls, Nadia?\" Jezebel asked, \"About spending time with them? Touching them...?\"\n\n\"N-no... I don't...\"\n\n\"Shh... no one is judging you here. You're safe with me. You can relax... be a good girl and tell me everything.\"\n\n\"I...I like girls.\"\n\n\"Like them? Or love them? How much do you love pretty girls, Nadia?\"\n\n\"I masturbate to pretty girls... like captain, and coach...\"\n\nThat was unusually forward. Nadia must be very susceptible to the glamour. Or... very willing to spill it all. Jezebel giggled, the thrill of keeping her friend under going to her head. And to her pussy. \"Good girls don't masturbate to pretty ones, do they?\"\n\n\"They don't?\"\n\n\"No. Good girls don't masturbate to pretty girls. Good girls fuck pretty girls.\"\n\n\"I...\"\n\n\"Am I a pretty girl, Nadia?\"\n\n\"Yes... so pretty...\"\n\n\"Have you masturbated to me before?\" Jezebel's cheeks were reddening alongside Nadia's. This was much, much more personal than she should be asking. But it was just so much fun! And so hot. She felt like a real succubus, slowly pulling out her victim's secrets before... She stroked up and down Nadia's stomach, tracing the contours of her muscles and navel.\n\n\"I-I...\" Nadia shuddered, \"Yes. All the time...\"\n\n\"Do you want to fuck me?\"\n\n\"N-ngh...\"\n\n\"Be a good girl and answer me.\"\n\n\"Hah... y-yes...\"\n\n\"Because I'm a pretty girl?\"\n\n\"Yes!\"\n\n\"And what do good girls do to pretty girls?\"\n\n\"They... they fuck them...\"\n\n\"So...\" Jezebel licked up Nadia's neck, gently nibbling her ear as she whispered, \"You're going to be a good girl and fuck me.\"\n\nNadia's little whine was the most adorable thing Jezebel had ever heard. Red fingers slid their way beneath Nadia's miniskirt, stroking along sodden lace. Just who had she been trying to impress with these, hmm? Jezebel scraped her teeth along Nadia's collarbone, a free hand guiding the surprisingly timid werewolf's grip to her bust. She moaned as the newly sensitive skin was squeezed, grinding her crotch against Nadia's leg. A few quick and insistent tugs and the crop top hit the tiled floor, revealing the elegant black and pink beneath.\n\n\"Ooh... what a cute bra,\" Jezebel cooed, \"I might just have to steal it.\"\n\nNadia didn't resist in the slightest as she unclasped and tossed the lacy lingerie to one side. She just gasped and moaned as Jezebel's tongue worked itself over her exposed skin. Jezebel suckled and groped and enjoyed every single moment of having her friend under her control. It was just so intoxicating. Nadia's smell, her taste, her warmth. Jezebel could just gorge herself on every single part of her. Or one part of her in particular. She licked her lips, rolling the skirt up as far as it would go and tugging the equally cute panties down the muscular thighs. Jezebel's eyebrow cocked with amusement; a landing strip was more hair than she'd been expecting down there.",
        "A few quick test licks along the outer folds sent Nadia into a shivering fit, and Jezebel pressed further. Nadia gasped, and her hands clasped around Jezebel's horns. The succubus had a feeling there would be a lot of people doing that in her future. She giggled, swirling her tongue's forked tip around Nadia's little pleasure nub, a hand slipping down to her own pussy as Nadia squirmed and squealed above her. Thighs threatened to wrap around her head and leave her stuck in a world that stunk of arousal. Not that she really would have minded.\n\n\"Jez...\" Nadia panted.\n\n\"Hmm?\"\n\n\"H-hah! I'm gonna... n-ngh! So close...!\" The glamour must be breaking down for her to be so... vocal. Not that Jezebel minded.\n\n\"Already?\" Jezebel asked, \"Poor thing... We can't let you finish too early, can we?\"\n\n\"Huh? No! Please!\" Nadia's hips bucked, and she whimpered as Jezebel withdrew her tongue.\n\n\"Now, now...\" Jezebel stood, \"You want to be a good girl, don't you?\"\n\n\"Ah... yes... g-good girl...\"\n\n\"Hands away from your cunt. That's it... Good girl,\" -Jezebel bit her lip as Nadia shuddered- \"We don't want a good girl like you to cum, do we?\"\n\n\"But... I need it. I need to cum!\" Nadia whined.\n\n\"A good girl earns her right to cum,\" Jezebel said, turning the glamour up just a little more.\n\n\"A good girl...earns...\"\n\n\"Do you know how she earns it?\"\n\nNadia shook her head.\n\n\"First, she kneels,\" -Jezebel had barely finished the sentence before Nadia was on the floor- \"Good girl. Very good girl. And then, a good girl makes sure her Mistress cums first.\"\n\n\"Hah... Make Mistress cum...\" Nadia said. \n\nThat word sent a shiver up Jezebel's spine; maybe she was more of a sadist than she thought? She slowly rolled her skirt up her thighs, hooking her thumbs around her plain panties and shimmying them down to the floor. Nadia's eyes followed her the whole time. Having the werewolf looking up at her from the floor, wearing nothing but a rolled-up skirt and a collar... was there any better image?\n\n\"You want to make Mistress cum, don't you?\" Jezebel asked.\n\n\"Yes... wanna be a good girl...\"\n\n\"Then go ahead. Make me scream.\"\n\nJezebel yelped as Nadia barrelled into her, the werewolf burying her head between the red thighs. Jezebel ran her hands through the small mane of fluffy black hair as her eyes rolled back. Nadia clearly had no idea what she was doing, but the enthusiasm was more than enough to make up for it. If Nadia had a tail, Jezebel figured it would be wagging. Loud, sloppy licks along Jezebel's naked folds, punctuated by swirls and presses as the tongue worked deeper inside her. Her spade-tipped tail snuck up to loop itself around the leather collar, becoming a makeshift leash. Jezebel tugged it to spur her good girl onwards. \n\nIt was new and incredible. Not her first time with another -virginity didn't last long back home- but the first time Jezebel had had a thrall so eager to please her. Or a thrall at all. Jezebel groaned and was sorely tempted to keep Nadia under her spell. A nice little pet. But that wouldn't do, would it? She did genuinely care for her. Maybe just... friends with benefits? She gasped as Nadia's tongue hit a susceptible spot inside her. She could figure it out later. Much, much later. Right now, her legs were starting to give, and her fingers were digging into Nadia's scalp. Her breath was catching as the pressure in her core mounted. Like a bubbling tide of warmth.\n\nShe needed more.\n\nWith strength, she didn't even know she had Jezebel pulled Nadia's muscular frame up onto the sink. She planted one foot beside the werewolf, tugging apart Nadia's legs and grinding their crotches together with a delighted hiss. She'd never thought about the mechanics of this before, but with a little experimentation... oh, yes! Every shudder seemed to set another off in Nadia, which fed back against her own cunt. The two of them writhed together, rolling hips and arching backs. A little aid from the spade-tipped tail wiggling against their clits and Nadia's adorable whimpers turned to outright moans.\n\nJust a little more... Just a little...!\n\nNadia finished first; her eyes rolling back as she howled with pleasure. A howl cut off by a sudden, passionate kiss from Jezebel as she pressed her body tightly against her. Jezebel ground and writhed as Nadia's body was wracked with spasms, riding out the orgasm and aftershocks until her own washed over her mind. Her nails dug into the amber skin, her eyes slamming shut and her whole body faltering as wave after wave of pleasure rendered her a shivering mess. Slowly the last aftershock faded, her limbs regaining some semblance of control back, as she broke the kiss apart. A thin strand of saliva hung between their tongues before Nadia slumped to the ground, eyes drooping and breath heavy. Not dead, just drained. The one downside to a mind-blowing night with a succubus was trying to get up the next morning. She'd probably be fine, in a half-hour or so. Maybe more. If not... someone would find her.\n\nJezebel stretched, licking the last remnants of Nadia's juices from her face. That was fun. And so filling. Though she could always go for another. And another, and another and... She shivered. She'd been dreading this kind of change for so long. It was all so sudden. So exciting. Maybe she'd have more fun with her new body than she'd thought. She took a deep breath to steady her still shaky limbs, drinking in the smell of sweat and sex that lingered about the bathroom. Oh, yes. A lot more fun.\n\nAnd then she took another deep breath to stop the panic that was rapidly following her post-orgasmic bliss.\n\nWhat the hell had she done? Her roommate lay on the floor in a mix of their juices, still hovering in and out of the trance. Nadia would probably forgive her when she woke up, but what if it hadn't been her? What if some unfortunate bystander had wandered in and gotten the same treatment? She'd assaulted someone out of raw horniness! There were probably exceptions for this sort of thing -a second puberty as exonerating circumstances maybe- but the simple fact was... She groaned into her hands. Stupid, stupid succubus blood. Was this going to be a new thing for her? Having to... suck someone off in a bathroom just to quickly sate her new hunger?\n\nShe surprised herself with how appealing that was.\n\nJezebel shook her head. Nope. Nope, nope, nope. She was not going to turn into her mother. She was going to find a way to keep a lid on her new urges. Or a healthy way to vent them. Maybe some new toys. Yeah, that'd do it. New, bigger toys. With vibration functions. A lot of them. And maybe someone to share them with-\n\nShe smacked herself. This was going to be an awful lot harder than she'd initially thought.\n\n\"Jez...\" Nadia mumbled from the floor.\n\n\"Nadia! Are you okay? I didn't hurt you or anything, did I?\"\n\nNadia shook her head and yawned. \"Mmm... tired.\"\n\n\"Yeah, that's... normal, I think. Sorry.\"\n\n\"It's okay,\" Nadia curled up a little, her eyes flicking shut again, \"Coulda just asked. Know a lot of boys who would have helped.\"\n\n\"I didn't know it was coming,\" Jezebel let herself smile, \"Maybe next time, huh?\"\n\n\"Mmm... Maybe.\"\n\n\"Come on, let's get you dressed and out of here. Before someone else walks in,\" Jezebel grunted, pulling Nadia mostly onto her feet. Until the exhausted werewolf collapsed back onto the sink. This was going to be tricky.\n\nA few minutes of struggling with clothes later and the two of them left the bathroom. More specifically, Jezebel left; carrying Nadia on her back like an exhausted child. She was surprised by how easy it was. Had her strength improved? It'd undoubtedly explain how her mother could handle so many minotaurs and ogres.\n\n\"Jez...\" Nadia said, \"They're all staring at us.\"\n\n\"Probably because they'd expect you to be carrying me,\" Jezebel said, trying not to make eye-contact with anyone. Dammit, she could feel the smug gaze of that pretty boy incubus already.\n\n\"Or they just like your new body.\"\n\n\"I'd... rather not think about that,\" Especially not how tight her shirt had become. Too much movement and she'd probably take someone's eye out with a flying button. She'd already had to toss away her old bra, so every step probably made her jiggle enticingly. Urgh, and she'd need new skirts too. If Nadia weren't in the way, Jezebel would probably be constantly checking to make sure her arse wasn't showing.\n\n\"It's a good body...\" Nadia yawned.\n\n\"... Thanks.\"\n\n\"I mean, I liked your old one... but this is nice too.\"\n\n\"Okay, that's definitely the trance talking.\"\n\n\"Nuh-uh.\"\n\n\"Yuh-huh,\" Jezebel rolled her eyes, \"You should be fine tomorrow. That's a day off for you, right? You can just... relax and recharge.\"\n\n\"Mhmm... thanks, Jez.\"\n\n\"What're friends for?\" Not fucking each other into a coma, that was for sure. She felt Nadia's warm weight settle on her back, slow rhythmic breathing tickling her neck. She tried not to focus too much on the feel of muscular thighs in her hands, of the soft squish of flesh into her shoulder blades. She was just helping a friend, after all. A friend she lived with and who spent a lot of time in her underwear or skimpy workout clothes. Whom Jezebel may have ogled once or twice before she developed a hunger for sex. Things were not going to get any easier, were they?\n\n\"Jez...\" Nadia mumbled in her ear.\n\n\"Yeah?\"\n\n\"Was I a good girl?\"\n\nJezebel nearly tripped over herself. Things were definitely not going to get any easier."
    ],
    "authorname": "AlexMarkov",
    "tags": [
        "demon",
        "domination",
        "hypnosis",
        "lesbian",
        "mind control",
        "monster",
        "monstergirls",
        "transformation"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/jezebels-new-look"
}