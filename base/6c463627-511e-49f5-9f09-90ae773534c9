{
    "title": "The Perils of Being Too Trusting Ch. 04",
    "pages": [
        "I want to say thanks for the offers to help edit, it all made this chapter go faster. A particular thanks to CuriousMG whose contributions are making the story much stronger. If anyone out there is good at reading copy or a very picky proof-reader, I could definitely still use help with that too. \n\nHope everyone enjoys.\n\n*****\n\nHeather stuck her arm out her car window, trying to use her hand to force a breeze into her car. For the 100th time on the drive up to Denver, she cursed SpareRod and his stupid torments. This wasn't even sexy, being told she couldn't use the air conditioning in her car when it was almost 100 degrees. It helped that she was in a bikini, but she was still sweating profusely. He told her that he liked watching her shiny body as she drove, but mostly she just felt sticky and uncomfortable.\n\nShe was feeling even more uncomfortable about all the traffic on the highway. He had made her modify her bikini, removing all lining and leaving it ridiculously sheer. Her nipples and even her areolae could just be seen through the top, and the bottoms now showed a clear camel toe where the fabric pulled into her pussy. Her car was towered over by the trucks and SUVs on the highway, and more than a couple times it felt like they slowed down as they passed her to get a better view. \n\nHe had made her wear the bikini for the drive, but allowed her to pack some different clothes in her trunk, presumably for when she got to Denver and actually started shopping. But until she got to the mall there was no telling what he'd make her do. Thinking about it, she realized there was no guarantee he wouldn't make her go into the mall in the bikini, but she was pretty sure that would get her arrested, or at least banned from the mall. But for now, all she could do was hope for the best.\n\nHeather pulled into the immense mall parking lot, parked in the most remote spot she could find, and brought up the video chat on her phone. SpareRod connected almost immediately.\n\n\"Did you enjoy your ride up, slut?\" he asked mischieviously. \"You look all hot and bothered.\"\n\n\"Mostly just hot Sir,\" Heather whined. \"It's hot as fuck here.\"\n\nActually, the truth was that she was more than a bit bothered too. The weekend had been unbelievably frustrating, being forced to dress like a slut, constantly edging, and the ban on orgasms was now stretching to almost a week. It seemed now like she was constantly turned on, and all of her thoughts were sexual in nature. She felt a deep and unrelenting need to get her brains fucked out.\n\nIt seemed like SpareRod had done everything he could over the weekend to keep her in that state. Even though there hadn't been any more opportunities for her to repeat her naked serving girl role for Keely, he had kept Heather dressed in a tiny t-shirt cut high on her midriff and the skimpy boyshorts whenever she was around her roommates. Saturday afternoon, he had even made her insert a small butt plug. She was pretty sure that neither of her roommates could see the shape of the plug through the panties, but it kept her embarrassed and turned on the whole afternoon. SpareRod's instructions had been to offer to do whatever her roommates wanted her to do, keeping her humiliation level high. They made her cook dinner, clean the kitchen, and vacuum the living room. Anna seemed a little shocked by it, but Keely seemed to be taking full advantage. She even gave her laundry to Heather to do on Sunday, while she and Anna went out, leaving Heather home alone. So she'd ended up doing Keely's laundry wearing nothing but a butt plug. When SpareRod found out, he upped the ante by making Heather pick out the sexiest panties that Keely had, and putting them in her mouth. He even had Heather fold the panties so the front of the gusset would go right on her tongue, so she could get a taste of Keely's pussy. It was so humiliating, it turned her on so much that she couldn't even come close to touching her pussy, even when SpareRod told her to edge. She had felt like she would cum from just one touch. \n\nShe had eventually calmed down a little, especially once she was able to put the panties and midriff back on for her roommates' return, but the whole experience made her entire body buzz with sexual energy. Trying to deny that she was all worked up was pretty pointless. SpareRod clearly knew it, and proceeded to prove it to her.\n\n\"I think your engine is revving pretty close to redline slut,\" he responded. \"Pull down those bikini bottoms and show me if your cunt is wet.\"\n\nNo surprise, Heather's pussy was not only wet, but puffy and open. At his urging she stuck two fingers inside herself, and the ease with which they went in betrayed how horny and wet she was. He made her finger bang herself until she was right on the edge of cumming, finally allowing her to stop and pull up the bikini. He was extra cruel though, and made her wedge the fabric up into her ass and pussy, exacerbating how sensitive her clit was. \n\nHolding the phone so he could watch, he had her walk to her trunk in the bikini, strip naked, and dress in the clothes he had picked out for her that morning. While part of her was getting used to being naked in risky situations, this was truly crazy. Her legs were wobbly as she tried to scurry around her car to the trunk, crouching a bit to try to be less conspicuous. It seemed to take forever to pull on her short jean skirt and a backless halter top. The top wasn't much more than a trapezoid of fabric across her chest that tied at her neck and the middle of her back. She had only worn it a couple times out clubbing; it really wasn't intended to be worn at a mall in the daytime. When she had modelled for him this morning, he made her tie the knots on her back tight, cinching its bottom around her torso about two inches above her navel. He also had her loosen the tie behind her neck. This made the halter hang down and away from her body a bit, showing quite a bit of side boob when she was standing. When she bent over, all the cloth hung away from her chest giving clear down-blouse and side-boob views of her nipples. The floral print fabric was thick enough that her nipples didn't really show through, but it hardly mattered with how easy it was for them to peek out. The skirt was the same one she had worn to buy the sex toys, and at only 13 inches long it pretty much only covered the bare necessities. Bending over, squatting, or even sitting was almost certain to make her expose herself. A pair of four inch wedge sandals, making her legs look longer, and her skirt even shorter, completed her outfit.\n\nOnce Heather composed herself, she grabbed her oversized purse and took the long walk across the parking lot, keeping her eyes down to avoid eye contact with anyone. The wind was blowing strongly, but he forbade her from holding her clothes in place. The jean skirt stayed mostly in place, but she was pretty sure her nipple was peeking in and out of view as her top fluttered in the wind. As she approached the doors, she watched her reflection, and while her nipple wasn't totally exposed from the front, her top was never covering very much of the rest of her boob.\n\nAs she walked through the mall towards the large department store SpareRod selected, she noticed a lot of people staring at her. The guys all seemed to stare in shock or lust, and the women in disapproval and disgust. Heather felt like her entire body was turning beet red, and she tried to just look at the floor in front her as she walked. SpareRod just added to her nervousness,chatting in her earbud about all the slutty clothes they would be buying. It seemed if it was short, tight, see-through, or easy opening, then she would be buying it today.\n\nShe wandered around the department store, holding things up to the camera for his approval. Not only was he picking out very revealing outfits, but he seemed to be deliberately picking the wrong size. She was sure this was all part of making the experience as embarrassing as possible. Soon she was headed to the changing rooms with an armful of clothing and was shown back to a dressing room.\n\nOnce her halter top was off, the first thing he had her try on was a sheer black long sleeve blouse that buttoned all the way up the front. He had made her get one that was clearly too large even though there had been plenty of all sizes on the rack. It was meant to be worn over another top, but once she had it on Heather realized it was well past sheer and on to completely see through. She could clearly see her breasts, nipples, areolae, belly button, everything through the fabric. \n\n\"Call that girl who let you in back, she was kind of cute, I want to see her again. Tell her you got this blouse in a size too big, and ask her if there is a size smaller. Make sure not to cover up anything. I want her to get a nice view.\"\n\n\"Sir, I don't know her, she may get pissed off. It's really risky,\" Heather protested.\n\n\"She can't get that angry. I mean, at least I let you keep your skirt on, and you are actually covered for now. So call her back.\"\n\nHeather felt an almost overwhelming urge to resist, but she could tell from his comment about only being covered for now that things were only going to get more intense from here. She tried not to think about all the butterflies in her stomach, set her phone so the camera would be looking out the booth door, and called for the girl. The sales clerk was probably a little younger than Heather, and SpareRod was right, she was kind of cute. Heather just hoped the girl had a good sense of humor. \n\nAs the clerk walked towards Heather's booth, her eyes dropped down to Heather's breasts, and Heather could see the shock spread across the young woman's face. Heather asked if they had the blouse in a smaller size. Actually she had to ask twice, because the clerk seemed more focused on Heather's barely covered tits than what she was saying.\n\n\"Uh... uhm... sure,\" the clerk stammered, \"I can go look. Uhhhm... you... uh... you do know that is supposed to be worn with something underneath?\"\n\nHeather was relieved the young woman seemed almost as nervous as Heather was. At least the clerk wasn't angry. Heather stood so SpareRod would be able to see her, making sure to stand straight, even thrusting her chest forward a bit to accentuate the view. It humiliated her to present herself like this, but then again, that was the point.\n\n\"Oh I know,\" Heather tried to sound casual, \"but the top I had on would look totally wrong with it, and I didn't think anyone back here would care. You know?\"\n\nHeather ended on a question, and looked at the clerk expectantly, hoping that would draw out a response. The younger woman seemed to take a few seconds to come up with a response.\n\n\"Oh, it's okay with me,\" the clerk giggled nervously, \"you wouldn't believe the half of what I've seen back here. But I can see why you're asking me to go get it for you, don't want people getting the wrong idea with you walking out there.\"\n\n\"See,\" SpareRod said to her as soon as the clerk was gone, \"that wasn't too bad. So let's get ready for when she gets back. Make sure you're topless when she's back. Pretend to be looking at the other tops.\"\n\nThe wait for the clerk to come back was agonizing for Heather. She felt so exposed wearing just the skirt and sandals, knowing that at any time the woman would knock on her door. SpareRod commented that she looked antsy, so he had her alternate between tweaking her nipples and lifting her skirt to play with her pussy to take her mind off of how nervous she was. It didn't really help. \n\nHeather jumped when the knock on the door finally came. She rushed to push her skirt down, and grabbed a couple tops like she was deciding which one to try on next. There wasn't much she could do about her hard nipples or her fingers having a little of her juice on them. She opened the door, and made sure the clerk had a good chance to look at Heather before she took the new blouse and handed back the larger one. Heather thanked the girl, who could barely manage to mumble anything as she tried to look anywhere but at her topless customer.\n\nHe had Heather try on a couple other sheer tops, setting aside for purchase only the most transparent clothing she'd found. After that, he had her try on a button front shirt-dress that was several sizes too large. She knew he was going to find more ways to embarrass her, but even she didn't see what was coming next.\n\n\"Now slut,\" he commanded, \"I want you to leave the dress completely unbuttoned and open, so she has a good view of your cunt and tits. You need to tell her that this is way too loose, and you need one or two sizes down. If she agrees to get it, and she doesn't say anything negative about your cunt being on display, then you need to tell her she can take this one back now, and strip naked to give her the dress back.\"\n\n\"Oh my God, Sir,\" Heather was breathless. \"She'll freak out. She'll kick me out of here.\"\n\n\"We'll just have to take our shopping somewhere else then. You can do this slut. Don't disappoint me.\"\n\nHeather unbuttoned the dress all the way, and let if fall open. Her crotch had just the barest hint of stubble now that it had been almost 10 days since she'd waxed. It seemed even more exposed to her to have that stubble to attract attention, but not enough to hide anything. She had to slide one side of the dress over to expose her breast, but she thought that would be good enough. This time she stepped out of the booth to call the girl back. She had a hard time keeping her voice steady as she asked for help. The girl's jaw actually dropped open when she came around the corner and saw Heather exposed like that. If anything the girl seemed more nervous than Heather.\n\n\"This dress is so loose it just doesn't look right,\" Heather flapped the dress open a few times to demonstrate how it flapped, exposing herself completely to the clerk. \"Do you think you could find me a slightly smaller one? I want it to fit tight, you know?.\"\n\nThe girl was so embarrassed she couldn't even make eye contact with Heather, and barely managed to stammer out that she could probably bring Heather a couple different sizes. Heather had hoped that the girl might scold her, so she wouldn't have to go to the next level, but that wasn't in the cards. Before the girl could turn to leave, Heather told her that she could take this dress back, and striped naked to hand the dress back.\n\n\"Oh my God...\" the girl was completely flustered. \"Okay, yes ma'am, I'll take it, but you should go... uhm.. you need get back in the booth. Oh my God... please ma'am, you shouldn't be out here like that.\"\n\n\"It's okay, it's just us girls,\" Heather tried unsuccessfully to keep her voice from quaking. \"I've never been much for modesty.\"\n\n\"Please ma'am, I don't want to get in trouble,\" the girl seemed genuinely worried. \"It's not me, but if someone else came back here...\"\n\nThe clerk didn't finish her sentence, but Heather was already heading back into her booth. Her calm facade broke as soon as she was back in the booth, and she started giggling hysterically. It took her several seconds before she could even talk to him.\n\n\"Holy Fuck!\" she whispered. \"That was crazy. My heart is like, exploding right now!\"\n\n\"You did pretty well, slut,\" he complimented her. \"Keep your door open a bit, I think you need a bit more exposure. Plus I'm not sure she knows how horny you are, so I want you to finger fuck yourself while you're waiting. I won't make you get out a toy right now, but you had better do a good job now or we'll move on to the toys.\"\n\nHeather definitely did not want to get out the sex toys. She left her door slightly ajar, leaned against the wall behind the door so no one walking by could see her, and began playing with herself. Her pussy was soaking wet, and it did not take much preparation for her to start pumping her middle and ring finger in and out of her pussy. She was horrified by how loud the squishy noises were as she worked faster and faster. Fortunately, she heard the clerk coming and was able to stop and wipe her fingers off on her denim skirt before the girl knocked on the door. If the girl noticed anything odd, she didn't say anything. Even though she seemed very nervous, she did stay at the door longer than strictly necessary, asking Heather if she needed anything else. Maybe the woman was just making sure Heather didn't start wandering the store naked.\n\nSpareRod guided her through trying on the other dresses. She kept a sheer one and also a crocheted one, both of which were intended as swimming cover-ups, not as something you'd wear with nothing underneath. She had to call back the clerk two more times, both times standing completely naked. SpareRod had her keep her door ajar too, although the clerk closed it on Heather the second time. SpareRod was disappointed that no one else came back into the changing area and saw Heather, but it was mid-morning on a Monday, so it wasn't too shocking. It didn't disappoint Heather in the slightest, since the experience was already embarrassing enough and she didn't see any reason it needed to be worse.\n\nFinally she had selected the clothes he wanted her to buy, and redressed (if you could call it dressed) in the halter top and jeans skirt. Paying for the clothes was relatively uneventful, although the clerk seemed very nervous, and kept staring at Heather's outfit rather than looking Heather in the eye. At SpareRod's urging Heather tried to make some small talk with the clerk, but she seemed too flustered to respond, so a few minutes later Heather was walking out of the store.\n\n\"Well,\" SpareRod was a bit annoyed, \"your pickup technique is a bit weak. We're going to have to work on that if you're going to get good at flirting with chicks.\"\n\n\"Well Sorrrrr-eee!\" Heather huffed. \"It's not like I've been spending all my time learning to pick up girls. Besides, what did you think would happen, that suddenly she'd be eating me out in the changing room like in some cheap porno?\"\n\nHeather noticed a couple heads turn towards her as she said that. She tried to be more discreet whispering into the microphone.\n\n\"Well, a guy can dream right? No, I just think you need to be a bit more flirty. You've started doing it with Keely, I want you doing it more often.\"\n\n\"You want me to get naked in front of random women and then flirt with them? And then jump their bones?\" Heather phrased it intentionally to make it clear how ludicrous the idea was.\n\n\"Exactly,\" he came back without a trace of irony, \"do you have any issues with that, slut? Seriously, I'm not talking about jumping their bones. Just if a woman does something that says she's a bit interested, you keep the conversation going, but work to play a little hard to get. Do things to keep her interest.\"\n\nThey chatted about their differing ideas about how to actually go about picking up girls, but it was clear that SpareRod had a much more scientific approach than Heather. The whole thing made her roll her eyes. It was so like him to take something fun like flirting and make it all clinical. \n\nHer next store was one that catered mostly to teens and young adults. She was a little bit older than girls who normally shopped there, but she dressed pretty young, so it didn't draw a second glance. The way she was dressed however, did cause a lot of people to stare. Heather did her best to ignore them while SpareRod helped her select some clothing. He had her pick out the 3 shortest miniskirts she could find in the store. Two were about 15 inches long and one was a bit longer but had a zipper up the front that unzipped from the bottom. She grabbed those and went to the changing room. There wasn't anyone to show her back, so she just went in.\n\n\"Okay,\" he said, \"let's do something a bit different. Strip naked and get out that suction cup dildo. Good girl. I never get tired of seeing you naked with a dildo. Now let's see you do a couple minutes of blowjob practice.\"",
        "Heather stuck the dildo to the mirror on the booth wall, and got down on her knees to suck the plastic cock. She had made a significant breakthrough yesterday after a few days of practice, and was able to hold open her throat a bit and slide all but about a half an inch of the dildo into her mouth. Every once and a while, it still made her gag, but she was able to slowly work the dildo in and out while he watched on camera. He was complimentary of her progress as she kept practicing. It felt weird to hear other customers walk by outside the flimsy booth while she was kneeling and sucking off a dildo. Hopefully no one looked under the door to see her on her knees. After a couple minutes he changed things up for her.\n\n\"You're making good progress slut,\" he was clearly enjoying this. \"Stand up and turn to face away from the mirror, and then mount that dildo like I'm bending you over and fucking your brains out.\"\n\nHeather couldn't believe where this was going. Granted, the booth door was closed and locked, but it was a pretty flimsy door, and had an 18 inch gap at the bottom. All someone would have to do is bend over a little bit and they'd see that Heather was up to something. She begged him not to do this, but he was unrelenting. She had to move the dildo down a bit on the mirror to get it in the right position. It took her a few tries, but once she had it in the right place, it slid easily into her swollen, wet pussy. Her feelings of dread at being caught, and embarrassment at what she was doing, receded as she rocked back and forth on the plastic cock. After days of teasing and edging herself, she was a bundle of pent up sexual energy, and the feeling of anything, even a dildo, fucking her pussy was amazing. She got herself into a good rhythm as she got more and more turned on. She bit her lower lip to keep quiet as she bounced her hips back and forth, bumping her bare ass against the mirror. She tried to stop a couple times when people walked by, but it felt so good she almost didn't care if they heard. She wanted so bad to just bang the shit out of the thing, but that would have caused a scene within minutes. She had no idea how long he kept her going, and her mind retreated into an erotic haze as she relished the sensations of the dildo pumping in and out of her. The haze was suddenly shattered by a knock on the booth door. Heather hadn't heard anyone coming, and almost shrieked with the rapping on the door.\n\n\"Is everything okay in there ma'am?\" the woman sounded annoyed.\n\nHeather assured her that everything was okay, hurriedly put the dildo away, and tried on the skirts. Thankfully SpareRod didn't make her open the door naked or anything, and a few minutes later she was buying the skirt that unzipped up the front. SpareRod felt the others weren't slutty enough. The older woman behind the counter gave Heather a dirty look, but she didn't say anything about what Heather had been doing, so Heather counted herself lucky to get out of the store unscathed.\n\nNext he had her go to a smaller store that specialized in jeans and denim. There she was able to find some skirts much more to his liking. One was a very short 12 inch cut off jean skirt, and the other was a ridiculously scandalous 10\" pleated denim skirt. She warned him that she'd' probably get arrested wearing the shorter one, but he insisted she take it.\n\nThe changing booths in this store were connected to the main room, and only had a curtain instead of a door. It made Heather feel much more exposed when he made her strip completely before she could try on the skirts. Standing there in just the 12 inch skirt was essentially like being naked. She could almost see the bottom of her ass cheeks peeking out the bottom of the skirt while she was standing, and when he made her bend over her pussy came into view. He had her sit with her knees apart, and again it was pretty much guaranteed that she'd be showing off her pussy.\n\nAs bad as that skirt was, the shorter, pleated skirt was unbelievable. She had to pull it low on her hips to just cover her pussy lips, to the point it felt like the stubble of her pubic hair might be exposed. When she sat on the bench in the booth, only her bare ass cheeks touched the seat. Turning her ass to the mirror and bending over at the waist not only exposed her pussy, but all the way up to her asshole. He kept posing her in different ways, clearly in love with how much of her body this skirt exposed, and he even said that he might have her alter more of her skirts at home to be this size. She was reduced to pleading with him to not make her wear something that would get her arrested. He just laughed and said that if she was going to get arrested, it would be for more than just a short skirt.\n\n\"In fact,\" he continued, \"I think it's time to ramp up the risk a level. Let's get that dildo mounted on the mirror, and find the vibrating egg too.\"\n\n\"Oh my God, Sir,\" she hissed. \"There's no door here, if a clerk comes there's nothing to stop them from just opening the curtain. I could get caught for sure.\"\n\n\"Naw,\" he didn't seem concerned, \"they'd never just barge in, they'll say something first. You'll just need to be very quiet. Of course, that may be a bit harder this time - since the dildo will be in your ass.\"\n\n\"Holy fuck, I can't do that, Sir!\" Heather couldn't believe what he was doing. \"I'm not even sure that dildo will fit, and this is so public Sir. What if I get caught?\"\n\n\"FIrst rule, slut,\" he said calmly, \"is never panic. Now get that vibrating egg in and turn it to medium so you'll find the whole thing more enjoyable.\"\n\nNever panic, it was easy for him to fucking say, Heather fumed. For the the thousandth time since this whole blackmailing disaster had started she considered telling him to stuff a giant dildo up his fucking ass and disconnecting from him entirely. She almost didn't care if he sent that video to all her friends and family and ruined her life. She was so mad at him that she couldn't think straight. But the more she thought about what would happen if he sent that video it became clearer that maybe getting caught masturbating in some mall 75 miles from her home would be bad, but not as bad as what he might do to her. She started looking through her bag for the vibrating egg, reversed course and closed the bag, then reversed again and found the egg. She realized that she looked like an idiot not knowing what to do next, but she was so torn inside.\n\n\"My,\" he chuckled, \"you are an indecisive slut today...\"\n\n\"Fuck you,\" she retorted automatically. \"Sir.\"\n\n\"Oh I certainly hope to at some point, slut,\" he was still laughing, \"but right now you'll be fucking that dildo and thinking of me. Now put the egg in your cunt before I get mad and decide to punish your insolence.\"\n\nHeather's resistance was melting away, and she knew she had lost again. She slid the egg inside herself, and set the remote control to vibrate at medium. They had experimented with it over the weekend, and determined that medium could drive her crazy, but was unlikely to make her cum all on it's own. She wasn't sure that would hold true while fucking her ass with a dildo in a changing room, but he seemed determined to experiment. He did give her one more reminder not to cum before she placed the dildo on the mirror.\n\nHeather tucked the back of the tiny skirt into the hem, put a cool dab of the lubricant on her rectum, pushed it into her ass with a finger, and also smeared lube on the dildo. Slowly she guided her asshole back onto the phallus. It stretched her uncomfortably, and it was incredibly difficult to keep quiet. She tried to control her breathing and focus on the pleasure as she inched her ass back, trying to get the entire cock up her ass. This was even more degrading than she had expected to be. Whenever she had had anal sex before, she had been mostly passive, and basically the guy did all the work. All she had ever needed to do was slow him down so nothing hurt too bad. Here she was doing all work by herself, including moving her phone around so he could get the best view of her ass being violated. \n\n\"Good slut. Keep working that cock into your ass. Move me below so I can see your cunt too. Very good, now push harder. I want to see that thing balls deep in your ass.\"\n\nHeather bore down on the dildo, grimacing a little at the burning sensation, but before too long she had her butt cheeks against the mirror and the dildo buried deep in her ass. She felt completely stuffed, and the vibrations from the egg in her pussy now spread into her ass, driving her crazy and eroding any will she had to resist what he was making her do to herself.\n\n\"Okay, now I want you to go all the way forward,\" he instructed, \"pull yourself completely off the dildo.\" \n\nShe felt so empty when the dildo fell out of her ass with an almost audible pop. He had her hold her phone over her asshole, just to watch it recover. She had to wait several seconds before he had her mount it again, again pushing herself until her ass was against the mirror. Not only did this slow pace make the process more uncomfortable, it also kept her from getting into a rhythm that would allow her to get anywhere close to an orgasm. \n\nOver and over he made her work herself down onto the dildo to the base, and then remove it entirely, waiting several seconds between each stroke. It was immensely frustrating to Heather, not being able to fuck herself properly. Beyond that, she had to listen to him go on and on about her asshole, and how it stayed open as she pulled it off the dildo. Finally, he let her go at it like she wanted to, sliding up and down on the well lubricated cock, bumping her ass hard against the mirror. She was so wrapped up in the pleasure that she almost forgot where she was. Suddenly, a noise nearby brought her back to reality, the footsteps of a sales woman approaching the booth. \n\nPanicked, Heather didn't know what to do. At the last second, she pulled the dildo off the mirror, leaving it buried deep in her ass. The tiny pleated skirt fell back down, although it barely went any lower than the dildo protruding from her rear end.\n\n\"Do you need any help, Miss?\" a woman's voice came through the curtain.\n\nHeather didn't even have to wait for his instructions, she knew what he'd make her do. She opened the curtain slightly, holding one hand behind her butt to hid the egg's remote control and to keep the dildo from slipping out of her ass. Holding the curtain open meant her bare breasts were visible to anyone in the store, although the clerk who had come to check on her was blocking most of that view. The woman was probably in her mid to late 30s, slightly plump with a pretty face. She seemed a bit perplexed by Heather, but at least she wasn't angry. Heather grabbed the 12 inch skirt off the bench and held it up.\n\n\"I really like this skirt,\" she improvised, \"do you have one like it in a lighter color? I think I'd want that too.\"\n\nHeather felt the dildo slipping out of her ass, and she pushed it back in deep, trying to hold it. The sliding sensation in her ass combined with jostling the vibrator deep in her pussy to make her legs wobble slightly. This was crazy, she was literally ass fucking herself while talking to the clerk, but she just couldn't stop herself. She slowly worked it in and out as held the skirt out for the woman to take with her free hand.\n\n\"Uhhm... sure,\" the woman looked up and down at Heather's naked torso, seeing how flushed it was, and her brow knitted. \"You might want to be a bit more careful, it's a bit exposed right here.\"\n\nThe clerk was smiling as she said it, which relieved Heather a bit. At least she wasn't being all pissy like the clerk at the previous store. Once the woman walked away, SpareRod told her to keep the curtain a tiny bit open, and to really pump the dildo in and out of her ass. She felt like she was on autopilot, and dutifully kept reaming her ass. She couldn't do it too fast, both because she was worried if anyone peeked in, but also because with the riskiness of the situation she could feel an orgasm starting to build. Fortunately the clerk returned before too long and Heather could stop before she was at risk of having an orgasm without permission. Heather was feeling quite wanton now, and opened the curtain even wider to get the skirts the clerk had brought. The clerk laughed about how bold Heather was, but the older woman didn't really seem too concerned. Remembering his advice, Heather tried to engage her in a bit of conversation about which color she liked best. The woman didn't seem to know what to do, and just then another customer entered the store so she rushed off without really answering.\n\nSpareRod allowed her to pull the toys out of herself and put them away. While part of Heather was grateful to ratchet back the risk level a bit, another part felt empty and unsatisfied at no longer being stuffed. She quickly tried on the other two skirts, selected one them, and got dressed again. Once out of the booth, she found the woman and went to complete her purchases.\n\n\"Wow,\" the clerk complimented her, \"I can see why you wanted the skimpy skirts. You can definitely pull off that look. It's been years since I could do anything like that!\"\n\nThe woman giggled and touched Heather's forearm as she said it. Heather demurred, saying she liked the skirts and that they were fun. Normally she might have been more self-deprecating, or said something to reassure the woman about how she wasn't that old. Instead she made up some stuff about how she couldn't wait to wear the clothes out to party. She wasn't sure if that's what he'd meant by playing a bit hard to get, but she was doing her best.\n\n\"You're young and you've got the looks to make it work, so I say live it up while the living is good,\" the clerk replied.\n\nThey laughed together, and kept chatting through the checkout process. Heather was a bit shocked when the clerk grabbed one of her business cards, wrote her mobile number on it, and told Heather to call if she ever wanted to see if they had any other clothes that would be fun. Heather was a bit flabbergasted, nothing like that had ever happened before. \n\n\"That's awesome,\" she took the card with a smile, \"I've never had my own private fashion consultant before.\"\n\nHeather winked at the woman as she said that, and now it was the clerk's turn to be a little flabbergasted. She stammered a bit and said it was nothing. Heather opted not to say anything more, and sauntered out of the shop, hoping SpareRod would approve of her little bit of flirting.\n\n\"Well done, slut,\" he complimented her once she had her earpiece back in. \"Got her phone number without even asking. You're a natural.\"\n\n\"Abso-fucking-lutely,\" Heather said with mock bravado. \"Was she your kind of MILF, Sir. You looking to blackmail her once you're tired of me?\"\n\n\"I would never get tired of you,\" he sounded genuinely wounded. \"Why would you even say that?\"\n\nHeather was surprised that he was acting hurt, since he was the one blackmailing her, but she just moved on and asked if they were done shopping. He agreed they were, but he had one more thing he wanted her to do. She headed towards the exit nearest to where she parked, but before she could get there, he had her go into the ladies room. \n\n\"You have to stay out in the public area,\" he was all business now, \"and change into that crocheted mini-dress.\"\n\n\"Oh my fucking God,\" she muttered. \"Sir, please. You know I can't wear that. I'll get arrested for sure.\"\n\n\"No you won't,\" he came back quickly, clearly getting angry. \"You are right near the door and all you have to do is walk out of there and across the parking lot. No one will have time to say anything, much less call mall security. Now slut I'm telling you that you have to do this, so don't make me start punishing you on top of that.\"\n\nHeather was truly scared by his tone of voice. He was definitely upset, and she knew that wouldn't go well for her. She went into the women's room, and checked under the stall doors to make sure she was alone. Once she was sure, she stripped off the sole two pieces of clothing she was wearing, and pulled the crocheted dress on. She had to smirk, because she was pretty sure that he thought she would be naked there for a while, and it had barely been 15 seconds. Definitely the upside of not wearing very much.\n\nBut this new dress took wearing very little to extremes. The crochet pattern formed small opaque diamonds, maybe three quarters of an inch vertically, and about a half inch across, separated by quarter inch gaps. The bottom line was the dress hid absolutely nothing. Even if she positioned a diamond over her nipple, it didn't cover it entirely so some part of her nipples would always be in view, as would her pussy slit, and the complete crack of her ass.\n\n\"Please Sir,\" she begged, \"this is too much. Someone will call security.\"\n\n\"Only if you keep standing around like that. Remember who is in charge here, and get moving! No matter what happens, don't stop and go straight to your car.\"\n\nHeather was really scared as she walked out into the mall. It took just a few seconds before people were gawking at her. She heard some people say loudly to look at that, and more than a few people laughing. She was pretty sure she heard one woman say something about getting dressed, but Heather walked away too quickly to hear for sure. She ended up just looking six feet in front of her, and walking as fast as she could out the door. The walk across the parking lot was terrifying, and she thought maybe a couple cars slowed down to get a better view of her. She zigged and zagged through the parked cars so no one could follow her easily. There was the sound of some screeching tires, followed by a crash and some breaking glass, but she didn't dare look to see if she had caused someone to bump into another car.\n\nThankfully she reached her car safely, and he did not make her strip before getting in. He had her jump behind the wheel and drive right away, just to make sure no one was following her. Once clear of the mall, he did have her pull into a strip mall about a mile away. Once the car stopped, the emotions suddenly washed over Heather, and she began laughing hysterically. Now that she realized that she wasn't going to be arrested or kidnapped or anything, the whole thing didn't seem nearly so bad.\n\n\"Fuuuuck me!\" Heather finally got out between her giggles. \"I can't believe I did that! It was so intense!! My nipples are so hard they hurt.\" \n\nShe tugged on her nipples, earning an appreciative whistle from him.\n\n\"Did you hear the people yelling?!? The car crash?!? Holy fuck, I think I caused a car crash! I can stop traffic with this outfit.\" She lapsed back into uncontrollable giggling. \n\nFinally she calmed down, and he had her find her bikini top. The dress came off again, and for the drive home, only the bikini top went on. Heather wasn't too sure about driving all the way back home bottomless, but compared to what she'd already done it didn't seem so bad. Once the bikini top was tied snugly below her breasts, he had her untie it behind her neck, and re-tie it much more loosely. Just like with the halter, this made the cups fall away from her breasts, and made it quite easy for her nipples to pop into view. The truckers were going to get quite the show today. The final step to make things as extreme as possible was he had her put the butt plug in her ass, and the vibrating egg in her pussy. The vibrator was set on low this time, but it was still going to be a very distracting drive.\n\nBy now it was getting very hot in the car with her air conditioning turned off, so in spite of her humiliating situation, she was glad to be moving down the road and creating some kind of a breeze. By the time she was on the highway, the thrumming from deep in her womb, and the stuffed feelings in her asshole here getting to her, making her too turned on to worry if a trucker or two got a peek at her as she passed them. She tried to stay with the flow of traffic to keep too many people from getting a view. She definitely didn't want to cause an accident on the highway. The wind with her window open helped evaporate some of her sweat, but it was still a scorching day.",
        "\"Fuck,\" she sighed, \"it's fucking hot, Sir. Can't I roll up the window and turn on the AC.\"\n\n\"I like seeing you glisten,\" he replied, \"but I think I can do something to help you out. There's a Dairy Queen a few exits up, at least there is according to the internet, why don't you stop and get an ice cream cone.\"\n\nHeather groaned to herself. She should have known he had something like that planned for her. She'd just have to hope that he didn't make her do something so extreme that she'd be arrested. It didn't take long to get to the Dairy Queen, but since it was now a very hot afternoon, there was a line of cars waiting at the drive through. All she could do was sit there and sweat while the cars crept forward. \n\n\"I'm glad you like me glistening, Sir,\" she joked, \"cuz I'm glistening like a horse right about now.\" \n\n\"I do like it. Makes me think about how you'd look during a hot, sweaty fuck.\" \n\nIn spite of her risky situation, that comment made Heather smile. She closed her eyes, leaned her head back and thought about how it would feel to get a long, hot drilling right about about now. She imagined a man on top of her, fucking her hard and long, bringing her to a that orgasm she'd been denied for days. Almost unbidden, SpareRod's face came into her minds eye, and she imagined him pounding away on top of her hot sweaty body. The image was so erotic she began fingering her pussy. She teased and rubbed her clit as she imagined all the ways SpareRod would fuck her.\n\n\"Easy there slut!\" SpareRod teased her. \"It looks like you're on a hair trigger.\"\n\nHeather was definitely embarrassed that she'd been fingering herself while sitting in her car, but she was even more perturbed that he'd interrupted a really pleasant fantasy.\n\n\"Fuck, Sir, I'm just soooo worked up. This teasing is driving me crazy!\"\n\n\"You can handle it, slut. I like you worked up. Besides cheer up, at least you'll have something cold to eat here soon. But let's make it more interesting. Put your purse in the back seat, and keep it there until you've pulled up to the cashier. When you get up to the cashier, I want you to kneel up on your seat and bend over to reach your purse in back. You need to do your best to moon them and make sure they see that plug in your ass.\"\n\n\"Really, Sir? You're really gonna make me do that? You're determined to get me arrested or raped, aren't you?\" Heather whined. By this point she was more frustrated by all this than terrified. It just felt like he was going to keep going until she was caught.\n\n\"C'mon slut, give me some credit. Trust me, you'll be safe, and if anyone gets all upset, just drive away. But that isn't going to happen. No one gets upset at beautiful girls being naked. Just at old guys like me being naked. You'll be fine.\"\n\nHeather smirked a little at the image of him trying to go through a drive-thru naked with a plug in his ass , but she had to bring herself back to reality quickly and try to steel herself for what was coming. She got to the board and ordered a cone, and waited to pull forward. Her heart was pounding and her stomach was doing flip flops. At this point the waiting was probably worse than the actual act was going to be. When there was only one car in front of her, he had her increase the vibrator speed to medium. It was almost too much for her, and she was squirming in her seat when she pulled up to the window.\n\n\"Oh!\" she feigned surprise. \"Now where is my purse?\"\n\nHeather turned to face away from the college age kid at the cash register, and climbed up to kneel on her seat so she could moon the kid as she reached to the back seat to get . She didn't hear anything from the kid, but she could hear SpareRod swear in her earpiece. She could only imagine the view the kid was getting of the plug in her ass and the wire coming out of her pussy to the vibrator's remote control. She had a brief, uncontrollable shiver as the thought of what she was doing got her even more turned on. She sat back down and paid for her cone. The guy at the window was basically stunned into silence. He handed her back her change, her cone, and mumbled something about having a nice day. Heather pulled the car over to a quiet spot, looked around to be sure no one could see her, and began massaging her pussy.\n\n\"Oh God, Sir... I'm so horny. Can I please cum now? It's crazy what you're doing, I'm so turned on.\"\n\n\"No, you gave me a lot of resistance today slut,\" he told her. \"You'll need to be much better at following orders to earn an orgasm.\"\n\n\"Ahhhh, fuck!\" that was not the answer Heather was hoping for. \"Can I please take out the vibrator, Sir? I'm so worked up, I think I might cum with even on low.\"\n\n\"Well,\" he relented, \"I'm not completely cruel all the time. You may take it out. You're probably going to lose signal driving back to Colorado Springs, so you'll need to record a video of your drive home. I'll allow you to put the bikini bottom on when you get home, and you can take the butt plug out once Keely or Anna gets home.\"\n\n\"Yes Sir. I understand Sir.\"\n\n\"Good girl. Remember to follow all your other rules. And enjoy the rest of your day off.\"\n\nAnd with that, he was gone. Heather muttered to herself that it didn't feel very much like a fucking day off, but she set the phone up to record a video. It was crazy that she was still following his directions when he wasn't even around, but given everything else she had done for him, it seemed like driving bottomless on a quiet section of highway wasn't really the place to make a stand. Everything had actually worked out okay on this trip, and she just hoped it would keep working that way.\n\n*\n\nBrad startled awake, his heart pounding furiously in his chest. It took him several seconds to calm down and realize where he was. The dream had been so intense, and when the police had tackled him, all he could think of was that his life was ruined.\n\nHe had never had a bad dream about the police chasing him before. He still occasionally had the dream where he forgot to show up for a class all semester and it was now the final, or the dream where he was moving back into the house he grew up in, or the one where he could breathe under water, but never anything like this one. \n\nHe knew that it was because of how hard he had pushed Heather this morning. He had realized as soon as he came down from the sexual high, that he had taken some huge risks. If she had been caught naked in public, and the police had gotten involved, not only would that have been the end of his adventures, she would have almost certainly told them she was being blackmailed. He couldn't believe he had gotten himself into this. He was committing a federal crime. He hadn't even had a parking ticket in years, and here he was risking being hunted down by the FBI; it was beyond insane.\n\nWhile it was happening, and for several hours afterward while he watched the videos over and over while jacking off, he couldn't believe his good fortune. He was living out fantasies that he'd had for years, it was basically what he had been waiting for all his life. A girl with fantasies of being blackmailed unwittingly opened herself up to actually be blackmailed by him. This was not something that was ever likely to happen to him again. It was a temptation too strong to resist.\n\nBut after he'd burned up his sexual energy watching the videos and masturbating, the guilt and remorse would set in. When he had started this he mostly worried about what would happen if she had reported him. Now almost a week later he felt like that was less likely, although he had to be honest and recognize that it was always possible she eventually would. But he found himself in his quiet moments regretting what he was losing in his relationship with Heather. While it was clear that sometimes this really turned her on, and in some ways she was living out a fantasy, he also knew she hated it and was really angry with him. Try as he might to convince himself he was doing what she really wanted, he also knew it was a betrayal, and that wasn't the kind of guy he liked to think he was. \n\nHe got out of bed, went to his computer, and spent several minutes looking at his \"Heather\" folder. For the hundredth time he highlighted all the files and hovered over the delete option. He could delete everything and send Heather a quick message that he would never bother her again. Delete all his accounts, remove all his stories from the web, and just disappear. Both he and Heather could just go back to their normal lives. \n\nBut like every other time, he just couldn't do it. He didn't know where this was going, or how there was any chance that things would work out where Heather didn't just hate him forever. But he just couldn't get off this ride.\n\n*\n\nSPLAT!\n\nHeather's legs snapped together involuntarily from the jolt of pain from her clit. She gently rubbed the cooking spoon up and down across her clit and pussy to disperse the sensation, feeling it replaced by a warm tingling. This was only the second time he had made her spank her pussy, and while it was definitely not her favorite thing to do, it did have some pleasant side effects. She was actually coating the spoon, her juices were flowing so freely.\n\n\"Sixteen,\" she panted. \"Thank you Sir.\"\n\nShe had already spanked her ass fifty times, and each breast 25 times. The boobie spankings were definitely the hardest for her. The idea had seemed kind of sexy when she had only read about it, but the reality was that her nipples were too sensitive, and it hurt so much that it was hard to stay turned on. But the pussy spanks were definitely bringing it back. What was wrong with her that spanking herself like this on camera could leave her so horny?\n\nSPLAT... SPLAT... SPLAT!\n\n\"Seventeen... Eighteen... OHHH... Nineteen,\" she couldn't control her moan. \"Thank you sir.\"\n\n\"You're doing well slut,\" he encouraged her, \"now make your last one really count.\"\n\nHeather took several deep breaths to work herself up for it, and got a full swing in to bring the spoon down straight on her clit with as much force as she ever had. The explosion of sensation took her breath away. Her legs clamped together, and she rolled over on her side, her eyes screwed close as waves of pain and pleasure washed over her. It was unlike anything she'd ever felt, and it took her over a minute to sit back up.\n\n\"Twenty. Holy fuck Sir. Thank you Sir, that was crazy. I've never... that was fucked up, Sir.\"\n\n\"It looked like that last one really sent you for a loop. Very good slut. Now, let's try this again. Tell me all your rules, and we'll see if you can escape further punishment today.\"\n\nHeather made sure her face was off camera before she rolled her eyes. SpareRod and his obsession with rules; it was kind of ridiculous. It wasn't like she had actually broken any of them. It was just when he put her on the spot, she hadn't been able to remember all of them. She hadn't actually said that she was required to be naked when she was home alone with Keely, but she hadn't been home alone with Keely since last Friday, what the fuck did it matter anyway? He had not seen it that way, and so the spankings had started. She took a few deep breaths, and started to recite the rules.\n\n\"Rule one is that I must call you Sir. Rule number two is that I am not allowed to cum without permission. Number three is that I am not allowed to wear any clothes when I am home alone, or just with Keely,\" she emphasized the part about Keely. \"Rule number four is that I am only allowed to wear the clothes that you have previously approved for me or that you tell me to wear. Rule number five is that I must be on camera whenever I'm at home, and when possible even when I'm not home. Rule number six is that I must practice my blow job skills on my dildo four times a day, five minutes each time. I must always do that on camera so you can see my progress. Rule number seven is that I have to edge for five minutes in the shower while finger fucking my asshole, again on camera. Number eight is that when I get home from work, or at noon on my days off, I must give myself an enema so I'm ready for ass play. Rule number nine is that I am not allowed to sit on the furniture at home unless you specifically instruct me to do otherwise.\"\n\n\"Good girl,\" he complimented her, \"you got them all this time. As a reward I think you should spend some time now with that new wand vibrator you got in the mail.\"\n\n\"Oh my god Sir. Thank you Sir. May I cum now Sir?\" Heather was almost bouncing at the prospect of having an orgasm after all this time. \n\n\"I told you slut, you will earn an orgasm when you show me you can be completely compliant. Now show me you're a good little slut, and use that toy to edge for me.\"\n\nIt was all Heather could do to keep herself from crying. She even felt tears well up in her eyes, but she wiped them away as she went to fetch the giant wand vibrator from her room. Why did he always have to be so mean to her? She had done so much for him. Okay, sometimes she tried to rebel and push back on him, but the things he wanted sometimes were so intense, so scary, it was only natural. She was only human, what did he really expect? Maybe this was all a game to him, but this was her life he was fucking with. \n\nFrustrated beyond what she had ever been, she plugged in the vibrator, positioned the computer so he could watch her sitting on the floor with her legs spread wide, and placed the ball of the wand on her slit. She knew he would see how she was pouting, but it was just the way she felt. Rather than say anything more, she just turned on the vibrator to get this over with.\n\n\"Holy shiiiit,\" she moaned, \"that is... that is... wow, Sir - I don't think I'm going to last very long.\"\n\nThe vibrator felt unbelievably strong, and her hips started gyrating of their own accord. It quickly drove her annoyed mood away, it was hard to focus on anything other than what it was doing to her pussy. Her moans started getting louder, and she stuck her left hand in her mouth to bite it and stifle them. Her legs pushed hard, lifting her ass off the floor. Before she knew it, she was very close to the edge.\n\n\"Please Sir,\" she whined, \"if you aren't going to let me cum, you'll have to let me stop. This thing is crazy, what it's doing to me.\"\n\n\"I think you can go a bit longer. I'm enjoying watching you squirm. Keep going until you can't hold off for even one more second.\"\n\nHeather groaned, but she followed instructions. She thought she was going to explode any second, but he was right, she could hold out longer. After another minute she was begging again to let her stop, she was so close it was painful to hold back. He kept making her hold off, causing her to scream and curse at him, but she tried to keep going. Finally, when she thought she would cum or go completely insane he told her that she was allowed to stop.\n\n\"Ohhhhh fuck! Sir, that was so hard. Please... please let me cum!\"\n\n\"I told you slut, that's not in the cards. You should just focus on showing me how you can comply. Demonstrating total compliance is the only way you'll be allowed to cum this week, so I'd work on that.\"\n\nOnly way she'd be allowed to cum this week? It had been a week already today, she didn't see how it could be even remotely possible to hold out for the rest of this week. Even holding out for the rest of the day was going to be close to impossible. She knew she just had to let go and immerse herself in being the total submissive.\n\n\"Yes Sir,\" she panted, \"I'm yours. I'll do whatever you say.\"\n\n\"Very good slut,\" she could hear how he was smiling as he spoke. \"I like hearing that from you. It reminds me, I think you need another rule, just to make it an even ten. So how about from now on, whether standing or sitting you must keep your legs spread. To be specific, let's say your knees should never have less than a ten inch gap between them. I won't make you stand like your bow legged, but it should give your pussy lots of air.\"\n\nThe way Heather was sitting now, she would have had to put her knees much closer together to only have ten inches between them. She knew that in most of the skirts she now owned, and without any panties that would mean a high risk that she'd be flashing people her bare pussy, but she was just too frazzled by the edging to put up any resistance.\n\n\"Yes Sir,\" she said, \"I understand and I will do my best to never have my knees together.\"\n\n\"Very good slut. That was the way I like to see you comply. As a reward for that I think you should only have to edge three more times before we're done.\"\n\nHeather groaned to herself at the thought of having to edge that many more times. But secretly she was also a bit pleased with herself that she'd shown him how submissive she could be. It seemed warped that she could feel that way in this situation, but she couldn't help but smile as she opened her legs even wider so she could give him a good show.\n\nSlowly, she began to work herself to another edge.\n\n*\n\nHeather walked around the coffee shop a few times, trying to figure out the safest place to sit. It was almost certain that he was going to make her do something mind-bogglingly embarrassing, and probably illegal, so she knew she'd want her seat to be as out of sight as possible. She'd picked this smaller, locally owned place for a few reasons. It wasn't near campus and she'd only been here once before, so it was unlikely anyone would know her. Also, the staff were all in their 20s and seemed pretty laid back, which wasn't always the case in this town. Finally, the shop was kind of L-shaped, with the long part of the L being a corridor back to the restrooms with tables along one side. She decided to sit there, at the table closest to the bathroom, facing the rest of the shop. No one else was sitting in that part in the early afternoon, and she would be able to see anyone coming. She set up her computer, plugged it into the wall, and ran up quick to get an iced coffee with a brownie so no one would give her a hard time about hanging out.\n\nBack at the table she sat down, keeping her knees apart according to her rules, opened the video chat with SpareRod, and inserted her earpiece. She sipped her coffee for just a few minutes before he came on. \n\n\"Good to see you this afternoon slut, how are you doing today? I enjoyed the video of you edging at work this morning.\"\n\n\"Fuck, Sir,\" Heather's desperation poured out, \"my pussy feels like it's buzzing all the time since you made me edge with that vibe yesterday. I've literally soaked my panties just since I put them on in the car.\"\n\n\"How does it feel to be out in public fully dressed? You haven't been this dressed other than during your babysitting for a while now.\"\n\n\"It feels good, Sir. Thank you for letting me dress like this for a change.\"\n\nHeather had been a bit surprised when he had told her to change into this outfit after her midday shower and enema. Over the tiny g-string he had allowed her, she was wearing her longest remaining skirt that came to mid thigh. A sheer black bra, dark blue cami, and a very sheer black button-down blouse completed the outfit. It was a more sexy outfit than she would have worn a couple of weeks ago, particularly in the early afternoon, but it seemed like a lot of coverage compared to what he had made her wear this last week.\n\n\"Well, don't get too used to it,\" he warned. \"I'm sure you're not surprised to hear that you won't get to keep all those clothes on all afternoon.\"\n\nHeather started getting nervous, wondering how things would go from here. He did not clue her in right away, they just chatted for a while, talking about the cafe she was in, showing it to him on camera, and how her work day had gone. After a few minutes of stringing her along, he finally got to the point.\n\n\"I want you to take your bra off now. Do it right where you're sitting.\"",
        "Heather looked around nervously a bit, assured herself that no one was watching her, and reached up the long sleeves of the blouse to pull the bra straps over her hands. Thankfully the sleeves didn't fit too tight, and the blouse was loose because of the top buttons having been cut off, so it was fairly easy to get the straps off. All she had to do from there was undo the back clasp and pull the bra from under the front of the cami. \n\n\"Good girl,\" he seemed pleased. \"Now I want you to reach under your skirt and start rubbing your cunt through your panties.\"\n\nHeather only had to hike the skirt up a bit to sneak her hand under her hem and start rubbing the gusset of her panties. She hated to admit it, but it felt really good to have the smooth fabric sliding back and forth across her clit. And knowing she was doing this in public definitely amplified the thrill. No one could see her where she was sitting, but she could hear the baristas and a couple other customers, and she could see through the window to people on the street. It was in some ways even riskier than what she had done at the mall. \n\nHe kept talking to her, telling her how sexy she looked, and encouraging her. He asked about how this compared to some of the fantasies she had told him about. While part of her was terrified to be masturbating in a public space, she did admit to him that the intensity of the experience was turning her on even more, and that she wasn't sure she could keep rubbing without risking an orgasm.\n\n\"Then I think you can stop for just a little bit. But to keep your hands occupied, why don't you take off your panties now.\"\n\nShe could think of plenty of reasons not to take off her panties, but she was pretty sure he didn't mean the question literally. She spent the next minute or two trying to work her panties down underneath the skirt. Of course, this was when suddenly people needed to use the bathroom, and she kept having to stop when someone entered or left the bathroom. It was hard to keep a straight face sometimes, especially with SpareRod laughing in her ear most of the time. It was the worst when she had them worked down to just above the hem of her skirt and someone decided to sit at one of the tables right in front of her. She was caught there with her panties at half mast, and there was really nothing she could do, she couldn't pull them up or take them off without attracting attention. Finally, the woman sat facing away from Heather, and she was able to slip the panties down to her ankles and off. She breathed a huge sigh of relief once they were safe in her purse. \n\n\"Well that took a long time slut,\" he chided her. \"I think you need to practice your discreet undressing in public skills.\"\n\n\"Oh fuck you,\" Heather said without thinking. \"I mean fuck you... Sir. I haven't had a lot practice or anything. I mean, bras yes, girls do that all the time. But usually I've kept my panties on once I've left the house.\"\n\nShe noticed the woman in front of her stir in her seat. She'd have to be careful to speak more quietly. SpareRod instructed her to resume playing with her clit while they talked. She had to whip her hand out from under her skirt a couple times when people walked by, but he told her that she was more likely attracting attention by her suspicious movements than by just leaving her hand between her legs. Even though she knew he was right, it was hard to sit there with her hand up her skirt when people walked by. He did make her pull her skirt up higher so it was easier to stroke her pussy, but she was still covered when people looked at her. Before too long she had to slow down her caresses to make sure she didn't cum. She switched to typing so people couldn't hear their conversation.\n\nnawtysubslut1989: Please Sir, I need to stop. I'm going to cum.\n\n\"You may stop for a little bit,\" he said in her earpiece. \"Besides, I think you're in too much clothing. It's time to lose that camisole.\"\n\nnawtysubslut1989: OMG, Sir, You can't be serious. This blouse won't hide anything. People will see my nipples, my tanline, my everything through this shirt!\n\n\"That is kinda what I had in mind. You aren't arguing with me, are you slut?\" he challenged her. \"Because we talked about how the only way you're going to earn an orgasm is through compliance, right?\"\n\nnawtysubslut1989:Yes Sir.\n\nThere wasn't much else for her to do, she knew that she was going to comply in the end, so she might as well earn some goodwill from him by not resisting in the first place. It was easy enough to get the straps off her shoulders, the same she had with her bra, but then she started panicking. There was no way people wouldn't notice she had nothing on under the sheer blouse. She actually wanted to do what he said, but her body just wouldn't obey.\n\nnawtysubslut1989: OMG Sir. I'm getting really scared. What if I'm caught?\n\n\"You need to be brave slut,\" He soothed her. \"Odds are no one will say anything, they will even more embarrassed than you are. And if anyone does get in your face about it, just get up and leave. You'll be safe, trust me.\"\n\nEasy for him to say, he wasn't the one that was going to be here with his junk all on display. She thought about telling him to put on mesh boxers and go hang out at his local coffee shop, but all that made her do was want to giggle, which he would probably interpret the wrong way, so she went back to following orders. Fortunately the woman in front of her decided to leave, so once she was gone Heather quickly worked the cami down around her waist, over her hips, and right off. She thought she was going to hyperventilate by the time she got it into her purse, and she instinctively hunched over and crossed her arms across her breasts. \n\n\"Now slut,\" he said, \"that is not how I've taught you to sit. You need to sit up proud and tall, thrust your tits forward so everyone can see how luscious they are.\"\n\nShe blurted out a little giggle at his use of the word \"luscious\", it sounded a bit ridiculous to her, but she did what he asked and sat up straight with her shoulders back. Luckily, no one came back to the restroom, and she actually started to calm down a bit. At least she did until he had her hike up the front of her skirt so he could get a look at her cunt. \n\n\"Very sexy, now I want you to finger fuck your cunt for a bit. Be sure to smear your juices up and down your thighs. I want to see how wet you are.\"\n\nHeather could barely stifle a moan as she slid two fingers inside herself, it felt so good after the intense and relentless teasing of the last week the last week. She was soaking wet and wide open, making it easy to comply with his instructions to smear it all along her thighs, spreading her wetness. Soon she was squirming in her seat, unable to stay still as she got closer to orgasm.\n\n\"I think you need a refill of that iced coffee. Why don't you walk up and get one now?\"\n\nHeather looked down at herself. Her blouse had the top buttons cut off so that the first button was just below her nipples, and anyways the blouse was so sheer she could the freckles on her arms through it. Her legs were shiny with her own juices, and she probably smelled like sex. Walking up to the guy at the counter was simply impossible.\n\n\"Sir,\" she whispered, \"I want to do what you say... but I'm really scared. I could get arrested... or attacked.\"\n\n\"You won't get attacked. I'll be honest, you may get kicked out, but is the barista a guy or a girl?\" \n\n\"Guy.\"\n\n\"I'm betting he just enjoys the show. As long as no one complains, he'll probably just stare at you and drool. But let's go see, go now.\"\n\nHeather knew it was pointless to argue, that resistance was futile, so she walked slowly around the corner to the counter. There were only three other customers, one older guy working on his computer, and what looked like two businessmen having a meeting. The businessman facing her took a good long look at her, but went back to his discussion. The older guy blatantly stared. The guy behind the counter essentially just talked to her chest as he poured her coffee over ice. Heather's confidence began to build as it became obvious these guys were turned on and ogling her. Her pussy began throbbing with excitement, and she was hornier than ever from being forced to expose herself. She made a point of thrusting her chest out and swaying her hips as she walked back to her table, her breasts swaying and jiggling slightly under the sheer fabric. Sitting back at her computer she spontaneously spread her legs wide and rubbed her pussy for him to show him how turned on she was. It was scary because she could see out the window to the sidewalk, but luckily no one walked by just then. She told about how it had felt being at the counter with so little on, how wild and excited it made her feel. She kept working her pussy as she told him what had happened. \n\n\"It looks like you're really getting into that. I think it's time to take it up a level. Let's get the phone controlled vibrator we were testing. I want to play too.\"\n\nIf it were possible to get any more nervous, those were the words that would do it. He had ordered her the little horse-shoe shaped vibrator and it was at her door when she got home from work this morning. The manufacturer had an app that she installed on her phone and he on his that let her control the vibrator from her phone, or more likely, give him the power to control it from his phone. She slipped one end of the horseshoe inside herself, leaving the other part nestled against her clit. They had tested it at home, and it had separate controls for buzzing the part on her clit or deep inside her near her g-spot. Just the few minutes of playing they had done at home was enough to drive her almost insane. There was no way she was going to be able to stay quiet if he turned this thing on full blast.\n\nFortunately he didn't do that. He just set it on a steady throb, alternating between internal and then external vibrations. It probably wouldn't make her cum very soon, but it got her squirming in her seat, and she could feel copious amounts of lube leaking from her crotch.\n\n\"Oh my God, Sir,\" she went back to whispering, \"I'm leaking like a faucet here.\"\n\nShe rubbed and squeezed her pussy to accentuate the vibrations. She even risked tugging on her nipple through the blouse a bit.\n\n\"Well,\" he came back, \"I would hate to see you stain your skirt or anything. Why don't you take your skirt off now?\"\n\nnawtysubslut1989: OMFG Sir!! You're not going to stop until I'm arrested, are you?\n\n\"You told me the guys there didn't mind. You'd better hurry before some woman shows up. Women can get jealous, and you might not be treated so well.\"\n\nHeather took a deep breath, unzipped the side of her skirt, and before she could think too much, pulled it down and completely off. It was in her purse before she could even register that her bare ass was now sitting on the chair. It was crazy that she was doing this. All she had on was a completely sheer blouse that couldn't even button up all the way, and wasn't really long enough to even sit on. She was still taking on board what she had done when the older man who had been working on his computer walked around the corner to head to the bathroom. She immediately crossed her legs and leaned forward to try to cover herself a bit. Out of the corner of her eye she could see him do a triple take, but she didn't dare make eye contact. She held the microphone up to her mouth.\n\n\"Yeah honey, I miss you so much,\" she cooed into the microphone. \"I'm so proud of what you're doing there for our country, but I miss being able to treat the way you like.\"\n\n\"Oh, very well done, slut,\" he complimented her. \"The 'I'm Skyping with my boyfriend on deployment' should get folks to cut you some slack. Just for that, I'll forgive you putting your knees together and covering your tits. Now sit up straight with your legs apart!\"\n\nHeather was just relieved that her ploy seemed to work, and the guy went into the bathroom with only looking at her, rather than saying anything. It was incredibly hard for her to sit up and spread her legs again, but she managed to do it. The bottom of the shirt did just barely cover her crotch, but there would be no hiding the fact that her skirt was missing when the old guy came out of the bathroom. While she was thinking about how she would handle this SpareRod decide to bump up the pace on the vibrator, making it almost impossible to sit still or to plan how not to get caught. She heard the bathroom door open, so she started whispering again.\n\n\"Do you like this lover?\" she used a sultry whisper in her best Marilyn Monroe imitation. \"Aren't I hotter than all those girls around your base?\" \n\nHeather ran her hands up and down her torso massaging her breasts as she talked sluttily to her pretend boyfriend, hoping the old man couldn't see her screen as he walked by. She almost got the giggles as he went around the corner, taking one last very obvious look at her. She couldn't hear him say anything to the guy behind the counter, so she began to feel more comfortable that she wasn't going to get into trouble immediately.\n\nJust as her heart rate was getting close to normal, the old man came back into view, this time with his computer and briefcase. He was careful not to look at her as he set himself up four tables away, but facing her. He plugged into the wall, probably so it would look to everyone else like he was moving so he could charge his computer, but Heather had no doubts it was so he could be a voyeur and spy on her act with her imaginary boyfriend. She typed quickly into the computer to let SpareRod know what the guy was doing. He could barely speak he was laughing so hard. She wanted to jump through the internet and strangle him, this really was not funny at all. If she hadn't been so turned on she probably would have been having a nervous breakdown.\n\nThe old guy was now sitting about 20 feet away facing her over his computer. He was trying to be subtle about watching her, but it was pretty clear he was shifting in his seat to get a good view. \n\n\"Okay slut,\" she could tell that SpareRod was up to something, \"it's been a long time since you've been able to cum, which I can only believe has been very difficult for a little nympho like you. So I'm wondering if you'd like to have an orgasm now.\"\n\n\"Oh yes sweetie, please, I'd love to do that for you,\" she whispered in her microphone, maintaining the fiction that it was her boyfriend on the other end. It made him chuckle, which was good since she was pushing her luck not calling him Sir. She rubbed one hand up and down her chest, and the other cupped her crotch. She didn't dare look at the old man, but she could tell from her peripheral vision that he was transfixed.\n\n\"Here's the deal, slut. You put on a show right there, Like you're mastrubating for your boyfriend overseas. I will turn the vibrator to any setting you want for five minutes. You have five minutes to cum, then I will turn it off. If you haven't cum by then it will be just your hard luck.\"\n\nHeather smiled to herself, she knew she was so close already that it was unlikely she could hold out for anywhere near that long. She texted him to set it at 80% clit, 60% g-spot, and started whispering into her microphone.\n\n\"Is this good honey? Is this what you want to see? Does it get you all hot... OOOHHhhh... unnnh... God,\" she groaned as the vibrator picked up speed. \"Are you all hard and stroking... unh... stroking yourself? Are you thinking about fucking me?\"\n\nHeather sunk back, spreading her legs wide so she could rub her cunt with one hand, and groped her tit with the other. She felt unbelievably sexy putting on this show, not so much for the old man in the cafe, but for SpareRod. She closed her eyes wondered how he was reacting to this. Was he as turned on as she was? Was he stroking his cock? She imagined his face and his sexy smile when she was doing something that pleased him. The thought that she was turning him on by doing this gave her a sense of power and turned her on more than everything else. Her breath was ragged and started coming faster, and she felt hot and sweaty. Her hips gyrated on their own, and she could no longer speak coherently. All she could think about was how sexy this was to do this in front of him, and soon she would be getting to that orgasm. She cupped her hand over her pussy, pressing down on the vibrator, tensing her legs and torso. As her legs began to tremor from the stress, she looked around, even though she didn't think she would be able to stop if someone else came. The old man was blatantly rubbing his cock through his trousers now, which would have creeped Heather totally the fuck out, if she hadn't been so close to orgasm. As it was, knowing how risky this was, and that she was being watched was enough to push her over the edge. \n\nIt's not like Heather kept a journal of when and where she had orgasms, and which were more intense than others, but there was no doubt this orgasm would have been at the top of the list. It might have even gone in the Guinness book of records. It hit her so hard her body convulsed, her legs snapping together and jerking back open in rapid succession. Her hips jumped up and down as wave after wave of pleasure crashed over her body. She could feel the spasms inside of her get more intense, until she had a very strange feeling, almost like an abrupt, irresistible urge to urinate. As the orgasm continued to wrack her body, a sudden gush of fluid flooded out of her pussy. Heather gasped as the liquid ran between her fingers, splashed on the chair, and down onto the floor. She thought she heard the guy grunt around the same time, but she was too lost in her own world to care. She had heard about girls squirting before, but nothing even remotely like this had ever happened to her before. The feeling of release caused her to soar back into intense orgasms again, and they seemed to stretch out forever. She kept flopping and jerking for what felt like minutes until she was too exhausted to move, and the orgasm receded.\n\nOnce Heather could focus her eyes again, she noticed the old man was packing up his computer hurriedly. He stood up abruptly and pulled his briefcase to cover his crotch and pant legs, but not before Heather saw a large wet spot that ran down his thigh. Clearly Heather wasn't the only one who had orgasmed. \n\n\"Holy fuck, I'm speechless,\" SpareRod's voice helped bring her back to reality. \"That was the most amazing thing I have ever seen. But it can't have gone unnoticed, slut. Normally I like getting you more exposure, but I think we've pushed our luck here. You need to pull that skirt on and get the fuck out of there right now. I mean it, MOVE FAST!\"\n\nHeather jumped at his tone of voice. Fortunately the older guy in front of her just made a break for the door, rather than come by her to get to the restroom. She figured he must have been pretty embarrassed. It only took a few seconds to pull her skirt back on and fasten it, and then less than a minute to pack up her computer, and race to her car. She didn't know what the people at the cafe were going to think with they cleaned up around her table, if they had any idea, or would they just think she'd spilled her drink. Either way she was a bit sad to leave, she had kind of liked that cafe.\n\nAnd there was no way she was ever going back there.\n\n*\n\n\"Brad, can you help explain how our technical competencies will align with the evolving externalities to drive our value streams?\"\n\nBrad pressed the key to lock his phone screen and put it in his pocket. Admittedly he hadn't been listening to much of what these fuckwits had been saying. Even if he hadn't been distracted it would have been hard to listen to some of this drivel. He'd been roped into assisting this presentation as a favor, helping a new startup make their pitch to investors, but his heart wasn't really in it. He knew he could help these guys, and make a fair amount of money while he was at it, but it hardly seemed important now. He had tuned out during the presentation, and opened his phone to watch a bit of the recording of Heather's squirting orgasm from yesterday afternoon. It had been a bit risky, but his back was against the wall, so people would just think he was checking messages or something. Fortunately he'd been through more presentations like this than he could count, and he was able to talk like he was totally on top of the topic. The investors seemed reasonably impressed, and he sat back down knowing he'd earned his stock options for the day. ",
        "It took less than a few minutes he felt the compulsion to look at some pictures or video of Heather again. He knew this was a bad sign, and he wondered at what was happening to him. He was about twice her age, but he was acting like a love struck teenager. He was distracted all the time, both thinking about new games they could play, but more and more what it would be like to meet in person. For the first time since the end of his marriage, he felt he had found a person with whom he could be himself. Really for the first time ever, becuase he sure hadn't been able to do that with his ex-wife. For the thousandth time he wondered what would have happened if instead of trying to blackmail the poor girl, he had just kept up video chatting and exploring their fantasies together. He daydreamed about how they would have developed a real relationship, still exploring all the kinky submission activities that clearly aroused them both. \n\nBrad mentally kicked himself, and resolved to stop thinking about what might have happened. It was all in the past now, and there was no way to change it. It wasn't like this was going badly, he was having a ton of fun with Heather, and his time would be better spent thinking up new things he could make her do, rather than moping about what might have been. He pulled his phone back out and started writing notes on new stunts he could make her do, and punishments he should dole out. She had forgotten to strip in front of Keely last night, so he would have to be sure to deal with that. Given that he had taken on the role of blackmailer, it wouldn't do to let her think that he was going soft on her.\n\nBut he couldn't stop from wondering how it would be if things were different.\n\n*\n\nHeather marveled at how much better she had gotten at spanking herself. The swats she was giving herself hurt like a motherfucker, and if her mouth hadn't been stuffed with Keely's panties she would have been screaming like crazy.\n\n\"Okay,\" SpareRod said, \"that's good for round one. You are doing much better, I like how pink your tits have turned, and it looked like you really walloped your cunt with those last few.\"\n\nHeather grunted in agreement on that. She wanted to do a good job, plus part of her was curious to see how much she could really dish out to herself. She had definitely put her arm into smacking her pussy with the cooking spoon with full force. She had played with herself between each swat too, doing her best to open her pussy so her clit would be fully exposed. The feeling on her clit was indescribable. It hurt for sure, but there was more than that. It was almost like a direct electrical shock to her brain, making her body convulse for just a second. The thing was, the pain receded quickly, and it left behind the most wonderful tingly, squishy feeling, and playing with her now super-sensitive clit was really getting her going. \n\n\"I think that's enough of rubbing yourself, you little slut,\" he chided her. \"You still have two more rounds of spanking to do. Same as this last round, 50 swats to your ass, 20 to each tit, five to each nipple, and then 20 on your clit.\"\n\nHeather nodded, and grunted through the panties in her mouth. She got up to kneel facing away from her computer so he could watch her thrash her own ass, when he added a new challenge.\n\n\"Before you get started, let's ramp things up a bit. Go get the medium one from the pack of butt plugs you bought.\"\n\nHeather was not looking forward to that plug. She had used the smallest one a few times now, and it wasn't too uncomfortable. Actually it gave her an arousingly full sensation when he had made her use it. But the next one up was quite a bit bigger, and she worried that it would almost certainly hurt a bit.\n\nShe was right, even with plenty of lube, and going slow the plug still burned her ass as she pushed it into her rectum. Thankfully the pain faded quickly once the widest part was fully inside her, and the butt plug was securely lodged in her ass. She resumed her kneeling position, sticking her ass in the camera, her knees spread wide so her vagina and the red base of the butt plug were clearly visible. She began walloping her ass with the cooking spoon, whining and squealing after every hit. Her ass was still quite sore from her first round, but she did her best to not flinch, and really hit her ass. She was so focused on being good for him, she didn't hear the lock on the door, and didn't notice the front door opening until Keely was standing in the living room. She just stood there for several seconds with her jaw dropped wide open, staring in turn at Heather's red butt, the plug up her ass, and the computer. Heather could only imagine what was running through Keely's mind.\n\n\"Oh wow,\" Keely was clearly very embarrassed. \"Heather I didn't mean to... holy shit... I'm really sorry... I forgot my phone... I'll just grab it and get the fuck out... aaahhh fuck!\"\n\nHeather closed the laptop, and spit out the panties, and tried to explain herself.\n\n\"Keely, I'm so sorry. I thought I'd be all alone today. Please don't be mad, I didn't know...\"\n\n\"Ohhh,\" Keely seemed genuinely concerned, \"Don't worry, we're all adults, you're allowed to have your...uhhhh... your fun.. or whatever... wait... is that MY underwear?\"\n\n'Uhhhm... yes?\" Heather answered uncertainly.\n\n\"Oh... oh my God,\" Keely sighed. \"But well, I think they're yours now.\"\n\nKeely giggled at that, and she didn't really seem upset, but she made it clear she did have to get back to work. She rushed to her bedroom to grab her phone\n\n\"Nice buttplug, by the way,\" Keely laughed as she came back out and opened the front door. \"You are one kinky biyotch. And we are so going to need to talk tonight. But I really gotta run. I'd say have a fun afternoon, but it looks like you got that covered.\"\n\nWith a final chuckle, Keely walked out the door, leaving Heather, naked, stuffed, and very embarrassed on her living room floor. She sat back on the floor, totally humiliated, and unsure what to do next. Suddenly, she remembered SpareRod, and the fact that she had shut him down unexpectedly. \n\n\"Holy shit!\" SpareRod almost shouted when she got him back on. \"Keely caught you? Are you alright? What did you do? What did you say?\"\n\nIt took Heather several minutes to calm down to where she could even talk, but finally she walked him through the last few humiliating minutes. She embarrassed herself all over again by having to repeat everything, even Keely's teasing about the panties and the buttplug.\n\n\"So she didn't seem upset?\" he seemed surprised. \"That's interesting. So what are you going to tell her when she comes back.\"\n\n\"Oh my God, Sir,\" Heather was near panic, \"I don't know. I'm really nervous about this. She saw everything Sir.\"\n\n\"Okay, calm down Heather, it's going to be okay. Remember my rule, never panic. Just stay calm and I'll take care of you. Good girl, just keep breathing. I have an idea, and it won't be so bad.\"\n\n*\n\nHeather looked over at Keely as the two of them walked around the park near their house. Heather thought back to SpareRod's assurances and cursed him. Easy for him to say it wouldn't be too bad, he wasn't here being grilled by a friend over acting like a pervert. To be fair, Keely wasn't really grilling her, she seemed genuinely concerned. She wasn't upset or anything, but she did seem very intent on getting some answers. Heather looked over at her roommate, who glanced at Heather expectantly as they walked. Heather guessed the one bright spot was that Keely had suggested the walk, so they didn't have to have this conversation in front of Anna.\n\n\"Well,\" Keely repeated her question, \"are you going to tell me what's up with you?\"\n\n\"Okay,\" Heather screwed up her courage, and began to tell Keely the tale she and SpareRod had constructed this afternoon. \"I... uhm... I met this guy online... and we've kinda started a relationship. Uhhm... kind of a different relationship.\"\n\nShe and SpareRod had worked out that Heather should present to Keely that she had an online boyfriend, and they were exploring a BDSM lifestyle. It woudn't do to tell the truth of how and why SpareRod was blackmailing her, so an online S&M relationship with \"Rod\" seemed like the most believable story they could come up with.\n\n\"You're shitting me! You were doing that with some random guy online?\"\n\n\"No! No fucking way. Not some random guy,\" Heather was genuinely offended that Keely would think that. \"He's really... he's really great. We've been chatting for months before this. We just took it to the... uhm... the next level a week or so ago.\"\n\n\"And the next level involves him having you beat yourself and steal my underwear?\"\n\nHeather couldn't see Keely's face in the dusk, but she could tell from her tone that while she sounded like she was being flip, she was also concerned about Heather.\n\n\"Well honestly,\" Heather replied sheepishly, \"while gagging myself with your panties was his idea, the spanking part was what I wanted to do.\"\n\n\"You wanted to spank yourself on camera for some guy you never met? A guy who could be a complete psycho? For a bit I thought maybe you had become some kind of a cam whore and were getting paid for it, but you're doing it for this sleazebag all for free?\"\n\n\"He's not a sleazebag! He's a decent guy, and probably more important, he's the first person that I ever opened up to about this side of me... that I kind of get off on...\"\n\n\"Spanking yourself?\" Keely asked wryly.\n\n\"More than that,\" Heather felt like she needed to come clean. \"I get off on being... uhm... being a bit submissive.\"\n\nHeather felt like she was going to die of shame. But she was too far in now, and Keely was one of her best friends. She felt like she needed to talk about it.\n\n\"This is so hard to say Keely. I get a rush from doing things that are a bit humiliating or embarrassing. I know how this looks, and I understand why you're saying what you're saying, but he's not a sleazebag. He's made me feel good, like I'm not a freak. Actually he makes me feel like I'm really special.\"\n\nHeather trailed off, it seemed weird defending the guy who was blackmailing her. Even weirder, everything she had just said was true. She was totally off-script now from what they had planned, but it felt good to say that out loud. She was not glad about being blackmailed, but she couldn't deny that things he was making her do were things she had dreamed about but had never dared to do.\n\n\"Oh Heather,\" Keely smiled, \"I don't think you're a freak. A little reckless maybe. And definitely very sexy. And well maybe a bit freaky, but I mean that in the best possible way.\"\n\nHeather laughed, relieved that Keely was being cool about this.\n\n\"So,\" Keely asked a bit tentatively, \"who's idea was the naked serving girl?\"\n\n\"That,\" Heather giggled, \"was probably joint effort. I guess it was his idea, but it was kind of fun. I gotta say though that making me do your laundry was NOT that sexy. At least not until he told me to do it naked with your panties in my mouth.\"\n\n\"Seriously,\" Keely laughed out loud, \"you did that?!? Just because he told you to?\"\n\n\"Uhhhm... yeah,\" Heather answered a bit sheepishly, \"I told you, I kinda like being told to do stuff like that.\"\n\n\"Sooooo,\" Keely seemed a bit nervous, \"if I... uhm... if I told you to walk the rest of the way home bottomless, what would you do?\"\n\nHeather acted before she could think too much about the consequences, unzipping her skirt and stepping out of it right there in the middle of the park. It was the skirt she'd worn on her babysitting job, one of her longest ones left at 16\", but SpareRod had made her get rid of her underwear, so she was left in only a tight t-shirt that ended just above her navel.\n\n\"Hoooooly fuck,\" Keely said softly, \"I don't know why I thought you might chicken out. Aren't you scared?\"\n\n\"Terrified,\" Heather answered honestly. \"Can we go home now? I really don't want to get caught again today.\"\n\n\"In a second,\" Keely got a mysterious smile on her face. \"I have one more addition.\"\n\nKeely looked around to to make sure the park was still empty, unbuttoned her shorts, and peeled both them and her panties off. Heather was absolutely shocked, she hadn't expected Keely to get bottomless with her, it didn't seem like Keely's thing. It turned out it wasn't, since Keely quickly pulled the shorts back on, and then stood in front of Heather.\n\n\"Open your mouth serving girl,\" Keely commanded.\n\nHeather's heart was pounding, and her pussy throbbed as she realized what Keely was going to do. Submissively she opened her mouth and let Keely stuff her panties into Heather's mouth. Heather felt so dirty and kinky just standing there as her roommate slowly poked her panties in with one finger. It was all Heather could do to not diddle herself on the spot.\n\n\"Mmmm...\" Keely sighed as she pulled her finger out of Heather's mouth and traced it down Heather's chin and neck, \"that's very good. I kinda like that too. Okay, now we can go home. I don't know how we'll get around Anna with you dressed like that, but I'm sure we'll come up with something. Cuz there's no way I'm giving you this skirt back tonight. In fact, I'm pretty sure you'll end up wearing less, so I can have my naked serving girl again. So let's get going.\"\n\nKeely accentuated the command with a firm swat to Heather's bare ass. Heather's knees wobbled at the sensation, her nerves a jumbled mess. Part of her was in total bliss in this situation, but part of her couldn't stop worrying what she was getting herself into.\n\n*\n\nBrad checked his phone for the 20th time in the last five minutes. Still no word from Heather. The last message he had from her was when she'd returned home from her babysitting job and was about to go into the house. He had been pretty confident that the story they'd put together would satisfy Keely and keep Heather from revealing too much about what was going on. Brad didn't think Heather would say any more than that, since it would lead to Keely finding out about what Heather had said in the video.  \n\nBut now it had been three hours, and Brad was getting a bit agitated. Had Heather come clean, and Keely talked her into calling the police? Or had it gone the other way, and Heather was now doing something with Keely and he was frozen out? The idea of Heather having to service Keely turned him on to no end, but he'd always planned that he would be in control if that ever happened. Now it seemed like things were moving out of his control. He'd have to think of a way to get back in charge of the situation, but with Keely being an independent actor, that was easier said than done. \n\nHe checked his phone again, cursing at it when there was no update. He decided to shut it off and go for a late evening run to clear his head. There really wasn't anything else he could do. He just had to trust that he would find a way to get back on top of things."
    ],
    "authorname": "koala011860091",
    "tags": [
        "orgasm denial",
        "forced exhibitionism",
        "blackmail",
        "online",
        "humiliation",
        "rules",
        "spanking",
        "cfnf"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-perils-of-being-too-trusting-ch-04"
}