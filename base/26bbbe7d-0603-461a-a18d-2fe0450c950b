{
    "title": "The DReAMers Pt. 05",
    "pages": [
        "The Universe was coming to an end as the contraction entered its final moments with billions upon billions of stars and planets swept up in the great circular wave that was returning from whence it came.\n\nTime and space were shrinking as the small fleet of ships blinked into what was left of reality and floated in the void waiting for the point of no return when everything around them ceased to exist. Waiting for the end of this Universe to escape into the possibility of the next.\n\nThat life would somehow find a way to go on in another place after the Great Collapse.\n\n***\n\nThe blue moon Phobius rose silently in the Northern sky as the sun Sirius A sank slowly in the South bathing the world of Sirius A Three in a vibrant orange and red glow at the end of the day. My first day and the beginning of my new life. It had been quite the experience. All thirty-seven hours of it.\n\nThe red pod vibrated slightly as it crossed an intersection on its way to the Northern sector of the metropolis to where Kira lived. I stared out of the transparent canopy watching as the world of 4047 sped by around us.\n\nKira sat across from me concentrating on the device in her lap which looked like a small screen of some sort which she used by tapping and swiping her finger across it. The pod was large enough to hold ten people and I was sat in a front seat taking in the sights and sounds of Sirius Prime as crowds of people went about their daily business at ground level.\n\nEveryday life was lit by multi-colored neon with flickering images and holographs everywhere and the whole feel and look of the place reminded me of old school China Town back in the day but with everything dialed out to the max.\n\n\"Let me show you this time, Harry,\" Kira had said as we left the building after being introduced to various people who were part of the facility where I had been brought back to life, \"The world in which we both now live.\"\n\nI glanced over at the girl as the pod passed under a huge video display of a waterfall that must have been nearly twenty stories tall with rainbow colors strobing and streaming inside the driverless vehicle. She was still dressed in her yellow outfit and my eyes wandered over her as she sat there with her legs crossed humming to herself. \n\nWhat a remarkable woman. Remarkable not because she was a time traveler. Remarkable because of just the way she was. Calm. Self-assured. Confident in the way she dealt with things for someone who looked all of nineteen years old give or take. I glanced out of the canopy again and wondered how time worked in a place like this. I already understood that each day was thirty-six hours long. But how were those days measured? Were they grouped into weeks, then months leading to years? How many days in a single month and how many months in a single Sirius year? I rested my head back against the padded seat and sighed. Alright. Enough. Those were questions for another day. It felt like I was in kindergarten starting out again.\n\nMy attention turned back to the girl. That was another thing. I had to stop thinking of her as a girl even though she still looked like a late spring teenager. The girl was very much a young woman who was definitely easy on the eye. Everything about her seemed to be just right. From the way she looked to the way she talked in that slightly formal manner which was so damned cute it hurt to the confident way she carried herself.\n\nAnd that body.\n\nI shifted slightly in my seat as I continued to admire her as she sat there oblivious to the way my basic instinct had ticked over as I rediscovered my inner sexuality beginning to stir. Two thousand years plus was a long ass time to be going without. I smiled to myself wondering what Lucy was thinking right now as my hormones notched up a gear.\n\nThe woman was truly stunning though to look at. As I stared at her, I wondered how much she already knew about us as it appeared our fates were somehow bound together no matter what. Did she already know what was going to happen to us in the future? But how was that possible? Hadn't she already told me that one of the rules of time travel is that it is impossible to be in a timeline where you already exist or have been? I closed my eyes and tried to relax. Enjoy the moment, Watts. Make the most of whatever time you have with this woman and let the rest take care of itself.\n\nKira was still busy so I eased back in my seat and let my mind wander as the pod continued on its way. That time, long, long ago, when I had listened to that lecture by the Astronomer in residence suddenly came back to me. The things he had said. The theories and possibilities he had talked about had all come true. Time travel was not only possible it was a proven reality to me. Time travelers were indeed walking amongst us as we went about living our daily lives.\n\nI lifted my hands and looked at them. They were as good as new and I took a deep breath feeling the clean air filling my lungs as I slowly exhaled. The wonders of Forty-first century medicine. We can rebuild him. We have the technology. It was one thing being as good as new but I would always be a man out of time. That would never change and I didn't want it to. I had been born in the Twentieth century and was only living the rest of my life in the Forty-first. Remembering who I was in my first life was something I never wanted to forget or take for granted.\n\nThe pod came to a stop at a junction as it waited for a zippy sleek silver centipede-like monorail to pass. It hummed softly as it floated about three feet off the ground as I turned my head to see a crowd of people standing next to what looked like a stall selling food.\n\nA small figure suddenly stepped forward peering through the canopy of the pod and I found myself looking at what appeared to be a young female child who was staring at me with curiosity. She was tiny and I gave her a smile and brief wave as she glanced up surprised at the woman I presumed was her Mother standing next to her. Then she looked at me again and waved shyly back pulling down her red hat over her bald dark grey head with her huge black eyes shining in the late evening sunshine.\n\nLook at you. Aren't you the most amazing thing on a day that had been full of amazing things. I winked at her and her darkish brown beak opened wide into what I imagined was a smile as the pod continued on its journey. \n\n***\n\nWe were back inside the same building where I awoke and Kira had introduced me to an older man with thick, swept-back grey hair called Dako San who was head of the team that looked after her time machine. There were a number of others in the room in what I presumed was a debriefing and I found myself the center of attention. This Dako San shook my hand enthusiastically and gave me a hug before he stepped back to look me up and down. At least handshakes were still a thing.\n\n\"Pash an tow, Kira!\", he grinned as they both looked at me, \"Pash an tow!\"\n\nThe girl kissed him on his weathered cheek and ruffled his hair. \"Nee dey seeah,\" she whispered back, \"Tuvok poe Einglish tow.\"\n\nDako San slapped his forehead and reached behind his right ear. \"Nee yoh tey forgetting!\" he said, looking embarrassed, \"Wait. Is this the correct version linguistically?\" he asked Kira who nodded, \"There have been so many changes to the base language over the centuries. Hello, Harry Watts. Can you be understanding me now?\"\n\n\"Sure, yes,\" I nodded as he indicated the three of us should sit down.\n\nHe turned to Kira who was sat on one end of the black sofa with me in the middle. \"Any adverse reactions?\" he asked her, \"Temporal lapses, motor function problems or memory issues?\"\n\nKira shook her head. \"No, nothing that I can see. Though he has only been awake for less than three standard hours.\"\n\nThe man nodded and looked me up and down like I was a prize poodle. \"Have you started basic induction yet?\"\n\n\"No, not yet. Not properly,\" said Kira, \"I took him out onto the platform for his first exo and we went for a,\" She hesitated as she glanced at me, \"Little walk so he could get used to the low-gee atmospherics and let him see the Metropolis for himself.\"\n\nI smiled as I felt Kira slip her hand in mine. I glanced at her and our eyes met for a moment before she looked down shyly and blushed. Those words she had said to me as we danced together on the wind meant everything. That she felt the same for me as I had always felt for her filled me with so many emotions that I could hardly speak as we had stepped back onto the platform.\n\nDako San nodded. \"The times you are in are so very different now. The technological, scientific and social advances are the most obvious things you will have to learn as you come to terms with life in this millennia. Kira and your guide will help with that I'm sure. I can only imagine how all this must seem to you, Harry. Over two thousand years is quite the trip.\"\n\nKira turned her head suddenly as if something had distracted her. \"Please excuse me,\" she said, getting to her feet, \"Kul Dak has arrived and is waiting in the ready room,\" She nodded to both of us and made her way to the door that appeared in the far wall as everyone in the room turned to her and bowed their heads as she passed them which seemed slightly odd.\n\n\"Kira,\" said the old man as she was about to leave, \"Have you told him about the others?\"\n\nShe shook her head. \"No, Dako San,\" she smiled, \"Not yet.\"\n\nHe turned back to look at me. \"Ohhhhh,\" he grinned, \"Now this should be quite the experience for you, Harry. You are about to have answered one of your centuries greatest questions.\"\n\nReally? \n\nAnd what the hell question was that?\n\n***\n\nSo this Kul Dak turned out to be over seven feet tall.\n\nThe fact that he looked like a giant turtle without a shell and was wearing a dark red sleeveless Arab like Thobe, black ribbed pants with matching boots was probably reason enough for me to stand there like an idiot staring as this thing walked into the room with Kira.\n\nThere was a murmur as the other people around us turned to watch as Kira brought the creature over so we could be introduced. They had probably realized what a momentous event it was for me and were curious to see how I would react.\n\n\"Kul Dak,\" she began, \"This is the Holocene extraction. Original Earth. Early Twentieth Century homo sapien. Designated Harry Watts,\" She turned to me with raised eyebrows and I could see how much she was enjoying the look on my face, \"Harry Watts, this is Kul Dak of the Seventh Vizor Era and one of the leading experts in temporal research at this facility.\"\n\nThe giant turtle leaned forward so that I could see my reflection in his round expressionless eyes. There were two slots where his nose should be and his mouth was a fierce looking dark brown hooked beak that grunted when he looked at me for the first time.\n\nAlright. Stay calm. This is the new normal. Giant fucking turtles. What do I do now? Shake his claw? It felt like the first day at ET 101 class. So we really weren't alone after all in the grand scheme of things. And if there was one there must be countless others out there amongst the stars. I wondered when our first real close encounter of the third kind had finally happened. That must have been quite the moment in human history.\n\n\"Uh,\" I said as I slowly lifted my right hand. But there was no need for the creature reached across his broad chest with his right arm and thumped his three-fingered claw on his left breastplate as he bowed his huge head. I glanced at the old man who nodded. Mimicking his greeting, I did the same and stepped back slightly as the turtle straightened up. \n\nThe Vizorian looked down at me and I could hear the rumble in his chest as he began to speak. \"The light is all mine, Harry Watts,\" he said with his voice sounding faintly bombastic and deep, \"That you are here with us and safe is an unlimited pleasure. We have time enough to speak of the things between us.\"\n\nGiant talking turtles. Now this was going to take some getting used to. God help me if an extraterrestrial walked into the room looking like something out of the Muppets or a Looney Tunes cartoon. I was beginning to feel like I was in an episode of the Jetsons. \n\nIt was then a tall angular looking man with prominent cheekbones, a hooked nose, and dark purplish hair shaven at the sides came into the room. \"Please,\" he said out loud, \"We are ready to conduct the initial debrief for this operation. If you would follow me.\"\n\nThe assembled group of what I imagined to be support staff and technicians got to their feet and began to leave the room. Kira waited until everyone was gone as she hugged my shoulder and whispered in my ear. \"Everything is fine,\" she promised, \"This is more a technical session than anything else. Lucy will be the one who does the personal debrief once she is able to provide a range of data. Once this is over, we can go home.\"\n\n\"Home?\"\n\nShe nodded. \"Hmm huh,\" she smiled, \"To the place where I live.\"\n\n\"I'm not to stay here?\" I asked her sounding surprised. Wasn't I going to be put in some sort of quarantine just in case I was full of bugs or something? \n\nKira seemed puzzled. \"Why would you stay here when you can stay with me?\"\n\nI shrugged. \"I just imagined that would be the sort of thing that would happen. You know, rules and regulation stuff.\"\n\nThe girl took my hand as she came closer to look up at me. \"Where I go you go,\" she whispered as she kissed me on the lips, \"And where you go I go. Always remember that.\"\n\n***\n\nThe deep purple velvet over Sirius Alpha Three shimmered and sparkled with trillions of stars as we stood outside her home looking up at the night sky.\n\n\"Come closer,\" she told me as she turned to the East and pointed to a specific point in space above us. I put my face close to hers and looked along the line of her arm to where her finger was pointing, \"The third star in that group. The faintest at upper right,\" she whispered, \"Sol Prime. And original Earth.\"\n\nThe bright yellow light around which my pale blue dot circled. If ever anyone needed a hitchhikers guide to the galaxy right now it was yours truly. The history of everything so far was going to be one helluva bedtime read. I glanced at Kira who was looking at me with a smile on her pretty face.\n\n\"What?\" I smiled back.\n\nShe shook her head. \"It's nothing really,\" she said as she took my hand and we walked back towards her home, \"When I was a young girl, I always wondered what it would be like to finally meet you. All I had were vague impressions of what you were like growing up. Then I found a photo of you. You must have been about fourteen or so. I found it in a huge data stream collated from that year and I came across it by accident during my research. I think it was taken from your school yearbook. I must have been about ten back then. I guess that moment was when I realized what I had been told what was going to happen to me was true.\"\n\nHer home was a white oyster on top of a lush reddish green hill with no doors or windows and a view that took the breath away over a short promenade looking out across the bluest sea green sea.\n\nKira let go of my hand and turned to me as we walked through the outside wall into what looked like the main room of the house. Warm scarlet colors of different shades moved across all four walls with the reddish glow cast on familiar furniture arranged sparsely around the room. A large white sofa, two smaller chairs, a center table with various objects on top and facing what appeared to be a large off-white screen of some sort where colors of every type slowly rotated like a psychedelic old-time screen saver.\n\n\"Please,\" she said, indicating a seat.\n\nI sat down and looked around the room. There was this strange sense of complete calm with the moving colors adding to the easy mood and I could hear the soft sounds of waves washing upon the shore with the wind blowing through the trees around us. I could feel myself relaxing and the intensity of what I had gone through finally beginning to fade away.\n\n\"Alright?\" she asked as she sat on the sofa beside me, \"Today was a very special day for all of us, Harry. No matter where and when we came from.\"\n\nI nodded. So this was home sweet home from now on. I wondered what the kitchen and bathroom would be like as Kira shrugged off her dull black coat to leave her sitting there in her pale yellow outfit.\n\n\"Hungry?\" she asked brightly.\n\nI suddenly realized that I hadn't eaten a thing since I came back. And yet I didn't feel all that hungry at all. I put my hand on my stomach and looked at the woman.\n\nShe could see what was on my mind. \"Ah,\" she said, \"That was Lucy. She would make sure that your system was supplied with the correct amount of supplements and properly hydrated when you were in your coma and regulate your initial intake once you began to awaken. You should be able to accept solid food by now. Just tell Kiwo what you want.\"\n\n\"Kiwo?\" Who the heck was Kiwo?\n\n\"Hello, Kiwo,\" said Kira, \"Home again. Home again. Jiggidy Jig.\"\n\nIn the far corner of the room, a light came on. A moment later, something began to flicker under the light and take shape until it looked like a small girl who was about four foot tall. Except it wasn't really a girl. It was some sort of life-like doll that looked like a girl with wavy shoulder-length dark hair who was wearing an all blue outfit with a round necked top, loose skirt, blue-stockinged legs, and matching shoes. I glanced at Kira who sat forward on the sofa.\n\n\"Harry,\" she said by way of introduction, \"This is Kiwo. She is to me what Lucy is to you. Kiwo is my personal sim who takes care of everything for me when I am not home. Come here Kiwo and say hello to our new guest.\"\n\nI watched as the sim stepped out from under the light and walked over to where we were sitting. It was the strangest thing to look at. As she came closer, I realized she wasn't real in a physical sense but more like a hologram created to look like a person as she stood in front of me where she gave me a smile.\n\n\"Hello, Kiwo,\" I said.\n\nThe sim turned to Kira. \"Is this the mission?\" she asked.\n\nKira glanced at me and blushed. \"All in good time, Kiwo. He will be living with us from now on so you need to update your permissions as I want him to have the same access rights as I have with you. Download his current status bio from Comtec central and encrypt the data with user only access.\"\n\nThe tiny figure nodded and turned to me. \"Hello, Harry,\" it said, \"We shall be the best of friends in no time. I see you've had a very interesting life. I shall have a chat with Lucy about you when appropriate. Do you wish to eat?\"\n\n\"I guess,\" I said hesitantly as Kira looked on, \"Is there a menu?\"\n\nThe woman who came across time to save me started to laugh and even the robot girl thing looked amused as I sat there feeling very much like a man out of time.\n\n***\n\nSo my first proper meal in the Forty-first century was a large double cheeseburger and fries with a coke to wash it all down with. At least it looked like it was. Kira had the same and sat licking her fingers clean as I watched Kiwo humming to herself in the far corner of the room.\n\n\"It's a secret,\" said Kira before I could ask her about our meal and how it looked and tasted exactly like I remembered. A meal that the sim had conjured up out of thin air, \"Some things just never change no matter what. Soup is still soup. Bread is still bread,\" she explained, \"And a double cheeseburger and fries with coke will always be double cheeseburger and fries with coke. They're just cooked a little differently these days.\"\n\n\"Kiwo,\" said Kira, \"Reduce ambiance, please. Main view minus 80.\"\n\nThe wall in front of us began to fade away as it became transparent enough so you could see the view outside which revealed the landscape silhouetted against the spectacular night sky as the dominant blue moon turned slowly through its long elliptical orbit.",
        "It was like I was back inside that Planetarium I had visited a long time ago. Staring up, wondering what my place was in the world. Trying to understand the things that were happening in my life and why this girl was in it. Only now I was looking at the Universe from a completely different perspective. Everything and everyone I had ever known and loved were long gone.\n\nI glanced up as Kira sat next to me. She seemed nervous yet excited for some reason. We didn't say anything as we stared at each other. She was amazingly beautiful and the way the colors of the room moved over her made her look luminous and erotically enticing as I felt my heart begin to beat faster. Her eyes were black pools of desire as she leaned across and moved her face close to mine with our lips nearly touching. I focused on those parted lips and I could hear the soft moan of her breath as she waited for me to kiss her.\n\nThen I understood why she waited. She wanted me to be the one to make the decision of where our futures lay. She had told me she loved me and I had no doubt that I had loved her in the same way from the moment I had first met her.\n\nI rolled her over so that she was lying face up in my lap as I lowered my face and kissed her long and slow as she wrapped her arms around my neck and deepened the kiss between us passionately. I lifted my lips from hers and let my eyes wander over her body as she stretched her arms above her head and sighed as I rested my hand just below her breasts.\n\n\"Do you want to have sex with me?\" she whispered.\n\n***\n\nThe naked girl soared amongst the red-tinged clouds into the late evening sunset as we made love for the first time.\n\nKira turned in the air as I came up to her and gathered her in my arms with her kissing me passionately as my stiff cock found her weeping sex and began to thrust deeply into her. Her gasps and moans of orgasmic joy echoed around us as our minds and bodies became one floating together in harmony as I felt her wrap her long legs around me to hold me close inside her.\n\nI stared at her as she closed her eyes and arched her back so that her arms were stretched out above her head as we curved across the heavens in a graceful arc as we danced and fucked amongst the stars.\n\nKira looked at me and smiled. \"I am yours and you are mine,\" she whispered as her lips found me again, \"Know that I have always loved you no matter where and when you were in time. I have always known you were my soulmate, Harry. In my past and your future.\"\n\nI could feel her rotating and grinding her sex against me as I felt my own lust and desire beginning to rise intensely. Closing my eyes for a moment, I slipped out from our shared dream state to see her staring up at me as I lay between her spread thighs that were hugging me to her tightly. Gasping, I felt myself thrusting harder into her as her hips urged me on to come deep inside her pussy with her softly whispering in my ear as we fucked on her large bed.\n\n\"Take me, Harry,\" she moaned as her own climax washed over her, \"Make me yours.\"\n\n***\n\nIt was still dark when I awoke and sat up in bed listening to the strange sounds of the alien night. Yawning, I turned and saw Kira on her side facing away from me with the thin white sheet pulled over her. What time was it? We had made love for what felt like hours and I could feel that easy languid pleasure of good sex fading away to leave every muscle aching like a sore tooth.\n\nI looked down at the woman as she slept. She had a faint smile on her lips and I could hear the soft rasp as she snored softly. We were always going to end up like this. From the moment she had kissed me in my past, I somehow knew we'd be together in whatever future fate had planned for us. Our first fuck was everything I imagined it would be with the added spice of it being Kira's first time which I still couldn't quite get over.\n\n\"You are my first and only, Harry Watts,\" she had said as I stood there watching as she slowly removed her clothes in the red glow of the room, \"I have waited so very long for this moment.\"\n\nShe was as absolutely stunning as I had known she would be. Perfection in every way I could imagine. A glorious Venus who wanted to be only mine and mine alone. Making love with someone who looked like she did was going to become an overwhelming obsession that would never leave me. I knew Kira J would be the one and only from now on.\n\n\"May I?\" she had breathed as she came to me naked and traced a slim finger down the front of my shirt. I could do little else other than nod and watched as she undressed me in a way that still made me smile. The way she had glanced up at me as she knelt at my feet and released my stiff erection so she could look and admire it for the first time, \"Oh,\" she had gasped as she hesitantly wrapped her fingers around it, \"Will you look at that!\"\n\nHer fingers felt amazing but it was the touch of her lips that I truly felt deep inside as she discovered the delights of kissing, licking, and teasing me this way. The pleasure had definitely been all hers as I returned the compliment later. The gasping surprise and delight on her flushed face as I supped deeply of her weeping well would be something I'd remember to my dying day. There would be time enough to taste those delights now that we were together. Especially since the girl in my dreams had a time machine to hand.\n\nIt was then I noticed the dog sitting quietly in the corner of the bedroom watching me. It was the same dog from my twelve-year-old dream. Dorothy's dog, Toto. I blinked with surprise. Was I still in the lover's dream? How could the dog be here? It sat there looking at me for what felt like an age. Then it spoke as it had done long ago in my dream of OZ.\n\n\"Remember the mission, Harry,\" it growled, \"Remember the mission.\"\n\n***\n\nIn the Center of the room, the Time Machine sat floating.\n\nOn each of the four walls surrounding it, there were large video screens each showing various functions and data which I presumed were connected in some way to the maintenance of the ship. The ship that Kira had flown across time to save me.\n\nThe sleek device looked like a long metallic cigar that was fatter at one end than the other with fins that looked like miniature wings sticking out either side with an engine at the \"fat\" end. It reminded me of one of those ships from an old Flash Gordon episode I had watched on a Saturday morning back when I was a kid. Only sleeker and more compact. It was the third day and I was back in the building where I had woken up and I had asked one of the technicians if I could see the Time Machine more out of curiosity than anything else.\n\n\"Amazing, isn't it?\" said a voice behind me.\n\nI turned to see Dako San walking towards me. \"Amazing doesn't begin to describe this thing,\" I smiled as he came to stand beside me as we both looked at the machine.\n\nThe old man nodded and put his hands in his pockets, \"Hmm,\" he agreed, \"I remember when I first saw it after it was brought to this place. By being here, it changed everything. That there was a physical machine that could go anywhere in time and space in the blink of an eye and return to its point of departure. This whole tower is now dedicated to temporal research and study,\" He shook his head, \"That day in the standard Earth year 4042 will probably go down as the most momentous ever when it and Kira arrived.\"\n\nI glanced at him. \"Arrived?\"\n\n\"From the future,\" he replied matter of factly.\n\nI looked back at the machine and frowned. \"I don't understand,\" I said slowly, \"How many of these things have you?\"\n\nDako San looked at me and shook his head. \"We don't have any at all,\" he replied sounding bemused, \"Time travel isn't possible yet. This machine is the only one. This is Kira's ship. This is how she got here.\"\n\nWait. What? How she got here? Had she come from somewhere else?\n\n\"How she got here?\" I was at a complete loss.\n\n\"Ah,\" said the old man, \"She hasn't told you yet.\"\n\nI stared at him. \"Told me what?\"\n\nHe looked at me for a moment before answering. \"Kira J isn't from this time.\"\n\n\"Then where and when is she from?\" I asked stunned at the revelation. Things and events had suddenly got a lot more confusing and complicated.\n\n\"Kira has never told us exactly where she was from other than it wasn't system local,\" he said as he looked at me, \"She first arrived here in early 4042 and the only thing she has ever told us is that she was born in the year 6897. You see, Harry, she is as much an incredible mystery to us as she was to you back in your time.\"\n\nWe both turned to look at the Time Machine. The year 6897. I was stunned. She wasn't from this time after all. She was from much further away. Nearly three thousand years into the future in the Sixty-ninth century. Now I understood why people reacted the way they did whenever they were around her. She was not only a time traveler to me but a time traveler to them as well. To the people of this time she was someone really special too.\n\n\"But haven't you tried reproducing this thing?\" I asked, \"You know, retro-engineering it or something. Taken it apart to see what makes it tick.\"\n\nDako San sighed. \"Oh, don't think we haven't tried,\" he said, \"But Kira told us that the machine only responds to her and no one else. Watch,\" he said as he stepped towards the ship and reached forward with his right hand to touch it. Suddenly, an opaque cross-hatched electrical field of some sort encircled the time machine preventing him from getting any closer, \"Nothing can penetrate this shield. Better, smarter men, women, and aliens than I have tried. The ship appears inextricably linked to its pilot in some way. Kira warned us that even if we removed the machine and took it someplace else, even off-world, it would automatically return to her when she called for it. Everything you see here,\" he said, indicating all the technology in the room, \"Is dedicated to observing the time machine.\"\n\n\"Did you ask her when time travel would be a thing?\" I asked him.\n\nThe man laughed. \"Oh yes,\" he sighed, \"That was probably one of the very first questions we asked her along with why she was here. She just sat there and smiled at us before telling everyone in the room that we would all be long gone before even the initial theoretical physics and mechanics would be thought possible. A couple of thousand years would be my guess.\"\n\nI stood staring at the machine as the man walked to the door where he paused.\n\n\"Oh,\" he said as if something had just occurred to him, \"There was one other thing she told us.\"\n\n\"What was that?\" \n\nDako San looked at me. \"She told us she was on a mission,\" he said, \"A very important mission and that nothing would stop her from completing it.\"\n\nI didn't say anything as he gave me a faint smile and left the room. So it was real. There really was a mission. A mission that Kira was time traveling on. For whatever reason, it looked like I was part of it.\n\n***\n\nThe green and blue orb that was Sirius A Three fell away as our ship left its atmosphere and headed towards the inner system core where the great sun Sirius A burned brightly in the inky blackness of the void.\n\n\"Aren't you a little short for a Stormtrooper?\"\n\n\"Huh?\" I gasped as I stared at the naked girl in front of me lying back on the bed, \"Oh, the uniform,\" I said as I removed the iconic white helmet, \"I'm Harry Watts and I'm here to,\" I watched as she opened her thighs so I could see her waiting sex, \"Fuck you.\" I said lamely as I dropped down onto the bed.\n\nKira laughed as I knelt between her legs and positioned myself so I could thrust my aching cock up inside the walls of her wet slot. She reached up for me as I fell upon her like the proverbial starving man at the feast and enjoyed the simple pleasures of sexual exploration as we moved as one with the most beautiful girl in the universe panting wantonly in my ear as she urged me on in this dream world I had created where we made our own little adventures to play.\n\n\"So who was this Darth Vader again?\" she whispered as her lips found mine and we both floated away on that warm wave of delight.\n\n***\n\nA short while later Kira came up behind me as we lay together on the bed and wrapped her arms around my waist as I stared out of the large window at the cosmos beyond it. It had been a week since my rebirth and we were on a trip to Sirius A Six on a medium sized cruiser with about a couple of hundred other passengers on board with us. \n\nNo sooner had we been shown to our cabin we had locked the door and fallen into each other's arms for our burning want for each other needed to be sated no matter what. Such is the wonder of discovering that someone wants you just as much as you want them.\n\nI glanced at her over my right shoulder as she kissed and licked my neck. \"I'm in space.\"\n\nShe gave me a peck on the left cheek. \"Yes you are,\" she smiled as I felt her hands playing with my enthusiastically spent member, \"How do you feel?\"\n\nI shook my head. \"We only got as far as the moon back in my day,\" I replied as I took one of her hands and kissed it gently, \"With people that is. We'd already sent out a couple of probes in the early 1970's and they were still going as far as I can remember. But this is just,\" I spread my arms out in front of me in awe, \"How come we're not floating or anything?\"\n\nKira pointed to a set of numbers above the viewport. \"The ship is slowly rotating as we travel so it creates an artificial gravity,\" she explained, \"The planet still has some influence on us which will lessen the further out we go and the rotation will become more noticeable since we're only traveling at sub-light speeds.\"\n\n\"This thing must seem like an antique to you,\" I said looking out as the planet's moon came into view as the cruiser altered its course slightly.\n\nKira frowned at me and shook her head. Her body glistened in the low light of the cabin and I could still smell the faint aroma of her sexual sweat as she knelt there naked behind me.\n\nIt felt like the right moment to talk about things between us. Things like who she really was and why she was truly here in another time. \"I talked to Dako San a couple of days ago,\" I admitted, \"I had gone to look at your Time Machine. He told me what had happened. How you came to be here.\"\n\n\"Ah,\" she said as she sat back.\n\n\"Were you going to tell me?\"\n\nKira drew up her knees and rested her chin on them as she looked at me. \"Yes,\" she nodded, \"As soon as I thought you were ready. It was only a matter of time,\" Her eyes were fixed on me, \"And as you can see, we have all the time in the Universe, Harry.\"\n\n\"And your mission?\"\n\nThere was a silence as we stared at each other. I could see her mind working as she considered what she was going to say.\n\n\"The dog keeps reminding me,\" I smiled.\n\nShe laughed. \"Oh, the dream insertion,\" She sat forward until she was kneeling in front of me again with her glorious mane of hair spread around her like a fan, \"That was a seeker to see what you were dreaming about so I could slip into that world you were in and interact with you if I chose to. It adapts so in your case it became something that belonged in the dream you were dreaming. It became the dog. There must still be some memory fade left even after all these years which is the reason you're seeing it in your mind's eye when you're near me.\"\n\nI reached forward and pulled a long band of hair to one side that hid the fullness of her right breast from me. \"So what's the Sixty-ninth century like?\" I asked her as I rubbed my thumb around her budding nipple, \"Your real home.\"\n\nKira let out a low moan as I squeezed her breast. \"It is as different to this time as this time was to you,\" she sighed as she came into my arms and rubbed herself against me, \"The Universe is so much more than it is now.\"\n\n\"So you're an explorer?\"\n\nKira shook her head as she rested it on my chest. \"Not exactly,\" she said quietly, \"Though it is inevitable when I visit different places and times. I am not what you would call a tourist. Every jump has been for a purpose. To gain greater knowledge of the cultures and people living in that period. That's what I was doing when you saw me that day in your own time and chased me into that alley.\"\n\n\"What would you have done if I had caught you?\"\n\nHer right hand reached up and played with the hairs on my chest. \"My ship would have protected me and would never let me be caught. Remember when you stood there wondering where I had gone and how could I just disappear into thin air like that?\" I could see her smile as she glanced up at me, \"I was standing there right in front of you the whole time. The time machine had placed a field around us and initiated a constant time jump of less than a second into the future so that we would appear invisible to you. All I had to do was wait until you left so the ship could return us to local time for me to return.\"\n\nWell, that explained a lot. That whole vanished into thin air thing made some sort of sense now. \"I guess that's the reason why no one here has gained access to your ship. It will protect you no matter what.\"\n\nKira eased back and looked at me. \"I am the ship and the ship is me.\"\n\nThe look on her face told me that was the absolute truth of it. She belonged to the time machine as much as the time machine belonged to her. Freud would love this shit.\n\n\"So I take it time travel won't be a thing for quite awhile.\"\n\nShe bit her lip and shook her head. \"Not for a very, VERY long while, Harry,\" I could see by the amused twinkle in her eyes she was enjoying my little attempts to pry something out of her, \"Since I arrived here the only definite thing they now know is that time travel is possible. The discovery of how it is possible will happen as it was meant to happen and not before.\"\n\nI nodded and asked her something that had been bothering me ever since I learned she wasn't from this time at all. \"Why are you here, Kira?\" I asked her, \"Why are you nearly three thousand years from your home?\"\n\nShe stared at me for a moment before slipping off the bed and went to stand before the window looking out into space. Shafts of blue reflected sunlight passed over her as I sat there watching the naked woman stretch her arms above her head and sigh. She was the witch who had cast a spell over all of those who had come into contact with her.\n\nShe turned to me and I gasped at her magnificent nakedness.\n\n\"Because my Mother is here,\" she replied simply.\n\n***\n\nEnd of part 5.\n\nContinues/Concludes depending on musings in part 6."
    ],
    "authorname": "Ian56",
    "tags": [
        "sci-fi",
        "love story",
        "romance",
        "explicit sex",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-dreamers-pt-05"
}