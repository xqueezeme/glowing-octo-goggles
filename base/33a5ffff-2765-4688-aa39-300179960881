{
    "title": "Dark Handsome",
    "pages": [
        "I'm sure you'll be shocked to know that I've used an editor on this story (I can hear you gasp and grab your heart). Not only did I use an editor, I used two, the top two female writers on this site, Randi and GirlintheMoon. Thank you, ladies! Any mistakes you find are mine, probably added after the edit. Enjoy.\n\nYes, they browbeat me into it. Yes, I'm glad they did. Plus, I was getting a little tired of Randi sticking pins in my familiar, my shoulder wouldn't stop hurting. The relief feels great!\n\n*****\n\nDark Handsome And The Princess Of Porn\n\nYou know, you'd think I would get used to it. Maybe soldiers do. I know most cops do. I don't. The sight of a dead person who has come to a violent end is never an easy thing to view. Never. Just looking at the pictures turned my stomach.\n\nThis must have been a very long very painful death, judging by the condition of the body. Very little of the face resembled the picture, and well, below the face there was little that looked human. My boss looked at me, thought about grinning, decided not to when he looked into my eyes. He'd been at this way too long, and had developed a ghoulish outlook on life. He'd often bragged to me after a drink or two that he'd seen it all, and it wasn't pretty. That might be why he'd been married five times. Then again, we were in Hollywood, after all.\n\nJack had actually made a living as an actor for about twenty-five years, small parts in movies, the odd series, even commercials. He had a likable lived in face, an everyman type of guy who you liked but forgot almost instantly. The fact that he was British, and even after all these years still had the accent, helped his career. \n\nHe landed a major part on a series that ran for eight years, the final episode airing sixteen years ago, and he still got residual checks. Terribly wasteful with his money, a fact that led to at least three of his divorces, for the first part of his career, his fourth wife changed him. He saved half his money and invested it, and when the series ended he quite the nest egg. He took a year off, taking a world cruise and traveling with his wife until she was stricken with cancer just after their tenth anniversary. \n\nIt was quite aggressive, and by the time they found it she had less than a year left. Unable to get the drugs she needed for the severe pain she lived with constantly, he moved to South America, to a small country with relaxed laws, especially if money was waved around. She managed her pain with distilled THC, the drug found in marijuana. It was enough without being too much, and she was quite rational up until the last month. Then Joe bribed a doctor to give her a morphine drip. She was more or less incoherent for three weeks, when in a fit of clarity she pulled the IV out. She suffered through the pain to be able to talk to Jack, apologizing for leaving him, making him swear to find someone else to spend his golden years with, someone, as she put it, to keep him warm until she saw him again. \"If you love her, bring her with you. We'll just get a bigger bed.\"\n\nShe smiled, the last expression on her face, and stopped breathing.\n\nJack lost it, self-medicating for a year before something happened to pull him out of his slump. Carole's best friend showed up, took one look, dragged the hose into the house and sprayed him down. She did a systematic search of the house, throwing everything away, booze, drugs, even the Tylenol. If she didn't recognize it, out it went.\n\nHe immediately began returning to reality, and nine months later they moved back to LA, lived together for a year, and married, because as Jack put it, he wouldn't be able to look Carole in the face if he didn't do the right thing by her best friend. He was just shy of sixty now, still in good shape, and his brain was as quick as ever. He got into the private investigation business by helping out an old friend, a pretty big star. When he solved his friend's problem, a friend of a friend asked if he could do the same for him. He did his Travis McGee imitation for a year before deciding to go legit. Now he had five investigators, a forensic accountant, two secretaries/Girl Fridays who ran the office, and me.\n\nHow did I fit? I was the son, brother, nephew, grandson, and great grandson of policemen, and in the case of my mother and two sisters, policewomen. I thought for a long time we really did bleed blue when we were cut. I got my degree in Criminal Justice, all set to follow in my family's footsteps, when the acting bug hit me. I took an acting class in my junior year, figuring it was an easy elective.\n\nI was in minor roles at first, but was the star in two productions at the end of my senior year. I stayed in school another two years studying all facets of entertainment. I acted during the summers, off-Broadway and touring productions, learning, always learning. I even did a couple of regional commercials, and did a four week stint on a cable soap opera. THAT was a learning experience; being on cable meant we could stretch boundaries, and I ended up doing two nude scenes, both from the back, although in one you got a brief sight of my junk. I wasn't porn level, but the producers, all women, as well as the gay director seemed impressed. My costar in the scene, a middle aged woman who played the local matron in the show, suggested we do some off camera run-throughs, to get the scene to look as realistic as possible. I gently refused, and offended, she had me written out of the show. You live and learn, but I wouldn't have done it even if I knew.\n\nI moved to Hollywood after school, went to auditions, worked dead end jobs, and waited for an opportunity. Let's face it, Hollywood is a visual place, and chances were, if you weren't attractive, you ended up with the quirky sidekick roles. I was six four, black hair, blue eyes, good teeth, square jaw. My body was chiseled; I sported the proper muscles and six-pack, necessary to get the 'hunk' roles. I also practiced martial arts, because I got a lot of fight-scene roles. I hated the exercise, but liked the martial arts training, having been doing it since I was eight.\n\nI got a decent agent and a good publicist, and started landing roles. First, I did commercials, and made a pretty decent living. I got a bit part in a major motion picture, getting more for four weeks work than I did for the last five commercials. That led to a bigger part in an indie film, which led to a supporting role in a blockbuster. I did a good job, got a really good payday, but it ended up stopping my career.\n\nMy agent and I got a call from a well-known production company, it seems they were impressed with my work, and wanted me to read for a bigger role, second co-star, in an even bigger picture. My agent was drooling. This was my big break, and the role had a payday in the mid six figures. \n\nIt went to hell when we were called to his private office. His receptionist asked us to wait, as he was finishing an interview for the second female lead, my love interest in the film. Like me, she was relatively new, and very happy to be considered for the role. I'd always had good hearing, and even though his office was almost soundproof, I heard the scream.\n\n\"Did you hear that?\"\n\nBuddy, my agent, was on his phone and heard nothing. The receptionist, a young man, smirked and told me it was nothing. There was no denying the second scream, and the cry for help. I stood, and the receptionist got between me and the door. \"Be cool, here. Let it alone.\"\n\nI walked right through him, tossing him to the side like he was a doll. Buddy finally looked up, wondering what was going on. Alarm flashed across his face. \"Dirk, don't...\"\n\nIt was too late. I had already kicked the locked door open. The woman, a girl, really, in her late teens, was bent over the desk, her clothes practically ripped from her body. The producer was already in her, plowing away, holding her in place by a firm grip on her hair. She was screaming and begging him to stop. He looked up just in time to see my fist as it landed in his left eye. He flew off her, out cold.\n\n\"Call 911,\" I told the receptionist, as the girl scrambled to gather her ruined dress around her. He stood still, in shock, I think. I turned to Buddy. \"Do it, right now. Tell them we stopped a rape in progress. Dial, now!\" \n\nHe looked torn. \"I can't, Dirk. It would end my career, just like you ended yours. Think he'll forgive you? Fuck no, the man holds a grudge better than a nun. You're toast in this town, and I officially give you notice that I can no longer represent you. Good luck.\"\n\nHe scurried out of the office, almost running by the time he got to the elevator. \"Fuck it,\" I thought, as I dialed. \n\n\"911, what's your emergency?\"\n\n\"Im at 1136, Stone Building, corner of Grant and Star Blvd, top floor. I've just stopped a rape in progress. Please send a unit, and EMT's. Make sure they have a rape kit. Yes, I'll be here when you arrive.\"\n\nThe receptionist looked like he was going to faint, then grabbed his phone and called them back, saying it was a false alarm and there was no crime being committed. It was useless by then, once the units were dispatched, they had to check the situation.\n\nBy then, the producer had come around, groaning and holding his eye. The girl looked like she was going into shock. The cops arrived, took my statement, while the EMT's loaded her on a gurney. The producer was ranting, saying they were going through a scene and no penetration occurred, while the receptionist backed him up. The cops had seen a lot, and didn't believe a word. The man was put in custody, the office declared a crime scene, and he was hustled off to jail. The crime scene techs found, among other things, vaginal secretions from at least twenty women in the room.\n\nIt was a big stink, in the papers for days, until it suddenly went away, and the cops made the announcement that all charges had been dropped. The girl, it was rumored, was guaranteed roles in three big films and a huge amount of money showed up in her account a few days later. So, I was a nonperson in Hollywood, while he got away scot free.\n\nI couldn't find work; I couldn't even find an agent. No one in town would touch me. Without representation, it was impossible to find roles. When I saw the ad Joe had placed in the trade rags, I wrangled an interview.\n\nHe liked me right away, especially with my background and degrees, so he hired me. I now spent most of my days hunting down errant spouses and gathering the evidence necessary to break a pre-nup one day or solidify it the next. Some of the clients were high profile, so discretion was always the order of the day. My theater background helped a lot, and I was able to morph into whatever I needed to be, a businessman in a suit one day, a surfer in board shorts and tank top the next, a bellhop or parking valet when the situation called for it. I was even a bum for one assignment; seems the man liked to dress down and have sex with street people, guys I had a hard time even breathing around. He was playing sexual roulette with his life, and the lives of his wife and family. I usually felt bad about helping destroy relationships, but not that time. I handed in the paperwork and the photos, and took a two-hour shower.\n\nIt was a pretty big scandal, especially when it came to light he had three social diseases, besides HIV. Luckily, his wife hadn't been intimate with him for four months, so she escaped with just a mild case of syphilis. He was completely destroyed, his life's work gone. She got almost everything in the divorce, and I heard later he died alone at a long term hospice facility. None of his family claimed his remains or attended the funeral.\n\n...\n\n\"Where's his junk?\"\n\nJack almost grinned, again. \"Whoever did this cut it off. The med techs think it's shoved up his ass. There's something there, anyway.\"\n\nThe first rule of private investigation is to find out who profits. It may not always be money, but when someone is killed, especially as horribly as this guy was, somebody was pretty upset, and wanted something pretty bad, from just revenge to much, much more. Find the motive, and you usually found the killer.\n\n\"Why are we here?\"\n\n\"This is Joe Morgan.\"\n\n\"The self-proclaimed King of Porn? What the fuck makes you want to be involved in anything like this?\"\n\nJack actually looked uncomfortable. \"An obscene amount of money. I don't even know who we're working for; I was hired by another PI firm, who was hired by a lawyer, who is paying all of us from an offshore account administered by an investment firm. No one is talking and I got some pretty harsh words from the lawyer, telling me they're not paying me to investigate them, they're paying me to make it go away.\"\n\nThere it was: the magic phrase. In the entertainment business, it wasn't so much about justice as covering your ass, and big wigs spent tremendous sums for that very thing, to make it all disappear like it never happened. It didn't matter if innocent people got hurt or had lives ruined, as long of none of it stuck to them. Most victims got a little (or a lot) of money to keep quiet. Some got the short end of the stick. Some disappeared or died in random acts of violence. Don't ask, don't tell, was much more than a slogan for the military.\n\nJack saw me frowning. \"You need to get over it, Dirk. I'm paying double rates on this, and they really do want to find out who did this. We're the good guys this time.\"\n\nI snorted. \"There is no such thing, especially here. You're lucky I got rent coming up soon. What are the cops saying?\"\n\nHe frowned. \"Not much. Here,\" he said, \"this is a list of business associates, the people who worked for him, from techs to the 'actresses and actors'. You take the ladies, they always respond to you better.\"\n\n\"Or, you could get Alice to do it. Maybe woman to woman will make them open up a little better.\" Alice was his top female agent, a medically retired police officer in her late thirties.\n\n\"I'm sending both of you. Take turns, let her be the bad guy on one and you on the next. Go shake some trees, Dirk. Let's see what falls out.\"\n\n...\n\nI was on good terms with several officers and two detectives. I met them through my last big film, talking the production company into hiring them as extras and technical consultants. They were working security for the film, and I heard them making fun of the actors who were playing the cops, so I challenged them to help us out. It worked really well. They were especially sensitive of the raw deal I'd gotten with the producer, feeling like money talked and a guilty man walked free and punished those who'd tried to bring him to justice. I talked to one detective about what I was working on, and he had some strange comments.\n\n\"This one stinks, Dirk. Forty-seven possible suspects and all but two have iron clad alibis, and those two claim they were home alone and the detectives on the case think they're telling the truth. Why is your firm interested?\"\n\n\"It's Hollywood.\"\n\nHe grinned, nodding. \"I understand. That being said, this one could be nasty. You watch that cute ass of yours. Be a shame to lose that; good eye candy is harder to come by than you would think considering where we are. And if you find out anything, I don't have to tell you to turn it over to us.\"\n\nBenson was as gay as they come, but he was my height and even more muscled than I was. He also happened to be one of my martial arts trainers. His boyfriend was a tiny guy, maybe five four, the definite bottom of the couple. He was cute as a button, and I knew he cross-dressed occasionally. I'd seen them at a Halloween party and was surprised to see Benson with a girl. 'She\" flounced up, grabbed me and pulled me down into a long kiss while Ben laughed his ass off, expecting me to be pissed. I realized who it was pretty early, but I'd had a few, and decided to turn it on them. I kissed back, surprised at how good it felt, picking her up off her feet until her legs were wrapped around me. Her short skirt left nothing to the imagination, and everybody got a good view of her thigh highs and pink thong. I smacked that ass, laughing as she squealed, and put her down.\n\n\"Careful, Ben. Don't let her out too often dressed like this or someone will snatch her up.\"\n\nHe frowned, then grinned. \"That would be a mistake, for both of them. Who owns you, baby?\"\n\nShe fluttered her long fake eye lashes at him, making little kissing motions with her mouth. \"You do, Daddy. But if I'm a really good girl, will you loan me to Dark Handsome for just a little while?\"\n\nBen laughed at her using my nickname, a word-play on my real one. My agent's assistant had named me one day, calling her boss to let him know I was there. \"Dark Handsome, oops, I mean Dirk Hansen is here, boss.\"\n\n\"That might be a bad decision, little girl. I may decide to keep you.\"\n\nBen laughed, enjoying the banter. \"I don't think so, baby. I MIGHT be open to a threesome, if he agrees to play with both of us.\"\n\nShe swooned at the idea while I laughed back. \"As tempting as that is, I think I'll pass. Thanks for the offer, though.\"\n\nWe talked a bit more, and I promised that if we found anything I would turn it in to my boss. What he did with it was out of my control. He nodded, knowing that if it was something substantial I'd try to find a way to let them know.\n\n...\n\nI met Alice at the office right after lunch. Seems porn people are late sleepers as a rule, so we were trying to catch them when they were awake but early in their day. Alice was a good looking blonde, a soccer mom who also looked elegant, and was known for establishing empathy with people she interviewed.\n\n\"What does Jerry think about all this?\"\n\nShe just grinned. \"Hubby doesn't know the details. I just told him we were doing background on a murder victim in the entertainment industry and left it there. He doesn't care, mostly, as long as he thinks I'm safe.\"\n\nShe talked about her husband and kids almost nonstop. I knew them all, and the kids called me Uncle Dirk, except for her oldest daughter, a twelve year old going on thirty. She called me Hunk, which made Mom and Dad grin. We got to our first stop, and she reviewed his file as we drew near.\n\n\"Jimmy, 'Jumbo' Winters. His junk is supposed to be the biggest in the business: thirteen and a half inches. Not much to look at, though.\"\n\nI agreed, thinking privately that while the women in this industry were hired for their looks, the guys were mostly chosen for the size of their dick. Nobody ever accused Ron Jeremy or Johnny Holmes of being handsome men. He opened the door on the first knock, obviously nervous. It took him a few minutes to relax.\n\n\"How well did you know Mr. Morgan?\"\n\n\"I worked for him for most of four years, but I don't think anyone really knew him. He didn't say much on set, just made sure everything was running smooth before he'd leave for his office or another set. He usually had three or four going at the same time. He wasn't unfriendly, just... professional... I guess. You need to talk to Amberly, his PA. She knew more about him and his schedule than anyone.\"\n\n\"Did you ever see him in an argument with anyone?\"\n\n\"Hell yes. He was a cheap bastard, and someone was always after him for trying to screw them, pun intended. I don't know how you feel about what I do, but look at me. I have average looks, at best. I never finished high school, had no skills at anything. I would have probably spent my whole life in minimum wage jobs if it wasn't for him. Somehow he found out I was hung, came to see me, and the rest is history. I thought I had a dream job, a professional fucker. And the women were hot, mostly. The ones that weren't were usually worn out by the industry, and they were willing to do just about anything. They got used for the really kinky shit. Anyway, I thought I was on top of the world when he was paying me two grand per film. ",
        "Then I found out what everyone else in the industry was making, but I was locked in for two years. When my contract was up I told him to kiss my ass and went with someone else, for four grand. A year later he called me up, knowing I wasn't on contract, and offered me six per production. We settled on seventy-five hundred, and we did one about every ten days.\"\n\nI was impressed. That was pretty good money by anyone's standard. I asked how long he thought he was going to continue. He sighed. \"The porn industry is a dinosaur. There is too much shit out there on the internet you can get for free to have to pay to watch people fuck. I'm lucky, my parents always instilled the practically of saving for a rainy day. I live on about a third of what I make, and live comfortably. I got maybe four years left, and I'm going after everything I can get. I got a pretty good investment counselor, and I already own a burger franchise, and looking at buying another. I'm hoping when I leave the business I won't have to work anymore, at anything.\"\n\nMy surprise must have shown on my face, and he grinned. \"I'm the exception to the rule. Most of the people I work with live a lavish lifestyle or have bad habits, and stay broke. None of them have ever considered they might actually have to face life after porn. You may have seen the two documentaries on just that, and most all interviewed did not have good lives.\"\n\nAlice and I talked about it on the way to the next interview. We agreed that while we didn't exactly approve of his career, that at least he kept his head on his shoulders, and that he'd land well when he stopped making porn.\n\nAlice read me the dossier on out next appointment, Janice \"Honeypot\" Jefferson. She was black, well built without being a caricature of busty black women, and as we found out, dumb as a stump. She met us in a thong and sheer robe, not caring at all that the neighbors were giving her disapproving looks as she stood at her door.\n\nThe apartment was a mess, reflecting her personality. She really didn't like Joe, said he made 'creepy' offers to her, but refused to say more. She did admit to fucking him a couple of times, even said he had pretty good equipment but no idea how to use it. Mostly she bemoaned her loss of steady income. She'd tried a few more production companies, but no one had anything for her. Her salary was about 3500 per movie before he was murdered, and she needed work soon, or she'd be out on the streets. Honeypot wanted to know if we knew anyone who needed someone with her talents. \n\n\"I do private parties, too. No more than eight guys, over than that and I have to have a partner. I do a killer bachelor party, corporate retreats, anything that brings in the bucks. Three hundred per guy, two a day for more than a one-nighter.\" She grinned, looking at Alice. \"I do an awesome bachelorette party, too, with a partner, something for everybody. I have a rate for interested couples, a grand for eight hours of anything your heart desires. Lots of people want to fuck a porn star. Here's my card.\" It showed a bear with his hand in a jar of honey, her name, and contact number.\n\nThanking her, we took the card. I held my laughter until we were in the van, before exploding. \"Hey, isn't your anniversary next month? I got a feeling if I got the guys to chip in, we could give you an anniversary to remember. Talk to Bobby, let me know.\"\n\nShe grinned back. \"Let me think about it, I'll get back to you right after Saudi Arabia opens a ski resort.\"\n\nShe stopped smiling as we discussed the interview. Honeypot hadn't liked Joe either, a recurring theme among the next two girls and one guy we interviewed before the day was done. Our last interview, with a woman over forty who indeed looked rode hard and put up wet, was the most interesting. \n\n\"Joe was a motherfucker, plain and simple. He'd tread carefully around the new girls who could make him money, but used up old bitches like me? Treated us like we were less than dirt. Kept pushing us to do kinkier and kinkier things. Double penetration of both holes and a dick in the mouth was the standard for old girls like us. He kept trying to push us into doing other things, like getting pissed and shit on, tied up and whipped, the real thing, not faked for the camera. Look.\"\n\nShe casually pulled her shirt over her head, turning around. She had bite marks, some of them deep purple, all over her upper body, as well as lash marks. \"From my last role. I was desperate for the money/ I'm divorced and have to pay child support. Let me tell you, private school tuition is not cheap. It'll take weeks before I can do another film, but it paid three times my normal rate and I was up against a wall, so I did it. He hinted if I was willing to do kinkier things, there was even more money in it. I'd heard him talk like that before, but I can't remember anything like it ever produced. I know a few girls, stoners mostly, talked about it, but I don't know if they ever did anything. They disappeared pretty quick; he wasn't much on druggies. You might want to talk to Pam; she once told me she was considering doing something for him. I don't know if anything came of it, she went with another company shortly afterwards.\"\n\nWe were both quiet on the way back to the office. Alice, filled with great sadness, wondered how women ended up like these.\n\n\"I can understand it, Al. Most of these women came here wanting to be in movies. Most had no money, no support group, some got seduced into it, some went into it because it was the only thing they could find to keep off the streets. Once in, it's a bitch to get out. Some turn to drugs, alcohol, anything to numb the pain. Some just keep going because it's the closest to their dream they'll ever get.\"\n\n\"How about the guys?\"\n\n\"Same thing, to a lesser degree. Others are like Jimmy, blessed with enormous equipment and stumbling into it.\"\n\nShe looked at me closely. \"Did you ever consider it?\"\n\n\"Not in the least. I had a support group, a little savings, and a skill set that I knew I could use if I needed to. I was recruited though, about six months after I got here. Even went for an audition. When I found out what was going on I declined the role they offered me, as graciously as possible.\"\n\nAlice started teasing me gently. \"Were you recruited for your looks, or your junk?\"\n\nShe giggled when I answered. \"Both. I'm not in Jumbo's class, but I do all right.\"\n\n\"Oh, You're not bad. I've seen it, remember?\"\n\nIt was hard to forget the infamous wardrobe malfunction of 2017. Alice and Bobby had held a pool party last summer, and everyone at the office was there. I was really popular with the small kids because I was big, strong, and could toss them pretty high in the pool. When it came time to eat, everyone got out. Her four-year-old, Janie, stumbled and started falling so she reached for the closest thing available, me. I had on loose board shorts, too loose I guess, because when she latched down on me, they slid to my knees. \n\nEveryone just froze, and I casually pulled my shorts up, helping Janie stand. She giggled and ran off as the whole group exploded in laughter. They had to keep the comments and innuendoes as vague as possible because of the kids, but I caught it from every adult and a few of the late teens there.\n\n...\n\nWe slogged on, interviewing everyone associated with Joe Morgan Productions. Alice and I took the actresses, actors, sound and film technicians, while Jack followed the money, talking to accountants and lawyers. He spoke little about what he'd learned, unusual for us. We usually shared all information, hoping one of us would see something the other missed. The cops were becoming frustrated, and the case was getting less and less attention. After all, who gave a damn about a washed-up porn producer? He had no family, no wife, no kids, so no one was raising hell, pushing them to find his killer.\n\nI talked to Benson about it. He rolled his eyes in disgust. \"The man was killed on the set of a porn shoot. We got four hundred DNA samples; apparently sanitation was not high on those sets. A hundred and thirty seven were semen samples, two-hundred-eight were vaginal secretions and saliva. Twelve were from blood residue. Apparently, accidents happen. The rest were from condoms and used tissues. We've identified less than half, and all have been eliminated from suspicion. This is going to end up a cold case pretty quick, unless we get lucky. You get anything on your end?\"\n\n\"I doubt it. Most of the people we interviewed you guys had already talked to, and no one had anything new to add. Jack find anything on the money trail?\"\n\nHe just looked at me. \"Haven't heard a word, he just gave us what you got. I do know that Joe Morgan was flying high, living a lifestyle he couldn't afford. He was always just on the edge of bankruptcy. The accountants say he had to have at least two films going all the time to maintain payroll and pay his bills. One glitch and he'd be shut down in a matter of days. The only thing that kept him solvent was that about every five to six months, a huge deposit was made to his personal account. The trail went cold at an offshore bank, and no way in hell will those guys give anything about who made the deposits.\"\n\nWe talked generalities, he sounded me out about a couple of cases he was working on and we parted ways. I wondered as I left the bar why Jack hadn't given any information to the cops.\n\nI asked him the next day, and he flushed a deep red. \"Stay out of this, Dirk. You do your job and let me handle anything else. Understood? Remember, we don't work for the cops, we work for the client.\"\n\nOh, I understood all right, and I knew that withholding information from the police, especially on a murder case, was both unwise and illegal. It was his ass, though, unless he dragged the rest of us down with him. That would not be good, not at all.\n\n*****\n\nThe weeks went by and the case went cold. It bothered me, but there was nothing I could do about it. Jack gave us all a nice bonus for our work, and I, for one, felt guilty for taking it. We hadn't done any real investigation, just went through the motions. The fact that we weren't really expected to find anything irritated me.\n\nLife went on, for those still living. I'd worked three cases since the murder. Right then, I was working another case, a philandering husband with a weakness for strippers. He had the bucks, a Beverly Hills banker, so it was always high-end places, thank goodness. I'd been in the worst of the clubs for my work, and always went home and took a shower afterwards. I ended up that night in a place called Executive Privilege, where the waitresses all looked like slutty secretaries. Hair in a bun, heavy glasses, short business skirts showing the tops of their stockings, white blouses unbuttoned halfway down to expose their cleavage. Some even wore bras, usually black and red, that showed well under the sheer blouses.\n\nThe strippers were the best of the best. Lean, busty beauties that knew their craft and could stir the crowd to a frenzy. It took them longer than the norm at such places, but eventually they were naked. They worked the crowd, sitting at tables, flirting, making deals for private lap dances in the rooms to the side of the club. \n\nMy guy had his head in the cleavage of a well-endowed redhead, trying to latch down on a nipple. She avoided him with practiced ease, whispering to him, and soon they headed for the private rooms. I didn't follow, for one thing I couldn't without a girl, and secondly, while his behavior was sleazy, it wasn't damning. I would go outside, wait and see where he went later. If his habits remained the same, he'd leave, go to the closest motel, and wait. His chosen companion of the night usually showed up thirty minutes to an hour later. I already had him on film twice, showing them going into a room, staying an hour or two, and leaving.\n\nThis was my last night; we would brief the client in the morning. Even though the wife expected to hear he was caught, most didn't take it well. Some cried. Some threatened death. Some threatened to make his life a living hell. Most did all three. And then, some forgave. I never understood that.\n\nI was just about to leave when an attractive black woman slid into the booth beside me.\n\n\"Hi, sugar. Remember me?\"\n\nIt took a second, but I grinned. \"Hi, Honeypot. I see you landed on your feet.\"\n\nShe grinned back. \"Instead of my back, you mean? I like this a lot better than doing porn, and on a good week I make more than I did in films. A bonus is I don't have to fuck nearly as many guys. I have a Sugar Daddy now; he keeps me in an apartment, lets me use one of his cars. He knows I still fuck someone else once in a while, but as long as I stay clean it doesn't bother him too much. He's hinted that if I'd stay exclusive I'd get an upgrade, but I don't think I have the faithful gene in me. I like to fuck too much. He says he'll wait for me to get it out of my system.\"\n\nShe sighed, looking down. \"I hope someday I can. He's a great guy, and deserves better. I didn't mean to, but I'm kind of in love with him.\"\n\nI told her I was happy with her improved situation, and I also told her to give some serious thought to her guy. Maybe she should make a change.\n\nShe nodded and got up. \"Gotta go, baby. The manager is giving me the evil eye. Got to circulate, you know. I'm up next, stay and watch me. I'll dedicate a move just for you. When I do the backflip and land in a full split, it'll be for you.\"\n\nJust as she started walking away, she asked me if we ever found out who killed Joe. I told her as far as I knew it was a cold case now, and doubted it would ever be solved.\n\n\"Too bad. Joe was an asshole, but nobody deserves to go out the way he did. Hey, that reminds me! See that waitress, the one with black hair and a red bra? She did one film with us, probably Joe's last. It never got released. Did anyone interview her? Her name is Sharon. You should talk to her.\"\n\nShe went backstage, and five minutes later she did her routine. She was the best I'd ever seen, moving like there wasn't a bone in her body. She practically made love to the pole. I bet there wasn't a guy in the place that didn't have a boner when she was done. The backflip off the pole into the split was spectacular, I'd never seen anything like it. She blew a kiss in my direction before rising and working the crowd.\n\nMy target was leaving. I jumped up, flagged the waitress Honeypot had showed me, and asked if I could trust her. She seemed confused by the question. \"Honeypot is a friend of mine. Give her this for me, and tell her I'm happy she has a better life. This is for your trouble.\"\n\nI gave her the hundred for Honeypot and a twenty for her. Jack was paying; I'd turn it in on my expense report, so I went large. She had the bluest eyes I'd ever seen, really standing out against her raven dark hair. \n\nMy guy drove straight to a no-tell motel, and thirty minutes later the stripper showed up. I was about to leave when another car pulled in and a petite Asian woman got out and knocked on the door. I got my camera up just in time to catch him opening to door, naked, while the redhead lay on the bed, legs spread. That ought to sew the divorce up neat and tidy.\n\nDone early, I went back to the strip club, sitting down in the section of my target. When she brought me my beer I asked if she had a minute. She backed up warily. \"Look mister, I'm just a waitress. If you like I can send one of the girls around.\"\n\nI felt like she was shutting down, so I gambled. \"I don't want anyone else. I want to talk to the woman who worked on what was probably the last porn film Joe Morgan ever produced.\"\n\nIf I hadn't seen it coming, she would have hit the floor. I just managed to catch her, and suddenly I had two huge bouncers beside me. \"A little help here?\"\n\nI'd saved her a hard landing by diving under her. They reached down, and with more gentleness than one would expect, sat her in a chair. One went to get a glass of water while another held her up. It was apparent they held her in high regard.\n\n\"What happened?\" There was a hint of malice in his voice.\n\n\"I gave her a shock, but I had no idea she would faint. I mean her no harm, really. I just wanted to ask her some questions.\"\n\nThe other bouncer, even bigger than the one holding her, returned with the water. \"Well, friend, I would guess she doesn't want to answer any questions. If you ain't a cop, maybe it would be best if you leave.\"\n\nI stood, holding out a card. \"You're right. Please, give her this card and ask her to call. I'm sure she would rather talk to me than the police. Just a few minutes, and I'll never bother her again. And before you ask, it has nothing to do with the club. I just need some background on a case I worked a while back. Give her this; she deserves something for missing her tables.\"\n\nI think the hundred made them a little less disagreeable, even though they did walk me to the door. One guy gave me a little talk once we were outside. \"Look, Sharon is one of the good ones. She's just a waitress; she doesn't do what a lot of the other girls do. I don't know what you want, but if she doesn't want to talk, she doesn't have to. If she tells us you're harassing her, well, the least of your worries will be getting back in the club. You understand?\"\n\nI assured them once again I meant her no harm, and left. I slept until 10 the next morning, it was four before I got into bed, and at noon I met the client. She appeared nervous but determined. I hated this part of my job, but I did it as professionally as I could, to lighten the impact.\n\n\"Mrs. Summers, I'm afraid your suspicion is correct. Your husband is cheating on you, with multiple partners.\"\n\nShe paled and a tear trickled down one cheek, but she remained composed. \"How many?\"\n\n\"In the three weeks we've followed him, four. He seems to have a fetish for strippers, ma'am. All his liaisons were with them.\"\n\n\"What am I going to do now?\"\n\n\"I'm afraid that's out of my skill set, Mrs. Summers. Even if you stay together, I do suggest you get tested. I don't know if he used protection, and these types of ladies aren't very selective when it comes to partners. We have a few lists we've prepared as part of our service. One is of divorce attorneys that are reliable, another is of different counselors, both private, child and marriage, a list of clergymen you can reach out to, and a couple of support groups, people who have gone what you're going through now. There is also the name of a few discrete clinics, if you want to avoid your regular health care giver. We even have the number for the suicide help line. Please, use as many resources as you need to get you through this time of crisis. If you have family you can share with, do so. Don't try to go through this alone. Get help if you need it.\"\n\nShe thanked me, but she should have been thanking Alice. It was her idea, after one of our clients committed suicide, our report still clutched in his fingers when they found him.\n\nI walked back to my cubicle, thinking maybe it was time to find another career. The sleaziness of the situations, the appalling baseness of most of the people we encountered was starting to jade my outlook on life. I'd walk through the mall, or the park, and see young loving couples and families, middle-aged people smiling with the content of well-lived lives, and a few older couples that still walked hand in hand, and wonder which would be calling us in the near future. It was no way to live.\n\n*****\n\nI had another hot case, the worst, an abusive spouse. It was the woman that was the abuser this time, even though she was half the size of her husband. She was a real shrew, and if her husband didn't do as she wanted she would catch him unaware or asleep, and hurt him. He showed me scars on his arm and body, the slight dent in his head from a bat, the crooked fingers of his left hand. After I got over the shock, I asked him to leave.",
        "He was appalled. \"Why?\"\n\n\"Because if you've suffered that much abuse and are still with her, there is nothing I or anyone else could do for you. Unless you can give me a good reason to help you right now, I don't want to waste my time and your money. Why now?\"\n\nIn answer he held out a picture. Twins, they looked to be about ten. \"This is why. Up to now she's left them alone, but yesterday she snapped at our son and hit him so hard she knocked him down. He has a bruise on his cheek. Instead of apologizing, she stood over him and told him this was just a taste unless he toed the line. My daughter was crying and she threatened her. It was the last straw.\"\n\n\"What do you want us to do?\"\n\n\"No one, looking at our size difference, would believe me. I want you to wire my house with video and audio. I figure one week will be enough. The evidence should be enough to get her out of the house and get a restraining order. The house is in my name alone, if that makes any difference. I have to protect my children, Mr. Hansen.\"\n\nI knew I was going to do it. \"We'll need about three hours. That will give us enough time to install everything we need, including coverage of the garage and yard. You can't be there because you might give the camera locations away. Act normal, if you can. We'll download everything, but I have to warn you, the first time she harms one of the children we'll show up with the cops, and you may both lose custody. Do you understand, Mr. Jones?\"\n\n\"You're gonna be watching?\"\n\n\"No, but we will be on call in case anything happens. We will monitor it for a few minutes periodically, just to make sure it's working properly. Try not to look around for the cameras, and if she does something stupid like abuse a child, grab them and run. Call the cops and call us. You got it?\"\n\nI got Gerry, short for Geradine, to wire it up. Actually, everything was wireless and small, I just stayed outside to watch in case the woman came back and to check the quality of the cameras. They were up and running quickly, so she checked sound balance and focus before we pulled away. She was quiet for the first few miles.\n\n\"Do you believe him?\"\n\n\"Yes I do. He fits the profile, someone so in love with another they will tolerate just about anything. I'm glad he drew the line at the children, or it could have been bad.\"\n\nI looked over at her, the way she huddled in the seat, and something clicked. At some point in her young life (she was 23), someone had been abusive towards my cute little geek. Then I thought about her boyfriend, a patrol corporal I had introduced her to, and decided he needed to know. He was pretty sharp, so he might already know. I reached out and held her hand. She locked down on it in silence, the quiet speaking volumes. She was better when we got back to the office, grinning as she strutted off, her short skirt swishing over those great legs.\n\nAlice smiled when I walked by her cubicle. \"Some girl named Sharon called. Said you would remember her from the bar. She sounded nice. Her number is on your desk.\"\n\nAlice was determined to marry me off. She says I'm too good a man to deprive some woman of a decent husband. Nothing she'd tried had stuck, but it didn't slow her down.\n\n*****\n\nIt took me a minute before I remembered who she was. I called immediately. She sounded extremely nervous when she answered. I tried to put her at ease.\n\n\"Look, the case is over, just another unsolved homicide in the Land Of The Fruits And Nuts. I just want to make sure we didn't miss anything. It just bothers me to think a killer may walk the streets because I didn't do my job well enough. I'm just after what you know; I'm not going to judge you or your life choices. God knows I could never be the first to cast stones.\"\n\nShe calmed down a bit and we made arrangements to meet at a trendy little coffee house not far from the club where she worked.\n\nI was shocked at her appearance, still picturing her in her working clothes. She had on a simple tee and really well fitting jeans. There was no makeup on her face and her hair was pulled back in a ponytail that hung halfway down her back. Her startling blue eyes looked even better in the daylight. She looked a lot younger than I first thought.\n\n\"How old are you?\" \n\nShe seemed surprised at the question. \"Not that it's any of your business, but I'm 23. How old are you?\"\n\nI grinned, trying to put her at ease. \"Not that it's any of yours, but I'm 27.\"\n\nI saw the beginnings of a small smile, but it disappeared instantly. \"What do you want? I don't have any money, so there's no use to try and blackmail me. All my family has passed or disappeared, and the ones still alive could give a rat's ass what I've done.\"\n\nI sighed. \"Look, Sharon. I don't care. Really. Not in the least. I don't want any money. I just want you to answer a few questions, none of them about you personally, and then you'll never see me again. You understanding me?\"\n\nIt was her turn to sigh. The deep breath did wonders for her tee, her chest was really impressive. She caught me looking and just grinned sadly.\n\n\"All men are pervs. Enjoying the view?\"\n\n\"Absolutely. A woman of your attributes and beauty should be enjoyed and appreciated. It doesn't mean I want to jump your bones, it just means I appreciate the visual. Now, could I ask the questions I came here for?\"\n\nMy honesty surprised her, and she really did grin. \"Okay, ask away. Just remember, my eyes are up here.\"\n\n\"How well did you know Joe Morgan? How did you meet? Did you notice anything unusual, any conversation or interaction that stood out?\"\n\nShe was close to tears. \"I'm going to tell you the whole story. Nobody has ever heard it, and it might do me some good to get it off my chest.\"\n\nShe stopped, almost daring me to look down. I kept my eyes locked on hers. I'd seen plenty of breasts in my life, but never eyes that blue.\n\n\"I was like everyone else; I came to Hollywood to be a star. I studied drama in college, but had to drop out in my junior year over family issues. My mother got sick, and never got better. She just slowly declined. I was working a dead end job, so I came here, hoping to break into the business and make her life easier. I know now how innocent those expectations were. I pounded the pavement, went to casting calls. I got gigs as an extra a few times, but never any speaking roles. I was working another dead end job, just barely surviving, when the call came.\"\n\nShe stopped for a minute, gathering her strength. I let the silence take over, until she started to calm down. Before she started up, I asked if she'd like another drink, maybe a snack. Sugar was good for stress, I hoped. She nodded quickly, so I got her another iced drink with all kinds of flavor in it, and a really large, really decadent looking chocolate muffin. She munched on the muffin until she was halfway through before speaking again.\n\n\"Mom had passed. She didn't want anyone to tell me so I wouldn't be distracted from chasing my dream. She was at the funeral home, and the man was asking what kind of funeral she wanted. I told him her wishes, and he totaled it up. Forty three hundred dollars for the service, the cremation, and the urn. I had eighty-nine dollars in my account, and rent was due. She'd signed over her life insurance to the facility that was caring for her, and it ran out pretty quickly.\n\nI was totally lost until I remembered the card. Joe had given it to me at the restaurant I waitressed at, telling me if I ever wanted to make real money to look him up. When I checked into him I threw the card in my dresser drawer, thinking it would be a good story later.\"\n\nA small sob came out, and I silently handed her a napkin. She dabbed her eyes, and started to speak when I held up my hand.\n\n\"You can stop now. It's obviously very painful, and I don't want you reliving that again. I'll just go. Thank you for your time.\"\n\nShe grabbed me, holding on to my arm. \"Please stay. I need to get this out.\"\n\nI sat back down and she locked down on my hand, half, I suspected, to make sure I didn't leave, and half for reassurance.\n\n\"I was desperate. I had no savings; nothing I could sell that would bring in that much money. I thought about Joe. I called; he invited me to his office. To shorten the story I was hired, two films, five grand each. To seal the deal I had to give him a blowjob. I threw up three times before I got home.\n\nI'm just thankful I don't remember the details; I think I went into shock. I have fleeting images. four guys and another girl. I did whatever I was told. We were done in two days, he gave me the first check, and I left town. It was just enough to cremate Mom and hold the memorial, plus airfare. I was home when he got murdered. No one knows what happened to the film, but so far it hasn't seen the light of day. I came back, one of the girls from the movie got me a job at the strip club, and here I am.\"\n\nIt had to be Honeypot. My opinion of her rose significantly. I let her breathe for a few minutes before I spoke. \"Thank you. I consider this information confidential; no one will ever hear the story from me. I'm sorry for the loss of your mother, sorry for what you had to endure. I'll be going now, thank you for your time.\"\n\nI was halfway across the shop when she called me back to the table.\n\n\"I remembered something! Did you guys look in his safes?\"\n\n\"Yeah, we looked at the one on the wall of his office and the one in his home. There was a few grand, and that was about it.\"\n\nSharon looked confused. \"I didn't mean those safes. I meant the one in the floor under his desk, and the one behind the false wall of his closet. I saw them when I went in for my interview. His assistant, Amberly, let me go back a little early and he was transferring things from one to the other. He blew up when he saw me, and I had to promise on my life to never tell anyone. I think that's why he paid me so well for a first time, to buy my silence. It doesn't matter now, does it?\"\n\nI was stunned. I bet neither the cops or Jack knew about them. I was in a dilemma. I knew if I told Jack he'd get into the safes before the cops knew about them, if they ever did. Anything incriminating to our client would be removed and destroyed. I wondered once again who our mysterious client was.\n\n*****\n\nIn the end, I decided not to tell anyone, yet. In my line of work you meet all kinds, and I'd made friends in high and low places, so I knew who to call.\n\nBenny was a middle aged guy, going bald, with thick glasses, and a bit of a belly, just another average looking worker drone, but in his head were skills not to be believed. There was literally no safe he couldn't get into if he had the time, except for the super safes, and I was hoping these would be fairly simple.\n\nI laid it out to him, without going into details. The less he knew, the better it was for him. He gave up his old career for a new one that paid well and didn't involve the risk of jail time. He was the guy you called to make sure your stuff was secured. His usual mode of operation was to try to break in, then explain in detail how he'd done it and giving them counter measures to make sure no one else could.\n\nOne CEO bet him five grand he couldn't, and told him the cash would be in the safe. He came into his office three days later to see the safe hanging open and the money gone. There was a note. \"Thanks for the cash. I'll put it on my bill so you can deduct it as a consulting fee. Make an appointment, and I'll set you up so you never have to worry about it again.\" The CEO was so impressed he gave him another five grand, and put him on retainer, doing sweeps, quarterly, to make sure everything was secure.\n\nDespite his turn to the light, Benny was not above a challenge.\n\n\"How much trouble will we be in if we get caught?\"\n\n\"A ton. I don't want anything from the safes, I just want a peek at what's in them. After that, I'll tip the cops of through a voice distorted call from a burner I'll toss. The guy that owned those safes got killed, Benny, in a very painful, very gruesome way, so I don't want to dick around with this or have it come back to me. I'll pay you going rates, do everything I can to see we don't get caught. If you think it's too hot, pass it by. I'll see if I can get Mo.\"\n\nBenny laughed for the first time in the conversation. \"Mo can't open a can of pork and beans, much less a supposed burgle-proof safe. I'll do it, I owe you at least that much. However, if it goes south, I'll rat you out in a minute to save my own ass.\"\n\nI agreed, laughing. Benny could have given up several people when he got caught, all bigger fish, but he had his own code, and said nothing. Two of the ones he protected 'loaned' him the money to start his business when he got out. I had no fear of Benny telling, but heck, I was going to be right beside him if he got caught, so it didn't really matter.\n\n*****\n\nIt took us almost a month from inception to execution. We weren't worried, apparently no one knew about the other safes or they would have been raided by now. I had a hard time meeting Jack's eyes a few times, and he probably picked up on it, but he had no reason to suspect why. Cases came and went. The abused husband got enough footage in a week to lock in a divorce on his terms. The wife, all five one, one hundred ten pounds of her, went berserk when she was served. She tried assaulting the server in her rage, which got her a kicked ass and charges filed. The server, a willowy blonde who looked like a teenager and popped bubble gum to distract her targets, stood over her and grinned. \"Bad move, bitch; I'm not some guy blinded by love. I just wished you had put up more of a fight; I could have used the practice. I'm going to take my heel off your throat, and you're going to lie there like a good little girl, aren't you? If you get up before I get into my car, I'll consider it a threat, and I really will kick your ass. You got that? Good. Oh, have a nice day now.\"\n\nI thought about it as we cased the converted warehouse. It was in a depressed area, not a lot of other businesses around, just a few buildings widely spaced that were only used on a temporary basis. No one in their right mind would store anything valuable for very long in this area. We planned it down to the last detail. We sat for several nights in one of the vans we had just for purposes like this. We timed police patrols, traffic patterns, even observed during working hours to see if there would be a better opportunity then. The place was locked down, in bankruptcy since the death of Joe and his house of cards tumbling down. There was still police tape up, but it was so old it had broken and discolored. Word had it the bank was trying to line up purchasers when the bankruptcy cleared.\n\nIn the end, we chose a Friday night, just after one. We picked the almost antique locks on the doors, and proceeded up two stories to the main office and his private lair. We didn't have to pick the lock; it opened when I tried turning the knob. We were in.\n\nWe agreed on a minimum of talking, and decided to go for the floor safe first. Rather than slide the chair, I picked it up and sat it to the side. Benny felt around the floor until he found what he was looking for, and pulled gently. A three by three portion of flooring slid out, revealing the safe. It took Benny about three minutes to open it, only to be disappointed, as it was bare. He shut the safe and pulled the flooring back into place.\n\nThe closet was a large walk in. Many of his suits were still hanging on the rods, and the dressers were full of his socks, underwear, etc. There was a locked filing cabinet, and I fooled with it while Benny looked for ways to open the false wall in the back. \n\nI was in the file cabinet first, because it was a lot less complicated than finding a hidden wall safe. It seems Joe was old school, preferring paper to the cloud. It was files and financial records mostly. I noticed a new folder titled 'Princess' and pulled it out. Princess was the name Sharon said he gave her for her work. I rifled through it, finding the contract, the receipt for the cash payment she had been given, and a couple of nude photos. She was just as stunning naked as I thought she'd be, but she wasn't smiling in the pictures. In fact, she looked miserable. Without thinking, I shoved the file into my overalls. I was going to erase her past as much as I could, so it wouldn't be following her for the rest of her life.\n\nBenny had found the latch for the false wall, and the safe was huge! Fully six feet high by three wide, and we had no idea how deep it was. First, Benny checked it carefully for traps, in case it was wired. It could set off an alarm, or worse, start a process that would destroy what was inside. Then he set up a small device right above the dial. Again, I thought, with all the new electronic wizardry available, why would he go with an old fashioned dial safe? He really was a dinosaur.\n\nBenny set the dial to zero and a green light came on. He rotated it all the way to the right and nothing happened. Then he went back to zero, and went a quarter turn to the left before a blue light flashed. He quickly went back to zero, going in the opposite direction. It took him all of three minutes before the tell-tale click came, and the safe was open.\n\nI had no idea what to expect, but what was in there didn't come close. It was three feet deep, and the bottom two thirds were stacked with money, hundred dollar bills still in the bank wrappers. We counted the numbers wide, then deep, then high, and added it up. We had to use the calculator app on our phones. Six hundred and twenty thousand dollars. Wow.\n\nThe top part contained the tapes of his latest films, some documents, and a couple of flash drives. There was also a laptop. I had Benny stand watch while I took pictures of the documents, then I picked up the flash drives and dropped them into my pockets. I took one of the films, the one marked Princess. I hoped it was the only copy. I also took the laptop. After I looked at it, the police would get a tip leading them to everything we had.\n\nWe put everything back as exactly as we could, and slipped out. Benny was shaking when we got to the van. \"Man! I've never seen that much money at the same time in my life.\"\n\n\"Thinking about going back?\"\n\n\"Shit no! That much money is serious money, and serious money belongs to serious people. With that amount lying around, you can bet your ass someone is looking for it. I don't think it would be a good thing if they found I had taken it.\"\n\nI grinned. \"That's exactly right. That being said, we don't know if they know how much is in that safe. I liberated two stacks, leaving them exactly 600 grand. I doubt seriously they will look for twenty grand, even if they know it's missing. If they do miss it, they will just assume Joe took it. This stack is yours. I suggest you not deposit it, not discuss it, and not spend it all at one time.\"\n\n\"Thank you for that primer on how to avoid looking like a greedy idiot. I'll stash this, for a rainy day or a really nice vacation. A vacation that will be paid for from my business profits. I'll slide it into the account a few hundred at a time over a couple of years, and no one will ever know. What you gonna do with yours?\"\n\n\"It's not for me. It's for a woman, the woman who told me about the safe. She could use the money, and deserves to get it.\"\n\nBenny sighed. \"It's always a woman, isn't it? I don't have to tell you to be careful, but, man, be real careful, all right? I hope she can keep her mouth shut. Now, I for one will never speak of this again. How about some breakfast?\"\n\nWe went to Denny's and ate, old friends finishing a night out. I paid and kept the receipt, just in case. If anyone should ever ask where we were this particular night, the clubs we picked had no surveillance past the door, and it was usually pretty dark even then. We actually went to two, quick in and outs, and I managed to speak to a few people I knew.",
        "*****\n\nI debated a long time before I contacted Sharon again. I went to the club, assured the guys I wasn't working, and sat down. If I knew the bouncers or management of anywhere I was staking out, I usually told them. Most were pretty sharp anyway, and would have figured it out sooner or later. This way they didn't hassle me, as long as I bought the minimum drink quota, tipped the waitress, and kept their name out of it. I drank many a fifteen dollar soft drink designed to look like rum and coke. It all went into expenses anyway.\n\nI told Manny, their Chief of Security, that I was working on a personal project not related to my company, and that I wanted to speak to Sharon. He passed the word along, and soon she was serving me a Coke with a slice of lemon. Leaning over enough for me to get a down blouse shot of a black lace bra, she spoke quietly. \"After work. The IHOP on Third.\"\n\nI sat and enjoyed the view. Yeah, men are pigs, but I wasn't trying to do anything, so I looked. Honeypot saw me, pissed almost everyone in the bar off by kissing my cheek, and plopped down. \"Back again, sugar? It's me, isn't it? I knew it, one taste of brown sugar and white girls would look like ghosts. For you, Dark Handsome, it would be free. Just never tell anyone. I do have a reputation to live down to.\"\n\nI grinned and kissed her hand, surprising the shit out of her. \"I don't think I could handle you. One shot and you would ruin me. I'd spend the rest of my life trying to find someone with half your beauty and bedroom skills, and never succeed. So, as attractive as the offer is, I think I'll pass. Anyway, I don't think your man would approve.\"\n\nShe looked surprised. \"How did you know he was here? I've asked him not to come, because I hate for him to see me work, but he does anyway. It's killing both of us.\"\n\n\"It was pretty easy to pick him out. He's the only guy in the room who looks like he could kill me and smile while he's doing it. Bring him over, tell him I'm an old friend you haven't seen in a while, and that we were never lovers. It might look better if I actual know your real name. Maybe he'll calm down.\"\n\nShe looked shocked, then smiled. \"I think I will. Just for cover, I'll tell him you're here for Sharon, that you're her boyfriend. I'll let her know so she can play along.\" Honeypot started walking off, then looked over her shoulder. \"Be sure and call me Jasmine. That's my real name.\"\n\nShe talked to her guy for a few minutes, gave him a big kiss, and went to work. He walked over and I stood as he approached, holding out my hand. \"Hi. My name's Dirk. Jasmine and I go back a ways, and it's good to see she's finally met someone. I was wondering if it was ever going to happen.\"\n\nTiming is everything. Sharon showed up with fresh drinks as we shook, setting them down with a flourish and giving me a peck on the cheek. \"Compliments of Honey... er, Jasmine. She said to say it was for her two favorite guys. Remember, honey, I'll see you after work. Back to the grind.\"\n\nWe watched her sway off, and one guy, a little drunk, reached out and fondled her ass as she went by. I was half out of the seat when one of the bouncers grabbed him and hustled him out. Everybody knew the rules. No touching the waitresses. The guy at the table with me grinned. \"I'm Jim. You never get used to it, do you?\"\n\n\"Not at all. It must be really hard on you.\"\n\nHe sighed. \"It is. It's why I almost never come around. I love Jasmine, and I think she loves me as much as she's capable, but I'm to the point that it's not enough. I'm seriously thinking about ending the relationship. I'll give her the car as a parting gift, and pay the rent on the apartment for another year, but I'm done.\"\n\nWell, that was surprising. \"Does she know?\"\n\n\"Not yet. We're supposed to be together tomorrow, so I think I'll tell her then. I don't want to do it here. Look, I know you're her friend, so I hope you understand. I'm not judging her for her past, I'm looking at the present. I'm no choirboy, I've done things you could never imagine in my past life, but one thing I've always been, on the job and in my private life, is faithful. She can't be, and I can't live with it anymore.\"\n\n\"It's going to hurt her pretty bad, you know?\"\n\nHe looked me in the eye, and it suddenly struck me that this could be a very dangerous man. I don't know what he did, but I got the feeling his past wasn't spent behind a desk. He was six-six at least, two inches taller than me, and weighed in the neighborhood of two-fifty, and I didn't notice any fat. I was pretty sure by the way he positioned himself that he was armed, carrying it on his right side. I wondered why the bouncers allowed it. Something wasn't adding up, here. \"You think it's not going to hurt me? This is the very first time I've felt anything like love in my whole life. I found her when I was looking for someone to use in a Honey-trap, but I liked her so much I used someone else. It took me four weeks to get her to just have coffee with me, two more before we became intimate. I tried to justify what she does, but I just can't anymore.\"\n\n\"What do you do for a living?\"\n\nHe passed me a card. \"Thomas Paine & Associates, Personal Security Management Specialists\" \n\n\"Bodyguard?\"\n\n\"Some, in the first days. Now we plan and coordinate security for high profile clients, put in security systems, plan landscaping to prevent incursions, provide trained guard dogs, even provide personal protection for overseas trips if the client requires it. That's just the broad strokes, it's really a lot more complicated but the details would bore you. They do me, but I can't afford to miss anything. It's not a nine-to-five job, but it pays very, very well, and I've become quite successful at it.\"\n\n\"Why haven't I heard of you?\"\n\n\"All our advertising is word of mouth from others we've done work for. I employ fifty people full-time, and twice that number part-time. What about you? You look like an actor, but you got cop eyes. They're like mine, and I bet we've both scanned the room ten times since we've been talking.\"\n\nI grinned. The guy was really good. \"Third generation law enforcement, before the acting bug got me. Now I work for a P.I. to pay bills while I try to get a break.\"\n\nHe looked at my card and gave me his own grin. \"Ever freelance? There's times when I could use new faces. Nothing serious, at least a first, but I pay well.\"\n\nI told him I'd think about it. Working for Jack was getting old. Maybe it was time to step up the game. We talked about sports, guns, and life in general while we waited for Honeypot's set to end. When it did, she came bouncing up, hugging all over Tom. She looked happy while he looked miserable, at least when she wasn't looking. She went off to circulate, and I stood.\n\n\"Gotta go. It was nice meeting you, Tom. I don't know you well enough to give you any advice, but if I did it would be to lay everything out, offer her a choice and a chance. She might surprise you.\"\n\nSharon met me at the diner, the fear plain on her face.\n\n\"You need to relax. I come in peace and mean you no harm. I do, however, have some things you need to hear. First though, let's eat. I haven't eaten much today, and I'm starved. My treat, so order whatever you want.\"\n\n\"Ooh, Mr. Big Spender. It's a feaking' IHOP! I doubt they serve caviar and crepes, with Mimosas. I'll have the pancakes, if you can afford it.\" It was said with a lot of venom, her stare hostile and aggressive.\n\nI'd been up for 22 hours, was dead on my feet, here to do a pretty big favor for someone I didn't really know, and I get this shit? Not saying another word, I got up and left. By left, I mean I left the table, left the restaurant, and in was in my car before she had time to react. She was running out the door when I pulled into traffic.\n\nMy phone must have rang ten times before I got back to my apartment. All the calls were from her, and she left five messages. Damn I was tired. I decided I may or may not listen to them after a few hours of sleep, and fell into bed.\n\n...\n\nI crashed until noon. Then I went into the office to see what my next case would be. It turned out to be a friend of mine. He, too, had run afoul of Mr. Hollywood, and he'd tried to ruin his life as well. He couldn't get work on major films after that, and he ended up starting his own company and directing commercials for a living. Bob once told me he was surprised at how much he liked it.\n\n\"I don't have to fly all over the world, spend time in absolute hell holes for weeks on end, and put up with the actors, the producers, the director, and flunkies that are always on sets. I have regular office hours, never work weekends, and get home at a reasonable hour.\"\n\nBob was at one time considered one of the best second unit directors around. A second unit director was the guy responsible for the action scenes. His car chases were considered epic. Bob grinned, then told me he'd been approached by a British company to direct some scenes for their next project. \"It'll be New Zealand for about eight weeks, and it will be summertime when we go. I'm taking Minnie and the kids, and we're going to treat it as a long vacation. I just want to keep my hand in, just in case.\"\n\nI congratulated him. He asked me if I still worked. \"No, I got a pretty cold shoulder for a long time, so I gave it a rest. I've been in a few indy films in minor roles, still got my card, but lately, nothing. I don't even have an agent right now.\"\n\nHe grinned. \"Do a good job for me, and I'll use you some. As man pretty as you are, women would buy jugs of air if you pushed them.\"\n\nWe took the case. He was pretty sure he was losing money but couldn't really pinpoint where. He'd gone over all the records and they seemed legitimate, but he wasn't convinced. \"I hate a thief, Dirk. I worked too hard to build this business to let the money wander away. Help me out here.\"\n\nAlice and I did the leg work while Gerry tore his records apart. It wasn't one person stealing; it was almost everyone who worked for him, from the accountants to the prop guys. Seems almost all of them were related by blood or marriage. All were padding five to seven percent to the costs. I figured out who the ringleader was, sent Alice in undercover as a supplier, and watched her work her magic while Gerry documented everything.\n\nIn the end, it would have taken too much time and money to charge them and recoup his losses. Bob just fired them, en masse, and put the word out. Some saw the writing on the wall and quit before they could get fired, to better their chances at another company. Most all had trouble finding jobs, and the ones that did work took lower paying positions and were watched like hawks. Hollywood isn't all about the magic; it's all about the money. \n\nI was surprised to get a call from Honey... er, Jasmine. She sounded miserable. \"Hi, sugar. I could really use a friend right about now. I want your advice.\"\n\n\"Sure. When and where?\"\n\nShe gave directions to a little diner thirty miles away. I wondered at the distance, and told her I'd be there as quickly as possible.\n\nShe looked as miserable as she sounded. Dressed simply in a modest sundress, hair in a bun, she looked nothing like the temptress she portrayed on stage. Jasmine looked like she would be comfortable on the sidelines of a soccer match, watching her children play. She had light makeup on, and it still didn't hide the puffiness of her eyes. Her hug was tight, almost desperate.\n\n\"Thanks for coming. You're the only friend I have honest enough to tell me the truth.\"\n\n\"What's wrong?,\" I asked, as the waitress brought us both huge glasses of sweet, Southern style tea. The place wasn't exactly soul food, but it did have a strong Southern focus on it's cooking, and was quite successful.\n\n\"Tom left me! He says he loves me too much to keep sharing me, it just hurts him too much. I never thought I'd say that about a man, but I love him! What am I going to do?\"\n\n\"Did he say anything about getting back together?\"\n\n\"He said if I could look him in the eye and promise to be exclusive, he'd have a ring on my finger so fast it would be surreal. He even gave me a timeline. I have three more weeks. Married? Me? What if I do it and get urges down the line?\"\n\nI sighed. She probably wasn't going to like what I was about to say. \"It all comes down to what you really want. You seem more than happy with Tom. I know what I'd like to see you do, but it's your decision.\"\n\n\"What would you do if you were me?\"\n\n\"I'd think about what I really want. Is the casual sex worth your love for him? I think you've been conditioned because of your past to think yourself unworthy of love, but that's bullshit. Everybody is worthy of love. But true love comes at a price. I also think you need to learn to love yourself first, to break your conditioning, and become the woman you deserve to be. You need to see someone, let them guide you through the process. Either way, in the end you'll understand yourself better. Who knows? It might lead you back to Tom.\"\n\nShe sat, tears leaking, nodding her head. I felt a presence and looked up into those startling blue eyes. \"HI, Sharon.\"\n\nShe was obviously uncomfortable. \"Um, hi. Jas called me, said she needed some support. I don't think she considered that you would actually come, but we're both glad you're here.\"\n\nI shrugged. \"I consider her a friend, and I don't have that many. Why wouldn't I come?\" \n\nShe sighed. \"I don't know, exactly. Maybe it's because I've got such a jaded outlook on life. Anyway, I'm glad you're here for her. And I echo what you said. Jas, he's right. It's time to let go of your old life, even if you don't get back together with Tom. Respect yourself, and others will have no choice. Personally, from what I've seen in the last few months, you feel like crap every time you have sex with someone else.\"\n\nWe petted her for a while, until she started feeling better. The other patrons got an eyeful when she gave both of us a full mouth kiss. I don't know about Sharon, but I got a little tongue. She grinned. \"Sure you wouldn't like a spin in case I decide to be monogamous? Might be your last chance.\"\n\n\"I decline for a number of reasons. First, if I do and you get back together with Tom, and I never get you again, I have a feeling that would be a burden I couldn't bear. Second, it would be for all the wrong reasons, and meaningless sex is just that, meaningless. However, since I like you, it wouldn't be meaningless, and would hurt all the more.\"\n\nBoth women were staring at me. It was kind of creepy. \"What?\"\n\n\"Wow. You sure you're a man? That was a little deep for a pretty boy PI/actor.\"\n\n\"Hey! I read books. Besides, it's what I feel. Never had a man talk about feelings before?\"\n\nThey looked at me, then at each other, grinning. Then they started chuckling, which devolved into full laughter. I was starting to get a little pissed when Jas took my hand. \"No, sugar, we never have. It's a new and novel experience. Don't you agree, Shar?\"\n\n\"Absolutely. It was a very nice experience. After all, in our world we're stared at and dissected like insects in their minds. They don't care if we have feelings, as long as they can bury themselves in one of our orifices. Being treated like we actually have brains is very rare, being talked to like an equal even more so.\"\n\nJas rose, smiling. Then she gently kissed my cheek. \"Thanks, handsome. I wish maybe I'd met you before I started down the path I've been on. Oh well, maybe my loss can be Sharon's gain. You two would make absolutely gorgeous little vanilla babies. Aunt Jasmine could be your babysitter, when you need alone time. I've always liked children.\"\n\nSharon sat openmouthed while I grinned. \"Thanks. Who knows, if you follow the right path, you may have a few of your own. We could have playdates. I've always considered vanilla and chocolate the two best flavors.\"\n\nJas stopped smiling, a faraway look in her eyes. Then she grinned, fluttering those long lashes. \"Who knows. If I do, you can bet you guys will be their favorite aunt and uncle. Thanks, Dirk, for everything. You too, Sharon. I've never really had friends, and now I have two besties. Gotta go, I have a lot of thinking to do.\"\n\nI watched her sway off, admiring the movement of her tight bottom. I looked up to see Sharon grinning. \"You just can't stop yourself, can you?\"\n\n\"Why would I ever want to?\"\n\nHer grin was genuine. \" Still a pig. By all means, carry on. Since we're here, and I haven't eaten yet, buy me lunch. I'll have the barbeque, if it doesn't hurt you to watch a relative being consumed.\"\n\n\"Oh, we pigs can be quite pragmatic. I may even stoop to a little cannibalism, and join you.\"\n\nWe talked a little about unimportant things until the food arrived. I opted for the sweet Piedmont style of sauce, while she was old school, ordering the vinegar based. It was a very enjoyable meal. She went with the ribs while I took the pulled pork. The girl sure had a healthy appetite. She moaned a little as she leaned back, a pile of bones surrounding her plate. \"I'm glad this place isn't close. I'd weigh two hundred pounds in a month.\"\n\nI laughed. She was pretty tall, about five nine or ten, I'd guess, and might weigh one-thirty. She sat up, a determined look on her face. \"Want to tell me what the last time we met was about?\"\n\n\"I was trying to do you a favor, an act of kindness from one human to another. That's the only agenda I had. I was already having a pretty irritating day, and had been up for almost 24 hours. When you spewed that venom at me, it was the last straw. It was either leave or have a very ugly very public confrontation. So I left. Not all men are pigs, you know.\"\n\nShe looked pensive. \"I'm sorry. I'd had a pretty bad day myself. My roommate had moved out, in love with a man who I knew would treat her badly, so I had to carry the whole rent myself. Then at work I got groped and fondled three times, so I was down on men already. You reminded me of the bleakest time in my life, and I guess I let you take the fallout from all of it. For what it's worth, I am sorry. Any chance we could have the conversation now?\"\n\n\"Sure. Not here though. Too open. It would probably be best if I gave you what I have privately, but, realizing your distrust of men, it's why I chose IHOP in the middle of the night. I knew it wouldn't be crowded, and most of them would be on the tail end of a party night and not paying attention. Plus, I have things to give you, things that should not be seen by other people.\"\n\nHer eyes were wide. \"Mysterious much? I have this weekend off, all the way to Tuesday. I needed the break, so we can meet anytime, anywhere, within reason.\"\n\n\"Sorry, I'm leaving at noon tomorrow, taking a mini-vacation. Like you, I need a break. Maybe next week?\"\n\n\"Where you going?\"\n\nI wondered why she wanted to know that. \"Camping, Washington State. Maybe do a little fishing. It's pack in only, no amenities. It's a great place, there is no light pollution, and the stars are amazing. The fishing is pretty good, too.\"\n\n\"God, I could use a break like that. I'd like to breathe real air for a change, be surrounded by trees instead of tall buildings.\" I saw the change in her eyes. \"Mind if I come along?\"\n\nBoy, that was a surprise. She saw the hesitation in my eyes. \"I'll be good, I promise. And don't worry about me keeping up. I work out, but I really miss walking. Think about it, please. I have to go now, let me call Uber.\"\n\n\"Why would you call Uber when we're both going in the same direction? Come on, I'll give you a ride.\"\n\nI think my vehicle surprised her. It was a 1988 Bronco II, restored until it looked brand new. I got it for practically nothing, and worked on it in my spare time. New shocks, ball joints and arm assemblies, had the automatic transmission rebuilt, along with the little V6. Then I had it painted a gloss black, the original color, even redid the interior. For a little less than five grand I had a practically new car. My uncle had one when I was a kid, and I always liked riding in it.",
        "She remarked on it as I drove, weaving in and out of traffic. \"This thing is really zippy.\"\n\n\"Yeah, it's great for urban traffic, and has enough juice to travel the interstate pretty easily. I have universal tires, and unless it's really rough, the four wheel drive can take me anywhere.\"\n\nShe shifted the conversation. \"How big is your tent?\"\n\n\"Well, it's supposed to sleep four, if three of them are midgets or kids. I had to buy that size because of my height.\"\n\n\"Good. I should fit then. And before you get any ideas, I have my own sleeping bag.\"\n\n\"I haven't said you could come yet. If you do, I need your promise to be civil. The last thing I need is to get into a raging argument in the middle of nowhere.\"\n\n\"I already gave you my word,\" Sharon said in a tight voice. \"On second thought, just forget the whole idea.\"\n\nI grinned, wanting to needle her. \"Tell you what. You can come along, if you clean the fish.\"\n\nHer laugh surprised me. \"Deal. You probably won't catch anything anyway. But, if I clean, you cook.\"\n\n\"Agreed. I'm leaving at ten tomorrow morning. Can you be ready?\"\n\n\"Come by at nine. I'll have breakfast ready and we can pack my gear, and still be on the road by ten.\"\n\nI agreed, letting her out in front of her apartment building, wondering if I was going to regret doing this.\n\n*****\n\nIt had been five weeks since we'd broken into the safe. There had been no hue and cry, so Benny and I were pretty sure no one knew about the safe yet. The evening before we left for the camping trip, I dropped by a college campus, and hung around the computers until a student left without signing out. I directed the tip to the cop in charge of the investigation, as well as Benson, asking him to keep it confidential until they went public. I couldn't hide my height, but I wore a fake goatee and a wig under a cowboy hat, the hair brushing my shoulders, just in case.\n\nSharon met me at the door, the smells wafting out of her apartment. Country ham, eggs, homemade yeast rolls, and buckwheat pancakes. I'm a big guy, so I did the breakfast justice. Sharon laughed; telling me the food would really sit heavy while we were hiking.\n\n\"Oh, we won't hike until tomorrow. We're going to get there late, so we'll just stay at the campground until the morning. It will give us a chance to rest after the drive; maybe do some fishing in the lake. You made breakfast, so I'll do dinner. Ready?\"\n\nI had insisted in doing the dishes while she gathered her gear. She packed surprisingly light, just a backpack, a sleeping bag, and a small cooler. I put the bag in the back, and judged the weight at thirty pounds. I hoped she didn't overestimate her endurance.\n\nAll but the last thirty miles were interstate, so we made really good time. We broke for lunch in a little town just off our course. I'd discovered it last time, and they made some of the best burgers I'd ever tasted. They were big, too. Sharon took one look at the menu and ordered a grilled chicken sandwich, thinking it would be lighter. When she got it, the flattened breast drooped over the large bun about three inches. She ate half, asking for a box and taking the rest with her. I ate every bite of my burger, and we both skipped side dishes.\n\nWe got to the campground at five-thirty, and I registered while she picked out a site, using just my name. The spot she picked was on a little knoll, surrounded by trees, and a good distance from anyone else. With her help, it took very little time to assemble the tent and stow our gear. I pulled my case out that held two breakdown rods and lightweight reels, with a small tackle box, and walked to the lake, Sharon right behind me.\n\n\"There,\" she said, pointing out a pine tree that had fallen into the water. \"They'll be hiding under that. One of those rods better be for me, mister.\"\n\nI asked, and she showed me her fishing license. She'd bought it at the gas station/bait shop we'd stopped at when we got off the interstate. I wondered what had taken her so long.\n\nWe talked as we rigged them, both going for a white fly, something that would work well in the dark waters of the lake, we hoped. Sharon started talking as we worked.\n\n\"I was kind of a tomboy when I was little. I was the only child they had, so I got to be both the son and daughter they both wanted. It was fishing with Dad, beauty pageants with Mom. I would have much rather fished, and when I turned twelve I refused to enter any more pageants, but I did agree to keep doing dance competitions. There, all done. I'll make a wager. If I catch the first fish, you cook breakfast in the morning. You catch it, it's all me.\"\n\nWe cast at the same time. I jigged about four times when I got a hit, pulling a nice sunfish out of the water. I turned to smirk at Sharon, only to see her holding a little bass. \n\n\"I like my eggs over easy. Keep or release?\"\n\n\"You want fish for dinner?\"\n\n\"Oh yeah.\"\n\nGreat. Remember the deal, you clean and I cook.\"\n\nHer grin slipped a little, but she put both fish on a stringer. It took us about forty-five minutes to catch enough for dinner. I marveled when she pulled a four inch fillet knife out of a scabbard she wore on her side. I hadn't seen it beneath the loose shirt she'd worn. She gutted and cleaned the fish on the spot, throwing the offal into the water, to bait more fish in, as she put it, dropping the rest in a plastic bag she had in her pocket.\n\nWe went back to our campsite, and she washed the fish while I prepared to cook them. While the oil was heating, I rolled the fish in seasoned flour, and set them to the side while I fried potato chunks to a golden brown, dropping the fish in as soon as they were done. It doesn't take long to fry small fish, and after I put them aside to drain I dropped about a dozen hushpuppies I'd made into the oil. When they were done we had our meal, simple but very satisfying. Sharon stayed true to her word, cleaning the dishes while I repacked everything we'd used.\n\nThen we hit the shower house. I came out in light sweats and a tank shirt, perfect sleeping gear. I had to sit and wait on Sharon, of course. A woman, obviously waiting for a shower stall, sat on the bench with me, striking up a conversation that went quickly into flirting. I was getting uncomfortable, but then she came out. She was wearing skin tight yoga pants, and a tank shirt matching mine, without a bra. She grinned before pulling a lightweight sweatshirt over her head. The blond that shared my bench took one look, blurted out, \"You have a beautiful wife!\" and scurried into the showers. \"I think so, too,\" I called after her.\n\nWhen I turned back to Sharon she had a funny look on her face. \"What? She had no idea who I was or even if I was with someone, she just started hitting on me. Surely you of all people know what it's like.\"\n\nShe just grinned, and later, when the blond walked by our site, Sharon was in my lap, giving me a little PDA for her benefit. She jumped up and sat down in her chair as soon as she passed.\n\n\"You could have stayed, you know. I, for one, was very comfortable.\"\n\nI could make out her smirk in the light of the campfire. \"So was I, until you started getting a little too comfortable.\"\n\nI flushed. A beautiful woman is on your lap wriggling around, and you're not supposed to get an erection? It would have been just plain rude not to. I told her as much.\n\n\"I'll take that as a compliment. Time for bed if we want an early start tomorrow.\"\n\nI had inflated the king-sized air mattress while she'd gone to the bathroom, laying our bags out. \"You know, we could zip our bags together, for more warmth.\"\n\n\"My bag is rated to 0 degrees. I'll be fine. Don't stare while I take of the sweatshirt.\"\n\nOf course, I stared. She flushed when she saw me. \"Pig,\" she said gently.\n\n\"Goddess,\" I said, just as quietly. Five minutes later we were both snuggled into our bags, and she went to sleep almost immediately. I listened to her soft breathing for a while before I drifted off. I woke about three, finding her snuggled against me. I moved my arm to make her more comfortable, and she slid under it, laying her head on my shoulder, and her arm across my stomach. I went right back to sleep, thinking how good she smelled.\n\nShe woke me with a little start, moving off my arm. I opened my eyes and yawned. \"Time to get up?\"\n\n\"It's a little early yet, but I'm not sleepy. Come on, let's get up, get the fire started. I have a surprise for breakfast.\" She was staring at me intently, wondering if I was going to say anything about the way we slept last night. I never said a word, just rolled out and stowed my bag. She sat with her bag hugged to her chest until I went out of the tent.\n\nI made the fire, pulled my battered little four cup percolator out, dumped the coffee in, and sat it on the back of the fire. She came out, dressed for the day, tight jeans, tee shirt under flannel, her hiking boots on, hair swept back in a long ponytail. She looked like an LL Bean commercial waiting to be filmed.\n\nShe grinned when she smelled the coffee, then opened the small cooler, pulling out two ribeyes. \"I was planning on having them last night, until we caught those fish. They need used, and it will be a great breakfast.\"\n\nI put the marinated steaks on, watching them while I scrambled the eggs. Soon we were feasting, hot cups of strong coffee in our hands. She cleaned the dishes while I struck the tent. We packed what we weren't going to take with us in the back of the Bronco, donned our packs, and started up the trail.\n\nWe made pretty good time, stopping at noon for a lunch of sandwiches, chips and bottled water. We saved the empties, planning on filling them when we got to our campsite. She had a small camera, and was snapping away. I grinned and handed her the binoculars I used for work, explaining the camera to her. After that, if she thought she could have she'd have hiked with them glued to her face, she would have. \n\nWe saw a bear and two cubs on an opposite mountain, and I had to wait while she took a couple of dozen pictures. They were feasting on wild blueberries, and when we came onto a patch, I stopped and made her pick some with me, sliding them into a plastic container I'd brought along. \"No need to let the bears have them all,\" I told her. She was more than anxious to continue when we had enough. We reached our designated site, one of three on the edge of a little lake, and set up.\n\nWe took the rods and fished, getting nothing until it started turning dusk, when we both got hit at the same time. They were trout, a very good size for the time of year. Sharon immediately cleaned them, pulling out yet another plastic bag. It was her turn to cook. I surprised her by handing her a large lemon, and she put slices on top of both fish, wrapping them in foil and setting them on the back of the grill top that was provided. \n\nWe'd didn't need to hunt firewood, the Forest Service provided it from downed trees that had succumbed the year before. She boiled water in a small pot before adding instant potatoes. I pulled one of the two bottles of white wine I'd carried up out of the lake where they were chilling, and we had a glass with dinner. We sat and watched a brilliant sunset fade to darkness. We sat, talking about anything and everything unimportant, until it was time for bed. Normally I wouldn't have carried the extra weight, but I'd brought the air mattress and a small pump, so we would be more comfortable. She took the little battery powered lantern into the tent, and I watched as she stripped in silhouette. Turned me on something fierce. She came out in her yoga pants and tank, her flannel over it. She looked at me, I grinned and it suddenly occurred to her what I'd seen. I grinned as she flamed red, then grinned and said \"Pig.\" \n\n\"Goddess,\" I replied, grinning back.\n\n\"Your turn, and leave the light on.\"\n\nI went in and stripped down to my boxers, moving slowly. I took the boxers off and did a slow turn. I heard her gasp as I came round, wondering if she could see the outline of my semi-erect cock. I slid into fresh boxers and my sweats, coming back out. I grinned at her flaming face.\n\n\"Pig.\"\n\n\"Whatever. Time for bed.\"\n\nWe got into our bags, and sleep took a long time coming. I woke up to her sniffling. \"What's wrong, honey?\"\n\nThe crying got louder, then subsided to snuffles. In the tiniest voice ever, she spoke. \"Dirk, can I snuggle with you?\"\n\n\"Of course you can. We need to get up for a minute, so I can zip the bags together.\"\n\nShe stood, passively as I did up the bags, laying them out on the mattress. \"All right. I get the right. You better not snore or I'll be poking you.\"\n\n\"I've never snored!\"\n\n\"All right then, we're good to go. Zip up.\" We lay together until she touched my arm.\n\n\"Can we snuggle now?\"\n\nI reached out, pulling her to me, until her head rested on my shoulder and her arm was across my stomach. I felt the tears start again, and I stroked her hair and cheeks, telling her to let it go. The full on bawling started them, followed by snuffles and later, hiccups. She cried for a long time. I never said a word, just held her and kept up the caresses. When she finally stopped crying, she started talking. \"I'm sorry, Dirk. I haven't been in a man's arms since a year before I... did what I did. Afterwards, I just felt so used and dirty I didn't think a man would want me. Plus, I would freeze up every time a man touched me, thinking he just wanted to use me. Pretty screwed up, don't you think?\"\n\n\"No I don't. What you went through had to be pretty traumatic. Just a suggestion, but maybe you should see someone professionally. Maybe they could help you.\"\n\n\"I don't have insurance, and I can't afford it on my salary.\"\n\n\"Would you mind if I try to help? I know a few people through work. Maybe I could get you a discount or even a free session or two.\"\n\nShe was quiet for a while. Then she spoke in a voice so soft I almost didn't hear her. \"Let me think on it, okay? Right now, right here, is the best therapy I can get.\"\n\nShe went to sleep soon afterwards, snuggling even tighter. I drifted off, trying to think of ways to help her.\n\nI woke alone the next morning to the smell of coffee. I got up, and didn't see her for a minute, until she moved. She'd changed into a brighter pair of yoga tights, and was sitting on a rock overlooking the lake, actually doing yoga. She was breathtaking, backlighted by the breaking sun. I grabbed my binocular/camera, and zoomed in, getting some pretty amazing shots as she went from position to position. She finally saw me and jumped up, pissed.\n\n\"What are you doing?\"\n\n\"Taking pictures. Wait until you see them, you look phenomenal, backlit by the sun. Grace and beauty in a fuzzy warm glow.\"\n\nMy appreciation must have calmed her. \"If any of them look sleazy, I'll delete them myself.\"\n\n\"Agreed. Breakfast? I've got a treat for you.\"\n\nI poured her coffee, and got out the pan. I'd brought premixed pancake batter, so I stirred it up and as they were frying I added the wild blueberries we'd picked. There was enough for two large ones apiece, covered with the little squeeze bottle of honey I'd packed. I cooked half a package of bacon on the side. Sharon ate like she was starving, eyeing me as I started on my second. I grinned and fed her every other bite, and she didn't once make a snarky comment.\n\nWe cleaned the site, packed everything away, and started on the last leg of our trip. We had made a circuit, and our last stop was half way between where we were and the campground. We walked silently most of the time, only occasionally saying something about a view. I was very happy, I'd taken girlfriends on camping trips before, and they were intimidated by the silence, which made them talk almost nonstop. Sharon was just happy to be in the moment, and words weren't necessary. It was a short hike, and we got to the last campsite just after noon.\n\nThe site was at the bend of a fair sized river, running fast and shallow in places, before rounding a bend and widening to a deep, placid pool. Old hands by now, we worked well together, getting the site situated and the tent up. Lunch was half a tin each of ham and a bowl of ramen noodles. Not gourmet, but filling. I got the rod case out.\n\n\"Interested?\"\n\n\"Sure you want to be outfished by a girl?\"\n\nI laughed and handed her the rod. We worked the shallows and the fast parts, before ending up in a secluded glen, beside a deep pool that had a little sandy beach. We'd caught a few, too small to keep, but fun to land nonetheless.\n\nInstead of fishing, we just sat for a bit.\n\n\"I'd love to have a bath. Washing off is okay, but I feel a bit grungy.\"\n\nI told her I'd be right back, dashed back to the site, grabbed the soap and towels, and a little bottle of shampoo. I shook the bottle at her.\n\n\"I'm not getting naked.\" She looked defiant.\n\n\"Be kind of hard to bathe then, but your choice.\" I yanked off my shirt and stood. I'd already removed my boots, so I grabbed my shorts and boxers, stripping them off, diving in as I heard her loud gasp. A gasp that turned to laughter as I surfaced sputtering.\n\n\"Jesus! This water is COLD!\"\n\nI splashed around a bit before grabbing the soap and lathering up. \"Don't look!\" I said, grinning, as I got into shallow water and completing my bath. \n\nI was sluicing water over my head when I heard a splash, followed by a scream. \"It is COLD!\"\n\nShe'd taken off her top and bottoms, but had left her sports bra and thong on. Like the thong hid anything. I watched her swim for a while, as graceful in the water as she was on land, occasionally diving down, her scrumptious rump all that was above water for a few seconds. I'd gotten in deeper water, and she slid underwater to me, rising with a splash right before me. \"I'll do you if you'll do me.\"\n\nI was looking at her erect nipples, my mind out of gear. \"Huh?\"\n\nShe giggled, completely at ease. \"Pig,\" she said gently. \"I was talking about shampooing our hair.\"\n\nShe did me first, pretty quickly because I kept my hair short, pushing my head underwater unexpectedly when she was done, laughing.\n\nShe held the bottle out. \"Now do me.\"\n\n\"Ooookaaay,\" I said drawing it out.\n\nShe giggled. \"Pig!,\"\n\nIt was probably one of the most erotic moments of my whole life, washing her long hair, as she leaned against me, sighing as I massaged her scalp, the beauty of the pool a backdrop. I admit I took a long time, and she seemed content to let me. Finally finished, she dipped her head under the water, getting all the soap out. She popped up grinning. \"You didn't happen to bring conditioner, did you?\"\n\n\"Sorry, no.\"\n\nShe shrugged. \"Well then, if I frizz, and look awful, I'll just tell everyone we meet this is the look you like on me.\"\n\nWe moved to a smooth rock, and she climbed out without a pause, and lay down on her towel, after spreading both out. \"Come on, the heat of the rock feels great after the cool of the water. It won't take us long to dry.\"\n\nWe lay for a bit, enjoying the warmth. \"I have to turn over now, dry my back. Don't look!\"\n\n\"Okay,\" I said smirking, enjoying the sight of her almost bare bottom tremendously. She popped one eye open and looked at me. \"Pig.\"\n\n\"Yep.\"\n\n\"Whatever.\"\n\n\"I'm getting up now. Don't look.\"\n\nI shrugged back into my boxers, looking around to see her propped on one elbow. I grinned.\n\n\"Pig.\"\n\n\"Whatever. I guess I'm dry enough now. I'll get dressed, too.\"\n\nI watched as she slid the tight top on and adjusted it, and watched open mouthed as she shimmied into her leggings. \"What?,\" she said, crossly.\n\n\"Don't get mad. I've always wondered how women got into those things. Now I know.\"\n\n\"I'm changing your name to Pig permanently. Now come on, let's do a few more casts before we go back.\"\n\nThe next pool down, I snagged a pretty good trout. Holding it up, I was about to brag when her rod doubled. It took her almost fifteen minutes to fight the fish into the net with the lightweight rig, but it was a beauty. Easily the largest trout I'd ever seen. We admired it for a while before she gently placed it back into the pool. \"He's just too beautiful, I can't kill him. I hope the next person who hooks him feels the same.\"",
        "I admired her for her feelings, and slipped my own smaller one back into the stream. We walked back, and about halfway there she slipped her hand into mine. I knew then it was time to give her what I had. I'd been lugging it around in the backpack, waiting for the right moment. We built the fire up, ate a light meal, and I pulled out the bottle of wine I'd been holding, waiting for the right moment.\n\n\"Sharon, what I'm about to tell you could get me into some really serious trouble. I need your word, your solemn vow, that you never tell another soul what I'm about to share with you.\"\n\nShe nodded, her eyes large.\n\nI took a deep breath. \"All right, then. After you told me about the safes, I thought about what to do about it. At first, I was just going to tip off the cops, but I admit, I got curious. To shorten the story, I got professional help and we broke into both safes.\"\n\nShe gasped a little. \"What did you find?\"\n\n\"This,\" I said, opening the backpack. \"This is your contract, along with a couple of photos. I'm sorry, but I looked at them. As far as I know, these are the only copies. I suggest you throw them into the fire.\"\n\nShe looked at it, and I could see the deep blush spreading. It quickly went onto the fire, and she poked it until there was nothing left but ashes. Then she looked up expectantly. I pulled out the recordings. \"As far as I know, this is the only copy of your film. Before you ask, I didn't look at it. I never once wanted to, I didn't want those images in my memory when I looked at you. Do what you want with it.\"\n\nOf course, it went on the fire, the chemicals putting off an unpleasant odor. I smiled when it was done.\n\n\"There you go, Sharon. All traces of the Princess of Porn erased forever. There's one more thing.\"\n\nI pulled out the money. I know, crazy to go hiking through the woods with ten grand in cash, but the alternative was leaving it in my Bronco, and that wasn't going to happen. Her eyes got huge.\n\n\"Along with the tapes and documents was a lot of money. A huge amount. I didn't say anything for a while, but I thought you deserved this for your pain and suffering. I don't think this will be missed, and even if it is, there is no way it can be traced back to you. Use it, or donate it, or sit on it, just don't talk about it. Just before we left, I sent the cops a tip about the safes. Guess we'll read about it in the paper when we get back.\"\n\nSharon sat, looking stunned and lost in thought. Finally she looked up at me, and the tears started. Long, fat tears that trickled down her cheeks one at a time, gradually getting faster until it was full on sobbing and she was in my arms. We sat for quite a while, as the shadows grew longer, disturbed only by the flickering fire. Finally she sighed, and stood. \"I have to be by myself for a bit,\" she said, before grabbing her little flashlight and walking back towards the river.\n\nShe was gone long enough for me to start thinking about searching for her, when she returned. She was smiling, but it was a small, pensive smile. She sat on the log beside me, snuggling in. \"Thank you. I don't know what else to say.\"\n\n\"There is nothing more to say, except you're welcome. Now, promise we will never speak of this again.\"\n\nSharon turned, giving me a firm kiss before leaning back and grinning. \"My lips are sealed. You didn't happen to fix dinner while I was gone, did you? I'm starving.\"\n\nThere wasn't much left, but we scrounged together enough to satisfy our hunger. I had already prepared the tent, so we brushed our teeth and went to bed. I was glad I had brought plenty of water purifying tablets, that girl could use water. Of course, I boiled it first, then put the tablets in, you just couldn't be too careful. I had a friend who went backpacking and forgot his tablets. He boiled everything, but something got through and now his health was so bad he could barely walk, much less do any hard work. He lived on disability now, at twenty-eight\n\n*****\n\nIt was hot that night, for the first time. Sharon wriggled around an hour later before sitting up. \"I'm burning up!,\" she exclaimed, as she wriggled out of her clothes, down to another sports bra and thong. \n\n\"Don't get any ideas.\"\n\n\"Too late for that,\" I said, as I took of my tee and sweats, leaving me in my boxers.\n\n\"Stay on your side of the bed!\"\n\n\"I'll remember that if you get cold later. Now go to sleep.\"\n\nWe lay on top of the bags, and finally cooled down enough to go to sleep. I don't know how much time went by, but I woke to find her snuggled to me, her tight rump nestled into me. I couldn't help it, and got hard instantly. I didn't know she was awake until she giggled. I started to pull away and she grabbed the hand that was across her stomach, stopping me.\n\n\"It's all right, Dirk.\"\n\nI enjoyed the snuggle, and was almost asleep when she started pressing back into me. I was hard again quickly. After the fifth time, I spoke.\n\n\"Sharon, I...\"\n\n\"Hush. Don't talk. You're the first man in almost a year and a half that I've had feelings for, that I'm attracted to. I don't think I can do this any other way. Please love me.\"\n\nI could feel her tears on my arm, but I gently stroked her tummy and let my hand wander back to her ass, tracing the thong down between her cheeks. Her breath quickened, and she reached back, pushing on my boxers. Three wiggles and they were down to my thighs. She cooed as she fondled my erection, before pushing back, letting go of my cock to pull her thong to the side. I gently stroked, to find her soaking. \"Let me,\" she said, as she lined up and slowly thrust backwards. \n\nI don't have words to describe how wonderful it felt. She slid back slowly, stopping once in a while to wiggle a bit, then continuing until I was bottomed out as much as I could be in this position. I'd never felt a woman generate as much heat, and she was very tight. Due to her self-enforced celibacy, no doubt. Sharon pushed her sports bra up and took both my hands, pushing them into her breasts. Her nipples were rock hard, her chest firm and soft at the same time.\n\nWe sped up slowly, varying depth and timing of our thrusts. Four minutes into it she let out a little moan, and I felt moisture trickle out of her. That set Sharon off, and she pushed my hands harder into her breasts. \"Play with my nipples! Be firm! Roll them, pull on them, if I could turn over I'd let you bite them! OOOOh!\"\n\nShe came as close to squirting then as I've ever experienced with a woman. She lifted her leg up, and I grabbed on to give her support. One hand had dipped between her legs, and she was rubbing her clit frantically. Sharon moaned \"faster, faster!,\" so it wasn't very long until I was going as fast as I could go in that position. She let go her clit and reached back to fondle my balls. That was all it took, and I cried out as I gushed into her. She screamed, and it sounded really loud in the little tent, before dropping her leg, and sobbing softly.\n\nI didn't know what to do, so I turned loose of those amazing mammary glands, and started stroking her hair as I placed soft kisses on her neck. I didn't know what to say, so I remained quiet. Sharon finally settled down, rolling over and giving me a kiss that had to be in the top ten of any kiss ever given to anyone in the history of the world. Pulling back, she giggled and snuggled into my chest.\n\n\"Thank you, Dirk.\"\n\nI couldn't help softly laughing. \"You're thanking me? That was the most intensive, most satisfying round of lovemaking, I refuse to call it sex, that I've ever experienced. I should kiss your ass all the way back to the campground in gratitude.\"\n\nShe giggled louder. \"I might just let you do that. In the meantime, let's get some rest, build up our strength. I might want to do this again later.\n\nShe felt my lurch at her words and grinned, grabbing me. \"Down boy! Behave, and we might play again.\"\n\nOf course, that really had the blood rerouting. She snuggled back into me, and was asleep in seconds. I lay awake, wondering what had happened. I liked, Sharon, liked her a lot. She been used about as badly as a human could be, but was still a decent person. I couldn't imagine what she'd gone through, it's what made me do what I did, something totally out of character for me. Not the helping, I was glad to do that, but the other, breaking and entering, stealing the money, things I had never considered before. I thought about her in her sexy secretary outfit, and found I preferred seeing her in those amazing yoga pants and a tee shirt much better.\n\nI finally admitted I had developed feelings for her. I'd had lovers over the years. Not to sound egotistical, but my appearance made it pretty easy to attract women. I never really connected with any on an intimate level, though. I often thought there must be something wrong with me.\n\nSharon, well Sharon brought out the caveman in me. I wanted to throw her over my shoulder, take her to my cave, and keep her forever. I found myself having high hopes for the future. I could see her pregnant and glowing, carrying my child. I fantasized more until I drifted off to sleep.\n\nShe woke me as dawn broke. She was naked, and on top of me, kissing me gently. She smiled when I opened my eyes. \"Good. You're awake. Come with me.\"\n\nShe rose until she stood, and stretched out like a feline, her languid movements accentuating her beauty. She looked down and grinned. \"Well, come on, or I'm going to start without you.\"\n\nShe bounced out of the tent, and I almost popped the air mattress getting up. I followed her to the stream, and Sharon took my hand, drawing me into the water. It was very cold, but her hands felt like warm sunshine as we stood knee deep and washed each other. Washing turned into caressing, caressing turned into stroking and kissing, ending up with me on my back on the warm sand of the beach.\n\nShe mounted me, bending over until I was wrapped in a veil of long hair and she was kissing me intensely. She sat up a little, found me, and slowly sank down gasping a little as she bottomed out. Then she rode me, gently, urgently, until I was quivering to roll her over and take her. I knew better, though. It was all about her, letting her have the power and control, and getting her confidence back. It didn't mean I didn't like it, and after her second orgasm she was slamming me, her body moving faster than I thought possible. When she hit high gear it didn't take long, and she came for the third time as I exploded. She fell to my chest, crying and laughing at the same time.\n\n\"Now we need to bathe again.\"\n\nI grinned. \"Dibs on the good parts.\"\n\nShe looked back over her shoulder, a sexy smirk on her face. \"Pig. You coming?\"\n\nI almost beat her into the water.\n\n*****\n\nWe broke camp with a great deal of sadness, knowing we would soon be descending into the real world soon. We inspected the campsite, making sure it was clean, and held hands.\n\n\"Come on,\" she said, \"let's get back to civilization. As much fun as we had last night, think how much better it will be in a comfortable bed.\"\n\nIt made me want to run down the mountain.\n\nWe talked, really talked, about everything. She told me she was going to have counseling when she got home, if she could find someone she liked. \"I want to be better. I want a normal life. I'll continue working at the club until I can find another job, with the money you gave me, I have a little cushion now.\"\n\nI don't know if you want to hear it, but I'll do anything I can for you.\"\n\n\"Anything?\"\n\n\"Anything.\"\n\n\"Good, because I can think of a lot of things I want you to do. Take me on dates. Let me cook for you once in a while. I really miss that. Oh, and make love to me, when I want. And I'm here to tell you, I have a lot of time to make up for, so I'll want a lot. Still willing?\"\n\n\"Could we get a contract on that? Exactly how much is a lot? Can we do it when I want to every once in a while?\"\n\nSharon grinned. \"Pig.\"\n\nShe held my hand all the way into the campground. The place had a little mom and pop diner right off the trail, and we were starving. The waitress laughed when Sharon apologized for our gluttony.\n\n\"Relax, honey. Most guys coming off the trail for more than a week try to eat the chairs. You're good.\"\n\nThe campground office had picked up a bunch of surplus lockers from a defunct high school, and had them lining the back walls of the welcome center. For a buck a day you could lock your valuables away until you returned. We got our stuff out, and immediately started recharging our phones. While they charged, we fished the lake one last time.\n\nWe stared out over the water for a minute when we finished, and shared a deep, deep kiss, then we loaded up the Bronco and started back to the real world.\n\nI turned on my phone and looked at the dozens of messages. Jack, Alice, Benson, the detectives in charge of the Joe Morgan case, A DA I had never heard of. Even Benny. All with multiple messages, all demanding I call them, right now! I even got a couple of messages from Jasmine.\n\nIt looked like the fecal matter had made contact with the rotating oscillator in a major way..\n\nEND OF PART ONE"
    ],
    "authorname": "qhml1",
    "tags": [
        "porn",
        "porn star",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/dark-handsome"
}