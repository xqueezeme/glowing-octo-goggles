{
    "title": "Felicity Ch. 06",
    "pages": [
        "Chapter 6: Wendy\n\nI was at a late Saturday afternoon wedding with my son Mike because Jason, a good friend of his, was the groom. Jason and the groomsmen were also the only other persons I expected I would know. Jason was a good stand-up kind of guy and a fairly famous photographer. He and Mike had known each other since they were college roommates.\n\nThe ceremony was like all ceremonies except that the maids of honor all wore green, tight, silky, sexy dresses that would not need to be hidden away from children after the wedding. Most of the maids of honor had red or auburn hair so they all looked fantastic in them including a red headed woman about my age. \n\nShe was, in a word, spectacular. The other sweet young girls in the group paled in her presence. She was taller, full of dangerous curves, with a smile that lit up the room. She was not beautiful by conventional views. She was better than that, she was striking. Her face was covered with freckles, which made her big green eyes seem to shine with their own light. From thirty feet away I could see she had the most kissable lips I had ever seen.\n\nSomehow she sensed that someone was eyeing her like a wolf eyes a lamb and began to scan the audience. I quickly took my eyes off her and looked at my program. I searched the names of the bridesmaids for a clue but none of the six names listed seemed to be a fit. All six were MacDuff's, family of the bride.\n\nAfter I thought more than enough time had elapsed for her to return to whatever maids of honor were supposed to do I looked up and saw her quickly averting her eyes away from me. I quickly looked away too and after I managed to get the hairs on the back of my neck to relax I watched my son as he escorted the grooms mother to her place.\n\nSoon after that the best man escorted the bride's mother to her place, a redhead that was a taller, possibly younger version of the woman that was the object of my lust but with fewer freckles. The program identified her as Maureen MacDuff.\n\nAn adorable redheaded little girl, (Samantha), marched down the aisle and scattered flower petals as she walked. \n\nAfter a small delay Mendelssohn's march filled the chapel as the bride, (Margaret), who looked like a miniature version her mother, made her entrance. Most eyes stayed on her and she did look gorgeous, but my eyes went to The Woman. \n\nShe seemed to be very proud of the bride, a tear had to be quickly wiped away. Her eyes stayed on the ceremony until Jason kissed his bride with such ardor it made the ladies giggle. \n\nShe looked out at the guests and her eyes briefly locked on mine. I smiled at her with a nod as the hair on the back of my neck rose again. She smiled at me with a nod, but her face told me that she was perhaps trying in vain to remember who I was.\n\nThe procession out began and she quickly joined the parade. We exchanged glances and smiles as she went past me. The rest of us waited until the dignitaries were escorted out then we milled around for a while.\n\nThe reception was going to be in my hotel banquet room and many of the wedding guests were staying there too. My son and I were sharing a room.\n\nHe had the interminable wedding photos to go through and told me to go on, that he had a ride.\n\nHis ride was with a short, freckled faced, auburn haired cutie with a great smile for my son, but a shy, somewhat nervous smile for me. \n\nMy son was beaming, exceptionally proud to be with her. \n\nShe was one of the maids of honor and resembled the bride in many ways, a sister perhaps. Mike had escorted her to the altar before returning with Jason's mother.\n\nThe young girl and I had an idea who the other was but had not been formally introduced.\n\nBefore that could be accomplished she was called for photos in the chapel.\n\nI took the opportunity to remark to Mike, \"Son, you need to tell me where you will want your rehearsal dinner. I thank God that the father of the groom only has to pay for that.\"\n\n\"What? No Dad, we are just good friends. We haven't gone out together or anything.\"\n\n\"Why not? Oh, that's right. You are a coward just like your father. Genetic I guess.\"\n\n\"No one is as big a coward as you. The principal at my school wets her panties every time you come over to my classroom with your wild creatures from the shop and all you do is smile politely. \n\nIt would be politically very helpful to me if my father made an effort to come on to my boss.\"\n\n\"OK, here is the deal. You ask that sweet young thing to go out with you and I will give your boss the opportunity to seduce me.\"\n\n\"Where would I take her? The gang goes to clubs to dance but she seldom joins us.\"\n\n\"The last thing you want around you is the usual gang. Take her to the boardwalk in Galveston, take her on some rides, and hold her hand if she looks nervous and I guarantee she will look nervous just so you will hold her hand. Take her to dinner there. Win her a teddy bear. And always hold her hand.\"\n\nMy son gave me one of my favorite looks; the one that says his father is making perfectly good sense.\n\n\"Oh, one more thing\", I added. \"At the reception later make sure you sit next to her and do not hesitate to ask her for the very first dance. Do not give another guy a window of opportunity. If her hand accidentally touches yours at any time hold it until she decides you can't. I am sure she will never stop you from holding her hand.\"\n\nSomeone called him and he patted my shoulder as he ran back into the chapel. I loved those times when he was as proud of me as I always was of him. \n\nIt was early evening when I got back to the hotel and found my way to the reception room. As usual the food was ready but we had to wait for the wedding party. The bar was open and that was the important thing. Mingling and visiting with people I did not know was very difficult for me. My courage came from Crown Royal.\n\nI had just finished my first drink when some members of the wedding party started to drift in. I had saved two chairs at my table and waved at my son when I saw him. \n\nHe pointed to my table as he talked to the love of his life that he still he did not realize was right in front of him. I was hoping my comments had nudged him closer to awareness. \n\nShe came over to join me as my son headed to the bar. He had not introduced us yet so I presented myself to her.\n\nShe was very nervous about meeting me, it was apparently very important to her to make a good impression. She already had.\n\nThis was the girl for him. Her name was Karen. She was a teacher at his school.\n\nMy smile apparently told her she would never have a problem with me.\n\nHer smile said thank you. \n\nShe obviously understood the predicament she was in even if my son did not.\n\nMike came to our table with drinks for each of us just as the bride and groom made their entrance. Finally we could eat.\n\nAs I wondered if I had ever eaten beef stroganoff other than at wedding receptions my mind went back to The Woman and scanned the room for her. She was not there.\n\nMy son made me proud when as soon as the DJ invited the wedding party to the dance floor he took Karen's hand and joined in. They were beaming at each other helplessly.\n\n\"Why is it that the ones in love are the last to know? I wondered. \"Maybe it's just the guys that don't have a clue.\"\n\nI decided they would likely make more progress without me around so I left the table and headed for the bar. There was a considerable line by then and by the time I got my drink there was a full fledge party going on. I found a mostly clear spot by a wall and I settled into my people watcher mode. I noted that Mike and Karen had not released each other's hands since the first dance.\n\nSuddenly there she was, The Redheaded Woman, right in front of me. She handed me a fresh drink as she nodded with a mischievous smile then turned her back to me and joined me in my perusals. \n\nI was stunned. She had changed dresses and was now wearing a silky black dress that hugged all of her.\n\nI inhaled her; she was all Woman in bold face type. Curves in front, curves in back, curves at her sides, and a mane of deep red hair. I felt like a cartoon character with my jaw on the floor, my eyes bulging out and smoke coming out of my ears.\n\nMy meltdown was halted by the ominous strains at the start of Michael Jackson's Thriller. Every one on the dance floor cleared out as the wedding party assumed their positions. I strained to find my son on the dance floor, saw Karen first and as I had hoped saw that my son was next to her. They were very reluctantly releasing each other's hand. \n\nHe had rehearsed the dance constantly; the groom best man, and the rest of the ushers were often at my house to rehearse since I had the largest uncarpeted living room they knew of. They did it so often that I had joined in and I could do it too, although a little stiffly.\n\nI briefly wondered why The Woman was not part of the dance routine. I thought that question would be a good conversation starter later.\n\nMy attention was quickly brought back to my small space, the dancers came close to our area and the people in front had to back-up a little. \n\nThe Woman was already so close to me that any move she made brought her body in contact with mine.\n\nShe did not need to move back for the dancers but she did anyway and fully pressed the back of her body to me.\n\nMy erection was instant and my thin dress slacks did little to contain it, my cock was soon traveling up the woman's inner thigh.\n\nThe dancers moved away and the crowd spread out some but The Woman did not move even as my cock created a small crease for itself right under her crotch.\n\nA few moments later she shifted backwards, even closer to me. She moved her ass in an apparent attempt to accommodate my cock as it pressed into her. I put my free hand on her hip. Soon one of her hands went behind her, grabbed my cock and shifted its position to where she wanted it. Without releasing my dick she pressed her body to mine and imperceptibly rubbed herself on my cock. \n\nI knew I would not be able to keep from ejaculating in my shorts for long but then I got a reprieve, the dance ended to thunderous applause. \n\nAs a waiter was walking by The Woman took the opportunity to place my still full drink and her empty glass on the tray. Reaching back and taking both of my hands into hers she led us to the nearest exit and the elevator. We kissed passionately as we rode up. \n\nWe exited the elevator on the floor above mine and I quickly followed her to her room. As I was closing the door she was flicking off her shoes and I watched as she opened a neck clasp and unzipped her dress, which slithered down her body revealing an amazing Aphrodite of a woman, naked. \n\nThe dress had been the only garment she wore.\n\nI was again reduced to a cartoon character, but this one recovered quickly and his legs had turned to fast spinning wheels moving towards her.\n\nShe was naked in bed and I had only managed to get my coat off. I was in a hurry and I knew she was too so I crawled between her legs and had my mouth on her pussy before I had my shirt off. \n\nI decided to postpone finishing disrobing until I gave her an orgasm thinking I could get nude during her recovery period.\n\nShe loved what I was doing and my plan for undressing would have worked except that her orgasms arrived quickly and her recovery periods were exceptionally short. \n\nI did not mind, she had the most pleasantly aromatic pussy my nose had ever been buried in and her lubricating and cum fluids were the most flavorful of any I ever tasted. I undressed as I lapped up heaven.\n\nShe had just finished her third orgasm when my slacks and shorts at last hit the floor at the foot of the bed and I was finally as naked as she was.\n\nI kissed my way up her body until I was confronted with the most magnificent tits I had ever seen. I moaned.\n\nI licked, nibbled, kissed every millimeter of each tit until I put my face between them and pressed them to me. I became lost in them for a while. The woman seemed to enjoy my adoration of her breasts as many murmured \"Oohs\" slipped from her.\n\nI slid up to kiss her lips and my cock slid into her pussy like a guided missile. We both groaned into our kiss and her hips pressed up driving my cock deep into her. Her pussy was fucking my dick before I had taken my first stroke.This was one horny lady. \n\nI had wanted to make love to her first but the lady clearly wanted a fuck so a fuck it was. \n\nI hoped I would be able to give her a nice orgasm without launching my semen into her and I could still get my love making session. \n\nMortal men do not often get to make love to a goddess; I was going to take all the time she would give me.\n\nShe did most of the fucking but not for long as her orgasm came quickly. It was intense with a groan that seemed to emerge from her very being.\n\nI was very happy with that so I withdrew my still fully functional dick and kissed my way down her body staying at her tits and at her pussy for only a brief period then kissed my way back up. Again my cock slid right into her pussy as I kissed her lips.\n\nIt was then that she realized I had not cum and I was going to fuck her again. The sound she made was like a happy surprise sigh.\n\nAs I kissed every bit of her face and neck I did not take any strokes in and out of her pussy. She pushed her hips up to me rhythmically while pressing down on my ass with her hands. She was obviously getting pleasure out of it so I kept on kissing her and just returned the pressure.\n\nShe wrapped her arms around my body and moaned into my neck when her next orgasm hit.\n\nI gave her a minute to enjoy it then I took over the rhythmic pressure. Slowly with each push I withdrew my cock just a bit so it was now sliding up and down inside her pussy. I slowly increased the distance until my cock was completely out with each stroke then parted her pussy lips with each slow re-entry. She was now moaning and squirming continuously. \n\nSuddenly my cock announced it was time. \n\nI increased my speed and force until I was trying to fuck her back to the twentieth century. I was loosing accuracy so I shortened my strokes into her pussy and increased the speed at which our pubic bones slammed into each other.\n\nI though I might die, my cock was so hard it was not allowing my semen to go through. I was about to try turning her to a different position when she launched herself into a full body orgasm.\n\nHer pussy spasms squeezed my cock hard and that started the flood. I was firing so much cum into her pussy and she was releasing so much pussy juice that the meeting of our bodies made a squishy obscene sound, music to my ears. \n\nShe was gasping and groaning and I was groaning and gasping. \n\nIt took a while before we took back control of our bodies. The aftershocks continued for several minutes as I kept slowly stroking in and out of her pussy. Eventually my cock gave up the ghost and I slid to her side.\n\nWe were on our backs, holding hands when we fell asleep.\n\nNeither of us was a spring chicken and we had been at it for a long time at the end of a long day, we needed the nap.\n\nShe recovered first. I awoke as she was kissing me and as soon as she saw I was alert she straddled my hips.\n\nShe must have been working on my dick before I awoke. Damn nice of her I thought. \n\nShe sunk her pussy over my very erect dick in slow motion heaving a sigh when she hit bottom. \n\nShe put her hands on my shoulders and allowed her nipples to graze my chest. I loved that. So did her nipples.\n\nSometimes a nipple was placed at my lips for me to kiss and lick. I loved that too. So did the nipple.\n\nSometimes she simply pushed her tits into my face. I really loved that. She moaned.\n\nHer fuck started slowly but eventually she lost it completely and started to try to pound me through the mattress. I put my hands on her hips trying to keep her under some control but I soon joined her in her insanity. We were both gasping for air as she tried to fuse our bodies together.\n\nOur orgasms were simultaneous and loud. I could hear our groans bounce off the walls in the stillness of the night. \n\nShe collapsed on me with an oomph, her magnificent breasts cushioning the blow.\n\nShe slowly slid her body to one side of me and we kissed until she was again asleep. I dozed off and when I awoke it was nearly five AM. \n\nI worried that my son would be concerned about me so I got up and somewhat dressed putting on only my slacks and shirt and carrying the rest of my garments in my hands.\n\nI did not want to just simply leave the woman so I knelt on the floor right next to her and kissed her softly hoping to wake her up just enough to say goodnight. \n\nShe returned the first kiss a gave her. She was awake.\n\nHer smile told me I had done the right thing by not leaving her before saying goodnight.\n\nI did intend to do just that but instead I kissed her again. Then I kissed her again, and again, and again. Her hand found my cock. We were both very pleased to see it was as hard as a petrified tree. \n\nShe sat up in bed and helped me undress then slid my cock between her breasts and titty-fucked me. Each time my cock emerged from between her breasts she engulfed the head in her mouth.\n\nThe woman was built for this.\n\nBut my hunger for her was greater and I soon guided her onto her back and swiftly stabbed her with my cock. \n\nShe groaned loudly and we were again trying to fuck each other into oblivion. \n\nMy back and legs were beginning to show the stress of a very long fuck when she gasped and trembled then went limp. I had apparently pushed her into an orgasmic coma. I stopped and raised my body up so I could view my gorgeous prize. \n\nWith no further prompting from me what cum I had left rushed into her womb. \n\nI kissed her until she returned to Earth. I slid to her side and sat on the edge of the bed. I kissed her lips while my hand gently caressed a breast. She took my hand and kissed it then pulled the covers over her body. She was asleep within thirty seconds. \n\nI was very tempted to press my body to hers and spoon the rest of the night away but I again dressed and went to my room.\n\nMy son was not there. Before I panicked I decided that with any luck he had spent the night as I had. To ease my nerves a bit and because I really needed one I took a shower. \n\nI was greatly relieved to see that Mike was asleep in his bed when I came out of the bathroom. He was wearing his slacks and tux coat, but no shirt and no shoes. The rest of his garments were in a pile on the floor. I kicked the pile a bit and sure enough his underwear has part of the pile, but his shoes were not.\n\n\"Attaboy son. No need to win her a teddy bear,\" I whispered to him. \n\nI went to bed and my thoughts turned to The Woman. \n\nI had already conceded that I had just had the best fuck of my life. I was wondering if she was going to be the best fuck I would ever have when it dawned on me that The Woman and I had never exchanged a word all night. \n\nNot one. \n\nMoans and groans yes, words no, not even our names.\n\nI slept for about two hours, got dressed and packed.\n\nI woke up Mike and told him I would wait for him in the hotel coffee shop.\n\nAs I waited for my breakfast in the coffee shop to be ready I noticed the hotels flower shop was about to open. Telling myself it was the least I could do I bought a dozen red roses to be delivered in a box to the guest in room 707. \n\nWhat to say on the card quickly stumped me. Thank you was not nearly enough, I love you was not correct. There were no \"Thanks For The Great Sex\" cards. \n\nEventually I picked a card with no sentiment on it, drew a smiley face, added squiggly eyebrows and a tongue hanging out. It looked just how I felt after a night with her. \n\nI did not put my name on it somehow feeling I needed to preserve the silence between us.",
        "I asked for the flowers to be among their first deliveries since the guest was checking out that morning.\n\nI was back in the coffee shop when my son joined me. \n\n\"So tell me,\" I asked. \"What happened after the old people left?\"\n\n\"Actually I would not know. Karen said she had a leg cramp after the Thriller dance and asked me to help her to her room. I was massaging her leg when I somehow let it slip that you expected that she and I would be married. I meant to say it as a joke but it did not come out that way. \n\nShe told me that we should not disappoint you.\n\nIt took me a second to realize I had just asked Karen to marry me and she had said yes. The rest of the night is a blur but we did agree that in one very important respect we were a perfect match for each other. We confirmed that with a variety of different experiments. All of them successful.\"\n\nI gave my brilliantly blushing son a hug and congratulated him. Then I sent him to the flower shop so he could send Karen a dozen red roses in a box so she could take them home. I told him that the card had to say \"I Love You.\" Nothing else would do. He nodded and was ready to go home in ten minutes. \n\nOur drive back was uneventful except that each time I though of The Redhead I got an erection. An aftershock from the sex almost made me drive off the road.\n\nMy son tried to sleep but he got three phone calls that kept him awake, all three from Karen. The first to ask if he was already on the road and to say that she had his dress shoes, the second was to gush about her flowers, the third was to ask if he had told me what had happened between them.\n\n\"Yes I have\", he said to her. \"He thinks that it is the most intelligent thing I have ever done. I have to admit he is right, this time. The roses were his idea too. He has had a good brain weekend for a change. Owww!\" \n\nThe last he said as I gave him a mild punch to his bicep. The conversation between them degenerated into whispers of endearment and I stopped listening.\n\nAs I drove on I realized that The Woman had taken over most of my thoughts. I regretted not putting my name on the card. Hell, I regretted not putting my phone numbers, address, e-mail, IM, social security and drivers license numbers on the card. \n\nI had begun to fervently wish it had not been a one-night stand.\n\nOnce with her had not been nearly enough.\n\n*\n\nWendy MacDuff was the middle child, the soft one, the loving one. She had seen more than her share of tragedy in her life. Yet she was the rock that anchored her very large extended family.\n\nShe had divorced at twenty-six, had become childless at twenty-eight.\n\nIn a large family of teachers and lawyers she was an artist. She at times sang with the City opera and at times played her oboe with the symphony. Her forte was designing and making jewelry and had acquired a nice following.\n\nShe had relied on her family and close friends for all the love she needed for twenty years. She was happy and as secure as an island fortress. \n\nShe was now forty-five years old and terrified that she may have fallen in love for the first time in her life and yet didn't know his name. \n\nWendy's sex life for the previous twenty years consisted of mostly one-night stands with men and women with women being the majority. Picking up a strange man to fuck had stopped years before. Picking up strange women to fuck was not yet a rare occurrence. She laughed often. \n\nIn the company of strangers she was a different person, she stayed in the background and studied people. Her one-night stands may have thought they had been chosen spontaneously but in fact they had been scouted for some time.\n\nIt had been more than a couple of months since her last sex with anyone but Wendy was not particularly horny. She had a very special toy that her big sister Martha had brought for her from Amsterdam and it did a fine job of satisfying her sexual needs. Its name was Lance.\n\nHer present predicament began the previous Saturday when she had been a bridesmaid at a wedding. She had tried to convince the bride and groom that she was too old for such a thing but they had insisted. They adored Wendy and really wanted her to be part of the ceremony.\n\nThe bride was her niece Margaret, the groom was a photographer named Jason that was already making his reputation in the field. Wendy in fact had several of his prints on the walls of her townhouse. \n\nIt was at a show of his work that a conversation between them brought Jason and Maggie together. Wendy had been present to see the first sparks between them.\n\nHer problem began as she stood by the altar with the other bridesmaids waiting for Maggie to make her entrance. She had suddenly felt eyes boring in on her and searched the pews to make sure she was just imagining things.\n\nShe wasn't.\n\nA man about her age or a bit older was looking at her as if he was lost in the desert and she was ice cream. He quickly averted his eyes when he saw her look at him. She saw him blush. She saw his dimples. \"Very cute,\" she thought. \n\nShe had apparently stared back at him a bit too long because she saw him lift his eyes back towards her. Suddenly a chill ran up her spine raising the hair on the back of her neck as their eyes met. She quickly averted her eyes and felt herself blush.\n\n\"Get a grip old broad, you are acting like a schoolgirl,\" she mentally chastised herself.\n\nShe was saved any further fluster by Mendelssohn's March and beamed as Margaret strolled down the isle.\n\nDuring the ceremony Wendy noted that she felt a bit more at ease in her role as bridesmaid. She was flattered that for at least one man she was the pretty one.\n\nThe passionate kiss between the bride and groom had everyone around her giggling and she glanced at the man with the dimples. He had a big grin on his face as he looked at the spectacle by the altar. When he glanced at Wendy he had a shy smile for her. \n\nThey nodded to each other as she followed the procession out and again she saw him blush which was OK since she felt herself blush too.\n\nShe had many duties to perform as soon as the ceremony ended as her main role was lead wedding coordinator. She had to round up everyone for the photographs then rush to the hotel and get the caterers and bartenders ready. \n\nA small disaster slowed her down when a bottle of champagne that was being opened erupted all over her forcing her to go up to her hotel room and change clothes. Feeling rushed she did not bother putting on any underwear but that was not a rarity for her.\n\nHer hair suffered the worst of it and she hurried to repair it but was late getting back. By the time she made it to the reception the party had already started.\n\nAfter getting something to eat she strolled through the reception to make sure all was going as planned. She also added a discreet search for the man with the dimples to her perusals.\n\nShe found him by a wall next to an exit. She was not surprised to see that he was a people watcher. He had blushed more than once when their eyes met so he also struck her as a shy man.\n\nShe suddenly felt she was in a hurry, she feared that he would soon bolt out the handy exit and vanish before she got a chance to make contact.\n\nWendy quickly walked over to the bartender nearest him and asked her if she knew what the man in the black suit and gray shirt was drinking.\n\n\"Crown on the rocks,\" she said. \"I remember because he is one of the few people tipping me.\"\n\nWendy got two crowns and walked over to him and handed him one. She turned her back to him and joined him in his vigil. \n\nShe heard him catch his breath. That made her smile.\n\nThe crowd around her forced her to adjust her spot and she ended up directly in front of him with her ass against his crotch.\n\nWendy again felt a chill up her spine when she felt his cock harden and begin its journey up. She was wearing a satin dress with no underwear so it felt to her as if she was naked. Her pussy lubricated itself as her nipples tried to stab their way through the dress. She was suddenly as horny as she had been in years.\n\nThe wedding party's Thriller dance forced Wendy further back into him. She was suddenly happy that she was not taking part in it. Her lead wedding planner duties had allowed her little time to rehearse and she had not been able to learn the steps.\n\nHer greater closeness to him increased the contact between his cock and her ass. She could feel it throb.\n\nWendy was the boldest woman most of her friends and family knew but what she did next was well past her most outrageous stunts. She slid a hand behind her, grabbed his cock and placed it against her pussy lips.\n\nShe soon decided that was not nearly good enough for her so as soon as she saw the opportunity she took his hands and led him up to her room.\n\nShe was grateful that as soon as she was naked in bed the man dove for her pussy and stayed there until she had several orgasms. \n\nHe then kissed his way to her tits and loved them as he gently caressed her pussy. Wendy cut short his homage of her tits and urged him to fuck her. Her orgasm from his fuck was very much needed, very satisfying. He gave her time to recover as he kissed her. She drank in his kisses.\n\nWendy was hoping he would stay and fuck her again but expected the usual awkward exit. \n\nInstead he spent the rest of the night loving her, pleasing her. He made her feel adored. She felt like she was the most important being in his world.\n\nTwice they slept and twice they awoke to fuck again,\n\nNear dawn he got dressed and readied to leave. He stopped to kiss her even though she was pretending to be asleep. He wanted to tell her goodbye, a much appreciated but seldom received courtesy.\n\nShe returned his kiss. The ardor of the kisses kept escalating until he undressed again and gave her the most intense orgasm of her recent life. He stayed until she was asleep.\n\nThe next morning a dozen roses were delivered to her. She instantly knew whom they were from; the card had a drawing of an exhausted smiley face on it. \n\nShe said to herself, \"Yeah, that's how I feel too.\"\n\nHer grin turned to a frown when she looked at the back of the card and saw it was blank. He either did not want her to know who he was or he thought she already did; she hoped it was the latter although she truly had no idea who he was.\n\nShe berated herself for not even asking him his name. She suddenly realized that they had never said a word to each other. Not one.\n\nShe added one more possible reason for the blank card; he thought it was what she preferred.\n\nIt had been two days after her tryst when she decided that just a one-night stand with him was unacceptable. \n\nAt the most inopportune time she felt his kisses on her lips, she felt his cock sliding into her pussy. She wanted him.\n\nIt took just one more day to find out who he was.\n\nAfter her sisters Maggie's wedding Wendy's niece Karen had at last become engaged to the guy she adored. His name was Mike and he had adorable dimples. When they came by her Jewelry shop to pick out a ring Wendy led the conversation to Maggie's wedding and the guest list. \n\nShe mentioned that the groom's side had few people in it. Mike agreed and commented that his Dad had told him he did not know anyone around him. Most were likely photographer friends of Jason. \n\nBefore Wendy had the chance to ask which one was his Dad Karen volunteered, \"He was the one in the black suit, the cute one with the dimples, which Mike gratefully inherited. His name is Jim and has known Jason for years.\"\n\nWendy doubted that the two had heard her sigh of relief or noticed her markedly increased humor as they selected a ring.\n\nAs Karen debated between her ring choice finalists Mike told Wendy that they would be grilling at their house late Saturday afternoon and her attendance was mandatory.\n\nThe engagement ring Karen finally chose needed minor adjustments but Wendy promised Karen that she would have it by the weekend. \n\nMike said that would be perfect as they were on their way down the coast to do some \"fishing.\" \n\nKaren confessed to her Aunt Wendy that they had decided to get out of town for a couple of days because they kept getting interrupted by friends and family while she and Mike were trying to get \"better acquainted.\"\n\nAfter some hugs and kisses the young couple left which allowed Wendy to indulge herself in her little happiness dance. She and her man with the dimples were about to enter into a relationship one way or another. Her niece was marrying his son.\n\nShe danced her way to the red roses at the end of her display case and inhaled their aroma. \n\nThey had been with her every minute since Sunday, she brought them to work each morning and took them home each evening. \n\nBy the end of the following afternoon Wendy had finished with the ring and called Karen to tell her. Karen pleaded for Wendy to bring it out to them promising to treat her to dinner. Wendy's weeknights did not encompass anything more interesting than laundry and she loved the beach town they were in so she agreed. The town was just thirty minutes away.\n\nWhen Karen and Mike returned that Friday they stopped at her shop and Karen pretended that Wendy had not seen the ring and fished for compliments. Wendy humored her then passed Mike an envelope to give to his dad. His pet shop would be their next stop on the way home as Mike had equipment to drop off.\n\nWhen asked Wendy told them that she was just asking Jim for a good time to get together. As she expected Karen and Mike assumed that it was about his role in their wedding.\n\n\"He is going to be at the grilling tomorrow afternoon too, you could talk to him then,\" Karen said.\n\n\"Good, but give him that anyway so he will know what to expect,\" Wendy countered. She tried to keep her grin and voice free of mischievous overtones.\n\nAs soon as Mike and Karen left Wendy began to shake. The contents of the envelope was going to place her at the mercy of a man, something she had swore to herself years before she would never do again.\n\nThe only thing in the envelope was the card that came with her roses the previous weekend. She had added one word next to the exhausted smiley face. \"Again?\"\n\nShe had suddenly worried that the answer could be, 'No, thanks.\"\n\n*\n\nA week had passed since Jim's fuckathon with the mysterious Redheaded Woman after a wedding reception. On his long workday that following Monday his obsession with her took hold. On Tuesday he started a discreet search for her identity.\n\nHe had no luck in finding out who she was but figured that he only needed to wait for his future daughter-in-law Karen to return to town. She and The Redhead had been bridesmaids at the wedding. His son Mike and his fianc\u00e9e were on a \"fishing trip.\" \n\nThe following Friday morning Jim was at work. He owned the only pet shop in the coastal town of Felicity and needed to get to work early and check on his creatures. He seldom kept high maintenance pets in his shop; he kept no dogs or cats. \n\nJim could get his customers good dogs and fancy cats from reputable breeders in the area but the bulk of his trade was in aquarium fish, some reptiles, and the better brands of dog and cat food. His shop carried a full complement of pet supplies.\n\nIn truth the pet shop was not much of a money making proposition, It paid for itself and his few part time employees and maybe for a nice trip somewhere once a year. He hired a manager full time each summer, normally a college biology or pre-vet major. Jim's primary shop income came from leasing aquariums to offices and homes. He had customers as far as sixty miles away at the edge of The City. Many of his aquariums were in Dentist's waiting rooms.\n\nAfter his shop manager arrived he did his usual Friday rounds and when he returned to the shop around noon he was surprised and pleased to see Mike and Karen waiting for him. Mike said that they had just returned from their trip but stopped by on their way home to say hello and return some of his equipment.\n\nMike said, \"Come to our house Saturday at about four, we will be grilling some steaks and showing off our pictures.\"\n\nAfter a short euphemism filled conversation between father and son that made Karen blush she said to Jim, \"Here, Aunt Wendy sent you this.\"\n\nShe handed Jim an envelope as they were getting ready to leave, which he put on his desk assuming it was something about his role in the upcoming nuptials. Her Aunt Wendy was the lead wedding planner. Jim had not met her but had heard the name mentioned when a conversation had veered towards the event. \n\nThe envelope told him she was the Wendy in Wendy's Custom Jewelry and Antiques. He passed by her shop on the days he headed towards the freeway but had never seen its doors open. He went past it early in the mornings and early in the evening.\n\nMike and Karen had left before Jim had a chance to ask Karen about his redhead but he figured that conversation would seem less suspicious Saturday. \n\nJim lived in the midst of ten wooded acres that contained six large old houses. A wildlife preserve surrounded the forest around him. He thought of it as camping out with all the conveniences.\n\nHe had bought the place three years before, right after Mike had secured his first teaching job after his college graduation. Most of the restoration and improvement were done and he had already decided that was where he was going to die. His first career had demanded that he and Mike move often and he had decided he was never moving again.\n\nIt was a beautiful night as he sat on his screened back porch and ate supper as the neighborhood deer trooped through his back yard. After he was done he cleaned up and returned to the porch with a Dos Equis and waited for Celia to come get her dog biscuit. Celia was the friendly neighborhood raccoon. \n\nHe was back inside on his recliner watching the news when he remembered the envelope. As soon as the news was over he picked it up and slid its contents out. It immediately cost him most of a night's sleep.\n\nThe only thing inside was a card, the type of card you send with flowers. It had his drawing of a smiley face with a goofy expression. Next to the smiley face was written one word. \"Again?\"\n\nWendy was his Redheaded Woman! She was asking for seconds!\n\nJim felt his entire body blush, his erection was instantaneous. He took off his gym shorts and went to the back porch to masturbate. Even though his ejaculation had been worthy of natural wonder designation it had taken less than two minutes and he was still agitated. \n\nIt suddenly occurred to Jim that he would see her the following day at his son's house and that made his agitation worse so he channeled his energy into cleaning his mostly clean home. \n\nHe followed that by washing any garment he had that had the possibility it would be worn Saturday afternoon even if it was already clean. He had decided that he was going to be as handsome as a forty-nine year old man could be. OK, fifty two.\n\nIt never occurred to Jim to ask himself why his reunion with Wendy was so all-important to him, he just knew it was. It was two in the morning and another masturbation later before he could get to sleep.\n\nEven though his Saturday was very busy he found the hours going by in slow motion. He did call Karen early that afternoon to see how they were doing and to casually ask if she knew for sure that her Aunt Wendy would be there. Karen told him that yes she would be.\n\nJim knew he had plenty of time and could relax a bit but found that to be impossible. He made it to just past two in the afternoon before he gave up and asked his manager to close up for him.\n\nJim called Mike and asked if he needed anything.\n\n\"Yes, Dad. Glad you called. There are a lot more people coming than we expected. We need six more steaks, and more hot dogs and buns, and a case of beer. A couple of bottles of Ste. Genevieve Sweet Red wine would be a good idea too. And some ice. And some chairs.\"",
        "\"Got it. See you shortly.\" Jim surmised that his son's mostly small family soiree had become a full-blown engagement party.\n\nJim was very happy to have tasks to accomplish, and a good excuse to arrive early. He went home first since it was on the way and took a quick shower and dressed. Khaki shorts and sandals were no-brainers, it was mid-June in Texas. The shirt was a harder decision and he tried on four before going back to his original choice, a mint green polo shirt.\n\nHe loaded his own grill into his truck along with his big ice chest and four porch chairs then stopped by the town's only supermarket. He got the beer, hot dogs and steaks. Figuring that the crowd was likely to be mostly women he got six bottles of the Sweet Red. He also bought a pack of plastic cups and and a big package of napkins. He placed the wine and the beer in the ice chest then covered them with ice. He wanted the drinks to be cold by the time the guests arrived.\n\nThe day had just barely started to cool down when he arrived at his son's house but his yard had a couple of shade trees and a nice breeze going through it so it was comfortable. He helped Mike set up in the yard and got the grills started. \n\nThe coals were at optimum by the time the guests began to arrive so Jim started the grilling allowing Mike to greet and mingle. After a while Jason, the newly wedded friend of Mike's volunteered to take over at the grills. It had been his wedding that brought Wendy into Jim's life. \n\nJim learned from Jason that his honeymoon was on hold as they waited for the arrival of his bride Maggie's passport. They were going to Bora Bora.\n\nMargaret was Karen's sister and soon volunteered to assist Jason with the grilling so Jim went inside the house to see if Wendy was there.\n\nThe gathering had turned into a spontaneous wedding shower. Women were wandering in carrying presents for Karen and Mike. A large part of the crowd had been involved with moving Karen into the house and their presents reflected on the things they thought Mike and Karen needed, like three toasters. Jim was impressed, Mike was stunned, and Karen was in tears.\n\nA car full of redheaded women arrived but before Jim could check it out Mike asked him to start the slide show on their TV.\n\nJim started the show and the first photograph got everyone's attention. It was a shot of Mike's naked backside as he stood on a bed trying to remove a bra from the blades of a ceiling fan. After all of the whoops and holler subsided Jim pressed the start slideshow button and the guests watched a somewhat more normal set of photos. \n\nTheir open water fishing expedition had been successful; Mike caught a nice size barracuda and an even nicer size grouper. Karen caught two king mackerels and a small shark that was allowed to return to the sea. The fish were ready for the grill Jim had noted.\n\nThere were several photos of Mike as he and his butterfly net tried to collect living specimens in the surf. There were photos of what he captured as they swam in a bucket and photos of the same creatures in his marine aquarium, which was on the wall behind them. That elicited some oohs, and aahs.\n\nThe last set of photos captured Mike placing an engagement ring on Karen's finger, followed by the kiss after that was accomplished, then a close-up of the ring. Even though no naughty bits were visible it was obvious that they were both nude during the sequence.\n\nThe slide show ended with a photo of their naked backsides, Karen had the word \"The\" written on her butt. Mike had the word \"End\" written on his butt. \"The End.\"\n\nThe boos and hisses battled with the applause as everyone hugged and kissed them.\n\nJim had busied himself re-setting the slide show to a continuous loop when suddenly Karen just squealed. She ran toward a near mirror image of herself that had just walked through the door and hugged her fiercely. As Jim turned and watched the apparently unexpected reunion a pair of arms slid around his waist from the back and lips kissed his neck. He felt magnificent breasts press hard onto his back.\n\nIt was she, his Redheaded Woman, Wendy.\n\n\"Sorry I am late,\" she said. \"I had to wait for Carly to drive in from The City. Carly and Karen have been best friends since they were in diapers. She did not know where the house was so she drove to my home and I guided her here. We came in her car and she will likely be spending the night. I will need a ride home, or somewhere.\"\n\n\"Is now too soon?\" Jim asked.\n\nWendy giggled and said, \"Yes, now is too soon. I have to mingle and hug. I am also starving so if you can guide me to the food I would appreciate it.\"\n\n\"How much PDA am I allowed?\"\n\n\"All you want. I like to shock the family when I can. Maybe we can get Mike to introduce us and we throw our drinks to the ground and jump right into a passionate kiss.\"\n\n\"That would have been fine but everyone is already wondering why your arms are around me while you whisper in my ear. I am wondering why they are all grinning.\"\n\n\"They always expect some outrageous behavior from me. They probably think this is my stunt for the day. Or it could be that Mike just told them I took the last five pictures after I delivered Karen's ring to him. Oh well, lead me to the food please.\"\n\nAs soon as Jim had her in the back yard he took Wendy in his arms and kissed her passionately. \"I missed you,\" he said.\n\nWendy kissed him and said, \"It has only been a week.\"\n\n\"The longest week of my life,\" he said as he kissed her again.\n\nThey eventually made it to the grill and Wendy chose her steak for Jason to grill.\n\n\"How do you like it?\" he asked Wendy.\n\n\"About the way it is now,\" she said as she grasped Jim's crotch.\n\n\"That is dessert, he was asking about your steak,\" Jim said with a chuckle.\n\n\"Oh, medium would be fine,\" she said to Jason after releasing Jim. \n\nJim wanted the biggest of the grouper filets.\n\nJason and Margaret had greeted Wendy with love and lip kisses. She was obviously one of their most beloved people in their world. They had grinned when they saw Wendy take liberties with Jim's body. It was nothing new to them as Wendy was prone to very risqu\u00e9 attention getters.\n\nMaggie and Jason were in the small minority of people Jim knew at the gathering and was OK that they were the audience to the stunt. He was however blushing.\n\nMaggie however suspected that Wendy's act with Jim was more than just her usual stunt; she thought she was seeing a genuine closeness and maybe a history between them but her gentle interrogation did not give her anything to confirm her suspicions.\n\nAll her Aunt Wendy said was that they had seen each other at the wedding but never spoke.\n\nJim and Wendy sat on lawn chairs and ate their food and talked. Jim loved her voice and reminded himself that on their first tryst neither had spoken. They kissed when Jason and Maggie kissed, which was often. \n\nDuring their conversation his gestures made soft contact with her breasts often. She twice wiped off an imaginary spill off his crotch. Margaret was becoming convinced that her suspicions were correct.\n\nTheir little games were interrupted as they were at the ice chest grabbing a couple of beers. A stream of people came outside after smelling the food. All of them detoured on their way to the grills to hug and kiss Wendy before continuing their quest. \n\nJim noted the deep and genuine love and affection everyone held for Wendy. All hugs for her were full and strong and all her kisses were lip kisses. He became very proud to be seen with her.\n\nAs he had expected the soiree was ninety percent women, sixty percent redhead. Husbands, boyfriends, work friends comprised the small male population but it included a couple of tall redheaded guys that were obviously family. Everyone seemed to love everyone unconditionally including several blondes, a mother daughter hispanic couple and a black girl. Jim noted that Jason was already inside the circle of family and so was Mike.\n\nJim suddenly felt like an outsider.\n\nWendy soon noted that few knew who Jim was so she began to introduce him to all that came by. Her hands stayed somewhere on Jim's body throughout the greet and meet, most often on his ass. He worried a bit about that but noticed that in the crowd most un-occupied hands were resting on someone's ass. There was a lot of kissing.\n\nIntroducing him as Mike's father seemed to satisfy most people's curiosity about their apparent closeness although Margaret appeared to have shared her suspicions about them with every redheaded female. There were many redheaded females.\n\nJim was introduced to Maggie and Karen's mother Mo who immediately kissed him and began some serious flirtations. Jim saw that most of that was to get a reaction from her sister. Wendy did react and hissed her threats of serious injury to Mo. As they defiantly went face to face they kissed each other softly on the lips. \n\nDuring their subsequent embrace Mo whispered something to Wendy's ear, which elicited a quick slap to her ass. Mo walked away giggling as Wendy told Jim, \"The sad part is that she is the sanest one of my sisters.\n\nHe met two other sisters, both short, one older and one younger than Wendy. The older one asked him a few questions and Jim felt he had given her answers she wanted to hear because she suddenly kissed him.\n\nAfter that it seemed that everyone suspected something.\n\nThey drank their beers then returned to the house and smooched their way through the crowd until they found themselves by the door when someone came in carrying a large gift, they slipped out. Ten minutes later they were in his carport in the midst of a passionate kiss, her hand on his dick his on her pussy.\n\nThey broke the kiss and literally ran into the house. Both were naked by the time they got to the bed but their frenetic pace came to a halt as soon as his cock was buried in her pussy.\n\nAfter a tender kiss Wendy said, \"I missed you too.\"\n\nPerhaps it was because they were no longer strangers. Perhaps it was because they knew it was not a one-night stand. Perhaps it was because they knew that the following morning they would still be together. But for whatever reason it was lovemaking from the start. \n\nJim gave Wendy an orgasm, stopped to rain kisses on her, and then loved her to another orgasm. That continued for nearly an hour, for a thousand kisses, and in three different positions.\n\nJim's ejaculation came with no warning. They were on their sides facing each other, the head of his dick barely inside the outer folds of her pussy. His hand was pressing her back towards him so he could get the full effect of her breasts on his chest. They were in an intense kiss but were not moving at all. He suddenly erupted into her. Some of his ejaculate shot right onto her clit and she flew into her own orgasm.\n\nThey held each other tightly until their storms ebbed. They kissed.\n\n\"Now that was special,\" Wendy whispered to Jim.\n\n\"It certainly was,\" Jim said. \"And messy.\"\n\nAfter a few moments Wendy got up and went to the bathroom then wandered off, exploring his house. Jim did some emergency cleaning on the bed then after his own trip to the bathroom followed her. \n\nHe was glad that during his manic episode he had cleaned the place. He was sorry she had missed his pride and joy, a two hundred fifty gallon marine aquarium. The automatic timer had already turned the main lights off. Night had fallen in his personal sea world. In truth his pet shop was mostly so he could order what he wanted for his tank and only pay wholesale for them. Then he smiled to himself as he realized that Wendy would see it in the morning.\n\nWendy paused by the door to the back porch and thought the house reminded her of her father's house, her house as a child and young woman. She had grown up with four sisters and a brother. Hers was a big, loud, loving family and she grew up in a house to match.\n\nShe suddenly had tears falling down her cheeks, which nearly panicked Jim. Before he could ask what the problem was she said, \"It's OK. I just suddenly missed my Dad. He died almost five years ago. Our house was an extra large version of this house. A friend of the family bought it and it is now the women's shelter.\"\n\n\"Really?\" I go there once a month and bring pets for the kids to play with. I have a large freshwater aquarium set up for them there. I love the house and what they provide.\"\n\nWendy said, \"I volunteered to be a hostess at the shelter but I still burst into tears when I walk in. I had to beg off.\"\n\nJim walked up to her back and embraced her. She folded her arms over his and leaned back to him.\n\nAfter a few minutes Wendy said, \"There is a large hairy creature trying to get into the porch.\"\n\nJim looked out and said, \"That's Celia. She is mad because she thinks I am cheating on her. Or maybe that I forgot her treat.\"\n\nJim went to the treat jar and then took her milk bone out to her. Wendy followed him out and asked, \"Aren't you afraid of rabies, fleas, cooties?\"\n\n\"I catch her once a year and give her all the shots and inspect her for injuries and parasites. She has gotten to where she tolerates it. I also gave her babies shots when she presented them to me. That traumatized them a bit and none of her kits has ever come back to visit except for one daughter. She has her own kits to worry about now. Celia is too old for babies but she is still in good health.\"\n\n\"Where does she live?\"\n\n\"She has an apartment under the porch. It is nice and cozy and protects her from bad weather, the neighbor's dog, and the neighborhood bobcat. If things get really hairy for her she knows how to open the screen door. She has a safe house on an old oak tree by the bayou. The bayou is down by that tree line. That is where she goes to work.\"\n\nJim asked Wendy to slowly put the back of her hand about six inches in front of Celia's nose and hold it still. Wendy managed even as she felt whiskers tickle her hand. She then heard Jim explain to Celia that the naked redheaded woman with him was a dear person and that she would be her friend. Wendy was taken aback when Celia gave every indication that she understood what he said and gave her a soft chirp before leaving.\n\nWendy was still mentally enjoying her encounter with the raccoon when Jim said, \"Let me introduce you to a delicious Shiraz and some mouthwatering cheese.\" He invited Wendy to sit on his swing and went into the kitchen.\n\nHe returned a few moments later with coffee mugs and an opened bottle of wine. He poured a cup for Wendy and she smiled. \"I am drinking wine from a coffee mug\" she thought.\n\nJim went back to the kitchen to get the cheese and quickly returned.\n\n\"This wine is terrific. Where did you get it?\"\n\n\"One of my clients is in the import business, mostly stuff from Australia and New Zealand. The shiraz is from south Australia, the cheese from New Zealand.\"\n\nThey sat close together on the swing, taking sips of wine and bites of cheese in silence as they watched the flickering lights of the lightening bugs by the tree line. A large buck surprised them as he walked by from the side of the house. He glanced at them but did not change his pace as he walked towards the tree line by the bayou. Somehow the encounter made Wendy feel alive.\n\nJim refilled her glass but not his. He wanted his hands free. Jim draped his arm over her shoulder and brought her closer to him. She leaned against him. He gently traced the outline of her jaw, her shoulder, and her breasts with his fingertips as he kissed her neck. Wendy sighed and put her cup down. When his fingers reached her nipples she turned to him and kissed him. Her hand went to his cock and she noted it had returned to life. \n\nShe helped him pick up the cheeses and wine and take them to the kitchen. They were soon on his bed, Wendy slowly descending onto his cock. Penetration was so delicious that she repeated the process.\n\n\"You have the best body I have ever seen,\" Jim said to her.\n\nWendy blushed and said, \"Thank you kind sir but there is no need for fibbing. Your cock is already buried in my pussy.\"\n\n\"It appears I have a statement to prove.\"\n\nJim coaxed her off his body and placed her on her tummy. He kissed and licked Wendy's body from her toes to her neck with a long stop at her ass. There he had urged her to raise her hips a bit and fingerfucked her pussy while he adored her ass. Her orgasm gave him permission to continue his journey upward. \n\nAfter he adored her neck Jim urged her onto her back and repeated his journey, again starting at the toes. When he got to her pussy he placed his arms under her thighs and settled in for a feast. Her third extra intense orgasm had Wendy urging him to continue his trip upward; her pussy apparently needed a rest, or a cock.\n\nJim kissed and licked Wendy's torso side to side until it was time to pay homage to her tits. They were not enormous tits, maybe a C+ or a bit bigger but on her slender sexy body they made a bold statement. They were magnificent. If there was any sag to them Jim had not noticed. He was grateful to have free access to them.\n\nHe would have been content to stay adoring her breasts until morning but Wendy's hands were desperately searching for his dick. Jim slid up her body for a kiss and Wendy immediately rammed his cock into her pussy. Her growl told Jim it was not a good time to be gentle and adoring. \n\nHe started to fuck her hard and listened in wonder to her orgasmic moans. Soon his voice was accompanying hers and they just exploded together. The aftershocks had him fucking her long after he was empty. With a whimper they stopped and separated. While he was trying to figure out who whimpered Wendy turned to him and kissed him.\n\n\"Thanks,\" she said.\n\n\"Anytime,\" he said.\n\n\"That will be often,\" she said.\n\nThey kissed and caressed until Wendy yawned. They assumed the spooning position and promptly fell asleep. There were no interim episodes that night. They both knew the other would still be there in the morning.\n\nBefore she fell asleep Wendy thought their sex that night had been even better than the one from the previous week. She asked herself why since that sex had been brilliantly passionate and came to the conclusion that it was because they were not strangers trying desperately to make it through the night. \n\nThey were lovers, or at least she hoped they were. \n\nHe treated her like they were. She was wondering if that was good enough when she fell asleep.\n\nWhen she awoke Sunday he was already making love to her. He was softly kissing her from her hip to her neck. His fingers where in the midst of petal soft touches on her pussy lips. \n\nShe turned to face him and draped a leg over his hips. She guided his very hard cock into her as she embraced him. She continued her motion until she was astride his hips. Wendy fucked him gently, lovingly. \n\nThe last thirty seconds of their fuck however were frenetic. Wendy's pussy told his cock \"now!\" and his cock answered \"now is good\" and they quickly led their bodies into spectacular orgasms.\n\nWendy draped her body over his as they both fought for air; a task made more difficult by the fact neither was about to release the other from the embrace. \n\nShortly after Jim's cock bade a fond farewell to Wendy's pussy they got up and went to the bathroom together. They watched each other piss and later shared his toothbrush.\n\nWendy reminded herself that she had placed a toothbrush in her purse but had no idea where her purse was. She thought sharing his toothbrush was neat.\n\nThey remained nude as he fixed her breakfast and treated her as if she belonged there, in his house with him. \n\nThey finished their coffee on the big recliner in front of his aquarium. Wendy was fascinated by it and had a lot of questions for him but did not want to break the loving silence they were enveloped in. \n\nShe loved where she was, in his house, naked on his lap, sipping coffee on a lazy Sunday morning.",
        "They eventually made their way out to the back porch. They had remained nude. \n\nWendy noticed that there was a hot tub at the far end of the porch that she had not seen the night before. \n\n\"OOH! I love hot tubs,\" Wendy exclaimed\n\nJim took her hand and led her to it and took the cover off. As soon as he flipped two switches he assisted her as they got in.\n\nWendy moaned in pleasure as she sank into the waters. Jim sat next to her and put his arm around her shoulders. They again entered into their silent universe and just enjoyed the other's close companionship.\n\nAfter a while Jim reached over to a corner of the wide counter that surrounded three sides of the hot tub and pushed a button activating the lower jets in the tub. Wendy giggled when they tickled the bottom of her feet. Jim said it is the best thing in the world when your feet hurt. \n\nWendy talked about her family and commented on the one's he had met the day before. Jim asked her if her sister Mo had given her any indication about what she thought about him.\n\n\"What? You want to know if she wants you too? You Casanova you,\" Wendy said with a slightly worried smile.\n\nJim laughed and said, \"No, I just wondered if she warned you against me in some way.\"\n\n\"Why do you want to know that?\"\n\n\"Because I can see that if your family does not approve of me I have no chance.\"\n\nWendy's mind reeled. He was correct in his analysis of course and was impressed that he had seen that right away. Some of her previous suitors had been shot down after barely making it to second base. No one had veto powers over anyone in the family but they trusted each other's instincts.\n\nWhat sent Wendy's mind reeling was the \"having no chance\" part of his sentence; it had her heart singing. \n\nHe did not know he had already won.\n\nShe said, \"Everyone told me how good we look together. Many told me you must be a great guy because Mike is so proud of you. Mo congratulated me, sort of.\"\n\nJim raised his brow and waited for her explanation.\n\n\"OK, she told me she was glad I had at last picked on somebody of our own species.\"\n\nJim laughed and said, I don't think I want to know about your former boyfriends then.\"\n\n\"None were boyfriends, most were guys she had fixed me up with in the first place. Some of them were guys she was discarding. She is always giving me her hand-me-downs.\" \"I thought she was younger than you?\"\n\n\"No comment.\"\n\nAfter a few more quiet laughs Jim resumed kissing and caressing Wendy. As one of his hands began to caress her red pubic hair her hand sought out and found Jim's cock. They enjoyed the warm water and each other. Wendy added the experience to her list of favorite things, although in no danger of unseating kissing Jim as number one.\n\nShe gave Jim a long soft kiss that was soon multiplying itself exponentially. Soon their caresses began to have purpose. \n\nAs soon as Wendy felt that Jim's cock was solidly erect she stood and turned away then bent her body forward as she placed her elbows on the ledge. \n\nShe spread her legs.\n\nJim saw an offer he could not refuse and soon Wendy felt his cock slowly slide into her pussy as one of his hands reached around and searched for her clit. \n\nWendy was not particularly fond of the position and seldom had an orgasm in it however she thought it was most men's favorite so she presented herself for him. But Jim understood its limitations and went out of his way to involve the rest of Wendy's body. \n\nHe caressed Wendy from her thighs to her breasts on one side of her body then switched the hand on her pussy and caressed her other side. \n\nHe kept his strokes long and slow giving Wendy maximum sensation. At times he paused his cockhead at her pussy lips and re-entered her slowly.\n\nWendy loved that and was soon having mini-orgasms from just that.\n\nAfter an extra long pause at her pussy lips Jim rammed his cock deep into her and continued to do so until Wendy announce a major orgasm with a deep moan.\n\nWhile she was still in the midst of her cum Jim quickly turned her around and sat her on the ledge of the tub, then rammed his cock back into her pussy well before her orgasm had faded. He kissed her hard as he fucked her with abandon. \n\nWendy wrapped her arms and legs around him and burst into the best orgasm of her life, again. \n\nIts intensity had her sobbing then giggling. She could feel Jim shudder. \n\nThey did not want to release the other so they did not; he sat them down in the tub as they held onto each other.\n\nThey kissed softly, in silence. \n\nEach was afraid to speak because they knew that if they did \"I love you\" would be the first words out of their mouth. \n\nThey were \"saved\" by the sound of the back door opening. Jim's son Mike was walking onto the porch with two of his Dad's chairs. He was returning the stuff he had borrowed from him for the previous day's grilling at his house.\n\nJim and Wendy did not have the time to uncouple so they just said hi to him.\n\nMike gave them a big grin then looked into the house and said, \"Karen, come here. Maggie was right!\"\n\nKaren came out and did a double take when she saw her obviously naked Aunt Wendy sitting on her soon to be father-in-laws equally naked lap as she was facing him.\n\nShe clapped her hands and squealed then jumped into the tub fully clothed to hug her.\n\nKaren rained kisses on her Aunt Wendy and kissed Jim for the first time.\n\nShe told Jim, \"If you hurt her I will rip your pancreas off and your son's too.\"\n\n\"Karen! Ladies do not rip pancreas off. They intimate that there would be dire consequences if they are not pleased.\"\n\n\"What she said,\" Karen added and kissed Jim again.\n\n\"Baby, take off your clothes. The tub water might ruin them,\" Wendy said.\n\nShe somewhat expected her niece to go in the house to do that but instead Karen took off her clothes while in the tub. Wendy was not too surprised. But Jim certainly was.\n\nWhen Mike came back with two more chairs Karen asked him to put her clothes in the rinse cycle of the washer then to come join them when he was through.\n\nMike took note that everyone was nude so when he returned he took off his shorts and t-shirt and got in the tub.\n\nKaren had just figured out that Jim's dick was very likely in Wendy's pussy and suddenly worried that she and Mike had interrupted something.\n\n\"I'm sorry Aunt Wendy, were you two, umm, busy?\"\n\n\"No baby, we had already finished our laps.\"\n\nThe girls giggled, the men blushed.\n\nWendy had noticed that the father had a bigger dick than the son so she gave it a prideful vaginal squeeze.\n\nJim shuddered and Wendy sensed that his nearly soft dick had reversed its course.\n\nShe wondered if he had experienced exhibitionism before.\n\n\"Probably not,\" she concluded.\n\nShe continued to give his cock playful hugs with her pussy as she and Karen carried on a conversation about the party. \n\nKaren told Wendy that she and Jim were the subject of a lot of conversation especially after someone noticed they were both gone.\n\n\"It goes to show you that sometimes the most outlandish rumors are true,\" Karen added.\n\n\"Was anybody upset over that?\" Wendy asked for Jim's benefit.\n\n\"No, of course not. Mom said that she dearly hoped you did not fuck it up.\"\n\nJim was very happy to hear that exchange and knew that Wendy had asked the question for him knowing what the answer would be. He kissed her shoulder as he said a silent \"I love you.\"\n\n\"Anything else of interest?\" Wendy asked.\n\n\"Carly has a secret of some kind, Karen answered. \"She denied she did but you know I can read her like a book. Remember she accepted the bridal bouquet when Maggie threw it back at her. I had expected Maggie to throw it at me. Now that I think about it she was probably throwing it at me but she does have a scatter arm. Still I expected Carly to pass it on and she didn't. I need torture devices of some kind, I need to make some people talk.\"\n\n\"Please ignore that request,\" Mike said immediately.\n\nKaren said, \"Hey, I know how to make you talk,\" and grabbed his cock as she kissed him passionately.\n\nJim had heard but not seen the byplay across the tub and became alarmed when Wendy slipped off his lap and grabbed his cock that what was now in a full-blown erection. \n\nHe quickly reached to the corner of the tub and hit the bubbler button hoping the bubbles would hide his hard cock before Karen saw it. \n\nWendy however had seen Karen grab Mike's cock in her hand and begin to slowly masturbate him so she took Jim's cock in her hand and began to masturbate him too.\n\nWendy gave Jim a deep kiss as she continued to work his cock. She heard his son groan then heard Jim groan. The bubbles did not permit any visible evidence of their ejaculation but it was very obvious the men were spent.\n\nAfter a few kisses to aid in his decompression Wendy said, \"Sweetheart, why don't you and your son set up the grill for hamburgers? We promise to have something special for you after lunch.\"\n\nJim and Mike had decided that getting out of the tub would be a good thing so they gladly followed the suggestion.\n\nWendy and Karen moved next to each other in the tub and shared a good kiss. \n\nKaren said. \"I love you,\" and kissed Wendy all around her face with a hard tongue darting kiss as an exclamation point.\n\n\"I am so happy for you,\" Karen added as she hugged Wendy.\n\nAfter a few moments to enjoy the hug Wendy asked Karen if she had her wedding party picked. \n\n\"Yes, I took care of that last night. Carly is the Maid of Honor as you expected and the attending vassals are my sisters plus Charley and Clara and Rhonda. \n\n\"I am not surprised by any of that, in fact that would have been my exact guess. Any preferences on the chapel?\"\n\n\"No, either of the two last ones would be fine if you can get one.\"\n\n\"Weapons?\"\n\n\"Cream pies.\"\n\n\"Food?\"\n\n\"Sea food.\"\n\n\"The big question, the costume designers?\"\n\n\"Aunt Amanda, Maggie and Clara.\" \n\nAt that time the guys came out with towels and t-shirts for Wendy and Karen then went to the yard to start the grill. \n\nKaren commented that she better get out since there was so much sperm in the water she was sure to get pregnant.\n\nThey both laughed confident at its impossibility and got out of the hot tub, dried their bodies in full sight of the guys then put on the t-shirts. The shirts fit Karen like a comfortable summer dress but Wendy's just barely covered her pussy..\n\n\"Have you told Jim about our family's decorum or lack thereof?\"\n\n\"No, but I think he is beginning to suspect.\"\n\nAfter another good laugh they went inside and noticed that there were a lot of shrimp in a bowl apparently marinating in herbs.\n\n\"We seem to be having shrimp on the barbie for lunch instead of hamburger,\" Wendy commented. \"Lets look around and see what else we can add.\"\n\nIt was a delicious lunch and as promised the ladies had something special for them, a nap time in which no one came close to getting any rest.\n\nEven though Mike's bedroom was the opposite side of the house Wendy heard Karen groan in triumph. She announced her own a short time later.\n\nThe four had a very nice day together. The wedding had a battle plan that included a shock from Karen. \n\nShe asked Jim to walk her down the aisle. \n\nHe said he would be honored to do so.\n\nWendy was so proud of both she did not quite contain her tears.\n\nLate in the afternoon it became obvious that Karen and Mike were going to spend the night. Mike's bedroom was still as he left it when he bought his own house, only clean. \n\nIt had been his bedroom only for a bit over a year, from his college graduation to the end of his first teaching year.\n\nWendy got Karen to help her come up with supper, which turned out to be hamburgers.\n\nMike introduced Karen to Celia but he quickly admonished her not to pet the creature. She was advised that Celia was not a pet but simply a friend of the family. Celia was a wild animal.\n\nOf course Karen went ahead and pet her anyway and Celia chirped in appreciation. As soon as Celia left Karen turned to Mike and stuck her tongue out at him. Mike rolled his eyes and shook his head.\n\nThey ended up back in the hot tub that night, all four of them again nude. Wendy and Karen made no attempt to disguise their hands quick journey to their man's cock. \n\nJim apparently decided not to worry about it and did not turn the bubbler on. It was too loud anyway. \n\nThey sat in silence for a while until Mike related the story about a possum that had somehow gotten into the girls dressing room at their school gym. \n\nHe had always lectured the students not to approach wild creatures and that the only time they were dangerous was when they were scared. \n\nHe told the kids, \"If you are close enough to have the creatures undivided attention you are too close, back off.\"\n\nMike was asked by the principal to go remove the possum from the locker room since he was the life science teacher.\n\nMike knew possums were not a real problem, they hiss and show you a mouth full of the largest number of teeth of any mammal but it is a bluff. He also knew he should not scare it into \"playing dead\" as they release all their body odors at once when they did so. \n\nMike and his father were convinced that possums did not \"play dead\" and just simply fainted as they belched and farted. Their intelligence level was just a few drops deep.\n\nAfter he picked up a cage and capture net Mike headed to the gym. As he was about to go into the locker room he saw Karen coming out with the possum in her arms partially wrapped in a towel. \n\nMike said he was mortified, a useful lesson shot down by this perky, terminally cute redhead. He lectured Karen about her actions as he followed her to her classroom. She calmly opened a cabinet and talked the possum into getting in it then closed it.\n\nThe first thing she ever said to Mike was to invite him to come with her after school when she released the possum.\n\nThat afternoon they drove to the wildlife preserve and released the creature then ate dinner together at a pizza joint. The friendship that began that day had progressed to the point of a formal engagement. \n\nA possum brought them together.\n\nWendy commented that they knew couples that had been brought together by basset hounds and rattlesnakes. Karen nodded but Wendy saw that Mike and Jim drew a blank. She kissed Jim and said, \"I'll tell you the stories later.\" \n\nShe assumed Karen would clue Mike.\n\nThe ladies noticed that the cocks in their hands were as firm as they could possibly get and knew that ejaculating into the tubs waters again would be counterproductive so they faked exaggerated yawns and led their men to bed.\n\nWendy had decided that she was going to please Jim the best she could so it was woman on top for a slow ride. She had several orgasms before he had a very fulfilling one. She stayed astride his hips, draped her body over his and kissed him. He hugged her tightly to him. \n\nThey kissed softly and rested.\n\nWendy slid off Jim's body and onto her side facing away from him and he quickly wrapped an arm around her and kissed her shoulder. Wendy placed her hands over his and cuddled closer to him. She soon noted that Jim had fallen asleep.\n\nShe could not sleep. \n\nShe had tried to tell him she loved him several times that day and night but lost her nerve each time. \n\nShe decided it was too soon to bring that up. \n\nToo soon to lay that burden on him.\n\nBut it was certainly true that she was in love with him.\n\nDeeply in love with him.\n\nShe worried she would scare him away, (unlikely). \n\nShe worried that all she was to him was pussy and tits, (she knew better).\n\nNo, it was just too soon.\n\nSo was wishing that these were her home, her kitchen, her porch, and her bed. Her lover.\n\nIt was too soon.\n\nShe never thought she would ever feel that she was home as much as she had that day. Karen and Mike's presence had made her feel like she had spent the day with her family.\n\nBut that was too soon.\n\nShe sobbed quietly for a while until she drifted to sleep.\n\n\"In not too long maybe,\" she thought as sleep smoothed her brow.\n\nShe did not dream.\n\nWendy knew Jim had kissed her before he left for work that Monday morning but could not seem to be able to escape her sleep. A bit later Mike announced breakfast was ready and she finally stirred but was somewhat surprised to note Karen was in bed with her. When they got up they noticed that Mike was dressed so they dressed too.\n\nAs they ate breakfast Karen asked her Aunt Wendy when she knew she was in love with Jim.\n\nIt never occurred to Wendy to deny she was and simply searched her mind for the correct answer.\n\nAfter a few moments she answered, \"The first time I saw him.\" \n\n\"Funny,\" Mike said. \"That's what Dad said when I asked him the same question about you this morning.\"\n\nKaren said, \"That's a hell of a lot less time than it took you!\"\n\n\"Funny, Dad said that too, although it is not true. It took me a long time to accept I was in love with you but in reality I fell in love with you when you walked past me with a possum in your arms.\"\n\n\"Really?\" Karen said. \"I picked up the possum just so you would notice me. I guess it worked.\"\n\nWendy watched as Mike and Karen kissed each other lovingly as she felt her own happiness begin to exude through her pores. Jim had confessed to his son that he was in love with her.\n\nAfter they ate breakfast Mike and Karen drove Wendy to her townhome. She got into her home with the key inside her guard frog. She was stunned by how unfamiliar, how foreign her home of ten years felt. \n\nAfter dressing for work Wendy she took her extra set of keys and drove to work. She found herself mostly in a haze as she spent her first work hours daydreaming. Her reveries were interrupted later that morning when Mike and Karen came in. They had brought her purse from their house were she had left it.\n\nKaren then handed Wendy a house key on an intertwined heart's lover's key chain. \n\nMike said, \"That is a key to the house. Dad told me to tell you Mi casa es tu casa. His home is your home.\"\n\nWendy stood there with a blank expression on her face, her mind had short circuited a bit. Karen asked, \"Would you like for us to move you in now?\"\n\nWendy snapped out of her fog and trembled as she said, \"I am sure he would not want an old broad to just invade his man cave.\"\n\nMike said, \"You are right there, no old broads for him. It is you he wants in the house. He said anytime you are ready as long as it is soon.\"\n\nWendy burst into tears, which scared Mike until he remembered that Karen cried when he asked her to move in with him.\n\nWendy searched her mind for logic, for a reasonable argument to delay what she knew was inevitable, what she knew she wanted more than anything.\n\nKaren put her hand out. Wendy numbly placed her townhome key in it.\n\nSix hours later she closed the shop but before leaving in her car she had to sit through a crying spell. She knew it was just a release of nerves so she allowed the tears to flow until she had regained self-control.\n\nWhen she went through the door and walked into her townhouse she immediately became disoriented. Her furniture was gone. All the pictures on every wall were gone. Her pantry and refrigerator were empty, and her small appliances were gone. Her bedroom was empty and her workshop was empty. The only thing remaining in the entire townhouse was the shower curtain.\n\nShe was just lost. She stopped in the living room and took a deep breath.\n\n\"Nobody lives here,\" she muttered to herself.\n\nWendy drove to her new home, Jim's home. \n\nWhen she arrived she saw that Karen and Mike where in the hot tub in the middle of \"getting better acquainted\" so she decided not to interrupt them and surveyed the house. \n\nJason's photographs were prominently displayed in the living room walls. She did not remember what if anything had been there before. She did know that they looked better there than they did in her condo. ",
        "Her recliner was next to his with one of her small tables between them. She loved her recliner but knew that she would not be in it as often. She now preferred to sit on Jim's lap on his recliner.\n\nHer loveseat complemented his couch, as did her wingback chair. The living room furniture looked like a set and Wendy began to appreciate just how big his house was. Their house.\n\nWendy went into the kitchen and found that her stuff had seamlessly merged with Jim's. It in fact appeared that she had the small appliances he did not. His pantry was very full as was his refrigerator and her own freezer. The freezer was missing a duck. The duck she had been saving for a special occasion was defrosting in the sink. \n\nShe smiled at Karen's hint; she knew it was a special occasion duck and that day was a special.\n\nWendy walked to their bedroom expecting to see a major upheaval. Her dresser was to the wall on what was already her side of the bed as was her night table. Her roses were on it. She realized that she was so out of it that morning that she had forgotten to take them to work. It was time to throw them away, but she kept one.\n\nHer photographs of the family were on the dresser and the wall above it. Her HDTV was on the wall opposite the bed. That was the extent of the upheaval.\n\nTheir dressers clashed but then again his dresser clashed with everything else in the room anyway. She knew that a mostly free weekend was all she would need to fix that little problem. Re-finishing furniture was one of her many skills.\n\nShe did expect a major problem in the bathroom, as there was little space for her considerable stuff. However none of her stuff was there other than her tooth brush, mouth wash, and her stuff for her contact lenses. The rest was in an apparently new cabinet to the left of the mirror. Someone had visited the hardware store. But a quick look into the cabinet revealed only her deodorant and razor. There was a new shower curtain. It was transparent.\n\nAs she stepped back to the bedroom she saw that a vanity table and bench on the other side of her dresser by a window. She had not seen it before she walked into the bathroom. She raised the lid and saw a mirror and a sunken shelf that had her make up and brushes inside. Her perfumes were on a small glass shelves either side of it. The vanity had two drawers one of which had a box of cotton balls and a box of tissues. \n\nOn top of the unit there was a card wishing her the best from her nephews and nieces. She paused in her explorations for a happy cry.\n\nNeither had many clothes that needed to be hung in a closet so there was plenty of room for both of theirs although she conceded that her stuff took more than half the space. She saw an Air Force dress uniform in the closet. There were two stars on its lapel.\n\n\"Wow!\" Wendy thought. \"My man had been a general.\"\n\nShe had some \"come fuck me\" high heels on the floor of the closet that were suddenly an embarrassment. She found an empty box and after putting the shoes in it pushed it to a back corner of the closet. That was when she knew that the Wendy of a week ago probably no longer existed.\n\nWendy sat on the bed and sighed. She forced herself to calm down. She knew she was not scared. She knew she was not worried, apprehensive nor any of those \"I'm-in-over-my-head\" dreads.\n\nIt suddenly dawned on Wendy that the strong feeling inside of her was excitement. Her new life started that day. The life she had stopped hoping for many years before had just embraced her. \n\nShe was in love with a beautiful man that loved her too. She was half of \"A Couple.\"\n\nSuddenly Wendy started to giggle and continued to giggle off and on for at least five minutes. Tears sometimes joined her giggles but never interrupted them. By the time her fit of happiness ended she had changed clothes and was left with a big grin.\n\nShe walked out of her bedroom knowing she was home.\n\nWendy first checked that Karen and Mike had finished their \"exercises\" then joined them on the porch. After kissing and thanking them she sat on the swing and called Jim.\n\n\"What would you like for supper?\" Wendy asked him.\n\n\"You.\"\n\n\"That is for dessert. Would roast duck be OK?\"\n\n\"I love duck. Where are you?\"\n\n\"On our swing. Karen and Mike are here; they just finished exercising in the hot tub. Did they tell what they did?\"\n\n\"Yes, they kept in touch with me all day. Do you want me to tell you I love you now or wait until we are naked in bed?\"\n\n\"Now, before and after dinner, while we shower together, before, during, and after our evening exercise.\"\n\n\"I love you.\"\n\n\"I love you too. At what time will you be home?\"\n\n\"This is my long day. I will not be back until after seven. I will call you as soon as I am headed south.\"\n\n\"I love you. Be careful. Bye.\"\n\nDuring her phone call Mike had gone into the house and a still dripping Karen joined her on the swing.\n\nKaren said, \"Jason, Maggie, James and Charlene helped in your move. It went more quickly than I expected and that is why your townhouse is already completely empty. The six of us will return tomorrow to clean it up. Expect Aunt Amanda to have it listed before the weekend. \n\nTeachers and pickup trucks are nice to have around if anyone needs to move during the summer, don't you think? \n\nYou may not have noticed yet but this house has four bedrooms, the other three are on the other side of the living room, Mike's room, Jim's office, and one other that was empty. That is where your iMac, desk, worktable and jewelry making stuff are. We took Mike's single bed apart and replaced it with your queen. His is in the storage shed. We put your day bed in your office.\"\n\nWendy hugged her wet niece and said, \"I will need to do something for all of you soon, a party maybe. I will call James and Maggie now.\"\n\nAfter Wendy was done with her phone calls she had invited her helpers to a sumptuous dinner and wine evening on that Friday night and a cookout for family and friends Saturday night.\n\n\"How does it feel?\" Karen asked her aunt.\n\nWendy knew exactly what she was talking about and said, \"I am as excited as I have ever been. I just now spent a long time giggling for no reason at all.\"\n\nKaren said, \"I know exactly, I was so giddy Monday night after I moved in with Mike that people thought I was drunk.\"\n\n\"Actually your mother told me you were,\" Wendy said with a laugh. \"How does it feel a week later?\"\n\n\"Like it has always been and will always be this way. As you may have noticed I love the sex part but it's a lot more than that. Even if he is thirty feet away from me I can feel him. If he is next to me and his hand is not on my ass I bitch about it. He makes detours just to kiss me. I make detours just to kiss him. He even stops the car on the shoulder of the highway just to kiss me.\"\n\n\"I know where that trait came from. I thought Jim and I were going to get arrested before we got here Saturday night. A state trooper slowed down as he drove past us as we sat on the shoulder of the highway. Like father like son seems to be a good thing for us.\"\n\nKaren and Wendy shared an extended kiss and hug that lasted until Mike came out carrying Karen's clothes.\n\n\"You are not staying for dinner?\" Wendy asked.\n\n\"I would not dream of it. We are going to Mom's and tell her the news. Expect lots of phone calls.\"\n\n\"I will turn my phone off now,\" Wendy joked. Wendy hugged them goodbye and as she watched them drive away a tear suddenly welled in her eye. \n\n\"I have a son\" had flashed through her mind.\n\nHer first call as expected was from her sister Mo, Karen and Maggie's mom. They were closer in age and temperament than they were with the other sisters. That call came as she was scoring the duck. She put her phone on speaker and it remained that way the rest of the evening. About half of their conversation was over the type of spices to use on a roasted duck.\n\nThe next two, her sisters Martha and Amanda, came as she was rubbing spices on and in the duck. Typically half of their conversations led to disagreements on what to use on the bird.\n\nHer sister Allison and Wendy's best friend Janice were the next two to call. Allison lived a hundred miles away and and had been trying to call since Amanda called her. It would be weeks before Allison would meet Jim. Their first meeting would happen at Karen and Mike's wedding.\n\nJanice was ecstatic and told Wendy that Jim and and her husband Ben had known each other for years.\n\nWendy did not mention to either that she was preparing a duck.\n\nShe had answered six calls before she got the duck in the oven. Over the next hour one by one her nieces and nephews called. All complained that her phone was always busy. All were gushing with happiness for her. Wendy reminded herself that her family was the most loving family ever. Her giggles and tears returned.\n\nJim called an hour later to tell her he would be home in thirty minutes. \n\nShe decided that yellow rice and green peas would do as side dishes. She took another three calls, one from Janice's daughter Jana and her friend Shawna, one from her friend Juanita, and one from her friends Maryanne and Yazmin, and then she turned her cell phone off.\n\nShe took the duck out of the oven and allowed it to rest. She had just placed the rice and the peas on the stove but had not turned on the burners when Jim walked in. He brought her roses in a vase. \n\nWendy did not try to hold back her tears. She kissed him hard, told him she loved him, and kissed him hard again. They held each other tightly for a minute as Jim told Wendy he loved and adored her.\n\nThey eventually released each other and Jim said, \"I need a shower.\"\n\nThey kissed one more time then she allowed him to escape her embrace. She placed her flowers on her own dining table and wondered why she had not noticed it there until then. She decided it was because Jim's only table was in the kitchen and his dining area just had one bookcase in it. Her more formal dining set fit perfectly in the space, bookcase and all. \"Yes, I am home,\" she thought.\n\nShe returned to the kitchen, checked on the duck and turned on the burners for the rice and peas. After basting the duck with its own juices she turned down the heat under the rice as soon as she saw the water begin to boil and turned her timer on for twenty-five minutes.\n\nShe had twenty-four minutes. She was naked and stepping into the shower with Jim before she knew she had a plan. She knelt in front of him and swallowed his cock. Jim's groan was music to her ears. Wendy did not mind sucking cocks but had never allowed a man to cum in her mouth and only once had she allowed any man to spew on her body and that had been over thirty years before.\n\nBut the cock in her mouth belonged to Jim. She wanted to give him her best. She ignored his warning and took all of his semen in her mouth. She swallowed.\n\nJim lifted her to him and kissed her deeply, he wanted her to know that he knew the importance of her gift.\n\nSomewhere in her pink haze Wendy remembered that she was in the middle of cooking. She left the shower and dried her body but did not dress. She opened and drank a coke remembering her big sister Martha telling her it cut through the taste of cum. It did help.\n\nHer rice was ready so she scooped it onto a serving dish and scattered peas over it.\n\nShe was setting the table when she saw a shadowy monster come into the porch. Wendy reminded herself of how much her life had changed and took a milk bone out to Celia. \n\nShe seemed not to be even mildly surprised that it was Wendy and not Jim with her treat. After Celia consumed her milk bone Wendy opened the screen door for her and Celia again chirped to her on the way out.\n\nWendy had dinner plated on her table as a still naked Jim re-joined her. Before they sat they exchanged a long deeply felt kiss. \"I love you\" each said simultaneously. They kissed again and then sat for their first dinner as a formal couple.\n\nThey enjoyed the dinner. Jim said, \"I am glad to see that some goddesses can cook. It was the best meal of my life.\"\n\nWendy giggled at both parts of his outrageous statement but made sure he knew she appreciated it with a swarm of kisses.\n\nAfter they put the leftovers in the refrigerator they opened two Dos Equis and went to the porch. Wendy settled against his shoulder as he wrapped an arm around her. They slowly rode the swing and drank their beer.\n\n\"How was your day?\" Wendy asked Jim for the first of several thousand times. "
    ],
    "authorname": "jjcolejr",
    "tags": [
        "romance novella",
        "drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/felicity-ch-06"
}