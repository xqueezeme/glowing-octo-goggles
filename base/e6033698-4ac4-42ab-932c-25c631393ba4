{
    "title": "Reality TV",
    "pages": [
        "\u00a9 2003 by Thrillerauthor\n\nIt will be billed as \"Fear Factor\" meets \"The Bachelor\". Out of twenty-four contestants vying for the right to marry Mr. Right, one will secretly be a guy. If \"she\" survives the elimination rounds and makes it into the finals, when intimacy is to be expected prior to the climactic episode, all bets are off.\n\nAndrea Messenger tossed the pitch sheet onto the tablecloth and poured skim milk into her muesli. Where did Hap come up with these ideas? \n\nHap Arnhold joined her at her banquette at the Polo Lounge a few minutes later, wearing the uniform of a Hollywood agent: black mock turtleneck, black slacks, black Armani jacket. Andrea's subdued dress made her feel like a peacock by comparison. A bad analogy, she thought to herself as Hap ordered his customary bagel and coffee. Weren't the females the drab sex in the bird world? \n\nAs if reading her mind, Hap started in. \"Sex roles have been upside down in this town since 'Some Like it Hot', he said between mouthfuls of bagel, \"and that documentary that A&E put on about guys and girls swapping places blew your network out of the water. Your ratings for the last 'Bachelor' were way down. This is the perfect way to add a little spice to a tired format.\" \n\n\"Come on, Hap, nobody would believe it. In the first place, there's no way a guy could last five minutes in that circus without being outed by one of the other girls. They'll all be out for blood.\"\n\n\"So, even if that happens, you'll have pumped your numbers for the first episode, which is crucial, I don't have to tell you. But think about it, Andrea: if these girls all want to win, won't it be in each of their interest to keep the fake girl in the competition as long as possible? There's no way she's going to win it, but each girl she knocks out in the early rounds improves the rest of their chances.\"\n\nAndrea reflected on this as Hap took a call on his cell phone. \"Hi, I'm in the lounge, sitting with a pretty woman in a blue dress,\" he said as he winked at Andrea. \"Come join us.\" Tall and gangly, with dark curly hair and designer glasses, Andrea was hardly pretty, but she was used to agents kissing her ass.\n\nHap put his cell phone away and said apologetically, \"Sorry, that was my assistant. Some papers I need to sign. Won't take a minute.\" Andrea looked up as a stunning blonde entered the restaurant and approached them hesitantly. She was tall and athletic looking, with terrific legs beneath her short pleated skirt, and she juggled her purse and briefcase as she waited for Hap to introduce her to Andrea. \n\n\"Andrea, meet Jan Peterson. Sit down, Jan, and join us.\" Jan slid onto the banquette next to Hap, a shy smile on her beautiful face. \n\nThe girl pulled a contract from her briefcase and handed it to Hap. Andrea looked at Hap in surprise as he slid it across the table to her. \"Sign here, Andrea, and welcome your mystery contestant to 'The Bachelor'. \n\nAndrea's jaw dropped as she stared at Jan, who blinked back at her nervously. \"You mean, she's really...a guy?\"\n\nJan blushed a bright crimson and started to get up from the table. Hap held his arm and told him to sit still as Andrea stared at him. If she hadn't been told, there was no way she would have guessed. \"How long have you been dressing up like this?\" she finally asked.\n\n\"I just started this year.\" His voice was soft and sweet, without a trace of masculinity, and Andrea noticed that his gestures and body language were totally feminine.\n\nAndrea glanced down at the contract. \"Your real name is Jan?\"\n\n\"Yes.\"\n\n\"Are you gay?\" Andrea asked.\n\n\"Really, Andrea, I'm surprised at you,\" Hap broke in. \"I haven't heard that question in this town in years.\" Short and slender, with a shaved head and trim mustache, Hap was gay himself.\n\n\"Get real, Hap. I've got a mainstream audience. If we gay it up, you can write off the red states, and my sponsors would never go for it.\"\n\n\"I'm not gay,\" Jan answered before Hap could intervene again. \"I'm a normal guy, and I like girls.\"\n\n\"Then why are you doing this?\"\n\n\"How else am I going to break into this business? Here,\" he said, reaching into his briefcase and pulling out a photo spread of a young man with a slight build and nondescript features. Andrea studied them and looked back at Jan. The resemblance was unmistakable, but Andrea had to admit to herself that Jan was infinitely more attractive as a woman. It was impossible to tell whether her wispy blonde hair was real or an expensive wig, her blue eyes sparkled, and her makeup was flawless. Andrea realized that she was already thinking of Jan as a she. \n\n\"Hap, I'm gonna have to run this by Mr. Goodkin, but I think he might just go for it. Jan, I want you to meet me in my office this afternoon at four o'clock. Here's my card.\" She folded up the contract and put it into her briefcase. \"And wear something casual. If we're going to pull this off, you'll have to live in the Girls' House for at least two weeks, and that means yakking it up in jeans and a tee shirt till all hours of the night with a school of piranha. Do you think you're ready for that?\"\n\n\"Bring it on,\" Jan smiled sweetly. \"They'll never know what hit them.\"\n\n* * *\n\n\"This is Sam Ruben with the Hollywood Report. As all of America knows by now, tonight's opening episode of 'The Bachelor' has an amazing twist: one of the would-be brides is not what she seems. But which of the 24 lovely ladies is really a man? That's the question that everybody is talking about. ABC is expecting a record audience tonight as America tunes in to the ultimate gender-bender. Will the other girls give her away, or will they help cover for her to better their own odds? And can Jason, last year's runner-up in 'The Bachelorette', figure her out in time?\"\n\nJan switched off the television in his bedroom at the Girls' House and stretched. Dressed in a yellow nightshirt that came to mid-thigh, he surveyed himself in the full-length mirror on the back of the bathroom door. His blonde hair had grown long enough over the past several months to be styled into a shag, which he absent-mindedly fluffed as he turned sideways to inspect his figure. Jan had reluctantly initiated a minimal regimen of female hormones, prescribed by a disreputable Dr. Feelgood, after the network signed his contract. Hap Arnhold had convinced him that the temporary side effects would be well worth it if they prolonged his exposure on national television. As he raised his nightshirt and appraised his softer skin and emerging curves, Jan admitted to himself that the tradeoff had been necessary. Although his budding breasts were barely an A-cup, in a Wonder bra he had a hint of cleavage, almost as much as some of the other girls.\n\nAnd his long, slim legs were the best in the competition, an edge which Jan exploited with his carefully chosen wardrobe of short outfits. At the taping of the first episode, when the girls promenaded in cocktail attire, Jan had stolen the show in a little black dress. It would be fun to watch himself wearing it on television tonight, especially since he already knew the outcome: Jan was among the twelve girls who had received a rose, the ticket to the next round of eliminations.\n\nToday's taping of the next episode was going to take place at Dodger stadium, where the girls would be expected to cavort with ballplayers on the sidelines before taking their seats with Jason in a plush skybox. So far, Jan had managed to get by with only a few shy words to Jason, and he hoped that the hubbub of the ballgame would provide enough of a distraction for him to pass for another round.\n\nJan peeled off his nightshirt and took a long, hot shower, shaving his legs as he did so. One of the stipulations which the network had agreed to when they let Jan into the competition was to give each contestant a private bedroom and shower. The Girls' House was, in fact, a compound consisting of twelve two-bedroom townhouses clustered around a clubhouse with a dining and recreation area, where the girls hung out and mugged for the television cameras. The girl who occupied the other bedroom in Jan's townhouse had been eliminated in the first round, a huge break which meant that he now he had the entire unit to himself.\n\nJan's contract specified that his income would increase significantly the longer he stayed in the competition, and he was determined to make it into the quarterfinals. Once the field was narrowed to half-a-dozen girls, he had no illusions about his ability to survive the mounting scrutiny from the television audience, the media, and the other girls, not to mention poor Jason. Up to now, this had all been a bit of a lark for him, but there was no way Jason was going to become a laughingstock on national television by allowing a guy to become his dream girl.\n\nWith these heavy thoughts, Jan selected his outfit for the day. The other girls would be wearing shorts and Dodgers tee shirts, Jan figured, but he needed to look ultra-feminine. It was going to be a warm afternoon, with Santa Ana winds, and Jan had just the thing for it: a pink and white sundress that would barely cover his ass. That, a pair of panties to match his obligatory Wonder bra, and some strappy sandals would knock them dead. \n\nJan blow-dried his hair and ran a polished nail over his face. Although the hormones had reduced his beard to next-to-nothing, he gave himself a close shave before putting on his makeup. Glancing at the clock on the bathroom vanity, he hurried back into the bedroom and quickly got dressed. As an afterthought, he rummaged through his dresser for an old Dodger sun visor, which he perched on top of his blonde head. Surveying himself once again in the full-length mirror, he smiled in approval. Jan Peterson was as cute as a bug.\n\n* * *\n\nGloria Alvarez looked up from her bowl of cereal as Jan bounced into the dining room. \"Well, if it isn't Miss Sunshine! Look at you, girly girl. At least we know one of us isn't a guy.\"\n\nJan stuck out his tongue as he pulled out the chair next to Gloria's and sat down, nonchalantly tucking his short dress under himself as he did so. \"Don't worry, Gloria, your secret's safe with me,\" Jan said cheerily. A waiter materialized and took Jan's usual order: half a grapefruit, English muffin, and black coffee. \n\nGloria leaned forward and whispered in a conspiratorial tone, \"Really, Jan, I think I've got this figured out. Becca is the guy. Look at her,\" she said, motioning with her head towards Rebecca Forte, a stunning brunette who was sitting by herself reading the Los Angeles Times sports pages. \"Becca's been talking about going to this stupid game non-stop all morning, finally drove the other girls off. She's got to be the guy.\"\n\nJan smiled to himself as he spooned a wedge of grapefruit into his mouth. \"Maybe. But look at you, Gloria. Jeans and a sweatshirt. Are you afraid of showing us your muscles?\" In fact, Gloria was quite petite, with flashing eyes and a constant smile. \n\nGloria laughed and said, \"I'll tell you one thing, at least I throw like a girl. Rumor has it that we're all going to play catch with some of the Dodgers, and I'll betcha the guy gives himself away right there.\"\n\nJan laughed as he nibbled on his muffin. That would be tricky, all right. Jan had played second base on his high school varsity in Omaha, and he would have to fem it up when they got to the ballpark. After all he had been through to get this far, he wasn't about to blow it all by catching a fly ball. \n\n\"What makes you think our mystery man is still in the competition?\" Becca chimed in from across the room. \"We all know it was Charlene.\"\n\nCharlene Boyd, a spectacular black woman, had fallen by the wayside in the first episode, and most of the girls now assumed that she was a guy in vogue mode. The hastily drawn-up rules for 'The Bachelor' after Jan was added to the competition provided that the identity of the lone male would not be revealed until the final episode, in order to prolong viewer interest, on the assumption that the imposter would be eliminated in the early rounds. It was a decision that was to prove catastrophic for the network.\n\n\"Okay, girls, time to get in the limos,\" Andrea Messenger called out from the lobby. The girls gathered up their purses and trooped out the front door to a fleet of waiting stretch limousines. Jan, Gloria and Becca stepped into the first one, and they were off to the stadium for the pre-game taping. Jan looked out the window as Gloria and Becca prattled on about Jason, the show, and the other girls.\n\n\"What's eating you, Missy?\" Becca finally asked him. \n\nJan let out a deep sigh before he answered, giving himself time to invent yet another fantasy from his imagined girlhood. \"I hate baseball,\" he finally said. \"When I was little, my dad forced me to try out for tee-ball, and I was so bad! I tried to quit, but he wouldn't let me. So I had to play.\n\n\"The final game of the season,\" Jan went on, \"it was like for the league championship, and I came up in the last inning with the bases loaded. And I struck out. This was tee-ball, remember, and I couldn't hit the stupid ball off the tee. I cried all the way home.\"\n\n\"Poor baby,\" Gloria said. Jan looked over at Becca, who was staring at him with a strange look on her face. Had he overplayed it?\n\nBecca, dressed in cutoff shorts and a belly shirt, was the sexiest girl in the competition, and an early favorite to go all the way to the finals. The other girls regarded her with a mixture of awe and envy, and Jan found her incredibly attractive. Were it not for the gaffe which tucked his penis safely between his legs, he might well have given himself away just looking at her, despite the cooling effects of the hormones.\n\n\"Jan, Jan, Jan,\" she finally said. \"You're a big girl now. Watching some hunks on steroids run around and grab their balls is a lot different from your tee-ball memories.\" The three girls were still laughing when their limousine pulled into Chavez Ravine and deposited them at the VIP entrance.\n\nThey fought their way past a throng of paparazzi and entered the beautiful stadium, with its palm trees behind the outfield fence and the glorious banners saluting past heroes from Brooklyn and Los Angeles. A knot of cameramen was waiting for them as they walked across the lush grass towards a group of Dodgers playing catch beside third base. \n\nEach of the girls was issued an oversized baseball glove and a Dodger hat, except Jan, whose team visor drew several admiring comments. They playfully squeezed the ballplayers' biceps and took turns catching soft tosses from some of the players. Jan dropped everything thrown in his direction, and his short sundress flipped up in back when he tried to throw like a girl. \n\nThe cameramen finished the shoot, and the girls were being herded towards the skybox when Jan heard Becca's voice behind him calling \"Heads up!\" He turned around just in time to see a baseball headed straight for his face. Instinctively, he reached up and caught it with his bare hand, realizing as he did so that he had just been exposed. He dropped the ball on the grass and looked around to see if anyone else had observed him, but the other girls all seemed preoccupied. \n\nBecca sidled up next to him and said, \"Nice catch.\"\n\n\"How did you know?\" Jan whispered.\n\n\"Your little story about tee-ball. They don't have championships for kids that age. Everybody swings till they get a hit and the games usually end in a tie. At least that's how it was when I was a little girl.\"\n\nJan hung his head in despair. \"I guess this is the end of the game for me.\"\n\nBecca stopped and looked into his eyes. \"Are you kidding? No way I'm telling anybody about this. I hope we both make it into the finals. Besides, I think you're kind of cute.\"\n\nSpeechless, Jan fell in behind her as they made their way to the skybox. The rest of the afternoon was a blur as the players took the field and the girls took turns sitting next to Jason and trying to impress him. Jan kept to himself, finally slipping outside the skybox to get some fresh air during the seventh inning stretch.\n\nHe was surprised when The Bachelor came looking for him a few minutes later. \"We haven't really gotten to know one another,\" Jason said with a smile. He put his arm around Jan's shoulder, and found him to be shivering. \"What's wrong?\" he asked gently. \n\nJan snapped back to reality. \"I'm cold,\" he managed to say, and indeed the winds had shifted during the game, dropping the temperature a good twenty degrees as they brought the Pacific fog onshore. \n\nJason removed his leather jacket and carefully draped it over Jan's shoulders. At six foot two, the ruggedly handsome man towered over Jan. \"Is that better?\"\n\nJan snuggled up to him and looked gratefully into his eyes. \"Thanks.\"\n\n\"You're awfully shy. Are you always this way?\"\n\n\"Only when I'm dating a guy along with eleven other girls on national television,\" Jan said with a smile, ignoring the scowls from Andrea Messenger, who was catching every word from behind the camera.\n\nJason threw back his head and laughed. \"Finally, a girl who'll speak her mind! Tell me, Miss Honesty, what do you think of me?\"\n\nJan didn't hesitate. \"I think you're the best-looking guy I've ever seen, and it broke my heart when that bimbo didn't pick you on 'The Bachelorette.'\" More scowls from Andrea, and another belly laugh from Jason.\n\nOne of the other girls came outside looking for them. \"Hey, break it up, you two,\" she said. \"No fair keeping Jason all to yourself out here.\"\n\nJason took Jan's hand and squeezed it. \"Keep the jacket. It looks good on you. Anything would,\" he added lamely as he went back inside. Jan followed them back inside, and spent the rest of the game cheering a late Dodger rally along with the other girls, exchanging occasional glances with Jason.\n\nAfter the game, the girls were whisked back to the Girls' House to watch the telecast of the first episode. The taping of the next rose ceremony was scheduled for the following morning, and all of the girls seemed preoccupied with their chances as they watched themselves preen and prance on television. When Charlene Boyd missed the cut, several were heard to call out, \"Sorry Charlie!\" and \"Bye Guy!\" Jan glanced over at Becca, who smiled back at him and said nothing. \n\nAfter the show was over, the girls returned to their rooms, and Jan had just finished removing his makeup when he heard a tap on the door. Probably one of the network gophers with instructions about tomorrow's shoot. He pulled a robe over his nightshirt and opened the door. Becca slipped inside and pushed the door shut behind her.\n\n\"Shhh!\" she whispered before Jan could say anything. \"We'll both get kicked off the show if they find out I'm in here.\" She found the light switch and turned off the lights.\n\n\"Are you crazy?\" Jan said in his normal voice. \n\n\"You have some serious explaining to do, Mister,\" she said, leading him over to the sofa. \"Tell me everything! How did they get you to pretend you were a girl? And how did you get so damn good at it?\"\n\nJan sat down next to her and let out a deep sigh. She had him totally over a barrel, and he knew it. \"Nobody put me up to it, except maybe my agent. He saw me act in a stage production of 'Sugar' and came up with the idea. When he pitched the idea to the network, I never believed they'd go for putting a guy in drag on the show.\"\n\n\"You're an actor?\"\n\n\"When I can get gigs. Most of the time, I work as a waiter and a model to make ends meet.\"\n\n\"Are you gay?\"\n\n\"No!\" he shouted.\n\n\"Shhhh! Sorry, but I had to know.\"\n\n\"Why?\"\n\nBecca reached under his nightshirt and started exploring. \"Because I'm incredibly horny. And you're so hot as a girl. I wonder what you're like as a guy?\"\n\nJan felt himself stirring, in spite of the female hormones in his system. His penis strained against his panties as she probed under his nightshirt, and when she released it from captivity, it sprang to attention. \"Wow, wait till Jason discovers this,\" she giggled.",
        "Jan started to lose control. After months of suppressing every thought, desire and instinct that might give him away, he yearned for his missing manhood, and when Becca suddenly kissed him, his old self came rushing back. He stroked her hot buttons, bringing her right up to edge until neither one of them could hold out any longer. Slowly, gently, he entered her beautiful body, up to the hilt, again and again, until finally they came together in a shattering climax.\n\nThey lay side by side without speaking, lost in time, their hearts beating in unison as they slowly came back down to earth. \"Wow,\" Becca finally said.\n\n\"You should see me when I'm not full of estrogen,\" Jan replied.\n\nShe rolled over and rested her chin on his chest. \"You mean you're taking hormones?\"\n\n\"Just until the show's over. The doctor told me there would be no lasting effects as long as I gave them up soon.\"\n\n\"And if you don't?\"\n\n\"Then I guess I'll turn into a girl. At least, I'd be too far gone to be a guy again.\"\n\n\"Doesn't that scare you?\"\n\n\"Not as long as I pull the ripcord in time. I mean, actors gain and lose tons of weight for roles all the time.\" For some reason, Jan found himself opening up to her. \"And I've got to admit, I'm going to miss this. Don't get me wrong, I like being a guy, and I don't want to spend the rest of my life as a chick.\"\n\n\"Then what do you mean, you'll miss it?\"\n\n\"I don't know, it's just been fun, that's all. Like being the only person in the world who knows this incredible secret. Well, except for my agent and the network.\"\n\n\"How about your family? Do they know you're doing this?\"\n\n\"Hell, no! My mom and dad are back in Omaha, and they're having enough trouble with their son being a starving actor.\"\n\n\"No girlfriend?\"\n\n\"No girlfriend. How could I? Ever since we were in rehearsals for 'Sugar', I've had to shave my legs and dress up as a girl half the time, and once my agent convinced me to try out for 'The Bachelor', it's been full time.\"\n\n\"I still don't understand why you're doing all this.\"\n\n\"My career was going nowhere. I'm just an average-looking guy, fighting for bit parts. With the exposure I'll get from 'The Bachelor', I may be able to break out of the pack.\"\n\n\"Won't this sort of type-cast you as, well, you know, a fairy?\"\n\n\"Did you ever hear of a show called 'Bosom Buddies'?\n\n\"No.\"\n\n\"It was on TV back in the eighties. A weekly sitcom. Guess who played a guy who has to dress up as a girl and live in a woman's boarding house?\"\n\n\"Beats me.\"\n\n\"Tom Hanks. And it sure as hell didn't hurt his career.\"\n\nBecca patted his hairless legs. \"That still doesn't explain one thing.\"\n\n\"What's that?\"\n\n\"How did you get so good at this? Honest to God, until your little slip-up today, I never would have guessed you were a guy. And none of the other girls has a clue. They all think poor Charlene was the one.\"\n\n\"I guess I'm really a good actor.\"\n\n\"I'll say.\" She stroked his penis back to life, and they went at it once again. If anything, the hormones made him a better lover, slowing him down so that their bodies were in perfect synch. When they finally came, it was simultaneous once again, and this time Jan had to hush Becca as she cried out in ecstasy. \n\n* * *\n\nTaping for the rose ceremony was scheduled for nine o'clock, and the girls were up early preparing themselves for the big moment. For half of them, the morning would end with a long ride back to the Girls' House to clear out their belongings and return to oblivion. For the lucky survivors, there would be a romantic dinner with Jason, beginning that evening and spread out over the next six days.\n\nJan tried to put his incredible night with Becca out of his head as he finished dressing. He had selected the outfit he had first worn the day he surprised Andrea Messenger at the Polo Lounge: a white mock turtleneck sweater and a short black pleated skirt, accessorized by a wide black Gucci belt and a colorful Hermes scarf. As he tugged on a pair of sheer black stockings, he wondered what Becca must be thinking as she went through the identical motions back in her room. Getting all dressed up, so full of hope, knowing full well that there was a fifty-fifty chance she would be crying her eyes out before the morning was over. For Jan, the show had started out as little more than an audacious prank, but something about this experience was drawing him closer and closer to the way women thought, felt and acted. \n\n\"Snap out of it, girl!\" he said to his reflection as he appraised the finished product in the full-length mirror. Once again, Jan Peterson was devastating. Jan stepped into a pair of black pumps with gold trim, dropped a lipstick and compact into his black leather purse, and headed off to join the other girls in the dining room. Most of them had already finished breakfast, and Jan had a quick cup of coffee as they started to file out to the waiting caravan of limousines. Becca was nowhere to be seen, and Jan assumed that she had already gone outside.\n\nHe was right. When he got into the last car with Gloria and a beautiful Eurasian girl named Cat, who had the other bedroom in Becca's townhouse, the atmosphere was so thick you could cut it with a knife. There was none of the banter from yesterday's ride to the ballpark. Today was deadly serious, and each of the girls was focused on her own chances as they rode in silence to a seaside mansion in Palos Verdes which had been commandeered as Jason's bachelor pad for the duration of the show. \n\nThey were assembled in a semi-circle at the foot of a wide spiral staircase, and when Jason descended to greet them, some of the girls were visibly trembling. Becca was the first girl to get a rose. Gloria shrieked when she was selected. Finally it came down to the last rose, and when Jason handed it to Jan, one of the also-rans actually fainted.\n\nThey were ushered back into the limos as soon as taping wrapped, and each of the remaining contestants was given a schedule of the activities for the remainder of the show. Jan studied it carefully during the ride back to the Girls' House, while Gloria ran on like a chatterbox and Cat stared morosely out the window. \n\nThere was a lot of down time coming up. Jan's dinner with Jason was scheduled for the following evening, which was good: a day to get ready, but then it would be over with. Each girl was entitled to a shopping spree on Rodeo Drive and a makeover at a Beverly Hills salon before her big date with Jason, and Jan's was scheduled for the following morning. After the last dinner date, another rose ceremony, narrowing the field to three girls. Then an overnight getaway with Jason for each of the three, to someplace close to Los Angeles that they would get to select. Another rose ceremony, and the two girls left standing would be expected to bring Jason home to meet Mom and Dad. When Jan read this, he nearly gagged. \n\nThe surviving girls kept to themselves for the rest of that day. Alone in his townhouse, Jan put on shorts and a tee shirt and began to plot out his moves for the remainder of the contest. He had two major problems, assuming he survived a romantic dinner with another man: where to go on his getaway with Jason, and how to manufacture a family to meet with his prospective fianc\u00e9.\n\nAt four o'clock, no closer to an answer to either problem, Jan changed into a sports bra and jogging shorts and laced up his sneakers for a long run. A combination of reduced calorie intake and an aggressive exercise program had enabled him to get down to his ideal weight for a woman, and he was determined to take off another pound before his big dinner with Jason so he could enjoy the meal. There you go again, thinking just like a girl, he said to himself as he went outside and bumped smack into Becca. \"Hey,\" he said.\n\nBecca was just returning from a swim, and her long brown hair was slicked straight back. Without makeup, her chiseled nose and high cheekbones gave her face a purity that Jan regarded with a twinge of envy. She asked him to walk along with her, and when they got to her townhouse, she pulled him inside and closed the door. Neither spoke as they tore off each other's clothes and tumbled into bed, making sweet love again and again until it was almost time for dinner. \n\n\"So much for my jog,\" Jan sighed as he strapped on his bra.\n\n\"You got a good workout,\" Becca giggled. \"When's your big date?\"\n\n\"Tomorrow night.\"\n\n\"Do you think you can pull it off?\"\n\n\"I don't see how I can.\"\n\n\"Let me give you a little tip. From a girl who's been on a few more dates with guys than you have. Take the initiative by asking him questions that make him do most of the talking.\"\n\n\"So he can't ask me any questions about myself? Good idea.\"\n\n\"Well, that's part of it, although you're a good little liar and you can probably get away with whatever you dream up. But there's another reason. By making him talk about himself, you'll make him feel important and wanted. Guys like that. And they like girls who make them feel that way.\"\n\n\"Becca, I'm not trying to get Jason to fall for me.\"\n\n\"Sweetheart, that is exactly what you are trying to do! In fact, that's the only reason you've gotten this far. Look at the way you dressed up this morning, making the rest of us look like hags. Don't tell me you're not in this thing to win.\"\n\n\"Sure, I want to win, but I don't want him to fall in love with me. I'm a guy, remember?\"\n\n\"Oh, I remember. But you remember this: the only way you get to win this thing is to make him fall in love with you.\"\n\n\"I don't want to hurt him.\"\n\n\"Then don't let him fall in love with you.\"\n\n\"You know what? I think you're jealous.\"\n\n\"You're damn right I'm jealous. Every woman in America is going to be jealous of you when they find out that you're really a guy. God help you if you win this thing. They'll probably castrate you on television. Now that would be a good reality show!\" \n\n\"Just don't tell my agent. If he thought it would get ratings, he'd try to talk me into it.\" \n\n\"All you have to do is take a dive, Sis. Hit the wine as hard as you can and throw up on Jason at dinner tomorrow night.\"\n\n\"You just want to knock me out of the competition.\"\n\n\"You're damn right I do! You scare me more than the real girls.\"\n\n\"Why's that?\"\n\n\"Because they're all gonna be nervous as hell, and probably make idiots of themselves. Put them up against a professional actor who looks like you do in a cocktail dress, and they haven't got a chance.\"\n\n\"So what? Each girl I knock out of the competition is one less girl for you to compete with.\"\n\n\"That's what I'm worried about.\"\n\n\"I don't get it.\"\n\n\"What could be more humiliating than to lose this thing to a guy?\"\n\n* * *\n\nJan was up early the following morning for his makeover and shopping excursion. Dressed in a simple shirtdress and flats, he joined the remaining girls for breakfast. Gloria was regaling them about her dinner date with Jason the night before.\n\n \"He was so wonderful! We had champagne and caviar, and then some kind of fish soup before the main course. It was delicious! He is so sophisticated,\" she rambled on, as the other girls hung on every word. All except Becca, who rolled her eyes and sat down next to Jan at an adjoining table. \n\n \"One down, five to go,\" Becca said. \"No way Jason's going to want to spend another minute with that airhead.\"\n\n \"You're wicked,\" Jan said as he munched on his English muffin. \"Still think I should blow it tonight?\"\n\n \"As I matter of fact, I've reconsidered my entire strategy. I'm not afraid of you now, in fact I want you to make it into the final three. Let Jason get the shock of his life when he tries to hit on you during your overnight getaway.\"\n\n\"Where are you going to take him? If you make it into the final three, I mean,\" Jan asked her.\n\n \"Vegas, baby! How about you?\"\n\n \"It's a big problem.\"\n\n \"Hey, I know, how about San Francisco? You could have a nice dinner on Castro Street, take in a drag show, then lure him back to your hotel after you've softened him up.\"\n\n \"That's real nice, Becca, but you know what? You've just given me an idea on how to solve my other problem.\"\n\n\"What other problem?\"\n\n\"Taking him home to Mom and Dad.\"\n\n\"Don't worry, sweetheart, you're not gonna get that far.\"\n\nJan caught a wave from Andrea Messenger, who was pointing at her watch to signal that it was time to leave for his escapade in Beverly Hills. \"I'm off to get beautiful,\" he told Becca as he picked up his purse. \"Don't count me out just yet.\"\n\n* * *\n\nThree hours later, Jan emerged from a chic salon on Canon Drive, turning heads as he returned to his waiting stretch limousine. His hair was now ash blonde, a few shades lighter than his natural color, his skin was radiant, and his makeup and nails were perfect. Even his pedicured feet looked feminine. He had gently but firmly refused a massage, claiming doctor's orders because of chronic back soreness, and if the salon staff guessed his true identity, they kept it to themselves.\n\nHe was almost embarrassed to walk into Rodeo Drive's trendiest boutique in his drab shirtdress, but the manager greeted him at the door, and the ubiquitous camera crew from the network was there to capture his search for the dress that might win Jason's heart. Jan gushed over each of the manager's suggestions, finally settling on a slinky blue number with spaghetti straps and a long slit up one side. He had never worn a long dress before, and he wasn't even sure he'd know how to walk or sit down in it, but it was so beautiful, he had to try it on. Unbuttoning his shirtdress in the dressing room, he stepped into his selection and pulled it up, marveling at how the expensive fabric clung to his body like a second skin. As soon as he saw himself in it, he knew that he had just taken the competition up to a whole new level. \n\nThe rest of the afternoon was consumed with finding the perfect pair of strappy heels and a matching clutch purse, a strapless push-up bra, and complementary lingerie to complete his outfit. After a visit to a famous jewelry store which had made arrangements with the network to loan each of the girls an assortment of diamond jewelry, his final acquisition was an expensive French perfume. When he returned to the Girls' House late in the afternoon, he went straight to his room and tried to take a nap, tossing and turning in anticipation of the night to come. After he finally drifted off, he dreamed that he was a girl getting ready for her first date, fussing over what to wear and how to fix her hair. \n\n* * *\n\nBootlegged videos of the episode of \"The Bachelor\" featuring Jan's dinner date with Jason have become the hottest links on YouTube, continuing to rise in popularity with each attempt by the network to squelch them for copyright infringement. From the standpoint of sheer acting ability, nothing seen on television over the last decade can come close to Jan's performance that night.\n\nThe tape begins with the valet of an exclusive Beverly Hills restaurant opening the door to Jan's stretch limousine, and a lovely leg emerging through the slit in his dress as he gracefully alights from the vehicle. A kiss on the cheek from the waiting Jason, who squires him into the restaurant, Jan's arm through his as the couple is escorted to a quiet booth. The surrounding tables were cleared out to make room for the film crews, allowing for three different camera angles as Jason and Jan got to know each other for the first time.\n\nFollowing Becca's suggestion, Jan tried to steer the conversation to Jason: his boyhood, his interests, his past loves, his career. Jan deftly deflected all questions about his girlhood and past boyfriends, always coming back to Jason and his hopes and aspirations. The more Jason talked about himself, the more he seemed to be fascinated by his date.\n\nAt one point, he asked Jan point blank about his family. \"My dad died in a car crash when I was a little girl, and I was raised by my mom,\" Jan replied sadly, and Jason quickly turned the conversation towards happier things. All he was able to pry out of his date about her mythical life was that she was a part-time actress and model in Los Angeles, who lived alone and had remained close to her mother. The television audience was falling in love with her along with Jason.\n\nJan limited himself to two glasses of wine, keeping his wits about him as the evening drew to a close. While they lingered over cappuccinos, he felt Jason's hand slide against his thigh, safely encased in his long dress. Out of sight of the cameras, he moved his hand under the booth and held it over Jason's, sliding it up a few inches before he squeezed it. The hidden gesture was enough for Jason, who raised Jan's hand and kissed it as America swooned.\n\nWhen it was finally time to go, Jason escorted Jan to his waiting limousine, and awkwardly kissed him on the cheek. Suddenly Jan stood on his tiptoes and gave Jason a soft kiss, smack on the lips. He brushed Jason's nose with a manicured finger and said, \"Thanks for a great time. Whoever you select is one lucky girl.\" Jason stood and stared as Jan got back into his limousine and was driven away.\n\nAs soon as he was alone in the limousine, Jan began to shake uncontrollably. It was a catharsis after almost three hours of unrelenting pressure, and he rummaged through the liquor cabinet and poured himself a straight bourbon. Ignoring the stares from the driver in the rear-view mirror, he sipped it gratefully on the way back to the Girls' House, although he took the precaution of opening the window and tossing his empty glass out into some bushes before they pulled up the driveway. Several of the girls were waiting up for him when he walked into the clubhouse, but he ignored them and went straight to his room.\n\nHe was kicking off his heels when he heard someone behind him. Startled, he turned around to find Becca lounging on his bed, naked under the covers. \"Have fun tonight, Missy?\"\n\n\"Now that it's over, yes, I think I did.\"\n\n\"Hmmm...I think you're starting to like this.\"\n\n\"I guess I thrive on competition.\"\n\n\"Not that, I mean the girl stuff. Look at yourself. Don't you think it's a little scary?\"\n\n\"It's only a game, remember?\"\n\n\"And you honestly think you're gonna be able to give all this up when it's over?\"\n\n\"Sure. I told you already, I never wanted to become a woman.\"\n\n\"Maybe not, but will you be able to give up being a girl?\"\n\nHe looked at her cross-eyed as he peeled off his dress. \"What do you mean?\"\n\n\"Jan, you've been given a glimpse of something that half the population never sees. In fact, more than half, because most girls don't look anywhere near as good as you do.\"\n\n\"What are you talking about?\"\n\n\"What I'm talking about is this: there is nothing in this world more fun than being a pretty girl. And you love it. Every little thing you do screams 'I love being a girl'. If you can't see that, you're not only fooling Jason and a national television audience, you're fooling yourself as well.\"\n\nHe sat down next to her on the bed and stroked her long brown hair. \"Okay, I'll admit it. I'm digging this, way more than I should. But this is like a total fantasy existence. When it's over, I don't want to spend the rest of my life like this.\"\n\n\"I know that. Who'd want all the baggage that comes along with being a woman? Right now, you've got the best of both worlds.\"\n\n\"And you're the best part of it.\" \n\nThey kissed, and she teased him about his breath. \"Was Jason trying to get you drunk? You taste like whisky.\"\n\n\"I poured myself a long one in the car on the way back.\"\n\n\"How very unladylike.\"\n\n\"I'll show you unladylike.\" He wrestled her down, and she pulled off his bra and panties. When she removed his gaffe, his penis sprang to attention, and she rolled over on top of him and straddled him, humping him like he was the girl. Once again, they came together, over and over, only this time they stayed in bed and talked all night. ",
        "* * *\n\nJan was grateful for the hiatus which followed his big date. While each of the girls was given her shot at Jason, the others all enjoyed a one-day pass outside the compound. Jan knew exactly how he had to spend his free day.\n\nHe was a few minutes late for his lunch meeting in West Hollywood with Hap Arnhold. Wearing dark glasses in an attempt to overcome his new celebrity status, he found Hap holding forth at his regular table. Jan was wearing the same sundress that had wowed the crowd at Dodger Stadium, but most of the men in the restaurant paid no attention to him. Virtually all of them were gay. \n\n\"Look at you,\" Hap said proudly. \"No wonder Andrea Messenger is shitting bricks.\"\n\nJan waited until a waiter took their orders. \"Have you been watching the show?\"\n\n\"Religiously, along with the rest of the country. You're knocking them dead.\"\n\n\"When does the next episode get aired?\"\n\n\"Next week. You should know. It's the big date show, when Jason has dinner each night with a different girl. How did yours go?\"\n\n\"That's why I called you. It went great. No, better than great.\" Jan looked around to make sure no one was listening. \"Hap, I've been a guy most of my life, and I can tell when a guy has the hots for a girl. This guy wants to get into my pants.\"\n\n\"Along with every other red-blooded boy in America. So what's the problem?\"\n\n\"The problem, Hap, is that if I make it into the next round, I have to spend the night with him. And if by some miracle I can make it through that, I have to bring him home to Mom and Dad.\"\n\n\"They're gonna love this in Omaha.\"\n\n\"Fuck you!\" Jan shouted in his girlish voice, attracting stares from the nearby tables. \"Fuck you and this fucking idea of yours. There's no way I'm going to drag my family into this freak show. It would kill them.\"\n\n\"All right, all right already, calm down,\" Hap said. \"We'll think of something.\"\n\n\"I already have, Mom.\"\n\n\"What?\"\n\nThe waiter returned with their orders, and Jan waited until they were alone again. \"You heard me right, I called you Mom. So far as Jason knows, I was raised by a single mother in Los Angeles. If he's dense enough to put me in the finals, you'll have no trouble fooling him too.\"\n\n\"Now hold on. I'm a respected figure in this town. You can't expect me to parade around in a dress and pretend to be your mother on national television.\"\n\nJan leaned forward, and his voice was deadly serious. \"That is exactly what I expect. You wrote my contract. If I make it into the finals, there's an extra hundred thousand in it for me, and with your obscene commission, you'll get a big slice of that. Besides, you got me into this mess. You owe me.\"\n\n\"No way. Find yourself another mother,\" Hap said with finality.\n\n\"Then you leave me no choice.\" Jan put his purse on the table and patted his mouth with his napkin. After freshening his lipstick, he stood up to leave.\n\n\"Where do you think you're going?\"\n\n\"Straight to Andrea Messenger's office. I'm going to walk off the show.\"\n\n\"You can't be serious!\"\n\n\"Try me.\"\n\n\"They'll sue you!\"\n\n\"I'll go back to Omaha. At least then my family won't disown me.\"\n\n\"Think of me! I'll never work in this town again.\"\n\n\"What a shame.\"\n\n\"Jan, please!\"\n\nJan spun on his heel and headed towards the door. \n\n\"All right! All right! I'll do it!\" Hap cried.\n\nJan turned around and returned to Hap's table. All eyes in the restaurant were on him as he sat down and kissed Hap on the cheek. \"Thanks, Mom.\"\n\n* * *\n\nJan was waiting up for Becca when she returned from her date with Jason that evening. \"How did it go?\" he asked her as he watched her undress.\n\n\"It was dreamy, just like your date. He's really a nice guy, don't you think?\"\n\n\"Do you have feelings for him?\"\n\n\"Now it's your turn to be jealous! Of course I do. He's a hunk.\"\n\n\"So it's just physical?\"\n\nBecca waltzed around the room in her bra and panties, pretending that she was dancing with her Prince Charming. \"I dunno, Jan. It's nice spending time with a guy who doesn't wear lipstick and nylons.\"\n\nHe got up to leave. \"Where you going?\"\n\n\"Back to reality. Thanks for the cold shower.\"\n\n\"Hey, I was only kidding, you know that.\"\n\n\"Were you?\" he said as he opened the door.\n\n\"Please, come back.\"\n\nOne dramatic exit was enough for the day. Jan closed the door behind him and returned to his room.\n\n* * *\n\nJan and Becca avoided each other for the rest of the week. In fact, the tension between all of the girls was palpably higher as the taping of the next rose ceremony approached. Finally, the day after the last quarterfinalist had her dinner with Jason, the girls were herded into two limousines and taken back to the mansion in Palos Verdes. Even Gloria was silent during the forty-minute drive.\n\nOnce again, they were assembled at the foot of the spiral staircase, and once again Jason pronounced their fates. Gloria, Becca and Jan were each presented with a rose. Two of the other girls broke down, and the third gave Jason the finger off-camera.\n\nThe three winners were ushered into one of the limousines along with Andrea Messenger, who had a clipboard on her knees as they headed back to the Girls' House. If she was concerned about the upcoming train wreck between Jason and Jan, she gave no indication. \"Okay, ladies, you've had almost a week to decide where to take Jason on your overnight getaway. Becca, you first. Where to?\"\n\n\"I want to stay in one of those high roller villas at the Bellagio in Las Vegas.\"\n\n\"Done. How about you, Gloria?\"\n\nGloria, who had kept uncharacteristically quiet, closed her eyes and smiled. \"I want the 'Pretty Woman' suite at the Beverly Wilshire Hotel. That's where they filmed the movie, right?\"\n\n\"No problem.\" She turned to Jan with trepidation. \"And you, Jan?\"\n\n\"We're going to hire a sport fishing boat in San Diego and go deep sea fishing off the coast of Baja.\"\n\n\"What?\" all three of them asked in unison.\n\n\"You heard me. Jason told me he loves to fish, and I've got a little sailor dress that I've been dying to wear.\"\n\n\"Okay, if that's what you really want,\" Andrea said, wondering how they would be able to support a camera crew on board a fishing boat. Gloria started talking up a blue streak about her plans for her romantic evening with Jason. When Jan looked over at Becca, she nodded and gave him a conspiratorial wink, as if to say, \"I don't know what your game is, but I'm going to figure it out.\"\n\nGloria's getaway was scheduled first, followed by Becca and Jan. When they returned to the Girls' House, Gloria went off to pack her things while Becca and Jan had a light lunch together. \n\n\"So much for your theory about Gloria,\" Jan said to break the ice. Things were still cool between them.\n\n\"New fact. Changed the equation.\"\n\n\"What fact?\"\n\n\"Gloria gave Jason a blow job during dinner the other night.\"\n\nJan choked on a crouton. \"You've got to be kidding!\" he said as he washed it down with iced tea.\n\n\"Nope, it's true.\"\n\n\"Did she tell you?\"\n\n\"Are you kidding? I learned it from one of the camera guys I was flirting with before my date.\"\n\n\"No way.\"\n\n\"Oh, yes. When she came back from the ladies room during a break in the taping, she ducked under the tablecloth and crawled under the booth. Nobody saw it except the guy who told me, and he's pretty cool. He said Jason sat up with a start, and then his eyes got real big all of a sudden. Next thing he knew, Jason had this shit-eating grin on his face, and Gloria came out from under the table looking like a cat who just swallowed a canary.\"\n\n\"You girls.\"\n\n\"Isn't it gross? But you gotta admit, it worked for her.\"\n\n\"I can't believe Jason is that superficial.\"\n\n\"Dear, sweet, innocent Jan! Are you sure you're really a guy? I think you've been wearing skirts and dresses too long, Missy.\"\n\n\"Okay, so she put out. Jason can have any girl he wants. Why pick her?\"\n\n\"So he can get laid tonight, dummy. That's why. Don't you realize what this means?\"\n\n\"That Jason is going to get fucked tonight, I guess.\"\n\n\"Guys are so dense sometimes,\" she sighed. \"It means you and I are headed for the finals. Jason wants to get his rocks off tonight, and Gloria is a sure bet for that. It takes the pressure off him with us. By the way, nice move with the fishing trip. Are you going to jump overboard when he discovers you're really a guy?\"\n\n* * *\n\nBecca and Jan kept to themselves the next day, and when Gloria returned from her overnight, there was scarcely time to grill her before Becca and Jason were off to Las Vegas. All they learned was that Jason was wonderful, the suite was amazing, and Gloria had the best sex of her entire life.\n\nJan felt downright depressed after Becca departed with Jason. Who was he jealous of, Becca or Jason? As he lolled around his room, listlessly packing a nightgown for his night on the boat, he kept going over the things she had said to him, and the gulf that had formed between them. \"It's nice spending time with a guy who doesn't wear lipstick and nylons... you've been wearing skirts and dresses too long, Missy.\" \n\nAnd that was before their big blowup. In order to charter a fishing boat in San Diego in time to make it out to deep water during daylight hours, they would have to get up early tomorrow, a fact which had infuriated Becca when she found out about it just before she left for Las Vegas. She complained bitterly to Andrea Messenger that it was all a plot to cut short her getaway with Jason, but Andrea had explained that they had to stay on schedule. Becca was still seething when she stormed out of the compound.\n\nJan finished packing and sipped a glass of wine as he soaked in the tub before shaving his legs one last time. Tomorrow would finish him, unless his cockamamie plan worked. He had another glass of wine before he fell asleep, once again dreaming that he was a girl, this time on the eve of her wedding and honeymoon. He woke up with a start when the alarm told him it was 4:00 am. \n\nJan wasn't kidding about the little sailor dress. It was navy blue, with white piping on the hem and collar, and a red kerchief that he tied loosely around his neck. Bare legs and topsiders completed the nautical theme. When he joined Jason at Santa Monica airport for the quick trip in the network's jet to San Diego, he detected exhaustion on Jason's face. But he seemed to perk up when he saw his date.\n\n\"Wow. You're not going to catch any fish dressed like that, but you sure look cute,\" Jason said as he strapped himself in beside Jan.\n\n\"You can catch the fish, big boy, and I'll make sure your beer stays cold. Deal?\"\n\n\"Deal. Man, was I stoked when they told me about this. How did you know I liked sport fishing?\"\n\n\"You told me, silly, don't you remember?\"\n\n\"I probably told you a lot of things I don't remember.\"\n\nThe sleek jet turned onto the runway and blasted into the sky. \"How was your date with Becca?\" Jan asked above the roar of the engines.\n\nJason seemed surprised by the question. \"Uh, we're not supposed to talk about that.\"\n\n\"Sorry. I thought you liked my honesty.\"\n\nThat threw him. \"Well, I do, but I mean, that wouldn't be fair to Becca, would it?\"\n\n\"Who says I have to play fair?\"\n\n\"Look, this is almost over, and I really like you, okay? Let's not blow it now.\"\n\nJan gave him his sweetest smile. \"You just passed the test.\"\n\n\"What test?\"\n\n\"Jason, this whole thing has been totally weird, but the thing that's worried me the most was that the whole world would learn about whatever might happen between us. It's like we're in such a goldfish bowl. If you'd told me about your date with Becca, I'd be afraid we had no secrets.\"\n\nJason frowned. \"Where do you get off testing me?\"\n\n\"Jason, if we're going to make it, it's going to have to be for real. No relationship can survive if one person is totally dependent on the other. I'm sorry, but I just can't sit here and say whatever you want me to say, and do whatever you want me to do, in the hopes that you will select me over the other girls. If I did, and you picked me, we wouldn't last five minutes once we got away from this circus. That's what this is supposed to be all about, isn't it?\"\n\nJason reached down and squeezed Jan's knee. \"You know something? You're amazing. Not just pretty, but you've got a real head on your shoulders. The only other one who comes close to you is Becca. There, how's that for honesty?\"\n\nJan reached forward and kissed him on the cheek. \"That's what I like in a man.\"\n\nThey pressed their heads together as they looked out the window at San Diego's spectacular harbor, then they were on the ground and speeding towards Shelter Island for their rendezvous with the charter boat. The Silver Bonito was just as Jan had imagined, small and sturdy, her decks crowded with fishing gear and one very uptight camera crew. Andrea Messenger was waiting for them at dockside.\n\n\"Okay, kids, here she is,\" Andrea said. \"The beer and the bait are already on board, and the Captain has promised to cook whatever you catch for dinner tonight. We'll see you back here tomorrow morning.\"\n\nJan pulled a floppy hat out of his canvas shoulder bag and sat down on the afterdeck across from Jason, who was clearly in heaven. As Jan had anticipated, the roar of the engines made small talk impossible, and for the rest of the afternoon they bounded over the open ocean until they were on top of a school of albacore. Jason hooked one almost immediately, and Jan cheered him as he battled with it, perspiring in the hot sun. Jan rubbed sunscreen on his muscular arms and thick neck, keeping him supplied with cold beer as he reeled in fish after fish.\n\nThe sun was low on the horizon when the Captain headed back towards San Diego. They would drop anchor just outside the harbor, Jason and Jan sharing a cramped cabin with a toilet and shower while the camera crew retreated below. Jason was clearly exhausted as they watched the sun dip into the Pacific during the long run back towards the harbor, and Jan massaged his aching shoulders and kept him plied with beer. When they finally dropped anchor, the Captain served up a delicious dinner of grilled albacore, which Jason wolfed down while Jan picked at his plate.\n\nEventually, Jason noticed Jan's lack of appetite. \"Something wrong?\" he asked.\n\nJan nodded his head and started to cry.\n\n\"What is it?\"\n\n\"I'm seasick.\"\n\n\"You are? Why didn't you tell me?\"\n\n\"You were having such a great time, I didn't want to spoil your day.\"\n\n\"Jan, I'm so sorry.\"\n\n\"Please, don't be. It was my stupid idea. And you know what? Even though I feel totally lousy, this has been one of the greatest days of my life.\"\n\nJason led Jan to the bedroom and tucked him in under the covers after he took off his dress. \"You go to sleep, it's the best thing for you.\"\n\n\"Are you sure you'll be all right?\"\n\n\"Hell, I'll be fine, the boys are playing poker down below, I'll go take some money off them and then sleep in a hammock under the stars. Go to sleep, baby. I'll see you in the morning.\" He kissed Jan on the forehead and quietly closed the cabin door behind him.\n\n* * *\n\nAndrea Messenger paced nervously back and forth on the dock as the Silver Bonito swung into her berth. There was no sign of Jan or Jason on deck. Were they even speaking to each other? Would Jason fly off the handle when he saw Andrea? Under his contract, he had no way out of the show, but that didn't mean he had to be pleasant about it. How in the world had she let Hap Arnhold talk her into this? At least she had covered her rear end with the studio executives. But they could still make her a scapegoat. \n\nSuddenly Jan and Jason emerged from a hatchway, laughing and joking about something. Jan was still wearing the blue sailor dress, and Jason looked like he had slept in his tee shirt and cutoffs. What the hell was going on?\n\n\"Good morning,\" Andrea shouted at them. \"Have a good time?\"\n\nJason pointed to the stack of albacore waiting to be offloaded. \"The best!\" he shouted back.\n\n\"How about you, Jan?\" she asked after the Captain cut the engines. \"Everything okay?\"\n\nJan knew that the cameras were rolling. \"It was wonderful,\" he said with a sigh. My man caught our dinner, and then he tucked me into bed. It was every girl's dream.\" \n\nThe cameras caught them getting back into their limousine for the short drive to the airport. When they were alone, they laughed about the look an Andrea's face. \"I don't know what was eating her, but you're quite the little actress,\" Jason said.\n\n\"You have no idea,\" Jan replied. When they got back on the plane, Jason nodded off as soon as they strapped themselves in, and Jan knew that he was home free.\n\n* * *\n\nHaving slept for nine hours in the cozy little cabin, Jan felt and looked terrific when he returned to the Girls' House, a striking contrast to the bedraggled appearance of the other girls who had preceded him. Becca eyed him warily as he stopped by the dining room for a cup of coffee before returning to his room.\n\n \"Still wearing the same dress, I see,\" Becca said. \"You're going to give us all a bad reputation.\"\n\n Jan faked a yawn. \"I was too tired to change. Besides, Jason really likes me in this dress.\"\n\n \"How many times did you do it?\" Gloria asked.\n\n \"The nerve of you!\" Jan said. \"What makes you think I'm that kind of girl?\"\n\n \"Come off it, Sister,\" Becca said. Suddenly Jan was afraid that Becca might spill the beans. It would be a smart move, which would simultaneously knock her chief rival out of the competition, and endear her to Jason forever when he realized what she had done for him. \n\n Gloria saved him. \"I bet they screwed all night, after Jason's night with you. They tell me Jason lost his ass at the tables, which must have put him in a terrific mood, then you guys had to get up in the middle of the night to fly back to LA. He had to be horny.\"\n\n \"Tell us about your evening,\" Becca retorted. \"Did you blow him under the table again in the dining room, or did he take you straight to bed so you could suck him off while he had room service?\"\n\n Becca and Gloria had to be forcibly separated by Andrea Messenger and one of the gophers as Jan ducked out of the clubhouse and returned to his room.\n\n* * *\n\nThe girls rode in stony silence to the penultimate rose ceremony, which was mercifully short. Jason selected Becca and Jan, after thanking Gloria for all the good times. She seemed genuinely shocked when he dumped her, and before she was led away by network staffers, she tearfully thanked Jason and wished the last two girls well. Jan reckoned that she was angling for a shot at \"The Bachelorette\". Becca wrote her off as a ridiculous bimbo.\n\n Gloria was whisked off in a separate limo, leaving Becca and Jan to ride back to the lonely Girls' House with Andrea Messenger. Arrangements were already underway for Jason to meet their families, and each of the girls was given a date and time for the film crews to show up at their parents' doors. Becca, who was from the Chicago, would go first, and her large Italian family was already gearing up for the spectacle. \n\n Needless to say, Andrea Messenger was more than apprehensive about Jan's situation. She accepted at face value his description of his childhood, substituting his true sex for the girl in the yarn he had spun for Jason. Would his mother welcome her son and his boyfriend with open arms? Was America ready for that?\n\nThings had gotten way out of hand, and all Andrea could do now was hang on tight and pray to God that Jason had the good sense to choose Becca. Then again, she knew full well that if he did propose to Jan, the sensational revelation, when leaked to the media before the airing of the final episode, would propel their ratings into the stratosphere. A \"win-win\", the network suits called it, but for Andrea, it was a disaster waiting to happen. \n\n* * *\n\nThe Girls' House was deserted after Becca and the crew left for Chicago, leaving Jan alone with plenty of time to think. \"The Bachelor\" had consumed his existence for months, and it was time to start planning his life after the fantasy ended.",
        "It had become his routine to begin each morning with a trip to the medicine cabinet for his daily dose of premarin. There were only three pills left in the bottle, which brought home to him the wild ride that he had been through, and the enormous changes that lay ahead for him.\n\nBecca had been right. What started as a game had turned into much more. Jan had always been honest with himself, which was one of the reasons he had gone for Hap's crazy idea when it became clear that his acting career was heading south. Now, as he surveyed his naked body in the bathroom mirror, he contemplated what he had done to himself. Slowly but surely, he was turning himself into a girl. \n\nIt wasn't just the hormones. His voice, his gestures, even the way he thought were becoming more and more feminine. He knew that he was dangerously close to the point of no return, and it scared him that he even considered the possibility. Scared him because, deep down inside, he knew that Becca was right. He was enjoying this way too much. \n\nHow else to explain the thrill he had experienced yesterday during another shopping trip on the network to select his outfits for the rest of the show? It was only to a shopping center in Santa Monica, but the cheers and encouragement he had received from the people passing by were astonishing. \"You go girl!\" from the women, and \"I love you!\" from the men. Jan was blushing by the time he got to Talbot's, and he lingered with the salesgirls, gossiping about Jason and the other girls on the show. They made him try on dress after dress, complementing him on how sensational he looked as they searched for just the right one. When he finally left, laden down with packages, they gave him a standing ovation, clutching the autographs which he had written for them in a girlish hand.\n\nOne of his new outfits was laid out on the bed for him to wear that morning. He was going to meet with Hap to rehearse their plans for the upcoming meeting with Jason. Jan knew that the event would be a farce. In fact, he was counting on it. Something drastic would have to happen to throw his romance with Jason off the rails before it was too late. The spectacle of Hap Arnhold masquerading as his mother was just the thing.\n\nJan shampooed his hair and shaved his legs and underarms in the shower. He no longer needed to shave his face, another sign of his advancing femininity. After blow-drying his hair, he experimented to see if it was finally long enough to pull back into a ponytail. It was just the right length, so he fastened it with a scrunchie and tucked a few loose strands away with bobby pins. \n\nJan hadn't had an erection since his last night with Becca, another worrying side effect from the hormones. He tucked his limp penis easily between his legs and stepped into a pair of panties, noticing with concern that the gaffe was no longer necessary. He was even more alarmed when he put on his Wonder bra, which was completely filled out by his emerging breasts.\n\nBack to the bathroom, where he studied his face in the makeup mirror on the vanity. His eyebrows needed a bit of tweezing, which he took care of quickly, and then he moisturized his skin before applying his makeup. He was using less and less these days, sometimes just a little eyeliner and lipstick, although this morning he took his time and experimented with a different eye shadow and mascara. He brushed some blusher over his foundation, and finished off with a pink shade of lip gloss. His new look was softer than before, and very pretty.\n\nHe returned to the bedroom and surveyed the new clothes he had laid out for himself. A simple wool dress, which would come just to his knees and tie in the back with a bow. A black slip with a froth of lace at the hem. Black skimmer flats and tights. All for an off-camera meeting with his agent. What in the world was happening to him?\n\nAs he sat on the edge of the bed and slowly eased the delicate tights up his smooth legs, he was hopelessly torn. \"Get out of here! Take off these ridiculous clothes and get off those hormones before it's too late!\" part of him was shouting. But another voice, a seductive one, was saying, \"This is so much fun, and it feels so good! C'mon now, be honest. Don't you love it?\" As Jan shimmied into his slip and zipped up his new dress, he knew which voice was winning, and it terrified him. \n\n* * *\n\nBecca's warm and wonderful family smothered Jason. Her mother gorged him with homemade pasta while her father kept his glass full of Chianti he'd made in the garage, and her four brothers one-upped each other with their knowledge of sports and rock groups. Becca sat with a stricken look on her face throughout the ordeal. By the time Jason finally escaped, he was totally exhausted\n\nHe had two old friends from college in Chicago, and he managed to slip away from his entourage to meet them at a sports bar on Clark Street. Unrecognizable in his Cubs hat and sunglasses, Jason slowly unwound as the guys caught him up on old times and ribbed him about his sudden notoriety.\n\n\"So who's it gonna be? The blonde or the brunette?\" one of them asked.\n\n\"Come on, guys, I can't tell you that. It's in my contract.\"\n\n\"Hey, you can tell us. I bet it's the chick from Chicago. She's hot, man.\"\n\n\"My girlfriend tells me it's gonna be the blonde,\" the other one said. \"She says you're like putty in her hands.\"\n\n\"Big step, bro,\" the first chimed in. \"Which one of us gets to be the best man?\"\n\n\"Get real. I'm not gonna marry anybody.\"\n\n\"Hey, time out. I thought that was the deal here. Aren't you supposed to propose to one of them?\"\n\n\"Give me a break. That's just show business, guys.\" He said it as if they were two rubes wandering around Beverly Hills with maps, looking for the homes of the stars.\n\n\"I don't get it,\" one of them persisted. \"Those are two great girls. Don't you want one of them?\n\n\"I'm a celebrity, dude. I can get any piece of ass in America.\" \n\n\"Then how are you gonna get out of this?\"\n\n\"I'll flip a coin, give one of the broads a rose, take her out a few times, and then split. No big deal.\"\n\n* * *\n\nJan's brief meeting with Hap reassured him that there was no way he was going to win the competition. One look at Jan's \"mother\" in her fright wig and garish makeup would send Jason screaming into the night. \n\nHap had managed to redecorate his small house off Laurel Canyon into domestic respectability, removing some of the more shocking artwork and hiding his live-in boyfriend at a friend's place for the duration. The same makeup artist who had presided over Jan's transformation, sworn once again to secrecy, had gone to work on Hap. The challenge had been to create a woman unrecognizable as Hap Arnhold, and in this he had succeeded beyond Hap's wildest expectations. The final product was a cross between Peg Bundy and Phyllis Diller on a bad hair day. At least Hap had shaved off his mustache.\n\nBack at the Girls' House, Jan could tell from the look on Becca's face when she returned from Chicago that things had not gone well for her. Hesitantly, he knocked on her door, and when she opened it, it was obvious that she had been crying. She closed the door behind him and slumped down on the couch.\n\n\"You're in,\" she said. \"My big fat Italian family blew it for me. All you gotta do is show up in a dress and pick up your rose.\"\n\nJan sat down beside her and started to laugh. Dressed in shorts and a baggy tee shirt, he looked like a girl, but it was a guy's laugh, deep and hearty. \n\n\"Go ahead, yuk it up, you twerp. Wait till Jason finds out you're really a guy. Or have you decided to go all the way with this?\"\n\nJan was no longer laughing. \"That's what I wanted to talk to you about. Becca, I'm really worried.\"\n\n\"About losing this thing, or winning it?\"\n\n\"I'm not talking about the damn show. I'm worried about what's happening to me. What you said was true. I'm becoming more and more like a girl, to the point where I can't even remember what it was like to be a guy. I can feel my old life slipping away, and it scares the hell out of me.\"\n\n\"Is that what you really want?\"\n\n\"I don't know what I want anymore.\" Now Jan started to cry, real tears, and Becca held him as he started to shake uncontrollably. \n\n\"It's okay, Jan, let it all out. Tell me how I can help you.\"\n\nJan knew the answer, but he was afraid to ask her. Not afraid of what she might say. Afraid of what he might find out.\n\n\"Come on, Jan, tell me. Please.\"\n\n\"It's not fair to you.\"\n\n\"You really are starting to think like a girl. Tell me what you want, dammit.\"\n\n\"I want you.\"\n\nShe leaned forward and kissed him, then she reached over and pulled off his tee shirt. Becca kissed him again, gently, while she started to unfasten his bra. As Jan responded to her, he thought he could feel himself becoming aroused. Miraculously, after months of estrogen therapy, his body still wanted hers, and as they played with each other's breasts, his manhood slowly stiffened. When he knew he was ready, he pushed her down and took her like a man.\n\nThey stayed in bed all afternoon, talking about anything but \"The Bachelor\". When Jan finally returned to his room, he washed the last of the premarin pills down the drain.\n\n* * *\n\nFor slapstick comedy, nothing in the annals of network television can rival the madcap meeting between Jason and Jan's mother, Happy. As if there were a laugh track, one can actually hear the crews off camera breaking up as they tape the tumultuous segment. Jason's face is frozen in shock from start to finish.\n\nHappy, dressed in black Capri pants and gold lam\u00e8 slippers, greets Jan and Jason with bear hugs, her enormous breast forms wobbling inside her tight sweater. As she escorts Jason around her home, Jan can be seen holding his sides as Happy improvises about her daily routines as a stay-at-home mom. When they finally sit down to dinner, Happy gushes about Jan's girlhood, bragging about her daughter's prowess at ballet, figure skating, finger painting, ad nauseum. \"Did you know that Jan sold more Girl Scout cookies than any Brownie in the history of Los Angeles? Imagine, competing against the children of the stars who sold cookies out of their limos! How I wish her dear father was here to see her now, bringing such a fine young man home for dinner. Another piece of fruit?\"\n\nTowards the end of the tape, as Jason backs towards the door, Happy tells him, \"Don't believe what they say about daughters turning out like their mothers. My mother was a lovely woman, as delicate as the rose I just know you'll present to my precious Jan.\" Jason and Jan were speechless during the ride back in their limo. The network had to fill the rest of the episode with flashbacks to the early rounds of the competition.\n\n* * *\n\nThe big day finally arrived. In order to minimize the possibility of a leak, the final rose ceremony was scheduled to take place a few hours before the episode aired on national television. There would be just enough time for the crew to edit the tape and tee it up for the network feed.\n\nJan was up early for a long jog before breakfast. Becca was nowhere to be seen. Jan had a quick bite in his shorts and sports bra before returning to his room to change, for the last time, into America's sweetheart. The tabloids were full of pictures of Jan and Becca, the popular consensus being that Jan had won Jason's heart on the Silver Bonito. Las Vegas odds makers favored Jan over Becca by 2-1, and office pools around the country gave him a clear edge.\n\nSomehow the knowledge that this was the last time he would ever do this gave Jan bittersweet feelings as he put on his makeup. His blonde hair was long enough now to pin up, and he tied it into a French braid with the help of a few tips Becca had given him the night before. They were inseparable again, a strange combination of lovers and girlfriends, at least until the show ended. When Jan reported the calamity with his bogus mother, Becca had laughed until tears rolled down her cheeks, and when they made love that night, Jan knew that it would probably be for the last time. Tomorrow she would belong to Jason.\n\nHe took his time putting on his lingerie and stockings, savoring the sensations one last time. After he put on his dress and heels, he studied himself in the mirror as he reflected on the past few months. The girl looking back at him was a national celebrity now, admired and adored all over the country. He was going to miss her, but not as much as he had missed himself. In a few hours he was going to be Mr. Jan Peterson again, and he couldn't wait for it to happen.\n\n* * *\n\nTwo separate limousines were waiting to take Becca and Jan to their reckoning with Jason in Palos Verdes. When Jan climbed into his, he found Andrea Messenger sitting on the long settee. \n\n\"I've got to hand it to you, Jan,\" she said. \"You've had a heck of a run.\"\n\n\"Sounds like you think my number is up.\"\n\n\"To be frank, I hope so. God knows how the country will react if you get the rose, let alone poor Jason.\"\n\n\"He's a big boy. And don't tell me you're really concerned about him. If you were, you would never have let it get this far.\"\n\n\"Maybe not. I don't think any of us expected you to make it this far, Jan. The question now is, how are we going to finish this.\"\n\n\"Isn't it up to Jason? Or have you already tipped him off?\"\n\n\"Believe me, if it were up to me, we'd have already done it. But the powers that be are convinced that it would look worse for us if we rigged this fiasco. All we can do now is try to keep things from spinning out of control.\"\n\n\"What does that mean?\"\n\n\"It means this: if Jason chooses Becca, you're going to go quietly into the night. The identity of the mystery man will be revealed at the very end of the broadcast, after Jason and Becca are safely on their way to paradise.\"\n\n\"And if he chooses me?\"\n\n\"Then you're going to hand him back the rose, tell him you're really a guy, and get the hell off the stage.\"\n\n\"Yikes! What happens to me?\"\n\n\"You get a nice check and thanks for the memories.\"\n\n\"How about Jason?\"\n\n\"Like you said, he's a big boy.\"\n\n* * *\n\nJan was shaking when the crew led him to a gazebo on the mansion grounds overlooking the Pacific Ocean. When Jason suddenly appeared, he had a sad smile on his face, and he started right in on his consolation speech. \"Jan, you are an amazing woman, and this has been the hardest decision I ever had to make.\" Jan tuned Jason out as he rambled on with his memorized spiel, relieved beyond words that the ordeal was finally over.\n\nWhen Jason was through, Jan kissed him on the cheek and left in a hurry. If the viewers thought he was heartbroken, so much the better. It would amplify the shock when his identity was exposed at the end of the show.\n\nThe drill was for Jan to speed off in his limousine before Jason handed Becca her rose, but for some reason he felt like sticking around. When the network staffers tried to urge him into the car, he backed them off with a few tart words. After all, he was still a celebrity, and they acquiesced when he told them he needed to get some air before heading back to the compound.\n\nMeanwhile, Becca was waiting at the gazebo for Jason to make his entrance. When they kept her waiting for Jason to talk to Jan, she knew she must have won, and her emotions were a jumble of excitement, relief, and genuine happiness. \n\nThen Jason materialized with a rose in his hand, and she waited for him to tell her why he chose her. But as she listened to his well-rehearsed speech, professing his eternal love and devotion, it was clear to her that he hadn't even written it. He was reciting it like a catechism, empty words spoken with feigned emotion by a bad actor. \n\nAs he neared the climax of his canned proposal, Jason got down on one knee, and Becca caught something out of the corner of her eye, moving in the distance over Jason's shoulder. It was Jan, walking slowly around the grounds, looking up at her in despair. Suddenly Becca knew what she had to do.\n\n\"What a crock,\" she said.\n\nJason stopped in mid-sentence, stunned. Andrea Messenger, standing beside one of the camera crews, looked like she might have a stroke at any moment. The silence was deafening.\n\n\"What did you say?\" Jason finally asked. He looked helplessly over at Andrea. This was not in the script.\n\n\"I said, 'What a crock.' Get off the ground.\"\n\nJason stood up uncertainly and managed to ask, \"What's going on?\"\n\n\"I'm dumping you, Jason. You don't love me. And you know it.\"\n\nJason turned on her with sudden fury. \"Screw you. I really wanted Jan anyway.\"\n\n\"Oh yeah? Well, get this: Jan is the guy.\"\n\n\"What?\"\n\n\"She's a guy, you idiot! Your dream girl is a guy. And you're not getting him, because he's mine.\"\n\nWith that, she threw down her rose and started running across the lawn towards Jan, who was watching it all in disbelief. When he realized what was happening, he started running towards Becca, and when he caught her in mid-stride, he lifted her off the ground, spinning her around and around as he hugged her and kissed her. The cameras kept rolling as they raced across the lawn to Jan's limousine and scrambled inside. Jason stood rooted to the ground as they squealed down the driveway and disappeared.\n\n* * *\n\nLOS ANGELES: Last night's episode of \"The Bachelor\" was the most watched program in television history, according to data released by Nielsen analysts. The surprise finale, in which the winning contestant ran off with the runner-up, is reported to have enraged the program's sponsors, who have been besieged by complaints from around the country. Hollywood agent Hap Arnhold confirmed that Jan Peterson, the out-of-work actor who disguised himself as a woman to get into the series, has been swamped with movie and television offers. Andrea Messenger, executive producer of \"The Bachelor\", was not available for comment, and she is believed to have resigned from the network for personal reasons. \n\n* * *\n\nOne year later, Jan and a very pregnant Becca were enjoying a late Sunday breakfast beside the pool at their Beverly Hills estate. \"Wow,\" Becca said, looking up from the book section of the Los Angeles Times. \"Andrea Messenger's tell-all book about 'The Bachelor' is number one on the best seller list.\"\n\nJan put down the script he was reading and poured himself another cup of Kona coffee. \"Good for her. How are my girls feeling this morning?\"\n\nBecca glowed with contentment. \"I feel wonderful, and I'm sure your future daughter enjoyed the surprise visit from her Daddy last night.\"\n\n\"I just find you incredibly beautiful this way.\"\n\n\"Better get used to it. We're going to have a big Italian family.\"\n\n\"Believe me, it's going to be my pleasure keeping you pregnant.\"\n\n\"I knew you were a stud when you were able to get it up on estrogen.\" She laughed when he swatted her with the script. \"What are you reading?\"\n\nJan ran his fingers through his short blonde hair. \"Hap sent me the screenplay for 'The Jessica Project'. You know, the story about an assassin who has to go undercover as a girl.\"\n\n\"I loved that book. You'd be perfect as Jessica.\"\n\n\"I don't know. I'm afraid of getting type-cast.\"\n\n\"It would be fun seeing you as a girl again. You can wear my clothes for the screen test. Can I help with your makeup?\"\n\n\"Better watch it. Jason might come looking for me.\"\n\n\"According to this book review, he's working as a bartender somewhere in the Valley.\"\n\nJan reached back for the sweet voice that was destined to win him his first Academy Award. \"Serves him right for dumping me.\""
    ],
    "authorname": "thrillerauthor",
    "tags": [
        "reality tv",
        "bachelor"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/reality-tv-2"
}