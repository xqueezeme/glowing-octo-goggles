{
    "title": "Jim and Edie Again Ch. 05-06",
    "pages": [
        "<center>Chapter 5 -- Consummation</center>\n\nI was still doing research when I heard Edie's phone ring. She had different ring tones for Rita, Mindy, and each of her two children, so I could tell the caller was Rita. My gorgeous naked lover scrambled for the kitchen counter to get her phone and she took the call. I listened with half an ear.\n\nEdie came into my office holding the phone to her chest to mute what would be said. \"We've been invited to another cookout. This time at Bruce and Mindy's tomorrow night. Do you want to go? I've been asked whether you want to put any restrictions on the evening or leave early, as well. Anything is all right with everyone.\"\n\nI smiled at her. How can you not smile when the hottest woman on the planet is looking at you with a smile ... and she's naked in high heels and looks like sex on a stick? I would have flattened her on the counter and fucked her blind, if I hadn't just done that an hour earlier.\n\n\"Tell Rita that I said yes, and no restrictions.\" I tried to sound nonchalant.\n\n\"Really! That's great.\" She put the phone back to her ear and went back into the kitchen. The conversation continued for ten minutes and then Edie came back to my den.\n\nEdie said, \"Are you sure you're ready to share me?\"\n\n\"Wrong question,\" I noted. \"I share the things I own, but I don't own you. You are your own person and can do what you please. I've told you several times that I want us to be equals in this relationship.\n\n\"The question I will answer is 'Am I ready to see you make love with two other men?' and I can answer that by saying 'Yes'. I think I'm ready. I've run through lots of scenarios in my head about what I'll see you do, with whom, and how I'll feel. I've embraced the concept of compersion, and have rehearsed how I want to feel as I see you making love with someone else. I've been reading sexy stories about it for the past half-hour.\n\n\"I should add that I've also embroiled myself in the scenarios of loving Mindy and Rita, both together and one at a time. I figured their two husbands might want to gang up on you. Remember I teased about a two-man gangbang, well that may not be that far-fetched. We didn't talk about it, but they might DP you or involve you in a spit-roast.\"\n\nEdie muttered, \"Double penetration ... wow! I haven't had anybody 'back there' in thirty years or so. Harry didn't do that, but four years ago I was occasionally spit-roasted with Harry and Hank. What will you do if both women want you at the same time?\" \n\nI smiled; my research was paying off. \"One rides me and I eat the other, or I fuck one while she eats her friend. I expect there'll be some swapping off during the evening. I am ready for that and expect it. I plan to be at the top of my game. I remain a little uncertain about how things get started. I assume we eat, clean up, and then the new arrangements unfold. Do you know?\"\n\nEdie nodded, \"Only what happened three or four years ago. After dinner, Rita would go to Harry, and Hank would come to me and we'd start making out. Depending on where we were, each couple would find a place, usually nearby -- sofa, chair, couch, rug, or bed, and we'd make out and lose our clothes, usually with help of their partner. Once that had happened, we'd go back to making out, play orally with each other, and then make love. Nobody rings a bell and yells 'Go!'.\"\n\n\"Good to know. I would have waited for a bell,\" I said wryly.\n\nEdie got serious, \"You know even though I did this a few years ago, I still wonder how I'LL feel seeing YOU with Mindy or Rita. You're the nicest man I've ever met and I don't want to feel that I'm going to lose you.\"\n\nI told her, \"Well, think about this. I love you and want to be with you for the rest of time. I've probably had the opportunity to do something with Mindy but didn't know it. I do love her but I have no wish to hurt Bruce, my best friend, or to break up his marriage. I feel the same about Rita and Hank, although I've known them less time.\n\n\"I have to admit that the idea of being with either or both other women is somewhat exciting. Even given our ages, I find them physically appealing. I don't have a lot of sexual experience with women, even back in my salad days I was pretty much a straight-arrow and people weren't falling into bed with each other back then, at least in the circles I traveled in. I did date, but most dates were pretty tame. Being at this part of my life and having this opportunity is arousing and I guess the realization of a fantasy of some kind.\"\n\nI held my arms out to Edie, \"Come sit in my lap.\"\n\nEdie was nude. We'd been playful that morning and I'd shaped and shaved part of her pubic hair into a heart shape before we made love. She liked me playing in her playpen. \n\nShe said, \"I will, come with me. I want to show you something.\" She led me down the hall to our bedroom. She set up a chair about six feet in front of our floor to ceiling mirror, and then had me remove my shorts and t-shirt. \"I want to feel skin and ... well, some penetration.\"\n\nI did what she suggested. She sucked on my cock for a couple of minutes and when I'd swollen a goodly amount she backed into my lap and impaled herself on me. We cuddled and I could feel her clenching her pussy around my cock with her Kegel muscles. I could also look in the mirror and see our bodies and my penetration.\n\nEdie said, \"God, you feel so good inside me. I will never tire of you being in there. Someday, I'd like to see how many hours in the day we can do this.\"\n\n\"I like that idea. If you keep squeezing me like that, I'll cum sooner rather than later.\" She stopped temporarily.\n\nEdie said, \"Look at us in the mirror, except I want you to think that the cock inside me is Hank's or Bruce's. It's very fulfilling and feels really good. You can hear me moaning because it feels so good and is so orgasmic. I could spend all night with one of those cocks sawing away inside me. Can you visualize that?\"\n\nI did look and got the message and feelings that she wanted me to. I turned her slightly in my lap so I could kiss her more solidly. We French kissed and dueled with our tongue for ten minutes. I was also gently pinching each nipple and then stroking her pussy trying to avoid her clitoris. I was edging her just as she was edging me.\n\nAfter ten more minutes of that game, I picked her up and carried her impaled on my cock to my bed. I carefully lay her down and then started to pummel her body with mine. This time my fingers found her clit, and I focused there as we fucked. She went right into orbit and orgasmed. Just as she was ending, I started. I filled her juicy little quim with my hot seed as we kissed.\n\nWe enjoyed our afterglows for a few moments, and then I changed position so I could eat her sodden pussy, licking up my own fluids as well as the copious feminine juices that she'd produced.\n\nEdie said, \"Every time you do that to me, a feeling of awe comes over me. I never knew a guy that would do that -- eat a pussy he'd just fucked bareback. Did Diane have you do that to her?\"\n\n\"I did do it to her, but she never requested it. I think she liked it; she never said. I just figured that I loved her, and it was one more way I could show her.\"\n\n\"Well, I don't like it ... I LOVE it. You can do that to me anytime.\"\n\n\"To tell the truth, at least from my point of view, the act is overrated by guys as disgusting and to be avoided. Semen is pretty tasteless, and the juices you produce are far tastier and more odiferous. I love eating your pussy, so why not?\"\n\n\"What were you reading when Rita called?\"\n\nI chuckled, \"I was reading some racy stories on a free website that posts them by different authors. I've been focusing on 'hot wife' stories where the wife or girlfriend in the story has sex with other men or women; usually men. The better authors then talk about the responses and emotions of the husband or boyfriend to what has happened.\"\n\n\"Do you write?\"\n\n\"Not yet, but you're going to inspire me at the rate you're going. After some of the experiences we're about to do play out, I'll write something. I'll count on you to help edit and give me an honest appraisal of whether the story would be worth publishing.\"\n\n\"Yes, please. I'd love to read any story you write. You have to use my name in the story though.\" Edie looked so cute all naked and perky beside me. She was grinning at me.\n\n<center>* * * * *</center>\n\nEdie and I just walked around the side of the house carrying our contributions to the drinks and meal. I'd suggested that Edie wear a dress with a very short skirt and no underwear. She liked my idea. \n\nMindy saw me and came flying across her back patio and threw herself into my arms and lavished kisses on me. I returned fire with equal enthusiasm.\n\nWhen Mindy stopped kissing me, she turned to Edie. \"You devil. You blew my husband while you were nude and he hasn't been the same since. He may require psychiatric care the rest of his life. He was already in love with you, but I think he's in packing his bags so he can spend the rest of his life with you now.\" She giggled at the thought.\n\nEdie gasped, \"Oh, dear. I'm sorry. It was spur of the moment thing. I wanted to tease him ... and Jim.\"\n\nJust then, Bruce came out of the house carrying a tray of food to be barbecued. He came over and shook my hand and then kissed Edie. He reminded her, \"Thank you for the other day. You are so sexy. I wish I could get Mindy to stay naked around the house all day.\"\n\nMindy rolled her eyes. \"If I looked as good as Edie, I would.\"\n\nI herded everyone towards where Hank and Rita were just getting up from their chairs to greet us. Rita's kisses quickly escalated to deep French kisses with our tongues dueling with each other. She pressed her body against me and ground around.\n\nI warned her with a smile, \"Don't wear out that tongue; I plan to use that extensively on your hot little pussy so it can bring you fifty or a hundred mind-blowing orgasms.\"\n\nRita stared into my eyes, \"Really? I hope so. You are such a dream guy. Now, I'll count on it.\"\n\nMindy was right there, \"Well, I want to have some of those, too.\"\n\n\"No problem. Do you want to start right now?\" I wasn't sure whether I was teasing or not.\n\nBoth women looked uncertain, but liked the idea. Mindy finally said, \"After dinner, although I like the way you think. You can come by the house any time, too.\"\n\nWe socialized. Edie must have somehow alerted the men that she was commando under her little summer frock. They stood on either side of her, each man rubbing one of her bare ass cheeks as she looked content with the activity. Jim noted that both men had developed bumps in their shorts.\n\nThe casual cocktail hour morphed into dinner as steaks and salmon came off the grill. Mindy and Rita sat on either side of me and in physical contact. Opposite us were Hank, Edie, and Bruce. Edie's foot found my leg and she just rested it there to be in contact with me. She flashed me a smile that had love written all over it.\n\nRita was really an auburn-haired pixie; I doubted she was over five feet tall. While kind of wiry, she also had a pair of knockers that she liked to flaunt by wearing tops that displayed a copious amount of cleavage. She confessed to enjoying flashing others in public, often with wardrobe malfunctions. Like Edie, she'd retained her youthful looks as well as her devilish attitude. I learned she'd always liked doing outrageous things, especially if sex were involved. Somehow, she'd kept Hank performing to her standards throughout their thirty-year marriage. They also had a daughter with family living in the Midwest.\n\nMindy worked hard to maintain looks and weight. She was taller, a natural brunette, and not ashamed to allow some gray to seep into her hair, yet she was far from having that 'grandmother look' many women her age adopt that makes them look truly elderly and prudish. I know she jogged with Bruce on most days, as well as did yoga and worked out many hours each week. It showed on her toned body. Bruce and Mindy have two sons and their families in North Carolina near where they used to live.\n\nAlthough I didn't participate at that level, the conversation over dinner was almost frenzied. Each idea floated was pounced on with eager support and energetic discussion. I did contribute, but at a more measured level. I thought that people were hyped up waiting for the hot sex to start. I also moderated my intake of alcoholic beverages, sticking more to caffeinated soft drinks; I wanted to be awake and alert, not spacey and doped out as the rest of the evening progressed.\n\nAfter dinner, Bruce brought out a tray of with three liqueurs -- a cognac, Grand Marnier, and B&B. I figured Rita for a Grand Marnier, so poured a demi-glass for her. I went over and went to hand it to her, but had a better idea. I took and sip, held it in my mouth, and then bent to kiss her. She liked the kiss idea, and warmed to it even better when my tongue wormed into her mouth.\n\nAs she responded to the French kiss, I squirted the rich orange-flavored liqueur into her mouth. I felt her wobble, and so held her. Our kiss intensified and she moaned and pressed against me. We held the kiss for a long time, our tongues always in contact. Eventually, her eyes closed and she swooned.\n\nAs we parted, Rita muttered, \"Fuck. That was the best fucking kiss I've ever had in my whole life. You gave me an orgasm -- pretty intense, too. I've never had an orgasm from just kissing.\"\n\nI smiled at her, and turned to Mindy who'd come up beside us to watch the show. She said, \"B&B, please. I want the same result that she had.\"\n\nA moment later, I'd also rendered my best friend's wife weak in the knees with a liquid kiss. As we parted, she whispered to me, \"I love you. I want to fuck you for the rest of time.\"\n\nI whispered back, \"I love you, too. What now?\"\n\nShe smiled and pointed across the patio to where the M-M-F threesome stood by a wide chaise. Bruce was just removing the short dress that my girlfriend Edie had worn. She then stood naked between the men. At a word from her, they both started to remove their clothes -- shorts, fancy t-shirts, and underwear.\n\nAs they turned naked to her, Edie grasped them taking a cock in each hand. It was the sexiest thing I think I've ever seen -- her holding a cock in each hand as she alternately kissed each man. She slowly stroked each man as the two men rose to hardness the consistency of tungsten steel. Hank started to suck on her breasts.\n\nI turned back to Rita and Mindy, \"I think you have too many clothes on.\"\n\nI'd barely finished the sentence when Rita peeled off her shorts and top. She was commando. Mindy followed but had worn a bra and undies. As the two of them stripped, I did, too. Both women reached for my cock at the same time. The result was two hands holding my rising shaft. They looked happy. I kissed with each of them.\n\nRita asked, \"Do you want to stay where you can watch Edie or sneak away somewhere with us? We've done both, so don't care.\n\nI smiled, \"Watch. I'm a voyeur. Besides they may give us ideas of things to try.\"\n\nI nudged the women onto the nearby chaise. We cuddled together, and then Rita started to feed me her breasts. Mindy liked that idea and joined in. At one point, with some laughter, I had nipples from both women gracing my tongue in my wide-open mouth at the same time. They were kissing.\n\nI slid down the chaise, and ran my tongue through Mindy's bush. I must have hit the right place because her whole body jerked and her eyes popped open in surprise. Although awkward, I added fingers in the pussies of both women. I noticed the opposite effect across the patio on another chaise; Edie had fingers from both men inside her pussy as she squirmed in joy. I could hear her purring noises and words of encouragement to Bruce and Hank.\n\nI shifted over to Rita and ate her for a bit, really getting active with my hand. The two women continued to kiss and paw at each other's breasts. Just watching that made me harden more. Maybe I should watch more lesbian porn. Both Rita and Mindy had a high jiggle factor.\n\nAfter switching back and forth a bit, I heard a sigh and moan of delight across the patio. I looked and Edie had apparently just impaled herself on Hank's cock. She shifted around and then started to slowly rise and fall on his penetration of her body. She held Bruce's cock in one hand, and often lapped at the head before inhaling the entire shaft.\n\nMindy pleaded, \"Make love to me. I want you. We both want you.\"\n\nI slipped the head in and then on successive strokes into her body added a fraction of inch. The way I did it made it take two minutes before I pushed into her with my whole length. I started using my thumb on her clit, and her squirming and writhing under me increased.\n\n\"Rita, why don't you give Mindy a chance to eat you out while I fuck her?\" She quickly straddled Mindy's head and slowly lowered her pussy to her friend's mouth. Mindy's tongue went right to work as I slowly pistoned into her body. Talk about sexy and arousing, I think I extended an additional six inches in length and girth. Mindy was moaning as she ate out Rita.\n\nTen feet away, Edie lay back on her chaise as Bruce started to piston into her body in the missionary position. They were kissing wildly and he also had a hand on one of her breasts. Hank stood beside them watching with his cock pointing at the stars. I guessed that he had gotten near and didn't want to go on a hiatus so early in the evening. He was backing down, yet Edie was stroking his leg but not his hard dick.\n\nMindy came. I think the whole neighborhood knew, at least if they interpreted her long loud moan correctly. Rita's pussy in front of her lips did nothing to quiet the announcement. Rita did quickly lie down beside her friend and sapphic lover and spread her legs in invitation to me. \"Fuck me, Jim.\"\n\nI told her, \"I saw a porn star with the words 'Fuck me' tattooed right above her pussy. That should be your motto, too.\"\n\nRita said, \"If that would please you, I'll do it tomorrow. That'd be especially for you ... oh, God, you are hitting places deep inside me in just the right way.\" I was also using two fingers on her clit, too. I could see the glans of her clit noticeably showing from its generous hood.\n\nRita came. She was quieter. Mindy was beside us stroking her slit and occasionally reaching over and replacing my fingers with hers on Rita's little knob.\n\nFor a change in pace, I kept fucking Rita, but leaned to my side and started to eat out Mindy again. After some repositioning, she had Rita's head resting on her thigh as I fucked the smaller woman and ate Mindy. Rita could also turn her head and lick either of us if I aimed my cock at her.\n\nI simultaneously watched as Bruce penetrated Edie. She lay back and took hold of Hank's cock and brought it to her mouth, sucking the shaft and licking all around the head. I could tell both men had to moderate their activity lest they'd come prematurely. They both wanted a nice long fuck with Edie. The two men changed positions several times.\n\nLater, when I checked on the moans from ten feet away, Edie was cowgirl on Hank as Bruce was feeding his hard cock into her ass. The two men were DPing her, something she said hadn't happened for a long time. I commented to the two women I was with, and they nodded, so I went and had Edie suck on me, so she was 'airtight'.\n\nEdie smiled up at me after a few minutes, \"I can taste someone's pussy on your cock, maybe both of them on there.\" She gestured, \"Go back to them. I'm sure they miss you.\" We shared a kiss and some other love words.\n\nAs I got back to the two mature nude nymphs on the other chaise, Rita captured my cock. Mindy immediately started to lap and fondle my balls. I returned to rigid in about two microseconds. Mindy announced, \"I've missed my daily allotment of cum. I need you to fill my little cunny with a gallon of your man juice.\" She lay back and spread her legs.",
        "\"A pleasure, I assure you. Would I have ever found a way to do this with you before Edie broke the ice?\"\n\nMindy nodded as I started to move in and out of her warm sheath. \"Yes. Bruce and I had talked several times about how to get you to loosen up and play with us. We got a little diverted with Rita and Hank, but were coming back to the question. I really wanted you. I'm serious when I tell you that I love you. That takes nothing from Bruce. We both believe you can love many people at the same time -- mind, body, and spirit -- including sex.\"\n\nI switched back and forth with Rita and Mindy, bringing each of them to small pleasurable climaxes. Mindy eventually worked her way up to a nice orgasm that she kept a little quieter. Rita was again on her friends face, getting a lot of tongue in her pussy. I blasted my load into Mindy as I was kissing Rita.\n\nMindy got us all bottles of water from a small refrigerator set in the patio bar. I checked in with Edie. She'd gotten Bruce's load in her pussy and Hank's in her mouth and partly on her face. She looked sexy as hell with that slightly splattered look. \n\nAs I finished some of my water, I went down on Mindy. She looked on in awe. Rita commented, \"You are one fabulous lover. Not only do you drop a load, you clean it up.\" I smiled at her with cum and Mindy's juices from ear to ear. \n\nI told Rita and Mindy, \"No one is cleaning up my girlfriend. She's just sitting over there fondling your husbands' cocks. I think you should both go over there and clean her up -- both pussy and face, and I guess where some of it dripped onto her breasts.\"\n\nThe two checked with each other and then moved over to Edie. She guessed what was about to happen and spread her legs. Mindy and Rita sat on the patio and started munching and sucking and fingering Edie's pussy. Mindy eventually moved up her body to lap her Edie's breasts and face. There wasn't much cum left, but they French kissed while Rita worked Edie's lower half.\n\nI eventually went and kissed Edie. \"You doing all right?\"\n\nShe grinned at me, \"The best. I missed this. If you're willing, we are so going to do this all the time.\"\n\nI kissed her. \"Tell them they can come over anytime. They need to be sure they don't create any drama at home, however.\"\n\nRita grinned, \"What about Mindy and me? Can we come over anytime providing we aren't creating drama at home?\" She giggled.\n\nI shrugged and looked at Edie. She laughed, \"Yes, but you might end up having to fuck me, too.\"\n\nThe six of us did another round. We agreed that Hank and Bruce would stay with Edie, and I'd again take care of Rita and Mindy. The next time, I unloaded into Rita and then ate her to some additional orgasms.\n\nBy that time, Edie was full of Hank's jizz, and covered in Bruce's batter. Rita, Mindy, and I cleaned her up with our tongues. We all went into the pool for a bit, and then Edie and I drove back to my house.\n\nEdie pushed on me a bit. \"Are you sure you're all right. I love you and don't want to see you worried or disappointed in me in any way. I certainly don't want to lose you.\"\n\n\"You were a little minx tonight and I loved watching you fuck our friends. You were a delight, highly arousing, and inspiring. The feelings of angst and some cuckold feelings happened as I watched, but they didn't linger. I shifted over to compersion, and I don't care what Hank and Bruce think about me, I was too busy fucking their wives.\"\n\nEdie said, \"I'm not going to leave you for either of them. Just like never. They're nice but they're not you. Are you going to leave me for Mindy or Rita?\"\n\nI shook my head. \"Nope. They're nice and we had fun. I dished out a lot of orgasms, but the emotional attachment is at best moderate, whereas you're at the highest rating possible.\"\n\n\"Do you have any juice left for me? I'm still horny.\"\n\nI smiled as I pulled into my driveway, \"I do, as a matter of fact, and I find myself in the same state of mind.\"\n\nWe were both naked by the time we reached the bedroom door. I ate out Edie for a bit, and then we made love and fell asleep in each other's arms.\n\n<center>Chapter 6 -- A Penny for Your Thoughts</center>\n\nEdie was again walking around her house naked wearing her sexy black heels. She'd catch my eye and vamp a little for me by holding her breasts in my direction or shaking them in a sexy way, swinging her hips, or blatantly offering to fuck my brains out. It was noon and we'd already fucked twice since awakening. She really was insatiable and horny all the time, plus she loved me. I happened to like those characteristics in a woman.\n\nI now had two offices, one in each of our houses. I just carried my laptop and various changes of clothing in a 'Go Bag' when I went to her house. I also had become the 'man of the house' for the two structures and yards. We both had landscape services, but they left an incomplete job in terms of tending the yards and trees, so I always had some work to do. \n\nI was working in the yard cutting back a sea grape tree along the sea wall when Edie appeared at the edge of the patio near me in her naked state. She was visible to the neighbors, if anybody looked through their hedges at us or if anybody motored by in a boat. I was all sweaty, but she came over and kissed me, even pulling my bare sweaty body against hers. \"I love you. I love your sweat.\"\n\n\"What brought this on? You need a shower now.\"\n\n\"We're going to have a surprise in a few hours.\"\n\n\"What kind of a surprise?\"\n\n\"I guess I'd better tell you so you can prepare mentally for the experience. My daughter is coming for a four-day visit she said -- Penny or just Pen, if you prefer. She answers to both. She sounded stressed, so I suspect her husband is in the doghouse. She didn't explain.\"\n\n\"Nice,\" I said and rolled my eyes. \"You said you hadn't seen her for a few months. Her husband or just her?\"\n\n\"Just her, I think. They don't have children yet. Pen has 'something serious' to talk to me about. She was on the verge of tears, so this sounds serious.\"\n\n\"Want me to go home so you can 'girl talk' as you wish? You keeping me anonymous?\"\n\n\"No, stick around, although I might put a few clothes on while she's here. Already thought about whether you leaving was desirable; it's not. She doesn't know that I have a live-in boyfriend that I'm serious about, so that'll certainly be the subject of some discussion. You just be you, and you can play stepdaddy to her. She'll love you. We may need a male perspective on one thing or another.\"\n\n<center>* * * * *</center>\n\nEdie left to pick up Penny at the airport at two o'clock. An hour later, I heard her pull into the two-car garage that also contained my car. If she hadn't told her yet, the extra car was sure to trigger a conversation. I headed to the garage to help carry in any luggage.\n\nAs I got to the garage, and pretty light-haired brunette looked up at me with surprise. \"OH! Hi. I'm Penny.\"\n\n\"I'm Jim. Nice to meet you. Need help with any luggage.\"\n\nPen pointed at a huge bag that she'd just wrestled from the truck of the car onto the garage floor. A second large suitcase still lay flat in the back of the trunk. I made a mental note that this girl was NOT staying for only four days. She was moving in here. Oh, shit!\n\nEdie came around the car and gave me a very affectionate kiss right in front of Penny. \n\nPenny sighed and then came in front of me. She also kissed me on the lips. \"I suppose that I'd better get used to my mother having a boyfriend.\"\n\nI was partially speechless. I muttered, \"Errr, don't do anything you aren't comfortable with.\"\n\nI manhandled the two large suitcases into the guest bedroom. Harry and Edie had moved into the house after Penny had graduated college and taken her first job. She was an editor for Carstead Publishing, one of the leading fiction publishers in North America. They were based in Chicago, where Penny and, I learned, David her husband had an apartment.\n\nI could tell everything was not all right with Penny. She had a dark cloud over her head and was not happy. I guessed that her state of mind had little to do with me or my relationship with her mother, so I put those worries aside. I made the leap that David had done something bad, and her returning home to mom with her wardrobe essentials was part of the response.\n\nEdie came up to me when Pen was in her room opening up her suitcases and hanging clothes. She whispered, \"David cheated. Developed another girlfriend. Pen is crushed. She's left him but doesn't know what to do.\"\n\n\"Ah, that's too bad. She's here for a long time.\"\n\nEdie rolled her eyes, \"Yeah. Sorry about that. I really thought she said four days.\"\n\n\"I already miss my naked girlfriend,\" I teased.\n\nEdie got very thoughtful. \"Maybe a little of that might not be so bad. Shock value, you know. Let me think for a few minutes, but don't act surprised if I do something daring.\"\n\n\"Seriously, how can I help? How can you help besides being 'Mom'?\"\n\n\"She's my baby, but I confess that as a business woman, she often got the short-end of the stick. She kind of grew up on her own -- a latch-key kid and all that. Fortunately, she stayed out of trouble.\"\n\n\"So, she's pretty independent, it sounds. I'm here to help, and if leaving helps, let me know. I can lend at least one man's perspective if that's ever wanted.\"\n\nJust then there was a knock on the front door. Edie went to get it since it was her house that we were in. Hank was there, even with a bouquet of flowers. He said loudly, \"Hi Edie. I'm here to help you take the edge off your Saturday afternoon. I'm sure you've already rendered Jim into a state requiring a long-time in recovery.\"\n\nEdie sighed and kissed Hank, \"I can't do anything. My daughter just arrived and she's having a tough time with some aspects of her life. I'd love a rain check, but I need to beg off today.\"\n\n\"No problem. I understand. Take these flowers as a small gesture of my love for you.\" He looked past Edie and saw me. \"Hi Jim.\" We made little wave gestures at each other. Hank headed back to his car as Edie watched and waved.\n\nStanding in the hallway to the bedroom wing of the house, Penny said, \"Who was that?\" She'd heard the bell and came to see who'd arrived.\n\nEdie responded, \"Oh, a friend. He dropped off some flowers -- a nice gesture. I'll put them in water and maybe you can put them in your room to help cheer you up.\"\n\n\"No. No. They were for you. I heard what he said about loving you. Wow! You have two guys in love with you.\"\n\nEdie chuckled, \"He's married and I also love his wife and she's one of my best friends. This was all aboveboard. Just to set the record straight, Jim is my man. Hank is a distant second.\"\n\nPen said, \"Well, he sounded ... disappointed that you were busy. Thank you for focusing on me. You should just go on with your normal life. I just need a complete change of scenery, some warmer weather than Chicago offers, and some time to think. For now, I think I'll lay out in the sun for a bit.\"\n\nPen disappeared back to the guest room.\n\nI observed to Edie, \"She's suspicious about Hank and maybe about you and me. Anyway, I'm going to work in my little makeshift office for a while.\"\n\n\"I'm think I'm going to show Penny just how in love with you I am and how I express my sexuality with you.\" She grinned broadly, and headed off to the master bedroom. I was really wondering what was about to happen. I wondered if she was thinking through everything.\n\nPen appeared and walked through the living room wearing a sexy bikini. I had to admit that the acorn hadn't fallen very far from the tree. She was gorgeous and the word 'ripe' came to mind. She smiled at me working in my corner of the room where I had my large laptop set up as well as a second monitor. My set-up with some pretty permanent modifications to the corner showed that I was a pretty fixed commodity in the house.\n\nShe paused as she sized up my workspace and considered the whole situation. \"You really live with my mom?\" she asked.\n\n\"I do. I have my own home about twenty minutes from here. We spend time over there, too. You mom has the better view of the bay. Pretty typical for Florida.\"\n\n\"Is mom making you a kept man?\"\n\nI laughed at the audacious question. \"No. Absolutely not. We're both widows. She explained about your father's insurance, and I had a very good and high paying job at NASA and my late wife taught school, so we squirrelled away a lot of money for retirement. I think our expenditures on each other have been pretty equitable. Besides, I am not at all the kind of guy.that would sponge off anybody.\"\n\n\"I'm sorry. It's just ... well, I didn't know she had a guy friend until we got home here from the airport.\" She thought about saying some other things, but then turned to head out to the patio. Only then did I realize the bikini bottom was really a thong. The only thing behind her was the butt floss that helped hold the modest patch of material against her mound.\n\nWith an obvious excess of lust, I tried to go back to my computer and my financial forecasts of my personal expenditures.\n\nPen had been on the patio about ten minutes when Edie reappeared. She was wearing her Wicked Weasel bathing suit -- at least the bottom half of it. It was a bikini -- a transparent bikini that clearly showed the manicured heart we'd made of her pubic hair as well as her slit. Up top, so to speak, she wore nothing. Her perfect breasts were on display and gave me a jolt of arousal in my shorts.\n\n\"Why don't you put on your bathing suit and come out?\"\n\nI was an easy sell. I could stare at the two hottest women in the Northern Hemisphere. \n\nI changed and Edie had waited for me in the living room. She grinned, \"I wanted you to see Pen's reaction to my outfit.\"\n\nI kissed her, \"Your lack of outfit, you mean.\"\n\nAs we walked to the door, she said, \"Well, I've been naked with you most of the time for over four weeks. This is almost confining.\"\n\nPen had moved a chaise closer to the pool and aimed it at the sun. She was lying back with her eyes closed. She looked almost asleep, but she heard us and blinked her eyes open.\n\nPen's eyes flared as the two of us walked out, me following Edie and trying to look nonchalant.\n\n\"MOM! W. T. F.\"\n\nEdie feigned surprise at her response. \"What's wrong? This is MY backyard, my pool, and my family and my boyfriend, if that's what you're reacting to?\"\n\n\"Just that ... Jim can see your breasts ... and ... oh, my God ... the rest of you.\"\n\nEdie laughed. \"Darling Penny, if you weren't here, I wouldn't have ANY clothes on. Jim prefers me that way, I find it delightful to tease and lure him into making love with me. He's a divine lover, and never fails to please me with many orgasms. Just so you know, we've already made love twice today. He's quite the man.\"\n\nI said, \"Want me to leave so you can have a private conversation about me?\"\n\nEdie turned with one of trademark grins, \"Oh, no. I'm sorry to embarrass you.\" She took a step into my arms and planted a kiss on my lips that I couldn't ignore, so I responded. She also rubbed her breasts across my bare chest quite intentionally. By the time it ended, I had a significant enough erection in my bathing suit that it showed. I went and lay down on another of her chaises, and before I knew it, Edie was in my arms kissing me again as Pen watched.\n\nWhen Edie came up for air, I said to Penny, who was only a few feet away, \"We like each other -- a lot.\" I winked at, but she was all eyes and silent.\n\nWe reclined for a few minutes and then Edie announced that she wanted me to apply suntan lotion to her and probably Penny. \"We're baking out here, and I know I'll certainly get sun burn without some SPF 50 or something of that ilk.\" She reached under the chaise and produced a plastic bottle of the right elixir.\n\nEdie rolled over on her back and I started to apply the lotion. I also bent and kissed the various body regions just before the thorough application. Things got more interesting for me, and probably Penny, when Edie rolled over.\n\nI was working my up her legs when she announced that she didn't want the oily lotion on her swimsuit -- what little there was of it. Before I could blink, she'd peeled the scrap of fabric down her legs and tossed it on another chair. I returned to my application.\n\nWhen I got hear her pussy, she'd try to catch my hand between her legs and hold it there. I got the idea of what she wanted, and did a few penetrations with my fingers. Edie was almost dripping in her sexual juices. My girlfriend was super horny.\n\nI spent a lot of time on Edie's breasts. They were one of the last places I'd ever want to see her get sunburn. Of course, my efforts resulted in her nipples nearly exploding out of her skin they were so aroused. I pulled on each of them a little. They'd reached most of the way to that state because I also kissed and sucked on them before applying the sunscreen.\n\nI carefully used one or two fingers to do around Edie's neck and face and ears, and then stopped to admire my work.\n\nJust then a friendly voice echoed around the back yard. \"Anybody home? Anybody want to get loved?\"\n\nBruce appeared and spotted us. For some reason he didn't see Penny right away. He got off one more sentence before he saw her, \"You said come over anytime to entertain you ... Wow! Oh, shit. Sorry!\"\n\nEdie jumped up as I did, but she went to greet Bruce with words of welcome instead of lunging for a towel to cover up. When he got close enough, I reached across the chaise and bumped fists with him.\n\nEdie said, \"Bruce, this is my daughter Penny, down for a visit from Chicago. She may work down here for a bit, too. She's in publishing.\"\n\nBruce tried to recover as he took in Edie's nude body that he'd helped plunder only a few days earlier as I'd fucked his wife. Of course, he also gawked at Pen's fairly brief bikini and the rest of the wrapped package. \"Just a friend stopping by to say hello. I hadn't heard you had company. Didn't mean to interrupt your tanning session.\"\n\nI offered Bruce a drink, and he accepted some iced tea, since it was already made. Edie kept a large pitcher of the tea in her refrigerator at all times. I got one for myself and Edie, and a diet coke for Pen. I carried them out on a small tray. Bruce and I went to a round table and sat and talked about how my home was going to waste if I was going to spend all my time at Edie's.\n\nBruce subtly shared that Mindy had urged him to come over to see whether Edie had been serious about her invitation to come and fuck her anytime, day or night. I tried to explain about Pen's sudden visit and the reason. I told him that I knew none of the details, only the headlines.\n\nPenny suddenly appeared beside my chair; she must have heard my remark. With her hand softly on my shoulder, she said, \"The details are kind of squicky. I came home early from a meeting outside the city. My author I was working with had to leave early for some family appointment. David, my fucking husband, was doing exactly that -- fucking, that is -- with his work colleague. A girl named Jean. I caught them yesterday afternoon in flagrante delicto,  I believe is the expression. They were fucking in my bed -- our bed. I went bat shit crazy, kicked them out, and told them not to come back while I was there. I decided to come here late last night. I packed, and got the first nonstop flight to Sarasota. Here I am. I've been using my phone to look up divorce lawyers and get some recommendations from a couple of friends I trust not to spread the gossip too far.\"\n\n\"Does he love her?\" I asked.\n\n\"I don't know. I'm not sure I care. I sure loved David up until this. My emotions are just crazy right now. I can't hold a coherent thought for more than ten seconds.\" She paused, \"On top of that, I get here and find my own mother has a hunky boyfriend, and friends that she doesn't mind being nude in front of, I'm guessing because they've seen it all already because she is having affairs with them.\"",
        "I shook my head slowly in disagreement with her last statements. \n\nI also said, \"Well, we know what paradigms about marriage you live with.\"\n\nPen frowned, \"What do you mean -- paradigms?\"\n\n\"A paradigm is a model or pattern, in this case of behavior and expectations. I discern that you have one for your marriage that is based on couples-only, exclusivity, limited conditional love, control and ownership, and tacit agreements about how and whether other people would be involved. There are other features and other models. In at least one of those you wouldn't be here, not that we don't love your company.\"\n\nPen stared at me without a word for thirty seconds. \"You just said a mouthful. Could you say that again with a little more explanation?\"\n\nI took a breath, \"Sure. Your model for your marriage was that you would be a couple with your husband -- only the two of you. Other models allow for other people to also be included. You can love more than one person, you know. The love in your marriage is conditional; if you behave and carry your weight as I expect, I will love you. If you don't, I won't.\n\n\"I'm guessing that you think you own David and that he owns you. For him to do something like have sex with somebody outside of your marriage he'd need your permission -- a sure sign of ownership in the model. That also hints at the expectation of exclusivity the same way the couplehood part of the model does. We tacitly agree to be exclusive with each other. Exclusivity is important to some in a marriage, but it is only one option for others.\n\n\"You could agree to be non-possessive and leave decisions like that for each of you up to the individual. That suggests more equality in your marriage than perhaps you have. Does he feel and act dominant or do you?\n\n\"So, David had started to build a secondary relationship with Jean that included sex. He was acting non-exclusively, independently, without permission or control, and outside you marriage. One way to react is as you did; fire up the flight, fight, fright response. Divorce the bastard and take him for every cent he'll ever earn.\n\n\"Another way to react is to join in. Dust off your ability to enjoy some sapphic loving, and involve Jean more significantly in your relationship. Maybe, over time, she becomes a wife to you and David. Your marriage expands to be a threesome, in this case with another woman. You and Jean become best friends and lovers. Finding Jean in bed fucking David produces feelings of compersion, not jealousy and rage. You hope the two of them are having a loving experience together. You know you can join in or have your own time with either or both of them in the near future.\"\n\nBruce nodded at my short monologue. He said, \"If I may add to what Jim said, the second model is a lot more fun with more love in it than the first. Most people live in the first model, and about half of marriages end in disaster in some way, and of those that don't the parties don't rate them very high on the satisfaction scale.\n\n\"I also want to add for your own ease of mind that you should not buy into the belief that if you'd done more for David, loved him more, that he wouldn't have taken up with Jean. You don't need to buy into the model that one person can be all-things for another and provide their happiness. Happiness comes from within. There is nothing either good or bad but thinking makes it so. So, I recommend you change your thinking and thereby change your life in a good way. It's up to you.\"\n\nEdie came and stood by Bruce. She was a huge distraction to the other three because of her nudity. She put her right hand on his shoulder in an affectionate manner. He turned and smiled at her, his lips on inches away from her nipple. Bruce just couldn't resist; he leaned in and kissed the side of her breast. Edie ruffled his hair affectionately as he did.\n\nPenny's eyes flared at the audacious act. \"You two are ... intimate?\" I was both a statement and a question.\n\nEdie nodded, \"I love Jim. I also love Bruce ... and his wife. The other man you met, Hank, and his wife Rita, I would include in that statement. I am one of a group that abide more by that second paradigm for a relationship than the old one.\"\n\nBruce and I also nodded in agreement with Pen's question and Edie's reply.\n\nPenny looked at her mother, \"Does that relate to what you think I should do about David and Jean; basically, go back and make her a member of our family?\"\n\nEdie said with a motherly smile, \"Only you can decide that. Jim and I and Bruce just wanted you to see that there is more than one model for a marriage and a relationship. Many still believe a marriage can only be between a man and woman; they don't even acknowledge gay or lesbian marriages despite their legality on a national level in this country and many others. Who's to say that only two people is the right number?\"\n\nPen said, \"And you have sex with each other?\"\n\nEdie said smoothly, \"Yes. There are some things you should know about your mother that I need to share with you, including how active my libido is. I guess that wasn't hereditary.\"\n\nPenny said, \"I'm not sure I'd agree with that. We need to talk without the guys here. I'd be embarrassed for them to hear.\"\n\nI turned to Bruce, \"Want to ... ride down to Starbucks and get some coffee?\"\n\n\"Great idea.\" Bruce rose. He had a hard-on in his pants.\n\nI changed my clothes back to Florida casual and we took Bruce's car and left the house.\n\n\"Sorry if I tilted the scales with Penny or you two. I agreed with all you said, and so does Mindy. We love living in the Second Paradigm.\"\n\n\"Calls for a lot of communication.\"\n\n\"Got that right. On the other hand, about the only subject Mindy and I talked about had become reminders about putting the trash out or whether one of us had a change in schedule of some kind. Now, we seem to talk about everything, and talking about sex was the springboard for that change.\"\n\n\"You're cool that I've made love to your wife over the past couple of weeks?\"\n\n\"Ecstatic, actually. I actually got to make love to Miss Iowa, although I know she was crowned a long time ago. She's more beautiful today than back then.\"\n\n\"She was kind of wild back then, according to her. I think that's part of what she's sharing with Penny. She tells me that she's reverting and loves it.\"\n\nMindy and Rita, too. There must be something in the water.\"\n\n<center>* * * * *</center>\n\nBruce dropped me back at Edie's house two hours later. We both figured that allowed for a good mother-daughter talk, including some shocking revelations.\n\nAs I came in the front door the two women were sitting on the living room sofa. Penny got up and almost ran into my arms. She was topless -- only wearing the bottom to her bikini. She flattened her body against me and kissed me, hard, on the lips.\n\nPen said, \"Thank you, thank you, thank you. You opened my eyes to so much. And mom did a 'tell all' about her life -- years ago, later with my father, and now with you.\" Edie sat nodding as she spoke.\n\nI commented, \"We build up these goody-goody models about our parents that don't reflect reality. I'm sure I was guilty of that with my folks. Every now and then I have some part of my parent's lives dawn on me in a new light, and I wonder if my old perceptions were correct. My mother married much later than her peers, and she often talked about parties at her house. I think she was a pretty swinging chick in her youth and didn't want to give that up. Add in what I now know about sexuality and hormones, and I can guess that she was a pretty hot girlfriend.\n\nI pulled my t-shirt off and tossed it aside. I pulled Penny back into my body so I could feel her breasts against my bare chest. She knew what I was doing and smiled. She intentionally rubbed her breasts back and forth until her nipples hardened. I even got a kiss. Edie stood and smiled at the two of us. Her picture must be next to the definition of compersion in the dictionary.\n\nEdie came over and whispered to Penny, but I could hear, \"If you want to make love with him, it'd be more than all right with me. He's the best lover I've ever known. I want you two to be together, too.\"\n\nPenny looked shocked, but didn't pull away from me. She looked into my eyes and I kissed her again, this time adding a little tongue. I got a lot in return.\n\nPenny stared at me as she weighed the suggestion. She finally said, \"Yes, please. I'm so horny I could burst into spontaneous combustion in any second. Moreover, Jim is my guru about relationships, how. All he said inspired me.\"\n\nEdie herded the Penny and me into the master bedroom. She gave me a light shove and I fell backwards onto the bed. Edie wrestled my shorts off. I was otherwise commando. She gestured to Penny to join us, and she doffed her monokini and lay down next to me.\n\nSeconds later, Penny had my cock in her mouth. Edie helped steer my shaft to make it easy for Pen. I worried about blasting the roof off of Edie's house when I came. I also wasn't about to argue with what was happening. Penny was as beautiful as her mother, and now I could make love to two gorgeous women.\n\nAfter a few minutes, I nudged Penny to come up so I could kiss her. Edie got in a few sucks, and then steered my shaft right into her daughter's warm and wet vagina. Pen pushed onto my shaft until there was nothing more for her to claim. Like her mother, she moaned in the ecstasy of the fullness that filled her body. We kissed with great passion and love. Edie was right there to share with both of us.\n\nSomehow, I managed to hang on for a relatively long time, our love almost consuming us as we copulated. At one point, Penny had Edie mounted over her mouth so she could eat out her pussy and try to deliver orgasms. Later, Pen rode me as I ate out Edie. Another shift and I was fucking Edie and eating out Penny.\n\nI finished in Penny, leaving a huge load despite Edie's earlier demands on my supply earlier in the day. I rolled off the younger woman so I wouldn't crush her, but she was then on me with more kisses. Edie ate the cum from her pussy. A feat that stunned and amazed Penny.\n\nAs our afterglows faded, Penny said, \"THAT was the most magnificent lovemaking in my life. I've never had so many orgasms so close together. You are quite the pair of lovers ... and one of you is my own mother.\"\n\nI told her, \"I'm glad you could let go, and not let that detail get in the way of your own pleasure.\"\n\n\"I'm suddenly deeply in love with two people. We are so going to do that over and over.\"\n\nJust then, my stomach growled like an angry dog. Unfortunately, the sound registered in at about eighty decibels, so everyone in the house heard it and possibly some neighbors. I clutched gut as the two women laughed. Edie said, \"I guess dinner is becoming an emergency now that the sexual urges have been satisfied.\""
    ],
    "authorname": "SteveWallace",
    "tags": [
        "polyamory",
        "incest",
        "loving wives",
        "threesome",
        "ffm",
        "neighbors",
        "sex party",
        "vixen",
        "cuckold",
        "coping with cheating"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/jim-and-edie-again-ch-05-06"
}