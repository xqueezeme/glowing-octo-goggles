{
    "title": "Falling Snow Ch. 05",
    "pages": [
        "Tom's head was in the clouds.\n\nHe wasn't quite sure where he was or why he was there. His muddled brain wouldn't allow him to focus on such trivial concerns. Soft, powdery earth cushioned his back, sweat cooled on his skin and Tom felt none of it. His thoughts floated listlessly, focusing on nothing and everything at once. His eyes however, were opened wide, his focus off in the distance. A voice in the back of his head told him that he needed to get up, that there was something important that he was forgetting. But for the moment, he seemed content to stare up at the sky. \n\nHe was sure that he'd never seen anything quite like it. Great fluffy masses of clouds drifted lazily across his vision. It reminded him of a painting. Like visiting the art galleries as a child and looking at the masterworks of great painters. He could have sworn that he could see every brushstroke. The pale blue color of the sky was like looking out at the ocean, expanding endlessly out to the edges of the world. Great masses of clouds drifted across the sky, like great continents across an endless sea. It all seemed so far away and yet so close. Looking up at that great landmass, he must seem like a giant. If he could only reach his hand out; he was sure he could touch it.\n\nSoft blue gave way to the darker colors of rain soaked thunderheads. A storm was coming. Even his sluggish brain recognized that. The sky was still blue but it was clear it wouldn't be for much longer. The clouds were darkening as they swallowed up the sunshine streaming through the breaks in the cloud cover. \n\nA shadow fell on him as a female figure stepped into his vision, blocking one of the last patches of sunshine and creating a halo of light around her body. It casted her features in shadow, hiding her identity from him. Tom's brain struggled to put the pieces together. She seemed to familiar. Wasn't he supposed to be doing something right now? \n\nFinally, his eyes adjusted to the changing light as the face of Aresta came into focus\n\n\"Get up. The lesson isn't over yet.\"\n\nTom remembered to breathe.\n\nHe took in a ragged breath as wonderful oxygen returned to his lungs. He rolled over onto his side and coughed into the powdery dirt as everything came rushing back to him. The fight. The explosion. Tom rose to a sitting position, his ears still ringing from the explosion that sent him to his back. Stars danced in his vision as he started to get a handle over himself again. \n\nAresta stood over him, bouncing a fireball in the palm of one clawed hand, a smug expression on her face. That's right, he thought, combat lessons.\n\n\"Had enough little Tommy boy, want to call it a day?\" Aresta said, in a mocking tone.\n\n\"Fuck that.\" He said. A touch of defiance and irritation creeping into his tone. \n\nTom stood up on shaky legs before getting his balance under him. He cursed the muggy, humid weather as he wiped sweat from his brow. His shirt was sticky against his damp skin. Even as the sunshine vanished, heat still radiated off the ground. A mocking reminder that the promised reprieve of rain had yet to arrive. The heat right before the rain was always the worst part of summer rain storms. \n\nMuggy, hot and sticky, he thought, as he surveyed his surroundings.\n\nThey were in a rock quarry on the outskirts of town, in the midst of a combat lesson. Although, Tom wouldn't quite call it a lesson. Aresta would have to be teaching him something for it to qualify as a lesson. He wasn't sure trying to stay alive as she threw fireballs at him qualified as a lesson plan.\n\nAresta launched another fireball at him before he had a chance to fully regain his breath. He saw it coming and stepped to the side, allowing the ball of reddish flame to soar past him and impact the cliff face behind him.\n\n\"Enough fucking around. Defend yourself.\" She barked.\n\nTom squared his shoulders with the fiery demon. Aresta was in her demon form. Leathery wings and pale red skin, contrasted with bright pink hair and piercing eyes that glowed slightly in the dying light. He forced his muscles to unclench as he felt the flow of magic down the nerve endings of his arms. His fingertips tingled with energy, unformed spells itching to be used. \n\n\"Begi-.\" Tom barely had time to get a shield up before the blast hit him. He reached out with his senses. He imagined his magic flowing out into the form of a barrier in front of him. A dome of bluish light appeared just a few inches in front of his outstretched arms. A column of fire about a foot-wide hit dead center of his shield. As it came in contact with his magic it spread out across the curvature of his shield. Tom clenched his teeth as he forced more magic into the spell. The flames never touched his skin and yet he felt the impact as a physical force against his body.\n\nJust as quickly as the attack began, it ended. Tom had to stop himself from sagging over in exhaustion as the flow of energy to his shield ceased.\n\n\"You're holding back, what are you scared of?\"\n\n\"I'm not scared.\" He yelled before going on the offensive.\n\nHe threw a short arc of electricity at Aresta. His offensive magic was still to dispersed and inaccurate to be of any real threat to her. She avoided the attack with a single beat of her leathery wings, which carried her only a few feet out of his range. \n\nAresta laughed at his attempt at an attack. Tom let out a frustrated grunt. He could taste the electricity in the air for all the good that it did. They'd been at it for a few hours with much the same effect. Tom barely fighting off Aresta's attacks, while trying to launch his own ineffective counterattacks. \n\n\"You can't honestly expect to be the master of succubi if you can't even land a single blow.\"\n\nAresta looked over at where he stood some 15 feet away and gazed at him with a sharp look. Tom didn't understand why she seemed so angry. It wasn't that long ago that he was just a virgin geek. He thought that he was progressing nicely. Especially when you consider that a few months ago, he would have considered getting a girl's number to be a major coup de grace. \n\n\"Or maybe you're not interested in becoming a master at all. Maybe, all you want to be is Shyira's little pet.\"\n\nTom raised his eyebrows at that. \"I'm not-\"\n\n\"Isn't that all that you are,\" Aresta said, ignoring his reply, \"Shyira's little pet?\"\n\n\"I. Am. Not. Shyira's. Pet.\" He said, gritting his teeth.\n\n\"Oh no? Ever wonder why your shield is blue?\"\n\nThat gave Tom pause, but he wasn't about to allow Aresta to see it. Whatever, he thought, I'll show her who's the pet.\n\n\"Let's go!\" He yelled back.\n\nAresta raised her clawed hands to ready another blast of energy. Tom didn't give her the chance. He stepped forward into a dead sprint towards the demonic seductress, his shoes kicking up soft, powdery earth as he went.\n\nAresta's eyes widened slightly at his charge. It was clear to him that he'd done something she wasn't expecting. Aresta was hardly the type of demon to backpedal in order to buy herself some distance. Instead, she gave him a wolfish smile as she hunched her shoulders and readied her spell with a new sense of determination. Tom was more than half way too her now and Aresta had finally gathered the necessary energy and honed in on him. \n\n\"Aer'omura!\" She yelled. Rather than send another column of fire at him, she decided to stop his charge dead in his tracks. She sent a blast of compressed air heading his way with an audible whoosh.\n\nTom threw his arms out in front of him and channeled energy, yet again, into the bluish done of his shield. Only this time he angled the shield down. When Aresta's blast of air hit, it was deflected down into the powdery silt. A cloud of dust shot up 20 feet in every direction. It went from clear, to dust storm in a matter of seconds.\n\nTom dug his shoes into the dirt as he stumbled forward, his forward momentum thrown off balance by the clash of energy. Still he was moving forward. He just couldn't see anything with the giant cloud of rock dust now obscuring his vision.\n\nHe went in the direction he last saw Aresta standing and just hoped that he wouldn't sail past her. She came into a focus a split second before he slammed into her. Tom latched onto her upper body, his head smashing into her petite breasts. He allowed his momentum to carry the two of them to the ground in a confused tangle of feet and wings. Aresta struggled, but Tom had come down at a much better angle and he soon found himself on top. Aresta lay on her back, with Tom kneeling right above her. His legs were to the sides of her hips, with both of his hands to the side of her head. The position allowed the pair to look into each other's eyes. \n\n\"I got you,\" he said breathless, a stupid grin on his face.\n\nAresta stared at him. Her lips subtly partied as she gazed into his eyes. Her muscles slowly relaxed after their fight. Her demeanor was a mirror image of the day they met, when she fought with Shyira and submitted to her. This is it, he thought, it's just like Shyira said. Tom's eyes fell to the pink lip gloss coating her perfectly kissable lips. The look was a little girlish for someone trying to imitate a college student, but Tom liked it. It reminded him of the endless years of his school life. Of all of those years of stealing looks at girls he couldn't have, daydreaming about high school romances he never got to experience. He momentarily forgot where he was as the weight of his memories, of his longing for something different, settled over him. He was transfixed with those lips as he leaned in for a kiss.\n\nAresta's punch connected with the side of Tom's jaw. Stars exploded in his vision. She took advantage of his stunned state to shift Tom's balance and extract herself from him. He recovered enough to grab her foot as she tried to scramble away. Aresta tripped and fell to the ground once again. Using his grip on her ankle, Tom used his arms to pull himself back on top of her.\n\n\"Bitch.\" He said suddenly angry. \n\n\"I'm not Shyira. I'm not so easily wooed. If you want me you've got to take me.\"\n\nFine have it your way, he thought.\n\nThe two of them rolled around on the ground, caught in a frantic struggle of limbs and claws. Just when it seemed that one of them had the upper hand, the other would find some new sense of balance or leverage to put the other on their back. \n\nTom was getting tired. He recognized the familiar burn of extended use of his muscles, without break or some sort of reprieve from heavy use. Despite the strange increase of his strength of late, he was finding that he simply didn't have the stamina to keep up the fight for much longer. His muscles were tight with the increased blood flow. He felt great, better than he'd felt in a long time, but still sensed that the end was near. The wall of exhaustion was fast approaching and he seemed powerless to come up with a way of ending the fight before he smashed into it. \n\nAresta used his momentary lapse in concentration to take the upper hand once again. She used her leathery wings as leverage against the ground. She turned a lunge of her upper body into a roll that ended with Tom on his back is a weak position.\n\nIn desperation, Tom grabbed onto the only thing within his reach, Aresta's pointed black tail. With a yelp, her demeanor changed in an instant. The fight drained out of her muscles. Her breathing became heavier as a flush to match her red hair crept up her pale cheeks. \n\nAresta's shredded clothes proved little more than a hindrance to him. He ripped her bottoms off with one hand, while careful to keep the other clasped around her tail. He gave the appendage a cautious squeeze, which produced a soft, breathy moan from the suddenly tame succubus. \n\n\"Bastard.\" She said.\n\nHis own clothes proved to be a much more daunting task as he fumbled for his shorts, careful to keep his weight on top of Aresta, pushing her chest into the dirt. Her black tail was still firmly in his grasp. He pulled is shorts down to his knees as he fumbled to line up his cock with her sex.\n\nA much loader yelp greeted his ears has his cock slammed into the velvety embrace of her pussy. Inhuman muscles seemed to welcome his penetration even as their owner gave one last struggle. Finally, comfortable in his position over her, Tom let go of Aresta's tail only to grab a hand full of pink hair as he pushed her cheek into the dirt. \n\nTom forced his aching muscles to corporate as began to fuck Aresta hard. His hips slammed into her pillowy bubble butt, as he put as much force as possible into every thrust. He was too amped up on adrenaline to do anything else. Besides he was pissed. He was no one's pet, a point he intended to demonstrate. \n\nAresta had finally ceased her struggling. Tom grunted with every thrust, Aresta's breath stirred up the dirt with every moan. For Tom's part, he was in heaven. She still had nothing on Shyira, but something about the situation had Tom really hot and bothered. Being the aggressor in bed wasn't exactly in line with his character and if he stopped and thought about it, he would start to wonder what had come over him.\n\nThere was just something raw and aggressive about Aresta's personality. He could understand why she was a peer to Shyira, he considered Aresta second to only Shyira in pure sexuality. Tom had always considered himself to be breasts man, but as he fucked Aresta, his hips slamming into her perfect bubble butt, he was beginning to understand the appeal. \n\nHe began to feel the familiar feeling of an approaching orgasm. The feeling started in his legs and rapidly moved towards his balls. It only made him hold her hair tighter, thrust his hips harder. Then he was going over the cliff. With one final thrust, he emptied his balls into Aresta's waiting sex. He could feel the now familiar effects of the energy drain as the succubus under him, fed, but it seemed more subdued than normal. Something else to think on if he ever recovered enough blood from his dick for his brain to function again.\n\nAresta gave out a throaty grunt as all the muscles in her body went lax. \n\nWith the last of his load expended into Aresta's ass, Tom rolled over onto his back. Aresta followed his motion a moment later as the two of them found themselves staring up at the darkening sky. Their breaths came out in a perfect unison of ragged breathing. \n\n\"I'll fucking kill you for this someday.\" In the smallest of whispers, she added, \"Master.\"\n\nTom failed to hear her final word. He sat staring up at the sky. The sweat cooled on his skin as a single rain drop hit his forehead. He wondered if his laughter could be heard all the way back at campus.\n\nWhy can't I ever meet a nice, normal girl who will treat me with love and respect? He mused.\n\n****\n\nTom looked down as he walked. An old habit from his earlier years at school. Keep your head down, stay out of trouble. Until very recently these were words he lived by. It also meant that occasionally he got snuck up on by things right in front of him.\n\nThe first rain drops had just begun to fall on the sidewalk at his feet. He could see the grey concrete turning steadily darker as it absorbed the moisture. He was trying to tell if the rate of rainfall was increasing or not. He still had a few minutes left to walk to his biology lab and he was worried about arriving soaked. Tom also didn't feel like running in the humid weather. He was acutely aware of the heavy, exhausted feeling in his muscles.\n\n\"Are you a fucking idiot?\"\n\nHe looked up. Sara stood in front of him, blocking his way forward. Her arms were crossed in front of her, emphasizing her chest. She wore a tight black sweater that was failing to hide her ample bust and a conservative knee length skirt. She also wore a smug, irritated expression on her face.\n\n\"What?\" He said.\n\n\"You heard me. Don't you know where you're going?\" She said.\n\n\"The botanical gardens?\" He said, confusion in his voice. \"We have a biology lab there today.\"\n\n\"Oh, no you don't,\" she said in a manner of fact way, \"Emerald Meadows Botanical Garden is off limits to our kind. Hell, if should be off limits to all humans. It's too dangerous.\"\n\n\"Sara, what the hell are you talking about? You're in my way, I'm going to be late to class.\"\n\nTom went to take a step, only to be blocked by Sara stepping onto his path.\n\n\"Things live in there, Tom. Things that don't like their territory encroached on. Especially by someone like you.\"\n\nWhat the hell was that supposed to mean, he thought. Tom went from mildly interested to annoyed by Sara's presence in a single sentence. Besides, he suspected that something else entirely was going on. \n\nHe gave her a pointed look. \"You're scared.\"\n\nHer eyes narrowed, her jaw visible stiffening.\n\n\"I'm not scared.\" She said through gritted teeth.\n\nBingo. Tom almost smiled. \"There's no reason not to come to class then.\"\n\n\"Tom, it took ten wizards to extract the last idiot to wander in there.\"\n\nTom didn't respond, his eyes were already wandering past her, to the mist clad glass building in the near distance. Since when did it get so close? He was really lost in his own thoughts today.\n\n\"Hello!\". Sara snapped her fingers in front of his face. \"They found him in five pieces, Tom.\" She said exasperated.\n\nHe felt the familiar soreness from his earlier fight. His muscles still had the post workout feeling of being, \"Pumped.\" He once heard a bodybuilder described it as being better than coming. Tom doubted that. But still, he felt good; strong, powerful and most importantly in control. The image of Aresta's exhausted yet satisfies form at his feet passed through his head. A small smile threatened to creep onto his face. Whatever, he thought, I can handle myself.\n\n\"Ya, you're scared.\" He said simply.\n\nTom walked past her gawking face without a second glance. The rain was picking up now and he wanted to get out of it before it started really coming down. A moment later her heard Sara's sneakers hurrying to catch up with him. He gave her a sideways glance.\n\n\"Coming with then?\" He said with some amusement.\n\n\"Shut up! You'd probably get killed without me.\"\n\nTom only smiled in response.\n\nThey both grew quiet as they approached the group of students standing outside the entrance. The cloud cover was low, nearly obscuring the top of the building. Rain drops already coated the vast planes of glass that formed the walls of the green houses. The sign reading, \"Emerald Meadows Botanical Garden,\" loomed menacingly above the entrance, a silent reminder that they were about to enter a strange new world.\n\n****\n\nShyira sat on the edge of the couch in the living room of Tom's small apartment. She absentmindedly filed her nails as if waiting for something to happen. The front door slammed open, announcing the return of Aresta. Shyira crinkled her nose at the sight of her dirty, disheveled figure as she came tromping into the room. Her clothing was shredded in areas. Her entire body was covered in a layer of dust and grim that didn't quite conceal the splotch of dried cum on the inside of her thighs.\n\n\"I'd call you a dirty whore if I didn't think you'd take it as a compliment.\" Shyira said.\n\n\"Ya, well your boy decided he wanted to play dirty.\"\n\n\"Oh,\" she said, eyeing the inside of her thighs, \"and what kind of dirty did he play?\"\n\n\"Well he got the job done, if that's what you're asking.\"\n\nShyira set the nail file down on the coffee table as she leaned forward, her full attention now on the dust mop in front of her. \"So how did he do?\"\n\n\"Passable.\"\n\nA small smirk pushed up the corners of Shyira's lips. \"Just passable?\" She said mildly.\n\n\"OK, the boy did great. Is that what you want to fucking hear?\"\n\nShyira's smile only deepened. \"That's good to hear, but my patience with you is wearing thin. Refer to your Master as, \"boy,\" again and I'll rip your tongue from your insolent lips.\"",
        "She made the statement so mildly and without inflection in her voice, that it took a moment for Aresta to catch up with the conversation. She froze, her tail stiffening as tension filled her muscles. Her eyes widened. Her head slowly turned to look at Shyira. She starred at the white-haired succubus a moment before answering.\n\n\"I meant no disrespect towards, \"OUR,\" Master,\" she said, emphasizing the word.\n\n\"Good.\" Shyira said mildly, \"Anything else?\"\n\nAresta let out a sigh of relief as the tension in the room moved down a notch. Although you would have never known it by looking at Shyira. She had never as so much as raised her voice.\n\n\"You're aware of where he's going today?\" Aresta asked.\n\n\"Yes,\" she said, looking thoughtful, \"we may have to do something about that.\"\n\n****\n\nThe pitter patter of rain had just begun to beat on the glass in earnest as Tom and his fellow students shuffled into the main greenhouse.\n\nA chill had settled into the pit of his stomach. The hair on the back of his head stood on end and he couldn't quite place the reason why. The temperature in the sun starved greenhouse seemed to be dropping by the minute as heat leached out into the rainy afternoon. Or was that just Tom's imagination? There was a cold feeling creeping up on him. Like he was a character in a horror movie, who had just passed the threshold of the old creepy house. If he was the person watching the movie, this would be the part where he would yell, 'Don't go in there, you idiot.' Of course, he didn't need anyone else to yell that at him, he had Sara for that.\n\nFor her part, Sara was shooting nervous glances all around them as they walked down the path towards the pond in the center of the room. Their professor was droning on about plant biology and the objective for today's lesson. Normally Tom would be listening intently, he loved Biology. It was one of the few courses he'd taken at university that didn't seem like a massive waste of time and money.\n\n\"We really shouldn't be here.\" She said. Tom was starting to agree with her but wasn't about to say it out loud.\n\n\"Chickening out already?\" Tom said.\n\n\"I'm serious Tom,\" she said, her voice sounding more nervous by the second.\n\nThey arrived at the center of the room and Tom took a moment to look around.\n\nTheir group stood at the edge of a large pond in the center of the greenhouse. The path that they had followed snaked through dense foliage that filled up the entire room. Everywhere Tom looked he could see thick lush plants. Trees could be seen scattered across the room, but it was the thick underbrush that blanketed the ground like a green carpet.\n\nI bet you could hide in that underbrush and no one would be able to see you coming, he thought nervously.\n\nThe professor was explaining their tasks for the day's lecture and despite his nerves Tom was making an attempt to hear him over Sara's constant whining. It appeared that he wasn't the only one annoyed by her. They had caught the attention of some of the students around them. One wheezily looking busy body and turned to them just as Sara started to speak again.\n\n\"Tom, I-\" She began.\n\n\"SHHH.\" He said, his fingers pressed to his lips in an admonishing gesture.\n\nSara shot him look of pure disgust. \"You're not important.\"\n\n\"Are you even in this class?\" He asked.\n\n\"I am today.\" She said, before completely dismissing him.\n\nSara turned to Tom to continue their ongoing argument when her eyes suddenly widened. Tom turned towards the direction of the pond in time to see a greenish mist rise up from the water.\n\n\"Oh shit, here we go.\" She said.\n\nTom had just begun to turn back towards her when the dizziness hit him. His vision began to blur, but not before he noted Sara pulling a wand out of her pocket and taking a defensive posture. His footing faltered and suddenly the ground was approaching rapidly towards the center of his vision.\n\n****\n\nTom slowly drifted back to consciousness.\n\n\"-OM.\" It was like the words were coming from the end of a long tunnel. \"TOM, YOU IDIOT WAKE UP!\"\n\nTom's eyes drifted into focus. The grass was pressed against his cheek. His head swam with dizziness as he regained control of his limbs. He stood after a moment and took stock of their situation.\n\nSara was in a defensive posture, her back to him. Her wand was held out in front of her. He could see smoking piles of ash in a ring around her. A faintly purple dome of light surrounded them, keeping the greenish mist at bay.\n\nJust outside of easy spell distance was a large group of woodland creatures in a semi-circle around them. Some stood on two legs, while others stood on four. Some of them almost looked like normal animals, only not quite. A reflective greenish tint in the eyes of a wolf, a fox that blinked sideways like an owl, their features were just off enough to qualify for the uncanny valley\n\nOther creatures looked nothing like normal animals. Tom almost didn't see them at first. They blended in almost completely into the underbrush. If it wasn't for what they were doing he never would have seen them.\n\nA group of humanoid creatures made entirely of vines wound themselves around the unconscious bodies of his fellow classmates. The creatures were undoubtedly female, as Tom could make out the shape of their greenish breasts. The tip of a vine poked out of their skin where their nipples should have been. They leaked a green sap that several of them were feeding to the unconscious forms of the fallen students. He understood the purpose of the substance as more vines crawled out of the ground and snaked into the pants of his fellow students.\n\n\"An aphrodisiac.\" He guessed. They planned on milking them dry.\n\nTom had started to take a step towards them when he heard it. Girlish giggling radiated from the pond behind him.\n\n\"I'd be more worried about yourself if I was you.\" \n\nThe body of water behind him was without a doubt, a pond. Lilly pads floated on the surface. Green algae seemed to cling to every surface. Tom could smell the swampy organic soup of a 'not quite' healthy body of water. \n\nIt was there among the lily pads that he saw them, amber eyes staring back out of brackish water. They were surfacing, he could see their greenish smiles as they emerged out of the murky water.\n\nSara took her eyes off the mass of forest creatures just long enough to shoot Tom a worried glance. He could almost hear her silent demand, 'Get us out of here.'\n\nTom's sight landed on the lead girl. Her body was pale and naked, but not the type of pale of Shyira's ivory skin tone. Her skin was the waxy white of a bloated corpse that had been left in the water for a day too long. As she emerged from the water her midnight black hair clung to her wet skin, completing the analogy of a drowned corpse. \n\nHer figure was lithe and girlish. All smooth curves and young perfection. She should have been gorgeous, but while Tom found his succubi's demonic features to be hot, something about her was setting his teeth on edge. She floated there. Her upper body and pert breast in full view, in no way distracted him from the dead eyes staring back at him.\n\nAs more of the girls emerged from the water his sense of dread only increased. They were identical. No not identical, he thought, but close enough to be mistaken for sisters. They had an unnatural uniformness that was just wrong. Human beings were unique. They were individuals. The girls looked, acted and....felt like they were cut from the same mold.\n\n\"Come into the water and play with us.\" She urged.\n\n\"Fuck that.\"\n\nTom took a step back into Sara's defensive circle. She gave him an expectative look that just screamed, \"fix this.\"\n\nIn truth, Tom was terrified. But he didn't want to admit it, either to himself or to her. \n\nOne of the plant creatures had edged to close to the pair for comfort. Tom flicked his wrist and yelled, \"take that clorofiend,\" as he sent a small fire ball whizzing towards the creature. It quickly backpedaled to return to the other creatures. \n\n\"Don't I just pick the best spots for dates?\" He flashed Sara a fake jovial smile.\n\n\"Dork, she said, \"get me out of this and I'll let you take me on a real one.\"\n\n\"Enough!\" The girl from the lake screamed. \"You have entered our domain mortal. Answer our riddle or stay and play with us.\"\n\nThe collection of students, entangled by the vine creatures, were being slowly dragged into the loose earth of the green house. Many of them had already been pulled in down to their waists. They were unconscious, yet their faces were flush with excitement and their breathing was heavy. Tom wasn't sure he wanted to know what was happening under the soil.\n\n\"Speak lady and we will listen.\" Sara said in a very formal manner.\n\nTom turned back to see that Sara was speaking with her head inclined in an old-world show of respect. Sara was brash enough around him that he'd almost forgotten that she was upper class. He was sure that he would never be able to match the same level of respect she was now displaying. The lead girl from the pond inclined her head, ever so slightly in return.\n\n\"What walks on four legs in the morning, two legs in the afternoon, and three legs in the evening?\"\n\nAny pretense of formality and respect dropped out of Sara's voice. \"Are you fucking kidding me? When was the last century you used that riddle?\"\n\n\"If you don't know the answer then you must...\" The creature seemed offended.\n\nSara rolled her eyes, cutting her off. \"The answer is a human being, they teach that one in even the most downtrodden of schools these days,\" she turned to Tom, \"now let us go.\"\n\nGirlish lips opened in shock, eyes darted around the room in shock. Finally, she said. \"Thrice we must ask, thrice you must answer.\"\n\n\"That wasn't the deal.\" Tom said.\n\nThe tension in the room went up several notches. The mob of woodland creatures inched closer. \"Play with us.\" They chanted in eerie unison. \n\n\"Deceitful bitches.\" Sara said.\n\nTom and Sara turned back to back, ready to face the coming onslaught. Before it could begin a commotion from across the pond caught everyone's attention. Tom could have sworn he felt the change in air before he actually saw her. A lithe figure strutted across the surface of the pond.\n\nIt was Shyira and she was...walking on water. A moment before each of her steps could break the surface of the water, the water froze, creating a path for her to walk on. The girl's pond was turned into her very on runway.\n\n\"Show off.\" Sara murmured.\n\nShyira came to a stop in front of the ladies of the pond.\n\n\"Now what do we have here?\" Shyira asked, one manicured finger set to her jaw in a pose of contemplation. \n\n\"Go away! Woman of the frost. This is our territory; this matter doesn't concern you.\" One of the girls shrieked. \n\nShyira's eyes narrowed slightly, \"Now don't be rude. Doesn't guest right mean anything to you?\"\n\n\"They must answer our questions or stay and entertain us.\" The girl said.\n\n\"We answered their questions fairly, they refuse to let us leave.\" Sara said.\n\n\"Is that right?\" Shyira asked. Stepping closer to the girl, she kneeled down on a platform of ice until she could stare into the cold dead eyes in front of her.\n\n\"Go AWAY, Queen of Winter. They must stay and play with us.\"\n\nQueen of Winter? Tom thought.\n\n\"Now, we can't have that, now can we?\" Shyira's sugar sweet tone turned into something sharp and deadly as she finished the sentence.\n\nShyira reached down and gently grabbed a hold of the upper arm of the creature in front of her. Her feather light touch gave no warning before frost erupted across the creature's skin. A look of horror passed across her face, as she tried to pull away from Shyira grasp, her pale skin was pulled taunt, increasingly brittle with the dropping temperature. Shyira smiled a small smile as, with one final pull, the creature finally pulled away...without her arms. She screamed in agony as her skin continued to freeze, until she was little more than a froze chunk of ice floating on the surface of the water.\n\n\"Oh, do be quiet.\" Shyira said coldly.\n\nThe lead girl gave Shyira a look of pure hate and venom as she took a step back from her.\n\n\"Nice trick. Do you really think your little theatrics are going to save you?\"\n\nShyira put her hand up to her mouth and laughed a mocking little giggle.\n\n\"Oh sunshine, I'm not the cavalry, I'm the diversion.\"\n\nA curtain of fire erupted behind him as the front rank of creatures were engulfed in flame. Aresta flew through the air in all of her demonic glory. Her leathery wings kept her aloft as she swooped down to deliver columns of fire down upon her enemies.\n\nShyira's eyes glowed with a dispassionate, cold anger from the firestorm erupting on the other side of the room.\n\n\"Now, where were w...,\" Shyira began to say.\n\nOne of the ladies gave a scream of pure agony before she lunged at Shyira. The look in her eyes was one of pure fanaticism, a perfect zeal of madness. Shyira's eyes widened slightly in surprise. Shyira's clawed hands shot out and snapped the woman's neck before she could lay hands on her.\n\nOne of the forest creatures closer to Tom, gave off its own battle cry and charged him. He raised his hand in a panic and sent a ball of fire towards the creature. Tom seemed to watch in slow motion as the ball of fire connected with its target. Greenish skin turned black as the fire burned. The revolting smell washed over him as the creature stumbled. It smelt of burnt grass and death. The creature went down in a smoldering heap, but not before letting out one last cry of fury as it sent out a projectile of its own wooden flesh streaking towards him.\n\nTom jumped to one side in an attempt to dodge the projectile, but not before it had cut a scarlet line of blood into the side of his arm. A glancing blow, but one that hurt none the less.\n\n\"Tom!\" Sara called out to him as he lay on the ground clutching his arm.\n\nShyira's head snapped in his direction. A cold furry passed over her eyes. The mob of creatures continued to advance towards him. Right over the water soaked ground created by the arrival of the ladies of the pond earlier. \n\nShyira pointed a single finger at the ground at the creatures' feet. Spears of ice shot out and impaled them four feet above the ground. Tom watched in fascinated horror as blood ran down the icy projectiles from the suspended forms, staining it red like a cherry popsicle.\n\nShe turned towards the girls in the pond just as they had begun to move towards her with violence twinkling in their eyes. Shyira flicked her wrist in their direction, a look of surprise still evident on her flawless face.\n\nA great surge of water rolled out of the pond it a great wave. Tom thought the storm surge might hit him when the wave suddenly froze solid. He just had enough time to admire the sharp beauty of the frozen wave, before with a groaning sound of fracturing ice, the wave shattered.\n\nA wall of icy missiles slammed into the ladies, sending them into the cold depths of the pond.\n\nShyira never missed a beat. She turned yet again. Bringing her hands above her head, she slammed them down towards that last group of enemies. All the lights in the room popped, the glass ceiling shattered, raining razor sharp glass down upon her foes. Like the thunderbolts of some god of old the last of the creatures fell silent.\n\nWisps of fog rose from the now froze ground. Her eyes burned a sharp, icy blue revealing pale skin that almost seemed to glow in the now dark room. You could feel her rage from across the room and somehow it only added to her beauty. Tom gazed upon the vision of a demon in front of him. Fuel for a thousand nightmares, he thought, or one very ill advised wet dream.\n\nAresta, having finished off the last of her foes, landed by them. Rain pouring in from the shattered ceiling turned to snow in the frosty air. It drifted down, lazily covering the bodies littering the ground. Dead silence filled the room as Shyira surveyed the her surroundings.\n\nThe tension in her muscles finally eased as she turned to look at Tom. \"I do not consider this to be an appropriate venue for a college course.\" She flashed him a small smile. \"It appears to be far too dangerous.\"\n\n\"Yeah.\" He said simply, too tired to come up with anything better to say.\n\nThe snow was covering his fellow students the same as the broken creatures in the room. The greenish mist still curled around their bodies, although it seemed to end at an invisible wall several feet away from him. Dimly, Tom realized that Sara's magic had kept the green mist away from the two of them through it all.\n\nSara looked just as exhausted as he did. Her eyes constantly flicked from place to place, looking for new enemies.\n\nTom turned to Shyira, \"What will happen to the rest of the students?\"\n\nShyira shrugged her shoulders, \"They may die or they may live. Who can say for certain?\"\n\n\"Save them.\" Tom said, conviction creepy into his voice. \"Shyira, you have to save them.\"\n\nShe looked at him, an unreadable look in her eyes. \"Why should I?\"\n\nTom swallowed, squared his shoulders and looked at Shyira dead in the eye. \"Because I ordered you too.\"\n\nA second passed like a century before any emotion passed across her face. A shadow of amusement crossed her features, or was that just his imagination? Frost erupted along the ground and up the side of the glass wall. Hair line cracks spread out in a spider's web pattern wherever the cold touched the naked glass. With the roar of shattering glass, the wall came down.\n\nA cold winter's air blew in from the outside. The unnatural gust of cold air was no doubt the result of Shyira's magic. The greenish mist was blown away and his fellow students began to stir almost immediately. \n\nTom looked at Shyira suspiciously. \"That's it? Would they really have died if you did nothing?\"\n\nShyira just shrugged her shoulders, \"Who knows.\"\n\n****\n\nTwo succubi and an unlikely pair of warlocks walked out into the rainy weather just as the first firetrucks began to pull up the street. \n\n\"We should leave this place for now,\" Aresta said while looking over at Shyira.\n\n\"Well if you'll excuse me I've had just about enough excitement for one day.\" Sara said. She turned to walk in the opposite direction as the others.\n\n\"Hey, don't you owe me a date?\"\n\nSara shot him a look, her hands instantly on her hips, her jaw stiffened in irritation. \"You didn't save me, your succubi did. We would have been screwed if they hadn't showed up.\n\nTom marveled at her raised, disbelieving tone. She was so easy to mess with, he thought.\n\n\"Still got you out of there.\"\n\nSara rolled her eyes. She flipped her hair over her shoulder as she started to walk again. \"Come by tomorrow and pick me up around 8.\n\nTom smiled as she walked away. Aresta walked up and wrapped an arm around his neck. \"Come on lover boy. I promised Shyira I'd take you home and keep you there.\"\n\nTom eyes darted to where Shyira had stood a moment before. \"Where is she anyway?\" He asked.\n\n\"Oh, I'm sure she'll be around later.\"\n\n****\n\nIt was dark as Shyira walked through the remains of the greenhouse they had been in only hours before. The place was barren and dark, the police and staff having left for the day. The police tape used to cordon off the area blew lightly in the wind. The moon shown through the scattered cloud cover, bathing the broken glass, that littered the ground, in shadow. The plants had already begun to go into shock from the sudden atmospheric change in the room. Many of them would be following their masters into death in a few days.\n\nShyira's icy blue eyes scanned the room. Loose soil peppered the walkway. Overturned plants sat next to puddles of mud from the firefighters' hoses. \n\nBackground noise. Shyira was looking for something, she just wasn't sure what.\n\nSomething was off. The day's events hadn't gone entirely as planned. The girls of the pond were mischievous creatures. Quick to anger and easy to take offense. They enjoyed their riddles and pranks. Tricking the wayward traveler into a swim and a fuck.",
        "What they weren't, were fighters. They should have bent the knee after a show of force, not fought Aresta and herself with such desperate intensity. Something else was at play here.\n\nHer eyes passed over scorch marks and streaks of greenish blood from the battle. She could smell the ash and decay in the air. It was here, she just had to find it.\n\nHer foot nudged something among the broken glass. Looking down she found her answer.\n\n****\n\nA very tired succubus greeted Shyira as she walked into the apartment. Aresta was lounging on the couch, her wings draped over the back, her feet propped up on the coffee table. Her posture gave every indication that she had no intention of moving. Her tail swayed, ever so slightly, in a welcoming gesture as Shyira walked in.\n\n\"Tom is settled in for the night?\" Shyira asked.\n\n\"Master is safe and sound in bed. Tucked him in, gave him a kiss on the cock and everything.\" Aresta said lazily.\n\n\"Good,\" she said, \"we have a problem.\"\n\nShyira held up the unassuming band of black leather. Aresta sat up with a jerk, her eyes widened as they settled on the object in Shyira's hand.\n\n\"A discipline collar.\" She hissed.\n\n\"And an advance one at that.\" Shyira said as she examined the runes branded into the leather.\n\n\"Well that explains the fight today.\" She said. \"I've never known the girls of the pond to fight like that.\"\n\n\"Yes. The wizards in the town have been very naughty, they shall have to be punished.\" Shyira said.\n\nAresta flashed a predatory smile.\n\n****\n\nHope you all enjoyed it. I read all comments, both public and private, even if I'm not the best at responding. So vote and let me know what you think. -NP"
    ],
    "authorname": "NightPorter",
    "tags": [
        "succubus",
        "succubi",
        "demon",
        "university",
        "fire",
        "geek",
        "nerd",
        "warlock",
        "wizard",
        "garden"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/falling-snow-ch-05"
}