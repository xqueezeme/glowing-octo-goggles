{
    "title": "Top 12 Signs Your Lesbian Erotica",
    "pages": [
        "Top Twelve Signs Your Lesbian Erotica Was Written by a Dude:\n\n1. The first piece of information you learn about the object of affection is her boob size, generally in direct comparison to the heroine's. Both are still at least a cup size that's a failing letter grade.\n\n2. Rather than explain to you why such an attractive lesbian is single, he explains why such an attractive woman is gay. Also, she must indicate by word or deed a continuing interest in at least occasional straight sex and why that's of such great importance to her.\n\n3. Not content to allude to M(+)/F(+) as needed by the storyline, he writes full straight sex scenes. If and when confronted in comments, he will argue that there's more gay sex in the story than straight or that graphic and frequently brutal/rapine sex is a key contrasting point to what he can only imagine lesbian sex to be. You are as convinced as you would be by a chef who tells you that there's more chocolate than tuna in the brownies he made or that canned and mostly rotted tuna is a key contrasting point to the chocolate. \n\n4. Characters can be tomboys, punkish, athletic, or dominating, but they cannot be in any way masculine. Their dialogue, however, all sounds as though they woke up female for the first time that very day, causing them to become surprised by and consequentially have to reason through any and all seemingly unfamiliar emotional or physical reactions to common stimuli.\n\n5. At some point, a woman's clitoris is \"sucked like a miniature cock.\"\n\n6. The entire story actually makes much more sense if you replace \"boobs\" and \"nipples\" with balls, \"clit\" with dick, \"pussy\" with asshole, and \"g-spot\" with prostate, then read it as gay male porn. (This is frequently coupled with a very tenuous grasp of female anatomy on the part of the author in general, so he'll occasionally add clitoral/anal sex or something similar that makes no physical sense if the characters involved are human women.)\n\n7.The liberal use of exclamation points, juvenile dialogue, and fixation titillation makes you imagine fan service anime or even Tex Avery cartoons instead of actual women.\n\n8. He chooses the first day of a significant long-term undertaking for the protagonist - like her first day as an intern, roommate, student, teammate, or salesperson - and very explicitly explains how already nervous she is and how much the opportunity means to her. Then a stranger she should absolutely avoid becoming involved with - like a colleague, roommate, professor, teammate, or client - ignites within her a heretofore unknown desire for her own sex that bypasses any initial confusion or reservation about the unexpected feelings. Without consulting her better judgment, talking about her sudden shift in sexual identity, or considering how awkward or plain ruined her future may be if the impulse ends badly, she immediately places herself in such a way that she will be seduced. (The object of her lust will automatically be a predatory lesbian willing to ignore any consequences of her end to seduce the neophyte.)\n\n9. The protagonist becomes involved with a porn star.\n\n10. His favorites include a great deal of mother/son incest. (I don't know why, but lesbian sex and mother/son sex seem to overlap in lots of favorites lists. It's not a bad thing, just really curious to me because I don't understand the connection. Any ideas?)\n\n11. Orgasms are tallied in groups rather than achieved individually.\n\n12. If it's first time lesbian sex for one or both partners, the new lesbian(s) immediately leave the bed of the initial lover - with whom was forged a deeply romantic bond over their one day relationship - to go seduce as many more women as possible to be new homosexual recruits, as though lesbianism were a doomsday cult or a pyramid scheme always seeking new members.\n\nNote: These are just common irritatingly irrational trends I've found as a reader in the Lesbian Sex category. Many of the male writers on Lit write far and away better lesbian sex stories than I do and this list is not intended to apply to them. \n\nSometimes some of the signs I've mentioned are skillfully woven into some crazy, sexy, cool stories. When they're, you know...not, I'll usually click away after seeing one or two signs that the story isn't meant for me. It's only because women aren't the target audience though, they may still be great stories for the men they're written to entertain."
    ],
    "authorname": "LesbianChickLit",
    "tags": [
        "lesbian",
        "humor",
        "humour",
        "satire"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/top-12-signs-your-lesbian-erotica"
}