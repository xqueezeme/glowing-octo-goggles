{
    "title": "When Spidey Met Oracle",
    "pages": [
        "CHAPTER ONE: Before Sunset\n\nHe decided to run the mask through two more rinse cycles than he ran with the rest of the costume. Washing the head-piece was usually the most important part of laundry day. He spent so much time breathing in his own breath through the thing that he really didn't need a three-day-old body-funk included. He knew this from experience. Peter Parker had been cleaning his own Spider-Man costumes since he was fifteen. \n\nIt had been absolutely necessary back when he was just a kid living with his aunt in Forest Hills. There was no way May Parker was going to miss a pair of red and blue spandex tights mixed in with all those yellow sweater vests. When he was living with the gorgeous Mary Jane Watson years later, the reasons for washing his own suits were something else entirely. MJ was a \"dry clean only\" kind of girl. The image of her bent over a clothesbasket with a Spider-Man costume in hand was the height of whimsical fantasy.\n\nThere were only two other people who'd ever cleaned his spider-duds. He generally tried not to think about one of them because the reason she had to do so was absolutely mortifying. Of course, the fact that it had led to some fantastic, life-affirming sex shortly thereafter made his night with Batgirl the kind of thing Peter actually ended up thinking about a lot... even all these years later.\n\nHis most recent launderer, however, had been the Avengers' butler, Edwin Jarvis. Peter, Mary Jane and Aunt May had briefly lived in Avengers Tower after Peter had joined the Earth's Mightiest Heroes. They hadn't stayed there long, but in the brief time before the insanity of the superhero \"Civil War\" forced them to flee, Jarvis had absolutely insisted on taking Peter's costumes while he handled the rest of the Avengers' laundry. And Jarvis brought them back so fresh, clean, and downright fluffy that Peter saw little reason to argue. Of course, it was eventually revealed that this particular Jarvis was, in fact, an alien imposter who'd probably used the genetic material scraped from their unclean clothes to help his warrior race of shape-shifting Skrull to duplicate the Avengers' various powers, so Peter had once more embraced his D.I.Y. philosophy of spider-washing.\n\nThis is why, Peter found himself locked in the basement laundry room of Avengers Mansion, naked, hating his life. It wasn't cleaning his own clothes that put him in such a funk. Hell, this was a nice, quiet bubble of sanity in a life that got crazier and less certain with each passing day. And while the wall-crawler had long been prone to a substantial amount of self-loathing, this particular Peter Parker pity party happened to occur at a definite low-point in his long career as Spider-Man.\n\nSomething like ten years had passed since Peter had been bitten by that radioactive spider, but he swore sometimes it felt closer to fifty. Just an endless blur of goblins and symbiotes and lizards... oh my!\n\nEver since he'd joined the Avengers, his life had become one mega crap storm after another. That civil war over the Superhuman Registration Act -- which demanded that every masked vigilante step forward to reveal their true identity or face federal prosecution -- had torn his life apart in a way that made the Skrull's secret invasion of Earth almost pleasant by comparison. The decisions he made during that impossible imbroglio had almost cost Aunt May her life... and they seemed to cost Peter the love of his own, as Mary Jane had left him and New York City behind when it was over...\n\nBattling the Skrull months later had been dangerous and more than a little confusing, but that was pretty much business-as-usual for the web-slinger by now. It was the aftermath of the Skrull attack that really blew his mind, as his greatest enemy, Norman Osborn, the original Green Goblin, was appointed the new director of S.H.I.E.L.D. -- the world's premiere intelligence and covert ops agency. Stormin' Norman rebranded the operation as H.A.M.M.E.R., proclaimed himself the new leader of the Avengers, and spent half a year zipping around the world in a repainted suit of Tony Stark's Iron Man armor, calling himself the Iron Patriot while backed by a handpicked team of unrepentant supervillains. And all Osborn had to do to get away with this was dress them up in old Avengers costumes! Daredevil's old sparring partner Bullseye was the new Hawkeye. Moonstone was the new Ms. Marvel, and Mac Gargan, the former Scorpion and current Venom was the new Spider-Man... the new Spider-Man who was inexplicably more popular than the original. Osborn's public relations team was something else, alright.\n\nOh. And somehow during all of this, J. Jonah Jameson, the man who'd spent the last decade declaring the web-head a public enemy in 40-point font in the Daily Bugle, was elected mayor of New York City. Mercifully, up until the election, the usual gang of threats and menaces that plagued Peter's life as Spider-Man had been absent. Then, in a flash, they were back and worse than ever. Doctor Octopus took technological control of the city. Electro destroyed the Bugle building. Two different Rhinos fought to the death in the middle of Manhattan in a gruesome street brawl and Spidey hadn't been able to stop it... just like he failed to stop Curt Conners from murdering his own son as the Lizard. \n\nThis relentless gauntlet pushed Peter to his breaking point, and that's when Kraven the Hunter -- the man who had once left Spider-Man buried alive before killing himself -- came back from the dead to bring Peter's life to a new level of hell. The wall-crawler had barely wrapped up that nightmare before the Blackest Night descended upon him.\n\nPeter didn't learn most of the details until later, but apparently some dread, cosmic death god named Nekron brought back the dead as Black Lantern zombies bent on the end of all life. Spider-Man still wasn't certain whether or not Kraven's return had been a part of Nekron's design, but there was no question that it was one of the worst nights of his life. He endured the return of damn near everybody who'd ever died under his watch, fighting their cosmic-powered corpses in the streets of New York.\n\nThere was Sally Avril from high school... NYPD Captain Jean DeWolff, one of the few cops who would work with him before she was murdered by the Sin-Eater... Even Ben Reilly, the genetic double that had filled-in for Peter as Spider-Man when both of them thought Ben was the original and Peter himself was merely a clone of the one, true web-head. \n\nDespite the abject horror of that dark night, Spider-Man fought his way through them all. Because as soon as he realized the Black Lanterns' strategy -- gorging themselves on the emotions conjured up by the living in face of the dead -- he realized he had to get to Aunt May, because it was only a matter of time before they'd both come face to face with his greatest regret: Black Lantern Ben Parker. He found them at the house in Forest Hills, his poor aunt terrified as she confronted the gentle face of his beloved Uncle Ben, twisted in rage while spouting all of his widow's worst fears while trying to tear out her heart and eat it. Spider-Man did what he had to stop him...\n\nIf it had just ended there.\n\nSaving May from his undead uncle was a breeze compared to confronting a space zombie Gwen Stacy. Peter should have expected it, but he tended to remember Ben as the good man who raised him and Gwen as the first girl who loved him wholeheartedly. And honestly, after all these years, he'd been able to put so much of the guilt he'd felt for Uncle Ben's death behind him. Because Ben had died because Peter failed to act -- he'd let the burglar who shot his uncle run right past him. But as Black Lantern Gwen was all too quick to point out as their battle raged across two boroughs, she had died because Peter acted. \n\n\"Trust me, Peter, this is a terrible place to die,\" she said, as the chase brought them atop the George Washington Bridge. Spider-Man hated that goddamn bridge but somehow he seemed to end up there every couple of months, forced to relive some ridiculous rehash of the worst night of his life...\n\n\"It's not just the fact that I died because I was Spider-Man's girlfriend that kills me,\" she had told him. \"I can even almost forgive you for never telling me your secret. It's the fact that you snapped my neck with your carelessly casted webs that makes me hate you, Peter.\"\n\nHe'd tried to tune her out. She wasn't saying anything he hadn't heard a million times before, whether it was from the Green Goblin taunting him or in his own guilt-ridden head and shameful heart, but this was different somehow. This was Gwen's voice accusing him. Her bright blue eyes fixed on him in hate as she pinned him down. Conflicted with a broiling mix of fear and love bound by compassion, Spider-Man was almost ripe to sate her hunger. She just needed to push him a little bit further.\n\n\"How long did it take you to fuck that slut Mary Jane after you killed me?\" that evil thing asked him then. \"Were you lusting after her the whole time we were together? Would you have saved me if I put out like she did? Sorry, Peter. I was waiting for a real man...\"\n\nThat's when the uni-beam tore a hole through her torso and sent her spiraling toward the rough waters of the Hudson River below. Spurred by instinct alone, Spider-Man actually found himself sprinting toward the edge of the suspension tower. He was just about to dive after her before he stopped himself. \n\n\"You're just lucky I'm going to need you for this, Spider-Man,\" the Iron Patriot said, landing beside him. \"If the fight I just had with my dead wife is any indication, I'm not going to be able to handle her by myself.\"\n\nBefore the web-head could say anything, Gwen was flying up toward the tower, reforming her gaping chest wound as she tore into them.\n\nAs it turned out, Norman Osborn had actually risen to the challenge of leading his evil Avengers in an attempt to take New York back from the Black Lanterns. In the ultimate irony, Spider-Man's greatest enemy, who had his own twisted, gut-wrenching history with Gwen, was just as vulnerable to her attack, but together, they managed to defeat her.\n\nPeter beat Gwen. With the Green Goblin's help. The thought alone still made him gag.\n\nHe suspected it was the fight with that depraved cosmic abomination that pushed Norman over the edge, because the next day, after the battle with Nekron was done, the Iron Patriot began his psychotically misguided assault on Asgard. H.A.M.M.E.R. engaged the stronghold of the Norse Gods, floating above Broxton, Oklahoma, as Osborn's last crazy power play. The attack didn't end well for anybody, as Asgard crumbled, but at least Norman was finally revealed for the dangerous whack job Spider-Man had always known him to be.\n\nOsborn's failed siege had done a few more favors for the forces of good and iconic spandex underoos: Norman had finally been thrown back in jail, the Superhuman Registration Act had been repealed and Steve Rogers, the original Captain America -- who everyone thought had died shortly after the end of the Civil War -- was in charge of everything the Iron Patriot had run into the ground. Things were relatively quiet. Unless you counted the Avengers fighting Kang the Conqueror as all of space and time collapsed around them... Or the New Avengers watching Doctor Voodoo, the freshly minted Sorcerer Supreme, sacrifice his life to save our dimension from the all-powerful vengeance of Agamotto... Or that mess Spidey found himself with Doc Ock over Harry Osborn's baby... \n\nThings hadn't been going so well for Peter out of his Spidey duds, either. J. Jonah Jameson had only pursued the mayor's office because he'd been pushed out of his top-spot at the Daily Bugle by some bow-tied billionaire named Dexter Bennet. When Peter realized that working at the new DB wasn't really for him, he finagled a job in the press corps at City Hall. Between that and freelance work with Front Line, the online news source where the vast majority of the Bugle's former staff had found new work, Peter was actually managing to make ends meet for a while. Then Mayor Jameson caught him doctoring a photo -- a pic Peter'd created specifically to save Jonah's political career by clearing JJJ of charges of which he was clearly innocent -- and His Honor exposed Peter's fraud to the world, blackballing him from any future work in news photography. So Peter was dead broke and unable to find employment in the one field in which he'd really made a name for himself.\n\nHe knew he deserved it. His time at the Bugle with guys like Joe Robertson and Ben Urich had impressed upon him the importance of journalistic integrity, but journalism had never really been Peter's passion. He loved science. A couple years back, when photographing his fights as Spider-Man hadn't been enough, he'd taken a job at his old high school as a science teacher. It was the closest he'd come so far to professional fulfillment. Too bad even joining the teacher's union hadn't been enough to help him keep that gig. Guess it didn't help that he'd taken so many sick days to recover from tussles with totemic spider-gods and missions with the Avengers.\n\nPeter was slowly starting to worry that the only thing he was actually good for was punching bad guys. And while that was a perfectly valid career choice for some -- Wolverine and Hawkeye totally swore by it -- Spider-Man couldn't even get paid for his time with the Avengers like everyone else. Not if he wanted to keep his secret identity, and he'd learned the hard way that he had to do just that... for the sake of Aunt May or anyone else he cared about. \n\nBesides, Peter had always hoped that there was more in store for him than fist fights and late night patrols. Guys like Mr. Fantastic and Iron Man seemed to make it all work for them. He always thought he'd figure out something like that for himself. Peter Parker: Superhero Scientist. But it looked like his fractious life as Spider-Man would always mean he'd never really get his dream job, and Peter would just have to accept that. \n\nRight now, Peter Parker needed to worry less about his career and more about just finding a job -- any job -- that would help him pay the rent.\n\nHe was washing his Spider-Man costume right now because he'd spent the last two nights at Avengers Mansion. After the SHRA had been repealed and everyone was friends again, Luke Cage bought the place off Tony Stark for a buck so that the New Avengers had a base of operations. Cage told Spidey that he was more than welcome to move in if he wanted, but the wall-crawler declined.\n\nSpidey had his reasons. Right now, only a few of the New Avengers knew who he really was, and considering the lengths he'd recently gone through to regain his secret identity, he really couldn't risk it getting out again. Especially since Victoria Hand, who'd served as the deputy Director of H.A.M.M.E.R. during Osborn's administration, was now working as their liaison with S.H.I.E.L.D. There was no telling when she'd be wandering the halls, which is why he tended to stay in full costume while on the premises. He didn't trust her. This was a woman who'd accepted the Gospel According to Norman Osborn, after all. Even if Captain America or Commander Rogers or whatever title Steve was going with now thought Hand was okay, Peter couldn't let that go. Living in Avengers Mansion meant putting his private life in jeopardy. It was as simple as that.\n\nBut after that crazy fight with Agamotto, he'd decided to crash in a guest room in the mansion's east wing. He hadn't slept in something like 36 hours -- an unsettlingly typical occurrence in his life -- and found himself collapsing into one of the plushest, most comfortable beds he'd ever been in. Then he did it again the next night.\n\nHe would have to go back to his own apartment eventually, but he wasn't in any rush. His roommate, Michele Gonzales, was a bit of a handful most of the time. She had this odd expectation he'd actually pay his half of the rent every month, which was all but impossible now that he was unemployed. Life with Michele was a far cry from the last time he'd lived with a woman, as M.G. hadn't really liked him to begin with, and sleeping with her the night Aunt May married the new mayor's father, J. Jonah Jameson Senior, hadn't eased tension in the least. \n\nIt was a mistake. He was drunk. Mary Jane had chosen May's wedding as the perfect opportunity to return to New York after moving out to L.A., and faced with confronting his ex, Peter used it as an excuse to hit the open bar a little more freely than he usually would have to disastrous results.\n\nSo here he was, hiding from an angry, 5'8\" Latina lawyer in the safety and comfort of the Avengers' laundry room. Victoria Hand was meeting with Steve Rogers over in Avengers Tower, but you never knew who was going to stop by the mansion, which is why he went so far as to web the door closed while he went about the delicate task of rinsing his delicates.\n\nDoing his laundry at the mansion was a total revelation. The Avengers' drier was sophisticated enough to dry his costume without shrinking it... not the kind of equipment Peter used to encounter in his desperate, laundromat days. Hell, he was tempted to risk swinging over to his apartment to grab his civilian clothes. It's not like he was rolling in quarters these days. But that meant leaving the room. That meant going out in the world. That meant confronting whatever new problem the universe had waiting for him. So Peter had plenty of time to sit there and watch his tights tumble while his mind wandered. \n\nHe wondered how it all had gone wrong between him and MJ, but then he remembered that she had recently dropped by his place to sit him down and explain exactly where, why and how it went wrong. It had been a good talk. Absolutely. He was glad that they had it. Mary Jane had told him that it was time for him to find someone who was strong enough to be with him. And he thought he was finally ready to do just that. \n\nAlmost.\n\nIt wasn't like Peter didn't have options. There was Michele, of course, but smoothing things over between them would take a Herculean effort he doubted even his pal Hercules could pull off. It'd been a hell of a campaign just to get to their current state of civility. And it's not like they had a lot in common...\n\nSpider-Man had resumed his relationship with Felicia Hardy, the semi-reformed cat burglar who operated as the Black Cat. Felicia had been very clear, however, that they had a strictly physical, friends with benefits arrangement. And while that was fun -- and who was Peter kidding? It was fantastic! -- when it came right down to it, she didn't want to share her life with him, and he wanted a partner in something other than crime. No matter how carnal. That and the usual trust issues that cropped up between them had cooled things off since that craziness with the Kravinoffs.\n\nThen there was Norah Winters, the spunky young reporter at Front Line who loved to push Peter's buttons, but she was dating one of his friends, Randy Robertson. And even though she tried to make it sound like a casual fling, Peter suspected Norah was just kidding herself. Randy was one of the good ones. Besides, Peter'd been down that road back in college with his best friend, Harry, Norman's son. While Peter doubted trying to wedge his way between Norah and Randy would lead him down the same trail toward betrayal and pumpkins bombs, why tempt fate?\n\nEspecially when there was Carlie Cooper, the fetching young crime scene investigator who had actually gone out on a few dates with him already. Peter had known since Harry had introduced them that Carlie was interested, but he had been keeping her at arm's length. This was something Carlie had called him out on more than a few times. Peter liked her. He really did. She was smart, cute, funny, and all-too importantly, fairly forgiving. But he was afraid to push things too far...",
        "There was something he just couldn't get out of that webbed head of his. His life was absolutely insane. As long as he was slinging webs and righting wrongs, it would always be insane. It was so insane he knew in the long run, he'd never survive it. As he pulled them out of the dryer, he knew that some day, he was going to die in those red and blue tights. \n\nAnd when it really came right down to it, Peter Parker, the less-than-sensational Spider-Man wondered if there was really a woman out there strong enough to put up with him...\n\n*\n\nBarbara Gordon had spent most of her life surrounded by people whose entire world had been changed by a bullet. Being Jim Gordon's daughter as he rose up the ranks to become Commissioner of the Gotham City Police Department had certainly seen to that, but it was her decision to don a cape and cowl and fight crime as Batgirl that had absolutely clinched it. But for all the years she stood by her father while he paid his respects to the widows and orphans of fallen officers, or fought alongside Bruce Wayne, who had dedicated his life as Batman to protecting the city where his parents had died in a hail of gunfire, Barbara never thought she'd be one of those people.\n\nIt was stupid really.\n\nHer father spent his days trying to clean up one of the most corrupt law enforcement agencies in the country and he certainly had enemies who regularly visited the firing range. She spent her nights punching street hoods and mobsters with a big yellow target emblazoned across her chest. Anyone else would have seen it as all but inevitable. But she had been carefree and hopeful and filled with this faith that things would always go right, like you do when you're young. She thought she would live forever. So would her dad.\n\nThen one night, while visiting her father in that little house in Gotham Heights she'd only just moved out of, she answered a knock at the door and was shot through the spine by the Clown Prince of Crime. Barbara survived, but it was the end of Batgirl. She was paralyzed from the waist down. And just like that, that carefree girl suddenly had cares. She lost hope and she didn't think anything would ever be right again...\n\nBut in all the years since it happened, she'd built herself back up out of that place of fear and powerlessness. She learned how to make her way through the world all over again. She found a way to still make a difference. She became Oracle.\n\nBarbara had always been good with computers, but with some focus and determination -- to say nothing of ample free time and some generous funding from the Wayne Foundation -- she became the best. At a time when the world lived or died at the end of a mouse, Oracle was always there, ready to right-click and save everything. It started with a cold case for the Gotham Police Department. Then she started working with the government. When that fell through, she became Batman's primary source for technical support and data retrieval, which was her stepping stone to becoming the premiere information specialist for the superhero set.\n\nMore importantly, Barbara had finally made a life for herself that extended beyond the Batcave. She had friends who loved her. People who would die for her just as much as she would for them. It started with Dinah Lance, the Black Canary. After Barbara's covert ops work had dried up, she had anonymously approached Lance as Oracle during a low ebb in the Canary's career and Dinah become her agent in the field... and eventually, her best friend. It was Dinah who'd convince her to bring Helena Bertinelli, Gotham's once-lethal vigilante, the Huntress, into the club. Then it became a bit of a rotating team routine that had included heroes like Big Barda, the new Manhunter and Lady Blackhawk. Barbara wasn't exactly sure when they started calling themselves the Birds of Prey, but it stuck and she liked it better than Oracle and Her Amazing Friends.\n\nAnd she liked that she had a legacy. Barbara had taken in Cassandra Cain, Bruce's new pick for a replacement Batgirl, and tried to guide the young girl in the role. Given Cassie's arduous upbringing -- she was the daughter of two of the world's most dangerous assassins -- it'd been more than a struggle. Considering the way things had ended between her and Cassie, Barbara couldn't help but feel that she'd failed. She was trying to do better with Stephanie Brown, the new new Batgirl.\n\nA month ago, she'd been using the recently vacated Batcave as her base of operations, but now she had a new home in the recently constructed Kord Tower. Named in honor of the second Blue Beetle, her dearly departed friend Ted Kord, the tower was everything he would have loved -- comfy, private, and jammed to forty stories with bleeding-edge tech. And it was sunny and bright. Just like Ted. During her time as that Dominoed Daredoll, Barbara had spent so much of her time underground, but as Oracle, she liked to sit up in her towers in the sun when she could.\n\nThere were still, however, plenty of bats in her belfry...\n\n\"I take it Bruce Wayne's done for the day,\" Barbara said, turning away from her holographic heads-up monitor display as the billionaire philanthropist entered her new command center in full Dark Knight regalia. \"Seems a bit early. I didn't think the oh-so elusive Caped Crusader made appearances when there was still daylight.\"\n\n\"It's always dark somewhere in the world,\" he answered, \"and Batman's going to be everywhere now. It's midnight in Tokyo, for example. I'm flying out to scout a potential recruit.\"\n\nBruce Wayne had recently announced to the world that he'd been secretly funding Batman's activities in Gotham City since the beginning, and Wayne was now planning to expand this financial support to other crime fighters all over the globe. It was a surprisingly bold move on his part. Batman... Incorporated.\n\n\"Are you taking the Batplane?\" she asked.\n\n\"Corporate jet,\" he replied. \"Why?\"\n\n\"If you're going as Bruce Wayne, what's up with the costume?\"\n\n\"I'm taking Selina with me,\" he told her. \"She... likes the cape and cowl.\"\n\nJesus Christ, Catwoman, she thought, rolling her eyes and turning back to her work.\n\n\"You haven't been sleeping, Barbara,\" Batman observed. \"I don't have to be the world's greatest detective to see it.\"\n\n\"Norman Osborn might be in prison, but that doesn't mean he's been shut down,\" she said. \"I've been trying to minimize his impact on the geo-political landscape, but he had his creepy little fingers in a lot of dangerous pies. Even I'm struggling to keep track of them all.\"\n\n\"I've dealt with Osborn before,\" Batman said. \"I'm pretty sure he used some of WayneTech's technology for his Green Goblin equipment back in the day. If I remember correctly, he wasn't very good at covering his tracks...\"\n\n\"He got better,\" Barbara told him. \"A lot better.\"\n\n\"He never should have gotten as powerful as he did,\" Batman said then. \"I should have stopped him when I had the chance, but I didn't think he was a Gotham problem.\"\n\n\"You can't be everywhere at once,\" Barbara said.\n\n\"Though some of us certainly try,\" he replied, nodding toward her expansive computer array. \"By my count, you're coordinating eleven different operations on four continents.\"\n\n\"It just looks like a lot,\" she said. \"Most of these missions run themselves. My operatives find Osborn's unofficial projects, make sure they're not still up and running, and keep them secure until S.H.I.E.L.D. or Checkmate's onsite. I'm really just online for strategic support if it's necessary. And it hasn't been because I'm working with good people.\"\n\n\"That's actually why I stopped by to see you,\" Batman said delicately. \"I understand that you've been recruiting outside your usual ranks a little for this special project of yours.\"\n\n\"I suppose you could say that,\" Barbara smirked, knowing exactly where this was heading. \"I mean, Lady Blackhawk's a hell of a pilot and all, but she can't get Huntress and Black Canary everywhere at once. And Hawk and Dove have been recuperating from that craziness with the Penguin. I've had to contact some of the local talent in some places.\"\n\n\"So, hypothetically, if you needed someone to breach a secured facility in, say, downtown Manhattan, you might use the services of a reformed cat burglar,\" Batman suggested. \"Perhaps even one with a flair for the dramatic who employs a bit of a feline theme?\"\n\n\"I might do something exactly like that,\" Barbara said with a sly smile. \n\n\"Did you absolutely have to use the Black Cat?\" Batman sighed, dropping all pretence. \"Gotham's really not that far from New York. And you know how Selina feels about her...\"\n\n\"Yes I do,\" Barbara replied, positively beaming now.\n\n\"Catwoman's taking it personally,\" he sighed. \"It wouldn't kill you two to try to get along.\"\n\n\"I'm sorry, but me and Ms. Kyle have an unpleasant history that long predates this particular on-again period of your relationship,\" she said. \"And I've got to embrace the little joys in life where I find them.\"\n\n\"Don't we all,\" he said wistfully.\n\nShe turned toward him then. \"You seem different, Bruce.\"\n\n\"So do you,\" the Dark Knight said kindly. \"Take this blitz on Osborn, for example. I was... otherwise occupied during much of his directorship of this H.A.M.M.E.R. organization.\" Batman was, of course, putting it mildly. During Osborn's dark reign, the Dark Knight had been clawing his way up the time stream after being thrown back to the Pleistocene Era by Darkseid's Omega Effect. Everyone thought he was dead. Dick Grayson, his first sidekick, had stepped up to fill the cape and cowl while Bruce was gone. \"I understand it was a disaster, but I almost get the feeling you have a personal stake in this, Barbara.\"\n\n\"Maybe I do,\" she admitted.\n\nBatman hesitated then. \"Do you want to... talk about it?\" \n\nBarbara actually laughed at that. Dick had warned her that Bruce had changed since his ordeal, but she'd never expected that Grayson meant he'd gotten anything close to sentimental. \"It's nothing, Bruce,\" she finally said. \"I'm just a little worried that the new man in charge might not be up to the task of dismantling the less savory elements of the Green Goblin's underworld.\"\n\n\"You're doubting Steve Rogers?\" he said with a small smile. \"I've taught you well.\"\n\n\"Starting with the fall of Nick Fury, S.H.I.E.L.D.'s been through four major administrative upheavals in the last couple of years,\" Barbara explained. \"Things tend to slip through the cracks with that much chaos sustained over a long enough period of time. Director of S.H.I.E.L.D. isn't the kind of position that allows for a lot of on-the-job training, and our erstwhile Captain America's been through a tremendous amount of stress, what with his death and all...\"\n\n\"He didn't die,\" Batman corrected. \"It just looked like he died when in fact he was trapped back in time, only for his trusted former partner to assume his mantle. Happens to lots of guys. You're not worried about me, too, are you, Miss Gordon?\"\n\n\"I worry about all of us, Bruce,\" she said, \"but it's not like you've gotten up to anything as crazy as taking over S.H.I.E.L.D.\"\n\nAt that the Dark Knight actually grinned. \"Batman Incorporated's going to leave S.H.I.E.L.D in the dust,\" he told her with an optimistic conviction she never would have expected from him. \"We're about to privatize the Caped Crusade.\"\n\n*\n\nThe life of Jessica Jones-Cage had taken several sharp turns she'd never expected. \n\nAt a mere twenty-six years of life, she found herself married to Luke Cage -- Harlem's Hero For Hire and the leader of the New Avengers, a mother to the most beautiful baby in the world, and living in a mansion on Fifth Avenue. While so much of this had seemed the natural result of a very strange life, there were times when Jessica realized that if you hopped onto Doctor Doom's Time Platform and went back in time to visit her a week before her sixteenth birthday to tell her that this is where she'd find herself in ten years, she would have plotzed. And she definitely wouldn't have anticipated the current all-consuming center of her annoyance.\n\n\"He was doing it again,\" Jessica told her husband as he lulled their daughter, Dani, to sleep. \"Last night I went out to take a leak only to find him pacing the halls from the goddamn ceiling! I almost shat myself!\"\n\n\"You tellin' me you don't hover every once in a while?\" Luke asked, swaying their baby in the warmth of his powerful brown arms. \"Dude's been through some shit. Give him a break, Jess. And keep it down. She's finally asleep.\"\n\n\"This is supposed to be our house, Luke!\" Jessica hissed. \"I know I should be all impressed that our starter home is Avengers goddamn Mansion and all, but I swear to god, I'd trade it all for an A-frame in Astoria if it meant we didn't have to deal with Peter fucking Parker pacing our ceiling every night.\"\n\n\"I get what you're saying,\" Luke sighed as he laid their dozing daughter down in her crib. \"I really do, Jess. But you don't know Peter like I do...\"\n\n\"Excuse me?\" she shrilled as they left Dani's nursery to enter the adjoining master bedroom. \"I practically grew up with him!\"\n\n\"Yes, I remember,\" Luke said with an eye-roll. \"You had a big ol' schoolgirl crush on him, too. But you only found out he was Spider-Man a few months back. I've known Spidey for a couple of years now, and the one thing anybody who knows him will tell you is that he never asks for help.\" Jessica softened then, so Luke continued. \"He might ask the Human Torch for a hand with the Sandman, or see if Doc Strange can cast a spell to deal with a crazy ex-girlfriend, sure. But he never asks any of us for a loan or a lead on a job or anything else that'd make his personal life any easier. So when he shows up on your doorstep and tells you that he wants -- no -- that he needs to spend a couple of days in one of the many guestrooms of your palatial estate, you gotta be the biggest dick in the world to tell him no.\"\n\n\"You're just lucky you've got the biggest dick in the world,\" Jessica sighed, tugging his shorts down. \"And believe you me, buddy, if I've got to put up with Mr. Mopey Maguire, you're going to put it to good use...\"\n\nLuke pulled off his shirt as she took his cock in her mouth. \"Damn, woman,\" he groaned. \"You are insatiable.\"\n\n\"Shut up and get the lube.\"\n\n*\n\nPeter could rattle off the first 150 digits of pi without even thinking about it. He knew where he could find at least twenty different weak-willed criminal snitches for each of the five boroughs on any idle Tuesday. He could rank the best street meat in Manhattan based on the time of day. And yet, somehow the guy who achieved the highest scholastic average in the history of Midtown High School got lost on his way back from the laundry room. Because for all of his brilliance, Peter was clearly an idiot.\n\nHe was heading back to his room in his briefs with his freshly cleaned costume in a basket when he realized he'd come up the wrong basement staircase and ended up in the more frequently used west wing. He thought he'd find his way back to his room fairly quickly, but a half hour later, he stopped to take the time to put his mask back on.\n\nIn the three days he'd been in the mansion, this had proved an unnecessary precaution, because the only person he'd run into unexpectedly was Jessica Jones. Jessica already knew he was Peter Parker, but she freaked out every time she saw him. Was it because he was always upside down when it happened? Was it possible he was wall-crawling more than he needed to?\n\nThe only way Peter's life as Spider-Man had worked was by compartmentalization. When he wasn't in costume, he was the meek, earthbound Peter Benjamin Parker. When he was wearing that mask, though, he was Spider-Man, causally strolling up the walls or clinging to your ceiling. It both proved that he was the real-deal -- any jerk could wear his costume after all -- and it kept him in the proper mind frame.\n\nBut again, seriously, he didn't trust Victoria Hand. He really didn't want her to see his true face. If he had to wander around, lost, half-naked with his mask on to make sure that didn't happen, that was fine for now. \n\nAll of this had him feeling on edge just then. One of the other reasons he didn't want to live with the team was that Avengers' Mansion was kind of a target. You never knew when some metahuman asshole with an axe to grind would burst through the wall. Peter had learned in the worst possible way that there was evil in the world that had to be fought or it'd take someone else he loved... like Aunt May.\n\nHe was just passing the double doors of what he now recognized as the master bedroom when the pounding started... \n\nThud! Thud! Thud!\n\nAt first he assumed it was construction work. There'd been significant damage to the building since that business with Doctor Voodoo, and the crew from Damage Control, Inc. had been working around the clock to fix the place up as soon as possible, but most of the damage had been on the other side of the mansion...\n\nWas it an attack? No. It couldn't be a fight... His spider-sense would have warned him, wouldn't it? But when that first series of steady thumps started to be punctuated by little feminine grunts afterwards, he had to wonder...\n\n\"Stop! -- whoulf -- Don't! -- huhn!\" he heard.\n\nIt took his brain significantly longer to figure things out before certain parts of his body. He didn't realize he had a hard-on until shortly after he heard that first intelligible utterance.\n\n\"DON'T STOP FUCKING ME!\" Mrs. Cage roared from their bedroom. \"TAKE MY ASS, CHOCOLATE THUNDER!\"\n\n\"M'okay,\" Spidey murmured as he sprinted along the ceiling and away, dropping the basket as he scramble into the pants of his costume. \"Going back to the east wing... Now.\"\n\nHe'd just barely worked the lower half of his costume up to his waist by the time he finally found his room. It hadn't been the easiest thing to do while running along a wall with gravity working sideways.\n\n\"Message received!\" chirped a high feminine voice from his cell phone as he donned the top half of his suit from the soundproof safety of his temporary living quarters. It was his special, encrypted Spidey-phone. Once he was completely redressed, he checked the text message waiting for him.\n\nNeed your body, it read. For work stuff this time. Meet at the usual place. Before sunset.\n\nPeter sighed. His aunt had once told him that there were two types of relationships that defined your life. The kind that got easier with time and the kind that grew more and more complicated. This particular missive had been sent by someone with whom he shared a completely different kind of relationship entirely, because she always thought it was simple, while he felt it only got more convoluted.\n\nThat was the thing about exes...\n\n*\n\nIt had been suggested to Felicia Hardy on several occasions by a number of her former lovers that she might want to look into therapy. She didn't really blame any of them. Felicia had made it through enough of college to take a psych course or two... She dropped out after being sexually assaulted toward the end of her freshman year by someone she thought she could trust. Someone she was planning to kill before he got his stupid ass killed in a drunk-driving accident. She became the Black Cat shortly thereafter. Her first job was an elaborate plan to break the father she barely knew out of prison so he could die in his home instead of a cell.\n\nSo, yes. Felicia clearly had issues.\n\nBut it had always made more sense for her to just own those issues rather than try to talk them away with some stranger who didn't really know her. Because the truth of it was, all those people who'd told her she should get professional help didn't want her to do it for her. They wanted her to do it for them. They thought a little psychology would tame her. Make her the dutiful girlfriend ready for that lifetime commitment they so desperately wanted. But Felicia didn't want to be tamed. She liked who she was. Horrific psychological warts and all. Because the woman she'd become would never be a victim again.",
        "Despite the problems she'd had in her relationship with the Spider, he'd never been one of those guys. Not really. The one stay she had made in a psychiatric hospital had been at Spider-Man's behest, but only because she'd played him. The first time he caught her, she convinced him she'd committed her crimes because she was psychotically obsessed with him. After all, it was easier to break out of a loony bin than an actual prison. But after that, he never told her to get professional help again. Not after she stopped playing mind games with the Spider and let him get to know who she really was. Felicia knew that he'd wanted more from her than she was willing to give, and it had forced them apart all those years back, but he never told her that she needed to go fix herself because of it. Not even when he broke up with her.\n\nSome part of her would always love him for that. Just not the way he wanted her to. Because while Felicia believed in love, she didn't believe in true love or soul mates or any of the other grand, romantic lies her mother told her growing up. \n\nFelicia learned the hard way that the future was unknowable and the past was gone. You can only really count on what you feel in the moment. But if there was a man alive who had any chance of proving her wrong, it was the Spider. For some reason beyond her, despite all the bad stuff that'd come between them, no matter how mean she'd had to be to him at times, and regardless of the times he'd actually managed to hurt her, she could still depend on him if she needed him. This kind of unconditional reliability ran counter to everything she had learned about the way the world worked. There were no charming princes or knights in shining armor out there. But as the years wound on Spider-Man was still willing to stand by her, and she started to suspect there might just be one honest man in the world. Because if she understood one thing about the Spider more than most, it was that he was an improbably relentless force for good in an uncertain universe. \n\nBy the time she realized this, she also realized she didn't really deserve him, but it was sure pretty to think she once did...\n\nWhich is why, these days, she went out of her way to tease him about his apparent na&iuml;vet&eacute;, even though she was always secretly thrilled to know that she had help if she wanted it. Especially now, when she was pretty sure it was necessary.\n\nThe Black Cat had told Oracle that she could handle this job on her own, but she knew now that she'd been wrong. Felicia had definitely bitten off more than she could chew and there was no one she trusted to back her on this kind of major mastication than the Spider. \n\nEspecially given who was involved. \n\nThis is why the Black Cat currently found herself waiting for sundown on a rooftop in Chelsea.Yes, it was a bit of a clich&eacute;, but whenever it'd been a while since they'd seen each other and she needed to meet up with the Spider in secret, they always did so on the roof of the now defunct office of Emil Greco... the scene of their first encounter. Way back when, Felicia had been buying guns off Greco for her father's jailbreak, and Spider-Man had just happened to spot her. The rest, as they say, was history, but she remembered that first fight pretty well. It wasn't just because it had been her first tussle with a costumed crime-fighter... or the thrill of finding that all her years of gymnastics and martial arts training had paid off since she actually got the better of a guy with honest-to-god superpowers... She remembered because the whole time they were going at it, the Spider was sporting an ever-increasing chubby in his tights. \n\nEven from the beginning there'd been that frightful sexual tension. And while at the time she'd thought that their game of cat and mouse had this grim undercurrent of life-or-death, looking back on it now, she realized just how playful it always was. It was schoolyard-crush-style antics on a grand scale. The two of them running across the New York City skyline like two damaged, crazy kids too dumb to realize just how easy it was to get what they both really wanted. She remembered worrying back then that the thrill would always be in the chase, but she couldn't have been more wrong...\n\nThe Spider had participated in some of the best sex of her life. \n\nSuch a damn shame it couldn't last. Felicia tried. She really did. She gave up the crime to make him happy, and then he told her who he really was and everything changed.\n\nShe couldn't remember his real name. Why would she? He was always her Spider more than he was the Man. Hell. That's all she really needed. But that hadn't been enough for him. First, he couldn't get over the fact that she didn't have superpowers like his, so she made a deal with the Kingpin of Crime to get some. All so she could spend her nights at his side, busting baddies, but the Spider was never comfortable with the fact that her moral compass didn't point right to his magnetic north.\n\nShe had always wondered if this really had to be the end of what they'd shared. And moreover she worried that it'd been her own failings that made it so. Because after all these years, she'd realized that the Spider had been willing to accept that Felicia Hardy was who she was, but maybe she hadn't been willing to accept him for being the man that he was... How fair was that?\n\nThe reason she'd been able to overlook this at the time was the simple fact that she could always tell, even then, that she enjoyed being herself much more that he enjoyed being him. What she hadn't been able to understand back then was that, while crime-fighting wasn't really fun, it was just as important to the Spider that he be that sad sack who weighed his responsibility to the world so heavily.\n\nRecently, they had reconnected in more ways than one, but mostly carnally, and Felicia had started to believe that the day might come when they could both balance their unmet expectations in such a way that meant nothing but spectacular, guilt-free sex and weightless emotional baggage... But they weren't in their early twenties anymore. The Spider wasn't going to change. Neither was she. She was just dabbling in his distracted years before he found some woman who fulfilled more than his most immediate needs. But for a while, that had been enough again. In her soberest moments, she realized they were doomed from the start. Toxic. Which might just be what made it so fun.\n\nIf she hadn't been waiting for the Spider on that rooftop, mulling all of this over, the target wouldn't have gotten the drop on her.\n\nShe had wanted the Spider there, because nobody knew the man she was dealing with better than him. And her years as a private investigator had taught her to trust the best sources you had access to. \n\nMaybe if Spider-Man had shown up in time, he would have told her just how fast the man could be. But even if he had told her, she doubted she could have imagined the inhuman speed of which the man was capable. At first, she thought it'd been some random stiff breeze that had knocked her to the ground. It wasn't until that wind suddenly had weight to press down upon her that she realized that it was a person... \n\nAnd not just some random opportunist...\n\nOh no, the Black Cat realized, once she'd turned enough to take in his face. It was him!\n\nHer gasp of shock brought in the numbing thickness of the fog. \"He's gassed me\", she whimpered before fading.\n\n*\n\nBarbara had been at this game for quite some time. Years. Hell, she'd invented this game. \n\nYou send an operative out and provide them with the technical and tactical support they needed to get the job done. It took a lot of planning, and when all that planning inevitably flew right out the window, it took a lot of improvising. And the most frustrating aspect of all this was when your agent in the field couldn't communicate with you.\n\nThis kind of thing happened all the time. Hell, it was happening to her in three different countries right now. Black Canary was in Japan shutting down one of Osborn's collaborations with S.T.A.R. Labs in Kyoto, and she hadn't been able to call in since Elektra Natchios had shown up on the scene. Barbara wasn't concerned about Dinah. She knew she didn't have to be any more than she was sweating over the Huntress in Halifax, shutting down Osborn's newest weapons plant. She knew Helena could handle whatever the world threw at her, too. That's why she loved working with those ladies. Barbara knew them. Time and time again, they'd shown her that they had the stuff to get the job done.\n\nFelicia Hardy was a different story. The fact that Barbara hadn't heard from her in the last thirty-six hours was not okay. Babs didn't really know the Black Cat, but she was pretty sure Felicia was in trouble. It was the only explanation. And there wasn't anything she could really do about it from Gotham City.\n\nThe GPS on the communicator she'd sent to the Black Cat when she first recruited her placed Hardy at the Upper East Side apartment of one Ashley Moon, an alias under which the mostly reformed thief worked as a special investigator for the mayor of New York. The trace on her cell phone led her to the same location. Felicia probably had a burner cell she used for her moonlighting gig with that fur-collared catsuit. Maybe if Barbara combed through her credit card history, she could find the number. She was about to do just that when she finally got a response from the comm.\n\n\"Uh, hello?\" she heard through the audio uplink. It wasn't the Black Cat. \"Cat? You here?\" Barbara was pretty sure it was a guy, but his voice was distorted somehow... like he was talking through a handkerchief over the phone. \"I know I'm not supposed to know about this place, but, well, you know me,\" the guy said, and there was something familiar about that voice... \"I'm a nosy-parker... No! Busybody! I'm a busybody.\"\n\nThe muffled mumbling. The nervous blather. It all came together and the realization nearly knocked her out of her chair. \n\nShit, shit, shit, Barbara thought. Shit! \n\nShe felt this violent urge to hang up. Her finger was actually on the button before she realized she didn't have the luxury. This was her best avenue to regain some control over this mission, which was now SNAFU in ways she never expected. \n\nYou never should have used her, Barbara told herself. This is why she needed to stick to Dinah, Helena and Zinda Blake. Every new operative was a total disaster. She'd been kidding herself if she thought she could work with the Black Cat without him becoming involved. But no, she just had to stick it to Catwoman...\n\nDamn it!\n\n\"Guess she's not here,\" he was murmuring to himself as she initiated the communicator's beacon. If he was close enough for it to pick up his voice, then he'd hear the high-volume beep that would lead him to find it. \"Yikes!\" she heard loud and clear a few moments later. \"The hell is this?\" She disengaged the locator signal and boosted the volume on the receiver so he could hear him even without the comm in his ear. \n\nShe found herself hesitating once more. She really didn't want to do this. Suck it up, Gordon, she internally sighed. Let's find Felicia...\n\n\"Spider-Man, this is Oracle,\" she said, well aware her voice would be deepened by sound filters and rendered unrecognizable. \"If you want to see your girlfriend again, I'm afraid we're going to have to work together.\" \n\n\"There goes the friendly neighborhood,\" the wall-crawler groaned in response.\n\nCHAPTER TWO: Brightest Brand New Day\n\nSpider-Man wasn't sure if coming to the Black Cat's apartment was a mistake or not, but when she didn't show up for their meet, he didn't see what choice he had. He'd wasted an entire night on a rooftop in Chelsea waiting for her and he'd just spent the whole morning swinging around town to all her familiar haunts. No sign of her anywhere. And she wasn't answering at the number she'd texted from, either.\n\nTechnically, he wasn't supposed to know where she lived. Since the two of them started things up again, they'd been meeting in hotel rooms or the odd penthouse she'd break into while the super-rich tenants vacationed somewhere exotic. And while Spider-Man knew she was Felicia Hardy, she didn't know he knew that she moon-- er, daylighted as a special investigator for the Mayor's office under the alias Ashley Moon. Peter had run into her at City Hall back when he worked for Jonah. She could stuff all that platinum blonde hair under a brown wig if she wanted, but there was no disguising that seductive purr in her voice or that mischievous twinkle in her eyes. There was certainly no hiding that fantastic body. It was only slightly nicer than her apartment. \n\nFelicia -- or rather Ashley -- had a Central Park view in a doorman building with antique fixtures, a working fireplace and private deck garden. If she blew out the kitchen wall, she could make a very nice breakfast nook.\n\nWhatever she was making working for Jameson, it was easily three-times what Peter Parker'd been paid. Actually, the more he looked around, the more he was pretty sure this was that lavish luxury apartment they \"borrowed\" after that flameout with Firefly at the Museum of Natural History. When Spider-Man got to the bedroom, he knew he was right. The Black Cat had pretended to break in, the sexy little liar! Just because she knew how uncomfortable that kind of thing made him! Then she'd pushed him onto that bed... \"You know me, Spider,\" he remembered her saying as she slowly unzipped that crazy catsuit down to her navel. \"A little B and E always gets me in the mood for a little suck and fuck.\" Then she wriggled her shoulders and those creamy white tits popped right out at him. He could count on one hand the number of times he'd seen her wear a bra in all the years he'd known her, yet those frisky kittens of hers never seemed to suffer from this habitual lack of support...\n\nHe barely had the chance to yank his mask up over his mouth before she pounced on him. His face buried in a buoyant abundance of spongy tit-flesh, he drew the fur-lined leather off her shoulders and pulled her suit down to her waist as she freed herself from its sleeves.\n\n\"Oh, Spiiiideeerr,\" Felicia had moaned, her naked hand rubbing the top of his masked head while he licked and sucked at her nipples. They were salty with the taste of her sweat and grew stiffer with every flick of his tongue. \"You're quickly becoming my favorite fucktoy,\" she purred, lifting her tight, leather-clad ass so he could tug her costume down her thighs. She wasn't wearing any panties. Of course she wasn't. When he couldn't work the suit down any further, he let it drop and the heavy material settled over the tent he was pitching in his tights. She shifted her knees so that the tangle of her costume rubbed back and forth on his raging erection, sending a thrill up his spine that made him groan into a mouthful of tit. He caressed the back of her legs with his gloved hands, working his way up to the well-rounded cheeks of her ass which he squeezed before smacking her once.\n\n\"Ho!\" she yipped when he slapped her. She seized the headboard so she could raise herself up, denying him that playful faceful of soft skin. \"Am I being baaaaad, or are you just telling me where you want to ffffuuuuck me?\" she teased, settling her bare ass onto his stomach as her breasts dangled over his face, swaying to and fro. He tried to lean up to kiss them, but she shifted down, intercepting his lips with her own. Her tongue slipped into his mouth. Felicia Hardy was a fantastic kisser. Always had been. Peter was so content to let her devour him that he almost missed her thrashing above him, her legs working frantically as his spandex-bound cock rubbed between her trembling thighs. It took him a moment to realize she was kicking off the rest of her costume. His hands had been kneading her ass throughout this mini-makeout session, but now he was trying to pull her back toward his dick so he could finally fuck her. He wanted that pussy so much. So, of course, she fought him. \"Nuh-no,\" she whined, pulling back when his cock nestled into her ass-crack. \"I-if you want a prize, kitty needs her cream...\"\n\n\"Ooookay...\" he sighed shakily. Peter wasn't some rake. He wanted her to enjoy this just as much as he knew he would. He slid his hands from her butt to caress the length of her long, supple legs, then started to massage her inner thighs.\n\n\"I... I just need to cum,\" she begged as his gloved fingers traced the thick lips of her slit. \"Juh-just make me cum and we can have so much fun...\" He pushed two digits into her then. \"Haw!\" she moaned, shuddering, as her eyes screwed themselves shut. \"Oooooh! Hah! Uhn!\" she whimpered as he started to finger-fuck her in earnest. He took the opportunity of her momentary distraction to bend up and lightly bite one of her plump nipples. \"Nuh-nooo,\" she weakly asserted, pushing him down as she sat upright. \"Baaaad itsy-bitsy spider,\" she admonished, reaching behind her to tug his spider-pants down and free his oozing prick. \"Mmm-maybe nuh-not so itsy-bitsy,\" she corrected, stroking the length of his manhood in time to the rhythm of his fingers thrusting into her cunt, driving him wild. His fingers blurred into her now. Her hips rolled forward, thrusting into the hand so desperate to pleasure her pussy. \"Ah! Ah! I'm... close...\" she moaned in broken gasps. His other hand had alternated between squeezing her ass and stroking her thigh, but now drifted upward to fondle her breast. He tweaked her hard nipple before pulling it hard. \"Fah-ffffuuuuuck,\" Felicia groaned at the naughty sensation. \"Oooohh, I love when you play with my titties, buh-but you know where I like it...\" And he did. His hand trailed from her breast to her back, sliding down each bump of her spine until it returned to her ass. He pushed his thumb into her rosebud.\n\n\"Guh-gaaaawwd!\" she cried, her sphincter closing on the bulb of one digit while she squirted cum on the other. Her whole body shook in her ecstasy, including those lovely, luscious titties of hers. Spider-Man wanted a mouthful of those puffy pink nipples, but she pinned him down to deny him again.\n\n\"Soooo good,\" she whined as he continued to rub circles into her anus through the last of her climax. She fell forward to kiss him again, the hand that had been stroking his cock now tapping it on her taint. He felt the warmth of her flesh, but something was off. Spidey looked down between them to see he was now wearing a condom. \n\n\"Huh-how the h-hell?\" he wondered as she lightly squeezed his dick with her thighs. \"Wh-when did you....?\"\n\n\"I'm just full of surprises,\" she smiled, scooting back so that his rubber-hooded cock settled between her butt cheeks once again, \"but right now, I want to be full of something else...\"\n\n\"Shiiiiit,\" he groaned as she ground herself against him.\n\n\"Where do you want to take me?\" she whispered into his ear. \"You want kitty's pussy or asshole?\"\n\n\"Whuh-whatever you want...\" he said, his hand now clutching her tits as he gave himself over to her. \"Juh-just let me fuck you, Felicia...\"\n\n\"Soooo indecisive,\" she teased, leaning back so his hard cock found her cunt. \"Uhn eh-eeeeeeney,\" she sighed, sinking onto his dick then. \"Mmmmmeeeeeeney...\" she moaned, slicking his length with her wet cunt as she rose up and down. He slipped out of her then, and he thought she just pulled up too far for a moment until she inched forward and perched her anus onto his dickhead. \"Muh muh miiiiiiiney!\" she huffed feeding his cock into her tight asshole.\n\n\"Mo!\" Spider-Man grunted, grabbing her waist as he started to gently bugger the Black Cat.\n\n\"Bah! Huhn! Hah!\" she shuddered. Her eyes lit up as he pulled her down on his manmeat, then screwed themselves shut as he pulled his dick back. \"Awhn,\" she groaned before breaking off into tiny squeaks and whimpers as she slowly bounced up and down his erection. Her hands had been clapped on his chest, clutching fistfuls of red and blue spandex while he throttled her rectum, but she shifted her slight weight to move one to her pussy. \"Fffffuck my ass, Spideeerrrr,\" she purred while she diddled her clit. He slipped a hand from her hip to close over the fingers she was using to pleasure herself. \"Ooohhh -- mmm -- Do it!\" she begged. He drove a finger into her cunt and she screamed, her pussy rippling around his pointer while the muscles deep in her ass pinched down on his dick. \"Ah! Ahhhn... Arrr-aren't you do yet?\" she whined when her orgasm faded.",
        "\"Oh! Oh! Almost!\" he panted, still drilling her sphincter.\n\n\"I -- uhn! ah! -- nuh-know what you waaaant.\" She pulled his shirt up to his neck, exposing his torso. \"Spider loooooves kitty's titties.\" Felicia fell forward, smashing her breasts into his chest. \"Cum for kitty's sweet titties,\" she whispered into his ear, rubbing his nipples with hers.\n\nWho was he to refuse? His dick pulsed as his boiling load spewed out.\n\n\"Good little fucktoy,\" she murmured when he was done, patting his head as she tenderly squirmed off of his cock. Now that she'd had her way with him, she cuddled up against his chest and dozed off. Content to feel her soft skin pressed onto his and exhausted, Spider-Man let himself fall into slumber. At that point, the two of them had been hooking up fairly regularly for a couple of months, but this was one of those rare times that they actually slept together... \n\nSteady on, Spidey, he told himself in the present. Felicia's not here, which means she's probably in trouble.\n\nSpider-Man checked the bathroom, and sure enough, there was that marble-tiled shower enclosure. He'd woken up alone that next day, which was typical for a morning after with Felicia, but this time, he heard the shower running. Neither his spider-sense nor the apartment's actual tenants were screaming, so he figured it was her, which he thought was weird at the time. He carefully crept out of bed to investigate and found her lathering her long legs with soap. \"Good morning, sweetness,\" she practically sang when she saw him. \n\n\"What are you doing?\" he asked.\n\n\"If you really don't know, we might need to have a serious discussion about personal hygiene, man-friend,\" she teased, foaming up her flat sexy tummy.\n\n\"Shouldn't we hightail it out of here?\" he asked, only slightly distracted as she started running the bar soap over her chest.\n\n\"Trust me, nobody's coming to interrupt us,\" she assured him. \"It's Sunday morning, Spider. What's the rush?\"\n\nHe really didn't have anywhere to be. He'd just gotten fired. But he couldn't really just hang out here with her in someone else's place, could he?\n\nShe seemed to sense his indecision and turned toward him then, leaning against the transparent shower pane. \"Help me shampoo my hair?\" she asked, her soapy tits pressed against the steamy glass. \"If you're good, I might even make you breakfast.\" \n\n\"You know how to make wheatcakes?\" he asked stripping out of his costume. The mask had to stay on, which would eventually mean a lot of damp breathing, but she liked it that way. \n\n\"I'm an eggs and sausage kind of girl,\" she informed him. \"Now let's clean that dick first. Kitty's got needs...\" \n\nThey got around to washing those long blonde tresses eventually, and afterward, true to her word, she started making breakfast, going so far as to brew them some coffee. Peter's guilt about eating out of another person's refrigerator was tempered by the all too distracting sight of Felicia padding around the kitchen in only an apron. \n\n\"I'll tidy up,\" she told him after he finished eating. \"Don't worry, Spider. When I'm done, no one will ever know we were here.\"\n\n\"Do you need any help?\" he asked as she took his plate to the sink.\n\n\"Nope,\" she smiled. \"Feel free to swing off at your leisure.\"\n\nIt was one of his favorite memories of their recent time together. A titillating mix of their emotionally-detached screwing and her mocking sexpot rendition of the kind of domesticity Peter Parker had grown up with and yearned for. At the time, he'd thought it was the Black Cat trying to meet him halfway. Now he realized that it was probably just Felicia maintaining her usual morning routine of coffee and breakfast while keeping him in the dark. He could hardly blame her. It's not like he'd ever taken her back to his place, after all.\n\nHonestly, that's what kept things between them so... charged in his mind. That constant tug and pull between complete transparency and unspoken expectation. It went both ways between them, each of them both fulfilled and denied in a dozen different ways at the same time from the same exchanges. If Ms. Marvel had invited Peter Parker to spend the night at her apartment, it would have meant one thing and one thing only. But for the Black Cat to bring Spider-Man back to her place after a scorching hot team-up -- all the while faking that it belonged to someone else -- made it something else entirely...\n\nBut he was getting distracted. He needed to find her, and clearly he was wasting his time here. He was all set to take off when he heard the beeping. A high-pitched tone coming from one of her dresser drawers. He yanked it open to find it bristling with a throng of panties. \"Yikes!\" Spider-Man said, slamming it closed. For all his worldly experience, at his heart he was still May Parker's prim and proper young gentleman. But there was still that infernal bleeping. He gently reopened the drawer and rooted through its frilly, satiny contents until he found something akin to a sci-fi Bluetooth headset. \"The hell is this?\" he wondered aloud. \n\n\"Spider-Man, this is Oracle,\" bellowed a slow, deep voice that sent chills down his spine. \"If you want to see your girlfriend again, I'm afraid we're going to have to work together.\" \n\n\"There goes the friendly neighborhood,\" he groaned. \"What do you know about Black Cat? Did you hurt her?\"\n\n\"Hurt her? No!\"\n\n\"Then why are you talking in kidnapper code?\"\n\nThe voice from the machine sighed. A low, ominous sound. \"I guess I can see how what I said before might lead you to that conclusion,\" it replied. \"Felicia Hardy, aka 'Ashley Moon', aka 'The Black Cat' was working with me.\"\n\n\"Working with you?\" he said. \"Working with whom?\"\n\n\"I told you,\" said the voice. \"I'm Oracle.\"\n\n\"Never heard of you,\" Spider-Man replied.\n\n\"I'm a very private person,\" Oracle said. \"In fact, would you please place the communicator in your ear so we can have this conversation a little more quietly?\"\n\nHe took a long hard look at the device in his hand. \"I'm not sure that's a good idea,\" he said. \"I'm not even sure what this thing does.\"\n\n\"It's a communicator,\" Oracle told him. \"I'm pretty sure I already mentioned that, Spider-Man.\"\n\n\"That's another thing,\" he said. \"How do you know who I am? It doesn't feel like I'm being watched... My spider-sense would warn me if I was being watched...\"\n\n\"I recognized your voice,\" Oracle told him. \"Just put in the comm!\"\n\n\"How do I know it's not rigged to explode or something?\"\n\n\"Is it setting off your spider-sense?\" Oracle asked, and Spider-Man slapped himself in the forehead. Why was he always so quick to gloat about how great it was to have an innate sense of impending danger? You've really gotta learn to keep that one under your hat, Pete, he admonished himself. It's been TEN YEARS.\n\nThe current calm of his spider-sense wasn't the most compelling argument -- it was notoriously spotty about just what constituted \"impending danger,\" after all -- but he was running out of options. He slipped the communicator up under his mask.\n\n\"Okay,\" Spider-Man sighed once it was in place. \"What'd you pay Black Cat to steal?\"\n\n\"I didn't pay her to steal anything!\" Oracle protested. \"I just sent her on a mission that might have gotten her into some trouble.\"\n\n\"Right,\" Spider-Man replied. \"What'd you pay her to steal?\"\n\n\"She didn't steal anything,\" Oracle insisted. \"She may, however, have appropriated some sensitive information belonging to a very dangerous man.\"\n\n\"That's just a fancy way of saying you paid her to steal something!\"\n\n\"Do you want to talk semantics, or do you want to help me find her?\"\n\n\"I can do both,\" Spider-Man said. \"I'm an overachiever.\"\n\n*\n\nYou're a smug jerk, Barbara thought. She couldn't believe she was having this conversation. She'd spent years trying to avoid this. And apparently, if she'd just asked Catwoman to make a Manhattan daytrip, she could have succeeded...\n\nSpider-Man had never even heard of her? \n\nObviously, that was a good thing. There were too many people aware of Oracle's existence as it was. It had become a security risk over the years, so the fewer superheroes zipping around blathering about an information specialist on their side, the better. But Spider-Man tended to get around. She figured he would have heard at least a rumor by now...\n\n\"Just tell me what you see,\" she said, pulling herself together. \"In the apartment.\"\n\n\"Uh, no signs of forced entry at the door or windows,\" he told her after what she assumed was a deep, cleansing breath. \"No signs of a struggle...\"\n\n\"Someone's been watching CSI,\" Barbara mused.\n\n\"I have a friend in the business,\" Spider-Man explained. \"I've never been much of a detective, but I'm trying to get better.\"\n\nTypical metahuman meathead, she thought to herself. Years of working under Bruce had tainted her against all these super-powered jocks who just punched their way through life. But as she brought the extensive dossier she'd compiled on Spider-Man up on one of her heads-up displays, she was reminded that he brought more than enhanced strength and speed to the table. There was a two-point difference in their respective IQs.\n\n\"Okay,\" she said, tying her hair up in a sloppy bun while she worked through the scenario. \"So she probably wasn't taken from the apartment. But I'm guessing the communicator was stashed with her supplies. Any clues there?\"\n\n\"Not really any clues there, nope,\" he explained. \"No, bras either,\" he said a little bit softer. \n\n\"What are you talking about?\" she asked.\n\n\"It was, um, in her underwear drawer,\" he admitted. \n\nOf course it was, Barbara thought, rolling her eyes. She really might as well have gone with Selina. These cat burglar sex kittens were all exactly the same. \n\n\"And her Black Cat costume and gear's in a heap at the bottom of her coat closet,\" Spider-Man said. \"Felicia's never been too traditional about the secret identity thing.\"\n\nGreat, Barbara thought. She'd clearly picked a real professional for this job. \"Any other leads you can think of?\" she asked.\n\n\"She works with a team,\" Spider-Man said. \"Sometimes with Misty Knight and her Heroes for Hire crew, but she has her own personal support, too. There's a computer whiz guy and a gadget girl. Maybe one of them knows something.\"\n\n\"I've already spoken with them all,\" Barbara informed him. None of them had been too pleased that Oracle knew who they were and what they did, but when she told them Felicia might be in trouble, they wanted to help. \"None of them have heard from her in days, but they're asking around.\"\n\n\"Damn,\" he said. \"I might be the last one she's been in contact with.\"\n\n\"She called you?\"\n\n\"Text message,\" Spider-Man corrected. \"She said she needed help with something. I was supposed to meet her but she never showed. That's why I came here.\"\n\nDamn it, Cat, Barbara fumed. She'd specifically asked Felicia not to do that! \"I'd prefer if you didn't involve anyone else in this,\" Oracle had instructed the Black Cat when she recruited her. What was unclear about that? But this might just be the break Barbara needed.\n\n\"What's the number for that phone?\" she asked.\n\n\"I don't know what good that's going to do,\" Spider-Man said after he rattled off the ten-digit sequence. \"She hasn't been answering.\"\n\n\"I'm not going to call her,\" she sighed. \"I'm going to dump her phone log. Maybe even run a trace if we're lucky and the cell's still intact.\"\n\n\"You can do that?\" he asked. \n\n\"That's the least of what I'm capable of,\" she answered, working the computer interface. \"Got a trace!\" she announced. \"She's headed east on 23rd Street. I'll try to cross-reference the phone GPS with satellite imaging and footage from any available security cam with eyes on the street. See if I can see her.\"\n\n\"Satellite imaging?\" he repeated. \"What are you? S.H.I.E.L.D.?\"\n\n\"I'm part of an organization that's about to leave S.H.I.E.L.D. in the dust,\" she replied with a sense of pride she hadn't expected since Bruce had announced this \"Batman Incorporated\" insanity. \"Get a move on.\"\n\n*\n\nSpider-Man was out the window and web-swinging his way downtown in a flash. He was a good forty or fifty blocks away from 23rd Street, but the way he moved, that shouldn't take him too long. Everything was happening so fast. And he still didn't really know who or what he was dealing with.\n\n\"So, who are you, Oracle?\" he asked, swing down Fifth Avenue.\n\n\"You want to trade secret identities?\" Oracle responded. \"Fine. You first.\"\n\n\"I don't mean what's your real name or anything,\" he said. \"I just want to know what your deal is.\"\n\n\"My deal?\"\n\n\"You said you're not S.H.I.E.L.D., but are you with another organization? Is Oracle a new agency or something?\"\n\n\"I guess you can say I'm an independent resource to the superhero community who can provide information and data retrieval with my specialized computer skills.\"\n\n\"So you're kind of a worldwide web-head...\"\n\n\"Sure,\" Oracle responded. Spidey could hear her eyes rolling over the line.\n\n\"How'd the Black Cat get into all of this anyway?\"\n\n\"I trust you're familiar with Norman Osborn,\" Oracle said.\n\n\"Duh,\" Spider-Man replied. \"I was punching that jerk in the face before it was cool.\"\n\n\"Then I'm sure you can imagine the kinds of things he got up to with unlimited resources and an unchecked global mandate,\" Oracle continued. \"He kept the truly awful stuff off of the H.A.M.M.E.R. mainframe, but I knew he had to have files stashed somewhere. Turns out it was all on a flash drive he secured in his private vault at Osborn Industries' corporate headquarters right before he attacked Asgard.\"\n\n\"It's always flash drives these days,\" Spider-Man murmured. \"Whatever happened to microfilm? There was a certain touch of class to microfilm...\"\n\n\"Do you want to hear this or not?\"\n\n\"Sorry,\" he said. \"Continue.\"\n\n\"I hired the Black Cat to recover--\"\n\n\"I believe you mean 'steal'...\"\n\n\"Fine,\" Oracle conceded. \"I hired Black Cat to steal the drive.\"\n\n\"And now she's missing.\"\n\n\"No, the recovery -- er, theft went off without a hitch,\" Oracle explained. \"She completed delivery last week.\"\n\n\"So how do you know her disappearance has anything to do with you?\"\n\n\"I screwed up,\" Oracle admitted. \"Osborn had locked up the drive... He'd encrypted the data... I didn't expect there to be any other countermeasures...\"\n\n\"But there were,\" he guessed.\n\n\"A self-destruct worm,\" Oracle said. \"As soon as I opened the files they started erasing themselves. I managed to stop it in time -- it wasn't that sophisticated, really -- but one of the files was corrupted. I recovered what I could, but all I really know is that it involves a facility in the New York City area. I contacted Felicia to see if she'd heard anything about it, and she volunteered to look into it. Free of charge. She was supposed to check in last night, but she didn't. Maybe she's working another job right now or lost interest, but I doubt it. She really seemed like she wanted to handle this one. She said it might make her look good for the Avengers.\"\n\n\"Of course she did,\" Spider-Man sighed. Ever since Osborn had fallen and the web-head was now back on an officially sanctioned Avengers team instead of Luke Cage's motley underground crew, Felicia had been subtly hinting that she'd like to join up, too. He was actually glad because if she was doing legitimate superheroics it probably wouldn't leave her much time for burglary, but at the same time, he felt insecure enough on the team without his semi-crazy ex-girlfriend-with-benefits hanging around to break his spider-themed booties.\n\n\"Got a visual fix,\" Oracle told him. \"The phone's in a cab.\"\n\n\"Which one?\" Spider-Man asked, swooping down over 23rd Street around the Flatiron Building.\n\n\"First one stopped at the light on Madison Avenue,\" Oracle sighed, \"but don't bother...\"\n\nHe wasn't listening. He was already on the street, tearing the passenger side door off its hinges. \"Cat?\" he called out. But there was only the middle-aged cabbie and two frightened French tourists in the back.\n\n*\n\nThanks to a feed from an ATM security camera positioned at the corner of 23rd and Madison, Barbara had watched the whole thing play out onscreen. \"Gee, Spider-Man,\" she said. \"I wonder how you get all that bad press in the papers...\"\n\n\"Yeah, this was kind of stupid of me,\" Spider-Man admitted, still holding the car-door.\n\nBarbara took off her glasses to rub the bridge of her nose for a moment before settling back into the work. \"Okay,\" she said. \"Tell Mr. Dickles that you're sorry and that money's currently being wired into his checking account for the damages.\"\n\n\"Who's Mr. Dickles?\" Spider-Man asked.\n\n\"The cab driver,\" she answered. Barbara had pulled up his data as soon as she got a clear view of the taxi's license plate: Charles Dickles, Jr. No criminal record. Facial recognition software hadn't matched his DMV photo to any known felons. He was clean. \"Now, apologize,\" she told Spider-Man. \"Preferably while searching the back of the cab for Black Cat's cell phone. As I tried to tell you before you attacked that poor defenseless door, she's not there. Whoever took her ditched her phone in the cab to throw anybody trying to track her off the trail. Probably did so as a passenger. Find it.\"\n\nWhile he was doing that, Barbara was funneling the appropriate amount of cash into Dickle's checking account from one of her discretionary funds -- including a hefty bonus for what she could only imagine was the absolute horror of dealing with the amazingly neurotic Spider-Man.\n\n\"Found it!\" the web-head chimed just as she finished.\n\n\"Good,\" she said. \"Now just web the door back into the frame so everyone can go on their merry little way. I'll stop holding the red light.\"\n\n\"Anyone ever point out that you can be a bit bossy?\" Spider-Man asked, doing as ordered.\n\n\"Anyone ever point out that you can be a bit of an impulsive idiot?\" she countered, watching him leap out of range of the ATM camera to web-swing away.\n\n\"My bad,\" he admitted. \"I tend to panic when my friends go missing. Especially if Norman Osborn's involved.\"\n\n\"Osborn's in jail,\" she said. \"We can't assume he's involved.\" \n\n\"We can't assume that he's not,\" Spider-Man insisted. \"Where the hell is she?\"\n\n\"Your guess is as good as mine,\" she sighed. \"The whole point of dumping the Cat's phone was so that now, even if I backtrack through the GPS record since she disappeared, it's going to be a wild goose chase.\"\n\n\"Where was she when she texted me?\" Spider-Man asked. \"That's got to be better than nothing, right?\"\n\n\"It might be worth a shot,\" Barbara figured, though she had her doubts. But like he said, it was better than nothing. It took her a moment to cross-reference the GPS history with the call log. \"City Hall,\" she told him.\n\n\"Probably from her office,\" he replied. \"Might find something there. I'll check it out.\"\n\nBarbara sat back in her chair and closed her eyes for a moment. It wasn't the worst lead, really. If Felicia had found something, she'd probably used her access to city records as Ashley Moon to get it. But Barbara wasn't sure whether she actually wanted the Black Cat not to be smart enough to know how to cover her tracks. Chances were this was just another dead end, and then what? There was just too little to go on. She needed more information...\n\nAnd there was only one way she might get it.\n\n*\n\nJ. Jonah Jameson wasn't anybody's damn fool. A bad ticker and a treacherous board of directors had ripped the Daily Bugle from him, but now he was the goddamn mayor of the greatest fucking city on God's green earth. It wasn't a fluke. It wasn't an accident. He was the right goddamn man for the job. Because he knew what New York really needed.",
        "He was J. Jonah Jameson... and he knew everything.\n\nHe knew what people whispered behind his back... That he was a cantankerous crumb-bum... That he was a cheap skinflint... That he had an unhealthy bias against that dog-fucking wall-crawler... Well fuck 'em. He was a \"cantankerous crumb-bum\" because somebody had to ask the hard questions about this flawed, woe-begotten world. He was a \"cheap skinflint\" because he grew up before the goddamn internet bubble boom after which yuppie scum thought it was completely acceptable to leave their half-drunk five dollar froufrou coffee drinks behind while they ran off to spend twenty bucks on a movie. And he was against the web-head because Spider-Man was a goddamn menace, dammit!\n\nAnd J. Jonah Jameson knew who worked for him. He'd sussed out that crooked Parker kid had doctored that photo of Jonah fighting the Vulture to clear those ridiculous TMZ reports that he was in league with that weird winged freak. Parker thought he was so smart, but J. Jonah Jameson could see into that little punk's goddamn soul. Peter fucking Parker had no secrets from J. Jonah Jameson. Neither did Ashley Moon. He knew the shameful truth about her from the beginning. There was no way some damned masked crusader was going to work right under his nose and he wasn't going to know who she was.\n\nWhen he saw Moon's resume in his search for a lead investigator for the Mayor's office, he'd been impressed, and that alone had been enough to get him suspicious. Joe Robertson had been the best hire Jonah ever made, and Robbie's resume had been a goddamn mess. Good workers had this stupid assumption that the god's honest truth would get them that job. Ambitious social climbers and sociopaths knew they needed to play their potential employer. Jameson had learned over the years that a good manager hired a balance of saints and sinners to ensure the workplace hummed with just the right amount of controlled chaos.\n\nSo he decided to meet with this Ashley Moon, and the second she marched into his office, wiggling those tits under her smart little business suit, he knew exactly who he was dealing with... the goddamn Black Cat. She could cover all that crazy white hair with a ratty brown wig, but J. Jonah Jameson was a newspaperman, and a newspaperman never forgot a face. And he certainly never forgot a pair of tits.\n\nHe decided to interview her for a bit -- just to break up his day at first, but the longer the interview went, the more qualified he realized she was. And then it occurred to him that if he had her on the payroll, he might just manage to get some crucial information on that blasted Spider-Man. He knew the two of them had been involved at some point... \n\n\"You're hired!\" he found himself announcing. \"Welcome to City Hall!\"\n\nShe smiled then, positively beaming, and when his heart skipped a beat it briefly occurred to Jameson that someone might need to warn her about flashing that sexy little grin in the presence of someone who'd recently survived a severe cardiac event. \"I should tell you, Your Honor, I'm not exactly who you think I am,\" she said. \"My name's really Felicia Hardy. I'm also the Black Cat.\"\n\nAnd that's when J. Jonah Jameson realized he wasn't talking to just another mask trying to pull a fast one. Because, again, Jameson wasn't anybody's fool. He knew that Spider-Man's actions tended to do more good than harm. But if it was as simple as that, then why did the wall-crawler hide behind that ridiculous mask? If he was really as good and as true as his actions seemed to indicate, then why not tell the world who he was? Spider-Man had to be hiding something... and it had to be something so terrible and evil that it'd obliterate all the good he'd supposedly done. It was the only explanation...\n\nDespite Jonah's earlier suspicions, the Black Cat was a different case entirely. She worked around going through the proper channels, assuming she didn't have a shot otherwise, and when her subterfuge seemed to work, she'd come clean. That was exactly the type of devious morality he wanted in his investigative department... but he needed to know the truth.\n\n\"Who is he?\" he asked her flatly. \"Who is Spider-Man?\" She had to know who he really was. And if she was looking for a job with him, he had to assume she was willing to give the web-head up.\n\n\"I don't know his real name,\" Hardy told him. \"He was always just The Spider to me.\"\n\nJ. Jonah Jameson knew a falsehood when he saw one. He was a goddamn human lie detector. She wasn't lying. Which meant Spider-Man was just as depraved as he always suspected. He'd heard the stories. He'd seen the pictures. What kind of man carried on a sexual liaison with a woman without telling her who he was? A predatory deviant like that web-slinging fraud, that's who! \n\nSo Mayor J. Jonah Jameson hired the Black Cat. And she did good work. When Jonah asked her to look into Dexter Bennett, that smarmy smug bastard that managed to snake the Bugle out from under him, the Cat managed to save hundreds of lives when she uncovered one of Bennett's shady construction deals mere hours before a building collapsed. And while Spider-Man had clearly been involved in her investigation, he let it slide. It was better if he got that wall-crawling whack job comfortable with her. Maybe one day he'd slip up enough for them to finally nail him!\n\nSo no, Jameson wasn't the monster everybody assumed he was. Jonah was willing to dole out a second chance to someone who deserved one. But he couldn't excuse laziness, and he wouldn't put up with a no-call/no-show.\n\nHe knew Felicia Hardy, or \"Ashley Moon\", or whatever the hell she wanted to call herself hadn't produced anything worthwhile for days. And that wasn't acceptable. At all. He stormed his way into her office to tell her just that, but when he pushed open the door, he found the room empty.\n\nIt was very possible that she was off working a lead or following a hunch -- one of the things he loved most about Felicia working for him was that it was the closest his duties as mayor came to feeling like working back at the Bugle -- but the old newsman in Jameson's heart told him she hadn't been here all day...\n\nAnd it told him something else: Spider-Man was hiding in the room. \n\nJ. Jonah Jameson had spent the last ten years of his life dealing with that web-slinging menace... both by revealing his high-flying scandals to the world at large, as well as suffering Spider-Man's childish attempts at retribution afterwards. Jameson had developed an ability to tell when that wall-crawling weasel was around that bordered on extra-sensory perception... and his menace-sense was jangling.\n\n\"I know you're in here, you dog-humping piece of shit!\" he announced to the room. \"And I know exactly where you're hiding! I'm not like the punks and thugs you pull your little flimflams with! J. Jonah Jameson's got the good sense to look up!\"\n\nAt that, Jameson reached for the light switch and scanned the ceiling frantically... \n\nNothing.\n\n\"Damn,\" he muttered quietly.\n\nHe shrugged as he stormed out of the office. Jonah was only human. He made mistakes just like anyone else. Maybe one of those mistakes had been hiring Spider-Man's slacker ex-girlfriend in the first place. It was clearly making him edgy.\n\nOkay, he told himself, command decision time. If Hardy wasn't in tomorrow, he'd call out the National Guard. And if she showed up without a good excuse, he'd just dock her pay. Spare the good people of New York City her exorbitant hourly rate for a few days. Seemed fair.\n\nGoddamn, it was good to be king.\n\n*\n\n\"Jeez Louise,\" Spider-Man grumbled, crawling out from under Felicia's desk once the old bastard was safely down the hall. He'd actually had to tuck himself up into the corners and cling there just to be sure Jameson couldn't see his feet through the gap.\n\n\"Find anything useful?\" Oracle chirped.\n\n\"Not sure,\" he said, stretching his cramped back for a moment. \"She had a pile of files on her desk. City records of all of OsCorp's New York real estate holdings... If you want I can grab them and take them to you...\"\n\n\"Don't bother,\" Oracle said. \"I've just downloaded everything in the City Hall records regarding Osborn's holdings.\"\n\n\"Of course you have,\" he sighed, climbing out of Felicia's office window. \"Anything promising?\"\n\n\"Hard to tell,\" Oracle admitted. \"Osborn has a lot of property in the area.\"\n\n\"Start with the most obscure buildings in the seediest neighborhoods,\" he suggested. \"Norman's always buried the worst of his crap as deeply as possible.\"\n\n\"Great,\" Oracle said. \"Did you find anything useful that was offline in Hardy's office?\"\n\n\"The last date in her appointment book before she texted me said she ordered car service to Grand Central Station,\" he explained, swinging away from City Hall.\n\n\"So she could have gone anywhere after that,\" Oracle concluded.\n\n\"Osborn's still our best lead,\" he said.\n\n\"I guess you're right,\" Oracle sighed.\n\n\"But he's in jail,\" Spider-Man said. \"Right?\"\n\n\"I'm looking at surveillance footage of him right now,\" Barbara assured him a hundred miles away up in her tower, where in the upper right hand corner of her holographic heads-up display, she was watching Norman Osborn read a book in his cell at the Raft. This wasn't any techno-trickery on her part. GBS had been running a live-feed of Osborn ever since he'd been incarcerated. \"The little dictator's right where he's supposed to be.\"\n\n\"I didn't know you had eyes on hell,\" Spider-Man muttered. \"So what's with this grudge against Osborn, anyway? I mean, the more people keeping tabs on him the better, obviously, but everyone else stopped worrying once he got locked up...\"\n\nBarbara sighed. This was essentially the same question Batman had asked her yesterday, and if she hadn't wanted to talk about it with Bruce, she definitely didn't want to talk about it with Spider-Man...\n\nBecause her passion for all of this was driven by one simple fact: Barbara was pretty sure that Norman Osborn had killed Gwen Stacy.\n\nThere was a lot of confusion surrounding the Green Goblin. There were at least four different people who'd reportedly assumed the identity, to say nothing of the Hobgoblins, Demogoblins and other related menaces that had appropriated the same M.O. through the years. Norman Osborn had certainly done everything within his considerable power to plant an astonishing amount of misinformation to confuse the matter even further. So much so that even Oracle couldn't sort everything out. She was 80% certain that Norman had been wearing the costume when the Green Goblin had thrown that beautiful blonde girl she used to babysit off the George Washington Bridge.\n\nBarbara's only lingering doubt about this was Norman's son, Harry. While all evidence seemed to indicate that the younger Osborn hadn't taken the Goblin mantle until well after Gwen died, it seemed to her that Harry, Gwen's classmate in both high school and college, was far more likely to have some motive to murder her than Norman ever would. But there was no accounting for the intentions of madmen. \n\nIf there was one lesson Barbara had learned in her life, it was that.\n\nThis all might have been easier to figure out if she had known about Gwen's death when it happened, but it'd been almost an entire year before Barbara's father finally told her. If she hadn't asked if he'd heard from her lately, she doubted Dad ever would have. She could tell from the way he looked at her when she asked after Gwen that something terrible had happened.\n\n\"Gwen died, Barbara,\" he said finally. He went on to explain the few circumstances he knew of her death. How he'd taken the trip to New York on his own for the funeral. He'd paid his respects to Gwen's Uncle Arthur and her cousins. \"I even had a brief word with Gwen's boyfriend,\" Jim said. \"Pat Palmer or some such. Poor kid looked like his whole world had imploded. Wish I could say I'd never seen anything like it before, but I've been a cop for the last thirty years.\"\n\n\"Why didn't you tell me?\" Barbara asked. \"I would have gone with you...\"\n\n\"It was a while ago,\" Jim said. \"Right after your accident.\"\n\nIt used to infuriate her when he called the Joker's assault her \"accident\". There hadn't been anything accidental about it. But eventually she realized that he had to call it that. Otherwise, he had to face his own guilt about what happened to her. The Joker hadn't been gunning for Barbara because she'd been Batgirl. He'd been after her dad and she just happened to be there. She'd just been another one of his casual casualties. An after thought.\n\nEventually, she even understood why her father probably thought it was best not to tell her about Gwen's death when it happened. Barbara was still in the hospital, recovering, after all. And the two girls only knew each other because their dads had been partners years before either of them had been born. It wasn't as if Gwen had ever been Babs' best friend. The five year age difference between them was part of it. They'd practically lost touch well before Barbara went to college. In fact, the last time she'd spoken with Gwen was when little Miss Stacy come to Gotham University for a campus visit several years back. Gwen had called to ask if Barbara wanted to catch up over coffee, but it had been in Barbara's early years as Batgirl, and she was busy with that and her job at the library. And Barbara had figured there would always be time later. Because she was young and so was Gwen and they had their whole lives ahead of them...\n\nLooking back on it now, Barbara realized that the night Gwen Stacy died had been a big moment for her. Learning that someone she'd known had been killed so soon after she'd been paralyzed put some things into perspective. She remembered that Gwen's father, George, had passed away a few months before Gwen -- another funeral she missed because she'd been busy. It was then that Barbara realized she didn't have a monopoly on personal tragedy. A lesson she probably should have remembered considering she'd once stood shoulder to shoulder with Bruce Wayne and Dick Grayson, but she had been so mad at them both at the time. \n\nLoss does funny things to people...\n\n\"Oracle?\" Spider-Man said. \n\n\"What?\" she snapped, ripped from her reverie. Would he ever shut up?\n\n\"I, um, I asked about Osborn,\" he replied. She could hear the surprise and hurt in his voice. \"I just, uh... never mind.\"\n\n\"Sorry,\" Barbara said. She was so tired. \"I'm just... frustrated with this.\"\n\nShe knew that thinking about Gwen Stacy would only complicate working with Spider-Man further. Gwen, a cop's daughter through and through, had been very careful to keep her personal information off of the internet, so Barbara had never really been able to get much sense of her social life. But it was common knowledge that Spider-Man had been involved somehow. It wasn't just the fact that he'd been there fighting the Goblin when it happened -- just like he'd been there when George Stacy died -- or the coroner's report which implied that it'd been Spider-Man's attempt to save Gwen that had been the cause of her death. Barbara didn't blame him. She knew enough about him to know he wasn't a killer. No matter what she'd read in the Daily Bugle. But she also knew he could probably answer some of the questions she had... if she could only ask them, but she couldn't. Not to him...\n\n\"I guess Norman Osborn's a bit of a sore subject,\" she told Spider-Man finally.\n\n\"Trust me,\" he said, \"I understand the feeling.\"\n\n\"I bet you do,\" she murmured bitterly.\n\n\"Are you... mad at me?\" he asked.\n\n\"Perhaps we should maintain radio-silence until I figure out our next move,\" Barbara suggested.\n\n\"So you are mad at me,\" he insisted.\n\n\"I'm not mad at you, Spider-Man,\" she sighed.\n\n\"Are you sure?\"\n\n\"Yes.\"\n\n\"Really?\"\n\n\"Really.\"\n\n\"Because I can't shake this feeling that you don't like me for some reason, Oracle...\"\n\n\"I like you fine, Spider-Man,\" she said through gritted teeth.\n\n\"Wouldn't blame you if you didn't,\" he mused. \"I know I've got a certain reputation -- completely undeserved, mind you.\"\n\n\"You just menaced a cab driver!\"\n\n\"Accidentally!\" he said. \"Totally not my fault!\"\n\n\"Jesus,\" said Barbara. \"Are you always this whiny, Peter?!\"\n\nThe second she'd said it, she realized her mistake.\n\n\"You know who I am?!\" Spider-Man cried. \"You can't know who I am! Who are you, Oracle?!\"\n\nWell this certainly wasn't going to make working with him any easier...\n\nCHAPTER THREE: The Secret Life of the Amazing Web-Slinger\n\nBecause of his preternatural senses, Spider-Man wasn't used to being blindsided. It didn't hurt that in his life as Peter Parker, he'd picked up on a fairly common pattern to his day-to-day routine: It's going to get worse. It's always going to get worse. \n\n\"Jesus,\" Oracle had said. \"Are you always this whiny, Peter?!\"\n\nWhen he did find himself confronted by an actual, genuine surprise, the web-head didn't always handle it so well. In this case, he miscast his web-line and found himself freefalling a good fifty stories toward the intersection of Chambers and Broadway before he recovered and fired off a safety web. \n\n\"You know who I am?!\" he shouted on the upswing. \"You can't know who I am! Who are you, Oracle?!\"\n\nThis is bad, he realized. This was impossibly bad.\n\n\"I told you, I'm an information expert specializing in the superhero set,\" Oracle said. \"I know the true identities of hundreds of heroes.\" It was hard to tell with the voice filter, but Spider-Man almost sensed an undercurrent of panic in Oracle's response.\n\n\"That's not really an answer,\" he sulked, as his wild swing carried him to the side of the Woolworth Building where he stopped to catch his breath.\n\n\"I... I can't tell you,\" Oracle replied. \n\nThat was definite panic.\n\n\"Okay,\" Spider-Man concluded, trying to get control of his own anxiety. \"If you can't tell me who you are, then at least tell me how you know who I am...\"\n\n\"That's a long story,\" Oracle told him. \"We... we just don't have time...\"\n\n\"Are you kidding me?!\" he yelled. \n\n\"No,\" Oracle said firmly -- in charge once more. \"I understand that this might change things for you, Parker, but it doesn't for me. I have a missing operative and I need to find her. Your help would be appreciated, but it's not necessary. I can do it on my own if I have to. It's your decision.\"\n\nThe urge to just cut and run was overwhelming. Spider-Man didn't like working with this Oracle guy to begin with, and now his secret identity was an issue? No thank you. Peter had gone to great lengths to avoid exactly this kind of situation. If he was smart, he'd turn around, head straight for Avengers Tower, and tell Steve Rogers all about this rogue hacker who was playing god with a black ops agenda...\n\nBut there was still the Black Cat to consider. \n\nEven if Felicia had gotten into this mess all on her own, she had asked for his help. That meant she was his responsibility... and in the world according to Peter Parker, that meant everything. He had to do whatever it took to make sure she was okay. Whether he liked it or not... especially if Osborn really was behind this. Because Spider-Man had the kind of enemies who would suspend him from church bells or bury him alive to prove a point, and the Green Goblin was the most vicious and depraved of the whole rotten lot.\n\nNorman Osborn had discovered that Peter was Spider-Man years ago and it'd been an absolute nightmare. Norman's mental instability had been a blessing at first, because that whole year after he'd learned the truth about Peter, Norman couldn't even remember that his greatest enemy was living with his son, Harry. But when Harry started up with the drugs and spiraled out of control, Norman just kind of went with him. But unlike his son, Norman never really came back. It was all Goblin all the time after that. Norman killed poor Gwen, then, he seemed to kill himself while trying to kill Peter, only to come back crazier and more devious than ever years later. Eventually the crazy outbalanced the devious, and Spider-Man finally had no choice but to take him down publicly. ",
        "Of course, there was no way Osborn could just let it end there. The first time Norman had been incarcerated, he'd arranged for the Scorpion to kidnap Peter's aunt as part of an elaborate plot that left poor May Parker buried alive for weeks...\n\nAnd hadn't Felicia been there for him when it happened? Wouldn't Aunt May be dead right now if not for the Black Cat's help? Thanks to Doctor Strange, Osborn wouldn't go after May now, because Norman didn't know she was practically Spider-Man's mother. Spidey's relationship with the Cat, on the other hand, was public knowledge. If Osborn wanted revenge on Spider-Man again, she might just seem like the best option... \n\n\"Last time he was in jail, Osborn had a contingency plan in place,\" he finally said. \"I know most of the people who've worked with him got locked up after the siege, but maybe he's still got an agent out there doing all this.\"\n\n\"I'll check if any of his known associates are still out and about,\" Oracle replied. \"I take it that means you're still in?\"\n\n\"Yeah, I'm still in,\" he confirmed.\n\nOracle sighed one of those deep, creepy sighs. This time in relief. \"Thank you, Peter.\"\n\nBesides, Spider-Man figured as he started to climb Woolworth Tower, the longer I stick with you, the better chance I have of figuring out who you are, Oracle.\n\n*\n\nNice going, Gordon, Barbara admonished herself as she ran a search of the Green Goblin's former hirelings. She was making stupider and stupider choices. She realized that.\n\nJust working with Black Cat had been the first. Deciding to contact Spider-Man when he showed up at Felicia's apartment had been spectacularly stupid, too. And while letting it slip that she knew who he was hadn't really been a choice, bluffing to keep him working with her certainly had been. She should have just let him swing off in a huff. And she would have if not for the fact that her first dumb mistake was still lingering out there. She'd brought the Black Cat into this fiasco, so Barbara had to do everything in her power to get Felicia back. Even if it meant working with Spider-Man.\n\nThat said, Barbara couldn't afford to let the web-head know anything else about her. She realized it wasn't exactly fair -- especially since she knew so much about him -- but that was just the way she needed things to be. It was the way things would always need to be between them now. She was pretty sure he still didn't know that Barbara Gordon used to be Batgirl, but he really couldn't blame her for figuring out that Peter Parker was Spider-Man.\n\nThey'd agreed not to share their true identities at the start of that night they'd spent together all those years ago, but after it happened it seemed indecent not to share their first names. When she drove him to the train station the next morning, all she really knew was that Spider-Man was (probably) a guy named Peter from New York who was pretty good with his hands. After seeing him off, as she drove her father back home to their townhouse in Gotham Heights, she hadn't been all that concerned with figuring out much else about Spider-Man. She was much more worried about making sure her dad never found out she'd had a gentleman caller while he was away. \n\nLooking back on it now, after all these years, it all seemed so silly. Back then, though, Barbara had expected some kind of serious fallout after her night with Spider-Man. Despite all the precautions and cleanup, she still thought her dad would step one foot in the door and spot some last, forgotten clue she'd neglected. \n\nThat didn't happen.\n\nThe Commissioner just mumbled something about not getting much sleep in New York the night before, then took a long nap on the couch -- during which she thoroughly re-cleaned the guestroom and their shared bath.\n\nLater, when Batgirl met up with the dynamic duo in the Batcave for the Dark Knight's nightly instructions, she was still apprehensive, but she didn't need to be. The Caped Crusader just barked out an order that she'd be covering Devil's Square, Gotham's West Quadrant, before he went on his gloomy little way. Surprisingly, the only tiny consequence of her discreet one night stand came from the Boy Wonder.\n\n\"You don't seem as tense or uptight tonight,\" Robin observed, once his mentor was more than halfway to the Batmobile. Batman was presumably out of earshot, but you never really knew with him...\n\nThe Dark Damsel had been far more worried about Batman noticing something than she was about Robin. Bruce Wayne was supposed to be the world's greatest detective, after all. But it was Dick Grayson who came closest to calling her out...\n\n\"You don't seem as dense or immature tonight, either,\" she said, strolling toward her Batcycle. \"Maybe I'll see you around, pixie boots...\"\n\nAnd that was the day Barbara Gordon finally and truly realized that there really wasn't a \"casual sex\" police out in the world, just waiting for two consenting adults to have at it so they could make their bust. And right then and there she was determined to forget the whole crazy, impetuous thing with the wall-crawler ever happened.\n\nBut a week later, curious about this strange boy she'd met in the weirdest possible way, she found herself going over the Spider-Man coverage in the Daily Bugle archive during a slow shift on her job at the Gotham Public Library. Years of reading the Gotham Gazette had prepared Barbara for a certain lapse in journalistic integrity. Gotham political candidates were very quick to pay for the right slant in an article, but J. Jonah Jameson's take on Spider-Man was almost laughable in its muckraking.\n\nSpider-Man: Threat or Menace? Really? And supposedly, he was \"in cahoots\" with every supervillain in Manhattan. But that insane editorial linking the wall-crawler to a spate of canine-molestations was just disgusting. \n\nThe more she went through the Bugle, the more she realized this was all more or less par for the course. It wasn't until she got to the front page article accusing Spider-Man of cavorting with the Rhino that she noticed the photo credit. And when she looked back, she realized that all of the Bugle's exclusive Spider-Man photos were credited to this \"Peter Parker\". \n\nWhen she'd first spotted the camera clipped to his concealed utility belt, Batgirl assumed it was a crime-fighting tool, like maybe he used it to document evidence or something. But now she had to wonder. After all, if you didn't have a relationship with the local police department, working at a major metropolitan media outlet was probably your best bet of hearing about a crime as it was happening. At the time, Barbara wondered if any of the other superheroes had thought of that kind of thing... And it wasn't like vigilantism paid the bills. Hell, she was lucky she had a wealthy benefactor. When she'd been fighting crime without Bruce Wayne's considerable bankroll backing her, the equipment costs alone had maxed out her credit cards. The way Spider-Man had talked that night they spent together he was barely making ends meet. Selling photos of himself fighting crime seemed like his best bet at keeping his head above water.\n\nIt was almost too obvious. \n\nAlthough, you had to figure there were a dozen other papers in New York City where he could sell these exclusive photos where they wouldn't be used to paint him in such a bad light. Was it just self-loathing or was that part of the cover? The idea that Peter Parker couldn't be Spider-Man because Spider-Man would hate Peter Parker for selling all those \"incriminating\" pics to the Daily Bugle? Was that really any more outlandish than Bruce Wayne's whole dimwitted playboy act?\n\nThere wasn't nearly as much public information about Parker as there was about the web-slinger. She came across a blurb about Midtown High's science fair winners on a slow news day, but there wasn't a photo. Then she found the article about Ben Parker's murder in Queens. How he was survived by his loving wife May and nephew Peter. How the burglar who'd shot him had been apprehended by Spider-Man in his first act of crime-fighting -- the web-head had been a TV entertainer until the elder Parker was shot.\n\nIt all fit the profile.\n\nShe hadn't been sure until she found the picture of Peter at his high school graduation. Jameson had been the commencement speaker, which is the only reason she could imagine why the ceremony actually made the paper. Parker was featured for his unprecedented academic achievement at Midtown High. The dark brown hair... The muddy hazel eyes... That sloppy smile... As grainy and unfocused as the photo was, she knew it was him. \n\nAfter that, she tried to keep tabs on Spider-Man. Especially after her whole world became keeping track of meta-human activity. But by then it was less of a curiosity thing and more of a job. She hit most of the highlights: When he switched to the black costume... That strange period when he partnered up with the Scarlet Spider before changing costumes completely... Joining the Avengers... And of course, the day he revealed his identity in public to support of the Superhuman Registration Act. \n\nPeter Parker was Spider-Man. Barbara had to feign shock at the news with the rest of the world, but she'd known for years. Then about a month after the press conference, she woke up one morning and realized she no longer remembered who Spider-Man was, and for a woman with a photographic memory, that didn't do at all...\n\n*\n\nThe observation deck at the top of the Woolworth Building had been closed since 1945, but in a town filled with costumed adventurers that defied gravity, it still managed to host the occasional visitor. It had long been one of Spider-Man's favorite places to stop for a bit of peace and quiet and a chance to think when he found himself in downtown Manhattan with a dilemma.\n\nThere's no way Oracle can know the truth, Spider-Man concluded from his shady perch under the tower's Neo-Gothic pier. Sure, Peter had played a little too fast and loose with the secret identity thing in the past -- like that time he let Tony Stark talk him into unmasking on national television during that whole brouhaha over the SHRA -- but Spidey found a way to fix that. Or at least Doctor Strange had. Peter wasn't clear on all the details, but Strange had done him the epic favor of getting the world to forget that Peter Parker was Spider-Man. \n\nHe heard that kind of thing was frowned upon by certain members of the Justice League, but it's not like those guys could really understand. It's not like they actually had to deal with any of that Civil War nonsense. Congress had gone out of its way to ensure that the Registration Act didn't affect the pre-existing Justice League Charter, which is why S.H.I.E.L.D. hadn't invaded Metropolis or Gotham City. Guys like Batman and Superman got to sit on the sidelines while New York was tearing itself apart, free to feel all high and mighty about things like mind-wipes. How many Justice Leaguer's could honestly say they watched the woman who raised them gunned down right in front of their eyes? Peter thanked God every day that Aunt May had survived the hit the Kingpin of Crime had ordered on his family, and he thanked Stephen Strange that his secret was safe again.\n\nAfter the good doctor had pulled that rabbit out of whatever magic hat, Mary Jane was the only other person on the planet who knew Peter Parker was Spider-Man. He decided not to tell May again. She'd spent enough of her life worrying about him. Eventually, he let a handful of people in on his secret: the Fantastic Four, some of the Avengers, but that was it. Hell, he hadn't even told the Black Cat -- not that she displayed the least bit of interest in anything under the top half of his costume.\n\n\"There are only so many people who know who I am,\" he said, thinking out loud but knowing Oracle was probably listening. \"Johnny? Is that you? Is this all some ridiculous practical joke, Storm? If so, you got me good...\"\n\n\"I'm not the Human Torch,\" Oracle sighed.\n\n\"Mr. Fantastic?\"\n\n\"No.\"\n\n\"An artificial intelligence created by Mr. Fantastic to process information that somehow gained sentience and will inevitably attempt to destroy us all?\" he suggested.\n\n\"I'm only going to admit that I'm human because that sounds exactly like the type of ridiculous thing that would happen,\" Oracle told him.\n\n\"Are you Wolverine?\"\n\n\"Just stop,\" Oracle begged. \"You're embarrassing yourself.\"\n\n\"Um, Mockingbird?\" Spider-Man guessed. He heard that she and Hawkeye got up to this kind of kooky spy stuff in their free time.\n\n\"I'm not Bobbi Morse, either,\" Oracle said, \"but that gives me an idea...\"\n\n\"Bucky Cap?\"\n\n\"Drop it.\"\n\n\"Bobby Carr's mystery girlfriend?\"\n\n\"Now I don't even know what you're talking about,\" Oracle said. \"Do you want to hear my idea or... Wait. Do you mean Bobby Carr the actor? From One Last Kiss?\"\n\n\"In addition to the acting he moonlights as a bit of a tool,\" Spidey grumbled.\n\n\"Why would I be his 'mystery girlfriend'?\"\n\n\"I lead a very interesting life.\"\n\n\"I bet,\" Oracle muttered. \"Doesn't Spider-Woman get jealous?\"\n\n\"HA!\" he laughed. \"Now I know that you only think you know everything about me. I haven't met a Spider-Woman yet who doesn't kind of hate me. Except for Skrull-Jessica Drew, but that's a whole, weird sexy, evil alien empress thing I don't want to get into. I don't come out so good in that story...\"\n\n\"Probably for the best I don't hear it,\" Oracle agreed. \"Just like it's best you don't know who I am. But I swear you can trust me.\"\n\n\"And I'm supposed to just take your word for that?\" Spider-Man scoffed.\n\n\"Haven't you ever been in a situation where somebody didn't know you very well and you needed them to have a little faith?\" Oracle asked.\n\n\"None come to mind,\" he lied.\n\n\"We both know that's not true, Peter,\" Oracle said. \"I trusted you.\"\n\n\"So we've definitely met before,\" Spider-Man gathered. \"You're not just some stranger who stumbled onto my secret?\"\n\n\"Um, not necessarily...\"\n\n\"Oh, you can't go back on it now, Oracle,\" he teased. \"A few more slips like that and your friendly neighborhood Spider-Man's going to work it out. We are in the same friendly neighborhood, right?\"\n\n\"I'm not giving you anything else.\"\n\n\"Worth a shot,\" he sighed. \"What's this idea of yours?\"\n\n\"There's more than one Mockingbird,\" Oracle said. \"I need to check on something. Give me ten minutes, okay?\"\n\n\"Sure,\" Spider-Man agreed. But whoever Oracle was, they'd already signed off.\n\n*\n\n\"Fuck! Fuck! Fuck!\" Barbara muttered, shaking her hair out in frustration as soon as she killed the audio feed. She was better than this! She didn't make dumb mistakes! She couldn't afford to! But Bruce had been right about her lack of sleep. She'd been burning the candle at both ends for weeks and now she was slipping. \n\nShe was rusty. It'd been years since she'd played this kind of anonymity game as Oracle. The kind where she was working with someone she knew who didn't know her. She'd first tried it with Power Girl, but that was a disaster. Somehow she'd made it work with the Black Canary until she had no choice but to tell Dinah the truth. Ever since Huntress had broken into the old clocktower, Barbara'd been fairly upfront with her operatives about who she was. Had she gotten too used to working with people who knew who she was? Who she used to be? Had she become too trusting? Or had Peter Parker just picked the worst possible time to come back into her life?\n\nWhen this was all over, Barbara was going to have to seriously re-evaluate how she operated as Oracle, but right now, she needed to get through this mission. She found herself wondering if all the effort she'd taken to relearn the web-slinger's secret had been worth it...\n\nThat morning when she couldn't remember who Spider-Man was had been a strange one. Barbara had an eidetic memory. She could remember everything, but somehow not this? She remembered meeting Spider-Man in that warehouse by the pier after Killer Moth had perved out on her. They teamed up for a late night crime fighting patrol and she ended up taking him back to her place for the night. She could remember sleeping with him, but she couldn't remember his name. Or his face! And that was just... unsettling.\n\nShe checked her files, and everything she had on his identity was gone. Someone had hacked her system! Nobody could hack her system! She did a complete diagnostic to find only the Spider-Man data had been touched, and when she did a little more digging she discovered traces of Extremis coding. That meant StarkTech. Why had Tony Stark been in her system?\n\nSo, for the first time in her life, Spider-Man became a bit of an obsession for her. She decided to start over from scratch. She'd figured it out once, hadn't she? She could do it again. But no matter how hard she tried, the pieces didn't fit. A whole week of digging and she was just going in circles. There was something else going on here... maybe something supernatural. And if that was the case, Barbara had to ask herself: did she really need to know this badly?\n\nYes. She did. She'd fucked this guy. And Barbara Gordon didn't want to be the kind of woman who slept with a man without knowing his name.\n\nJust right then, she didn't have a lot of time for side projects. The Birds of Prey were in the middle of a move to Platinum Flats to stop a metahuman mafia, which meant she had to set up a new base of operations with a plausible corporate front for cover. There'd just been that disaster with Tabitha Brennan, the girl mobster with a giant robot that took out an entire city block in Metropolis... A disaster Superman had personally flown to Barbara's apartment to blame her for mishandling. But even while dealing with all of this, the Spider-Man mystery still weighed on her mind...\n\nSo Oracle called in some favors and got three different detectives working on different pieces of the puzzle. Renee Montoya, the new Question worked Spider-Man's connection to the Daily Bugle. Detective Chimp mapped out all of the web-head's reported sightings in an attempt to pinpoint his most likely base of operations. But it was probably having J'onn J'onzz probe the psychological profiles of the wall-crawler and his enemies that tipped things in her favor. Whatever was working against her puzzling this out was probably something akin to a psychic blind spot meant to baffle the mind, and if anyone had a shot of breaking through, it was the telepathic Manhunter from Mars.\n\nAfter that, it was a matter of uploading the three different dossiers on three separate servers and running the data through an algorithm that dumpd the relevant information onto an independent processor. Well, it should have been a simple matter, but somehow, executing the program fried all four systems. Ten thousand dollars worth of equipment crapped out on her in three seconds time.\n\nIn Barbara's only bit of luck, she'd been able to retrieve 48 kilobytes of data from that last server. Part of the program had been designed to generate doctored images of the top five likely candidates. And that single jpeg she recovered was a computer generated image of Peter Parker as Spider-Man.\n\nAnd just like that it all came rushing back. Everything. The brown hair. The hazel eyes. The sloppy smile.\n\nShe was able to recreate her old Spider-Man profile entirely from memory. She even dug a little deeper into Peter's personal life this time around. The first time, she hadn't wanted to risk hacking the S.H.I.E.L.D. firewall to get the redacted files on his parents, Richard and Mary Parker, but they proved fascinating reading. And his college transcripts and attached aptitude charts were astounding. She'd briefly considered passing them on to Bruce. WayneTech was always looking for qualified candidates, but then she thought that would have only complicated things... And she had clearly been right, because now she wished she'd just left well enough alone."
    ],
    "authorname": "littleblackduck",
    "tags": [
        "spider-man",
        "oracle",
        "peter parker",
        "barbara gordon",
        "superhero",
        "deadpool",
        "novel length",
        "sequel"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/when-spidey-met-oracle"
}