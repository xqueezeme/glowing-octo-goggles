{
    "title": "Blood and Snow: A Reylo Smut Story",
    "pages": [
        "Author's Note: \n\nThe story's timeline begins with a slight corruption of certain events in Episode VII, followed by an assumed window of several months between the events on Starkiller base and Rey's journey to find Luke, wherein this story takes place. The reader should be aware this story has multiple graphic depictions of rough but consensual sex, and some depictions of violence. \n\n*****\n\nPrologue: How things begin.\n\nShe jolts awake, startled, unsure where she is. She realizes that she is restrained, hand and foot in an interrogation chair and she tries the shackles briefly, vainly hoping that she might break free. Then she stops, because she realizes she is not alone in the room.\n\nA black clad figure is across the room, crouching like a beast ready to attack. It, perhaps he, watches her silently. A chill of fear passes through her to think how long she lay there, unconscious and observed by this black harbinger of death, this violator of her mind. Had it been able to see her dreams?\n\n\"Where am I?\" she asks, fearing the answer.\n\n\"You're my guest,\" says the electronically distorted voice from the beast's helmet.\n\n\"Where are the others?\"\n\n\"You mean the murderers, traitors, and thieves that you call friends?\" it asks, disdain audible even in its lifeless post-processed voice. \"You'll be relieved to hear that I have no idea.\"\n\nThere is a pause, lingering between them.\n\n\"You still want to kill me,\" it says, a shade of wonder, appreciation perhaps, in its tone.\n\n\"That happens when you're being hunted by a creature in a mask,\" she rejoins, embracing her anger.\n\nTo her surprise the figure stands, and raising its hands to the mask, unlatches it and pulls it free to reveal its face. She feels her heart catch in her throat at what she sees. What she has imagined was a face, no, not even a face, a visage, grizzled and scarred, showing explicitly the evil underneath it. But the face that is revealed, his face, is both young and beautiful. Unusual perhaps, but achingly beautiful. It disturbs her to feel her body respond to the sight, feeling a sudden rush of desire within her, mingling with her fear and anger. She is captivated for a moment, confused, then looks away.\n\nHe approaches her, coming to stand close, staring down at her calmly from his considerable height, and she conspicuously avoids his gaze.\n\n\"Tell me about the droid,\" he says.\n\nHer mind grabs onto this. The droid. A distraction. She begins to recite its specifications like a litany, a prayer for solace, but he interrupts her.\n\n\"-carrying a section of a navigational chart. And we have the rest, recovered from the archives of the Empire, but we need the last piece. And somehow you convinced it to show it to you,\" he pauses here, shifting his gaze to look down at her. \"You, a scavenger.\"\n\nYou want to make me feel tiny, thinks Rey, tiny, helpless, and worthless. But I will not let you cow me.\n\n\"You know that I can take whatever I want,\" he says, allowing his eyes to trail from her face down the length of her prone body and back, quickly but suggestively, his face hard.\n\nShe should be revolted at this, or frightened, but it nearly sends a shudder through her, her stomach tightening and her throat dry with desire. It brings thoughts unbidden to her mind that excite and horrify her.\n\nHe moves next to the chair and crouching down, brings his hand close to her head. She tenses, looking away, but she feels him push his way into her thoughts again, just as he had in the forest. Desperately, she pushes the lustful images aside, and puts all her efforts into stopping him, blocking him, but to no avail. She feels as though he is simply drawing back a curtain with his leather gloved hand, exposing her inmost thoughts.\n\n\"Why are you so lonely?\" he asks, and she feels as though her heart stopped. \"So afraid to leave. At night, desperate to sleep. You imagine an ocean. I see it. I see the island.\" He pauses, evidently displeased with what he has found. \"And Han Solo, you feel like he is the father you never had.\" There is a tone of disgust and bitterness in his voice now. \"He would have disappointed you.\"\n\n\"Get out of my head!\" she says, furious, wishing that she was capable of blocking him out.\n\n\"Why,\" he asks, reaching to grip both sides of the chair, looming over her and bringing his face close to hers, his eyes straying to her mouth. \"Is there some place else I should be?\"\n\nAnd she knows that he senses it, not just her fear or anger, but her desire and revulsion, and he is toying with her.\n\n\"You're a pig,\" she says with as much venom as she can muster.\n\nThen suddenly he is kissing her, his mouth pressed almost violently against hers. Startled for a moment she doesn't respond, then she bites down on his lower lip. He cries out and springs away. He is bleeding, and he brings his gloved hand to his mouth to touch the wound and then examines his finger tips.\n\n\"I know you've seen the map,\" he says, changing the subject violently, his voice cold again. \"It's in there. And now you'll give it to me.\"\n\nHe reaches into her mind again and she feels overwhelmed by an awareness of him. She struggles against him, but she can't keep him out. She swims in a pool of rage and fear, trying to keep afloat, while another dark emotion swims with her, beneath the surface. Goose bumps raise on her skin and she feels a knot tighten in her stomach as her heart rate accelerates.\n\n\"Don't be afraid,\" he says, \"I feel it too.\"\n\n\"I'm not going to give you anything,\" says Rey, and she doesn't mean just the map.\n\n\"We'll see,\" he says, and he doesn't mean just the map either.\n\nExtending his hand, he digs into her mind again, and mentally she casts about, as though trying to find traction to push him back. She feels herself sliding, giving way, until suddenly she catches a ledge, something to push from, and she begins to resist. He brings his hand closer to her face, trying to intensify his efforts, but it is no use, suddenly she is gaining ground, leaning towards him into the restraints. And then it is as if a door has opened, and it is she who is able to draw back the curtain of his mind. She finds great darkness and sadness there, rage and fear. The fear surprises her, she pursues it, tracks it to its source and lays her finger on it.\n\n\"You,\" she says. \"You're afraid. Afraid you'll never be as strong as Darth Vader!\"\n\nThe revelation seems to echo in the small space of the interrogation room, startling both of them, and he severs the connection, retreating from her mind and blocking her from his once again.\n\nShe falls back into the chair drained, a sense of wonder filling her. He storms out of room leaving her alone with her thoughts.\n\nThen she escapes.\n\nChapter 1: Undercurrents.\n\nWeeks later, in a rebel held star base she wakes, this time from a dream. The dream. The only one she has anymore. Her heart is beating wildly, a mix of fear and excitement running through her veins. She is disoriented for a moment sitting up on the bunk in a panic only to collapse back down when she recognizes her surroundings. She closes her eyes, attempting to slow her breath.\n\nIt's the same. The same dream. Not every night, but most, since escaping Starkiller base. First there is the fight in the woods. The old snow laden trees providing a surreally calm backdrop to their heated battle, the lightsabers casting an eerie glow as they slice through the air. He is pursuing her, easily beating back her attempts to defend. She is cold, terrified, and stumbling. Finn might be dead, and the idea makes her heart shrink in her chest, knowing she might be the next to fall before Kylo Ren's lightsaber.\n\nThen she is at the cliff, just a pace from the abyss, their sabers locked, and he offers to teach her about the Force. For a moment she imagines it, imagines him as her dark teacher by day, honing her mind, and possessing her by night, their bodies locked in voracious and sinister congress. She wrenches her mind free from this distraction; there is something else, something she is missing.\n\n\"The Force...\" she says, and she closes her eyes, shutting him out. She thinks that she can sense it. It is the darkness rolling out of him and into the woods, the energy in the trees, the snow, in her pounding heart. She can sense him again, the connection between them opening, and she pulls from him, bringing his darkness into her. Feeling his strength flow through her limbs, a terrible new knowledge possesses her and opening her eyes she launches a brutal assault. Stunned, he falls back under her attack, her fighting style now mirroring his own, saber spinning lightly and wildly in her hands.\n\nSoon he is on his back, defeated in the snow, dripping blood and sweat, looking up at her unbelievingly. The darkness in her is seductive, making her feel powerful and alive, and it calls for his death. She could kill him now, take vengeance and make him pay with his life for the one she has watched him take. He deserves it. Yes, he does, says the whisper of the darkness.\n\nBut something in her calls out, begs her to stop. Rey thinks of Leia, of how the General's face will crumple when she learns that she has lost not only a husband, but also her son. Rey waivers on the edge, undecided, vengeance and pity at war within her, when suddenly the ground opens up and decides for her, separating the two by a chasm.\n\nThere the dream shifts. The snow blurs into a great field of white, then fades to black, and in the darkness they are together: he her dark teacher and she his apprentice. This is always the same, though the rest varies as it unfolds. She cannot see in the darkness, but she can sense him as he approaches her and they embrace. She craves the feeling of his skin against hers, the taste of his mouth, and she rips at his clothes blindly. Sometimes he restrains her, gripping her hands behind her back, teasing her by not letting her touch him. Other times he is direct, undressing her as desperately as she him, coming to kneel before her and press his face between her legs, breathing in deeply the scent he finds there.\n\nIt always ends the same though. She is trapped underneath his body, her legs wrapped around him possessively as he drives himself into her at a rhythmic punishing pace. She feels the sensation building within her and as she tenses, he accelerates, pushing her more quickly towards the edge until she feels as though she is bursting into a million pieces and she rakes her fingernails viciously down his back. The pain she inflicts on him causes him to lose control and he goes with her over the falls, the last image of the dream being his face, contorted in ecstasy.\n\nSitting in her bunk, she shakes her head, as if she could clear the image from her mind. Her body is always blissful after this dream, light and relaxed, while in contrast her mind is a tempest of emotions: lust, revulsion, fear and anger all mixed together and colliding with one another. She leaves her bed to have a cold shower, and to get on with the distractions of the day.\n\nThey have found work for her repairing fighters, transports, and droid electronics, at least temporarily until she starts her search for Luke Skywalker. She has so many questions for him, some that she might be too ashamed to ask. It should be only a few more days until her departure, and she works tirelessly, hoping to finish the most complex of the items on her list before she leaves.\n\nIt feels good, to have camaraderie and a place in a larger entity. She has friends. She and Finn share most of their meals, and she occasionally gets to see General Organa, though Leia is very busy and often away on important missions. Rey has been getting to know Poe too, and she enjoys quietly observing his witty banter with Finn, like two sand pups tussling for sport.\n\nShe is working in the hangar, her body half submerged in the chassis of a transport ship. A JX9 droid has been assigned to her, and it passes her tools and supplies. A total sense of focus and stillness fills her mind as she does her work. She can see that the fuel control system is shorted, causing a resonance with the artificial grav system, which could cause weightlessness during heaving acceleration. She grins wryly at the thought, then shakes her head. It would be easy enough to fix.\n\n\"Jay, get me a-\" she begins, but her words stop short.\n\n\"What was that Miss Rey?\" asks the JX9.\n\nFrozen in place she doesn't respond, her face is a frightened mask. He is here. Kylo Ren is here. She can sense his presence, a dark and angry pull in her mind. Her eyes flick about as she assesses the feeling, initially unsure what to do. Then she springs to action; she has to warn Leia.\n\n\"Miss Rey?\" the droid is saying as she extracts herself from the underbelly of the ship and breaks into a dead sprint, leaving the confused droid behind without an answer.\n\nShe heads to the command center. She must give the alarm, though she doesn't know how to explain it. He would surely attack at any moment, the inhabitants of the base unaware of their impending doom. Fear speeds her feet.\n\nBursting into the command center she is relieved to find Leia there. Running to her, breathing heavily, Rey takes her by the shoulders and speaks.\n\n\"Kylo Ren,\" she says. \"Ben. He's here. He's at the base.\"\n\nLeia's initial look of alarm takes on as aspect of sadness.\n\n\"I know,\" she says. \"We took him captive.\"\n\nRey pants, trying to catch her breath, as she takes in this information. Her hands fall from Leia's shoulders slowly.\n\n\"How?\" asks Rey.\n\nLeia sighs, glancing back to the business Rey has interrupted. There is a small crowd for curious onlookers, commanders and squadron leaders. Rey blushes with embarrassment.\n\n\"It wasn't easy,\" says Leia heavily, \"and holding him may prove harder. How did you know?\" Leia asks gently, but with curiosity.\n\n\"I just knew,\" says Rey lamely, with helpless shrug.\n\nLeia nods with a somber understanding, and turns back to the others. \"We'll discuss this another time.\"\n\nAnd with that, Rey is dismissed.\n\nShe returns to work, but is unable to focus. At dinner Finn has news about the capture of Kylo Ren. Evidently he was caught in an ambush. They were able to disarm him and trap him in a heavily reinforced, sound insulated container, keeping him isolated from those he might influence with the Force. Evidently they have been planning it since Starkiller base, to use him as a bargaining chip against the First Order.\n\n\"What's wrong?\" asks Finn, seeing her face.\n\nRey shakes her head.\n\n\"I just think it's dangerous having him here.\"\n\nBut she doesn't elaborate.\n\n\"Rey,\" calls Kylo Ren, \"Rey...\"\n\nThe voice rips her from sleep in an instant. She reaches for the lightsaber in the dark and she springs from bed to defend herself, shocked and terrified to imagine that he has found his way into her room. But in the glow cast by the saber as it hums, she finds that she is alone.\n\nTroubled, she switches off the saber and uncertainly climbs back into bed. She does her meditation technique, imagining the ocean, vast and calm, so different from Jakku. Then her island, populated with lush fruit bearing plants and fresh water streams. This is how she has always soothed herself on the sleepless nights on Jakku, the place that will always feel like a waystation no matter how long she stays. Elusive sleep is about the descend upon her when she hears him again.\n\n\"Rey,\" he calls. \"Rey.\"\n\nThis time she realizes that it is not her ears that are hearing the call. She can still appreciate the quality of his voice, his natural voice, not the synthesized one, its tenor and tone. But it is her mind that receives the message, not her ears. He is speaking to her through the Force.\n\n\"Leave me alone,\" she says back, trying to send this message through the ether, unsure that he is hearing her. She can almost feel him smile darkly.\n\n\"Come to me,\" he says.\n\n\"No,\" she responds angrily. \"Leave me alone!\"\n\nThere is silence for a while, but she can still feel him, somewhere in the base, a dark and pulsing presence in the corner of her mind. She wishes she could rid herself of the sensation, but she cannot. Then he calls her name again.\n\n\"Stop,\" she says but he will not.\n\nHe keeps calling her name, on into the night. She can't sleep, and when she does manage to drift away for several moments, his voice invades her dreams and she dreams of him. The morning comes at last and she is exhausted.\n\nThe assault does not continue during the day, but she feels sluggish and isn't as quick as she usually is at diagnosing problems. She doesn't know if she should tell Leia what is happening, or anyone else for that matter. Somehow she feels embarrassed at the idea, that her own dark infatuation might be revealed in questioning his interest in her. And what is his interest in her, to turn her to the dark side? To make her his apprentice and lover? She shudders, unsure whether it is more fear or desire that moves her.\n\nAnd all through the day, he is there, at the back of her mind.\n\nThis night is the same, the insistence more forceful, and the following day worse, as she nearly wanders in a fog. Finn asks if she is alright, and she is evasive, saying she has been having trouble sleeping. He wants to accompany her to the medical station, but she insists that she just needs to go to bed and he desists.\n\nShe lays on her bunk in a stupor, and bone tired, falls asleep. If Kylo tries to call to her, she doesn't hear it. A warning klaxon might not have been able to wake her.\n\nAnd she has the dream.\n\nThis time the fight in the woods transitions to something different. When the darkness subsides Kylo is there, incarcerated in a small room, his feet chained to a point on the floor and his hands bound in shackles behind his back. He has been stripped of his rich dark garments and now wears a simple grey prisoner's jumpsuit, his long hair is loose and wild.\n\nShe approaches him with hesitance and he watches her sternly. A feeling that she should turn and run is hammering at the back of her mind, but her body is drawn forward one step at a time and she is unable to stop it. Then she is standing in front of him. He is so tall that she only comes up to his shoulder. Looking up at him she feels enraged, her heart freshly broken again thinking of Han's murder. She slaps him, tears brimming in her eyes. He receives the slap with a stoney glare.\n\n\"How could you?\" she says looking up at him.\n\n\"That's not your concern,\" he says with thinly veiled rage in his tone.\n\nShe raises her hand to slap him again, but her arm is arrested midair. She looks at her hand, seemingly frozen solid in the air, and then glares at him, knowing he is wielding the Force against her. Anger is plain on his face now.\n\nSuddenly her body is violently crushed against him, her head forced back to look up at him. He leans down to bring his face close to hers, his eyes scanning her face, his gaze lingering on her mouth before settling on her eyes.\n\n\"You disgust me,\" he says in a clipped angry voice. \"Your foolish naive idealism, your misplaced sense of honor and righteousness. It's revolting.\"\n\n\"Trust me,\" she bites back hotly, \"the feeling is mutual.\"\n\nThen he presses his mouth to hers with a furious hunger that she echoes. She feels his Force hold on her loosen and she brings her arms up around his neck, digging her fingers into his hair and taking fistfuls of it as she presses him to her and drinks him in. She yanks his hair cruelly and he makes a small sound of surprised pain, then in response bites down painfully on her lower lip and when he releases her she tastes her own blood. Placing her hands on his shoulders she pulls herself up him, climbing, and wraps her legs around his waist, locking her legs at the ankles around his bound arms.\n\nNow she is taller and she once again yanks his hair, pulling his head back this time so that she can kiss him from the more dominant position. Their kisses get wilder and more desperate as they continue.",
        "Then she releases him and slides down to place her feet on the floor. She takes a step back and looks at him. They are both flushed and breathing heavily.\n\n\"Get on your knees,\" she says.\n\nHe looks at her, panting, expectant. Slowly, he gets onto one knee, and then the other, and then he is kneeling before her, hands still bound behind his back.\n\nShe begins to remove her clothes, never taking her eyes off of him, as his gaze attentively follows her hands as they move about unfastening her garments. When she pulls the top of her garment off and her breasts are exposed, she feels herself flush deeply under his avid inspection. But she doesn't stop and soon she is fully undressed.\n\nShe approaches him once again, and leaning down over she grabs his head and presses his face to one of her breasts. His mouth quickly finds her nipple and the hot wet feel of his mouth on it pulls a sharp moan from her. He circles her nipple with the tip of his tongue before sucking gently on it and she gasps.\n\nThen she is pressing down on the top of his head, and complying he comes to sit on his feet as she presses his face between her legs. He inhales deeply and then he is kissing her thighs, teasing her as he slowly works his way to the middle. She is breathing wildly, her eyes pressed shut, every ounce of her focus on the slow trajectory of his mouth towards her most sensitive part. When he arrives she throws back her head with a cry as he delicately circles it with his tongue, then sucks gently. Her knees are weak with the pleasure of it, but she wants something more and suddenly she is ripping at his jump suit, pulling down the long single zipper on it, exposing first his chest and stomach, and finally, his undergarments which are tight with his erection.\n\nReaching into his underclothes she takes a firm grip of his hardness, and his eyes flutter closed for a second.\n\n\"You're a monster,\" she says, angry conflicted tears in her eyes.\n\n\"What does that make you?\" he rebuts, looking at her challengingly, her fingers still coiled around his erection.\n\n\"No better,\" she says as she straddles him as he sits on his feet, and aggressively presses herself down upon him. It's too quick, even despite how wet she already is, and the sensation is half pleasure, half pain. They both shudder and close their eyes, savoring the sensation in stillness for a moment.\n\nThen she begins to move, slowly at first, but with a gradually accelerating pace. She moves up and down, her thighs working to move her as she straddles him. The feeling of him inside of her, hard and delightful as she moves about him seems to awaken something in her. Her anger expands as she feels the tension growing within her body. She takes a fist of his hair at the back of his head and yanks backwards, his neck arching. Maintaining an increasingly unsteady rhythm she brings her mouth to his neck and bites him, hard. He flinches and she cannot see it, but his mouth twists into a cruel smile.\n\nShe can feel herself approaching the climax, and she moves her hand to stimulate herself as she continues to ride him, her other hand still tangled in his hair. Their eyes meet and the ferocity of his gaze at he stares at her with pain and hungry pleasure is the last ingredient that sends her hurtling over the edge.\n\n\"I hate you!\" she cries out as she comes, and the rest is lost in incoherent moans.\n\nHer climax triggers his and he tips his head back and mouths her name as he follows her into their mutual angsty oblivion, and the dream ends.\n\nA sensation of splendor is in her limbs and she wakes as though she is floating, before reality sets in and brings with it its leaden weight of guilt and anger. Staring up at the ceiling above her bunk she catches her breath, waiting for her heart rate to slow. This dream was even more intense than usual. And different. She wonders, and is afraid of why.\n\n\"Rey,\" says Kylo's disembodied voice in her mind. He only says her name, but something in the tone inspires a fear within her that they shared the dream, that he was there in it with her, not just some figment of her imagination.\n\nThough she has never swum in the ocean, she imagines that this is what it feels like to be thrown by a wave. Feelings of fear, horror, shame and desire all cascade within her, spinning her around and nearly crushing her. From Kylo she can sense a feeling of fear, smugness and loathing. This kindles anger within her. How dare he invade her mind in this way! Though she is far more hot with embarrassment than anything else.\n\nDespite the fact that it is several hours before the standard wake cycle, she gets dressed and goes for a run to try and clear her thoughts.\n\nChapter 2: Into the storm.\n\nThe next day she is working, the torment of Kylo's presence heavy upon her, but she presses on, working quickly and efficiently as if to disprove any effect on her. The rest she got the night before was surprisingly refreshing, and she feels energized. She carefully avoids thinking about how the carnal pleasures of the night may have contributed to her day.\n\nShe is just finishing replacing a hyperdrive in a midsize cargo vessel when she feels it. The sensation coming from Kylo has been one of sullen anger up until now, and it has just transformed into a sense of wrathful glee, anticipation even. Knowing no good can come of this, she wipes grease from her hands on her coveralls and starts moving towards command at a fast walk. When the klaxons begin to sound she breaks into a run.\n\nThere is a general sense of confusion in the halls as she runs towards command. A pit of fear begins to form in her stomach, because she can also feel Kylo coming nearer. Could he be loose? she wonders, fear gripping her at the thought. She turns the next corner, and the last thing she sees before losing consciousness is Kylo standing in grey prisoner's coveralls with a hand extended towards her.\n\nWaking slowly, unsure how much time has passed, she finds herself in the dimly lit confines of a small fighter ship. The controls at which Kylo is sitting and the stars of open space are the only lighting in the cabin. He faces away from her, motionless, looking out the viewscreen.\n\n\"You're awake,\" he says.\n\n\"Where are we?\" she asks.\n\n\"You're my guest,\" he responds, a hint of amusement in his otherwise dark tone.\n\nShe grits her teeth at this, and elects not to speak further. She is lying on the floor in the one small space for cargo on this ship. Her hands are bound behind her back and her ankles are bound together. Her left shoulder has fallen asleep from lying on it. But she sees that under her head he left a rolled up scrap of fabric. She stares at it uncertainly, gritting her teeth.\n\nTo relieve her shoulder, she rolls onto her stomach and from there wriggles her way to sitting up on her feet. She rotates the joint of her shoulder, bringing a painful and tingling sensation back to it. Testing the bonds on her wrists she finds they have been tied skillfully, but not so tight that she will lose sensation in her hands, something for which she is grateful.\n\nShe considers what she should do.\n\n\"You can't expect to go far with this ship,\" she says. \"It hasn't got enough fuel storage to travel for more than a day's time.\"\n\n\"That's accurate,\" he says, still not looking at her. \"But we don't need to go very far.\"\n\n\"Why?\"\n\nHe sits in silence for a moment, then turns to look at her. His face, his unusual beauty, hits her exactly as it did the first time she saw it. She feels powerlessness because she cannot restrain her desire for him, and it provokes her anger. She seethes at him.\n\n\"You still hate me,\" he says, staring at her openly.\n\nThe memory of the dream, and her acclamation of hatred right at the moment of her release, springs unbidden to her mind. She feels herself flush hot with embarrassment, but her anger remains. He turns away from her back to the control panel.\n\nWith her shoulder's sensation is restored, she sets about finding a more comfortable seated position, not an easy task with her bonds. Her legs bent she shifts to the side off her feet, and leans her other shoulder against a bulkhead. Unsure how to conceal her thoughts from him, she wants to think about a way to escape, but she worries he will simply pluck it from her mind as he did her island and her ocean. But not trying is as good as doing nothing. And if he is telling the truth that they don't have very far to go, this may be her only time to escape.\n\nFirst she uses her ocean meditation to restore her calm. She imagines the waves, the cool blue-green of them and the frosty white of their foam as they crash on the beach of her island. The sounds of the waves and the cries of strange birds fill her mind until her heartbeat begins to slow and steady.\n\nThen without opening her eyes she focuses on him. He is his usual sensation of black humor and smoldering rage, but threaded like veins of gold through rock is a feeling of excitement, anticipation. He too is trying to escape, and at this moment he imagines that his freedom is within his grasp. Reflexively, Rey feels a pang of compassion for him.\n\n\"Stop it,\" he says, turning his head slightly in her direction, but not actually looking at her. \"Your softness is disgusting, don't direct it at me.\"\n\n\"You would rather have my anger then?\" Rey snaps, the compassion evaporating instantly.\n\n\"Yes,\" he says flatly. \"Your anger makes you strong.\"\n\nThere is an extended silence between them.\n\nWhen it becomes apparent that he is going to remain silent, she directs her attention to the ship. It's a old discontinued model, a predecessor to a TIE fighter, and she has worked on some of them at the starbase. It has a limited hyperdrive, solartec nav and targeting system, and munitions for a variety of ranges. As she mentally reviews the specifications of the ship, she hits upon an idea. \n\nTrying to stay cool and collected she remembers that this ship has a flaw. This particular model has a coupling of some weapons and drive systems, which was discovered to cause overloading and feedback. In some cases it could cause the drive systems to fail when the weaponry was fired in certain combinations, leaving the ship a sitting duck for attack. If she can exploit the flaw to disable the ship's drives, someone from the Republic might have a chance to catch up with them. It's worth a try. She is going to assume that he knows she is planning something, she just has to hope he can't find out the specifics without her realizing.\n\nQuickly, she hops to her feet.\n\n\"Stay down,\" he says, his voice angry and imperious.\n\nShe takes a hop to cross the tiny space behind the pilot seat, moving towards the escape hatch. And she finds her body locked in place, Kylo imprisoning her with a Force hold.\n\n\"Subtlety is not your strong suit scavenger,\" he says turning to look at her.\n\nAs he looks away from the control panel, rather than attempting to fight him, she reaches out with the Force. Knowing the instrument panel by heart she finds the right buttons.\n\n\"What are you doing?\" he asks in an angry growl, sensing that he has fallen for her decoy, but it is too late. She flicks off the safeties and depresses the triggers to fire the ruinous combination of munitions.\n\nWhen the firing begins he releases his Force hold as he turns back to the instrument panel. She continues firing as long as she can, but she hits her head as she collapses and the firing stops. She holds her breath, waiting to see if she has succeeded, ignoring the pain in her head. The sound of the engines, a steady and soothing hum, slows and then stops. The sudden silence is deafening. Through her pain, she smiles.\n\n\"What did you DO?\" shouts Kylo again, louder and more furious than before.\n\nHe steps around the pilot's chair and drags her roughly to her feet. He grabs her face with one hand while holding the fabric of her coveralls at the shoulder with the other. He looks at her wildly as he repeats the question, but she can't hear it. The Republic stripped him of his personal garments when they took him prisoner, so he is not wearing his characteristic black leather gloves. This means that not only is this the first time that she has felt him touch her in a waking moment, but that it is his bare skin against hers for the first time as his fingers hold her face. She feels herself flush at the contact and hates herself for it.\n\n\"Answer me!\" he shouts.\n\nShe opens her mouth to speak when the console begins to emit a beeping noise and he sets her down quickly to inspect it, the movements of his body rigid with anger.\n\n\"Well, it looks like I won't have to kill you myself,\" he says acidly. \"We're either going to die on impact or succumb to the elements.\"\n\n\"Impact with what?\" asks Rey, frightened.\n\n\"Hoth,\" he says.\n\n\"Hoth,\" says Rey, focusing on the name. \"The ice planet? Wasn't there an old rebel base there?\"\n\nHe snorts derisively. \"Yes,\" he says. \"It's long abandoned.\"\n\n\"But we might be able to shelter there,\" she says. \"If we survive impact.\"\n\n\"If,\" he says icily, punching buttons angrily on the control panel. \"What did you do to the drives?\"\n\nWhen she is silent and he turns away from the controls to look at her sternly. She looks at him, but what she sees there makes her look away.\n\n\"I exploited a design flaw in this particular model,\" she says, refusing to meet his gaze. \"Firing both long and short range amunitions simultaneously can generate an escalating feedback loop that cross-couples with the engines and fuses the hydropoles.\"\n\nHe balls up his hand and with a shout viciously punches the paneling next to the control console, then in a surprising transition says cooly, \"So you can't fix it without new parts.\"\n\n\"Correct,\" she says hesitantly, afraid. \"But the attitude adjustment thrusters should still be operational. If we can locate the base we can aim for a nearby landing. There might be parts, or another reparable ship there.\"\n\nWith another yell he rises from the pilot's seat and proceeds to pound the paneling adjacent to the pilot's seat aggressively with bare fists until it is shattered and his knuckles run red. Rey doesn't move from where she stands with her bound ankles, trying to keep from shaking, feeling the waves of fury roll off him like heat from a fire. Eventually, the heat begins to subside to a smolder instead of a blaze, and he catches his breath as he examines his hands indifferently. Then he steps close to Rey, and taking hold of her chin with bloody fingers, brings his face close to hers.\n\n\"Do not give me any more trouble,\" he says in a low threatening tone. \"I will kill you without hesitation if you do anything like this again.\" He pauses for a moment, his gaze boring into hers. \"But, we will go and scavenge,\" he says the last word with emphatic distaste, \"if we survive the landing. And you will be predictable, and well behaved, or I will conclude you aren't worth the trouble. Do you understand, scavenger?\"\n\n\"I understand,\" she says, a smear of his blood on her cheek, and she believes him. There is no doubt in her mind that he will make good on his threat. But it will not stop her from escaping if she thinks she has a chance; a chance that she's willing to gamble her life on.\n\n\"Good,\" he says, and moves away to the console.\n\nThey have less than an hour to wait on their spiral descent, but that gives him time to locate the remains of the Rebel base on the ship's scanners, or at least what he thinks is the base. Working intently at the console, he plans a deorbiting trajectory that should bring them near the base. Rey wishes that she could see his work, but knows not to interfere.\n\nWhen he is done he stands from the console, and produces a knife. Reys heart stops as he approaches her. But he kneels before her, his eyes locked on her face and she swallows hard, looking away as he cuts the binding on her ankles, then stands to free her wrists. She rubs and rotates her wrists and ankles where the ties held her.\n\nHe hands her a crash suit, which looks like a filmy jumpsuit with a hood, but will inflate and form a giant nearly indestructible bubble around her, hopefully enabling her to survive the landing. He puts one on as well and returns to the pilot's chair to make final adjustments as they burn through the atmosphere.\n\n\"How are we going to get to the base?\" she asks.\n\n\"We'll walk,\" he says, not looking away from the controls.\n\n\"No, how will we navigate,\" she says. \"In all that snow?\"\n\n\"I have the coordinates,\" he says, and holds up a small nav device. \"This will store the location of the base and our relative position from the ship's computer just before impact. Which is,\" he says, making a few final key strokes, \"in about two minutes.\"\n\nHe steps away from the console and pockets the device carefully. Instead of inflating his suit immediately, he moves towards her. She stands frozen, uncertain, and he raises his hand slowly to her face. He inspects where she hit her head when she fell delicately. Then he rubs her cheek where he left the smear of blood. Rey feels as though her blood is boiling in her veins, and she begins to tremble. Then he takes hold of her chin between his thumb and his fingers, and looking her in the eye firmly, he tips her head back and kisses her.\n\nRey feels the same confusing maelstrom of emotions she always does when it comes to Kylo Ren. He's a murderer and has threatened to kill her, and her hatred for him burns within her, unquenchable. But what she cannot control is the way her pulse accelerates when she feels his mouth against hers, and the loathing that floods her for it. She can see in her mind's eye the frozen hell of Hoth as it rises up to meet them at terminal velocity, knowing these may be her last moments alive, and yet her eyes flutter closed. She yields to her desire, wrapping her arms around him, kissing him back like she is taking long draughts of cool water, his strong hands in her hair and the smell of him encompassing her.\n\nA warning sound starts to blare from the instrument panel and he pulls away.\n\n\"Ten seconds until impact,\" he says, breaking away. \"Inflate your suit.\"\n\nThey step away from each other and then each is encapsulated suddenly as the suits inflate themselves into sturdy opaque bubbles, cocooning them for high impact. Impact comes and Rey feels as though she is a the center of a tornado, thrown and spun about circling wildly. She lets loose a scream into the chaos of noise and rending metal. \n\nIt only lasts a few seconds, but it feels like an eternity as she is spun end over end and bashed, a few of the bubble's pockets bursting and her shoulder taking a blow. When the whirlwind stops she lays still for a moment to allow the world to stop spinning and to make an assessment of her body. She can't see her shoulder well, but it seems like a flesh wound and not too deep from what she can tell of the pain. It will need a bandage, but other than that it seems she is unharmed. Impressive for a free-fall landing through atmosphere. Kylo must be a talented pilot, or very very lucky. Or both.\n\nShe depresses the deflate button on the suit, it sucks back to fit to her body as best as possible, the burst pockets causing loose and shredded bits to hang here and there. Rolling over she heaves the contents of her stomach into the snow. Wiping the back of her hand across her mouth, she looks around. She is free of the ship. The sun is up above the horizon. She is uncertain of the planet's cycle, but she guesses they have about four hours of daylight. There is a light snow falling and very little wind. But it is very cold, she can already feel it soaking through the suit. They need to get moving quickly.\n\nThe main wreckage of the ship isn't far from her, she's only been thrown about a hundred meters or so, but trudging through the deep snow on foot is difficult. Fortunately the struggle warms her some, but her hands are bitterly cold and she has to retract them into the sleeves of the suit to keep them sheltered.",
        "The ship has carved a deep furrow into the snow, but its heat from re-entry has melted much of it, so fortunately it is accessible and not buried or hidden. Pieces of the ship are scattered about, as it began to break up when it made the first bounce, then a second, before carving a continuous furrow.\n\n\"Kylo?\" she calls out, alarmed that she hasn't seen him yet. \"Kylo!\" This time she yells it with all her strength, but it feels as though the sound travels nowhere, completely absorbed by the snow. She feels a panic begin to rise up in her, and then she remembers. Closing her eyes, she reaches out and feels for him via that intangible connection she seems to have with him. Her breathing slows and her face relaxes as she leans into the Force, using it as an extension of herself as she searches for him. And she finds him. Unconscious it seems, but very much alive.\n\nShe trudges to one of the medium sized pieces of debris and finds him, buried beneath it. It is heavy and when she tries to lift it her feet sink into the snow. She tries again to no avail. Now she remembers the lightsaber, Anakin's lightsaber, lodged in the snow on Starkiller base. How she felt as it flew through the air and into her hand. Closing her eyes she extends herself in that intangible way into the wreckage and pulls at it, willing it to move. It moves, but only slightly. She tries again with the same result.\n\nRealizing she cannot do it alone, she reaches out to Kylo. Focusing on him she can feel his strength, the Force pulsing through him. She can feel the bond between the two of them, like a fierce thread of spider silk, linking them. As she did before on Starkiller base, she draws on him, though this time consciously, pulling his strength into her. She fills herself with it, feeling herself become more like him, her posture changing as her shoulders tense. She reaches out now with a hand to lift the wreckage and it moves, floating into the air. On a whim, she flings it aside violently, crushing it into the ground with violence, a vindictive smile crossing her lips.\n\nHe is lying on his back, many of his suit's pockets collapsed. She deflates the suit to examine him. He has a head injury, including a small gash which is bleeding profusely into the snow. She unzips her suit to reach inside and extracts the small knife that comes with the suit for cutting it away if need be, and uses it to cuts loose a strip of her coveralls to bind his head with. It will have to do for now. Hopefully he will wake soon. The nav device is still in his pocket, and functional.\n\nShe finds pieces of debris to bind to her feet to create make-shift snow shoes. A great stroke of luck is that the part of the ship containing the survival kit is near, and it's contents are only partially mangled. Using the tarp from this kit, she makes a sled and puts him on it, wrapped in the remains of the blanket, along with the other supplies she has found, and sets off in the direction the nav tells her. According to it, she is about nine kilometers from their destination. Which means she probably won't be able to reach it before nightfall, at least not towing a body almost twice her size. But she lacks alternatives.\n\nEven though the terrain is largely flat, it's tough going. Watching the chronometer on the nav and the rate at which the sun is settling towards the horizon, her heart grows cold. She has even less time than she thought. She has made it only three kilometers when the sun begins to set. Looking at the prone form on the tarp she considers abandoning him, a dark part of her says he would only deserve it. Then she wonders, would he have done the same to her? She knows the answer. She can imagine him, her limp body thrown across his shoulders as he trudges through the snow, the wind whipping his hair and frosting his breath. Why he would do such a thing, she cannot say, but she knows it with a certainty. Knowing what he is capable of, the monster that he is, the image makes her shudder, but it is also why she cannot leave him.\n\nShe keeps going, feeling her strength ebbing from her, struggling. It is full dark now, and her progress has slowed dramatically. She has only barely made it another half kilometer during twilight. Her body is beginning to collapse, and there is no shelter in sight.\n\nFalling to her knees next to the sled, she pulls the blanket back from his face. If she could not still feel his presence through the Force, she might fear he was dead. But he felt very much alive, strong even. She brings her hands to either side of his face, her fingers rigid with the cold, and presses into his mind, drawing back the curtain that separates his thoughts from hers.\n\n\"Kylo,\" she says in that silent way he had called her mind from sleep. \"Kylo, wake up. If you don't wake up, we're going to die.\"\n\nHe is unresponsive. She tries again, nothing.\n\nShe wants to cry, but she fears the tears will freeze on her face and she holds them in. She is afraid to shake him, because of the head injury. She shouts his name, and when he remains silent, tears rolling down her face, she presses her wet cheek against his and whispers in his ear.\n\n\"Please Ben, please,\" she whispers. \"I don't want to die. Not yet.\"\n\nShe hears him making a rumbling noise in his chest and at last he stirs. Relief rolls through her. She pulls away to look at his face and he blinks and looks back at her.\n\n\"We're 4.5 kilometers away from the base. I can't...\" her voice cracks and dies in her throat. She shoves the nav system at him.\n\nHe looks at it groggily, slowly becoming more alert as he reads it.\n\n\"You brought me all this way,\" he says flatly, then looks from the nav to her, but she has curled into a ball and is shivering. Without the exertion of pulling the sled she is getting even colder. \"Well, we aren't going to make it tonight.\"\n\n\"So we're going to die,\" she says flatly.\n\n\"I didn't say that,\" he says. \"We might, but we might not. You should have just made a shelter while there was still light out.\"\n\nShe shakes her head, shivering. \"I don't know about snow.\"\n\nHe gives her a look of pity and disdain that she cannot see. Standing unsteadily, he brings his hand to his head with a wince. He drops the blanket on top of her, and closes his eyes. She can feel him reaching deep into the Force, or perhaps the Force reaches into him, she is not sure, but she looks up to find that he is using it to move snow. In a few moments, he turns to her.\n\n\"Come on,\" he says and she stands on shaky legs.\n\nHe digs out a small light from the supplies, then wraps the remaining items in the tarp and carries them to a hole he has formed in the ground. The entrance is narrow, and there is a small space, a burrow of sorts, just big enough for the two of them to lay side by side, with only just enough headroom to sit up. She enters first, and he follows, then he packs the entrance closed except for a small hole for ventilation. He maneuvers the tarp around to cover the floor and she shifts to help.\n\n\"Take off your suit,\" he says, working at the zipper on his own.\n\nShe complies without comment, fumbling at the zipper in the cold, though being out of the wind already seems to be helping a little. A shiver convulses her as her sweaty inner layer is exposed to the air. He takes the suit from her and inflates both his and hers slightly, spreading them out on top of the tarp to act as insulation, upon which he lays the blanket. Sifting through the supplies he mutters to himself. He pulls two cans from the supplies and after examining them he pulls the tab on one.\n\n\"Here, take this,\" he says, handing to her. \"Its very hot. The can has a small exothermic reaction when opened, heating the water inside. Hold it until you think you can drink it without burning yourself, then drink it as quickly as possible.\n\nShe takes the can and almost drops it. The relative heat of it is so severe in comparison to her ice cold hands that it feels like it is burning even though it is reasonably insulated. Trying a sip she burns her tongue and elects to wait, cradling it against her chest. It's a simple broth, but she waits eagerly to drink it. He does the same in silence. Once it has cooled just enough she drinks it quickly, feeling the heat fill her stomach. It is a welcome sensation. He hands her a meal bar which she eats greedily.\n\n\"Why aren't you eating?\" she asks, as she licks the wrapper, eager for the smallest crumb remaining.\n\n\"I didn't expend as many calories,\" he says. \"I can wait. Take off your clothes.\"\n\nShe looks alarmed, but she is too tired to mount much of an argument.\n\n\"What?\" she asks weakly and shivers.\n\n\"Your clothes are wet,\" he says. \"You won't be able to warm up effectively in them. You need to take them off. All of them.\"\n\nHer face hardens distrustfully.\n\nClearly trying to hold his temper he tries again. \"The evaporative cooling will inhibit your ability to accumulate heat, you can appreciate that can't you? Don't argue. I'm trying to keep you alive.\" He finishes his statement through gritted teeth.\n\n\"Fine,\" she says testily, and begins to strip her clothing off until she is fully undressed, kneeling on the tarp next to him, her whole body covered in goose bumps. He gives her an irritated look and picks up her wadded garments, attempting to lay them flat on an open part of the tarp. Then he gestures for her to lie on the blanket. He has removed his impact suit, but not his garments which are dry. Now though he removes his coverall, so that he is only wearing an undershirt and shorts, and hands it to her.\n\n\"Put this on,\" he says. \"Then lie down on your side.\"\n\nShe complies, shivering.\n\nHe then folds the blanket around her, and moves close, slipping underneath the blanket as well. He presses himself against her back, wrapping an arm around her chest, sliding his fingers between her rib cage and the ground. Because he is slightly less cold than she, she gives up her sense of propriety and maneuvers herself as close to him as possible, even tucking her legs between his so she can warm her feet on his calves. He lets loose a grunt of displeasure at the contact from her icy toes, but makes no other comment. Any spark that might otherwise have been kindled at this close bodily contact is thoroughly doused by the overwhelming cold.\n\n\"Sleep,\" he tells her silently through their strange connection, but she is already succumbing to unconsciousness and exhaustion.\n\nAt one point during the night she wakes. Her back has warmed considerably due to her contact with Kylo, but her front and her face are still clammy and cold. Squirming around she rotates so that she is facing him, and without any shyness, presses her face into his neck, her legs straightened and trapped between his as she now wraps an arm around his ribs and presses her chest to his. He responds, whether asleep or awake she is unsure, by hugging her closely. Breathing in the scent of his skin, she lets out a small sleepy sigh of contentment as she falls back asleep.\n\nRey is woken sometime later by Kylo's movement. He has rolled over so that his back is to her, and she finds herself jealously pressed against it. While she is not particularly warm or comfortable, she no longer feels as though she may die of the cold and her whole body feels incredibly stiff. He has the light on and he is looking at the chronometer on the nav system.\n\n\"It's light out,\" he says, and he moves away from the makeshift bed.\n\nAt the ventilation hole, he pushes his arm through to widen the hole, then peers out. He nods.\n\n\"Time to go,\" he says. \"Dry your clothes as best you can on the blanket and get dressed.\"\n\nShe complies, rolling her damp clothes in the blanket and wringing it aggressively to try and coax out some of the moisture, as the garments have dried very little in the damp borough. He is silent as she passes him back his coverall, and she studiously ignores him as she dresses. If she turns to look at him, and finds him watching her, she knows she will blush and so she does not look. Soon she is dressed in her cold damp clothes, but putting her suit back on helps, and her restored body heat helps to fill the suit. He is suited up as well, and they come forth from their cave.\n\nThe snow has stopped falling and the sun is out. She feels nearly blinded by the brilliance of the light scattering on the snow, her eyes tearing. It's cold of course, but not as bad as yesterday. He starts slogging through the snow without further comment, the tarp of items slung across his back.\n\nAgain, fortunately, the terrain is mostly flat, and they make decent time, covering the remaining distance in less than four hours. But on their final approach a growing sense of dread consumes her. There's nothing there. And when they arrive, they are still standing in the midst of an empty plane, and there is still nothing there. They are lost.\n\n\"Is this it?\" she asks, hoping that they have stopped for some other reason.\n\nIn response Kylo slams the tarp and its contents to the snow, and let's out a roar of rage. He then throws the nav as far as he can and shouts again, falling to his knees he begins pounding his fists vainly in the snow. Rey gives him a harsh look, then runs after the nav, hoping it won't be lost in the snow, keeping her eyes fixed on the spot where it landed.\n\nAs Kylo continues his tantrum, Rey finds the nav easily. She breathes a sigh of relief as she picks it up. Looking back at Kylo for a moment, she sighs again, then turns her attention to the nav. According to it they are at their destination, it doesn't look like any kind of error or transposition. Walking back to Kylo, she examines the different menus on the device, but without a satellite system around the planet or the scanners of the ship, the device is pretty limited.\n\nAnd the ground gives way beneath her.\n\nShe lets out a scream, but the fall isn't far, only a few meters. A shaft of light pierces the darkness of the tunnel she has fallen into, lighting her fallen body like a jewel in a display case. Bits of snow and dust mingle in the shaft of sunlight. She stirs to look around, willing her eyes to adapt to the darkness.\n\n\"Are you injured?\" Kylo's voice calls down from the hole above her, his head visible in it, a dark stain against the bright sky.\n\n\"Yes,\" she says, attempting to stand and stopping, \"but its minor. An ankle sprain. I should be able to walk on it once it's splinted.\"\n\n\"Good,\" says Kylo, and drops in the tarp of supplies then leaps with deadly grace from the gap to land next to her.\n\nHer eyes are adjusting and she can see that they are in a long curving corridor, with other corridors branching off of it at intervals. Kylo takes a few paces in one direction, shining the light about, then the other.\n\n\"Well scavenger, we're in your world now. Which way?\"\n\n\"What do we need first?\" Rey asks, still sitting on the ground.\n\n\"Fuel for a fire, and a good place to start one, such as a moderately sized room and a way to vent the smoke. Then we need food, power, and a ship,\" he says, glancing around them. \"But I'm not feeling very optimistic about the last item.\"\n\n\"Let's try that way,\" she says, pointing down one of the ends of the corridor.\n\n\"Why that way?\"\n\n\"Well, it doesn't really matter which way first, but look at these conduits here,\" she points at the ceiling. \"We should be able to follow them to a power station of some kind. And we'll probably find our fuel for fire along the way.\"\n\n\"Very well,\" he says, and he offers her a hand.\n\nShe takes it suspiciously, and he helps her to her feet, but she can't put weight on her injured ankle.\n\n\"Take this,\" he says handing her the light. \"I'll carry you on my back.\"\n\nHe turns his back to her, and she awkwardly scrambles aboard, wrapping her legs about his waist, holding the light for him to see. He crouches down to pick up the tarp package with their existing supplies. It's tied into a sling and he loops it over her good leg above the knee, suspending it there, before returning that hand to support her. Then he starts walking.\n\nTo Rey, the journey is rather magical. She has been digging in hidden places for treasure her entire life, and here is a brand new vista of opportunities. Who knows what could be hidden here? Maybe even one of the original X-wings? If the stories are true, this base was cleared in a hurry when the Empire discovered its location and attacked, and there were probably untold numbers of exciting and useful items here. She could make a fortune if she were back on Jakku!\n\nThe thought of Jakku brings her up short, and she remembers where she is. This is not some exciting treasure hunt, it's a fight for survival at the mercy of a murderer who may either kill her or seduce her, and she is not even certain which would be worse. But in a way, she's always been fighting for survival, scrounging in the sand for enough parts to feed herself. In a way, this is no different.\n\nChapter 3: Slippery slopes.\n\nThey have been walking for about an hour when they find the hangar bay. Rey gasps with delight, unable to contain herself. Its high ceiling is curved like a cathedral, though collapses here and there have let in the snow. And there are some ships. Rey can hardly contain her excitement. There are signs that the prior occupants departed in a hurry, small movers abandoned in the middle of thoroughfares, tools and equipment strewn about, some of it smashed.\n\n\"This is excellent!\" she says. \"And there should be a small equipment locker and an office space for the hangar manager around here somewhere. We can use one of those for our sleeping space. There should be plenty of things to burn scattered about here. And if I can get one of those movers to work, we can easily widen our search radius. And you won't have to carry me.\"\n\n\"That will be a relief,\" he says drily, heading in the direction she indicates for the possible office.\n\nIt is there and it is small, but this is ideal for keeping a space warm. He sets her down.\n\n\"See if there are any additional medical supplies here,\" he says, setting down next to her what supplies they have. \"I'll go find fuel for a fire. Then we'll bind your ankle so you won't be useless.\"\n\nRey casts him a dark look, but he is already walking away.\n\nShe doesn't find any medical supplies, but there are numerous useful tools, things that will help her with repairs, and parts as well. There are small items that will make good kindling for a fire, papers mostly, and she assembles them in a central location. She is sorting and organizing them, creating a mental inventory, when Kylo returns with broken pieces of furniture.\n\n\"I found the barracks,\" he says. \"Once we've finished with you, we can return there to collect bedding.\"\n\nUsing the kindling she has collected, he soon has a moderately sized fire going. Watching the smoke curl up about the ceiling he comments on needing so set up a ventilation system.\n\n\"But that can wait,\" he says. \"It's time to deal with you.\"\n\nShe has been sitting as near as she dares to the fire, feeling it warm her, enjoying the sensation of the heat and the pleasure of the vibrant flames. Now she feels something in her stomach tighten as he moves close to her.\n\n\"Show me,\" he says, and she extends her leg so he can examine the twisted ankle.\n\nHe removes her boot and sock, his hands warm now on her cold skin. He probes and bends the wounded joint, and he nods seriously when she gasps in pain.\n\n\"I agree with your assessment,\" he says. \"I'll splint it, and you should be able to walk on it gingerly. Did you find any medical supplies?\"\n\nRey simply shakes her head.\n\nHe sighs.\n\n\"Hopefully we find something in the barracks,\" he says, digging through their limited kit. And he sets about splinting her ankle.\n\nTo have him tending her like this gives Rey an uneasy sensation. Less than a day ago he was threatening to take her life. She watches him warily, feeling something tightening in her stomach as his hands move, strong and efficient as they tie the bindings. Now that she is no longer fighting for her life against the elements, her body seems to waking anew to its desire for him. Trying to tamp it down, she looks away from him, staring at the ceiling and trying to think of something else.",
        "\"There,\" he says. \"Try standing.\"\n\nShe complies, and she finds that she is able to walk carefully, with a limp, but without pain.\n\n\"Alright, let's go to the barracks,\" he says, reaching for her.\n\nShe shies away from him.\n\n\"I can walk,\" she says defensively.\n\n\"I don't want to have to wait for your hobbling,\" he says. \"You can move around on your own once we're there.\"\n\nWithout waiting for an assent he bends down and picks her up in his arms, and she does not fight him. He holds her, to her horror, not on his back or over his shoulder like a sack of potatoes, which would have been immensely preferable, but like a bride, one arm behind her back and one in the crook of her knees, such that she is obliged to put an arm around his neck. She wants to scream and wriggle free from his grasp, horrified at the sensations building in her. Worse yet, she can sense a similar turmoil within him, and tempestuous mix of revulsion and lust. It frightens her immensely.\n\nThe barracks ultimately aren't very far, and they select some thin mattresses and the most intact bedding they can find. Nearby they also locate the mess hall, which has a decent supply of foods, most of them spoiled or disintegrated, but they find a container of the hardiest and least tasteful meal rations intact. This is a great relief because it means that they will be fed for the time being; they have plenty of snow to melt for water and an adequate though utterly boring supply of calories.\n\nAfter collecting these things back at the hangar bay and tending to the fire, they go in search of the medical station. Though they find it ransacked with only a handful of supplies remaining, and many of those expired, they do come away with a handful of useful medicines and bandages.\n\nBack in the hangar bay they have a simple meal and then set up sleeping arrangements. He says they will wait until morning to discuss the plan moving forward. Finally, at the end of a long day, Rey is ready to embrace sleep, this time warm, fed, and relatively safe. At least as safe as she can feel sleeping a few meters from Kylo Ren. She lays on her thin mattress, snuggled in a pile of musty blankets, a meter and a half from a warm fire, and falls gratefully asleep. \n\nAnd she has the dream.\n\nThe saber fight as usual, an eerie dance between falling snow and trees. The offer to be her teacher, and its dark implications. Then the transitions to their bodies twining together in the darkness, and the guilty orgiastic release. She wakes from it panting, the feeling of bliss working through her limbs and paralyzing them, the sight of Kylo's face, lost in ecstasy still visible in her mind's eye. Initially she doesn't remember where she is, then reality comes crashing back to her and she turns to see Kylo, across the fire, looking at her. She feels a massive surge of desire. In fear she rolls over, turning her back to him.\n\n\"You know that is not just your dream, don't you?\" he asks, but it's more a statement than a question.\n\n\"I don't know what you're talking about,\" she says, hearing how hollowly her lie rings.\n\nHe chuckles darkly. She feels her cheeks burning.\n\n\"You do know,\" he says.\n\n\"You're suggesting that we share our dreams?\" she asks with her back to him still.\n\n\"No, not our dreams. That dream. That particular dream.\"\n\nShe doesn't know what to say, but she feels as though she may start glowing in the dark from shame.\n\n\"Why?\" she says. \"Why would we share a dream? How is that possible?\"\n\n\"It happened when I interrogated you on Starkiller base,\" he says. \"When,\" he pauses, a kind of resentment entering his voice, \"when we entered each other's minds. Somehow a connection was forged through the Force.\"\n\n\"Is that why I can sense your presence?\"\n\n\"Yes. And I yours.\"\n\n\"How do we get rid of it?\" she asks, rolling over to look at him finally. She immediately regrets the decision, as looking at him only stokes the flames within her.\n\nHe looks at her, his eyes boring into her. \"I wish I knew.\"\n\nThey stare at each other, their eyes locked. She can feel the conflict within him, just as it is within her, and then he rises from his mat. Staring at him with wide-eyed horror, he walks around the fire and comes to her. He kneels down and lifts the blankets to join her on her mat. Unable to speak the words to make him leave, she rolls over on her side, presenting her back to him.\n\nAs on the first night, he wraps an arm around her chest, cupping his body around hers, but he does nothing else. Rey's heart begins to pound and she both longs for and dreads what may come next. Still he does nothing but hug her back tightly against his chest. But as her breathing accelerates, so does his. Sleep is as far from her as it has ever been, and yet she wishes she could escape to it, escape this moment so ripe in its stillness. But her body does not want to sleep, her body craves something more and she is powerless to quiet it. \n\nShe squeezes her eyes shut, willing herself to stillness, feeling that the moment is like a large boulder set precariously at the top of a hill. The slightest breeze will send it rolling down the slope to its inevitable conclusion. She can't let this happen. Not with him, not with this monster. But her body is betraying her, gaining centimeter by centimeter in the tug of war between her rational mind and her dark carnal longings. \n\nBefore she even realizes what she is doing, she is sliding her hand down and past her hip to grab his, pulling him against her, digging her fingers into his flesh. He is clad now in only a thin undershirt and shorts, and she can feel the heat of his body through the fabric beneath her hand. He makes a sharp intake of breath as she makes a slow grinding motion against him, and she can feel him begin to harden against her. Her eyes close as all her concentration is lost to the points of contact between them. \n\nHe lifts his head to bring his mouth to her neck. As his lips move against her salty skin, he releases his hug around her chest and reaches for her leg. He runs his fingers up the inside of her thigh, his thumb leading the way. She gasps as his hand finds the place where her legs meets and he begins make slow circles with his fingers over the fabric of her garments. Then he bites her, sinking his teeth into the muscles of her shoulder, hard, but not hard enough to break skin and she lets out a cry that is half pain and half pleasure. She rolls over and slaps him hard across the face and a struggle ensues. He grabs her wrists and pins them above her head as he rolls on top of her, forcing himself between her legs.\n\nShe is angry now, eyes flashing, breathing heavily.\n\n\"You're a monster,\" she says, spitting the words at him.\n\nIn response, all he does is lean forward over her and grind his hips against hers in one slow circle, his eyes boring into her face. Feeling him move against her, her eyes flutter closed and she arches her head back, the pleasure of his body against hers eroding her resolve, plunging her into darkness.\n\n\"Then what does that make you?\" he asks in condescending tone, mockingly repeating like a ritual words that they have never before shared in waking. Her eyes open and she looks at him hard, her face suddenly serious.\n\n\"No better,\" she says, just as she had in the dream, anger burning in her tone. \"I am no better than a bitch in heat.\"\n\nHe grinds against her again and she bites her lip to stifle the moan she wants to release.\n\n\"Why?\" he asks, his tone intent now, the mocking gone.\n\n\"Why?\" she asks, confused, uncertain what he wants.\n\n\"Why,\" he repeats back to her. \"Why are you no better than a bitch in heat?\"\n\nLooking into his face she searches for the answer, but it's in their strange connection that she finds it. Then she understands. He wants to hear her say it, a final humiliation, an admission of her guilt and his dominance over her.\n\n\"Why?\" he asks again, bringing his face close to hers, whispering the word in her ear before taking her earlobe in his teeth.\n\nShe cannot stifle the moan this time, and she bucks against him, wrapping her legs around his, pressing him tight against her with her legs. He brings his mouth close to hers, looking at her hungrily and whispers.\n\n\"Tell me why,\" he says softly, but it is a command, and she can no longer deny him.\n\n\"Because I hate you,\" she says, unable to take her eyes off his. \"And I hate myself for it, but I want you. I want you like an anim-\"\n\nHe cuts her off with a vicious and possessive kiss, and she matches his hunger with her own. Releasing her wrists, his hands move to rip at her garments, and hers are on his shirt and shorts, her fingers scrambling frantically. When he exposes her breasts he brings his mouth to one, drawing her nipple into his mouth and she cries out and arches her back, burying her fingers in his thick black hair, pressing herself against him. Then he is working at the rest of her garments with a mindless intensity, soon they are both of them naked, and he pauses kneeling between her legs.\n\nWatching her intently, he slides a finger inside of her as he takes hold of his erection, stroking it slowly. She writhes against his hand, wanting more, and he slides two fingers into her, slick and warm. But she is impatient and she tries to sit up. He denies her, using one hand to press her back down onto her back with a palm planted between her breasts, the fingers of this other hand still within her. She struggles, but he keeps his hold on her, distracting her with the movements of his other hand.\n\nShe writhes and gasps, and gives up her struggle.\n\n\"Please,\" she begs. \"Please...\"\n\n\"What do you want?\" he asks, releasing her to stroke himself again, not stopping the movements of the fingers he has inside of her, teasing her.\n\nShe bites her lip, not wanting to say it again, but her impatience has grown into a beast that she cannot control. His fingers make an articulated motion inside of her and she breaks.\n\n\"I want you inside of me,\" she says. \"Take me, please. Please.\"\n\nHe removes his hand readjusts himself, tilting his hips and pressing his erection into her impatiently, as though he was only moments from conceding himself. She cries out as he enters her, a surprised gasp and then a shudder. Nothing exists for her outside of this new sensation and it causes her body to spasm as it passes over her. He is on top of her now, and as he begins to thrust she is lost to anything but the hedonistic pleasure of his movements. She wraps her legs around his waist, letting him press deeper inside of her, her breasts quaking with the force of his movements. She moans and cries out as she feels the tension begin to build within her.\n\n\"Yes,\" she says. \"Yes, oh god, oh god. Oh yes.\"\n\nHe kisses her mouth but she cannot respond, she is so focused on the delicious torture she is experiencing. For how long it goes on she is uncertain, it could have been hours or seconds, but time is lost as her entire focus is absorbed by the periodic contractions of the their bodies moving against each other. Then she knows she is close and she is digging her fingernails into his back.\n\n\"Harder,\" she says, and it's a husky whisper. \"Harder.\"\n\nHe increases the violence of his thrusting, and her body is wracked with spasms. She arches against him and she rakes her nails cruelly down his back. The surprise of the pain causes him to lose control, and he cries out and reaches his own climax just as she is finishing hers. She opens her eyes just in time to see his face as he releases, his eyebrows drawn up and together, his lips parted.\n\nHe slumps on top of her now, the exhaustion of the day coming back to roost now that their sexual frenzy is no longer holding it at bay. They fall asleep, tangled together under the musty blankets, oblivious. \n\nChapter 4: Tensions and temptations. \n\nThere is no natural light in the little room, so she is uncertain what time it is when she wakes. It is the cold that wakes her, as she finds that Kylo has taken possession of most of the blankets as well as the fire naturally burning itself down. She looks at him, still asleep, his hair a wild halo around his head, and she feels desire tainted with horror and guilt. Thinking about what they have done, what she has done, with this monster, she has an urge to kill him in his sleep. And then more than anything else she wishes to bathe.\n\nHe stirs when she moves from the bed, but she refuses to look at him as she dresses, hobbled slightly by her ankle still. But she manages, including the crash suit for warmth. Taking a metal bucket they had found the day before, she still refuses to look at him directly as she addresses him.\n\n\"I'm going to get some snow for water,\" she says, and she leaves the room, shutting the door behind her.\n\nWhen she returns he is dressed and working on the fire. He has added fuel and rigged a grill of sorts so that she can set the bucket on top for melting the snow. He doesn't look up from his work as she enters. Through their strange connection she can feel the conflict in him, the coiled rage, the lust, and the disgust, simmering beneath the surface. He doesn't show it, his face cool and smooth, but no poker face will ever be able to hide either of them again.\n\nShe sets the bucket on the grill.\n\n\"We need to discuss a strategy,\" he says. \"We need to see what can be done with the remaining ships.\"\n\nShe shakes her head. \"It'll take too long. We should send out a general distress call.\"\n\n\"You only say that because you think your Republic friends are closer than the First Order. What if the First Order answers our call?\" he asks her, his tone abrupt.\n\n\"What are our other options, stay here indefinitely while I try to fix a ship? It might take months, longer, and I doubt we have the supplies to survive that long.\"\n\nWhat she doesn't say, but that they both wonder, is do they want to stay marooned together, alone, for so long, especially after what happened last night? Neither wants to have to answer that question, and so they carefully avoid touching on the topic.\n\n\"We do both,\" he says, standing, looking at her from across the fire. \"Distress call first, and we see if anyone listening. In the meantime, we find a ship to work on. And we should keep looking for supplies, proper cold weather gear especially. In fact, that should be the first priority.\"\n\nRey nods assent.\n\n\"I'm going to have a bath first,\" she says.\n\nHe snorts derisively. \"Are you serious?\"\n\n\"Yes,\" she says stonily.\n\n\"Fine,\" he says, throwing up his hands. \"Get on with it.\"\n\nShe wants to ask him to turn away, but she is too proud to admit her shyness so she says nothing as she strips off her clothes. She cleans herself with a rag that she dips into the bucket, supplemented with the small bar of soap in the kit from their crashed ship. As she is cleaning her thighs she hears him rise from his seat and is forced to look at him as he approaches her. He reaches out and seizes the wrist of her hand that is holding the rag.\n\n\"What is this?\" he asks angrily, furiously.\n\nWhen she doesn't answer he becomes further enraged.\n\n\"Answer me!\" he shouts, his nostrils flaring and his breathing uneven.\n\n\"It's blood,\" she says softly, looking at the floor, startled.\n\n\"What?\" he shouts again, his face inches from hers.\n\nNow she is angry too. She doesn't understand why she is being punished.\n\n\"It's blood! Alright? My blood!\" She shouts it back into his face, her eyes wild and glistening.\n\nHe struggles visibly to get a hold of himself, his eyes flickering over her face and his jaw clenching and unclenching rapidly.\n\n\"Did I...\" he trails off, voice leaden, \"hurt you?\"\n\n\"You're hurting me now,\" she says scathingly and she tugs at her hand in his grasp.\n\nHe loosens his grip and she pulls away her hand and the offending rag. She steps away from him with a glare.\n\n\"Was that...\" he trails off, but she understands the question and to hide her blush she turns away from him, continuing her ablutions.\n\n\"That's not your concern,\" she says as steadily as she can, but she feels the tears welling up in her eyes, and there is a small catch in her voice. She knows he can sense her pain, just as she can feel his growing confusion and anger, but she refuses to let him see her face.\n\nShe can tell that she has wounded him, which she marvels at, but then he storms out, aggressively slamming the door behind him, and she hears crashing noises ensue from the hangar bay beyond. Tears roll down her cheeks silently and she covers her face with her hands. She lets loose a single sob, then she wipes her tears on the back of her hands, and she finishes her washing. By the time she has dressed she feels that his anger has subsided to the usual subterranean simmer and she goes to find him.\n\nOn their hunt through the base they find many useful things. One of them is a portable heater, so they can stop burning things for heat in their sleeping quarters once they find a power supply for it. From the mess hall they acquire cooking implements, including some large pots and a storage jug for water.\n\nIt is clear that some looters have been through the base before over the years, but this has more effect on their transportation options than anything else. Most of the ships remaining are in very poor condition. After examining the various ships, Rey selects two that she thinks are good alternatives because of their ordinariness. It will be easiest to find spare parts for such common models.\n\n\"In fact, we may be able to salvage some parts for them from the ship we crashed,\" says Rey, buried in an instrument panel in the cockpit.\n\n\"Sooner is better with respect to that,\" Kylo replies. \"The wreckage may already be buried in the snow.\"\n\n\"So we need to find the cold weather gear,\" says Rey.\n\n\"Correct,\" says Kylo.\n\nBy the end of the day they have mapped out much of the base, at least the parts that haven't been made inaccessible by tunnel collapses. The last area they find appears to be quarters for high ranking officials, though they are hardly luxurious.\n\nKylo freezes as he goes through a drawer while hunting for warm items. He holds in his hands a pair of white leather gloves, lined with fur. Rey is digging through a closet in another room and has found a coat, and she enters holding it victoriously. When she sees Kylo's face, she stops.\n\n\"What is it?\" she asks, coming to see what he is holding.\n\n\"I think this was my mother's room,\" he says, looking at the gloves, their small delicate fingers spread across his wide palms. \"They're the right size, and they're her taste.\"\n\n\"She was here?\" Rey asks.\n\n\"Yes,\" he says, and he extends them to her. \"Take them.\"\n\nShe hesitates, looking at him, then the gloves, ultimately taking them and shoving her hands into them greedily. Holding a hand up to examine the gloves, she grins with delight.\n\n\"She has good taste,\" Rey says.\n\n\"In some things,\" responds Kylo.\n\nThe oblique reference to Han is not lost on Rey. Her smile is replaced by a hard mask, her anger flaring.\n\n\"Here,\" she says coldly, thrusting the coat at him. \"I think you'll be able to fit into it.\"\n\nIt is snug over the crash suit, but it should fit alright without it. They find a motley handful of other items, mismatched gloves and hats, and at last a second coat, too large for Rey, but close enough under the circumstances. Ultimately, they find what they need to venture out into the cold, though they look absurd in their ill-fitting eclectic attire. Given the late hour of the day, they decide to set out first thing in the morning for their salvage run, weather permitting.\n\nRey is still stewing over Kylo's reference to Han as they arrange their sleeping quarters to accommodate their new items. The greatest boon is a battery that has survived the long winter and manages to hold some charge from a solar panel that they have used to soak up the plentiful sunlight. It is running the heater, which is warming the room more effectively than the fire, but it does not provide the same comforting light. Fortuitously they also have a stash of emergency candles which they have lit for that purpose. Looking at the room, flickering with the dim light, warm now, she thinks bitterly that it is almost romantic, and how utterly wasted it is.",
        "She cannot distract her mind from the image of Han, Kylo's red saber protruding from his back as he stands on the catwalk in the thermal oscillator. How Han, the moment before he falls, he caresses the cheek of his killer and then is lost. Rey's fury and anguish are kindled, but she remains silent, composing her face into a hard and neutral mask. But the raw emotions only feed on themselves and grow in their containment.\n\nWhen they have finished their tasteless nutrient dense dinner, Kylo sighs testily.\n\n\"What is it?\" he asks in an irritable tone. \"You're starting to wear on my nerves.\"\n\n\"I didn't say anything,\" Rey says, not looking at him.\n\n\"You don't have to say anything,\" he says, arching an eyebrow.\n\n\"Maybe I don't want to talk about it,\" she says, still avoiding his eye.\n\nThere is a silence between them.\n\n\"You don't know what he was like,\" says Kylo. \"You have this naive idealized picture of him in your head.\"\n\n\"I said I don't want to talk about it,\" shouts Rey, springing to her feet. \"And stay out of my head!\"\n\n\"I wish I could!\" shouts Kylo in a violent outburst, standing as well. \"But I can't! You're in here now,\" he says, pointing an index finger to his temple. \"I can feel you. Every little twinge of angst, and moment of self pity, every soft and pathetic emotion. It would be easier to kill you!\"\n\nAs he speaks her moves close to her, towering over her.\n\n\"Then why don't you?\" Rey says, her breathing rapid, remembering his threat, but holding her ground defiantly, fists clenched at her sides and fortified by her anger.\n\n\"Because we're marooned on a forsaken ice moon in an abandoned system, and you're the only ship mechanic available at the moment!\" he says, his words escalating in volume until they finish in a roar, his face painfully close to hers as he shouts.\n\n\"Really?\" Rey responds all hot anger and rebellion. \"Is that the reason?\"\n\nWhen she says this, she feels her heart begin to accelerate. Without thinking first, she has referenced last night and all that it represents. There is a shift in the atmosphere of the room, and she feels a twist in her stomach, revulsion and desire mixing together in a potent cocktail. She immediately regrets her words, wishing she could pull them back and keep things simple, just anger.\n\nDespite herself she is suddenly very focused on his physical proximity, his black hair wild, looking every bit like a lion's mane. Glaring up at him she tries to focus on her anger and muster the will to resist him, to want to resist him. Loathing, slick like oil, spills over her, and she imagines it coating her skin and soaking into her bones. Loathing for him, for herself, for what it is that is happening between them, and for her inability to stop it. He is like a fire now, sending of waves of anger and lust, and she feels herself being bathed in the emotional radiation.\n\n\"Perhaps there is more than one reason,\" he says, bringing his hand to grip the v of her jaw as he did on the ship.\n\n\"Why did you take me?\" she asks, suddenly surprised that she has not asked before.\n\nA look of doubt crosses his face, his stern expression lost for a moment and his anger seems to soften.\n\n\"I,\" he starts and hesitates, \"I can't say.\"\n\n\"Can't, or won't?\" asks Rey, the edge creeping back into her voice.\n\n\"Take your pick,\" he says, his eyes focusing now on her mouth, casting aside the conversation.\n\nBringing his mouth close to hers, he brushes her lips, but does not kiss her. She feels like her whole body has been drawn taut like a string, and like an instrument she waits for the stroke of the bow. When he does it again, she feels like she will go crazy, but the only resistance she can muster right now is inaction, and she looks back at him, feeling a blush spread across her cheeks.\n\n\"Do you know what I wanted to do to you?\" he whispers in her ear, his mouth close to her skin. \"When I first had you in that interrogation chair?\"\n\nShe shudders as a wave of heat moves through her body, and she feels her nipples harden. Her eyes close involuntarily.\n\n\"There you were, vulnerable, trapped, entirely at my disposal,\" he continues, his free hand beginning to caress her waist, her hips. \"I could have done anything I wanted. No one could have stopped me, no one would have dared.\" His hand moves to cup her breast through the fabric of her shirt. \"And what I wanted to do was get on my knees, and to bury my face between your legs.\"\n\nShe can feel herself getting wet at the thought of it. Despite herself, she reaches out to take hold of his hips and pull him against her, feeling his erection pressing against her belly. She can feel him smile against the skin of her neck as he caresses her with his lips.\n\n\"Maybe I should do that now,\" he whispers.\n\nHe moves his hand from her face to the back of her head and takes a large fistful of hair, pulling her head back to look up directly into his face. It hurts a little, but in way that only excites her further and she opens her eyes wide to look at him.\n\n\"Would you like that?\" he asks, his eyes flickering about her face, looking from her eyes to her mouth and back.\n\nHer breathing has become heavy and uneven. She imagines his face, his eerily beautiful face, pressed between her legs and she feels another shudder go through her. She can't speak. He brings his mouth to her jawline and gently bites the skin there, then begins to leave a slowly progressing trail of kisses towards her mouth. Her hands are on his back now, fingertips sinking into his muscles. He kisses the corner of her mouth, and suddenly she opens her eyes and looks at him with fire in her gaze. Taking large fistfuls of his hair in each hand she gives an aggressive yank.\n\n\"Get on your knees,\" she says, all fury and lust.\n\nHis expression is one of fierce hunger as he slowly comes to kneel before her, not taking his eyes from hers. Lifting her shirt, he presses his face to her taut stomach, then his fingers eagerly work at the fastening of her pants, and he pulls them down along with her undergarments. She is breathing unsteadily, her hands still buried in his hair, as she kicks away the fallen items. He presses his face into her, taking a deep breath, drinking in the scent of her, and she arches her head back, eyes closing for a moment.\n\nTheir eyes meet again as he runs his hand up her thigh, and feels the wetness between her legs. She lets out a moan, her eyelids fluttering as he slides two fingers into her. Then he is kissing her thighs, teasing her, working painfully slowly towards her most sensitive parts. When she feels his tongue find her clitoris, she cries out with pleasure and surprise, her whole self focused on the sensation. Then she is grinding her hips against his face, hands still gripping his hair, as his fingers work inside of her. With his other hand he her grips her exposed bottom forcefully, to keep her close. He pushes her to shift her weight to her good foot, then takes her injured leg and puts it over his shoulder, bent at the knee, her foot dangling down his back.\n\nShe feels the sensation building in her, buoying her up like a balloon. Everything is hot and wet, and the rhythmic sensation of his fingers is in counterpoint with the languid teasing of his tongue, making inexorable circles, round and round, coiling her like a spring. As she tenses, so does her grip on his hair, and as she nears the peak she can tell she is starting to hurt him, but she doesn't loosen her grasp. She is breathing rapidly, but silent like the calm before the storm, and then it comes over her and she cries out loudly, shouting incoherently. Her body is wracked with spasms and her standing leg buckles, but he is ready for it and catches her.\n\nLaying her down on the makeshift bed, he lies next to her, looking down into her face. She is torpid and still experiencing small aftershocks. He brings his hand to her face, and puts a finger in her mouth, so that she can taste herself. She opens her eyes and looks into his as she sucks gentely on his finger, her tongue tracing the shape of it curiously.\n\n\"Don't think I'm done with you yet,\" he says ominously, and it causes a knot of anticipation to twist in her stomach.\n\nHe stands and removes his clothes, tossing them carelessly aside and she watches him with pleasure, enjoying how his long muscles bunch and move. Then he attends to the remainder of her clothes, and she is like a limp ragdoll in his hands, heavy with pleasure. Once she is fully undressed he rolls her over onto her belly, and lifts her hips to a kneeling position, but with her chest still pressed into the bedding. He kneels behind her, looking at her exposed sex with an almost predatory gleam as he takes hold of his erection. She lifts herself up onto an elbow so that she can turn her head to look over her shoulder, and as they make eye contact he presses himself into her. Her eyes close and she moans.\n\nHe moves slowly at first, as she gets used to the size of him inside her. Gripping her hips in his hands, he moves the whole length of himself in and then almost all the way out, torturously slowly. She is digging her fingers into the bedding and making small gasps of tortured pleasure. He begins to re-enter with more force, still slowly pulling back, and then ultimately pounding himself home with almost punishing force, his hips hitting hard against her bottom. She moans loudly with each blow, the exquisite agony of it driving her mad. Slowly he increases his pace. She snakes a hand between her legs to stimulate herself, and as he accelerates she feels herself getting close again, tensing.\n\n\"Harder,\" she whispers, \"Oh please, oh god. Yes!\"\n\nHe is pounding her now, rapidly, and she feels all her body contracting, tensing, and the idea that it's him, that it's Kylo Ren inside of her, with all his beauty and evil, is the last push that brings her over the edge and she comes like an explosion, her face pressed into the blankets, muffling her cries. Then she sags, limp. But he keeps a hold of her hips, and he keeps going chasing his own climax. She is groggy and immobile, and the pleasure of the sensation and the slap of his body against hers as he becomes increasingly agitated causes her to make small animal sounds. He is close now, and then he finishes losing his rhythm at the end, letting out a sharp cry and slumping forward on top of her.\n\nThey are panting in unison, and then he lifts himself off of her and rolls onto his back next to her, as she comes to rest on her belly, her face turned to the side away from him. She is floating, relaxed in a bubble of fading ecstasy. But as her body calms and her breath becomes even, it dissipates and is gradually replaced by remorse. Regret. Recrimination. There must be something wrong with her that she wants a man that she despises to do these things to her. Not a nice man, not someone who she can trust, but a homicidal monster, someone beyond redemption.\n\n\"Will you stop that,\" Kylo says, his tone of annoyance dulled by the fruits of his exertion.\n\nShe rises from bed without a word, her face hard set. She dresses.\n\n\"I'm going for a walk,\" she says.\n\n\"On a wounded ankle? You can't get far enough away to dull the bond at all. It's a waste of effort.\"\n\n\"Shut up,\" she says, putting on her boots, wincing as she disturbs her ankle.\n\nShe stomps out of the room and slams the door, immediately regretting abusing her ankle to do so. She is being childish, and she knows it. But the chill air of the hangar bay soothes her. She limps to one of the ships they have selected for repair and she climbs inside. In the back of her mind, as she goes through her inspection of the ship, she can feel him. His emotions are calmer than usual, less angry, and he's tired, but it seems he hasn't fallen asleep yet. She wishes he would, so that she doesn't have to deal with him when she returns.\n\nSighing heavily, she shakes her head as she digs through the wiring of the ship's hyperdrive, mentally making more notes on what components she may need. Focusing on the ship soothes her, but she knows that she needs to rest for their trek tomorrow morning, so she gives up after about half an hour, and limps back to the room.\n\nTo her relief he is asleep, on his own mat. She contemplates him, lying on his back with his head turned to the side and one leg askew. He looks so young. Sad, and young. Looking at him she wants to cry, and she doesn't understand why. Tears form and roll down her face, and she wipes them away angrily with her sleeve. Removing her warm garments she makes order of her mussed bedding and lays down to sleep. This night she does not dream.\n\nChapter 5: On the edge of the abyss.\n\nThe next morning they make the trek out to the ship, this time he is pulling her on the sled to save her ankle. He would have gone by himself, but she wants to make sure that he didn't miss any of the items on her list. Plus there might be useful items she hasn't thought of. They make decent time, having found proper snowshoes for him. They use the navigation device to reverse their journey. While the ship is largely buried, fortunately there hasn't been a big storm and they are able to dig and find some of what they are looking for. Mostly they need any parts of the sort that go bad with time and cold: batteries and capacitors mainly. Much was destroyed in the crash, but they save what they can. As they are nearing the end of their task, the weather begins to take a turn for the worse.\n\n\"We need to get moving,\" says Kylo, looking around at the darkening sky.\n\n\"How much time do we have?\" asks Rey, looking at the horizon where it is darkest.\n\n\"None,\" he says. \"Abandon it. Now.\"\n\nShe complies and they load up the sled with their retrieved items.\n\n\"Should I walk for a while to lighten it?\" she asks as he pulls.\n\n\"No,\" he says, \"your ankle will only slow us down.\"\n\nSo she lies there on the sled as he trudges through the snow, watching as the sky becomes ever darker. A wind begins to blow, gently at first, then more aggressively. Small icy snowflakes begin to fall, whipped around by the wind, stinging bitterly any exposed flesh. Soon, the snow is falling in great heaping arm loads, the high winds whipping it sideways, visibility sinking to nothing, just a blank angry white.\n\nThey've come most of the way, but she can sense him struggling. His pace has slowed as the cold has ambushed them. Their gear is warm, but they are not prepared for this level of storm. She can feel a sense of alarm and anger growing in him, matched by her own. But what can she do? Wounded, trapped on the sled, she is a liability. She shudders in the cold, frustrated. Then she thinks about the saber fight in the snow, and how after the crash she drew strength from Kylo. Could the process not be reversed?\n\nShe lays back and closes her eyes, focusing on the strange intangible connection they share. He is tiring, not yet exhausted, but not far from it either. She tries to broaden the connection, open it further, like a channel. The sense of him becomes clearer, his emotions and physical exertion more distinct. A sense of irritation arises from him as he responds to her efforts, but then she is trying to pour her strength into him, trying to buoy him as he moves. Initially he seems ready to fight it, to resist her, and she remembers what it was like having so much of him within in her, how she felt as if she had in some way become him, his blood and anger flowing through her veins. He is probably disgusted by the lightness in her, but then he understands and stops resisting, and she feels him begin to draw upon her untapped strength. She can feel his pace steady, then increase as he begins to move forward through the snow. The sense of alarm dwindles.\n\nFinding their entrance is hard once they arrive. It has been covered over by snow again.\n\n\"We should have marked it with a flag,\" he says irritably, though not with his usual fury.\n\nShe is moving around, feeling for it.\n\n\"Don't fall in again and injure yourself further!\" he yells over the gale of the wind.\n\nShe breathes a sigh of relief when she finds the handle.\n\n\"I've got it!\" she shouts, and they pile everything into the entrance, frantic in the gale of ice and snow. He enters first then helps her down, she rests on his shoulders as she shuts the hatch behind her.\n\n\"We made it!\" says Rey as he sets her down, relief in her voice.\n\n\"Yes,\" he says, looking at her with an unreadable look, something almost a smile. He kisses her then, almost tenderly and she is taken by surprise. Then abruptly he picks up the items and walks away, leaving her limping behind. She frowns at his back, furrowing her brow, and follows.\n\nIn the hangar they assemble all of the parts and equipment they have found. It's a decent amount, and Rey is cautiously optimistic about the possibility of repairing one of the spacecraft. But first they begin work on setting up a distress call. For that they need more power. Solar ends up being the solution, though the small panel they are using to charge the battery for the heater isn't enough by itself. They find several more panels intact and once the storm clears, they are able to install two on the exterior with rough hewn scaffolding, setting them at an angle to prevent snow accumulation. There's no additional battery storage available, which means the signal will only be able to operate during the day and when the weather is good. But it's better than nothing, and they are able to get a signal running in the last rays of daylight.\n\n\"We'll have to go out each morning to clear the snow,\" says Rey, stepping away from the panels. \"But hopefully this will be enough to attract someone's attention.\"\n\n\"I would rather have a functional ship,\" says Kylo, with his typical brooding. \"Let's go.\"\n\nThey climb down through the access hatch and helps her down to accommodate her ankle. He turns to leave, and Rey follows, taking the satchel of tools under her arm. She is silent as they walk, looking at him for a moment debating her words.\n\n\"Where were you taking me?\" she asks. \"Or rather, where do you plan to take me if we do get a ship working?\"\n\n\"You're assuming they are the same destination,\" says Kylo, matter-of-factly.\n\nRey is surprised.\n\n\"You've changed your mind?\" she asks, puzzled, glancing at him as they walk.\n\nHe is moving at a slower gait now to accommodate her, and glances over at her in annoyance.\n\n\"You're too slow,\" he says, and he reaches for her. He takes the satchel over one shoulder and scoops her up in his arms, carrying her again as he had before, against his chest like a bride.\n\nShe knows he is avoiding her question, trying to distract her, but still it works. The proximity to him is intoxicating. She can feel her body responding almost immediately, the rush of blood and the tension beginning to coil in her like a serpent. Through the bond she can feel him begin to shift gears as well, active and predatory. It is a high, this feeling, a drug. It brings on a light sensation of dizziness. Unable to stop herself, she rests her head on his shoulder, her face close to his neck, and she can smell the salt of his skin. The scent of him makes her head swim.\n\n\"Why is this happening?\" she asks, almost to herself, but aloud.\n\n\"Don't be afraid of it,\" he says.\n\n\"How can I not be?\" she asks softly. \"You're dangerous. I should be afraid of you. I am afraid of you. You abducted and threatened to kill me. And you meant it. This is... sick.\"\n\nEven as she says these words, she feels her desire for him building. She is horrified at the perversity of her body, of her attraction, but she is powerless to stop it. She is already imagining him stripping off her clothes, and a small shudder passes through her.\n\n\"I'm powerful. Strong,\" he says. \"You're strong too, and it draws you to me. You could be so much more powerful if you would let me train you. Let me show you the power of the dark side.\"",
        "\"I don't want to know the dark side,\" she says, small radiant tears forming in her eyes. \"I don't-\"\n\nThey have arrived back at their temporary living quarters and he sets her down at the door, interrupting her. He drops the bag and grabs her face possessively, kissing her. Tears stream down her face as wraps her arms around him, pressing him to her. He pushes her up against the door, trapping her between it and his body as their mouths lock together in a hot wet kiss that holds all the promise of what is to come.\n\nAfter a moment he yanks the door open forcefully and ushers her inside, slamming the door behind him. He looks fierce and wild, and she feels both aroused and frightened at the sight of him. She has an impulse to try to run away, and he twitches a brief sardonic smile.\n\n\"You wouldn't get very far,\" he says in a growl, shifting his body weight subtly as though preparing to pounce. Goose bumps spring up on her skin.\n\n\"You're not good for me,\" she says, her cheeks damp with tears. \"This will only end in ruin.\"\n\n\"On the contrary,\" he says, approaching her now and towering over her. \"I'm trying to set you free.\"\n\nHe strips off his gloves and caresses her face, gently, affectionately even. Surprised at this tender gesture, and she blushes and turns her face away.\n\n\"And everything,\" he whispers into her exposed ear seductively, \"everything always ends in ruin.\"\n\nAs he says it he reaches up to wrap his fingers around her throat.\n\nIt frightens her and she tries to move away, but he grabs her upper arm with his other hand and keeps her close. His grip on her throat is firm, but not choking as he leans down to kiss her. She is angry at being frightened and bites his lower lip. He grunts and pulls his face away, but does not let go of her. He licks his lip and she can see that she has drawn blood.\n\n\"You are a savage little desert creature, scavenger,\" he says, his voice husky. \"But I suppose it's only fair, blood for blood.\"\n\nShe feels herself tremble at his words.\n\n\"My savage desert creature,\" he says, his voice low.\n\nThere is a heat to his voice, and in that moment she can see what he sees; the two of them bound together in darkness, all powerful, none in the galaxy more feared, savagely indulging themselves with their slain enemies at their feet. She knows this is what he wants, and this is where the path of yielding to him leads. A shiver of fear runs through her because she feels the temptation to embrace the darkness. It is seductive, and calling to her, just as he is. She knows then that she must escape him or she will suffer the fate that he has planned for her. It will only be a matter of time until resisting the darkness will become as impossible as resisting him.\n\n\"I will never be yours,\" she says fiercely, in defiance of him and this potential future.\n\n\"You will be tonight,\" he says with heat, and this time when he kisses her, forcefully and with ire, she can't help but respond in kind.\n\nThey strip off their cold weather gear in a frenzy. Grabbing his shoulders she pulls herself up to wrap her legs around his waist, her ankles hooked in the small of his back as he stands. He holds her, a hand on her back and the other on her backside, as she fondly and aggressively tangles her fingers in his hair, her elbows resting on his shoulders forcing his head back to kiss her. He moves to a wall and leans her back against it, leaning his weight into her. He grinds his hips against her and she arches her head back in response, savoring the sensation. When she exposes her throat he brings his mouth there and she gasps. She is lost to the intensity of the sensations of his mouth on her skin as he continues his grind.\n\nSoon, he becomes impatient and sets her down. His hands begin to undo her garments when she stops him.\n\n\"No,\" she says, grabbing at his wrists.\n\n\"What?\" he says, affronted.\n\n\"Stop,\" she says.\n\nHis eyes narrow as he searches her face, angry.\n\n\"Sit,\" she says, indicating his sleeping mat.\n\nHe hesitates for a moment, bristling at the command, then with suspicion, complies, moving to sit on the mat, watching her. She can feel his impatience, his need, and it sends a shiver down her spine in anticipation.\n\nStanding outside of arm's reach, she begins slowly to undress. First her shirt, then her undergarment, carelessly dropping them on the floor next to her. Once her breasts are bare, she runs her fingers over them, pinching her hardened nipples, then caressing her stomach with flattened palms, watching him. The look on his face sets her on fire, and she keeps going, feeling daring. She works the fastener of her pants and lets them drop to the ground. Running her fingers over her thighs, she brings a hand between her legs and touches herself over her underwear, her other hand gripping one of her breasts.\n\nShe is about to remove her underwear when his control is exhausted and he grabs her, pulling her down to mat with him, and rolling on top of her. His body weight pressing her into the mat is the entire world for her in that moment, all else is forgotten. She shudders as he kisses her, touches her. She wants him now, with a desperation and a hunger more intense that she has ever known.\n\n\"Take me,\" she says. \"Take me, please.\"\n\nHe allows himself a predacious smile as he disrobes. She sits up to caress his chest, running her tongue over his skin as he works on his garments which he discards with disdain. He pushes her back to the mat and pulls her underwear free. But instead of entering her, he straddles her and pins her hands above her head. She is puzzled and a pout forms on her lips.\n\n\"Ah, you think teasing doesn't go both ways?\" he asks bringing his face close to hers, his breath tickling her skin.\n\nWhen she tries to kiss him he moves away, just out of reach. Infuriated she begins to writhe in his grasp. When she cannot free her arms she plants her feet and thrusts with her hips trying to throw him off of her, but she cannot unseat him without risking her ankle. He brings both her wrists together and holds them in a single hand above her head, bringing the other to her breast where he rolls her nipple between his fingers. She arches her back into his hand, closing her eyes. When he stops, she begins to struggle again.\n\n\"Do you want something?\" he asks, leaning down to sink his teeth into her shoulder, making her cry out in both pain and pleasure.\n\n\"You know what I want,\" she says breathless, but stubborn. \"Do it.\"\n\nBut he won't let her up, and so she struggles further. Her whole body is flushed. Her eyes are bright and wild, her mouth a crimson red, and there is a hot blush across her cheeks. Finally she lets free a cry of frustration and bares her teeth as she slumps back, panting.\n\n\"My savage desert creature,\" he says darkly, but there is a hint of possessive pride in his voice. \"Stay,\" he says seriously, looking at her until she gives a nod of assent, then releases her hands, which she does not move.\n\nHe begins kissing a slow trail from her breasts downwards to her navel. She sucks in air between her teeth, making first low soft noises, their intensity increasing as he moves lower. He continues down her belly to her hip, and then her inner thigh. Her sounds become hungrier, and she is increasingly aware of the slowly closing distance between his mouth and the place where her legs meet.\n\nWhen he moves his wet kisses from one thigh to the other, passing over what is in between, she whimpers impatiently. Finally defying him, she moves her arms from above her head and sinks her fingers into the wild mane of his hair. She attempts to pull his face to the middle. She can feel his grin against her skin as he slips two fingers inside of her, and she arches her head back letting out a cry.\n\n\"Yes,\" she says, \"Oh please, yes.\"\n\nHe brings his mouth finally to her clitoris, and the hot wetness of it makes her freeze, tensing her body all over, and she feels as though time itself is standing still. Then she begins to moan, a wild lost sound as he runs his tongue over her, his fingers moving in tandem. She keeps one hand buried in his hair, and with the other hand grabs one of her breasts, squeezing it and rolling the nipple between her fingers. He stays there, feeling the tension build in her, increasing his intensity to match her, winding her like a spring.\n\nShe is completely lost in the sensation, and there is nothing beyond the articulations of his mouth and the stroking of his fingers. She lifts her head to look at him, this terrifying violent man who is capable of provoking such sensations in her, and she comes forcefully, wild incoherent cries escaping her as her body twitches like a marionette under his caresses. It is a long violent climax, and he does not let up until he is certain the last of it has been wrung from her.\n\nAs she lies limp on her back, he moves to kneel on her chest. Her eyes go wide when she understands what he wants.\n\n\"Open your mouth, savage,\" he says, taking hold of his erection, pressing it between her breasts.\n\nFor a moment she hesitates, then she parts her lips and takes him into her mouth, running her tongue over and around him. Her arms are pinned inside his legs, and he takes a hold of her hair, directing her movements now as he moves her mouth up and down on his erection. She is revolted and aroused, helpless as he slides himself in and out of her mouth. He goes deep then and she gags, sputtering. He grins darkly, but desists.\n\nShifting himself between her legs, he takes hold of his erection and thrusts inside of her aggressively. She lets out with a low throaty moan, wildly aroused but still partially immobilized from her last climax. He leans forward, and pressing his chest against hers, kisses her. She can smell herself on him and the slick movement of him inside her is an intense and delicious torture. She abandons herself to sensation, moaning into his kiss, thinking of him kneeling on top of her.\n\nThe feeling of being helplessly in his possession gives her a savage sense of arousal. As he continues, she begins to let out sharp cries of ecstasy, savoring each blow as he begins to pound her at a rapid and voracious pace. She wraps her legs around him so that with each thrust his pubic bone grinds against her clitoris, and she surprises them both by coming very quickly. It sneaks up on her almost, and then she feels as though she is exploding, her body moving spasmodically. She can hear herself crying his name, as though she is someone else, as she arches wildly underneath him, raking her nails cruelly down his back.\n\nWhen she goes limp he slows his pace, but he doesn't stop. She looks up at him, shuddering, but still hungry for him.\n\n\"More,\" she says, though she can hardly control her own lips to utter the words.\n\n\"Greedy,\" he says, but his says it with pleasure. \"Greedy and savage.\"\n\nHe sits up to come to a kneeling position, planting her feet on the mat on either side of him. Placing a hand on each of her knees, he uses them as leverage for his thrusts, closing his eyes momentarily. When he opens his eyes their gazes meet and she is at once exhilarated and embarrassed, but the pleasure of her body overwhelms any feeling of shame. Their eyes are locked while he thrusts, and she lets her gaze travel down to his torso, the well defined muscles of his stomach contracting as he moves rhythmically.\n\nRunning her fingers between her thighs she begins to stimulate herself, not taking her eyes off of him. His gaze travels over her body as he continues to move. It's not long before she is getting close again, and she feels as though every part of her body is tensing in anticipation. He can feel it and he begins to accelerate, her body quaking with every merciless impact. And then the dam bursts and she is shuddering again, crying out, feeling as though the orgasm is a tidal wave, leaving her tumbling through space.\n\nShe is limp again, twitching occasionally and breathing unevenly. After watching her face for a moment, paralyzed and completely vulnerable, he rolls her unresisting body over onto her belly. She says nothing, lost in a post-climactic haze. She knows then that there is nothing she won't let him do to her. \n\n\"I want one more from you,\" he says, spreading her legs into a v shape.\n\nShe lets out an incoherent moan that trails off sleepily, but when he puts two fingers inside of her she responds by grinding her hips into his hand.\n\n\"One more,\" he says again, with hungry intensity.\n\nWith a low moan, she struggles to turn her head and look at him over her shoulder. Their eyes are locked as he moves to lie on top of her and slides his erection inside of her. His body is stretched out on top of hers, his chest on her back. He slides each of his hands underneath her shoulders, his fingers reaching around to grip her, holding her in place as he moves his hips, sliding in and out of her, overwhelmed by the wetness of her and the feel of her small taught body underneath him.\n\nHer eyes are squeezed shut, and all she can focus on is the sensation of him, hard and filling, moving inside her. She presses her face into the bedding and moans, screams, calling his name and making incoherent statements. He buries his face in her hair and breathes deeply, forcing himself to keep a steady pace, wanting to draw out the sensation as long as possible. But the hunger has awakened inside of her again and she wants him to go faster, wants him to push her over the edge again.\n\n\"Harder,\" she whispers, \"harder.\"\n\n\"Glutton,\" he replies in a smug accusatory tone, defiantly maintaining his slow steady rhythm.\n\n\"Please,\" she says. \"Oh please, please.\"\n\nHe bites her ear and she cries out fiercely.\n\n\"I love it when you beg me,\" he says, heat in his voice as he whispers in her ear.\n\n\"Please,\" she says. \"Please!\"\n\nHe lifts himself onto his hands, arching his back and begins to make hard aggressive thrusts into her. She is digging her fingers into the bedding and letting loose wild cries at every impact. He looks at her, her lean muscular back, the way she arches the lower part of it to bring her hips meet him. And he feels himself gathering momentum. She snakes a hand underneath herself to reach between her legs. He holds on as long as he can, pounding her ruthlessly, and she comes again, her moans escaping into the bedding, long and wild. He feels her tight and contracting around him and he comes just after her, his brows knitting together in concentration, lips parted. She hears him let out a broken cry and then shuddering violently he mouths her name and collapses on top of her.\n\nShe is paralyzed, floating in the sensation of completeness that she feels, unable to respond even if the ceiling were to begin caving in. He rolls off of her and pulls the covers loose. Then rolling her onto her side, he pulls the covers over them and presses her back against him, cupping his body around hers. Rey lets out a soft sigh of satisfaction, and they fall asleep.\n\nChapter 6: Patterns.\n\nRey wakes in the morning to find Kylo's body still wrapped around hers, and before she is truly conscious, she lets out another sigh of contentment. Then, becoming more alert she blinks, a cloud passing over her features. A pang, a fear, remorse. They clutch at her heart. What is happening? What is she becoming? An overwhelming desire to weep comes over her. She feels trapped and she squeezes her eyes shut in pain.\n\nAfter a moment she smooths her face, a look of determination coming to it. If she is trapped, the only thing she can do is fix the ship. With her jaw set, she peels herself free of her lover's grasp, though her mind recoils at the thought of him as such. Her movement wakes him, but he says nothing and she goes about the business of melting water for breakfast and for bathing. They eat, clean themselves, and dress in silence. Rey is trying to focus all her mental energy on plans for the ship. She is uncertain how to interpret the subdued emotional chaos coming from Kylo, but tries not to think too hard on it.\n\nStill having exchanged no words they head out to the ships, Kylo carrying Rey's satchel of tools.\n\n\"Today will be more diagnostics,\" she says. \"I'll see if I can find anything that will eliminate one ship or the other. Can you use a Hensler phase driver?\"\n\n\"Yes,\" he says.\n\n\"Good,\" she says. \"Can you test the hydropoles and phase motivators in each ship?\" She looks at him fearfully, unsure how he will take direction from her, his hostage. But no outburst is forthcoming.\n\n\"Yes,\" he says succinctly, setting down the satchel and reaching in to extract the driver. He walks away without a glance, heading to the further ship with the tool. She watches him, befuddled and relieved.\n\nBy the end of the day, they choose the ship on which to concentrate. While both ships seemed quite promising, one possessed more extensive electrical wiring issues, which, while not insurmountable, would be time consuming to resolve. Because the two ships are of similar manufacture, the discarded one will act as a parts donor.\n\nWrapping up at the end of the day, Rey leaves the tools in the ship and climbs down gingerly. Her ankle, while improved, is still tender. As they begin to walk back to their quarters, Kylo reaches for her, and she flinches away. All afternoon she has been trying to figure out how to avoid ending up in bed with him again, and so her reaction is abrupt. She feels his anger flare immediately, the hot rage he always carries flaring brightly in his dark eyes. Then without a word he storms off ahead of her, leaving her to walk back slowly on her own.\n\nShe stops to watch him as he recedes into the distance and goes out of sight. Taking deep breaths of the cold air, she feels herself tremble. Fear, she feels so afraid. She longs for comfort, for someone to soothe her and tell her everything is going to be alright. She thinks of Leia, of how she longs to be embraced by her, or by Finn. She thinks of Finn and Poe, bantering loosely at the dining table in the canteen, and how it felt to be accepted by them. What she would give to be back with them, with the only friends she's ever known.\n\nWarmth. What she wants is warmth. She shivers in the cold abandoned hangar. There is physical warmth waiting for her back in the sleeping quarters, and a dark sort of comfort. But warmth, human warmth? She shakes her head. Kylo is many things, and he has at moments displayed not just lust, but affection. But he has also abducted, hurt, and threatened her. And she has seen first hand the kind of violence he can commit against those he should be most bound to by love. She might fear his affection more than his anger, having seen how he responds to those that inspire it in him.\n\nSighing, she resumes her trek back to quarters, setting her jaw defiantly against her emotions. She has known loneliness most of her life. This is just another challenge she will have to overcome, and she is nothing if not resourceful and determined. And though she does not know it, or wish to admit it to herself, she would rather be here with Kylo than totally alone.\n\nHe is already eating when she arrives, and says nothing when she enters. The bright anger in him is burning down. But for the first night since they arrived, they settle in for the night on separate mats. Tucking into her blankets, Rey feels the urge to get up and go to him, but she resists. Lying on her side, her back to him, the heater between them as the fire was on the first night, she fights the urge to weep. She feels his irritation, probably at her soft emotions, but marbled within it is a hint, a vein, of compassion. Exhausted, she grasps at it like a thread, and holding it, falls asleep. And she does not dream.\n\nIn the morning she wakes to him returning with a bucket of snow to melt. Sleep was not kind to her, she feels groggy and unrested. Sitting up she scrunches her face and stiffly stands up from her mat.",
        "\"Did you sleep well?\" Kylo asks as he prepares the water.\n\nShe is surprised at the politeness of the question, but her discomfort from the night makes her irritable.\n\n\"You already know the answer to that,\" she says, rekindling his anger.\n\n\"I'm trying to be agreeable,\" he says sharply, then fumes in silence as he continues his task.\n\n\"Well,\" she says, tempted to offer a hot retort, but she reconsiders and says nothing more.\n\nThey begin work on the ship and it progresses well throughout the morning. While Rey has more extensive experience with diagnostics and repair, Kylo is not without technical skill and submits grudgingly to her directions. They work in silence, interrupted only occasionally by discussions of the electrical and mechanical vagaries of the ship. Rey finds a kind of peace in the process, being able to lose herself in repairs and the problem solving. It frees her from her constant awareness of Kylo and his inner turmoil.\n\nIn the late afternoon however, they hit a snag. A key component in the hyperdrive motivator chain is irreparably damaged, and the donor ship part does not have a working matching part. Initial searches for the part in other ships are unsuccessful as well. \n\nRey shakes her head. \"It may be necessary to find a way to repair the part itself, but we may have to build the tools necessary to do so. We can probably locate enough raw materials, but we may need a forge in order to pour new components if we can't find them elsewhere.\"\n\nKylo lets loose a furious cry and sends a fist through some of the paneling in the donor ship. Rey flinches, ducking away and making a face.\n\n\"We can keep looking,\" she says softly, hoping his anger will dissipate.\n\n\"We're done for the day,\" he says, more calmly now, but she can still feel his anger smoldering beneath the surface. \"Let's go.\"\n\nWhen they are on the ground outside of the ship, he reaches for her and she doesn't resist, sensing that it would only provoke him further. Wrapping an arm around her he stoops to pick up her feet and sets off back to the quarters. Rey closes her eyes, trying to think about the ship, focusing on plans for the repairs, estimating progress. She tries to keep her mind a cool and rational place, a place of components, wires and systems analysis. Trying vainly to block out thoughts of Kylo, even as she is pressed against him.\n\nThey reach their temporary home and have the same meal they have had every meal for several days now. At least they are fed, thinks Rey. At least they aren't working on ship repair in a race against starvation. Though perhaps if they were starving they wouldn't be so distracted by each other.\n\n\"How long do you think it will take to repair the ship?\" asks Kylo.\n\nHe is seated on his mat as Rey is crouched looking over the parts they recovered from their crashed ship. She shakes her head.\n\n\"It's very hard to say,\" she says, not looking away from the parts. \"If I had exactly all the parts and tools I needed, less than a week? But there's no telling how many delays there will be, parts missing or tools needed. It could be months.\"\n\nHe says nothing in response, but she can feel the panic and the rage swirling about in him.\n\n\"Maybe someone will find our distress signal before then,\" she says, looking up and over her shoulder at him.\n\n\"Have you considered the possibility that whoever answers the distress call might not have our best interests in mind?\" he asks her, his face grim.\n\nSurprised, Rey realizes she had not considered that. She blinks rapidly.\n\n\"I didn't think so,\" Kylo says. \"So foolishly optimistic.\"\n\nRey is wounded by this, and retorts, standing and facing him. \"What other option do I have? Should I just lay down and allow myself to starve to death, here in this forsaken place with only a homicidal monster for company?\"\n\nHe is on the edge of firing back, but he holds his tongue. She watches warily as he stands so that they face each other across a few meters. There is a worrisome feeling rolling off of him and Rey regrets her words, a wave of fear passing over her.\n\n\"If I recall correctly,\" he says, a calm and dangerous edge in his voice that is more frightening than his raised voice, \"and I do, not all of the company I offer you is unwelcome.\"\n\nThe look on his face as he says this causes her to flush hotly and turn away. She hears him move closer to her, closing the distance between them, but she doesn't turn back as he comes to stand behind her.\n\n\"In fact, I believe I bear the marks of how enthusiastically you enjoy my company,\" he says, looming over her shoulder, \"all down my back.\"\n\nOverwhelmed by the anger, desire, and shame churning within her, like mud stirred up at the bottom of a pond, she whirls around and slaps him across the face. In response he grabs her arm, and then her other one, pinning her hands behind her back. Conflicted, she only puts up a token resistance. Their chests are pressed together, his arms around her to bind her wrists together in the small of her back. She stares up at him and she is flushed still, and breathing heavily.\n\n\"You can't have it both ways,\" he says, his eyes scouring her face and hanging heavily on her mouth. \"You think you're good, and right. But I know what you're capable of, I know your anger,\" he brings his mouth close to hers, \"and the depths of your depravity.\" He whispers this last so closely that his lips caress hers as he forms the words.\n\nHer lips part involuntarily and her gaze flicks to his mouth then his eyes and back again. She has become taut with anticipation despite herself, a tightness in her chest as her body responds to him, eager for what is to come. Her anger still burns bright, but now it is laced with a hunger.\n\n\"It's you,\" she says, her voice a low whisper, \"it's you that has made me depraved.\" She wants it to sound like a condemnation, but it sounds more like a request than anything else.\n\n\"Liar. And you fool only yourself,\" he says, brushing his nose against her, teasing her now that he can feel she is losing her will to resist. \"You've always been a greedy, depraved savage.\" She lets out a small cry and then bites her lip as he bends to kiss her neck. \"I just opened your eyes.\"\n\nHe whispers this last against her skin before sinking his teeth into the meat of her neck. She gasps and let's out a cry that is sodden with pain and lust, and she begins to struggle in his grasp, her hands still pinned behind her back, but she only succeeds in pressing herself against him as she does so. He moves a hand to grab her hair at the back of her head and pulling her head back he kisses her aggressively. With a hand freed she digs her fingers into his hair, taking a fist of it tightly in her palm and meeting his force with her own. The kiss is wet and fierce as they devour each other.\n\nThis time there is no foreplay, no teasing or slow undressing. He pulls her to the ground and strips her from the waist down, not even bothering to remove his pants once he has loosened them enough to free his erection. Regardless, she is already wet, and he presses himself inside of her as though his need to be in her were a matter of life and death. He begins to move with wild desperation, their mouths meeting, tongues entwining, panting into each other. His weight on top of her is a glorious burden and she wraps her ankles around his calves, pulling herself tightly against him. She cries out incoherently, moaning and lost in the feel of him.\n\nShe opens her eyes then and brings a hand to his chest pushing him away. He narrows his eyes, looking at her inquisitively as he continues to pound her, reluctant to stop.\n\n\"I want to be on top,\" she says, a bright flush in her cheeks.\n\nHe hesitates for a moment, then pulls her to him and rolls onto his back, bringing her with him without disengaging. Now on top she sits up, straddling him. She begins to remove her remaining garments, but he is impatient, and holding her hips, begins to thrust from below. Her fingers fumble at the fasteners of her garments, as she has trouble focusing on anything other than his movements. But finally she is free of them, and she begins to move herself up and down, in tandem with him. Their eyes are locked together and looking into his face in this moment feels dirtier and more intimate than anything else. She feels dizzy and wild, and as she continues to move she begins to stimulate herself. Watching as his eyes move from her face and slowly down her body, she feels the tension of climax building in her.\n\n\"Harder,\" she breathes, crying out as he complies with her command, \"yes, yes, oh god...\"\n\nThe tension swells within her, and like a flash flood and she is not simply flowing over the falls, but shoved her rapidly towards it so that when it comes she feels like she is tumbling through freespace, spinning wildly. She looks at him as it hits her, his wild dark hair and the red flush across his cheeks, and then she is arching wildly, flailing, her eyes squeeze tight as loud cries escape her lips.\n\nAs she goes limp on top of him, he rolls back over on top of her and he doesn't stop. She looks up at him now, a haze of lust and satisfaction clouding her vision. She can feel him getting near his own climax and she watches with fascination, feeling desire begin to build within her again as she watches him. She watches as his brows knit together, furrowed with concentration and his lips part. His thrusting and his breathing are forceful and ragged, and as she looks at him, she feels another climax hit her sideways as he grinds against her, like a wave breaking thunderously on the beach. As she cries out wildly in pleasure and surprise, the paroxysms wracking her, she is vaguely aware that he is coming too, making a loud moan and then he slumps forward on top of her.\n\nChapter 7: When the merry go round stops.\n\nAnd so this is how they pass their time. Ship repair progresses more or less steadily once they solve the issues with the hyperdrive, which they are able to repair by modifying it to receive a slightly different model replacement part. They alternate between silence, arguments, and sex with abandon, as Rey continues to oscillate between resistance and embrace. But the longer Rey manages to resist him, the more furious and forcefully they reunite when her attempt at abstinence fails. She works tirelessly on the ship, fearing what feelings are forming within her, as if she can escape them by running for the stars.\n\nThey have been on Hoth for twenty three cycles, Rey faithfully marking them off on the wall with tick marks, when they hear a ship's engine. They are in the hangar bay, working on their ship when they hear the noise. Rey feels a jolt of hostility from Kylo, a predatory coiling of anger and anticipation inside him.\n\n\"Time to go,\" he says. \"Leave the tools.\"\n\nHer ankle has healed now, and they are able to jog back to their quarters.\n\n\"Did you recognize it?\" he asks, not looking at her as they hurry back.\n\n\"I think it was a late model Imperial freighter, one of the smaller classes. Sounds like it's in poor repair, I'd guess one of the turbines is cracked,\" she answers.\n\nThere is a sense of grim determination coming from him now.\n\n\"And who would have a late model Imperial freighter and not take the time to repair a cracked turbine?\"\n\nRey is silent for a moment as she takes it in. \"Pirates,\" she says.\n\n\"Scavengers,\" he responds, glancing at her significantly.\n\nThey arrive at their quarters. They have discussed the contingency of hostiles, and they have an array of traps prepared and weapons with which to arm themselves. Rey refused to let Kylo teach her attacks and chokes with the Force, so she has a wider array of blasters and laser pistols at her disposal. Once armed, they head to their look out position. The great advantage they possess now is an intimate knowledge of the base layout, and most importantly, the locations of the collapses in the tunnels.\n\nThey have spent time clearing the mass quantity of snow and ice that had built up around the hangar bay doors. This was accomplished with fire, Force, and shoveling, and it would be visible from the air, unlike their other entry points. The only other possible entry point would be where they had placed the external beacon, but this they locked, hoping to ensure that any visitors entered through the hangar bay.\n\nAnd their preparation works. After waiting for a short period, they hear the hangar door being opened from the outside. Slow careful footsteps follow and a group of three, two men and a woman, come into view. They are all heavily armed, holding their weapons at the ready, and moving together in synchrony. While they seem to move like a well-oiled military unit, their garb is worn and eclectic. They whisper to each other, keeping quiet as they progress towards the ship under repair, which stands out amongst the other wrecks now in its relative cleanliness.\n\nKylo draws his weapon and aims it at one of them. Dismayed Rey puts her hand on the barrel. He glances at her angrily.\n\n\"We don't know if they plan to hurt us,\" Rey whispers.\n\n\"They do,\" he says, sullen and angry. \"You'll see.\" But he relaxes his aim.\n\nTwo of the party search the ship quickly while the third stands guard warily. The two reappear shortly and join the third, the group then proceeding to follow the well worn path towards the living quarters.\n\nRey and Kylo circle around silently, avoiding directly following the group, which remains on high alert. They slip along the backside of the old office to where they put a circumspect hole high in the wall, and they listen.\n\n\"Two of them,\" a male voice says, allowing his voice to escalate above a hushed whisper in the enclosed space. \"Possibly three? It looks like two people slept on this mat last night...\"\n\n\"What is it?\" asks a second male voice.\n\n\"Hair. Long, from two different people. Maybe we got lucky and it's a pair of females,\" says the first voice.\n\n\"Why would that be lucky?\" asks the female voice, a studied edge in it.\n\n\"Cool it, new girl. Not because they're easier to catch, okay? Because they bring more money at market,\" says the first male voice.\n\nRey's eyes go wide at this. \"Slavers,\" she mouths in horror, looking at Kylo.\n\nHe shakes his head, and she knows he's thinking she should have just let him shoot when he had the chance. He closes his eyes and focuses. Rey can feel him reaching out through the Force, and she grimaces, afraid she knows what he's going to do.\n\nThere's a scuffling sound.\n\n\"What's wrong?\" asks the second male voice, but receives only gurgling noises in response.\n\n\"He's choking!\" says the female voice.\n\n\"What could he possibly be choking on?\" asks the second male voice.\n\nThe gurgling and gasping noises escalate, then die off. Rey is looking away, wishing she could just cover her ears as the two try to find a way to help their compatriot, to no avail.\n\n\"He's dead!\" cries the remaining male voice in horror after a few moments of silence.\n\n\"Oh god!\" yells the terrified female voice as there is a resurgence of gasping noises, this time presumably from the second man. There is a sound of rapid motion and the door to the office slams open as feet pound the pavement.\n\nKylo is up and on his feet, weapon in hand as he dashes around the corner and takes aim. Rey stays stalk still, hearing the weapon fire twice and then she hears him enter the quarters and hears him fire twice more. Her eyes squeeze shut at the idea that he is shooting the corpses of the men he just strangled to death.\n\n\"Get in here,\" he says.\n\nShe rises and walks around to the door, braced for what she is about to see. Before entering, she sees the body of the woman, sprawled face down on the floor as she tried to flee. Looking away she enters what has been their home and she finds Kylo, digging through the pockets of one of the corpses, the other evidently searched already. A numbness spreads over her as she watches him finish his search and stands.\n\n\"There's probably more of them on the ship,\" he says. \"At least two.\"\n\nHe looks at her, an anger burning in him.\n\n\"They would have sold you as a slave,\" he says, his tone a dark and terrifying thing. \"Probably to a brothel, or worse.\" The rage in his voice makes him sound almost unhinged.\n\nShe flinches, both at his tone and the thought of enslavement.\n\n\"I am going to kill everyone aboard that ship,\" he says, taking her jaw between his thumb and forefingers, looking down at her with a fierce gleam in his eyes. \"And you are not going to try to stop me.\"\n\nShe stares up at him, feeling a war of emotions inside of her, but she knows she will not interfere, and he knows it too.\n\nReleasing her they move quickly. They take another exit they have found, buried in the snow, near the hangar bay doors. She was right about the ship, it's an Imperial freighter, an older model. Given its size, it can be crewed by three, but with space for three more passengers without crowding. Kylo surmises that they have a crew of four or five with the remaining spaces used as holding cells for captives.\n\nThere is an armed guard standing at an open airlock of the ship, smoking a pipe of some kind. He looks no where near as attentive or disciplined as the others were. Kylo circles around to get in position, then fires once and the guard collapses without a sound.\n\n\"Come on,\" Kylo says, walking towards the airlock.\n\nThey move about the ship searching for crew. There is a space converted into a holding cell, but it is empty, much to Rey's relief. She didn't want to find out what Kylo would do with inconvenient captives. Everything else seems empty, but they hear a voice as they approach the cockpit.\n\n\"Max, what the hell is going on?\" says a female voice, this one older and gravely. There is silence and static on the radio. \"Ma-\" the voice is cut off by gasping and choking noises.\n\nRey winces and looks away from Kylo. He is focused, concentrating on the cockpit. She looks at the corridor from which they came, and makes a decision. She backs slowly in that direction, away from Kylo, then she breaks into a run. She hears him call her name in anger, and she runs faster, towards the exit. He'll be after her any second now. In fact, she can hear his feet pounding on the deck as he turns to pursue her. The pilot must already be dead then.\n\nAs she races out of the ship's airlock, she reaches out with the Force and presses the controls, closing the airlock. She can't lock it closed, so she flicks the safety off of her blaster and fires back at the control panel, hoping to damage the controls. All she needs to do is slow him down, just a little. Adrenaline is charging through her body and it makes her swift. She hears him exit the ship and begin to run.\n\nThe ship they have been repairing is close, and she climbs into it, locking the hatch behind her. The truth is, the ship has been operational for several days. How she was able to keep this from him, she is uncertain. To conceal it, she has intentionally misrouted a handful of wires in the cockpit controls, causing it to fail various tests, but she knows it will run. She tells herself that the reason she delayed their departure was to buy herself time to find a way to escape. A small unwelcome voice her mind suggests otherwise, that her true motive for the delay was the same as the one that kept Kylo blind to her deceits.\n\nSlamming her body down into the pilot's seat, she reaches for the panel where the misrouted wires are, and with shaking hands, she carefully unplugs and re-plugs them, inserting the pins in their proper places. She can see Kylo through the cockpit canopy now, running towards her. Her fingers run rapidly over the instrument panel as he approaches. With a deep intake of breath as he closes the last bit of distance to the ship, she slams on the drives and for a moment her heart stops in the silence, but then the engines roar to life and the ship leaves the ground.",
        "Kylo flattens himself on the ground as the ship rockets past and out of the hangar bay. He stands to watch the ship depart, staring after it as it recedes into the distance.\n\n\"Rey, no!\" he says to her, reaching out through the Force, pulling the the strange bond between them. She hears him now, as she rises through the atmosphere, and his voice is clearer than before, as though the ties that bind them have only grown in strength. The fury and the anguish that she feels from him are almost overwhelming, and the sorrow with which she responds makes her feel as though she may split in two.\n\n\"Kylo,\" she answers, tears streaming down her face. \"Good-bye.\" Her hands are setting a course on the instrument panel. \"I'm sorry.\"\n\nAnd as she punches the ignition for the jump to hyperspace, the feeling of him is lost as they are separated by the vastness of space. She looks out at the streaks of the stars, streaming past the ship. This is victory. This is her escape. And yet she feels as though she has been broken in two. As a loneliness deeper than she has ever known settles over her, and she buries her face in her hands and weeps.\n\nChapter 8: Every new beginning.\n\nBack at the base, Leia and Finn are waiting on the landing pad for her as she exits the ship. Rey walks unsteadily to them.\n\n\"You're alright!\" says Finn, scooping her up in his arms and spinning her around with joy. \"How did you get away? Where were you?\"\n\n\"Hoth,\" says Rey, squeezing her eyes shut as she accepts his embrace. It is a warm, kind, and uncomplicated thing. So different from her embraces with Kylo.\n\n\"Hoth?\" says Leia.\n\nRey nods as she pulls away from Finn, and Leia opens her arms for her and she is embraced again.\n\n\"We crash landed there, and sheltered in the old Rebel base,\" she says this over Leia's shoulder.\n\n\"It's been weeks!\" says Leia.\n\nRey nods again, and the tears, which she has so valiantly been shoring up begin to form in her eyes again. Leia looks at Rey's face and shakes her head.\n\n\"I'm sorry. No more questions,\" Leia says. \"Let's get you a hot shower and a proper meal.\"\n\nA long, hot shower, much longer than she would normally take, feels amazing, but even still, hot fat tears well up in her eyes, and because she is alone, she let's them. Dressing afterwards her skin delights in the feel of fresh clean fabric. Then there is the delight of a warm meal; something other than preserved meal rations does much to restore her. But then she is left alone with her demons, no physical discomforts left to distract her. She can't sleep. It's the first time in almost a month that she hasn't slept with or within arm's reach of Kylo. His absence is a torment to her, and the knowledge of that is its own torture.\n\nFinally, she dresses again and goes to Leia's quarters. They were to meet in the morning, but Rey can't stand waiting. Somehow she feels that Leia is the one person who may be able to understand her distress, the only one with whom she can share honestly what happened. It is against Rey's nature to disturb Leia's slumber, but it is not as late as she thought, and when Leia answers the door, she is still dressed her regular attire.\n\n\"Rey,\" Leia says with a tired smile, \"come in.\"\n\n\"Thank you,\" says Ray, sheepish and relieved.\n\n\"Have a seat,\" Leia says. \"Let me get you some tea.\"\n\n\"Thank you,\" Rey says, sitting quietly as Leia pours tea from a small pot on her desk where she has evidently been working and reading reports.\n\n\"So,\" says Leia, handing her the metal cylinder of fluid, \"tell me.\"\n\nRey takes a sip of the tea, and then a deep breath. Saying what she has to say now feels like jumping off a cliff into free fall. \"I'm afraid, I think, I might be pregnant,\" she says.\n\nLeia's eyes go wide with horror and there is a stunned silence. \"He- did he-\" Leia begins, but is unable to finish the thought.\n\n\"No,\" says Rey. \"No! It was... it was both of us, that is... it was, mutual.\" Admitting this out loud is hard for her, but she doesn't want Leia to think that Kylo forced himself on her. He was guilty of much, but not that.\n\n\"It was complicated,\" Rey says weakly, unsure how else to phrase it. \"I wanted to stop it, but I couldn't.\" She looks into her tea, rubbing the cup with her hands, as if there might be an answer there.\n\n\"Well,\" says Leia, relaxing back into her seat, the horror retreating from her features and leaving shock in its place.\n\n\"I don't know what to do,\" says Rey. \"After he took me, all I could think about was escape. I was so mad at him, for what he did to Poe, and Finn, and me, and to- to Han.\" Her voice breaks as she says the name, grief welling up in her. \"But there's something between us, something I can't explain, and it took over and I couldn't- I couldn't stop it. I tried, but each time I did I got drawn back in.\" She looks up from her tea to Leia fearfully, but there is only compassion there in the General's face, and sadness. But unable to hold her gaze Rey looks back to her tea, staring into the depths of the cup. \"And when I escaped... leaving him was the hardest thing I have ever done. I felt like I was abandoning myself back on Jakku. It was awful.\"\n\nShe sets down her tea and drops her head, covering her face with her hands.\n\n\"I'm sorry,\" she says. \"I'm sorry, I just don't know what to do.\"\n\nLeia stands and moves close to Rey, putting a hand on her shoulder.\n\n\"I understand. Loving Ben is not an easy thing,\" Leia says, looking down at Rey, who still has her face hidden in her palms.\n\nRey jerks her head up at Leia's words. \"What? No. I don't-\" but she cuts herself short as she looks at Leia, who is giving her a knowing look.\n\n\"It's time for you to find Luke,\" Leia says definitively.\n\nRey nods in silence.\n\nReturning to her quarters Rey is still troubled, but exhaustion and her conversation with Leia have made her ready for sleep. It helps that she has a plan now, a path forward. She undresses and climbs into bed, a bed that now feels like the height of luxury, and sleep overwhelms her.\n\nDuring the night she wakes to finds herself walking back through the abandoned hangar towards the small office that had been her temporary home. A feeling of dread and excitement pours over her as she approaches the door. She can hear the sounds of wood splintering and things breaking inside. And though the cacophony inspires a powerful desire to run within her, she feels herself pulling the door open.\n\nWhen she sees him, she feels her heart swell in her chest, like a balloon is expanding in her ribcage, pressing her close to bursting. Longing, fear, loathing, desire, the whole confusing maelstrom he always inspires, rises up and swirls within her. He becomes still when the door opens, debris of furniture scattered about, holes in the wall. His back is to her with his broad shoulders hunched and rigid. Neither of them move for a moment, and Rey feels as though she has forgotten how to breathe in this instant that seems to last for ages.\n\nThen he turns and extends a hand and she feels herself pulled across the floor to him, her toes dragging on the floor as she is seized by the throat. His hand takes the place of his Force grip, and it is strong holding her in place, yet he does not choke her. Still, they do not speak, staring into each others' faces with uncertainty and anger.\n\n\"You left me,\" he says, his voice dangerously low and calm.\n\n\"Did you get away?\" she asks, searching his face.\n\n\"You left me,\" he shouts it this time, his face becoming contorted with rage.\n\n\"I had to,\" she says, almost in a whisper, her eyes becoming glossy with emotion.\n\n\"You shouldn't have left!\" he shouts again, tightening his grip for a second then loosening again.\n\n\"I had to!\" Rey is shouting now as well. \"I was your captive! You threatened to kill me! You would have done the same in my place, if you hadn't simply killed me to escape.\"\n\n\"That was before!\" he yells, furious still, but a thread of pain weaving itself into his tone.\n\n\"Before?\" says Rey softly, confused, looking at him wide eyed.\n\n\"Yes,\" he says, his voice still hot with anger, but softening slightly. \"Before.\"\n\nReleasing her throat he grabs the hair at the back of her head and kisses her, pulling her forcefully against him with his other arm. As if acting of their own volition Reys arms wrap around him, the fingers of one hand tangling in his wild mane of hair. There is a thirst and a desperation in the kiss, as though they both expect it to be their last. A strange new note has been added to the many discordant tones of Rey's emotions: longing.\n\nThen they are ripping at each others' clothes, undressing, so that they can press the whole lengths of their bodies together without interruption. He moves to the ground and pulls her down on top of him greedily. Their mouths are locked together as his hands travel up and down her back and she begins to grind her hips against his, his erection trapped between them.\n\nShe tries to sit up, but he won't let her and he rolls over on top of her, grabbing her wrists and pinning them above her head in one of his hands. With his other hand he reaches down and slips a finger inside of her. She gasps wildly, arching her upper back. He takes advantage of this and brings his head down to one of her breasts, taking her nipple into his mouth. The hot wet sensation of his mouth, his fingers inside of her, of his body against hers makes her crazy, and she writhes savagely against him, crying out like a wild animal.\n\n\"Beg,\" he commands her, pulling back to look at her, a look of hunger on his face that puts a pit of excitement in her stomach. \"Beg me for it, savage.\"\n\nAnd she does, pitifully, hungrily and without hesitation. \"Please,\" she whispers, \"please. I need you.\"\n\n\"What do you want?\" he asks, then uses the tip of his tongue to trace a circle around her nipple.\n\n\"You know what I want,\" she says, biting her lip, her eyes shut tight as she focuses on the feeling of his mouth against her skin.\n\n\"I want to hear you say it,\" he says, bringing his mouth to hers, but only to brush his mouth against hers, teasing.\n\n\"Please, oh please, please,\" she whispers desperately.\n\n\"Say it,\" he says, his lips still brushing hers.\n\n\"Take me,\" she says, looking at him beseechingly, the raw need visible on her face, a bright red flush spreading over her. \"Fuck me. Hard.\"\n\nWithout a word he takes hold of his erection and presses into her. She is slick and hot, and she lets out a long wail of pleasure and desolation as he slides inside. There is a pause as they both acclimate to the sensation, and then he's moving at a forceful driving pace that has her sinking her nails into his backside as she is buffeted by his movements.\n\nShe is lost in the sensation of his body, fully yielded to him and taking pleasure in the surrender, a perverse excitement arising from the wrongness of it. This is why she had to escape, this power he has over her, and how he would wield it to corrupt her and bring her to darkness.\n\nHe stops his thrusting and sits up, lifting one of her legs up and over to join the other so that she is on her side. Without withdrawing he continues to rotate her, and she accommodates him by maneuvering herself to come to all fours. Kneeling behind her, he takes hold of her hips and pulls her to him as he thrusts, so that there is a slap as his pelvis hits her bottom. He starts out with slow, hard thrusts, each of them crying out at each impact as he drives himself home. Then he begins to move faster, and Rey comes down onto an elbow, moving her other hand to stimulate herself as he continues.\n\nHer body is winding now, coiling tighter and tighter. The sensation of him inside her, the slick movement of his hardness is driving her steadily towards a climax. He is still gripping her hips, his backside and his abdominals flexing rhythmically.\n\n\"Yes,\" she whispers, \"yes, oh god.\"\n\nHe accelerates further, pounding her with a fire as though he is trying to punish her. Wild animal noises escape her and he is panting and moaning, sweat dripping down his chest. She feels herself tense and she looks over her shoulder at him for a moment, watching him move as she continues to stimulate herself, and then she is exploding, hurtling through space in a wild free fall as the orgasm takes her. Its long, perhaps the longest and she cries out his name, then he is coming too thrusting spasmodically, and together they make incoherent noises of ecstasy. She collapses face down on the bedding and he falls on top of her.\n\nAs the dream begins to fade to black, she whispers, \"Are you safe?\"\n\nHis voice is disembodied now as he says, \"As safe as I will ever be.\"\n\n\"You got away?\"\n\nThere is a pause before he answers. \"Yes.\"\n\nAnd then it's gone.\n\nEpilogue: The next journey.\n\nWhen morning arrives at the Rebel base, it begins with a whirlwind of preparations. Packing supplies, and weapons, making final repairs and stocking spare parts, reviewing navigational charts. Eventually, Rey finds herself standing in the airlock of the Millenium Falcon, Leia holding her hands with a serious look.\n\n\"Get him to come home,\" says the General, a worn look on her face. \"We need him.\"\n\n\"I'll will,\" says Rey.\n\nThey hug, squeezing tightly, and Leia says, \"Take care of yourself. And may the Force be with you.\"\n\nRey pulls back, teary eyed, and nods.\n\nScrubbing her tears away, she walks to the cockpit of the ship with BB-8 trailing behind her. She takes a deep breath to soothe herself. Chewy is already there, settled into the copilot's chair. It breaks her heart, settling into the well worn pilot's seat; she can feel where Han's body fit into it, and where hers does not, and it is a pain and a comfort both at once. The engines are warm, and she does her final scan of the instrument panel. Then she turns to her copilot with a look of nostalgia on her face.\n\n\"Well Chewy, shall we be going?\"\n\nChewy lets forth a long throaty cry. Rey smiles bittersweet. And they leave to find Luke Skywalker."
    ],
    "authorname": "nimoy",
    "tags": [
        "star wars",
        "reylo",
        "rey",
        "kylo-ren",
        "celebrity",
        "celebrities"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/blood-and-snow-a-reylo-smut-story"
}