{
    "title": "Summer Skin Ch. 03",
    "pages": [
        "All characters are over eighteen. All people and places are fictional.\n\n*****\n\n\"Are you fucking my daughter?\" Summer's father Jim said through my screen door. His voice was quiet, but I could tell he was fuming inside.\n\n\"Jim, what are you doing?\" Summer's mother Barb said as she hustled across the lawn. \"Don't do this.\"\n\nShe took his arm and pulled him away, but not before he shook his head at me with disappointment in his misty eyes. Luckily he was the mild mannered type, not a fighter or a gun guy, but the experience deflated me and made me feel like a huge ass. I didn't know what to expect next, but Summer knocking at my door cleared that up.\n\n\"They kicked me out,\" she said. \"Dad did. Mom's a mess.\"\n\n\"Fuck Summer. I told you this shit was gonna happen.\"\n\n\"I know, but they can't expect me to be a virgin forever.\"\n\n\"I don't think they do,\" I said. \"A boy your own age and a normal sex life is something they could get used to.\"\n\n\"All through high school I wanted to be a slut. I finally figured it out, I fuckin' love it, and everybody want's me to stop? Fuck that shit. I am who I fuckin' am. Isn't that a good way to live?\"\n\n\"Summer what am I gonna do with you?\"\n\n\"Let me stay here I hope.\"\n\n\"No fuckin' way! Right next door to your parents? With me? No way Summer, I can't do that. I love you sweetheart, but I can't do that.\"\n\n\"Fuck,\" she said dejectedly. \"I'll see if I can stay at Marcy's I guess.\"\n\n\"Call me and let me know what's happening, all right?\" I said as Summer walked away.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nSummer stayed at Marcy's parent's house for a week, but Marcy's mom caught them having sex and said she'd have to leave. It blew up into a big fight and Marcy got kicked out too. I reluctantly let them both stay with me, but it was incredibly awkward being right next door to Summer's mom and dad, and something had to give.\n\nI finally decided to help them financially, on a temporary basis, so they could get the apartment they wanted. They both laughed about the 'sugar daddy' thing, but I found it uncomfortable. It was what it was though, and the benefits were addicting. Sex with two eighteen-year-old hotties whenever I wanted\u2014it was a lonely fifty-year-old man's dream come true.\n\nI tried to keep my life on an even keel, working my boring job and keeping up my house. I didn't want the whole situation to go to my head, because I knew it had to end sooner or later. On a day when I was doing house maintenance, trying to keep things normal, Summer's mother Barb walked over, and we found ourselves sitting at my picnic table in the backyard.\n\n\"I don't blame you you know,\" she said. \"Jim does, but I don't. I'm actually glad she didn't fall in with a sleaze-bag bad boy type. She used to look at those guys and I always worried about that.\"\n\n\"Thanks Barb, but I gotta say I feel like a sleaze-bag sometimes when I think about the whole situation. I didn't plan it you know. I didn't pursue her.\"\n\n\"I know. She's got a strong sexual will. I used to have one too, and I was kind of waiting for it to find its way out of her. I could tell it was there\u2014she's so much like me when I was her age. There's a lot I don't like about what's happening, but it's a relief to see she has good taste in men,\" Barb said, with a little smirk just like Summer's. \"I'm not thrilled with all the sex that I'm sure is going on, but I wanted to thank you for sticking with them and helping them. I can tell when I talk to Summer, that you're giving her good advice. Jim and I really want her to stick with school and get in a good college. We're still behind her in every way for that, and anything you can do to guide her that way we really appreciate.\"\n\n\"Oh okay, that's good to know. I'm glad to hear that. Yeah, I'll do what I can to point her that way, absolutely.\"\n\n\"You know when I was her age I had a wicked crush on a man in my neighborhood. He was about your age,\" Barb said with that smirk again. \"He never would fuck me, but I did my damnedest. I snuck in his back door one day when he was mowing his lawn, left a trail of clothes through his house and climbed into his bed naked. He kicked me out, although I could tell he didn't want to. We had a nice relationship after that\u2014he helped me with some college stuff.\"\n\n\"I wish I'd had that kind of will power,\" I said.\n\n\"He should have fucked me that day in his bed,\" Barb said. \"God I wanted it so bad. Things are different these days, I know that. Sex is way more open and freer. I'd give anything to be a young girl now.\"\n\n\"Barb, you're not even forty yet are you? Your time's hardly up.\"\n\n\"Ha! Says the single guy with the hot young girlfriend! My time's been up for ten years or more, sad to say. Jim's turned into a conservative...well, let's just say I'm glad I can at least live vicariously through my promiscuous daughter,\" she said, her dark eyes locking onto mine and twinkling as her mind worked.\n\n\"There's lots of way to spice things up you know,\" I said, suddenly wishing I hadn't said it.\n\n\"Such as?\" she said. \"Have an affair you mean?\"\n\n\"That's never a good thing, unless you're both in on it.\"\n\n\"Whaddya mean, like...couple swapping? Jesus Alan, Jim would never go for that kinda thing. That's funny!\" she laughed, and her eyes zeroed in on mine, with that smirk again. \"Why do I get the feeling you know something about it?\"\n\nIt's funny, I had never been attracted to Barb before, but sitting at that table, right where my relationship with Summer blossomed, she suddenly seemed attractive as hell. It became crystal clear where Summer's sexiness came from, and her beauty. It was not good, a revelation like that. Not good at all.\n\n\"I uh...no, I...uh...\" I stammered.\n\n\"Good lord!\" Barb laughed, and then her face changed as she looked at me, like she had just had the same revelation I had. \n\nOnly bad things could come from what was happening between us, so I broke it off.\n\n\"I really need to finish cleaning these gutters Barb,\" I said as I stood up.\n\n\"Oh sure, yeah,\" she said, and she got up too. \"I'm glad we're on the same page, about Summer I mean.\"\n\n\"Me too Barb. I'll keep pushing school as best I can.\"\n\n\"Keep me in the loop, okay?\" she said. \"About Summer, or, whatever.\"\n\nBarb smiled a shy smile and walked away. I didn't move a muscle as I watched her, her ass wiggling deliciously as she walked across the lawn and into her house.\n\n\"Oh fuck,\" I said to myself.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"Why are you looking at me like that?\" Summer said.\n\nI was sitting on her bed, watching her get undressed, amazed at the similarities to her mother that I was seeing for the first time.\n\n\"Huh? Oh...I dunno...you're just beautiful, that's all.\"\n\nI took off my clothes and we snuggled on the bed like a couple who'd been together forever.\n\n\"I know you like it here, but do you ever miss living at home?\" I asked.\n\n\"Yeah. I mean I love my parents. I miss them. My mom's a good cook too. I don't miss them fighting though.\"\n\n\"They fight?\"\n\n\"Yeah. Not like loud and physical, but...just tense, you know? More than it should be. The more I think about it I think my mom needs to get fucked. Someone who really knows how to give it to her. I should hire her a hunky male prostitute or something. That'd be a great birthday present for her,\" Summer laughed.\n\n\"Or take her to Swingtime with us,\" I said, and once again I wished I hadn't said it as soon as it left my lips.\n\n\"Ha! Wouldn't that be something...oh my God! Can you imagine? Well you probably can, because she's not your mother. Yeah, you probably can, can't you! You son-of-a-bitch!\" Summer said with a growing surprised smile on her face. \"Are you into the Mother/daughter thing you dirty old man? Two teenagers aren't enough for ya! Huh, you dirty old fucker?\"\n\nSummer was laughing as she rolled on top of me, and she kissed me hard. My cock was up and running and she reached back and guided me into her sweet pussy. My perverted mind immediately wondered if it would feel the same sliding into Barb.\n\n\"Damn, you are hard tonight! I think you are a pervert,\" Summer said, reading my mind impeccably. \"Holy fuck you're deep!...Damn!...Oh Yeah!\"\n\nShe rose up and rode me like a cowgirl, her small nipples as hard as pebbles. I had never seen Barb with her eyes closed and her mouth open as Summer was at that moment, but I could picture her riding me nonetheless. Her first good fuck in ten years, and I was giving it to her. I thrusted so quickly and so powerfully up into Summer she just about levitated, screaming a cry of love that thrilled me as we both came simultaneously and melted into a warm pile of flesh.\n\n\"Fuck! What got into you tonight?\" Summer said breathlessly.\n\n\"Did I ever tell you how sexy you are?\" I whispered in her ear.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe weekend rolled around and there was another dance scheduled at Swingtime. I had spoken to Randy on the phone, and mailed him a check to cover our first years dues. I explained the situation with the girls, and he assured me I could continue on my own if the girls and I had a parting of the ways. John and Mindy had put in a good word for me, and voted us in.\n\nThe girls dressed in their finest 'fuck me' clothes, and Marcy had touched up her dark-blue hair with extra violet blue accents. I must confess to doing a little shopping myself\u2014I wore pants that were tighter than my usual, and a shirt with a little bit of a shine to it that Summer helped me pick out. She said I looked hot, but I'm sure she was exaggerating.\n\nMarcy was amazed at Randy's house when we pulled up, and I could feel her electric excitement as we walked in and climbed the big staircase. We walked past two bedrooms with open doors, and her eyes were big as the sounds of sex filtered out to us. Randy greeted us in the big party room, kissing the girls on their cheeks.\n\n\"My goodness, what a wonderful addition to this place you three are,\" he said. \"You're not on the mailing list yet Alan, so you're probably not aware, we sometimes have special themes for the night and tonight's is something we call 'exhibition's at eleven'. In about three hours or so, around eleven o'clock, we open up the dance floor bed to anybody who wants to use it,\" he said, pointing at a flat, bed-sized white leather lounge separating the bar area from the dance floor. \"It's actually there all the time, and gets a bit of use, but people seem to like the show aspect of it when we put a time on it so they can be here to watch. So feel free to partake in that in any way you wish, or just have fun on your own. John and Mindy tell me you two are quite good at that,\" he said with a smile. \"I hope you enjoy yourself Marcy. I'll be around if you have any questions.\"\n\nThe cute topless bartender was at work again, setting us up with a whiskey and water and two 7-ups. It wasn't long before my hot little companions were on the dance floor with two men.\n\n\"It looks like our husbands have stolen your women,\" a nice looking woman said as she walked up to me. Another nice looking woman was with her. \"I'm Nancy, this is Stephie.\"\n\n\"I'm Alan. It's nice to meet you both.\"\n\n\"We're dying to know the story,\" Stephie said. \"Those girls you're with. They're quite wonderful, but so young. We've never had any members that young before. You're causing quite a stir amongst the men.\"\n\n\"And some of the women too,\" Nancy said with smile and a wink.\n\n\"The story huh? I might need another drink before I want to admit it.\"\n\n\"Misty, can we get three more please,\" Nancy said to the bartender.\n\n\"I guess this isn't a place to be timid, is it,\" I said and I downed what was left of my drink. \"The brunette, Summer, is literally the girl next door, although she doesn't live there anymore. Marcy is her best friend.\"\n\n\"The neighbor's daughter? Wow. Do they know?\" Stephie asked.\n\n\"They know we're together, yeah. Marcy's parents don't know about me, as far as I know. And nobody knows we're coming here. Summer sort of forced my hand on this place, but I'm kinda glad she did.\"\n\n\"Really!\" Nancy said. \"So Summer had the desire to come here? That's interesting. When I was her age I didn't have a clue about anything like this, but times have changed I guess.\"\n\n\"Yeah, I was just talking to Summer's mother about how different kids are about sex these days.\"\n\n\"Don't tell me you're involved with the mother too!\" Nancy said.\n\n\"No, not really, no.\"\n\n\"But you wanna be, don't you? I know that look,\" Nancy said. \"My, I had no idea you'd be as interesting as your girls.\"\n\n\"Do me a favor and don't say anything about her mother to Summer. She hasn't figured that out yet, and nothing's gonna happen anyway.\"\n\n\"My my, secrets already,\" Stephie said, smiling and shaking her head. \"You are a fascinating man.\"\n\n\"I don't know if we can keep your secret,\" Nancy said. \"You might have to do some favors for us.\"\n\n\"Big favors,\" Stephie said. \"Not only do you want us to keep your secret, but you're also corrupting our husbands with teenaged treats. I think you need to do everything we ask you to do tonight, and then we'll call it even. Does that sound fair Nancy?\"\n\n\"That sounds like a deal I can get behind,\" she said. \"How about you Alan?\"\n\n\"More than fair,\" I smiled. \"As long as I can get behind both of you.\"\n\n\"It's a deal then,\" Nancy said, and we all shook hands. \"We're very serious about our deals around here.\"\n\nSomething about the way she said that made me nervous, but it passed quickly when they dragged me onto the dance floor. Summer and Marcy were down to their bras, panties, garter belts, stockings and high heels, and they were surrounded by four smiling, dancing men. Two women, who I think went with two of the men, were dancing by themselves, fully clothed but grinding on each other and kissing.\n\n\"I've always wanted to dance with a naked man, haven't you Steph?\" Nancy yelled over the loud, pulsing music.\n\nStephie nodded and smiled, and I got a sinking feeling I was in for a night to remember.\n\n\"Alan?\" Nancy said, raising her eyebrows for emphasis.\n\nI stopped dancing, smiled and shook my head before heading to the bar. I downed my drink in one gulp and walked to the couch where the girl's clothes were and started stripping. Nancy and Stephie had big smiles on their faces as they danced and watched me. To say I felt like a bit of a fool as I rejoined them would be an understatement.\n\n\"Alan, what the fuck!\" Summer said as I walked by completely naked.\n\n\"Let's just say I lost a bet,\" I said as I passed.\n\n\"Don't tell me you've been making deals with my wife,\" one of the men said with a laugh. \"No good can come of that my man.\"\n\nAfter my evil deal-makers got their fill of dancing with me while fully clothed in their dresses, they slipped them off and tossed them on the pile. Nancy, a striking beauty with short auburn hair, was the older of the two, probably in her mid-fifties. She was decked out in high heels, thigh-high stockings, lacy panties and a matching bra. \n\nStephie was the more 'earthy' of the two, an aging hippie type with long, frizzy blonde hair. She was probably a few years younger than Nancy. The taller of the two, she was in flat sandals and nothing but cute little pink panties. Her tits were quite astonishing considering her age, big and jiggly, with eye popping nipples. Unfortunately they made something else 'pop' too, and I found myself dancing naked with a hard-on for the first time in my life.\n\n\"Nice!\" Nancy said with a smile. \"I like growers.\"\n\nAs we danced Summer made her way over to me.\n\n\"Alan, what the fuck!\" she said when she noticed my erection, and she laughed so hard she had to stop dancing. \"Are you gonna be all right? We're gonna go party with these guys.\"\n\n\"Am I gonna be all right? I'm supposed to be keeping an eye on you.\"\n\n\"Don't worry, they're good guys,\" Nancy said to me. \"They'll look after them.\"\n\nNancy danced over to her husband and said something in his ear. She came back with a little blue pill and handed it to me.\n\n\"Do I look like I need this,\" I said, looking down at my mostly hard cock flopping to the beat.\n\n\"Take it,\" she said, with that raised eyebrow look again.\n\n\"Can you get me a drink?\" I said. \"I don't think I wanna walk over to that cute bartender like this.\"\n\n\"Oh thanks Alan, yeah, we'll have another round,\" the evil Nancy said.\n\nI shook my head and smiled in defeat.\n\n\"I made a deal with two evil women,\" I said to the smiling bartender as I approached.\n\n\"Looks like you're happy about it,\" she joked, glancing at my cock as she took my order.\n\n\"I'll tip you later okay? I seem to have left my pockets somewhere,\" I said as I picked up the three drinks.\n\nNancy was topless when I got back, and her tits were wonderful too. I seem to have hit the jackpot with the women at Swingtime\u2014they were nothing like the trailer-trash beer-bellies I had pictured at a 'swingers' club. I guess a thousand dollars a year kept out the riffraff.\n\n\"We need to get you hard again baby,\" Nancy said. \"Did you take that pill?\"\n\n\"I did.\"\n\n\"Good,\" she said, and she proceeded to rub my cock while I handed out the drinks. She held hers up and made a toast. \"Here's to the best night ever. You ready for that sweetheart? The best night ever?\"\n\nMy cock responded and she went down on me, sucking me in deep in one fell swoop. Stephie kissed me, and we were off to the races. It was a deep, tongue swirling kiss that tasted like her margarita, straight up, with no salt.\n\nThere were others on the dance floor at that point, all new faces that I hadn't seen before, and it felt ridiculously hot and arousing to be naked in the middle of them, with two sexy women all over me. I almost came in Nancy's mouth, but she pinched me off and shook her head. Oh what exquisite torture this night was going to be.\n\n\"Keep an eye on him,\" Nancy said as she rose to her feet.\n\nShe wandered off through the sizable crowd in the bar area and Stephie wrapped her arms around me, the two of us dancing as one with my hard cock between her thighs and her big tits jiggling against my chest.\n\nNancy came back, stopping to talk to a few women on her way, with a pair of fur-lined handcuffs.\n\n\"Drink up big boy. You're not gonna have use of your arms for a while,\" she said.\n\n\"Nancy, what do you have in mind?\" I asked, with a trace of concern in my voice.\n\n\"Don't ask questions. Drink up, and put your arms behind your back.\"\n\n\"Oh fuck,\" I said.\n\nI said 'oh fuck', but I was as excited as I've ever been. To be naked and handcuffed in a roomful of strangers was not something I ever fantasized about, and not something I ever dreamed I would enjoy, but after I downed my drink and Nancy clicked the cuffs closed behind me, my cock was as hard as it had been all night.\n\nStephie's hand went to it, and she kissed me again while she stroked it. I moaned into her mouth as her touch, the smell of her perfume and the loud music swept me away.\n\nThey maneuvered me into the very center of the dance floor, with colored lights flashing on me.\n\n\"Gather round girls,\" Nancy yelled over the music. \"Our handsome new man is aching to be sucked.\"\n\nShe had no sooner finished saying it when a sweet little red-head I had noticed earlier was in front of me. She licked my chest and sucked my nipples as her hands played with my cock. After a sexy glance into my eyes she descended and slipped me into her warm mouth.\n\n\"Don't you dare cum, or you'll be in even bigger trouble,\" Nancy said.\n\n\"I'm supposed to be able to control it?\" I said.\n\nIt wasn't easy to speak coherently, with the red-head doing me the way she was. My knees were getting weak and Nancy sensed it, so she signaled my new favorite blow-job artist to move on.\n\nAnother woman, a heavy-set but pretty blonde took her place. There was just enough down time between women to take the edge off, but I had a feeling I was going to be in 'even bigger trouble' before I got off the dance floor.",
        "The blonde took me deep in her throat, with her nose against my belly, and when she pulled off she looked up at me, her eyes seeming to say 'oh yeah, big girls don't mess around baby'. I was dying to grab her pretty head and pull her back onto me, but she teased me, nibbling on the tip of my hard rod with her perfect white teeth. Finally she sucked me in, her tongue and throat muscles massaging me like a pro.\n\nShe moved off and a thin, black haired girl took her place, and then another blonde, and a short, pixie haired brunette. It was the most astonishing, dreamlike experience of my life, and I was hoping I'd never wake up.\n\nComing so close to an orgasm with the red-head seemed to temper my response, and I was somehow able to hang on, savoring the extraordinary variety of techniques. Most of them gave me a kiss when they were through, and that was almost as intense as having my cock in their mouths. I found myself longing for the next event at the magic mansion, and the next, so I could sample more of these delicious women's charms.\n\nA dark skinned beauty with Asian eyes was fluttering her long tongue on the underside of my cock when Nancy decided a change of scenery was in order. A final eruption into the exotic girl's mouth would have been heavenly, but I was led away leaving her on her knees.\n\nNancy and Stephie led me past the cute bartender, who smiled and shook her head at my predicament, and across the connecting bridge into the main house. There was wild screaming coming from one of the closed doors.\n\n\"Is that one of your girls?\" Nancy asked. I nodded.\n\nThey opened the door and led me in. The dimly lit room smelled of sex and sweat, and after a quick glance from the men in the room to see who we were the action continued. The four men who were dancing with Summer and Marcy earlier were all naked, and my girls were in the throws of their first gang-bang. It was a blisteringly hot scene, made more so by the warm temperature and pungent aroma in the room.\n\n\"Stand here,\" Nancy said. \"You get to watch.\"\n\nMarcy was bouncing on a thick bellied man with a long cock and had a short, fat cock in her mouth. Her eyes were rolling and fluttering, and her sweet moans were clear to hear through the sexual chorus in the room.\n\nSummer was on her back, legs in the air, being fucked by Nancy's husband. Her head hung over the side of the bed and a thin man with his cock in his hand was fucking her mouth. Gurgling sounds I hadn't heard her make before were escaping her throat, along with a long stream of sticky saliva that reached all the way to the carpet. Nancy's husband picked up the pace and Summer screamed, the shrieking cry oozing out past the fleshy muffle in her mouth. My girls had become sexual dynamos in the space of just a few short weeks, and the way they absorbed and enjoyed the carnal pleasures of those four men was nothing short of breathtaking.\n\nNancy and Stephie stripped off what was left of their clothing and jumped into the fray. The girls went right for their tits, and the two women were quickly lost in the ecstasy. It was only a few moments before each had a cock in them.\n\nI leaned against the wall with uncomfortable arms and an achingly stiff cock, watching the eight of them loose themselves completely in carnal bliss. The men shifted positions every once in a while, sampling all the feminine pleasures round-robin style, and all eight of the participants were glistening with sweat. Every once in a while a gusher of semen would punctuate the groaning, moaning chorus.\n\nThe room was hot in more ways than one. All those active, sweaty bodies had driven the temperature up, and I was sweating just standing still. My mouth was dry from the alcohol, and my balls were aching for release. I shifted uncomfortably, sweat dripping down my chest as I leaned against the wall. Nancy happened to see me at a moment when she didn't have a cock in her.\n\n\"Poor boy,\" she said in a condescending tone.\n\nShe fumbled in a bedside drawer and pulled out something black. As she walked to me I could see it was a blindfold, and she put it on me.\n\n\"Maybe it'll be better if you don't see,\" she said. The room blacked out and I felt her mouth on my aching cock.\n\n\"Oh God yes!\" I moaned, and no sooner had she started when she stopped and I heard her walk away.\n\nAfter what seemed like hours the intense orgy wound down. After pleading for a bathroom break I was led to the toilet, placed on the seat, and I let out a groan to rival the men in the orgy as I drained my throbbing, aching cock.\n\nNancy led me back out into the bedroom, still blindfolded, and Summer hugged me and kissed me.\n\n\"That must have been some bet you lost,\" she laughed. \"Did you learn your lesson?\"\n\n\"Never make deals at the Swingtime Social Club,\" I said with a feeble smile.\n\n\"Oh...I feel bad Alan,\" Summer said, holding her naked, sweaty body tight against me. \"You want me to get you out of this?\"\n\n\"No thanks sweetie, I'm gonna ride it out,\" I said. \"I'm hoping there'll be a pay-off at some point. You guys okay? You having fun?\"\n\n\"So much fun,\" Summer cooed, and she squeezed me tight. \"I'm a natural born slut I guess. I always kinda suspected.\"\n\n\"Where's Marcy. Is she still here?\" I said, turning my head like I could see.\n\n\"I'm right here silly,\" she said from the other side of me, and she took hold of my arm.\n\n\"You okay sweetheart? You kinda got into the big stuff right off the bat,\" I said, and she kissed me on the cheek.\n\n\"I'm better than okay. Guess I'm a natural born slut too. I'd move in here if they'd let me,\" she laughed.\n\n\"Time for the main event,\" Nancy said.\n\n\"Uh oh,\" Summer said. \"You're not gonna hurt him!\"\n\n\"No no,\" Nancy said. \"He'll like it, believe me. All the guys'll think he's a lucky son-of-a-bitch when this nights over.\"\n\nI didn't say anything, but my heart was racing as they led me out into the hallway, wondering what was to come.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"Oh my God, it's gone from bad to worse,\" Misty the bartender said said when she saw me being led toward her, handcuffed and blindfolded. At least my cock wasn't pointing at her, but it was plenty chubby and my balls ached. \"You must be a bad boy to get into so much trouble,\" she cooed. \"I had no idea.\"\n\n\"I had no idea either,\" I said with a smile, trying to look in her direction through the blindfold's blackness. \"Do they indoctrinate all the new guys this way?\"\n\n\"Only the special ones,\" Misty said. I could tell she was smiling when she said it, and I blushed.\n\n\"Hey, no flirting allowed,\" Nancy said. \"You've got work to do mister. It's eleven o'clock ya know.\"\n\n\"Oh no,\" I said quietly, remembering what Randy had said about the 'exhibitions at eleven' thing and the dance floor bed.\n\n\"So, Misty's gone, what's with the blushing?\" Nancy asked. \"You like her?\"\n\n\"Everybody's got a 'type', you know? She's kinda the girl of my dreams. And she's so sweet.\"\n\n\"The girl of your dreams huh? She's a stripper and a topless bartender. Is that what you dream of?\"\n\n\"No, that's got nothing to to with anything. It's her eyes. Her smile. She's the most beautiful woman I've ever seen.\"\n\n\"She's like twenty-five Alan,\" Nancy said.\n\n\"Yeah, what's your point?\" I said with a smile.\n\n\"That's like half your age, isn't it?\"\n\n\"Yeah, but, she's got poise and maturity, and me, I'm about thirty-five maybe. My drivers license doesn't say it any more, but that's what I feel like.\"\n\n\"So what else do you like about her?\"\n\n\"Her voice. The way the words sort of float out of her mouth, real soft, and the corners of her mouth curl up a little bit...\"\n\nNancy took off my blindfold and Misty was standing there, starring into my eyes. She had a look on her face I hadn't seen before, like she was lost in a happy thought. I didn't know what to say, so I just stood there, naked and handcuffed, looking deep into her eyes.\n\n\"I had no idea you were such a nice guy Alan,\" Nancy said as she removed the handcuffs. \"I mean I sorta had a feeling, but, Jesus, where were you when I was single. Enjoy the rest of the night sweetheart,\" she said, and she kissed me on the cheek and walked away.\n\n\"Wow, you really got to her,\" Stephie said.\n\nSummer and Marcy walked in from the main house, topless but wearing panties, their sweaty hair freshly combed out.\n\n\"Alan! You outta the dog house?\" Summer said as she approached.\n\n\"Yeah, I guess I'm off the hook,\" I said, glancing at Misty who was serving drinks down at the other end of the bar.\n\n\"He said the magic words and Nancy set him free,\" Stephie said. \"I'm gonna go find her. I'm so glad you guys are part of the club. We'll be seeing lots of each other I hope.\"\n\nStephie walked away and left me with my girls.\n\n\"Are you guys all right?\" I said. \"That was pretty intense in there.\"\n\n\"Yeah, it was awesome!\" Summer said. Marcy's smiling, twinkling eyes told me she felt the same. \"I wish you coulda joined in, that woulda made it perfect.\"\n\n\"Next time sweetie,\" I said.\n\nSummer looked around. \"You know you're the only naked man in here?\" she said.\n\n\"No, I hadn't really had a chance to figure that out yet,\" I said as I looked around. \"The last few hours have been a bit of a whirlwind. I'm gonna go put something on.\"\n\n\"Just your undies Alan,\" Summer said as I walked toward the pile of clothes by the dance floor.\n\nWhen I got back Summer and Marcy were talking to Misty, who went back to work taking a drink order down the bar when I approached.\n\n\"You're making quite an impression around here mister,\" Summer said with a sly smile.\n\n\"I could say the same about you two. I've got it on good authority you've cause quite a stir amongst the men.\"\n\n\"Really?\" Summer said. \"I've waited my whole life to cause a stir! God Alan, this place is like magical isn't it? Thanks for bringing me here. I wouldn't have come without you ya know.\"\n\nSummer took hold of my arm and kissed me on the cheek.\n\n\"Now you tell me,\" I said. \"Jesus Summer, you've got a way of getting me in deep trouble.\"\n\n\"Whaddya mean? You don't like it here?\" she said.\n\n\"No, it's not that. Your fathers gonna kill me you know, and not just for this.\"\n\n\"Don't worry. He might disown me, but he won't kill you.\"\n\nI watched Misty's bare tits jiggle as she shook up a cocktail, and Summer's mother's sexy smile flashed across my memory. Summer was on my arm, topless and looking impossibly sexy, and Marcy was leaning back against the bar, her beautiful young tits on display to the roomful of partiers. I couldn't quite believe it all\u2014my boring fifty-year-old life had suddenly exploded in a colorful flash of amazing women and sex. Misty saw me looking at her and came back to our end of the bar when she finished.\n\n\"You want me honey?\" she said to me.\n\nSlow breaking smiles crossed both of our faces.\n\n\"Looks like you two need some alone time,\" Summer said.\n\nShe pinched my arm as she let go, and she and Marcy walked over to the lounge area where some of the guys that had just fucked them were hanging out.\n\n\"I could use a drink Misty,\" I said. \"Are you allowed to have one?\"\n\n\"Sure, Randy and Donna don't mind.\"\n\n\"Donna? Who's that?\"\n\n\"You haven't met her yet? That's Randy's wife. There she is, the blonde in the fringy thing.\" Misty said, gesturing toward the dance floor.\n\nThe blonde in the fringy thing was dancing up a storm, with a huge radiant smile on her face. A tall woman with voluptuous curves, the 'fringy thing' was a black bra with black fringe that hung to her thigh, with string bikini type black panties underneath. The fringe was shaking and flying as she danced, letting the colored lights play across her shimmying torso.\n\n\"Wow,\" I said.\n\nMisty handed me my drink and clicked glasses with me.\n\n\"Here's to new friends,\" she said, and we each took a sip. \"You know, you're a bit of an oddity around here. Most everybody is a 'couple', either married or living together.\"\n\n\"Yeah, well they don't let single guys in. Summer got us in. She called Randy. I don't think he could resist having two eighteen-year-old girls join up. That seems to be a rarity too.\"\n\n\"You should hear everybody talking about you guys. It's pretty funny. So they're only eighteen? Do you ever worry about them.\"\n\n\"I worry about corrupting them, if that's what you mean. Yeah, all the time. This all happened in kind of a weird way that sorta snuck up on me. Summer said she was gonna come on her own, which I didn't like the idea of, you know? Anyway, here we are. I got a blow-job from six women on the dance floor, and Summer and Marcy got gang-banged by four older guys in a sweaty bedroom. It's fuckin' crazy,\" I said, shaking my head.\n\nMisty went to take care of some customers while I sipped my drink and surveyed the scene. The couches in the lounge were full of people in various states of dress. Summer and Marcy were both sitting on men's laps, laughing and looking very relaxed and happy. The dance floor wasn't full, but it was full of energy, with a trippy techno beat keeping things moving.\n\n\"I'm not twenty-five you know,\" Misty said when she came back. \"Don't tell anyone, but I just turned thirty.\"\n\n\"Randy tells me you're a student?\"\n\n\"Yeah. He tells every one I'm a stripper working my way through school, but I haven't danced in, oh my gosh, eight years I guess. That's where he met me though, and I guess it sounds sexier to have a stripper working here. I tend bar downtown, and I'm a law student up at the university.\"\n\n\"Nice! Good for you. I'm just a boring computer systems designer at Crouchnee Corporation. A cog in the wheel, although I do a lot of work from home these days.\n\n\"No way! I did an internship there last year! They've got a big legal department.\"\n\n\"Wow! Thankfully I haven't had to deal with legal over there. That's a good thing I guess, but I wouldn't have minded running into you in the hall way,\" I said with a smile.\n\n\"EXHIBITIONS...AT ELEVEN...\" a loud, dramatic voice said over the dance floor speakers, and the music continued on. Small red and yellow light spotlights turned on, bathing the white leather bed at the edge of the dance floor with light.\n\n\"This gets pretty wild sometimes,\" Misty said.\n\n\"You've got the best seat in the house,\" I said.\n\n\"Not always. Sometimes people gather around. It's like gladiator sex or something. Fuckin' hot though, I gotta say.\"\n\n\"You ever wish you were a member instead of an employee?\"\n\n\"Oh yeah,\" she said with a sexy look in her eye.\n\nThe bar suddenly got very busy, and I was tempted to join the girls and their new friends, but something kept me near Misty.\n\nThe first brave souls headed to the exhibition bed\u2014the sweet little redhead that had my cock in her mouth on the dance floor, and a man who may or may not have been hers. You never know at a place like Swingtime.\n\nShe turned her back to him and he unzipped her little dress and slipped it down her body. She had a dark, freckly tan, and the red and yellow light lit her hair like it was on fire. She was naked under her dress, and turned towards the man giving me a good look at her natural looking tits and big pink nipples. The man went to his knees and licked her well-trimmed pussy, and her eyes closed as she ran her fingers through his short hair.\n\nWhen Summer told me to put on just my 'undies' I didn't think of the lack of coverage of the thin silk boxer shorts. Unfortunately the sexy little redhead getting her pussy licked had an effect on me, and I quickly found myself embarrassed, holding my hard cock down with my hand.\n\nThe redhead pulled the man to his feet, unbuttoned his shirt, let it fall down his muscular arms to the floor, and lowered his pants to his ankles. She pushed him down on the white leather bed and mounted him cowgirl style. She was facing the bar as she rode him, scanning the crowd when her eyes stopped on me. A shot of adrenaline hit me, standing nearly naked holding down a raging, aching hard-on. Her hand went up and her slender finger curled, beckoning me. I was suddenly terrified as heads started looking my way.\n\n\"You're not gonna say no to that are ya? She's hot,\" the woman next to me said.\n\nI was hit with a strange mix of feelings\u2014desire for the incredible woman who wanted me, a need to finally empty my aching balls, and a feeling of not wanting to do anything in front of Misty. Jesus Christ, I was falling for the girl.\n\n\"I'd do it if I was you,\" I heard Misty's sweet, soft voice say.\n\nI turned to her with what I'm sure was an odd look on my face, and she looked me in the eyes and put her lips together, kissing the air between us. It was like it happened in slow motion, all the noise and throbbing music reduced to a buzzing hum.\n\nI turned back to the redhead, who was still looking at me, thoroughly enjoying her slow ride. Her eyes closed slowly and opened again, and her lips went together that way Misty's had. When her mouth slowly opened and her tongue moistened her lips it was all I could take. I walked across the floor as if in a daze, dropped my boxers to the floor, stepped up onto the bed and slipped my aching, throbbing cock into heaven.\n\nThe deep groan I let out as her mouth engulfed me brought the crowd into it, with some \"fuck yeah's\" and other encouragement.\n\n\"You go Alan!\" I heard Summer say.\n\nI had no idea where she was. I couldn't make heads or tails of anything at that point, so acute was my need for sexual release. The buzzing hum overtook my head again and the bright lights beaming down on me played tricks with my spinning, dizzy brain. The redhead had her hands on my ass and was taking me deep in her throat as she rode the man under her. The pace of their fucking started to pick up and the magnificent blow-job she was giving me plateaued into the most amazing feeling of 'riding the big wave' I've ever experienced. I have no idea how my legs stayed under me\u2014my whole body was as numb as it was alive, and I'm sure the look on my face was a comical as it was erotic. I was lost as never before when the redhead's screams started vibrating into me and the two of us came together, my pumping, throbbing, aching cock muffling her shriek. She took half of my gushing load in her mouth and half on her face and neck, my grunting caveman yell drowning out the buzz in my head as I spattered her beautiful freckles with my seed.\n\nApplause and whistling cheers seeped into my spinning brain as I opened my eyes to see the mess I had made of her sexy, smiling face.\n\n\"Fuck yeah!\" she said quietly, looking up at me with the most seductive eyes I'd ever seen.\n\nI looked around, trying to gather my wits, and saw all the faces surrounding us, some smiling, some nodding. Gladiator sex. Holy shit.\n\nI put on my undies and walked back to the bar, still dazed and oblivious to the comments coming from the smiling mouths I passed. Misty put a fresh drink in front of me and smiled. She looked like she wanted to say something, but she didn't, just a sweet smile and a knowing look before walking away to take care of a customer. I felt the warmth of a body close to me, and a soft hand took mine.\n\n\"Did I ruin my chances with you, being such a bad girl?\" Nancy said.\n\nHer short auburn hair shined in the dim light, and the nice nipples on her bare chest were as hard as I'd seen them. Her eyes were slightly sad and longing, like she was hoping to atone for her sins. I suddenly didn't have a single thought in my head other than fucking her, sweet and slow and hard and nasty. I held her hand tight and led her out of the noisy room into the quiet hall in the main house which seemed mostly deserted. We ducked into the first bedroom and I shut the door.\n\nNeither of us said a word as we took off what little clothing we had on. The room was warm, smelled of cheap perfume and the bed was rumpled. We tumbled down next to a wedge shaped fuck pillow somebody had used. Our naked bodies intertwined. We kissed. It was quite possibly the kiss of a lifetime, my lifetime anyway. I'd never felt such carnal desire pass out of and into my lips before. My cock was somehow rock hard again, and without even knowing how it happened I was deep inside Nancy. She rolled us on my back and I pumped up into her, our lips still locked in a passionate kiss. ",
        "Her pussy gripped me like a hot, wet hand, squeezing and energizing me with every thrust. Our lips finally separated and our moans were unmuffled, filling the redolent air with sexual song.\n\n\"Fuck me Alan!...Fuck me!\" Nancy said, her voice soft yet urgent.\n\nI pumped up into her, my hips almost bouncing off the bed as she rose up with her hands on my chest. She looked down at me, her eyes big, flaring with dark fire, her moaning mouth open.\n\n\"Oh fuck yeah!\" she yelled as the fucking reached a crescendo.\n\nNever before had I held an intense thrusting for so long. My cock felt like it was about to melt when Nancy came, her spastic body twitching as she bellowed a crying scream. My own orgasm hit like pure heat, like my blood suddenly boiled. My hips went wild, bucking without thought, and Nancy's scream morphed into a devilish groan. Without knowing how, why or when, it all came to a stop, our bodies alive and electric as our boiling blood cooled. We lay together, intertwined, as the quiet took over.\n\n\"I'm sorry, about earlier I mean,\" she said. \"I don't know what got into me\"\n\n\"It's okay. It was fun in a weird kinda way. You might have to pay the price though, and let me fuck you every time I see you.\"\n\n\"Oh God yes,\" she said. She crawled off of me onto the wedge pillow, her legs wide apart, opening her pussy and ass to me. \"Like now you mean?\"\n\nMy mouth was drawn to the slippery wet heat of her womanly core. I lapped up her slick juice and spread it across her asshole with my tongue. She groaned as my tongue swirled and twirled in the steaming wetness, and my hands caressed her smooth thighs. My cock surprised the hell out of me by readying itself for action. I lined it up with the soft pink opening and entered, slowly, savoring every inch of her welcoming heat. I bottomed, balls deep, feeling like I was swelling even bigger inside her.\n\n\"Oooh ffuuuuck!\" she said slowly and quietly, and I felt exactly the same. After a long, intensely sexual night, it felt like pure heaven to be deep inside her in that way, in the quiet of a warm room, with my hands on her soft, womanly hips.\n\n\"Yeah baby,\" she said quietly, looking back over her shoulder. \"That feels so good.\"\n\nMy groan told her how I felt, and she rocked back slowly, fucking my hardness as I held still and let the sensation wash over me. I held my hands still too, letting her soft hips brush against my fingertips.\n\n\"Oh Nancy! Fuck!\" I said quietly as she fucked me, her pussy muscles squeezing and contracting. \"You've got a magic pussy baby.\"\n\n\"You like me Alan?\" she said seductively, smiling back at me over her shoulder.\n\n\"Fffuuucck!\" was all I could answer.\n\n\"I thought maybe you only like that eighteen-year-old pussy,\" she purred. \"Us middle-aged girls aren't so bad, huh?\"\n\nI could only groan my agreement, and she smiled. I was starting to drip with sweat, and Nancy's back was glistening. She raised up on her arms and arched her back. I started a slow thrust into her and leaned forward, running my hands under her smooth belly and under her hanging tits. I kissed the salty sweat on her back as I held them, soft and warm in my hands.\n\n\"God I love long cocks!\" she moaned.\n\nI pulled nearly all the way out and gave her my full stroke with each slow thrust, filling her full over, and over, and over again. I was like an old steam engine train coming slowly up to speed, the big piston fueled by a hot fire. I didn't want to let go of her tits, but as my engine got rolling I rose up and took hold of her hips again.\n\nHaving cum twice in the last hour I was in for the long haul, fucking at a nice even pace as the sweat rolled down my back. Nancy was lost in that meditative glow that happens when you're in the middle of a long, slow build to an orgasm. The bed was creaking rhythmically and her moans were soft and beautiful. She dropped back down onto the cushion, her head sideways on the rumpled sheet, her mouth curled into a delicious little smile. Her whole body glistened and rivulets of sweat rolled down her back towards her shoulders.\n\nI'm pretty sure it was the longest fuck of my life. It went on and on, with the most amazing slow build inside both of us. Nancy's soft vocalizations and her subtle facial expressions told me were she was as the intensity slowly built inside her. My own body was climbing too, my blood reaching the critical phase, right before the boil. I fucked on, reaching an otherworldly place where I seemed to float.\n\n\"Oh my God\" Nancy whispered. \"Oh my God...\"\n\nShe was nearing the crest, and her relaxed body started to tense as her breathing changed.\n\n\"Oh my God,\" she whispered. \"Oh my God...\"\n\nThe breath started squeezing out of her through a clenched throat.\n\n\"Oh my God,\" she whispered at a higher pitch. \"Oh fuck yeah!\"\n\nHer body started bucking back into me, just a little at first, and then a full wild bucking as her insides let loose and her mind unraveled.\n\n\"Fuck! Oh FUCK! she shrieked, and her body trembled and spasmed like I hadn't seen before. I came again in the middle of it, my own body spasming uncontrollably.\n\n\"Oooh ffuuuck!\" Nancy said softly as her body quieted down. \"Fffuuuck!\n\nI was still pumping slowly into her, my body seeming to have a mind of its own. My brain certainly wasn't doing the thinking, it was lost in pure bliss.\n\nI found myself laying on top of her, my hands underneath her holding her soft tits, my head on her head, my cock slowly softening deep inside her.\n\n\"That, my lover man,\" Nancy said, \"was the best orgasm I've ever had in my life. I've never had a guy hold so steady for so long. That's just what a girl needs.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"Hey, that's not fair,\" Stephie said with a pout when she saw the satisfied look on Nancy's face as we walked back into the main room. \"You said we'd play with him together.\"\n\n\"Sorry kiddo,\" Nancy said sheepishly.\n\nThe music was throbbing and Summer ran over to me, still dressed in her little panties.\n\n\"You missed it! Marcy got fucked on the white bed, in front of everybody. I told her I didn't think she'd do it, so she did. It was the biggest cock I've ever seen!\"\n\n\"She's a wild little thing,\" Stephie said. \"It was quite a show.\"\n\n\"Oh jeeze, what have I done to you two,\" I said, shaking my head. I couldn't help but smile though.\n\nI looked around and saw her, naked, sucking a guy's cock on one of the couches.\n\n\"I think maybe we should go,\" I said. \"It's been a long night. A big night for everybody.\"\n\nSummer surprised me by agreeing, and she went to gather up Marcy. I found my clothes by the dance floor, and it was interesting how odd it felt to walk around the place fully clothed for a change. I went to the bar for a glass of water while the girls got dressed.\n\nMisty brought it to me, and then came back with a piece of paper with her phone number on it.\n\n\"Call me?\" she smiled.\n\n\"I'm old you know,\" I said with a smirk.\n\n\"No you're not,\" she said, and she gave me one of those air kisses before walking over to a customer.\n\n\"She likes you,\" Summer said as she took my arm.\n\n\"Damned if I know why,\" I said.\n\n\"The same reason me and Marcy and Mom and every other girl likes you,\" she said, and she got up on her tip-toes and kissed me on the cheek.\n\n\"You driving?\" I asked, and I handed her my keys. \"Thanks Summer,\" I said as we descended the big staircase on our way out, \"for reminding me I'm still alive. Us old guys need reminding sometimes. You came along just in time.\"\n\n\"Glad to help Alan,\" she said with a smile. \"Glad to help.\""
    ],
    "authorname": "riverboy",
    "tags": [
        "mature",
        "younger woman",
        "older man",
        "swingers",
        "teen",
        "orgy",
        "sex club"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/summer-skin-ch-03"
}