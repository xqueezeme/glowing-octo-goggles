{
    "title": "Pixels of Love",
    "pages": [
        "Authors note: My thanks to PrivatesFirstClass for comments on earlier drafts of this story that improved it greatly. Now, as before, please vote your score and let me know how well you liked this story.\n\n \n\nPixels of Love\n\nBy Rachel Anne Wallace\n\nAnnoyed, I stopped typing\u2014Splat! That was the third time I thought I had heard it, then silence. Thinking I was imaging hearing things, I resumed my train of thought\u2014Splat! It came again, no doubt this time it was real. I sighed\u2014what now?\n\nIt had been an uneventful fall Saturday morning. My older sister had gone off to work, the house was quiet after I turned the TV off\u2014having grown tired of the morning news programs that seemed only to offer bad news when it came to the current political situation. I had planned a morning walk, but the gloomy gray skies, intermittent drizzle, and gusts of wind dissuaded me. I had picked up the hot cup of coffee and considered my options. I wasn't in the mood for companionship\u2014it seemed a terrible waste of a Saturday when I didn't have to work. All due to the nasty weather outside.\n\nI had decided to work downstairs in my office for a while on the family genealogy. There were pictures to scan I had recently received from my aunt Lynda. I had barely gotten started when I first heard a muffled, dripping sound\u2014like water hitting something hard. I couldn't imagine what it could be as the bathroom was located well away from my office, and put it down to the sometimes strange noises that entered the room from outside. After several minutes more I was certain the noise was inside the house, not outside.\n\nFinally, I wandered into the recreation room after turning on the lights and listened. The intermittent drips spaced about twenty seconds apart. It took several minutes for me to locate the sound in the storage closet on the far wall. I opened the door, turned on the light, and waited. Splat, went the next drop. I stepped to the shelving unit on the wall and looked up to see several cardboard boxes on the top shelf. Splat! Damn! There was a wet spot showing on the edge of the top shelf.\n\nInspecting the ceiling of the open wooden floor joists with exposed electrical wiring, and copper plumbing, I traced a water line that ran over the shelving unit to the outside wall. I was disgusted as the next drop hit something hard just above my head. I got the step stool out of the recreation room, setting it up so I could reach the top shelf to remove the cardboard boxes. Splat! I sputtered as I was just in time to have the water splash and splatter onto the shelf-- some wetting my face, so much for my makeup.\n\nThere was just enough light to see a solder joint for the sillcock glistening as another large drop of water was forming, ready to drop. I was just about to step down when it hit\u2014splat, my face getting another dose. I sighed\u2014something I had to have to deal with immediately.\n\nDisgusted, I dejectedly walked upstairs, found an empty plastic cottage cheese container and returned downstairs, placing it on the shelf under the solder joint while moving the dry box farther away. I was holding the wet cardboard box under my arm as I stepped down onto the floor.\n\nI glanced at the box, wondering where I should put it when I noticed it contained my things from college, including my picture album. I hadn't looked at it in years. I decided to take it back to my office, putting it down on my small table\u2014that is after clearing enough space and placing a towel down for it. Way too much clutter, I muttered to myself. The water had fallen into the open top and had slowly soaked into the contents. The feel of the slightly damp cardboard as it sagged slightly felt disgusting against my bare skin.\n\nI reached for my phone after looking at the address book on my computer and found the name of our friendly plumber. He was still at his shop just getting ready to leave to start his day when I called. I explained to him what the problem was, he laughed lightly, saying he was going to pass right by the house and would stop and get to it before it got any worse sometime today. I thanked him and hung up. Sometimes it pays to have a cousin who's in the trades.\n\nI got up from my chair and began to inspect the contents of the dampened box. I was most concerned with the photo album, hoping it hadn't gotten too wet. I pulled it out, noticing some of the pages had their edges soaked. I was sure the water had wicked up into the center of the pages.\n\nThen, I felt a tinge of sadness that quickly grew to deep sorrow as I remembered-- my only photograph of Simon was in that album. I slowly opened the cover of the album and leafed through the damp pages one by one until I found the image of a handsome, bearded, long-haired man wearing a broad smile. The photograph was from the very last roll of black and white film I had shot in my thirty-five-millimeter single-lens reflex camera. It was the last picture taken of Simon, less than half an hour before his death. I felt my eyes start to water, then a flood of tears as my emotions took hold. I had to stop and wipe my eyes as I sat down in my chair.\n\nSimon had dark brown hair that fell to his shoulders, a full beard, and a mustache that framed nicely formed lips that opened to show beautifully white, well-ordered teeth. He wasn't thin, but he wasn't burly either, something in between with firm muscles, his chest covered in curly hair. At five-eight, he was a few inches taller than me, a height that made him a dream to dance with. You would have thought that was enough for any man, but his personality made him bigger, stronger, in my eyes. I felt my sadness deepen.\n\nI dried my eyes after a few minutes, my resolve to be stronger taking hold. I slowly removed the eight by ten-inch photograph, laying it face up on a double-layer of paper towels to remove the excess water. I quickly went to find my small electric fan, placed a weight on each corner of the photograph and turned the fan on low, then watched as it lifted off the towel a little as the air flowed beneath it.\n\nI sat down in my chair and thought back two years ago, to the day he saved a teen-aged girl and her mother from drowning after they tipped their canoe into the cold, rushing water. It had all happened so quickly, Simon had jumped in without hesitation as he saw the girl being tugged under. He had been successful in getting to her as she barely clung to a low tree trunk over the swiftly running water. He was able to get her to the opposite shore and yelled to me to call for help.\n\nThen he went into the water again, this time farther downstream to reach the girl's mother. She was screaming for help from another downed tree, her life jacket snagged, the water over-topping her head from time to time. I remembered watching as he reached her, pulled her loose, and pushed her towards shore as I spoke with 911. Then, he disappeared behind a clump of streamside vegetation. After about two minutes the woman staggered, shivering towards me on the trail; Simon wasn't following behind her. It was then I felt fear\u2014he should have been with her.\n\nI felt myself start to choke up. Why did Simon have to do it? He always seemed to be helping someone-- replacing a flat tire, helping to move furniture, or visiting a friend in the hospital after taking care of their dog. It was always something.\n\nThe events of that day played out in my mind again and again, even though I tried to push them away. We had been talking about our future together. I remembered him looking at me with a smile after I suggested two children would be about right.\n\n\"Two! I was sure you would want at least three. After all, you just get comfortable with two and need to make life more interesting with a third,\" as he playfully bumped me with his hip as we walked. It was several seconds later when we heard a loud noise, a shriek, and a 'thunk' as a canoe hit a rock in the river.\n\nI had blamed him for leaving me behind. He knew I loved him. Simon told me that after we kissed just minutes before he jumped into the water. The previous day we had enjoyed the warm May weather-- the sunshine, the myriad green tints of the emerging lush leaves of shrubs and trees. We thrilled at the brilliant white trilliums, the redbud blossoms along the trail as we hiked hand in hand, kissing and hugging, our bodies pressed against one another. I could almost feel the warmth of his firm embrace even now. I pushed the thought away with a sniffle.\n\nWhy? I had asked myself that question so many times since they found his body almost an hour later about a mile downstream. I had sat in his car, waiting for him. But he never came back, at least, not alive. When they told me they had found him, I went numb. I was still numb when my parents came to pick me up an hour later. The engagement ring he had given me the night before on my finger glinting in the sunlight. The promise of a life together vanished in a matter of minutes. The words\u2014\"Marian Kaye Butterfield, will you marry me?\" came back to me again as I sat there.\n\nThe night before in the motel had been among the happiest in my entire life. His passion for me on full display, Simon had never been so alive, so loving in the sweet murmurs he uttered into my ear as he lay on top of me as we made love. Flesh on flesh, our bodies merged into one as he gently rocked me back and forth. I remembered the exquisite pleasures of his touch. I felt blessed as his hands moved over the curves of my body, the surge of heat as he took me over the top as I arched up beneath him-- each time asking me if it had been good enough\u2014 knowing by my soft moans and smile that it had been.\n\nI pulled my thoughts away. My heart heavy with palpable pain. I looked at the damaged photograph as it slowly dried, the image slightly marred. It was all I had left of Simon that was tangible. The only other place he truly lived was in my mind and heart.\n\nHis parents and sister, like me, had held him close. I had been the only other person who loved him more. His had been a tough life, his family poor, but he had an attitude that love could conquer all. He worked hard for the money to pay for his college education and made excellent grades-- always willing to help others who struggled with their course work.\n\nThat was where I met him\u2014he had offered to help me with my College Algebra, I had accepted with a timid nod. I soon found he had an exuberance and love of life that was infectious-- it was what drew me to him at first, then bound me to him after just a few dates. He treated me like a princess- Simon always whispered he couldn't be a prince unless he was with me\u2014 always with an impish grin. I loved him for that grin. Even now, I felt a smile grow.\n\nHalf an hour later, I took the almost dry photograph and placed it on the platen of my scanner, my mood starting to lighten. I decided I would not risk losing Simon yet again\u2014even if were but his image. I looked at his smile. He hadn't expected me to take his picture-- it had been spontaneous on my part. After I took the picture he walked to me and gave me a kiss saying I was the reason he could smile that way -- it made him feel special to know I loved him.\n\nThe thought warmed me now. Simon made me feel special, even now. I had been shy, unsure at first what he saw in a girl like me. Intelligent, yes, but ill at ease with a man. He had changed me with his gentle ways from the very first study session together. I smiled to myself now-- remembering how much I had blushed as he sat next to me, a glowing red thrill that rushed through my body each time his hand touched mine as we worked a problem.\n\nI found myself chuckling, I remembered after our third study session together as he suggested that soon I would be able to help him with his math assignments. He always had a way to make me feel more confident. He told me two sessions later that he was happiest when he was with me. He was pleased to share our relationship with others as we went to parties together, telling his friends I was making him a better man.\n\nNow, as I moved the mouse over another spot on the digitized photograph, I felt better knowing I had made him happy. Then a thought occurred to me\u2014I was the only one who had ever seen this photograph. Even my parents had never seen this image-- I had been so devastated following his funeral I had hidden it away to avoid the pain. His death had devastated me beyond belief.\n\nNow, as I looked at the image, I knew he would never want me to languish in sorrow over his decision to save the lives of others. I realized for the first time-- it had been a blessing to know him, to love him, and to be loved by him. I realized I had in my hands a way to make others happy\u2014I would restore his image and share it with those who loved him. He was not just mine, Simon was theirs too. I felt a rush of warm optimism infuse me as I clicked, matching adjacent tones of one pixel with another. In a sense, I was resurrecting the love of my life.\n\nI worked on the photograph using Photoshop, working on individual pixels to make the corrections, each click making him come alive in my mind. Three hours later, after saving a series of edits, I printed out a five by ten-inch print and set it down on the table. Simon's smile looked back at me, I couldn't help but remember the good times we had shared. If seeing his image could make me feel this good after the pain his loss had caused me, Simon could do the same for others who knew him too. I printed three more copies, this time at eight by ten inches, then drove to a frame shop downtown, a smile on my face.\n\nThe next day I picked up the matted and framed photographs so I could deliver them. I had made calls to his parents and to his sister, all of whom lived nearby. They were gracious in welcoming me into their homes. I presented his picture to them and watched as they grew smiles and shed a few tears. The hugs and greetings I received warmed me\u2014especially after they told me Simon had told them how happy I had made him in the days before he had proposed to me. I hadn't realized he had told them beforehand of his intentions.\n\nThe remaining framed picture was mine. No longer would Simon be hidden away, a symbol of my sadness and loss, now he was a symbol of promise\u2014of what he wanted for me-- to be happy. That is what he had always told me he wanted\u2014to make me happy.\n\nSimon had come to me in love and healing\u2014 pixels at a time.\n\nEpilogue: Life goes on, as it must for the living. Restoring Simon's image gave me direction my life it had lacked before. I decided to open a business specializing in scanning and restoring damaged and faded photographs of historical significance for individuals working on their family history or a genealogy.\n\nIt was three months later that I accepted a date with a man that had come to me with photographs for me to work on. We hit it off well right from the start, and as we continued to date I again fell in love with a wonderful man. I knew he was the right man for me when he asked about the picture of Simon that hung above my desk. When I told him what had happened, he looked closely at the photograph, saying how sorry he was it had happened, and then told me the girl Simon had saved was his cousin. We married seven months later. The photograph of Simon still hangs in my office at his insistence- saying he realized a piece of my heart would always be Simon's.\n\n \n"
    ],
    "authorname": "rawallace",
    "tags": [
        "loss",
        "love",
        "photographs",
        "proposal"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/pixels-of-love"
}