{
    "title": "A Stringed Instrument Ch. 09",
    "pages": [
        "\"Skip\"/\"Skippy\" is slang for Anglo-Australians, used mostly by Australians of Mediterranean background.\n\nGreek Orthodox Christianity uses the Julian calendar for calculating Easter dates, which means it often falls later than the Western dates.\n\n*\n\nEven with the Redmond Barry deadline behind us, the next few weeks were hectic at work. The market had picked up again after the Christmas lull and my real estate agents were busy: breaking mice, running out the printer ink, spilling coffee into keyboards, all the little annoyances that kept me gainfully employed. I suppose they sold a few houses along the way. I ran around fixing it all and I did it with a smile on my face and a spring in my step, because I was smitten.\n\nEvery night after work Phoebe would call me, once she'd finished the evening's cello practice. We'd talk to one another as new-found lovers do, puppy-like, eager to keep chatting just for the sound of one another's voices: music, or memories of school plays, or favourite books, it didn't really matter as long as we had an excuse to stay on the phone. And there was plenty to talk about; the difference in our ages and upbringing was enough that we each had a different piece of the world to describe, and yet we were close enough to understand one another.\n\nShe'd barely made it back to Sydney before we started planning when we might see one another again. She wasn't going to be able to make it back to Melbourne for a while; the lessons she gave were barely paying the bills, and she'd already raided her electric-cello fund to pay for her February trip.\n\n\"Besides, love, I need to get stuck into practice for a while. I ought to be getting a good five or six hours a day between now and June, and I have to keep my mind on it. No good letting the mind wander while the body plays on autopilot. And as fond as I am of you, you can be very distracting.\"\n\n\"I'll take that as a compliment. Hmm... if you're very good for the next month and do your five hours a day, do you think you could take the Labour Day weekend off? I could fly up and take you somewhere nice? But only if you've been good.\"\n\n\"It's a date.\"\n\nAnd so it was that the Saturday afternoon before Labour Day found us in the Hunter Valley, in the shop at one of the local wineries. It turned out that Phoebe knew a great deal about wines; me, with my eyes closed, I can reliably tell the difference between a red and a white.\n\nPerhaps that's for the best. Somebody had to drive, after all, and it's not like I was really missing out. Where there's wine, there's inevitably good food. So while Phoebe did the tasting and picked out a Verdelho and a Shiraz, I foraged for cheeses, quince paste, olives, and other delicious goodies to make up a picnic for Sunday.\n\nAlthough I could happily have spent all afternoon browsing their wares, we didn't want to dawdle. I'd picked a bad weekend to visit; there were storms forecast, and as we carried the shopping outside, rain was already starting to speckle the windscreen of our little rented hatchback.\n\nAs I started to reverse out of the car park, Phoebe remarked: \"That's the problem with having a rich dad.\"\n\n\"Oh?\"\n\n\"Expensive tastes in wine. Most of the other stuff I can live without, but places like this really test my resolve about not taking his money.\"\n\n\"Heh. Of course, when you think about it, he's still paying for this weekend.\"\n\n\"How \u2014 oh, your wages? That's different, you've earned it, you can spend it how you like. I'm okay with it when it comes through you.\"\n\n\"Like the reindeer and the mushrooms.\"\n\n\"What?\"\n\n\"Oh, in Siberia or somewhere. There's a hallucinogenic mushroom, only it's deadly poisonous to humans. Reindeer eat the mushroom, and when it passes through their kidneys, it filters out the poison but it's still got the hallucinogens. So the local shamans...\" I trailed off, unsure whether I really wanted to finish that explanation.\n\nAfter a short silence, she replied: \"'Vonne... you're weird, you know that? I think it's part of why I love you.\"\n\nI shifted up to fourth and put my hand on her knee. \"Love you too, babe. Now, where am I turning?\"\n\nShe unfolded the map; we'd gone over it that morning and marked the places that looked interesting. \"Right in about five k's, if you want to do the cider place.\"\n\n\"I do, just not sure about the time. We've still got a way to go, and I don't want to be too late at the B&amp;B.\" I'd booked us a room in a bed-and-breakfast; on the website it'd looked rather pretty and not too expensive, and it was only after booking that I'd checked the address and realised it was a good forty kilometres out of our way.\n\n\"Oh? You have plans for the evening?\"\n\nMy hand slid up her thigh. \"I certainly do. Dinner first and then... oh, blast, can you get that?\" My phone had started to ring.\n\nShe picked it up and answered it: \"Hello, Yvonne's phone, Phoebe speaking... yes, yes, we are. Hang on a moment.\" To me: \"It's Keith from... 'Chambers'?\"\n\n\"Yeah, that's the B&amp;B.\"\n\n\"Right, he wants to know what time to expect us.\"\n\n\"Let's see... four-thirty now... say half an hour to the cider place, half an hour there, then another forty k's... let's say around six, six-thirty? That gives us time to drop our things and then look for dinner?\" Chamber's was out in farm country, but it was less than half an hour's drive from a town where we should be able to find something for dinner.\n\n\"Hi Keith, probably around six, six-thirty... sorry, what? Oh.\" Silence for a while, as Keith explained something to her. \"Yes, um, purple please. Thank you! See you then, bye.\"\n\nThen, to me: \"He wanted to know which colour room we wanted.\"\n\n\"Which colour?\"\n\n\"Well... I think he was trying to be tactful. He said they had two rooms to choose from, one painted yellow that faces south and has two single beds, or one painted purple that faces east and has a double.\"\n\n\"Ha. Yep, definitely purple.\"\n\n\"Hope they don't have a problem with that.\"\n\n\"They'd better bloody not, I've already paid the deposit.\"\n\nBy the time we got to the cider house it was beginning to get dark. The sun wasn't down yet but it was hidden behind grey clouds, and there was a nasty-looking mass of black scudding in our direction. I felt it would be safer to get back on the road as soon as possible, so I passed up the opportunity of a tasting. Instead I just picked up a couple of bottles that sounded interesting, and a bag of dried apples for the car, then got back behind the wheel.\n\nAlthough we'd only spent a few minutes inside, the rain had already picked up by the time we got out, and I had to cut my speed. Not long afterwards the rain picked up, increasing to a solid patter that obliged me to slow down and switch the wipers on high. As soon as we got back to the highway, we ran into heavy holiday traffic that slowed us further; what would usually have been a 100 zone was crawling along at 30.\n\nI asked, \"So how's your grandma doing? You haven't mentioned her lately.\"\n\n\"Not great. I mean, she's okay, but the chemo's knocking her around. She's pretty tired and sick, and \u2014 well, you've met her, she's not the sort who likes having to rely on somebody else to wipe her bum. Sounds like poor Hamish is earning his money, she's been pretty rough on him. But Dad said the last lot of scans were looking good, the tumour's shrunk so they're looking to operate in April.\"\n\n\"How are you doing?\"\n\n\"Oh yeah... holding up, love. Yaya's been a bit short with me lately, but I just keep reminding myself that she's having a crappy time and it's not going to be like this forever.\"\n\n\"Indeed.\" I squeezed her hand and she squeezed back. \"And is Leon still on the scene?\"\n\n\"Oh yes. Dad says he's there almost every time he visits. Helping her tidy the house or something. Well, whatever makes her happy \u2014 oh, that doesn't look good.\"\n\n\"Ah, drat.\" We'd just come over a hill, and up ahead of us was a long line of tail-lights going nowhere. As I slowed I switched on the radio in search of information, but after several minutes of band-hopping with no success I gave up and left it tuned to a local rock station in the hope that they might run a traffic report later.\n\nThe cars ahead of us weren't moving at all, so I shifted into neutral and put on the handbrake, and there we sat as the traffic built up behind us. The local station had a good selection of music, and soon enough I found myself tapping my fingers to a classic of '80s Aussie pub rock. It was only when Phoebe started stroking my wrists that I realised I was tapping my fingers on her knee.\n\n\"Well,\" I ventured, \"there are worse people to be stuck in traffic with.\"\n\n\"I could say the same.\" She leant over and kissed me on the cheek, but I caught her by the shoulder and turned for a proper kiss. She smacked her lips: \"Mmm. I've missed that.\"\n\n\"Me too, sweetie. I can see I'm going to be racking up the frequent flyer points.\" I was stroking her leg again, dragging her skirt up to expose her knee.\n\n\"I would love to help you earn those points.\" She leant over again, and her tongue did some very interesting things to my ear. \"How long do you suppose we'll be stuck here?\"\n\n\"You know, I've never done it in a car. Well, not all the way.\"\n\nSad to say, I wasn't about to break that streak. Even with the handbrake on, there's only so much I'm willing to do while in control of a motor vehicle. And even in the dark and the rain, there were limits to what either of us were willing to do with a dirty big SUV parked on our tail and halogens glaring in through the back window.\n\nSo we stayed in our seats, and our clothes stayed on, but there was a great deal of kissing and hands a-wandering. By the time the lights in front of us started to move, we were both quite hot and bothered, and I had to wipe the fog away to see where we were going.\n\n\"Phoebe, how hungry are you?\"\n\n\"Moderately, why?\"\n\n\"When we get in, I was thinking of postponing dinner and starting with the bit where I tear your clothes off.\"\n\n\"Mmm. Yeah, that sounds good to me. Dinner can wait. Oh, but I should call the B&amp;B and tell them we're running late.\"\n\n\"Good thought.\"\n\nIt took us about fifteen minutes to reach the cause of the delay: a three-car pile-up, partly cleared but still blocking half the road, with a couple of very soggy-looking police controlling traffic. No sign of an ambulance, and I hoped nobody was badly hurt, but some panel-beater was going to do well.\n\nOnce we'd passed the accident, the traffic cleared again. I tapped my fingers on the wheel as they played another '80s hit I hadn't heard in years; it wasn't until the final notes that I realised Phoebe had been quiet for a while, and when I turned to look she had a contemplative look on her face.\n\n\"You okay there, love?\"\n\n\"Oh yeah, just thinking. You know, when I was in year ten, I did a research project on those guys.\"\n\n\"Really? So do you know what the lyrics are about? I never could make sense of it.\"\n\n\"Not that sort of project. No, mine was finding out what happened to them afterwards. Turned out to be quite depressing.\"\n\n\"Oh? Rock and roll suicides? ODs?\"\n\n\"No, nothing that spectacular. No, they just kinda fizzled out. They had three weeks at number one, then they had a follow-up that barely made the top twenty, then nothing. Even if you're careful with the money it's not enough to live on, so... let's see. Singer became a manager for other groups, didn't do too well. There was some suggestion he was taking more than he ought from their earnings, it fell apart, nasty court case, he ended up on the dole. Bassist had some sort of mid-life crisis, went a bit bipolar, spent most of his share on some concept album that never got finished, I think he's running a crystal dolphin shop in Nimbin these days. Guitarist... god knows. The only one who'd done well for himself was the drummer.\"\n\n\"Did he have his own band? Can't remember the name, early '90s...\"\n\n\"No, he dropped out of the business and went back to being an electrician. Quite a successful one. I read an interview and he said it was easier for him because he never wanted to be a rock star. Said he didn't even like music that much, just wanted to be famous for a few weeks. Go to parties, get free drugs, sleep with a few dozen women, and then... once he'd had his fun, back to making a living.\"\n\n\"Oh. I guess that works.\"\n\nShe was silent for a while, and the only sound in the night was the slosh of my tires and the DJ's chatter. Then: \"Not for me. I don't want to be a star. I just want a nice quiet life, playing music for a living. I don't want to be famous for a day and then spend half my life looking back at it wishing I could have that time again.\"\n\n\"That's very... level-headed?\"\n\n\"Don't get me wrong, darling, I have my melodramatic phases. God, when I was fourteen I heard about Jackie du Pr\u00e9 dying of MS and I wanted to be like that. Tragic heroine of her generation, records the definitive performance of everything, dies lamented by the musical world. Then a couple of years later I read 'The Alien Corn' \u2014 do you know it?\"\n\n\"I don't.\" We'd turned off the highway now, onto a windy country road, and the night was a mess of flickering tree-shadows and the dazzle of my own headlights scattered by the rain.\n\n\"Somerset Maugham. Year ten English class. Young man, rich Jewish parents pretending to be English nobility, he wants to be a concert pianist. You can see why it struck a chord with me. Long story short, he decides if he can't be a master pianist then he'll kill himself. I thought that was very romantic, at the time. And somewhere in there I wanted to be David Helfgott, except better dressed.\"\n\n\"And now?\"\n\nShe patted my knee. \"Death's overrated. If I find I really can't make a career out of music, I'll cope. I'll find something to do from nine to five to pay the bills, and then I'll go home and play cello anyway until the neighbours bang on the walls. But I don't want to miss out just because I didn't try hard enough.\"\n\n\"So, is Nero part of that?\"\n\n\"Nah. It's fun being in a band, but Nero is just a bunch of friends mucking around. We're all going in different directions musically, I don't see us lasting. But this audition... do you know what a position in a major orchestra means? It's seventy or eighty thousand a year, it's regular hours, it's tenure. Once you're in, unless you really screw up, you've got a job for life. The catch is, there aren't a lot of openings, and you have to be bloody good to get in, ahead of all the others trying for the same slot. Cello, you'd be lucky to have one opening a year. So that's why I'm stressing out about this audition.\"\n\n\"Is this the first time you've auditioned?\"\n\n\"No, I've tried for just about anything that would let me support myself. Last one was a spot with the Brisbane Symphony in October. I went up for that but... wasn't in the right frame of mind for it. Couldn't get to sleep, then when I finally did get to sleep, I had this nightmare where the audition panel was full of my bitchy classmates from the Conservatorium. So I went in tired and jittery... well, you can imagine the rest.\"\n\n\"Poor thing. I hate job interviews even without that kind of thing.\"\n\n\"Didn't help that Luke wasn't exactly being supportive, either. So, yeah, I really don't need to screw up again. None of their other cellists are near retirement age, so if I miss this one... you know, this is depressing. Can we get back to the bit where you were going to tear my clothes off?\"\n\n\"Phoebe?\"\n\n\"Yes?\"\n\n\"I love you. I really do. Do you know you make my heart beat faster? Every time my phone beeps, I hope it's you.\"\n\n\"Oh, sweetie.\" Something in her voice made me ache. \"You're going to melt me if you're not careful. A little puddle of melodramatic cellist all over the seat.\"\n\n\"Don't worry, I brought a towel. Hey, can you check the GPS? I think we're near our turnoff.\"\n\nShe peered at it. \"Yeah, there's a left in about two k's, then five more and we're there.\"\n\nWe were doing fine until the puddle. Between two kills, the road dipped and water had pooled at the bottom. Although it didn't look more than a few inches deep, I didn't want to take chances, so I slowed down a little and angled the car so I could go straight through without steering.\n\nThere was a mighty sploosh of water, and then the wheels regained their grip on the road... and about ten seconds later the engine died. No fuss, no grinding or smoke, she just ran out of steam so quickly that I barely had time to turn on the hazard lights before we'd coasted to a halt.\n\n\"Well, crap.\"\n\nI tried turning the key. I could hear the motor turning over, but it refused to catch. Neither of us fancied being wiped out by somebody speeding in the wet, so we got out into the rain and pushed the car safely onto the shoulder.\n\n\"So, Yvonne, how much do you know about cars?\"\n\n\"Not as much as I ought.\" There was no point in popping the hood when neither of us knew what to look for, and we were already getting damp, so we got back in and thought for a while. There was a manual in the glovebox but it didn't have anything helpful. I'd have gone online to look for advice, but out here between the hills we didn't even have phone reception, let alone internet. \"I'm guessing water got into something.\"\n\n\"Let's give it a bit and maybe it'll dry out.\"\n\nWe sat in the car for five minutes, keeping an eye on the road in case anybody was coming, and then I tried the engine again: still no luck.\n\n\"Give it another five minutes?\" I suggested.\n\n\"Sure.\"\n\n\"Might switch off the electrics meanwhile. Don't want to run down the battery.\" I pulled the key, and switched off the hazard lights, and we were alone in the dark. Not completely dark \u2014 once my eyes adjusted I could see the moon showing dimly through thick cloud \u2014 but darker than it ever gets in the city.\n\n\"Well,\" I offered, \"I know a few good ghost stories.\"\n\n\"Don't you dare.\" She leant over and gave me a pinch on the nipple that made me yelp.\n\n\"If you're going to be like that...\" I thrust the palm of my hand against her breastbone and pushed her back down into her seat. \"Maybe I won't wait until we get there... oh, honey, you're shivering!\"\n\n\"I'm sorry. Got a bit wet when we were pushing the car. Should've put my coat on.\"\n\nAs I ran my hands over her, I could feel it. She was wearing a jumper, but it was thin and had soaked up quite a bit of water in the short time that we'd been outside, and without the heater the air inside was already getting cold and clammy.\n\n\"Better get you somewhere warm.\" I tried the engine one more time, muttering imprecations to the gods of tech support, but no luck. \"I think we're only about two k's from the B&amp;B. I can walk it, I'm sure they'll have a car. And I think the rain's easing off.\"\n\n\"I'll come with you, then.\"\n\n\"Sure? You can stay here and keep warm if you want.\"\n\n\"I'm cold anyway, I'd feel c-creepy sitting here on my own. Maybe walking will warm me up.\"\n\nI looked sharply at her. I'd heard the shiver in her voice, but I didn't argue. Truth be told, I didn't much fancy the idea of either of us being alone if another driver came along. So we locked up the car and walked.\n\nWe'd put on our raincoats, but we hadn't planned on a long walk in pouring rain, and they weren't adequate for the job. Mine didn't quite reach my knees, leaving much of my legs unprotected, and now and then a gust would blow rain into my face to creep in around my neck. Phoebe's wasn't much better, and I started to suspect she was colder than she was letting on. She stumbled a couple of times, until I took her by the elbow, and we made the last stretch of our walk hand in hand.\n\nAlthough it was no more than half an hour since we'd left the car, I was very glad to see the light of the B&amp;B up ahead. According to the website 'Chambers' was an old two-story brick and timber building that had once been a farmhouse, but in the dark all I could make out was the shape of it looming against the grey-black sky, and the glow from the windows.",
        "The place had a heavy wooden door with a huge brass knocker: a grinning satyr's face holding a heavy ring between its teeth. I knocked twice, and was greeted by a high-pitched and enthusiastic barking and the sound of footsteps approaching. As the door opened we were greeted by a slender and sharply-dressed gentleman in his sixties, and at his heels a small grey terrier who must have been about the same in dog years.\n\n\"Oh you poor darlings! You're utterly soaked! Come inside, come inside!\" And he ushered us in, whisking our coats away and hanging them by the door. The air inside was warm and smelled of cooking. \"I'm Keith, the little fellow is Kirby, you must be Yvonne and Phoebe. We've been worrying about you... come on, sit by the fire and warm yourself!\"\n\nWe were very grateful to follow him into the dining room, with Kirby trotting along behind us as I explained about the car. There was an old fireplace in the corner, and both of us made straight for it, squatting on the stone flagstones as close as we could get to the flames. Having done his duty as a watchdog, Kirby stretched himself out on a cushion nearby.\n\nBehind us, Keith called out \"Iain, our guests are here!\" A gruff voice replied from what must have been the kitchen: \"Well tell them they're late!\"\n\n\"Iain, don't be horrible. The poor lasses are soaked!\" Keith came back to us and crouched down beside us. \"Have the two of you eaten?\"\n\n\"No.\" And now I'd started to warm up, I was beginning to pay attention to the growling in my belly. Then I took in the state of the dining room: two dirty plates stacked neatly at the end, two used wine-glasses behind them, and a half-empty bottle of red. \"Are you clearing away? We didn't mean to inconvenience you.\"\n\n\"Nonsense, don't you ladies worry about a thing. I'll tell the cook he's back on duty. Leave it with me.\" He patted my shoulder and went off to the kitchen, where I could hear him talking to the mysterious Iain. Beside us, Kirby had started to snore.\n\nPhoebe was holding her hands up to catch the heat, fingers splayed, and I threaded mine between them. \"I don't think the double bed is going to be an issue.\"\n\n\"Huh?\" She squeezed my fingers, then released them again, still trying to soak up the heat. \"What do you mean?\"\n\n\"Just a wee bit on the camp side, don't you think?\"\n\n\"Oh, I didn't really notice...\" She sounded quite out of it. Tired, cold, hungry, I wasn't sure which. I decided it was time to get her fed and to bed as quickly as possible.\n\nKeith returned from the kitchen with Iain in tow, still wearing his washing-up gloves. Iain looked to be a few years older than Keith, a tall and solidly-built fellow with a pencil moustache far too small for his round and reddish face. \"Iain Matheson, owner and proprietor of this establishment. Keith tells me I'm feeding you ladies.\"\n\n\"That would be very kind. We were planning on getting here much earlier and going into town, but...\"\n\n\"Not without a car, and the town is terrible anyway. Well, I suppose I can do you a basic omelette, but don't expect much.\"\n\nI nodded eagerly. \"That would be awesome, I'm famished.\" Beside me Phoebe murmured assent. I put my arm around her and held her tight. Once Iain and Keith had left I asked her: \"How you holding up there, sweets?\"\n\n\"Very tired. Sorry.\"\n\n\"It's okay. We're here now, let's just get some food into you and then you can fall asleep.\"\n\nKeith returned with two dressing gowns. \"Sorry love, this one's going to be much too big for you, it's Iain's\". After changing I helped Phoebe into hers, and then put my arm around her. She stood there, propped up against my shoulder, until Iain arrived with the omelettes and I guided her into a seat.\n\nThey might have been 'basic' by his standards, but I'd happily have paid for them in any restaurant: mushroom and cheese, done just right, warm and filling. As we ate, Iain asked, \"Do you need to get anything from the car tonight? I can drive you there if it's not far.\"\n\n\"That'd be great, if it's not too much trouble. I think I should put my girlfriend to bed first, though. And then steal her gown, so I'm not dragging yours through the mud.\"\n\nKeith showed us upstairs to our room. Phoebe had mentioned 'purple' but I hadn't expected quite so many shades of it: magenta carpet, lavender and gold wallpaper, plum-coloured curtains, and in the middle of the room a king-sized four-poster bed made up in a purplish paisley.\n\n\"It's too big for the room, and the pattern is ghastly. But it belonged to a very dear friend of ours. He left it to Iain when he died, and we didn't have the heart to get rid of it. If you shut your eyes it's really quite comfortable, and I put the electric blanket on so it should be warm.\"\n\nI separated Phoebe from her gown, tucked her in, and kissed her on the forehead. \"Going to get our things from the car, love. Won't be long. I love you.\" She mumbled something incomprehensible, and I left her to sleep.\n\nIt was a short drive. Too short for my tastes; the rain had almost stopped but the road was still wet, and Iain's approach to cornering bordered on the reckless. But we made it without accident, and the rental was just as we'd left it.\n\n\"Want to show me the problem?\"\n\nI turned the key, and this time she started without a hitch, purring into life. \"Well, that's embarrassing.\"\n\n\"Probably water in the alternator. You just have to unscrew the cap and wipe it dry, or you can wait. Well, if you take her home, I'll follow behind and make sure she doesn't misbehave.\"\n\nTo my relief she behaved all the way back to Chambers. On my return I found Keith had already taken our wet clothes to be washed and tried, and Phoebe was fast asleep, peaceful and beautiful. As I climbed in beside her she did not wake, but she snuggled into my arms. It'd been a long day for me too, and I was asleep before I knew it.\n\n***\n\nI woke in the morning with a ticklish feeling on my face. Phoebe's hair had come loose in the night, and a couple of strands were draped across me. My right arm had fallen asleep, caught under her body, and as I brushed away the hair and extricated my arm I felt her stir.\n\n\"Morning, beautiful,\" I whispered, unsure whether she was awake enough to hear me.\n\n\"Mmm. Morning, lover.\" She rolled to face me and yawned, sliding an arm around my waist. \"What's the time?\"\n\nIt had to be well after sunrise; there was a sulky grey light in the sky where the curtains joined. I checked the bedside alarm. \"Nine o'clock. Hope you had a good sleep.\"\n\n\"Oh yeah, I feel much better. Sorry to crash out last night, I haven't been sleeping well the last month. S'pose we should go have breakfast, if we haven't missed it already.\"\n\nAnd she half-rose, but I caught her by the hair and pulled her back down. \"No.\"\n\n\"No?\"\n\nI lifted her hair and began kissing the back of her neck. \"Nobody else staying here today, so Iain said we could have breakfast whatever time we liked.\" I felt her squirm as I worked my way down between her shoulder blades. \"He said the later, the better. You're not going anywhere until I'm satisfied.\"\n\n\"...oh!\" And she twisted around in my grasp to kiss me on the lips, tongue darting into my mouth, arms circling my waist. \"You know how much I've missed you, this last month?\"\n\nI reached around to stroke her back, fingertips light and secret under the quilt. \"About as much as I've missed you?\"\n\n\"That much.\" She kissed me again. \"And just what are you planning to do with me?\"\n\n\"Hold you safe and keep you warm. Kiss you as often as I can get away with it.\" I kissed her again. \"Love you.\"\n\n\"Mmm. I love you so much, Yvonne.\" Our legs intertwined, and we rolled under one another until she was on top of me, her hair running rampant and shrouding both our faces. \"You know what would be fun?\"\n\n\"Mmm?\" I scratched her behind the ears, felt her sigh. \"What's that?\"\n\n\"Do you remember the deal we made last time?\"\n\n\"The deal?\" I cast my mind back, trying to remember what she was talking about.\n\n\"At the office. I promised to do something nice for you.\" She slipped down to kiss my breasts, shaping them between her hands, tongue exploring the roughness of my areolae.\n\n\"Oh... yes. Yes, I believe you did. I think I'll take you up on that offer now.\" I stroked her hair and nudged her downwards, but she resisted.\n\n\"My hands...?\"\n\n\"Ah. Well, if you're going to be like that...\" I looked around for something to use, and my eyes fell on Keith's dressing gown, hanging over the foot of the bed. The cord was just what I needed, soft and broad. \"Sit up, lover.\"\n\nShe did as I'd asked, bringing her hands together behind her back without being told. My pulse quickened as I took her hands in mine, taking my time, kissing her shoulders and down the middle of her back, before picking up the cord and winding it around her wrists. One last tug to make sure the knot was tight, and then I caught her by the chin and turned her head to kiss me.\n\n\"Lie back,\" she said. \"Lie back and let me see you.\"\n\nSo I stretched out at full length on the bed, one hand on my breast, the other on my hip. With four weeks of pent-up desire smouldering inside me, just my own touch felt wonderful. I could easily have satisfied myself without assistance, but I knew Phoebe had something better in store.\n\nHer hair was a mess, medusa's coils spilling out all over, and I could see it annoyed her. She tried to shake it out of her eyes, and then to blow it away, but it wouldn't cooperate. So I reached up and brushed it away from her, my fingertips lingering on her face before I tidied it back behind her shoulders as best I could.\n\n\"Thanks, love. Think I'm going to need some brushing later.\" She kissed my fingertips, then lurched and wriggled so she was standing on her knees; I put my hand out to steady her, but her balance was good. \"Just lie back for a moment.\"\n\nSo I lay there with an idiot grin on my face as she climbed over me, straddling my hips and settling her weight on me. Even with her hair untamed and her hands bound she had something regal in her look, a princess surveying her new domain.\n\nThen she laughed and tossed her head back and forth, side to side, until my work on her hair had been completely undone and it hung down in front of her, almost masking her from my view. \"Lie still, love.\" I wasn't sure what to do with my hands, and so I rested them on her knees as she leant forward, hair hanging down, brushing my face and throat like feathers drawn over my skin.\n\nThen she moved downwards, a thousand strands of hair sliding down my throat and to my breasts. She swayed from side to side, the touch setting me a-tingle, nerve endings kissed into wakefulness, and then she moved back further and down to my belly, a waterfall of black curls hiding her face from mine.\n\n\"Yvonne, do you remember the first night we slept together? Not at Dad's, I mean your place.\"\n\n\"I'm not likely to forget it...\"\n\n\"When you said you wanted my mouth.\" Drifting back up, that teasing touch on my breasts and my throat again, making me shiver. \"Do you know how that made me feel? I think I knew, when I asked to stay over, I think I knew you were going to say that.\"\n\n\"And you were going to say yes.\" I reached through the curtain between us, fingertips grazing her breast, up to stroke her lips.\n\n\"If you asked me.\" She kissed my fingertip twice. \"But it couldn't be because I wanted it. Only from politeness.\" Her hair tickling my face again, and I was under the veil and could see her eyes. \"Because I'm not gay. I'm still not, you know.\"\n\n\"Mmm.\" I ran a fingernail down to her belly, dallied in her navel, down to the beginning of her curls. \"But you did want it, didn't you?\"\n\n\"Oh god, yes.\"\n\n\"And you still want it.\" My fingers slid down, traced her labia almost as softly as her hair falling on my chest, and I heard a plaintive \"oh...\"\n\n\"So much. I want to taste you and stroke you and feel what it does to you.\"\n\n\"Mmm-hmm.\" I brushed upwards past her clit, pretending not to notice it, toying with the edges of her labia. \"Still not gay, though?\"\n\n\"No.\" She shifted her hips ever so slightly, bringing my fingers back in contact with her labia. \"Definitely not.\"\n\n\"But you want to make love to me.\" My fingers rubbed her, in slow small movements, and she shifted her hips again to press harder against my hand.\n\n\"Yes. That's different.\" She was over my breasts again, and I couldn't see her eyes. \"I'm complicated. Am I allowed to be complicated?\"\n\n\"Oh, yes, lover.\" I needed her, I was burning up. \"Phoebe?\"\n\n\"Yes?\"\n\n\"I want your mouth.\"\n\n\"Do you now?\" Tickling down to my belly again. \"Well, I'm terribly sorry, but nice straight girls don't do that sort of thing... so I hope you remember the rest of our deal.\"\n\nI tried to think, distracted by the sensation, no end in sight to her teasing. Then I remembered the rest of what she'd said a month ago, and smiled, and reached up to run my hands through her hair.\n\n\"Darling, I said I wanted your mouth. I didn't say I was giving you a choice.\" And I sat up, grasped her by the hair, and pulled her down between my knees.\n\nHow should I describe it? My lover's tongue, concerned only with my pleasure, by turns clever and eager and tender. Her face, sweaty and smudged, smiling up at me whenever I let her up for air. And me, resisting the rising tide of arousal as long as I could, stroking her hair, whispering \"Oh, Phoebe, I love you, oh,\" before at last she overtopped the dam and the flood came rushing through me, battering down all my defences, until I was so sensitive I had to pull her off because I couldn't bear her touch any more. I released her wrists and clung to her, breathless and speechless, hoping she could feel my delight.\n\nAnd then, when I was somewhat recovered, I whispered in her ear: \"Phoebe?\"\n\n\"Yes, love?\"\n\n\"I'm hungry again.\" And I guided her back down. \"This time you can use your fingers too. Let me show you what I like...\"\n\nBy the time she was finished I felt as if she'd stolen my bones and replaced them with warm jelly. We lay alongside one another, me cuddled up in her arms, and I was close to falling back asleep when she spoke.\n\n\"Yvonne, darling?\"\n\nI opened my eyes and smiled at her sweet face. \"Mmm?\"\n\n\"Are you satisfied?\"\n\n\"Mmm. Lovely.\"\n\n\"I'm so glad. I love knowing I can make you happy.\" She smooched me on the forehead. \"So, what were your plans for the morning?\"\n\nI yawned. \"Suppose I should get moving, have breakfast...\"\n\nAnd I started to roll toward the edge of the bed, but she caught my shoulder and pulled me back. \"Oh, no, no, sweet. I didn't say I was done with you yet, did I now?\"\n\n***\n\nWe breakfasted very late, and neither of us could entirely hide our satisfied smiles from Iain, who kept dropping catty double entendr\u00e9s as he fed us: \"Would you like some butter for your toast, Yvonne? Or have you already been buttered today?\" And so on.\n\nBut it was all in good nature, and I was more concerned with another of our hosts: Kirby was sitting by my side, looking up at me with a piteous expression that would've earned Oliver Twist a second helping. It took all my willpower to resist feeding him bacon scraps, and as soon as I was done I gave him a good ear-scratch by way of apology.\n\nAfter breakfast we drove out to visit some of the local attractions. The rain had settled in for the duration, so we cancelled our picnic plans and mostly stuck to indoor things: a cheese factory, a historic cottage, another winery. We made an exception for an alpaca farm, because petting fluffy animals seemed like a romantic thing to do. And indeed it was, despite the drizzle and the mounds of alpaca poo. The owners didn't seem to mind that we couldn't afford any of the expensive alpaca scarves and jackets on sale, and they let us feed the beasts and pat their woolly heads. By the time we left the farm it was starting to get dark.\n\nPhoebe's dad called as we were driving back to the B&amp;B. The call lasted several minutes, and she didn't say much more than \"Yes\" and \"Okay\" and \"All right then\". At the end of it she put her phone away; I had my mind on the road and it was a couple of minutes before I noticed she'd stopped talking.\n\n\"Everything okay?\"\n\n\"I think so. Dad said Yaya wants to get the family together before her surgery. Probably on the Easter weekend \u2014 Skip Easter, that is.\"\n\n\"Special occasion?\"\n\n\"She wants help getting the house in order. Supposedly so she'll have less stuff in the way while she's recovering from surgery.\"\n\n\"Well, let me know if you want another helper... wait, 'supposedly'?\"\n\n\"Dad said she wanted Helen to come along. That's... well, Yaya's barely spoken to her since she walked out on us. Only thing I can think of, Yaya doesn't expect to make it through the surgery, and she wants to talk about wills or something.\"\n\n\"Ah.\" I patted Phoebe's hand. \"You all right?\"\n\n\"I think so. I'm guessing she's just tired and depressed from the pain and the chemo. And if not... well, I'll deal.\" She gave my elbow a gentle squeeze. \"But thanks for asking.\"\n\n\"Speaking of grandparents, what's the deal with your mum's parents? I don't think you've ever mentioned them.\"\n\n\"Not much to tell. You have to understand, I barely saw Helen after she left, let alone the rest of that side. Most of them were in Adelaide, still are, and it was a long trip for a kid. Grandpa Stephanopolous died a couple of years later anyway. Grandma S... I liked her. We kept in touch writing letters to one another for quite a while, then she sort of trailed off writing. I didn't think much of it, I was fifteen, busy with school and discovering boys. Found out later she'd started to develop Alzheimer's and that was why she didn't write any more, poor thing. I visited her a few times, but... once she got to the stage where she didn't know who I was, there wasn't much point.\"\n\n\"Ah, that's rough. I take it you're seeing more of your mother now than you used to?\"\n\n\"Wouldn't be hard. When I was growing up, most of the time I didn't even know where she was living. I think she did a lot of travelling, spent a few years up in Cape York or somewhere. These days she's settled in Ballarat, at least it's easier to get to. I try to make it over once a year or so, and sometimes she visits me. Birthdays, that sort of thing. I stayed with her and her partner for a couple of nights just before Christmas \u2014 oh, that's right, I told you back then.\"\n\n\"Ayup. Got in the way of my plans to see more of you.\"\n\n\"Trust me, love, I'd rather have spent the time with you. And I'd be glad of your company for this Easter thing, I'd feel better with an outsider along to keep things sane.\"\n\n\"That bad?\"\n\n\"Oh, it's not like we fight. Just... look, I was seven when Helen left. I cried and cried for months before I accepted she wasn't coming back. And yeah, I'm still a little bit angry at her about that, but I can live with it... it's just that spending time around her is awkward. When somebody's out of your life that long, it's not something you can just switch on again. These days she's trying to take an interest, I do make an effort, but it just feels odd. Like I should have some sort of stronger feelings about somebody who gave me half my DNA. So, I mean, we see one another a couple of times a year, but we only ever talk about things that don't matter. Anything that's not about us.\"\n\n\"Um, yeah.\" I could relate; my own situation wasn't quite that drastic, but I'd long ago found it was easiest to keep a certain emotional distance from my parents. \"I can see that would be awkward \u2014 sorry, I keep dragging you onto depressing topics. This was supposed to be a happy weekend.\"\n\n\"I don't mind talking about this stuff, love. I'd say if I did. Sometimes it feels better to get things off my chest.\"\n\nAll the same, I felt we'd gotten into gloomy territory. I managed to lighten the mood a little with a feeble \"off your chest\" joke, but I was still glad when we arrived back at Chambers. There's something about an open fire that makes a place cheerful.",
        "We'd planned to retire to our room and enjoy the goodies that we'd bought for our picnic, but Keith invited us to dine with him and Iain \"\u2014 our only other guests cancelled, we could do with the company \u2014\" and we accepted, bringing our stash to the table. We had no cause to regret it. Iain was a splendid cook, and both of them were excellent conversationalists. Like any old couple they'd long since heard all one another's stories, and were pleased to have an audience, so we sat back and listened while Kirby patrolled the carpet for crumbs.\n\nAs I'd guessed from the name of the place, Iain was an ex-lawyer: \"Queen's Counsel. And queens' counsel too, for that matter.\" After knocking back a couple of glasses of the Shiraz he'd loosened up enough to tell us about the \"ex-\" part: in the mid-nineties, he'd had a close shave with a newspaper editor obsessed with exposing a supposed conspiracy of gay pedophiles. None of his accusations had ever been substantiated, but one of Iain's friends had committed suicide after his fondness for anonymous hookups made the news: \"That's his bed you slept on last night. I represented a couple of the others pro bono. We took the bastards to court, fought for a couple of years, squeezed a little bit of blood money out of them in the end. But it all took a lot out of me. Keith made me go to a doctor and the quack said I'd be dead in five years if I didn't do something about my blood pressure, so I hung up my wig and we bought this place.\"\n\nKeith had been almost famous, an actor in a long-running TV soap. It sounded like an exciting existence: cast as an unlikely sex symbol, kidnapped by a drug syndicate, jilted at the altar by the woman who nobody knew was his own sister. Off-screen he'd been stalked by a besotted fan (\"little did she know!\") and at the studio's advice he was married off to one of his co-stars (\"a member of the sisterhood\") when the show needed a ratings boost. He showed us a few of the cards she'd sent him over the years: \"Love from your Sham Wife,\" \"Merry Christmas from your best beard,\" \"To 'Oscar' from 'Constance',\" and so forth.\n\n\"And then, of course, there was the time I grew my leg back.\"\n\n\"How did you lose it?\" asked Phoebe.\n\n\"End of... was it Season Three or Season Four, Iain?\"\n\n\"Four. Not that I watched that tripe.\"\n\n\"Of course you didn't, Iain. Yes, end of Season Four, the producers decided to do a bit of spring-cleaning. Great big bomb went off, killed off a couple of people who were asking too much to renew their contracts. My character was looking a bit too settled and happy at the time, so the writers told me 'Good news darling, you're losing a leg!'\"\n\n\"Sounds painful.\"\n\n\"Excruciating. They strapped my leg up with my foot against my arse so it was all tucked away inside the trousers, but not what you'd call comfortable. And it slowed me down and mucked up the shooting timetable. So after they'd milked it for a few episodes we moved onto something new \u2014 Iain, was that the sex-change lady?\"\n\n\"Something like that.\"\n\n\"So we agreed they'd just manage the cameras so I was only seen from the waist up. Great relief all round. By the middle of Season Six, we'd all forgotten about it. We'd had a serial strangler, a big gay kiss between the only two straight men in the cast, two Christmas specials, God knows what else. And then we had one episode at the beach where I was wearing shorts. Legs and all. We only remembered after it went to air, the writers were having kittens, but nobody out there noticed. Thank God we didn't have the Internet back then for people to complain about that sort of thing. So I got to have my leg back.\"\n\n\"Impressive.\" I cut myself a couple more slices of a nice sharp cheddar. \"So tell me, how did the two of you end up together?\"\n\n\"Well, it's a \u2014\" Keith began, but Iain interrupted him: \"Do you want the truth and the whole truth, or the version we tell Keith's parents?\"\n\n\"Oh, let's hear both,\" chirped Phoebe. She was leaning forward, both elbows propped on the table, and from the way she spoke and the wideness of her eyes I thought she was just a little bit under the influence. She was also playing footsie with me under the table.\n\n\"Well,\" said Keith, \"after the show got cancelled, I went back to theatre for a while \u2014 that's my first love \u2014 and Iain was so smitten by my Orsino that he insisted on meeting me after the show. He invited me to his Christmas party, and romance blossomed.\"\n\nThere was a respectful pause while Keith refilled his wine glass. Beside him, Iain finished another, before clearing his throat for the other version of events. \"We met in a bath-house on Oxford Street. Both regulars. After we'd been shagging for a few months we exchanged names and phone numbers, and a few months after that Keith invited me to the theatre.\"\n\n\"Iain and I were both getting tired of the scene, so we thought we'd settle down for a few months and see how it worked out. And thirty-four years later, here we are.\"\n\nIain scowled. \"Oh god, don't make me feel ancient.\"\n\n\"You've always been ancient, Iain. You're so lucky I like older men. So, young ladies, how did you meet?\"\n\nI fielded that one. \"Also a Christmas party. I was pissed off at my boss, thought I was about to get fired, and his daughter was absolutely gorgeous, so I kissed her and one thing led to another. Erm, in her dad's wardrobe.\"\n\n\"And is that the version you tell the parents?\"\n\n\"God, no!\" blurted Phoebe. \"We just tell them we're friends.\"\n\nThe conversation went on, with Keith telling funny stories about some of the other guests they'd had over the years. But I found myself withdrawing from the conversation, drawing back and letting the three of them chat among themselves. Was I sulking a little? I shouldn't have been bothered by what Phoebe had said \u2014 it was quite true \u2014 and yet the emphatic way she'd said it had altogether taken the wind out of my sails.\n\nI tried to get back into the spirit of fun, but I just couldn't recapture the good mood I'd been in just a few minutes earlier, so I decided to make my exit. \"Sorry lads, but you've fed me so well I'm falling asleep here. I'm going to toddle up to bed.\"\n\n\"Already?\" Phoebe enquired.\n\n\"Lots of driving tomorrow. Don't let me spoil your fun, you stay.\" I wasn't sure how sincere I sounded, so I just gave her a light kiss on the forehead and made my way upstairs.\n\nAlthough it was still early, I'd barely climbed into bed and switched out the light when I heard Phoebe slipping into the bedroom.\n\n\"Yvonne?\"\n\nI lay there, facing the window, listening to the rivulets of rainwater splattering down from the gutters.\n\n\"Are you awake, love?\"\n\nI felt petty trying to ignore her... and I resented her for making me feel petty. \"Yes.\"\n\n\"You don't sound... are you upset?\"\n\n\"A little.\"\n\nShe came around the bed and sat beside me. \"Oh, love, it doesn't sound like a little. What's wrong? Was it about not telling family? I thought you were okay with that.\"\n\n\"I can deal with not telling them. I don't love it but I can respect why you don't want to. But please don't talk like it's ludicrous to even think of acknowledging me in front of them.\"\n\n\"Oh, love.\" She touched my hair, tentatively. I wasn't sure whether I wanted that. \"I'm so sorry. I didn't mean it that way. It's... I wish I could tell them, but it's not that easy.\"\n\n\"So did you tell them about Luke? Was that so hard?\" Bitterness seeping through, decades of old resentments.\n\n\"Yes. You know I did.\" She sounded miserable, and instantly I felt like a prat.\n\n\"I'm sorry. That was bitchy of me. I know it's not the same.\"\n\n\"I didn't mean to hurt you, Yvonne. I hate the thought of hurting you.\" Still stroking my hair.\n\n\"It wasn't really you, love.\" I sat up and put my arms around her. \"Well, not much of it. I just, I've spent all my life being told my feelings aren't as big and important and real as the next guy's. All the happy straight couples getting their love stories on the telly out in the sunlight. And maybe if I'm lucky I'll get to fuck some girl who wants to put on a show for her boyfriend. Or be her little secret hobby until she finds a nice boy to marry and forgets about me. Maybe a few years down the track she wants to sound bohemian and adventurous, she'll tell her friends how one time she experimented with another girl. And then she'll forget all about it, and I'll still be...\" I couldn't finish. My face was wet, and now she was holding me instead of the other way around.\n\n\"Oh, honey, honey, honey.\" She pulled my head into her chest, stroked my hair, rocked me in her arms. \"Oh, sweetie. Oh darling Yvonne. Look, I'm still a bit sozzled and I don't have the words right. But please believe me, you're not an experiment. You mean more than that to me.\"\n\n\"I know. I should know, at least. Wish I wasn't so fucking insecure. It's stupid, if I'm expecting you to call and you're late, I start getting paranoid, thinking you've lost interest in me. I have to make myself think through it, remind myself that you're not that sort of person. Sometimes I have to go through old texts and emails just to look at the bits where you tell me you love me.\" I snuffled loudly, and she handed me a hanky to blow my nose. \"Thanks. I'm sorry, I... hi, I'm Yvonne, if you hadn't noticed, I have a bit of baggage.\"\n\n\"Don't we all?\" She hugged me tight again. \"Those things you said, that stuff happened to you?\"\n\n\"Not to me. But happened to friends, more than once. It's all part of the experience. Living in a world full of fuckwits who keep telling me any relationship with me in it doesn't count.\"\n\n\"It counts for me. Hey, do you really go back through my texts?\"\n\n\"Saved 'em all.\"\n\n\"Well, then.\" She reached down and took my hand, folded hers around it. \"Tomorrow, when you go home, and you step off the plane and switch your phone back on, the first thing you'll see is a message from me saying I love you and I miss you. You should save that one too.\"\n\nI squeezed her hand, and we sat side by side as rain battered at the window. I was crying again, but if I wasn't exactly happy, I was far from sad: just sitting there, holding Phoebe's hand, knowing she wasn't going anywhere.\n\nAfter several minutes of companionable silence: \"Yvonne, do you like poetry?\"\n\n\"Sure. Well, some of it, there's a lot of stuff I don't get. Why?\"\n\nShe hesitated a moment, marshalling a memory, and then spoke:\n\n\"I wonder by my troth, what thou and I\n\nDid, until we loved? Were we not weaned till then?\n\nBut sucked on country pleasures, childishly?\n\nOr snorted we in the Seven Sleepers' den?\n\n'Twas so; but for this, all pleasures fancies be.\n\nIf ever any beauty I did see,\n\nWhich I desired, and got, 'twas but a dream of thee.\"\n\n\"...is that Shakespeare?\"\n\n\"John Donne. Had to learn a couple of his in school, that one stuck with me.\"\n\n\"It's beautiful. Now I feel tingly all over.\" I kissed her cheek. \"Later you can read me more like that, but right now I should get some sleep.\"\n\n\"Mmm-hmm.\" She rose, giving me a peck on the forehead. \"Keep the bed warm, I'm just going to brush my teeth.\"\n\nWhen she returned, she slipped in behind me, and this time it was my turn to fall asleep wrapped in my lover's arms.\n\nWe were sorry to leave the next morning. But I had a plane to catch, and a long drive back to Sydney before that. And so, just as the skies cleared at last, we said goodbye to Iain and Keith (and Kirby) and got on the road again. A few hours later, we said goodbye to one another at the airport, and I walked to the departure gate.\n\nAnd when I stepped off the plane at Tullamarine, there it was, just as she'd said:\n\nI love you and I miss you. See you soon - P."
    ],
    "authorname": "Bramblethorn",
    "tags": [
        "lesbian romance",
        "lesbian novella"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/a-stringed-instrument-ch-09"
}