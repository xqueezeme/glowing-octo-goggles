{
    "title": "Finding Her Way in a Storm Ch. 11-12",
    "pages": [
        "Kaia had shown up at the Grace home at precisely one o'clock on Sunday afternoon, a bouquet of wildflowers for Skyler's mom in hand. She wore a dress, not exactly a rarity for Kaia during her adult life, but it would be the first one that Skyler had ever seen her in.\n\nKaia wore her hair down and had used a straightener on it, though she'd made sure to leave some of the body, giving it a wavy look. The overall effect combined with her makeup was to soften her appearance. Kaia knew her lean body and athletic frame came across as a bit butch to some people, and that wasn't her. She was as feminine as the next girl in her way, and she wanted Skyler's father to see that.\n\nShe'd barely knocked at the door when Kaia heard heavy footsteps approaching it from the other side.\n\n\"Kaia!\" Skyler's father said with a smile as he stepped back to wave her inside. \"Come on inside. Your timing is perfect. I think Bree Ann was just getting ready to set the food on the table.\"\n\n\"Is that Kaia?\" came a voice from the kitchen, quickly followed by its owner's appearance as Skyler's mother's smiling face made her way down the hall towards Kaia. \"Look at you. You look gorgeous!\"\n\nKaia fought the urge to blush but found it a challenge as Bree Ann's arms went around her in a sudden rush. She hugged the more mature version of Skyler back as she watched the woman's husband retreat back into their front room. When Bree Ann broke their hug, she reached up and cupped Kaia's cheeks.\n\n\"Don't be nervous, Kaia. He's ready to learn his daughter's news, and he's going to be just fine with it. Pretty soon, he'll love you every bit as much as I do because he'll be able to see how happy you make Skyler,\" Bree Ann said in a low voice.\n\nKaia smiled back at the older woman, thankful for her reassurances. She still felt nervous, but the jangles in her nerves were more for Skyler than for herself. Regardless of how today went, the couple would no longer have to hide their relationship, and Kaia was eager for that, come what may.\n\n\"These are for you,\" Kaia said, holding out the flowers. \"Kind of my way of thanking you for the invitation and just being so great and all.\"\n\nThat got a little squeal from the older woman as she excitedly reached for the bouquet, taking the flowers and then raising on her tiptoes to kiss Kaia's cheek.\n\n\"You're so sweet!\n\n\"It's all an act, Mom. She's quite bossy and is mean when you aren't around,\" came Skyler's voice from the top of the stairs.\n\nKaia looked up at the top of the landing and felt her heart begin to ache at the very sight she took in.\n\nSkyler was wearing a pale green summer dress that accented her skin tone, hair, and eyes with perfection. And while it wasn't form-fitting, she looked absolutely stunning in it. The top was almost like a chemise or a shift. It hung loosely off one shoulder, looking almost bohemian, and with her hair pulled back, it exposed her neck, highlighting the large silver hoops she wore in her ears.\n\n\"Now you'd better be nice, Skyler. You know that isn't true.\" Bree Ann Grace said, playfully chastising her daughter as she and Kaia watched Skyler descend the stairs. Kaia kept having to remind herself not to take the vision in a pale green into her arms once she reached the bottom of the steps, no matter how bad she wanted to.\n\n\"Hey, you,\" Skyler said as she reached the bottom, her eyes giving Kaia a complete once over as her mother watched with an amused gaze. \"I didn't even know that you owned a dress.\"\n\n\"Skyler!\" her mother said with a sound of exasperation that drew a laugh from Kaia.\n\n\"Relax, Mom. She knows that I'm teasing her,\" Skyler said, looking at her mother. She then turned her attention back towards her girlfriend. \"You look so amazing, but then again, you always do.\"\n\n\"Thanks,\" Kaia replied, a fluttering in her stomach now that she was so close to Skyler. It hit her at that moment how much in love she was with the young auburn-haired beauty. She needed to tell her, and soon. \"And you look stunning. I think this might be my most favorite thing I've ever seen you in.\"\n\n\"You know, if you two would like to steal a kiss, now would be the time. Your father is utterly distracted by the baseball game,\" Bree Ann said, her voice low and conspiratorial. The spectacle of her suggesting such subterfuge drawing a giggle from the lovers.\n\n\"Well, go on then. Get it over with and then we can go eat.\"\n\nThe two women quickly looked at each other, and then Skyler took a peek in at her dad. Seeing the back of his head, she turned back to Kaia and wiggled her eyebrows before leaning in and giving her the kiss they both craved so badly. It was hardly a chaste kiss, but neither did it satisfy the yearnings bubbling inside either of them.\n\n\"There now, you two go and find your way to the table while I corral your father.\"\n\nThe meal went well. It had been a long time since Kaia had eaten some genuine southern home cooking, and Bree Ann's was on par with the best she'd ever been served. Jonathan Grace didn't say a lot during the meal, mainly listening and observing how the three women interacted. Kaia could feel whenever his eyes landed on her, though she only snuck a few surreptitious looks his way during the meal. She couldn't shake the feeling that the Pastor had already worked out exactly what her relationship was to his daughter. The only question left inside Kaia's mind was exactly how he felt about it.\n\nThe four of them were enjoying their dessert, a scrumptious peach cobbler, when Skyler's father decided to make his first significant contribution to the conversation.\n\n\"I got an exciting call the night before last, Skyler. I think you will find this very interesting,\" Jonathan said, his eyes focused solely on his daughter.\n\n\"Oh yeah?\" Skyler said, her eyes furrowing at the way her father made his statement. He didn't often make such pronouncements to her, and typically when he did, she didn't enjoy what followed.\n\n\"Yes, indeed,\" he replied. \"I heard from Frances Dailey, Becka's mother. She said that she and Becka's dad had divorced last year.\"\n\n\"Well, that's not good,\" Skyler replied, perplexed as to how her father had chosen to frame his opening gambit to the topic. While it was news, for sure, what was so exciting about Becka's parents splitting up?\n\n\"No, I guess that part of it wasn't so good, but it does get better, though there was other bad news as well.\"\n\nKaia watched the exchange between father and daughter, feeling a bit bemused. She had no clue exactly where Skyler's father was trying to go with this.\n\n\"What other bad news. Is Becka okay?\"\n\nJonathan Grace reached over and patted Skyler's hand and said, \"She's okay, Skyler, though her mother did say she'd gone down a rather bad path after her father abandoned them for another woman.\"\n\n\"Bad path?\" Skyler said, thinking of her friend, who had always been so shy and reserved. What could sweet and beautiful Becka have possibly gotten up to that could be considered so wrong?\n\nJonathan Grace waved a hand and said, \"Frances didn't go too far into detail, but she did mention some drug usage and the fact that she strongly suspected Becka was having sex.\"\n\nSkyler rolled her eyes, stealing a glance across at Kaia before turning her attention back to her father.\n\n\"Dad, Becka is older than I am. So it doesn't surprise me that she's had sex. It's not a rare occurrence among eighteen-year-olds in this town, much less in big cities like Los Angeles.\"\n\nKaia watched as Skyler blushed, the implication of her words hanging over the dinner table like a pall of acrid smoke that threatened to poison the atmosphere in the room. Her concern grew when she watched as her girlfriend's back stiffened, her eyes taking on a defiant look.\n\n\"Of course, it's not, sweetie. It wasn't that uncommon when I was eighteen. I'm not sure that your father is doing an outstanding job of relaying Frances's concern. However, I can't be sure considering this is the first I've heard of this topic,\" Skyler's mother said to her daughter, her voice softly disarming at first before hardening at the end as her eyes cut towards her husband. Kaia had met drill instructors in the Corp who, though they were far less subtle, would have intimidated her less than a determined Bree Ann Grace.\n\nKaia watched as Jonathan Grace's eyes fluttered between his wife and daughter. It was as if his emotional barometer was suddenly throwing up warnings of an impending storm that held destructive potential. Kaia could almost see him mentally trying to calculate a safe path to backtrack through the potential minefield he suddenly found himself trapped inside. As comical as the sight was, Kaia found herself pitying the man.\n\n\"Well, um...I guess maybe not. But I was generalizing because I didn't want to relay too much of what Frances shared. After all, I'm not entirely sure of what she meant for me to hold in confidence.\"\n\nHis words did little to soften the mood in the room. Skyler stared back at her father, her arms crossed in a petulant and challenging manner. The pastor's wife was sitting back in her chair, her glass of tea in hand as she raised a single eyebrow at her husband. It was a look that seemed to ask how he planned to get out of this one.\n\n\"Um...you mentioned some good news, Mr. Grace? What was it?\" Kaia said, trying to throw the drowning man an emotional lifeline.\n\n\"Huh?\" Jonathan Grace replied, his gaze suddenly finding Kaia as if he'd forgotten she was even in the room. His eyes focused on her in concentration, his mouth in a thin line. But as her question sunk in, his lips softened into a thankful smile as the sudden awareness of what she'd done seemed to hit him.\n\nLooking back to his daughter, he said, \"Oh, yes, Frances wanted me to give her cell number to some of the listing agents in our congregation. She wants to leave California and move back here to get Becka away from the crowd she's currently hanging around with out there. So your best friend is coming home.\"\n\nThe pressure in the room suddenly seemed to deflate, though not entirely. Kaia took note that although the stiffness in her girlfriend's body lessened, it didn't entirely go away.\n\n\"Well, that is good news, isn't it,\" Skyler's mother said, reaching over to pat her daughter's shoulder. It was clear to Kaia that Bree Ann had also noted that her daughter's body still held a defensive posture.\n\nSkyler reached up and grabbed her mother's hand, giving it a little squeeze, but her eyes never left her father's. \"It is, Mom, and I really look forward to seeing Becka, but I'd hardly consider her my best friend anymore. That would be Kaia.\"\n\nKaia watched as Jonathan's eyes shifted between the three women before finally settling on her. He gave her a friendly smile and said, \"Of course she is. I didn't mean to imply otherwise.\" Looking back towards his daughter, he added, \"I just remember how torn up you were when her father uprooted their family and moved her away from you.\" His eyes going back to Kaia, Jonathan said, \"Skyler was despondent for a long time after Becka left. She was so hopelessly depressed that her mother and I had to arrange for her to meet with a grief counselor.\"\n\nHis words were simply meant as an explanation. That was clear to Kaia, but Skyler took them as the perfect opportunity to segue into the prime topic that the meal had been scheduled for in the first place.\n\n\"I was depressed because I was in love with her, Dad. It was just puppy love, but it still felt real enough at the time.\"\n\nThe room went quiet. Kaia studied Jonathan Grace's face to see his reaction. Other than his eyes going wide, though, there was little to see. Whatever the man was feeling at hearing his daughter's revelation, he kept it well hidden.\n\nHer voice softening significantly, Skyler pressed on.\n\n\"I was too young at the time to be able to handle what I was feeling for Becka emotionally, and I had way too much guilt to do anything other than repress the implications of it.\"\n\nKaia saw her girlfriend's eyes mist over with a sheen of tears. But her countenance also carried a purposefully determined look. One that said she wouldn't allow her fears or emotions to deter her from the course she'd chosen.\n\n\"I'm not the little girl anymore, though. I've grown up a lot since then and come to terms with all those emotions and what they mean, Dad.\"\n\nKaia held her breath. Here they were, having reached the summit of their long climb. She knew that Skyler's next words would either be accepted and a reason for celebration, or things would quickly go crashing down the other side. And if that happened, there was no telling how bloody everyone would be when they reached the bottom.\n\n\"I'm glad Becka is coming home, Dad. It will be nice to have her here because I've missed her. But even better, it will give me a chance to introduce her to my girlfriend.\"\n\nFor the first time in a while, Skyler's eyes found Kaia's for more than just a glance. Her emerald green orbs burned with an intensity that told Kaia how she felt, even if the words had yet to be spoken. It was a big step to say something like that for the first time, and Kaia was okay waiting to hear it.\n\nKaia wondered how Skyler's father was taking his daughter's news, but found herself unable to tear her eyes away. Wanting to reassure and support her girlfriend, Kaia reached across the table to offer Skyler her hand. The auburn-haired beauty's fingers found hers, their digits intertwining. Kaia smiled at her, giving Skyler a wink.\n\nKaia wasn't sure how long they sat there staring at each other, no one saying a word. It wasn't until she heard Bree Ann speak that she could tear her eyes away from the smoldering gaze that Skyler had them trapped inside.\n\n\"Do you understand what your daughter is telling you, Jonathan?\"\n\nAll eyes went to the man sitting at the head of the table. Kaia couldn't help but think of how he looked like raw-recruit his first day at boot camp on Parris Island as he's being screamed at by his drill instructor. He seemed so afraid of saying the wrong thing, Kaia wasn't sure he would say anything at all.\n\nFinally, Jonathan Grace looked at his daughter and said, \"Are you sure of this, Skyler? I don't mean to question how you feel, but this is a big step, and there's no walking it back once this news is out there. People will have their reactions, and it likely won't all be positive.\"\n\nKaia studied Skyler's father. His question seemed sincere, and his voice was full of concern for his daughter. She turned to look at her girlfriend and found Skyler's eyes on her, a smile on her face that spoke volumes.\n\n\"I've never been more sure of anything, Daddy. And I know there are likely going to be people that will judge me for it, but I'm okay with that as long as I have Kaia by my side and you and Mom at my back,\" Skyler said gently to her father, though her eyes never left Kaia.\n\nJonathan Grace pushed his chair back, standing up as he studied the scene in front of him. He looked first at Skyler before allowing his eyes to drift over to his wife, finally coming to rest on Kaia.\n\nTurning back to his daughter, Jonathan said, \"Well, if Kaia is what it takes to make you happy, then I guess that I can live with that. It wasn't exactly how I saw things going while raising you, but I think being a parent is like that quite often. I'll certainly support you if this is what you really want.\"\n\nThen turning his eyes back to Kaia, he said, \"But I will expect to see you in church with my daughter for now on, young lady. No exceptions.\"\n\nKaia's eyes went big, but she immediately agreed. The fact that he had no intention of having Skyler hide her feelings was remarkable, but the reality that he didn't mind her openly expressing them in the church was more than Kaia could have hoped for in her mind.\n\nJonathan Grace then quietly excused himself to return to his ballgame in the front room, leaving the three women sitting there in shocked silence until he was gone.\n\nThey waited until they heard the television cut on, the sound of the Atlanta Braves announcers coming from the sound system, before Skyler stood, releasing a little squeal as she grabbed her mother in a hug.\n\nKaia watched the pair share their moment, still in a little bit of awe at all that had transpired since she'd first met Skyler. A plethora of happenstance and tragedy had brought Kaia to this small town at a time when she'd desperately needed to pick up the pieces of her life. Kaia had arrived firmly believing that her chance at true love had passed her by, only to quickly discover that it had been patiently waiting here for her all along. Waiting in the form of an auburn-haired beauty who hadn't yet come to terms with her sexuality.\n\nShe didn't know what the future held for the two of them, but Kaia was ready to face whatever came head-on. After all, if Skyler could overcome all she had in such a short time, then Kaia owed her nothing less than going all in.\n\nEven if the thought of being hurt again scared her to death.\n\nKaia had barely had time to register those thoughts when Skyler left her mother's arms and slid into her lap, her right arm going around Kaia's neck. She slipped her arms around the younger woman's narrow waist and smiled at her, leaning her forehead against Skyler's.\n\n\"We don't have to hide anymore, baby,\" Skyler cooed at her softly, an almost giddy look in her eyes.\n\nKnowing Skyler's mother was watching intently and understanding that Bree Ann wouldn't mind in the least, Kaia brought her lips to Skyler's. The kiss the two women shared made their earlier liplock in the front entrance almost seem chaste in comparison. Kaia was only peripherally aware of the older woman quietly excusing herself as their kiss continued. She hoped that they hadn't made Bree Ann uncomfortable, but found herself unwilling to break the kiss with Skyler.\n\nWhen their lips finally separated, the two women stared at each other closely. Kaia could feel the passion emanating between them as if it almost had a corporeal presence, something tangible that she could reach out and touch if she chose to. How many times in a lifetime could a person hope to find the kind of love that left you feeling intoxicated? The kind that made you feel as if you might float away without something to anchor you in place. Kaia didn't know, but she decided that it was damned time she made Skyler understand just how she felt.\n\n\"I'm in love with you, Sky,\" Kaia said, just as Bree Ann stepped back through the kitchen's swinging door with a roll of cling wrap in her hands.\n\nKaia saw Skyler's mother freeze in place out of the corner of her eye, but it was the way Skyler's eyes went big at her admission that grabbed her attention.\n\n\"Wh...what did you say?\"\n\nSteeling her resolve and pulling the auburn-haired beauty closer to her, Kaia repeated herself.\n\nHer words hung between them for what felt to Kaia to be an inordinate amount of time, but it was likely only a matter of just a few seconds in all reality.\n\n\"You know, I always hated it when Jacob called me Sky. It used to drive me insane,\" Skyler said at last, before allowing a big smile to blossom across her face. \"But I love the way it sounds when you say it. And by the way, I'm in love with you, too.\"\n\nBoth younger women couldn't help but laugh when they heard a sudden squeal from behind them and suddenly found themselves enveloped in a hug from Skyler's mother. Kaia accepted a kiss on the cheek from Bree Ann, Skyler, too. The older woman's eyes were moist with tears as she turned to slip away back into the kitchen without saying a word.\n\n\"Think she's happy?\" Kaia asked jokingly.\n\n\"Maybe just a little,\" Skyler replied, holding her thumb and index finger slightly apart. \"I'm pretty happy too.\"\n\n\"I might be a little happy myself,\" Kaia said with a roll of the eyes before pulling Skyler in for another kiss. The couple's lips came together time and time again as the feeling of excitement built between them. Kaia could feel her panties moisten as their tongues danced together, the sudden need to possess Skyler's body nearly overwhelmed her.",
        "\"If you think we could sneak off to my house, I think I can show you exactly how happy I am,\" Kaia whispered into her girlfriend's ear, nipping at the younger woman's lobe.\n\nPooching out her bottom lip in a pronounced pout as she slid off of Kaia's lap, grabbing her girlfriend's hand as she pulled her to her feet, Skyler said, \"I don't think I can wait that long.\"\n\nShe pulled Kaia out of the dining room and into the wide hallway that ran the length of the front entry, holding a finger to her lips to indicate that they should be quiet. Skyler then opened the door to the half bath and proceeded to pull Kaia inside, a naughty and determined grin plastered all over the auburn-haired teen's face.\n\nKaia's eyes went wide in surprise, Skyler's intent registering in her mind. She watched as Kaia's head swung in the direction of the opening to the den, just a few steps away. Jonathan Grace's head was evident to both of them, utterly oblivious to anything but the happenings in the baseball game.\n\nWith a determined tug, Skyler pulled Kaia inside, closing the door quietly behind them.\n\n\"Are you crazy?\" Kaia asked in a determined whisper.\n\nSkyler smiled back at her as she backed up a step to the vanity, hiking up her dress to reveal that she wore no panties. Hopping up to sit on the vanity, her bottom resting on the edge of the sink as she leaned back against the large mirror hung there, Skyler opened her legs, dragging a finger between her cleft as she bit at her bottom lip. She then held it up for Kaia to inspect the moisture glistening on its surface.\n\n\"Crazy horny.\"\n\nKaia's eyes wavered between Skyler's and what lay between her thighs, a delicate balancing act between the fear of being caught and desire playing out on her face. Skyler knew her girlfriend, though, and had little doubt, which would win out in the end.\n\nShe was proven right as the cocoa-skinned beauty stepped forward between her legs, her smile widening in victory momentarily. Her face froze in confusion, though, as she watched Kaia turn to grab a washcloth off of the shelf to her right before turning back to face her.\n\n\"Now I know how boisterous you can be at times when you get excited, and we can't be having that right now, can we?\"\n\nSkyler shook her head, reasonably sure she knew where this was headed.\n\n\"Now, you're going to open your mouth, and I'm going to put this in it. That should be a not so subtle reminder to you to stay quiet, and help muffle your cries should you forget.\"\n\nSkyler said nothing, merely opened her mouth wide in surrender. She knew that the primal side of her brain was ultimately in control at the moment. Her eyes stayed locked on Kaia's as the sexy former Marine slowly stuffed the washrag in her mouth. With it in place, she watched as her girlfriend leaned forward and closed her eyes as she felt Kaia's lips nibble at her earlobe, her warm breath sending shivers down Skyler's spine.\n\n\"Be a good girl and stay quiet for now, and I promise that I will give you plenty of reason to scream later on at my place. Misbehave, though, and you get nothing.\"\n\nSkyler could only moan softly into the washcloth as she watched Kaia drop to her knees, her hands going to the inside of the teen's thighs to force them further apart.\n\n\"Now remember,\" Kaia said, looking up at her, eyes dark with arousal, \"silence is a virtue, and that's never more important than when what you're doing isn't very virtuous.\"\n\nSkyler nodded her head and then stifled a moan as she watched Kaia bury her face into her needy wetness, feeling her tongue slide up through wet folds, flickering against the hardness of her little button. The sensations felt beyond description each time she experienced them, Kaia seeming capable of taking her to new heights every time they were intimate with one another.\n\nWhether sensing the desperation of Skyler's need or perhaps the shortness of their time, Kaia focused on the younger woman's clit, her tongue breaking against it like the waves of a storm dashing against a jetty. Skyler was already so close, the emotional revelations of the day, the admissions of their love, it all seemed to have her hanging at the edge.\n\nAnd as usual, Kaia knew just what to do to send her over into nirvana. So lost in the sensations that her lover's tongue was creating, Skyler barely had time to make a note of the two fingers probing at her creamy opening before they were plunged into her depths. Her back arched off the mirror, her eyes rolling back in her head as Kaia's fingers began to brush and tap against her g-spot. Skyler's climax was hitting her at once, a swirling eddy of primal erotic pleasure threatening to swallow her down into its depths.\n\nWhen it had passed, Skyler opened her eyes to find Kaia staring at her intently, a look that told the auburn-haired beauty that her lover wasn't quite finished with her yet. And when Kaia stopped her from removing the washcloth from her mouth, that thought was only confirmed.\n\nKaia grabbed her hips, pulling Skyler off the sink, drawing a muffled squeal from the teen as she spun her around to face the mirror. She then felt one of Kaia's hands pushing between her shoulder blades, forcing Skyler to lean over against the bathroom vanity. Watching as Kaia leaned over, her mouth next to her ear, Skyler again shivered. Not so much at the feel of Kaia's warm breath this time, as at the way she was taking charge. The younger woman loved it when Kaia was like this.\n\n\"Did that feel nice? Did coming like that make you happy, or did it only make you hungry for more?\" Kaia asked in an almost breathless whisper that was nearly too sensual for Skyler to bear. Realizing the answer to both questions was the same, she merely nodded her head and was immediately rewarded by the feel of long fingers sinking into her pussy.\n\n\"See? I know what a needy young woman you can be, so I'm feeding that sweet pussy of yours three of my fingers. Do you want me to fuck you with them?\"\n\nAgain, Skyler could only release a muffled moan as she nodded her head almost vociferously.\n\n\"Okay, Sky. I'm going to fuck you good, but only if you promise me that you will stare into your own eyes in the mirror. I want you to see that moment that I see every time you come, that moment when you look most alive. It's something that isn't to be missed. Promise me?\"\n\nAgain Skyler nodded her head. She was so lost in that moment that she'd shut out the world. Complete putty in Kaia's hands, Skyler would have agreed to almost anything, her base instincts ruling completely.\n\n\"Good girl,\" Kaia said as Skyler felt her fingers beginning to slide in and out of her wetness, twisting back and forth as if trying to be everywhere at once. The feeling was nearly overwhelming as was the urge to look at Kaia, but Skyler knew that she couldn't; she'd promised after all.\n\nFor a couple of minutes, this went on more, a second climax building, but not quick enough for Kaia. Skyler felt the front hem of her dress lifted and the fingers of Kaia's left hand searching for her clit, finding it, and trapping its hood between her index and middle finger. Kaia began to pinch at it and work it back and forth even as she continued to plunge her fingers into Skyler's gooey depths.\n\nThe duel stimulation made short work of ramping Skyler up to the precipice of climax, but it was her words that pushed the teen over.\n\n\"Come for me, Sky. Come for the woman that you love.\"\n\nSkyler saw it then, the spark, the passion, the complete ecstasy of being alive at that moment. It was all there in her eyes, just as Kaia had said. She saw it all, just before her eyes rolled back, her head collapsing down onto the vanity to rest against its cold surface as she enjoyed the feeling of her vaginal walls clamping down around Kaia's long fingers.\n\nSkyler was still breathing hard through her nose when Kaia finally plucked the washrag out of her mouth and said in a low voice, \"Think that might tide you over until later at my house?\"\n\nSkyler raised her head, smiling at her girlfriend's reflection in the mirror before taking note of how disheveled her appearance had become and making a mental note that she'd have to fix it before exiting that bathroom.\n\n\"I think I might be able to survive until then, but only if you promise me that I get to return the favor first.\"\n\n\"Actually, Sky, I intended to insist on it.\"\n\nThey both shared a kiss before taking a moment to repair some of the damage done to their appearance, something that couldn't be totally done without a hairbrush and makeup, but the two made do the best that they could.\n\nThey exited the bathroom, both staring back towards the front room where the back of Jonathan Grace's head was still visible, and walked right into Skyler's mother, who stood there holding a handful of folded washcloths, an amused look on her face.\n\n\"Mom, I...well...\"\n\n\"Why is it that I get the distinct feeling the two of you just left my half bath smelling like a house of ill repute?\" Bree Ann asked quietly, a single eyebrow raised and a smirk on her face.\n\nBoth young women stared back at the Grace household matriarch, Skyler, with a look of terror, with Kaia doing her best not to laugh.\n\n\"Um, actually, I sprayed your air freshener, Mrs. Grace,\" Kaia replied, Skyler, wincing at her words, an admission of their guilt.\n\n\"Thank you, Kaia, and from now on, it's Bree Ann,\" Skyler's mother replied to Kaia before turning her attention back to her daughter, handing her the stack of washcloths. \"Put these on the shelf for me, dear.\"\n\nStill mortified at the entire scene, Skyler did as she asked, returning from the bathroom to see Kaia kiss her mother on the cheek, Bree Ann waving at the two of them as she turned and headed back in the direction of her laundry room.\n\nTurning to see Skyler, Kaia grabbed her hand and said, \"I told your mom we were headed out for a while and that you would be home before your curfew.\"\n\nThe two started towards the front door, Skyler stifling a giggle as they reached it. Kaia opened the door and gave her girlfriend a confused look, which only made Skyler laugh harder as Kaia closed the door behind them.\n\n\"What?\"\n\n\"That kiss you just gave my mom on the cheek? Well, you know, you never did wash your face after you went down on me...\" Skyler said before bursting out laughing and backing down the steps as she watched the implication of her words dawn on Kaia's face.\n\nKaia's eyes winced, her face screwing up. \"Oh, my God. How do I ever face her again? And you! You're enjoying this entirely too much!\"\n\nSkyler could only laugh harder in response as she continued to back up the pathway towards the sidewalk, squealing when Kaia bounded down the steps coming after her in a hurry. Skyler turned and took off running up the sidewalk, laughing as she ran, knowing that it was only a matter of time before Kaia caught her.\n\nWhen she finally did, about a block short of Kaia's house, Skyler was too out of breath from her sudden sprint and all of the laughing to put up much of a fight. So when Kaia spun her around and took her firmly in her arms, bringing their lips together in a passionate kiss, Skyler thought nothing of it.\n\nBut others took note.\n\nChapter 12\n\nSkyler was with Kaia the day the letter arrived in her mailbox, seeing the look on her face as she retrieved it from where the postman had it entombed. Kaia's eyes had danced across the letter's surface, recognition dawning there as the meaning of the words on its face sunk in. And although the weather was still quite warm, the way it tends to be in early October in Georgia, Skyler was reasonably sure she saw Kaia's skin prickle with gooseflesh as a chill ran through her.\n\nThings had gone well for the couple since Skyler had been outed courtesy of someone with a curious eye, a black heart, and a cell phone, almost too well considering the circumstances. Skyler had woken up the day after coming out to her father to find a picture of her and Kaia making the rounds on social media. The two were locked in an embrace, their lips fully engaged with one another as they stood in front of the old house Kaia was renovating. Kaia was at a three-quarters angle, facing mostly away from the camera. She would have been hard to distinguish for anyone who didn't know her despite the photo's clarity.\n\nBut there was no mistaking Skyler. Most of her face's right side was visible; the shot zoomed in from the wooded area near the park. The high megapixel photo revealed Skyler's secret in all of its glory. As she laid there that morning looking at the image and reading some of the responses to it, Skyler, strangely enough, hadn't felt robbed or cheated.\n\nShe'd simply felt relieved.\n\nWith school out and many of her closest friends out of town, Skyler found the thought of going back to classes in the fall decidedly intimidating. All of those she'd lost track with over the summer would return the week before school, and a juicy tidbit of gossip like hers would have likely lead to a massive feeding frenzy the first week of fall classes. Skyler would have been the freak in a sideshow, at least around these parts.\n\nBut her secret admirer had removed that burden. Perhaps his or her motives hadn't been at all altruistic, but they'd still managed to work in Skyler's favor.\n\nThey'd even given her an idea of a sure-fire way to drive the point home while taking control of the narrative and using it to suit her needs.\n\nOne of the many responders to the anonymous social media posting of the picture that had been positive had come from an upcoming junior on the cheerleading squad. Kelly Foster was not just a fellow cheerleader, but a casual friend as well. She'd wished Skyler well in her response and made the point that she should be supported and not torn down for being brave enough to be herself.\n\nSkyler had called Kelly and explained what it was she needed. Her friend had been only too eager to help, promising to meet Skyler at Kaia's later that afternoon.\n\nAfter introducing her to Kaia, Skyler had asked Kelly to take a series of pictures. Pictures that featured her with Kaia, the kind that left little doubt of their fondness for one another. Nothing salacious or suggestive, yet the photos still managed to radiate the depth of feelings that flowed between them.\n\nSkyler then posted the shots on her page, updating her relationship status and announcing to the entire internet that Kaia was her girlfriend. Her post read that she hoped that people would support her, but that regardless, she was thrilled that she no longer had to hide her sexuality.\n\nIt was a verbal/non-verbal way for Skyler to send a fuck you to whoever had taken and posted that picture of her and Kaia kissing. Although she thought she had a pretty good indicator of who that might be.\n\nSkyler knew it wasn't Jacob. Despite his lack of tact and overall social skills, he wasn't dumb enough to spotlight the fact that she was gay. Considering they'd spent the last year in a relationship, one that had ended embarrassingly for him on her terms, it would have been the last thing in the world that he wanted to see become public knowledge.\n\nBut Kinsey Saunders would be an entirely different story.\n\nShe'd been the girl that Skyler had handily beaten out for the head cheerleading spot, something that Kinsey had outwardly taken graciously. But others on the squad had informed Skyler that she hadn't handled things so well inwardly. In private, Kinsey made her feelings well known to one or two other members of the squad. People that she'd improperly judged as being able to stay quiet.\n\nSkyler couldn't pin it on her for sure and had no desire to do so. But if required to choose who she thought had taken and posted the photo, Kinsey would have been her choice.\n\nIf it indeed was her, it had backfired for the most part. The responses to it had probably been close to seventy-five-percent in support. Of the remaining twenty-five-percent, only a small amount of those had been adamantly opposed.\n\nThe photos that Kelly had taken received even more support, and from a far larger audience than Skyler had anticipated it would. And not only had she received well wishes and help from her friends at school but also from older former classmates that were now spread out around the country enrolled in various colleges. There were still a few sniping type comments from the typical suspects, but they'd been quickly shouted down by those shaming them for being their ignorant views.\n\nSkyler's parents hadn't had it relatively as easy at church. The older generation of members had taken the news about Skyler very poorly, and the pastor and his wife's support even worse. And then there was Jacob's parents and the small cadre of sycophants who supported them. It was apparently an insult that their son's long-time girlfriend should dump him to become a lesbian. The thought that hadn't been the actual order of events never seemed to occur to the couple. They merely saw it as a slap in the face directed towards their son.\n\nThere had been a quiet drive on their part to have Skyler's parents publicly condemn her actions. And when that failed, they'd gone over his head to the state home office overseeing the denomination.\n\nJonathan Grace had attended a private meeting with the state overseer and a group of other prominent pastors from within Georgia, but he hadn't gone ill-prepared. When some of the more conservative among the group had spoken out against homosexuality, quoting old testament scripture in support, Skyler's father had quickly rebutted every comment with Christ's own words. And while the conversation had never gotten heated, it was spirited and passionate at times.\n\nBut it was the overseer's assistant who'd finally settled things. She was a young woman who'd just graduated from a prominent Bible college in Tennessee, and it was her pearl of wisdom that quieted those so quick to rebuke. She'd merely quoted the percentages of teens and young adults today who strongly supported a person's right to express their sexuality. She'd then pointed out that a large portion of those would want little to do with any church quick to condemn a congregant for being gay, or a pastor for supporting them. After that meeting, Skyler's father told her that he could see all the men in attendance quickly doing that math in their head as they tallied their potential drop in attendance, and thus the loss of tithes they'd endure.\n\nNeedless to say, nothing came of the meeting.\n\nSome of the more ancient hardliners within the church did stop attending, as did a tiny smattering of middle-aged couples, but the loss of numbers was hardly noticeable. And if anything, it was promptly replaced by a swell in the numbers involved in the youth group.\n\nThe remainder of June went reasonably smoothly for them both. What waking hours Skyler didn't spend with Kaia was spent in workouts with the cheer squad. Her time with her girlfriend was spent helping her with projects around the house. Skyler's carpentry and renovation skills were nil, but she could read a tape measure and handle a paint roller just fine. Kaia used her where she could and made use of her otherwise as an extra set of hands. Skyler didn't mind. Not as long as it kept her close to the woman she loved.\n\nAnd then there was the sex.\n\nWhat skills she lacked in flipping houses, Skyler more than made up for in the sapphic arts. Kaia loved to tell the auburn-haired beauty how no woman had ever gotten her off with as much zeal as Skyler put into her efforts. The teen was content to spend as much time as possible between her lover's legs, pleasuring Kaia until the former Marine begged her to quit. Skyler still marveled at the discoveries she made each time she explored Kaia's toned body, building up a mental index of the various erogenous zones and which ones seemed to drive her lover to distraction the best.",
        "It wasn't that Skyler didn't enjoy the receiving aspect of things. Kaia was masterful at making every erotic nerve ending in the teen beauty's body sing in a chorus of rapturous sensual delight. The cocoa-skinned goddess took great joy in walking Skyler to the edge of orgasmic oblivion before denying her the release the teen yearned. She would repeatedly do this until Skyler began to beg. When Kaia finally gave in to her pleas, she would drive the teen almost forcefully over the edge. Skyler felt as if she was falling through a mist of charged particles, the tip of every nerve in her body dancing in unchoreographed gratification, a mosh-pit of sexual bliss.\n\nBut each time Skyler went over the edge, Kaia was always there to catch her when she hit bottom.\n\nThe teen loved that about her older girlfriend. Kaia was possessive and firm when they made love, almost to the point of being aggressive, but she was also loving at the same time. There was never a point during their many hours of sex where Skyler felt she was being used. Even with Kaia behind her, driving her long and thick strapon into the teen's silky, wet depths as she pulled at Skyler's thick mane of hair, arching the auburn-haired beauty's neck back and forcing her back to bow, the words that Kaia would growl at her were loving and sensual. Skyler had come to crave those moments where she could give herself wholly over to Kaia, relishing in the pleasure her lover wrung from every pore in Skyler's body.\n\nThe first week in July brought some change to Skyler's life. Becka and her mother returned to town just two days after the fourth of July celebration. The pair had rented a house about three blocks from Skyler's home in the opposite direction and down a side street from Kaia's place. It thrilled Skyler to not only have her friend back in town, but just a short walk away.\n\nBut Skyler couldn't help feel a bit apprehensive too. Her mother had spoken with Becka's mom several times since finding out about their return. Bree Ann said that Frances had repeatedly mentioned how much Becka had changed since her father had abandoned them, not only in action but also in appearance. Skyler's mother indicated that Frances seemed very concerned with her daughter's transformation.\n\nSkyler was unsure what to expect. She knew that some parents could become overwrought with concern over the most minor of things. The sweet and beautiful girl she'd fallen deep in puppy love with back when they were young teens had seemed far too innocent and restrained in personality ever to go too wild. Skyler had scanned social media for anything on Becka, but her accounts had gone inactive around the same time her father had pulled his disappearing act.\n\nSo, it was with a little apprehension that Skyler and Kaia waited with Bree Ann Grace on the lawn of Becka and her mother's new home, watching as the moving truck carrying their worldly possessions pulled in front of the house, a gray late model SUV trailing not too far behind it. As the truck trailer cleared the driveway, the gray SUV slid in behind it and parked just a few feet away from where they waited.\n\nBecka's mother had seemed to hardly change at all in the time they'd been gone. Her hair was slightly shorter and styled differently, but it was still jet black and held its natural luster. There were a few more lines around her eyes, and she might have gained five pounds, but those were the only tolls that time had taken on her outward appearance.\n\nBecka, well, she was an entirely different story.\n\nSkyler could still remember trying to hide the look of shock on her face as she took in Becka's visage and the changes maturity had brought to her body. Like her mother, Becka had always had raven-colored hair, straight and long, usually worn in a braid or a ponytail. She'd been several inches shorter than Skyler but had been the first to sprout breasts, the flare of her hips suddenly drawing the attention of all the boys around them. Skyler had still been tall, gangly, and mostly flat-chested at the time, and while they'd both been pretty, it was Becka who'd received all the attention from the boys around them. A fact which had nearly driven Skyler mad with jealousy.\n\nOnly she hadn't been jealous of Becka, but the attention that she paid the boys.\n\nSkyler hadn't been able to quantify it at the time, but she'd had to grit her teeth whenever Becka would talk about the boys chasing her, asking Skyler what she thought of this guy or that guy. The young auburn-haired teen had been forced to feign interest and support of her friend's romantic life, all the while dying inside. She'd thought at the time that it was because she was afraid of losing the closeness the two shared to some random boy.\n\nBut now Skyler knew differently.\n\nThe woman who stepped out of the passenger's side of the car would have been indistinguishable to Skyler had she run into her on the street. She'd have found her pretty, decidedly so, but would have never known her as the girl she'd obsessed over as a young teen.\n\nBecka was still shorter than her by an inch or two, but that was the only similarity to the girl she remembered. Her long hair had been hacked off and styled, if you could call it that, in a wild mess that seemed to stick out in a mishmash of angles. Gone was the raven color too. Skyler could still remember sinking her fingers into Becka's coal-black tresses as she'd helped braid the older girl's hair, always marveling at how it shined.\n\nIn place of the luxurious black, was a honey-blonde with frosted pink tips. Her hair color and highlights were a complete contrast to the rest of Becka's look, though. The makeup around her brown eyes was dark and smoky, her skin pale. Her plump lips were unadorned, but that was about the only part of her face that you could make that comment about and be honest. Becka's right nostril was pierced, as was her left eyebrow. Her ears were also decorated with a plethora of piercings, various style studs, and small hoops running up and down each lobe.\n\nSkyler couldn't help but wonder what else her former best friend had gotten pierced.\n\nBecka's body was still a wet dream, more so than ever. Her breasts were large, and least a D-cup, her ass as shapely as ever. Her hips were just wide enough that the taper to her waist gave her an hourglass shape.\n\nThe only thing settling the nerves that Skyler felt was Kaia's presence. She felt her girlfriend squeeze her hand in a gesture of reassurance, the two exchanging a glance. By then, Bree Ann and Frances were hugging each other, questions, and answers flying between the pair in staccato fashion.\n\nSkyler's eyes found Becka's, the stranger staring back at her, a mirthful smile on her face as she shook her head, her right hand propped up on a hip stuck out to that side. Skyler could still remember Becka's first words.\n\n\"So, when did this come about, Red?\" Becka asked, the finger of her left hand oscillating between Skyler and Kaia.\n\nSkyler rolled her eyes at Becka's use of the nickname. She'd hoped that Becka had forgotten it in the years the pair had last spoken, but apparently not. Becka had been the only one she'd allowed getting away with its use.\n\n\"Becka, Frances, this is my girlfriend Kaia, Kaia, this is Becka and her mother Frances,\" Skyler said, purposefully dodging Becka's question. There would be plenty of time later on to cover that ground.\n\nKaia got a nod of Becka's head but was enveloped in greeting by the younger woman's mother. Frances, Bree Ann, and Kaia talked briefly, while Skyler was content to just sit by and listen as she held Kaia's hand. The entire time, she was conscious of Becka, who still stood off to the side, her eyes carefully studying the scene in front of her.\n\nTheir lawn party was broken up by the movers' approach as they began to unload the truck, carrying boxes and furniture towards the house. The two older women made their way inside to begin directing traffic so they could make sure each piece was set in the correct room, while the trio of Skyler, Kaia, and Becka remained outside.\n\n\"You didn't answer my question, Red,\"\n\n\"I see you still haven't grown out of calling me that,\"\n\nBecka gave her a coy smile, her eyes fluttering in Kaia's direction, pausing there to study the former Marine before returning to Skyler.\n\n\"Why should I? Now answer my question.\"\n\nSkyler couldn't help but smile. Becka still had that bratty streak. When they were girls, she'd only ever had the nerve to show it around, Skyler. Around everyone else, she'd always been sweet and demure.\n\n\"If you're asking about Kaia, then just a couple of months.\"\n\nIt was Becka's turn to roll her eyes as she shook her head at Skyler's reply.\n\n\"That's weak sauce, Red, now spill it.\"\n\nSkyler had shared a quick look with Kaia, her girlfriend looking quite amused at the ongoing exchange. She looked back at Becka, who was rolling the index finger of her left hand to implore Skyler to get on with things.\n\n\"Fine, it goes back to when we were running around together,\" Skyler admitted, feeling her face blush as she prepared for the next part of her admission. \"I kind of had a crush on you.\"\n\nBecka's left hand covered her mouth, which had flown open in feigned shock, the sound of a giggle from Kaia making Skyler blush even darker.\n\n\"My, oh my, the scandal of it all. I do declare,\" Becka proclaimed in her best southern belle accent while batting her eyes at Skyler. That prompted the auburn-haired teen to give her former best friend the finger, causing Kaia to laugh harder.\n\n\"Well, of course, you were hot for me, Red. How could you not be with all these blessings I have,\" Becka had declared, running her hands down over her breasts and across her hips. \"What self-respecting lesbian wouldn't want to get into my panties?\"\n\nContinuing to blush, Skyler had merely shaken her head and said, \"Are you sure you're that sweet little Becka that left here so innocent and with tears in her eyes?\"\n\n\"Hell no, that innocent little twat had her eyes flung wide open by life. She's long gone,\" Becka replied somewhat seriously before a mischievous grin found her face. \"Now, where can a girl score some decent pot around here? I ran out last night just the other side of Birmingham.\"\n\nLeaving their mothers to oversee the movers, the three had made their way back to Kaia's and her stash of herb. They'd spent the rest of the afternoon with Skyler and Becka getting caught up on the things going on in each other's lives, and Becka learning the basics of Kaia's past. They'd done all of this while getting just stoned enough that it necessitated them ordering a couple of large pizza's.\n\nSkyler learned that despite being nearly a year older and further ahead in school, Becka had failed to graduate from high school yet. She'd missed enough classes one semester that she'd been unable to qualify for the minimum hours of classroom time necessary to be able to pass her courses. The following semester she'd been busted at school when an unrelated matter had brought a drug dog to school. Becka explained how the traitorous animal had happened to wander by her locker, reacting to the small amount of coke she had in a purse stashed inside. That had resulted in her arrest and expulsion for the remainder of the year.\n\nAnd apparently, the version of things that Skyler's father had related to them had either been highly scrubbed for content, or Becka's mother had left out quite a few scandalous details.\n\nSkyler could remember wondering if she'd ever indeed known Becka after hearing her tale, The sweet and innocent girl she recalled from childhood had apparently disappeared somewhere on the drive between Georgia and the west coast. Becka had admitted to smoking pot for the first time just a few months after arriving in California, and her first awkward kisses and fumblings with a handsome and much older Latino boy when she was only fourteen. They hadn't had sex, but the experience was lightyears beyond anything Becka had experienced down south.\n\nSkyler hadn't even been kissed for the first time by then.\n\nBy the time she'd turned eighteen, Becka had apparently been dating a twenty-six-year-old drug dealer. They'd stayed together for nine months, three of which he'd spent inside for a drug arrest. That time had also included one abortion when, as Becka put it, the person in charge of quality control over her birth control pills had failed to perform their due diligence. Their relationship had ended for good when her boyfriend had taken a bullet in a directed drive-by-shooting performed by a rival dealer.\n\nAnd then things had really gotten wild for Becka.\n\nShe'd apparently become the \"girlfriend\" to a married couple in their neighborhood not too long after her father had bailed for what he considered greener pastures. She'd first encountered them at the neighborhood's community pool and began to babysit their two young sons shortly afterward.\n\nTheir boys, a toddler and a six-month-old, had been a breeze to care for each time. Becka told Skyler and Kaia that it had been evident early on that the father was trying to seduce her, and she'd been more than willing, but had played coy, to see just how desperate he was.\n\nSurprisingly, though, it had been his wife who'd finally broached the subject, openly suggesting to Becka one night that the two wanted to engage in a threesome with the teen.\n\nThat had caught both Skyler and Kaia's attention, something that hadn't gone unnoticed by Becka. She'd informed them that yes, she'd eaten pussy, and while she thought she might prefer a nice stiff cock, she wouldn't pass up the chance of being with an attractive woman either.\n\nThe couple had taken videos with their phone of the three fully engaged in sexual congress, and when the wife's phone was stolen, the thief had managed to crack her password. He or she had then anonymously posted the trove of x-rated videos found there to the web.\n\nWhen word had gotten back to Frances, she'd been horrified at what her daughter had been up to with the couple. Becka said her mother had been so caught up in the depression that had seized control of her after her husband's betrayal, that she'd been oblivious to the things going on in Becka's life.\n\nNext had come a series of men, and a few women, all substantially older than Becka, who seemed to have nothing but contempt for the thought of having sex with someone her age. But it was only after her mother had come home sick from work one day to find Becka having a threesome with two black gentlemen she'd met online, that Frances had put her foot down and announced her plans to move back to Georgia.\n\nBecka had balked at the idea at first, announcing that she was more than old enough to make her own decisions, and she had no intention of leaving the west coast. It seemed that she'd found it way too much to her liking.\n\nBut she'd admitted to shaking when her mother had acted nonplussed by her threat, saying that was her choice, but that if she decided that was the way she wanted to go, she'd do it on her own.\n\nBecka had then bitterly recounted searching out her father and asking if she could come and live with him. She'd been hopeful, despite the fact he'd abandoned her. Becka and her dad had always been close when she was growing up, another thing that made his leaving so hard. She'd been counting on some of those residual feelings remaining, but if still present, they'd long been quashed by his new wife, who was only ten years older than Becka. She'd made it known in no uncertain terms that she wasn't interested in sharing him with anyone from his past, daughter included.\n\nSo, Becka had resigned herself to the idea of heading back to the deep south, at least temporarily. She planned to behave as much as she had to do to finish school, then work long enough to save the money for a triumphant return to her old stomping grounds, believing that it was where she belonged.\n\nShe'd become a regular visitor with Kaia and Skyler on weekdays over the rest of the summer, working at a local retailer to save money for her escape fund, as she called her savings account, but disappeared on weekends. Becka was always vague about her activities during that time; her answers a bit coy. Skyler strongly suspected that she'd already acquired a lover and was keeping him a secret, and based on her history, that likely meant he was older.\n\nThe summer had stretched on, Skyler occupying herself with conditioning and tryouts involving the cheer squad. By the time August had arrived, her team's roster was set, and she was regularly drilling them five days a week. If anyone had an issue with her sexuality, they'd remained silent. Even Kinsey Saunders had kept her opinions to herself, though Skyler wasn't naive enough to believe that was the case when her back was turned.\n\nSkyler spent her time away from the squad almost exclusively with Kaia, only returning home around the time of her curfew. Sunday was the one day of the week that the couple spent almost exclusively with Skyler's parents. Sunday morning church services, Bree Ann's home cooking for lunch, followed by Skyler's father and Kaia watching the Braves game while the auburn-haired beauty lay with her head in her girlfriend's lap. Skyler couldn't help smiling inwardly at the pair's verbal antics involving what was happening on the screen, their bond growing closer with each passing Sunday.\n\nOf course, they'd always escape that evening to the safety of Kaia's abode, where they'd waste little time ravishing one another's bodies.\n\nReality stepped back in once school started, intruding upon the blissful bubble Skyler and Kaia had existed in all summer. It had been a hard adjustment for Skyler for several reasons, missing Kaia surprisingly wasn't chief among them.\n\nAny zeal or pleasure she'd ever had for the high school experience was long gone. Skyler now struggled to relate to her classmates and the things that excited them. Worse yet was the constant struggle not to turn her nose up at the things going on around her. She had no desire to come across as condescending, even though Skyler felt she'd outgrown the contemporaries she'd grown up with all her life.\n\nDiscovering that she was a consummate actress, Skyler managed to hide her lack of school spirit as she directed the cheerleading squad through the first half of the football season. Their football team was nothing special, but Skyler's unit proved elite, not only keeping the crowd involved in games but winning several competitions on the state circuit.\n\nBecka was a saving grace during the school year. Like Skyler, she was so over high school. Neither girl took the classes too seriously, both being naturally intelligent. And without the distractions and drugs that had hampered her efforts out in Cali, Becka seemed to breeze through her classes effortlessly.\n\nWith neither of them having to sweat the academic side of things, Skyler and Becka made quite the pair as they cut a wide swath through the high school social scene. Their fellow students didn't know quite what to think about the stunning duo. They flustered their fellow male students, both young women relishing the attention as they masterfully teased the boys around them.\n\nSkyler would head immediately to Kaia's house as soon as she could get away from the school, where she would find the sexy former Marine eagerly awaiting her arrival. Becka worked three nights a week and during the day on Saturday, which left the two lovers ample time for sexual play. It wasn't that Becka minded their canoodling when she was around. She didn't. If anything, the free-spirited and highly sexual young woman would eagerly encourage them not to hold back because she was there. Kaia suggested one night that she was reasonably sure that Becka wanted to watch them make love, but Skyler wasn't sure how she felt about that.",
        "Early one Monday evening in October, Kaia had walked down to the mailbox to meet Skyler as she returned from school and cheerleading practice. The young couple had shared a kiss as they met on the sidewalk in front of Kaia's home. Skyler's hair was still wet from her post-practice shower; its usual wavy curls were replaced by tight ringlets. She was busily denying Kaia's assertions that Skyler had spent entirely too much time showering after practice, lingering so that she could observe all those naked young nubile high school bodies just a little longer. Kaia reached into her mailbox, not even looking at what she pulled out as she continued to tease her girlfriend.\n\n\"Come on, Sky, you know that you get a little wet looking at all of that sweet young flesh. And to prove my point, we'll do the dipstick test once we get inside,\" Kaia said, holding up the index finger of her right hand as she wiggled her eyebrows up and down.\n\nSkyler crossed her arms, feigning an angry look as she said, \"You're out of your mind if you think you're touching me. You won't be using me to prove your dirty little theories.\"\n\nKaia laughed as she looked down at the mail in her hand. Skyler could see her mind spinning as she formulated a response, her eyes scanning the front of an envelope.\n\nThe change was nearly instantaneous. Kaia's engaging smile and playful personality disappeared at once as she stopped in her tracks. It was like the beautiful young black woman had been struck dumb, her face going blank as she stared down at the letter in her hand.\n\n\"Kaia? What's wrong?\" Skyler said, instinctually knowing something significant had changed. \"Kaia?\"\n\nThe beautiful and exotic looking former Marine said nothing, merely handing the envelope to Skyler, who scanned its face.\n\n\"Fuck,\" was all that Skyler could think to say. She knew that Kaia loved her completely, but she also knew that her past relationship was a sore spot. There were still days when Kaia would suddenly seem melancholy, all at once lost in her own thoughts. Skyler had come to recognize that those times usually meant Kaia had encountered something that reminded her of painful times.\n\nOf Lisa.\n\nWhenever it happened, Skyler tried to give Kaia space, allowing her to work through her grief without having to worry about Skyler prying. She always made sure the eclectic beauty knew that she was there if Kaia needed her.\n\n\"Yeah, I think fuck pretty much covers things,\" Kaia said as she sat down on the front steps.\n\nSkyler looked down at her, offering the woman she loved a smile. Reaching down, she handed the letter back to Kaia, then ran the back of her hand across her lover's cheek. Kaia smiled up at her, but there was evident angst behind it. It was clear to Skyler that the postman had delivered potential disarray to their world.\n\n\"I'm going to go inside and give you some time alone. Come and find me when you're ready.\"\n\nSkyler ascended the steps leaving Kaia to herself, her calm exterior threatening to crumble. She managed to make it inside the house, closing the door behind her as she leaned her back against it. Whatever portents that letter contained, Skyler had no intention of allowing anyone to come between her and Kaia. She knew very little about Kaia's former fiance, but Skyler was damned determined that Lisa would find out she was no pushover.\n\nShe'd been passive so far regarding Kaia's past, willing to take in whatever tidbits Kaia felt comfortable offering her. But if Lisa was indeed intent on keeping her hooks in the woman she loved, then maybe it was time Skyler learned a bit more about this mysterious woman from Kaia's past.\n\nSkyler was sitting on Kaia's couch, drinking one of her girlfriend's beers when Kaia finally walked through the front door. It had been nearly forty-five minutes since she'd left her on the steps, and each passing moment had led to Skyler's apprehension levels growing.\n\n\"Can I get you a beer?\"\n\nSkyler watched Kaia make her way over to the couch, the open letter in her hand. She collapsed down next to the auburn-haired teen laying her head over on Skyler's shoulder.\n\n\"I don't think so, but I will have a sip of yours.\"\n\nSkyler handed her the bottle, slipping her left arm around Kaia and leaning in to kiss her girlfriend's forehead. Her eyes, however, were drawn to the letter which lay open in Kaia's lap, the former Marine making no attempt to hide its contents. Still, Skyler averted her eyes, guilt keeping her from perusing the words it held.\n\nHanding her the beer back, Kaia turned her face to look up at Skyler. The younger woman could see the pain in Kaia's eyes, but she could also see a depth of emotion for her, and the sight warmed Skyler's heart.\n\n\"I love you so much, Sky. You're who I want to be with,\" Kaia said, offering the letter to Skyler. \"No matter what happens from here on, don't lose sight of that, please.\"\n\nSkyler felt her heart skip a beat upon hearing Kaia's words. They were needed succor at a time she felt uncertain about the future. She reached out for the letter, her hand pausing just short of taking it.\n\n\"I love you too, baby, but are you sure that you want me to read this?\"\n\nKaia sat forward, twisting her body towards Skyler, the look on her face intensifying. She leaned in and kissed Skyler hard, the palm of her left hand slipping behind the auburn-haired beauty's neck. Skyler moaned into Kaia's mouth as her cocoa-skinned lover's tongue dashed against her own. It was a kiss that spoke volumes about how Kaia felt, an unspoken bond of trust, a possessive admission of passion, a promise that the two of them would face whatever the future brought together.\n\n\"Read it,\" Kaia said as their lips finally parted. \"I've never been completely sure what happened to break Lisa and me apart. I've always had a ton of questions that have haunted me about it, and this...\" Kaia said, holding up the letter, \"this has only added to those. I'm not overly sure about any of it now, but the one thing she makes very apparent in the letter is that she intends to explain it to my face. And now that she knows where I am, there's nothing to stop her from eventually showing up here. So, I don't intend to keep any of this from you, and I'll answer any question you have. I can't avoid the emotional pain this might cause me, but I can keep it from hurting things between us.\"\n\nSkyler's eyes misted over with tears as she took the letter from Kaia using her free hand to wipe them away. She settled against the back of the couch, and after taking a deep breath, began to read.\n\nKaia, my love,\n\n \n\nI hope this letter finds you happy and well. I'd hoped to contact you long before now, but you haven't made that very easy, have you. I guess that's easily understandable; God knows I hurt you bad enough. But I promise you that was never my intent. Everything that has happened since we said goodbye at the airport that day has seemed out of my control. I know that isn't true, but I have felt powerless a lot since that day.\n\n \n\nI'm sure that you hate me, and as much as that thought hurts me, I can't say that I blame you. I know I have no right to ask anything of you and that you'd likely rather never hear from me again. But I swear that there hasn't been an hour gone by since you left for Afghanistan you haven't been in my mind.\n\n \n\nI love you, Kaia. I can hardly remember my life before you were in it. It galls me that I was stupid enough to ever do anything that risked our relationship. But I did, and now I have to pay the price for it. I have to live with knowing that I threw away the purest and most perfect thing in my life, the one relationship that had ever made me feel fulfilled. It pains me even now to think of all the poor decisions I've made since we parted ways that day. I ache every day at the thought of how badly I hurt you and betrayed our love, and I know you owe me nothing, but I can't live with myself if I don't explain things to you, face to face. There is so much that happened that you don't know. Some because I kept it from you out of fear and shame. Fear of losing you, and shame at the part I'd played. Other things were out of my control, things that were forced on me. Forced on me by my parents, the baby's father, and your disappearance.\n\n \n\nPlease, Kaia, give me that much. You have time to think about it because I'm still bedridden and a couple of weeks away from delivering if things go well. It will then likely be several months before I'm comfortable traveling with the baby.\n\n \n\nI don't deserve anything from you, Kaia, but please give me this. I beg you. Even if it ends up as nothing more than closure, allow me that much.\n\n \n\nI love you more than you'll ever know, and I always will.\n\n \n\nLisa\n\n \n\nSkyler read the letter through twice, staring down at the page as she allowed it all to sink in. Surprisingly, she wasn't angry with Lisa; if anything, she felt pity for her. Kaia was a prize, a treasure that deserved to be hoarded jealously, and Lisa had squandered her chance to possess it forever. She'd cast Kaia aside for a chance at motherhood, something that Kaia would have gladly given her in time.\n\nPity aside, though, Skyler refused to be the fool that Lisa had been. She wouldn't be so bold as to deny Kaia the right to meet with her former fiance, but neither would Skyler be cavalier about it either. She would zealously guard the love she shared with Kaia making sure to leave no opening that would allow Lisa to pry a wedge between them.\n\n\"She wants you back.\"\n\nSkyler's words were simply a statement of fact and not an accusation. Her expression was neutral, but only through conscious effort.\n\n\"I know, but she can't have me, Sky. She had my heart but threw it away like it didn't matter. It belongs to you now.\"\n\nKaia smiled at her sweetly, reaching out to grasp Skyler's hand. Their fingers interlocked as the teen pulled her lover towards her, their faces just inches apart.\n\n\"I won't give you up, Kaia. You're mine, and she can't have you. I know you still have feelings for her, but I won't stand in the way of you meeting with her and hearing her out. I think it might actually be good for you to remove all of those lingering questions in your mind. I know they still occasionally haunt you. Maybe seeing her and getting the answers you need will finally chase all of those old ghosts away.\"\n\nKaia gave her a look of surprise, clearly, she hadn't been expecting that response. Skyler could see the conflict present on her countenance and knew that the truth of her words was gnawing at Kaia. She wasn't sure that it was something the former Marine thought herself capable of doing.\n\n\"She doesn't sound to me as if she intends to let this thing go. Eventually, she's going to show up on our doorstep whether we want her here or not. When she does, we'll face it together.\"\n\n\"It doesn't worry you?\" Kaia asked, obviously a bit perplexed. \"Knowing that she's likely coming here to try and win me back?\"\n\nSkyler took the hand she held and brought it to her chest, placing it over her heart, holding it in place there.\n\n\"Do you feel that? Do you feel my heartbeat?\"\n\n\"Yes.\"\n\n\"It might be pumping blood through my body, but make no mistake, it beats for you. I know that you're in love with me. I can tell it every time you look at me and every time you touch me. So no, it doesn't worry me. I don't know why she did the things she did, and to be honest, I really don't care. Lisa was a fool, Kaia. She gave up the most precious thing in the world, and I have no intention of allowing her to take you back. You might be my first love, but if I have anything to do with the matter, you'll be my only one, too.\"\n\nSkyler watched as a tear trickled down the cheek of the tough former Marine. Leaning in, she kissed the tear away before bringing her lips to Kaia's, sliding her right leg across the older woman's lap so that she could straddle her waist.\n\n\"You're mine, baby, all mine. Nobody is going to take you from me without a hell of a fight. Have you got that?\"\n\nKaia stared up at Skyler, her eyes going dark with arousal. Skyler could tell that her words had struck home as she felt Kaia's arms slide around her waist, pulling her in, their bodies melding together.\n\n\"Message received, Ma'am,\" Kaia said, snapping off a salute at Skyler. Her tone then softened as she said, \"I love you, Skyler. I want you to be my forever woman. If she'd never found me, then I could have gone my entire life without seeing her again. I'm not in love with Lisa, not anymore, but you're right, I do still have feelings for her that I can't really quantify.\"\n\nShrugging, Skyler said, \"I'm not sure real love ever dies completely. I'm sure you'll always feel something for her, and I can live with that. I do think it would be mentally healthy for you though to see her. Letting her have her say, and getting her to answer any questions you might have is the only real way you'll ever be able to put all of this behind you.\"\n\n\"You don't think that it might just be ripping open an old wound?\"\n\nSkyler thought about Kaia's question. She was right; the possibility was that it could result in Kaia having to relive some painful parts of her life. Having never been through anything as remotely painful as what Kaia had been forced to endure, who was she to assume otherwise.\n\n\"Only you can answer that question, baby. Whatever decision you decide to make, I'll back your play. If you want to tell her no, that you don't want to ever see her again, then I'm okay with that, too. But if you decide to see her, I'll be here to help you pick up the pieces. You won't have to go through it alone this time.\"\n\nKaia pulled her in, kissing her, Skyler grinding herself against Kaia's toned body as the passion between them built. She could feel her nipples harden against the material of her bra, and was suddenly eager to be free of her clothing. Reaching down, she grabbed the hem of her shirt, pulling it up and over her head, tossing it aside.\n\n\"Has somebody gotten worked up?\" Kaia asked teasingly as Skyler reached behind her back to skillfully unhook her bra, allowing it to slide down her arms.\n\nHer breasts free, Skyler boldly palmed the left one and directed the nipple towards Kaia's waiting lips as she said, \"I told you, woman, you're mine. And right now, I expect you to pleasure me.\"\n\nKaia's only response was to seize the nipple between her lips, her tongue slathering it with attention as she sucked greedily. The feeling was exquisite to Skyler as she continued to grind her core against Kaia's lap in search of any friction she could generate against her needy little love button. The back and forth motion caused her labia to slide together, the feel of a growing amount of her oily feminine residue apparent with each thrust.\n\nReleasing her hold on Skyler's nipple, Kaia slowly stood, lifting the auburn-haired teen with her before turning to set Skyler back down on the couch's surface. Skyler looked up at the cocoa-skinned goddess standing over her and felt in awe of the fact that this woman loved her. She watched as Kaia dropped to her knees, reaching forward to unbutton her pants, her eyes never leaving Skyler's.\n\n\"I'm going to make you come so hard, Sky,\" Kaia declared as she began to pull Skyler's pants down, her panties going with them. Skyler lifted her hips to expedite the process even as she felt her heartbeat speed up in expectation of what was to come. Kaia pulled the jeans free of her legs allowing Skyler to spread her legs, the cold air in the house coming into contact with the wetness between her legs, sending a little chill through her body.\n\n\"That's big talk, baby. Are you sure that you're up to the task,\" Skyler said as she propped her feet up on the couch, opening her legs wide as she reached down to run two fingers through her own wetness before bringing them up to her mouth, sucking at them wantonly.\n\nSkyler couldn't help but smile inwardly as she saw Kaia's eyes narrow at her taunt. She knew that the love of her life would do just what she'd threatened, and the thought of it made the steady strumming behind her clit speed up in anticipation. Her show of false doubt melted as Kaia slid forward, and in one smooth motion drug her tongue from Skyler's opening and up through her puffy folds, darting over her clit. The action made the teen gasp, her fingernails digging into the surface of the couch as a moan escaped her lips.\n\n\"Fuck, baby,\" Skyler cooed as Kaia's tongue danced over her turgid little button, expertly teasing it and drawing it out from beneath its hood. The teen was always astounded at the pleasurable feelings Kaia could coax from her each time she went down on her. Her cunnilingus skills were masterful, and as far as Skyler was concerned, those lips and tongue were all for her.\n\n\"You like that?\"\n\n\"God, yes, baby. Eat my pussy,\" Skyler replied eagerly, a prolonged moan escaping her throat as Kaia proceeded to do precisely that, her tongue tapping against her clitoris as it beat out a rhythm that made Skyler's entire body want to dance.\n\nHer hands found the back of Kaia's head, holding it in place as she felt her climax build. Skyler knew that it wouldn't be long as her lover's relentless attack continued, the need and hunger she felt for release soon to be fed.\n\nWhen it came, it was glorious, hitting her with a sudden ferocity that took Skyler's breath away. She thrust her hips up, grinding her spasming pussy against Kaia's mouth in an attempt to prolong the ecstasy she was feeling. As always, she could feel her girlfriend continuing to nibble and suck as she tried to wring as much pleasure from Skyler as possible.\n\nWhen it was over at last, and Skyler's body had collapsed back against the couch, her legs dropping back to the floor, she watched as Kaia stood with a cocky grin on her face.\n\n\"I tried to tell you, little girl. Now you just sit right there. I'll be back in just a minute.\"\n\nHer breath just now starting to slow, and still feeling little spasms and jolts in her core, Skyler watched Kaia's shapely yet taut ass as it sashayed away from her, knowing that the fun was far from over.\n\nSkyler was still laying there basking in her post-orgasmic glow when Kaia returned from her bedroom. Gone were the clothes she'd had on, her only accouterment the strapon she wore as it dangled between her legs. The only other thing she wore was a lascivious smile that seemed to hold a promise to Skyler that what was about to come would be intense.\n\n\"Up on your knees, Sky, facing away from me,\" Kaia demanded, her voice loving but firm.\n\nSkyler was only too eager to comply, scrambling up onto her knees and turning to prop her upper body against the back of the couch. She looked over her right shoulder and took in the sight of Kaia rubbing lube up and down the shaft of the thick eight-inch cock. Skyler could feel the walls of her cunt clenching in eager expectation, wanting to feed on the entire length of what Kaia had to offer.\n\n\"You ready to be my little fucktoy, Sky?\" Kaia asked, grabbing Skyler's hips and pulling backward, forcing the teen's knees to the edge of the couch.\n\n\"Yes, baby, I'm yours, totally yours!\" Skyler replied, her pussy suddenly greedy for everything Kaia had to offer her for the evening.\n\n\"That's good, Sky, because this pussy is mine,\" Kaia stated as she rubbed the bulbous head of the gel cock through Skyler's wet and sticky folds before tapping it against her swollen nub.\n\n\"All yours, baby,\" the teen replied, her voice gone breathy as the yearning Skyler felt ramped up to epic proportions.\n\n\"Forever?\"\n\n\"And ever...\" Skyler replied, the implications of Kaia's question not hitting her until much later because that was the moment the cocoa-skinned goddess chose to plunge the head of the cock into Skyler's depths, short-circuiting her thinking as it sliced into her velvety sheath. The sudden movement took the auburn-haired beauty's breath away as Kaia began to plunge in and out of her depths. She could only hold on to the back of the couch as her girlfriend laid claim to her body, an invading force welcomed with open arms because it held the promise of a trip to paradise.",
        "When her climax hit, Skyler screamed in adulation, burying her face into the cushioned backrest of the couch to muffle the sounds. But Kaia offered her no quarter, continuing to saw through her silky, wet folds at a frenetic pace. The convulsions inside her squeezing against the thick faux-cock had barely begun to settle when another orgasm surged through Skyler, blindsiding her as her thighs began to shake and quiver uncontrollably. The walls of her cunt squeezed delightfully against Kaia's fake member as pleasure signals exploded from Skyler's brain like the crescendo of a fourth of July fireworks celebration.\n\nWhen it was over, Kaia collapsed down onto the couch, breathing hard from her exertions, but surprisingly, not as hard as Skyler.\n\n\"Give me a minute to catch my breath and I'll return the favor,\" Skyler said with a smile as she lay languidly with her head against Kaia's shoulder.\n\n\"You don't have to, Sky. I owe you big time from all those school mornings that you woke me up nibbling between my legs.\"\n\nSkyler laughed, flushing at the thought. She'd gone to school many mornings with the taste of Kaia's feminine essence resting on her lips. Skyler considered it the perfect start to her day to make the cocoa-skinned goddess moan in pleasure, her juices flooding into Skyler's mouth as she came.\n\n\"Well, they do say that breakfast is the most important meal of the day, and nobody cooks it as good as you, baby,\" Skyler replied as she snuggled her body tighter to the woman she loved.\n\nThey both lay there in silence, just enjoying the feel of their bodies pressed against one another, neither feeling the need to say anything, the mental anguish, and the consternation caused by the arrival of Lisa's letter momentarily relieved.\n\nSkyler knew that it wasn't forgotten, though. And regardless of Kaia's decision, the teen knew that eventually, they would have to deal with Lisa and all of the mental baggage she brought with her. When that time came, there would be many uncertain things. But as Skyler slid off of the couch, and to her knees, she was entirely sure of one thing.\n\nShe would be ready.\n\n \n"
    ],
    "authorname": "Karipet",
    "tags": [
        "coming out",
        "cunnilingus",
        "lesbian",
        "lesbian romance",
        "lesbian sex",
        "strapon",
        "teen lesbian",
        "young love"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/finding-her-way-in-a-storm-ch-11-12"
}