{
    "title": "Is She Smiling at Me? Pt. 07",
    "pages": [
        "This story is the seventh installment of the \"Is She Smiling at Me?\" series. As dearly as I wish I could say any part of the following is based on actual events it is, in its entirety, a work of fiction. Any resemblance to real people is purely coincidental. I love hearing feedback from my readers; please feel free to leave comments or contact me with your thoughts or suggestions.\n\nThanks again to my much beleaguered editor, SissyKaty, for putting up with my inane questions, pleas for insight, and the random whimsies of my mind.\n\n*****\n\n\"I'm going to miss you, baby.\" I said, giving Liz an affectionate squeeze around the waist while she leaned against the counter, helping me prepare breakfast.\n\n\"I'm only gone for a weekend.\" Liz smiled brightly; her big doe eyes twinkling as she stood up on her tip-toes to kiss me on the cheek.\n\n\"I know. I haven't spent a weekend without either of you since the cabin.\" I smiled sheepishly.\n\n\"Aww.\" Liz cooed, \"I'll miss you too. I'll miss both of you.\"\n\n\"You're such a softy, Matt.\" Alex teased, a playful grin on her face.\n\n\"Yeah, well, don't be telling people that, okay?\" I chuckled.\n\nLiz was spending the weekend at her parent's place. They lived in another city some two-hours drive North-East of us and wanted Liz, as well as her two brothers, home for a family function. The three of us were having breakfast together on this quiet Saturday morning before Liz took the car and headed off. I really was going to miss her. My hopeless, desperate love for the girls made being away from either of them feel as though a piece of my life was missing.\n\nThe relationship I shared with Liz was different than the one I shared with Alex. Liz was lively, fun, and full of energy; she made me feel youthful and being with her was as invigorating as it was easy. Whereas Alex and I had a relaxed, more laid-back intimacy; our minds were very similar which gave us an unspoken understanding of each other that, I think, was rare to find for people like us. Neither was better than the other, just different, and each was half of a whole. It was an interesting aspect of our three-way relationship; that any two of us together had our own, unique dynamic and yet, taken all together there was a certain synergy. As a complete set we were very much greater than the sum of our parts.\n\nLiz took the plates of eggs and toasted bagels to the kitchen island while I poured us all another round of coffee; black for me, milk and two sugars for Liz, and the diabetes special for Alex. I sat across from the girls and smiled as they dug into their breakfast. We were all in our pajamas; Liz in her pink flannel bottoms and a tight, white printed t-shirt that accentuated her bountiful, braless breasts, Alex in a pair of black, floral print lounge pants that hugged her waist and pelvis snugly but flared at the legs, loose and flowy, a fitted black tank revealing her pale, freckled shoulders. They seemed so beautiful in that moment, even as they hungrily shoveled down their eggs, that I couldn't help but feel a flare of arousal from deep inside.\n\n\"So, what are you two going to do today?\" Liz inquired, distracting me from my naughty thoughts.\n\n\"We never really settled on a plan.\" Alex replied, taking a sip of her coffee.\n\n\"Hmm,\" I added, swallowing a bite of bagel, \"I think 'let's go downtown' was as far as we got.\"\n\n\"Well, I'm sure you'll think of something fun.\" Liz flashed me a quick, mischievous grin, unnoticed by our lover.\n\nWith that subtle, fleeting expression, my naughty thoughts had returned. Liz had been helping with a surprise for Alex and had suggested previously that I should make use of the opportunity to spring it on her. I smiled back, holding in a chuckle at the happy twinkle in her eyes. We finished our meal and Liz went upstairs to get ready for her trip. A short while later, Alex and I were seeing her off, a round of tight hugs and loving kisses, and then she was gone.\n\n*****\n\n\"He looks so lifelike...\"\n\nAlex and I were in the European History gallery of the big downtown museum standing before a glass enclosure that housed a recreation of a bed chamber from a bygone era. An ornately carved four- poster bed dominated the room, surrounded by plush chairs and ostentatious d\u00e9cor. The walls were papered in gaudy shades of gold and brown that someone at this particular point in history clearly felt was the pinnacle of aesthetics. Near a reproduction fireplace, complete with glowing red lights to simulate a warm blaze, a wax figure adorned in the garb of English nobility of the age stood frozen in time, staring back at us through the glass.\n\nThe room, the entire gallery for that matter, had been designed to evoke some atavistic sense of nostalgia for a time and place the casual viewer could never come close to truly knowing. Unfortunately, I understood that the realities of the era were far more grim, despite the romanticized attempt to depict otherwise. To say nothing of the social and healthcare practices of the day, a more poignant example on my mind was the fact that someone like the beautiful woman standing next to me could never have had the chance to live her life on her terms in that world. I had been ruminating on these sad thoughts when Alex's comment snapped me back to the here and now. The dark cloud that had been drifting in dissipated instantly at the sound of her sweet voice.\n\n\"You think?\" I asked doubtfully, \"He seems kind of stiff.\"\n\n\"Well, you are a very handsome man.\" Alex replied matter-of-factly.\n\nI couldn't believe my ears. My jaw dropped and I turned my head to look at her. Her delivery was absolutely deadpan, and her eyes bored straight ahead, looking at the figure behind the glass barrier. A slight smile tugged at the corners of her lips, betraying her nonchalant fa\u00e7ade. I gasped dramatically, affecting a reaction of surprise and excitement. Alex's defenses broke down at my affectation and her face cracked into a wide smile as she looked over at me, a playful gleam in her brilliant, emerald green eyes.\n\n\"Oh my God.\" I said slowly, \"Alex. Was that... Lowbrow humor?\"\n\n\"What can I say? You and Liz are pretty funny sometimes. Even if you're obnoxious and immature about it.\" Alex answered with a grin.\n\n\"Interesting...\" I replied thoughtfully, \"Would you say we rubbed off on you?\"\n\n\"Gross, Matt.\" She groaned.\n\n\"You didn't think it was gross last night.\" I smirked.\n\n\"Just stop.\"\n\n\"Didn't say that last night either.\"\n\n\"Ugh!\"\n\nI watched Alex storm off in a parody of a frustrated huff, admiring how cute she was when she was pretending to be irritated with me, before I hurried after her. We made our way through the rest of the museum, the journey taking us through ancient Egypt, Greece, Rome, and China. In the span of a few hours, we had traversed three continents and an impressive two-hundred-and-forty-five million years of history; the final gallery being a walk amongst the reconstructed skeletons of the enormous monsters of the Triassic, Jurassic, and Cretaceous periods. Of all the displays we had seen, the dinosaurs spoke to me the loudest, awakening my inner child as I stared up in wonderment at the yawning, toothy maw of a tyrannosaurus.\n\nWhen we had seen and done all the museum had to offer, we stepped out into the bright and bustling city street. Unseasonably warm for late fall, Alex had worn a camel-brown crochet hooded poncho over a black, form-fitting turtleneck sweater. The hem of the poncho hung down past her narrow hips; its fringes brushing against her thighs as they danced in the light breeze. Black suede high heeled ankle boots accentuated her slender legs under her tight, dark blue jeans. The blaring sunlight caught in her mahogany hair, highlighting the rich crimson tones that flowed in wavy locks around her shoulders and down her back. Her pale skin looked absolutely radiant in the over-abundant illumination, offset by the adorable spray of freckles across her nose, cheeks, and forehead.\n\nAlex looked over at me and caught me gawking at her as I was wont to do from time to time. Even now, over half a year into our relationship, her beauty still managed to capture my mind, narrowing my perception of the world down to a singular focus. She smiled warmly and I felt her soft hand slip into mine, pulling me in for a quick kiss. We walked a few blocks down the busy street, passing antiquated storefronts contrasted by the towering concrete and glass structures that defined the downtown skyline, until we found a Starbucks. Alex ordered an unpronounceable concoction that had to be at least half sugar, and I, exciting and adventurous soul that I am, ordered a black coffee. We killed time wandering down the street, window shopping along with browsing through stores that happened to catch either of our fancies.\n\nIt was early evening when we decided we ought to find a place to eat. The sun, long since disappeared behind the monolithic monuments to human ingenuity run amok, had begun to set, turning the sky a pinkish-orange hue as twilight settled over the city. Walking hand in hand, we finally settled on a quiet, romantic looking Italian restaurant and were quickly seated at a candle-lit table for two. I glanced up from the menu to see Alex staring at me, deep in thought, with a twinkle of adoration in her eyes and a warm smile pulling at her lips.\n\n\"What?\" I chuckled, caught off guard by the reflective look on her face.\n\n\"I was just thinking.\" She smiled back, offering no further information.\n\n\"Were you planning on telling me what about, or are you going to make me drag it out of you?\" I grinned, closing the menu and placing it beside me on the table.\n\n\"No...\" Alex paused thoughtfully, collecting her thoughts before she continued.\n\n\"I don't have to tell you; you know I had my misgivings about this whole situation when Liz first brought you home. She's always wanted a man in her life, I've known that for as long as I've known her. It's not like I was necessarily threatened by that; I knew she loved me, but she had this pie in the sky notion of having her cake and eating it too and I just didn't see how it could possibly work.\"\n\n\"Right, I remember.\" I replied, wondering where she was going with this.\n\nThe early days of our relationship had been rife with uncertainty. Liz was practically all-in from the night we met, but both Alex and I were somewhat more pragmatic. The reality of the risks and challenges of a three-way relationship were obvious to both of us, and that sense of doubt hung over our heads for a long time. In retrospect, it was easy to see that it had held us back; Alex in particular, who had been quite guarded with me in the beginning. We built trust and affection quickly, but that doubt and uncertainty had been a haunting background presence right up until I professed my love for the girls on Liz's birthday, finally shattering that barrier on what was probably the happiest day of my life.\n\n\"And then Liz brought you home.\" Alex continued, \"It was practically love at first sight for her, and then I did feel threatened. I could see how happy you made her, and it scared me at first. I was terrified there wouldn't be room in her heart for me anymore. At the same time, I loved her so much that my only choice was to bottle that up and go with it; see where this takes us. I felt kind of trapped. If I put a stop to this thing, I'd have hurt her in a way I just couldn't bring myself to do. But if I stuck it out, I risked losing her to you.\"\n\n\"Baby...\" I began, feeling a deep sadness at her recollection of her pain, \"I'm so sorry. I don't know what to say...\"\n\n\"No, no,\" Alex smiled and reached across the table to take my hand, \"This is a happy story, but I had to explain that part to get to the point. What I was just thinking was how happy I am to have been so very wrong. I've watched you spend every day showing me how wrong I was, even if it took me a while to get it. I learned Liz's heart was big enough for the both of us. Then Liz's happiness became my happiness and I fell in love with you. I learned my own heart was also big enough for two. I'll never run out of gratitude, to both of you, for that.\"\n\nMy eyes had clouded over with tears during the latter part of her speech and I cleared my throat, trying to collect myself and to deflect from the fact I was damn near crying in the middle of a restaurant.\n\n\"Who's the softy now?\" I choked, my voice nearly breaking.\n\n\"Shut up!\" Alex laughed, a brilliant smile stretching her mouth wide.\n\n\"I love you.\"\n\n\"I love you too.\"\n\nWhen the waiter came to take our order, I opted for the grilled veal on fettucine, and Alex chose the lasagna. Not normally the biggest fan of Italian cuisine, I was pleasantly surprised to find I quite liked the dish and Alex raved about the lasagna. I filed that information away for later use, as I knew I could whip up a fairly decent rendition myself. We enjoyed our meal over wine, the conversation turning flirtatious as we talked and laughed. Not ready to call it quits on our day out on the town just yet, we discussed what to do next as we waited for the bill, concluding we would wander around some more and find a bar to get a few drinks.\n\nBack out on the now-darkened city streets, we walked aimlessly, satiated and happy. Gone with the sun was the uncharacteristic warmth of the day as a chill had seeped into the air. Not that I needed an excuse to be close to my beautiful lover, but I held Alex tight, sharing our body-heat as we appraised our options. We meandered along the wide, downtown sidewalks as we sought a suitable place for libations until we stumbled upon a bar-slash-pool-hall. The dark, tinted windows emblazoned with a logo of crossed pool cues promised a satisfactory atmosphere and a little fun to be had.\n\n\"You sure you want to do that?\" Alex asked with a teasing lilt to her voice.\n\n\"Why do you say it like that?\" I chuckled.\n\n\"I might make you look bad.\" She replied with a devious grin and a shrug.\n\nShe probably would too; Alex was remarkably proficient in everything she did. It was a charming characteristic that went hand-in-hand with her general air of poise and grace. The woman exuded confidence and sexiness in nearly all situations; a quality that had so powerfully attracted me to her since the first night we met. With that knowledge in mind, her teasing served only to settle the matter as I accepted the challenge.\n\nWe ordered drinks at the bar and found an empty table in a back corner of the vast room. The place was busy but not crowded, and the sharp crack of ball striking ball sounded regularly over the din of the other patrons as they talked, laughed, and cheered. I racked up the table distractedly as I watched Alex slip out of her poncho, her fitted sweater conforming to the figure of her slender frame. The game was underway when I happened to glance over at Alex and quickly did a double-take. She was wearing an alluring smile while she held her cue vertical with both hands, sliding one up and down in a sensual, suggestive fashion as she stared at me, biting her lower lip.\n\n\"Just so we're clear then,\" I began in a sardonic tone, \"vulgarity is okay when you do it?\"\n\n\"Depends how horny I am.\" Alex replied with a sultry wink, putting on a show of bending over to line up a shot.\n\nJust as she took the backstroke, I seized the opportunity to smack her pert little ass; an irresistible temptation, displayed as it was in the tight denim of her jeans. The sudden impact threw off her stroke and the shot went wild, the cue ball spinning off to the side to bounce harmlessly off the cushion.\n\n\"Hey!\" Alex exclaimed,\n\n\"That's not fair, I'm taking another shot!\"\n\n\"Worth it.\" I shrugged with a wide grin.\n\nWe played a few rounds over a few more drinks; I won a couple but unsurprisingly Alex was way out of my league. At the best of times, I was a mediocre pool player, but Alex's flirting and teasing had slowly ramped up as the night went on and my concentration was all but shattered. She was looking to get fucked tonight, and she had been telling me so in no uncertain terms in the unspoken language of familiar lovers. Enthralling as that prospect was, I still had that surprise for her later that I was equally excited about.\n\n\"Funny,\" She said, backing herself into me and wiggling her ass suggestively into my groin, \"I hadn't planned on being the one sinking their balls tonight.\"\n\nI laughed and squeezed her around the stomach, planting a tender kiss on the soft skin under her ear. That was that; with my cock already swelling inside my pants, we were done playing. At least, certainly done all the playing we were going to do there at the pool-hall. Alex called us an Uber while I went to settle up with the bartender. Once I finished paying, we went outside to meet the car, Alex leaning back into me as I held her close, placing soft kisses behind her ear while we waited.\n\n*****\n\nAfter an unendurably long and inappropriately flirtatious ride in the back of the Uber, we had made it back to the apartment. Both of us sufficiently hot and bothered by then, Alex wasted no time dragging me by the hand up the spiral staircase to the bedroom. I made a move to kiss her, but she blocked my lips with a single finger as though she were shushing me, a playful twinkle in her eyes as she giggled and instructed me to wait on the bed before she disappeared into the bathroom. The enchanting smile that she flashed over her shoulder as she closed the door doubled the sense of excitement and anticipation welling up inside me.\n\nMy phone buzzed in my pocket and I pulled it out to see a text from Liz that read, \"Having a good time with the family, how's it going with you two?\"\n\n\"We just got home, had a fun day.\" I messaged back.\n\nQuickly, Liz sent back a string of emojis like the modern-era version of the hieroglyphics Alex and I had pondered over in the Egyptian gallery at the museum earlier; \"Eggplant, surprised-face, squirt, drooling face, question-mark.\"\n\nI chuckled when I deciphered her code, and typed back, \"Just about to do that. Miss you baby, gotta go.\"\n\n\"Good luck! I miss you both!\" Her reply came back just as I put my phone away.\n\nA moment later, the bathroom door swung open revealing Alex in a new set of lingerie. A strappy, black lace bralette hugged her body tightly, capturing the slight swell of her perfect little breasts and descending a couple inches down, covering a portion of her ribcage. With its cut plunging low between her tits, narrow straps overlaid a pattern of black webbing across her pale, freckled chest. The defined muscles of her stomach pointed the way down towards a matching pair of lace boyshort panties; the curvature of her exquisite cock bulging against her left hip alluringly. She completed the look with a pair of black stiletto sandals, her sexy feet on full display adorned with jet-black nail polish and the diamond toe ring I had bought her some months ago. The stones sparkled brilliantly, drawing the eye and complimenting the ensemble as a whole.\n\nAlex struck a pose, leaning against the doorframe while sliding a slender leg up behind her before arching her back suggestively and flashing a sultry look. Her long, mahogany hair fell across one side of her face, covering an eye and cascading down her shoulders in wavy locks of rich red. Stunned by her raw, animal eroticism, my cock responded immediately at the sight of her, swelling against my suddenly confining underwear.\n\n\"Good Lord...\" I muttered, almost involuntarily.\n\nAlex let out a throaty growl at my reaction, pushing herself off the doorframe and doing her best impression of a runway model as she approached, crossing one leg over the other with each step, her hips oscillating to her seductive gait. As she neared, I stood up from the bed, taking her shapely hips in my hands as she stepped into me, slipping one leg in between mine and pressing her bulge against my own. Alex leaned back, biting her lower lip and staring hungrily into my eyes while her fingers sought out the buttons on my shirt, slowly unfastening them one by one until she could push the garment off my shoulders, letting it fall to the ground behind me.",
        "Looking back into Alex's enticing emerald eyes, I slid a hand up her smooth side, teasing over her chest, and around to the back of her neck. I pulled her into me slowly, meeting her soft lips with mine and coaxing her mouth open with a flirting graze of my tongue. Our tongues rolled and entwined, igniting fireworks as our passion exploded as we kissed intensely. My other hand drifted down, cupping a taut little ass-cheek and pulling her against me firmly, our bodies writhing against each other, desperate to express our mutual desire.\n\nAlex pulled back, unbuckling my belt and pushing my pants and boxers down over my ass until they dropped to my ankles. She teased her fingers up over my abs, tracing a path through the dark hairs that ran in a line up stomach to my chest before suddenly shoving me back. I fell into a seated position as she giggled, giving me a sultry wink and stepping between my legs after I had kicked my pants to the side. I leaned forward, kissing her smooth stomach as my hands found her ass once more, pulling her close while my lips explored her body. Slowly drifting down her front, I paused for a moment to probe her cute belly-button with my tongue, earning a soft gasp and a giggle.\n\nWhen I had finally made my way down to the bulge against Alex's hip, I could feel the heat radiating off her member as it strained against the confines of her tight panties. Kissing her through the lacy material, my lips and tongue grazed along the length of her shaft as I nuzzled my face into her, delighting in her faint moans of appreciation. I teased her, going back and forth across the length of her substantial cock, her panties dampening more and more with each passing moment. By the time I finally hooked my fingers into the waistband, it was hard to say who was more excited; Alex with her hands on my head, grinding herself against my lips, or myself, with my cock throbbing and my mouth watering in anticipation.\n\nPeeling the panties down over Alex's bulge, her sizeable cock sprang free, standing firm and proud in the open air as I got the flimsy garment past her hips, letting it fall to the floor around her ankles. Drinking in her magnificent endowment, Alex's cock thrilled me every bit as much as it had the very first time I had seen it. Her long, perfectly proportioned shaft matched the rest of her milky-white complexion, the exquisite shape of her glans visible through her foreskin, coming to a delicate pucker of soft folds and ridges already glistening wetly with precum.\n\nLooking up at her, I saw her staring back down at me; her desire burning behind her eyes like an intense flame, her teeth biting into her lower lip as she awaited my devoted worship. Maintaining eye contact, my mouth found the tip of her cock, gently kissing her crown of foreskin and feeling the supple folds of her sheath yield to the gentlest of pressure from my lips. I gazed into her eyes and gingerly licked a slow circle around her head before opening my mouth and taking her between my lips. Alex sighed contentedly, her eyes closing momentarily while I pulled back, tugging her foreskin between my lips as my tongue slipped inside.\n\nThe divine taste of Alex's precum spread across my tastebuds and my own eyes closed as I emitted a low, muffled moan, delighting in the sweet flavor of her nectar. I pushed myself down her, feeling her skin shift under my lips as I took her deeper into my mouth, rolling my tongue along the smooth underside of her shaft. Sliding back and forth on her slowly, I took my time enjoying the sensations of her warm, rigid cock filling my mouth, taking her deeper with each subsequent stroke, her soft gasps and moans rewarding my efforts and fueling the gnawing hunger growing inside me.\n\nAs our mutual passions inflamed, I sucked Alex with increasing abandon, both of us moaning our individual expressions of pleasure and arousal. Without taking my mouth off her, I took her smooth hips in my hands, pushing her backwards so I could slide off the bed and take my rightful place on my knees between her long, slender legs. I looked up at her to see her gazing back down at me, an amused expression playing across her face as I slid down to the floor. Her smile transformed into a wide-mouthed gasp when I suddenly drove myself all the way down her shaft, feeling her first stretch my tonsils, then hit the back of my throat and keep going as I swallowed her in a quick, fluid motion.\n\nWith my nose buried in her neat little muff of ginger pubes, I held down on her, letting my throat adjust to the sensation of pressure from her long, thick cock stretching it to its limits as I massaged her with my tongue. After a moment I backed off just slightly, but where I would have to come up for air or risk gagging in the past, I instead pushed myself back down. Back and forth I slid my throat on the entirety of her substantial cock, my pride brimming with the surprised gasp that escaped her lips.\n\n\"Oh... My... God...\" Alex moaned, \"When did you learn to do that?\"\n\nMy heart soared, delighted that I impressed her. I hummed against the turgid member buried in my face, knowing all too well the vibrating sensation it was lending to her pleasure. I made a few more lengthy strokes before finally sliding off of her cock with a wet slurp, taking her shaft in my hand and stroking her sensually.\n\n\"Liz has been helping me practice.\" I smiled up at her, lightly bouncing her glans against my lips.\n\nIndeed, she had. For some time now, Liz had been helping me with deepthroat training. When I explained to her that I wanted to be able to pleasure Alex like she could, she had leapt at the opportunity with her trademark enthusiasm. We worked on it together, either when Alex wasn't home, or occasionally hiding out in the shower if she was. The experience had amounted to a lot of sloppy fun and a few slightly embarrassing moments, but Liz eagerly guided me until I was able to suppress my gag reflex enough to take a dildo roughly Alex's size without problems. She certainly hadn't complained about all the practice I had done on her along the way either.\n\n\"Of course she has!\" Alex laughed, smiling down at me.\n\nWith a playful grin, I took her in my mouth once more and swallowed her to the hilt, cupping her balls in one hand. Alex gasped and gently bucked her hips, her big dick throbbing in my throat as I stretched around her girth.\n\n\"Mmm... Good boy...\" Alex purred, causing my pride to swell up in my heart once more.\n\nAlex's hands drifted down to my scalp, her fingers combing through my hair as she wrapped them around the back of my head. She began pumping herself through my mouth, her hips rolling slowly as she fed her delicious cock down my throat, gradually increasing the length and cadence of her strokes. Giving up control to my beautiful lover, I relaxed and let her have her way with me, my tonsils stretching over her again and again. Alex slid back and forth with increasing urgency to the tune of her titillating gasps, moans, and giggles of delight.\n\nAs much as I had practiced, I wasn't quite at the level of talent Liz possessed with her impressive lack of gag reflex. My body bucked involuntarily, but I was able to keep Alex buried all the way inside me for a respectable length of time. Despite her forcefulness, her love and care showed through; she could sense when to back off without pushing me too hard. Pulling herself out of me, a thick rope of saliva connected her cock to my lips until the tension broke and it fell to the floor with a wet splat. She slapped her glistening member against my cheek playfully while I caught my breath, gasping again when she pushed herself back into me until her pubes tickled my nose.\n\nAlternating between long, slow thrusts and short, fast ones, Alex's hips undulated as though she were performing a sensual dance. From my place on my knees between her smooth, slender legs I could watch the sexy lines of her defined abdominals ripple and oscillate erotically. I stared up at her with her mouth agape and her eyes squeezed tight, a perfect expression of total pleasure on her beautiful face. When she opened her eyes and noticed me gazing up at her, she smiled sweetly as she bit her lower lip and roughly thrusting into me while giggling to herself.\n\nIt felt amazing having Alex use me like that; fucking my throat like it was made for sex, holding my head firmly as she pushed into me and bucked against my mouth. I had lost any sense of time passing, immersed in the sensations and emotions of being used completely for her pleasure and loving every second of it. Barely aware of my own needs, I absentmindedly stroked my throbbing cock while Alex's hips pistoned into me with rampant desire.\n\nAlex's moans and thrusts increased in urgency until I knew she was about to explode. Her fingers tensed against the back of my head, holding me tight while she vigorously fucked my throat. The only thing I wanted more in that moment than to taste her delectable cum was to impress her. Putting my own desires to the wayside, I took her smooth, taut ass cheeks in my hands and pulled her into me hard, desperately trying to force every last available bit of her length down my throat just as I felt her cock pulse powerfully.\n\nCrying out, Alex held me tight, bucking as though she were trying to shoot her very soul into me along with her huge load. Feeling her warm balls contract against my chin as her throbbing dick twitched in my throat, I was overwhelmed by a sense of pride and accomplishment, ecstatic that I was able to give her that pleasure. Alex humped, writhed, and moaned as she came, her body trembling against me while her orgasm tore through her. I felt each jet of warm cum as it ran down my throat, squirt after squirt of her essence pumped directly into my stomach. Finally, her climax waned and faded away, leaving her gasping and panting as she finally released me from her vice-like grasp.\n\n\"Oh, wow...\" Alex panted as she withdrew from my mouth slowly.\n\nI felt my throat contract as she slid out of me, leaving me feeling stretched out and a little raw, but mostly just elated that she had enjoyed me so well. I kissed her glistening cock in its sheen of saliva and nuzzled into her groin, licking her balls gently and leaving a trail of wet kisses across her hip. Alex reached down to help me to my feet; it wasn't until I tried to stand that I realized how sore my knees were, but for the look on her face I would have endured a thousand times that discomfort.\n\n\"How was that?\" I smiled, my voice a little hoarse as I cleared my throat.\n\n\"Mmm!\" Alex hummed emphatically, pulling me into her and kissing me intensely.\n\nHer tongue probed my mouth aggressively, coaxing mine out to play while she pressed her body into me. I could feel her passion and excitement radiating from her as she slid one hand down my body, taking my hard cock in her hand and stroking me while we kissed. I stifled a gasp at her touch; I'd gotten so aroused being used like a fuck toy that my turgid member ached, desperate for stimulation.\n\n\"Your turn.\" Alex spoke with a sultry tone and a playful gleam in her eyes as she edged me back towards the bed.\n\nAs I collapsed backwards onto the mattress, Alex crawled on top of me, straddling me as she reached for the nightstand and the bottle of lube therein. Her body spoke of animalistic yearning, and she wasted no time pouring a dollop of the thick, slippery fluid over my dick and massaging it around. Alex positioned herself over me and slid down on my shaft in a quick, smooth motion, surprising me with her haste and desire. She yelped and winced as she impaled herself on me, a pained grimace on her face I recognized as the expression of having gone too far too fast.\n\n\"Jesus, baby, are you okay?\" I asked, genuinely concerned that she had hurt herself.\n\n\"Mm-hmm. Just got a little carried away.\" She nodded, panting slightly.\n\nHer expression was already softening as her body adjusted to the sudden intrusion and I couldn't help but let out a little laugh, prompting a giggle from Alex in return. After a moment to collect herself, she crossed her arms and pulled her bralette up over her head, exposing her flawless little breasts. She smiled down at me before beginning to rock back and forth on my throbbing dick, her passion quickly mounting. I looked up at her, overwhelmed by her stunning beauty, moaning at the warm velvet sensation of her ass squeezing my member as she pushed herself into me with increasing abandon. Alex leaned forward, bracing herself against my chest, her fingers digging deep trenches into my pectorals as she drove herself back onto me, moaning in lust and ecstasy.\n\nI watched Alex ride me for a while, her gorgeous face a mask of unabated pleasure, both of us gasping and grunting in carnal delight. As worked up as I had gotten, I knew I couldn't last long, but I wasn't ready for the experience to end just yet. I sat up and grabbed her pert little ass with one hand, lifting myself off the bed and flipping her over onto her back. Alex giggled as we came to rest against the mattress and I kissed her desperately while I took over the action, pumping myself into her tight ass. Her hands slid down my back, taking a butt cheek in each hand and pulling me into her eagerly as she wrapped her legs around my waist. Her need and hunger were palpable, demonstrated by her desperate touch as my thrusts bounced her against the bed. Both of us began moaning the tune of our individual ecstasies, the sound melding together into a single harmonious rhapsody of exaltation.\n\nRighting myself, I sat up on my knees and pushed her legs up towards her, affording myself a view of my cock stretching her tight hole. Alex's still-semi-erect cock bounced and rolled against her abdomen to the cadence of my thrusts as I pounded myself into her ass. I kissed my way up one slender calf, my fingers finding the buckle on the narrow strap holding her high-heeled sandal around her ankle. I deftly pried it loose. After I had liberated one of her feet, I moved on to the other, tossing her shoe to the side, letting it clatter against the floor as I took her other sexy foot in my hand. Kissing my way up her smooth sole, I flicked my tongue across the sensitive skin, earning a gasp as my lips found her toes and my tongue slipped between them.\n\nAlex rested one foot against my chest, looking up at me while I greedily licked and sucked the other, all the while driving myself into her ass with wild lust. I adored the feel of her cute toes against my lips and on my tongue, reveling in the light smell of her, delighting in the impossibly smooth texture of the silky skin that made up the top of her perfect foot. When I'd had my fill of the first, I lowered it down to my chest and took up the other, repeating the process and showering her with my love and affection. Alex's toes in my mouth with my cock in her ass was the ultimate experience of sex and sensuality; all my senses fully engaged, an exquisite balance of give and take, a perfect moment between my lover and myself.\n\nWorshipping Alex's beautiful feet while I fucked her quickly sent me over the edge. I grabbed hold of one smooth thigh and pulled her into me roughly. The sound of my pelvis clapping against her ass was audible over the guttural grunt that escaped around the toes in my mouth as I exploded inside her. Even as my orgasm crashed over me in a thunderous wave of rapture, I licked a wet trail up the entire length of her sole before sucking her toes back into my mouth, emitting muffled moans around her foot as I felt my cock twitch and pulse, emptying myself inside her in spasms so violently intense that they ached with ecstatic agony.\n\nAs my climax faded away, Alex's toes slipped out from between my lips with a wet slurp and she giggled happily as she looked up me, love and adoration beaming from her eyes. I pulled out of her slowly, watching my still-hard cock throb along with my heartbeat as I withdrew from her warm depths. With a wavering sigh, I collapsed next to Alex on the mattress, cuddling up beside her as I pressed my body into hers. She reached for the back of my neck and pulled me close, smiling warmly at me as she touched her forehead to mine. We kissed long and slow, holding each other in a tight embrace as we shared the beautiful moment together.\n\n\"You're pretty amazing, you know that right?\" Alex said softly, looking deep into my eyes.\n\n\"I try my best.\" I laughed, feeling self-conscious at the compliment.\n\n\"I'm serious. You're always surprising me with the effort you put in to make me feel good. It's obvious how much you care. That's one of the reasons I love you so much.\"\n\nAt a loss for actual words to respond with, I just smiled and kissed her softly. What could I say to that? My love for her was boundless and absolute. Her joy was my joy, and her pleasure was my pleasure. It wasn't as though anything I did for her was an act of selflessness, quite the contrary really; I got back just as much as I put in, if not more. I was proud to have pleased her, eternally grateful for the opportunity, and ecstatic that she loved me for it. I had fallen for the girls hard and fast, even if I had been in denial about it for some time. Thinking back on our conversation at dinner I realized only now, in retrospect, that I knew when Alex had fallen for me too. It would have had to have been on our vacation at the cabin. She had told me that she loved how happy I made Liz, but what she was really saying was that she loved me.\n\nAlex turned away and snuggled her back into my chest with a contented sigh. I wrapped an arm around her and squeezed her, drawing myself into her as we cuddled. We shared some light pillow-talk for a while, basking in the glow of post-coital intimacy and snuggling lovingly. I suggested we take a shower, but Alex replied simply \"later\" in a sleepy, comfortable tone that sounded a lot more like \"never\" than it did \"later,\" and I chuckled against her shoulder. Which was fine; neither of us were keen on actually making the effort and soon consciousness began to slip away. With her ass pressed into my groin, our legs intertwined, my arm around her slender torso and her hand in mine, we fell asleep; naked, and warm."
    ],
    "authorname": "loveinbriefs",
    "tags": [
        "deep throat",
        "transexual",
        "redhead",
        "love story",
        "date",
        "romantic",
        "high heels",
        "feet",
        "bareback",
        "oral sex"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/is-she-smiling-at-me-pt-07"
}