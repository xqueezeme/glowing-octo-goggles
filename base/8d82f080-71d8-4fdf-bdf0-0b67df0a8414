{
    "title": "New Horizons Ch. 10-13",
    "pages": [
        "Chapter 10\n\nAlex should have canceled. That's what she told herself over and over this weekend. Going to lunch with this woman was all but sealing her fate. She knew that.\n\nBut Quinn's words from her office were stuck on repeat in her mind no matter what she did. No sense of logic could keep her from this lunch.\n\nAnd that kiss. She had never had a kiss like that. Her whole body was still on fire that no amount of touching herself could satiate.\n\nWhen she told Quinn that she was going out of town it wasn't the complete truth. She often left the city on weekends to go to her family's residence in the East Hamptons, but not usually this late in the year.\n\nBut self-preservation reared its head after that kiss, and she packed up and headed out as soon as her last meeting was done.\n\nShe thought some distance from the bustle of the city might clear her head of Quinn. But it became clear quickly that the still and quiet of the empty house just made her think about Quinn even more.\n\nAs she took her seat at the restaurant she'd chosen for them, she was more nervous than she could remember being in a long time. Though to be fair, Quinn was also different than any woman she'd met in a long time.\n\nShe still couldn't believe Quinn had seen her perform, especially in that production. One that still meant so much to her.\n\nYou're inspiring too, Alex. She repeated Quinn's words from her office in her head. It just makes me want to bend over this desk for you.\n\nChrist. The woman wasn't even there yet and Alex could already feel her pussy throb.\n\nPerhaps Courtney was right, and she should give in to her desire for Quinn. What harm could really come of it?\n\nBut then she pictured her father's sneering face in her mind and knew exactly what would happen. He was bad enough in the meet and greet last week, acting as if Alex was the only reason Quinn even had a shot in New York. As if Quinn wasn't a best-selling author in her own right.\n\nSimon would use any whiff of a theater romance as reason not to promote Alex. It was almost as if he was challenging her to sleep with Quinn. She wouldn't give him that satisfaction.\n\nThen what was she doing here? The question kept rolling around in her head. She didn't get lunch with random artists at the theater. Why was she even entertaining this?\n\nDeep down though, Alex knew the answer to that question. She may be playing with fire, but she was there because she also wanted to get to know Quinn better.\n\nWell, what she really wanted was to hear more deliciously dirty things from the brunette's mouth. She wanted to see Quinn submit the way she promised in her office.\n\nBefore she could school her thoughts into the platonic ones she should be having, the door to the restaurant opened and her mouth went instantly dry at the sight of the woman coming in.\n\nQuinn was wearing a simple white dress that flowed over her curves. The top of the dress was cut low and tighter than the rest, which gave Alex, and everyone, a healthy view of her cleavage. Her dark hair was down and cascaded over the thin dress straps and her pale shoulders.\n\nShe looked stunning but the only thing Alex could focus on was the woman's lips, which were painted bright red. With her white dress and shoes, the red lips were the only color Quinn had on.\n\nShe smiled slowly when she saw Alex and swayed her hips knowingly as she walked over to the table.\n\n\"You look like you've never seen a woman in red before,\" Quinn joked as she sat down at the table.\n\nAlex had yet to stand up, say anything, or perhaps even blink. She shook her head ever so slightly as she watched the woman sit.\n\n\"You did that on purpose,\" she said to Quinn with her eyebrow quirked.\n\n\"Mad about it?\" Quinn smiled widely back at her.\n\nAlex wanted nothing more than to tell Quinn exactly what she wanted to do with her blatant sass. How much she wanted to make another part of the woman red, preferably with her hand. But they were already treading dangerous waters and Alex had to maintain some semblance of professionalism.\n\n\"On the contrary, you look lovely, Quinn.\"\n\nQuinn's eyes, which a moment before danced with humor and a challenge, were now looking at Alex softly.\n\n\"Thank you. You always look good.\"\n\nAlex loved how pale Quinn's complexion was, illuminating even the softest of blushes. She was such an open book. Her emotions were always worn transparently on her face.\n\nAlex reached to take a sip of her water so she had a reason to look away and not get lost in those beautiful eyes. Quinn was a near perfect specimen in every way\u2014but it was those eyes that haunted Alex's every thought.\n\n\"I didn't ask if you were a vegetarian, but they should have some options of you are,\" Alex said as she put down her water and picked up her menu.\n\nShe was acting like a nervous teenager and needed something to do with her hands even though she always ordered the same salad at this restaurant.\n\n\"I've noticed that you generally don't ask, you tell. But no. I'm not a vegetarian. Though I don't eat fish.\"\n\nFor a few moments Alex let her eyes linger on Quinn as the brunette browsed the menu. Each time she saw something that looked good, she let out a small hum. Normally that kind of thing would annoy Alex, but on Quinn it was charming.\n\n\"No fish?\" she finally asked when Quinn looked up from her menu.\n\n\"I love fish. I even own some. They're so cute. It's too mean to eat them.\"\n\nIt was official. Quinn was the cutest thing Alex had ever met. She couldn't help but laugh at the statement.\n\n\"I have so many questions,\" she said in a mockingly serious voice.\n\n\"Oh please, ask away.\"\n\nAt that moment a waiter came up to their table to take their orders. After leaving their table, Alex turned her attention back to the beautiful brunette across from her.\n\n\"You have fish? Like Nemo? In a tank?\"\n\nAlex couldn't fight the full out smile that reached her lips as she asked the question. She also couldn't help but notice Quinn look at her lips as she did so.\n\n\"First of all, I'm honestly shocked you know who Nemo is.\"\n\nAlex faked offense. \"I don't live under a rock you know. I also know who Buzz and Woody are.\"\n\nQuinn let out an easy laugh before continuing. \"Ok then. Yes, I have fish. Leo, Don, Raf, and Mike. I named them after the Teenage Mutant Ninja Turtles.\"\n\n\"What if you got another one? You're out of reptile siblings.\"\n\n\"Already prepared. Splinter. Or April. Or Shredder. There are a lot of options,\" Quinn said as she gave Alex an easy smile.\n\n\"Of course,\" Alex laughed back. \"Next question. Why is it mean to eat a fish but not the chicken you just ordered in your sandwich?\"\n\n\"It's not. I've just always loved fish. And I grew up spending summers on a farm. Something about being made to slaughter a turkey at the age of five takes some of the cuteness away.\"\n\nAlex looked horrified. \"Five? Are your parents' farmers?\"\n\n\"Hardly. Just my grandparents. My parents like to act as if they've never seen a farm. But my sister Claire and I spent a lot of time there as kids when my parents were working over the summers.\"\n\n\"Where is this farm?\"\n\nAlex found herself leaning forward on the table. She wanted to know more about Quinn, even these little details that made her who she was.\n\n\"About an hour outside of Seattle. It's not big, they don't have major livestock or anything. Just chickens, and goats and stuff.\"\n\n\"And doomed turkeys.\"\n\n\"And those poor, poor turkeys.\"\n\nQuinn stuck her bottom lip out in mock sadness and Alex had the urge to grab onto it.\n\n\"Are you close to your parents and sister?\" she asked instead.\n\n\"Claire's my best friend, well, besides Mikey. I got into some trouble a few years ago and they were my rocks. My parents,\" she waved her hand in the air in dismissal, \"not so much.\"\n\nAlex wanted to ask about the trouble she mentioned but didn't want to pry. Besides, intrusive questions tended to be reciprocated and there were plenty of topics she didn't feel like broaching over a nice, relaxing lunch with a beautiful woman.\n\nThe waiter brought over their food and for a moment they were both comfortably quiet as the dug into their respective dishes. Quinn hummed as she ate, lightly rocking her head back and forth as if she was listening to an amazing song with each bite. She only stopped when she looked up and noticed Alex watching her.\n\n\"Sorry, I just really love food. Bread was my kryptonite as a model.\"\n\n\"I think I remember a chapter in your book called Bread.\"\n\nAlex realized after she said it that she just admitted to not only seeing Quinn's show in the festival, but also having read her book too. The look on Quinn's face indicated she was just as surprised by the admission, but she graciously let it slide.\n\n\"Now you know about my fish, which to be fair, is highly personal. Tell me something about you, Alex.\"\n\n\"No fish,\" Alex said as she took a sip of water.\n\n\"What about parents or siblings? I met your dad so I kind of know how that one is, but are you close with your mom?\"\n\n\"She passed away.\"\n\nAlex looked down at her food and played with her fork before she looked back up at Quinn.\n\n\"But we were very close.\"\n\n\"I'm so sorry Alex. How old were you?\"\n\nAlex didn't want to talk about this, but she knew it would come up inevitably. Once she lost a parent, she realized just how often that topic came up with people. She knew from experience it was easier to just get it over with.\n\n\"College. It was breast cancer. Right after that production of Streetcar you watched. She got sick and I moved back in to take care of her.\"\n\nThe mood was notably heavier now and Alex regretted not ordering a real drink before.\n\n\"Did you ever finish school?\" Quinn asked, her food all but forgotten.\n\n\"Not at NYU for theater like I was. But I did get a degree in business while I was her caretaker.\"\n\n\"Were you doing that alone? No brothers or sisters?\"\n\nQuinn's eyes showed a compassion that would normally make Alex defensive. The line of questioning was making her fidget and uncomfortable, but there was something in the back of her head that urged her on and made her feel like Quinn was safe.\n\n\"No siblings. I'm pretty sure the first thing my dad did after I was born was go to a different floor of the hospital for a vasectomy. One child was enough for Simon Anders I can assure you. But my mom hated other people in her house, so I took care of her.\"\n\n\"That must have been really hard to do on your own.\"\n\n\"I wanted to be there.\"\n\nAlex never wanted anyone to think she was a victim of her mom's cancer. She made the choice to drop out of NYU to take care of her and she never regretted that decision.\n\n\"I used the credits I was able to transfer and did online classes and night classes until I got a degree.\"\n\nAlex gently pushed her plate aside. Memories of that time essentially disabled her appetite. She was reminded of why she tended to keep conversations centered on other people.\n\n\"Did you go to college?\" she asked Quinn in an attempt to veer the conversation off that painful topic.\n\nLuckily, Quinn seemed to understand and didn't press for more information.\n\n\"No. My parents thought it better to take advantage of the modeling offers I was getting at the time,\" Quinn said.\n\n\"Did you want to go to college?\" Alex asked, relieved the conversation was focusing on Quinn once again.\n\n\"At the time I guess I agreed with them. It was just so easy, and the money was good. I got caught up in the whole fashion machine. But looking back I wish I had thought about it more.\"\n\nShe looked off at another table for a minute, lost in thought. Alex took the chance to admire her face. She had such expression etched into every pore.\n\n\"Everything in modeling is very fleeting. One wrong move or a pound too many gained, and it all comes crashing down. I guess I wish I had thought about what else I'd want to do if people valued me over how I look.\"\n\nShe turned her attention back to Alex and grinned. \"I sound like such a brat. Like life is so hard for me.\" She laughed again but her usual light-heartedness didn't reach her eyes.\n\n\"And what did mini Quinn want to be when she grew up?\"\n\n\"A dolphin trainer.\"\n\nAlex felt her body warm at the silly comment.\n\n\"Really?\n\n\"No. Actually, I wanted to be a writer when I was a kid.\"\n\n\"A writer?\"\n\n\"I know, kind of stupid.\"\n\nQuinn looked down at her napkin and Alex noticed this was the most insecure the usually confident woman had looked since they met. She wondered who had made her so embarrassed about this particular dream.\n\n\"How is that stupid? You're a best-selling author and now have an Off-Broadway show. Seems pretty fitting actually.\"\n\nQuinn's head snapped up at that.\n\n\"Most people don't see it that way. Most people think the book did well because no other model has really written so openly about high fashion. Plus, people are interested in me for a lot of reasons that have nothing to do with my writing. Even Mikey thinks this show is an opportunity to move more into the acting side of things.\"\n\n\"But that's not what you want?\"\n\n\"No. I don't know. Maybe. I like performing the show. But I liked writing it even more. And I'm just being myself in the show. That's not the same as acting.\"\n\nShe gave a small smile and shrug as she looked down at the napkin her anxious hands had torn apart as she spoke.\n\n\"Sorry, I don't usually talk about this.\"\n\n\"We can stop if you're uncomfortable. You can tell me what your favorite fish is instead.\"\n\n\"It's ok.\" She gave Alex a small smile before she went on. \"I can't really complain. I've had a good career and luckily still have offers coming in.\"\n\nShe waved her hand in front of her in a way that said she was ready to move on to a new topic.\n\nAfter more conversation they both stopped pretending they would eat any more and let the waiter take their plates. Without the dishes in the way, both women leaned in without even noticing it.\n\n\"While you were creepily stalking me on the internet, did you happen to notice that Courtney was in that NYU show with me?\"\n\nQuinn let out an exaggerated scoff and reached across the table to pinch Alex's arm. Alex tried to not to focus on how warm her fingers felt.\n\n\"I was not stalking. I was doing my due diligence as an artist at your theater.\"\n\nAlex was legitimately laughing, and she couldn't remember the last time she felt so carefree in a conversation.\n\n\"But no! I had no idea. I honestly didn't recognize her at all. Who was she?\"\n\n\"Stellaaaaaa!\" Alex said as she raised her fist in the air.\n\n\"I can't believe I didn't recognize her,\" Quinn said as she shook her head gently. \"You guys went to school together?\"\n\nAlex nodded. \"That's where we started that theater group.\"\n\n\"And there were never any sparks there?\" Quinn asked as she flicked her eyes down to Alex's lips.\n\nFor a moment, Alex was in a daze as she watched Quinn lightly slide her tongue across her bottom lip. She cleared her throat before answering since she didn't trust her voice at this point.\n\n\"No,\" she replied with her eyes transfixed on Quinn's mouth. \"We tried when we first met but it never clicked that way for us.\"\n\nWhy was she whispering? And why was Quinn lightly biting her own lip?\n\nBringing her out of her trance was the waiter next to their table asking if they needed anything else. Sensing danger, Alex handed her card over without even looking at the bill.\n\nQuinn didn't argue but simply watched the waiter take Alex's card before turning an intense gaze back on the blonde.\n\n\"Why didn't it click with Courtney?\"\n\n\"I like to be in control,\" Alex replied.\n\n\"Clearly,\" Quinn said with a smile as the waiter returned and handed Alex the card folder. She waited for him to leave the table again before asking her next question.\n\n\"And is Courtney a top too?\"\n\n\"She likes to think she is.\"\n\nAlex could feel Quinn's eyes on her as she signed the bill.\n\n\"Don't you ever miss it?\" Quinn asked.\n\n\"Sex with Courtney?\"\n\n\"No smart ass. I meant, acting.\"\n\nAlex paused for a moment before answering.\n\n\"Nostalgia can be potent but it's also very limiting. Being an actress was just one part of my life. This is a new one. One I'm very good at and passionate about. Maybe one day I'll do something else, but for now I have certain goals I'm determined to make happen.\"\n\nQuinn looked at her like she wasn't convinced but knew it was better not to push the topic.\n\n\"You'd be a good professor. You're very good at the lecturing thing. Maybe that's what's next.\"\n\n\"Cute,\" Alex deadpanned back but a second later a small smiled slipped onto her lips.\n\n\"Besides writing, was fashion always something you were passionate about?\"\n\nQuinn gave a harsh laugh. \"Definitely not. I just wanted my parents to leave me alone. They were always trying to get me into some extracurricular activity like my sister, but nothing ever took. They hated that all I wanted to do was hole up in my room and write poetry.\"\n\n\"You don't talk much about your beginnings in the show. How did you get into modeling?\"\n\n\"I try to keep my family out of the show as much as I can. But a friend of my parents was a casting director in LA. When I was 14, he sent some school headshots I had done to some modeling agency looking for talent in local regions. Before you know it, I was taking professional shots with a Seattle modeling agency and going on jobs a month later.\"\n\nShe spread her hands in front of her like becoming a successful model as a teen was the easiest thing in the world.\n\n\"I missed a lot of school, but my parents had an arrangement with the administration. I was able to take tests after school and on weekends to make up for any time I missed while on shoots.\"\n\n\"The school agreed to that?\"\n\n\"I guess everyone thought it would help maintain a more normal lifestyle than hiring a tutor. Plus, my parents couldn't have afforded that unless they dipped into the money I was suddenly making. And they didn't make that choice until years later.\"\n\n\"Your parents took your money?\"\n\nAlex knew she was asking Quinn a lot of questions for what was supposed to be a casual lunch, but she was more and more intrigued by the woman the more time she spent with her.\n\nQuinn's show painted a fascinating picture of what it was like to be a young model, the highs and lows she experienced coming out to an industry full to the brim of queer people who cater to homophobic stakeholders in every corner, and what it meant to be judged as a commodity. But how she got to that place and the details of her home life and childhood weren't talked about in the show. Nor was her personal life.\n\nAlex wanted to know more about those sides of Quinn.\n\n\"From the age of 14-17 they took a percentage of every paycheck. I took over my own finances at 18 and cut them off from that revenue. It's partly why there's such a huge strain on our relationship.\"\n\nHer voice was tight and Alex felt her own first clench. She knew all too well what it was like to have a selfish, unsupportive parent and she hated that Quinn had to experience that.\n\n\"Did you ever enjoy modeling?\"\n\n\"I guess it felt nice to finally get attention for something. I had tried to get my parents interested in my writing for years. But the moment I started to book modeling jobs they began putting up my various photos around the house, telling their friends about me and stuff. I guess it was nice to get some of the validation they usually reserved for Claire.\"\n\n\"What about the show? Do you enjoy doing it?\"\n\n\"I do. I love it. I love the energy from the audience. I love sharing this unique part of my history. Letting people get a glimpse into the fashion world. And I really love changing it. Writing new scenes and new concepts to make it fresh.\"\n\nAlex smiled at the sight of the dreamy look on Quinn's face.",
        "\"A writer at heart,\" she said quietly.\n\nQuinn looked at her like nobody had ever called her a writer before.\n\n\"My mom always said a writer could never be someone with a face like mine. I think what she was really saying is that someone with a face like mine could never write anything worth reading.\"\n\n\"What about your sister?\"\n\n\"Are you wondering if Claire is as pretty as I am?\"\n\nQuinn batted her eyelashes at Alex and winked, eliciting a low chuckle from the blonde before her face turned serious.\n\n\"You're far more than a pretty face, Quinn.\"\n\nQuinn's own amused expression dropped as she looked back at Alex with her deep brown eyes. Alex took a breath before she continued.\n\n\"I was going to ask if your sister is in fashion too.\"\n\nQuinn laughed at the question and her eyes held a fondness in them that was absent when she spoke about her parents.\n\n\"No, Claire did the noble thing and became a teacher. My parents love that even more now that I quit modeling. It doesn't help that I'm a big ol' gay.\"\n\nThat caused them both to laugh.\n\n\"We keep going back to me. You're good at not talking about yourself,\" Quinn said.\n\nAlex glanced down at her phone to check the time. She knew she should be going soon if she was going to be on time to see Janet, but she couldn't bring herself to leave the conversation.\n\n\"You never told me how you came to see my show,\" Quinn said.\n\n\"Here you go again. Making the conversation about you.\" Alex gave her a quick wink so Quinn knew that the statement was meant in jest.\n\n\"Didn't you know? Models are more narcissistic than actresses.\"\n\n\"That would be hard to do. But as far as your show goes, Courtney took me actually. She loves the festivals. She had read something in Time Out about your book and how there was a show based on it.\"\n\n\"And you enjoyed it?\" Quinn didn't ask in an arrogant way but had a look of genuine curiosity on her face.\n\n\"I more than enjoyed it. I knew it wouldn't be an easy sell for Horizon stakeholders\u2014 \".\n\n\"You mean your dad,\" Quinn cut in.\n\n\"Yes. And the board as well. We've never had any kind of one person show at the theater. Definitely not something so autobiographical. But after seeing it, I knew it would sell.\"\n\nQuinn rolled her eyes at Alex's response. \"Thanks, I guess?\"\n\n\"Selling tickets is half my battle, Quinn. It can't just be about what I like. That's just what I needed to sell it into my father. But the show itself was something I personally wanted to produce. I've never seen something so honest and raw. Was it hard to talk about some of the things you bring up in it?\"\n\n\"I certainly didn't make a lot of friends in the industry because of it. In fact, I lost a few. People don't like dirty laundry being aired out. And in this show I air it out about an entire industry, not just one person.\"\n\n\"I noticed you didn't call anyone out specifically. I assume that was to protect their careers?\"\n\n\"And to avoid getting sued,\" Quinn laughed. \"The first workshop I did in LA had a few references that weren't names but made it clear enough who I was talking about. After Mikey got a few angry calls, it became clear that it would be easier not to enter into a legal battle. But I was ok with that in the end. The show isn't about a person. It's about the collective. About what can happen to young models when they're swept up in that collective machine.\"\n\nAlex nodded as Quinn spoke. She wasn't a model and the closest she ever came to the fashion industry was at New York Fashion Week. But she knew enough actresses who rode the line between the two disciplines to know what kind of pressure those women were under physically and mentally.\n\n\"Tell me more about your group. That did Streetcar at NYU.\"\n\nQuinn was asking about another topic Alex was skilled at deflecting. She rarely allowed herself to go back to the days before her mom's death\u2014there just never seemed a point to dwell. But somehow over this lunch with Quinn, Alex had felt the constant tightness in her chest begin to unravel a bit.\n\nQuinn's own openness and vulnerability made Alex want to give her something back in return.\n\n\"Basically, we were sick of not getting cast in the student productions because of whatever political college nonsense was happening at the time so we decided to do something about it. We were in a lucky spot because we had Horizon and my father let me use the space on dark days.\"\n\n\"That seems more supportive than the Simon Anders I've heard about.\"\n\nAlex gave a quick, harsh laugh that held no real humor in it. \"My mom made him. He wouldn't have otherwise. And we were only allowed to use the small stage downstairs, not the mainstage.\"\n\n\"What other shows did you do? I wish I could have seen more but that was the only one online.\"\n\nQuinn leaned in slightly and Alex found herself drawn to the woman, resting her own elbows on the table so she could lean her head on her hands as she reminisced.\n\nAlex gave a genuine smile as she thought back to some of the brilliant, and not so brilliant, ideas she and Courtney had back then. They were so eager and so willing to try anything in the name of \"great art\".\n\n\"We did a disastrous all-female version of Oklahoma. That's when we realized the whole format fit better with plays and not musicals.\"\n\n\"You sing?\"\n\nQuinn's face broke out into a wide smile and she playfully clapped her hands together like she just found out a huge secret.\n\n\"Not anymore, don't get any ideas.\"\n\nAlex smiled at the girlish pout Quinn sent her way but ignored it. She was never going to let Quinn hear her sing. Not even her shower got that honor anymore.\n\n\"Besides Streetcar, my favorite was The Importance of Being Earnest,\" Alex said in a quick attempt to move the conversation off her singing.\n\n\"I could see Oscar Wilde lending itself to some nice gender bending.\"\n\n\"Playing a man was certainly fun.\"\n\nThe way Quinn's eyes raked up and down her body made Alex feel like she was being undressed on the spot.\n\n\"I'd like to see you in a suit.\"\n\nQuinn's voice was low and sexy, and Alex had to squeeze her legs together to stop the throbbing that had suddenly began growing. She cleared her throat so she knew her voice wouldn't betray her obvious desire.\n\n\"I'm afraid the wig wasn't that flattering.\"\n\nQuinn smiled at her but didn't push the flirtation any further. Alex checked the time on her phone again. Now she was definitely late.\n\n\"I'd enjoy staying but I have a meeting with your publicist,\" she told Quinn as she moved to stand up.\n\nThey had only ever agreed on lunch but based on the look on Quinn's face, she was as disappointed for lunch to end as Alex was.\n\nAs they left the restaurant and stood just outside of it, Quinn scrunched her nose.\n\n\"I hate media shit. Please tell my publicist that I'm on vocal rest and can't speak to anyone.\"\n\n\"First week here and already making diva demands. I'm pretty sure only singers get to claim vocal rest.\"\n\n\"Didn't I tell you?\" Quinn gave her a wide smile as she twirled on the spot. \"My show is now a one-woman musical. Jazz hands and all.\"\n\nShe ended her dance by waving her fingers in front of her in the typical \"jazz hands\" pose. The adorableness of it caused a grin to break out onto Alex's face.\n\nQuinn stopped dancing and looked shyly at the theater manager as if suddenly embarrassed by her antics.\n\n\"Please don't stop on my account. You're very cute.\"\n\nQuinn's face was suddenly serious. She gave Alex a long look before taking a closer step towards the blonde. Alex's own smile dropped when she saw the desire clearly swimming in the brunette's eyes.\n\n\"If you keep saying things like that to me, it's going to make it hard not to kiss you.\"\n\nQuinn took another step into Alex's space, but the blonde didn't move back. The air around her somehow felt hotter, as if it was mid-August and not October.\n\n\"Quinn.\"\n\nAlex said the model's name in a warning tone, but her eyes betrayed her as they moved down to stare at Quinn's lips.\n\n\"Alex,\" Quinn said back with a mischievous glint in her eye.\n\nShe leaned forward so she was a breath away from Alex's lips. It wouldn't have taken much for them to be kissing again.\n\nQuinn leaned in slowly, but instead of kissing Alex, she moved her mouth so she was next to the blonde's ear.\n\n\"Can I text you?\" she asked in a whisper as she touched Alex's lobe lightly with her lips.\n\nA shiver ran up Alex that she couldn't hide even if she wanted to.\n\n\"Yes,\" Alex breathed back.\n\nQuinn moved her head so her face was in front of Alex's again. She looked down and stared at Alex's mouth.\n\n\"Thank you for lunch,\" she said before she moved in to place a small kiss on the side of Alex's full lips.\n\nShe slowly backed away from Alex so their faces weren't as close, but close enough that Alex could still feel Quinn's body heat. Alex felt dizzy and couldn't seem to form words.\n\nQuinn was studying her face when she clicked her tongue suddenly.\n\n\"Hmm. I should probably help you with that,\" she said as she pointed to the corner of Alex's mouth.\n\n\"What?\" Alex asked and even she was surprised by how thick and low her voice sounded.\n\nWith her right hand, Quinn gently cupped the blonde's chin. She gently turned Alex's face and moved in so she could lightly lick the spot that she kissed before.\n\nWith her left hand, she wiped the same spot with a finger. When she brought her hand back, she held it up so Alex could see a faint red smear there. Red lipstick.\n\nAlex knew it was probably still on her mouth and she would need to clean it off before her next meeting, but she also knew she would be thinking about that unbelievably sexy moment for days to come.\n\nQuinn gave her one last small smile before she turned around and swayed her hips as she walked down the New York street.\n\nAlex knew she was late to her meeting, but she felt frozen to the spot as she watched Quinn walk away from the restaurant.\n\nShe didn't trust her legs to move properly so she gave herself a moment to close her eyes and breath.\n\nAs she started the short walk to Janet's office, she did her best to tame the throbbing between her legs. This meeting was going to be long and painful.\n\nChapter 11\n\nAlex left Janet's office in the same haze that she entered it. Lunch with Quinn was really the only thing she could think about. Her mouth was still burning where she briefly felt the woman's lips and tongue.\n\nThankfully Janet was still on the phone with Quinn's publicist and couldn't interrogate her on the blush that had crept up her face every time the model was brought up in their meeting.\n\nBy the knowing smile Janet gave her the whole meeting though, her little crush wasn't completely lost on the publicist. Luckily, she wouldn't have to see Janet again until the Death of a Salesman opening in three weeks. Her team would be busy securing the reviews for that show and fielding other media requests.\n\nInstead of heading back to the office, Alex decided to go home and check her email from there. Once in her apartment, she poured herself a glass of bourbon and sank onto her couch.\n\nWith a show opening soon, she wouldn't have many more nights like this to just relax. Now that the season schedule was set and the fall show was close to opening, she could just sink into her couch all night if that's what she chose to do. The summer had been grueling as they always were as she tried to raise money for the theater while also finalizing the season.\n\nBesides the theater, her apartment was her other sanctuary and she absolutely adored it. Right next to Bryant Park, it felt like a little haven inside the crazy bustle of the city. And it was close enough to work that she didn't have to go far after late nights at the theater, of which there were many.\n\nShe knew she would never be able to afford the luxury building without family money, but she figured there should be some consolation for having to grow up with Simon Anders as a father. She didn't actually know if her grandparents were as bad as Simon, they both died when her father was young, leaving him an exorbitant amount of money and entitlement, but she couldn't help but think they probably were.\n\nFor Alex, family had always meant her mom, which was why it was so devastating to lose her. She was the only person Alex had besides Courtney and her not-so-fatherly father.\n\nAs she gazed out the large windows of her 17<sup>th</sup> floor apartment, she downed the rest of her drink and was trying to debate another when her phone buzzed on the coffee table in front of her.\n\nThe number wasn't one she recognized, but if the butterflies exploding in her stomach were anything to go by, she had a feeling she knew who it was. She smiled when she opened the text from an LA area code.\n\nUnknown number: Stop thinking about me.\n\n \n\nAlex put down her glass deciding against a third. It wasn't even 6:00 in the evening yet on a Monday and she hadn't actually eaten that much of her lunch. She texted the mystery number back.\n\nAlex: I don't even know who this is. You could be anyone. \n\n \n\nUnknown number: Pretty sure you're not thinking about just 'anyone' right now.\n\n \n\nAlex smiled before she replied. She definitely knew who this was.\n\nAlex: You're awfully confident, Ms. Collins.\n\n \n\nUnknown number: Ha! You just confirmed my theory\n\n \n\nAlex laughed out loud to the empty apartment and decided a third drink might not be the worst thing if they were going to carry on flirting over text.\n\nShe went to her bar cart and poured a third, albeit smaller, glass of bourbon and went back to her phone. Her body was buzzing already. She saved Quinn's number into her phone just as another text came in.\n\n \n\nQuinn: Still with the PR monkeys?\n\n \n\nShe included a newspaper and monkey emoticon with her text.\n\n \n\nAlex: Home now. Your publicist is a bit extra.\n\n \n\nQuinn: She is. And I can't believe you said \"extra\" like some millennial\n\n \n\nThis time Quinn used an eye roll laughing emoji. Alex doesn't generally use emoticons, but Quinn's texting was as cute as she was.\n\n \n\nAlex: I am a millennial. \n\n \n\nQuinn: Barely. I don't think you count\n\n \n\nAlex paused to take a sip of her drink when she saw Quinn was still typing.\n\n \n\nQuinn: Anything I should be worried about? Am I going to have to wear a sandwich board in Times Square promoting my show?\n\n \n\nAlex: Hardly. But there was mention of a door to door canvassing approach. \n\n \n\nQuinn: Wait, really?\n\n \n\nAlex: No, not really. But you may want to talk to your team about how much press you want to do. They were still going over a media plan when I left.\n\n \n\nAlex understood Quinn's reluctance to do a lot of media. And not just in theory\u2014 there was a whole section in her show about her hatred for the press.\n\nQuinn: Thanks for the heads-up \n\n \n\nAlex felt a rush of tenderness as she looked down at the smiley face Quinn included in her text, which she chalked up to the alcohol. She knew something that simple shouldn't make her so happy.\n\nQuinn sent another text when Alex didn't respond right away.\n\nQuinn: How about no more work talk?\n\n \n\nAlex: Deal. What are you doing tonight?\n\n \n\nWork talk was probably what she should stick to, but Alex enjoyed talking to Quinn. Lately Courtney was the only person she really talked to and already in one day, she had told more to Quinn than she had to anyone else in months. Scratch that. Years more likely.\n\nQuinn made her feel good and, in that moment, she decided, or the bourbon decided, that she wasn't breaking any laws. Her father didn't own her personal life and he didn't need to know about his daughter's growing crush.\n\nQuinn: Decorating my apartment and eating a cheeseburger\n\n \n\nAlex loved the image of the brunette in her apartment, covered in paint while chowing down on a burger.\n\nAlex: With no qualms about the poor cow you're eating?\n\n \n\nQuinn: Ate. Just finished. No regrets.\n\n \n\nAlex knew she should consider eating too, especially if she was going to continue texting Quinn with all this alcohol running through her. She reluctantly moved off her couch and to the fridge. There was definitely nothing in it that sounded as good as a cheeseburger, so she settled on some leftover Chinese food.\n\nWhen she came back to the couch, there was another text waiting for her.\n\nQuinn: And what is the enigmatic Alexandra Anders doing with her night?\n\n \n\nAlex: Chinese leftovers. Many regrets. \n\n \n\nQuinn: I regret not kissing you more after lunch.\n\n \n\nAlex's stomach dropped as she looked at the text. Quinn's boldness and willingness to put herself out there was such a turn on to the blonde. She decided to play it safe with her answer.\n\nAlex: I would have never made my meeting if you had.\n\n \n\nShe saw the text bubbles come up as Quinn was typing but then they disappeared. Alex smirked as she imagined a blush creep up that smooth skin. A moment later a text came through.\n\n \n\nQuinn: Since you're not doing anything besides boring leftovers...maybe you can help me with something? \n\n \n\nAlex's stomach did a flip. She had a feeling whatever help Quinn needed would cross some kind of boundary, but she couldn't seem to care about the ramifications of their flirting.\n\nShe texted back and smiled at the phone like a goofy schoolgirl.\n\nAlex: With?\n\nQuinn: An old friend of mine asked me to speak at a Juilliard class tmw and I have no idea what to wear. Can I show you some options?\n\nAlex didn't hesitate before answering.\n\nAlex: Show me.\n\nQuinn's texts went quiet and Alex sat in torturous anticipation waiting for whatever would come in.\n\nAlex knew that that this was more of a game than the need for actual advice, and her body vibrated at the thought of picking what this sexy woman wore in front of other people.\n\nAlex's phone buzzed with a new text. This one had a photo attached.\n\nThe picture that came in showed Quinn standing at a full-length mirror. She was wearing a simple black skirt and grey cardigan. She wore glasses that Alex had never seen on her and she looked very much like a sexy librarian.\n\nHer hair was pulled up and her lips were twisted into a naughty smirk that made Alex want to devour her lips. If there was one thing it was clear Quinn knew how to do well, it was pose.\n\nQuinn quickly followed up the picture with a text.\n\nQuinn: Don't say anything until you've seen all three looks.\n\nAlex: I wouldn't dare.\n\nAlmost three minutes after Quinn sent that last text, another photo came in. This time she had on a pair of tight, black skinny jeans that were ripped at the knee. On top, she was wearing a crisp, white button up shirt that had the sleeves rolled up to her elbows.\n\nAlex told herself that adult women don't drool and managed to stop herself from that embarrassing act. She had to stop her fingers from texting back until Quinn was done.\n\n \n\nThe third photo almost made Alex drop her phone.\n\nQuinn was no longer in front of her mirror, but on a bed. Her dark hair was sprawled out against the pillow and she was holding the camera over her body so Alex could see everything down to her waist.\n\nThe white button up top Quinn had on in the previous photo was now unbuttoned down to her navel. Her breasts weren't bare, but the black bra underneath left little to the imagination. Quinn was looking at the camera innocently.",
        "Alex fumbled with her phone as she tried to reply and had to take a breath to still her shaking fingers. This isn't the first time a woman has sent her a sexy photo, but this is definitely the first time it's made her heart race like it was.\n\nAlex: I want to believe that last option was just for me.\n\n \n\nQuinn: It was.\n\n \n\nAlex: Then option number two for the students. I don't want to think about them getting number three.\n\n \n\nQuinn: Because you're jealous?\n\n \n\nAlex: Because it might reflect badly on my theater.\n\n \n\nQuinn: Of course. Then I'll be sure to be my most professional tomorrow. For you.\n\n \n\nAlex: Thank you. I know how hard it is for you to be professional.\n\n \n\nThis time Alex used a wink face emoticon to show she was just teasing the woman. She was enjoying this flirty banter immensely. The photo didn't hurt.\n\nShe should have moved the conversation into safer grounds, but her body was now on fire, bourbon was coursing dangerously through her veins and she felt a rush of desire she couldn't ignore.\n\nQuinn had put herself out there. Shouldn't she play along a little? Before she could stop herself, she sent a follow-up to her last text.\n\nAlex: Any other outfits you need approval on? I'm an expert at sleepwear. \n\n \n\nShe smiled at her own brazenness and hoped she didn't look too desperate.\n\nQuinn: You think I'm going to give a speech to college kids in lingerie?\n\nAlex: Is that what you wear to bed?\n\nQuinn was quiet for almost twenty minutes and Alex started to think she went too far. After all, she was the one who had set the boundaries to begin with. It wasn't fair to expect Quinn to be the one to cross them.\n\nAfter she resigned herself to a game of computer chess, her phone buzzed.\n\n \n\nQuinn: If you'd really like approval over my sleeping options, I'll let you have it.\n\nAlex was instantly wet. Not even from the prospect of what scintillating photo Quinn might send again, but the fact that Quinn was subtly submitting to her.\n\nAlex: Show me then.\n\n \n\nTwo photos came into Alex's phone, one right after the other. With hands that were slightly shaking, Alex opened up the text and smiled wider than she had in years.\n\nIn the first one, Quinn was sitting on her floor cross legged, staring into the mirror. Alex could tell that she had gotten ready for bed because her hair was pulled into a messy bun and her make-up was now off.\n\nHer head was cocked to one side and she had a goofy little smile on her face as she looked into the mirror. Alex knew the woman could pose and look sexy, evidenced by the photo options earlier, but in this photo, Quinn was just herself. Sweet, open, and goofy.\n\nAnd instead of wearing sexy lingerie, the brunette was in a bright blue pajama set. Across the pajamas were little slices of pizzas that had faces on them.\n\nIn the second photo, Quinn stood at the mirror with one hand on her hip. She had on a full unicorn onesie that included a hood with a sparkly pink horn. Like the first photo, it wasn't meant to be sexy. Pretty much her entire body was covered and yet Alex thought it was the cutest thing she had ever seen.\n\nAlex appreciated that Quinn was obviously not the kind of woman who needed to be told she was beautiful. In fact, given her history in the modeling world, that probably wasn't the way to her heart.\n\nAlex: Not what I was expecting...\n\nQuinn: Disappointed?\n\nAlex: Not at all. Just a really tough choice.\n\n \n\nQuinn: I figured it would be.\n\nAlex: As much as I love a good mythical creature with a horn, pizza always wins\n\n \n\nQuinn: Good, because that's the second pair I put on and I don't want to change\n\n \n\nThat made Alex laugh.\n\nQuinn What's your favorite kind of pizza? \n\n \n\nAlex: Pepperoni. What's yours?\n\nQuinn: Hawaiian. \n\n \n\nSomehow the conversation morphed from something with a sexual undercurrent to fun and flirty and it went on like that for the rest of the night.\n\nAlex eventually did boot up an online game of chess but was easily distracted by it from each new text that came in. The two women bounced around topics without really going deep into anything.\n\nThey talked about everything from favorite foods to movies, and Alex was surprised to learn Quinn could hold her own about theater. Alex certainly couldn't about fashion, but she was still interested in hearing Quinn talk about it.\n\nAt 11:00pm, Quinn sent a text letting Alex know she was going to sleep, and the blonde tried not to be disappointed that the easy conversation would be coming to an end.\n\nBefore Alex did the same and got ready for bed, she sent Quinn a goodnight text.\n\nAlex: I hope your Julliard thing goes well tmw, text me and let me know?\n\n \n\nQuinn: I will and thank you for your...help. Even though it seems unfair that I didn't get to see what you sleep in.\n\n \n\nAlex smiled as she responded, knowing her response would frustrate the other woman.\n\n \n\nAlex: That's definitely not happening.\n\n \n\nQuinn: Why? \n\n \n\nQuinn's text was sent with a pouty face emoticon.\n\nAlex: Because I sleep naked. \n\n \n\nHer last text must have surprised Quinn at least a little bit since Alex could see the text bubbles come up and go away more than once before the brunette finally responded.\n\nQuinn: That was mean.\n\n \n\nAlex: Night, night Nemo.\n\n \n\nQuinn's final text was simply an emoticon of a fish and a slice of pizza and Alex could feel her resolve melt even more.\n\nShe had never been one to get into the whole incessant texting with a woman thing but talking to Quinn was fun and easy and she didn't hate the flirtatious banter they had established all day.\n\nA little while later as she got into bed, Alex thought about the events of the day. Deep down she knew Courtney was right and she would need to figure out how to live her own life while also making her father realize she was worthy of his theater.\n\nPerhaps once Quinn's show was open, she could be more open to something happening between the two of them. After all, there was something there. She felt something she hadn't felt in a long, long time and she wasn't ready to just walk away from that.\n\n \n\nThe question was, how in hell was she going to resist the gorgeous woman until then?\n\nChapter 12\n\n \n\nQuinn sat at her laptop, distractedly contemplating the surprising turn of events of the past two weeks.\n\nShe would never have guessed that she'd still be in a near constant text conversation with Alex Anders.\n\nIt's not that she couldn't feel the intensity of their connection. She had felt it at lunch when Alex's eyes roamed her body hungrily as if she was there to feast on her and not a salad, she had felt it in in the way Alex said Quinn's name at the end of their meal, almost like a plea, and she had felt it in the way Alex so easily flirted with her on their first night of texting.\n\nBut she was certainly surprised Alex was giving in to whatever was growing between them. Unfortunately, it only seemed to extend to their text conversations.\n\nSince their lunch two weeks ago, whenever Quinn ran into her at the theater, Alex was still her overly professional self, often not even making eye contact with Quinn. But so far, their run ins at the theater were pretty few and far between, much to the disappointment of the brunette.\n\nAlex must not have a lot of reason to come down to the rehearsal rooms since she's in the admin offices dealing with boring contracts. At least that's what Quinn pictured her doing in that office of hers.\n\nQuinn hadn't felt like pushing things by asking for another lunch, not with the fall show opening up this week. Alex had mentioned in a text that it was usually pretty stressful and busy in the offices around an opening, especially one with Rick's name on it.\n\nQuinn also didn't have a great excuse to be at the theater right now and somehow, she figured being there to stalk a sexy blonde theater manager wasn't a good enough one. Not until her official rehearsals began.\n\nRight now, she knew she needed to focus on rewrites for her show and prep for her first rehearsal with Diego next week. She had plenty of time before her show opened at the beginning of December, but she was still anxious to get started with him.\n\nHer show was the first of the three Winter Series productions. Mikey had theorized that Alex wanted to start off with a bang. At least Quinn hoped that was why she was first and not that if she failed, they'd still have two shows to help cover up her mess.\n\nDeep down she knew that wasn't the case and that Alex would never put something on that stage that she didn't believe in, especially with the pressure she seemed to feel from her dad.\n\nQuinn wished she knew more about their dynamic, but Alex became closed off any time the topic of family came up and Quinn didn't know if that was because of her dad or her mom, but either way, she thought it better not to push over a communication format as impersonal as texting.\n\nAnd yet somehow their texts didn't feel impersonal. Alex was so inquisitive about Quinn. Her texts held the same intensity as the woman herself.\n\nAlex was so different than any woman Quinn had dated back in LA\u2014she rarely asked her about modeling or anything related to the industry and seemed most comfortable when they were discussing silly things like movies or music. Perhaps Alex didn't have many people in her life that brought out the more casual side of her.\n\nAlex was the polar opposite of Jenna. With Jenna there was subtext layered upon subtext with every conversation and it was impossible to know where you stood with her. Alex was honest and direct. Jenna entered a room like a whirlwind of energy. Alex was controlled and precise in everything she did. She was stoic at times, but the passion brimming underneath was no less noticeable. Jenna was loud and forthcoming with past stories and experiences. Alex was measured in what she told and how much of it she was even willing to say.\n\nJenna had wanted Quinn because she was a model and the perfect arm candy. Quinn was just stupid and young enough to believe that someone as beautiful and famous as Jenna Matthews would ever want her as anything more than a headline.\n\nJenna got her desired effect\u2014a jealous boyfriend, a very public reconciliation between the two, and a forgotten model left in the messy media storm. But she had never seen desire in Jenna's eyes in the same way she has seen it so potently in Alex's.\n\nQuin couldn't help but be completely and utterly fascinated by the theater manager. She was obviously accomplished and seemed to excel at whatever she's attempted in her life. She's also gorgeous beyond belief but didn't seem to dwell on superficial things like that.\n\nSomething about Alex also seemed sad to Quinn and she guessed it had something to do with losing her mom and everything else she lost with it. Each layer that Quinn pulled back, even through text, made her want to know more. And she was becoming increasingly frustrated with the limitations that came with a short text conversation here and there.\n\nAs Quinn continued to stare at her script distractedly, she contemplated asking the blonde out again, but this time making it clear that she wanted it to be a date.\n\nAlex had already said they couldn't date, but she was also flirty and responsive to Quinn. As much as Alex seemed to crave control, in this instance, Quinn had a feeling she would need to be the one to push the woman's hand.\n\nThe kiss in Alex's office and even the short one outside of the restaurant were like episodes on repeat in her head and every time she relaxed or closed her eyes, the images pushed their way into the forefront of her mind and all the way down to her pussy.\n\nShe had never been kissed like that moment in Alex's office. She had never had her mouth so thoroughly controlled and devoured. She wanted to feel the strong push of the blonde's body against hers again as she took what she wanted from Quinn.\n\nQuinn's less than innocent thoughts were interrupted by the ring of her phone and like every time she heard it this week, she felt a pang of disappointment when she saw it was Mikey and not Alex. She should have known since Alex never called her. But a girl can dream.\n\n\"Hey Mickey,\" Quinn answered.\n\nShe heard him sigh on the other end upon hearing the nickname.\n\n\"How are the rewrites coming along?\" he asked, not even bothering for a pleasant hello.\n\nSo typical of Mikey. Sometimes she couldn't tell where Manager Mikey ended and Friend Mikey began.\n\n\"I'm good, thanks for asking, the apartment is looking great, you should come over tonight and see it,\" she said back dryly.\n\n\"Can't tonight, I've been invited to an event.\"\n\n\"Aren't I the kind-of-semi-but-not-really famous one here? Why are you getting invites to parties?\"\n\n\"Believe me, this is one you'd rather miss. It's at Janet Jameson's office. She runs PR for Horizon.\"\n\nMikey's voice sounded muffled for a moment.\n\n\"Ew, yeah no thanks.\"\n\nQuinn pushed back from her desk since she wasn't likely to get much else done tonight in terms of work.\n\n\"Did you call for fashion advice?\" she asked.\n\n\"No, I think I'm good on lesbian chic,\" he laughed quietly. \"I called to make sure you know that you have to be at the fall opening this Friday. 8pm show.\"\n\n\"Did you really just call me to tell me about a show I already knew I needed to be at?\"\n\nQuinn moved to her bedroom as they talked and plopped down on her bed. She hadn't done much to her new apartment yet, but her bedroom was something she took care to handle right away. She was a sucker for a big bed and more pillows than any one human could ever need.\n\n\"Because you're just so responsible and all?\"\n\n\"No. But it's not like I have that many major events to remember.\"\n\n\"I'm also calling to tell you that you've been invited to dinner after the show, before the cast party.\"\n\nHe sounded muffled again.\n\n\"What are you doing over there?\"\n\n\"Trying on shirts. Anyway,\" he emphasized the word like he wasn't the one distracted by outfit woes. \"Janet has invited you to join her table for dinner. Apparently, it's something she does on opening nights and it's an honor to be invited.\"\n\nQuinn rolled her eyes even though Mikey couldn't see. She had heard the name Janet a few times but couldn't really remember anything outside of the fact that Alex was having a meeting with her that day they had lunch.\n\n\"And she's the PR lady?\"\n\n\"Correct,\" Mikey replied.\n\n\"I'm confused. Are we considering new representation?\"\n\n\"No. She owns an agency that handles PR for the theater. But she's hosting a dinner on opening night and she asked me to invite you. Alex Anders and some of the board will also be there.\"\n\nQuinn's stomach dropped at the mention of Alex's name and she felt herself blush. Thankful Mikey wasn't there in person to see.\n\n\"Why me?\" she asked hesitantly.\n\n\"You're the next big thing coming up in their season. Why not?\"\n\nMikey always treated her like she was on the same A-list status as the likes of her ex, but Quinn knew she held a bit of notoriety at best, not fame. Some people didn't understand, or didn't care, about the difference and perhaps Janet was one of those people.\n\nLost in thought, Quinn said something out loud that she meant to keep to herself\n\n\"Wonder why she didn't mention it to me.\"\n\n\"Huh? Who?\"\n\n\"Oh, just Alex. We spoke earlier and she didn't mention it.\"\n\nShe tried to keep her voice casual, but this was Mikey and he knew her better than anyone. Probably even better than Claire.\n\n\"Why would she? It's an invite from Janet.\" As he asked the question, he sounded a little confused and more than a little suspicious.\n\n\"Yeah yeah, right,\" she said and then decided to change the topic before he could ask anything else. \"You sure you don't need outfit advice? I can literally hear you throwing discarded options on the floor.\"\n\n\"I would never throw Gucci onto the floor,\" he scoffed. \"I'm dressed. And I have to go. But on Friday just head to Napoli's across the street and ask for Janet Jameson's table. Or you know, let your girlfriend escort you.\"\n\n\"Hey, wait wha-,\" she started to say but Mikey cut her off before she could get out her entirely flustered question.\n\n\"Call you tomorrow Q, love ya.\"\n\nAnd with that the call went dead. Quinn leaned back on her pillow and huffed out a breath. Apparently, she wasn't as subtle about Alex as she thought she had been. She probably shouldn't smile at his use of the word 'girlfriend', but she definitely was.\n\nAs she lay there trying to decide on what to do with her night, she decided that she needed to see Alex. Maybe if she saw her, her body would get whatever fix it needed and she'd actually be able to get some work done. Or maybe it would cause the near constant throbbing between her legs to ger worse.\n\nEither way, she was going to stop by the theater tomorrow. After all, busy or not, Alex still needed to eat at some point.\n\nChapter 13\n\n \n\nThe theater's admin office was busy when Quinn got there the next day. People were moving about the cubicles, answering phones and there was an overall excitement in the air over the upcoming opening night.\n\nGiven how busy it seemed in the office, she suddenly realized how bad her timing probably was. No doubt Alex was crazy busy dealing with opening night fire drills. But Quinn was here, and she might as well just see if the theater manager was hungry.\n\nAs Quinn approached the familiar office door\u2014 very familiar office door\u2014 she knocked lightly and pushed it open when it sounded like Alex said something like \"come in\".\n\nAlex didn't look up right away as she finished writing some note on her desk. Which was fine with Quinn because it gave her a chance to catch her breath from the image she walked into.\n\nDear god, was Alex wearing suspenders?\n\nAlex looked up when Quinn just stood there looking lost. She knew she should close her mouth or say something, but it was as if she had just walked into her own personal lesbian fantasy.\n\nAlex had on sleek black suspenders over an incredibly ironed white button up top. The top two buttons were open, and Quinn could see a sliver of the women's throat. Someone in the office gulped and Quinn was pretty sure it was her.\n\nShe finally moved her eyes up from trying to see what pants went with the outfit to find Alex's amused eyes and quirked eyebrow.\n\n\"Well this is a nice surprise,\" Alex said as she stood up from the desk.\n\nQuinn didn't even try to hide her eyes trailing down the blonde's body to the tight plaid pants she had on. She looked...dapper and Quinn had never thought to use that word for a woman before. Or just not one she wanted to fuck.\n\n\"Is it the outfit you like Ms. Collins?\" Alex's voice held a hint of amusement in it as she asked the question to a flustered Quinn.\n\nQuinn finally looked back up into Alex's face. There was nothing she could do to hide over her obvious arousal and trying seemed futile.\n\n\"The face ain't bad either,\" she winked at Alex.\n\nAlex smiled at her and Quinn wondered how many people saw that specific smile. It's not the confident smirk she gave to most people. The smile she gave Quinn made her face look softer in a way and Quinn wanted to believe she was the only one who saw it.\n\n\"What do I owe the pleasure?\" Alex asked.\n\nShe remained standing behind her desk and Quinn had to take a small breath before she answered. Alex's eyes were clear and bright blue today and staring into Quinn's like she was the most beautiful thing in the world.",
        "\"I was wondering if you were hungry.\" Quinn waved behind her at the door. \"I know there's like loads going on but figured everyone has to eat right? Even Alex Anders.\"\n\nQuinn mentally gave herself a shake at the way she fumbled over her words. It's just a pair of damn suspenders. She should not be so tongue tied at the sight.\n\nAlex looked at her watch and Quinn felt the anticipation of rejection. Of course Alex was too busy to get lunch with her right before an opening night. But Alex simply picked up her jacket from the back of her chair.\n\n\"I have an hour before I need to head down to the theater, what did you have in mind?\"\n\n\"Pizza? Down the street? I promise to have you back before you turn into a pumpkin.\"\n\nQuinn dramatically crossed her heart with her fingers. Alex moved around her desk and gave Quinn a confused look.\n\n\"Turn into a pumpkin? Doesn't that make me the carriage?\"\n\nQuinn laughed as she held the door open for the blonde.\n\n\"Don't talk back when you're about to get free pizza.\"\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\n\"What are you doing?\" Quinn looked up from the two slices of pizza she was eating to see Alex sitting like a Queen on a throne, delicately cutting her pizza into small bites. \"Isn't it like sacrilegious for a New Yorker to cut their pizza?\"\n\nAlex looked up with a sad smile and gave more of an honest answer than Quinn was expecting with her playful jab.\n\n\"That's not the New York I grew up in. In my house, you use a fork and knife. Always. Guess I'm just on auto pilot.\"\n\nShe put the fork and knife down she was using and picked up the rest of the slice of pizza with her hand. She gave Quinn a smile before she took a bite and the brunette tried her hardest not to stare at the woman's mouth too long. That was unsuccessful.\n\n\"When I first got to New York Mikey mentioned something about your family name,\" Quinn replied.\n\nShe thought that sounded less tacky than \"Mikey told me your family is filthy rich.\" Quinn was more interested in how it's all shaped Alex than the money itself anyway.\n\n\"Yes. My great-great-grandfather was an immigrant from Sweden and made a name for himself in the shipping business here. If you go down to South Seaport, you can see the name on some of the historical sites. And my mom's family comes from old New York money.\"\n\nAlex looked off at some of the other customers idly before she turned her attention back to Quinn and gave her another sad smile.\n\n\"I guess there are a lot of normal things I do the Anders way. Eating pizza with a fork must be one of them.\"\n\n\"Was it lonely? Growing up like that? I remember you said you didn't have any siblings.\"\n\nQuinn took another bite of pizza but only for something to do. She was much more interested in listening to the gorgeous woman across from her than eating.\n\n\"It often was. I spent a lot of time in my room while my parents entertained. Putting on plays with my stuffed animals. My mom would usually sneak away at some point and come take over one of the roles, playing an elephant or beaver or whatever. But I guess I didn't have it that bad. The bedroom was huge.\"\n\nShe gave a small smile that didn't reach her eyes and Quinn's heart tightened thinking about that lonely little girl. Quinn was more thankful than ever she had Claire growing up.\n\n\"How does your dad feel about you being gay?\"\n\nAlex pushed her plate aside and looked at Quinn with a playful smile that finally reached her eyes.\n\n\"Aren't we inquisitive today?\"\n\nInstead of answering, Quinn grabbed her plate and Alex's and walked over to the garbage bin in the corner of the shop. She then came back to the table, put both arms across it and leaned in.\n\n\"Can we cut through the bull shit for a second?\"\n\nAlex's brows scrunched together for a moment, but she looked more intrigued than offended by Quinn's direct question.\n\n\"Always.\"\n\n\"We like each other. And before you give me the whole professional decorum excuse thing again, I think we should just acknowledge that we have a thing here.\"\n\nAlex's lips twitched like she wanted to smile bigger as she continued to stare at Quinn.\n\n\"A thing?\"\n\n\"Yes, a thing,\" Quinn said back with a decisive nod. \"Granted, I haven't had to navigate the 'dad waters' in a while with a girl I'm dating, but I happen to think you might be worth it.\"\n\nHer heart was hammering as she said that last sentence. She had no intention of making some big proclamation over pizza, but the thought of leaving there and just going back to an every now and then text conversation with Alex also didn't sit well.\n\nShe had thought of nothing else but this woman for weeks and she knew that had to mean something. She's not the type to fall so hard, so quickly\u2014even Jenna had to convince her to give them a shot more than once.\n\nThe smile that was on Alex's face fell, but she didn't move to get up which Quinn took as a good sign.\n\n\"So, you want to date me then?\"\n\nAlex's tone was quiet and intense, but she didn't look upset. In fact, Quinn thought she could almost see something hopeful in Alex's eyes and it squeezed her own heart.\n\nQuinn shrugged. \"For now, I'd really like to get to know you better.\"\n\nShe couldn't remember the last time either of them broke eye contact and she wouldn't be surprised if other customers saw a ball of electricity around their table. Everything about them was charged.\n\n\"I'd like that too,\" Alex said quietly.\n\nQuinn just smiled back. They didn't really need to say anything else. Opening night was Friday and then they could figure it out. For now, she knew she needed to get Alex back to the theater.\n\nNow that she had at least learned her feelings weren't one-sided, she felt like she was drifting on a cloud. It was clear that Alex wasn't as hard and indifferent as she wanted the world to believe and Quinn was excited to pull back even more of her layers.\n\nThey were quiet for a few minutes on the walk back to the theater.\n\n\"He's not homophobic,\" Alex finally said. When Quinn looked over at her, she continued. \"My father, I mean. You asked before. He has lots of gay friends. Rick is gay.\"\n\n\"It would probably be hard to be a theater director if he was,\" Quinn mused.\n\n\"But he does come from a very traditional family. As long as the relationship isn't messy for him or his theater, he doesn't really have interest in who I'm dating.\"\n\nThe messy comment was curious to Quinn and she wanted to ask more about it, but they were close to the theater and it seemed like a much bigger conversation.\n\nAs they got a block away from the theater, Alex stopped walking and looked at her watch.\n\n\"Come with me for a second, I need to finish your tour,\" she said.\n\nShe gently took Quinn's hand and led her down the side street next to the theater. Quinn didn't want Alex to drop her hand, so she stayed quiet and simply followed the blonde.\n\nA block down the side street, Alex turned into an alleyway that was a lot nicer than most alleys you'd expect to see in a city like New York.\n\n\"This is the back of the theater. When you finish each performance, you'll leave backstage through this stage door.\"\n\nShe pointed up ahead at a faded red door that had black paint on it that read, \"Stage Door\".\n\nQuinn's heart raced for so many reasons. The main one was that Alex hadn't let go of her hand. But she was also thinking about her show and walking out of that door each night.\n\nOnce they were at the door, Alex simply looked up at it for a moment before she directed her intense gaze back onto Quinn. Slowly she moved her hands to Quinn's waist and gently pushed her backwards into the wall next to the door. Once they were pressed against each other, Quinn could see the heavy rise and fall of Alex's chest, as if she had just gone for a run.\n\nBut the blonde didn't move. She simply looked down at Quinn's lips very intentionally and then brought her eyes back up. Eyes that Quinn could see were now darkened to a blue only seen deep in the ocean.\n\nThe desire emanating off of Alex while she stood there controlled, waiting for Quinn to make the first move, was one of the sexiest things Quinn had ever seen and she couldn't help but notice this was the second time Alex had her pushed up against some kind of surface.\n\nBut Alex waited for Quinn to make a move. She simply alternated between staring at Quinn's eyes and down to her mouth.\n\n\"Please kiss me,\" Quinn whispered, knowing that simple request would tip Alex into the action she so wanted from her.\n\nAnd it did. Alex let out a quiet growl as she moved her hands quickly from Quinn's hips up into her hair. With deft hands, she easily removed Quinn's hair from its tie and sank her fingers into the lush locks that fell down Quinn's shoulders.\n\nLike their first kiss, Alex devoured Quinn's mouth like she needed it for survival. Quinn could only press into the woman and allow her to explore her mouth, their tongues in a constant tangle.\n\nWhile Alex let Quinn make the initial move, she was in complete control now and if she wasn't pushing Quinn's body up against the wall with her own, Quinn wasn't sure she'd have the strength to stand with her legs as weak as they were.\n\nKissing Alex was like being thoroughly fucked and she couldn't imagine what it will feel like to be taken by this domineering woman in an actual bed.\n\nWhen Alex moved her leg in between Quinn's and pushed up, Quinn could only moan louder and grab onto Alex's waist.\n\nOut of necessity to breathe, Alex pulled Quinn's head back but didn't let go of the back of her hair or move her body as she stared at her. Her chest was rising and falling with deep breaths and her lips looked red and swollen.\n\nIn a much more controlled manner than the initial kiss, Alex slowly moved her lips to the spot under Quinn's earlobe and gave it a gentle bite before the brunette could feel a tongue quickly lap at the same spot. Quinn's body jerked into Alex at the contact, which made Alex chuckle low.\n\nQuinn could feel the blonde's mouth against her ear as she whispered into it. \"I love the way you taste, Quinn.\"\n\nQuinn attempted to control her breathing so she could respond but speaking or thinking was incredibly hard with Alex pressed up against her, a hand still snaked around the back of her neck and the other one seductively playing with the tips of her hair.\n\n\"I'd stop if you don't want me to fuck you right here,\" she finally husked out as she felt Alex's tongue slide down her neck.\n\nAlex let out a low chuckle again but moved her head back so she was again looking into Quinn's eyes.\n\n\"And you think it would be me getting fucked against this wall and not the other way around?\"\n\nInstead of let Quinn answer, Alex leaned in and kissed her again, sucking the brunette's bottom lip between her own.\n\nQuinn let out another involuntary moan as their kissing went from passionate to sensual. When they both heard Alex's phone buzz in her pocket, the blonde pulled away slightly and moved her hands to Quinn's waist.\n\nQuinn knew the woman was probably late to whatever she had going, but Alex didn't seem to mind since she wasn't moving away yet.\n\n\"We don't have enough time for all the things I want to do to you,\" Alex said in a whisper.\n\nShe leaned in again and laid a light, chaste kiss to Quinn's lips. Or, what was probably meant to be chaste, but Quinn's insides were on fire so anything from Alex in that moment would have felt charged.\n\n\"But I promise, that will happen soon,\" she said before she moved off of Quinn to put some much-needed distance in between them.\n\nQuinn leaned fully into the wall behind her, needing some kind of support now that Alex's arms weren't there to do it.\n\n\"Thank you for the pizza,\" Alex said almost shyly as she tucked her hair behind her ear in an adorable gesture Quinn had seen her do before.\n\n\"My pleasure,\" Quinn whispered back.\n\nThey stood there for a second longer than was normal smiling at each other like two lovesick teenagers that got to make out for a few minutes before class.\n\n\"Ok, go run the theater hot shot,\" Quinn said as she put her hands against the wall behind her so she could ensure she kept them to herself.\n\n\"See you Friday at the opening?\" Alex asked her, still not moving.\n\n\"See you Friday,\" Quinn said smiling back at the woman.\n\nThey kept their gazes locked on each other for another second before Alex moved to the door, used a keycard and slipped behind it.\n\nAfter she took a minute to get her heart rate back in check, Quinn pushed off the wall and headed out of the alleyway. She was so flustered that she had to double back when she realized she had gone the completely wrong way.\n\nFriday night couldn't come soon enough.\n\n \n"
    ],
    "authorname": "FemmeyFemmeFemme",
    "tags": [
        "drama",
        "girl on girl",
        "lesbian",
        "lesbian drama",
        "lesbian novella",
        "lgbt",
        "new york",
        "romance",
        "slow burn",
        "theater"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/new-horizons-ch-10-13"
}