{
    "title": "The Pirate King Ch. 11",
    "pages": [
        "Sup, y'all. Long time no post, I know. Things have been kinda funky over here in nakamook world. Benefit for you guys - I decided that if I couldn't be happy, these guys could be, and so this chapter will have the Captain in it. Hope you guys like it, hope it's worth the wait :)\n\nOther than that, enjoy some exposition. I'm still counting this as an islands chapter - even tho there is (finally) a sex scene, although it is short. \n\nSame as always, this is part of an ongoing series. If you find yourself here without reading the other parts firsts, you're going to be really confused. Go catch up; I promise we'll still be here when you get back :)\n\nAlternative title: the stars, the sky, and the sea\n\nI'm going to be moving this to sci-fi/fantasy for the next chapter and all the chapters after that - we're getting into some heavy fantasy shit, and it's just gonna keep in this direction (witches and prophecy and gods, we're gonna bring in god damn Davey Jones himself to chat with. That's right. Try and stop me.) so. If you have feelings about that, let me know. As always, comments and feedback welcome and appreciated. \n\nPeace, love, happiness. Sunshine for your bones and warm baths for your muscles. \n\n***\n\n\"I hate this place,\" I said truthfully.\n\nVal didn't bother with a response. He was lying on his back, like me, waiting. Just like he had been an hour ago when I had said the same thing. Or two hours ago, when I had done the same. Or three hours ago. Or four. \n\n\"When can we leave?\" I finished up the statement. \n\nVal sighed. \"You're whining.\" \n\n\"Am not.\"\n\n\"Are too.\"\n\nI rolled over and took in his still form. The slight breeze picked at the light silk cloth that he wore draped over his body; other than that, there was no movement. If I had not heard his voice, I would have thought him dead. \"Am not.\"\n\nHe groaned and rolled so his face pressed to the floor. \n\nI was bored, and I knew Val was too. Barrow was worse than Hyrun, in every way. It was bigger, a true center of commerce and religion, ships coming and going and people, people, people. Hundreds of people everywhere you stepped. My body was not made for moving through crowds; I was created to move through open water, or through the sky, aided by riggings; I was meant to cross channels and forge my way across stormy seas, to gauge currents and weather patterns and feel the stiff breeze against my skin. \n\nI was not meant to be on land, surrounded by people.\n\nI hated crowds, and I hated the people that made them up. They were nobodies. They were frustrating. They entered my personal space and stepped on my feet.\n\nAt least, here, I was staying by the sea. I stretched out on the floor and enjoyed the way the sea breeze pressed against my skin; to be so close to the water was the only gift this place held. I had insisted that we stay on the shore, and Val had made it happen. It was harder for people to find us this way, which was a mixed blessing if you were Val and a perfect gift if you were me. I was tired of the way people looked at me, land boys falling over themselves to get out of my way, the truly land boys not even knowing to do that. I wanted to be back in a place where the people were bold, and laughed at storms, and opened their mouths to capture salt spray and their arms to vicious gales. I wanted the holes inside my soul to close, the hollowness I felt to rectify itself as I fell into the arms of those that knew me, those than understood me for who I was. I wanted things to be right. I wanted to be home. \n\nBut we needed to wait. This was where Sneg would come. And I needed Sneg. \n\nI sighed.\n\nThere was a knock on the door. There was a long moment where neither Val nor I moved, the crashing of the ocean paces away the only hint of life in our still room. Val was tired, I think, of useless interruptions to the stretching eternity of our existence. And I sure as hell wasn't going to answer the door, only to have some man drop everything in his hands when he saw my frame. \n\nFinally, Val stirred. \"Enter.\" His voice sounded bored, but I heard the edge of annoyance and couldn't help but smile.\n\nThe door cracked open just a bit. I was closer to the opening, and the squeak the man let loose told me that I had come into his line of sight. The smile dropped from my face. If Val was getting tired of useless interruptions, I was getting tired of being recognized, but only on such a superficial level as to cause the kind of fear that comes from a lack of understanding, rather than the fear these men should have held, the fear that should have lived in their bones when they truly knew me, saw me, grasped all the things I was and was not. \n\nMore men reacted to me in this glancing way than I had expected. Perhaps it had something to do with Val's partner on this island, a small black-haired man named Horace. I'd met him before, back when I was alive, and we hadn't gotten along well then. I suppose it should have been no surprise that he hadn't reacted well to seeing me now.\n\n\"Lover,\" he'd said, rushing forward to take Val into his arms. \"Donar wrote me. Is it true?\"\n\n\"Is what -\" Val had started, but Horace's quick skipping eyes had already made their way to my form. It had taken Val an hour to calm him down and convince him that I wasn't a ghost, sent from the gods to exact vengeance upon the living.\n\nI remained silent through the exchange. I didn't think \"Yes, Horace, I am a ghost back to exact vengeance,\" would be helpful words to hear at the time. Even if they were true. \n\nHorace was in charge of all the Barrow's brothels when Val was away, and was nearly as well connected as Val was. News of my return, therefore, traveled quickly, although Val had asked him to keep it quiet. (\"Drey will find out you are back,\" he hissed to me, frustrated and nervous, but I merely shrugged. If Drey did not already know I was back he was far weaker than he had been when I had left.) As a result, men like this one were just as like to squeak in fear as they were to run, or stare wide eyed at my form, or dare not come near me in the first place.\n\nIt was fucking annoying.\n\n\"I hate this place,\" I said to Val again, ignoring the frightened man and his frustrating way of being.\n\nVal pulled his arms over his head and groaned. He had not escaped the rumor mill, rooming with me, constantly seen with me. Being brothers with me. This took it's toll on him, I think, although he would never show it. Mostly, I think he was bored. There was nothing to do here since we couldn't really go out. The bars wouldn't serve us, the gambling dens let us win. The brothels held no interest to me. There was little else to do on an island that catered to pirates and outlaws. \n\n\"What,\" Val directed at the man still refusing to enter the room.\n\n\"A missive for you, sir.\" His voice shook. Could he not see that he was doing nothing but annoying both of us with his fear? I rolled my eyes and looked askance of Val.\n\nVal couldn't see me, because he was still lying face down on the floor. \"Bring it over, then.\"\n\nThe man didn't move.\n\n\"Is he moving?\" Val asked.\n\nI sighed deeply, causing the man to jump. \"No.\"\n\n\"Damnit.\" Val rolled over and sat up, shooting a frustrated glare at the cowering man. It did nothing to calm his fear. \"Bring it over, man.\" \n\nThe man glanced down at me. Oceans were calmly pulsing in me, rushing in and out with my breath, but I don't know that he was the type of man that could tell the difference between a calm sea and one about to kill him.\n\nTo be fair to him, as he was, any sea would kill him without a second thought. He was inconsequential. It wasn't my fault that my form brought the fear of his own mediocrity to light. \n\n\"Brother,\" Val sighed, and I realized the man was trembling. I sighed and stood. \n\n\"I'm going out.\" The man pressed himself up against the rough doorframe as I swept out onto the beach. \n\nVal came to join me some time later. He settled his body against mine, leaning his head against my shoulder, and I felt some of the tension press from my body at the weight of it. We sat there for a moment, watching the waves pull up onto the beach, dragging the sand where it was wanted, creating smooth planes and hidden dips and valleys. Then Val flipped his wrist so his hand was before my chest. \n\n\"Someone's looking for you.\"\n\nI didn't answer, nor did I take the paper he was offering. The ocean held more interest to me than any paper, any person who might think they could find me. I knew Val would relay anything that was important. \n\n\"On Hyrun,\" he continued, like I knew he would. He tapped the paper on my chest and I continued to ignore it. I wasn't worried. Let them look; those that could hold fear for me would never let themselves be seen coming. \n\nVal sighed and pulled the paper back to his body. \"Blonde. Blue eyes. Small kid, young. Used to work in the brothels, but not mine.\" I still didn't react, but I could feel Val shifting to look up at me. \"He also asked after Yarrick.\"\n\n\"What?\" I snatched the paper from Val's hand, sitting up so fast I nearly dumped him into the sand. He grumbled and made a show of adjusting his clothes as I greedily read everything the missive said, which was everything Val had already told me. \n\n\"Friend of yours?\"\n\nNatch, I thought. My thoughts swirled, building towards things I wasn't sure I wanted to understand. It had to be Natch. But why would Natch be looking for me? Worry built in my stomach as I swallowed possibility after possibility. There were too many, and none of them were good, none of them stopped the swirling storm building within my chest. The Captain was hurt; the Captain was in danger; the Captain was dead and it was already too late, there was nothing I could do, how could I have left him, how could I have believed this would be okay...\n\n\"Brother.\" Val snapped his fingers before my eyes, and I breathed in with a start. When had I stopped breathing? \"Come back to me. Do we need to be worried?\"\n\nBut I knew where the Captain was, and the Captain was not on Hyrun. The Captain was not dead; I would have known if he were, certainly, the world would have fallen, I would have ceased, how could I exist in a world where he did not? And so he was still alive, that was truth. And I was quite sure the sea would have told me even if he were simply injured. But when he had fallen in his bathroom, when he had hurt his head or when he had been attacked during the meeting, the sea had not warned me then, I had received no notice of his injuries before coming face to face with them. It was possible, then. My heart raced. The storm swirled. What if he was sick? What if he needed me? \n\nI stood quickly, my feet digging into the sand. I heard Val huff behind me, but paid him no heed. I needed to know where the Captain was. I needed to know where he was now.\n\nI strode to the sea and dropped to my knees.\n\nVal knew better than to interrupt me while I was like this, no matter what I might be doing. I was grateful for that, grateful for that knowledge for it allowed me to concentrate deeply on myself, on my soul, on the ways it was the same as the wet salt that flowed around and within me, the same as every molecule that made up my being and my vibrating lungs exhaled storm gusts as I leaned down and gently pressed my forehead to the waves. \n\nI don't know how long I spent there, in the waves, with the ocean. When I emerged dripping from the water the sun was going down, dappled light catching on the white sands and making them look pink, orange, purple. Val rose from where he had been watching me, worry clear on his face. I ignored him; he might have spoken to me, might have asked for me to explain myself in that moment, but there were more important things. I strode down the beach, feeling the tug the ocean had given me, the quiet instructions I would never be without, ignoring the way the wind slapped at my wet clothes. I would rather be wet with the sea's blessing, cold with the love of the ocean, than not know this. \n\nIt took twenty minutes to reach the dock. I crossed my arms across my chest and stared at the beautiful schooner tied up to the docks. \n\nWhat were they doing here?\n\nVal came up beside me. \"What is it?\" I sighed, not answering him. The Captain's ship was here, but the man himself was not. But that was all I knew; he wasn't here. He wasn't on the sea at all. \n\nThis was the end of my ability. If he was not on the sea, I couldn't find him. \n\nBut I knew someone who could. I turned to my brother.\n\n\"I need your help.\"\n\n***\n\n\"It isn't easy finding someone who doesn't have a name,\" Val said for the fourth time.\n\nI was beyond answering that. Instead I paced the floor, frustration flipping with fear in my stomach every second. Why would he come looking for me? What was wrong? I needed to find him, and needed to find him fast. \n\n\"I don't see why you couldn't just ask -\"\n\nI turned on Val, then, hissing out my frustration. Val knew damn well why I hadn't gone on that ship and asked. It was a waste of time, when Val's men could do it just as well and twice as quick. When I didn't know what the Captain's message to me was. What if there was danger on the ship, and he needed to leave? What if the ship was not safe for him, and me asking after him there put him in more danger? But no, that couldn't be it, because there was Natch, and Finn, and Thron and perhaps Ichor but Natch had been on Hyrun, I didn't know where Ichor was and even then, even if they were all there that that wouldn't be enough, not for the Captain, I needed him to have everyone on his side, needed him to be safe. \n\nWhy had he come looking for me?\n\nThere was a knock on the door, and I ripped it open before the man behind could lift his hand a second time. At the sight of me he nearly turned tail and ran, but I grabbed him by the arm and brought him bodily over the threshold, tossing him towards Val even as I resumed my pacing. \n\nThere was a moment of incoherent babbling, and I paid no attention to it. And how had the Captain found me? It was not common knowledge that we had come from Hyrun to here; if we were seen on Hyrun, that was one thing, but could news have traveled so fast back to Hyrun of my sightings here? Traveled so quickly through these land channels? I didn't think so, not with all I knew of land boys and the ways they thought a quick trip was weeks. I knew that Horace had written to Donar, and of course Donar had known where we were going, but he had better sense than Horace and wouldn't go spilling it all over the damn island, and certainly not to some man who as far as he knew was a stranger.\n\nCertainly not to a pirate. Not when the King was who he was. \n\n\"Brother!\" I jumped at the hand on my forearm. Val was looking up at me with eyes full of concern. \"Ready?\"\n\nHe knew. He had found him. My breath left my lungs and I don't know where it went; it must have dissipated through my skin, or slipped into my blood, because I don't remember breathing and then it was gone, I had no oxygen, and of course I was ready because the Captain was here, the Captain was on the island and Natch had come looking for me. \n\nGods all, why had he come looking for me?\n\nI was out the door before Val, only waiting for him to lead because I did not know where we were going. \n\nI might not have known where we were going, but I recognized where we ended up. I pulled up to a stop, frowning. \"This is yours,\" I told Val unhelpfully, staring at the brothel entrance. The red silks in the windows snapped angrily in the strong winds. I wanted to snap back. \n\nHe nodded and pulled me around the back. \"He's not asking for you anymore.\"\n\nThat barely registered. He was here? Why would he be here? He couldn't know that Val and I were connected, unless someone had seen us together, which I supposed was possible, more than possible, it was even likely. But still, why come here of all places? If he knew enough to know that I was here, and that I was brothers with Val, then he should know where I was staying. \n\nWhat was going on? The storms in my mind whirled; my lungs had not had oxygen since we had left our rooms. \n\nWe went up some steps to a mostly-hidden balcony that overlooked the main floor, where I knew Val or Horace or whoever was running the brothel that night could lurk and make decisions about which patrons could go upstairs and which had to leave. Tonight, the brothel was shockingly empty, the only patron a single man leaning on the bar. And when I saw him.\n\nWhen I saw him.\n\nAh, to exist in the eye of the storm. Danger still whirls around you, every direction the same mix of terror and wind and rain, but in that moment. In that place. There is nothing but peace. There was nothing but him.\n\nI had still half expected it to be Natch, even though I knew, I had known it in my soul that he would be here. I could feel it, the closer we had gotten, but Natch had been the one looking for me, and so why shouldn't it be Natch again? \n\nBut of course it couldn't be Natch. It would always be him.\n\nThere was something dangerous about the lines of his body. Something cold. His tight pants heightened the curve of his ass, out for all to see as he had forgone his black cloak in the Barrow heat. I watched as he lifted a bottle to his lips (damn his lips, bless his lips) the motion opening the dip in his white shirt and baring his chest to the room. Baring his chest to me. \n\nI gripped the handrail tight to keep myself from falling. It was a futile gesture. I had already fallen, would always fall for him. \n\n\"I take it this is your man.\" Val sounded... I don't know what Val sounded like. I wasn't listening to Val. Instead, I watched the Captain tip the bottle back again, feeling something drop through my stomach even as I was so relieved that he was here, that he was safe. \n\n\"Where the fuck is he?\" the Captain shouted, and his voice. It reached me in a way that no voice had reached me in weeks, and I realized that I had been deaf, that I had been living in a world without sound and his voice, the sound of his presence was the first thing I had heard since I had leapt from his ship.\n\nA server came up behind him, and I watched him whirl, his slender blade pointing as more of a promise of possible violence than any form of violence itself. The server backed off, but the Captain didn't relax. \"Show yourself!\" he shouted, his eyes casting about wildly. When they passed over us I held my breath - the moment felt so delicate I was afraid that even my exhale would cause it to break. \"Worm!\" he continued, and I heard Val sigh beside me. \"Fucking show yourself!\" \n\nWorm? I thought. I had another moment where the storm crashed everywhere but with me, and then it was again in my mind, in my chest, in my soul. Worm. That isn't me. Who the here for, who is he calling worm? I wasn't upset that he was calling for someone else; I was upset that the action of doing so seemed to hurt him so much. To see him so close, and then for him to be in such pain? It was torture.\n\nI watched him pull the bottle back to his lips and sucked in a breath, trying to find some oxygen. That might have been a mistake. The situation felt combustible; any oxygen would have allowed the whole thing to go up. But I wasn't thinking about that, I wasn't thinking about anything but him, his voice, his hand holding the knife. His other hand holding the bottle. \n\n\"He's drinking,\" I said, confused, upset, stating the obvious and hoping that it would make it make more sense. Why was he drinking? \n\nHe doesn't like himself when he's drinking, I thought, remembering the way he had existed with me that morning, the words he had said, the ones he hadn't. I couldn't let him get there again. I need to be there for him, I thought. I need to get to him before he does something he regrets. That was what did it; I needed to be there for him, because I knew what path he was moving down and the shadows of his pain, present and future, were doing nothing for my empty lungs. I turned and pushed past Val - why did Val look so upset? No matter, can't think about that now, the Captain was here and the Captain needed me - and all but threw myself down the stairs.",
        "\"Brother!\" I heard Val shout behind me. \"Wait!\"\n\nBut there was nothing on the earth that could keep me from this. \n\nI skidded around the corner at the bottom of the stairs, not caring if I knocked over a candelabra. I could call up a storm to quench the flames, that was nothing, that was inconsequential. But this, the Captain.\n\nHe started at the noise, his head snapping towards mine. Our eyes met.\n\nOh, that moment, those seconds when there was nothing but our gaze. That pause while we both drank the sight of each other in, the feel of the soul just across the room. So close. So far. \n\nThere was, still, a moment of fear. I still didn't understand this, didn't know what he was doing here and that made me nervous for some reason. Made my breath catch on all the worry I'd swallowed what felt like hours ago, days ago. \n\nThe moment stretched. The tension drew out. I thought the room might collapse with the weight of it. \n\nThen the Captain made the smallest of noises, and everything snapped. \n\nI rushed toward him; no, I fell, fell into his gravity, fell towards the impossible completion that had been promised to me ever since I had seen him sitting there, all the things my soul needed but couldn't say, all the things my body wanted but didn't know, that was him, that was us, and I collapsed into that knowledge and his orbit with a joyful sound that belied the pain I finally allowed myself to admit that I had been in, would be in whenever we were apart. Even as I took my first stumbling steps, his barstool clattered to the floor with the velocity with which he launched his body from his seat. \n\nWe met with the force of heavenly bodies crashing together. We met like prophecy. Like fate. And oh, how we were. How could we not be? We were everything, we were nothing, we were the entire universe collapsing in on itself and this, this was what was right with the world and everything else, all of the struggle and pain and normalcy, it had all been leading up to this moment and every moment with him that would come, and so with the backing of destiny and the stars, the sky, and the sea, always the sea, we kissed and my soul was set was right for the first time in weeks. \n\nHis hand was in my hair, pressing my face to his. As if I would go anywhere else. As if I could go anywhere else. And yet I let him guide me, let him feel me move for him because I would always move for him, in a world where I was an immovable force, an immeasurable power he, he was the thing that calmed me, that broke me, that guided me to being whole again. I needed him to guide me. How had I lived without this force in my life? Of course I had been lost without this. Of course I hadn't known what to do, had holes inside my soul. The completeness I felt at the fingers weaving through my locks, his lips pressed to mine, his body heat twining through my body heat was the only thing that existed within my entirety.\n\nHis lips broke from mine and I immediately mourned the loss of contact even as I gasped for breath. We stood there, panting, staring at each other. \n\nHis fingers explored my hair, his eyes my face. His free hand drifted up my chest to my cheek and slipped over the scar the Russian had put there just a week ago. I saw a frown flash over his expressive, worried eyebrows and leaned down to kiss it away. \n\nNot now, I wanted to tell him. Not ever. Never worry for me. \n\nHe seemed to understand. He would always understand. \"Fuck,\" I heard him whisper, and I felt him relax into the press of my lips on his forehead. I smiled at his curse, all the things he could put into that single word. It slipped into my soul and vanquished the last of the storms that had made my body their home. My arms wrapped around his back until my hands locked into each other, locked him against me. I pulled him as close as he could get and felt him sigh. \n\nWe stayed like that, pressed up against each other in the center of the brothel floor. Just holding each other, his hand on my cheek, in my hair, my hands in the small of his back, our breath warming each other's skin. We stood there for eternity. We stood there for not nearly long enough.\n\nThen, suddenly, the Captain reached back and grabbed my hand. Hard. \"We're leaving,\" he commanded, and I nodded as if I had a choice.\n\n\"I have a room,\" I told him as he turned and pulled me through the doorway, out the back and into the same alley I just came up with Val. But the Captain shook his head. \n\n\"You're coming with me. The ship.\"\n\nI frowned. If I got on the ship now, I would never leave. And the Russian was still on Hyrun, and I needed a ship, and I was still waiting on Sneg... \"Captain.\"\n\nHe pulled me faster toward the docks. \n\n\"Sir.\" I stopped moving, causing his smaller body to jerk back towards me. I caught him as he rebounded back and pressed my lips to his, immediately quelling any objections he might have about my decision to change his velocity. \n\nWhen I pulled my lips away, I smiled down at him. There were people on the street, but I paid them no heed. To me, there was no one but the Captain. No one mattered but him.\n\nBesides, these men knew what I would do if they got in my way.\n\n\"My room,\" I told him again. I passed a hand over his chest, feeling his body shudder. \"It's closer.\" I hoped that would be enough. I was not feeling very verbose at the moment. \n\n\"My love.\" The Captain reached up and touched my cheek, and the combination of his voice and his touch sent shivers all through my body. His eyes were intense, filled with the kind of cold that made me want to drop for him, made me want to fall for him, do anything in the world for him. \"I would take you right here if that were an option.\"\n\nI couldn't help but let slip a small moan at his words, and his eyes sparked with the kind of light that might have scared a different man. It merely made me need him more. I had to concentrate hard to hear his next words.\n\n\"But I need to get you out of here. I need to get you away from him.\" His hand was hot against my cheek, fingers asking me to understand.\n\nI didn't. I didn't need to leave. Get away from him? That made no sense, would never make sense. There was no man that could run me from my goals. Or my room. Especially when I could be in that room with the Captain. \n\nI covered his hand with mine, watching his brows grow closer together. \"You trust me,\" I reminded him, and he scowled his understanding and assent and I knew I had him beat. I shifted my face and kissed his palm. \"My room.\" Whatever you're worried about, I told him with my lips, it is safe. You are always safe with me. \n\nHe sighed, his resolve melting with the sensation of my lips exploring the lines of his palm. When my lips moved up his hand, my tongue flicking out to catch the pads of his fingers, he shuddered into acceptance. \n\n\"Fine,\" he told me, trying to sound annoyed, and I grinned at him around the finger now resting between my lips. I kissed the rough tip gently, then wrapped my tongue around his slender finger to pull the rest of it into my mouth.\n\nHe gasped, bending his finger at the knuckle to hook me like a fish. I felt him drag me through space, his hand only leaving my mouth an instant before his lips crashed into mine. \n\nWhen we broke for air again, I had somehow become pressed up against a wall, my wrists caught in his hands and our bodies so close they might as well have been one.\n\nBut they weren't one, and we weren't close enough. At least, not yet. I looked down at him with eyes that must have said everything I needed to, because he pulled me from the wall and began moving me down the street.\n\nIn time, he stopped. I sighed, unhappy to not have his tug at my wrists anymore. He whirled on me. \"I don't know where I'm going.\"\n\nI leaned in close, a smile playing at my lips. \"To the sea.\"\n\nHe shuddered, his eyes flipping closed for just a moment. I watched his understanding flood through his core before his eyes snapped back open, dark and dangerous and the only thing I had ever wanted to land on me, the only thing I could ever imagine touching my skin again, unless it was his hands, unless it was his lips, unless it was his -\n\nThen he was pulling me through the streets again, and I followed him happily. If he noticed the looks the islanders gave him, the wild-eyed man pulling me, me, through their streets, he gave no sign. He was as focused on me as I was on him, and I loved him for it, loved him for every step he took, every turn he made, each step we descended towards the sea. He made it to the beach, then looked about lost, and I laughed and pulled him to me. \"My turn,\" I whispered, and then we were off again, and this time I was in the lead and he was the one being tugged behind, flushed, lost, reliant.\n\nIn no time at all we were at the door of my room and we burst through, two things that together could not be contained by mere wood and metal, and I laughed as we toppled onto the bed because we were together, because he was here, because no matter what had brought him to me he was safe, he was with me and I loved him and nothing, nothing could keep us apart. \n\nMy clothes, for instance, stood no chance. He had my shirt off in all of a second, my moans egging him on as he drug the fabric over my head. He paused as my wrists tangled in the fabric, and I froze, letting him watch the way the cotton captured my hands above my head. \n\n\"Fuck,\" he whispered, and I tugged gently at the temporary bonds, watching his eyes track the movements and go dark, dark like I needed them to be, dark like I remembered them and wanted them and gods, he was everything to me. He kissed my forehead with lips that shook and tightened the fabric, trapping my hands where they lay and I gasped at the sensation, not caring that these were not knots I could untie quickly, that this was fabric that would have to be ripped, wrested from, in the end it didn't matter because the look in his eye when he saw me there was everything that I needed, and besides, I knew I was always safe with him.\n\n\"Stay,\" he commanded in a voice that was for me alone and I did, my hands remaining fast in the bed above me as his hands traced down my arms, my sides, coming to rest on my hips. His fingers left a trail of lightning, and I would not have been surprised if I did not glow in every spot where his touch had landed. I shuddered beneath him. \n\n\"Kiss me,\" I begged him, but he shook his head. I watched him pull away, smiling slightly as he began to strip himself of his own clothes. \"Sir!\" I called after him, but it did no good. \n\n\"Missed you,\" he murmured from his distance, his eyes turning my body to steam. I arched under his gaze, too lost in him then to even beg for the touches that I needed, the kisses that were the only thing that could keep me alive, together. I was rewarded when he finished stripping and began to draw closer once again. I watched him intently, my breath fast and my eyes locked on his erect cock. He caught my gaze and moved a hand down to my view. When he began to lazily stroke the length, I let out a moan that made him laugh in full. \n\n\"Need you,\" I heard him say, but my attention was completely on his hand, on his cock, on the things I wanted him to do to me. I was so preoccupied with his hands motions, with the way he tugged and twisted at the hard flesh I so desperately needed, that I somehow missed the way he moved the rest of his body. When his other hand landed on my own member, hard and aching in my breeches, I jumped. \n\nHis eyes were hooded and dark. \"Gonna make you come,\" he whispered, and those words ripped through my body right to where he held his hand and I moaned, low and uncontrolled. I pressed into his hand, feeling the heat of his flesh, of his desire, of his body so close to mine but not close enough. \n\nHe leaned over his hand and pressed his mouth to my hipbone delicately. His lips felt like fire against my sensitized skin. \"Sir,\" I begged him, not sure what I was begging for.\n\nHe smiled up at me, his fingers hooking in my waistband. \"I know,\" he told my navel. I felt my pants leaving my body, my cock springing free, and cursed at the sensation. \n\n\"Eyes open,\" I heard him command. Gods, when had my eyes closed? I forced them open, forced myself to focus on not just the feel of him, the smell of him, the knowledge that he was here and close to me but also the sight of him and oh, gods, he was floating right over my cock with this look on his face, and I got caught in his eyes, his dark eyes that held so much of everything but right now, right now they held so much of all the things I needed and I named that look love because that's what it was, he loved me and I loved him. I smiled down at him in the moment he gave me to process that look, that one moment right before he dropped his head and took my entire length in his mouth. \n\nI threw my head back, cursing, unable to do anything but curse. My hands were clenched around my shirt and I focused on that for a second, tried to remember not to rip it in the intensity of the things I was feeling. I prayed I had not bucked my hips in surprise and reaction to his movement. \n\nI took a few more breaths like that, my eyes on the ceiling, my hands tight around the fabric of my shirt. The Captain was no longer moving - I knew that he was waiting for my eyes. I gathered myself and looked down to him.\n\nAs always, as he always would, the sight of him took my breath away.\n\nHe rested between my legs, his lips pressed on the head of my cock, hand wrapped around my girth. He caught my gaze and smiled, slowly beginning to stroke my length. I think I cursed again, watching him, because his smile grew just before he took me again in his mouth.\n\nI could not tell you what he did to me in those moment. I lost myself in him, lost myself in the way he would look up at me through his lashes, through errant strands of hair, in the way his hand was on my hips, my cock, my balls, the way his tongue -\n\nOh, gods, his tongue.\n\n\"Sir,\" I gasped, knowing I was close. He lifted his mouth long enough to give me a ragged smile. \n\n\"Come for me.\" And even in his words raggedness, the command could not be ignored, and I moaned as my body reacted to his desire for me and I came in his mouth.\n\nHe swallowed my cum, took everything I had to give him and then licked me clean. Small noises dropped from my lips as his tongue continued its quest over my sensitive member. Then his lips moved to my hips, then my abs, my chest, and then finally found a home in my neck. He lay against me, panting, feeling my heaving chest move beneath him. \n\nI took a chance and brought my still-bound hands down around his shoulders. He nestled into the contact, drawing a smile from my lips as I buried them into the top of his head. I gave myself a moment to be sated, happy. Blissful. Then I nuzzled at his head.\n\n\"Your turn.\"\n\n\"Ah.\" He shifted in my arms. \"I actually.\" He sounded almost sheepish, a state of being I did not associate with my Captain. I looked down his body and found his cock deflated, his stomach coated in his cum.\n\nWhen I looked back up to him, my smile barely contained, my eyebrow raised, he actually blushed. \n\n\"You're hot when you come,\" he muttered, and I laughed and kissed his forehead. \"And it's been a while, I suppose, and -\"\n\nI cut off whatever else he had planned to say with a kiss.\n\nWe lay like that, entwined and comfortable, the sound of the ocean's pulse just outside our door keeping us company. It was hard to look anywhere but his eyes, hard to exist in anything but his gaze and all the things he had brought with him. All the love he carried. The soft promises I found in the warmth of his breath on my skin, the tickle of his hair against my neck. The way our breathing synched to the rush and pull of the waves. All of these things, him, it almost made up for being on land. \n\n\"Fuck,\" he whispered, and the word spilled into the moment effortlessly. \"Do you know how hard it was to exist without you?\" \n\nI leaned forward and pressed a kiss to his nose, feeling him sigh, knowing the things he felt were the same as me. Of course I knew. I had nearly destroyed a port with the intensity of how much I knew.\n\nMy fingers were tracing gentle circles on his shoulder. He turned to watch them and noticed my shirt still wrapped around my wrist. \n\n\"You should have reminded me,\" he scolded gently. He shifted his body, putting his back lightly to my chest, leaning up on his elbows to begin to free my hands. I lay still, not incredibly interested in having my hands free. I was content with the way his fingers felt against my skin. \"I would have done this ages ago.\" There was a moment where he slowed; his face was turned away, and so I did not know his expression. \"I know how it bothers you.\" \n\nIn the quickest of movements I pulled my hands from his and pressed my makeshift bindings to his chest in a tight hug. He gasped in surprise and toppled into my embrace. \n\n\"Not for you,\" I whispered against his neck, feeling how that made him shudder. \"I trust you. Okay?\" \n\nHe nodded, and I released the hold I had against him. He went back to his work. I, for my part, went back to nuzzling at his ear. \n\n\"You're distracting me,\" he complained. \n\nI bit him, and he gasped. \n\nHe eventually got my shirt untied, but it probably took longer than it should have. \n\n\"Fuck,\" he sighed. I smiled behind him, where he couldn't see. I loved all the things he could express with that single word. \"We ripped it.\"\n\n\"Your fault,\" I grumbled, and he swatted at my arms causing me to laugh. I pulled him back into my arms tightly and pressed my face into his neck. \"Fine. Our fault.\"\n\n\"Damn right,\" I heard him mutter, and I squeezed him to me in appreciation of. Of everything. Of him. Of his being here. Of his being him. Of love, and life, and togetherness.\n\nHe held the shirt up where I could see it. \"I need to get you some better bindings.\"\n\n\"I like the ones we have,\" I told him truthfully. \n\n\"Me too,\" he admitted. \"But I can't have you continually ruining shirts around me. And irons are out, so -\"\n\n\"Irons,\" I interrupted him. \"Are good.\"\n\nHe twisted to look at me, a strange expression on his face. \n\n\"I told you.\" I landed a small kiss on his nose, then on his cheek. One on each of his brows. \"I trust you.\"\n\n\"Irons,\" he repeated, his voice slightly strained. \n\nI laughed at him and returned my satisfied head to his neck.\n\n\"I am sorry about the shirt.\" \n\nI pressed a kiss to his skin. \"Forget the shirt,\" I told him. \"Val will find me a new one.\"\n\n\"Val?\" I could hear the frown in his voice, and I smiled. \n\n\"My brother.\" I raised a lazy arm towards the side of the room strewn with Val's clothing.\n\nThe Captain moved to sit up, and I let him, feeling him pull from my grasp. I watched him take in the sight of the small silk clothes piled in every direction. \"You are sharing this room with another man,\" he finally stated, his voice flat.\n\n\"Yes.\" Amusement kept my voice light. Was he jealous? \"My brother.\" I reached up to pull him back to me, but he swatted my hands away.\n\n\"No.\" He frowned at the clothes. \"Aye. I mean.\" He looked back at me, those eyebrows drawn together in a frown. \"You always do this to me.\"\n\n\"Do what?\" I was still happy, hazy. He moved too quickly through emotions for me; why not just be happy to be? \n\n\"Make me an idiot. Make me.\" He passed a hand through his hair. \"If it was just you, maybe that would be okay. But now.\" His frown seemed to deepen. \"Did you say your brother?\"\n\nI reached up to him again, and this time he let my hand rest on his arm. \"You're not making sense.\" \n\nHe let out a quick sigh, his breath moving fast and hard. \"I'm afraid we've just put your brother in danger.\"\n\n\"Val?\" I snorted. I didn't think Val could be in danger if he tried. \n\n\"Love, I'm serious.\" \n\n\"So am I.\" I pulled at his arm, but he stayed sitting where he was. ",
        "\"You make me an idiot,\" he repeated.\n\nI shrugged, unsure what he meant. \n\n\"A complacent, foolish, unsafe idiot.\"\n\nI didn't like what I was hearing him say. \"You're always safe with me,\" I reminded him, feeling his arm give to my incessant entreaties. I smiled up at him, and he began to smile back.\n\nSuddenly, that smile turned into a scowl. \"See!\" He threw his hands up, dislodging my hand and causing me to raise my brow. \"See,\" he repeated, a little quieter, much less emphatic, \"you say shit like that, and I don't have any choice but to believe you because you're just so. So.\"\n\n\"Love.\" I reached up, and this time he let me pull him towards my body. I held his face in my hands and kissed the lines between his eyebrows. \"What it is that has you so afraid?\"\n\nHis scowl deepened. \n\n\"Talk to me,\" I murmured.\n\nI felt him sigh, muscles that had bunched in worry slowly melting in my arms. \"Fuck,\" he whispered. I gave him another moment, running my fingers up and down his back. \n\nThen; \"Have you heard of a man they call the Worm?\"\n\nHe said it so hesitantly, so quietly, that my fingers paused, as if I needed to still my body to better listen. This was something dangerous to him, something careful, and I wasn't sure in what ways yet but I knew that I should handle it with care. \n\n\"I haven't,\" I told him, which was the truth. It was also the truth that I didn't believe that any man could harm me, that any being could cause me even the slightest semblance of danger. Or rather, that only three could, and I knew where all of them were. One, on a island far in the north. One, on his grand ship also in the north. And one probably still back at the brothel where I had left him, frustrated and worried, when I had run to be with the Captain. And none of them had the bad sense to be called the Worm.\n\n\"He's. I was told you were spotted with him. And.\" I felt him draw in a breath against my chest. My fingers were light on his back, drawing gentle designs against his skin. \"He is an evil man, my love.\"\n\nI couldn't help myself. \"I have no fear of evil men.\" Even as the words left my mouth, I winced. His fear was something I shouldn't minimize.\n\nBut he was simply shaking his head. \"I know this. But he is not like other men. The things he does, the power he holds.\" He looked up at me for the first time in the conversation, and I blinked at all the things he held in his eyes. There was more to this than just hearsay. He was seeing things, his eyes trapping sights long ago encountered and I watched him struggle with it, watched him try so hard not to pour out onto me like grease, like hot tar, sticky and impossible to escape and he struggled in it, drowned in it, and my chest was tight just watching him and I don't know how he breathed. \n\n\"You can't imagine the things he has done,\" he told me, and I hated that his eyes told me that he could. \n\nI pulled him close to me, letting him feel my arms wrapping around him. I had him; he was here with me. It was me, and only me. I wanted to tell him that I would never let this man near him, that I would never suffer the presence of this man, that all it would take was his command and I would hunt him down and strike him from this earth but I didn't have the time because Val decided to chose that moment to show up.\n\n\"So,\" he said. \"Are you going to introduce us?\"\n\nI felt the Captain tense in my arms. He was pressed up against me, his face to the door, and it hurt that I knew he would see this stranger, that I couldn't keep him protected in this moment of vulnerability. Without looking back to Val I shifted my body to act as a shield, covering as much of the Captain's form as I could, trying to give him a space to be safe. \n\n\"Fuck off,\" I told Val, amused by neither his presence nor his timing.\n\n\"No.\" I heard him moving into the room. \"I was worried about you.\"\n\nThat was a lie, and we both knew it. \"You should have knocked.\"\n\n\"You broke the door,\" Val responded drily. \n\nI winced into the Captain's neck.\n\n\"Love,\" the Captain whispered, and I pushed a hand into his hair. He sounded worried, stressed. I apologized internally for my infernal brother. \"We need to go.\"\n\nI shook my head. \"We don't need to go anywhere. Val was just going.\" I said the last part loud enough for Val to hear.\n\nVal snorted. \"Val isn't going anywhere until he gets some answers.\"\n\n\"Val,\" I said dangerously, feeling the way the Captain was so tense in my arms. Something was wrong here. I didn't like it, didn't like the way his breathing was quick and shallow, like he was on the cusp of going for his knife.\n\n\"Don't try,\" I said to both the Captain to Val. I lifted my head and watched my brightly adorned brother settle on a chair across the room. \"Just go.\"\n\n\"You can't force me -\"\n\nThe Captain lunged up and went for his knife, still attached to the breeches off the side of his bed. I grabbed him before he got there, capturing his wrists and bringing his body tight against mine, but our weights carried us off the edge of the bed anyway and we slid to the floor together, a tangle of skin and stress and breath. I whispered apologies and assurances into my love's ear as gravity took hold of us, my concern making my heart beat fast, my stomach sinking past the cold wood of the floor. Why was he reacting like this?\n\nI remembered, suddenly, the bottle in his hand back at the brothel. Was he still drunk?\n\nHe was very still against me, but I didn't let him go. I wasn't sure what he would do, and we were now closer to his blade. \"Be calm,\" I whispered to him. \"He'll be gone soon, I'm here -\"\n\n\"Run,\" he interrupted me.\n\nI frowned. \"What?\"\n\n\"Run.\" He looked up at me, eyes frantic. \"I'll hold him off, I can handle it again, I can't. If he takes you, please.\" He looked like he might cry, and I felt something like panic well up within me. \"I can't lose you to him, I couldn't live knowing he had you.\"\n\n\"Who? Val?\" I looked up to find Val staring at him, a darker cousin of understanding pulling heavy at his face. I decided I did not like looking at Val and looked back at the Captain. \n\nHis expression wasn't much better. \n\n\"Please,\" he whispered, and my stomach churned. He was falling apart before me, he was in so much pain and I didn't know how to make it go away. I wanted to do what he asked of me - gods, when was the last time he had asked me to do anything? He commanded, he was a force, why would he be sitting here, broken in my arms, begging me?\n\nBegging me to run from my brother.\n\nI turned on Val. \"What is this?\"\n\nVal turned away, a twist on his lips that I hadn't wanted to see. He didn't respond. \n\n\"Val,\" I snapped. \"The fuck is he talking about?\"\n\n\"It would seem,\" Val said, his voice that careful tone that he took when he was holding back the things that were real, \"that I have a reputation.\" \n\n\"A reputation?\" In my arms, the Captain shook. Val didn't elaborate. I was angry, I was confused, I was hurt; by my brother, by all the gaps that had suddenly appeared in my life, by all the ways that things always seemed to switch to different when I needed them to stay at same. \"You've always had a reputation, Val. You've never had one like this.\"\n\nVal's business depended on his reputation. It depended on the trust that he built up among the working men and women, the promises they knew he would keep. He needed them to know that when he said 'safe working conditions', that was what he meant. They believed it. I believed it. When I had died, it was what he was known for. Safe working conditions in the brothels he ran, and buying out debts for those who didn't want to work for his competitors. If you needed to get out, you went to Val. Val was safety; Val was a refuge. \n\nSo what the hell was this?\n\n\"Things have changed,\" he said softly.\n\nThey certainly fucking had. I waited for his explanation. \n\nNone came. \n\nI sighed and looked down to the Captain. He hadn't moved in some time. \"Love,\" I addressed him, and I felt him stir. \"If I let you go, will you promise not to attack him?\"\n\n\"No.\" His answer was immediate and without emotion, although he still shook. Val shifted and turned his head further away. \n\n\"Please,\" I asked him softly. \"He won't hurt you.\"\n\n\"Hurt me?\" The Captain twisted in my arms to look up at me. \"I'm not fucking scared of him hurting me. I'm scared of. Fuck, do you even know who this is?\"\n\nI looked over at Val. \"I thought I did,\" I said softly. Val crossed his arms and didn't look at me. \n\n\"He's. He buys and sells men, sailor.\" The Captain was animated, his eyes frantic and panicked. \"He forces them to pleasure him, to pleasure others, to. And they don't have a choice, and the things he does. I've.\" He took a deep breath, his eyes flicking everywhere, never landing anywhere long. \"I know people he's taken, okay? He breaks people. He kills people, kills your soul and owns you, you'll never be free of him again, you'll never -\"\n\nA sudden noise drew my attention back to Val. I watched him, stunned, as he tore himself from his seat and pushed past us towards the door.\n\nThe Captain hissed a curse in his direction, but Val didn't pause in his outward trajectory.\n\nAs soon as he was gone, the man in my arms all but collapsed. Then, in an instant, he was pulling for release again.\n\n\"We need to go, we need to go now.\"\n\nBut I was not to be moved, at least not yet. \"No.\"\n\n\"Are you fucking listening to me? We need to get away from him, before he comes -\"\n\n\"That isn't Val.\"\n\n\"What?\" \n\nI twisted his body so that he was sitting facing me. \"Those things you said. It isn't Val.\"\n\nHis face clouded. \"It happened, it fucking happened exactly like that -\"\n\nI cut him off gently with a light squeeze on his wrists. \"I'm not saying it didn't happen. I believe you, and trust you.\" I searched his face until I believed that he knew that what I said was true. \"But Val would never own another human being.\" \n\nHe frowned up at me, but I knew this to be true. Val was against all forms of ownership, so radically we often came to odds. \"Love has to be free to be truly given,\" he used to say. It was one of the reasons his relationships were always open. I would respond that a monogamous relationship could be free, that two people deciding not to see others is not a form of ownership, but he would wave his hand and call me 'fodgy' and 'afraid of the commitment of true freedom'.\n\nAnd so it made no sense that Val would own people. Val was not a good person, by any stretch of the imagination. Val had done unspeakable things to men, but all of those men had been fighters, and some of them had even deserved it. And he had wanted to leave that behind; it was one the reasons he had left the sea. \n\nNo, this did not add up. \n\n\"I'm going to let you go,\" I told the Captain. \"Because I have to go find Val and talk to him. But I'd appreciate it if you didn't try and kill him while I did that.\" \n\nHe thought about that for a moment, then nodded. I kissed his head in thanks and released his wrists.\n\n\"You know what he's done,\" he told me, arms crossed. \"You still want to talk to him?\"\n\nI nodded. I needed to know the truth. I met his eyes for a moment. \"I trust him.\"\n\nThat seemed to take him by surprise. He was still for a long moment, searching my face for something, I'm not sure what. In the end he uncrossed his arms and nodded. \n\n\"How will you find him?\" he asked me as I moved through the room, gathering clothes and trying to not be distracted by the naked man standing beside me. \n\n\"He is with the sea.\" I had forgotten about the ripped shirt - I spared a glance at Val's pile of clothing and decided it was better to be shirtless.\n\n\"How do you know?\" He frowned at me as I moved towards the door. \"You need a shirt.\"\n\nI waved him away. \"Val's won't fit me.\"\n\nHe looked at the pile in the corner that I had waved at, then at the door that Val had just run from, his eyes stopping for a moment on the chair in the corner. \"Wait.\" \n\nI followed his gaze to the door, remembering Val's glistening face as he'd made his exit. The expression he'd tried to hide from me. The way he'd held his shoulders as he'd run. I knew that run, knew the way Val gathered himself when he was trying not to fall apart. And men of the sea mustn't cry on land. \"He is at the sea,\" I repeated, knowing the words to be true, feeling it deep within my soul. \n\nThe Captain looked at me, his dark eyes hard, brows trying their best to become one above them. \"The Worm is your brother?\" \n\nI kissed him quickly. \"Stay here. I'll be right back.\"\n\nHe pulled away, not to get away from me so much as just to be in motion, to free his mouth to speak. \"What the fuck?\"\n\nI set off to find Val.\n\n****\n\nI had only been walking along the beach for a few minutes when I found my brother.\n\nI watched him for a moment. His silk clothes caught the gentle waves where he stood waist deep in the salty water, his braid falling forward as he leaned over, hands scooping up the water to splash at his face, the tip of his hair dipping in and out of the sea as the swell moved up and down.\n\nHe looked at home.\n\nWhen he turned around and began to wade back to shore, I caught his eye. Immediately he turned away, his scowl returning, but he made no effort to avoid me. \n\n\"Have you come to disown me?\" he asked caustically, dropping to sit on the sand at the water's edge.\n\n\"No.\" I joined him, letting the occasional wave wet my feet. This was my favorite part of land, the border parts. The sea was the strongest here.\n\n\"Then you will lose your lover.\" Val stated it plainly, as if it was fact. The words dropped like stones from his lips.\n\nI watched another wave wash over our feet. I had no use for stones. \"No.\" \n\nVal put his head down on his knees. His braid slithered past his shoulder, the tip of it just grazing the sand. When he spoke again, he sounded more like I wanted him to; like ocean breezes, rough, but recognizable. I knew how to use the currents of his voice to guide me. \"He hates me.\"\n\nI didn't have anything to say to that. He did; I just wasn't sure why. \n\n\"Val,\" I finally ventured after the silence stretched long. \"What changed?\"\n\nA sigh sounded beside me, heavy and long. At it's end, I was surprised that Val hadn't deflated. \"Don't hate me,\" he started.\n\n\"I won't.\"\n\nHe looked up at me. \"Don't hate yourself, either.\"\n\nI frowned at him. There was a lot of talk of hate passing across my brother's lips, and I didn't understand why any of it was there.\n\nHe searched my face for a moment before continuing. \"You left, brother. My protections, all the threats I could give. They were gone.\"\n\n\"You've always been a threat.\"\n\n\"I've never wanted to be!\" He pressed a hand to his face and I left him, let him breathe in the salt air until it pressed all the things he didn't want from his lungs. All this talk of hate, I thought, and he still won't talk about how he feels about himself. How he used to be. \n\nHow he still saw himself, deep inside his silk-shrouded soul. \n\nIt hurt, to see him there. It always hurt. I don't think I will ever not ache for him, my brother, running from the things we were made to be. Never finding a way to exist in the shape we were molded to, trying so hard to forge his own path.\n\nHe could be more than he was. He knew it, too. He had been. He had been infinite. But he saw the way we were pointed at our own horizons, understood the intersections of infinity and never-changing, I think, much better than I ever have. And so he is here, tucked away, all the gravity that should be spread over his never-ending expanses pressed down on those small, bowed shoulders.\n\nI have never met a man so strong as him.\n\n\"I lost my threats,\" he repeated, bringing me back to him, now, in the sand. \"And then Drey.\" His face twisted in the same way it had in our room, when I had asked him what the Captain was talking about. \"Drey has never liked my work.\"\n\nThat was an understatement. Dreyfus had preferences that were better serviced by men who could not say no. Val took away that option, systematically, intentionally, by giving sex workers a choice. Work safely, work because you want to, or don't work at all. Val would pay the debts of those who had thought that choices were things for those with better luck or, in many cases, parents. Drey, then, was left with less and less places to turn to for sex, and he hadn't been happy.\n\n\"I thought we'd taken care of that.\" There were people who specialized in taking care of the needs of men like Dreyfus. Consensually. He'd seemed satisfied enough, even if the workers he could pick from were few and far between.\n\n\"You had. I think he found that option a bit.\" Val looked disgusted. \"Expensive.\" He took a moment to take a breath; it hissed through his clenched jaw. \"Given the options that cropped up after you left.\"\n\n\"Which were?\"\n\nVal didn't answer. \n\n\"Are there more brothels operating?\"\n\nVal made a face. \"You could say that.\"\n\nI frowned. Brothels that weren't brothels... \"Has slavery come back to the isles?\"\n\nHe wouldn't look at me.\n\n\"Val.\" I was upset; this had been one of the things I had worked so hard to eradicate. \"Why didn't you tell me this?\"\n\n\"It isn't slavery, per say.\" His fingers dug into the sand at his sides; his eyes were on the sea. We were facing north. We both knew it; we would never not know it. I wondered if he was looking for white sails to come over the horizon, carrying Dreyfus, carrying our home. Our childhood. \"But it might as well be.\"\n\nI pulled the seas around in my chest for a bit. I was already going to kill him; this was just another thing. Another reason to make him suffer, to watch the light dim from his eyes as he realized who had come for him, what he had done. To throw him into the sea with no gold, no silver, only a single copper penny so that he would walk his way to Davey Jones just like the rest of the mortals did, go through all the trials, burn himself through the fire -\n\nThree and a half years, a small voice in me interrupted. None of this would have happened if you had not been gone for three and a half years. You can shorten it with your brother - for these people, be truthful. \n\nSix months in cells, on the sea in transit, nameless and lost. Three years of hell in the mines, on land, away from this. I had not thought it would be so.\n\nDifferent, I thought sourly. I knew it would be different, I knew things would have changed, but I hadn't expected this.\n\nGods, why had the sea not called me back earlier? How many had suffered while I had been left, alone, in that place?\n\nA wave lapped at my feet and I immediately felt chagrined. It was not the seas fault. The sea had not killed me. Salt water may have stripped me of my name, my past, but it had given me another chance; it was my lack of vision that had tied me to that board and sent me beneath the hull. It was another's hands who had tied the knots. \n\nHands that, apparently, were running my islands into ruin. \n\nI shook myself from my reverie and looked over at the brother I had with me. The one that had, so wisely, asked me not to hate myself before he had begun to even speak. I watched him now. If this was hard for me, returning, how hard must it have been for him to have lived it these three years?\n\nHere, alone, with Dreyfus. \n\n\"Drey never tried to...\"\n\nVal snorted. \"What? Kill me?\" He shook his head, then turned his gaze to me. \"Why would he? He'd already killed you.\"\n\nI frowned. That didn't make sense. \"You're the eldest.\"\n\nHe rolled his eyes away. \"Please, just.\" There was another sigh. \"And you know that when I left the sea I was dead to him anyway.\"\n\nThat was true; he'd been quite vocal about it at the time. And yet, here he still was. Alive. I never ceased to be amazed by this man.\n\nThere was something else. \"The Worm?\" I asked carefully.",
        "The look of disgust on his face was all I needed to know, but he continued anyway. \"Drey again. He's called me that since we were kids, you know.\" I frowned; I had never noticed. \"I think he picked that name because worms are sexless, and you know how he feels about how I dress, and act, and.\" He broke off, anger clear on his face. \n\nI didn't know what to say. \n\n\"But he wasn't happy with a nickname, no. He has to go and fuck everything up. He knows what I do, knows how I do it, so you know what he decides he's going to do?\" I shook my head, but Val wasn't looking at me. \"He goes out and pays my rival brothel owners, the ones who are now actively engaging in the shadow slave trade? Real sweet guys. He pays them to buy up men and then tell them that it was me who orchestrated the whole thing. In the beginning I think it was mostly for him, I honestly think it was a game, the way he got off. You remember how he is, he just tagged my name to it as an added bonus but pretty soon it became systematic and then...\" Val's face was tight, drawn together so that nothing he didn't want slipped past. \"It does terrible things for my reputation.\"\n\n\"Why?\" Not why do they do this; people are cruel. It's just the way we were made. But why did Dreyfus go wider? Why make it something more?\n\nVal understood my question. \"Because he doesn't like what I've been doing with the industry.\" He turned away, his eyes out past my form. On the sea. When he spoke again, his voice was deeper. Colder. Held the weight of the kinds of memories simple words should never have to carry. \"And because he's Dreyfus.\"\n\nWhen Val left the sea, it was no secret that it was because he was tired of the violence. That he no longer wanted men to fear him at every step. I had watched him build an empire based on trust, and love, and had loved him for it. Had looked up to him for it. What a way, I had thought, to escape the shadow of our father - become your very own light.\n\nDreyfus, apparently, had been watching as well. \n\nI sighed at that, feeling the weight from Val's words settle over me. \"I'm sorry.\" Sorry for what that man had done to him for years. Sorry for not stopping it when we were younger. Sorry for not seeing it for what it was when we were older. Sorry for not being here, these past three years, to keep it from happening again. \n\n\"I said, don't hate yourself,\" Val intoned drily. I reached out and put my hand over his, felt his squeeze into the sand. I knew this hurt him more than he would ever admit. He knew that it hurt me just as much. \n\nWe sat on the border of the land and sea for some time, Val and I, the brother than left the sea and the one that died for it, feeling the salt water wash over our feet and try and drag us into it's depths. \n\nVal eventually sighed. \"Where's your man?\"\n\n\"Back at the room.\" I frowned, remembering the last moment as I had left. \"I don't think he realized you were my brother until I was leaving.\"\n\nVal started. \"Brother!\"\n\nI turned to him, eyes questioning.\n\n\"Tell me you talked to him about it.\"\n\nI half shrugged. \n\n\"Brother!\" Val hissed.\n\n\"I didn't think it was important.\"\n\n\"Didn't think.\" Val sighed. \"Fuck, you can be so dense.\" He stood, reaching down to indicate that I also should be standing. I frowned up at him. \"We're going back to fix this right now.\"\n\n\"He's fine.\" I took Val's hand anyway. It was good to see him acting with such direction. \n\n\"He is not fine. He thinks I'm this god-awful being, and you just dropped on him that we're family.\"\n\nI shrugged again, as best I could in the movement of my body becoming upright. \"I told him that it wasn't you.\"\n\n\"What?\" We were moving, him leading the way, so he couldn't give me the look I'm sure he wanted to.\n\n\"Who he was talking about. I told him it wasn't you.\"\n\nVal stopped, looking at me incredulously. \"And you think he'd believe that.\"\n\nI blinked. \"Yes.\" \n\n\"I.\" Val threw up his hands, then continued walking. \"You know, I don't know what else I expected.\" \n\nI wasn't sure what he meant, so I just let it go. \n\nAs we approached the room, Val hung back. I never let him fall behind me, matching my pace to his. I wanted to be able to keep an eye on him, make sure he was doing okay. He seemed to be dragging his feet up until the last few feet, where his natural tendency for posturing took over and he pulled himself up, flipped his hair and strode into the room. \n\nI heard a shout of surprise and walked in after him. \n\n\"Val,\" I said, indicating the man now intentionally casual in the chair he had been previously occupying, \"meet the Captain.\" The Captain was standing, tense, his hand on the knife he wore ever-present on those pants I loved oh-so much. I moved over to him and slid my hands around his waist. \"Captain,\" I murmured into his ear. \"Meet Val.\" Val refused to look over at us. \"My brother.\"\n\nI felt the Captain slowly relaxing in my arms. I knew he was more comfortable when he sheathed the blade he held. I kissed behind his ear in appreciation for him trying, and was rewarded with him melting even further into my arms. Only when his body was molded to mine did I try to speak again. \n\n\"Val isn't the Worm.\"\n\nBoth Val and the Captain immediately tensed. \n\n\"That isn't -\" the Captain began, as Val met my eyes with a dark look and muttered, \"Brother.\"\n\nThe Captain shuffled his feet in my arms as he heard Val speak. When he began again, his voice was less sure. \"He says he trusts you.\"\n\nVal looked out the window at the sea.\n\n\"And I. I won't apologize for trying to keep him safe.\" I kissed the back of his head at the hardness I heard in his voice; I knew he would rip apart the world for me, my brother included. I would do the same for him. \"And also, I've seen you. You've been pointed out to me. 'That's the Worm. That's the one who's done this.'\" He shuffled his feet again; I could tell he'd seen the flinch that had passed over my brother's face at the mention of the nickname. \"You know?\"\n\n\"Yes,\" Val responded. His voice was collected. Careful. Filtered. \"I know.\" He stacked himself up and brought his eyes over to the Captain's. \"There is someone who does not like what I do.\"\n\n\"You can say it's the King,\" I interjected from my position wrapped around my love. Again, both the other men stiffened. I ignored it, continuing to speak to Val. \"He has experience with him.\"\n\n\"You know the King?\" Val's eyes had snapped to me while I spoke; now they landed firmly back on the Captain. \"The current Pirate King?\"\n\n\"He sailed with him,\" I told him.\n\n\"And you know this. And you think, that's great! A nameless former associate of the King?\" \n\nI sighed. I thought we had covered this. \"I'm nameless too.\"\n\n\"How do you know I'm nameless?\" the Captain asked, a hint of suspicion in his voice. Then he shifted in my arms to look up at me. \"You're nameless?\"\n\nI smiled down at him and kissed his forehead. \n\nVal ignored us. \"How long did you sail with the King?\"\n\n\"Why didn't you tell me you were nameless?\"\n\n\"I did,\" I told him. Or at least, I thought I had. \"The sea took my name when I died.\"\n\nHis frown deepened. \"You're dead?\"\n\nVal threw up his arms. \n\n\"I thought I told you that as well.\"\n\n\"No,\" he said, turning to look at me fully. \"I knew the men called you Ghost, but.\" His eyes tracked over my face. \"Dead.\"\n\n\"Dead,\" I repeated. I wondered if he would understand.\n\nBut of course he would. I saw a flicker of anger, then resolve. \"Who killed you?\" he asked, and his voice was dark and warm and the kind of sound a knife makes as it comes unsheathed and I shuddered even before his hand landed on my cheek. \n\n\"Does it matter?\" I responded quietly, knowing that it did.\n\nHe waited.\n\n\"The King.\"\n\nHis eyes darkened to a shade of black previously known to only the bottom of the sea, shadows compressed by the weight of the sea or, in his gaze, the gravity of the knowledge he found pressed upon him. I watched him process this, his eyes growing darker by the moment.\n\n\"My love,\" I murmured, but he held up his hand. \n\n\"We'll kill him,\" he stated. Commanded. And the sea in me rose, beating, pounding, and I could only respond with a kiss.\n\n\"How long did you sail with the King.\"\n\nI had forgotten Val was there; so had the Captain, by the way he jumped. I pulled his head into my neck and smiled at Val. \"He arrived after I left, and then he tried to kill him sometime after that.\"\n\nThere was a moment of silence.\n\n\"When did you -\" the Captain said, while Val leaned forward, clutching the arms of his chair and hissed, \"Kill him?\"\n\n\"Well,\" the Captain said a bit huffily in the following awkwardness. \"It didn't work.\"\n\n\"Obviously.\" Val all but threw himself back in the chair. \n\n\"Three and a half years ago,\" I answered the Captain. \"That's when I died.\"\n\n\"Was it really that long,\" I heard Val mutter.\n\nThe Captain frowned. \"That's when the crown changed hands.\"\n\nYes, I thought. Yes it was. \n\nThe Captain pushed away from me and looked up. \"Wait. So you sailed with the last King?\"\n\nVal started. I shrugged. \"I suppose.\"\n\n\"You didn't tell him?\" Val looked livid. His gaze was flicking, hard, between me and the Captain. \"Are you going to tell him?\"\n\n\"It's disrespectful to talk of the dead.\"\n\n\"You're not.\" Val pinched the bridge of his nose between his forefinger and thumb. \"The only thing you are is infuriating.\"\n\n\"How long did you sail with him?\" The Captain's eyes were shining.\n\nI shrugged again. \"For as long as I can remember.\"\n\nHe frowned. \"What does that mean.\"\n\nI looked down at him, eyebrows raised. \"I have never not sailed with the King.\" \n\n\"Or at least a king,\" Val added for me, filling in at least one of the ways that statement was true.\n\n\"You sailed with the King before that?\" \n\n\"Aye,\" I told him, \"but he wasn't much of a King.\"\n\n\"Or a he,\" Val added. \n\n\"And before that?\"\n\nHis question was met with icy silence. Val looked at me, perhaps expected me to field this question; I wanted nothing to do with it. The Captain would understand. He would never expect me to go down paths I had long ago blocked off to satisfy idle curiosity. \n\nHe understood immediately and took my hand in his. I squeezed, and he squeezed back.\n\n\"So when did you. Your little coup, or whatever. When was that?\" Val managed to make it sound like he was asking about a party, not something he himself had violently reacted to just moments ago.\n\n\"Uh.\" The Captain took a moment. \"Two years ago.\"\n\nI frowned. \"Natch told me he came aboard two years ago, after you had fled.\"\n\nI watched as those brows slammed together in thought. \"No. Maybe. I mean, time gets kinda -\" Suddenly his eyes flew wide open, his hand flying to his mouth. \"Oh, shit! Natch! I told him that if I wasn't back in two hours he should burn the city to the ground, starting with your brother's brothel.\"\n\n\"Mother fucker,\" Val muttered, and was out of the room before I knew it. The Captain was close behind, shouting about recognition and terror and a better chance of not dying with him, or something.\n\nI looked down at the hands that had just held his and sighed. Well, I thought. At least I would get to see Natch. \n\nI turned and moved through the broken door after them."
    ],
    "authorname": "nakamook",
    "tags": [
        "gay romance",
        "gay male",
        "gay novel",
        "novel",
        "fantasy",
        "gay fantasy",
        "blow job"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-pirate-king-ch-11"
}