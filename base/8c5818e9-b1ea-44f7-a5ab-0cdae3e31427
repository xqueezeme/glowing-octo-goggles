{
    "title": "Storm Warning!!",
    "pages": [
        "This one is for the Summer Lovin Contest. As always, your votes and comments would be much appreciated. And I would like to thank No1Ukno for his invaluable help with editing this story.\n\nAUBREY\n\nNormally so vital and upbeat, I'd never seen my boss Owen looking so dejected, as one text after another kept showing up on his phone. Everyone decided with how hard it was coming down, especially with the highway being closed due to flooding, that there was no point in coming anymore. They all said they were sorry, but they were turning around and going home.\n\nOwen showed me the last text, shook his head and muttered, \"Can you believe this? The weather forecast said there was only a chance of rain for the whole weekend, and now we've got this storm sitting over us.\"\n\nHe looked so disappointed I wanted to wrap him in my arms and give him a hug. I knew this was the highlight of his summer, having all his staff up at his cottage to show us a good time.\n\nWith a resigned shrug, he looked over at me. \"Guess it'll be just the two of us, Aubrey. And I hope you like steak, because I've got forty T-bones, along with a few dozen chicken breasts and a whole salmon sitting in my fridge.\"\n\n\"Well, I could wrap it all up and freeze it,\" I suggested, hoping that would be one thing off his mind.\n\nHe shook his head, and turned his gaze back out on the lake, heaving a sigh as he watched the rain starting to come down even heavier than before. \"I guess we'll have to, till I can find a way to donate it to a shelter or a foodbank. And you're taking some home, too.\n\n\"But it isn't about the food. I was just really looking forward to kicking back with everyone, especially since we only do this once a year. And today was the only day everyone said they could make it. I even got an extra jet-ski, so there'd be enough to go around. I figured Tim's son Braden would be old enough now to take one out on the lake with his Dad.\"\n\nOwen had to be the best boss ever. Every summer he'd invite his staff up to his cottage on Lake Rosseau to thank us all for being so dedicated.\n\nChristmas was the same. After we'd celebrated with a big office party, just for the staff, he'd have another catered bash at his place in the city on the Sunday before, for all the families. Owen loved to play Santa and hand out specially chosen gifts, just for the fun of seeing the kids' faces light up when they'd tear off the wrapping paper and squeal over whatever he'd picked out for them.\n\nAs I studied his handsome profile, I often think he would have made a great father. But sadly, his first wife died when they'd barely been married a year, and they never had time to start a family.\n\nThen a couple of years ago, he took a chance and married his gold-digging, second wife Stacey -- the bitch that tried to take him for every cent he had when she decided after only two years together that she wanted a divorce.\n\nOf course Owen found out that she had someone on the side the whole time, but it still cost him a small fortune in legal fees to finally see the last of her.\n\nAfter what he'd gone through with Stacey, from what he'd said, he didn't really think he was the type for a long-term commitment. Which I thought was really sad, because he's got so much to offer, and has to have the biggest heart of anyone I know.\n\nThe way he looked at me with those big, long-lashed blue eyes that always had the power to melt me; though he might be about to turn fifty next month, there was no getting around it, he still had it going on.\n\nWith such thick, lush dark hair, and just a hint of gray at the temples, tall and lean, with rock hard abs, he was in better shape than most guys I'd dated half his age.\n\nI know a few of the girls in the office loved to joke about getting him drunk and having their way with him; they all thought he was such a hottie. But I never dared join in, mostly because I'd secretly been crushing on him pretty much from the day I started as his executive assistant. No way did I want him to hear through the grapevine that his right hand lady spent her days fantasizing about seeing him slip out of his suit and tie, so she could trace her tongue over every last muscle in his body. Especially the one that I knew was a really good size, just from the outline in his pants.\n\n\"So, looks like we're stuck here together,\" he said, drawing my attention away from my naughty thoughts, back to what was going on outside. I began to realize just how hard it was starting to come down, even up here in cottage country, as the sky turned almost black with the threat of thunder rumbling off in the distance.\n\n\"Well, at least we won't starve,\" I said, thinking about the ton of food he'd brought, expecting a crowd.\n\nOwen chuckled, finally breaking into a smile. \"No, that we won't. But I don't think I'll ever want to look at another steak once this weekend's over.\"\n\nHoly crap, did he just say weekend? Then it dawned on me; if no one could drive up here, then we'd have no way of getting home. So, it would be just the two of us until the storm passed, and the roads were open again. According to the last thing we'd heard on the radio as we were pulling into the driveway, there were storm warnings now for the entire weekend.\n\nWhat a thought, being stranded for days with my hunky boss at his beautiful cottage, forced to stay inside and find ways to entertain ourselves.\n\nSmirking to myself, I could think of a few, but then I would have to strip him out of his clothes.\n\nOwen had picked me up at my apartment bright and early in the morning, so I could help him get everything ready for when the rest of them arrived. Now I was glad I'd put a change of clothes in my carry-all, along with my bikini, so at least I wouldn't be stuck in my shorts and T-shirt all weekend, having to wear the same pair of panties.\n\nStanding beside him watching the storm really starting to brew, the weatherman had said there was a chance it would miss us up here in the Muskokas. But judging by the look of the lake and how choppy the water was getting and the way the wind was picking up, making even the taller trees begin to sway, I imagined we were going to get hit pretty hard.\n\nI stroked a hand over his back, knowing that he'd planned this for months, and now because of a turn in the weather, it was all for nothing.\n\nThen my eyes flared when I felt his arm slip around my waist. I could hardly believe that he not only had his arm around me, but his fingers were doing a little stroking up and down along my side, getting my girls all tingly, as I did my best to stay put and not shy away.\n\nBeing top heavy, I'd always been self-conscience about my breasts. Though I'm on the slender side, with a tiny waist, and a tight little tooshie -- thanks to my spin classes -- I've also been endowed with some pretty substantial hooters, considering that they're really full 36D's, and don't really fit with the rest of me.\n\nUnfortunately, I've had to deal with them from the time they'd first started to sprout when I was only thirteen, when I'd cringe at the way the boys would eat me up with their eyes, practically drooling. I'd always felt embarrassed as I walked through the hallways at school, especially when they'd call me names like: Walking Wet Dream, or Boobsie Galore, or even laugh and holler, \"Hey, here comes tits!\"\n\nThe girls were no better, especially during P.E., which I hated, having to strip off and have them all point at me and laugh at the size of my boobs.\n\nI'd felt like a freak, since most of the other girls at that age were just starting to show, and some barely needed a bra.\n\nOf course I did everything I could to hide them, so they wouldn't stand out, even binding them to try and get them to look flatter. To this day, I still feel so self-conscience, I try to hide everything under a jacket or sweater. For the last few years I've taken to wearing the tightest compression bra I could find, hoping no one would notice how I big I am up top.\n\nSex of course, is beyond awkward. Usually I try to strip off in the dark, so that the guy I'm with doesn't go into shock and just stare at me wide-eyed, the minute he sees my girls, forgetting why we've even got our clothes off.\n\nConsequently, with my less than stellar love life, the only orgasms I've ever had have all been self-inflicted. Sadly for me, once a guy starts playing with the twins, they kind of forget that most of the action is supposed to be downtown.\n\nThough Owen's fingers were still doing a little stroking, sliding up and down along my waist, I noticed as I looked at him from the corner of my eye, he still looked pretty pensive, and his expression hadn't changed. So I didn't think he was even aware that he had his arm around me.\n\nHaving worked closely with him for a few years now, we'd gotten pretty comfortable with each other. Often working shoulder to shoulder, especially when we'd have to look at each other's computer screens, as we looked over things like contracts or specs on a property he was thinking of developing.\n\nOwen and I work well together, and I like that we have a playful relationship, and tease each other a lot. Though at times things might get a little flirty, it's always just in fun.\n\nExcept for last year at the office Christmas party, when we found ourselves alone in the kitchen, and he gave me a kiss under the mistletoe, that someone had tacked to the ceiling. And it sure wasn't a peck on the cheek.\n\nI can still remember the way he lingered over my lips, with me wrapped in his arms. But after we'd both stepped back, looking at each a little wide-eyed, I still passed it off to the fact that we'd had a few drinks, and decided it didn't really mean anything.\n\nOwen also knows that if he tells me anything in private, it won't go any further, so obviously I kept that little incident between us. And he's the same with me, so we can talk about almost anything, and often do.\n\nGuess now that we're alone, he's just thinking of me as a friend, and he's not trying to start anything.\n\nI know that, because of the long hours we've spent together. Sometimes working late, and often sharing dinner in his office, he's chuckled and told me, \"Aubrey, considering how much time we spend together, I often think of you as my work wife, of course without the benefits.\"\n\nNow I'm rolling my eyes, avoiding his gaze, since I'd always imagined him as so much more than just my work husband -- with benefits galore.\n\n\"Wow, that wind's really starting to pick up, and it looks like we're going to get hammered,\" Owen remarked, bringing me back to where we were.\n\nWe both stared as the wind was starting to take its toll, stirring the tops of the tall, majestic pines that covered the islands, and making the smaller trees really begin to sway, as the water got even choppier as it crashed ashore.\n\nOwen looked over his shoulder then and muttered, \"I think I'd better check outside and make sure everything's tied down.\"\n\nHoping I could help, I ran right behind him as he jogged down the stairs to the French doors that opened onto the lower deck.\n\nI noticed he was grabbing everything that wasn't tied down: chairs, toys, flotation devices, and all the other stuff that he'd put out for the staff to enjoy. I grabbed as much as I could, and held the door open for him so we could stash it all in the sun porch for now.\n\nThough the rain was really starting to come down hard and we were both getting soaked, I knew we had to get everything secured before it all got blown away. I could see some of the lighter stuff was already sitting against the treeline. So of course, I went and fetched that, too.\n\nAs I tossed the last few things inside, I noticed Owen rushing down to the dock to check the ties on his boat, tying them off again, to make sure it was secured. I ran down, too, and watched anxiously as he stepped inside and made sure the cover was closed up tight as the boat rocked to and fro in the choppy water, making him struggle to stay on his feet.\n\nWe were both shivering and soaked to the bone by the time he took my hand and ran us back up to the cottage.\n\nOnce we got inside, both of us laughing at how drowned we looked, Owen grabbed a beach towel and tossed it at me. He used another one to try and dry off a little before we walked across the hardwood floors.\n\nUpstairs, he pointed me at one of the bedrooms. \"That one's got an ensuite, Aubrey, so you can change in there, and grab a shower if you want. And if you need some dry clothes, I probably have something you could wear.\"\n\n\"No, I'm okay, I brought a few things,\" I told him, as he nodded and disappeared into the bedroom across the hallway, to go dry off and change.\n\nOnce I got into the beautifully appointed tongue and groove pine bathroom and peeled out of my wet clothes, I decided I would grab a quick shower, just to freshen up.\n\nI'd just finished and dried off, and was eyeing myself in the mirror, knowing I couldn't do much with my long, stubbornly curly red hair, that I normally worked hard at straightening every morning. Then I took a look in the bag I'd brought and froze when I realized I had packed some extra panties, but forgot to pack another bra. How the hell could I have forgotten that, when it was the first thing I put on every morning?\n\nOh shit. I turned and looked back at the shower. The bra I'd been wearing was soaked, so I'd hung it up on the showerhead to try and let it drip dry. Heaving a sigh, I decided the only thing I could do was put on my little white bikini under my sundress, and pray that Owen didn't notice that my girls had suddenly grown to twice their normal size, now that they weren't being constricted in my uber tight bra.\n\nAfter I'd pulled on my thigh-high sundress, and gave myself a once over in the bathroom mirror, I couldn't believe how perky they looked since I normally had the poor things squished down to within an inch of their lives. Even then, I always dressed in layers, so that no one would notice that something weird was going on with my twins.\n\nOh well, I didn't imagine he'd say anything, considering he was way too classy for that. Could be with any luck, he might not even notice; although I couldn't see how, since they were front and center and pretty hard to miss, especially now that I was in just a thin, yellow cotton sundress with my fully erect nipples proudly making themselves known. They'd practically be waving at him, and saying, 'Hey, check us out!'\n\nDrawing in a steadying breath, I opened the bedroom door about to walk out and face the music, when I heard my phone chime and went back and dug it out of my purse. Everyone I knew texted, so I couldn't imagine who'd be calling. Sitting on the edge of the bed, I rolled my eyes when I saw on the call display that it was Kendra, the biggest gossip in the office.\n\n\"Hey, Kendra,\" I said with a sigh.\n\n\"Hey, Aubrey, I was just wondering if you and Owen managed to make it home okay. When we decided we'd better turn around and come back, it was really touch and go driving down the highway. And poor Doug was white-knuckling it all the way. It was raining so hard we could hardly see where we were going, and we just got back now.\"\n\n\"Well, I'm glad to hear you made it home okay. We're still up here. But as soon as this blows over, we'll be heading back, too.\"\n\nSuddenly, her tone changed and she sounded kind of giddy, nearly purring as she suggested, \"But what if it doesn't, and you have to stay the weekend? Wouldn't that be cool, being stranded with His Hotness?\"\n\nBefore her imagination ran away with her, I decided I'd better stop her in her tracks. \"Kendra, I don't think that'll happen. The storm can't last forever. So I don't imagine we'll find ourselves stranded here for long.\"\n\n\"Well, if I were you, I'd be creaming my panties at the prospect of possibly spending an entire weekend all alone with a guy as hot as Owen. Just imagine what you two could be getting up to. I know if I were in your shoes, we'd have already enjoyed a little road head on that long, lonely drive heading up there. And we could have given a few truckers a thrill, if they looked down and saw what we were up to.\"\n\nUgh. That was a thought I wish I could scrub from my brain, imagining Kendra with her head buried between Owens legs as they drove up the highway.\n\n\"Considering you used to tend bar for a living, if I were you, missy, I'd mix him up something potent. Then once you've got him feeling nice and loose, you can peel him out of his clothes and have a little fun together,\" she suggested, with a snide little snicker.\n\nDropping my head into my hand, I inwardly groaned. Already imagining her telling everyone when we got back to work on Tuesday about Owen and I spending the long weekend alone together, doing who knows what.\n\nI knew the only thing I could do to put her off was lie, so I decided to lay it on pretty thick. \"Kendra, I know a lot of girls in the office love to fantasize about him. But I work with him every day, and to be honest, Owen doesn't do a thing for me. He's nice enough, but he's nothing special. He's just an average guy. And considering he's old enough to be my father, I can't even imagine getting busy with him. I know you're into him, but I'm not.\"\n\nSuddenly, my head snapped up when I thought I heard the other bedroom door opening and closing and decided I'd better get her off the phone before Owen overheard what I was saying. \"Anyway,\" I said in a rush, \"glad to hear you got home safe and sound. And as soon as there's a break in the weather we'll be heading back, too. So, guess I'll see you Tuesday. Thanks for checking in, Kendra.\"\n\n\"Yeah, hope you two have a safe trip. And if you do get stranded up there, don't be afraid to enjoy yourself and get your freak on, girlfriend!\" Rather than respond, I just rolled my eyes and hung up.\n\nI'd just stepped out of the bedroom as Owen was walking out of his, oddly, with his head down, like he was avoiding my gaze for some reason. But then I got my answer about my breasts pretty quick, when he glanced up, and stopped dead in his tracks with his eyes locked hard on my girls. Lifting his gaze, he looked at me, confused.\n\nI imagined he was probably wondering where the hell I'd gotten them, since obviously I hadn't just stumbled across an extra-large pair of breasts in the bedroom, and decided to try them on for size.\n\nI wasn't sure what to say. Because I didn't think -- \"Hey, Owen, these are my girls au naturale, without my honking horse blanket of a bra. So, what do you think?\"-- would be the best explanation.\n\nWhen I noticed he was getting so uncomfortable, that he was looking everywhere but at me, I decided I'd better tell him the truth. \"I uh, didn't bring an extra bra, so I'm just wearing a bikini under my dress and it doesn't offer quite as much support as I what I normally wear.\" Then I bit into my lip and waited for his reaction.\n\nHe dropped his gaze again, still looking mystified, as he got a good look at the size of my breasts for the very first time. Finally, he looked back up at my face, kind of blinking his eyes. \"Guess I'm so used to seeing you dressed in layers, I've never really noticed how... really good you look when you're dressed in something more flattering, like that little dress.\"\n\nOkay, now that that was cleared up, hoping to let it drop, I nodded toward the kitchen and suggested, \"Well, guess I'd better get some lunch going. How does grilled chicken on a bun with a tossed salad sound?\"\n\nHe cleared his throat, still looking a little stunned. \"Uh, sure, sounds good.\"\n\nAs I worked at putting our lunch together, I decided I absolutely loved his kitchen, and could just imagine how wonderful it would be to cook in a space like this all the time. It was so beautiful, with all the bells and whistles I could ever ask for. Much like the rest of his cottage, all done in dark wood with brass fixtures and filled with gorgeous furnishings.",
        "\"Looks like you've really stocked up your liquor cabinet,\" I remarked as I noticed he had just about every kind of liquor I'd ever worked with, back when I used to tend bar to help get me through college.\n\nAs Owen reached into a cupboard behind me for some plates, he shrugged. \"Everyone seemed to enjoy you mixing them up something special last year, so I thought I'd better make sure you had whatever you needed.\"\n\nReady to cook the chicken, I turned on the grill feature on his stove top, and suggested, \"Well, I could still mix something up for us after lunch, if you'd like.\"\n\n\"Sure.\" He nodded. \"Why don't you surprise me.\"\n\nI thought of what Kendra had suggested, and if I was as devious as she was, I'd surprise him alright. All I'd have to do was mix him up something tall and potent, and I'd have him at my mercy.\n\nI wrinkled my nose, because that wasn't me. I could never do anything that underhanded. Although... I couldn't see any harm in us having a little fun with our drinks.\n\nWe sat together at the long table by the window, overlooking the lake. After he thanked me for making lunch, he went quiet -- which was odd, because we always found something to talk about, especially since we shared the same sense of humor. But as I looked at him quietly eating, sitting about as far away as he could possibly get at the far end of the long oak table, I thought he seemed almost sullen. I wondered if he was still annoyed about the weekend being spoiled, or if it might be something else.\n\n\"Everything okay?\" I asked him, as I reached for my wine glass.\n\nHe looked up at me, nodded his head and blandly muttered, \"Yeah, everything's great.\"\n\nNo matter what he said, I knew him well enough that I could tell that something was bothering him. \"It's too bad about the storm,\" I said, nodding at the window, and the way the rain was coming down, pelting so hard against the glass we now could barely see the other islands across the lake.\n\nAll he did was look out the window and shrug. Then he reached for his water glass, finally lifted his gaze and looked me in the eye. \"Don't worry, Aubrey. As soon as this starts to clear off, I'll try and get you home, so you won't be stuck here with me.\"\n\nI could feel my stomach drop as I realized that he must have overheard me on the phone, and obviously he was hurt.\n\nI tried to think back to what I'd said, and wished I could slide under the table and disappear after I'd remembered telling Kendra that I didn't think much of him, when nothing could be further from the truth. Now I didn't know how to tell him that I didn't mean a word of it, though I was pretty sure he wouldn't believe me, or even want to hear it, with how disappointed he looked.\n\nWith lunch over, though I'd barely eaten after I'd realized what had happened, Owen got up and silently cleared the table. I followed behind and asked him if he wanted a coffee or anything.\n\nHe just shook his head and said, \"No.\"\n\nOkay, looked like it was going to be one word answers for the rest of the weekend. Terrific.\n\nAfter he'd loaded the dishwasher, he walked into the great room and took a seat on one of the long, deep brown leather couches facing the rustic, wall-to-wall stone fireplace, and stared straight ahead.\n\nNot even sure if I should, I went and sat down at the far end of the couch, and waited to see if he'd say anything. The silence was deafening as he kept me waiting for what felt like ages, while he kept his gaze trained on the empty fireplace, with me sitting staring at the side of his head.\n\nFinally, I couldn't take it anymore and decided just to spit it out, \"Okay, here's what happened. Someone from the office called and was teasing me about the two of us being stranded up here alone. And rather than have her start a rumor about what we might be getting up to, I just told her...\"\n\n\"I heard,\" he said, cutting me off before I could repeat the awful things I'd said about him.\n\nI shifted a little closer, stroked my hand over his and gave it a squeeze. \"You know I didn't mean what I said. You must know by now that I like you as more than just a boss. And I really do enjoy working with you, and like to think of us as friends. But the way she kept goading me, and teasing me about what we might be doing together, I thought I'd better tell her that the only relationship we have is a working one, so she could forget about spreading any gossip.\"\n\nHe began to nod his head. \"Yeah, I kind of wondered if someone was poking around.\" Finally, he managed a little smile as thankfully, he seemed to have accepted what I said. Then he surprised me when he completely changed the subject and asked, \"Have you ever played crokinole?\"\n\nSlightly confused, I shook my head. \"No, I don't think so. Is it a card game? I used to play a lot of cards with my family as a kid, especially when we'd visit my grandparents.\"\n\n\"No, it's not a card game. But it's kind of fun and easy to play. So, you want to give it a try?\"\n\n\"Sure, I'm game.\" To be honest, I was just glad he was acting more like himself and talking to me again.\n\nThe smoothed-surfaced, octagonal-shaped wooden board was already sitting on a game table on the other side of the great room, next to the wall of windows. I realized, that as we played, we'd have a bird's eye view of what was going on outside. We'd be able to see the boat bobbing in the waves and the trees being battered by the wind as the storm raged on -- thankfully, while we were safe inside.\n\nOwen pulled out a chair for me, and he began to explain how it worked as he took a seat across the table. He handed me twelve light colored wooden disks, and took twelve of the dark ones for himself. And he told me all we had to do was try and flick our little disks with our fingers into the middle to score twenty points, if we could manage to sink it in the hole. But if anyone's disk was already on the board, we had to at least touch it, or try to knock it off, or our disk would go out of play.\n\nI noticed there were scores marked on the board, showing 5, 10, 15 and 20 points, going higher, the closer you got to the middle. Before we started, we had a trial run first, to see if I understood how to play. After we'd both used up our disks, he showed me that they cancelled each other out, till only the player with disks still left on the board got to score any points.\n\nTurned out he was right, it was pretty easy, though there was a trick to shooting it just right. We laughed as we played, with him teasing me about shooting better with my tongue sticking out of the corner of my mouth. It was fun though, even when I flung a few too hard and sent them sailing off the board, right past his head. The way he narrowed his eyes on me, pretending to be angry when he had to dodge them, while obviously trying not to laugh, only made me laugh harder.\n\nThough I quickly realized that Owen was some kind of a crokinole shark, if there was such a thing, because every chance he got he managed to sink a disk into the middle hole, for a quick twenty points. Even if he had to bounce his disk off one of mine first, while avoiding the annoying little pegs that circled the center of the board.\n\nWe played three games to 500 points. Then heaving a sigh, he looked outside at the rain still teeming down and suggested, \"How about a game of backgammon?\"\n\nI smiled to myself as he reached on a low shelf beside the table for the backgammon set, because far from tearing up the sheets together, I realized that his idea of fun was pretty tame.\n\nAfter we'd played a few games, and I won one to his two, when I noticed him looking down at the other games on the shelf, I cleared my throat to get his attention. When he looked up, cocking an eyebrow, I warned him, \"You know if you reach for the Monopoly game, I might actually throw myself off the end of the dock.\"\n\nSmiling across the table at me, his eyes lit up as he laughed. \"So, I take it you've had enough?\"\n\n\"Yeah, that was fun. But maybe we could watch a movie now, or even just kick back and relax for a bit.\"\n\n\"Sounds good to me.\"\n\nWhen I got back in the open kitchen area, I considered making us up a plate of sweets, and maybe a carafe of coffee, since he'd brought loads of amazing looking desserts for everyone, too. But then smirking to myself, as I eyed the array of bottles in the bar, I reconsidered.\n\nWithout asking, I got down some glasses and set them on the bar top and started to mix us up a couple of cocktails. Owen's I made with Crown Royal, that I knew he liked, along with some Amaretto and pineapple juice. And for mine, I used a measure of Amarula cream, a little grenadine and another measure of Sambuca.\n\nWhen I walked over to him and handed him his drink, he looked up at me, confused. \"What's this?\"\n\nTrying to keep a straight face, I shrugged. \"Why don't you try it and see.\"\n\nHe took a sip and nodded, as I had a sip of mine. \"It's pretty good. What's it called?\"\n\nPlayfully waggling my eyebrows, I grinned. \"Yours is a Three Legged Monkey.\"\n\nHe threw back his head and laughed as he looked more carefully at his drink. \"Really?\" Then he nodded at mine. \"And what's yours called?\"\n\nFlashing him another sly little grin, I told him, \"Mine's a Slippery Nipple.\" I held out my glass and swirled it around, and murmured suggestively, \"You want a taste?\"\n\nHis gaze instantly shot to my breasts, and I could feel my nipples pebbling and growing diamond hard, just from the feel of his eyes on them. And I knew he could probably see the effect he was having on me, considering my dress was pretty thin.\n\nHe tried my drink, keeping his eyes steady on mine, as I watched him swallow. Still eyeing me closely, he asked in a ragged voice, \"And how about you? You want a taste of my Three Legged Monkey?\"\n\nLeaning in, sounding a little breathy, I whispered, \"Sure... I'd love to.\"\n\nOwen held his glass to my lips, and keeping my eyes on his, ever so slowly I licked around the rim, knowing damn well I was teasing him, before I finally took a sip. \"Mmm, that is good.\" I slid my tongue around my lips, making sure I got every drop, while trying not to smile at the way his eyes were flaring.\n\nWith his gaze focused hard on my mouth, his voice must have dropped an octave as he gruffly murmured, \"And now I'm wondering what they'd taste like together.\"\n\n\"Guess there's only one way to find out,\" I whispered, as I put my glass down on the coffee table and slid my arm around his neck.\n\n\"You sure?\" he asked me, even as he slipped his arm around my waist and started drawing me against him.\n\n\"Oh yeah, I'm sure.\" This felt like something I'd been dying to do forever, to finally know what it would feel like to share a real live kiss with my boss.\n\nAnd if not now, I didn't know when we'd get another chance.\n\nAs he lifted me onto his lap, the anticipation was killing me, and I just couldn't hold back. Sliding my hands into his hair, I pressed my lips to his. Obviously every bit as eager, Owen let out a sound half-way between a groan and a growl as he clutched me tight against him, sliding his tongue across my lips, till I opened up and touched my tongue to his, and began stroking and gently sucking on the very tip.\n\nHis chest heaving, after we'd enjoyed a hot little session of tongue tangling fun, he pulled back. And I swear I'd never seen his eyes looking so dark and stormy, and could feel he was already rock hard pressed up between my legs. \"You know I actually am old enough to be your father,\" he reminded me, I guess trying to give me an out, in case I wanted to change my mind.\n\nSmiling into his eyes, as I kept playing with the hair at the back of his neck, I whispered against his lips, \"It sure doesn't seem like it.\" I wiggled a little in his lap, to show him what I meant, because holy smokes, was he ever hard.\n\nWhile I was happily getting off on the erotic sensation of sliding my pussy over his erection, Owen groaned deep in his chest, turning his gaze skyward as though looking for strength. I laughed at how flustered he looked as I wrapped my arms around his neck a little tighter, and went back to mating with his mouth.\n\nAs we got deep into a sizzling hot kiss, he began thrusting up against me, and started to lift my dress over my head. I was so blown away by the taste and feel of him that it barely registered that he'd also unsnapped my bikini top and tossed it aside.\n\nThe warmth of his hands cupping my bare breasts, as he filled his hands with the twins, and began gently massaging my heated flesh, had me moaning out loud. Licking into his mouth, shamelessly I began grinding my body down even harder against every long hard inch of him.\n\nMy nipples tingling, my pussy flooding, I could hardly wait for it to happen, sure I'd never felt so overwhelmed. I knew I'd never experienced anything this hot, though we weren't even naked -- yet.\n\nHis voice sounding a little ragged, he whispered breathlessly against my mouth, \"Aubrey... I don't have a condom.\"\n\nI flashed him a naughty grin. \"We're good. I'm clean and protected; no worries.\"\n\nHe blew out a breath, looking relieved as he sat back and got his first look at my girls.\n\nWithout even thinking, the minute I saw where his eyes were, force of habit had me trying to hide them with my hands. He lifted his gaze to meet my eyes and said with a grin, \"Now you're shy?\"\n\nI bit into my lip, not sure what to tell him. \"Um, the thing is, I've always felt kind of top heavy, since I've been this size since I was thirteen. And being skinny as a rake as a kid, with breasts the size of these, they really stood out. So I got in the habit of covering up to try and hide them, so I wouldn't get made fun of at school. And I still feel pretty self-conscience about being so big, considering I've got these 36D's and only a 22 inch waist and 34 inch hips.\"\n\nHe looked up at me, puzzled. \"Is that why you always dress in layers?\"\n\nWhen I nodded, he started to chuckle, and I couldn't believe he was laughing at me. Narrowing my eyes on him, I asked, \"What's so funny?\"\n\n\"And I always thought you were cold, and kept turning up the heat.\"\n\nI laughed then, too. \"And I wondered why it felt like you were always trying to fry my buns off.\"\n\nOwen gave my butt a squeeze, rubbed his nose against mine, and murmured, \"No way, not when it's this cute. And if my opinion matters, I think you're perfectly proportioned, and you've got to have the most beautiful breasts I've ever seen.\"\n\nI could feel the color rising in my cheeks, flushing all the way down to my breasts, hardly able to believe what he was saying, and that he didn't think they were freakishly big, like I did. I took a look down then, finally removed my hands and lifted my gaze to his. \"You're sure they're not too big?\" I'd always thought they looked like melons, which was why I'd always felt awkward about anyone seeing me out of my clothes.\n\nKeeping his eyes on mine, shaking his head, he dropped a tender little kiss to the tip of each one. \"They're absolutely perfect. And I don't think you should be trying to hide them.\"\n\nSeeing as I'd always respected his opinion, I decided maybe it was time to stop obsessing over my girls -- at least around Owen.\n\nGiving my butt another little squeeze, his gaze steady on mine, he suddenly sounded serious, \"But there's no getting around the fact that I am almost twice your age. So are you sure about this, Aubrey? I know there are probably tons of young guys out there who'd kill to be in my shoes right now, that would be much better suited for someone your age. So I want you to be sure before we do anything else that this is really what you want.\"\n\nThough I thought it was sweet that he was making sure I was okay with what we were about to do, when I thought back to the last guy I dated, who was closer to my age, I had to roll my eyes and try not to laugh. \"Actually, I have dated guys my age, and it's never worked out.\"\n\nWhen he eyed me curiously and waited, I thought I'd tell him about my last fun-filled dating experience to prove my point.\n\n\"To be honest, it's been quite a while since I've been on a date, probably because the last one was almost enough to make me want to switch teams.\"\n\nChuckling, he gave me another little squeeze and asked, \"What happened?\"\n\n\"Well, my cousin Sarah's boyfriend Joe works as an office techie. He mentioned to Sarah that the other tech that worked alongside him was single, and for some reason he thought that we might hit it off.\"\n\nAs I thought back, the whole thing was just so crazy; I wondered if he'd even believe me.\n\nFinally, I shrugged and decided I might as well tell him the whole story.\n\n\"The guy called himself Gonzo. I never knew his real name. When he texted me and suggested we meet up at his favorite pizza place, I didn't mind, because neutral territory is always a good idea on a first date.\n\n\"The place was pretty basic, just a couple of tables and chairs and a counter for take-out and deliveries.\n\n\"And good old Gonzo outdid himself, all dressed in black, except for the white skull and crossbones emblazoned across his T-shirt.\"\n\nOwen raised an eyebrow. \"He dressed like that for a first date?\"\n\nI chuckled as I thought back at how surprised I was. \"Yeah. I was in a little black dress and heels, expecting a night out, so I felt pretty awkward and way overdressed. Anyway, he ordered us this really heavy, meat-lovers double cheese pizza and two Cokes, without asking what I'd like. Then with no explanation, he got on his phone and started texting like crazy, and I just sat there and watched his fingers fly over the keys. I noticed he looked pretty agitated as he kept texting. And as soon as the pizza came, he choked back four slices in a row, like he barely had time to eat.\n\n\"I just had one slice, which was more than enough for me. Finally, he lifted his eyes from his phone, looked up at me and told me he lived just around the corner, and that he forgot something, so he had to go home.\n\n\"Before I knew what he was doing, he threw some money on the table, and nodded at the door, so I got up and we walked back to his place. No big surprise, he lived in his parents' basement. Though he had to be in his early thirties, he seemed pretty settled in, like he had no plans to move on.\n\n\"Once we got inside, I couldn't believe my eyes, or the gawdawful stench that met us as we wandered downstairs to his room. The place was an absolute dive, and I felt like I was walking into a nightmare. Empty pizza boxes stacked to the ceiling all around the room, beer and soda cans scattered over nearly every inch of the rug, dirty socks and underwear hanging from every surface. I'd never seen anything like it.\n\n\"Anyway, Gonzo quickly grabbed a seat in front of his TV, and with a nod of his head, he mumbled something about me taking a seat on the couch. I actually had to toe-away pair of dirty underwear from my feet, so I could sit down -- unfortunately right onto one of his dirty T-shirts that were spread across the couch, giving me a nice whiff of stale B.O.\n\n\"Then he turned on his big screen TV, put on some headphones and got into this video game with some friends online. In addition to holding my breath, I had to plug my ears; the game was so loud and really violent, as I watched him blasting away at everything on the screen. For a few minutes I just sat there stunned, wondering why the hell he'd even asked me out, if he had a game night planned. Unless of course, all he ever did was play games, which seemed like a pretty strong possibility with a guy like him.\n\n\"Finally, he turned his head, looked at me and said, 'Oh, sorry, I should have asked. Did you wanna bang?'\"\n\n\"I was so shocked, I'm pretty sure my jaw must have hit the floor. I thought he had to be kidding. 'Did I want to bang?' Was he crazy? But I could tell he was serious, because he didn't even blink, as he waited for me to answer.",
        "Owen was staring at me wide-eyed. \"What did you do when he said that?\"\n\n\"I got up, and told him, 'No, I'm good, thanks. I'll just go and let you get on with your game.'\"\n\nAs I made my way out, carefully tip-toeing around all the crap on the floor, so I wouldn't fall and break my neck, he got right back into blowing everything up on the screen, without even bothering to say goodbye. I walked to the corner and got a cab and went home, amazed that Joe, my cousin's boyfriend, assumed that Gonzo was the kind of silver-tongued devil that he thought I'd be into.\"\n\nAfter hearing about my date from hell, I could tell that Owen was trying hard not to laugh, and by the time I'd finished I was, too. It had to be the worst date in the history of dating, though in hindsight, it was kind of funny. Especially that he'd think I'd be into getting it on with him, although it would probably only be long enough for him to pause his game and then get right back to it, as soon as he got himself off.\n\nHis expression suddenly serious, Owen reached out and ran a finger along my jaw, sending a little shiver skittering down my spine, as he looked into my eyes and told me, \"I don't play video games.\"\n\n\"I know you don't,\" I said, smiling as I leaned in, captured his face in my hands and tenderly touched my lips to his. \"Which is one of the reasons I'm attracted to you; you're a full grown man, and I'm not into boys.\"\n\nAs soon as I said that Owen wrapped me in his arms, and slid me onto my back, and kissed me long and slow.\n\nThen with his eyes on mine, he slowly slid my bikini bottoms down over my legs, and then tenderly kissed his way back up, making me tremble with anticipation as he parted my thighs. As he dropped his gaze, and looked down at my damp little pussy with a little patch of red curls on top, he let out a groan, and whispered, \"Even your little pussy's pretty.\"\n\nSliding onto his belly, he got between my legs and slowly began to lick me up and down, sending my pulse into overdrive as he slid his tongue deeper and deeper into my sex with every flick of his tongue. Until he had me fisting his hair in my hands, and starting to mewl like crazy. Convinced I'd never felt anything so good, I just couldn't stop shivering.\n\n\"God, you're sweet,\" he murmured as he drew circles around my clit with his tongue, making my back arch right off the couch as he gently suckled my clit between his lips, sending shivers all the way to my toes.\n\n\"Ooh, that feels good,\" I told him, since I'd never had a guy go down on me before; this was all new to me. But now I knew why women were so into it, considering it felt like heaven on earth.\n\nPatiently licking and sucking, and gently prodding, he had me nearly going into convulsions till finally he pushed two fingers inside me, seeming to know exactly where to find my g-spot. Soon, he had me seeing stars as he worked me into my first honest-to-goodness orgasm, rocking me right to the soles of my feet, as the most incredible sensation I'd ever felt began to wash over me, like a tsunami of indescribable pleasure.\n\nWhen I could finally focus again, I looked into his eyes, stunned to realize that he had the power to make me feel that good.\n\nOWEN\n\nEven as the voice in my head kept telling me I was crazy, I couldn't find it in me to stop. I'd always been more than a little attracted to my pretty young assistant, but never in my wildest dreams did I ever think of acting on what I was feeling.\n\nBut judging by what was happening between us now, it seemed like we'd both been fighting pretty hard to keep things platonic. Considering that we were stranded here alone together, there didn't seem to be any reason not to give in and just enjoy each other now that we could.\n\nI hadn't been with anyone in so long, I was already sending up silent prayers that I'd be able to get inside her before I lost it. I was hoping to give her something a lot more impressive to remember from our weekend together than her farce of a date with that character Gonzo. And obviously I knew that shooting my load on the couch before I even got between her legs, was not going to do it.\n\nAfter I'd shed my clothes, I smiled at the way her eyes flared when he she got her first look at me naked. Then fisting my cock in my hand, sliding it up and down along her hot, wet slit, as I bent down and kissed the end of her nose, I just loved the way she smiled into my eyes. I could see her bright blue-green eyes positively glimmering with anticipation along with an equally heavy dose of arousal.\n\nAs I teased her clit with my erection, going around it in circles, obviously more than ready for some action, she dug her heels into my ass and murmured breathlessly, \"God, Owen, you're making me crazy.\"\n\n\"Good crazy or bad crazy?\" I asked, stopping for a second to feel her out.\n\nShe smirked, winding her fingers into my hair. \"Oh, definitely the good kind, after making me come that hard, are you kidding?\"\n\nI chuckled, even as I lined myself up and began to nudge my way inside her, rolling my eyes at how incredibly tight and absolutely perfect she felt as she clenched around me, drawing me in.\n\n\"You feel amazing,\" I told her, because it was true. I'd honestly never felt anything like it.\n\nMy eyes locked on hers, watching her mouth fall open as she began to breathlessly pant, I could tell she was as overwhelmed at the feel of us finally getting together, as I was.\n\nSoon we were both groaning out loud as I felt a warning tingle shoot straight down my spine, tightening my balls. Digging my hands into her hips as she threw back her head and cried out my name, I growled so deep it hurt as I let go and filled her with everything I had.\n\nClinging to each other, both fighting to catch our breath, I looked into her eyes, awed by the warmth shining back at me, as she stroked her hand over my cheek, looking utterly contented.\n\nI knew I could live with feeling like this forever, though I couldn't imagine her wanting any more than this with me. She was so young and so pretty, that I knew she'd move on once she finally found someone who'd realize how lucky he was to have found her.\n\nWhen I woke up in the morning with Aubrey curled around me, I kind of hated to get out of bed. It just felt so good to wake up to a gorgeous, naked woman tucked in close beside me, especially when amazingly, that woman was her.\n\nShe blinked a few times as she came awake, I guess sensing that I was watching her. Then she looked up at me and smiled, her eyes a bright a green this morning, letting me know she was happy.\n\nOver the time we'd worked together I realized she had the most intriguing eyes, bright green when she was excited or happy, pure blue when she was aroused, I noticed for the first time last night, and other times a strikingly pretty mix of the two.\n\nGently stroking my hand across her back, I asked, \"How did you sleep?\"\n\nHer face lit up with a satisfied smile. \"Probably the best night's sleep I've ever had, after the work out you gave me.\"\n\nChuckling, I pressed a kiss to her lips and threw back the covers and decided I should get up, or I imagined we'd never get out of bed. Not that I would have minded, but I didn't want her to think that the whole weekend would be nothing but sex.\n\nSince there was a break in the weather and the sun was just barely peeking through the clouds, I thought I'd better go out and take a look around to see if anything was damaged.\n\nAs I walked down the big slab of rock my cottage sat on heading towards the water, I saw a boat approaching and noticed it was my neighbor Jim.\n\nAnxiously watching him approach, with one eye on Jim's outboard cruising toward my dock, I took a quick look back up at the cottage, hoping with everything I had that Aubrey would miraculously come strolling out to act as my decoy.\n\nSitting at the back of the boat, Jim's overbearing sister Sandra was eagerly waving and smiling as they approached. And I knew this was another visit to try and convince me to ask her out.\n\nTall, blonde, reed-thin Sandra was pretty enough, but she just didn't do it for me. Somewhere in her early forties and never married, Jim and his wife Gail assumed that since I was on my own that I'd be interested in finding a new mate.\n\nIt didn't take me long to realize that she was bossy as hell, and a bit of a know it all, who loved to tell everyone what they were doing wrong. Even now I could hear her yelling at her brother to slow down as they neared the dock, though I could see he was barely moving. I sometimes wondered how Jim and Gail put up with her, since she always seemed to be with them. But then again, I chuckled, thinking it might be why they were trying so hard to foist her off on me.\n\nI let out a sigh of relief when I saw Aubrey sauntering her way down to the dock, thankfully in her little white bikini and strappy red sandals, looking like sex on legs.\n\nWorking together at the office, we'd often joked that we could read each other's minds, since more often than not, she'd hand me something before I'd even asked for it. Seems like she'd figured it out today too; and somehow must have sensed that I really needed her to show up now.\n\nSmiling, I pulled her to my side, gave her a squeeze, pressed a kiss to her cheek, and said, \"Hey, baby, we've got company,\" motioning at Jim pulling up at the dock, staring up at us wide-eyed.\n\nThe look on Sandra's face was enough to make me break out laughing. Her mouth hanging open and her eyes as big as moons, she kept blinking as she took in the sight of pretty Aubrey practically glued to my side, looking like an absolute goddess in her tiny bikini. Especially with the way her gorgeous breasts were practically spilling out of her top, making her look, if possible, even sexier.\n\nJim quickly tied off the boat and helped his wife and sister disembark. His eyes gleaming with amusement, he came up to shake my hand, cleared his throat and mentioned that he wasn't sure if I was up this weekend, and he was just checking on my place in case of any damage from the storm.\n\nI had to fight not to laugh at the way he pointedly looked at Aubrey, almost high-fiving me with the delighted look on his face, as I made the introductions. \"Aubrey, this is my neighbor Jim, his wife Gail and Jim's sister Sandra.\" Smiling into Aubrey's eyes, I said, with what I hoped was an unmistakable note of affection, \"And this... is my lady love, Aubrey.\"\n\nI could see the initial look of shock on Aubrey's face as she digested the 'lady love' bit after I'd just called her baby for the first time. But she quickly recovered and reached out to shake Jim's hand, smiling politely, as she said, \"A pleasure to meet you.\"\n\nRunning her hand over my bare chest, correctly assuming that we were putting on a bit of a show for their benefit, though I could see the amused little twinkle in her eye, she managed to ask with a straight face, \"Babes, would you like me to run back up to the cottage and get us some drinks?\"\n\nEyes narrowed, nearly boring a hole into Aubrey's uber sexy young body, her jaw tight enough to snap as she looked her over from top to toe, Sandra muttered haughtily, \"No need, we won't be staying.\"\n\nI gave Aubrey's ass a playfully little pat for good measure, just to be sure they got the message that I wasn't in the market for another woman.\n\nThankfully Jim seemed to pick up on the fact that I was pretty happy with what I had going on with Aubrey. After he shot me a sly little wink, the three of them were soon cruising back out on the lake, waving goodbye, while Aubrey and I were grinning at each other trying not to laugh.\n\nOnce they were gone, I explained. \"They've been trying to set me up with Sandra for years, and now hopefully she won't be interested anymore, if she thinks I'm with you.\"\n\nKnowing they could still see us, with a smile playing on her lips, Aubrey took hold of me by the chin, sank her tongue between my lips and really laid one on me. When she pulled back, the smirk she was wearing had her looking pretty pleased with herself that she'd managed to scare her off.\n\nAfter a kiss like that, considering how hard she'd got me, all I could think of was taking her back to bed. Though I thought I'd better at least ask if she wanted to do anything else now that the rain had stopped.\n\n\"You want to go for a swim?\" I asked her nodding my head at the water. When all she did was shake her head, I asked, \"Are you hungry or thirsty?\" and shook her head again. Sliding my hands into the back of her bikini bottoms, drawing her against me, to let her feel what she did to me, her lips curved into a smile and she gave me a playful waggle of her eyebrows as I cupped her smooth little butt cheeks in my hands and squeezed. Both of us quietly began to moan as I got off on the feel of massaging her warm, soft flesh, while dropping little kisses across her lips, as I suggested, \"Then how about we head back to bed?\"\n\nShe made me laugh, when she grinned and said, \"Now you're talking.\"\n\nI was so fucking hard by the time we were standing by my bed as I sank my hands into her hair, enjoying a deep, hungry kiss, that all I could think of was getting her on her back, so I could slide my way inside her and fuck her silly. I don't think I'd ever been this hot for a woman in my entire life.\n\nBut it seemed that my sweet little playmate, had plans of her own. Wide-eyed, I looked down as she dropped to her knees, and started to tug down my board shorts, till my fully erect cock was practically slapping her in the face.\n\n\"You know what I've never done before?\" she quietly asked me, as she looked up into my eyes, while I stared down at her, trying to remember how to draw air in and out of my lungs, seeing her face so close to my cock. When I shook my head, she murmured, \"This,\" and took hold of me at the base and began to tease me with the heat of her warm, soft tongue, curling it all around my pulsing head, till I could feel goosebumps running up my spine with my heart beginning to pound like crazy.\n\n\"Aubrey, you don't have to do that,\" I told her, because she really didn't. What we'd been enjoying together was more than enough for me. Although what she was doing with her talented tongue, just felt so insanely good, the less rational part of my brain was telling me shut the hell up and let her enjoy her first foray into oral, if that's what she wanted.\n\nAnd why in hell would I want to deny her, if she wanted to explore some of the kinkier stuff we could be enjoying together?\n\nThe way she sank me deep into her mouth, literally made my breath stall as she slowly drew me across her tongue, closed her lips around me, and applied some pretty intense suction.\n\nWithout even realizing it, I was flexing my hips, driving my cock into her mouth, totally blown away by how incredibly hot she looked making love with her mouth. Down on her knees, with that sexy riot of red curls flowing down her back, and her big, beautiful breasts heaving as she hummed around me, and drew me in so deep, I wondered how she was still able to breathe.\n\nAll I knew was I'd never felt or seen anything like it. Of course I'd had women go down on me before, but it never my made my heart hammer or my legs tremble as hard as they were now.\n\nDesperately twisting my fingers through her red curly hair, I could feel my balls begin to tighten as she happily lapped all around me. As good as it felt, I knew I had to stop her before I wound up painting her tonsils.\n\nI chuckled at the way she yelped when I grabbed her under her arms, picked her up and slid her onto her back on the bed.\n\nI don't think in my entire life I'd ever been as ready to make love as I was with her right now. Wrapping my hands around her legs, sliding them over my shoulders, I reached between her thighs and slid a finger inside her, rolled my eyes, and muttered, \"Wow, are you ever wet.\"\n\nWith a breathy gasp, she whispered, \"Then take me Owen, please.\"\n\nOf course that was exactly what I planned to do, once I'd dropped a tender little kiss on her lips to show her how much she meant to me.\n\nGazing down into her big blue-green eyes, I wrapped a hand around my shaft. Then both us let out the most satisfied groans I'd ever heard as I flexed my hips and began to fill her up nice and tight, as slowly, I inched my way inside her.\n\n\"This just feels so good with you,\" I told her, as I pulled out almost all the way, then flexed my hips and pushed my way back in till she was throwing back her head and softly squealing as I went balls deep with one good hard thrust.\n\n\"Hmmm, so do you,\" she whispered, as she clutched my forearms and sank her heels into my ass, spurring me on, making me want to show her just how crazy she was making me.\n\nI'd never felt such a driving need to mate with a woman until her. Though as amazing as it felt, what we were sharing felt like so much more than just sex.\n\nWorking closely with her for these last few years, I'd grown to admire and respect her more than anyone else I knew. To me, she was the perfect combination: incredibly smart, amazingly thoughtful, funny as hell, along with being utterly gorgeous, making me realize that a single weekend would never be enough for me to fully explore such an enchanting, complex creature.\n\nI just hoped she felt the same way about me or I'd be pretty disappointed if these few days were all we'd ever have.\n\nBut the way she smiled up at me, gave me hope, as she began to shiver, with the most delighted little sparkle in her eye, and I just had to kiss her. Still buried deep inside her, I stilled, slipped my arms around her, and tenderly kissed her lips. After we'd enjoyed a long, lingering kiss, as I pulled back, the way she was looking up at me with a sense of wonder in her eyes, had me searching her face hoping that she felt it, too.\n\nThough I'd try to deny it, I knew I'd been falling for her for a while. She got to me like no one else did. All it took was hearing her laugh and she could change my mood in a heartbeat.\n\nThough now that we'd finally connected, afraid she'd come to her senses and realize that I was way too old for her, I already knew I was going to hate to go back to the way things were.\n\nOf course I knew we couldn't exactly make out in the office, at least without raising a few eyebrows. But maybe if she was willing, we could see each other outside of work, to see where this thing could go.\n\nAll I knew as I looked down at the blissed out look on her face, as I thrust into her body and she wrapped herself around me even tighter, that I sure as hell didn't want this to end.\n\nThough obviously I'd have to consider how she felt. Maybe for her this was nothing more than a fun naughty weekend with the boss. And come Tuesday, we'd be right back into our old routine, and all of this would be over.\n\nAfter our fun-filled afternoon, when we finally decided to have some dinner, I cooked us a couple of steaks with baked potatoes and salad.\n\nAubrey's eyes were glimmering with amusement as we ate, as though we were sharing a naughty little secret, now that we'd connected.\n\nThere was just something about her eyes, that drew me to her from the moment I first saw her. They were just so expressive, that I could almost read her every thought. And right now I could see that she was happy, and just hoped I could keep her that way, hopefully for a long time to come.\n\n*****\n\nSadly, the moment I stepped into my office on Tuesday, I knew everything had gone back to what it was.\n\nAubrey was in a beige suit with a boxy jacket, back to wearing layers. Her beautiful breasts were now flat, so I could see she was doing all she could to hide herself again.\n\n\"Morning, Owen,\" she said with a cautious smile.\n\nI cocked an eyebrow, curious to hear what she'd say, as I looked her over and asked, \"Morning, Aubrey. How was your weekend?\"\n\nI felt some sense of relief when she flashed me a pretty smile and admitted, \"Actually, it was pretty amazing.\"",
        "Smiling to myself, I just nodded and walked through the door to my inner office, hating to think that things might be going back to what they were. After sharing a few incredible days with her, really getting to know each other, and exploring every last one of our desires, to go back to just being pleasant with each other was going to be pretty hard to take.\n\nThough I noticed that nothing had changed workwise; Aubrey was still as efficient as ever, reading over documents for me, and pointing out things I might want to change before signing on with a new client.\n\nShe'd bring coffee like she always did and just say, \"Here you go,\" and then go back to her desk.\n\nA few weeks of going through the motions with her was all I could take. When lunch time rolled around one Friday I told Aubrey I'd be late coming back and decided I was going to head out and do a little shopping.\n\nWhen I came back to the office a few hours later she was at her desk studying something on her monitor. Seeing that her hair was up, I couldn't resist the temptation and I came up behind her and pressed an open-mouthed kiss behind her ear and enjoyed running my tongue along the lean column of her neck as I felt her shiver.\n\nShe jumped at first but then when she saw it was me, thankfully, her face broke into a smile.\n\n\"Can I see you in my office?\" I asked as I carried the two bags through the doorway.\n\n\"Sure,\" she said sounding a little confused as she followed behind me.\n\nOnce I'd taken a moment to close and lock both of our office doors I turned and faced her. \"I noticed you're back to wearing layers and that breast flattening bra.\"\n\nShe flinched, looking a little uncomfortable. \"Well, I knew the ladies in the office would notice right away if I changed anything, and they'd probably think I'd had my breasts done. So, I decided I'd better go back to what I always wear.\"\n\nToday she was in a black dress with a matching jacket and a white silk blouse. Though she looked professional I could tell she was trying to hide her body again, which I thought was a shame. Even if we were done, I couldn't stand to see her hiding herself like she had something to be ashamed of.\n\n\"Well, I went out and did a little shopping,\" I told her, holding up the two bags I'd bought. I walked over to the table where we normally shared meals together and emptied the first bag. Then I smiled at her shocked expression as the colorful array of bras spilled out covering the table. Seeing how many I'd bought all piled together, I realized I might have gone a little overboard, but at least now she'd have no excuse for wearing that awful thing she had on now.\n\nHer eyes wide, she turned her head and looked at me. \"You actually went out and bought bras for me?\"\n\nI shrugged. \"I just hope you like them.\"\n\nShe wandered closer and started to look them over, sliding the silky material between her fingers. \"They're all so pretty. I love this navy one with the white piping,\" she said before picking up another one. \"Oh, and this red one is really sexy, and so's the sheer black. Even the white lace is really pretty.\"\n\n\"I really like this one,\" I told her, picking up a sheer, pale beige criss-cross bra with little pink rose buds on each strap, with one in the center that would adorn her cleavage. Already knowing that her breasts would look incredible encased in something so utterly feminine, I handed her the bra and nodded at my private bathroom. \"Why don't you try it on and see how it looks.\" Then I held up the other bag. \"And I got you matching panties for every bra.\"\n\nThough she looked a little stunned she was still wearing a grin, and I could see she was just as curious to know how it would look on her as I was.\n\nWhen she came out of the bathroom without her jacket I actually groaned out loud at the difference in her body, now that she was in a more flattering bra. Her breasts looked so high and perky, and just looking at her I could feel things starting to stir in my pants.\n\nStaring into her eyes, I sat down at my desk and patted my lap. Wearing a cute little grin, with no hesitation Aubrey sat down facing me, straddling my hips with her knees, making my dick lurch now that I had her right where she belonged.\n\nCupping her pretty face in my hands I brushed my lips across hers and was more than thrilled when she wrapped her arms around my neck, slipped her tongue between my lips, and took her time kissing me long and slow.\n\nBoth of us were breathing pretty hard by the time we'd finally pulled apart and came up for air. Smiling into her eyes I lifted her dress over her head and began to unbutton her blouse, eager to see with my own eyes how hot she looked in the sheerest of all the bras I'd bought for her.\n\nGood god, I could feel my eyes pop when I saw just how revealing it actually was, and I was so glad now that I'd picked it. She just looked so sexy, with her gorgeous her breasts on display; I nearly swallowed my damn tongue.\n\n\"It's so sheer you can see right through it,\" she remarked, looking down at herself.\n\nSmiling I nodded in agreement, pleased at the transformation. \"Exactly. It doesn't hide a thing. I can see that your nipples are fully erect and such a delicate shade of pink. You've got such a gorgeous body Aubrey, that I hate to see you hide it.\"\n\nGazing into her stormy blue eyes, cupping her breasts in my hands, I lowered my head and began to suckle at each nipple in turn through the sheer fabric of her bra. I soon had her shivering and squirming and digging her hands into my hair, as I had the pleasure of savoring the bounty of her tender flesh.\n\n\"You know the nice thing about a thong?\" I said as I slid a hand down between us.\n\nSmiling as she shook her head, I showed her when I pushed aside the little piece of fabric between her legs and slid a finger into the heat of her wet little pussy. Now as I sucked at her breasts and gently teased them with my teeth, I could feel her starting to shiver as she grew closer and closer to what felt like a pretty amazing climax.\n\n\"This isn't fair,\" she murmured, breathlessly shivering in my lap. \"I'm almost naked and you're still fully clothed.\"\n\nWith my hands on her waist, chuckling as I watched her eyes flare, deciding she was right, I picked her up and sat her on my desk. Then I kicked off my shoes, tugged down my fly and pushed my pants and boxers down to my ankles. I nearly laughed out loud at how big her eyes looked as she stared wide-eyed at my throbbing erection.\n\nAll I knew was that I needed to get inside her, more than I needed to breathe. And it was pretty obvious from the look in her eyes, that she wanted me just as badly as I wanted her.\n\nShe sure didn't need any coaxing. Once I pulled her back into my lap, as she sank her body down, our eyes rolling skyward, we both moaned out loud at how incredible it felt to have her drawing me deep inside her.\n\n\"Oooh ... you feel good,\" she murmured as she dug her hands into my hair and slid her tongue between my lips and started mating with my mouth while I thrust up as she thrust down as we mated with each other.\n\nI couldn't get a word out. I just felt too overwhelmed as I realized that every single time with her felt even better than the last.\n\nAubrey was clenching me so incredibly tight inside her. I could feel my heart pounding as I watched her throw back her head, shivering from head to toe, as she began to fall apart.\n\nSuddenly, someone knocked on the outer door, and had us nearly jumping out of our skin.\n\n\"Who is it?\" I called out, hoping I could get rid of them without having to move. Especially considering that I had Aubrey's tight little pussy wrapped nice and tight around me; there was no way I wanted to talk to anyone now.\n\n\"It's Edmond. Your doors locked, Owen,\" he said, sounding confused.\n\nSmiling into Aubrey's eyes I told him, \"I know it's locked. I'm in the middle of something important. So, what is it you need?\"\n\n\"I just wanted to drop off that article I found on the latest environmental practices for the construction industry, that we'd talked about last week.\"\n\n\"Just push it under the door, and I'll take a look at it later.\"\n\n\"Sure, okay. Have a nice weekend, Owen.\"\n\n\"Yeah, you too, Edmond.\"\n\nI grinned at Aubrey, who was smirking right back. \"Now, where were we?\" I asked her.\n\nRunning her fingernail along my jaw, she whispered against my lips, \"I think we were making slow, sweet love.\"\n\nThat we were. I smiled into her eyes, glad that she realized that what we were sharing was more about love than sex. There was no getting around it anymore; I was totally in love with her.\n\n****\n\nAt the cottage that weekend, we enjoyed our time together to the fullest, starting with a little moonlight skinny dip. Standing side by side at the end of the dock, I reached for her hand, cocked an eyebrow and asked her, \"Are you ready to take the plunge?\" The way she smiled back at me, I hoped she realized that I was talking about more than just jumping in the water.\n\nFinally, she nodded her head and we jumped in. Floating around together, I'd never felt such a sense of elation as we laughed and kissed each other under the stars, without a care in the world. Now this was bliss.\n\nOnce I got her back inside, mesmerized by the sway of her naked ass as she made her way upstairs, she had me so hard I couldn't wait and I tugged her down onto her knees, grabbed hold of myself and slid into her from behind on the stairs. Both of us laughed at first as I filled her up, but then we were groaning at how incredibly tight she felt as I took her from behind.\n\nI kissed her back as we both came in a shuddering rush as we struggled to breathe, while doing our best to not break our necks and fall on the stairs. All I knew was that I'd never felt anything so good, until I gave in and finally surrendered to my feelings for her.\n\nWe decided on surf and turf for dinner, cooking side-by side in the kitchen, exchanging kisses, as we put everything together. Just the way she smiled into my eyes had me convinced that I'd never had as much fun till she walked into my life, making me realize that if there was any way I could make it happen, that I wanted this forever.\n\nWe even decided to play some crokinole before bed, and she even managed to beat me, which made her pretty happy. But when we she looked like she'd had enough and started yawning, I picked her up and said, \"Okay, sleepyhead, bed time.\"\n\nContentedly smiling, she wrapped herself around me and we locked lips, laughing as I stumbled my way into the bedroom trying not to drop her or crash into anything.\n\nWhen I had her naked on her back in bed, looking down into her gorgeous eyes, a vivid blue now since she was obviously fully aroused, I traced a finger along her jaw and told her, \"I hope you realize that this isn't just a fling for me, Aubrey.\"\n\nHer expression softened as she tugged my head down and kissed me, and whispered against my lips, \"Hmm, I hope not, because this feels so good with you, I wish it never had to end.\"\n\nSurprised, I pulled back and studied her face. \"Then why don't we make it permanent. If you can ignore the difference in our age, I think we're pretty well suited, don't you?\"\n\nWrinkling her nose, she rolled her eyes. \"Seriously? You call that a proposal?\"\n\nI threw back my head and laughed, then held up my hand and told her, \"Okay, how about this.\"\n\nI decided I'd better do it right, if I wanted her to know that I meant it. So, I got down on one knee beside the bed, looked up into her eyes, as she looked over the side, softly smiling down at me. Reaching up, I took her hand in mine, took a deep breath, and tried to tell her just how I felt, as I asked her for her hand. \"Aubrey, it feels like I've loved you forever. And if you would do me the honor of agreeing to be my bride, I promise that I'll spend the rest of my days doing my best to keep that gorgeous smile on your face.\"\n\nHer eyes misting up, she got off the bed and onto her knees, wrapped her arms around me, and with her eyes on mine whispered the words I'd been dying to hear. \"I would love to marry you, Owen.\"\n\nI don't think I'd ever been as relieved or as elated, now that she'd agreed to spend her life with me.\n\nAUBREY\n\nI woke up in the morning, feeling happier than I'd ever felt as I remembered what had happened last night. And I could hardly believe that we were engaged.\n\nSmiling to myself, I could hear Owen in the kitchen, singing his heart out. As I turned my head and listened, I couldn't believe how good he sounded, belting out the lyrics to Stevie Wonder's You Are the Sunshine of My Life.\n\nI threw on a robe and tiptoed out to get a peek, hoping I could see him before he stopped.\n\nBut though he looked up and caught me trying to sneak in, he still kept singing the most beautiful lyrics I think I'd ever heard, while he smiled straight into my eyes, making me think that the words were just for me, as he sang along with Stevie.\n\nI feel like this is the beginning\n\nThough I've loved you for a million years\n\nAnd if I thought our love was ending\n\nI'd find myself drowning in my own tears\n\nI just felt so touched, hearing him sing like that. After he stopped, though the soundtrack was still playing on his sound system, I wrapped my arms around him and dropped a kiss on his lips and smiled right back into his eyes. \"Wow, Mr. Talbot, I had no idea you could sing. And you've got an amazing voice.\"\n\nAs he ran his hand down over my back, and gave me a little squeeze, he shrugged. \"I had to learn to sing just to survive high school.\"\n\n\"What do you mean you had to learn to sing to survive?\"\n\nHeaving a sigh, he eyed me for a moment, then finally opened up and told me. \"Not many people know that I had a terrible stutter growing up. And by the time I reached high-school it was pure torture.\n\n\"The worst thing in the world was when we'd have to say our names out loud for attendance. I stammered so badly I could never get past my first name. So naturally the bullies loved to laugh when they'd see me in hallways and taunt me, calling out, \"Hey, O-O-O-Owen, how's it go-go-go-goin'?\n\n\"Then just for a little added fun they'd slam me into the lockers and laugh their asses off as they took turns giving me wedgies. Though I hated getting picked on, I really hated being the laughing stock of the school, because I couldn't even say my own name.\n\n\"Luckily for me, my English teacher took an interest in me. I guess hating to see me suffer she suggested that speech therapy might help. As soon as she suggested it, I went right after school the same day and signed up.\n\n\"The therapist taught me breathing exercises that really seemed to help. And she told me that if I sang what I was trying to say, that I wouldn't stutter as much. When I tried it, I couldn't believe that it worked.\n\n\"My mom was really into Stevie Wonder and had all his records, so I'd sing along with every album she had every day after school. And gradually using the techniques she taught me I was able to get my words out without tripping over my own tongue.\"\n\nI cupped his face in my hands, aching for him after he'd told me what he'd gone through. \"Owen, I had no idea.\"\n\nHe shrugged. \"It only happens the odd time now, mostly if I'm feeling anxious.\"\n\n\"But I've never heard you stutter.\"\n\nLooking into my eyes, his lips curled into a smile. \"That's because I'm never been nervous around you.\"\n\nStroking my hand across his cheek, I imagined we'd all gone through tough times as kids. Yet he was so in charge of his life now that I never would have guessed the torment he'd suffered.\n\nAs I set the table while Owen finished breakfast, I smiled as he started singing along to the old classic, For Once in My Life. And I actually felt my heart clench in my chest as looked over at me smiling, as he belted out the incredibly touching lyrics with Stevie.\n\nFor once I can touch what my heart used to dream of\n\nSomeone warm like you\n\nCould make my dreams come true...\n\nAs he came up behind me, I shivered as he brushed his lips to my neck and whispered, \"I love you, Aubrey.\"\n\nFor the longest time, he just held me, and as we rocked together to the song, I couldn't believe how lucky I was to have found him.\n\nAs we ate, curious, I tipped my head and asked him, \"So the bullying stopped after you'd gotten help?\"\n\nSmiling across the table at me he chuckled. \"Well, the therapy gradually helped to stop the stuttering. But once I decided to join the wrestling team and began lifting weights and put on some muscle, they decided not to tangle with me anymore, I guess afraid that I'd be the one doling out the wedgies.\"\n\n\"So did you ever get back at them?\"\n\nHe shook his head as he reached for his coffee. \"No. I didn't want to stoop to their level.\"\n\nThat was one of the reasons I loved him. Even after what he'd gone through, he still took the high road.\n\nThe man had integrity, which was something I really admired.\n\nOWEN\n\nWe decided, since I owned the place, to take Monday off. After we'd had a nice champagne brunch at a hotel in the city, we went hunting for the perfect ring.\n\nAs we wandered from store to store Aubrey kept telling me, \"Owen, you don't have to buy me a flashy ring to show me how you feel.\" When we finally found a perfect oval shaped diamond surrounded in a halo of smaller diamonds, as soon as she tried it on the way she smiled into my eyes, I knew we'd found the one.\n\nAs I slipped it on her finger and gently kissed her, we both got a little choked up as we realized that we were actually doing this, and were about to commit our lives to each other.\n\nWe spent the night in the hotel and ordered dinner up to our room, since neither of us wanted to get out of bed. We were having such a good time celebrating our engagement in as many ways as we could imagine, till both of us were spent and happily wrapped in each other's arms.\n\nAlthough we both enjoyed exploring every inch of each other; holding each other close and exchanging kisses, as we gazed into each other's eyes actually felt just as incredible, especially knowing that we'd be sharing moments like this for the rest of our lives.\n\nAUBREY\n\nAfter sharing a perfect weekend together, once Tuesday rolled around I knew we had to face the office and let everyone know that we were about to be married, which obviously I was not looking forward to doing.\n\nMy nerves were on edge even before I left my apartment, since I'd decided not to try and hide myself anymore, since my new man seemed pretty happy with me just the way I was.\n\nWhile Owen was busy catching up with business on the phone, I got hit with a double whammy.\n\nWalking into the break room to get us some coffee, Kendra, the office gossip monger, busy getting some cream out of the fridge, stopped dead in her tracks the moment she saw me. I could almost see the wheels going around in her head, as it dawned on her there was something different about me, now that I was wearing one of my more flattering bras, and a body-hugging vibrant red dress that really showed off my cleavage.\n\nEyes as big as moons, her gaze fixed on my breasts, she kept blinking, like she could hardly believe what she was seeing. Finally, she looked up at me and said, \"Holy smokes, girlfriend, did you go away on the weekend and have your girls done? Because I got to tell you, they look amazing. And they look so natural, I'll bet no one will be able to tell that you've have some work done.\"\n\nI put down the coffee pot, and decided to tell her the truth, before she had everyone in the office asking about my 'implants'.\n\nAfter I'd told her what I went through as a teenager, her reaction actually surprised me. Considering that she'd never struck me as being overly sensitive, I couldn't believe it when she pulled me in for a hug, stroked her hand over my hair and whispered against my ear, \"You poor thing, having to hide yourself away for all those years. I can't imagine how hard that must have been for you.\" Then she pulled back and smiled as she eyed my girls. \"But you look so good now. If I were you I'd just flaunt those big, beautiful puppies and hold my head high.\"",
        "Chuckling at the way she described the twins, relieved that that was over, I thought we were done, until of course she noticed my ring. Her eyes almost popped out of her head when she saw it sparkling on my finger as I reached for a mug in the cupboard.\n\n\"Holy shit, that's some rock you got on your finger. So, you got engaged, too? What the hell happened with you on the weekend? Did you bump into Prince Charming the minute you let your girls out?\"\n\nI actually laughed at that, but decided there was no way around it, and after I took a deep breath, I told her, \"Owen and I are getting married.\"\n\nStaring at me like I'd grown an extra head, she dropped into the nearest chair, and muttered, \"Get out of town. You and the boss are engaged? When the heck did all this happen? And why am I just hearing about this now?\"\n\nI smiled as I thought about him, because I knew I'd been in love with him for as long as I could remember, though I'd never told a soul.\n\nGlad the drama was finally over with Kendra, I brought Owen a coffee. And though he was busy on the phone with a client, after I'd put his mug on his desk, he still winked and reached for my hand and pressed a kiss into my palm.\n\nAfter that little exchange, I felt like I was floating on air as I made my way back to my desk, deciding I had to be the luckiest girl in the world.\n\nBack into work mode, I had just finished reviewing a contract for a new parking garage for one of the bigger hospitals on University Avenue in the heart of the city. When I looked up, and saw Owen's mother walking through the door, smiling as she approached me.\n\nI liked her, and she'd always been friendly... at least until now I thought, as I looked down anxiously at the big, beautiful diamond ring on my finger.\n\nHer blue eyes sparkling, she smiled and said, \"Oh, you just look so lovely today, Aubrey. And I think that red dress really suits you, and does wonders for your figure.\"\n\n\"And you look lovely, too, Mrs. Talbot.\" Dressed to the nines in an off-white designer suit, with black high heels and matching purse, she looked so polished. Her shoulder length blonde hair perfectly styled, with just a flattering touch of makeup, she always looked so put together that no one would ever guess she was in her seventies.\n\n\"I had an appointment in the city this morning,\" she explained, \"and I was hoping I could coax my son into joining me for lunch.\"\n\nI pulled up Owen's schedule on my computer screen and as I checked his appointments, I heard her gasp. As I turned my head and looked up at her she smiled and said, \"Oh, my goodness, what a lovely ring. I had no idea you were engaged, Aubrey. And who's the lucky man?\"\n\nJust then Owen walked out of his office, looked back and forth between the two of us and said, \"It's me, I'm the lucky one. I asked Aubrey to marry me on the weekend, and thankfully she said yes.\"\n\nI watched the smile disappear from his mother's face, replaced by a look of shock as she stared at her son and then back at me. \"You're marrying your assistant?\"\n\nSmiling at me he said, \"Actually, I'm marrying the woman I love. And I've never felt this happy, all thanks to Aubrey.\"\n\nHis mother surprised me when she suddenly broke into a smile, rushed over and hugged me around the shoulders, pressed a kiss to my cheek, then went over and gave Owen a big, warm hug, too. Looking up at her son, she grinned and said, \"Well, this is surprise, but a nice one. I've always wondered how you two could work together side by side and not realize that you'd be perfect for each other.\"\n\nHer eyes sparkled as she looked over at me. \"I've always liked you Aubrey. And I'm so glad my son finally came to his senses and realized what a treasure he's got in you.\"\n\nLooking over at Owen's shocked expression I could hardly believe my ears. His mother just gave us her approval, when I'd expected at the very least, she'd give us a lecture about the difference in our ages.\n\n\"Now,\" she said, \"why don't the three of us go out and celebrate and have a nice lunch, so you can tell me all about your wedding plans.\"\n\nI looked at Owen, who was still staring at his mother, looking a little confused. Then he smiled at me and said, \"Well, since we just got engaged, we haven't really got that far yet. But lunch would be nice.\"\n\nA month later, for Owen's fiftieth birthday, he decided he didn't want a party, preferring just to have a quiet dinner with me.\n\nAs we sat together at his favorite Italian restaurant as the waiter brought out a small coffee cream cake and the staff gathered round to sing happy birthday, I pressed a kiss to his cheek and told him \"Happy Birthday, sweetheart.\"\n\nSince he said he didn't need a thing, and told me in no uncertain terms that he didn't want me to buy him anything, after he blew out his candle I put his birthday card on the table, bit into my lip and waited to see what he'd think.\n\nHe smiled as he opened the card, since we normally gave each other funny cards I think he was expecting something a little racy or maybe something silly.\n\nBut as he stared at the little white stick sitting inside the card, and then back up at me, looking confused he asked, \"What's this?\"\n\n\"That's the test I took this morning. You're going to be a dad, Owen. We're having a baby.\"\n\nThough I wasn't sure how it happened, maybe that I missed a few days of my pills when we'd been stranded in the storm, I was actually thrilled when I saw the plus sign show up on the stick after I'd done the test first thing in the morning.\n\nOwen's eyes went wide as he reached for my hand and whispered, \"Are you serious?\"\n\nI nodded. \"I just hope this is what you want, and you're not upset. I know we didn't exactly plan for this to happen, especially before we're even married.\"\n\nHis face broke into a big happy smile, he pushed back his chair, reached for me and pulled me into his lap, and obviously not really giving a damn where we were, he kissed me with everything we had.\n\nStroking my cheek, once we'd pulled apart, he looked into my eyes and told me, \"This is definitely the best birthday I've ever had. Now that I've got you, and a baby on the way, I don't think I could wish for anything more.\"\n\nAfter we'd had a small intimate wedding with just our closest family and friends, eight months later, we welcomed our son; Michael Anthony Talbot, a healthy seven pound bundle of joy into the world.\n\nThe way Owen looked into his son's eyes with a sense of wonder, had me wiping away a tear as he pressed a tender little kiss to the top of his head, smiled down at me and said, \"I still can't believe he's here, and that we get to take him home with us.\"\n\nI laughed and told him, \"I think that's the way it usually works, and they actually prefer that we take them home once we've had them.\"\n\nChuckling, Owen brushed a kiss across my cheek and said, \"And to think I almost didn't hire you.\"\n\nFirst I'd heard of it, I sat up and asked, \"And why was that?\"\n\nHe smiled. \"You're just so pretty, I was worried you'd be a distraction. But I'm so glad now that I changed my mind, or we wouldn't be here now with our brand new baby boy.\"\n\nI couldn't argue with that. And I was pretty glad that he'd hired me, too.\n\nNo surprise, Owen was so good with the baby, eager to help with anything he could. Well, maybe except for breastfeeding. Though my hubby really seemed to enjoy the fact that the twins were even bigger now that I'd had the baby, as he grin at me and tell me, \"There's just more of you to love.\"\n\nBut I realized why he was so eager to care for his son, when I was making our bed one morning, and he was in changing the baby. I smiled as I listened to him on the baby monitor, enjoying a little alone time with his boy.\n\nI sat on the edge of the bed and listened as he quietly told him, \"I can't wait to get you up to the cottage, big guy. I'll teach you how to swim and how to bait a hook to catch a fish. And you've got your own jet ski, just waiting for you as soon as you're old enough to ride it.\"\n\nI smiled to myself as our little guy laughed and cooed, as I could hear Owen happily laughing right along with him as he told him, \"Well, don't get too excited, because it'll be a while yet, but you keep on growing and we'll get there.\"\n\nI actually got a little weepy as I imagined him looking down at his son as his tone grew more serious as he quietly told him, \"You know your old dad has waited a lifetime for you. And now I can hardly wait for the three of us to explore that great big world out there together.\"\n\nWhen I got up and walked into the baby's room, I realized what a catch he actually was, seeing as he was so good with his son and probably the best husband I could ever have wished for.\n\nSmiling at my hubby, I pressed a kiss to his lips, ran my hands down over his back, gave his butt a little squeeze and whispered, \"I was just wondering what our son would think of having a little brother or sister to play with.\"\n\nThe moment he heard that, Owen quickly dropped a kiss on Michael's head and told him, \"Okay, time for a nap, big guy. Now mom and dad need a little alone time.\"\n\nAs I took him by the hand and led him into our bedroom, looking back at him over my shoulder giving him a playful waggle of my eyebrow I said, \"I think we'll try for a little girl this time. What do you think?\"\n\nShaking his head, he laughed and said, \"Baby, as long as we get to practice long and hard, I'll be more than happy with whatever happens.\"\n\nOnce he'd peeled me out of my clothes, the moment slid his tongue along my sex, as I twisted the sheets in my hands, I wondered how much better it could get. At least until he nudged his way inside me and kissed me with everything he had.\n\nBreathlessly gazing into the dark, stormy look in his eyes, as I felt my whole body begin to tremble, I realized that some things were just meant to be. And lucky for me, working closely with the man of my dreams, proved to be the best thing I'd ever done.\n\nI had my man, and our baby boy, and with any luck soon we'd have a little girl to love and spoil, too.\n\nTurns out every cloud really does have a silver lining, if my amazing life with my man was anything to go by."
    ],
    "authorname": "Smuttyandfun",
    "tags": [
        "love",
        "storm",
        "oral",
        "kissing"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/storm-warning-6"
}