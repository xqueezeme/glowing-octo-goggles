{
    "title": "Weaver",
    "pages": [
        "Laptopwriter Copyright\u00a9 2014\n\n\n\nOne again, my thanks to Mostera1 for his help. He always makes my stories better.\n\nAnd now, Weaver. \n\n\n\nFrom the corner of his eye, Weaver caught sight of the big fist thundering toward him. It had been years since he'd fought in the ring and maybe he wasn't as fast as he used to be, but he still knew how to react to a haymaker. He slipped under the wild punch and came up inside with a short, hammer-like left shot to the brute's ribcage. \n\nStumbling backward, the big man was surprised at the force of the blow from someone so much smaller than himself.\n\nAs Weaver plotted his next move, he recognized what he had seen so many times in the ring...fear in the eyes of his opponent.\n\nThe large man lashed out again and again, desperately trying to make contact with the smaller man's jaw, but each time, found nothing but air.\n\nWeaver played with his adversary, ducking and slipping punches with ease until the big man's arms became weary. Weaver had, had enough; it was time to put the big palooka away. With a flurry of lefts and rights he battered the man's face and midsection. Finally, with a strong right cross, he sent the bully's bloody carcass flying over a table and tumbling face down to the dirty floor.\n\nWeaver didn't go to a neutral corner but instead stood guard and watched as the antagonist struggled to his feet. \n\nWanting no more punishment and thoroughly demoralized, the beaten man stumbled out the door. \n\nDamn, thought Weaver, if I keep beating up customers Jerry won't let me come back here anymore. He sheepishly returned to his bar stool.\n\n\"Weaver,\" started Jerry, the owner of the bar. \"I know that fight last week wasn't your fault, and I know you were protecting Susie just now, but damn it man, you've got to stop using my place as a boxing ring, it's starting to get a bad reputation.\"\n\n\"I know, Jerry, I'm sorry but Susie shouldn't have to put up with that kind of crap.\"\n\n\"Yeah, I know, you're right, it's just...\" he let his words hang as he looked over Weaver's shoulder. \"I should probably be thanking you but here comes Susie, I think I'll let her do it for me,\" said Jerry as he went to go pour Susie's protector a drink on the house.\n\nHis body stiffened and he flinched backward as the pretty blond in the skimpy barmaid's uniform planted a kiss on his lips. \"My Hero,\" she said sincerely. \"Thanks Weaver, that guy was really getting obnoxious. He offered me money to go out to the parking lot with him and when I refused...well, you saw, he was starting to get physical.\"\n\n\"That's okay Susie, I'm just glad I could help.\" He spoke softly, then turned back to face the bar and soulfully started to nurse the free scotch and water left for him by the thankful bar owner. \n\nFeeling a little slighted and a bit confused, Susie went back to waiting on her tables.\n\nSitting alone in the far corner of the bar, Arlene Reynolds witnessed the entire episode, including Weaver's reaction to the pretty girl's kiss. \n\nArlene had a very stressful job as an upper level executive at Peterson Industries, a private equity firm. Once in a while she'd come into Jerry's Place to take the edge off before going home to her empty apartment. She was a member of the new-age, up and coming power-women of the twenty-first century; the kind you read about in women's magazines. One look told you she knew exactly what she wanted out of life and was on her way to getting it.\n\nWas she gorgeous? Most men would say no, but she knew exactly how to bring out her best features and look attractive. From the way she did her hair, to her make-up, to her attire; it all created the image of a strong, confident, intelligent woman who was well on her way up the corporate ladder. Some guys might even say she was...intimidating. \n\nEvery day she worked with people of all sizes, shapes, and personalities; some smart, some extremely smart, and some not too smart at all. It was what made life interesting. Take the guy at the bar, for instance, she thought; she abhorred fighting but admired courage and he sure had that. She watched as he sat staring into his glass as if it were a crystal ball. \n\nShe sighed, he wasn't dressed very fancy, probably a blue collar worker, she thought; not really the kind of person that she would normally go out of her way to meet...still, there was something fascinating about him. She couldn't help herself.\n\n\"So, what's going to happen next,\" she said with a friendly smile as she sat on the stool next to his.\n\n\"What?\" again he spoke softly. \"What do you mean?\"\n\n\"The way you're staring into that glass you'd think it could tell the future, so what's going to happen next?' she repeated while motioning for Jerry to give her a drink.\n\nHe chuckled slightly then smirked. \"Lady, if I want to see my future I just look at my past.\" \n\nWell this was starting to sound morbid, thought Arlene. Time to change tactics; I'll work on his ego, she told herself. \"I saw you beat up that guy who was bothering the waitress. He was a monster, weren't you scared?\"\n\nIt took Weaver a moment to answer. \"Nah, he was just another guy. I'm not afraid of guys; it's women that terrify me.\"\n\n\"Women,\" she responded with surprise. \"You're afraid of women?\"\n\n\"Lady, a guy will break your nose, your jaw, maybe a rib or two, but a woman will break your heart ...a woman will break your spirit.\" With that he stood, threw a twenty on the bar and walked out without another word.\n\n\"Well, that was pretty rude,\" Arlene said to Jerry as he came over to collect the money.\n\n\"Yeah, that's Weaver for you. He's not much for conversation.\"\n\n\"Weaver; is that his first or last name?\"\n\n\"Neither, it's a nickname. He used to be a prizefighter, a pretty good one too, from what I understand. A couple of my regulars who follow boxing got all excited when he started coming in here a while back. They tried to make friends with him, but as you just found out, he's not much of a conversationalist. Don't get me wrong, he's a nice enough guy, he just doesn't talk much.\"\n\n\"Well you can't prove it by me...that he's a nice guy, I mean. I was just trying to be friendly.\"\n\n\"Oh, don't take it personally. I think it has something to do with the fact that you're a woman. Did you see him when Susie kissed him? Hell I thought he was going to run for the door.\"\n\n\"Yeah, I did see that,\" she replied. \"And all that talk about a woman breaking his heart; what's that about?\"\n\n\"I'm not really sure. Those guys I told you about, they said his wife ran off with another guy while he was training for some big fight. I guess she's the one that broke his heart, and to tell you the truth, I think it's still broken.\"\n\nFor the next couple of days Arlene couldn't get her mind off Weaver. Damn, she told herself, this is ridiculous. Why am I so obsessed with this guy? It wasn't that she thought of him romantically, no one had tickled her funny bone that way since college. No, it was the mystery behind the man. \n\nShe tried looking him up on the Internet. She found a hundred thousand ways to weave a rug, but nothing about a prizefighter by that name. Who was this guy? Did his wife really break his heart by running off with another man? Try as she did, Arlene just couldn't shake her curiosity. \n\n\"Arlene,\" Carolyn, her PA addressed her from the door to her office. \"Don't forget you have that management meeting today at three.\"\n\n\"Oh that's right, thanks, Carolyn,\" she said glancing at the clock on her desk. It was already a little after two. She admonished herself for having her head in the clouds and got busy making sure she had everything she needed for the meeting.\n\nAs everyone filtered into the conference room Arlene had an idea; Bob Rawlings. She'd heard him talk about coaching kids in some kind of boxing program he was involved in. I wonder if he knows anything about Weaver, she thought. \n\nBefore going to her chair she leaned over and whispered in Bob's ear. \"Bob, I wonder if you'd have time to discuss something with me after the meeting?\"\n\nBob felt his pulse race. He looked around, checking to see if anyone noticed his heart pounding. Since Arlene started with the firm over three years prior, Bob had a massive crush on her. The problem was she didn't know he existed and he was too shy to really do anything about it. \n\nShe just seemed to be all business and not really interested in making friends. Once at a company picnic he took a chance and brought her a piece of cake, hoping to strike up a conversation as she ate it. Unfortunately, with a friendly smile she denied his approach saying she didn't care for cake. Bob took this as a rebuke of his efforts and retreated with his tail between his legs. \n\nSince then, outside of a smile and nod of the head as they passed each other in the halls, the cake incident was Bob's last feeble attempt to win her heart.\n\n\"Sure,\" he said trying to keep his voice from cracking from nervousness. Bob could hardly keep focused on what was being said at the meeting; all he could think about was being able to sit down with Arlene and have an actual conversation. Of course he had no idea what she wanted to talk about and assumed it was work related, but that was okay, he'd take anything he could get.\n\nThe meeting ran over. It was nearly six o'clock by the time it adjourned. Bob figured he would have to wait until the following day before sitting down with his heartthrob, but was very pleasantly surprise.\n\n\"Bob, I didn't know the meeting was going be that long,\" she said as they walked out of the boardroom together. \"I don't suppose you'd be interested in stopping off some place and having a drink, would you?\"\n\nBob could feel the perspiration building under his collar. He loosened his tie and undid the first button of his shirt. He wondered if his forehead was sweating as well. \n\n\"Easy there, big guy,\" she joked as they turned down the hall. \"I didn't ask you to strip, just have a drink with me.\"\n\n\"Huh, oh no...I mean, I wasn't...I,\" \n\nArlene noticed his embarrassment and thought it was cute. She gave him a big smile trying to put him at ease a little. \n\n\"Relax, Bob, I've heard you talk about coaching some kids in boxing and I just want to pick your brain about the sport a little,\" she told him.\n\nBob did relax. Hell he could talk about boxing all night. They took separate cars to a little bar right down the street. Bob held the chair for Arlene as she sat down. By the time he was taking his seat across the table the waitress was already there, ready to take their order. As soon as she left Bob started the conversation.\n\n\"I must confess, Arlene, I didn't think you liked boxing.\"\n\n\"Oh heavens, I don't. I think it's barbaric and stupid to have two guys beat the hell out of each other for money,\" she said without thinking.\n\nBob was visibly taken aback. Did she ask me out for a drink just to insult me, he wondered?\n\nWhen she saw the anger in his face Arlene realized what she'd said. \"Oh, Bob, I'm sorry, I didn't mean...\" She wasn't really sure how to apologize, especially since that was exactly how she felt about the sport. Just then the waitress returned with their drinks and set them down with her assurance that she'd check back with them in a little while.\n\n\"So, if that's the way you feel, what is it you want to know?\" Bob asked. Suddenly his little-boy shyness and charm disappeared. He was angry and wasn't hiding it very well.\n\n\"I really am sorry about what I said, Bob. Please forgive me.\"\n\nHe gave her only half a smile. Boxing had been a big part of his life. \"So what is it you want to know?\" he asked again.\n\nArlene really did feel bad. From what she knew about him, Bob was a nice guy and she had no intention of insulting him. I'll have to make it up to him sometime in the near future, thought Arlene, but right now she had to see if he could enlighten her.\n\n\"Have you ever heard of a fighter called Weaver?\" she asked. \"I don't think...\"\n\n\"Weaver, of course I have,\" he answered curtly. \"His real name was Chuck Adams. He was one hell of a middle weight, could have been champion; why?\"\n\n\"Well, I met him the other night.\"\n\n\"Met him,\" Bob said surprised. \"That's impossible; he disappeared years ago. Hell, I don't even know if he's still alive.\"\n\n\"Oh he's very much alive, Bob. I saw him clean the floor with some guy twice his size the other night at Jerry's Bar.\"\n\n\"Weaver? How do you know it was Weaver?\" he asked.\n\n\"Well, that's what everyone calls him. I assume it's the same guy. I talked to Jerry, the guy who owns the bar, and he told me the guy was an ex prize fighter. He said his wife left him for another guy, is that true?\"\n\n\"Ah, well that was the rumor but I don't know if it's true or not. There were all kinds of rumors floating around when they cancelled the fight. Weaver's manager said he got deathly ill, then he just disappeared...never fought again; I figured maybe his manager was telling the truth and he died, although I never saw anything about it in the media.\" \n\nBob thought for a moment. \"Come to think of it, he was from around here. I'm pretty sure he grew up on the north side.\"\n\n\"Why do they call him Weaver?\" Arlene asked.\n\n\"Because he was always bobbing and weaving; that means his upper body was always in motion. It's harder to hit a moving target. He really was something to watch. He could slip under any punch or any combination of punches thrown at him. The sports writers gave him the nickname.\"\n\n\"Bob, it sounds like the same guy to me. You should have seen him beat this guy up in the bar the other night. That guy tried everything to hit him but I don't think he ever touched him, not once. Finally this Weaver guy started throwing punches left and right and knocked the other guy right over a table.\"\n\n\"Better watch it, Arlene, you sound like you almost enjoyed watching it,\" Bob said sarcastically. \n\nArlene knew she had that coming. She gave him a wry little smile. \"Bob, I really am sorry for what I said, honest. Let me make up to you, let me buy you dinner.\"\n\nHe thought for a minute. Okay she insulted him, he'd been insulted before, and after all, he'd wanted to get to know her better since he first laid eyes on her.\n\n\"No thanks,\" he said, then smiled. \"Dinner's on me.\"\n\n\"So,\" Arlene said while cutting into her fish dinner with her fork, \"educate me. Why shouldn't I feel the way I do about boxing?\"\n\n\"Oh, I don't think you want to get me started about boxing. I could talk all night about it. Let's talk about you, what do you for fun?\"\n\n\"Well now, there's a subject I could talk about for at least two or three minutes,\" she said with a smile. \"I really haven't had a lot of fun since moving to Chicago. My folks and my sister all live in Philly but there just weren't any opportunities out there; job wise, I mean. So, when I had an offer to move out here I jumped at it, but I haven't made many friends, not yet...been too busy with work. What about you, I mean you don't really box in your spare time, do you?\"\n\n\"I used to. If it wasn't for boxing I'm not sure what would have happened to me.\"\n\nArlene looked at him as if he had two heads. She just didn't understand how a barbaric and brutal form of entertainment like boxing could possibly help anyone with any intelligence...except, of course, for the greedy slime ball promoters and others who prospered from the cruelty of having two Neanderthals beat the crap out of each other.\n\n\"Look,\" he said when he saw the expression on her face. \"I grew up in a very tough part of the city. Between the gangs and drugs, there wasn't much opportunity for most kids in my neighborhood. Half of us ditched school because it was more dangerous there, than in the streets. A neighborhood cop, his name was Brian Samuelsson, saw me just roaming around looking for trouble one night and took me to the gym. He put a set of gloves on me and showed me how to stand and throw a jab. It changed my life,\" he said cutting off another piece of steak.\n\n\"All of a sudden I found I was good at something. I was only ten or eleven years old but it gave me hope; hope that maybe I could actually do something with my life besides grow up selling drugs on the street corner. I started to develop some self-confidence. I don't mean because I could beat someone up, I mean confidence in myself...as a person. I joined the CYO boxing program. That stands for the Chicago Youth Organization. At the time it was run by Tony Zale. He was the middle weight champion of the world twice in his career. He was also a hell-of-a-great guy.\"\n\nBob looked up at Arlene. The expression on her face was now one of interest so he continued.\n\n\"I was a sophomore in high school when Tony showed me some scholarships available for collegiate boxing. Between him and Brian, they made sure my grades were up to par and I was keeping my nose clean. When it was time to apply, they both wrote letters of recommendation for me. Tony's name carried a lot of weight and I actually won two scholarships. Neither of them were full-boat, but between them I was able to graduate with a B.A. in business administration. From there I got some hands-on experience during a four year stint in the Navy. I was also the Armed Forces boxing champion for my division.\"\n\nBy now Arlene realized just how badly she had insulted her co-worker with her remarks. She was feeling about two feet tall when Bob shot her down even further with his coup-de-grace. \n\n\"After the Navy I came back home and got the job at Peterson Industries. Both Tony and Brian have passed away but I volunteer all the spare time I can at CYO to make sure the boxing program didn't die with them. I want to make sure it's still there so other kids can get the same break I did. So now you see why I'm a little touchy about the sport. If it wasn't for boxing I'd probably either be behind bars or in a pine box by now,\" he said with a chuckle.\n\nArlene was in awe. She was from Drexel Park, just outside of Philadelphia. It was a very upper middle class community with large homes and spoiled kids. She'd never known anyone like Bob. She was impressed.\n\n\"Bob, I'm so sorry...really, I had no idea,\" she pleaded.\n\n\"Don't worry about it,\" he replied. \"A lot of people have the same attitude.\"\n\n\"Anyway,\" he said taking a sip of wine. \"Tell me more about this guy you think is Weaver.\"\n\n\"Well there's really not a lot more to tell...except that he's afraid of women.\"\n\n\"He's afraid of women?\" Bob asked knowing he shared a little of that fear himself.\n\n\"Yeah, he said a guy could break his nose or his jaw, but a woman could break his heart.\"\n\nBob thought for a moment. He had never been hurt by a woman like that before, but on some level he felt empathy. \"Wow, that's kind of profound, isn't it. It certainly sounds like this guy, whoever he is, had his heart ripped out by a woman at one time.\"\n\n\"Yeah, I kind of feel sorry for him, especially if it really is this Weaver character. It sounds like he was at the top of his career and then just gave it all up.\" \n\nJust then she had an idea. \"Hey, according to Jerry, he comes into the bar fairly frequently. Why don't you and I stop in a few times after work? The least you can do is let me buy you a couple of drinks and maybe he'll come in while we're there. Would you recognize him if you saw him?\"\n\nOf course Bob was not about to turn down an offer like that.\n\n\"Yeah, I think so,\" he responded. \"That's a good idea. If it really is Weaver, I'd love to meet him. How about tomorrow night? I'll even let you buy.\"\n\nSeldom did Arlene have any plans after work. She didn't even have to think about it. \"Yeah, tomorrow night would be fine.\"\n\nThey had one more after dinner drink before saying their goodnights. \n\nBob's heart was fluttering. He'd finally gotten to meet Arlene outside of work. Other than the fact that she didn't like boxing, she seemed like a nice person. He was excited and couldn't wait to be with her again.",
        "Arlene also thought of their evening together as she drove home that night. They had worked at the same place for years but she never took the time to talk to him about anything that wasn't job related. What a shame, she thought. \n\nThe following day they had not seen each other at work but just before five Carolyn buzzed, saying Bob Rawlings was on line one.\n\n\"Hello Bob,\" she answered in anything but a business like tone. \"I was just thinking about calling you. Are we still on for tonight?\"\n\n\"Yeah, that's why I was calling. Where are you parked? I'll meet you at your car. I'll have to follow you; I have no idea where this Jerry's place is.\"\n\n\"Oh, okay. I'm parked in the side lot, in the second row. I'll look for you when I get out there. I'm almost ready; I shouldn't be more than ten minutes.\"\n\n\"What can I get you?\" asked Susie as Arlene and Bob sat at a table in the back of the bar.\n\n\"I'll take a white wine, please,\" replied Arlene.\n\n\"Make mine a light beer,\" Bob answered. \"Thank you,\" he politely said as the pretty waitress walked away.\n\nArlene lowered her head and leaned toward her co-worker. \"That's the girl Weaver helped out the other night; the one he had the fight over. He almost ran for the door when she thanked him with a kiss. It was so strange; he beat the crap out of a guy twice his size, then looked like he was scared to death of her,\" she commented lowering her voice so no one but Bob could hear her.\n\n\"Geez; are you sure this guy's all there? Maybe he's got a phobia or something.\"\n\n\"I don't think so, Bob. I think he's just been badly hurt. I don't know, maybe he hates women but I don't think there's anything really mentally wrong with him.\"\n\nSusie brought their drinks and laid them on the table. \"Would you like to start a tab?\" she asked.\n\n\"Yeah, that would be...\"\n\n\"Hey, drinks are on me, remember,\" said Arlene as she handed her credit card to the barmaid. \"Start a tab with this, please. We'll probably be here for a little while,\" she told the pretty blond. \n\n\"Ah, before you go, how often does Weaver come in?\" Bob asked. \n\n\"Oh, almost every night,\" she replied before walking back to the bar to run the credit card.\n\n\"Maybe we'll be lucky and he'll come in tonight,\" Arlene offered.\n\n\"I'm not so sure that would be luck,\" he replied to the confused looking female opposite him. \"Then I don't have an excuse to meet you for drinks after work anymore.\"\n\nA big smile broke across her face. \"You don't need any excuses, Bob. I'd be happy to have a drink with you anytime.\"\n\nWell, that was encouraging, thought Bob. He probed for more information about his lovely date and finally got her to open up. He learned their childhoods couldn't have been more different. She grew up as a privileged little girl. She got almost anything she wanted including a horse for her sixteenth birthday. \n\nThey were both so engrossed in conversation, neither noticed the wiry built man who came in and sat at the bar. \n\n\"Can I get you another round?\" Susie asked.\n\n\"Yeah, one more,\" Bob told her.\n\n\"Oh, by the way,\" Susie interjected. \"You were asking about Weaver; he's been sitting at the bar for the last fifteen minutes.\"\n\nArlene's face lit up. \"Would you ask him to join us...\"\n\n\"No, wait a minute,\" interrupted Bob. \"I don't want to ask him to come to us, I'll go to him. Can you point him out to me?\" he asked while getting up.\n\n\"He's the third one on the left,\" she responded.\n\n\"Mr. Adams,\" Bob said extending his hand toward the somber looking gentleman.\n\nWeaver turned his head to look his greeter in the face. \"Do I know you?\"\n\nAs soon as they were eye to eye, Bob recognized him immediately. He had a little less hair, but it was still brown and cut short. He saw the scar over his left eye that he got in the third round of the Alexander fight and he had the same steely stare that intimidated so many of his challengers. \n\n\"No sir, but I know you. My name is Bob Rawlings; it's an honor to meet you.\"\n\nNot wanting to be a complete asshole, Weaver shook hands before facing the bar again.\n\n\"Mr. Adams, I don't want to impose but I would sure be flattered if you would join us at our table.\"\n\nNormally Weaver would have told the guy to take a flying leap but he sure didn't want to stir up any more trouble in the bar, besides there seemed to be something about Bob that he liked; maybe it was because he called him by his real name. Whatever it was, he decided to take him up on his offer.\n\n\"Well,\" he said sitting down to the right of a smiling Arlene. \"If it isn't the lady who thinks you can see the future in a whiskey glass.\"\n\nArlene blushed and offered her apologies for bothering him the other day. When she was done humbling herself, Bob picked up the conversation.\n\n\"Mr. Adams...\"\n\n\"Call me Weaver, everybody else does.\"\n\n\"Okay Weaver; I just want to say how much I enjoyed watching you in the ring and what an honor it is to meet you. I've been involved with boxing most of my life. I enjoy watching a real technician and you were one of the best. I'm a director for the CYO boxing program. It's a great organization. Are you familiar with it?\"\n\nWeaver didn't answer. He just sat glaring into his glass again so Bob continued.\n\n\"Anyway, we get kids from all over Chicago-land that want to learn to box. I'm just one of many volunteers that work with these kids. We teach them the basics in the ring but more importantly, we get to spend time with them. It keeps them off the streets. Most of the kids we get have no real home life. That's why they come to us in the first place. We're able to teach them a lot more than how to box. We teach them about respect and fair play; about self-discipline and being true to themselves. In addition to the boxing, it's also a great mentoring program.\"\n\nBob was waiting for some kind of reaction from Weaver but it didn't come. What he didn't notice was Arlene watching the pride in his face as he spoke.\n\n\"I wonder if you've ever given any thought to volunteering for something like that, Weaver? The kids would be absolutely thrilled to have someone of your caliber teaching them.\"\n\nWeaver took a slug of his scotch and water then spoke with a sigh. \"No, I've never given any thought to it,\" he responded glumly.\n\n\"Well, it would also be a way of giving something back...to the boxing game, I mean,\" Bob suggested.\n\nSuddenly the sad figure of a man became animated. \"Give something back! HELL, hasn't it taken enough? It took everything that ever meant anything to me. Respect, fair play, huh,\" he smirked with agitation. \"What the hell could I teach kids about that stuff? I'm just a washed up pug who, at one time, thought he was something special.\"\n\nHe threw back the last of his drink. \"Look,\" he said rising from his chair. \"Thanks for the offer, but no; I'm not interested. Thanks for the drink,\" he said before walking out of the bar.\n\n\"Well that could have gone better,\" remarked Bob.\n\n\"You got more out of him than I did,\" Arlene responded.\n\n\"I see what you mean about him. I thought sure he'd jump at a chance to get back into boxing, even if it was just teaching kids. I wasn't expecting that reaction at all.\"\n\n\"I don't know what it is, Bob, but when I saw how he jerked away from that waitress after the fight, I just had to find out more about this guy. His reaction to your proposal just now, makes me even more intrigued.\"\n\n\"Arlene it's none of our business. We should leave the man alone. He obviously doesn't want us prying into his life.\"\n\n\"But, Bob, what if we could help him?\"\n\n\"Help him...how?\"\n\n\"I don't know. That's why I'm trying to find out as much about him as I can. I won't know how to help him until I know his story.\"\n\n\"What makes you think you could help him, even then? Look, Arlene, the guy's obviously hurting big time. I kind of like him and I'd like to help him too, but by the way he's acting, I think bringing up the past would just mean more pain for the poor guy.\"\n\n\"I can't help it, Bob. I've got to see if there isn't something I can do for him.\"\n\nBob sighed. He really thought just leaving Weaver alone was the best thing they could do for him, but if she was determined to try and help he'd at least like to give her support.\n\n\"Have you talked to Derick Hoover?\" he reluctantly asked her.\n\n\"Derick Hoover? No, why? What could he do?\"\n\n\"He's a trained investigator, Arlene. Hell, he does all kinds of research for the company. He's uncovered shady business transactions, corporate cover-ups, tax fraud...all kinds of things. Maybe he can find out more about what happened to Weaver.\"\n\nArlene's eyes lit up with a big smile.\n\n\"Bob you're a genius. I never thought of him.\"\n\n\"Just don't get him in to trouble; make sure he knows it isn't company business,\" he reminded her.\n\n\"Oh I will. I'll pay him to work on his own time if he'll do it.\"\n\nWhile Arlene took a moment to think about how to approach Derick, Bob took advantage of the silence to think about asking her out on a real date. What he said about boxing teaching him self-confidence was correct in almost every aspect of his life, except one...women. They didn't hang around the boxing ring much. He never had any sisters, and except for a couple frat parties in college and few one-night-stands when he was in the Navy, he had no experience with the opposite sex.\n\nHe wanted Arlene to like him and wondered if he'd push her away by asking her out so soon; maybe I'll wait until next week to ask her, he thought, but just then...\n\n\"Bob, I want to thank you for all your help.\" She interlocked her fingers, placed her elbows on the table, and rested her chin on top of her hands as she looked into his eyes. \"I like you, Bob. I don't know why I never noticed what a really nice guy you are before now, but I'd like to make up for lost time. Would you like to go out some time?\"\n\n\"I would love that,\" he responded trying to hide his nervousness. \n\n\"You know where I'd like to go? She coyly asked.\n\n\"You name it,\" he responded.\n\n\"To the gym to watch you with the kids,\" she told him.\n\nOut of all the places she could have named for their first date, the gym wasn't even on his list. He looked into her face. Was she kidding? \n\n\"The gym? That's where you want to go on our date...really?\"\n\nArlene gave him a large smile and rapidly nodded her head in the affirmative. \n\n\"Just now, when you were talking to Weaver, you looked so proud when you explained what the place meant to the kids. I want to see it for myself.\" \n\n\"Are you sure?\" he asked again. \"You know it smells in there and some of the kids are kind of rough around the edges.\"\n\n\"I want to watch,\" she confirmed. \"I want to watch you. I want to see how you work with them. Do you ever get into the ring yourself?\"\n\n\"Sure...well, not to fight anymore. I'll do a little sparring with some of the kids but that's it.\"\n\n\"I want to watch.\"\n\nHe studied her smiling face. She was serious...\n\n\"Weren't you the one who said boxing was barbaric?\"\n\n\"Yeah,\" she said lowering her eyes. \"I did apologize for that. I...I guess...well, it's the way you talk about it. I guess you've made me see it from a different perspective. I'm not saying I've changed my mind completely but maybe I should learn a little more before condemning it.\"\n\nAgain he studied her face, looking for any sign of insincerity. If there was any, he couldn't find it.\n\n\"Okay, you got it; anytime you want. You just name it,\" he excitedly proclaimed.\n\n\"How about Friday night; can you pick me up?\"\n\n\"Sure; seven o'clock okay?\"\n\nIt always seemed a little strange to Bob. He could step into a ring with some guy he knew was going to try and beat him to a pulp and be cool as a cucumber, but never could he shake his anxiety in the company of a woman. \n\n***\n\nShe probably didn't know it but as far as he was concerned, the gym was the best place in the world for their first date. As soon as they stepped inside he started to relax.\n\nFor Arlene it was just the opposite. The environment was way out of her comfort zone and she unconsciously tightened her grip on his arm at the sound of the first 'wolf' whistle. \n\n\"Hey, hey,\" Bob spoke loud enough to be heard over the usual noises. \"What have I taught you guys about respect?\"\n\n\"Sorry, coach!\" came voices from several locations around the ring. \"Sorry miss.\"\n\n\"Here,\" he said walking her over to some metal folding chairs. \"Have a seat. I have to go change. I'll be back in a minute.\" With that he disappeared into another room. \n\nArlene nervously sat watching the boys working out when one of them approached her. She guessed him to be about twelve or thirteen. Sweat poured from his matted hair into his eyes and down his face. \n\n\"Are you Bob's old lady?\" he asked.\n\n\"His old lady?\" she enquired.\n\n\"Yeah, his dame, you know. Is he sweet on you?\"\n\nShe couldn't help the smile that stretched across her face. She leaned forward and crooked her index finger in his direction. \n\nThe young boy leaned in to hear her reply.\n\n\"I'm working on it,\" she whispered. Then she put her finger to her lips with a, \"Shhhhhh, but don't tell him.\"\n\nThe boy raised his head with a crooked smile and nodded showing his understanding. \"Sure thing lady,\" he responded before returning to his workout.\n\nArlene had to catch her breath as her co-worker re-entered the gym. She had never seen him in anything but a suit before. He was always handsome but everyone wore suits in her world. The man now entering the room wore a dark grey, short sleeve sweat-suit. His black wavy hair was messed up and hanging down over his eyes from pulling the top over his head. His chest completely filled out the top of the fabric but hung loose around his midsection. The short sleeves fit snugly around his well-defined biceps. \n\nSuddenly the room of about thirty boys turned as if they were his army and he was their general. \n\n\"Okay, guys. Before we get started I want to introduce you to a very special lady. Her name is Arlene and she's going to watch you train tonight so I want you all on your best behavior...understood?\"\n\n\"Yes coach,\" sung out his choir. \n\n\"Hey coach, does that mean we can't scratch our balls tonight?\" \n\nThe crude remark brought nervous laughter from the group.\n\n\"No,\" he responded while repressing a chuckle. \"But you have to keep them inside your pants while you do it.\"\n\nBob's retort brought even more laughter from everyone, including the lady in the metal chair. \n\nHe walked over to her. \"I told you they were a rough bunch,\" he offered.\n\n\"I'm a big girl, Bob. I can take it. Now you go do your thing and don't worry about me.\"\n\nFor the next two hours, Arlene hadn't even noticed the discomfort of the hard metal supporting her. She watched as the man she admired more and more worked his magic. He cared about and respected the kids; in return they admired and respected him back. \n\n\"Okay guys,\" he yelled while clapping his hands in the air. \"Time to call it a night.\"\n\nHis announcement yielded several groans of disapproval from his tired but inspired troops.\n\n\"Come on now, everyone hit the showers...now!\" he decreed. \n\nAs the kids headed for the showers, Bob walked over and sat down next to his guest. It was still early so she happily accepted his invite to go out for a drink when he was done closing up. He had to make sure the gloves and other equipment was picked up and put where it belonged, then grab a quick shower before they could leave. \n\nThe kids said goodnight one by one as they left. Bob locked the doors behind the last one. \n\n\"Let me grab a quick shower and I'll be right out,\" he told her. \n\nBob retreated to the locker room and quickly stripped. He was tired. He knew the kids were showing off in front of his guest; as a result they had given him a good workout. He turned on the shower, adjusted the water, and stepped inside the rising mist of steam. \n\n\"Oh God, there's nothing like a nice hot shower,\" he muttered to himself. He put a generous amount of shampoo in his hand, closed his eyes and vigorously worked it into his scalp. Thoughts of Arlene stirred a daydream and he smiled as the exhilarating water pummeled his muscular physique.\n\nWith eyes still shut, Bob stepped under shower head to rinse off, completely unaware of the nude woman who slipped in behind him. \n\nThe soft touch of femininity against his water-soaked skin quickened his pulse. He turned and looked into her smiling face. \n\n\"I thought you might need some help washing your back,\" she cooed. \n\nSurprised, he hesitated for a second and watched as streams of water meandered down the hills and valleys of her magnificent figure. His body responded. His male member grew until the flesh was stretched almost to the point of pain. He put his hand around the back of her head and gently pulled her willing lips to his own. \n\nTheir bodies touched and Arlene felt his excitement rubbing against her stomach. \n\nAs they broke their kiss and gazed into each other's eyes, she reached down and delicately slid her slim fingers down his shaft and along his balls. \n\nBob closed his eyes and let out a small groan of erotic pleasure. He had wanted this for so long; he wondered if it was really true or just another day dream. Then he smiled knowing it was real this time.\n\nArlene grabbed a bar of soap and started rubbing it in circles around the hair on his chest. She worked it into a slippery lather before spreading her attentions to other areas of his upper torso. \n\nBob was in heaven as her smooth, silky hands massaged his tired muscles. Seductively she maneuvered around him, pressing her body to his, slipping and sliding in the lustrous soap suds. \n\nArlene laid the soap down and clasped her hands behind his head. Again their bodies slithered together in an enticing dance of sexual delight. \n\n\"I'm on the pill,\" she assured him. \n\nBob leaned against the shower wall for support and lifted Arlene by her waist. She wrapped her legs around him as he lowered her, impaling her womb with his inflamed cock. She moaned as he used his strong arms to move her in harmony with each thrust. Heightened by the slick luster of bubbly foam, their glossy smooth skin adjoined with slippery sensations of lust and passion. \n\nCries of euphoria echoed from the shower walls as they each erupted in ecstasy. Their naked flesh pressed together through the soapy froth as they held one another tightly, struggling for breath. \n\n\"Wow,\" wheezed Arlene. \"It's been a long time but that was worth waiting for.\"\n\n\"Ditto,\" he replied still breathing hard. \n\nThe rest of the evening was filled with food, drinks, and laughs. After dropping Arlene off at her door and collecting a passionate kiss, Bob drove home with dreams of a future with the woman he had secretly admired for so long.\n\nFor the next two weeks, the enraptured couple were busy getting better acquainted; no further efforts were made by either of them to contact Weaver. Arlene; however, did have the company's investigator working to solve the mystery of the solemn man's broken heart, on his personal time.\n\nAt work, rarely did the happy couple get to talk. Only once had they been able to coordinate their schedules, making it possible to have lunch together. It was Friday and Arlene was looking forward to spending the weekend with her new beau when her PA's voice came over the intercom.\n\n\"Arlene, Bob Rawlings is on line one.\"\n\n\"Thanks, Carolyn.\" Her heart started to flutter even before she could hit the button. \"Hey handsome, I was just thinking about you.\"\n\n\"You were, huh. Hell, I'm always thinking about you,\" he replied with a laugh. \n\n\"I hope you're not calling to cancel our plans. I'm looking forward to dinner.\"\n\n\"No, nothing like that; I just thought you'd like to know who showed up at the gym last night.\"\n\n\"Who?\" she asked before thinking but before he could answer it struck her. \"Wait a minute...no, not Weaver?\"",
        "\"None other,\" he responded.\n\n\"Oh my God, what did he say? Is he going help you?\"\n\n\"I don't know. He didn't say anything. I was in the ring working one of the boys with punching mitts when I saw him standing in the corner by the door. By the time we were finished he was gone.\"\n\n\"What do think he wanted?\"\n\n\"Beats me but I don't think he would've come around if he wasn't at least considering my offer. In spite of what he said at the bar about boxing taking everything he loved, once something gets into your blood it's hard to shake.\"\n\n\"Wouldn't it be wonderful if he started working with the kids like you do?\"\n\n\"Well, I'm not getting my hopes up,\" Bob replied. \"From just the little we talked, he seems very bitter but we'll see.\"\n\nThey talked a little more about their dinner plans but had to get back to work. Not more than a few minutes after she hung up with Bob, Carolyn told her she had another call holding. It was Derick Hoover, the investigator. \n\n\"Derick, did you get something?\" she asked with eagerness.\n\n\"Well, I wasn't able to come up with much. There must be a dozen different stories about why this guy quit the ring but not one can be confirmed. I did get something for you though.\"\n\n\"What,\" she excitedly asked.\n\n\"The whereabouts of his former trainer, Eric Schaeffer; if anyone knows the truth it would be him.\"\n\nArlene felt a tingling all over as she thought about finally uncovering Weaver's mysterious past. \"He's still alive? Where; where does he live?\" \n\n\"Yeah he's still alive. He's retired but he's still alive. He's only in his early sixties, Arlene. He lives about three and a half hours from here in Grand Rapids, Michigan. I was going to call and ask him his version of the story but I thought maybe you'd like to do that yourself.\"\n\n\"I'm not going to call him, I'm going to go see him,\" she retorted with excitement. \n\nArlene got the information and asked Derick to keep checking. \n\n\"How about his wife?\" she asked. \"Have you tried looking for her?\"\n\n\"Yeah but she seems to have dropped off the face of the earth. I checked under her social security number, her married name, and her maiden name...nothing. I checked for marriage licenses, birth certificates, and death certificates...I got zip.\"\n\n\"Well, keep checking, okay Derick? Maybe we'll get lucky,\" she told him sounding hopeful. \n\n\"Will do, Arlene.\"\n\nAfter hanging up with Derick, Arlene was going to call Bob with the good news but decided to wait and tell him at dinner. By the time they got to the restaurant she was bursting at the seams and could hardly wait to be seated before blurting it out.\n\n\"Guess what?\" she started.\n\nBob knew something was up. He could see she was excited about something from the minute he picked her up. \"What?\" he inquired.\n\n\"Derick found Weaver's trainer. His name is...\" her words hung in the air while she dug the information from her purse, \"Eric Schaeffer. He lives in Grand Rapids. I'm going to drive up there and talk to him; want to go with?\"\n\nThe name struck a familiar chord with Bob. \"Eric Schaeffer, yeah, I almost forgot about him. He pretty much disappeared too. He was the one telling everyone Weaver was sick.\" \n\nBob really wasn't comfortable digging into someone's past like that, especially someone who just wanted to be left alone.\n\n\"I don't know, Arlene.\"\n\n\"Oh come one, Bob. I thought we could make a weekend of it; maybe stay the night in a motel along Lake Michigan.\"\n\nOkay, he wasn't too keen on digging into Weaver's past but he wasn't about to turn down an invitation like that. \"Well...since you put it like that...\" he countered with a smile.\n\nThe years hadn't been kind to Eric Schaeffer. He lived in an old, rundown apartment building in one of the tougher neighborhoods of the city. His fingers were bent and twisted with Arthritis; poor nutrition and years of self-inflicted physical abuse and neglect had also taken its toll on the rest of his body. He appeared to be years older than he actually was.\n\nAt first he had refused Arlene when she called asking to talk to him about Weaver, but changed his mind when she offered to pay; two hundred dollars was the settled amount.\n\nBoth Bob and Arlene winced as they walked inside the small studio flat that was now the former trainer's world. There was a sour stench in the air and it felt clammy. The old hardwood floor was stained and sticky. On a small table in the corner, next to the only chair in the room, was an empty bottle of Jack Daniels. Neither of them took their host's offer to sit, saying they'd been sitting in the car and preferred to stand.\n\n\"Where's the money?\" he grumbled while sitting down on the dirty sheets of his unmade bed. \n\nArlene handed him an envelope containing ten, twenty dollar bills. \n\nThe old man coughed with a sick sounding wheeze before counting the money. \"Okay, what do you want to know?\"\n\n\"The real story,\" said Bob. \"Why did Weaver quit the ring?\"\n\n\"Because of his damn wife, that's why,\" Eric growled with contempt. \"The whore got pregnant with another man's baby and left him. Weaver insisted on having her there at the training camp. We all told him to leave her at home; he needed to concentrate on training for the fight but he was so damned in love with that bitch he couldn't stand to be away from her, not even for a crummy month. Then, four days, four lousy days before the fight she disappears. He wouldn't train until he knew where she went. I finally had to tell him she ran off with her lover. I tried; I tried to get him back in the ring. I told him to make his anger work for him, use it in the ring on his opponent, but he wouldn't listen. He didn't have the heart to fight after that. Next thing I knew he was gone too. He just up and vanished into thin air. I never saw him again.\" \n\n\"Well we've seen him,\" Arlene revealed before Bob could stop her.\n\nThe bent old man looked at her in shock. \"You've seen Weaver?\"\n\n\"Yeah, that's why we're asking about him.\"\n\nThey both could see his body tense up. \"Is he...is he alright?\" Eric asked as tears welled up in his eyes.\n\n\"Yeah,\" replied Arlene. \"He's a little pissed off at the world but physically he seems okay.\"\n\nA tear broke loose and rolled down his leathery, old cheek. \"Tell him I'm sorry,\" he sniveled.\n\n\"Sorry; for wha...\"\n\n\"Come one, Arlene,\" Bob said, interrupting her. \"Can't you see how hard this is on him? We're stirring up a lot of bad memories. Let's just go.\"\n\n\"But...\"\n\nBob took her by the arm and gently nudged her out the door before she could protest.\n\n\"Bob, I had more questions,\" she told him showing her agitation. \n\n\"Look, we found out what we wanted to know. The stories about Weaver's wife leaving him were true. What else is there? That old man in there was hurting big time. Didn't you see his tears? What was the sense of ripping open more old wounds?\"\n\nHe was right, of course. It explained Weaver's bitterness and his reluctance to have anything to do with members of the female gender. Still, she wondered why Eric said he was sorry. Sorry for what? \n\nAlthough she knew that question would haunt her, she protested no more. They had a wonderful evening planned in a beautiful hotel right on the lake and she didn't want to ruin the mood. \n\nTheir room was on the fifth floor and faced the lake. The sun was low in the western sky and already forcing its glowing colors upon the surrounding clouds. \"Oh Bob,\" Arlene said, walking onto the balcony. \"Look at this view. It's breathtaking.\"\n\n\"I agree,\" he said.\n\nShe looked back through the glass sliding doors and saw him standing in the room staring at her. \"No silly,\" she said with a smile. \"Not me. Come out here and take a look.\"\n\nBob wandered outside and put his arms around her. She laid her head on his shoulder and together they watched as a flaming red sun lit up the sky with luminous colors while slowly descending into the quiet waters of Lake Michigan.\n\nAs lights from the surrounding harbor glimmered against the twilight Bob took Arlene in his arms and kissed her. \"What do you say we take a shower, change clothes, then find a nice restaurant?\" he asked.\n\n\"Do I get to wash your back?\"\n\n\"You can wash anything you want,\" he replied.\n\n\"Ooooh, you have a deal,\" she remarked.\n\nAt dinner, they talked about everything and nothing. Work was the only taboo subject. It was almost midnight by the time they got back to their motel room. \n\nAs Bob opened a bottle of wine he'd purchased on the way back from the restaurant, Arlene strolled back out onto the balcony. The night air welcomed her with a warm summer breeze. Below she could hear the sound of the waves lapping at the beach and above, pale yellow light from the full moon shown down and danced a path that skipped along the top of the water.\n\nAlmost lost in the fairytale-like setting, she didn't hear Bob approach but felt his presence and turned.\n\n\"Beautiful, isn't it,\" he commented while offering her a glass of wine. \n\nArlene took the glass and stared into his eyes. What was happening to her, she wondered? She'd certainly had her share of boyfriends but they were really more like fuck-buddies. Never losing sight of her career, she always kept the romance in her relationships to a minimum. If she felt whatever boyfriend at the time was getting too serious she'd cut him loose.\n\nBob was getting past her defenses; what's more, she was letting him. She held her glass to one side and reached for the back of his head with the other hand. Slowly she gently pulled until their lips touched. It wasn't simply a \"pre-sex\" type of kiss. It was tender and loving; maybe too loving, she feared. Was she losing control or surrendering? \n\nNeither had taken a sip of their wine yet, but without saying a word, Bob took her glass and set them both down. Reminiscent of an old movie, he swept her up in his strong arms and carried her to the bed. \n\nArlene felt her heart rapidly beating as Bob slowly undressed her. She tingled all over at his touch. She closed her eyes and allowed his tender kisses to take her away to a land of castles and prince charming. A land she dreamed of as a teenager when she wondered what it would be like to be in love. \n\nInvoluntarily her body shuddered as his tongue caressed her sensitive nipples. She was on fire with passion. Her back arched and she wrapped her arms around his neck as he slipped this throbbing cock inside of her. Screams of pleasure filled the room as they came in blissful rapture. \n\nIt was only the first of several such loving interludes they would experience before drifting off to dreamland, wrapped in one another's arms.\n\n***\n\nThe following Monday at work, Arlene called Derick as she and Bob had discussed. \n\n\"Hi Derick,\" she greeted as he picked up.\n\n\"Hi, did you get to talk to that guy over the weekend?\"\n\n\"Yes, Bob was with me. Thanks for tracking him down, Derick. He pretty much confirmed what everyone said, Weaver's wife ran off with another guy; in fact she was pregnant with the other guy's kid,\" she sadly reported.\n\nDerick was sorry to hear that. Even though he'd never met Weaver, during his investigation he felt like he was getting to know him. He was hoping to hear some encouraging words.\n\n\"That's too bad,\" he responded to Arlene's statement. \n\n\"Yeah,\" she replied. \"I guess there's no reason to keep searching for anything else. Bob thinks we should just let it drop. He says there's no sense in stirring up anymore bad memories for anybody, especially Weaver. He's probably right.\"\n\n\"You don't sound like you're too sure you agree.\"\n\n\"Well it's...\" she sighed, \"I don't know, it's just that I had such high hopes of helping him, you know. Bob's right though. That old man we saw was actually crying when we left. I guess it's better to just let it go,\" she admitted. \n\n\"Okay, Arlene, if you say so.\"\n\n\"Yeah, it's for the best. Stop by my office with a bill and I'll write you a check.\"\n\n\"There's no charge, Arlene; it was my pleasure,\" he told her.\n\nShe thanked him again and hung up with great disappointment that she was unable to help Weaver. From the moment she decided to make him her pet project, she had fantasized about getting him and his wife back together to live happily ever after. Now she had to face the fact that was never going to happen. \n\nDuring the rest of the week, Arlene found herself in uncharted waters once again. She wanted to spend every minute with Bob but they both still had separate lives to lead. She found herself feeling jealous of his involvement with the CYO. Yes, they stole a lunch together that Wednesday and talked on the phone now and then, but he spent his week nights at the gym instead of with her. She knew she had no right to be jealous but she couldn't help herself, she wanted to be with him.\n\nBob felt the same way but he had obligations. He felt responsible for the kids he worked with, each and every single one of them, and he wasn't going to let them down. \n\nThursday night he was busy in the ring, refereeing a sparring match. He had just blown his whistle to indicate the start of another round when he caught a glimpse of a figure standing by the door. He recognized Weaver immediately. Bob didn't want to scare him off so he just kept doing what he was doing, but he tried to keep an eye on the welcomed visitor. \n\nWhen he looked by the door again, Weaver was gone, and for a moment, Bob was disheartened. Then he spotted him again sitting in one of the ringside chairs. \n\nThree minutes were up. Bob blew his whistle to signal each of the young boys to their corner. \n\n\"You're letting that kid in the green trunks backpedal all around the place,\" Weaver offered. \"He should be cutting the ring short, not retreating.\"\n\nBob was elated but tried not to show it. Okay, he thought, be casual. The hook was set but he knew how skittish Weaver was. He learned that the day they met at Jerry's Place. He knew he had to be careful. The last thing he wanted to do was alienate him again. \n\n\"Actually, Weaver, that's something I think everyone would like to learn. You were the master at it. Do you think you could come up and show the boys what you mean?\"\n\nWeaver sat; such a simple request, but for him it could be a defining moment in the rest of his life. What had drawn him there in the first place? For the last ten years he'd almost lived like a hermit. He had no friends, no one to talk to or associate with on any kind of regular basis. In fact, the guy asking him to enter a ring for the first time in a decade was the closest thing he had to a friend.\n\nMaybe it was finally time, he thought. He couldn't keep living the way he had been. \n\nWeaver stood and slipped gracefully between the ropes. \n\nBob extended his hand. \"Thanks,\" he said with a smile. \n\nThe former middleweight took his hand with a nod of his head.\n\nBob turned and rendered a mighty blast from the whistle that hung from his neck. \"Hey everyone, stop what you're doing for a minute and come over here.\" \n\nThe boys all gathered around one side of the ring.\n\n\"I want to introduce Chuck Adams, better known in boxing circles as Weaver; one of the finest middleweights ever to step into a ring.\"\n\nThat was high praise, in deed, coming from the man every kid in the place looked up to. Everyone was impressed. You could see it in their faces.\n\n\"Really?\" questioned someone.\n\n\"Hey Weaver,\" a young voice called from the crowd. \n\nBob continued. \"I've had Dale and Alan sparring for a couple rounds and Weaver picked up on a problem Dale is having with his footwork. I want everyone to pay attention. Weaver,\" he said directing his attention back to the sinewy figure. \"I'm going to turn it over to you. Tell them what you told me; show them how it should be done.\"\n\nWeaver looked at Bob with alarm. He wondered if he really wanted to do this. He was tempted to simply walk away, but...\n\n\"They're here to learn,\" Bob told him. \"This is a classroom, your classroom, and nobody's better prepared to teach them than you.\"\n\nWeaver took a breath trying to calm his nerves. \"Alright you two,\" he said, spreading his arms out in the direction of two boys. \"Come here.\"\n\nBoth boys joined him in the middle of the ring.\n\n\"Okay, you; Dale is it?\" The boy in the green trunks nodded. \"You're letting your opponent here be the aggressor all the time. He's throwing lefts and rights at you like he owns you, and right now he does. Now you're doing a great job of blocking but you're constantly on defense. Most of the punches you throw are counter punches. Pro fighters wear eight ounce gloves and you can knock your opponent out with a counter punch just as easy as any other, but these things,\" he said taking a hold of Dale's sixteen ounce gloves, \"are more like pillows. You're never going to knock anyone out with them. You have to win a match on points, and in a close fight the aggressor is always going to take it. If you want to win, you have to take control of the fight.\"\n\nHe faced the other boy and took his fighter's stance. \"Okay, let me show you. Go ahead young man; come at me like you did with him.\" \n\nAlan looked over at Bob who gave his approval with a nod. \n\nThe fourteen year old aggressor snapped a jab at Weaver's head but instead of moving to the left like he did with Dale, Weaver ducked under the punch while stepping forward and to his right, effectively cutting off the boys charge. \n\n\"See what I mean,\" he explained. \"Now he has nowhere to go and he's open for a right hook to the ribs,\" he said, feigning the punch.\n\n\"Oh wow,\" he heard someone say from his audience. \n\n\"Okay, Dale, you try it. When he goes to his left, you go to your right and take a step forward. When he goes right, you go left.\"\n\nBoth boys met in the middle of the ring and again started to spar but this time it was different. Dale was a good student and moved as Weaver had showed him. Within seconds he had Alan backing up.\n\n\"That's it...see. He was dancing you around in circles before; now you've got him on defense. You're now in control of the fight. It's called cutting the ring short. Oh, and one other thing. You're very good at using your right hand to block, but it's like using your queen strictly for defense in a game of chess. You're not taking full advantage of your most valuable asset. Your opponent should be respectful of that right hand. How are you going to teach him to respect it if you never throw it? I always preferred slipping a punch or getting under it. That way I can use both hands for offense at the same time.\"\n\nImmediately he had captured the attention of the young pugilistic hopefuls. \n\nBob could see the ex-prize fighter was starting to enjoy himself and wanted to keep it going. \"That's also how he got the name Weaver,\" he revealed to the crowd of boys.\n\n\"Weaver, do you think you could give me a hand tonight; maybe work with some of the kids in the ring while I help them with the heavy bag?\" asked Bob.\n\n\"Sure,\" he said, already showing Alan how to better protect his chin.\n\nFor the next hour, Bob watched as the kids lined up to work with his new assistant. Weaver might not know it just yet, thought Bob, but that's what he was. The kids loved him and he was great with them. \n\nAs Bob was locking up he offered Weaver use of the showers then out for a drink. \n\nHe declined, saying he hadn't any clean clothes but asked for rain check. That night, as Weaver returned home, he grabbed a beer from the fridge and sat in his sparsely furnished apartment. Over the last decade, he had gone through more emotional turmoil than any man should have to endure in a lifetime. After his wife left him for another man, he'd given up on life. Despair, depression, even thoughts of suicide had haunted him time and time again. Loneliness was his constant and only companion. The cruel irony was, as empty and hollow as it made him feel, it also protected him from being hurt again.",
        "He had actually enjoyed himself for the first time a very long while. He liked Bob and he liked the kids, but they were asking him to give something of himself and he wasn't sure he had anything left to give. \n\nThe next morning Arlene hadn't even had a chance to sit down at her desk when her phone rang. It was Derick Hoover. After the greetings, he got down to the reason for his call.\n\n\"Arlene, I know you said to drop my investigation but...well, I take pride in my work and it pissed me off when I couldn't find anything on Weaver's wife, so I kept looking on my own.\"\n\n\"Derick, please don't worry about it,\" replied Arlene. \"I'm sure it's for the best anyway.\"\n\n\"Arlene, I'm pretty sure I found her.\"\n\n\"What?\" she bellowed. \"But...\"\n\n\"Sorry, it was a challenge. I couldn't stop until I came up with something.\"\n\n\"Well...where is she? Have you talked to her?\"\n\n\"No, I haven't talked to her. I thought I'd tell you first; see what you wanted to do. She's in Peoria.\"\n\nShit, thought Arlene, that's only two and half hours from here. But what would Bob say? He was pretty firm about snooping into Weaver's past anymore.\n\n\"Are you sure it's her?\"\n\n\"Well, somebody would have to talk to her to confirm it but yeah, I'm pretty sure. It was one hell-of-a puzzle but all pieces seem to fit. All I had to start with was her married name, Christine Adams. I wasn't sure if she was still using that name, her maiden name, or if she married her lover and took his name, but the easiest way to track someone is through their social security number. That stays the same no matter what name is on it. So, I needed something with her maiden name. I began searching for their marriage license and came up empty. Finally I ran across an old newspaper announcement that said she and Weaver were married in Vegas. I had been looking in Illinois. The paper gave her name as Christine Evans, so I tried looking up all the usual documents; birth certificate, social security, driver's license, death certificate, census records...all that stuff. Again, I came up with zip. Shit, it was like she didn't exist.\"\n\nArlene was fascinated with Derick's story. She listened intently.\n\n\"I went back and tried looking up the marriage license again, and again came up with nothing. The newspaper article was in the sports section and didn't give an actual date that they had been married. After doing some more digging, I found a Charles Adams who married Kristyna Evanishyn. Did you know she wasn't born in the United States? She was born in Ukraine. She was three when her parents came over with her.\"\n\n\"No, I really don't know anything about the woman except what the old man told us; that she cheated on Weaver, got pregnant, and left him to be with her lover.\"\n\n\"Well it doesn't look like she stayed with him for very long. From what I can tell it's been just her and the kid,\" reported Derick.\n\n\"She must be ashamed of what she did. That's probably why she's been hiding all this time,\" Arlene said with distain. \n\n\"I don't know if she's really been hiding exactly,\" he responded. \"It's just that she has two last names. Her family's last name is actually Evanishyn, but when they immigrated here her dad shortened and Americanized it to Evans. The problem was they never had it legally changed, so although everyone knew them as Evans, all their legal documents, including her social security card and marriage license were under her real name. Once I found out about the name change everything else just fell in place.\"\n\n\"So you're pretty sure you've found her. This isn't just a guess?\"\n\n\"No, I'm positive it's her, Arlene. Now the question is, what do you want to do about it? She works as a waitress and lives in an apartment in Peoria with her son.\"\n\nArlene was thinking about Derick's question when she heard Carolyn over the intercom.\n\n\"Arlene, Bob is on line two.\"\n\n\"Okay, thanks,\" she responded. \"Derick, let me think about this, okay? Don't do anything right now. I'm not sure what I want to do yet.\"\n\n\"No problem,\" he countered. \"If you decide you want to see her just let me know. I have her address. Otherwise, I'm going to consider my job done. I just couldn't let it go half finished.\"\n\n\"Thanks, Derick; you are a real professional,\" she told him. \"I really appreciate your efforts. I'll let you know what I decide.\"\n\nThey said their goodbyes before Arlene punched line two.\n\n\"Hi handsome.\" \n\n\"Hi gorgeous; how's my favorite lady this morning?\"\n\n\"Well, right now I'd rather be in bed naked and with you inside of me, other than that, okay I guess.\" Too bad he couldn't see the smile on her face, she thought.\n\n\"That makes two of us, Gorgeous. Hey, can you break for lunch about one? I've got some really exciting news to tell you.\"\n\nArlene tried to probe him about what had him so thrilled but he wanted to tell her in person so they made a date for lunch at the dinner around the corner. \n\nAt one o'clock Bob stopped by her office to escort her for the three block walk to the restaurant. As soon as the waitress left the table with their orders he eagerly started the conversation with a rhetorical question.\n\n\"You'll never guess who showed up last night at the gym.\" \n\n\"Bob, you're like a little kid at Christmas. That can only mean one thing, Weaver.\"\n\n\"Okay, Mrs. Sherlock Holmes; yes, you're right,\" he quipped. \n\n\"Did he say anything this time? Did you get a chance to talk to him?\"\n\n\"Oh, better than that; not only did we talk, he got in the ring and started working with the kids.\"\n\n\"What?\" Arlene's smile now matched Bob's. \"Honey, you're amazing. How did you get him to do that?\"\n\n\"I really didn't do anything. Remember what I said before? Once boxing gets in your blood it's hard to shake. Well, I think he just needed something in his life and he couldn't turn his back on the sport anymore.\"\n\nThe waitress came with their coffees. Bob took a sip then continued with his enthusiastic dialogue. \"Honey, you should have seen him. He was great and the kids love him.\"\n\n\"Do you think he'll come back...maybe start helping you on a regular basis?\" probed Arlene.\n\n\"I sure hope so,\" he quickly replied. \"We talked a little last night after locking up. I'm pretty sure he'll be there again tonight. You said you wanted to help him, honey; well, I think you've done it.\"\n\n\"Me?\" she inquired. \"What did I do? I didn't do anything; you're the one who's helping him.\"\n\n\"Arlene, if you hadn't cared and started asking me what I knew about him, none of this would have happened. If this works out, he has no one to thank but you.\"\n\nArlene smiled with pride and humbly accepted Bob's accolades, but with reservations. Could she close the book on Weaver's life, missing a chapter...a big chapter? \n\nHe was training for the biggest fight of his career. He could have been the middle weight champion; why did she cheat on him during such a crucial time in their lives? Was there something more? Maybe if Weaver knew the circumstances...knew the reasons behind her betrayal, he could forgive her. Then he could truly get on with his life; maybe even find someone to share it with.\n\nShe wondered if she should tell Bob about Derick's information. What would he say? Shit...she knew exactly what he'd say...leave it alone. Don't stir up more bad memories. But what would be the harm in going down there and just talking to her...?\n\nBy the time they got back to work, Arlene was even more conflicted about seeing Weaver's former wife. According to her boyfriend, it looked like the ex-fighter was ready to pull his life together again. Still, if she could just talk to the woman...if only to satisfy her own curiosity? But what would she tell Bob? He'd have a fit if he found out. So..., she decided, I just won't tell him. I'll simply say I'm going to Peoria to visit a friend.\n\nOnce Arlene had made up her mind, she wasted no time getting a hold of Derick. \n\n\"I thought you might call,\" he said after answering. \"Since this morning I was able to get her phone number for you but I'm not sure I'd call her. It's been a long time and we really don't know what happened. I doubt she'll want to talk to some stranger over the phone about it. I think you'd stand a better chance in person.\"\n\n\"I agree,\" she told him. \"But it's a long drive; I hate to go all the way down there and find she's not home, or at work or something.\"\n\n\"Well, she doesn't make much money and she has the kid to support so I doubt that she does much gallivanting around. As for work, she works four to twelve, six days a week. She's off on Mondays.\"\n\n\"Derick, you're amazing,\" she said praising him again. \n\n\"All part of the job,\" he humbly declared, grinning through the phone.\n\n\"Okay, just one more thing...please, don't say anything about this to Bob.\"\n\n\"Why not? I thought you guys were in this thing together,\" he responded.\n\n\"We are...or at least we were when we talked to Eric, but he thinks we should stay out of it now. He doesn't want to dig around in Weaver's past anymore.\" \n\n\"Ah, I have to tell you, Arlene, I think you're making a mistake by going behind his back like this, but I'll keep my mouth shut.\"\n\n\"Thanks, Derick. I just want to go down there and talk to her. At least I'll know for myself if she's the evil bitch that old man said she was.\" \n\n\"What if she's not,\" he questioned.\n\n\"Well, I guess I'll just have to cross that bridge when I come to it.\" \n\nArlene couldn't believe how nervous she was, knowing she was going to lie to Bob. I know what he'd say if he knew what I was going to do, though, she told herself. Things are going to good between us to get into an argument over this.\n\nHer hand was actually shaking as she reached for the receiver. She dialed his extension and took a deep breath to steady herself.\n\n\"Bob Rawlings,\" he answered.\n\n\"Hi sweety,\" she cooed into the phone.\n\n\"Hey Gorgeous; this is a pleasant surprise. What's up?\"\n\n\"I just wondered if you had any special plans for Saturday.\"\n\n\"You mean besides ravishing your body all day?\"\n\n\"Yeah,\" she chuckled. \"I mean besides that.\" \n\n\"Well, I heard of a new Italian place in Rossmont. I was told the food is excellent and they make their own wines. I thought I'd take you there for dinner. Why?\"\n\n\"Oh, I'm sure that would be okay. I should be back by then. I'm going to Peoria during the day.\"\n\n\"Peoria; what's in Peoria?\"\n\n\"Ah, I...ah...I have a friend down there. She just called; she said she's feeling kind of lonely and um, I said I'd go down and visit for a little while. I should be back in plenty of time for dinner, though.\"\n\nBob thought she sounded a little weird, but it was hard to tell over the phone.. He told her to just call him when she got back and she promised she would. \n\nThat night Weaver showed up at the gym again, only this time he carried a gym bag with some workout clothes. Bob watched as he talked to the boys and explained the finer points of the gentleman's sport. \n\nAfter closing up, Weaver cashed in on his rain check from the night before. He followed Bob to a little neighborhood bar down the street from the gym. \"Zale's?\" he questioned, seeing the neon sign in the window on the way in.\n\n\"Yeah; Tony's brother used to own the place. When he passed away his kid took it over. \n\nThe two sat and talked over a couple beers. Bob was dying to ask where he'd been for the past ten years but didn't dare. Instead they talked about the gym and the kids. \n\nBefore leaving, Bob told him what a great job he was doing and asked if he'd be there Friday night. When Weaver said he would, Bob risked pushing a little harder.\n\n\"What about next week,\" he asked, \"and the week after that and the week after that?\" He wanted to get Weaver signed up as an official coach and trainer with the CYO. \n\nWeaver had already given it a lot of thought. It didn't take him long to tell Bob he'd be honored to donate his time.\n\n***\n\nArlene rolled on her side and waved her hand aimlessly, looking for the alarm clock. She hadn't opened her eyes yet, she was operating strictly by feel. Her fingers found their target and the incessant buzzing stopped. She pried open one eye; six a.m. \"Ugh,\" she groaned out loud. It was earlier than when she normally got up, even for work; of course she didn't work in Peoria. She showered then fixed some breakfast, put on her make-up, and was on the road by seven-thirty. \n\nAll the way down, Arlene couldn't shake the feelings of guilt she carried, for lying to Bob. She had the address Derick gave her, loaded into her car's GPS. As she followed its instructions into the parking lot, Arlene swore the voice was scolding her as it announced her arrival. There's still time to turn around, she told herself with a sigh of uncertainty. But then she'd never know why...\n\nShe walked up the stairs to apartment seven and rung the bell. Within a few moments the door opened and a dark haired woman stood inquisitively in the entrance. \n\n\"Yes, can I help you?\"\n\nShe wasn't quite what Arlene was expecting. Based on Weaver's despondency, she had a preconceived idea of a tall, exotic beauty with a killer body, but the woman standing in front of her was a couple inches shorter than she was. She was thin and had her hair pulled back in a pony-tail. She was rather plain looking but Arlene thought it was due to the lack of any make-up.\n\n\"Ah...excuse me, were you...ah, I mean...are you the Kristyna Evanishyn who was married to Chuck Adams, the prize fighter?\"\n\nThe woman's face took on a stern appearance as she sized up the intruder. \n\n\"Who are you; some reporter or something?\" she inquired with a snotty ring to her voice.\n\n\"No, no,\" Arlene quickly replied. \"I'm a friend of his. I just wanted to talk to you.\"\n\nNow the woman's expression turned wary. \"A friend...of whose?\" \n\n\"Weaver, your ex-husband,\" she answered.\n\nArlene watched as the color drained from the woman's face and she suddenly looked unsteady on her feet. \n\n\"Are you okay?\" she asked stepping into the apartment and helping the woman to a chair. \"Would you like some water or something?\"\n\nKristyna nodded; she was feeling light headed and was fighting to keep from blacking out.\n\nArlene quickly looked around and saw the kitchen. She rushed in and started opening cabinet doors until she found a glass then filled it from the tap.\n\n\"Here you go,\" she said handing it Kristyna. \n\nShe took a couple of swallows then lowered the glass and held it in her lap with both hands. She closed her eyes and took several deep breaths before taking some more. \n\n\"What...\" She was still breathing heaving and was finding it hard to talk. \"What do you mean you're a friend of his? You know where my husband is; he's alive?\"\n\n\"Yes, of course he's alive. He's living...\" Arlene stopped. This was just what Bob warned her about. She had no idea how evil this woman was or what she was capable of. She ripped Weaver's heart out once, she was not going to let her do it a second time.\n\n\"Ah...no, no I'm sorry but I'm not telling you where he is...\"\n\n\"What do you mean you're not going to tell me?\" Kristyna yelled. \"You have to tell me. He's my husband; he has a son he's never seen!\" She was becoming frantic.\n\n\"His son!\" Arlene's voice dripped with contempt after hearing the woman's claim. \"The way I hear it, the boy is the son of your lover; the guy you were cheating on Weaver, with.\"\n\nWithout warned, the woman jumped up and slapped Arlene hard across the face. In her entire life, she had never been hit; never slapped or even spanked as a child. She reacted with shock and fear. Her eyes widened as she felt the pain and quickly brought her hand to the side of her face.\n\nKristyna was filled with fury. \"How dare you come into my home and accuse me of such filth. Out! Get out of here!\" she emotionally cried before collapsing back into the chair. \n\nAlmost in a panic Arlene started for the door. As she reached for the knob she suddenly stopped. Something didn't make sense. The woman who was now sobbing in the chair did not resemble the description she and Bob were given by the old man in Grand Rapids. \n\nAgain she raised her hand and felt the heat emanating from her cheek as she wondered what to do. She turned and walked past the distraught woman and back into the kitchen. She saw an empty coffee maker on the counter and started searching.\n\n\"What are you doing?\" sobbed Kristyna. \"I told you to get out.\"\n\nArlene had already decided she wasn't going to let the woman intimidate her. Now it was time to put her, on-the-job, training to good use and take control of the situation. \n\n\"Sit down,\" she ordered. \"I'm going to make us a pot of coffee; then you and I are going to have a heart to heart talk.\n\nStill crying, but not so hard anymore, Kristyna grabbed a box of tissues and sat down at the kitchen table. \"Coffee filters are in the cabinet on your left,\" she said. \"The coffee is below you.\" She watched as Arlene went about her task. After finally composing herself she was able to find her voice again. \"Where did you ever get the idea I cheated on Chuck and that little Charlie isn't his son?\" she asked while wiping her eyes.\n\nArlene didn't answer right away. She had questions of her own. She grabbed two cups and started pouring the coffee. \"Kristyna, why did you leave the training camp just before Weaver's fight?\"\n\nThe two women sat and talked for almost three hours. Kristyna's story was diametrically opposite to that of Eric Schaeffer's and both ladies had tears in their eyes by the time they were finished. \n\nAs Arlene was getting ready to leave, little Charlie came running in. School was out for the summer and he had been playing with some of the other kids in the neighborhood. \n\n\"Hey mom, I'm getting hungry,\" he announced.\n\n\"Charlie, where are your manners? Don't you see we have a guest? Say hello to...\" That's when she realized she didn't even know the young woman's name.\n\n\"Arlene,\" she said. \"Arlene Reynolds.\"\n\n\"Hello Ms. Reynolds,\" he politely greeted her.\n\nIf Arlene had any doubts about Kristyna's story they were crushed when she saw the slim, brown haired boy with grey eyes. \n\n\"I'll fix you something to eat in a minute,\" Kristyna told her son. \"As soon as I say goodbye to Ms. Reynolds.\"\n\nNow friends, they walked to the door and out of the hearing range of young ears.\n\n\"Kristyna, do you trust me?\" asked Arlene.\n\n\"Yes, I guess so. Why?\"\n\n\"I want you to give me some time to figure this out,\" she explained. \"I know you've been waiting for ten years, but Weaver's had it rough too and I'm afraid you just showing up with little Charlie could push him over the edge.\"\n\nThe desperate woman reluctantly told her new friend she would wait before coming to Chicago but made Arlene promise she would call her often and keep her up to date with what was happening with her husband.\n\nArlene was having a hard time keeping her mind on the road as she headed back home. Now she really had a problem. She was expecting to meet the bitch in Eric's story, satisfy her curiosity, and return with Bob never being the wiser.\n\nObviously, that was no longer the plan. She knew she did wrong and was now going to have to admit her deception. Still, she thought, how mad can he get when he finds out the real story?\n\nLater that night, a nervous Arlene sat across the small table from the man she was falling in love with. She knew she hadn't been very good company. Her mind had been on other things all night. She was surprised Bob hadn't asked her about it. She also knew the longer she waited to come clean the worse it would be. The waiter had just set down their after dinner coffee.\n\n\"Bob, I...um, I have a confession to make,\" she stammered. \n\n\"Oh yeah,\" he chuckled, \"and what would that be?\"\n\n\"I...ah, I lied to you last week when I said I was going to Peoria today to see a friend,\" she quietly admitted.\n\nBob's demeanor suddenly changed and he looked at her with a serious expression. \"What do you mean, you lied. Where'd you go?\"",
        "\"I went to Peoria, but...it, ah...look I know you're going to be mad, but I went to see Kristyna, Weaver's wife.\" She had never seen Bob angry before; that was about to change.\n\n\"You what! His wife! How did you...we talked about this, damn it! You agreed, no more snooping, no more digging around in Weaver's past. What the hell, Arlene. Jesus!\" he exclaimed, trying to hold down his voice. \"For the first time in ten years, the poor guy's just starting to join the living again, and you...\"\n\n\"Bob, please...let me explain. It's not like his trainer said. She loves him, she wants to come to Chicago and be with him.\"\n\nBob couldn't believe what he was hearing. How could she do this? \n\nArlene saw his brow furrow. There was real anger behind his eyes and his words.\n\n\"I don't believe this. What the hell is wrong with you? Hasn't he suffered enough? No...you had to go behind my back and find the one person in the whole world who can make him suffer even more. The one person who ripped out the heart of one of the nicest guys I know.\"\n\nArlene knew he was going to be pissed but she wasn't expecting his anger to reach the level it did. \"Bob,\" she implored, \"will you listen to me, please? The boy is his, I saw him, there's no doubt about it, Weaver has a son.\"\n\nThat caught Bob by surprise but after everything he'd heard about Weaver's ex, he wasn't going to be so easily convinced.\n\n\"What do you mean, there's no doubt. You don't know he's Weaver's kid. How could you? What...you're going tell me you saw their DNA charts or something?\"\n\nArlene wasn't sure if he was so angry because she went behind his back or if he was afraid Weaver would be hurt more than he already had been. She suspected it was both, but she had to make him see that she was right to do what she did. She was sure everything was going to turn out for the best. \n\n\"Oh Bob, just one look; he has Weaver's build, his hair, and he has the same grey eyes. I'm telling you, Bob, all you have to do is look at him. His name Charles too, but she calls him Charlie.\"\n\nBob didn't want to listen to anymore; he was aggravated and disappointed. The waiter had already run his credit card. He signed the restaurant's copy of the receipt and added the tip. \"Come on,\" she said, abruptly standing, \"let's get out of here.\" \n\nThe ride back to Arlene's apartment was a quiet one. She looked out the side window to prevent Bob from seeing the moisture in her eyes. She knew her feelings for Bob were stronger than she'd ever felt for anyone, but she hadn't realized how strong they were until she was faced with the possibility of losing him.\n\nAlways the gentleman, he walked her to her door but declined her offer to go inside. \n\n\"I'm sorry, Bob. I'm sorry I lied to you, but...\"\n\n\"Me too,\" he said without letting her finish. \"I...I had high hopes for us, Arlene; now I'm not so sure. I can't even think about having a relationship with somebody I can't trust; someone who lies to me and goes behind my back.\" \n\nHe saw the tears in her eyes as he spoke but there was nothing he could do about it. He shook his head with sadness, turned, and walked back to his car.\n\nThat night, Arlene cried herself to sleep.\n\nThe following Monday, Arlene's phone rung bright and early once again as soon as she got into the office. She knew before picking it up, it was Derick. \n\n\"Good morning, Arlene.\" His greeting was cheery, not at all like her reply.\n\n\"Hi Derick.\"\n\n\"Ah oh, from the sound of you voice it didn't go too well. What happened, wasn't she home?\"\n\n\"No, no, she was home. We had a long talk,\" she said as she started to tell Derick about Kristyna's story.\n\nDerick listened with interest but could tell by the flatness in her voice, that something was wrong. He waited until she finished. \"Arlene, there's something wrong; what is it? Maybe I can help.\"\n\n\"I don't think there's anything you can do this time, Derick. She wants to come to Chicago. She wants him back. Bob would find out what I did sooner or later so I told him about it last Saturday, at dinner.\"\n\n\"Oh-boy,\" he commented. \n\n\"Yeah, oh-boy. I thought the good news would outweigh the bad but he was still pissed. I...I don't know, Derick,\" she said as she started crying again. \"I think I've lost him.\"\n\n\"I knew you were going to get into trouble. I know Bob, he respects strength but he hates dishonesty. You would have been better off telling him you were going and if he didn't like it he could lump it, rather than lie to him.\"\n\n\"I know, it's just...I...\" she sniffled. \"I wasn't expecting this. I figured she was going to be a bitch. All I wanted to do was see if she'd tell me why she dumped Weaver. I thought if I knew the whole story I might be able to tell him something that would help him get over her.\"\n\n\"I know, Arlene. You're intentions were honorable; it's just the way you went about it. You want me to talk to Bob, see if I can smooth some feathers?\"\n\n\"Thanks Derick, but I created this mess, I should be the one to fix it. I'll keep your offer in mind though...for a last resort, if that's okay. I can't lose him, Derick, I just can't. I love him.\"\n\n\"I know you do, and the best thing you have going for you is that he loves you too.\"\n\n\"Really, Derick. Do you know that for sure?\" she queried with some hope.\n\n\"I know that for sure,\" he confirmed. \n\nLater that night Weaver was already at the gym when Bob walked in. He briefly watched as the former pro-fighter passed on the knowledge and skills he'd learned from years of experience in the ring. Bob took great satisfaction in knowing he was, at least, partially responsible for the look of pride behind Weaver's time-weary eyes. \n\nEven after countless hours of thought and meditation over the weekend, Bob had no idea what to do about the trouble Arlene had stirred up. Why did she have to poke her nose into it, he angrily asked himself. After ten years of misery, the tortured soul of a man was just starting to enjoy life again; and now...\n\n\"Hey coach,\" a young voice came from behind him. \"Is Weaver going to stick around? He's a pretty neat guy.\" \n\nBob turned and smiled. It was the first time he had smiled since Saturday night. \"Yes, Jimmy, I'm hoping he'll stay permanently.\" \n\n\"Yeah!\" was Jimmy's exuberant reply.\n\nOver the next three weeks, Bob watched Weaver's miraculous transformation. Two or three nights a week they would go out for a beer after closing the gym. They talked about the boys, mostly. It was during one of those talks that Bob saw Weaver smile for the first time.\n\nEvery night Weaver was becoming more involved with the program; that meant not only teaching the mechanics of the sport, but being concerned with the boy's lives as well. Sometimes, over a beer, he would ask Bob about a certain boy's family life or aspirations for the future and Bob never disappointed him by not knowing.\n\nA bond was developing between the two men, a bond of trust, loyalty, and friendship; a bond Bob prayed would not be broken. He wondered if he was already betraying that friendship by not telling Weaver about his ex-wife. Even with the transformation, Bob knew his friend's past still loomed just under the surface. \n\nMeanwhile Arlene had her own problems. She had not talked to Bob since the night he left her standing in front of her door. She deeply regretted lying to him but would not let that derail her from her quest. She was convinced in Kristyna's love for her husband and knew in her heart they belonged together. \n\nAs each week passed, Arlene could hear the woman becoming more and more desperate in their phone conversations. She made a promise to Kristyna but had no idea how she was going to keep it. There was no way she would go behind Bob's back again. She still prayed he would come back to her, but one more betrayal and she knew that would never happen. \n\nShe had just finished talking to a growingly impatient Kristyna again and was almost in tears from not knowing what to do, when fate fell into her lap.\n\n\"Arlene, Bob is on line one,\" she heard over the intercom.\n\nArlene literally dove for the phone. \"Bob,\" she exclaimed. \"Bob, I'm so happy you called.\"\n\n\"Don't get too excited,\" he flatly said, taking the wind out of her sails. \"I'm just calling for that Kristyna's address. You said she lived in Peoria, right?\"\n\n\"Yes, but what do you want with her address?\"\n\n\"I want to go down there and talk to her.\"\n\nArlene could tell by the inflection in his voice that he hadn't changed his mind. He still believed Weaver's ex to be an evil woman who would hurt him again if given the chance. What did he want to talk to her about, she wondered? He wouldn't threaten her; that wasn't his style, but he might try to talk her into leaving Weaver alone. Suddenly she saw this as an opportunity.\n\n\"Bob, I won't give you her address but I will drive you down to see her,\" she stated.\n\nBob sighed. He knew Derick had to be the one who found Weaver's ex. He could just call him and get the address that way; truth was, he missed Arlene and this gave him the perfect opportunity to spend some time with her without having to swallow his pride. \n\n\"Alright, fine, you win,\" he relinquished. \"We'll take my car. I'll pick you up Saturday morning.\"\n\n\"Make it eight,\" she replied. \"I'll call and let her know we're coming so she'll be sure to be home.\"\n\nAs Bob hung up he still wasn't sure he was doing the right thing. Again he cursed Arlene's involvement. Why the hell did everything have to be so damned complicated, he asked himself?\n\nSaturday morning, everything was very platonic when Bob picked Arlene up at her apartment. There were no tearful reunions. She knew better than to try and kiss him or show any affection. She was just glad for the opportunity to be with him and to be able to apologize one more time. \n\nThey had been riding in silence for the first half-hour before Arlene finally gathered her courage.\n\n\"Bob, at the risk of you stopping and making me walk home, I want to tell you again how sorry I am. I should have never lied to you.\"\n\nHe was silent for several moments. \"We talked about it,\" he finally countered. \"After talking to Eric, you agreed we should let it go. Then you went behind my back and did exactly what we both agreed we shouldn't do. How the hell am I supposed to trust you again after something like that?\" \n\nBefore she had a chance to speak, he continued.\n\n\"Then, to make matters worse, you turn around and want to bring her back into Weaver's life. I don't care what she told you, she tore that man's heart out. You saw him; he had absolutely nothing to live for. Well you should see him now. You wouldn't recognize him. He actually smiles sometimes. He jokes around with the kids and they love him. He's a new man with a new outlook on life and you want to take a chance on destroying that all over again. I can't let that happen, Arlene, I won't let it happen.\"\n\nArlene got worried with his last statement. \"What do you intend on doing when we get there?\"\n\n\"I'm hoping to talk her out of contacting him. You say she loves him, we'll see. If she loves him she'll leave him alone and let him get on with his life.\"\n\n\"But...\" Arlene stopped herself. She knew she wouldn't be able to convince him that Kristyna truly loved her husband, but she prayed Kristyna would. What she could do was work on her own problem.\n\n\"Bob, I'm sorry for lying to you but I really thought I could help. I believe the reason Weaver is having such a hard time is because he never got any answers. He never got closure. I thought that if I could talk to Kristyna woman to woman, got her side of the story, she might say something that could help Weaver.\"\n\n\"Like what?\" asked Bob. \n\n\"I don't know...maybe nothing, but I wouldn't know until I talked to her. I believed Eric's story too. I figured she was probably every bit the bitch he made her out to be, but maybe, just maybe she had some other reason for running off; something that could ease some of Weaver's pain. I wouldn't know unless I talked to her.\"\n\nShe looked over at Bob and could see by his face that he didn't think much of her idea, but she wasn't going to give up. \n\n\"Bob, I knew you wouldn't want me to talk her but I really didn't see how it could hurt. If I came back with something that could help Weaver, fantastic; if not, well, no harm no foul. Nobody would even know I went. Then, after I talked to her, I knew I had a problem.\"\n\n\"That's just it, Arlene, it's not YOUR problem, it's Weaver's. You created it but he's the one who'll have to deal with it; and you're wrong about nobody getting hurt. He's going to get hurt...again!\"\n\nArlene didn't say anything. She knew nothing she said was going to change his thinking. All she could do now was to give Kristyna a chance. She was relieved at his next statement.\n\n\"Let's not talk any more about it,\" Bob said, shaking his head. He turned on the radio and the last hour of their trip was spent listening to rock and roll. \n\nWhen they approached Kristyna's apartment door, Bob rang the bell. A moment later a young boy opened the door. \"Hello, Ms. Reynolds. Come on in. Mom is in the kitchen.\"\n\n\"Hi, Charlie. This is Mr. Rawlings, he's a friend of mine.\"\n\nCharlie immediately stuck out his hand. \"It's nice to meet you, Mr. Rawlings.\"\n\nBob shook his hand. \"Hey, that's a pretty firm handshake you have there, Charlie.\"\n\nThe lad smiled. \"Thanks,\" he said proudly. \"Mom said you guys were coming to talk and that I should make myself scarce. She's making coffee in there,\" he said pointing in the direction of the kitchen. \"I'm going out to play. With that he headed toward the door. \"Bye,\" he said on his way out.\n\nBob wasn't sure what he expected but it wasn't that. Charlie was polite and respectful. Maybe he figured any woman who would do what she did to Weaver would bring her kid up to be just the opposite. Just then Kristyna appeared in the doorway to the kitchen. So far the whole experience wasn't what Bob imagined. She wasn't the tough, hard looking woman he'd envisioned. Although he could see she wasn't a woman of leisure, her face was kind...almost na\u00efve with maybe a little fear in her eyes. \n\nShe looked at Arlene with a nervous smile. \"Hi Arlene,\" she said as they both gave each other a slight hug. She approached Bob with her hand extended. \"Mr. Rawlings, it's nice to meet you. Arlene called and said she was bringing someone else who knows my husband.\"\n\nBob smiled guardedly as he took her hand. He wondered how much she knew about his true purpose for being there. What did Arlene tell her? \n\nKristyna was definitely anxious; there was no hiding it. She poured the coffee and joined her two visitors at the table.\n\n\"Mr. Rawlings,\" she started. \"I know why you came. Arlene said you were going to try and discourage me from seeing my husband. For the last ten years I've had no idea where he was or even if he was alive or dead. If he was alive, I couldn't understand why he would abandon me and our child...although,\" she pondered for a second, \"I wasn't even sure he knew about the baby. I never got a chance to tell him. I knew nothing of the lies he was told until Arlene's visit a few weeks ago. Please, now that I've found him, you can't expect me to give him up again. You couldn't possibly be so cruel.\"\n\n\"Mrs...ah...I'm sorry, I don't even know what to call you. Did you ever divorce him?\"\n\n\"No, and as far as I know he hasn't divorced me either,\" she told Bob. \n\n\"Yeah, I doubt that he ever filed for a divorce. I don't think it's ever even crossed his mind,\" Bob corroborated. \n\nBob took a sip of coffee and thought about how he wanted to proceed with what he had to say. \"Look...Mrs. Adams, I'm not trying to be cruel. I'm sure the last ten years have been very hard for you, but...\"\n\n\"Hard! You have no idea what hard is, Mr. Rawlings. Before he was born, I almost lost my baby twice from the stress of not knowing what happened to my husband. When he disappeared I was frantic. I called everyone I knew to try and find out where he was but no one would talk to me. I cried night and day for months. After Charlie was born, DCFS was going to take him away. I was diagnosed with clinical depression in the hospital and they said I couldn't care for him by myself; they considered me an unfit mother.\"\n\nThat brought a tear to her eye that she quickly wiped away, then continued.\n\n\"I had a friend down here who said she would help, so before they could come and take my baby, I left Chicago and came to Peoria. I used my maiden name to make it harder for them to track me. My friend helped me get a job as a waitress where she worked. We split shifts so one of us could stay home with the baby while the other was working. It took me three years to pull my life together; three years of crying, three years of praying. Finally I gave up. I accepted the fact that I would never see Chuck again. He would never meet his son. Now you come here and tell me you know where he is but you don't want me to see him; how can you even ask such a thing?\"\n\nBob looked deeply into her eyes. As far as he could tell, she was sincere. He looked at Arlene who had an, 'I told you so,' expression. He just didn't understand; nothing made sense.\n\n\"Why did you tell Eric Schaeffer you were running away with your lover? Why did you tell him you were carrying another man's baby?\"\n\n\"I didn't,\" she said emphatically. \"I didn't; I have no idea where he came up with those lies,\" she cried.\n\nTwo cups of coffee each, and an hour later, Kristyna finished retelling her story to Bob. He really didn't know what to think anymore. Listening to Arlene tell the story and watching the emotion with which Kristyna told it were two different things. He was leaning toward believing her. Even if he did though, it didn't make any difference. He was still convinced Weaver might take off again at the mere mention of her name. \n\nKristyna could see the conflict in his face. \"Mr. Rawlings, I know you and Arlene have Chuck's best interest at heart, but Charlie deserves his father and Chuck deserves to know he has a son. Arlene said he believed those lies they told him. It hurts knowing he could believe that about me but I will not judge him for it. I can't even imagine what he's been going through all these years and I understand you don't want to hurt him anymore, but I will tell you what I told Arlene; if you don't find some way to tell him about Charlie and me, I will go up there and find him, myself. If he refuses to believe me and would rather believe the lies, I can't do anything about it, but Charlie deserves to know his dad!\"\n\nOn the ride back, Bob was quiet. Arlene waited for the first twenty minutes before saying anything but she just couldn't take it any longer.\n\n\"Well...do you believe her?\" \n\n\"I don't know,\" he replied. \"Whether it's the truth or not, I think she believes what she's saying.\"\n\n\"Oh Bob, come on! You really think she made it all up, then convinced herself it's true?\"\n\n\"Arlene, at this point who knows what really happened. It sounds to me like she may have had a complete mental breakdown. Our minds can play tricks on us. Maybe the guy she ran away with dumped her and she couldn't take it. Maybe she couldn't deal with it and her mind blocked out the trauma of reality.\"\n\n\"Bob, that's a lot of 'maybes,'\" commented Arlene.\n\n\"It can happen. Hell, if she's been telling herself that stuff for ten years, it's not hard to see how she could start believing it. Her story just doesn't add up. She says she didn't tell Eric she had a lover, but if that's true, where did he get the idea? Weaver was like a son to him. He had to know how much the guy loved his wife; how much it would hurt him to know she was cheating on him. Eric wouldn't say something like that if he didn't believe it...and what about that part where she said someone had gotten into their apartment while she and Weaver were at the training camp. She said there was stuff broken and scattered all around when she got home but nothing was stolen. Who would break into their apartment and not steal anything? None of it makes sense, Arlene.\"",
        "\"Well I believe her,\" Arlene stubbornly avowed.\n\nBob sighed. \"I don't know. I wish I could talk to Weaver about it; get his side of the story but I don't dare bring it up. He's come so far. We're really getting to be good friends. For the first time in ten years he's happy. I hate to do anything to destroy that.\"\n\nThe next two weeks were down right torturous for Bob. He had too much on his mind. He was constantly nervous, his stomach was tied in knots so he had trouble eating and at night he couldn't stop the wheels from turning long enough to get to sleep. \n\nHe was still pissed at Arlene for lying to him. He was in love with her and was hoping for a life-time commitment, but now he wasn't sure. Yes, he thought, it was a small lie but it was still a lie and now look at the trouble caused in the wake of it.\n\nThat was the other thing, what to do about Kristyna? She had a point, Weaver should know he has a son...but is it his son? Charlie had Weaver's features but how could he be sure? Was her story true or was it the fantasies of a disturbed mind. Or, worse yet, did she have an agenda of some kind? \n\nOn top of everything else, he was given a big, important project at work. He was about at his wit's end and it was starting to show.\n\n\"Hey coach, can you help me with that 1-2-3-2 combination?...Coach? Coach!\"\n\n\"Huh, oh I'm sorry Tommy. What did you say?\"\n\n\"I asked if you could help me work on that 1-2-3-2 combination. Are you okay, coach? I can get Weaver to help me if you can't.\"\n\n\"No, no, Tommy. I'm sorry; I just have a lot on my mind. Give me a minute to get a drink of water and I'll meet you by the heavy bag.\"\n\n\"Okay coach,\" responded the young man. \n\nWeaver was not more than ten feet away, helping another young man tie the laces on his gloves and witnessed the exchange between Bob and Tommy. It didn't take a psychoanalyst to see something was bothering his one and only friend. He had never seen Bob give the kids anything but a hundred and ten percent. Later that night Weaver and Bob sat opposite each other at a table in Zale's. \n\n\"Here you go, boys,\" a waitress said as she sat two beers down in front of them.\n\nMaybe Weaver wasn't the surly, grief stricken man he was a few months prior, but he was still not one to mince words. \"What the hell's wrong with you, Bob? Lately you've been acting like a kid who's lost his dog. What's the problem?\"\n\nAt first Bob didn't want to say anything, but quickly gave it a second thought and wondered if it just might be the opportunity he was looking for. He knew he'd have to proceed with caution, though.\n\n\"Ah, woman problems,\" he said. He could almost hear the lump form in Weaver's throat.\n\nIt had been a while since Weaver had given any real thought to his past but just his friend's mention of having woman troubles stirred up some of the hurt again. He took a deep breath. The last several months had helped him in more ways than even he had realized. \"The pretty lady who thinks you can see the future in a whiskey glass?\" he asked. \n\nBob just slowly nodded.\n\n\"What happened? She dump you?\"\n\n\"No, no, nothing like that...it's, well, actually I'm thinking of dumping her. She lied to me about something and if there's one thing I hate, it's to be lied to.\"\n\n\"I see,\" commented Weaver. \"Of course I don't know anything about the situation or what the lie was about, but everybody lies now and then. You have to look at it from all sides, the components that went into it, the reasons behind it. Was the lie told to benefit her selfishness, or was it to spare you discomfort in some way? Yeah, lying is a bad thing but nothing is black and white, Bob.\"\n\nHe took a swig from his beer bottle before proceeding. \"Do you love her?\"\n\nAgain, Bob nodded. \"Yeah, Weaver, I do. I...it's just that trust is so important to me and now I'm not sure I can trust her.\"\n\nWeaver chuckled. \"Hell, when it comes to trust there are no guarantees, my friend. Trust me when I say that,\" he chuckled again. \"Shit, I would have trusted Kris with my life and look what happened there.\" His voice drifted off in a sad monotone as he sighed and stared down at the table. It was the first time he'd spoken her name out loud since it all happened.\n\nBob was also surprised when he heard his friend speak her name. Just looking, it was obvious the wounds he bore where still there. \n\nAfter a few seconds of silence, the ex-middle weight looked back up at his friend. \"Look Pal, when it comes to being hard hearted about women you're looking at the king. Don't be like me. Part of love is forgiveness...within reason, of course,\" he qualified after a brief moment of thought. \n\n\"Life can be a lonely place when you don't have anyone to share it with. If you love her and she loves you, don't let a little lie come between you. Go get her. Tell her you love her. Don't spend your life alone like me. I do it because I have no choice, but if you throw her away, you're a bigger fool than I ever was,\" he said staring at Bob while he took another hit of brew. \n\nBob still wasn't sure he should say anything further but he didn't know if he'd ever get another chance; and since Weaver was the one to bring up her name...he was going to go for it.\n\n\"Weaver, if Kris walked in here right now, what would you say to her?\"\n\n\"I'd ask her why,\" he replied without a second's thought. \"That's all, just why.\"\n\nThat night Bob didn't sleep a wink. He could give Weaver the opportunity to ask his question, but could he handle the answer? Could he handle seeing her again? From their conversation, it was clear that Weaver was not happy being a solitary man. If only he could look into Kristyna's soul...\n\nShortly after nine the next morning Arlene looked up from her desk. \"Bob,\" she uttered with surprise. She hadn't seen or heard from him since they'd come back from Peoria. \n\n\"I don't know if I'm doing the right thing or not, but why don't you call Kristyna and see if she can make arrangements to come up.\"\n\n\"Bob, you mean it? That's great! What changed you mind?\" she eagerly asked. \n\n\"I had a talk with Weaver last night. I asked what he'd say to Kristyna if he had the chance. He said he'd ask her one question...why. You could still see his pain as he spoke about her, but I think he deserves the chance to ask her that question.\"\n\nSince he had mellowed about Kris she couldn't help but wonder... \"Does this mean you forgive me?\"\n\n\"No, Arlene, it doesn't mean that at all. You went behind my back to do something you knew I didn't approve of, then lied to cover it up.\"\n\nThe hopeful look on her face lost its radiance and was replaced with a look of sadness again. \n\nHer expression was not lost on Bob. He saw the sorrow in her eyes and the slump of her shoulders. He could almost feel her anguish from where he was standing but he had to impress upon her how he felt about her deceit...still, he wasn't made of stone, and his own heart was breaking as well. He walked over and sat in a chair opposite her desk. \n\n\"Look, I know your intentions were good,\" he told her. \"But if I'm going to give my heart to someone, I have to know that person will be honest and loyal to me. It might sound like something out of a Boy Scout manual but when I devote my life to someone I expect the same in return.\"\n\n\"Bob, I...I understand. I let you down.\"\n\n\"Yes you did, Arlene...\"\n\n\"Give me another chance...please? I...I know I shouldn't have lied to you. We were getting along so well and I didn't want to take a chance on getting into our first argument...\"\n\n\"I would have preferred an argument to a lie,\" he said, breaking in.\n\n\"I know. Derrick told me the same thing. I should have never lied to you and I promise never to do it again. Please give me another chance.\"\n\n\"We'll talk about it,\" he said with a sigh. \"In the meantime, why don't you call Kristyna and see if she can make arrangements to come to Chicago for a day or two. See if she can bring Charlie too. I'll spring for a motel room for them.\"\n\n\"You don't have to do that. I have a spare bedroom. They can stay with me,\" Arlene told him. \n\n\"Okay,\" he said, standing up again and heading toward the door. \"Tell me when they're coming.\" \n\nTwo hours later Bob's secretary told him Ms. Reynolds was on line one.\n\n\"Hello.\"\n\n\"Bob, she'll be here tonight.\"\n\n\"Wow, she's not wasting any time, is she.\" \n\n\"No. You should have heard her. She literally broke out in tears when I told her. How are we going to do this? How are we going to get them together...where and when?\"\n\nBob told her his plan. \n\nThe next night everything was in place. After a good night at the gym, Bob and Weaver sat in Zale's bar casually talking over a beer. Outside, in the parking lot, Arlene and an extremely nervous Kristyna sat waiting for the signal. Arlene had arranged for a friend to stay with Charlie.\n\nBob took advantage of a brief lull in the conversation. \"Weaver, the other night you said, if you could talk to your wife you'd ask her why.\" He took a deep breath to gather his courage. \"What if I could arrange that for you?\"\n\nWeaver looked into the worried face of his friend. He had no idea why he would ask such a question but he'd answer it anyway. \n\n\"I'd be in your debt forever, my friend,\" he said with sadness.\n\nBob hit the 'send' button on his phone and the one word text was sent. \"Okay.\"\n\n\"I sure hope you mean that because you're going to get the chance,\" Bob apprehensively explained. \n\nA moment later Weaver's eyes filled with tears and his heart beat like a drum as he looked into the face of the woman who had left him a shattered mess ten years prior. \"Kristyna,\" he whispered. \n\nHer legs were almost too weak to hold her up. Her entire body trembled. She never thought she'd see him again. It was like staring into the face of a ghost. \"Oh, Chuck,\" she replied, barely able to speak.\n\nArlene wrapped her arms around the traumatized woman to help hold her up.\n\nFor a second the two just stared at one another. \n\nBob stood and offered Kristyna his chair. Arlene helped her sit down. \n\n\"Arlene and I are going to be right over here,\" Bob said alluding to another table in the corner. \"I believe you two have a lot to talk about. Take your time.\"\n\nThe waitress, seeing someone else sit down, came over to get their drink orders. To Kristyna, it felt like she was lost in a dream. She had no idea the waitress was even standing there. When the woman finally got her attention she ordered only a glass of water. Bob picked his beer up from the table, ordered a white wine for Arlene, and showed the waitress where they would be sitting. \n\nAs soon as they were alone Weaver started the conversation, but got off to a rocky start. \"Kris, wh...why...I...I thought you loved me. I mean...how...how could you leave me like that? Did you love him more than me?\"\n\nNo matter how many times throughout the years, she told herself to give up hope, in the back of her mind she never really did. She always left room for the slightest chance of seeing him again. Even after Arlene's first visit, she dared not build her hopes up too high for fear it would not really be him. Before answering, she reached out and lightly touched his cheek to make sure he was real.\n\n\"There was no other man, Chuck. I don't know why Eric told you those lies but there was never anyone but you.\" Her voice trembled with emotion. She picked up a napkin and wiped the moisture from her eyes. \"I...I don't understand how you could believe the things he said about me? How could you even think I'd leave you for another man? I'd never do such a thing...never.\"\n\n\"What do you mean, how could I believe it,\" he said, his voice now getting stronger and showing anger. \"You disappeared. You left without a word. Eric said you had been cheating on me. He said you got pregnant with another man's kid and took off with him. If it wasn't true, why did you leave? Where did you go?\" \n\n\"Chuck, I WAS pregnant but with YOUR child,\" she cried, \"no one else'...yours.\" She was trying her best to control her emotions but she was losing the battle. \n\n\"I had just come from the doctor's. I was so happy. I couldn't wait to tell you but somehow Eric found out I was pregnant. He begged me not to tell you before the fight. He said having me at the training camp was bad enough but if I told you about the baby you'd never be able to concentrate on the match. He said you could even get hurt in the ring. He was your manager. I knew how much you loved and respected him. You trusted him, so I trusted him too, and agreed to wait.\"\n\nKristyna stopped to wipe her eyes again. Her hand still shook as she took a sip of water. Her breathing was ragged so she inhaled deeply, trying to steady her nerves before going on.\n\n\"A couple days later Eric came to see me in the cabin while you were sparring. He gave me an envelope with five thousand dollars in it. He told me it was an advance on your guarantee. He said I was a distraction and he wanted me to go home. At first I refused. I said my place was with you. We argued. I finally told him I would talk to you and see what you wanted, but he said you would insist on me staying even if it meant losing the fight. He reminded me you were fighting for the title, the most important fight of your career. I didn't know what to do. There was also a train ticket to Chicago, in with the money. Eric said he'd tell you I got bored and wanted to go back home. He told me it was the only way you'd be able to concentrate on training. Then, after the fight you'd come home like a conquering hero; the new middleweight champion and then I could tell you that you were also a father. \n\nHe made it sound so perfect, and I didn't want to cause you to lose the fight so I gave in. Eric helped me pack and had one of the guys give me a lift to the train station.\"\n\n\"But you weren't there,\" Weaver interjected. \"I was there...at the apartment. When Eric told me you left with another guy, I didn't believe him. I got in the car and drove home. It was the only place I could think of to look for you. I drove straight through but when I got there, you weren't there. Most of your clothes were gone. There was no note, no nothing. What the hell was I supposed to think? If it's not true what happened? Where'd you go? Why did you disappear?\" he asked for the second time.\n\n\"It was you,\" she said coming to a sudden realization. \"You were the one who broke the lamp and threw everything around.\"\n\n\"I was pissed and hurt,\" he admitted. \"Yeah, I had a temper tantrum, I guess. I just couldn't believe you'd leave me like that. I waited for you all night but you never came home. The next morning I got back into my car and just drove.\"\n\n\"All this time I thought somebody broke in while we were at the camp,\" she explained. \"I wasn't there because I was in the hospital. I started feeling light headed on the train. I thought it might be because I hadn't eaten in a while so I got up and headed toward the dinner car, but on the way there, I passed out and hit my head on the way down. The train stopped in the next town and an ambulance took me to the ER. It turned out I was anemic. It happens a lot with pregnant woman. I also had a slight concussion from the fall. Because of the pregnancy, they insisted I stayed there a couple days. I had no idea you had left the camp and gone back to the apartment. As far as I knew, the fight was still three days away. By that time I'd be out of the hospital and back home waiting for you.\"\n\nWeaver was shaking his head. For ten years he had been tortured by the thought of his wife running off with another man. As painful as it was, he almost preferred it to knowing ten years had been wasted for nothing.\n\n\"Why would Eric tell me you ran off if it wasn't true? We were like father and son. Why would he want to ruin my life? It doesn't make sense.\"\n\nHe could hear the anguish in her voice as she responded. \n\n\"I don't know. I don't know,\" she sniveled. \"I got home the day of the fight. When I saw everything thrown around I thought someone broke in and was almost afraid to stay there but I didn't want to miss your call. I waited all night by the phone. I got scared when I didn't hear from you. I thought sure something had happened. I was afraid you got hurt. I tried calling Eric but I couldn't get ahold of him. The newspapers said the fight had been cancelled. I couldn't figure out what was going on. Nobody seemed to know why or anything else. Somebody told me they read that you got sick. I was in a panic. After a couple of weeks of not hearing from you I started to have cramps and got scared for the baby. I wound up back in the hospital. The doctors told me if I didn't take it easy I'd lose our child. I didn't know what to do, who to call. I was so alone,\" she said finally breaking down in tears.\n\nWeaver's heart was breaking. \"I'm so sorry, I'm sorry,\" he told her, reaching over the table and taking one of her hands in his. \"I...I don't know what to say. I was going through hell. You never complained but I knew you were always scared before a fight, and all the time I spent training; I figured that's why you had found someone else, why you left. I blamed boxing for losing you and vowed never to step foot into the ring again. I wandered around taking whatever odd jobs I could get. I...I went to California and worked in the crops during picking season. I spent some time on an oil drilling rig in the Gulf of Mexico; I even worked on a shrimp boat in the Florida Keys for a while. A couple years ago I came back to Chicago. The first thing I did was go by our old apartment. I stood on the sidewalk in front and remembered some of the good times.\" \n\nNow it was his turn to wipe away the tears.\n\nA few tables away, two very interested parties were trying to look nonchalant as they strained to hear.\n\n\"I wish I knew what they were saying,\" said Arlene. \n\n\"Well Weaver hasn't run out the door yet. I guess that's a good sign,\" Bob commented with a nervous chuckle.\n\nWeaver was almost afraid to ask about the child. If something happened to it, if it didn't survive...it took every ounce of courage he could muster. \"Kris, what happened to the baby?\" \n\nShe wiped the moisture from her eyes again and put a broad smile on her face. \"I named him Charles but I call him Charlie,\" she said with pride. \"God, Chuck, he's the spitting image of you. He's strong and brave just like his father. He's the only thing that's kept me going all these years.\"\n\nWeaver's insides turned to mush as he suddenly realized...\n\n\"You...you mean I...I have a son?\" he choked out.\n\n\"Oh yes, yes you sure do,\" she said through a wide grin. \n\n\"I...I'm a father,\" he bellowed while standing and almost knocking his chair over. \n\nEvery eye in the place turned toward the excited ex-boxer. Several, \"congratulations,\" were mumbled from various places around the bar. Kristyna stood as Weaver approached. He threw his arms around her and pulled their bodies together in a tightly wrapped embrace. Their tears poured like a waterfall while he smothered her in kisses.\n\n\"When...when can I meet him? When can I see my son?\" Weaver managed to ask.\n\n\"Yeah,\" said Bob under his breath. \n\nArlene looked across the table with a optimistic expression. \"Well?\" she remarked with a grin after witnessing the two lovebirds.\n\nBob looked at her and smiled. \"Okay, maybe it worked out this time, but don't you ever lie to me again.\"\n\nArlene couldn't hold his stare. Her heart beat with eagerness. Did that mean he forgave her?\n\n\"Bob, I've never said this to any man before; I love you. Hopefully you'll give me another chance to prove it to you. The last few months have been the loneliest of my life. If you give me another chance, you can bet I will never ever lie to you again,\" she said with sincerity. \n\nJust then Weaver and Kristyna approached their table. Both tear stained faces beamed with joy. \n",
        "\"Bob, I don't know how I'll ever thank you,\" stuttered Weaver.\n\n\"Don't thank me, pal,\" he replied. \"See this woman here?\" he said nodding to Arlene. \"Unlike the rest of us, she actually CAN see the future in a whiskey glass. She's the one who found Kristyna for you; she's the one to thank.\"\n\nThe first thing Weaver thought of was the way he acted the first time they had met. \n\n\"I never did apologize for being so rude to you in Jerry's that night, did I,\" he said sheepishly. \n\n\"No need to apologize, Weaver,\" she told him. \"I'm just glad it worked out...for both of us,\" she said, looking over at Bob.\n\n\"So what's on the agenda?\" Bob asked.\n\n\"I...I don't know,\" Weaver responded. \"I want to see my son. Kris says she brought him with; he's HERE.\" His voice was full of excitement as he emphasized the last word. \n\nArlene glanced at her watch. \"Yeah, but it's after midnight. I know you're anxious but he's probably asleep already. He's staying at Jeanie's, my neighbor's. I'm sure she has him safely tucked into bed by now, so if I were you, I'd want some time alone with my wife to rekindle my marriage,\" she said with a grin. \n\nNeither Kristyna nor Weaver could hide the mix of nervous excitement they both felt. \n\n\"That's a good idea,\" replied Weaver looking at his long lost wife. \"My apartment's not much,\" he told her, \"but...\"\n\nKristyna never gave him a chance to finish his statement. Her lips pressing tightly against his told him she didn't care about his apartment. \n\nArlene called her neighbor to make sure everything was okay with Charlie. She confirmed he was peacefully sleeping on her couch and she was about to go to bed herself. \n\nBefore leaving the bar they all arranged to meet at Arlene's apartment the following morning. \n\nAs the newly re-united couple left, Bob turned to the sexy woman sitting across the table. \"It would probably be easier for me just stay at your place tonight. What do you think?\"\n\nA little later that night, a very nervous Chuck Adams watched as his wife disrobed just like she had so many times in his dreams. He became instantly aroused at the mere touch of her naked flesh. The subtle fragrance of her womanly scent flooded his memory with visions of forlorn passions. He was captivated by her nudity. She hadn't changed a bit in ten years. \n\nWrapped in an erogenous fog, he felt his cock freed from its confines before being surrounded by the warmth of his wife's moist lips. An incoherent sound of pleasure escaping from deep in his throat served as his only communique of approval. \n\nIt had been so long. Weaver knew he wouldn't last long. He bent down and raised Kristyna up by her arms. \"I want to be inside of you, honey,\" he whispered.\n\nShe replied, \"I'm nervous, darling. I don't think I'm ready yet. It's been so...so long, I...I'm not even sure I can still get wet anymore.\" \n\nHe just smiled and helped her onto the bed. He remembered! It was all coming back to him, every sensual area of her body that drove her wild. \n\nShe moaned, her body writhed under his tender touch. \n\n\"I love you,\" he breathed quietly, while lightly kissing behind her ear. \"I have never stopped loving you.\" \n\nShe gasped as her nipples responded to the gentleness of his fingertips. As he moved into place, there was no problem. Her love juices flowed lavishly, making his entry, glide with ease.\n\nA few miles away, a similar scene was taking place in Arlene's apartment. Bob took her in his arms. Their eyes closed as his lips met hers. Arlene felt her pulse quicken as he tenderly caressed her neck. Their tongues battled for supremacy as the fire in their loins grew hotter. \n\n\"God, I want you so bad,\" whispered Arlene as she tugged on his earlobe with her teeth. \"Take me, Bob.\"\n\nHe didn't need to be told twice. Feverishly they tore at each other's clothes and within seconds their naked flesh pressed together in unbridled passions. Arlene's fingernails dug deeply into the skin of Bob's back as he drove his hard cock into her again and again. It didn't take either of them long to climax with the intensity of a title wave. \n\nWithin minutes they were both ready for round two, only this time Bob took his time. He explored Arlene's body and relished in rediscovering every sexy, sultry, and sensuous inch of feminine perfection. \n\nAfter going for a third time, they were physically and emotionally drained. Arlene snuggled into Bob's arm and silently gave thanks. She knew what her mistake almost cost her and vowed never to take another chance like that again. \n\nArlene was up first. She quietly slipped out of bed without waking up her man. After the night they had, she was sure he needed his rest. The thought brought a smile to her face. \n\nShe glanced at the clock on her way to the kitchen; it was seven o'clock on a glorious Saturday morning. The bright sun bathed her apartment with a cheerful, carefree atmosphere. As she measured out the coffee grounds, Arlene hummed along with music provided by her fine feathered friends outside the window.\n\nBefore leaving Zale's the night before, they made plans for Charlie to meet his father. Weaver and Kristyna would be at Arlene's apartment about eight in the morning. Jeanie would have the boy up and dressed by eight-thirty, at which time his mother would come and get him. \n\nShortly after the coffee started to perk, it started calling to Bob. His nose twitched and breathed in the aroma. What a glorious way to wake up, he thought. He looked around the bedroom. It had been a while since he had awakened in that room...too long. It was good to be back. \n\n\"Well good morning, sleepy-head.\"\n\nBob's attention was diverted to the loving woman who stood in the doorway holding two cups of morning joe. \n\n\"Good morning, gorgeous,\" he replied with big grin. He wasn't sure if she'd notice the tented sheet or not so he consciously twitched his cock to make sure. \n\nThe jumping sheet definitely caught her interest. \"Was that for my benefit?\" she asked with a laugh.\n\n\"Oh yeah,\" he replied. \"Why don't you set those cups down and hop on. I'll take you for a ride.\" \n\nShe knew she shouldn't. Weaver and Kris would be there in forty-five minutes and they hadn't even showered yet, but she still had his love juice in her from that night so she didn't have to worry about getting wet. Oh what the hell, she told herself.\n\nArlene set the two cups of coffee down on the dresser. \"Waaaa-hoooo,\" she yelled running to the bed. She ripped the sheet down and swung her leg over him. Propping herself up on her knees, she straddled Bob's hips, then reached down and guided his stiff shaft into her love canal. Slowly she lowered herself until she was completely impaled. Arlene closed her eyes and enjoyed the full feeling as she rocked back and forth. She felt his fingers caress her nipples. \n\nWithin a few minutes both were breathing hard. Arlene kept a steady rhythm as she got closer and closer. \"Oh God,\" she moaned. \"I...I'm going to cum baby, I...I'm going to...\"\n\n\"Oh, co...come on,\" he replied. \"Cum for me, honey; me too...I'm, ah...\"\n\n\"AAAYYYYYYEEEE,\" she screamed.\n\nTogether their bodies tensed as every nerve ending exploded like fireworks in ecstasy. \n\nArlene collapsed onto Bob's chest, gasping for a breath. Wrapped in each other's arms and lost in lust, they just started to cuddle...\n\n\"Oh shit,\" cursed Arlene as she jumped up.\n\n\"What, what's the matter?\" \n\n\"They'll be here in twenty minutes,\" she replied. \"Hurry up, we still have to grab a shower.\" She saw the grin on his face. \"No, I don't mean one of those showers. Come on, Bob. Weaver's going to meet his son for the first time this morning; I want to have everything ready for them.\"\n\nBob felt a flash of guilt. He was so enthralled with his own reconciliation, he had forgotten about his friend's. He quickly hopped from the bed. Twenty minutes later, Arlene was still drying her hair when the doorbell rang.\n\n\"Right on time,\" Bob commented.\n\n\"Did you think they would be late? I'm actually surprised they weren't here an hour ago. Can you let them in, honey? I'll be out in just a few minutes; coffee is all ready.\"\n\nAs Bob opened the door, he almost didn't recognize the cheerful looking man on the other side. Sure, over the past few months Weaver had smiled and joked around, but there was always that ever present sadness just below the surface. You could see it in his eyes. The man that now stood before him was not the same man. This man's eyes sparkled brilliantly. The lady on his arm also looked as if someone had just freed her soul. \n\n\"Hi guys. Arlene is still drying her hair but she'll be out in a minute or so; coffee's fresh. Come on in the kitchen,\" he said turning and leading the way.\n\nAs Arlene joined the group, the conversation reflected the nervousness in the room. Thirty-eight times in his professional career, Weaver stepped into the ring with someone hell-bent on beating him to a pulp but never did he feel fear; it was an emotion with which he was unfamiliar...until that morning when he was about to meet his son for the first time.\n\nKristyna looked at him and reached over to take his hand. \"Are you ready?\"\n\n\"What...ah, what have you told him; about me, I mean?\" With everything going on, he never thought to ask her before.\n\n\"I didn't lie to him, Chuck. I told him pretty much what I told you, without all the details of course. I told him you disappeared just days before the fight and I hadn't seen or heard from you since.\"\n\n\"Does he...hate me?\"\n\n\"He's never really said anything. He's asked questions, what you looked like, things like that, but he's never expressed feelings for you one way or another. How could he? He only knows of you what I've told him.\"\n\n\"Well,\" said Weaver in a shaky voice, \"I guess we'll soon find out, won't we.\"\n\n\"It's going to be fine,\" Arlene told him.\n\n\"Of course it is, Weaver,\" chimed in Bob.\n\nKristyna rose from her chair and leaned over to kiss her husband. \"Don't worry, honey. We're a family now.\" She turned toward the door. I'll be right back,\" she said.\n\nWeaver looked at his friend. \"Bob, I've never been so scared in my life,\" he confessed.\n\n\"Weaver, I've met him. He's a fine boy. Kristyna did a great job of bringing him up. You're going to be extremely proud of him and I'm sure it'll be mutual.\"\n\nBefore another word was spoken, they all looked up as they heard the front door. They watched intently as Kris walked in with Charlie close behind. He started to greet the two people he already knew. \n\n\"Good morning, Ms. Reynolds, good morning, Mr. Rawl...\" he stopped in mid-sentence when the man sitting on the far end of the table caught his eye. Charlie took a moment to study him. \"Mom, who is that man?\"\n\n\"Charlie, when you've had questions about...\"\n\n\"No, no,\" he said, cutting his mother off. His voice became excited. \"Who is he? I think I know. He looks like the picture on your dresser.\"\n\nSilence filled the room as the young man cautiously approached the mysterious figure.\n\n\"Are...are you my father?\" he asked.\n\n\"Yes,\" answered Weaver with tears streaming down his face. \n\n\"WHERE HAVE YOU BEEN?\" screamed Charlie as he flung his fists in a frustrated rage. \n\nFor the first time in his life, Weaver made no attempt to defend himself. The furious, tiny fists struck his arms and chest, again and again. With every blow that landed Weaver felt his son's torment and accepted each inflicted wound with a sense of absolution for his own guilt. \n\n\"Charlie!\" his mother yelled, but before she could grab him, the firestorm that had erupted within her son burned out as quickly as it began. The initial shock from seeing his dad for the first time and the anger that ensued had vanished with his assault; left in its wake came flooding the love of boy for his father. Now, out of breath, he stood and stared at the subject of so many dreams...and nightmares.\n\n\"Dad! Dad! Where have you been?\" he cried. \"I knew it! I knew someday you would come back to us, I KNEW it!\" Tears burst from the boy's eyes as the ecstatic young man threw himself into his father's open arms. \n\n\"I'm sorry, son. I'm sorry, but I'll never leave you again, I promise...never again.\"\n\nThere wasn't a dry eye in the place as everyone watched the two clutching onto each other. No one talked; everyone was too choked up to put two syllables together. They just simply watched the remarkable bonding between father and son.\n\nIt was too much for Kristyna. It was really happening; her family was together for the first time. Her legs turned to rubber and she collapsed onto a chair. She buried her face in her hands and bawled.\n\nArlene looked over at her man. She raised her hand, and with a tender smile, wiped away the moisture from his eyes, then with a small chuckle, wiped her own. \n\n\"Okay,\" Arlene was the first to finally speak. \"Who's all for breakfast. Charlie, how do you like your eggs?\"\n\n\"Here,\" Kristyna spoke up while drying her eyes. \"Let me help.\" \n\nThat morning turned out to be, not only memorable for Weaver and Charlie, but for everyone. Life-long friendships were forged that day; friendships that would never be broken. \n\nFor the rest of Saturday and all day Sunday, Weaver, Kristyna, and Charlie spent time together as a family. Later Sunday evening, everyone was growing uneasy. Even though it would be temporary, they would have to separate again. They both had jobs they had to be at the next morning. There were tears all around when it came time for Kris and Charlie to head back to Peoria. It was a scene that would be played out several times over the next several months.\n\n\"Bob, it's getting harder and harder to say goodbye, but there's so many things that we have to take care of before she can move up here permanently,\" Weaver explained to his friend, one night at Zale's after closing the gym.\n\n\"Kris still has six months to go on her apartment lease. I have four months on mine. School will be starting in another week and Kris hates the idea of Charlie having to change schools in the middle of the year but neither one of us have the money to pay off both leases.\"\n\n\"Weaver, what happened to all the money you made in the ring? Hell, with all your wins, you must have made a million, at least,\" Bob said.\n\n\"That's one of the first things I checked into after finding out I had a family again. I hired a lawyer hoping I was still worth some bucks. Actually I had won almost four million in prize money, but it wasn't all mine. I was incorporated when I was fighting. I had investors that held stock.\"\n\n\"Boy, I'll bet they were pissed when you quit,\" Bob said.\n\n\"Ah huh,\" chuckled Weaver, \"and they weren't the only ones. The World Boxing Association pulled my million dollar guaranty for the fight and fined me another million for not fulfilling my contract. The corporation was also sued by just about everyone who was linked with the fight, including the champ himself. There's nothing left, not a penny. Of course I didn't know anything about all the law suits until last week.\"\n\nHe took a swig of beer and continued.\n\n\"The lawyer said it was a good thing I stayed under the radar. There's a statute of limitations for the period of time they could come after me, but up till three years ago, they could have sued me, personally. They wouldn't have gotten much but they might have been able to attach what meager earnings I made and I think some of those people would have done it just for revenge.\"\n\n\"Damn,\" said Bob shaking his head. \"Weaver, if you need a loan I can help. I'm not rich but I can spare a few...\"\n\n\"Thanks, Bob,\" Weaver interjected, \"but I'll work it out. I haven't been exactly living high on the hog all these years. I have a few bucks stashed away. It's just...with so much to do it's a little overwhelming I guess.\"\n\nThe two men took a sip of their beer before Weaver continued.\n\n\"You know what still bothers me about this whole thing? Why would Eric lie to me like that? We were close, Bob. We were a lot more than just boxer and manager; he was almost like a dad to me. Why the hell would he tell me something like that, knowing it would ruin my life? I just don't get it.\"\n\nWith everything going on, Bob had forgotten about Eric. \"I know where he is, if you want to ask him,\" he told his shocked friend.\n\n\"You know where he is?\" Weaver's expression turned to a scowl. \"All this time you've know where to find Eric and you didn't tell me?\"\n\n\"I'm sorry. Like you, I've been so overwhelmed with everything I just didn't think about it until you just mentioned him.\"\n\n\"Well...where? Where the hell is he? Is he here in Chicago?\" \n\n\"No,\" Bob responded. \"He lives in a flop house in Grand Rapids. It's one of those places that has a switchboard. You call the number and they connect you with the room. Arlene probably still has the number. If she doesn't have it, I know Derick does. He's guy who tracked down you wife.\"\n\nWeaver's chest tightened as the anger at his former manager festered with the thought of confronting him. \"I want that number,\" he growled. \"I want to know why.\"\n\n\"He may not talk to you over the phone,\" said Bob.\n\n\"Then I'll go up there and beat it out him if I have to,\" snarled Weaver. \n\nBob was sorry he'd said anything. For the first time in months, he saw the pain and anger returning to his friend's face. Me and my big mouth; I should have just left well-enough alone, he told himself. \n\n\"Come on, Weaver, you don't really mean that. By the way the guy lives, I think he's been punishing himself all these years.\" Bob thought back to when he and Arlene had gone up to see Eric. Before leaving, the old man said to tell Weaver he was sorry. Arlene wanted to ask him what he meant by that, but he pulled her out of there thinking she was prying into bad memories. Now he wished he would have let her pry.\n\n\"Look,\" Bob continued. \"I really think somebody should be with you when you make that call. Why don't you come to my place Saturday morning. By then I'll have the number and you can take some time to kind of rehearse what you're going to say.\n\nWeaver agreed it was a good idea. He needed some time to calm himself. He knew if he just started yelling and cussing Eric out, he'd more than likely, not get the answers to his questions. \n\nBob had the coffee all made by the time Weaver showed up that following Saturday. \n\n\"Sit down. Relax a few minutes and have a cup of coffee,\" he told the nervous ex-fighter. Grand Rapids is an hour ahead of us but I'm not even sure Eric would be up yet.\"\n\nBob started talking about the gym to get Weaver's mind off of Eric for a little while. When he seemed more at ease, Bob asked the question. \"Well, are you ready? Do you want to do this?\"\n\n\"Yeah, let's get it over with,\" he responded with a slight nod.\n\nBob placed the call with his cell. When the switchboard connected him to Eric's room, Bob handed Weaver the phone.\n\n\"Hello.\"\n\nWeaver was startled to hear a woman's voice answer.\n\n\"Ah, hel...hello. Is Eric there, please?\"\n\n\"May I ask who's calling?\"\n\n\"My name is Chuck Adams. I, ah, I used to be a fighter. Eric was my manager.\"\n\n\"I'm sorry, Mr. Adams. I'm Tara, his daughter.\"\n\n\"Daughter?\" he replied with surprise. \"I didn't even know he had a daughter.\"\n\n\"I don't think anybody knew,\" she commented. \"My mother left him when they were both very young and took me with. I've been searching for him for years and just found him myself, a couple weeks ago.\" \n\nShe made an audible sigh before continuing.\n\n\"I'm sorry, though, you can't talk to him; he's in the hospital. I'm afraid he only has a few days left. He's dying of cirrhosis of the liver.\"\n\n\"Dying,\" he repeated in shock. \"I...I'm sorry,\" he told her. \n\n\"Thank you. Listen, maybe you could help me. You said you were a fighter? Do you know how I can get in touch with a fighter by the name of Weaver?\"\n\n\"That's me,\" he answered. \"It's a nickname the sports writers gave me.\"",
        "\"Oh my God,\" exclaimed Tara. \"He's been asking for you. I can't believe I found you. Please, is there any way you can come to Grand Rapids? He says he has to talk to you before he dies...\" her voice trailed off with sadness.\n\nHe decided instantly. \"Yeah, I'll be up there later today. What hospital?\"\n\nWhen he told Bob of the situation, he insisted on going up there with him. The problem was Kristyna. She and Charlie were coming up for the weekend. She couldn't afford a cell phone and he was sure she was already on the road. \n\nBob called Arlene, explained what was happening and asked if she could wait for Kris at Weaver's apartment. \n\nWith that taken care of, Weaver jumped into Bob's car and they took off. Three and a half hours later they met Tara outside of Eric's room. She was so thankful to Weaver for coming. \n\n\"It's his dying wish,\" she told them both. \"Just last night, before I left, he asked if I'd found you yet.\"\n\nAs much as Bob wanted to be privy to the conversation between Eric and Weaver, he knew they needed to be alone. He invited Tara to the cafeteria for lunch.\n\nEric had his eyes closed when Weaver walked in. \n\n\"Eric; Eric it's Weaver, are you awake?\"\n\nEric opened his eyes and stared. \"Weaver,\" he said in disbelief. \"She did it, she actually found you.\"\n\nWeaver wasn't in the mood for small talk. \"Why, Eric? Why did you lie to me about Kris running off with another man? Why would you do that to me?\"\n\n\"I...\" he was so weak he could hardly speak. \"I'm sorry. I never meant to break you guys up, I just wanted you in top shape for the fight. I...I thought she was a distraction and I wanted her out of the camp.\"\n\nEric started to cough and had to stop talking for a minute. His frail body convulsed forward with a violent action. He reached for the glass of water on the bed tray that spanned his chest and took a few sips from a straw. \n\n\"Why did you say she ran off with another man?\" Weaver asked with a harsh voice.\n\n\"Because you were going to go after her; I finally got her out of camp and you were going to go and bring her right back. I had to think of something. I wanted you concentrating on the fight, not your wife. It was the first thing that came to mind. I knew you. There was no way you'd want her back if you thought she was cheating on you. I...I\"\n\nHe started coughing again and took some more water before resuming. \n\n\"I knew you would be angry but I thought I could make it work for us. I was going to direct that anger to the ring. I figured you'd take it out on the champ and use it to win the fight. Afterward I was going to tell you I lied about her running off. I was going to tell you she was home waiting for you, but you never gave me the chance. I never expected you to just take off like that. At first I didn't worry. I thought you'd gone somewhere to lick you wounds and you'd be back, but when you weren't in your bed the next morning I sent the guys out looking for you. When you still weren't back by that afternoon, I tried calling you apartment in Chicago but there was no answer.\"\n\nEric started breathing hard and had to take another break. \n\n\"You want some more water?\" Weaver asked.\n\nThe weakened man shook his head, no. \"I...I just get tired sometimes,\" he replied. \"Just give me a minute.\" It took a little while but Eric finally took a couple of deep breaths to try and gather some strength, then continued.\n\n\"I didn't realize what actually happened until after the fight was cancelled. I thought you went back home to Kris and when you found out I lied to you, you got so pissed you decided not to fight to teach me a lesson.\"\n\nWeaver watched as a tear broke free from the corner of Eric's eye and trickled down his cheek.\n\n\"The day the news about the fight being cancelled hit the papers, Kris started calling all over to find out what happened. That's when I realized what I had done. I knew you not only took off on me but on her as well. I knew you believed what I told you. I knew I had destroyed your marriage. \n\n\"I was going to try and find you but the shit really hit the fan after that. The WBA was all over us. They weren't happy with just jerking the guaranty, they charged us with a fine of another million bucks. Then...\"\n\n\"I know, I know,\" said Weaver cutting him off. \"I heard all about it.\" He knew he should feel some sympathy for his former manager but he couldn't. In fact he felt his anger as strong as ever. \n\n\"How could you do that? You were my manager; shit, you were practically my father. You were supposed to protect me, not lie to me. Do you know Kristyna damn near lost the baby...twice, because of all the torment she went through not knowing what happened to me? For the last ten years she's had to raise our son by herself. Did you hear me, Eric, our son, my son; a boy who didn't know for sure if he HAD a father until a month ago...and, and I...\"\n\nHe had to stop and take a deep breath. He was starting to lose it. He had to bring himself under control. \n\n\"All this time, Eric; all this time I've had a son and didn't even know he existed.\" He took another breath. \"Kris didn't know if I was alive or dead...ten years, Eric. That's what that lie of yours cost my family and me, ten fucking years!\"\n\n\"I...I'm sorry,\" Eric said in a voice weakened further by talking. He reached out to try and touch Weaver but let his arm drop when Weaver made no attempt to take his hand. \n\n\"I...I should have come looking for you. I should have found Kris and told her what I did but I couldn't face it. I crawled into a bottle instead.\"\n\n\"So you knew what you did and didn't even try to make it right. Shit, if it wasn't for a woman named Arlene, Kris and I wouldn't be together yet.\"\n\n\"Yes,\" Eric said in a voice now barely audible, \"Arlene. She came to see me...\"\n\n\"Yeah, I know she did. She didn't even know me. In fact I was rude to her the first time we met and she still cared more about me than you did,\" He snarled. \"She's the one who found Kristyna and Charlie. She's the one who got us back together. That should have your job, Eric. You should have at least tried to make up for ruining our lives.\"\n\nEric's head barely moved as he nodded. \"I'm sorry, Chuck,\" he muttered. He looked once more into Weaver's angry face, closed his eyes, and took his last breath. \n\nThe beeping noise emanating from beside his bed altered into a continuous tone.\n\n\"I'm glad you didn't ask me to forgive you, Eric,\" Weaver said under his breath. \"Because I don't think I could do it; you cost me too much.\"\n\nWith that he turned and left the room just as a couple of nurses were scurrying in.\n\nWeaver found his way to the cafeteria and the table where his best friend sat with Eric's daughter. He felt it was his duty to tell her. \"Tara, I sorry but your dad died a couple of minutes ago.\"\n\nTara gasped in momentary shock but quickly fell into acceptance. \"I knew he wouldn't last much longer. Did he get to say what he wanted to you?\"\n\n\"Yes,\" he said nodding his head but offering no other details. \"You said on the phone you only found him a couple of weeks ago? God, this has to be so hard for you. I'm sorry you didn't get to spend more time with him.\"\n\n\"Yeah, me too,\" Tara replied. \"I'm not sure what happened between him and my mom, I was only two when they split up. Mom would never talk about it but I think she cheated on him.\" She wiped away the moisture that was building in her eyes. \n\n\"For a long time I wondered who my father was but mom would never talk about him. It wasn't until she passed away last year, that I met a guy at the funeral who knew them when they were married. He told me about dad. He said he was one of the best fight managers in the business. He gave me enough information that I was able to track dad down. It took me a while, but I found him,\" she said proudly. \n\nThey talked a little longer before Bob and Weaver again gave her their condolences then took off for home. Bob was dying to ask what Eric had to say, but since Weaver wasn't volunteering the information, he figured his friend considered their conversation private and he was going to respect that.\n\nIn the car, Weaver thought about Tara's story. He wondered if Tara's instincts were correct; had Eric's wife cheated on him, then ran off with the baby. Maybe Tara wasn't even Eric's child and she just didn't know it. Maybe that was how he came up with the story about Kris. Or, maybe because of what he went through, Eric was jealous of Weaver's marriage? He'd never know and he wasn't going to worry about it. His ordeal was over. There was no more looking back, only ahead. \n\nIn the next few months Weaver was able to find a better job; one that paid almost twice what he was making. Through a little investigating, he found the firm that managed his apartment complex, managed several others. He negotiated a new lease and was able to transfer to a larger apartment in the northwest suburbs. The area was much nicer than where he had been living and the school system was excellent. \n\nFour months after coming back from Grand Rapids, Charlie and Kristyna permanently moved in with him and became a family. Bob and Arlene insisted on taking them out to dinner to celebrate the occasion. After a wonderful meal, Weaver stood and raised his glass.\n\n\"I'd like to propose a toast,\" he announced. \"To the two best friends a guy ever had, and a special thanks to a certain busy-body who looked into a whiskey glass and saw my future; I am eternally indebted to you, Arlene, we all are. Thank you for bringing my family back into my life.\"\n\nArlene graciously accepted his thanks as everyone drank to Weaver's toast. After setting their glasses down, Bob stood up next.\n\n\"Weaver, Kristyna, Charlie, I have a confession to make. The purpose of this dinner was two-fold. First; Arlene and I wanted to congratulate you. For ten years, even though you were separated and unaware of the other's fate, your love for each other never died. Love that strong is extremely rare, so Arlene and I salute the three of you.\"\n\nEveryone took a sip from their glasses and he continued.\n\n\"The second reason is to make an announcement, but I'll let Arlene make it. She's been dying tell you guys all night...honey...\"\n\nArlene could hardly contain herself as she dug into her purse. A second later, she withdrew her left hand and immediately reached to the middle of the table for all to see. Kristyna gasped at the large diamond that adorned her ring finger. \n\n\"Oh, Arlene, it's beautiful! Congratulations!\" she screamed.\n\n\"Thank you,\" she gushed in response. \n\nWeaver gave his friend a smile. \"It's about time, ol' buddy.\" \n\nBob just shrugged with a big grin stretched across his face. \"Want to be my best man?\"\n\n\"I'd be honored,\" Weaver replied. \n\n\"And I'd like you to be my matron of honor,\" Arlene told Kristyna. \"And you, young man; we'll need an usher to show our guests to their seats. Would you do that for us?\"\n\nBoth mother and son gladly accepted their roles.\n\nEPILOGUE: \n\nFor the rest of their lives the Adams and the Rawlings would be an extended family. Bob and Arlene had two children, a boy and a girl; both of whom, Charlie considered his siblings and both of whom looked up to him as their big brother. \n\nThrough the years, Bob and Weaver helped many young boys grow into fine young men through their association with the Chicago Youth Organization. \n\nTwenty years to the day, after Weaver walked out of Eric's hospital room, he found himself standing alone at the grave of his former manager. It had been a long time. He stared at the simple gravestone as he started to speak.\n\n\"Eric, I still think about the day you told me Kris was pregnant with another man's baby and had run off with him. What I remember most is the pain. I had never experienced anything like it in my life and no matter how angry I was, I couldn't ditch the pain. For ten years it was my constant companion, every minute of every day. If it hadn't been for a very special lady bringing Kris and me back together, I'd still be carrying that pain with me today.\"\n\nHe took a deep breath, then continued...\n\n\"But Kris and I ARE back together...for the last twenty years, and they've been the best twenty years of my life. I came up here today, because for several months now, I've had an anxious feeling in my gut and I know exactly what it's from. \n\n\"No one even knows I'm here. I told Kris I had to go out of town on business, because this is just between you and me. When I first saw Kristyna after all those years and she told me what happened between you and her, I hated you. You were supposed to be my friend, Eric. You were supposed to protect me. Instead you sabotaged what I held most dear. I've been holding a grudge ever since; a grudge that's been eating away at my insides; so, I came up here to tell you in person that I forgive you. I know that's what you wanted to hear that day in the hospital but when I learned the truth, when I discovered how you betrayed me... well, there was no way I could forgive you back then, no way. \n\n\"Okay, I said what I came to say so I'm going to go. My son and his lovely wife are coming over with the grandkids tonight for dinner and I don't want to be late. Rest in peace, Eric, rest in peace.\"\n\nThe End. "
    ],
    "authorname": "laptopwriter",
    "tags": [
        "fighter",
        "ring",
        "manager",
        "cyo",
        "cheating wife",
        "son",
        "whiskey glass",
        "lies",
        "betrayal",
        "10 years of grief"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/weaver"
}