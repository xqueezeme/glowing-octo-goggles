{
    "title": "Under the Milky Way",
    "pages": [
        "Author's note: I began writing this story for the Literotica 'In a Sunburned Country' Australian-themed Story Event in 2018. Consequently, I deliberately included a number of Australian cultural references and issues. However, for a whole bunch of reasons I felt I couldn't give the tale the justice I felt it deserved and so I put it aside to write other things.\n\nYet, the two lovers from the story remained in my mind, smouldering there, wanting to spark into life, and so recently I returned my attention to them and their story. After a great deal of re-writing I feel I've achieved some of my original goals. But all other issues aside, the most important aspect of the story is two young people on the verge of adulthood who really do need to have a heart-to-heart and share their feelings with each other before moving into the next stage of their lives.\n\nI've given particular attention to the self-editing process, but I do apologise for any mistakes I may have missed. And at the time of publishing we face uncertain times because of the pandemic, so I hope as I release these young people into the wilds of Literotica, their story will allow you to escape for a while. Stay safe and please enjoy!\n\n~0~\n\n\u00a9 2020 Thefireflies, exclusively for Literotica\n\n~0~\n\nPrologue\n\nSaturday 7th of June, 1986\n\nFirst thing in the morning Darryl Ross tossed the plastic bag on the kitchen bench, then went for a surf. Around breakfast time Ted and Frank discovered the bag and began chattering with excitement, as the two brothers tended to do. The two youngest children, three year-olds Duncan and Sophie, were fascinated by the colourful cylinders and cones inside the bag Ted now held, never having seen such wondrous things before, thinking they were toys.\n\n\"Don't touch,\" Terry Flanagan told all the kids in a faux gruff voice as he entered the kitchen with wide eyes, then a big grin. Theatrically he clutched the bag from Ted, his eldest son, and said, \"Mine!\" which made Ted reel back from his father in smirking mock-contrition, while the other children giggled.\n\n\"What are they, Daddy?\" Sophie, asked as Terry placed the bag out of reach on the high-shelf over the bench.\n\n\"Firecrackers!\" her father said with a smile. Spreading hands wide and fluttering his fingers like he might during a rendition of Twinkle Little Star, he told her, \"These are like special paint brushes which me and Uncle Dazza will use to paint pretty colours across the sky tonight.\"\n\n\"Noooo,\" young Sophie said with a grin and giggle. \"Those aren't paint brushes, Daddy. How can you even paint the sky?\"\n\n\"Yeah they are,\" said Sophie's mother, Daniella, entering the room with a big smile of her own. \"Those colourful things are magic paintbrushes.\"\n\nFollowing close behind her was Beth, who whispered to her friend, \"She's a smart one, Dani.\"\n\n\"Too smart for her own good at times, I reckon.\"\n\nYoung Duncan looked up at Beth. \"Mummy, why are Uncle Terry and Daddy painting the sky tonight?\"\n\n\"It's the Queen's birthday weekend, sweetheart,\" Beth replied, ruffling his fair hair with her fingers. \"So we let off fireworks in celebration.\"\n\n\"Another celebration for our oppressors.\" Terry spoke with a laugh, because to him life should be lived humorously. Even when he was deadly serious.\n\n\"Terrance Flanagan,\" Daniella hissed, briefly scowling at her husband. \"Tonight's about fun for the children, not politics, remember.\"\n\n\"She's no Queen of mine,\" Terry whispered to his wife, his mix of Indigenous Australian and Irish blood stirring his sentiment. He smiled at her as he walked past, stopping in the kitchen doorway. \"Or yours, my beautiful Queen.\"\n\n\"No, she's definitely not.\" Daniella's scowl softened, yet she still felt her husband needed a warning. \"But keep a lid on it, especially when we're down at the beach tonight, eh? Dunno who'll be there and what they think. We don't want arguments with randoms this year.\"\n\nTerry's smiled lingered and he winked at his wife before leaving the room.\n\n~0~\n\nIt wasn't the Queen's actual birthday and the kids didn't understand anyhow. If you'd asked Duncan and Sophie who the Queen was, they'd probably have giggled or laughed, or perhaps they'd look away shyly. But it was a long-weekend and all Aussies love a public holiday regardless of the reasons celebrated or commemorated.\n\nIn the evening the small crowd of locals and holiday makers stood back near the beach dune, chatting and laughing, while many children chased one another about the sand, all waiting for the colourful explosions to light up the sky.\n\nBehind them on an ancient blanket sat Beth's new single-speaker radio/cassette player pumping Icehouse's Great Southern Land into the cool night air, some singing along, \"Standing at the limit of an endless ocean, stranded like a runaway, lost at sea...\" The music and singing competed with cheerful discussions and children's playful squeals, always accompanied by the regular thumping rumble and hiss of breaking waves.\n\nFurther down on the beach, halfway to the endless ocean, Darryl and Terry, plus a number of other men, planted the colourful firework tubes and cones in the sand. Several fuses sparked, and with a great deal of jovial shouts and laughter the small group of men moved quickly away from the racing flames. Balls of green, red, gold and silver light shot up from the sand into the air with a scream and everyone looked skyward in awe as the balls erupted in huge cascades of colour, followed by loud explosions.\n\n\"Ohhhh, so pretty!\" someone said.\n\nYoung Duncan and Sophie squealed and jumped, fearful from the loud noises, which caused their young ears to ring. Again they looked to their mothers, who smiled adoringly at them and spoke with excitement at the beautiful colours in the sky.\n\nThe two kids smiled back, feeling all was safe with the world, because their mummies smiled, and their initial fear turned to excitement and wonder. More fireworks leapt into the sky, some screaming, others casting loud booms.\n\nBest friends since they themselves were children, the two mothers sensed a new excitement and joy in their youngest children, who were now squealing and cooing with glee. Very few things could have wiped the happy smiles off Beth and Daniella's faces as they watched their children enjoying the noisy sky-painting, and overcome with great joy and love, they hugged.\n\nA particularly large explosion of colour lit up the sky, blowing shards of red light outwards like the rays of a star, sparkling in the night's sky, and the thumping detonation boom rolled across them, followed by rapid crackles, causing young Duncan and Sophie to squeal.\n\nAgain they looked to their respective mother's for reassurance, and seeing two familiar smiling faces filled with great love, they turned to one another, giggling, both waving their arms and jumping up and down in pure delight.\n\nBeth patted her pregnant belly. \"I wonder what this little one thinks of the commotion?\"\n\nDaniella smiled at her friend. \"Your little one in there will be loving it, I'm sure.\"\n\nLater the two mothers gave their children lit sparklers, and the older kids wrote their names and drew pictures in the dark air, the colourful sparking tips leaving a wondrous trail of light. Duncan and Sophie simply waved theirs about, giggling the entire time and enjoying life in such a way as only children can.\n\n~0~\n\nUnder the Milky Way\n\nFriday 8th of June, 2001\n\nEven though Duncan was familiar with this northern stretch of the Pacific Highway, he was a touch nervous. This was his first time behind the wheel on this section of road, driving the car, and having only held his licence for a year, he lacked experience with fast highway driving. Indeed, it was his first time driving further than the Gold Coast where his father now lived since his parent's separation. On this particular occasion his mother offered him the opportunity to drive her white Hyundai Excel to gain highway driving skills.\n\nTrying to act cool, Duncan thought he hid his nerves well, but Beth sensed her son's tense demeanour and spoke encouragement from the passenger seat. \"You're doing great, sweetheart.\"\n\n\"Our car's driven this road so many times it'll drive for you!\" Duncan's sister, Kate, piped up from the back seat.\n\n\"Yeah, I should be able to do this blindfolded,\" Duncan joked with a nervous laugh.\n\n\"Well, the car does know the way,\" Beth chuckled. \"Just relax. But do keep your eyes on the road.\"\n\n\"And your hands upon the wheel,\" Kate added with a musical lilt and chuckle of her own.\n\nThey were south of the Queensland/New South Wales state border now, across the Tweed River, after which the highway winds through country of green hills and valleys. Great fields of sugarcane grow beside the road here, along with paddocks of grazing cattle and the occasional macadamia nut or avocado orchard. And everywhere remnant patches of forest dot the land, noticed for a brief moment as the car sped by.\n\nTo the west is a rim of rugged ridges and mountain peaks, glimpsed occasionally through the trees and hills, surrounding an ancient volcanic plug of basalt rising over one-thousand metres from the coastal plain. In 1770 British naval Lieutenant James Cook recorded the great mountain as Mount Warning on his charts, to alert mariners of the dangerous reefs off-shore.\n\nDuncan preferred the mountain's name in the local Bundjalung language: Wollumbin. The mountain was known to some as 'Cloud Catcher' or 'Weather Maker', because its prominently sharp peak attracts cloud and lighting storms. One story says the mountain was a brush turkey who stopped to rest, where it was wounded by a hunter's spear and couldn't fly away.\n\nBut Duncan's favourite legend told of Wollumbin as a warrior. It was not difficult to see the outline of the warrior's face, as if resting the back of his head in the green valley, eyes pointed skyward with the sharp peak as his nose and the high cliffs to the north forming the warrior's strong chin.\n\nNow the low sun cast its last rays of light in a golden glow over the warrior-mountain, across the fields of almost ready to harvest sugar, and the grazing cattle. Duncan pulled the sun-visor down, swivelling it across the top of his driver's side window to block the glare as the light flickered through the roadside trees. The sun quickly disappeared and the moderately heavy long-weekend holiday traffic formed a mesmerising line of red tail-lights, as far as the eye could see.\n\nHe recognised the highway exit to Nan and Pop's farm, nestled in a steep valley among the forested hills, many kilometres to the west. The farm was his mother's childhood home before she left at age eighteen in 1973, right before the influx of hippies to the region for the Nimbin Aquarius Festival. Duncan knew his Nan and Pop's not-so-flattering thoughts on the hippies, who'd never left, but his mother joked she'd have fit right in with them if she'd stayed. He suspected she was right.\n\nThey'd visit Nan and Pop for a few hours on Monday before driving back home to Brisbane, but for now they continued south, to Evans Head, further down the coast. While Duncan drove, Beth changed the radio channel and found a local station playing The Church's Under the Milky Way. Beth sang along, softly. \"Wish I knew what you were looking for, might have known what you would find...\"\n\nThe song was one of the many from the soundtrack to Duncan's youth, and combined with the familiar country-side rushing by, he felt pangs of nostalgia. Despite growing up in Brisbane, over one-hundred kilometres to the north, Duncan visited the northern NSW region almost every second weekend and every single School holiday of his entire life. All his best memories were made in this part of the world and he'd come to develop a strong sensation of coming home when down this way.\n\nHe often recalled how his Pop once told him how his great-great-great-great Grandfather arrived in the region during the 1850s to search for 'red gold', the giant red cedar trees of eastern Australia. The trees were called red gold because of their beautiful rich-red timber and the not-so-small fortune to be earnt by tough axemen willing to take on life in the dark primeval forests. They settled and cleared more forest, making pastures for grazing dairy and beef cattle.\n\nHe knew his mother was the first family member in generations to leave the region, but she returned often, and Duncan and Kate were the seventh generation of the family to know the lush, green mountains and valleys, and long white beaches along the coast. The knowledge his ancestors lived in this area for over one-hundred-and-fifty years gave Duncan the feeling he belonged to the place and in some ways he felt it was his ancestral land.\n\nOf course Sophie would strongly disagree with Duncan. This was not his ancestral land, but there was no doubting it was hers. She'd tell him her ancestors had lived in these forested hills and valleys, and walked these beaches for perhaps 40,000 years, and his ancestors stole it from her people not so long ago in the scheme of things.\n\nIndeed, he knew it to be completely true and there was no argument from him it was Sophie's country. She loved the land and the people, who were her people, above all other things, with the greatest passion.\n\nAnd this was one of the many reasons why Duncan loved Sophie above all other things, with a passion greater than he could understand. In the waiting time between every holiday and long-weekend, he endured a longing feeling deep within his heart to see Sophie again. His feelings for Sophie were more powerful than anything he'd experienced in his eighteen years, where he craved the true and utter pleasure he derived from Sophie's company more than he could ever put into words.\n\nAnd now, as twilight turned to darkness, he concentrated on the tail-lights of the car in front, but thought of Sophie again, which he often did, more than looking forward to seeing her and hoping she'd already be waiting at his Pop's old holiday house.\n\n~0~\n\nSaturday 9th of June, 2001\n\n\"Surf's gonna be unreal today I reckon!\" Sophie said, grinning at Duncan. \"I can feel it in me waters.\"\n\nDuncan put down his vegemite toast and grinned back, playfully kicking Sophie under the table. \"Your waters better give us a fucken good swell, eh, Soph, because the weather's looking pretty ordinary out there.\"\n\nWith mock indignation and a straight face, Sophie put on her best interpretation of a stern mother. \"Duncan Ross, I should wash your filthy potty mouth out with soap!\"\n\nDuncan smirked and Sophie couldn't stop her face breaking into a broad grin, which was her default setting. Sophie Flanagan always appeared to be smiling, no matter what.\n\nAcross the ancient rich-red cedar table Kate looked up from her book and Weet-Bix breakfast cereal, rolling her eyes at them. Duncan and Sophie chuckled, grinning at each other, while Frank stood at the kitchen sink, appearing to ignore the shenanigans behind him. He was staring out the window at the dark clouds blanketing the sky, and drumming on the edge of the counter-top in time with the hip-hop sounding from the single speaker of the old grey radio/cassette player on the windowsill.\n\n\"Looks like it's gonna rain to me, Sis,\" Frank said, surprising everyone else because they'd not even thought he was paying attention. He turned and grinned at Sophie. \"At least that's what my waters are tellin' me.\"\n\nSophie's stared at her brother. \"Frank, since when have your waters ever been right about anything, eh? And anyhow, if it rains, so what? We go for a surf and get wet, so what's the biggie?\"\n\n\"Reckon me waters are more reliable than yours, Sis. Looks like it's gonna storm too and the surf's gonna be real messy this mornin'.\"\n\nSoon it did rain and a storm rumbled about the sky. The rain fell steadily all morning, not bucketing down like a summer's deluge, but constantly drizzling and making everyone feel cold and damp, accompanied by an occasional lightning flash and rumbles of thunder. And at one point it rained much harder and there were tiny hailstones too.\n\n~0~\n\nKate placed a draw-four wild card onto the discard pile and called, \"Uno, and I'm changing the colour to yellow.\"\n\n\"Shit,\" Duncan said, picking up four cards from the deck, adding them to the two cards remaining in his hand.\n\nSophie flashed Duncan a look. \"Shoulda called her on her draw four.\"\n\n\"You know Kato never cheats, unlike you.\"\n\n\"Pfft, I never cheat, Duncan Ross. I'm just better at the game than you. And anyway, Kato's innocence is a cover for her devious mind!\"\n\nKate poked her tongue out, pointing out the house rules. \"Can't win on a draw-four anyway so I had no choice but to play it.\"\n\nSophie grinned back in typical fashion. \"I know, but I want to see Dunc fight to win for once.\"\n\nThe three of them played Uno, sitting on old faded green plastic chairs around the ancient rusty wrought-iron lace-work table with its white paint mostly peeled off long ago from its many years on the weather-beaten veranda. The ocean continuously reminded the young surfers of its presence, with salty air pervasive and the raging rumble of the dumping surf thumping not too far away, across the street, yet hidden from view by the vegetation on top of the dune.\n\nFrank sat on the old cane lounge with his bare feet up on the veranda railing, strumming chords on his guitar and humming a tune. Daniella and Beth joined their children mid-morning; Daniella sitting next to her son with a guitar of her own and joining his strumming, while Beth stood at the end of the veranda, pointing her hand-held Sony camcorder at the scene in front of her.\n\nPutting on her best David Attenborough impersonation, Beth said, \"Here we have found several grommets sheltering from the rain and playing Uno. First appearances are deceiving, because it appears they are hiding from the rain, yet the look of disappointment on their faces and their forlorn gaze towards the sea indicates their true desires, which is the thrill of catching a fully sick wave for a few seconds before getting dumped near the shore, then paddling out to do it all again.\"\n\nDuncan and Sophie laughed at Beth's attempt at humour, and Frank cracked a smile as he and his mother strummed the chords to Midnight Oil's Beds are Burning. Rolling her eyes at her mother, Kate mumbled something about how she was so embarrassing, and to keep the camera out of her face, causing Daniella to laugh at her friend's daughter's reaction.\n\nThat's how they spent the morning while the clouds and showers hung about, causing the ancient guttering and bull-nose iron roof to leak through the many rust holes onto the veranda. Duncan's grandfather, his Pop, built the beachside house on the edge of the tiny fishing village during the 1950s as a base for his frequent fishing trips. He built it as a tiny fisherman's cottage, but when his family grew to three children, including Beth, he'd gradually extended the cottage into a reasonably spacious house for the purpose of regular family holidays. Unfortunately as age began to take its toll on both him and his salt-sprayed holiday house, he'd begun to neglect certain maintenance jobs. Beth was the only family member to use the house now, so her father wouldn't sell the place; not in a million years.\n\n~0~\n\nBy early-afternoon the storms moved up the coast, and later the southerly wind shifted, tending off-shore and calming the rough, choppy Pacific to produce sets of gorgeous one-and-a-half to two metre waves with hollow tubes.\n\nDaniella and Beth sat on a beach towel with a grey blanket draped around them, watching their children walk confidently with surfboards under arms towards the ocean, their lean bodies decked out in wetsuits protecting them against the winter cold. This was a ritual the two women had partaken time and time again on almost every trip to the holiday house since the day their children were first introduced to the ocean.",
        "\"They're not grommets anymore, Beth,\" Daniella noted. They were both proud and also a little saddened to admit their children were no longer children. Daniella's eldest son, Ted, was twenty-three and rarely joined them on family holidays anymore, often on account of his job as a National Park's Ranger.\n\nFrank was twenty-one and a car mechanic, plus talented musician hoping to break into the music industry, while Duncan and Sophie, who'd both turned eighteen several weeks previously, were more than halfway through their final year of high school. Only fourteen year-old Kate was still a child, and she too was growing up much too fast for Beth's liking. She'd be fifteen a couple of months.\n\n~0~\n\nThe four young surfers paddled through the breaking surf. Being winter and because of the earlier storm, there were only a few hardy souls out to catch waves, despite the influx of holiday makers for the long-weekend. The kids recognised Basil Knotwood, the stout barrel-chested fiftyish local fish-and-chip shop owner, whose posh-sounding name was unsuited to his tough, wild un-kempt look, and to most who knew him he was simply 'Knotty'.\n\nAlong with themselves and Knotty, three other surfers bobbed among the waves together, competing for sets.\n\n\"Probably holiday makers,\" Kate said.\n\n\"Yeah, typical. Come to our beach to steal our waves.\" Sophie spoke in jest, having no real issue with the other surfers. Straddling her board and staring at the swell forming up, she grinned in her typical happy-go-lucky manner.\n\n\"Check it out, Knotty's caught a fuckin' ripper!\" Frank gestured towards the old timer, who disappeared from sight as his wave curled up behind and over him. \"I'm goin' the next one!\"\n\nHe did so, paddling furiously with the on-coming swell, sliding down the wave's face, standing on his board and off he went towards the shore.\n\n\"Man, that was shit-hot,\" Duncan said with a whistle, watching Frank ride in and flick his board tightly up onto the crest in a spray of white, standing there on top for a moment as if suspended in time and space, then diving off the wave's back an instant before the barrel collapsed into a mass of thundering, foaming white water.\n\n\"You take this one, Kato,\" Sophie said as the swell began to rise.\n\nKate manoeuvred into position, checking the progress of her wave then paddling with the surf, and she went, standing quickly and expertly, shooting off down the face before riding along it, the barrel trying to overtake her.\n\n\"You're up, Soph,\" Duncan said, still watching Kate's run into the shore.\n\n\"Nah, you go next.\"\n\n\"Nah, I insist. Ladies first.\"\n\nStraddling her board with legs in the water, Sophie looked about, then raised her eyebrows at Duncan. \"Sorry, I don't see no ladies around here.\"\n\n\"Just go, ya gronk, or you'll miss this one,\" Duncan replied with a laugh.\n\nWithout another word, Sophie gave Duncan a smile as she judged the rising swell, then began paddling hard, catching the wave perfectly. Watching her and keeping an eye on the incoming swell, Duncan took the very next wave in the set, paddling in and standing, instantly filled with the euphoria that hooked him from the moment he'd first ridden a body-board as a kid on this very break.\n\nThe wave, his wave, didn't disappoint, and he accelerated down its face, carving up and down, making energetic flicks back and forth, shooting along it, adrenaline pumping through him and salt spray blowing in his face. Many seconds of rush and roar, then the tube looked like it would overtake him, roaring and tumbling about with white water. Duncan sped along, accelerating, flicking back up onto the crest and attempted to carve a three-sixty turn, but the wave collapsed around him and he made a shallow dive off his board, nowhere near as gracefully as Frank's recent effort, breaching the surface and spitting a little salt-water from his mouth.\n\nAnd then they were all heading back out in the swell again, where Knotty paddled strongly over to join them.\n\n\"Well blow me down with a feather, if it isn't the Ross and Flanagan kids. Fancy seeing youse all turn up!\" Knotty said it with a smile and a chunk of irony, because it wasn't uncommon on public holidays for these kids to run into Knotty, either in the surf or at his fish-and-chip shop. \"Nature sure has given us a gift this arvo my friends, and we few, we happy few will remember this moment to the ending of the world!\"\n\nIndeed, nature had given them a gift, and they all laughed at Knotty's theatrics. The surf was their playground for next hour, catching waves until they began to feel discomfort from the cold. Sophie and Kate piked first, soon followed by Duncan.\n\nFrank, who appeared immune to the cold, stayed out for another half-hour, till right before sunset, and caught some of the most spectacular barrels as rays of golden light lit up the surf. The others on the beach watched in awe, wishing they'd stayed out a bit longer to partake in the magic.\n\n~0~\n\nBeth and Daniella had gathered sticks, small logs and driftwood, piling them on the beach below the dune, and the kids helped them make a fire. Knotty walked up the beach with his wetsuit pealed to waist and board under arm, joining them in the fading light as the fire smoke began to rise.\n\n\"Hey, youse guys must be starvin'. How'd you like me to go back to the shop and get ya some grub? My treat, on the house.\"\n\nLooking up at the tough, leathery-skinned surfer, Beth said, \"Sure, Knotty, sounds grouse. But we'll be payin' ya.\"\n\n\"Youse ain't have ta pay me nothin',\" he said with a smile and waving his hand dismissively.\n\nMeanwhile, the young surfers took it in twos to head back to the house for a quick shower and warm clothing. Sophie and Kate went first, then Duncan and Frank, who returned with beers for the adults and passionfruit flavoured soft drink for Kate.\n\nFrank also brought along his guitar, and they sat at the fire as Knotty returned. He handed them hot parcels of butcher's paper containing grilled fish fillets and generous helpings of chips, the delicious smells mixing with the burning wood-smoke.\n\n\"There ya go, get it inta ya. Caught the bass meself this very morning, up the river.\"\n\n\"Geeze, you're spoilin' us, givin' us ya catch of the day!\" Daniella replied. \"Will you join us?\"\n\nWith a smile and wink in return, Knotty picked up several chips and said, \"Tis a crook cook who can't lick his own fingers, I always say.\" As he shoved the chips in his mouth, Kate giggled, evidently finding his bastardisations of Shakespeare amusing. \"Anyways,\" Knotty continued, \"I caught two of 'em, and Ronnie and I'll have a good feed too, so don't you worry about us.\"\n\n\"Aw thanks, Knotty,\" Duncan said, a juicy bass fillet in his fingers. \"Tastes amazing!\"\n\n\"I might come for a walk later with Ronnie and Trem, and see if youse are still 'ere, ay.\"\n\nBeth smiled. \"No worries, Knotty, you're always welcome. And thanks again for the dinner. I do feel we should pay you, by the way.\"\n\n\"Nah, like I said, don't worry 'bout it, Beth. As far as I'm concerned youse are all locals. Bin comin' 'ere longer than I've lived 'ere!\"\n\n\"Knotty, you're too kind,\" Daniella said with a smile. \"But I hope this isn't ya business model, givin' away all your produce to your friends?\"\n\nKnotty gave Daniella a smile and a wink in the growing darkness, then turned, leaving them to the fish and chips by the fire. They feasted, licked their greasy fingers and sipped their drinks, and afterwards Frank strummed his guitar, occasionally singing too. All the while the fire cracked and spat sparks into the night's sky.\n\nLooking around her, Daniella spoke. \"Do you kids remember the last cracker night here? We stood right there, at the edge of the dune.\"\n\n\"Yeah,\" Frank replied with a giggle. \"I remember. Dad argued with some fella about the Queen or something after the fireworks! And you telling him off for it!\"\n\n\"Yeah, he sure did. Eff the bloody queen, he said! Well, I think it's what he said,\" Daniella recalled with a smile. \"And I tended to agree with him, though I weren't too happy with him sayin' it in front of all you kids. He shoulda known better than to argue with that bloke.\"\n\n\"I don't remember,\" Kate piped up, causing Beth and Daniella to laugh.\n\n\"Darling,\" Beth said and smiled at her youngest. \"I can't imagine you would remember, since you were still in my belly!\"\n\n\"I think I remember,\" Sophie piped up with a smile. \"I'm pretty sure we had sparklers?\"\n\nDuncan played with a stick, poking the fire. \"I think I remember the sparklers too. And I wore an itchy jumper!\"\n\nSophie screwed up her face. \"Yes, those itchy and daggy old jumpers we used to have!\"\n\nBeth chuckled. \"My God, you two have excellent memories! You did indeed have sparklers and the woollen jumpers Nan made for yas.\"\n\n\"Jesus, and to think it was what, fifteen years ago this very weekend! Last cracker night before they banned selling 'em to the public.\" Daniella looked at Sophie and then Duncan, and she chuckled. \"Youse two were so cute back then. It kinda makes me wonder what happened.\"\n\nBeth, who'd taken a sip from her stubby, unsuccessfully tried not to laugh at Daniella's jibe and managed to snort-laugh, causing beer to stream from her nostrils. Everyone laughed, more at Beth than Daniella's remark, while Beth's eyes filled with tears from the beer in her nose and from laughter.\n\nWhen the laughter died down Duncan and Sophie made eye-contact and both smiled self-consciously. Sophie's smile remained even when she turned to stare into the fire, and Duncan wondered what she was thinking at that very moment.\n\nTo him she was breathtakingly beautiful. Always, but especially now, with the fire-light reflecting off her face, which was framed by dark-brown tresses of unruly damp and wavy hair where it spilled from her jumper's hood, flowing about her neck and shoulders, more than wavy but not quite ringlet-curly, with natural light-brown highlights streaked throughout. The rest, he knew, fell halfway down her back under the jumper.\n\nHer baggy black hoodie jumper displayed the Aboriginal Flag prominently across her chest, its rectangle divided horizontally by the black-upper and red-lower background, with yellow sun-circle in the centre. Her pride in her country and people never failed to stir the emotions in Duncan's heart, inspiring him, and for a moment he couldn't take his eyes from her, enchanted. She looked up at Duncan again, still smiling, the flames sparkling golden-orange in her light-brown eyes as their gaze met, his heart skipping a beat.\n\nFrank, a fan of Bob Marely, struck up familiar reggae chords on his guitar and started crooning, \"I wanna love ya and treat ya right, I wanna love ya, every day and ev-er-y night...\"\n\nSophie and Duncan self-consciously looked away from one another, while Beth and Kate began to clap along, adding a beat to the guitar's rhythm, and Daniella joined her son with her own sweet singing voice, \"...Is this love, is this love, is this love, is this love that I'm feelin'? I wanna know, I wanna know...\"\n\nDuncan felt his face flush and took a casual swig of beer to hide his embarrassment. Yet he couldn't help smiling, knowing how deeply in love with Sophie he truly was. And how afraid he was to make any awkward advance towards her, hiding his deepest-most feelings, where he worried she might reject him, causing the powerful magic he felt between them to disappear forever.\n\nWhen he glanced at Sophie again he saw she was looking back into the fire, still smiling in her wonderfully happy way. Frank continued to serenade them, while Kate stifled a giggle, knowing what mischief was afoot. Daniella and Beth shared knowing smiles, as if confirming a secret they'd known all their lives.\n\nSoon after eight o'clock an exuberant border collie invaded their circle around the fire, jumping and licking each of them in turn, and receiving enthusiastic pats. Kate was partly bowled over, copping several licks to the face, and she cried out, \"Hey, Trem, I'm happy to see you too, girl!\"\n\nA familiar cackling voice called out, \"Well look what the cat's dragged in! 'Ows it goin'?\"\n\n\"Not too bad, Ronnie,\" Daniella responded. \"How you goin'? We'll make some room for ya.\"\n\nRhonda and Knotty joined them at the fire, while Trem ran around like a berserker until she felt she'd greeted everyone with the correct amount of slobber and tail-wagging, then sat between her humans, only moving her head to whoever spoke, and randomly wagging her tail in the still-damp sand.\n\nWith the wanning gibbous moon showing three quarters of her face above them in the now cloudless sky, they chatted long into the evening, sharing news and gossip until Beth, Daniella and Rhonda eventually called it a night.\n\n\"We'll see you kids in the morning,\" Beth said.\n\n\"Make sure the fire's out proper before you leave,\" Daniella told them.\n\n\"Nah, Mum, we're gonna leave it going,\" Sophie replied with a cheeky grin. \"Probably start a fire in the grass up on the dune too.\"\n\n\"Don't be cheeky,\" Daniella chastised Sophie, but with a smile as broad as her daughter's. \"You know very well it's mostly because I don't want some unfortunate bugger walking in the coals by accident. I've seen the nasty burns down at the hospital, as you know.\"\n\n\"Sure Mum, I know, I know.\" Having a nurse for a mother, she'd heard about every potential danger going, like people throwing sand on beach-fires to douse them, then accidently walking on the hidden and still-hot coals the next morning.\n\nKnotty waited ten or so minutes after the women left before he reached into his old brown jacket and pulled out a joint. \"Yas didn't see anything,\" he said with a wink, lighting the end with a burning stick from the fire and sucking in the smoke. \"I have a few more if ya'd all want a puff.\"\n\nFrank took up Knotty's offer, taking a long drag, and said, \"Geeze, Knotty, you certainly are feelin' generous today with ya fish and weed. What'd ya do, win some money or somthin'?\" He passed the joint to Duncan, who sucked in a modest puff before passing it to Sophie. Only Kate declined the weed.\n\n\"Don't tell anyone, but it's me birthday,\" he said with a twinkle in his eye. \"Yesterday I was fifty, and today I woke up and was twenty-one again. I shit you not.\"\n\nThey all laughed. \"Happy birthday Knotty, ya young whippersnapper,\" Sophie said, grinning.\n\n\"Yeah, Knotty,\" Duncan added, \"Ya should've said something earlier. Happy birthday, mate.\"\n\n\"Fancy them putting a long-weekend on for your birthday, Knotty,\" Kate laughed.\n\n\"I always thought I had a bit of royal blood in me,\" Knotty replied with a cheeky grin.\n\nFrank began to strum Happy Birthday on his guitar, and they all sang to Knotty by the glow of the fire. Afterwards, they bantered and chatted, and Trem cocked her head, her ears pricking up, and she stared intently beyond the glow of the firelight into the darkness. Knotty placed a calming hand on her head. \"What is it, old girl?\"\n\nThey fell silent and the murmur of voices in the dark became audible above the crackle of the fire and the regular crash of breaking surf. \"Hello out there,\" Knotty bellowed out into the blackness.\n\n\"Hello, friend,\" a jovial voice replied.\n\nA group of four teenagers around the same age as Duncan and Sophie appeared in the moonlight. One of the male members of the group, a tall and broad young man with curly black hair, greeted them, his deep voice betraying him as the one who'd called out. \"Hello ladies and gentlemen, nice fire you have here.\"\n\n\"Come and join us if ya like,\" Knotty offered without hesitation. His generous nature didn't even consider his four young friends might object to the intrusion by strangers to their fire. Which they didn't in the slightest, because each were gifted with naturally generous hearts.\n\n\"Yeah, come sit, we have plenty of room,\" Sophie said cheerfully, moving close to Duncan, delighting him greatly. Led by the burly young man who'd spoken, the four strangers, including one other young man and two young women, sat in a semi-circle on the other side of the fire. \"I'm Sophie, by the way, and this is Duncan, Kate, and my brother Frank. And the funny lookin' bloke over there is Knotty.\"\n\n\"Don't forget Trembles here,\" Knotty said, giving Trem a pat, her tail wagging furiously at the acknowledgement. Nodding to the newcomers, Knotty stated, \"It's a pleasure to meet youse all.\"\n\n\"Nice to meet you all,\" one of the girls said. She looked similar to the big guy; tall with square-jawed features, curly black hair and crystal-clear blue eyes which sparkled in the firelight, and Duncan wondered correctly if she was the big fella's sister. She continued, \"I'm Kylie and this is my twin brother Paul, and our mates Annette and Noah. Are you locals or on holidays?\"\n\n\"Depends what ya mean by local,\" Knotty answered. \"We're all kinda locals. These kids have been comin' here as long as I've lived here, but then again, I've lived here for as long as I can remember. Well, not countin' me thirty or so years in livin' in Sydney in a past life.\"\n\nThey all chuckled, however the laughter from the new arrivals was more polite than amused.\n\n\"Our Pop's had a house here since the fifties, on the other side of the dune there,\" Kate said. \"And our mums have come here for holidays since they were young, and then we've come since we were babies too.\"\n\n\"So you're all related?\" This was asked by Annette, whose long blond hair fell to her waist, not dissimilar to Kate's slightly shorter golden locks.\n\n\"Yeah,\" Frank said with a laugh, pointing in the direction of the ocean. \"We're all brother and sisters of the waves, and Knotty there is some random local bloke who only thinks he can surf.\"\n\nKnotty laughed too. \"I bin surfin' way before you were even thinkin' of catchin' the big wave up your old man's spout, Frankie boy.\"\n\nDuncan and his companions laughed but noticed the small group on the other side of the fire were not following their in-jokes, so he decided to help them out. \"Soph and Frank are sister and brother, and me and Kate are too. Our mum's are best mates so we're probably closer than cousins. Kato and I are from Brisbane though, but Mum grew up on a farm out Nimbin way. But this is really Soph and Frank's country, though they're actually from up the road near Lismore. And Knotty here's the local fish-and-chip shop owner and general beach-bum. Where you guys from, anyway?\"\n\n\"Sydney,\" Annette replied.\n\nThis piqued Knotty's interest. \"You kids have done the right thing comin' up 'ere because I reckon the best thing Sydney has to offer these days is the drive out. Anyway, where abouts if yas don't mind me sticky-beakin'?\"\n\n\"Manly,\" Paul said. \"God's own country.\"\n\n\"Ah, yeahs, the insular peninsular. Used to surf there and even lived up the road at Dee Why for a bit, back in my day. Used to go down ta Brookvale oval to watch Parra thrash the Sea Eagles too.\"\n\n\"Everyone loves to watch Manly get thrashed,\" Kate giggled.\n\n\"It's true,\" Frank added, \"But it's still a damn shame they merged 'em with the Bears last year. Shoulda kept both clubs separate.\"\n\n\"They'll always be the Sea Eagles to us,\" Paul said, referring to the recent merger of his Rugby League club, the Manly-Warringah Sea Eagles, with a nearby club, the North Sydney Bears.\n\n\"Yeah, damn straight,\" said their friend Noah, whose short orange hair matched the flames from the fire. \"Best team in the league. They'll split them back into Sea Eagles and the Bears again I reckon.\" He followed his remark by spitting on the sand between his legs.\n\nDuncan smiled. \"Doesn't matter, because the Broncos are the actual best team in the entire comp and will smash everyone and win the premiership, like they did last year.\"\n\n\"Get yer hand off it, Dunc,\" Frank laughed. \"This is the year the Bulldogs get their act together I reckon. They got some good players comin' on.\"",
        "\"I thought you were a Bunnies man?\" Kate asked.\n\n\"Souths are out of the comp, remember,\" Frank replied, referring to his preferred team, the South Sydney Rabbitohs, who'd recently found themselves excluded from the Rugby League competition.\n\n\"So Frank's gotta find a new team,\" Duncan laughed, flashing a grin at his friend. \"Should've picked the Broncos, mate.\"\n\n\"Damn straight,\" Kate laughed. \"Broncs for the win.\"\n\nFrank laughed at them. \"The Bunnies will be back, but I'm going for the Doggies for now.\"\n\nSophie, normally a Souths fan like both her older brothers, piped up, \"You're all wrong. This year the Knights will win the premiership. You can all write this down and put money on it. I had a dream about it.\" Then she straight up changed the subject, smiling and politely asking the young people across the fire, \"If you don't mind me asking, are you all Christians?\"\n\n\"Good guess,\" the big bloke, Paul, answered with a chuckle. \"Though Rugby League is my second religion. But are we that obvious?\"\n\nSophie smiled. \"You don't look like the usual holiday makers who come here. Not in a bad way or anything. Frank and me used to go to church a bit till Mum and Dad stopped taking us. But most kids our age around here are getting drunk about this time of night.\"\n\n\"If we met on a typical Sat-dee night on the Manly Corso you'd not think we were saints,\" Paul joked. \"But this is a dry weekend for us, since we drove up yesterday for a church ministry camp. We have to be on our best behaviour, you see.\"\n\nAfter some more chit-chat, Paul, Kylie, Annette and Noah revealed they were also in their final year of high school, and consequently the course of the conversation naturally progressed to discussions about exams, or whether they were going to the traditional end of school 'schoolies' celebrations at the end of the year, and what they planned to do afterwards.\n\n\"I'm applying for medicine,\" Kylie said.\n\n\"Me too!\" Duncan responded eagerly, his eyes lighting up. Sophie gave him a quick glance but he made nothing of it.\n\n\"I'm doing a law and economics double degree,\" Annette said in a manner suggesting she'd already been accepted, even though the application period was months away.\n\n\"Where are you thinking of applying for law,\" Sophie asked. \"Like, what uni you goin' to?\"\n\n\"Sydney Uni, of course,\" Annette replied in a tone implying there was nowhere else on Earth where such a degree existed.\n\nSophie raised her eyebrows and drew the corners of her mouth down, as if she'd been taught something she should've known, but continued enthusiastically, \"I'm applying for law there too! Well, for my first choice anyhow. I might combine it with an arts degree, perhaps something in philosophy or politics. I'm not totally sure yet.\"\n\nIt was Duncan's turn to give Sophie a look of surprise, and she met his raised eye-browed gaze with fierce fire-reflecting eyes, but said nothing.\n\nAnnette appeared to study Sophie from across the fire for a moment, before replying. \"So you are applying for a special scholarship then?\"\n\n\"No,\" Sophie said with a slight hint of exasperation the newcomers were unlikely to perceive. \"Are you?\"\n\n\"No, of course not.\" Annette didn't voluntarily engage further in the conversation, and out of the corner of his eye Duncan thought he detected a slight frown cross Sophie's face, but if it was there, it only existed for a split second.\n\nHe was sure he knew why, suspecting Annette judged Sophie, who wore her Indigenous ancestry with pride in the form of the Aboriginal Flag blazoned across the front of her hoodie. Perhaps Annette deemed Sophie unworthy or even incapable of earning a place at law school without even getting to know her. It wasn't the first time he'd witnessed the racism, whether veiled or overt, that Sophie and Frank occasionally received, and he felt defensive on Sophie's behalf.\n\n\"Soph'll get in, no dramas,\" he declared to the group across the fire. He wanted to question Sophie on the matter of her choice of university though, which would take her several hundred kilometres further south, away to Sydney. But now was neither the time nor place.\n\nAnnette raised her eyebrows but said nothing. Paul, a jovial fellow, talked about applying for an engineering degree, and Noah, who'd remained mostly silent, told them he was thinking of taking an electrician's apprenticeship with his father's business.\n\n\"Nothing wrong with a trade, mate,\" Knotty injected his two cents into the conversation for Noah's benefit. \"Youse wouldn't believe it but I got into uni back in the day to study English Literature. First person in me 'ole family to get in, and back then if I weren't surfin' or playin' footy, I was readin'. But then me old man fell sick and I quit uni before I even started, to go work for me uncle as a builder and help earn me family a quid. Uncle Graham didn't think much of me books, reckoning literature was irrelevant to real life. But think about this; if I'd not pulled out of uni I might've bin doctor Knotty to yers all by now!\"\n\n\"Professor Knotty, I reckon,\" Frank laughed.\n\nKate pipped up with, \"You should write a book, Knotty.\"\n\n\"Yeah,\" Duncan said with a chuckle. \"Write your memoirs.\"\n\n\"I've already got a title,\" Knotty replied. \"It's called, Life's a Beach, then you go Surfin'.\"\n\nThe kids who knew Knotty laughed, and the chatter continued. However, the longer they sat there Duncan felt the hint of disdain from Annette toward Sophie, who he suspected was becoming irritated by the unspoken hostility. He was irritated too and wanted to make things right for her in her heart. Plucking up courage, he took Sophie's hand, giving her a reassuring squeeze.\n\nShe pulled her hand away from his, while out of the corner of his eye he definitely saw her frown. His broken heart thumped in his chest while she picked up the last log from their firewood pile and tossed it in the fire.\n\nDuncan felt heart-sick at Sophie's rejection and began staring into the fire-glow, watching the log catch. The scenario was a nightmare, where his worst fears were coming true.\n\n\"Hey, Dunc, mate,\" Frank's voice startled him, and he flinched, worried how transparent he was. \"Come help with the huge branch we saw back on the dune earlier.\"\n\nHe looked up at his friend, hoping he hid his miserable rejection well, and replied, \"Yeah, mate, sure.\"\n\n\"I'll come and help you guys,\" Paul offered.\n\nFrank, Duncan and Paul went onto the dune to drag the fallen tree branch. Paul was clearly enjoying the friendly fire-side chat and spoke easily with them, while Duncan politely chatted, trying not to brood. But when they returned to the fire with the fresh timber they detected a new tenseness in the conversation.\n\nAnnette was speaking directly at Sophie in a condescending tone. \"So, what you are saying is the whole republic referendum was a farce? Yet here you are, enjoying this long-weekend in honour of the Queen's birthday. Don't you think you're being a little hypocritical?\"\n\nFrom the outer edge of the circle Frank interrupted before his sister answered, laughing and grinning nervously, parroting similar words to those his father spoke fifteen years previously near the same spot he now stood. \"She might be your bloody Queen, but she ain't ours. Fuck 'em royals!\" He laughed again, as was his nervous habit when he was unsure about himself.\n\nAnnette shot Frank a look. \"You're being disrespectful, don't you think?\"\n\n\"She's the bloody English Queen, not ours,\" Frank said, his voice shakily betraying the nerves that welled within when confronted with possible conflict.\n\n\"And if it wasn't the English,\" Annette replied in an assured tone, \"It would have been France or the Dutch or someone else who colonised Australia. So you'd be worse off than you are.\"\n\nFeeling chastised and out of his depth, Frank simply looked away, letting go of the end of the branch. He'd copped shit like this all his life and he knew arguing wasn't his strong suit. These days he considered himself a gentleman; a lover and rarely a fighter unless backed into a corner. And only then it was his fists that did the talking, which only ever got him into trouble throughout his childhood.\n\nSophie, on the other hand, was a fighter with words and not afraid to give Annette a fiery look, straight in the eyes. \"Frank speaks from the heart, because what has your Queen, or the laws she represents as head of the British state ever done for our people? After invasion, Arthur Phillip instructed his soldiers and convicts that Indigenous people were subjects of the British Crown, and supposedly protected under the law, but it never happened, did it? They said the land belonged to no one and was terra nullius, and so they stole it under false pretences. Thousands of lives were taken, and there's no point in arguing about what-ifs of whoever else might have colonised us, because speculation doesn't justify a single thing that actually happened. But back to your original question about my thoughts on the republic referendum, the exercise was a farce destined to fail because the politicians deliberately chose the least-favoured model of republic, where the head of state would be appointed by the Parliament. Even republicans didn't want it, and so it didn't get up. But it will one day, which means changes to the Constitution, and I dare expect my people will be included in the change.\"\n\nSophie continued to stare at Annette, as if to challenge her to speak. Annette opened her mouth, as if to say something, but remained silent, while her friends Paul and Kylie looked on wide-eyed, clearly perturbed by the recent confrontation. Their other friend, Noah, simply looked down between his legs and spat in the sand.\n\nFrank lifted his head with pride at his sister's defiance, as did Duncan and Kate. Duncan's earlier rejection funk dissipated as he felt a new glow of respect and love for Sophie wash over him. This was a side of Sophie that Duncan only saw glimpses of, but never in full flight; passionate and speaking about subjects close to her heart, and he was impressed beyond words and feelings.\n\nAgain Annette looked like she might respond, but Paul spoke deliberately, with humour in his deep voice. \"Ah, Annette, put this old chestnut of yours away. What did we say before this trip? We only talk religion, not politics. And never mention the damn monarchy! Especially when we are invited to sit at the fire with new friends.\"\n\nPaul then chuckled loudly, as if laughing at his own joke, but Duncan suspected he'd heard Annette's diatribes before, which he probably had, and knew the subject needed to change. Addressing Sophie with a smile, Paul continued, \"Annette does love a good debate, but I believe she may have met her match in you. You'll complement one another if you end up studying law together.\"\n\nAnnette now appeared chastened and put in her place, first by Sophie and then by her own friend who showed no inclination to back her views. She did, however, appear to want to have the last word, and simply looked across the fire at Sophie and said, \"Well, we'll see.\"\n\n\"What-ever,\" Sophie said under her breath, still glaring at Annette with the eyes of a predator who'd wounded her prey and was ready to go another round to finish the kill.\n\n\"Woah, that was heavy. May I suggest youse all need to chill. Take a little visit over to Nimbin for some wacky-toh-baccy.\" Knotty grinned, attempting to lighten the atmosphere. He reached into his pocket and pulled out several more joints, and continued, \"Or, if you'd like, I could arrange some of the magic grass for youse right here.\"\n\nKylie looked at Knotty and smiled. \"Your offer is tempting, Mr Knotty, but alas, I think we'll pass for now.\"\n\nKnotty laughed. \"Suit yerselves. But youse are missin' out on the good shit.\"\n\nDuncan was surprised when Kate spoke up to change the subject. \"Dunc and me are Queenslanders, so our religion and politics are both about beating you New South Welshmen at State of Origin tomorrow night.\"\n\nState of Origin was the annual three-game Rugby League series between the Queensland Maroons and New South Wales Blues, with game two of the series to be played and broadcast on TV the following evening.\n\nThere were some chuckles and Frank piped up again. \"You Queenslanders won't stand a chance in game two, Kato!\"\n\nKnotty laughed. \"Oh shit, I'd almost forgotten you Ross kids are Maroon-blooded Queenslanders!\" He pronounced 'maroon' like 'moron'. \"Can't even claim to be from God's country when it comes to Origin, even if ya mum is from 'round this way. You Maroons haven't got a hope down in Sydney in front of eighty-thousand or so screaming Blues supporters at the Olympic Stadium!\"\n\n\"Nah, Maroons are totally gonna win,\" Sophie said, her good humour returning.\n\n\"Not this again, Sis,\" Frank laughed. \"Switching sides when ya born down here.\"\n\nSophie playfully held her palm to Frank's face, suggesting he talk to the hand. \"Pfft, you know these borders aren't our borders. Queensland's closer and way better at footy.\"\n\n\"Damn straight, Soph,\" Duncan said, grinning and more than glad to see Sophie smiling again. \"Queensland to dominate for next twenty years.\"\n\n\"Ah, Rugby League,\" Paul piped up from the other side of the fire, his voice dreamy, as if speaking of his first love. \"You guys are talking my language again. Queensland is cocky, but Tallis is out with his neck injury for you, and Freddy Fittler's playing his final games for us, so I think you Maroons are screwed this series.\"\n\nThe atmosphere thawed and the end of the thick branch was tossed on the fire, sparks flying into the dark night air. Sophie was back to her usual self, bantering with her friends, while Annette and her friend Noah appeared subdued, no longer taking part in the discussions.\n\nDuncan and Kylie continued their conversation about their intentions to go to medical school, and more than once Duncan noticed out of the corner of his eye how Sophie watched them. He couldn't read the expression on her face but suspected something was up, but he put it down to her irritation with both Annette and his taking her hand earlier, and for now he ignored her.\n\nFrank played his guitar, while Knotty smoked several joints, occasionally offering them to the group, only Frank taking his offer. Around midnight Knotty finally rose and brushed off the sand from his legs, his eyes red and voice relaxingly stoned. \"Anyways, I'm cooked. It was fun chattin' to yers and I'm sure I'll see you kids before you leave. Come on, Trem, old girl, time to hit the frog and toad me thinks before Ronnie orders a search party to fetch us.\"\n\n\"Yeah, I'm headin' too,\" Sophie said. There was an unspoken consensus by Kate, Frank and Duncan to join her, where they all stood to leave.\n\nBefore leaving, Duncan asked, \"If you guys stay with the fire, can ya put it out properly with water and not just sand, thanks? Use our empty beer bottles to get water if you like and we'll collect them in the morning.\"\n\n\"Sure thing, Dunc,\" Kylie said with a friendly smile. \"Best of luck with your uni applications.\"\n\n\"Thanks, you too,\" Duncan said, giving everyone a wave. \"All the best to yas all.\"\n\nThey bade their farewells and as they turned to leave, Annette spoke, her tone harsh despite the words she spoke. \"Good luck to you all and God bless.\" Most of Annette's friends looked surprised, perhaps wondering if she was issuing an apology of sorts, while their friend Noah looked bemused, spitting in the sand for the umpteenth time.\n\nSophie turned with a smile. \"No worries, maybe I'll catch ya at uni next year. Bring your debating shoes.\"\n\n~0~\n\nSunday 10th of June, 2001\n\nDespite the early hour of the morning, around one o'clock, Duncan couldn't sleep, staring at the ceiling of the semi-moon-lit dark enclosed veranda, listening to the sounds of the house and beyond. He lay on his pipe-cot, which, like the house, was probably fifty years old. This is where they'd always slept, on the enclosed veranda along the house's northern side, while their parents occupied the two small bedrooms off the main living room.\n\nSophie tossed and turned a couple of metres away on Duncan's right, and soon she climbed out of her cot and walked past him. Duncan closed his eyes, pretending to sleep, listening as she crept to the toilet, but after the sound of the flush, she didn't return.\n\nDuncan waited for a short time until he too took himself to the toilet, and not finding Sophie in the living room, he crept out onto the veranda. She wasn't curled up on the cane lounge as he'd assumed she might, but rather she was nowhere to be seen.\n\n\"Where are you, Soph?\" he whispered, thinking aloud. Moments later, by the trees and shrubs of the dune across the road, a pair of wallabies hopped away as if startled, and he saw the lone figure beyond, walking down the road towards the entrance to the beach. He thought-whispered again, \"What the fuck are you doing?\"\n\nSophie stood at the end of the dune track when he caught up with her, looking at the spot where the fire was now dowsed. She was wrapped in in the grey wool blanket their mothers used on the beach earlier, wearing it like a cloak, the blanket ancient, being issued to Duncan's grandfather by the Army in the deserts of North Africa during the Second World War.\n\n\"Everything okay, Soph?\"\n\nShe sighed. \"Couldn't sleep. Can't shut me mind down.\"\n\n\"Want company?\"\n\n\"Yeah,\" she answered without hesitation, \"I 'spose so.\"\n\n\"Looks like they put the fire out.\"\n\n\"Wanna see if we can get it going again?\"\n\n\"Sure.\"\n\nIn silence under the moon-light, they worked dried leaves and grass into a pile, and heaped in some hot embers from the end of the half-burnt smouldering branch the kids from Sydney clearly failed to extinguish.\n\nSophie knelt in the sand and gently breathed life back into the fire, while Duncan broke kindling from the un-burnt twiggy branch end. He fed the kindling into the new-born flames and the fire took. Sophie then sat on the cool damp sand, wrapped in the blanket with her knees up at her chest.\n\nDuncan collected more medium-sized sticks from the dune behind them, placing them in a plie near the edge of their fire, then asked, \"Any room for me in there?\"\n\nShe spread the left side of the blanket open, silently inviting him to sit with her. He settled down, right arm resting against her left, the sleeved contact comforting, leaving him silently thrilled and glad she didn't pull away. Enclosing his side of the blanket around his shoulders, he wrapped them together like a cocoon.\n\nEach brooding silently in their own thoughts, they watched the fire, listening to the ambient noises about them; the booms and hiss of the breaking surf, the fire crackling, and somewhere in the trees and shrubs on the dune came the haunting hoot of a boobook owl.\n\nFrom horizon to horizon The Milky Way shone like a million specks of glitter, forming a giant arc wheeling across the cloudless sky, while the moon was somewhere behind them, bathing the beach and ocean in a weak pale-silver glow.\n\nEventually Duncan broke the silence with a whisper. \"Look up, Soph.\"\n\n\"I know, it's beautiful.\"\n\nHe hesitated for a moment, then spoke again. \"So is it the girl from earlier who's troubling ya?\"\n\n\"Who? Kylie? The one you made eyes at all night?\"\n\n\"What?\" Duncan said, completely taken by surprise. \"I wasn't making eyes at her! Anyway, I was talking about the other one, Annette.\"\n\n\"Kylie totally made eyes at you the whole night.\" Sophie's whispered tone was accusatory, but next she spoke mockingly. \"Sure thing, Dunc! I've only known you five minutes, but I'll call you Dunc, because I feel I know you so well. I'll put the fire out, just for you Dunc. But I'd like to light your fire, Dunc. If only we were going to medical school at the same university, Dunc, cos we could do anatomy lessons together. Best wishes, Dunc.\"",
        "\"Are you serious, Soph?\" Duncan said, trying to see if she was grinning in the dark, which he was glad to see she was.\n\n\"I'm pullin' ya leg, ya dildo. Even if she totally had the hots for you, she didn't put the fire out proper like you asked her to. Dunc.\" Sophie emphasised his name again and chuckled quietly.\n\n\"Okay, Soph, sure.\" The silence between them grew till Duncan couldn't stand it any longer. \"I thought you were pissed because of the way that Annette girl spoke to you.\"\n\n\"Of course she pissed me off, assuming I'd only get into uni with a scholarship.\"\n\n\"Hmmm. Don't let it bug you, Soph. A scholarship's nothing to scoff at. Lots of people get them for many reasons.\"\n\n\"I know!\" Her voice betrayed the frustration she felt. \"It's an essential safety net for the disadvantaged, but it was the way the bitch spoke, like she was looking down her nose at me and my Mob.\"\n\n\"You know you're better than her, so don't let it bug you. I know you're better than her.\"\n\n\"I'm just so disappointed I didn't make my point better. Especially when she brought up the republic referendum, which was down-right bizarre. No one our age talks about that shit!\"\n\n\"You seem to talk about it, so maybe some kids in Sydney do too?\"\n\n\"Pfft, I don't talk about it with people our age. I do read the newspaper for analysis and might discuss it with Dad sometimes. But I don't bring it up in casual conversations with strangers I've literally just met. Nah, she was totally baiting me, probably because of this.\" She half-opened the blanket and pointed to the Aboriginal Flag on the front of her hoodie. \"I shoulda ignored her shit. Anyway, such is life, and she's a nobody so I wouldn't lose sleep over it, because I know my worth.\"\n\n\"Yep, you're worth a hundred of her. A million of her. A trillion, even. You're great and she's no one.\"\n\nShe chuckled and banged her knee against his. \"What's with you?\"\n\n\"Dunno.\" But he did know and wanted to say so much more.\n\nShe sighed, then leant forward and placed a stick on the fire. \"I shouldn't care what bitches like her say. Or even those arseholes who slagged off at me when we almost bumped into them out front of Knotty's shop last Christmas holidays. You're right, they're all nobody to me, but their words cut.\"\n\n\"Argh, those racist cunts. You sure put 'em in their place when you pointed at their car's giant wing spoiler thingy sticking up at the back. What'd you say? Not a bad looking shopping trolley you've got there, do they make 'em for men? You've always had a way with words, Soph, and you'll make a great barrister.\"\n\n\"If I'm so great I probably shoulda said nothing. Self-control's probably the best way of handling muscled-up shit-for-brains like them. But even softer words are better than getting all aggressive and looking like you want to punch-on. You do realise they'd've smashed ya face in if ya'd given them the chance?\"\n\n\"Fuck oath, those cunts were huge. And I couldn't fight me way out of a wet paper bag! I was near shitting meself.\"\n\n\"Yeah, so why'd ya step up to them and mouth off? They would've knocked ya block off if Knotty hadn't come out and told 'em to fuck right off.\"\n\nHe sighed. \"I was standing up for you because what they said. I hated what they called you. Racist cunts like them need to be called out on their shit. And yeah, I'm lucky they took one look at Knot and fled in their shit-box, but someone had to say something.\"\n\n\"I know, I hated it too, but it's not the first time someone's called me an Abo slut, and won't be the last. People like them have said shit like that to me and Teddy and Frank and Mum and Dad all our lives. I try to laugh it off and tell myself no one can push me down, but it's hard because the attitude's everywhere in society. Not long ago Mum even told me...\" She trailed off, leaving her sentence unfinished.\n\n\"Your Mum said what?\"\n\n\"Nothing.\"\n\n\"Tell me.\"\n\nSophie sighed. \"I shouldn't tell you this, because Mum told me never to. So keep it to yourself, okay?\"\n\n\"Okay, sure. I promise.\"\n\nShe tilted her head slightly away from him, uncomfortable with what she was about to say. \"Apparently when my mum and your mum first became mates back in kindergarten, your Nan and Pop disapproved. Your Pop told your mum she shouldn't be friends with my mum, telling her how you never put white sheep together with black sheep. My mum said she'll never forget your mum telling her. They were like, five or six and Mum said she cried all night long. Fortunately they both ignored it and kept playing together at school. Mum said they were drawn to one another and nothing was ever going to come between them.\"\n\nDuncan was flabbergasted. \"Pop loves your family. No way he'd say that. I once even overheard him arguing with an old army mate of his from the war, saying how badly Aboriginals were treated and how they were forced from their own land with their kids stolen and generally treated terribly ever since. His mate argued otherwise, but Pop was quite firm with him. It ended their fifty-year friendship.\"\n\n\"Look, Dunc, I know your Pop does love us now, but he didn't always.\" Their shared blanket rose and fell slightly when she shrugged. \"His old views were a product of his generation, and society in general. People do change for the better, and apparently your Nan and Pop took years to warm up to my Mob, mostly because of your mum's persistence. My mum said your mum always had a fierce mind of her own when it comes to these things, and she brought your grandparent's way of thinking around. But ya Nan and Pop didn't let your mum invite my mum to the coast here till she was like, eleven or twelve.\"\n\n\"I'll never look at Pop the same way, knowing he didn't like your family at first.\"\n\n\"No, don't be like that. I shouldn't have mentioned it. Your Nan and Pop did change and it's great. Once they came around they took mum with them on almost every holiday trip here. God, they even went to Mum and Dad's wedding, and apparently your Pop made a lovely speech. Because everyone can change, where people do redeem themselves sometimes, and for what it's worth, I love your Nan and Pop and never would've suspected they'd once not looked so kindly upon Mum. But they do love us now and have always shown it to me.\"\n\n\"I'm so sorry, Soph. I had no idea.\"\n\n\"Yes you did. Not about your Nan and Pop, but society in general. It's there all the time but you probably don't notice it so much because it doesn't affect you. But when you see people actually say ignorant racist shit to me, you're seeing it in real life and it shocks you so hard. And it hurts, it really does, but I try not to let it get to me because know I can prove them wrong. Like Cathy Freeman did last year, winning the gold in the four-hundred metre sprint at the Sydney Olympics. I knew then that if one of us could rise so high and be the best in the world, I can achieve my dreams too! Then maybe I'll inspire someone else. This is how I'm going to fight my battles, Dunc, and I don't need you getting ya knickers-in-a-knot every time someone says something, because you'll eventually get ya head punched in by some muscle-bound meat-head.\" She nudged his leg with her elbow. \"Pick your battles, because I don't want you hurt, particularly on my account.\"\n\n\"Is this why you were pissed when I took your hand earlier, because you thought I was going to try and fight your battle?\"\n\n\"I dunno,\" she replied with a sigh. \"I was irritated I 'spose. You've never taken my hand before so it was a surprise. Maybe I had sand in me giney or something, because that Kylie girl was watching you all night. Sorry. I do realise you were showing me your support and I do appreciate it. I just wasn't...ready.\"\n\n\"Sorry.\" It was all Duncan felt he could say, even though he wanted to say so much more. His heart beat a little harder as he searched for something else. \"I know you can fight your own battles, but I want you to know I'm here for you, even if I can't fight for shit.\"\n\n\"Lucky I can,\" she chuckled. \"With words, anyway. No one can get in my way, even bitches like Annette.\"\n\n\"I know, I've never doubted you'd achieve whatever you set your sights on.\"\n\nSophie sighed and rested her head on his shoulder. They were silent again, with many thoughts whizzing around their heads, sounding like the crash of the ever-present surf, a mix of turbulent feelings breaking against their shore.\n\nThe chill night air encouraged them to unconsciously snuggle further into one another for warmth. The press of their touch was like a current running through Sophie and into Duncan, and his cock began to swell involuntarily, to his immediate embarrassment.\n\nHe searched for something to say, fixing on the other thing keeping him awake earlier. \"So you said you're applying for law at Sydney Uni next year? I thought you were going to go for Southern Cross Uni up here in Lismore?\"\n\n\"Yeah, I've decided to put Sydney as my first preference, but I'm not sure if I'll get in. I'll apply for Southern Cross too, just in case. Probably a bunch of others as well, like Newcastle.\"\n\n\"Why Sydney?\"\n\nSophie shifted slightly, causing their legs to rub against each other. \"I want to study human-rights law and perhaps combine my degree with philosophy or politics. If I'm to be a barrister I want broader experience before I come back to Country. I think studying in Sydney is a better place to get the initial experience. I'm not so fussed about living in the big smoke, but I'll get exposed to student politics where I can work on my debating skills against bitches like that Annette girl.\"\n\n\"Your debating skills hardly need any work. But if you want a city uni, why not come up to Brisbane? You'll only be two hours' drive from home. Maybe you could come live with us or get a share house with me?\"\n\nSophie spoke softly. \"Are you worried you won't get to see me anymore?\"\n\n\"Yeah, actually, I am,\" he said without hesitation. \"We aren't kids anymore, and I worry this chapter of our lives is ending the next chapter means we'll be less, um...less involved with each other. When you mentioned applying for uni in Sydney tonight, I, ah...\"\n\nDuncan's words trailed off, and Sophie turned towards him, hesitating slightly before she spoke. \"I've spent so much time thinking about uni and where to apply, and I know Sydney will take me away from my Mob and friends like you, so it's one of the hardest decisions I've made. But I have to do it.\"\n\n\"I know,\" he whispered in agreement.\n\n\"You know something else? You could apply for medicine at Sydney Uni. Just a thought I had now.\"\n\nDuncan mulled the thought over in his mind. He'd always set his sights on applying to several of the Queensland based universities, and he'd never once considered applying for university in another state. But neither did he ever consider he'd be more than two hour's drive away from Sophie, and the prospect of being separated from her by one thousand kilometres suddenly weighed upon him.\n\n\"Would you want me there with you?\" he asked.\n\n\"What kind of question is that, Duncan Ross? Of course I'd want you there! As long as you don't keep putting yourself in harm's way to try to fight my battles for me. And as long as you stay away from girls like Kylie.\"\n\n\"You know I'll always stand up for you. And as for Kylie, she'd likely be in the same course as me if we end up at Sydney Uni. We'd probably end up in group assignments and practicals together.\"\n\n\"Hmmm,\" was Sophie's reply, her jealousy provoked, and she deliberately pushed away from Duncan. \"Then make sure you keep the practicals to the class-room. And no group anatomy classes with her!\"\n\n\"If that's the case I'd need a hot girlfriend to stop me looking at other girls.\"\n\n\"Where are you going to get one of those?\" Sophie said, emphasising the word 'you'.\n\n\"Dunno. I assume all the girls at uni will be fighting for my affections.\"\n\nSophie laughed, clamping her own hand over her mouth when she realised how loud she was. Her laughter eased to a chuckle, and she joked, \"Got tickets on ya self, do ya?\"\n\n\"I don't do too badly,\" Duncan replied, indignantly.\n\n\"Since when? I never even heard you talk about girls.\"\n\n\"I haven't heard you talk about boys, other than footy players and surfers. Have you got a boyfriend?\"\n\nDuncan's heart raced. He'd asked on a whim and if Sophie did have a boyfriend he knew his heart would break. Because they'd always been close, he wondered if it was strange they'd never discussed these things before. Perhaps they'd both deliberately avoided talking about their personal relationships beyond their own friendship?\n\n\"I've dated a few boys,\" Sophie said. \"But no one at the moment. What about you?\"\n\nHis heart pounded. \"Have you ever...\"\n\n\"Have I what?\"\n\n\"Have you had sex?\"\n\n\"Have you?\"\n\n\"I asked you first.\"\n\n\"I asked you second.\"\n\nSophie wasn't going to give and inch and now Duncan hesitated, not sure if he wanted to give his answer or know hers. After all, he was eighteen and despite all his female friends and a number of opportunities, he was a virgin, which was mostly due to the fact he was hopelessly in love with Sophie.\n\nDuncan's relief at Sophie's declaration of being single was overcome by jealousy, worrying she'd probably slept with other boys. But should it even matter, he wondered, having very little experience in the ways of love beyond his deep feelings for Sophie and a few dates with girlfriends from school.\n\nEveryone he knew who'd done it made a big deal of having sex, and he defiantly wanted to do it because his body and mind told him so a hundred times a day. But he hoped Sophie would be his first and only, and he wanted to be her first and only too.\n\n\"No,\" he plunged forward with his answer, his heart ready to take a hit. \"Have you?\"\n\n\"Nope,\" she told him with more confidence than he'd answered with. \"I ain't giving myself to just any boy. God, they're all so disgusting, going the grope and expecting to score on the first date. All the fucking same. I'd rather wait for someone who has my interests at heart instead of only wanting to wet their dick.\"\n\nUncontrolled relief washed over Duncan, which he tried to mask by asking, \"So you've dated a few boys then?\"\n\n\"What do you reckon? A girl's gotta test the waters you know. One of them might even be the one.\"\n\n\"Never found the one?\"\n\n\"Not among the boys I dated. Bloody, disgusting gropers. Anyway, what about you? Have you dated?\"\n\n\"Yeah, of course. I've been to the movies and dances and stuff with girls.\"\n\n\"And stuff, eh, Duncan Ross. No groping I hope.\"\n\n\"No, never!\" He said defensively.\n\n\"Well, I'm glad to hear it. To be honest, I never even seen you glance at other girls before, so I was wondering about you.\"\n\n\"Wondered about me? Like, as in, you thought I might be gay?\"\n\n\"Just sayin' you never seem to look at other girls or talk about them.\"\n\n\"I've never needed to look anywhere else when you're about, and there's no one I want to talk about, except you.\"\n\nShe snorted a laugh. \"Smooth.\"\n\n\"Nah, just telling the truth.\"\n\n\"Yeah, well...,\" she paused for a moment before continuing. \"I laugh but I'm actually kinda surprised you're still a virgin. I've wondered more than a few times if you were seeing anyone but didn't want to ask.\"\n\n\"I've wondered about you too but didn't want to know the answer, so I'm also surprised you're a virgin as well.\"\n\n\"Why?\" Sophie's tone became defensive. \"I'm no slut.\"\n\n\"I never suggested you were, Soph! It's because you're smart and beautiful and all the guys must be falling at your feet, and I thought you'd have lots of admirers.\"\n\nSophie relaxed and laughed. \"Yeah, too right, guys are always falling at my feet, wanting my sexy body.\" She chuckled to herself again, then shook her head. \"Pulling a root's all they want. No boys are falling over themselves to get to know me for me. And those that do never seem to make a move. I must be intimidating or something.\"\n\n\"Nah, you're not intimidating. But maybe those who want you for you are too chicken shit to ask.\"\n\n\"Are you saying you're chicken shit?\"\n\n\"I 'spose, yeah. Because our mums are best mates and you're my best mate, and I dunno, you're so incredibly beautiful and I guess I've been too worried you'd say no, because then I might lose you forever and ruin everything between us.\"\n\nSophie kept silent for a moment, mulling every word Duncan spoke over in her head, then said, \"You don't make any sense, because you'd have to do something pretty shitty to lose me forever, Dunc. And I couldn't imagine you'd ever do something that shitty.\"\n\n\"So I shouldn't tell you about all the drugs and hookers I've been buying then?\"\n\nShe laughed and snuggled comfortably into his side. \"You literally just told me you're a virgin, so you must be wasting your time and money with the hookers.\"\n\n\"You got me there, Soph.\" He smiled in the dark, feeling the comfort of her hard, warm body squeezed against his own.\n\n\"I always do,\" she whispered, wrapping her arm over him and nestled her head into his shoulder. He responded, pulling her in tighter and they sat in silence for a while, each having their own similar thoughts.\n\n\"So you want me to join you in Sydney next year?\" He eventually said.\n\n\"Yeah, if you think you could handle it. You and me, together in a dingy share house. Working shitty jobs and trying to study law and medicine at the same time. Won't be easy. You could stay in Brisnyland and live at your mum's place for an easy ride, or with your dad on the Gold Coast.\"\n\n\"Them's fighting words, Soph.\"\n\n\"Well, what do ya reckon?\"\n\n\"A girl from Lismore like yourself would be lost in the big smoke all on your own.\"\n\nShe chuckled. \"Says Duncan Ross, the city boy who doesn't even know what the word hardship means.\"\n\nSeveral defensive replies came to his head, but he said none of them, deciding to let Sophie win, and gave her a tighter squeeze instead. Then it came to him. \"I imagine hardship would be life without you in it.\"\n\n\"You really are a nutter, Duncan Ross.\" But she squeezed him back.\n\nAnd then he kissed the top of her head, his lips soft on her currently scraggly, unkempt hair, smelling like the salty ocean mixed with shampoo. His heart beat strongly, pounding with his welling feelings, exploding to the surface, and he whispered, ever so softly, \"I love you Soph. I have for ages and I've been too afraid to tell you. I hope this doesn't change anything.\"\n\n\"Oh, God, Duncan,\" she replied, almost with a quiver in her voice. \"You just went ahead and put your cards straight down on the table, didn't you. Of course the way you feel will change us, because you must know I've loved you for as long as I can remember. That's why I...\"\n\nHeart still pounding, he waited for her to continue, but she didn't. \"That's why you what?\"\n\n\"That's why I didn't sleep with other boys, even when I was tempted. Because no one has ever made me feel the way you do and I can't imagine anyone else will.\" She'd spoken seriously but added in a humours tone, \"Even if you are a big bag of nuts.\"\n\nDuncan pulled slightly away from Sophie, turning to face her in the silvery moonlight, her eyes and smile barely discernible. His heart beat even faster.\n\n\"I'll apply to Sydney, if you'll have me.\"\n\nSophie whispered, \"There's nothing I'd rather in this world than to have you as a constant presence in my life. But, perhaps apply to your Brisbane unis too, in case I don't get accepted down in Syd. I'd hate for you to get in and not me, where you'd be in the big smoke on your own, meeting girls like Kylie from tonight. We can apply to the same places.\"\n\nHe could see she was grinning and he grinned back with relief and love. \"It never even crossed my mind you wouldn't get into your first choice.\"\n\n\"Because you're white, male and privileged. You always get your first choice.\" She laughed though, ensuring Duncan knew she meant no harm.",
        "Still, his reply was defensive. \"I'll get my first choice because I study hard, thank you very much. And you'll get your first choice because you're the smartest person I know.\"\n\nShe leant in and rested her head against his chest and sighed, but said nothing. Duncan's heart beat heavily for her and he wondered if she could hear it through his flannelette shirt. He gently placed his lips on her hair again, and she squeezed him tight before looking up into his eyes, the moonlight and fire glinting off her own eyes.\n\n\"What ya lookin' at?\" Sophie giggled.\n\n\"Dunno. Can't find the label. Oh wait, here it is.\" He reached around her back, pretending to find an invisible label. \"It says, Sophie Flanagan. Most breathtakingly beautiful and smartest person on Earth.\"\n\n\"You're a dag, Duncan Ross.\" Sophie smiled broadly in the dark.\n\nWith his heart thumping, Duncan took the initiative, leaning his face to hers. At the last moment she opened her mouth slightly, as did he, and their lips touched, softly and moistly, tasting each other. Their first kiss together was gentle, slow, beautiful and full of true love.\n\nDuncan could feel Sophie's lips curling up in the shape of a smile against his, and he pulled his face slightly from hers and smiled in return, his heart still pounding like mad. Sophie grinned and then buried her face into his shoulder and gave a little growl and shook herself against him for a moment, squeezing him tight.\n\nThey cuddled by the fire, hard bodies on the verge of adulthood squeezing together, while the Milky Way spiralled above them and waves kept pounding against the shore, like his cock throbbing involuntarily against his tracksuit pants when Sophie rubbed against it with her hand. The first time was accidental, but soon her hand brushed him there again, either inadvertently or on purpose, and she pulled away, looking into his eyes and grinning in the dark.\n\n\"Thought there was a big swell coming in but I didn't realise it was this big.\"\n\n\"And you called me a dag,\" Duncan whispered back, his voice betraying nerves.\n\nWith deliberate slow movements, Sophie disengaged from Duncan's embrace before straddling his lap, maintaining their cocoon in the old blanket. She lent her face to his, her hands clasping cheeks and she kissed him deeply, the tip of her tongue finding his between their mouths, gently sliding together.\n\nDuncan kissed Sophie with equal sensual passion while running his hands roughly over her tracksuit pants, up her thighs, then hips, slipping gently under her hoodie and cotton singlet underneath where he felt her warm, bare skin against his palms and fingers. She responded, grinding her crotch over his knob, the sensation unbearably electric.\n\nHis heart and mind raced like crazy, joy and excitement overwhelming, and he felt he might cum from the way Sophie ground her groin into him. He broke their kiss and whispered, \"I, ah, have a condom in my bag. It's back at the house though.\"\n\nSophie smiled in the dark and shook her head, then lifted herself and pulled his pants down past his thighs, his bare bum feeling the cool sand beneath, and his cock springing large and free. She took him gently in her hands and they both noticeably swallowed with nerves. Acutely aware of the sensations as she stroked him gently from base to tip, his nerve endings fired from her touch, causing a pleasure shiver to ripple through him.\n\n\"Gee, Soph,\" he whispered. \"Holy shit, this is amazing. I think I'll cum if you keep this up though.\"\n\nAgain she smiled and shook her head, letting his cock go. \"Not yet.\"\n\n\"I'll quickly go get the condom.\"\n\n\"No need.\"\n\n\"Oh,\" he said, trying not to sound disappointed. \"If you don't want to have sex, that's okay. We can just muck about like this.\"\n\n\"Having sex with you is all I want to do right now,\" Sophie replied, looking Duncan in the eye while she began to lift her hoodie and singlet as one, exposing her body to him in the dark, her tear-drop breast curves delicious, even if only barely perceptible. \"Mum made me get a hormone implant in case I began having sex. Feel it in my arm here. You know how she worries about everything. But don't you worry, because like I told you, I haven't taken advantage of it...because I've only ever wanted you.\"\n\nHorny as hell and deeply in love, Duncan smiled, caressing his hand up Sophie's body, feeling the bump of the implant under her smooth inner-arm skin, then swirling down to touch her tit with his palm, appreciating the juxtaposition of their firm-but-softness under his fingers, lightly squeezing her breast, so unlike the rest of her hard tight-muscled body. He caressed her hardened nipples with his thumbs and she exhaled loudly while he whispered, \"I've only ever wanted you too, so take advantage of me now.\"\n\nStill moaning from his sensuous touch, she whisper-breathed, \"God, Dunc, about time you made a move because I've wanted you so badly and we're finally gonna happen.\"\n\nReaching down, she removed her tracksuit pants while still straddling him, and he removed his flannel shirt, dropping it on the sand. Stroking his fingertips down to her muscular stomach, he explored the contours of her tight skin over firm abs, caressing her intimately with his touch, then swirling along the tops of her thighs, then inner thighs, lightly across to her sex, tenderly feeling her vulva, tentatively learning how to touch her from the way she breathed and moved in response.\n\n\"You shave?\" he asked in a whisper.\n\nShe held her face in front of his, their eyes locked together in the low light, and she whispered back, \"I did, in case I met some lovely fella this weekend and wanted to fuck him. Pickings are thin around here so I guess you'll do.\"\n\n\"I'm pick of the bunch on this beach tonight.\" He grinned, fingers feeling around her opening, her lips there oozing wetness.\n\n\"You're the pick of the entire Milky Way,\" she whispered back, then kissed him passionately, pushing her crotch against his fingers with encouragement. \"Feel me, if you dare.\"\n\nHe'd never felt a vagina before, inside or out, his fingers running over her swollen labia, gently up and down her slit, parting her. Surprisingly he found it effortlessly easy to slip two fingers into her, finding her hole, his digit's passage aided by the amount of fluid she was generating.\n\n\"I'm feeling your insides, Soph,\" he whispered in amazement, and he wiggled his fingers around her slippery inner passageway, touching her slick mucose vaginal walls, marvelling at the slippery and sexy experience of touching Sophie with such special intimacy.\n\n\"Ohh, my, Dunc,\" Sophie moaned again. \"You sure are.\"\n\n\"Does this feel nice?\" he asked, amazed she allowed him to digitally penetrate her and wanting her to enjoy his touch.\n\n\"It's not bad. Maybe rub my clit as well.\"\n\n\"Um, I know where it is, but let me know how I'm doing.\"\n\n\"Will do,\" she said with a smile, then let out a gasping sigh and moved with a jolt when Duncan found her little fleshy nub with his thumb, his two fingers still inside her. \"You found it first go.\"\n\n\"Is it good?\"\n\n\"You're doing great,\" she smiled. \"Maybe add some of my wetness from below to lubricate my clit.\"\n\n\"Sorry,\" he said, taking his dripping fingers from her canal and wiping her juice over her upper folds and pleasure-nub.\n\n\"You're great,\" she sighed at his touch, then again as his fingers re-entered her. \"I don't expect you to be an expert on our first time you know, but you're doing fantastic.\"\n\n\"I want to blow your mind.\"\n\n\"You do, Dunc, so relax.\" And she moan-sighed again.\n\nThey smiled together, his fingers rubbing her slowly, both outside and in, making her gasp with enjoyment. Locking eyes in the dark, the blanket slipping down them, and every now and then when he'd lose her pleasure button, she'd reach down without speaking a word to gently reposition his thumb.\n\nDuncan looked into Sophie's eyes, feeling her move as she hovered over him, his fingers touching her intimately, and he noted the changes in her breathing as he became increasingly proficient at pleasuring her.\n\nHe was also very conscious of how hard his cock was; solid and stretching at its skin, ready for her, dripping precum from the hole in his engorged tip. Occasionally she rubbed against him there, causing a pleasure surge to shoot through him, and he squeezed the muscles in his buttocks and groin, attempting to stem his rising flow.\n\nExcited, nervous, and with his heart pumping hard, the deep feeling of love and affection he felt for Sophie managed to check some of the animal lust threatening to take over. This wasn't only about losing their virginities, but more about sharing their bodies in pleasure and passion, and connecting their hearts and souls in love.\n\nHe noted how Sophie was breathing now, panting through her mouth, and she was moaning too. Still straddling him, her knees in the sand near his hips, she'd squatted lower now, her thigh and groin bumping into his cock with increasing frequency. Reaching down, she took his hand and gently pulled it away from her, his fingers slipping from her body and dripping with her wetness.\n\n\"Sorry,\" he said, not sure why she'd stopped him.\n\n\"Shhh,\" she cooed, letting his juice-covered hand go, and he rested it on her waist. Kissing him gently, her hair draped down over their heads like a curtain, she said, \"Relax, my love. I want you to feel me, nice and slow.\"\n\nDuncan nodded, completely fascinated and perfectly horny, watching Sophie in the moonlight as she first pulled the blanket back around her shoulders to protect against the cool air, then gently took his penis in her fingers. He gripped her waist when she looked into his eyes and began manoeuvring herself onto him, her vaginal lips resting wet on the tip of Duncan's engorged cock, and she rubbed herself gently against him there.\n\nHer moisture dribbled over him, coating his cock-head, mixing with his pre-cum, electric feelings tickling between them. Duncan looked deep into Sophie's eyes, which reflected the moonlight, and they smiled at one another, both beginning to grin.\n\nHolding him in place with delicate fingers, she rubbed her clit ever so gently against the head of his hardness, her wet slit lightly kissing against the underside of his shaft, and again he could feel how slippery she was, soaking him with her pussy juice and the sensual feelings of sex and love. Experiencing true intimacy with Sophie, the only person he'd felt romantic love for, caused his beating heart to circulate his raging hormones around his body, his emotions for her growing a trillion-fold by the second.\n\n\"I've imagined this moment, many, many times.\" Sophie's voice was barely a breathy whisper and she pushed her mouth to his, kissing him with gentle, slow passion, her lips opening slightly, their tongues writhing together, while she positioned herself slightly forward, his cock now slipping so easily inside her, the feeling phenomenal, and she sank onto him in a single slow movement, the sensations beautiful, both releasing a slight gasp between their kissing lips, her body embracing his, their union wonderfully intimate.\n\nMid-kiss, Sophie gasped again and Duncan felt her groin-skin nudge against his own, and they lost balance; him toppling back and she over him where her hands landed in the sand beside his head, breaking her fall.\n\nShe gasped again and he grunted, knowing smiles lingering on lips while they stared into one another's eyes, cocooned in the blanket, warm skin on warm skin, both lovers beginning to laugh. They laughed because knew they were one; physically, emotionally, spiritually, with his cock resting as far as possible inside her, where she absorbed him, their souls weaving tightly together on the deepest level imaginable.\n\nCoupling under millions of stars, their hearts pumped adrenaline and love around their united bodies, Duncan feeling Sophie over him, her breasts on his chest, and now her snug, wet pussy slowly moved up and down his hard length. Sophie felt Duncan's response, his hips pressing his cock-shaft up against her insides, touching one another with the deepest possible intimacy imaginable, with love and pleasure.\n\nBrand new at loving and the incredible pleasure sensations surging between them, they took things slow. Again Duncan clenched the muscles in his bum and groin to keep his building orgasm at bay.\n\nKissing lovingly, passionately, slowly, their tongues moving together, penetrating one another's mouths, and Duncan grasped at Sophie's skin, squeezing her lovely tit with excitement, roughly fondling her hardened nipples while an involuntary growl escaped his lips.\n\n\"Ouch,\" she whispered. \"Softer, please.\"\n\n\"Sorry,\" he replied, lessening the pressure on her breast, all the while his cock caressed her insides, slowly and intimately, deeply together.\n\n\"That's okay, my love,\" Sophie said with a grin, her hand now on Duncan's firm pectoral and squeezing roughly like he'd done to her.\n\nHe shook his head with a sly smile, getting the message and caressing her tit gently now, massaging her there, fingers lightly kneading, squeezing softly, while he slowly pushed his buttocks up, thrusting his fat cock hard against her inner pleasure zone. Sophie responded, pushing herself down onto him, attempting to envelope Duncan deeper and deeper with each of their slow thrusts, gasping when they squeezed together.\n\nDuncan slid his hands around her body, under the blanket at her back, feeling her wonderfully smooth bare skin, warm against his palms and fingers, splaying them to maximise skin-on-skin contact, pulling her against him, her body pushing him into the sand.\n\nDespite the slowness of their loving, Duncan was well aware of the powerful force building as a tingling in his toes, legs, stomach, groin and cock, and he knew clenching his muscles wasn't going to keep his orgasm from releasing much longer.\n\nSophie's breathing grew harder too, and she pulled her lips from his, burying her head deep into the crook of his neck, pushing her lips firmly down onto his skin there, all the while gasping quickly and she cried an involuntary squeal. Suddenly she held onto him in a fearsome grip, her body ridged against his, pulling every ounce of him up into her with the tightest embrace.\n\n\"Are you okay?\" Duncan whispered into her ear as Sophie squeezed him with all her might.\n\n\"Yes,\" she panted. \"You're giving me the most fucking amazing orgasm I could ever imagine possible. I love you so much!\" She whimpered a moan, directly into his ear, and he could feel her body trembling tightly against his, her cunt twitching and pulling around his cock. The sensation and knowledge Sophie was truly pleasured helped induce his own pleasure growth to the point of no return.\n\n\"I love you,\" Duncan gasped, pushing his buttocks up, his cock thrusting within her throbbing passage, the tingles consuming his body, surging to his waist and cock, concentrating at the point where he and Sophie were so intimately joined, cementing their new bond, Duncan unloading streams of his sticky semen deep into Sophie, their bodies pulsating together in love and passion, his cock throbbing and pumping against her insides, sharing and mixing their pleasure fluids, squirt after squirt after squirt until he was drained.\n\nSophie raised her face to Duncan's and kissed him hard on the mouth, still trembling and pulling him tight, and when they finally broke their kiss, she began to relax, and breathily she whispered, \"Oh, Dunc, I love you so dearly.\"\n\n\"I'm glad we cleared that up, Soph,\" he chuckled, regaining his composure from experiencing the most wonderful and loving experience of his life. \"I love you more than anything else in the entire world.\"\n\nShe smiled at him. \"There's no one else I'd rather be with than you. Forever!\"\n\nThey held each other, connected in love, relaxing after their exertion, hard breaths matching the rumble from the surf in the otherwise silent early morning hour. Eventually Sophie lifted herself off Duncan's still-hard cock, their love fluids running together, seeping from her and down his length, further matting his sticky pubic hair.\n\nShe giggled. \"You filled me up with so much cum. Lucky for my implant, otherwise I'm sure we'd have made a baby just now.\"\n\nThey both giggled, pulling their clothes on, then put some more timber on the dying fire and cuddled into each other under the old blanket.\n\nHe whispered, \"Do you reckon you can handle doing this with me every night?\"\n\nSophie smirked, holding in a laugh. \"Nah. Probably have to do it twice each night.\"\n\n\"Let's not put a limit on our loving. Wanna go again?\"\n\n\"Yeah, of course. Those fucking orgasms you gave me were intense! Way better than when I play with myself. But I am pretty buggered right now though so maybe in the morning.\"\n\n\"I love you, Soph.\"\n\n\"I love you too, Dunc. Spent all me time looking forward to every holiday with your family. I've always loved you.\"\n\n\"You shoulda said something.\"\n\n\"I didn't know how interested you were.\" She giggled and snuggled further into him, adding, \"So you shoulda said something, chicken shit.\"\n\n\"Damn straight I was chicken. If you'd said no I'd have died.\"\n\n\"Pfft. You don't win the girl by keeping your mouth shut.\"\n\n\"But I did win the girl, ay.\"\n\n\"Only cos I totally lured you out here to jump your bones.\"\n\nDuncan smiled in the dark, the moon well below the dune vegetation now, and he pulled Sophie in close. \"I've always loved you, Soph.\"\n\n\"I've only ever wanted to be with you.\"\n\n\"I'm glad we are each other's firsts.\"\n\n\"First and last, if you'd like, Duncan Ross. You've touched me in places no one has ever touched me before. Places in me where only you've known and are only for you. You have my key, and I'm not only talking about the key to my vag either.\" She squeezed him with all her love and he felt it.\n\n\"You've always had the key to my heart. If only you'd used it.\"\n\n\"I just did,\" she giggled. \"Think you can handle me?\"\n\n\"I think I can handle you, Soph. We'll make it work, because you're the only person I want to be with.\" After a moment of silence, Duncan spoke in a hesitant tone. \"I guess, um, we're gonna have to work out how to do this though?\"\n\nShe grinned. \"You already seemed to know a thing or two about how to do this. You knew how to touch those special places of mine. Sure you've never done it before?\"\n\n\"Nah, you're definitely my one and only. It's not rocket science you know. I've seen a couple of pornos and read books. Even medical texts. Seems pretty simple; the male sticks his penis in the female's vagina and all that, then a bit of pumping in and out, doing whatever comes natural.\"\n\nShe laughed. \"Wow, you are a certified genius. I can tell you're gonna amaze them at med school with your superior knowledge and understanding of human biology.\"\n\n\"Yeah, well, I always felt I'd be a natural when it comes to sex,\" he said with a laugh, causing Sophie to snort. \"Anyway, by do this, I meant we need to work out our relationship.\"\n\nSophie laughed again. \"Jesus, Dunc, we've hardly begun and you already sound like you need relationship counselling. You really are a dag.\"\n\n\"Yeah, well, takes one to know one.\"\n\nShe squeezed him. \"Even if you are a dag, you're my dag.\"\n\n\"Yours forever,\" Duncan whispered, taking Sophie's hand under the blanket and they pushed their bodies tightly together, sharing warmth and whispering their love for one another several times. Too tired, and probably too sandy by now for another round of love making, they soon fell asleep while the stars of the Milky Way twinkled upon them.\n\n~0~\n\nEven though it was well past the hour, sunrise didn't wake Sophie and Duncan; it was Daniella walking down onto the beach with a mug of tea cradled in her hands.\n\n\"There you are!\" she cried out, provoking two groggy, sandy heads to peak up at her from the blanket. \"Didn't notice you were missing till me second cuppa! Make sure the fire is out proper when you leave, like I asked yas last evening.\"",
        "Daniella said nothing more about the fact her daughter and best-friend's son were cuddled up together on the beach, and she turned and went back up the dune towards the house.\n\n\"I guess the cat's out of the bag then,\" Duncan said, blinking his bleary eyes in the morning sunlight.\n\n\"I guess so. I'm goin' back to sleep.\"\n\nDuncan and Sophie snuggled for another hour, their heads hidden under the blanket, then walked their sandy bodies back to the house. Their mothers and siblings didn't say a word while they went about their business of cleaning the sand from clothing, showering separately, then crashing together on the living room couch in front of the old TV.\n\nThey felt everyone's eyes on them but acted casual as if spending the night together on the beach was the most normal thing in the entire world for them. And no one said a thing, accepting what they already knew; that Duncan and Sophie were deeply in love, which was the most beautiful thing.\n\n~0~\n\nEpilogue\n\nFriday 21st of February, 2020\n\nThe Pacific Highway was like an old friend to Duncan, especially this northern stretch of motorway on which he drove his black Audi Q5 from home near Tweed Heads. Conscious his familiarity with the road might cause him to slip into complacency, he mentally reminded himself to concentrate.\n\nTo the west he noted Wollumbin, the familiar sleeping warrior-mountain, with the last rays of sun glinting off the great warrior's summit nose. He drove past fields of sugarcane and pastures which suffered from both drought and then flooding rains earlier in the year, then past the turn-off to his mother's farm, where his Nan and Pop were now buried side-by-side.\n\nHe helped his mother out whenever he could, generally maintaining fences to ensure the agisting cattle and horses were in their correct paddocks, providing his mother an income over the past eleven years since his Pop died and passed the farm onto Beth.\n\nA melodic tune from local band Skegss burst from the car's stereo; the chorus proclaiming, I guess I'm not getting any younger, younger, young once then you're old forever...and he felt the familiar wave of nostalgia wash over him.\n\n\"I'm definitnely not getting any younger, that's for sure,\" he mumbled to himself, but smiled at the familiar mountains out his driver's side window, the landscape of sugarcane and cattle rushing past.\n\n\"Huh, what'd you say?\" Sophie looked across to him from the passenger seat.\n\n\"Oh, nothing, my love. Just muttering to myself.\"\n\n\"That explains everything,\" she said with a grin. \"Talking to one's self is a sign of mental illness, you know.\"\n\n\"It can be,\" he smiled at the road. \"But it's also healthy to talk to one's self now and again.\"\n\n\"Mummy, is Daddy sick?\" Robbie piped up from the back seat, across from his sleeping sister, Aggie.\n\n\"You're so perceptive my little one,\" Sophie said, leaning around the seat to smile at her son. \"But no, Daddy isn't ill. I was making a joke.\"\n\n\"Was it a funny joke?\" Robbie asked, and Sophie smiled back, almost laughing.\n\nBut Duncan answered, briefly looking into the backseat through the rear-view mirror with a smile of his own. \"No, mate, your Mummy's jokes are never funny.\"\n\n\"You're a funny joke,\" Sophie smiled at Duncan. \"And you're mine.\"\n\n\"Your mum's a funny joke.\"\n\n\"Your mum's a...lovely human being. And don't be so mean about my mum!\"\n\n\"Did Daddy say something mean about Grandma?\" Robbie asked.\n\n\"Jesus, he doesn't miss a thing, does he,\" Sophie whispered as softly to Duncan as possible, knowing Robbie's exceptional hearing probably heard anyhow. To be sure, she said to Robbie, \"No, darling, Daddy was joking too.\"\n\n\"You and Daddy's jokes are terrible,\" Robbie said with a huff, frowning and folding his arms crossly across his chest.\n\nBoth Duncan and Sophie laughed, and Sophie said, \"He's got us there.\"\n\n\"We'll have trouble with him in the future, I bet,\" Duncan whispered softly.\n\n\"Takes after you, I reckon.\"\n\n\"Nah, Soph, he's you to a T.\"\n\n\"I can't wait to see Grandma and Grandpa, and Nana!\" Robbie said, changing the subject and mood as only kids can. \"Are we almost there?\"\n\nSophie looked around, noting they were now bypassing the town of Ballina and she turned in her seat again to give Robbie another smile. \"Not far now, my darling. Soon.\"\n\nIt was twilight as the familiar road began winding its way beside the Richmond River and more fields of sugarcane. Up ahead the tall stacks of the sugar mill glowed silver in the moonlight, indicating they'd reach the turnoff in a few minutes. After the turn-off, Duncan kept the car below the speed limit, increasing his chance of stopping for any wildlife who might hop unexpectedly in front of them on the long stretch of road through the bush to Evans Head.\n\nIn the darkness they drove into the beachside town, which was always different-but-the-same in Sophie and Duncan's memories: different because they knew the older town from their memories and childhood photos and Beth's home movies, but the same because they'd come here often and knew each change so intimately they barely noticed.\n\nDuncan's Pop's old holiday house wasn't the same either, where he and Sophie, together with Kate and her husband Nick, banded together and bought the place from Beth, paying for renovations several years before. They'd maintained the basic plan and some of the old structure, if only to keep the essence of Pop's fishing shack, but now the house sported an airy architectural modern look, inside and out, including separate bedrooms for all the adults. They'd also replaced the gravel driveway with a concrete one, in which Duncan now parked.\n\n\"Grandma! Nana!\" Robbie cried out as Daniella and Beth appeared on the front deck.\n\nSophie opened the car door for Robbie, who ran up the steps into his grandparent's arms.\n\n\"Little fella couldn't wait to see you,\" Sophie said to her mother and mother-in-law while she opened the car boot to collect their luggage. \"Apparently he's been talking about you two to his teacher and friends at school all day!\"\n\n\"I've been thinking about you and your sister all day too,\" Beth said to her grandson while receiving a huge hug from the boy.\n\n\"Mummy picked me up from school and spoke to Mrs McGowan.\"\n\nBeth looked at Sophie. \"You didn't go into work today?\"\n\nBefore Sophie could utter a word, Robbie answered for her. \"Mummy said the courts were adjourned for my birthday weekend and she was allowed to come home early! Daddy couldn't come home early though, because he was kept back in a meeting. He told Mummy the big boss is a seal. They thought I couldn't hear, but I could.\"\n\nBeth, Daniella and Sophie broke into laughter, as Robbie ran to Daniella's arms for a hug. Beth raised her eyebrows at Duncan. \"Your boss is a seal?\"\n\nDuncan, who was pulling a grumbling one year-old Aggie from her booster seat, turned with a chuckle and said, \"Imbecile, not seal. Robbie doesn't miss a thing.\"\n\n\"You were exactly the same at his age,\" Beth said, gesturing towards her almost-six year-old grandson.\n\nHardly missing a beat, Robbie continued, \"Daddy told me the hospital let him off for the entire weekend and other doctors are looking after all the sick people so he can spend the time with me on my birthday too!\"\n\n\"The boss can't be too much of a seal then,\" Beth, said, winking at Duncan.\n\n\"You're a lucky boy, Robbie,\" Daniella replied to her grandson with a beaming smile. \"Your mummy and daddy love you very much. How about we let them get organised and go find Grandpa. He's about to cook us some sausages.\"\n\n\"Yay, I love sausages!\" Robbie's enthusiasm was infectious. Daniella took Robbie's hand, while he spoke continuously about nothing in particular.\n\n\"Lucky you!\" Daniella nodded at something her grandson told her, leading him inside while Beth smiled at their grandson's expressive and endless flow of dialogue.\n\nDuncan chuckled at his son's precociousness as he held Aggie, kissing her cheek and speaking softly to her. \"Will you look at your mother? Still a vision of beauty if I ever saw one.\"\n\nSophie laughed. \"First it's talking to yourself and now you're having visions, you senile bugger!\"\n\n\"Tunnel vision,\" Duncan said, giving Sophie a cheeky smile. \"For you, my gorgeous.\"\n\n\"Awww, you...I can't even...\" Sophie's words failed her, hand held over heart and her smiles coy with love. After all these years she couldn't have hidden her glow caused by her husband's endless affection, even if she'd wanted to.\n\nDuncan smiled at the loving effect he had on his wife, plus revelling in the rare victory of having rendered her speechless, while Beth approached, reaching for Aggie.\n\n\"Where's my little girl,\" she said, taking Aggie from Duncan's arms. \"Daddy can help your lovely Mummy with the luggage, can't he?\"\n\nDuncan handed Aggie over and smiled at Sophie, who stood there smiling back at him in adoration.\n\n~0~\n\nAfter dinner, Beth and Daniella offered to put their grandchildren to bed, while Sophie's father insisted on cleaning up the mess the kids made at the dinner table.\n\n\"Love, why don't you two go and relax,\" Terry said, popping an old tape into the ancient single-speaker cassette/radio sitting on the modern kitchen bench. He pressed play and The Warumpi Band began belting out their classic song, Blackfella/Whitefella, but Terry turned the volume down so as not to disturb the settling children down the hall where the enclosed veranda used to be. He sang quietly while he worked. \"Blackfella, whitefella, It doesn't matter, what your colour. As long as you, a real fella, as long as you, a true fella...\"\n\nBut Sophie began helping her father remove the dishes from the table, so he put out his hand and lightly patted her wrist and interrupted his singing, saying, \"No, no, no! Like I said, you and Duncan go relax because we have things under control here.\"\n\n\"You sure, Dad?\"\n\n\"Yes, Love,\" Terry laughed. \"Take advantage of us. It's what we're here for.\"\n\n\"Okay, sure. Aggie slept the whole drive down, so I suspect she'll be up for a while longer yet, so maybe Duncan and I'll go for a walk and let you oldies handle the crying.\" She gave her dad a little smile.\n\n\"No problems, Soph. Nothing we haven't done a thousand times before. Your kids are easy though, compared to some. I remember what a handful you could be at bedtimes, little missy.\"\n\n\"She still is,\" Duncan said.\n\nSophie poked her tongue at both her father and husband, causing the two men to laugh.\n\n~0~\n\n\"We've done pretty well for ourselves, Duncan Ross.\" Sophie gave his hand a squeeze as they walked barefoot on the cool, wet sand. \"Even if I do say so myself.\"\n\n\"Yep. We got lucky I suppose.\"\n\n\"Luck?\" Sophie sniggered. \"Luck has nothing to do with it. It was all hard work on my account, making sure you made it through uni.\"\n\nDuncan laughed and squeeze her hand in return, knowing she told a part-truth, because she'd always inspired him, bringing out his best. \"Couldn't have done it without you, Soph.\"\n\n\"I could've done it without you,\" she said with a chuckle, bumping her hip playfully against his as they walked. Her tone turned serious as she continued. \"But I wouldn't have wanted it any other way.\"\n\nThe waves broke to their right as they walked north, the Pacific Ocean rushing up the sand to bubble and swirl near their feet. She wore an ankle-length native-blossom pattern dress, long and flowing, and he still wore formal dark work trousers. Several times when exceptionally large waves broke and pushed towards them, they were forced to move quickly up the shore.\n\nOne wave caught them off guard and Sophie hitched her dress up, while the bottom of Duncan's trousers were soaked by the familiar touch of the cool salty ocean swirling around their feet. She laughed as he looked down, staring at his wet trouser-legs among the swirling bubbles, and he laughed too.\n\nThey were happy and she squeezed his hand and stared into one another's eyes for a while, then Sophie leant into Duncan, gently kissing his lips. He kissed her back with equal tenderness, a little hint tongues softly touching, and another wave caught them, swirling around their feet again, wetting the hem of her dress and further soaking his trouser-legs.\n\nThey laughed at their foolishness, then walked grinning, hand-squeezing-hand up the beach, heading towards the exit track through the dune. Duncan sat in the sand on the edge of the dune and said, \"Let's sit here for a bit, eh? I think our mums will still have the kids up reading or chatting.\"\n\nSophie sat at his side and placed her head on his shoulder, watching the waves break against at the shoreline. \"Thank goodness for our mums.\"\n\n\"Delegating parenting to the grandparents is the best,\" Duncan agreed.\n\n\"It's what grandparents are for.\"\n\n\"Robbie will be so excited for his birthday and all his cousins arriving tomorrow morning. He probably won't get to sleep for a while. Will be fun to get him out in the surf with his new body-board though.\"\n\n\"Our own little grommet,\" Sophie said, smiling, squeezing Duncan's hand.\n\nDuncan smiled too and kissed Sophie's hair. He whispered, \"I love you, my beauty.\"\n\n\"Hmmm.\" The sound she made was one of contentment.\n\nHe put his arm around her and they sat in silence for several wave breaks against the shore, and then many more. When Duncan broke the silence, he spoke softly, saying, \"Hey, look up.\"\n\n\"Wow, so magical.\"\n\nThe Milky Way shone like a million sparklers, its wide arc spreading across the sky. The two lovers sat in silence, watching the spectacle they'd witnessed many times, yet always left them in awe.\n\nSophie broke the silence this time. \"Reminds me of another night down here on the beach, nineteen years ago.\"\n\n\"Oh? Do tell.\"\n\n\"Would you believe I took the virginity of some handsome bloke on this very spot while the stars watched over us?\"\n\n\"Hmm, did you now?\"\n\n\"I sure did. He came along when I was upset and we built a fire and he spoke very sweetly to me and made me all better. We made love on the sand, then slept there till morning.\"\n\n\"Must've been one lucky fella, coming down to the beach here to find an angel and gifting her his love. But I think you're a little out by the location, because it was two or three metres over there,\" He pointed to their left, \"So it wasn't on this very spot.\"\n\nShe laughed and squeezed his hand. \"Trust you to remember the exact spot. You probably know it down to the millimetre.\"\n\n\"I'll never forget.\"\n\n\"Probably put the coordinantes in your GPS.\" She laughed, then rested her head on his shoulder again, speaking softly. \"You know our discussion last week?\"\n\n\"The, ah, family discussion?\"\n\n\"Yeah,\" she whispered, \"The family discussion. I'm pretty sure I'm fertile right now. Want to go halves in another baby?\"\n\nDuncan gave a little laugh. \"Didn't we decide having another means we'll be outnumbered?\"\n\n\"Yeah, but this is why we live reasonably close to both our parents, silly!\"\n\nHe smiled, absolutely wanting another child with Sophie, and besides, they'd already agreed the week before. At thirty-seven, Sophie wasn't getting any younger and they decided the sooner the better. Kissing the top of her hair again, he said, \"Okay, you've convinced me.\"\n\n\"Wanna do it on the beach, Doctor Ross, like old times?\"\n\n\"Sounds great, your honour.\"\n\n\"Hey, I'm not a judge! Not yet, anyway.\"\n\n\"The jury's out on that one.\"\n\n\"You don't even make sense, you dag.\"\n\n\"Just saying you're highly judgmental, that's all.\"\n\nShe laughed. \"You're not judging your words too wisely, husband.\"\n\n\"Sure, wifey. Hey, let's move two metres to our left.\"\n\n\"Isn't it two-point-five metres?\"\n\n\"Two-point-four-seven actually.\"\n\nThey both giggled, shuffled across the sand, then kissed, their mouths joining with passion, tongues touching, hands feeling familiar skin and curves. The palm of her hand lay over his heart for a couple of throbbing beats, before moving across his shirt which he'd diligently ironed at their home the previous night, but was now crumpled after a long day's work as a renal consultant at the hospital's renal unit. Sophie fingered his top button and whispered, \"Let's open this up, Doctor Ross.\"\n\nDuncan's hand too began unbuttoning Sophie's blouse, but not removing it, for there was a fresh breeze and he didn't want her to be too cold. As it was he could feel her skin was covered in goose bumps, growing in number when he gently nuzzled his lips against the soft rise of her breast above her bra, which he deftly removed with one hand at her back.\n\n\"Oh, God, Dunc,\" she moaned when he kissed her hard nipples, tongue rolling over them, lips gently sucking at her areolas. She loved the way he sucked and kissed her breasts, every bit as much as he loved doing it to her. Enjoying his lavish attention, her hands found his belt buckle, loosening it and unzipping his fly, then they both worked at removing his trousers, pushing them down his legs.\n\n\"What's this then,\" she whispered, brushing the sand off her hand onto her dress, then taking hold of his erection.\n\n\"It's my big, fat cock,\" he whispered.\n\n\"It's my big, fat cock,\" Sophie said, flashing him a smile before going down on him, taking his big, fat cock in her warm mouth.\n\nThe sight and feel of his beautiful wife sucking his dick caused the adrenaline to flow, his breathing increasing with the excitement while he pulled at her underpants from beneath her dress. Wrestling them down her long legs proved more difficult than he'd expected because she moved and wriggled while running her lips up and down his length, giving him pleasure shivers. She wasn't helping him in the slightest, and when her lips slid up to the top, she kissed the end of his knob, and giggled playfully. \"Having a bit of trouble there, Doctor Ross?\"\n\n\"Only the usual. My wife's being a handful again.\"\n\n\"My husband's more than a handful. More than a mouthful too, if you must know.\" She giggled before slipping her lips over him again, slowly moving them down his length, taking him in till his cock-head nudged the back of her throat.\n\n\"Sophie, my love,\" Duncan gasped, now looking down at his wife's hair, a mix of dark and light curly tendrils, joined recently by an increasing amount of grey, cascading from her head about his belly and groin. He reached out and touched the back of her neck, lightly tracing his fingers over her skin. Sophie sucked him hard from base to tip, her tongue all over him, and her technique was sensational as usual, but he wanted more of her. \"I love what you're doing to me, my love, but my years of medical training tell me there is no way we'll make a baby using this method.\"\n\nHolding his saliva-wet shaft and looking up his body while gazing cheekily into his eyes, she tongued his knob for a moment longer, her bottom lip resting against the tip of his bloated organ. He chuckled because she looked comical in the moonlight, and she smiled because making him laugh was her desired effect. Playful sex was their favourite kind of sex.\n\n\"Hmmm,\" she moaned, \"You and your use of facts. But do you have something for me up there better than what I have down here?\" Her voice was breathy and she slathered her tongue slowly from his cock's tip to base and back.\n\n\"You'll have to come up here and find out.\"\n\n\"I look forward to cumming up there,\" she smiled and gave him another round of licking.\n\nBack when they were new at loving, Sophie came quick and hard every time they fucked, which was usually several times a day back then, and Duncan joked it was his natural prowess as a lover, which he genuinely began to believe. But over time they heard the tales from their female friends, most of whom confided to Sophie, of their frustrations with sex, of not orgasming through penetration, or how clumsy and selfish their lovers were. But also through Duncan's studies in medicine, they'd come to the conclusion Sophie came easily and harder than many women. \"Turns out it's my natural prowess as a lover,\" she'd once said to him with a breathless sigh after several thumping orgasms one morning, his shaft buried deep inside her, on the verge of climaxing himself, back in their rented terrace share-house in Sydney's inner-west during their university years.",
        "But now he said to her, \"Making you cum is what makes me cum, my gorgeous.\"\n\n\"Some things never change, Duncan Ross,\" she laughed, making him smile. \"You're still a dag.\"\n\n\"But I'm your dag, remember,\" he whispered. \"I want to kiss you all over.\" And he did, causing her to giggle and moan in equal parts. He sucked at Sophie's warm skin, tasting her, his lips tender-soft at her neck, shoulders, arms, breasts, nipples, and belly. She still wore her dress, and his hands were under it, on her thighs, now handling her with more vigour than his earlier gentle caresses, gripping her bum cheeks tightly, his fingers squeezing her flesh. He whispered, \"Stand over me.\"\n\nShe did and he lifted her dress over his head, the dress' wet hem brushing against his back, and with his face between her legs he expertly fondled Sophie's clit with his tongue, causing her to moan. \"Oh, keep this up, my love!\"\n\nDuncan listened to her breathing and felt her bodily reactions, adjusting his movements accordingly. He knew her completely, rubbing his tongue-tip around the top of her folds, pressing down on her clit, feeling her nub with the flat of his tongue, sometimes running it down her entrance, into her, tasting her salty sex flow, dripping into his mouth, drinking her in, her aroma and taste potent and glorious. He grasped her bum, her skin soft, and she clasped his shoulders for balance while she moaned.\n\n\"Oh, Duncan, I love you so much!\" she whisper-cried, and soon she was clenching her muscles, her entire being bursting with pleasure as her orgasm thundered and pulsated, her legs like jelly, barely holding herself in place.\n\n\"Sophie, I love you so much too,\" he whispered into her private parts, kissing her softly there, then removing his head from beneath her dress, her sex juices smeared about his smiling mouth, and he looked up into her love-glazed eyes.\n\n\"I love you too, my lover,\" she grinned, \"But I don't think we'll get pregnant this way either.\"\n\nLooking into her eyes and smiling, he said, \"Let's make a baby, Soph.\"\n\n\"Duncan Ross, you are still the love of my life after all these years,\" she said, then giggled, adding, \"Amazingly.\"\n\nHe smiled a little smirk, because he found his wife fun and humorous and breathtaking, time taking no toll on their love. He was amazed by her too, but not surprised in the slightest they were still a solid team. Both husband and wife were positive they were made for one another.\n\nAnd they'd made love many thousands of times since the early morning when they first joined their bodies and souls on this very spot, but lovemaking was still a special activity for both of them. Gazing deep into each other's eyes as Sophie straddled Duncan, his cock rock-hard and slowly pushing past her folds, penetrating into her soaking wet hole as she slowly slid down his length, savouring the feeling of completely surrounding it, her body taking hold of him, their life and soul fused.\n\nRelishing every moment and sensation of the physical and spiritual contact of their joining, they took their loving slow. Duncan and Sophie were one, joined physically, as close as possible, yet he pushed harder, and she pulled him into her, both trying to get closer, always yearning for more, bodies melting together.\n\nHim sitting in the sand and she straddling him, her dress covering where they were joined, they rocked together slowly and kissed gently with experience, time standing still while they enjoyed one another.\n\n\"Oh, you feel so goooood!\" Sophie sigh-groaned, leaning forward, allowing his penis shaft and pubic bone to touch her erogenous zones, inside and out, in all the right ways she knew and loved, while his mouth sucked hungrily on her bottom lip. She sighed again, \"Like always.\"\n\n\"I love you,\" he whispered, and a while later she kissed him hard and passionately, and he held her tight, feeling her tremble as she came again and again, her orgasms a deluge of shuddering pleasure waves rippling through her, his own pleasure reaching the point of release, his cock pulsating, pumping volumes of his sperm, giving his seed to her.\n\nAfterwards they smiled and kissed, caressed and whispered their love for each other, still intimately connected on the beach, her dress covering their sex, neither going anywhere quickly.\n\n\"You pumped so much cum into me,\" Sophie whispered, \"So I'm just gonna assume I'm pregnant now.\"\n\nDuncan laughed. \"I think when we get back to bed we should go another round, to make sure.\"\n\n\"Why stop at one round? We should spend every chance we get making babies! Might not get many other chances this weekend.\"\n\n\"Babies? As in plural? Jeeze, let's hope it doesn't result in more than one.\"\n\n\"Twins!\" she cried in mock-horror. \"Just imagine!\"\n\n\"Our mums would be beside themselves with excitement.\"\n\n\"We'd have to move to the cottage on your mum's farm then.\"\n\n\"Let's not jump ahead of ourselves, eh, Soph. We should hope we even get one.\"\n\nThey laughed and loved, kissed and cuddled in the moonlight, the cool sand beneath them, the salt sharp in the air and the sound of waves crashing against the shore, while the Milky Way twinkled by the millions from above, watching over them as always.\n\nSophie eventually climbed off Duncan, his softening cock sticky with their love when her body released him. After dressing and brushing sand off one another, they held hands, kissed and cuddled, whispering their love to one another with smiles and passion sparkling in their eyes and hearts. With fingers tightly entwined, they began walking up the dune-track, back to their family.\n\n~0~\n\n \n"
    ],
    "authorname": "Thefireflies",
    "tags": [
        "australia",
        "beach",
        "best friends",
        "drama",
        "first time",
        "losing virginity",
        "love story",
        "outdoor sex",
        "romance",
        "virgins"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/under-the-milky-way"
}