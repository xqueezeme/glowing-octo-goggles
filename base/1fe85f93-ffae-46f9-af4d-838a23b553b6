{
    "title": "My Only Talent Ch. 26",
    "pages": [
        "Note: The descriptions and accounts in these stories are fictional and do not portray any actual people or events. The delay in posting this chapter and perhaps the next few may be ascribed to some unexpected turbulence and travel in the author's schedule.\n\n*****\n\nThe monitor made a loud 'beep beep boop!' like something was wrong, and then four new seats on the map began to blink red. Two were in the exit rows right over the wings, and the other two were seats in world club near the galley, closest to the stairs that I had used to come up to the flight deck. Another 'beep beep boop!' sounded and the two seats other than mine that had been highlighted in orange now turned blinking red, too!\n\nElizabeth's vocal tone had suddenly changed from sweet and syrupy to serious and stressed. \"Heads up, Roberts, we may be in for spot of trouble!\"\n\nThe brain between my legs fought the brain between my ears for control, beginning the contest with a major blood flow advantage. However, primal logic soon triumphed: if the plane went down, there would never be any more nookie. My circulation adjusted and my associative cortex came online. \"What triggers the flashing red?\"\n\nI flattered myself briefly by assuming there would be a delay while Elizabeth was making a similar adjustment in her concentration, but her response was rapid and clear: \"Any adverse change in the assessment of the status of the person in the seat. It could be anything from a student visa expiring up to and including active information about a planned attack.\"\n\n\"Who can make the change?\"\n\n\"Let's see who made this one.\" She did a three key combination and a screen came up with some text delineated by dates and times in reverse order. \"That's funny!\"\n\n\"What do you mean?\"\n\n\"This update came from one of the two Air Marshalls on the plane. Usually that means they have observed something in flight. But there is no notation as to what he observed, and there should be.\" She pointed on the screen to a very pale and young looking guy with a long black ponytail in the previously described ratty jeans and tee shirt outfit. If this had been Austin, I would have expected to see him behind the counter at Oat Willie's selling incense and rolling papers. \n\n\"He's where the update came from, but he is just sitting there and not entering what he observed. That is not right.\"\n\nShe watched as the video switched to another section of the cabin, and then pointed to an attractive woman who appeared to be in her mid-thirties. She was dressed in a pink and green sweater vest and skirt outfit with perfectly done blond hair, and if this had been Austin, she would have been stepping out of a Caspian Blue Metallic Volvo XC-90 to pick up two darling daughters at Saint Andrew's private school. \"He didn't update the other Marshall, and that's weird. He just posted direct to the info section. It's almost as if he wanted to change the status in such a way that nobody on the aircraft would see it.\" She looked puzzled and a little alarmed. I certainly did not like seeing her look that worried.\n\nNo longer inhibited by the brain between my legs, my bladder suddenly posted its own little status update: I had to pee, very soon and very much. \"What do we do now?\"\n\n\"We have to wait and observe. We are hours from our destination, and even if there were a planned attack or hijack, it is much more likely to happen right after takeoff or just before landing, not now.\"\n\n\"Where's the nearest bathroom?\"\n\nShe gave me one of those quintessentially female looks. \"It's just forward of the bunk beds on the opposite side of the corridor. It's unmarked: just push on the wall next to the bunks and it will pop open.\" \n\nRelief flooded through me, so to speak: I really had to go. I moved out into the corridor and pushed tentatively on the opposite wall between the bunks and the flight deck. Sure enough, a door popped open, revealing a standard but very small aircraft toilet. I set about my business with dispatch. It felt even better than I thought it would, and suddenly I was very relaxed, perhaps more than I should be given the uncertain situation on board the aircraft. Fully drained, I cheerfully washed my face and hands and readjusted my clothes.\n\n*******\n\nSarah Stevens Susskind just thought she was bored back at home before Christmas. She only thought she had been crushingly bored before, but after the relatively moderate excitement of Christmas day, she realized how bad it was going to be. Terrell, Texas was not a big town. Sarah realized her folks were probably the richest and most well educated two people in the whole of Kauffman County, much less in town, and that her home environment had been thus full of interests and distractions for a smart little girl. When she arrived in Austin and started school at ESU, a whole new world had opened up for her. By comparison, coming back home now seemed like closing the curtains on a hearse that she was trapped inside of. She felt a shiver, the same kind of embarrassing shake that she got when she thought about Robbie Roberts. She certainly could have handled that better. Robbie, like ESU, had really opened her eyes, among other things. Well, best to put that behind her, although every time she spent the night with Ms. Wyrickie, another new experience, she couldn't help but think about how Robbie had sent both of them 'round the bend with excitement when he had been there too. \n\nLike many Texans, boredom often drove her to eat, drink, or drive. Some of them had a problem with inappropriately combining the latter two: it did kept the ER docs busy. Sarah settled for just driving. Her parents were at some kind of early planning meeting for the annual Heritage Jubilee. She took her TDI out of the driveway, turning left on Griffith Avenue, heading northwest at first, with no particular destination in mind. She didn't want to drive through boring countryside, so she turned back on 205 toward town and soon found herself at Moore Avenue. She turned back towards the west, on a whim, and found herself going by the trailer park where the guy they called \"Billy Bong Water\" had lived. \n\nSarah had a bit of crush on him in high school - perhaps because he was exactly the kind of boy her parents would very much not approve of. He was the 'skateboarder' type with long hair who looked very young for his age, and a slacker attitude. But he was also kind of good looking and dangerous, and was rumored to have the best dope in town. She was surprised to hear that he was going to college, but it turned out to be junior college in Dallas. Curiosity got the better of her, and her car seemed to drive itself into the trailer park and around to where Billy used to live. It turned out he was home for Christmas too - and he was outside using some very smelly varnish on a skateboard that was sitting on a sawhorse in front of his parent's old trailer. \n\n\"Hi, Billy.\" \n\nHe looked up and smiled. \"Hi, Sarah. I bet you are just as bored as I am.\" He did not look her up and down like she was hoping, and he didn't seem as edgy and dangerous as he used to, either.\n\nHe finished coating the skateboard and put the lid on the varnish, washing his brush out in a Mason jar filled with clear liquid. \"My folks are visiting my Aunt Ida in Gun Barrel City, and they won't be home for several hours. Do ya' wanna get high?\"\n\nShe considered it. She hadn't smoked any dope since she started school at ESU, but what the hell. At least it wouldn't be boring. She followed Billy into the trailer. He went back into his old bedroom and came back with a black plastic Pelican case like her dad used for his prized shotguns, but much shorter. He opened the case and took out a glass contraption that looked like some flasks and beakers and tubes from chemistry lab all stuck together, but with green and blue tinted glass and five spiral condenser tubes in parallel, and a mouth piece that looked a little bit like a gas mask! He set it on the table proudly, and then went over to the refrigerator. He opened the freezer section on top and retrieved a freezer worn Stouffer's family size lasagna box like her mom used to heat up when her least favorite in-laws 'just dropped by' for supper. Then he reached down into the refrigerator section and further into a 12 pack of Coca-Cola and pulled out a single can from the back. He set them both on the coffee table.\n\nShe knew Billy was no Boy Scout, but he sure seemed to be prepared for the munchies. But when he opened the frozen lasagna box, she saw it did not have a plastic food dish inside but a shiny cold metal thingy in it, which he snapped into the blue and green glass contraption right in the middle of those five condenser tubes. The Coca-Cola can had a screw off lid on top, and from it he took a marijuana bud that looked like fluffy green and brown clothes dryer lint all stuck together, and put it in the bowl of what she now realized must be the most high tech bong in town, if not the state. He took out his stainless steel butane lighter and fired up the bowl, taking a massive hit from the mask like mouthpiece.\n\nHer heartbeat sped up. This was some serious doper shit here, not just puffing a joint at party, which was the sum total of all her previous experience. She took the pipe and he held the lighter for her, and she took a tentative draw on it, anticipating the hot smoke and determined not to cough and look un-cool. But the smoke was not hot and dry, but cold and wet. It went down smooth and easy, and suddenly her lungs were full of it. A strange feeling welled up behind her eyes, and she felt her skin flush. \n\n*******\n\nSuzanne continued to dominate her new academician sub. \"How did you come up with this theory, August? Were you struck by a lightning bolt of inspiration in the shower, dream about two snakes chasing each other's tails, or did an apple fall on your head?\" Suzanne snapped the Cat o' nine tails menacingly on her open palm. \n\n\"Actually I arrived at it in a very systematic manner. Not by economic insight, but via academic politics.\" He watched her expectantly, not wanting another 50 lashes. Maybe five or ten would be nice, he thought, especially if she would take off a little more of that outfit. Who WAS this woman, anyway?\n\n\"Go on, August, and succinctly!\"\n\n\"I had to pick a dissertation topic that my primary professor would approve, and that a committee would be interested in, and want to see brought forward, and keep approving along the way. My then Mistress would also be on the committee, and she had some very definite political ideals that the findings of the work would have to support.\"\n\n\"So you decided on the conclusions and results before you even defined the topic?\"\n\n\"Of course! That's the way you get approvals and funding!\" he continued. Suzanne was now absolutely furious, but he went on. \"I also wanted to do a 'metadata' study by combining results of other studies, rather than having to do primary research myself.\"\n\n\"Of course!\" Suzanne's blood was now boiling. \"What was your real goal for all this, Auguste?\"\n\n\"Well, I wanted to finish my PhD, get a faculty job, get paid, and then get tenure. I wanted people to think that I was the world's foremost expert on properly managed complex socialist economies, and the only one who could really be counted on to successfully manage one.\"\n\n\"And what did you actually accomplish?\"\n\n\"Well, I got my PhD, I got a job, I got paid more than I ever thought I would, and I got grants, wrote papers, and then I got tenure!\"\n\n\"And...\"\n\n\"And now lots of politicians are talking up my ideas, and moving toward implementing them.\"\n\n*******\n\nElizabeth's hands flew over the console trying to gather as much data as she could. She did not want to alarm Robbie any more than necessary, but there was definitely something squirrely about that young male Air Marshall. Using an access code no one else on board had, she pulled up his personnel jacket. He was very young, and he had no military experience. He had come right out of an American junior college two year associate's degree in CJ and went right into the Marshall program. The background investigation was very sparse, much less than it would have been for anyone who had a security clearance in the military. She wondered if his clearance process had been outsourced to USIS LLC.\n\nMotion on one of the screens caught her eye. The young Marshall had left his seat in the rear of the plane and was moving forward. The camera's automatic switching came at just the wrong time, and she did not see him again until he was midway through the main cabin. He was walking normally, but carrying something in his left hand, holding it close to his tee shirt. Should she go get Robbie from the bathroom, or stay here and leave both of them hidden for now? The video switcher went back to the rear cabin, and Elizabeth missed the young Marshall turning and running up the stairs that led to the corridor and to the flight deck. \n\n*******\n\nI felt gloriously empty, relaxed and at peace as I pushed open the bathroom door and stepped out into the corridor, moving back toward the berth and Elizabeth. Then I heard a grunting noise from the direction of the stairs and saw the ponytailed Air Marshall running up the stairs toward me. I felt instant fear and alarm - the same feeling I had at the tennis tournament in Austin when Pavel was running toward Lara. Time suddenly slowed down, and also just like with Pavel, a gun in ponytail's right hand very slowly rose up towards me. Time slowed down even more, and I realized this was some funny kind of revolver with a really long and fat cylinder and a very short barrel and a hole in the front that was at least twice as big as Pavel's little .22 long! In his left hand, he had something that looked like an aluminum Frisbee with grey plastic on the underside. He looked really surprised to see me, but then in slow motion his face contorted and I felt his rage: almost like receiving a very strong Suzie signal, but very unwelcome and scary as hell. Somehow I knew this was a kill or be killed situation.\n\nI felt a galvanic buzz all up and down my spine and right behind my eyes, and as I looked at the Marshall, now only about four feet away and on his way through me to Elizabeth and then the flight deck, a single thought took over my entire being: NO! It came out like the Suzie blast I had directed at Melanie back in her dorm room at the first of the fall semester, but a hundred times as strong, and aimed right at ponytail. I suddenly felt kind of woozy, but things were still in slow motion and I knew what I had to do. We used to have boxing and wrestling instruction after school in the tennis teams off season, but I was never very good at either one. I told myself to just do your best Robbie, and remember what Dwight said about the next time you might be in this kind of trouble: get in the first damaging blow, and the second, and then just keep at it until you are sure your opponent is down and out, and no longer a threat.\n\n*******\n\nSuzanne tightened the restraints on Professor Auguste F.I. Haubenfelter, such that he was absolutely immobilized in a horizontal position about a foot above the tile floor of his rented apartment. \"Tell me more August.\"\n\n\"Well, I got lots of attention from coeds who wanted to pass my class and maybe have a little thrill from a professor and student fantasy, and I enjoyed it immensely. I got fawned over by the press, who seemed to like my vision of the perfect socialist economy even though they really didn't understand it, but they pretended they did, and they also loved the way I destroyed any conservative economist without having to actually debate my ideas.\"\n\nSuzanne didn't doubt that. \"So everyone would realize how wonderful you were, eh?\"\n\n\"Oh, no, no! If everyone actually knew how wonderful I really am, they would either worship me or resent me, and neither would be particularly useful to me, although I did like it when some of the coeds worshipped me.\" He hoped that she would not lose her ability to dominate him, now that she was beginning to see how fantastic he was. \n\n\"Auguste, I am going to ask you some questions, and you must answer me with complete and total honesty. If you do not, you will be punished to the point of near death, and damaged forever. If you answer honestly, I can help you enter a new and even more rewarding phase of your life. Do you understand?\"\n\n\"Yes, Mistress! I promise to be completely forthcoming.\" He would do anything to see more of her underneath that outfit, too.\n\n\"Do you really think your ideas, if implemented, would produce a perfect economy?\"\n\nHe considered responding with his normal bluster and superior attitude, as he had so many times before, but she popped the Cat, and leaned over him, offering some wonderful cleavage, and he decided to try honesty for a change. \"I have no idea. I just proposed what I thought would further my career the most, and I don't know if it would work or not.\"\n\n\"Very good, Auguste.\" Honestly must be rewarded. Suzanne slowly took off her top, exposing her breasts to his view, stretching seductively, and standing right over him. \n\nAuguste could not believe this woman. He had never seen such a beautiful pair of breasts in his life, even in his dreams. She was a perfect vision, muscular yet curvy. She bent over him again, and he imagined taking those perfect nipples in his mouth. His entire body was on fire now, and his brain was racing like it never had before.\n\n\"Do you really think those politicians would implement your ideas, and really let you control the economy?\"\n\nHe was in an entirely new state of mind now, and it felt good to just respond instantly, and not have to pause and carefully construct a self serving narrative. \"No. They would use me to gain more information and control, and then use that increased power over the economy to do whatever the lobbyists would pay the most for, just like they do now!\"\n\n\"Good boy! I knew you were actually an intelligent man, and that somewhere in there you were not kidding yourself about all this. Are you ready to enter a whole new chapter of your life? Are you ready for me to do what must be done to set you free?\"\n\nHe would say or do anything if he could just set those pants free of her hips! \"Oh yes, Mistress, yes! I am yours to shape as you will!\" \n\nSuzanne smiled, displaying a feral look that she seldom let show. Auguste missed it. \n\n*******\n\nElizabeth heard a noise in the corridor, and assumed it was Robbie coming back from the bathroom. Then she heard another noise from the other direction, back toward the rear of aircraft, and she opened the berth door to see the young male Marshall running at Robbie. Her instant and very emotional response triggered her flight or fight reaction, and then everything slowed down. When she tested for joining HQ, they explained that she possessed a very strong 'tachypsychic' reaction: under stress, she got cool, calm and collected, and her mind's internal clock seemed to speed up like a high speed camera, making the real world seem to be in slow motion. She saw the young Marshall raise his revolver at Robbie. She knew the .45 caliber standard loads were either 'bean bags' designed to knock a person down or plastic shot shells designed to shred flesh at short ranges, both without penetrating the skin of the aircraft. She did not want to think about what either load would do to Robbie.\n\nBut before the Marshall could fire, he seemed to stumble! He lurched towards Robbie, chin forward, and reflexively flapped his arms out to the side to try to regain his balance. It was like a scene from a bad boxing movie, where the champ suddenly becomes a chump and gives the underdog a perfect knockout shot at his chin. She watched as if in slow motion as Robbie swung his right hand from down near his waist up toward the Marshall's chin, catching him right on the button, distorting his face, shaking his jowls, and sending the Marshall's head spinning away from Robbie and towards the Marshall's right shoulder. It was a textbook knockout blow. She reveled in what happened next: Robbie quickly drew his arm back, recovered his balance, shifted his weight back his right leg, and used his shifting momentum to deliver a front kick with his left foot, catching the Marshall right in the nose about half way through his falling head's journey down toward the floor. Robbie's weight shifted back to his left foot, and he quickly kicked the Marshall hard again with his right foot, twice, on the Marshall's left temple. Bloody well done, Robbie!",
        "By this time Elizabeth was on the Marshall, wrenching his arms back behind his back and putting on a plastic cable zip tie, pulling the little clicker catch and binding his arms together like a steel band. A second tie soon loudly zipped tight around his ankles, and then a third tied the previous two together, rendering him trussed up like a captured hog. She looked up to see Robbie white as a ghost, and stumbling backward. It was a classic adrenalin reaction, but for some reason his was greatly exaggerated. He was seconds from passing out. Her mind went into overdrive. \n\n\"Robbie, help me lift him up into the bunk in the Marshall's berth, quickly!\"\n\nRobbie moved almost robotically, grabbing the Marshall's shoulders while she grabbed the tie around his ankles. They lifted him up and swung him over into the berth, still lying face down. She saw that his right eye was dilated and immobile, and looking down and towards the right, a condition that she had learned in her training to call 'down and out' and associate with damage of the nerves to the muscles of that eye. Not surprising, given the three unblocked kicks to the head that Robbie had delivered, but tough luck. She wasn't about to make an announcement asking for a physician on board! In fact, if at all possible, she was going to try to cover this little incident up completely until they landed. \n\nHer first priority was to check the scene. Robbie was reaching unsteadily for the Marshall's gun. \"Stop!\" she hissed. \"Don't touch it Robbie. We want his prints on it only!\" She ducked back into the berth and came back out with a plastic bag, using it like a doggie poop bag on a hiking trail to capture it and seal it without touching the gun herself. She spotted the other object nearby, and her blood ran cold. It was a stick on demolition charge designed to open up the door to the flight deck, and probably kill all the crew inside. As far as she could tell, it was not yet armed. She bagged it too, and then decided to put it underneath the Marshall in the bunk, with the aluminum side down, and the plastic explosive side facing up. If it did go off, the force would go up and mostly be absorbed by the Marshall's body, like a soldier falling on a grenade, and not be directed into the flight deck as originally intended. \n\nRobbie stumbled again, white faced, his eyes fluttering. \"Water?\" was all he said.\n\nShe moved him over into the seat, where there was bottled water and a little coffee service tray like you might see in the bathroom of a middle grade hotel room. He chugged about half the bottle of water, then grabbed all of the little sugar envelopes, ripped the tops off, and dumped the sugar in his mouth, chasing it down with the rest of the bottle of water. He smiled, and his color improved almost instantly. Was he diabetic? She steered him back into the corridor and into the lower bunk across the way, and he was asleep almost the instant his head touched the pillow. She put the blanket over him, fastened the seat belt to hold him in, and closed the curtains, making sure the Velcro fasteners held them tightly together. \n\nElizabeth turned back to surveying the corridor. Luckily, there was no blood on the carpet. She had to quickly figure out what she had to reveal and what she could cover up. She retrieved the fallen Marshall's phone and texted the female Marshall, who was still in the cabin and hopefully unaware of any trouble so far. She used a code word for a minor emergency and told her that the male Marshall had taken ill and was resting in the berth and would receive medical attention as soon as they landed, and that as the other Marshall should remain on station until landing, then report immediately to her ground side supervisor for debriefing. \n\nShe pulled up the video and began to look at what had been recorded. It was a little bit like a home cable DVR, in that you could look back at what had been recorded while the recording was still being made, but you could not change anything that had already been recorded. The recorder simply took down the image from the cameras that the auto switchers choose. She reversed back to the image of the Marshall leaving his seat in the back of the plane, and then let the recording play forward. There was a fleeting instant of the guy starting up the stairs up toward the flight deck, but then the image shifted back to the rear cabin. The next switch back upstairs had recorded Elizabeth already securing the ponytailed Marshall with the zip ties, amazingly leaving still Robbie unseen. The scene switched back to the rear for a few moments, and then returned to show Elizabeth bagging the demolition charge, again leaving Robbie off camera. She might just be able to pull this off.\n\nHer marching orders were always to accomplish her mission without anyone knowing she was there, leaving no evidence behind. Since today she was not on a mission or even supposed to be here in the first place, much less be with Robbie, she had some work to do. She started a secure email, composing it on the fly to serve as an outline of what she wanted to say. She very briefly summarized everything that appeared on the video, and then added what she saw herself, and the entries the errant Marshall had made, but excluded any reference to Robbie's involvement in subduing him. She went over everything in her mind's eye, painfully aware that she had a short window of time before she had to send the time stamped message, and that in the very near future she would soon be in the box and aggressively challenged on everything she wrote and everything on the video. She might never see Robbie again after that, either. \n\nShe finally closed the message by saying she had no idea why the Marshall might have wanted to bring the plane down, or even if the demolition charge was live, and made the recommendation that the passengers be allowed to disembark normally and without calling any attention to the situation, leaving it carefully unsaid why she had even been here in the first place. She read it over once, and pressed send, feeling that any further delay would add suspicion. She realized she felt a little shaky herself, and downed a bottle of water and some cheese crackers from the little service tray. She felt better, and hoped Robbie would too. They had at least four hours left before touchdown at DFW. She checked the Marshall's pulse: weak and slow but steady, but his pupils did not respond to light. She re-checked the plastic flexi-cuffs and secured the Marshall with the seat belt and went across the aisle to check on Robbie.\n\n*******\n\nAuguste could not believe his luck. He must have given the right answer, because his transcendently beautiful Mistress set down the Cat o Nine Tails and began to remove her panties! This was the greatest moment of his life. If this was the new era he was to enter, he would go willingly. She paused with the panties just above her knees, and his heart stopped. \n\n\"Are you ready for your wake up call, Auguste, to start the revelations which will lead to a new era in your life?\"\n\nAnything to get those panties moving down again. \"Yes, Mistress!\"\n\nAll his dreams were coming true! She pulled the panties down and stepped out of them, and his eyes feasted on the most wonderful sight they had ever seen. Her legs were perfect: muscular and smooth and shapely. Her skin was unique, a light yet dark olive with a sepia undertone, seemingly sprayed on to those perfect thighs. It got even better. She picked up the cat and began to pop him with it, and her muscles rippled and shook under that perfect skin as she did so. He barely felt it. He wanted her to hit him harder, so her perfect little body would shake even more. \n\n\"I am going to do what must be done to awaken you to your true potential, Auguste, to let you fulfill your destiny!\"\n\nShe stepped over him and put one leg on either side of his head. He now realized that her legs were nothing compared to her perfect little pussy! A stylishly trimmed landing strip of dark pubic hair pointed to the pink and light olive confection between her legs. She actually began to bend her knees and move that perfect pussy down toward his mouth. He strained his neck, sticking out his tongue, ready to devote himself to it. She actually looked a little wet already, and he felt a warmth and peace and calm like never before, and a smug certainty that his innate superiority had been recognized and was about to be rewarded. \n\n*******\n\nElizabeth pulled open the curtains to find Robbie looking much better: his color had fully returned and he was sleeping soundly without snoring. In fact, he looked damned good to her. He had certainly risen to the occasion by knocking out the Marshall, just as he had certainly risen to the occasion with both Elizabeth and Peggy on the yacht. He must be incredibly lucky that the guy had stumbled at just the right time. He had gotten pretty lucky with her, too. She had never had an orgasm while on duty in the field before, much less several. It wasn't just another addition to her skill set: try as she might to be a stoic operative, she was not the kind of girl who could have that kind of experience without developing some strong feelings for Robbie. Her Robbie, her amazing Robbie, and it suddenly hit home that after this little misadventure she might never see him again. He went after the attacking Marshall without hesitation, despite having nothing like the training or experience she had. She realized he was instinctively putting himself between the Marshall and the flight deck, and protecting her. She closed the curtains behind her, pressing the two edges together so the Velcro strips sealed together. She pressed her body next to his on the bunk, loosened his collar further, and began to caress him.\n\nRobbie stirred, and every muscle south of her waist clenched at once. Emotion welled up unbidden. Robbie had risked everything to put himself between her and harm's way, and he had won the day. He already had won her, but now her feelings for him were completely undeniable. She knew the old saw about \"getting shot at and living makes you horny\" but this seemed much more profound than that, if there ever actually was anything more profound than that. Suddenly the normally proper and reserved Elizabeth Ashcroft Knowles found all her inhibitions dropping away, and despite their only privacy being some flimsy curtains held only by little Velcro strips, she was going to let Robbie know how much he had pleased her, and how much she wanted to please him.\n\n\"We only have a few hours Robbie, and I wanted to show you a few things.\" Her fingers flew over the buttons of her simple blouse, revealing her nipples in full bloom.\n\nRobbie's sleepy eyes soon came to focus on a delightful sight. He smiled. \"My, my, but the d\u00e9cor aboard these British aircraft certainly is nice!\" Robbie covered her face with kisses, and started on her neck, and tuned into her Suzie signal to time his progress towards her nipples. He was surprised to discover that she was already several stages beyond ready for that, and looked at her quizzically. \n\nShe smiled back carnally, but with the forensic wheels still turning in her head. \"Well, then, to keep up appearances, I have to insist that we don't allow any wild American DNA to be scattered about in our pristine British plane! So I must insist that it be confined to my pristine British mouth!\" \n\nRobbie smiled. \"I guess that would be okay...\"\n\nWith that she dove for his crotch, lowering his zipper, pushing down his underpants, and engulfing his cock in one motion, bumping her head on the top if the bunk above them in the process, but paying it no mind. She let herself be caught up in the compulsion, and soon felt very light headed, concussed or not. \n\nRobbie felt it, too. He soon realized that his lovely Bright Eyes was someone he could completely lose himself in, and he proceeded to do so. He didn't so much tune into her Suzie signal as to let it wash over him and take him over. He didn't anticipate her responses - he felt them just as she did. He felt a pang of almost masturbatory guilt, but soon set it aside, and really got down to business. His tongue was scratching Elizabeth's itch just as she felt it herself, and then he withheld the scratch, just for an instant, and then scratched a little harder. The tension built up and resonated, and her screaming orgasm was muffled by his cock still trapped in her mouth, and he responded with his own orgasm, filling her mouth with wild American DNA, among other things. After a few delicious moments of suction and complete consumption, her breathing settled down a little, and they rotated about a common axis and began gently kissing each other's mouths. \n\nSuddenly Robbie was inspired to speak. \"I want you to know that at least one person in the world thinks you are the most wonderful woman ever. I know there is a chance we will never meet again, and I want you to remember me as your greatest admirer. I could lose myself in you every day and every night, and handle anything else in my life no matter how awful if I knew I had you to come home to at night.\"\n\nShe shuddered in his arms. \"Robbie, I made some commitments that I cannot set aside. But I am tempted, and I never thought I would be. You are the most amazing man I have ever met; someone I thought I would never find. It is almost certain I will never be allowed to have any contact with you in future, but you will always be in my heart. Always.\" \n\n*******\n\nSuzanne took one final look at Auguste, who was frantic to touch her pussy. He strained his neck against the restraints and up towards her, his tongue reaching for his reward. She briefly recalled her Kegel exercise training, and then squatted a little more, relaxed all three of her very well trained urinary sphincters, and gave him his just desserts. It was a fitting metaphor for what he had been giving his students. \n\n*******\n\nElizabeth's watch beeped, and she give Robbie one final kiss. \"Back to your assigned seat my love. I think they will let all the passengers off before dealing with me and the errant air Marshall, so make your way out with everyone else and don't look back. I will never forget you, but I have some preparation to do up here before we land.\"\n\nShe watched sadly as he disappeared down the stairway to the cabin. She checked the bunk they had been in and straightened things up, finding nothing seriously askance. She reviewed everything in her mind, and concluded she was as ready as she would ever be for whatever came next. She might end up in The Glasshouse, or the rumored top secret GCHQ 'corrective training center', an isolation unit from which no one was ever head from again. She might end up actually working for DEFRA, planning agriculture and forestry trade shows in the hinterlands instead of honey traps and surveillance missions. She might get through all this with a suspension, or a reduction in grade, or a permanent office assignment. She might get through it without any negative consequence, but it was not bloody likely. The aircraft touched down and began to taxi to the international gate.\n\nShe then heard the jet way bump against the aircraft, and then the hatch open, and some shuffling noises she assumed were the passengers moving out into the terminal. She ducked into the berth and checked her prisoner again: he had a weak and thready pulse and was still unconscious. She heard the cabin door open forward of her berth and assumed the flight crew was leaving the aircraft. Then came the strong three beat knock on the berth door she was expecting: \"SSD! Open up!\" Two lanky and serious looking guys in Texas DPS uniforms were standing outside when she opened the door. \n\n*******\n\nI left the aircraft with everyone else, and didn't notice anything out of the ordinary. I suppose that was the plan. There was nothing I could do to help Elizabeth now. I realized now that she must have somehow jiggered the reservation system to make sure I ended up on the flight she could get on, and I was sure glad that she did. I picked up my bag from the carousel and stood in the customs line for a while, and then I was walking out toward the exit doors. I called my dad, who I was sure had been monitoring my flight on FlightStats, and told him where I would emerge. Sure enough, his 'airport car' soon pulled up to the curb and I tossed my bag in the rear seat and sat in the front. We made small talk. There was no sense in telling him anything about what had just taken place on the flight. Loose lips sink ships and all that. We drove home and I spent the rest of the night having dinner with him and Mom and Grandma and Grandad, with Eldee giving me the occasional disappointed look over Nora and Lara's absence. Nothing unusual turned up on the ten o'clock news, and we all went to bed. The next morning I would head back towards Austin, and an expected return to normalcy, or at least to ESU. \n\n*******\n\nElizabeth had been sitting alone in the interview room for 12 hours now. Presumably they were interviewing everyone else involved and gathering all the available evidence before questioning her, and making sure she could not communicate with anyone else during that process. She expected to begin with some Texas DPS guy from airport security, then maybe an FBI type, and maybe they would try the good cop bad cop ruse on her. She was not sure what her people in Cheltenham would do - try to protect her and get her back home quickly - or just let her swing from all the rope she had given herself.\n\nShe was stunned when a tall and stately woman walked into the room alone, wearing a pink flannel business suit of all things, and even more surprised when she realized who it was. They called her Vivian Valentine, even though everyone knew that was an inside joke and not her real name. Everyone also knew that they did not know her real name, and that most of them never would. She was amazingly spry for someone who must be at least 75 by now. She was a legendary cold war field agent who had been 'kicked upstairs' to management when her cover was fully compromised. In her case there were several covers, since she was so startlingly effective in the field that they had to make up several identities for her, because just the realization that one key person had been involved in so many important intelligence operations was in and of itself a major security risk. She was also supposedly the most accomplished female assassin in the history of the western intelligence services, dispatching dozens of dastardly enemies of the Crown before she turned thirty. \n\nShe had proven to be just as ruthlessly effective as a manager: finding, developing and successfully running a passel of crack field agents and also thwarting and doubling several attempted penetrations of their agency and SIS. It was said if she took an interest in you it would result in your either being promoted or cashiered, with no middle ground, as she did not suffer fools or failure well. She was effectively the shadow director of field operations, and it was also said she had a higher clearance than the man who was actually the official head of the agency, since there were several previous high level operations she had run of which he had no 'need to know'. When she had first began her training, there were so many legendary stories about this woman that Elizabeth was sure she was a fictional character, or that the stories were an amalgam of several agents, not just one. But her most trusted trainer had been one of Vivian's acolytes, and he had assured Elizabeth that it was just one woman, and that many of her very best exploits would never be told. \n\n\"Hello, Elizabeth. Did you enjoy your little holiday?\" She sounded like someone's slightly daft old Granny, but her eyes were full of fire and purpose, and Elizabeth found Vivian's gaze intimidating. She said nothing.",
        "\"Come, come my dear! But then you did, didn't you?\" \n\nBefore Elizabeth could compose a response, Vivian continued. \"You just had the misfortune to be dallying when this young American Air Marshall went bonkers. That's what they are calling it so far - late onset schizophrenia, paranoid delusions, persecution complex, etc. I'm still not sure I buy that. But you reacted well in the moment. Very impressive, dear, that you could subdue him so quickly and all by yourself, to boot. By the way, we saw you hack the reservation system to get Roberts on the flight that you could dead head on. That was our first clue.\"\n\nElizabeth was still too stunned to speak. This woman apparently knew all about her plan to be with Robbie in the aircraft. This was the end of her career then. She sat slack jawed and still said nothing. \n\n\"Lighten up, dear. I did the same kind of thing several times.\" A wide grin spread across her face. \"A girl has to find a way to truly relax sometimes - it really helps with the stress of this job. I used to like them young, dumb and full of come. Your young man seems to be pretty bright. He is certainly young. Tell me about the rest on the way back home, eh?\"\n\n*******\n\nI hadn't realized how much I had missed my new car until I began to prepare it for my early morning trip to Austin, with a stop in Waxahachie for breakfast and a serious talk with Jay Kincaid about Millie. The two families had spent quite a bit of time together over the holidays swapping visits between Waxahachie and Houston, and had gotten along famously, despite their two grandfather's previous long term oil patch feud. It was about 40 degrees F when I was ready to leave, so I put on a cotton undershirt, a wool shirt, and my stylish English wool coat with the zip-in quilted lining, and put the top down on the SRT. The trip to Jay's grandfather's ranch, which was a few miles east of Waxahachie, was about 65 miles, and I was planning to make it in a lot less than 65 minutes. I was not sure I could manage 100+ mph with the same aplomb that Peggy had demonstrated in her Range Rover on our way down south to our birding adventures, but Oiler had assured me that the radar and laser detectors in my car were totally superior to anything available to Peggy. I pulled up the ranch coordinates (there was no address other than a legal deed description) on the navigation system, and it showed almost a straight north south shot to via the Tollway, and I-35E. \n\nI hit the Tollway on mental autopilot, and no radar emissions showed up on the heads up display painted with photons across the windshield, which also had the Weather Underground map superimposed to show weather and traffic hazards: today there were none. It was clear; the humidity was low, and the visibility unlimited, and the traffic was still light at this early hour. The car seemed to accelerate without me even touching the pedal. I could see Bent Tree from the elevated Tollway, where my dad was playing golf later this morning with a potential new private equity firm client that was about to do a roll up of a bunch of government contractors and needed him to combine all their sales forces without any earnings hiccup, and soon passed by the Galleria on my left, and then Love Field on my right. As I went over Harry Hines Boulevard, I slowed down to about 70 to enter Stemmons Freeway. There was no indication of radar, but there was enough traffic that I could not go much faster until I crossed the river to the R.L. Thornton. \n\nThings cleared out about the time I crossed Camp Wisdom Road, counter commuting to the south as they traffic built up in the northbound side, but before I could punch it, the car spoke to me. Oiler had programmed it with Mei Ling's voice for the announcements, since military research showed sexy female voices were best for getting the attention of male pilots. It got my attention all right, but partially diluted it to recall the look on Mei Ling's face as she watched as Millie was tied down, whipped, and penetrated doggie style by a double-gloved Ralph in Lara's apartment. I shook that off and tried to concentrate on the announcement, as a red \"X1\" appeared on the windshield HUD display slightly right of center and on the horizon. Mei Ling's sexy lilting voice said \"Kay A band emission bears 15 degrees. Possible Stalker hand held or fixed photo radar. Local speed limit 65.\" A high pitched steady tone began to sound, and then pulsed in synchrony with the \"X1\" on the windshield. \n\nI slowed a little and moved to the right lane, and the \"X1\" moved to the right, got larger and the tone grew louder. \"Kay A band emission X1 bears 30 degrees.\" I looked up to see a motorcycle cop ahead on the right leaning around a billboard just past the I-20 interchange with a radar gun pointed at me. Nothing happened as I passed by, and I waited until the tone disappeared and then three minutes more. When no other warnings sounded, I accelerated to 90 and then to 100, moving to the left hand lane to pass traffic and back to the right whenever possible. Brookside Road seemed to appear almost instantly, and then I had to remember Jay's verbal directions and the gate codes. When I pulled into the ranch, I didn't get greeted by a pack of Border Collies, like Jay usually did, but Cactus Jake Warner came around the garage and waved as I parked the car. \n\n\"Roberts! Why didn't you tell me that Jay's new girlfriend Millie was descended from that horse stealing, claim jumping, deed forging, and slant drilling Aggie son of a bitch!\"\n\nI laughed, despite his wild expression. \"That's just about what he said, except he added \"Tee Sip Idiot\" to your description.\" I had heard about their longstanding feud, and it was certainly not forgotten, by either grandfather. \n\n\"God damn it, Roberts! I had to really come to terms with how much I like Millie in a big hurry when I found out who her grandfather was! He laughed. \"I suppose I don't have to worry about her family being no account wimps, but I do have to watch my livestock carefully when her grandfather is around!\"\n\n\"I understand he said he didn't have to worry about you asking to borrow any money, but he did have to worry about you stealing it!\"\n\nJay emerged from the kitchen door and waved. \"They just won't let go of that shit.\" \n\nI followed Jay back into the kitchen, where a table was set with a 'make your own breakfast taco' buffet. Perfect. Cactus Jake went back into his study, and I heard one of the cable business network market talk shows begin to recite commodity prices. Jay and I were now alone in the kitchen. I had not been looking forward to this conversation, although I knew I had to do the right thing for Millie. At least the tacos were good.\n\n\"So, Jay, let's talk about Millie. Are we beyond the 'let's see how it goes' stage yet?\"\n\nHe looked a little sheepish. \"Yeah, I guess so. I think she is the most wonderful thing ever to happen to me. What is it you want to talk about?\"\n\n\"What it takes to really make her happy, and whether you are willing to do it for her.\"\n\nNow he really looked nervous. \"Look, Robbie, I know you have fucked her, a lot, but I am still trying to come to terms with that, and frankly, I'm still not comfortable with it.\"\n\n\"Chill out man, it's time to work this out. I have fucked her and she is wonderful, but I will never do it again unless you ask me to!\"\n\nHis eyes flashed anger. \"Is that what you think she needs - multiple guys?\"\n\n\"Either that or one guy who will really do her like she needs it done. I want that guy to be you, not me. She is a very unusual woman, and she has unusual needs - very strong needs - but what she really wants is one man who can handle her.\"\n\n\"You make her sound like a horse that is tough to break and ride.\"\n\n\"That's not bad analogy, if somewhat crude. Millie knows exactly what she is - she is a natural born slut, Jay, but she wants to be a one man slut and a wife and mother. She can only do that if that one man can fulfill her needs. But if you can handle her, she might be the best horse around.\"\n\n\"OK smart guy. Do you know what she really needs? If so, tell me.\"\n\n\"She needs to be owned, Jay. She needs you to tell her that she belongs to you, and that she will do anything you want, anytime you want, any way you want, anywhere you want. That she is forbidden to even look sideways at another guy. You love her, but she makes you crazy with lust, and you can't always be nice about it. She needs to be fucked like a rented mule - hard and cruel - about half the time. She needs to be kissed all over and treated like a sweet, tender little princess about half the time. And every time you touch her, you can never give her a clue as to which one it is about to be.\"\n\n\"I don't know if I can roll that way, Robbie. I was taught never to hit a woman.\"\n\n\"It's not about what you want, Jay, it's what she needs. ` But she would like it better if you didn't care what she wanted. She would like it better if you were just taking what you want from her. Spank her ass until it is red, and then fuck her throat and make her breathe through her nose to survive. She will love you for it.\"\n\n\"I did spank her the other day, just a little, just in fun, and she got really hot.\"\n\n\"She can come from the pain, Jay, and you have to learn to make her come that way. I am going to send you some links to study up on.\"\n\n\"OK. But it freaks me out a little.\"\n\n\"But I have to tell you one other thing that is perhaps even more disturbing.\"\n\n\"What the fuck?\"\n\n\"You know how some girls go crazy for guitarists, or singers, or movie stars, and they get like groupies and follow them around and fuck them any time?\"\n\n\"You aren't saying Millie is like that for rock stars, are you?\"\n\n\"It's much worse than that. She gets like that about politicians!\"\n\n\"Politicians?\"\n\n\"Politicians of any age or description make her crazy. You have to watch her like a hawk whenever she is around them.\" \n\n*******\n\nI left a few minutes after that, and raced south down the Interstate, passing Hillsboro, Waco, Temple and Georgetown on the way, making it into sight of the dorm in less than two hours. I had a choice between parking at UDP or in Lara's second space at her apartment building. I headed for Lara's; saddened that neither she nor Suzanne would return until the Sunday night before classes began, when Suzanne and I were scheduled for another in our series of 'dinners' at Strelsa and G\u00fcnter's apartment. A quick walk with my backpack on got me to the dorm, but not in time for lunch. I was starving, and an idea dawned. I texted G\u00fcnter and accepted his offer of lunch and a talk, and we met at the University Club just north of the stadium. The big buffet line was still open. \n\nLike last time, I knew I could polish off at least one full plate while G\u00fcnter talked and I ate, and it worked out that way. But I almost choked on my food when I figured out what he wanted to talk about. He was very emotional, and began once again to sound a bit like an inebriated Arnold Schwarzenegger. \n\n\"Rah-Bee I know ve zaid ve vould not try to do our best fucking when we had zee treesomes with Strelsa and Suzanne, so they would not like it zo much with two men, but ah cannot let you do it zat way wid her nah.\" \n\nHe waited for my response but my mouth was full. \n\n\"Zee whole idea is to let Strelsa get thrills she never got before vee vere married, zo I vant you to give her all you can and ze best fucking you can. Udderwise I will worry that she will still wonder and zink aboud it more and more, instead of forgetting aboud it and being happy with just me after that.\"\n\nI guess I got his point. I wondered if he were right. Would I always worry about Suzanne wanting to try multiple guys again? I had told Jay it was his job to give Millie what she needed. But I was sort of being a hypocrite, since I really liked everything that had to be done to make Millie happy, so it was easy for me. But would I have been so diligent in getting her what she wanted if it had made me more uncomfortable? \n\nHe continued. \"Zey have it all planned out. This Sunday Suzanne and Strelsa both do you vile I vatch. I vant you to give Strlesa all zee thrills you can - no holding back. Ze next week zey both doo me, and I will hold back with Suzanne if you vant me to.\"\n\nI suppose that meant I would have to watch. Not fun. But then that only left...\n\n\"Then the next week Strelsa gets double teamed by us guys while Suzanne watches, and zen finally Suzanne gets us both. But there is a surprise coming. Strelsa is not going to just vatch us with Suzanne - she is going to jump in and try to get Suzanne off too, three on one. \n\nI thought about it. \"G\u00fcnter, go ahead and do your best with Suzanne. I have to know if she really needs it that much.\"\n\nHe looked sheepishly pleased. \"I'm not zure I could hold back anyway because Suzanne is zo hot.\"\n\nThen he changed the subject. \"I also need your help with something else.\" He went on to talk about rowing and recruiting the best rowing prospects to ESU. I knew all about how competitive football recruiting had become, but it never occurred to me that rowing could have the same issues. Apparently the big programs were mostly in the east: Yale, Georgetown, BC, Cornell, Rutgers, Penn State, Columbia, and a few in the west: UCLA, Stanford, and UC SD. ESU was trying to break in as the third coast choice and new kid on the block. He was fired up, but not like he was about Strelsa. His accent became much more Americanized. \n\n\"I have to bring in some big recruits to get re-hired. The Holy Grail of rowing this year is Muffy McGunnigle. She is 6' 2\" and 175 lbs of prime heart lung system and skeletal muscle magic. It would be like in football recruiting Ricky Williams and Vince Young in one body for only one scholarship! I need your help when she visits to figure out what she likes to do besides rowing, to see if she can connect with some of the ESU students who are not rowers. We also don't have any idea whether she is into boys or girls or both.\" Apparently the same rules applied as in football recruiting - sex is undefeated - they just had to find out what kind of sex she was into. I agreed to try - and he promised to keep me updated on when she would visit and what they had learned about her in the interim.\n\nAfter our late lunch I went back to the dorm and put on my running clothes and did 15 miles at a very good pace, then showered and got dressed just in time for the early dinner line. There would be snacks at the several receptions and open houses I would attend tonight for the beginning of Spring Rush, but that was hours away and I was starving now. It was a whole new semester, and the Spring Rush crowd was a small subset of the full spring semester crowd, so there was only one serving line open. I was not the first in line, but in the first two dozen or so. As I finished making up my plate, I looked up to see Lizzie Faye Reagan and her roommate Orinda seated at a table for four. I joined them, and their conversation stopped. \n\n\"Hello girls, it's nice to see you both again. I hope you had nice vacations?\"\n\nLizzie Faye cut her eyes over and Orinda. \"Hi Robbie! Are you going through Spring Rush?\"\n\n\"Yes, I am going to make the rounds, although I may not pledge anywhere. How about you guys?\"\n\nI knew Lizzie Faye had pledged in the fall and as a first year pledge was probably going to have to do all the real work at her sorority for their Spring Rush, and she confirmed it. \"I am signed up to work at the house every minute until Monday night, while my 'sisters' do their nails and tell me what to do.\" \n\nShe cut her eyes at Orinda again. \"But my roommate, on the other hand, broke up with her frat rat asshole boyfriend over Christmas, so she is not invited to all his stuff anymore. She decided to come on up for Rush anyway to escape certain boredom at home.\" \n\nShe cut her eyes at me. \"All alone, unattached, and available!\" With that, she stood up, put her plate in the dishwasher line, and headed out the door.\n\nOrinda looked at me funny. \"Is that right Orinda?\" I said. She dropped her eyes. I took that as a good sign. 'Are you still interested in finding out what it is like to be a pet of the Master?\"\n\nI didn't need my Suzie receiver to tell me I had hit a nerve. She made a loud gulping noise like a fish out of water. \"You won't have to be naked on a leash, Orinda. You can wear regular clothes like you would have anyway. But you will have an imaginary collar on, and that collar will be mine. It will mean that you are with me everywhere I go and you are ready and willing to do anything I want, anytime, all through Rush.\"\n\nA major Suzie signal escaped her, a plaintive wail that combined excitement and dread in equal proportions. \"If you want to find out what it is like, meet me in front of the dorm in thirty minutes. We will spend the first night getting to know each other. If that goes well, I will teach you how to please me. If you do, I might want to learn how to please you. Dress modestly - but with high heels, and absolutely no bra and no panties.\" I stood up and walked out. \n\nI went up to the dorm and brushed my teeth again, and then unpacked the stuff from my backpack. I found Adnan's gift in the bottom. I had packed it in London when we got back from the yacht trip, and had never opened it. When I did, I discovered that it was a full up Rosetta Stone set for learning Arabic, levels 1 through 3. Perhaps I could listen to it while I ran. When I went back down to the lobby, Kevin was just arriving back at the dorm, and needed to change to go the opening reception of ZZZ's Spring Rush. After I spoke to him for a few moments, I realized that Orinda was standing by the door, waiting for me. I could see her nipples pointing through the fabric of her blouse. \n\nBoy it's good to be back at school. It's my duty!"
    ],
    "authorname": "conanthe",
    "tags": [
        "fraternity",
        "threesome",
        "soriority",
        "doper",
        "oral",
        "bdsm",
        "anal",
        "water sports",
        "aircraft"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-26"
}