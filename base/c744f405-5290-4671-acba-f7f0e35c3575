{
    "title": "Serendipity Ch. 12",
    "pages": [
        "AUTHOR'S NOTE: Serendipity - Back to The City and Mickey's eviction\n\nMany thanks go to RF-Fast for his editing and suggestions that enhanced the story. Any bad grammar left is wholly on me and my artistic style.\n\nLEGALESE: Don't read this if you are underage, if it is illegal in your area, if it is offensive to you, or if you cannot distinguish fiction from reality. This is a work of fiction. All characters active are 18 years of age or older.\n\nCopyright (c) 2014 by Acup\n\n*****\n\n12 - Back to The City and Mickey's eviction\n\nI woke to sunshine and my little chocolate pixie curled up and watching me.\n\n\"Good morning.\"\n\n\"Good morning beautiful.\"\n\n\"Why do you keep saying things like that?\"\n\n\"Well according to you I don't say things that aren't true so it must be a fact you're drop dead gorgeous!\" and pulled her up for a nice long kiss.\n\n\"As much as I'd like to continue this, your other sex slave should just about be finished with breakfast. We have a plane to catch in a few hours, remember?\" she said laying on my chest looking at me.\n\n\"Ugh!\"\n\n\"Yea, I know what you mean. I just got things started and now I have to leave our home to go back to...\" Her eyes bugged out at what she had just said and looked at me worried.\n\nI just smiled at her. \"You are and will always be number one in my life. And yes this is OUR home. I know the foreseeable future will not be easy. But we will be together as much as possible. And I hope somewhere, hopefully sooner rather than later, you will make the move back out here if you still want to.\"\n\n\"Back... I never want to leave! But we need to get going.\" We made it to the shower with lots of groping. I love the way her nipples harden in the palm of my hand, and the way the suds look on her luscious chocolate body. We held each other in silence, not wanting it to end. Sliding back and forth across each other. The water started to cool and we had to finish, towel off, and get back to the real world. \n\nIt was enchanting watching her put her collar back on smiling while looking me in the eye. She was amazing, she watched me get dressed for travel with nothing but her collar on. Just as I was buttoning up my shirt she reached over and pulled her tube dress and flip flops on and we were ready to go. And breakfast was smelling pretty good from downstairs.\n\n\"Hey there sleepy heads, you run the hot water out again?\"\n\n\"Jean, you need to find the biggest water heater you can get and then have TWO put in!\" The girls just giggled.\n\n\"You two eat up, Gladys and a few of her friends showed up about fifteen minutes ago while you two were frolicking in the shower. I'm headed over to see how things are going.\" She left in her jeans, boots, and her top unbuttoned and tied under her tits making them even more conspicuous if anything. She looked totally in her element.\n\nWe ate in silence, looking at each other, eating slower and slower, not wanting it to end. We finally finished and looked at each other. \"I guess we better go and see all the commotion over there before we go.\" I grabbed her hand and we headed over to the ruckus. Here was a three ring circus with a little midget in the center of it. Just beyond her was a several dozen horses with their heads in the grass. \n\n\"So how's it going pipsqueak?\"\n\n\"Hey smart ass, looks like you finally made it out of bed!\"\n\n\"What can I say, my girls left me drained!\"\n\nNicole glared at me, \"You did not just say that!\"\n\nGladys just shook her head. \"So how much can we use?\"\n\n\"Well it's like Jean was saying. Around sixty five acres at least, maybe even close to seventy. That going to be enough?\"\n\n\"We've been surviving on a little under twenty. The horses will be in heaven!\"\n\n\"Yeah, I see they didn't make it very far out of the trailers, ya gotta love geldings. Take 'em to food and that's it! Your only water that I know of is here at the house and a bit of a pond toward the back center middle if the property documents are correct, so plan accordingly.\"\n\nGladys got serious and came closer to have a more private conversation. \"This is real nice Danny, but what's it going to cost us?\"\n\nI was a bit stunned. \"What do you mean?\"\n\n\"I mean what is it going to cost us? We're in the middle of lease negotiations on the other property right now. No matter what the paperwork says, there is always little got ya's.\"\n\nThis wasn't what I had in mind. \"So how does the other property cost you if you're a non-profit?\"\n\n\"Oh we get the land lease donated, but then there are maintenance fees, utilities at inflated prices, tack storage and other miscellaneous expenses. It still costs us several thousand dollars a month for everything even before we buy hay and feed.\"\n\n\"Sounds like you're getting screwed.\"\n\n\"Yeah... and without the benefit of Vaseline!\"\n\nI tried not to laugh. \"That brings quite a picture to mind Gladys!\" She tried to hold it in, and then burst out laughing as well. When we settled down we got back to business. \"Do you have anything permanent over there?\"\n\n\"Nothing really. A phone line and some stuff in an extra stall we've converted to an office. We have some equipment but that's about it...why?\"\n\n\"Not sure yet.\" That made Nicole raise an eyebrow, she knew something was up. \"Just thinking. If you could eliminate ninety or ninety five percent of your monthly expenses how long would it take you to put up a barn of your own?\"\n\n\"We've already got about sixty percent of a barn fund now, that was the sticking point of this year's negotiations. We were working on getting a small corner of the property deeded over to us so we would own our own barn and the land it sits on. Probably a few months depending on exact numbers... What are you thinking?\"\n\n\"Hang on a second, let me bounce something off my ladies.\" I grabbed Jean and Nicole and we walked a few feet away.\n\n\"OK, Danny, I know that look. What do you have in mind?\"\n\n\"You know me so well my little chocolate pixie!\" she just smiled. \"Well how about they move their whole operation over here. Let them put stuff that needs to be stored inside in the 'sorority house' mud room until something else can be built. They can use their barn fund and most of what they were using for monthly expenses to getting the barn up that much quicker. The only thing I would be worried about is the phone line if the other guy wants to be an ass about things.\"\n\n\"That won't be a problem,\" Jean chimed in, \"Her sister-in-law works for the phone company. She can get things done in a day or two instead of a month if she needs to.\"\n\n\"Perfect! This will work out for everybody!\" We headed back over to an apprehensive little Gladys and a few of her volunteers. \"Gladys, do you have a dollar?\"\n\n\"Yea... Why?\"\n\n\"Give me a dollar Gladys.\" She looked at me and then my girls who were smiling at her. She stopped at Jean who nodded to her. She fished into her pocket and pulled out a crumpled wad of bills. She peeled out a bill and handed it to me tentatively. \"Now shake my hand.\" And I put it out to her, she looked to Jean again and then shook my hand.\n\nNow in a louder voice for all to hear. \"OK people, Gladys and I have agreed to a ninety nine year lease for sixty plus acres for the whole sum of one whole dollar and you are witnesses.\" Applause erupted., back between us. \"You may put things that need to be out of the weather in the mud room of the 'sorority house' until you have a place to put them. You may have the utilities in your groups name to get the proper discounts. You can park your trailers here on the gravel lot until we get things worked out.\"\n\n\"But there is one favor I would like to ask of you in return.\" Gladys got the pissed 'got ya' look. \"When you call your sister in law to get your line moved in a hurry, do you think you could ask if they could bump the installation Jean is going to be calling in for my place bumped up on the schedule at the same time?\"\n\nShe looked stunned, and then looked to Nicole shaking her finger. \"You know he's an asshole... Making me think something bad was coming!\"\n\n\"Yea, but he's a nice kind of asshole isn't he?\" and gave me a quick kiss.\n\n\"Tell you what, let me have my sister-in-law place the order. She gets a commission and can put her initials on it to make sure there are no screw ups. What are you looking for?\"\n\n\"At this point, two lines with the option for at least two more maybe even six total, and a high speed data line.\" Jean started to say something, but I stopped her. \"I know Dean and Bob both said I didn't need it, but I have a nagging feeling I will need it for something so humor me. Easier to cancel than to get a rush installation. Any problems with that Gladys?\"\n\n\"Phone lines by tomorrow or Saturday probably. Data line could take a week or two depending on available circuits.\"\n\n\"Works for me, took two months back in The City. Speaking of which, Jean needs to get us to the airport. I'll see you in about a week when I get back.\"\n\n\"I'll go change and get my car ready. I should be ready to go in about twenty minutes Master.\" And she turned and headed for the house.\n\nGladys' eyes bugged out, and looked at me and then at Nicole.\n\nNicole reached up and tugged at her collar, \"Our Master takes VERY good care of us! And I have a home full of furniture to prove it!\"\n\nGladys looked like a fish out of water with her eyes bugged out and mouth hanging open.\n\n\"Nicole, I think Gladys here is about to have an overload. How about we take a walk while we're waiting on Jean and look at where we want the gate?\"\n\nWe took a stroll down the drive on a nice sunny fall day. I was hoping we could find a spot for the barn near the road, otherwise it was going to cramp the nudist life style. There looked like a few possibilities using a couple of old field access points. \n\nJean pulled up. \"What you guys doing all the way up here?\"\n\n\"Looking at possible locations for the barn.\"\n\n\"I thought you were going to put it near the houses?\"\n\n\"Jean, what do you think the possibility is of being able to run around in your birthday suit with a bunch of volunteers across the street?\"\n\n\"OH SHIT! I hadn't thought of that!\"\n\n\"Yeah, I got to thinking about that right after I made the deal, but I'm not going to back out so we have to make the best of it. From the looks of the plot map, the gravel lot was supposed to be where the street made a turn over and then was supposed to come back around to the street, making a loop. If we put the barn and volunteers over on the far side, where the other street was going to be, and they use behind us and near us as hay fields then I think it should work out. I think Gladys will agree to that when she realizes some of her volunteers stand a good chance of seeing her skinny dipping in the pool otherwise.\"\n\nJean just laughed, \"Yea, the pipsqueak is pretty wild around us, but some of her volunteers are the prim and proper types and might not stay when they find out about our wild landlord! Let's head for the airport so I can get back and break the news to her! You have to squeeze in the front with me, the back seat is still my closet until I get things in the house.\"\n\nNicole pushed me in first to be in the middle and her on the outside. They looked at each other and nodded. I've learned when I'm being set up for something. They leaned forward and rolled their outfits up around their waists, each took one of my hands and put it against a shaved pussy, putting my fingers in against their clits.\n\n\"Now we're ready to go, head for the airport.\"\n\n\"Yes Mistress.\" And away we went. Even with the windows open the wonderful aroma of wet pussy was getting strong. Life is good.\n\nThe nice part of being on this end of town is being close to the airport, so we arrived about twenty minutes early. I saw the plane near the end of the private plane area, but it was closed up and no sign of the pilot. I had Jean drive down near the plane. I got out and looked around, and still no sign of him. I was about to get back in the car when a familiar face came walking back toward us, he was the pilot from the trip out.\n\n\"Hey guys, I'm not used to people being ahead of schedule, sorry about the wait. The big wig wanna be's should be fashionably late as usual.\" He looked a little frazzled until Nicole came around the corner of the car. She has that effect on me too!\n\n\"You know I don't care what else goes wrong today if you are going to be around!\"\n\nJean hit him with the double whammy getting out of the driver's side. \"You know Nicole, I do believe this fine young gentleman is hitting on you, either that or he's had a really shitty day and it's only ten o'clock!\"\n\n\"I almost wish it was the former, but unfortunately it's the latter. I'm Justin by the way.\" And reached out to shake hands. The girls decided to lean forward to shake hands instead of stepping forward, giving him a nice top down profile of their tits and nipples.\n\n\"Now girls, as much as Justin and I enjoyed that, I don't think it will help what ever problems he's having.\"\n\nIt took Justin a moment to come back to earth. \"Um no, not unless one of you wants to be a stewardess?\"\n\nJean spoke up, \"I've always wanted to try that!\"\n\n\"Jean, you have contractors to meet today and a pipsqueak to get lined out. So I'm afraid unless Nicole wants to give it a try we aren't going to be able to help Justin.\"\n\nNicole looked at him, \"So what's all involved in this?\"\n\n\"Not much really. I don't usually bother. But with this group it's more keeping them honest about what they get out of the liquor cabinet than anything. Last time they claimed they didn't get anything and yet the cabinet was mysteriously empty when we landed. And as much as I'd like to take you up on it, I don't think you have quite enough on to be my stewardess. Even though you'd keep them from being a royal pain in my ass!\"\n\nNicole was thinking nasty thoughts from the gleam in her eye. \"Would a vest and skirt work OK?\"\n\n\"I don't see why not. It's not that I don't like your dress, but we have to maintain a bit of a corporate look.\"\n\nShe turned to Jean, \"You wouldn't happen to have that stretchy vest you wore in the restaurant the other night would you?\"\n\n\"Yeah, it's in the car.\"\n\n\"OK, give me your skirt and that vest.\" Nicole peeled off her tube dress and Jean dropped her skirt and started to hand it to Nicole.\n\n\"OH MY GOD!\" Justin yelled.\n\nNicole and Jean started twisting and looking around like something was running around on the ground, and giving Justin quite the look at their bodies when they could. Those girls were perfectly evil in showing off when they could...god I loved it!\n\nNicole started screaming, \"What is it? What are we looking for?\"\n\nJustin was staring at her. \"You're not wearing any underwear!\"\n\nShe stopped cold and got the 'ask a stupid question' look. \"Well of course NOT, HE doesn't allow it! How would he be able to play with me if I did any way?\" And the girls turned back to the car to get the vest.\n\n\"Now Nicole, I did not say that.\"\n\nShe stormed back to me, hands on hip of a beautiful naked body, tits jiggling what they could as she walked, then stopping and thrusting her chest out without being too obvious... \"You most certainly did, and I quote, 'As far as I'm concerned you should never wear a stitch of clothing again unless it flaunts your figure and doesn't get us in trouble with the law.' End quote!\" and turned back to Jean handing her the vest.\n\nShe put it on and Jean began cinching up the vest adjustment strap on the back, both of them bottomless. Once they were satisfied, and had thoroughly teased Justin twisting and turning every which way to show ass and pussy off. Only then did they put their skirts back on.\n\n\"So will this do?\" Lifting her arms and doing a little twirl.\n\n\"WOW! Not quite corporate regulation, but I don't think these idiots will mind. Thank you, you've cut my problem load in half.\"\n\nI looked at him, \"So what's the other problem?\"\n\n\"Every time these idiots come on board they have all sorts of questions and want to sit up in the cockpit and get their picture taken. One even started playing with switches and damn near crashed us once!\"\n\n\"You know Justin, back when I was a kid I flew with the Civil Air Patrol. I remember whenever one of the pilots had a check ride we weren't able to go along and put command hours in.\"\n\n\"I just had my check ride in this aircraft a couple months ago though.\"\n\n\"These guys don't know that do they?\"\n\n\"Some how I don't think you'll pass for an FAA check ride pilot.\"\n\n\"I bet with your extra jacket and a clip board they won't question a thing. Especially if I'm already on the plane, and give you a little grief when they show up late.\"\n\n\"Oh that works, they won't be able to pull the same thing at the layover either.\"\n\n\"Huh?\"\n\n\"Well not really a lay over, but they like to turn it into one. Between showing up late and wanting to grab lunch at the stop instead of just dropping off one of the guys at the stop, I usually lose about an hour on the outbound leg. Then I have to hustle to the next stop for my pickup back home instead of getting myself something!\"\n\n\"Leave it all up to me, I love putting assholes in their place!\"\n\nNicole turned to me all sloppy sweet. \"Now Danny don't strain yourself. Yesterday you put one in jail... Remember?\"\n\nJustin looked a little concerned. \"Now Nicole, it wasn't all that. Somebody else put all the pieces in place for them to screw up, I just made sure they did it where it would cost them the most. So what do you say Justin, want to mess with some idiots?\"\n\nJustin looked between Jean, Nicole, and me. \"I tell you what, you keep those ASSHOLES,\" nodding toward me, \"under control, and I'll waive the tag along fee for you two!\"\n\nNicole got a twinkle in her eye, \"Time to have some fun! When are they supposed to be here?\"\n\n\"Well they were SUPPOSED to be here ten minutes ago, which means they will probably show up in about fifteen minutes. Let's show you around the cabin, and get you a jacket,\" nodding to me, \"and we should be all set when they finally get here.\"\n\nWe each got a quick kiss from Jean before she headed off, much to Justin's amazement, that and she flipped the back of her skirt up behind her to flash him again as she was leaving.\n\nJustin showed Nicole around the cabin, explained the liquor and mixer cabinet, and reminded her it was a cash bar no matter what the idiots claimed while stealing quick glances down her vest at her nipples standing out proud, white bands on black nipples do that... We went forward and got his spare jacket just about the time the five idiots came walking up. All laughs and big shot attitude.\n\nJustin had no more hit the ground to get them into the plane when I stuck my head out the door. \"Let's get these slackers on board Justin, you're not my only check ride today!\"\n\nI caught him a little off guard, but he recovered nicely. \"Gentlemen this is FAA check pilot Stanley, he will be riding with us today. If you would please board the plane we will be on our way.\" They got on board like meek little sheep. Justin was bringing up the rear with a huge grin on his face. Of course the mood lightened significantly when they saw Nicole, but now she was the shepherd of the baaaad sheep. Sorry I couldn't help myself.\n\nJustin and I barely had the cockpit door closed when he dropped into his seat in a laughing fit. \"Man I knew it was coming, but that was priceless. They went from big wig wanna-be's to meek little boys in a heartbeat!\"\n\n\"I've seen it too many times, the big fakers are all bluster until they are called on it by someone that doesn't care about them. Then they collapse like a house of cards. Speaking of the idiots, how far behind are they going to put us with this stunt?\"\n\n\"Depends, if we skip the planned stop over for a quick stop for the one guy we could just about get back on schedule with the tail wind today.\"",
        "\"Works for me, we'll wait a while, and about ten minutes before touch down I'll give them the bad news they won't be making their lunch reservations. Now what do you say we get this bird rolling and start your check ride mister!\"\n\n\"Yes sir, mister inspector sir!\" he said with a grin and we started the engines and rolled out on a bright sunny day!\n\nIt was fun getting up in the cockpit after all these years, but in spite of all the fancy gauges, it was still 'yoke and pedals and step on the ball'. Nicole came forward a few times with questions. And a few times just for a kiss and nibble and flash Justin a little. Most of the trip he and I just sat and talked while keeping an eye on the auto pilot. After her third trip to the cockpit Justin was enjoying her visits immensely.\n\n\"You know, I might just have to offer her a job!\"\n\nI just laughed, \"You can't afford her!\"\n\n\"What's she do now?\"\n\n\"She's CIO for The Boutique.\"\n\nI have to give Justin credit. He managed not to spit his coffee all over the instrument panel, but earned himself a coughing fit as a result. \"And she's back there playing sultry stewardess?!!\"\n\n\"Well they have a rather unique dress code there, and she would rather be running around in just her collar and nipple rings.\"\n\nAt least this time he didn't have a mouth full of coffee. \"Did you say collar?\" I just nodded, \"NO WAY!\"\n\nI keyed up the passenger cabin intercom. \"NICOLE, COULD YOU COME UP TO THE COCKPIT PLEASE.\"\n\nShe came bouncing in. \"What's up babe!\" Seems like she was having fun back there.\n\n\"WOW!, sounds like you are having fun back there?\"\n\n\"Oh those guys are going to have the worst case of blue balls EVER!\"\n\n\"I told you she was ornery...Nicole, Justin and I were having a conversation and he doesn't seem to be believing me.\"\n\nShe turned to Justin, \"What were the questions?\"\n\n\"First, what do you do for a living?\"\n\n\"I work for The Boutique, primarily as CIO and cover some inventory and quality control issues.\"\n\nJustin looked a little stunned, and I asked the second a little slower. \"The second is a little more personal. What is your favorite outfit to run around the house in?\"\n\nShe looked at me for permission, and I nodded. She took a deep breath and, \"My Masters collar, my nipple rings, and a freshly shaved birthday suit!\" Justin just stared at her for a few minutes. She turned back to me with a wink, \"Did I say something wrong Master?\" as she turned to sit on my lap and flash Justin AGAIN.\n\n\"No my love,\" and gave her a quick kiss, \"I think Justin is just a little surprised at your answer.\"\n\nShe looked right back at him. \"Justin, my Master OFFERED me the collar, and I accepted it and wear it proudly. The only time I am without it is to shower, put on a clean one, or if he removes it. I am free to remove it and walk away if I choose. Some girls wear a ring or necklace that can be covered if they choose. I wear a collar and proclaim I am his.\" The aroma of her pussy was getting strong, she was on the edge just talking about it. \"The thought of the day he put it on me...Danny!\" I grabbed the towel sticking out of Justin's flight bag and put it between her legs. \"DANNY!!\"\n\n\"Cum for me my pet.\" I said softly, and she went into a nice strong squirting orgasm and then collapsed back against me. \"Sorry about the towel Justin, but I didn't think you wanted her squirting all over the carpet.\"\n\nJustin looked down between her legs, her skirt now up around her waist, at the soaked towel I was pulling away from her shaved pussy. \"Squirting???\"\n\nNicole grinned a little sheepishly, \"Yea, I didn't use to. But with Danny it's almost every time.\"\n\n\"Babe as much as I'm enjoying this, and Justin I'm sure is enjoying looking at your delicious body, you need to get back there before they rob him blind and I need to break the bad news about the layover to the idiots.\"\n\nI'd swear she spread her legs just a little more to tease Justin. \"What about the layover?\"\n\n\"Since the idiots were late getting here, we are going to do a stop and drop. Just shutting down the port engine long enough to let him out and then we're off to the quick hop back to The City.\"\n\n\"Oh you two are just nasty, they have been talking about the reservations they had there, so the delay back in Vegas was intentional.\"\n\n\"Even better! Let's go burst some bubbles.\" Nicole managed to worm her way out of my seat and get situated. Of course she just happened to do all this before she managed to pull her skirt back down. I'm not so sure the guys in the back were going to be the only ones with blue balls after we got off the plane. I know I was ready to hop in the back of the van as soon as we touched down.\n\nShe closed the curtain separating the front stewardess area from the rest of the cabin just as I was coming out the cockpit door, then turned to me and whispered. \"Master, I NEED to suck your cock.\" I just placed my hand on the top of her head and she dropped to her knees almost as fast as she dropped my pants. With the show in the cockpit it didn't take me long, three trips down that lovely throat to my balls and that was it, it was all I could do not to scream out as I unloaded into her pulsing throat. \n\nJust as I was shooting down her throat she grabbed another towel from the counter and put it between her legs with a little mini orgasm. \"God I needed that!\" she gasped as she stood up pulling my pants up at the same time and then turned to close the cockpit door on a stunned Justin. How do women do that?\n\n\"You and me both babe, but now I get to burst some bubbles.\"\n\n\"Hang on a second. Are you planning on meeting with Jake while you're back in town?\"\n\n\"I hadn't thought about it, why?\"\n\n\"I think you need to, and give him this list of names.\" And handed me a little slip of paper with five names on it and pair of Justin's sunglasses.\n\n\"Care to explain?\"\n\n\"Danny, part of the reason those guys were late was a screwed up deal in Vegas with the heifer, and I think one of them works for Jake.\" That got my attention. \"They have been trying to figure out if Jake is going to find out about them.\"\n\n\"You know babe, if I hadn't already hit the jackpot with you, I'd have to go play the slot machines with all the luck I've had lately.\" That got me a big tonsil inspecting kiss! I put the sunglasses on and opened the cockpit door again so Justin could hear the fun and stepped through the curtain.\n\n\"Gentlemen, if you would take your seats we'll be descending soon for our quick layover. Since we had the delay leaving Vegas it will be quicker than usual. We will only be shutting down the port engine long enough to let our passenger off and then departing immediately for our quick hop to The City. The stewardess will be shutting down liquor service in about five minutes for the duration of the flight.\" And turned back toward the cockpit.\n\n\"BUT WE HAVE DINNER RESERVATIONS THERE.\" I heard from behind me.\n\nI turned back, \"I don't see how that is possible sir. You are only scheduled for a ten minute layover as it was. But with your late arrival it is only the luck of having a tail wind that will put you back into The City on time.\" Several of them cringed at being on time. \"Either way gentlemen, it will be a quick stop and then we're off again.\" And I turned back to the curtain and disappeared. I had no more let the curtain close and it got a little loud in the cabin. Seems I really made their day. Nicole went back in for last call to quiet things down. Nothing like a hot sexy woman to take a man's troubles off his mind!\n\nI barely had the cockpit door closed and Justin burst out laughing. \"Man that was too much, I wish I had a recording of that just to watch over and over.\" He looked up at me. \"What's with the sunglasses?\"\n\n\"Huh?... Oh there is a possibility one of your passengers might be dealing with someone I know so we thought it best not to let them know I'm not FAA.\"\n\n\"Good catch, now strap in for the touchdown. Nice call by the way on the port side shut down. We should be in and out in about fifteen minutes tops.\" We got landing clearance and clearance for immediate departure after taxi and we were all set. We touched down and taxied toward the terminal. I got up to kick our passenger off. I got back into the cabin. \"Which one of you gentleman is leaving us here?\" One gentleman raised his hand. \"If you would gather your bag we will be stopping shortly. I'll open the door and lower the stairs as soon as the engine has stopped. As soon as you're clear we will restart the engine and be on our way.\"\n\nOne pompous idiot near the front piped up. \"I need to make a quick call while we're here.\"\n\nI turned to him like a parent to a misbehaving child. \"Sir, If you step out that door on this stop you will not be flying home with the rest of your companions. If you had been on time for departure, this would not have been a problem.\" And turned my back to him. \n\nWe made the stop, and Justin shut the engine down. We popped the door and steps, he made a hasty run towards the terminal as I closed the door and Justin fired things back up. We were wheels up in just over twelve minutes after we touched down. I only know this because Nicole took it on herself to take my watch and time us.\n\nWe lifted off for the short hop to The City, almost back... well I was going to say home, but it is only home if Nicole is with me. Things were pretty quiet back there, no more mister big wig wanna be's. I watched Justin in his element with the takeoff, a climb out and an almost immediate decent into The City. We taxied down to the other end from where we were parked near some waiting limos. It took a bit, but all four remaining passengers left us. Two of them glancing around like a kid being caught at something.\n\nNicole came back up to the cockpit. \"Justin, is there some way I could convince you to taxi up to the other end of the airport where we're parked?\" and proceeded to unbutton her vest and tuck it beside her to show off her tits and white nipple rings.\n\n\"Well since you put it that way, I think that would be possible if you could close the door.\" She turned without closing her vest to get the door. \"It almost makes me wish I could afford to hire her.\"\n\n\"Yeah, makes me realize how lucky I am to have her.\"\n\nNicole was still standing behind me. \"Yes you are...Master.\"\n\nJustin dropped us at our end of the airport. I made sure to get his contact info and informed him we would be using his service with the tag along fee whenever time permitted. He seemed really pleased at the possibility of seeing my little chocolate pixie again. So here we were back in The City and it's only two in the afternoon. Nicole and I walked back to my van. It seemed like an eternity since we had left, not just a few days. We no more got in my van and Nicole handed me my mobile phone out of her brief case 'suit case'. \"You need to call Jake and make an appointment for tomorrow, and give him those names TODAY.\"\n\n\"OK, What's up?\"\n\n\"The guy wanting to make a call on the layover, was wanting to cancel his pickup so someone wouldn't see him getting off the plane with the others. The late start and long layover was to let him take a cab back instead of having others around when he got off the plane.\"\n\nI just laughed, \"So we brought a rat out into the sunshine! Time to make Jake's day.\"\n\n************\n\n\"Hello.\"\n\n\"Hey Jake, Sorry to call on your private line, but I needed to talk to you right away.\"\n\n\"Not a problem, I just finished a meeting. You back in town yet?\"\n\n\"Just landed, and that's part of what I need to give you a heads up about.\"\n\n\"Is this good news or bad?\"\n\n\"Don't know, but it's something you need to be aware of. I'm sure by now you've heard of our little fun with your realtor?\"\n\n\"OH YEAH! Her lawyer called mine with all sorts of bluster. Seems they lost a bit of the bluster once they were given the full story and found out my agent of residence and two attorneys were on site at the time.\"\n\n\"Well that's a part of the information. We flew back with five gentlemen that may have been connected with some of her less than desirable dealings. I get the feeling that one of them is somehow connected to you. He wasn't pleased that we arrived back on time and everyone witnessed him getting off the plane with the others. And your name was overheard. I don't know who said it, but I thought you should be aware.\"\n\n\"Thanks... I think. Give me the names and I'll look into it. At least we can narrow it down to those out of the office or traveling.\"\n\nI gave him the names, and then there was silence. \"You still there Jake?\"\n\n\"Huh?... Oh yeah...\"\n\n\"Jake, I take it one of those names means something to you?\"\n\n\"Yea... I'm just not sure what yet... I'll get back to you.\" And he hung up.\n\n*************\n\nI just handed the phone back to Nicole. \"That didn't sound good.\"\n\n\"I think I just gave Jake some bad news, but hopefully it headed off some worse news. Now how about we go back to the apartment and boot the bitch out of our lives in style!\"\n\n\"Works for me Master.\" And pulled her skirt up around her waist and put one foot on the dash and one on the back of my seat. I kissed her ankle and we drove home with me playing with her pussy and cleaning my fingers every so often. I was tempted to make her cum, but I wanted a nice loud one in front of Mickey! We made it back to the apartment, and there were three trash bags just inside the front door!\n\n\"Anybody home?\" I called out. A screech and a naked woman came out of nowhere, I think Tiffany was glad we were back, lots of hugs and kisses for both of us. Tiffany's friend came out of her bedroom just as naked. That's all it took for Nicole to strip off her skirt and vest and then turned to me. With Tiffany's help it didn't take long and we were all naked, and me with quite a hard on. The three of them were looking at me and my hard on. \"WHAT? Me not getting a hard on around you three would be like telling a compass not to point North!\"\n\nThe girlfriend chimed in. \"You know Tiff, if it stayed like that and didn't make a mess I might think about guys again.\"\n\n\"Yeah Cath, but when it's attached to him, it does a really nice job. And the tongue works pretty well too!\"\n\n\"Well we will have to continue this conversation in a little bit. Right now we need a shower!\" and Nicole hauled me off to her bedroom and straight to the shower, stopping only long enough to take her collar off. \"I definitely need to do some shopping for more of these!\"\n\n\"Do you have any idea how happy it makes me that you want to wear it?\"\n\n\"Probably as happy as it makes me to wear them! Now let's take advantage of an endless supply of hot water.\", as she pulled me into the shower. It was almost like showering in a dream. Touching and lathering each other, more sensual than sexual, and not a word between us. Just looks and smiles and kisses. Feeling her tits and nipples in the palm of my hand or across my chest. Her shaved mound sliding over my cock, or against my ass when she got behind me to do my back with those delicious tits and hard nipples in my shoulder blades. All the while taking what ever opportunity to kiss and lick and spots that weren't soapy.\n\nWe finally ran out of places to clean and had to get out and towel each other off. Almost out of habit I walked to what used to be my room, and just stopped inside the door. Everything looked so foreign, nothing like our home in Vegas.\n\nNicole stepped in beside me putting her collar back on. \"Hey, I wonder if Shelly canceled the data line yet, I want to check on some things at the office.\" She sat down and powered up the computer. \"We have a link! I can check my files from here!\"\n\nBINGO! That was the piece I was missing. I watched her as she waited for the computer to finish booting up and establish the link. Just looking at her made me smile, and the thought of her sitting at that computer in her office in Vegas made me smile even more. That computer was not going back to the office, it was going with me back to Vegas. Nicole would be able to spend a lot more time out there if she had access to her files from there.\n\n\"What are you grinning at?\"\n\n\"My hot little executive sex slave of course.\"\n\nNicole looked up, hesitated for a second, then grinned \"Yes Master.\"\n\n\"WHAT?!!\" I heard Tiffany from behind me.\n\nNicole knew she was standing there and decided to say it any way. I turned to Tiffany, \"Did you need something Tiffany?\"\n\nHer mouth was moving but it took a bit for anything to come out. \"You've got some explaining to do missy,\" glaring at Nicole who was just smiling back at her, \"but that will have to wait. Mickey will be home in about ten minutes and our fourth is here so we better get started.\" And turned back to the living room in a daze.\n\nNicole got up and turned me back to her. \"That reminds me Master, I seem to remember you having a little snack before you came to my office the other day. I meant to ask you if that was a nice snack?\"\n\n\"Is this a trick question?\"\n\n\"No Master, I wanted your honest opinion of the dish?\" as she sauntered up to me trapping my cock against her damp pussy.\n\n\"Well she was very tasty, a woman that enjoys being eaten. Looks good for a woman in her mid to late thirties I'd guess. Nice tits and nipples since she gave me a nice look down her top. Not sure what else she likes, but she seemed to be eager. Why\"\n\n\"I'm thinking of introducing her to someone. So if we weren't together, would you chase her?\"\n\n\"Definitely.\"\n\n\"Even if you found out she was turning fifty in two weeks?\"\n\n\"You'd have to show me her drivers' license to make me believe that.\"\n\n\"You might believe it if you saw me naked.\" I heard from behind me.\n\nI turned quickly to find Shelly in a thin white satin robe, her nipples standing out straining at the robe. It took me a second to take her in in her robe and gather my wits. My soon to be ex boss standing there like that. I stepped up to her and pulled her robe back and down to her elbows trapping her arms and keeping her from pulling it back up. \"Well let's see how you look.\" And leaned down to flick a nipple with my tongue and stepped back to take her in. She started to pull it back up. \"Nicole, stop her.\"\n\n\"Yes Master.\" And quickly stepped behind her to keep the robe around her elbows pulling it back to let her pussy show as well.\n\n\"Nope, you would still have to show me your drivers' license.\" She started to smile. \"Yes you have a little bit of a tummy, but not any more than and other thirty five or forty year old. Nice firm tits and nipples without much sag. It would make me guess a little younger, but the trimmed but not shaved pussy balances out the age thing. Over all I would say elegant but very, very fuckable.\" She blushed and let her robe fall to the floor. \"Nicole, get the black half cup off the back of the couch please.\"\n\n\"Yes Master.\"\n\nI came over and cupped each tit and rolled the nipples between my fingers. They hardened almost immediately. \"A little scared and a little turned on at the same time Shelly?\"\n\n\"Uh huh.\" She responded as I cupped and played with my now soon to be former bosses tits! That thought rattling around and around in my head... going straight to my hardening cock.\n\n\"Here you are Master.\" Shelly didn't react to that...hmmmmm.\n\n\"Give it to Shelly to put on.\" Shelly did, and just like the woman in the lingerie shop said, she didn't get it in place. \"Shelly, come over to the mirror.\" She did and I turned her in profile. \"What do you see?\"\n\n\"Just me in a half cup bra.\"\n\nI came up behind her with my hands on her waist and slid my cock between her wet thighs. That got a sharp breath. Then I reached around slowly, sliding my hands down her chest from her shoulders enjoying the feel of her soft skin and then her hard nipples in my palm to put her tits in place, letting the bra hold them up high and proud. Making them look a cup size larger. \"Now what do you see?\"",
        "She looked and turned a bit back and forth. \"WOW! I didn't think a bra could do that.\"\n\n\"Shelly, I'm assuming the girls have explained what's going on this afternoon here?\"\n\n\"Uh Yea...\" as she continued to look at her figure in the bra, turning a bit to get a bit of a profile look.\n\n\"Would you like to stay for some more lip service?\"\n\nThat brought her head around. \"Lip service, full service, any service I can get!\"\n\nI just chuckled, \"Well I was planning on letting Nicole ride me when Mickey came in, would you be interested in sitting on my face to nibble on your pussy?\" And ran a finger through her wet pussy and brought it to my mouth.\n\n\"Yesssss.\"\n\n\"Let's go in the living room, Nicole grab the tape and we'll have some fun! This will be your show since I'm going to be occupied with Shelly's delicious pussy.\" Shelly grinned at the compliment, her eyes twinkling.\n\n\"Oh thank you Master! You don't know how much I am looking forward to this!\"\n\nTiffany and Cathy had started without us and were enjoying themselves on the couch. I had seen a lesbian 69 in porn movies, but the real thing with people you know is almost beyond belief. Watching Tiffany dive into Cathy's wet pussy, seeing her wink at me as she did it again before pulling herself up to plant her face in that pussy above her just like I loved to do to Nicole. Nicole gave me a bit of a slap to break me out of my daze. \"We're over here Master...\"\n\nI laid down on the floor in front of the stereo system so Nicole would have easy reach to the eight track player. I settled down on the comforter and Nicole sank down on my cock wiggling to get herself nice and full. I was just getting Shelly settled in on my face and nibbling when the door opened and Mickey stepped into her trash bags.\n\n\"WHAT THE HELL IS GOING ON HERE!\"\n\nI looked up at Mickey past Shelly's tits standing out in the shelf bra, Let one arm loose from her thighs to wave at her, and then resumed eating Shelly. I had to keep one arm around a thigh because it felt like she was going to bolt.\n\n\"DANNY!, WE MADE A PROMISE TO EACH OTHER!\"\n\nThat was the queue Nicole was looking for. \"Wrong BITCH, he made a promise. YOU LIED!\" she clamped down on my cock and hit the eight track and turned up the volume. Nicole had queued it up to the part about trying to get pregnant. After a few seconds she hit the pause, all the while rocking nice and steady on my cock. \"You got two choices bitch. Either grab your bags of shit and hit the road, or wait until Danny fills my pussy and then I'm going to get up and kick your ass all the way out to the parking lot!\"\n\nMickey looked down at me and I just flipped her off. \"Come on Danny, fill my pussy so I can get up and kick this bitch's ass! Come on Danny! I got one load earlier. Fill my pussy again so I can pound her!\" Damn all this talk was getting me close. I was moaning into Shelly's pussy, which was making her start to gasp. Mickey knew she had to make a decision quick. She looked at Tiffany who flipped her off as well. She finally grabbed two bags and tossed them out the door, then grabbed the third and slammed the door behind her.\n\nIt was a big chain reaction. Shelly must have been holding back from tension and started screaming and cumming in my mouth in a steady flow. That set Nicole off screaming and spasming around me, which set me off screaming into Shelly and unloading into Nicole's spasming pussy, which set Tiffany and Cathy off screaming into each others pussy! After what seemed like hours we all stopped getting each other off and collapsed. Shelly rolled beside me and Nicole just collapsed forward on my chest. After a little bit we all started to come alive again, Nicole sliding off to one side and cuddling.\n\nShelly turned enough to take my now softening cock in and lick me clean while Nicole watched, then started to crawl over to her clothes pile. \"Shelly, if the girls don't mind, you're welcome to stay a while, but if you do you're not allowed to put any clothes on.\" She looked at Tiffany, who nodded. And then at Nicole who nodded and she smiled. \"Well now that that's all set, who wants to order pizza?\"\n\nNicole and Tiffany just rolled laughing, and Shelly and Cathy looked confused. Tiffany had to explain. \"Since the day we moved in, we've got a bit of a reputation with the pizza delivery guys. Seems they fight to be the ones to deliver to the apartment with the naked girls answering the door!\" Shelly just shook her head in dismay.\n\nI got up and got drinks for the girls and called in a pizza order. Only when I hung up did I realize that Mickey had NEVER been the one to answer the door... Tiffany and Cathy were on the love seat with Shelly, Nicole, and I on the long couch. I looked over at Shelly and pulled her over to me. Now I had one hot naked woman under each arm. \"Would anyone care to tell me how we managed to get this lovely vision to join our Mickey eviction party?\" as I pulled my soon to be ex boss over for a bit more than a quick kiss. Tiffany and Shelly pointed to Nicole.\n\n\"What?, It just kinda came about when we talked yesterday. Shelly told me how much she enjoyed your lip service the other day in her office.\" That got some \"Ohhhs\" from Tiffany and a look from Cathy. \"And since her husband passed away two years ago we've all been trying to get her back in the game.\"\n\n\"Sorry to hear about your husband Shelly\" Tiffany said.\n\n\"It wasn't that traumatic. He had a medical problem that we knew was terminal. We had several good years before things got bad, and he passed quickly. Losing him was hard, but we had plenty of time to finalize things and say our good byes.\"\n\nTiffany looked like she was about ready to cry. \"OK, 'nuff of that. Fess up about Vegas!\"\n\nSo Nicole started in. From the plane trip out, which the girls thought was funny. The motel incident with Beth and James. Meeting various people and the shopping on the way to the house. For some reason she seemed to tread lightly on all the sex and nudity. Of course they were all ohhing and ahhing about the furniture and the house. She side stepped the price and didn't say anything about the size of the property. By the end of it all she was snuggling up against me, one hand playing with my cock and the other playing with her collar. Shelly had snuggled up a bit as well, close enough for me to drape a hand over her shoulder and play with her nipple held up and out by the half cup bra.\n\nThen Tiffany got a look, \"So now you need to back up and explain this 'Master' bullshit!\"\n\nNicole looked at me for approval, which didn't set well with Tiffany, and REALLY didn't sit well with Cathy. Shelly just snuggled in waiting on Nicole, \"You remember Danny was the one that came up with the idea for the nipple rings?\" Everybody nodded. \"Well even while the bitch was here we each had our little flings that did not violate her rules. I also knew that whenever I had him down my throat my pussy was so wet I had to get myself off as soon as we were done. I watched him looking at my tits and nipple rings.\" Shelly's nipples were hardening, and Tiffany and Cathy's hands were starting to head toward their pussies. \"Well things started to progress a little more after he heard the recording. On the first day there he got me a special nipple ring set for me to wear to dinner.\" She looked to me again.\n\n\"Take your collar off and get your set and tube dress. We'll give them the visual.\"\n\n\"Yes Master.\" And took her collar off and put it on the coffee table before running to her room for her other set and tube dress. There was a gleam in Shelly's eye as she looked at the collar while the other girls were hunting for flies, eyes bugged out and mouth open. Tiffany started to say something, and I put my finger to my lips to keep her quiet. Nicole returned with her set in the box and her tube dress, laying them out as if presenting them on the coffee table in front of us and laid a towel on the floor beneath her. She looked at me for permission. \"Show them and tell them, just the way it happened.\" She practically glowed.\n\n\"The first thing he gave me was this special set. It has a small ruby heart on a chain between them.\" And pulled them out to show them, and then put them on letting it dangle between her nipples.\n\n\"Oh that's HOT\" Cathy exclaimed. Nicole was enjoying the attention.\n\n\"The first few times it was so intense, every step tugged on my nipples reminding me of who gave them to me. I was horny all day!\" Tiffany and Cathy had their fingers in their pussies playing slowly. \"He had been calling me his little chocolate pixie or his sex kitten for quite some time. At first it irritated me, but then I saw the look in his eyes when he said it. \"\n\n\"Then out at the pool he called me his sex slave and it just made me tingle all over. Everything came to a head when he presented me with my collar.\" I felt Shelly tense up next to me when Nicole said 'sex slave' then cuddle in even more. She picked up the collar and hooked the short chain to it showing it off. \"He presented it to me, but it was my decision. I kneeled and accepted it gladly.\" She turned to me and presented her collar to me to put on her. You could have heard a pin drop. Shelly was squirming, and moaned when my hand came off her tit.\n\nI leaned forward enough to put it on her for her to continue, and Shelly brought my arm around her neck and put my hand back on her tit when I sat back. Cupping my hand with hers encouraging me to continue playing with her while her other hand sent to her pussy like Tiffany and Cathy..\n\nShe stood back up so proud of herself. \"Then he had me hook the ruby to the chain so anyone looking at my collar would follow the chain down my cleavage to the ruby. If they are close enough, they will see the chain running to my nipples...\" She was starting to tremble. \"Now whenever I think about him presenting me with my collar, and I...know... people are...looking at...my collar and nipples...if I don't control...my...self...I...\" and then she did it. She started to cum, dropped to her knees and fell back against mine squirting on the towel.\n\nThat set all three other women off, but none of them squirting like my little chocolate pixie. Just as they were all slowing down I rolled her dress down to expose her nipples, grabbed her nipples and pulled on them as I nuzzled her neck. \"I love my little chocolate pixie.\" And she started one of her seizure orgasms and flooding her towel. She wasn't just squirting, she was flooding. She kept going until I let go of her nipples.\n\nI sat back and took in the view. All four women sat spread legged with wide open pussies. The room smelled like it would never lose the aroma of pussy. Just then the doorbell rang. We all kinda looked around, but Shelly was the most with it. \"Shelly, the cash is on the counter, would you get the pizza? I'm sure the delivery guy would love to see a fresh pair of delicious tits.\" She looked worried for a fraction of a second, and then gave a 'what the hell' shrug and went the door making no effort to cover any part of her delicious body. We all really got a surprise. It was a coed instead of the usual guy. It kinda shocked Shelly, but only for a second, never making a move to cover herself.\n\n\"Man I thought the guys were pulling my leg. Looks like I missed quite a party!\" seeing four naked woman and one guy with the place REEKING of pussy.\n\nShelly told her, \"Honey you have no idea, but take my advice, if you can find a man that can make you cum just by talking to you, never let him go.\" Her mouth dropped open as Shelly took the pizza, handed her the cash, and closed the door on a stunned coed and brought the pizza back over to the coffee table, standing there with her back to me, bent over with her legs straight and slightly spread... NICE VIEW!. \"I think that's another Shelly that would like to be invited back!\" As she flipped the box open Nicole started to come back to life.\n\n\"Hey there little one.\"\n\n\"Hey,\" she responded quietly.\n\n\"You ok?\"\n\nShe reached up to her collar. \"Yes...Master.\" She said softly as she snuggled back against my legs after wiping herself with the towel, then grabbed a piece of pizza as if nothing ever happened, smiling and catching her breath between the first few bites. We ate in silence until Cathy got the nerve to talk.\n\n\"Do you...do that all the time?\"\n\nShe just smiled, and looked like she was blushing. \"Until Danny I could tell you I had a few times, but couldn't tell you when the last time was. Now it's the other way around. I always do just a little, if I'm not paying close attention I'll squirt pretty good. But if he really wants to get to me going, there is nothing I can do to keep from flooding and passing out. Sometimes I can have a little one just from him looking at my nipples and nipple rings. Same thing if I take him down my throat and don't keep control.\"\n\n\"Bullshit!\" Cathy exclaimed.\n\n\"Nicole, I believe my little sex slave is being challenged. Would you care to...OH GOD THAT NEVER GETS OLD!\" As she swallowed me down whole, and milked me for a second with her throat. Then proceeded to give me one of those throat fuck blow jobs. With all the wet open pussy and everything else I had seen it didn't take me long. After about the fifth or sixth trip down her I started blasting down her throat. About the time I thought I was finished she put a finger in my ass and played with my prostrate. That just sent me spasming even more.\n\nI was close to passing out myself when she pulled her finger from my ass and my cock from her mouth. Spraying two good shots, one on each tit, and then taking the rest in her mouth, my legs jerking as she drained the last of it from me. She turned to Cathy to show her a mouth full of cum and then made a production of swallowing it. She wiped some up from her tit and licked it off her finger, leaving quite a bit more there to show her as mine.\n\nThe other three sat in stunned silence with their eyes glued to her. She turned to Shelly and wiped some more off and presented it to her. Shelly hesitated for a second and then devoured her finger making sure to get every last bit. She went to Tiffany and did the same leaving the last bit around her cleavage and the underside of her tit as she knee walked to Cathy. She started to reach for her tit to wipe the last up, and Cathy grabbed her hand, looked at her cleavage, and then looked up to Nicole. Nicole barely nodded when Cathy latched on to her cleavage and underside of her tit. Making sure to get every last bit, it was enough to give Nicole a mini orgasm. Cathy no more finished with Nicole and she grabbed Tiffany's hand and dragged her off to the bedroom.\n\n\"I think we need a shower Master,\" and reached for Shelly and I. We got up and headed for her room. Shelly stopped at her pile of clothes. \"No Shelly, WE need to take a shower.\"\n\n\"Are you sure about this?\"\n\n\"I don't hear my Master objecting, and I'm getting exhausted and could use a little help if you're up to it?\"\n\n\"I was hoping you'd ask, but I'm not familiar with your procedures.\" Shelly said quietly as we continued to the shower. Good thing the common bathroom had a true shower and not a tub shower. It was going to be crowded.\n\n\"First we bathe the Master, then we bathe while he supervises. Then hopefully he will take us to bed and reward us for our efforts.\" Hell I was ready to reward them right now! \"Get the water going while I remove my jewelry and collar.\" She turned to me to show me her removing her jewelry and collar before returning to the shower. Shelly had already removed her bra and she pushed Shelly in, then me and followed closing the door behind her. Then she took her body wash, lathered herself up, handed it to Shelly, and then proceeded to use her body to wash me. Only using hands when she had to. Making sure to use her cleavage around my cock. I felt Shelly doing the same behind me. Although Nicole was silent and watching me. Shelly was obviously enjoying herself from the groans behind me, especially when she was using her nipples in the hair on the back of my legs.\n\nI was the meat in a slippery titty sandwich, and I was in heaven. I almost shot off when Nicole brought her nipples up my thighs as Shelly brought a nipple up the crack of my butt. Almost as suddenly, they pulled away and proceeded to rinse me off. I was pushed out of the shower to the towel rack as the shower door was closed behind me.\n\nI was almost a little perturbed until I turned around to get the towel and saw to beauties soaping each other up just like they did me, like Nicole and I did when we first got home. Bodies sliding all over each other, but this time with LOTS of hands. Roaming all over each other, squeezing each other's tits and asses. Nipple to nipple, hugging and sliding all over to each other. Nicole looked like she was going to lean forward to kiss Shelly, but changed her mind at the last second and whispered something in her ear instead. They separated and rinsed each other off, joining me to towel off. For some reason I hadn't finished drying off.\n\n\"Master, you're still wet. Why didn't you finish drying off?\" Nicole quizzed me and gave the bimbo twitter laugh.\n\n\"You know you're right, I must have been distracted by something. Ladies I believe I hear a bed calling our name.\"\n\n\"WAIT MASTER,\" She turned to get her collar and disconnect it from everything else. She handed it to me and tipped her head back. \"My collar...\"\n\nShelly just stared. I leaned forward and kissed her neck before covering it with her collar. \"Thank you Master.\" She pushed us toward the bed, and then stopped me short while Shelly lay down. She said quietly to me. \"Master, I really am tired from today, especially when you made me pass out. Would it be OK if you made love to Shelly first? We can show her she is still a desirable woman.\"\n\n\"We?... This is what you had in mind all along isn't it?\"\n\n\"Not exactly, but I would not dis-approve of my Master showing her she is still a desirable woman.\"\n\n\"I do love you.\" And a little louder. \"Nicole, would you be so kind and get us all something to drink?\"\n\n\"Yes Master, I will be back in a few minutes.\" and left casually toward the kitchen.\n\nI lay down beside Shelly. \"Are you OK with this Shelly?\" as I cupped her cheek.\n\n\"This morning I would have screamed no, but now it's all I can think of.\" as she brought my hand from her cheek to her tit.\n\n\"I was hoping you'd say that.\" And leaned into her for a forceful kiss. She tensed for a second and then opened her mouth to me, laying back and practically offering me her body. Our tongues battling like teenagers. I slid my other hand down to a nice full tit, rolling her hard nipple in my fingers, causing her to let out a low groan into my mouth. I started kissing her cheek heading toward her neck. I cuddled closer to rest my hard cock on her thigh as I kissed her neck and cupped a tit while nibbling around to her throat.\n\nThen leaning in I started rubbing my chest across her other nipple making her whimper \"Oh God it's been too long...\" I was leaning on my elbow working down toward her nipples when I felt a hand on my other hand. It was Nicole. She slid in beside us and moved my hand down to Shelly's pussy pushing my finger onto her clit. Shelly opened her legs and gave me access to what ever part of her I wanted to play with. Who am I to argue with my sex slave? Then Nicole surprised me by sliding her hand back up to take the place of mine on Shelly's tit playing with her nipple. Her dark hand on Shelly's milky white tit was so beautiful. Shelly was down to grunts and groans as I flicked my finger across her clit. I licked up her tit and then lightly bit her nipple causing her to draw a quick breath.\n\n\"Are you ready to cum for me Shelly?\"\n\n\"Emmm Hmmmm.\" Nodding her head vigorously.\n\n\"I'm going to count to three. When I get to three I'm going to suck your nipple in and you're going to cum for me aren't you?\"",
        "That got me a high pitched \"Emmmm Hmmmm\"\n\n\"One... Two,,,,,\" She started to tense up, \"NOT YET... Three!\" and I latched onto her nipple sucking it in as much as possible. I almost lost it when Nicole did the same on her other side. Shelly totally lost it having a seizure orgasm. Nicole surprised me again by putting her hand over mine on Shelly's pussy and holding my finger against her clit pushing it back and forth and dipping down into her pussy. Once Shelly started to settle down Nicole took our hands to her mouth and licked Shelly's juices from BOTH our fingers while looking me in the eyes.\n\nShelly was starting to come back to us.\n\n\"I told you he was good.\"\n\n\"GOOD HELL, that was fucking fantastic!\"\n\n\"Do you want him to continue?\"\n\n\"I'm not quitting now!\"\n\n\"How do you want me to do this to Shelly?\", I asked looking into Nicole's eyes.\n\n\"On her knees Master, she deserves a full pussy! I'll put the pillows under her.\" As she moved, Shelly got up and turned over, following Nicole's directions as if on auto pilot. Then Nicole whispered to me, \"When she's close tickle her ass, but DON'T put your finger in, just tickle.\"\n\nShelly got down on the pillows and I had to spread my legs to get down to her pussy. Nicole kissed me and reached between my legs to put my cock against Shelly's pussy and then pushed forward to get me started, dragging her hand back across my balls and ass when she pulled back. \"Make her pass out.\" She whispered as I pushed into Shelly, no lube needed, but DAMN she was tight.\n\nIf I hadn't recently unloaded into Nicole I would have popped a nut right there. Shelly was mumbling something into the bed and pounding her fists, her pussy was spasming. I grabbed her hips with my thumbs just outside her rosebud and started a nice rhythm. Sliding in and out of that velvet vise, watching her cheeks jiggle a bit every time I bottomed out in her. We were getting nice rhythm going when I felt movement behind me. I felt Nicole's hands on my ass, but something was off a little. I looked down at my cock going in and out of Shelly's pussy and realized Nicole was under us with her hands on my ass just as she licked the base of my cock as I pushed into Shelly.\n\nThat was it. \"I'M CUMMING!!\" And started unloading into Shelly, driving in hard and fast setting her off as well, her ass pivoting and jerking, almost dislodging me twice. I kept going as long as I could, totally forgetting about tickling her ass with Nicole licking the bottom of my cock as I plunged into Shelly. I had to sit back on Nicole's hips and let the last of my cum dribble into her cleavage.\n\nNicole had the biggest grin as Shelly's pussy started to dribble into her mouth, and then she had the same reaction Jean said she did. Her eyes flashed open after the first few tastes and grabbed Shelly's hips to pull her down. That started another seizure orgasm and then she collapsed on Nicole... she had passed out. I pulled Nicole out from under Shelly when she dropped her hands off Shelly's hips. She had a dreamy look on her face along with quite a mixture of mine and Shelly's cum. I went back to the bathroom to get wet cloths and towels for the girls after wiping myself up.\n\nWhen I got back Nicole was still laying there just below Shelly's pussy with a 'cat that ate the canary' look. \"Was it as good as Jean said it was?\" I asked quietly after getting a Shelly flavored kiss.\n\n\"Better!\" she grinned. Sliding a finger up between Shelly engorged lips, making her twitch even passed out.\n\n\"Does Shelly know?\"\n\n\"No, don't say anything unless she does.\"\n\n\"OK, here's a towel for you, I'll clean her up.\" I rolled her on her back and straightened her legs out, then wiped her down and dried her off while watching Nicole doing the same in a VERY unladylike manner. I held Shelly's head up to help her take a drink of water. I took a drink of water myself and climbed in beside her, beckoning Nicole next to me on the other side, an arm around each with each hand on a tit.\n\nI exhaled saying, \"It can't get much better than this. Curled up with a sex kitten on either side.\" And I tweaked both nipples.\n\nNicole and Shelly looked over my chest at each other grinning. \"MEOW!\" and snuggled in.\n\n\"Shelly, can you stay with us tonight?\"\n\nShe looked over at Nicole. \"We could give him a double blow job in the morning instead of his usual down my throat!, See who gets him to blast off first!\" she said.\n\n\"Tiffany said I should bring work clothes for Friday, good thing I listened to her.\"\n\n\"Then it's settled, but I have one request.\" She looked at me questioningly. \"Would you wear that half cup bra to work tomorrow and show off those beautiful tits and nipples?\"\n\nShe was blushing all the way to her waist. \"I'm not sure...\"\n\n\"If you do I'm sure Nicole and I can make another visit to your office, and you get to decide if you're on the desk or under the desk.\" That bugged her eyes out. \"Of course I would have to make a quick inspection of your nipples before I let you out the door too!\"\n\nShe gulped, \"OK... Master,\" and looked at Nicole, who started giggling.\n\n\"He has that effect on me too.\" And reached over to stroke her cheek and then took her hand to put it on my cock and left hers on top of Shelly's. Then we snuggled in and dozed off.\n\nI woke later to an almost dark room, only lit by moonlight through the window. It only took me a second to realize there was a mouth on my cock and a nice ass by my head, but it wasn't Nicole. Shelly wasn't a deep throat girl like Nicole, but she was definitely no slouch, she'd give Gladys a run for her money.\n\n\"I woke up and couldn't wait 'til morning, I hope you don't mind?\"\n\n\"As I told someone else recently, you never need to ask or apologize for giving a world class blow... job. DAMN you're good!\" as she took most of me in. That just spurred her on. I tried to be quiet, but cumming in my boss' mouth is nothing to be quiet about. She took every drop and then made sure to lick me clean. No washcloth needed.\n\n\"Addicting isn't it?\" Nicole said. Shelly just grinned. \"Now pull that comforter up here. Tomorrow is going to be a long day.\" And we called it a night.\n\nFor those of you that have stuck with me on this series, thank you. And don't forget to scroll down a bit further to vote, it is appreciated. But remember... it is a series!\n\nComments from the ladies would be appreciated... I haven't seen any yet... "
    ],
    "authorname": "acup",
    "tags": [
        "interacial",
        "oral",
        "lesbian",
        "deepthroat",
        "shaved",
        "flat chested",
        "lesbian",
        "exihibitionist"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/serendipity-ch-12"
}