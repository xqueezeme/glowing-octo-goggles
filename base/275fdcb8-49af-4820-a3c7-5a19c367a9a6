{
    "title": "Life's Changes Ch. 04",
    "pages": [
        "At two in the afternoon nature woke me with an urgent need to pee. After a quick shower and some light make up I put on my baby doll nightie. I wasn't ready to walk around naked during the day. I left the bedroom to find some coffee. I looked out on to the patio and saw Ginny and Glenda out there with a pot of coffee. I stepped out and asked \n\n\"Is that for any one or just you two.\" \n\n\"No please come and join us there's plenty.\" Ginger said. Glenda poured me a cup as I sat down. Ginny asked, \"Did you sleep well?\"\n\n\"Very well thank you. And you two.\" I asked \n\n\"Like babies when we did get to sleep. I'll make you some breakfast.\" Ginny said \n\n\"I don't eat breakfast hon. \"\n\n\"Yes you do. You have some fresh fruit and toast to go with your three cups of coffee.\" She informed me.\n\n\"Obviously someone has been telling my secrets.\" I said looking at Glenda then I took her hand and kissed it. Ginger left for the kitchen I could see she was walking funny. \"You girls must have had some fun last night Ginny's waking funny today.\" Glenda blushed deep red. \"Did she like it?\" \n\n\"Yes she had me do her twice.\" She said blushing even more. \n\n\"Did she do you?\" \n\n\"No but I did suck her off again. I though you might want to watch me the first time.\"\n\n\"I do but you didn't have to wait. I would have understood.\" I moved my chair closer to Glenda and asked.\n\n\"Honey if I ask you to make love to someone would you do it? You could say no if you want to. I'll not get mad or ever bring it up again.\" I waited for Glenda's answer. \n\n\"I would do anything you ask just so long as the person I'm doing it with understands that you asked me to and that I love only you.\"\n\n\"How about if it was Pamela your secretary?\" I knew that this was a touchy subject being he was her boss.\n\n\"Does this have any thing to do with the guy she's in love? Because if it is I don't think making love with me is going to help, she'll still want him.\" I almost burst out laughing. He really had no idea. \n\n\"Glenda I love you very very much, but sometimes you can be a little thick headed. In this case a lot.\" Bill looked at me as if I lost my mind. \n\n\"Why would you say that?\"\n\n\"Sweetheart you're the man she's in love with. If you just asked, she'd drop her panties in a second.\" Bill really looked confused now \n\n\"I never did anything to encourage it!\"\n\n\"Yes you did. You were yourself. A perfect gentleman. You were just being you. A sensitive caring man that always thinks of others before himself. It's why I fell hopelessly in love with you and it's also what Pamela fell in love with.\" \n\n\"Your ok with this? You could have told me this before I hired her. Why did you let me hire her if you knew this?\" I could see Bill was getting upset. \n\n\"Honey you've told me time and again what a great secretary she is. Though she says you never tell her that. And you should, people like hearing they do a good job. And if she's so good why shouldn't you keep her?\"\n\n\"Because she's in love with me.\" Just then Ginger came out with a tray. Setting a plate in front of me and a new carafe of coffee she sat down. Bill turned to her and said. \n\n\"I may have a problem with Pamela coming to work for us.\"\n\n\"What? Does she need more money or something? I can't pay her more than my girls get. I could up the salary but that would eat into the profits. I don't need it but you may.\" She said. \n\n\"No it's not that. She's in love with me.\" \n\n\"Oh well that is a problem, did you know this Sheri.\"\n\n\"She told me. Just now.\" Bill answered for me. \n\n\"And you didn't know.\" Bill shook his head no. \"So obviously she isn't falling all over you. And she does a good job right?\" Bill nodded his head. \"What's you solution Sheri?\"\n\n\"I think she should make love to her once in a while. You know take her out to dinner maybe some dancing we could all go.\" Bill was getting very upset now he threw his arms up disgusted and said \n\n\"Maybe I should take her to one of the islands on a honeymoon while I'm at it.\" \n\n\"Not with out me you don't.\" I said slapping his arm to let him no I was teasing. Then Ginger said.\n\n\"Glenda I really don't see where the problem is you like her she loves you. Your wife approves I just don't see any problem.\"\n\n\"Gin my wife wants me to have an affair with my secretary.\" Ginger was making a lot of sense so I stayed out of the conversation. \n\n\"Glenda an affair is when your wife doesn't know you banging your secretary. That I would have a problem with. What your wife wants is to share you with some one else like when she shared you with me and you shared her with Jenny. I would like to make love with Sheri are you ok with that?\"\n\n\"Yes. But that's different.\" Bill said\n\n\"How is it different.\" Bill thought for a while. I finished my breakfast and a second cup of coffee. Then he said. \n\n\"I guess there really is no differences.\" I could see Bill had thought is out rationally. \"I always believed that have sex with you secretary was wrong. But if Sherri knows about it and approves of it then I guess it isn't wrong.\"\n\n\"No honey it's not wrong. It would be wrong to keep you from her. She is a very nice person and she can't help falling in love with the greatest husband on the planet.\"\n\n\"I reserve that title for my husband.\" We all turned around to see Jenny in the open door way. \n\n\"Well look who decided to join us. Sleeping beauty herself.\" I said kiddingly \n\n\"I waited to see if someone would come and put there face in my pussy to wake me but they never came.\" \n\n\"I'm sorry love but we had a crises of the greatest magnitude to solve. And we just got finished.\" Ginger said as Jenny sat down between Ginger and I. \n\n\"What kind of crises is that, did you break a nail?\" She asked Ginny\n\n\"No Glenda had an attack of conscious. She forgot secretaries where people too.\" Jenny jumped up and reached for Bill who managed to dodge her and run for cover. Ginny and I grabbed Jenny and sat her down and explained what had been said. Jenny calmed down and said. \n\n\"Well that's not that bad at lease he wasn't groping her against her will. You should make love to her you spend more time with her than you do your wife. If she wants you to bang her brains out do it. Share that lovely cock of yours there's enough to go around.\" I could see that Jenny was thinking about herself on the last statement. Jenny then looked at me and said, \"You already have make on?\" \n\n\"And I showered. I have to look pretty or my husband might leave me for someone prettier like you husband.\" \n\n\"Fat chance in that. Well I guess I better go get prettied up too or I'd look like the homely one.\" Jenny got up and went back in to the bedroom. I poured another cup of coffee. Ginny got up to refill the carafe. I said to Bill. \n\n\"Are you ok with this if not I'll call her and tell her you don't feel comfortable with it.\"\n\n\"No it's ok she a very attractive women and I have wonder what it would be like to be in bed with her. But I never said anything I always treated her with respect. I never knew she felt that way too.\" \n\nI reached over and put my hand on Glenda's lap and caressed his cock and asked in a sugary sweet voice. \"Can you do me one more favor? Go into the master bedroom and fuck Jenny she dieing to feel your cock inside her.\" \n\n\"She's not going to hurt me is she?\" \n\n\"I don't think so. But make sure you clean up after your done. Then take a shower.\" \n\nGinny came back out with another pot of coffee. \"Where did Glenda go?\"\n\n\"I send Glenda in to make love your wife.\" I told her \n\n\"She should like that.\" she said with a gleam in her eye. Then she asked, \"What should we do?\" I thought for second.\n\n\"We could go for a swim, but I didn't bring a suit. Or we could find someplace soft to make love on. \n\n\"You don't need a suit but it is cool out. And once your wet it may seem cold. \" \n\n\"I guess that leaves finding someplace soft.\" Ginger when over to a door next to the one Jenny and Bill entered. And pulled out an exercise mat and laid it on the patio \n\n\"Would this do you or would you prefer something softer.\" I walked over to her and put my arms around her head and pulled her head to me. She wrapped her arms around me and pulled me close. Our lips met, my tongue invaded her mouth, and her tongue caressed mine. Ginny's hand caressed my bottom. \n\nBreaking our kiss I pulled Ginny's camisole up over her head. Now I could explore her tiny breast. They where not more than a hand full, but they where firm, almost like a teenagers breast. Her nipples were large, they were as big around as my pinky and stuck out three-quarters of an inch if not more. When I touched them Ginny rose up on her toes and sucked in a breath. I could see a look of pure joy on her face. I took one of her nipples into my mouth and lightly sucked on it. A faint mewing sound escaped her lips. I continued to suck and caress her nipple till I felt something poking into my tummy. I looked down to see it was her cock was pushing out the panties she was wearing. \n\nWhen I released Ginny's nipple she pulled my nightie over my head. I took her nipple back into my mouth as I caressed her cock though the satin panties. Ginny started moaning and thrusting her tit into my mouth. She took one of my breasts in each hand and started massaging them; she would pull the nipples and give them little twists.\n\nI released her nipple and went to my knees. I could see a large wet spot on her purple satin panties. I pulled the panties down her smooth legs and had her step out of them. Tossing them to the side I took her cock in my hand and tilted it down to my lips I kissed the head and my tongue lick up her precum. I took the head in my mouth and looked up. \n\nIt was a strange sight. I had a live warm cock in my mouth that was dripping precum and I was looking past a pair of tits into the face of a women. The strangeness was sexually charging. I slid her cock into my mouth. Her cock was a perfect cock for sucking. Bill's cock though I love it very much takes a lot of work to get it all into my mouth and down my throat. Ginny's is thinner and I can slide my mouth over it easer, it's the kind of cock I can suck on all day. I didn't want her to cum in my mouth at lease not this time I wanted her to fuck me I need her cock in side of me. I took her cock from my mouth and said \n\n\"I need you inside of me so stop me before you cum.\" She nodded her head as I put her cock back in my mouth. I slid my mouth up and down her and let it slid into my throat till I felt her ball sack on my lower lip. I sucked her cock for a few more minutes till she said. \n\n\"Sheri stop, that's all I can take.\" I pulled my lips off of her and sat back on my heels. \n\nGinny knelt down next to me took me in her arms and kissed me on the lips and said \"you are the best cock sucker I know you put every man and women I've been with to shame.\" \n\nI laid down on the mat while Ginny removed my panties. She took my left foot to her mouth and kissed it. She took each toe and sucked on it like a little cock. Then ran her tongue up over the top and up the ankle she did the same to my other foot. She slowly, much too slowly worked her way up my legs and thighs. Spreading my legs she planted kisses on my pussy. I wanted to grab her head and shove her face into my pussy and hold it there. But I held my composer and let her work at her own pace. \n\nHer mouth pressed itself to my pussy and licked up all the cream that had dripped out of me then she stuck her tongue into me, and she flick it in and out trying to get all my juices. Then she moved to my clit and sucked it into her mouth, she flicked it with her tongue and nibbled it with her teeth. She was very good at cunt licking; she had me ready to cum in shore order. I thrust my pussy into her face as she licked out my hole then I felt the tingling in my toes that flew up my legs. \n\n\"There. I almost there Ginny I'm sooo close baby.\" Ginny took my clit back in her mouth and suck hard she thrust two fingers up my hole as I came. \"I'm cuuumming god I cumming sweetie suck me.\"\n\nGinny's mouth moved down and started suck my cum from me as her fingers played with my clit. I grabbed her head in my hands and pulled it hard against my pussy as I continued to cum. After riding her face though my orgasm I collapsed and released my grip on her head. Ginny took a big gulp of air as she pulled her face away from my pussy. She laid her head on my leg and sucked in life giving air. I felt sorry for her I didn't mean to smother her like that. I reached down and stroked her hair. Ginny panted but her lips kept kissing my leg. Once she recovered she kissed her way up to my face stopping to suck each nipple in turn. I griped her cock as it came in reach and pointed it to my hole and said. \n\n\"Come on Ginny shove your yummy cock into me.\" Ginny shove it in all at once just like I like it. \"That's it baby fuck me, fuck me hard and fast.\"\n\n\"Give it to her Ginny make her cum.\" I was startled by the sound of someone else voice. I look in the direction the voice came from and saw Jenny and Glenda sitting at the table watching us. \n\nThey were both watching us intently. At first I almost had Ginny pull out, being this was the first time I knew someone was watching me. Then I got a thrill knowing I was being watched like I was on stage and I was performing for an audience. I turn my attention back to Ginny and look at her. She had a smile on her face that told me she knew how I felt and really started pounding into me. Then I thought to myself if they want a show I'd give them a show. I thrust my pelvis up to met Ginny's down stroke and I pawed my tits. I'm normally not very vocal when I'm getting fucked put this time I pull out all the stops. \n\n\"Fuck me Ginny, fuck me baby, pound that cock into me lover.\" Both Ginny and I grunted and groaned and cussed I pulled on her tits as she fucked me. I came three or four times while Ginny fucked me till she said. \n\n\"I'm going to cum Sheri.\" I pulled him into me and told him \n\n\"Cum baby cum deep inside me fill me with you hot cum.\" Ginny slammed home and pumped me full of cum as I came one more time. Ginny collapsed on top of me as his cock continued to pump more cum into me. Gin laid on top of me panting her cock continued to flex sending more cum into my hole. After Ginny pulled out of me and rolled over next to me I looked over at Glenda and asked.\n\n\"Who wants to clean up?\" Jenny looked at Glenda. Glenda got up and came over to me and knelt between my legs put her mouth to my pussy and started sucking out Ginny's cum. I can't tell you the thrill I got knowing that my husband, my lover was drinking someone else cum from my well fucked pussy. When Glenda had clean up most of Ginny's cum we rolled over so I could sit on Glenda's face and let her get the rest of Ginny's cum. Once I was pretty sure she had it all I stood up and said. \n\n\"Sweetheart Ginny's messy too.\" Glenda rolled over and took Ginny's deflated cock into her mouth and sucked it clean. I put my nightie top back on and sat down next to Jenny who said.\n\n\"Thanks for sending her in it was just what I was looking for this morning. She's something else.\"\n\n\"Yes she is filling isn't she? \n\n\"You can say that again. I've never had anyone that big before. I'll be stretched out for a week. When he insisted he had to clean up after, I did know what to think. I never had anyone do that before. But I like it. Ginny's going to start taking clean up more seriously.\"\n\n\"What I like about it most is there no cum running down your leg afterward.\" Glenda had finished her clean up and sat down next to me. I took her in my arms and kissed her tasting Ginny's cum on her. \n\nLooking at my watch I realizes that if Pamela was going to call that I wouldn't be there. I said to Glenda. \"I told Pamela to call me today to make sure you where ok with getting together with her I should call her. Are you ok with it?\"\n\n\"I'm fine with it but what about the way I'm dressed. Do I have to wear men's cloths?\" \n\n\"Honey. We're not going to change the way we do things to suit her. But I did give her some homework last night to prepare her. Lets see what she thought of the web sites I sent her to.\" Bill nodded his head he knew where I sent her too. I asked Jenny to use the phone. She showed me to the den and left me. I dialed Pamela's phone and thought to myself. \"Well Pamela lets see if you're ready to change your life?\" She picked up the phone on the first ring and said hello.\n\n\"Pamela this is Sheri. I wasn't going to be at home at five so I decided to call you and see how you felt.\"\n\n\"You mean about the sites you sent me to. They where rather eye opening. I didn't know people actually did those kind of things.\" She then paused so I asked. \n\n\"Did you not like them.'\n\n\"No they didn't upset me they were just different. I'm not sure how I would fit into some thing like that. I'm not sure I could be domineering.\" I didn't want her to be domineering I want her to be submissive to me and equal to Bill. \n\n\"You don't have to be dominate. You can be an equal to Bill.\" \n\n\"I still not sure how I would fit in with you. I presume that Bill is submissive to you and if I was his equal that means I would be submissive to you as well. Am I getting this right?\" She was getting it right. But I didn't think she was going for it. She sounded very non-committal. \n\n\"We don't have to go that route either. I just wanted you to know how we do things.\" I told her. I didn't want to scare her off. But I did want her to know I was the one calling the shots. \n\n\"Let me tell you about myself. I have a PhD in education. After I got into teaching I didn't like it, I was never any good at telling children what to do. I knew I liked being told what to do. I always have. I became a secretary because It mostly involved taking orders and once in awhile some heat when thing went wrong. Last night I realized while I was in that chat room that I am submissive to my boss and my lovers. Now what I want to know is can I be submissive to you as well? I like women I like them a lot. If it wasn't for the fact that I loved Bill so much I would probably say I'm a lesbian but I do like a roll in the hay with a man once in a while.\" This couldn't be working out any better \n\n\"You do realize that no matter what we do. That in the office Bill is still your boss and the way you treat each other can't change. You two can't be having sex in the office.\" I said\n\n\"Yes I realize that. I don't want any gossip being spread about us. What the three of us do together is our business and no one else's. I do have one other question if I may ask?\"\n\n\"You can ask as many as you like, sweetie. I want you to be well informed.\" I told her.\n\n\"I notice yesterday that Bill was wearing earrings, starter post really. I know I never seen holes in his ears before. And with some of the things I found out about in the chat room. I was wondering if Bill was a cross dresser.\" I was wondering how I could bring up the subject and she brought it up herself.\n\n\"If he was how would you feel about it? Would you be upset or turned off by it?\"\n\n\"Oh no not at all. I was hoping he was that would make everything so much easier. A woman with the size package he has. That would be a dream come true.\"\n\n\"How do you know what size package he has?\" I asked \n\n\"I've worked for him for three years and a couple of times, not often he had a hard on when he stood up and I saw it I mean the bulge not his actual penis, it's quite impressive.\" I could hear her embarrassment in her voice. \n\n\"No Pamela what makes an impression is when he has it in you.\" I heard her moan over the phone. \"So I guess that Bill wears female cloths at home is ok with you.\" \n\n\"Oh yes. He can even wear them to the office as far as I'm concern.\" \n\n\"I don't think Bill's ready for that yet, I don't think Jim's ready for that yet.\"\n\n\"Does Jim know about Bill? I mean his dressing up and all.\" I though to myself if she knew what happen in the last twenty-four hours she'd pee herself.",
        "\"Yes Jim knows everything including you.\"\n\n\"Oh my god what must he think.\" I could hear she was upset.\n\n\"Don't worry, he thinks it's a great idea. Pamela you still coming over tomorrow right?\"\n\n\"Oh yes I wouldn't miss it for the world.\" \n\n\"Ok wear something sexy and bring something to lie around in. And you might want to bring you makeup and something to where to work on Monday in case you would like to spend the night.\" \n\n\"I don't have many sexy things put I could run out and get something.\"\n\n\"We'll have to remedy that I can't have my new submissive not wearing sexy cloths for me.\" I heard her moan over the phone. \"Pamela are you playing with yourself?\" She hesitated to answer so I said. \"Tell me are you.\"\n\n\"Yes ma-am.\" I could her the shyness in her voice \n\n\"Then stop and don't do it again till I tell you can. Now I like my submissives hairless below the neck make sure you are when you come over tomorrow. Do you understand me?\"\n\n\"Yes Mistress. I understand and will do my best to full fill your wishes.\" I felt a sexual charge go though me when she said this. I gave her directions our house and told her to be there at three and hung up. \n\nI came back on to the patio. Everyone was sitting around the table. I sat down between Bill and Jenny. And said \"Now that, that is settled what do we do now.\" \n\n\"Oh no you don't. You have to tell us what's going on.\" Jenny said. I told them about the conversation I had with Pamela. Then Jenny said. \"It looks like you have another love slave.\"\n\n\"Yes it does look that way doesn't it? So what do we do now.\" then Jenny said\n\n\"I don't know about the rest of you but I'm hungry. We could all go out for dinner and then come back here and fuck like bunnies or we could get Glenda and Ginny to make dinner. And then fuck like bunnies. Or we could go out for dinner and then to a club before coming back here and fuck like bunnies.\" Then Ginny said\n\n\"Jenny is food and fucking all you think about?\" \n\n\"I only think about food to give me energy to fuck. Fucking's my main concern.\"\n\n\"Glenda and I have a appointment at ten tomorrow morning to have Nicole fitted of a French maid's uniform. So we can't go all night again.\" I said Bill blushed as I took his hand in mine. \"Ginny can I ask you a question?\"\n\n\"Sure ask me anything you want.\" She said\n\n\"Did you get your slave ring before or after you got your tits.\" \n\n\"Before why do you ask? \n\n\"I just wanted to know if it would have any affect on you breast enhancement. Glenda wants to get one to show her servitude to me and I want to know if she decides to get boobs too if it will have any effect.\" Bill looked up at me with hope in his eyes. \"So I was thinking If we could get Ginger to dress her up real pretty and Sam wouldn't mind we could go and get her a slave ring of her own. Would you like that Glenda?\" Bill's look turned from hope to shock with the thought of going out in public in a dress. No one said anything we all waited for Bill to speak. Bill swallowed once and said\n\n\"Yes I would. I would like that very much.\" I could feel her hand shaking in mine. \n\n\"Ginger do you think you could dress her up good enough to pass? I don't want her to get hurt. If not we could go with her dressed as Bill.\" I was giving both Ginny and Bill a way out. \n\n\"I'll have to see what kind of cloths you bought her but I'm sure I could.\" Jenny went to call Sam. When she came back she said.\n\n\"Sam's not too busy today. She said come on up and she'll take care of it. Ginny before we get two involved would you make some sandwiches. I'm still starving. \n\n\"Yes my love\" Ginny picked up some sign from Jenny then turned to Bill and asked, \"Who would like to give me a hand?\" Bill volunteered. Then Jenny said to me after they left.\n\n\"Your trying to take her out in public aren't you?\" I nodded my head. \"When we get done at Sam's we can go to Benders to celebrate if that's ok with you.\"\n\n\"I don't want Glenda hurt or humiliated in public. I don't want to take him anywhere dangerous. I'm not even sure about Sam's.\" I said I was a little worried myself.\n\n\"Sam's isn't that bad. The rougher crowd stays away from there because it's mostly a gay biker's area. Bender's is short for gender bending. Do you know what that is?\" I said no. \"Gender bending is what Glenda and Ginny are doing. Men dressing like women and women dressing like men. Their clientele are all gender benders so it's safe for her. She's pretty close to passable. In Benders if she makes a mistake no one cares. She might be asked to dance with some guy that likes she males. That's what Ginny and Glenda are.\" I though this over then asked.\n\n\"Is it a dive or does everyone dress up?\"\n\n\"Benders is a high class place you have to be a member to get in. If your dressed as a man it's suit and tie and if you dressed as a woman its dresses. Nothing outrages or in bad tasted. There's a dinning room and a dancing area with a live band on Friday's and Saturday's. So do you want to go I'll have to see if I can get reservations?\"\n\n\"Your sure it's safe?\" I asked still not sure and sort of worried. Bill had come a long way I didn't want him ridiculed. I wanted him to be more like Ginny. \"Ok make the reservations but the first sign of trouble and we're out of there.\" Ginny and Glenda came back with the sandwiches as Jenny was leaving. She had Ginny follow her into the house. After a few moments she came back and sat down and said\n\n\"You know Glenda since this is your first time out in public why don't we get all dolled up.\" Bill looked at me I could see suspicion in his eyes he knew something was up. Then he said.\n\n\"I trust Sheri not to humiliate me in public. So if you think I should get all dolled up I'll do it.\" Bill had just put me on the spot. He trusted my judgment. I took his hand in mine I could feel it shake but he was willing to do what I wanted. Then Ginny said \n\n\"I have a dress that I think will fit Glenda perfectly we're the same size pretty much. Sheri why don't you go home after you eat and get dressed and we'll drive over and pick you up.\" Jenny came back in and sat down and started eating. Glenda wasn't eating she was just starring at me. I couldn't eat with him starring at me, I felt like I was betraying him. I took my hand from his and said\n\n\"Go ahead and eat sweetheart. We should be going soon.\" Ginny turn to him and said \n\n\"Go a head and eat. I know your nervous going out your first time but everything will ok I've been where you are you can trust us.\" Bill seemed to relax some and started eating. Which meant I could start eating. I could only eat a little, my stomach was in knots. After Jenny and Ginny had finished eating Jenny said \n\n\"I'm going to get dressed the rest of you should as well.\" I went to put on shorts and a tee shirt for the drive home. I kissed Bill before I left and he asked. \n\n\"Are you sure about this?\" \n\n\"Yes love of my life everything was going to be fine. You trust me and I trust Jenny and Ginger. You'll be ok.\" \n\n\"Would you like to tell me what we're doing after we get my nipple pierced.\" I didn't have to tell him, but I felt I owed it to him. \n\n\"We're going to a night club called Benders as in gender benders it's a place that caters to people that wear other sexes cloths. Jenny and Ginger both feel it's safe. It's a members only club and their members.\" He took my hands in his and kissed them and said ok. I couldn't believe he wasn't putting up a fight. \"Ok. Ok That's all you got to say is ok. Here I was thinking you would hate me and all you say is ok. I should get my whip and beat you.\" Bill laughed and took me in his arms and said. \n\n\"Honey I love you. All I ask is you tell me what your doing. It's the lawyer in me I don't like the unknown. If Ginny and Jenny says it's ok then it must be. You know it sounds like fun.\" I couldn't believe he was taking this so calmly. I tried to put a wrinkle into his euphoria \n\n\"You know they have a live band you might get asked to dance.\" Bill came back with.\n\n\"\"Would it be ok if I did dance with some guys?\" He got to me on that one and he knew it.\n\n\"Just remember your coming home with me tonight so I'll be the one fucking your ass.\" \n\n\"Yummy is that a promise?\" \n\n\"Ok who are you and what did you do with my husband?\" Bill just laughed took me in his arm again and kissed me. I felt his cock start to rise between us. Yea this was my husband. I rubbed my tummy on his cock and said, \"You better not do that when you're dancing it's not very lady like.\" We both laughed. I kissed him and told him \"I'll go get dressed.\" \n\nI drove home and showered and dressed. I wore a black with gold glitter cocktail dress. Gold four inch spiked heels. I finished my makeup and hair just in time. Jenny pulled into my drive in Jims Lincoln town car. \n\nI got in the front passengers side. Glenda and Ginny where in the back. I couldn't see how Glenda was dressed or made up in the back because the dome light didn't seem to work. Jenny was wearing a dark green cocktail dress with a plunging neckline that stopped two inches below her breasts. You could see the side of her breast clearly. Jenny drove at a record braking speed. We arrived at Sam's around eight. \n\nGlenda got out of the car. I could see she was nervous. I took her hand I could feel it shake. We walk in to Sam's shop and thankfully it was empty. I could finally see what Glenda was wearing. It was a gold sequin dress that stopped four inches from her knee; she wore gold four-inch spiked heels. Her make up was impeccable even under the harsh lights of Sam's shop. Her hair curled in waves even though it was short it had a girlish style. Sam greeted all of us with kisses and told us all how foxy we looked. Then Sam turned off the open sign and locked the door and pulled down the blinds and said. \n\n\"We don't want prying eyes to see what they shouldn't. Now who gets the ring? Glenda raised her hand. \" I need you to take down you top and sit in the chair.\" Sam could see Glenda was jumpy. And said \"Don't worry honey I'll be as gentile as I can.\" Ginger walked up behind Glenda and unzipped the dress. Glenda pulled down the top and took off her bra you could see her face turn a bright pink even thought the makeup. Then Sam said \"There, there sweetie we can't all have big tits like Jenny there, we just have what god gave us.\" Which got a laugh from everyone. Glenda sat in the chair and I sat next to her and held her hand. \"Which nipple?\" She asked I told her the left the same side as the wedding band. Sam froze and pierced the nipple and installed the ring. I could see it was painful but Glenda never made a sound. Once done Sam taped a gauze pad over it. She told Glenda how to clean it while she got dress. \n\n\"So where are you going all dressed up.\" Jenny told her and invited her to come a long. \"I'd love to but I have a biker coming in shortly that's got a big tattoo on his back that we've been working on. It's the gas tank and handlebars of a Harley so it looks like your riding a bike while your fucking him it's really neat. If you stick around you can see it.\" We beg off and left. We arrived at Benders a little past nine thirty. Before we got out of the car Jenny asked\n\n\"Are we going to eat or just dance? I vote to eat first the dinning room closes in an hour so we should eat first if where going to eat.\" I didn't have much of that sandwich and I know Glenda didn't. So I said\n\n\"I vote to eat, how about you Glenda.\" She agreed \n\nWe walked in the club and was greeted by a very large man with a goatee he must have stood six five weighted three hundred pounds and very little if any was fat. \"Jenny, Ginger it's been a long time where have you been.\" \n\n\"We just found new friends to go clubbing with and yours is the first place we brought them too. Max this Glenda and Sheri.\" Jenny introduced us\n\n\"Very lovely women they are too. Any friend of Jenny and Ginger's are friends of mine. But I am going to have to see some I D.\" Glenda looked shocked that he would ask. He turned to Glenda and said \"not yours the little one's.\" I pulled out my driver's license and showed it to him. \"Thirty well could have fooled me. I hope you don't take it personally but you barely look twenty.\"\n\n\"Of cause I take it personally.\" I could see he looked troubled. \"Any time I get a compliment on my age I take it very personally.\" Which got a roaring laugh from him. Then he said.\n\n\"Jenny I like this one you bring her back anytime. Are y'all going to dine or just dance?\"\n\n\"Dinning first then we'll work it off on the dance floor. Are there a lot of single guys here tonight?\"\n\n\"Benders always has a lot of single guys. They can't seem to get enough of the ladies I get in here.\" Max winked at Ginger.\" Let me show y'all to a table\" Max put his arm around Ginger and Glenda and walked into the dinning room. The dinning room was very large but there wasn't many people eating. Max escorted us to a table for four and held our chair for all of us. I was the last to sit down. \"And last but not lease the little one.\" \n\n\"Max if you ask me if I need a booster seat I'm going to kick you where it hurts.\" I told him. Max roared again with laughter. \n\n\"Sheri darling I'm only having fun but I like you if Jenny will sponsor you I let you join my little club. And compare to me you are a little one, you are all little ones.\" Max laughed his way back to the entrance. \n\n\"Well Sheri you seem to hit it off with Max. I never saw him that friendly to a real girl. Usually he just ignores us. He like girls like Ginger and Glenda.\" \n\n\"He probable thinks I'm a guy then.\" Jenny giggled then said \n\n\"Honey you could never pass for a guy. Besides Max knows he can always tell. You saw the way he put his arms around Ginger and Glenda didn't you. The man is infallible.' The waitress came up and we ordered champagne when it arrived. Jenny held up her glass and said. \n\n\"Congratulations Glenda this is your coming out party. Long my you pass.\" we all drank up. After dinner Jenny asked for the check. The waitress said \n\n\"There will be no charge for dinner Max says the little one made him laugh so the dinners on him.\" Jenny and Ginny were impressed after the waitress left she said.\n\n\"I guess you did hit it off with him I've never seen him pay for a meal and definitely not four.\" After dinner we went into the dance hall and found a table near the dance floor. The band was playing. As soon as we sat down a gentleman around six one came over to our table and asked Ginny if she would like to dance. She left with him Then Jenny said to me \"There only on problem coming here these guys only dance with cross dressers. So if you are asked to dance most likely it's a cross-dressing female. If you have a problem with that decline any offer.\"\n\nI asured her I didn't have any problem with it then excused my self to go to the bathroom. After I finished as I was coming out I ran into Max\n\n\"Max that was really nice you to buy dinner for us.\" \n\n\"Your welcome little one anyone who could make me laugh the way you do deserves at least that.\" \n\n\"Max can you tell me how you knew Glenda wasn't a real girl.\" Max roared out laughing again then said.\n\n\"To tell you the truth little one and I better not hear you tell anyone my secret. I couldn't tell on her, not right a way. So I used my little trick I asked for ID's. As soon as I saw the shocked look on her face I knew. You tell her I think she's really pretty.\" I had him lean down and gave him a hug and a kiss. \"What was that for?\"\n\n\"I think you're really sweet. And I think you're just a big teddy bear.\" \n\n\"Don't go spreading that around I have a reputation to protect.\" I went back to our table and it was empty. I looked on the dance floor and saw Ginny still dancing with the same guy and Jenny and Glenda each had partners. I was just about to sit when, what I believed was a women about five eight in a dark blue suit asked me to dance. I wasn't the only one who was going to be left at the table. We dance and chatted thru a couple of songs then I made my way back to the table. Jake my dance partner held my hand as we made your way back to the table. When we got back to the table I found Jenny Glenda and Ginny sitting on the laps of there dance partners. Jenny said\n\n\"There wasn't enough chairs for everyone so we decided to sit on the guy's laps.\" Who was I to argue I had Jake sit and sat on his lap. His hand went straight to my lap he started rubbing the exposed part of my leg. Jenny leaned over to me and asked me to go to the bathroom with her. Then she asked Glenda and Ginny to join us. Once in the bathroom she asked.\n\n\"Are we all going home tonight together? Be cause if we are we need to tell those guys so we don't lead them on. They might want to score tonight and if they spend the whole night with us and we leave they might get a little upset. I know it won't get rough Max would never let them. But it's only fare to them to try and find someone else.\" \n\n\"We came together. I think we should stay together and Glenda and I have an appointment tomorrow.\" Glenda and Ginny agreed we shouldn't separate. Then Jenny said \n\n\"We can play kissy face and touchy feely but no one leaves ok.\" We all checked our make-up and when back to the table. Jake took me to the dance floor. We danced as I snuggled up to him I could feel his breast as I rested my head on his chest. His hand rested on my bottom. Normally I would have asked to have him take it off but I was feeling horny so I let him keep it there. Then he said\n\n\"Come home with me. So I came make sweet love to you. \" I was tempted. I would have like to see what she would do to me. \n\n\" I would love to but I can't Jake. The four of us drove up together and we need to drive back together.\" \n\n\"You could all stay at my place and leave in the morning.\" As tempting as it sounded I knew Glenda and I couldn't be see coming home all dressed up so early in the morning. It would be all over the neighborhood by lunchtime. \n\n\" I don't think that would be wise if I had brought a change of cloths then maybe. If you want to leave me so you can try for some one else I'll understand.\" He pulled me close and kissed me. We kissed and danced till I was out of breath. I pulled my mouth from his and asked to sit down. As I came to the table I saw everyone kissing there dance partner Jenny's partner was openly fondling her tits and Glenda's partner had his hand up her dress what he was doing I could' t see but Glenda was obviously enjoying it, her hand was in his pants Ginger was doing about the same thing as her partner's hand was up her dress. I felt out of place having told Jake she could leave. Jake could also see what was going on and asked \n\n\"Do you want to go to the bar and get a drink?\" At the bar we talked and kissed till the bar tender call last round. Jake gave me his card and said \n\n\"If you're going to stay in Atlanta over night give me a call.\" Then a woman came up to us and said to Jake\n\n\"Jake any luck tonight.\" she was a cute blond about Jake's height with blue eyes. \n\n\"No how about you.\" Jake asked\n\n\"I spent most of my time with some jerk, then he tells me he has to go home to his wife but I could blow him out in the car. Yea like I'm going to do that. Hey Jake who's your cute little friend here?\" \n\n\"Oh I'm sorry. Sheri This is my husband Julie.\" we shook hands as Julie asked\n\n\"So you have a husband here too that would like a sweet thing like me?\"\n\n\"Julie don't be a pig. Sheri and her friends have to go back home tonight.\" Just then Bill came up to me. \n\n\"Jake, Julie this my husband Glenda who needs to go fix her makeup.\" Bill looked like she just got out of the back seat of someone's car.\n\n\"Oh sorry. Hi Jake, Julie. Jenny wants to know if you're ready to leave.\" \n\n\"Go fix your make up then we can leave.\" Bill scurried off with Julie right on her heels saying something about helping. \"I better get back to my friends. I'll call you the next time we get in town and plan to stay.\" It sounded like a brush off but it really wasn't. Then Jenny and Ginger came up. ",
        "\"Where's Glenda did she find you.\" \n\n\"I sent her to fix her makeup. And you two could use a little of the same.\" \n\n\"Yes mother.\" Jenny said like a spoiled teenager then to Jake she said. \"She always gets bitchy when she's horny. We'll be right back.\" Jake and I waited for the others to come back when Max came up to me. \n\n\"Little one here's an application for membership It's just a formality so I can say this is a members only club. So I can keep the riffraff out. Well at lease try to. Just fill it out and have Jenny sign it. Then I'll give you a card. So y'all come back real soon ok.\" and then he left. Jake said \n\n\"Wow how did you get on his good side? I never seen him so friendly to a real girl before.\" \n\n\"Jenny told me that too. Maybe he just wants to get Glenda in bed with him.\" \n\n\"I hope Glenda can handle him. Julie's been to bed with him once she walked funny for a week. He's packing quite a pistol there.\" now she had my curiosity \n\n\"Did she say how big it was?\"\n\n\"She didn't have a measuring tape with her. But she said it was at lease twelve inches long and as thick as a beer can. She said it was a ride she'll never forget but doesn't want to do it again.\" \n\n\"Wow that big, he could hurt some one. I'll have to make sure Glenda steers clear of him.\" \n\n\"Are you going on the cruise in July.\" He asked with a little hope in his eyes\n\n\"What cruise is that.\" \n\n\"Benders Fantasy Cruise. Max had one last year it was great five days out to sea. We stopped in Jamaica and the Bahamas and every one stay dressed the whole time. Julie loved it she got to wear her bikini and formal gowns. And if your looking for sex it's everywhere the crew even joined in. You should see if you could still get a cabin.\" \n\n\"I'll have to check it out.\" The four girls returned we said our goodbyes to Jake and Julie. On the way out I saw Max and asked him if there was still availability on the cruise. \n\n\"Sure do little one. But payment in full has to be in by the fifteenth of next month. And I think we only have suits left. Are y'all thinking about coming.' \n\n\"It's just a thought, I have to discuss it with Glenda and see if we can get the time off.\" \n\n\" Ok but only one guess per couple member so you'll have to be a member by then.\" After we got in the car Jenny asked what cruise so I told her about it. \n\n\"Sounds like fun maybe we should all go if we can get you a membership by then.\" I pulled the application from my purse and said\n\n\"All you have to do is sponsor us and fill this out and we get our membership.\" \n\n\"How did you get that so quick. We had to wait six month before we got ours. What did you do promise him Glenda would sleep with him.\" Jenny wasn't upset jealous maybe. \n\n\"What can I say he likes me? And I would never give Glenda to him.\" I said with a little shiver \n\n\"Why not?\" I told here about his cock and then she said. \"I figured he was big but not that big to bad he doesn't like real girls. Ginger do you think we should sponsor them? \n\n\"Yea!\" Jenny and I both heard the urgency in her voice I tuned around. I could just barely see Glenda's head in Ginny's lap and it was bobbing up and down. \n\n\"Glenda you little whore.\" Glenda popped up and wiped off her mouth. \"For some one who only yesterday was worried about me watch you suck cock you sure got over that fast. I may just give you to Max for a night just for punishment. But you'll probable like it. Well don't leave Ginger hanging like that finish her off. And try not to get it all over you dress.\" The three of them could see how mad I was. Jenny but the hand on mine and told me to calm down. \"I will not calm down if she's going to dress like a girl then she had better start acting like a lady. Or I'll dress her like the whore she is and pimp her out. I will not have my husband chasing after every dick that comes along.\" I looked in the back seat. Glenda was cowering in the corner I couldn't see her face. \"Well what are you waiting for slut finish her off.\" \n\n\"Honey it's just new for her take it easy.\" Jenny was saying I didn't say anything I was so mad I didn't trust myself. We drove the rest of the way in silent except for Ginny's grunting when she came. About twenty minutes from the house I asked. \n\n\"What do you want to do about Pamela? She knows Jim knows about Glenda and that she's going to be sleeping with him. Are we going to bring her into our circle or should I leave her out of it.\" Then Jenny said. \n\n\"She's going to be your sex slave how do you want to handle it.\" \n\n\"Right now I'm too angry to decide how to handle it. Just let me know if you two want her to stay out of you lives except at work. If you do then I'll handle it as long as that tramp in the back seat can keep his mouth shut.\" Jenny though for a moment then said.\n\n\"Maybe you should cancel tomorrow and plan it for some other weekend.\" \n\n\"No I promised her and I don't disappoint people. I'll just have to live with disappointment.\" \n\n\"I'd like to meet her first before I make any commitment as far as bringing her in to our circle. How about you Ginny.\" \n\n\"I think that's wise for now and we'll see how she acts at work after.\" \n\n\"Ok for now she's out side the circle.\" Jenny pulled into our drive way and turned off the car lights. I took the keys out of my purse and threw them at Bill and said \"Go open the door and turn on the lights. Then get up stairs and get in the shower.\" Bill jumped out of the car as he was walking in front of the car I told Jenny to turn on the lights. Bill was taught in the light then scurried to the door. I had Jenny turn off the lights. Then she said. \n\n\"Don't hurt her. She really didn't know she was doing wrong.\" \n\n\"Jenny I don't want her to get hurt. That's why I'm so mad. The way she went after that guy in the club. It just scared me she might do it when I'm not around to protect her. And you have to remember that boys were taught to have sex anytime they can. Girls are taught to save their reputation. I don't want my girl to be known as a slut, an easy lay. Do you two understand?\" \n\n\"Of cause we do I was lucky Jim was worried about his mother finding out. So that kept him in line. Just remember this is all new to her. So go easy but your right she could get hurt if she's not careful.\" \n\n\"Thanks for understanding. Now I guess I better get inside. I call you tomorrow.\" I went inside and found Bill in the shower. His dress was lying on the floor along with his stockings and panties. Well Bill might have gotten away with that but Glenda was going to pick up after herself. I hung my dress up and put my undergarment in the hamper my shoes when in the closet where they belonged. I went in to the bathroom and said. \"If you think your clean then get out.\" Bill got out of the shower and started drying off. I took my shower. When I got out of the shower I found Bill's towel on the countertop. I hung up my towel neatly to dry before it went in to the dirty wash normally I would do the same for Bill's, but not today. Things where going to change today and right now. \n\n\"Bill come in here.\" Bill came in wearing panties and a satin camisole. Tomorrow that was going to change too. I knew I was too easy on him. \"Bill do you see the way I always hang my towel up to dry before I put in the dirty laundry. Do you know why I do that?\" \n\n\"So they don't mildew before you wash them.\" He did know why which made me madder. \n\n\"I always pick yours up and do the same I think it's about time you start doing it yourself. I know that you always expect the woman to pick up after you.\" He was going to deign it but I stopped him. \"Don't deign it Bill you may not even realize you do it but you do. If your going to dress like a women then I expect you to start acting like one. You are going to pick up after your self. Until you start acting like a adult lady I'm going to treat you like a little girl when I start seeing you doing the things an adult women does then I'll treat you like one and that means the cloths you wear too. Lets go to bed we have to meet with Brenda at ten and I want to go to the mall before Pamela gets here. And we need to go to the grocery store.\" We walked into the bedroom and I looked down at his cloths on the floor. Bill picked up his undergarments and put them in the hamper. Then took the dress and threw it on the floor of his closet. \"Bill where is my dress. He looked in the closet and saw it hanging. Then he said. \n\n\"Mine has to go to the cleaners so there's no sense in hanging it up.\" I walked over to Bill and said \n\n\"\"This section of my closet is for things that have to go to the cleaners. That section is for clean cloths. If I threw my cloths that had to go to the cleaners on the floor of the closet I wouldn't be able to find my shoes.\" Bill hung up the dress. I got into bed and set the alarm. Bill came to bed and curled up next to me I kissed him and said goodnight. Now came the part I was dreading Bill started rubbing my breast. I pulled his hand away and said\n\n\"Honey little girls don't have sex.\" I kissed him on the cheek and rolled over. It was the hardest part, I have never turned down Bill before and I didn't want to now but I knew it had to be done. How he coped with it was his problem and how I coped was mine.\n\nI woke up Sunday an hour before the alarm went off. I was horny and not in a good mood sleep came hard and when it did it was short. I showered then dressed in shorts and a tee. Then went down stairs. I made coffee and sat down to make up two lists. One for groceries, and one for the mall. I still wasn't sure how I would handle Pamela. I'll have to play that by ear. Bill came down an hour later. He didn't look like he had much sleep either. He asked what he should wear. \n\n\"Panties, slacks and a golf shirt will be fine. Wear some stockings and sneakers. And bring the black four inch stiletto heels with the sling back.\" Bill came back down dressed. Bill started to say he was sorry I stopped him by saying\n\n\"Bill don't say you're sorry because it's not your fault it's mine. I wanted you to become my girlfriend and I gave you all the cloths to do it with and you were taught how to put on make up. But I never taught you how to be a girl. Girls don't have their hands down their dates pants in a club, they don't have sex it the back seats of cars while their girlfriends are driving. So I'm going to teach you how to be a girl then you can become a woman. Lets get to Brenda's and get this over with. If it wasn't for this appointment I wouldn't be doing this you're not ready.\" \n\nI walked out to the car and Bill followed behind. He drove to Brenda's and while she did the fitting on Bill I looked around her shop. I really wasn't in the mood to shop. After the fitting I had Bill drop me off at the mall. I gave him the list for the grocery store. \n\nI bought six pair of plain cotton white panties and three training bras six pair of white ankle socks and a pair of Mary Jane shoes. In the dress department I found a couple dresses that on Bill would look like a little girls dress and a few cotton nightie.\n\nWhen I came out of the mall I found Bill waiting. We drove home I took Bills new cloths up stairs while he put away the groceries. I took all his satin and lace panties and bras, stockings, garters, dresses and locked them in the spare bedroom. I set out a dress, panties, socks and the Mary Jane's and when down stairs. Looking at the clock I knew Pamela would be here shortly. I said to Bill.\n\n\"I placed some cloths for you on the bed if you don't want to wear them I'll not say a word. You may not like what you find. It's up to you where we go from here.\" Bill thought for moment then went up stairs. I poured myself a glass of wine and stood in the kitchen and waited for Bill to come down.\n\nI thought things over and realized I was punishing Bill and myself. I didn't do anything wrong and Bill didn't do anything wrong he was just being a guy. Bill came into the kitchen. I looked at him. He looked ridicules standing there in that dress that was way too short for him. It barely came down to his waist. I started to giggle then I started to laugh. I could see that Bill was embarrassed and my laughing didn't help any. My laughing subsided as I went to Bill and put my arms around him I said \n\n\"I'm sorry for laughing honey I was so upset I tried to make you into little girl and I made you into a clown instead. Lets take you up stairs and get you dressed properly.\" Bill looked down at me and said with tears in his eyes. \n\n\"If you want me to wear this I will. I'll do whatever you want me to do. I just need you to tell me what you want. When you said those thing to me last night I realized I was acting like a whore and a slut. It wasn't the way a woman acted in public. You had every right to be upset.\" \n\n\"Honey you go upstairs and in the spare bedroom you'll find all your things. Put on stockings and panties and a camisole. Then put on the slacks and shirt you had on this morning. We'll talk to Pamela first before we introduce her to Glenda. Just to make sure she can handle the situation. Now go before she gets here.\" I said and gave him a slap on the butt as he when. That laugh helped my mood so much. I felt more relaxed then I had all day. \n\nTen minutes later the doorbell rang. I open the door to find a woman I didn't know. She had on a short mini dress and stopped four inches above the knee, her hair was loose and stopped half way down her back. Her make up was heavy but not sluty, she had long slender legs and on her feet she wore three- inch pumps. I asked. \"Can I help you?\"\n\n\"Sheri it's me Pamela. Bill's secretary.\" She said with a confused look on her face. I invited her in and said.\n\n\"I never would have recognized you. You look so different. I never knew your hair was that long you always wore it up and that body where have you been hiding it.\" \n\n\"You did say to dress sexy. I though my hair looked better down. This in not my business look. Did I do ok? I mean dressing sexy.\" \n\n\"Oh you did wonderful. You look so much prettier than you did Friday. I just hope you don't steal Bill away from me.\"\n\n\"I'm so glad you approve. I wanted to make a good impression. And I just wanted you to know that Bill and I would never do anything together without your permission.\" I pulled her too me I could feel her body tremble as I kissed her on the mouth. Her lips where soft and at first resisted the probing tip of my tongue. I persisted till she allowed me entry. My tongue snaked into her mouth and it caressed her tongue as my hand caressed her right breast it was soft softer than Jenny's or mine and larger than ours as well. Her nipple was already hard I knew she was already aroused her pussy was probably dripping. Her body stiffens as I pinched her nipple just slightly. I pulled my mouth from hers. I turned and saw that Bill had come down. \n\n\"Bill what do you think of Pamela. Isn't she the sexiest thing?\" \n\n\"She's lovely, I can't believe this is the same women I've been working with for the last three years.\" Pamela was blushing now as I held her hand I could feel it shake even more. I knew it was because Bill was close by and she wanted him so much. How she contained herself I didn't know. So I said\n\n\"I think she deserves a kiss for getting dressed up so sexy for us don't you Bill.\" Bill moved closer taking her in his arms and said.\n\n\"She deserves at least that. And a lot more.\" Bill pulled her to him and kissed her He placed his hand on her bottom and pulled her even closer. If Bill had a hard on she would be able to feel how big he was. I was hoping that he hadn't so I could see her face when he grew. It is a sight to behold. Their lips separated Pamela's head rested on Bill's shoulder as she got her breathing under control. Then I said \n\n\"Bill would you open some champagne and bring it into the living room.\" Bill released Pamela and went to do my biding as I took Pam's hand and lead her into the living room. \"Isn't he a wonderful kisser? I could kiss him all day and never get tied of it.\" She nodded her head in agreement as we sat on the sofa. \"Did Bill have a hard on when he kissed you?\" \n\n\"No I don't think he finds me attractive. This may sound terrible of me but I did rub myself against him to see how big he was but I didn't feel anything. I guess I don't excite him.\" I could see she was disappointed in Bill lack of response. \n\n\"Pam, I told you that Bill likes to wear women's cloths. He has learned to control his erection so that it doesn't show when he wears a tight dress. So just because he didn't get an erection doesn't mean that he isn't excited by you.\" Bill came in with the champagne and gave Pam and I each a glass. \"Bill, Pam thinks you not attracted to her because she didn't feel your erection. Do you think she's exciting?\" Bill sat down on the other side of Pam and took her hand in his and said \n\n\"I do find you exciting but I'm learning to control my urges. I hope you understand it's something I have to work on.\" Then I said \n\n\"Pam would you like to see Bill's cock?\" She nodded her head. \"Bill would you remove your pants and shirt?\" Bill stood and pulls his shirt off his head and then pulled his pants off. \"Now your panties please.\" Bill pulled them off as well His cock was still soft as it laid on top of his shaved balls. \n\n\"Would you like to feel it Pam, While Its still soft?\" Pam reached her hand out and cupped his balls in one hand and the other touched his cock. She touched it gently as if she could break it just by touching it. \n\nI looked up at Bill I could see he was trying to keep it down. His eyes met mine and I nodded to him to let him know it was all right to become erect. I could see him relax his concentration and his cock began to swell. \n\nPam went to her knees in front of Bill still holding on to his cock and balls. I could see the amazement in her face as Bill's cock swelled to four times its soft state. When it was three quarters hard Pam took her hands away as she looked on in shock. I knelt down behind Pam. I put my arms around her and nuzzled her neck and said. \n\n\"Isn't it lovely? Bill has one beautiful cock doesn't he?\" Pam was visibly shaken by the size of Bill cock. \n\n\"It's so big. I never though it was that big. The few times I did see his bulge I thought it was a full erection obviously it wasn't. I don't know if I can handle all of him. I never had any one as big as him.\" \n\n\"Don't worry Bill is very genital the first few times till he knows you can handle him. He's an excitant love he'll make you cum many, many times. Touch it, put your hand on it.\" Pam reached up and touched Bill cock; she wrapped her hands around the shaft and moved her hand up and down. I signaled Bill to step closer. I drop of precum had work it's way out of his cock. I asked Pam \n\n\"Would you like to taste his cock, take it into your mouth?\"\n\n\"I never done that before.\" I reached up with my finger and scooped up the drop of precum and brought it to her lips and smeared it on them. Her tongue licked it from her lips. I could see she wasn't turned off by it as her tongue tried to lick off more from her lips. \n\n\"Take the tip into your mouth. Lick his head clean.\" She pulled Bill's cock down to her mouth and her tongue lick up his precum that had dribbled out of the tip. Then her mouth surrounded the head as her hand pumped his cock. I pulled the zipper of her dress down and slid it from her shoulder. She was wearing a mint green lace bra and matching panties that were virtually see though. The dress was bunched up around her knees I was worried that if Bill came and she didn't drink it all down that some would get on her new dress and ruin it. \n\nI looked into Bill face I could see he was close to cumming but was holding back. She wasn't giving him a real good blowjob. But the fact that he was her first and all the playing Bill had done in the club last night and he hadn't cum since yesterday morning was getting to him. I put my hands on her tits as she took more cock into her mouth. The head and maybe an inch passed it. She knew what had to be done but didn't have the experience to do it right. I said to her. ",
        "\"Do you want him to cum in your mouth? Do you want to tasted his delicious cum?\" She debated with herself I could see it in her eyes. She wanted to but was afraid. I reached down into her panties and played with her shaved pussy sticking my finger into her. Her response was to kneel up right and take more of Bill's cock into her mouth. \n\nI said, \"if you don't want to, just shake your head no and Bill will pull out before he cums.\" Pam didn't shake her head no, but didn't nodded yes either and I didn't want her to get a mouth full if she wasn't ready for it. But she did place her hands on the back of Bill's stocking covered legs and pulled him closer to her as she took in more of his cock. For some one who never suck cock before she was really getting into it. I looked into Bill face and I could see he was really trying to hold back. He looked at me and I shrugged my shoulders. Then Bill said \n\n\"\"Pam honey I'm going to cum baby stop now if you don't want me to cum in your mouth.\" \n\nShe never stopped sucking his cock as I saw his balls pull up close to his body and then I saw his cock swell even larger. I could tell that it surprised Pam because her eyes open wide. Then Bill grunted as cum raced up his cock into her waiting mouth. I touched her clit at the same time sending her over the edge into her own orgasm. \n\nShe tried hard to keep up with Bill's cum load but in the end she couldn't do it. It's too hard trying to swallow Bill's copious load of cum while your cumming yourself. I placed my other hand under her chin to catch any cum escaping her mouth so it didn't fall onto her pretty dress. \n\nOnce Bill's cock stopped cumming and started to deflate Pam released it from her mouth and fell back against me panting. Bill knelt down in front of us and sucked the cum from my hand. Then he kissed me. I could tasted his cum in his mouth but I couldn't find any then he kissed Pam and licked up the cum that was still on her face. Then he took both of us in his arms and hugged us.\n\nAfter Pam had recovered and Bill had moved back. I asked her. \"Well do you like sucking cock now?\"\n\n\"I like sucking Bill's he didn't try to fuck my mouth like I heard men do. He just let me work at my own pace and didn't try and force me into something I didn't want. When you asked me if I wanted to swallow his cum I didn't think I did, but I couldn't stop sucking his cock. It felt so good, warm and silky smooth. When he did start to cum I just knew I had to try it, to see if I liked it then you touched my button and I came with him. It was so wonderful I just kept swallowing his cum until I couldn't keep up.\" \n\nBill went into the kitchen to refill the champagne glasses while I moved back to the sofa and Pam stayed on the floor her dress still punched up around her knees. She leaned over and kissed my thigh. Then she started to work her way up my thigh till I stopped her. She looked confused and said. \"Don't you want me to please you?\" \n\n\"Yes of cause I want you to put I need a shower I can't enjoy myself unless I'm clean, and we still need to talk. We also need to get dinner on. Bill's not a very good cook so I have to do it.\" \n\n\"I can cook I'm pretty good at it. I can cook dinner while you take a shower. Then we can talk though dinner.\" I thought that was a good idea I wasn't that good of a cook myself. When Bill came back in with the champagne I said\n\n\"Bill would you bring in Pam's thing's I'm sure she'll stay the night and then show her around the kitchen she's going to cook dinner while I take a shower and get dressed.\" turning to Pam I said \"I hope you don't mind but I like to dress for dinner I don't like to eat naked.\"\n\n\"No that's fine with me. Even at home when I'm alone I can't eat naked I have to at lease put on a pair of shorts and a tee.\" after Bill went out to her car she asked \"Will Bill be dressing up too for dinner?\" \n\n\"How do you mean dress up?\" I knew what she meant but I wanted to hear her say it. \n\n\"Will he be wearing a dress? I was hoping to see what he looked like dressed as a woman.\"\n\n\"I'll ask him if he would but if he doesn't want to I won't make him.\" She stood up and put on her dress again I help her zip up the back. We kissed once more as Bill came in with her bags. I told him to put them in the spare bedroom for now and follow him up the stairs. Once up stairs I asked Bill. \"Do you think Glenda can come to dinner tonight? Would you be comfortable doing that with Pam here?\" \n\n\" I don't see why not she has already seen what I'm wearing under my male cloths and it didn't freak her out. I don't see why she wouldn't accept me in a dress and make-up do you?\n\n\"She was wondering if you would dress as a woman tonight. I said I'd ask but wouldn't force you to. Do you want me to pick something out for you or would you like to do it yourself?\" \n\n\"Are we getting real dressy or just something pretty?\"\n\n\"You saw what she is wearing. I'll wear something similar. Not cocktail dresses but not jeans either.\" I said \n\n\"I'll pick something out and if you don't like it. Then you can pick out what you think I should be wearing.\" \n\n\"Ok but first go down and show her where everything is in the kitchen. She says she knows how to cook.\" After Bill when down stairs I called Jenny\n\n\"Hi there sweetie does Bill still have his balls?\" She asked\n\n\"Oh yes I wouldn't cut them off I still like getting fucked by him. If I cut them off the I might as well cut my clit off too.\" \n\n\"We wouldn't want you to do that. So has Pamela showed up?\"\n\n\"Yes she down in the kitchen making dinner right now.\" \n\n\"You don't waste much time do you?\"\n\n\"She volunteered, I didn't make her. My best meal is Chinese take out.\"\n\n\"So your not mad any more. You really where upset last night.\" \n\n\"No I just need to explain the fact of being a girl to Glenda she understood and I think she forgives me I hope you two do. I was pretty bitchy last night. \n\n\"Don't worry about it girl we all get nasty sometimes. How about the two of us having lunch tomorrow?\"\n\n\"I don't eat lunch I go in a half hour early so I can spend a solid hour in the work out room and then I have a half hour to shower and get dressed and get back to work. I do that about three or four times a week five if I'm feeling fat.\" I told her last week I didn't get in the work out room once.\n\n\"I can't see how you could ever feel fat. But I guess that's why you're a size three. Maybe I should start that too I could shed a few pounds.\" She needed to loose a few ponds like I need shrink a couple of inches in height.\n\n\"The only place you could lose a few pounds is in your tits and I like them just the way the are. I really exercise to stay in shape and keep my muscles toned up.\" \n\n\"I like my tits the way they are too. I have to go we're going to Jim's moms for dinner and we have to leave soon. I'll talk to you tomorrow after work.\" I said my goodbyes and hung up just as Bill came in the room holding a yellow dress with a jacket to match. I knew the dress, the skirt was pleated and it stopped about two inches above the knee it was quite attractive on him. In fact I wished I bought one just like it for myself, it would have been perfect to wear to work. As I started to strip my cloths off I said\n\n\"That's more of a business suit maybe something a little more sexy.\" I looked in his closet and found a red leather dress and a jacket to match the dress stopped about mid thigh on him. \"How about this it's very sexy on you.\" Bill agreed and with that settled I when in for my shower. \n\nBill came in to the shower as well we washed each other. When he started to get frisky I stopped him telling him I didn't want leave Pamela alone to long and we still had to get dressed. After getting out of the shower I started to fill the tub I figured we could all soak in it later tonight. And thanks to the whirlpool heater it will stay hot. \n\nI put on my make up and did my hair then let Bill have the make up table. I put on stockings and my garter belt then I put on a black leather mini skirt and a black leather tank top, being braless my nipples harden as soon as they felt the leather tank top. Being panty less and braless was something I normally don't do. I felt naked even though I was fully dressed. I then don a black leather jacket. The tank top stopped about half way down my tummy and the skirt rested on my hips exposing my belly button. I put on a pair of four-inch stiletto heels that had an ankle strap. Looking at myself in the mirror I thought I looked pretty sexy. I was glad Jenny talked me into this outfit it was expensive but definitely worth it I hope Bill thought so too. The smell of the leather was very erotic. I turned to Bill he was occupied with putting on his own makeup and hadn't seen what I was wearing. I cleared my throat and Bill looked in my direction. \n\n\"Wow that's. You look. Dam that's hot. Is it new?\" He stuttered. \n\n\"Does that mean you like it. It was offal expensive. I hope you don't mind.\"\n\n\"Mind no I don't mind. It was worth every penny you paid for it.\" I walked over to him and reach for my earrings on the makeup table and in the mirror I could see him inhale the scent of the leather. I placed my hand on his ear and said\n\n\"Doesn't it smell erotic it makes me horny just smelling it.\" \n\n\"I don't know whether to rape you of worship you. Which would you like me to do?\" He asked. \n\n\"I'd like you to get ready so we can go down stairs and eat dinner. Then we can play around.\" Bill quickly finished up and got dressed. His make up skills had definitely improved being with Ginger. Once he was ready we walk down stairs together. Bill was walking with an air of confidence now. He seemed more relaxed with wearing women's cloths I told him so once we were on the first floor. He said\n\n\"Going out last night and passing help a lot. I just hope Pamela thinks it's ok.\" \n\n\"You come in to the kitchen after I introduce you.\" He nodded his head and waited out side the kitchen door. I walked into the kitchen and Pam was busy at the sink. I cleared my throat. Pam looked over her shoulder at me and dropped what was in her hands. I had that naked feeling again as her eyes scanned over my outfit. Her mouth hung agape as she tried to say something. I walked to her and closed her mouth and kissed it then I said\n\n\"I'd like you to meet my husband and girlfriend Glenda.\" I waved my hand to the door her eyes turned as Glenda walked in. She looked back at me and then at Glenda and then back at me and said \n\n\"That's Bill, are you sure?\" \n\n\"No honey that's Glenda. She left Bill when she took off her male cloths.\" \n\n\"I mean that not someone else. That really is your husband, my boss.\" \n\n\"Yes sweet that's you boss. She's pretty isn't she?\" I waved Bill over to us and Pamela took her hand and said. \n\n\"I'm glad to meet you Glenda I hope we can be real good friends.\" I could see Glenda was almost gushing with the acceptance in Pam's eyes. Glenda said\n\n\"Thank you I would like to be your friend too. Do you need any help with dinner?\"\n\n\"No I'm just finishing up. You two go in to the dinning room. While I serve, it's not to fancy I didn't have a lot of time. Next time it will be better. If there is a next time.\" She said a little cautiously I could tell she want there to be a next time. \n\nGlenda and I went into the dinning room and took our seats. Me at the head of the table with Glenda to my left Pam would sit to my right. Pam bought in the salad and a honey-mustard dressing. I didn't remember having honey mustard dressing in the fridge. So I asked \n\n\"Pam I don't remember having any honey mustard dressing in the house where did you find some?\" \n\n\"I made it from scratch. You had all the ingredients. Do you like it?\"\n\n\"It's wonderful I never tasted anything like it.\" Then I asked. \"Pam why do you want to be my slave? You don't have to be I'll still let you have Bill once in awhile so there's no need for you to become my submissive.\" \n\n\"I though about this last night after I came home from shopping. I ask myself that very question. And the answer I came up with is. I need to belong to someone. If Bill and I started to have sex on a regular bases, I still wouldn't belong to him. He would always belong to you. I love him so much I don't think I could ever find someone to replace him. And by becoming your submissive I would belong to you and I'd still would be near the man I love.\" I listened to her speech and I knew what it was like to belong to someone. It was the best feeling to have someone to come home to and someone to say good night to. \n\n\"And your willing to do what ever I say. When I say it?\" I asked \n\n\"Yes what ever you say. When ever you say. I told you yesterday I need some one to tell me what to do. I'm only happy when I am being told what to do. I don't like making decisions for myself.\"\n\n\"I have to discuss this with Glenda. So I can't give you a decision right now. But for tonight you can be my new slave and we'll see what happens. But one thing for sure your going to have to get better at giving blowjobs because Bill and Glenda really like getting blow jobs. Your going to have to learn to deep throat him he really likes that. Now what else is for dinner?\"\n\nPam jumped up and took the salad plates away. While she was gone I asked Bill. \"What do you think? Do you think she's sincere?\"\n\n\"For as long as I've know her she has never lied about anything. I know what she means by wanting to belong to some one. So yes I think she's sincere. I felt sorry for her when she said she never belonged to someone.\" Pam came back in with the main course. Baked chicken, green beans and, a baked potato. After she sat down and we started eating I asked \n\n\"Pam would you consider moving in with us if I took you on as my submissive on a permanent bases.\" \n\n\"If that was what you would like I would love too.\" She said with out hesitation \n\n\"You have no qualms about giving up you home and you life.\" I wasn't sure she was thinking this through. \n\n\"Sheri my home is a one bedroom flat three blocks from the office I used to work at. There's nothing there I would miss that I couldn't bring with me mostly pictures and books. My life was my work. I have no life. I tried for a while to go out to clubs but I could never fit in. So mostly I just stayed home and watched TV or read.\" After we finished eating she said. \"I didn't have time to make desert. I can do it now if you would like.\"\n\n\"None for me I'm full.\" I said and Glenda said the same. Just then the doorbell rang. \"I'll get the door. Glenda help Pam with the dishes please.\" I went to the door and it was Jim and Jenny I asked them to come in. \n\n\"We're not interrupting anything are we? Dam girl that outfit looks great on you aren't you glad I talked you into it?\" Jenny asked as she pulled me close and kissed me.\n\n\"Come on in and meet Pam. We just got through eating dinner.\" I escorted Jim and Jenny into the kitchen. \n\n\"Pam this is Jenny and Jim Marsh. Bill is Jim's new partner so you'll be seeing a lot of him.\" \n\n\"Mr. Marsh and Mrs. Marsh it's so good to meet you. I hope you'll find me as good a secretary as I can possibly be?\"\n\n\"Pam the first thing you'll find is that at the office we're strictly on a first name bases So I'm Jim and my lovely wife is Jenny. And we're glad to have you, Bill and Sheri have said so many good things about you.\" Jim told her. I asked Glenda to bring wine to the living room and escorted Jenny and Jim in there. Jenny then said. \n\n\"She's really pretty. I wouldn't mind getting a little of her.\"\n\n\"If you're a good girl I'll see what I can do.\" I said\n\n\"Being a good girl has never gotten me what I want right now. So do you think she'll work out? I mean with us. Do you think she can be discrete?\" \n\n\"I don't think there will be a problem. She's a really sweet girl, but very lonely.\"\n\n\"That's too bad. I hate to see anyone lonely. Speaking of lonely Jim has some exciting news to share don't you love.\" Glenda came in with the wine and I asked her where was Pam and she said\n\n\"Pam's is finishing up in the kitchen. She did want to intrude.\" \n\n\"Jim can Pam hear this news or should she stay in the kitchen.\" I asked\n\n\"Anyone can hear this news for me it the greatest news I could think of.\" I called to Pam when she came into the room I said\n\n\"We have guest it's discourteous to be in another room while their here.\" Pam sat down next to Jenny on one sofa while Jim told us his news.\n\n\"Jenny and I were at my mothers house for dinner. When during the meal my mother asked if I could find my sister. I told her I was sure I could find her if she wanted me too.\" At this point Jenny fill Pam in on what happen between Jim's mother and sister. Then he continued. \"She turned to me and said 'You know where she is don't you?' I never could lie to my mother. I told I knew right where she was and I've been in touch with her quite often. What she said next really surprised me. She said at lease I wasn't as foolish as she was. Then she started to cry and asked if I could call her, and ask her if my mother could talk to her. So I called my sister and told her what had happen and asked her to talk to her. She said she'll listen to her but if she started calling her names again she'd hang up. I gave the phone to my mother and the first thing she said was she was sorry for not understanding my sister and that if she would let her she would like to make up for lost time. When we left they had been talking for a half hour. I need to call my sister to see what happen if it's ok.\" Glenda took him to the den and left him there. Then Jenny said \n\n\"I can't believe that old bat finally caved in. Their both head strong I didn't think either of them would give in.\" Jim came out a few minutes later and said\n\n\"Gwen's coming home in a couple of weeks and my mother insisted she bring Karen, her life mate with her. I hope that means this is all over. I guess we had better be going now.\"\n\n\"You don't have to.\" I said \n\n\"\"No we better get home so if my mother calls I can be there. Pam it's been nice to meet you I'll see at work tomorrow. Glenda Would you like to ride with me or take your own car?\"\n\n\"I take mine tomorrow.\" Jenny and Jim left then Pam said.\n\n\"When you said Jim knew about Glenda I didn't think he knew her that well He didn't even bat an eye.\" I giggled and said\n\n\"Pam someday I tell you just how well Jim knows Glenda.\" \n\n\"Now that's a story I think I'd like to hear. But right now I have to get that kitchen cleaned.\" She said as she when to the kitchen Glenda was right behind her when I asked her to stay. \n\n\"What do you think? About Pam I mean.\" \n\n\"She seems to be happy I don't think I ever seen her as happy as she is now. She always seems depressed at work. In the kitchen while she was cleaning up. She was humming to herself.\"\n\n\"How about we take her in for a week. She can go home tomorrow after work and get what she'll need for the week and stay with us till next Sunday then we'll see what happens.\" \n\nGlenda agreed that a week was good and then went in to the kitchen to help her out. I wish they would hurry and get done. The smell of the leather was driving me nuts. Twenty minutes later an eternity in my aroused state they were finished. The both came in to the living room and Pam ask\n\n\"All done what else would my mistress like.\" \n\n\"I like to see what my new sex slave has to offer. Strip.\" Pam hesitated then slowly pulled down the zipper on the dress and let it fall from her shoulders then she stepped out of it and laid it neatly on the sofa behind her. Then she unsnapped her bra and removed it laying it neatly on her dress then she slid her panties down her legs. Stepping out of them I held out my hand and she deposited them in my hand. I lifted them to my nose. They were wet. The crotch was soaked through, her smell was heady I could tell I was going to enjoy eating her. She went to unbuckle the straps of her garters when I stopped her. ",
        "\"That will be fine now come closer.\" \n\nI leaned forward and inspected my slave. Her tits were about a C cup they sagged a little but were still standing on their own. Her nipples were erect she obviously was enjoy my commands. Her tummy was flat and hard she must be doing some exercises. Her pussy was shave as I had asked. Her slit was damp with her dew. I ran a finger though her slit it came out wet I tasted it. It was sweet with a tangy after tasted. I then pressed my finger to her love button and she gave a muffled cry. I stood and took her left breast in my hand and felt its firmness. Then I pinched her nipple and said \n\n\"This nipple will look good with a slave ring in it.\" I wanted to get her reaction there was none? \"Do you know what a slave ring is slut?\" \n\n\"No Mistress.\" She said her body trembled when I called her a slut\n\n\"Glenda show her yours.\" Glenda pulled off her jacket and lowered her dress to expose her ring. \"Glenda had that put in to show her servitude to me. If you want to be my slave you can earn one too. See how her nipple is erect its stays like that all the time. Would you like one too?\" I asked as I pinched her nipple harder\n\n\"Yes Mistress I would like one just like it.\" She said as a tremble past though her body then a moan escaped her lips. \n\nI released her breast and walked behind her. I took a cheek in each hand they were firm and small not the usual ass cheeks of a secretary. Then I told her spread her legs and to bend over. She did as I commanded. I spread ass cheeks apart and saw her rose bud. I took some juice from her pussy and spread it on to her rose bud. It winked closed. Then I said\n\n\"Glenda your going to love fucking this hole it look's so tight.\" I heard her moan again as Her asshole closed tighter. I told her to stand again. \"Take your cloths and go upstairs to the master bedroom it's right at the top of the stairs. We'll be right up.\" \n\n\"Yes Mistress.\" She said as she quickly picked up her things and when up stairs. Once she was out of hearing range I turn to Glenda and said\n\n\"What do you think none of that seem to phase her?\"\n\n\"Don't you think you were being a little harsh on her?\" \n\n\"Maybe a little but you know I would never make her do anything she didn't won't to.\" \n\n\"You didn't see her eyes when you said that I was going to fuck her ass. They where as big as saucers.\"\n\n\"Ok I may have went a little over board with that remark, But I didn't hurt her. Not like I did with you the first night.\"\n\n\"True but I did deserve that. She hasn't done anything wrong.\"\n\n\"I'll go easy on her the rest of the night. Do you think you can fuck both of us tonight.\" \n\n\"I will do my best.\" I was sure he could but I wanted to make sure he fucked her good but I needed to get off too. \n\n\"Come on let's go upstairs and fuck her and see how good she is at eating pussy. Grab a bottle of wine and some glasses.\" We went up stairs and found Pam standing in the middle of the room still holding her cloths. I walked over to her and said, \"Are you ok would you like to leave.\" \n\n\"I'm fine and no I don't want to leave. I just didn't know what to do with my cloths.\" \n\n\"I'll show you were Glenda put your bags and you can hang your dress in there.\" I took her to the first spare bed room and she hung her dress in the closet and said\n\n\"Are these your cloths they're some really pretty things in here?\" \n\n\"Those all belong to Glenda we're storing them in here till we can get the small room next to the master bedroom turned into a closet. Then we'll move them in there.\" I took her hand and said. \"Pam honey I don't what you to do anything you don't feel comfortable with all I ask is that you try every thing once before you say you don't want to do some thing. But if you really don't want to try it then you don't have to.\"\n\n\"I want to try everything except Glenda putting her penis in my bottom. I don't think it will fit.\"\n\n\"Honey I didn't think it would fit up my bottom either but it did and after the pain went away it felt great. Bill's a very genital lover he knows how big he is and he doesn't want to hurt you. You can trust him to make it a very pleasurable experience no matter where he puts his cock. And anything that big is a cock. Penis sounds small and they're nothing small about his cock.\" I said laughing along with Pam \"Come let's go have some fun.\" \n\nWe went back to the master bedroom while we were gone Glenda had removed the comforter I notice that the sheets had been changed. I said to Bill \n\n\"When did you do that? And why?\"\n\n\"You always change the bed linen on Sundays and Wednesdays unless we have a lot of sex then you change them more often. So since it was Sunday I changed them this morning when I got up.\" \n\n\"You knew I changed them. I didn't think you noticed thank you I did forget today.\"\n\n\"I notice everything you do I just forget to acknowledge you do them. You where right last night I need to act more like a women if I'm going to dress like one.\" I gave him a big hug and kiss because he didn't just think I was being a bitch last night. He understood what I was saying. \n\nI pulled off my leather top and realized the one draw back of leather it may be sensuous but it made you sweat. I said to Bill. \"That leather made me all sweaty I'm going to take a quick shower.\" Pam and Bill felt the same so we all went into the shower. I knew where this was going to lead and I welcomed it. \n\nBill started washing my back as Pam started washing my front. She paid a lot of attention to my tits while Bill set his sights lower. I pulled Pam to me and kissed her. Our tits mashed together, sliding on to each other as Bill knelt behind me. He soaped up my butt cheeks and then washed between them. The feeling of kissing a sweet tender mouth and having someone massaging my bum hole was exquisite. \n\nBill's thumb slid into my asshole at the same time that Pam pinched my nipples. My mouth released Pam's as I gasped for breath she took one of my nipples into my mouth and sucked hard on it. Bill then started licking my asshole at the same time. I threw my hands out against the wall as Bill stuck his tongue up inside of me, and Pam stuck her finger in my pussy. Pam bit down on my nipple as she slid another finger in my pussy Bill's tongue sawed in and out of my rear hole fucking me with his tongue. \n\nBeing doubled teamed like this was fantastic I wasn't sure who was going to do what next. Pam's thumb massaged my clit sending me in to orgasm. My body shook as Pam sucked my nipple and then stuck a third finger into my pussy as I sat firmly on to poor Bill's face I new I was smoothing him but in mid orgasm I didn't care. \n\nMy orgasm subsided slightly and I pulled Pam's mouth from my breast. I leaned onto her as I slid off Bill's mouth. If Pam wasn't there holding me I would have fallen. \"Enough. I can't take any more for now. Did you two plan this?\" I heard a chuckle from Bill and a giggle from Pam. \"You two did plan this didn't you.\"\n\n\"Pam was worried that you would be more concerned about her having a good time and not having one yourself. I knew you would want to take a shower before we got into bed. So I told her we would take care of you in the shower.\" I took Pam in my arms an kissed her and said\n\n\"Don't worry about me I always have a good time. I think Bill should treat you to a little of what I just got don't you Bill.\"\n\n\"It would be my pleasure.\" I turn Pam around and faced her to me as Bill started rubbing his hands on her bottom. I could see Pam was a little apprehensive about what he was going to do so I said\n\n\"Relax your going to love this.\" I started massaging her tits as Bill started licking her ass crack. \n\n\"Oh god he's licking my bottom.\" I kissed her forehead then she said. \"He's licking my anus.\" \n\n\"Isn't it wonderful I love when he does it to me?\" Pam then grunted then laid her head on my shoulder \n\n\"He's trying to push his tongue inside of me.\"\n\n\"Relax let him in. You won't regret it.\" I could feel Pam relax and then she said\n\n\"Oh my god. Oh shit he's fucking my ass with his tongue.\" Her eyes were twice as big as normal her mouth was open in shock that Bill was doing something so dirty, something so wild, something she never thought she would let anyone do. It was dirty and nasty and she loved every minute of it. I could see her hips moving, grinding her ass on to poor Bill's face as he fucked her with his tongue. \n\nHer nipples were hard in my hands. I watched her face as she experienced something so wild. It was a face of pure lustful pleasure. I moved my hand down to her tummy and played with her belly button before I moved down to her bald pussy. I found Bill's hand already there. I felt his hand move in and out. I confined my fingers to play with her clit. It was hard; aroused by the things Bill was doing to her. I squeezed her clit and her nipple at the same time. She looked up at me, mouth open her eyes larger than I ever seen them. \n\n\"O god Oh my god I going to cum. Sheri I going to cum.\" She did cum forcefully her body shook. The noises coming from her were animal noises grunts and moans whimpers and shrikes as her body was racked by orgasm. She fell on to me as she slid from Bill's face. \n\nI caught her in my arms as she pushed us both against the tile wall of the shower. I held her to me as she continued to tremble in my arms. I looked over her shoulder Bill was kneeling on the shower floor panting for air. His cock was hard as a rock so he must be enjoying himself. Pam recovered her senses and said\n\n\"That was the most intense orgasm I have ever had. I never though anyone would do such a thing. Does he do that to you often.\"\n\n\"I never let him do it before last week. But after the first time I regretted I didn't let him do it a long time ago. Bill are you ok?\" Doing both assholes to orgasm was a bit much for him; He just gave me an ok sign and continued to catch his breath. I reached over and turned off the shower. It was time to start some serious fucking. I didn't know about Pam but I wanted some hard cock in me. \n\nBill and I went to the bedroom after we dried off, Pam took longer to dry her hair. \"Are you ok Bill? You looked like you where having a problem in there.\" \n\n\"I guess your right about me getting back to running again. Being with out air twice like that is a bit much.\" Bill put on a pair of panties and a camisole. I didn't bother I knew we'd be in the tub before the night was over. Pam definitely, it's the best thing after Bill stretched her out. I laid on the bed and Bill laid down next to me. We kissed while we waited for Pam to get done. When Pam came out of the bath room I had her lay down next to Bill and said\n\n\"Pam I want you to suck Bill's cock. You going to do it a lot till you get good at it. But I don't want you to make him cum.\" I had Bill sit up with his back to the headboard of the bed. Pam was on one side and I was on the other. Pam took Bill's cock in her mouth and started sucking like she did earlier. She was doing a better job at it but her heart wasn't in it. That's when I realized the problem with her, she wasn't making love to his cock the way I did.\n\n\"Ok Pam I know what the problem is. Bill would you make love to her the way you make love to me?\" Bill slid down to lie next to Pam and started kissing her I got off the bed and sat in the armchair that we keep in the bedroom to watch. They kissed for a while and then Bill worked his way down to her breasts and made love to each one. Sucking on each nipple. Then he moved down to her belly and kissed her all over her tummy and sucked on the button. Then he moved down to her pussy and started licking her there. Pam was really excited. I'm sure she dreamed of this many, many times. Bill ate her to two orgasms before he slide back up to kiss her face. Pam then said \n\n\"Please put it in me.\" I was pretty sure I knew what Bill was going to say. At least he better say it.\n\n\"Put what in you Pam?\" \n\n\"Your thing put it in me.\"\n\n\"What thing is that?\"\n\n\"You know please Bill put it in me.\" Bill was doing the same thing he does to me. She wasn't getting any dick until she said it. \n\n\"You have to tell me what you want Baby. I give you what you want you just have to tell me.\" Bill told her. I could see she making up her mind. It's not easy for a woman to be so vulgar.\n\n\"Fuck me Bill fuck me with your big fat cock. Put it in my pussy and fuck me with it.\" Bill moved between her legs and placed his cock at the entrance to her cunt. I wanted to watch it go into her so I sat on the bed. Bill slid about an inch in to her when she said.\n\n\"Oh Bill it's so big.\" Pam grabbed my arm I was using to balance myself with. I took her hand in mine and Bill slid another inch into her. I looked up at Bill I could see he was worried that he was causing her pain. She must have been pretty tight. Bill slid in another inch when Pam let out a grunt. When she grunted Bill pulled out a little and asked \n\n\"Are you ok Pamie Did I hurt you?\" \n\n\"A little but its all right now.\" Bill slid back in what he took out. Pamie grunted again not as loud as before. Bill started to pump in and out only as deep as he had gone when she grunted. Then Bill started going in a little deeper on each stroke just like he did the first time we made love. \n\n\"Sheri he in so deep he's filling me up.\" Pam said to me, I told her\n\n\"Sweetie he's not even half way in yet.\" Pam groaned at that. I knew they needed more lubricant so I lick my finger and placed it on her clit and gave it a rub. Bill shook his head no. So I stopped. I asked him later why, he said, she clamped down the second I did that and if she kept that up he would never get all the way in her before he came. Bill was pumping half his cock into her when I asked \n\n\"Are ok sweetie he got half of it in you now.\"\n\n\"Oh yea I've never been so full. But it feels so good.\" Bill picked up the pace a little feeding more into her. Pam started pumping back to him. She was getting close I could see it by the way she was moving. Bill looked like he could cum any second but was holding back till he was all the way in and she was cumming. I could see Bill's cock as it came out of her it was all wet with her juice. Then Pam started to tremble, as Bill was three quarters of the way in.\n\n\"Oh Bill I cumming now honey fuck me give it all to me lover.\" Bill picked up the pace now his hip's where flying back and forth. I could see her cum bubbling out of her every time Bill pushed in. This was like watching a porn flick but I could smell the sex being preformed. I could smell her pussy as he fucked her I wanted to push Bill away so I could put my mouth on her pussy and suck out her cum. Bill pushed the last inch of cock into her and as his pelvic bone hit her clit Pam came again. \n\n\"Oh fuck, oh shit Oh god I'm cumming again Fuck me Bill fuck me hard baby.\" Pam gripped my hand tight as she came her hips were pumping back at Bill on every stroke. \n\n\"That's it, that's all I can take I'm cumming now Pamie. I'm going to fill you up with my cum.\" \n\n\"Do it Bill fill me full, pump your hot cum in me.\" Bill groaned loud as he started cumming. His hips kept pumping as load after load of hot cum was passed from his cock to her cunt. Bill then slammed his cock home and pitched forward catching him self with his hand. Pam reached up and pulled him down to her and held him tight. I let them rest for a few minutes. When I could see Bill had recovered his breathing. I said \n\n\"Time to clean up Bill.\" Bill pulled his semi erect cock from Pam. From where I was sitting I could see Bill's and Pam's cum pour out of her. Pam went to get up. I pushed her back down. And Said \"Stay there Bill will clean you up.\" Bill moved down between her legs and started licking up all the cum he could find. Then Pam asked\n\n\"Sheri what is he doing.\" \n\n\"He's cleaning up the mess he made. Isn't wild.\" I said \n\n\"But it's so messy so. Oh my he's sucking it right out of my hole.\"\n\n\"I know sweetie he love's doing it. It really turns me on when he does me. Doesn't it feel so wicked?\" I could see Bill was trying to get her to turn over. \"Pamie roll over so you can sit on his face so Bill can get all of the cum.\" She did as she was told. I looked down at Bill cock it was still only half hard and it still had cum on it. \n\nPam started rocking her hips so I knew she was rubbing her clit on to his nose then she gasped and tremble into another orgasm. Pam rolled back over on to her side her body still trembling from her last orgasm. Bill made to get up before I stopped him. I watched Pam slowly regain her composer. When she had recovered herself she looked at Bill and me and said.\n\n\"That was the most erotic thing I ever did.\" She took Bill and My hand in hers and said \"Thank you both for sharing this with me.\" \n\n\"Your welcome sweetie, but don't you think you should clean up Bill now.\" I asked\n\n\"Oh yes I should.\" She said as she flipped over and started cleaning around Bill's pubic area. When she was done there she took bill's cock in her mouth and sucked off as much as she could. I leaned over and whispered in her ear\n\n\"Sweetie didn't that cock make you feel wonderful.\" She nodded her head with a smile on her lips. \"Don't you love the way it made you feel?\" I asked, she nodded again. \"Then show it how much you love it. Make love to it with your mouth.\" \n\nPam though for second then I could see understanding in her eyes. She started licking his cock all over leaving little kisses on it. Then she licked his balls taking each one into her mouth. The she moved to the head taking it into her mouth and I could tell she was using her tongue on it. She started to bob her head up and down on it. But this time it was different then earlier, this time her lips lingered, she did it move slowly move lovingly, almost worshiping it. \n\nShe kept taking in more till she gagged on him. I whispered \"Easy honey, not so much at one time.\" If she heard me I wasn't sure she just kept on make love to Bill's cock. I could see she was really enjoying it. I looked up at Bill I could see he was enjoying it too, maybe too much. I whispered to Pam. \"That enough for now sweetie I want some of that.\" Pam reluctantly pulled her mouth from Bill's cock giving it a parting kiss. Then said to me \n\n\"I understand what you where saying. If you really want to be good a giving head you have to make love to it not just suck it. I could have done that for hours if you didn't stopped me.\"\n\n\"I know Pamie I could too. But Bill couldn't. And I need for him to make love to me.\" I took her in my arms and kissed her. She was like a child with a new toy. We kissed for a few minutes then Pamie moved down to my breasts and kissed them all over till she took one of my nipples in her mouth and sucked it, bring it to hardness. \n\nShe raked her teeth on them till the aurora was all hard and bumpy. Then she moved down to my tummy and licked and kissed it all over, her tongue played with my naval ring. Then she moved down to my pussy. I watched her as she took her first tasted of my wetness. Though Bill is really good at eating pussy, but he'll never be as good as a woman. Women just seem to know what feels good. \n\nAnd Pamie was no different she hit all the right spots paying a lot of attention to my clit. I laid down and Pam's legs where stretched out along side me. I pulled her one leg over me so she was straddling my head. I pulled her pussy down to my mouth and started licking her slit. Bill didn't get all his cum I could still tasted a little in her. \n\nHer pussy was red from the workout Bill's cock had given it. Her pussy was sweet and tart her juice flowed freely into my mouth. I took her clit into my mouth and sucked it and flicked it with my tongue. I wetted my fingers in her juices and then bring them up to her asshole I massaged her rosebud with them. Pam seemed to catch on to what I was doing and did the same to me. ",
        "She must have anticipated what I was going to do, because she plunged one of her finger into my ass triggering my orgasm. My body shook as I pulled her pussy down on to my mouth and sent two of my fingers into her ass trigging her orgasm. Pam and I both moan and sucked together though our mutual orgasms. Then I through her off me and said. \n\n\"Bill I need you now. Fuck me now. Shove that cock into me NOW.\" \n\nBill was standing along side the bed waiting for me to ask for his cock. I didn't ask I ordered him to fuck me. Bill jumped between my legs and raised them. He then sent all nine inches of hot fat cock into me. When Bill hit bottom I came again. \n\nBill started pounding his cock into me as my orgasm continued. He then leaned toward me claiming my mouth with his, tasting Pam's juice on mine as his big fat cock continued to pound my pussy. His cock stretched me to the limit every time he pushed in to me. I continued to cum I couldn't stop as he continued to pump into me. \n\nWhere Pam was I didn't know or care. My eyes were closed as I felt every move Bill's cock was making in me. I felt him swell and his cock jerked. I told him \"Cum in me lover. Send your hot creamy cum into my hot wet pussy.\" Bill groaned out as I put my feet on his ass and pulled him into me. I could feel his cock expand and fire each load of cum into me. Bill collapsed on me as his cock stopped firing. I held him to me both of us panting for breath.\n\nOnce Bill breathing returned to normal he went down and cleaned up the mess. At that moment I realized that this was a very loving act. I never notice how much love he put into the act of cleaning me after he came in me. His tongue lick up the goo that flowed from me. \n\nOnce he had sucked and licked up all that would come out he rolled us over. So I could sit up right and let the rest flow out of me. Because of his loving act I came one last time. Not a big one a small one barely a tremor. \n\nI got off his face and turned around to offer the same loving act to him only to find Pamie had beat me to it. I think I may have created a monster. A cock sucking, cum eating monster that I was going to have to put in line if I was ever going to be able tasted any more of Bill's delicious cum again. \n\n\"Ok everyone in the tub.\" I said Pam moaned and Bill groaned as they both got up and followed me into the bath. \n\nI was the first to get into the tub. The water was hot just as I like it. I love the warmth as it surrounds you. The three of us fit in comfortable as we sat one in each corner. The tub is six-foot square and two foot deep. I had it special ordered just for me when we built the house. Bill only gets in it when we get in it together. He doesn't like baths like I do. I love to sit and soak some times for hours. After everyone got settled I said\n\n\"Ok you two I have a problem and I need you two to help me solve it.\" They both look at me not sure where I was going. The I said \n\n\"Bill you know I love the taste of your cum right.\" He nodded \"And ever since I found out you wanted to eat your own cum I have let you. Even when I suck your cock I give it to you. Well now that Pam's here it looks like I may miss out on what little I do get. What are we going to do about this?\" \n\nThey both looked at me as if I had the answer. \"From now on when ever you cum in my mouth Bill I get at lease half. When you clean me out you can keep that or share it with Pamie. Pamie if Bill cums in your mouth you have to share it with him. And I get first dibs on what comes out of you when Bill fuck's you. When Bill fuck's me I get to clean his cock. And the same goes for you when Bill fucks you. Is that ok with every one.\" Every one nodded then I said \"Neither of you can touch each other sexually unless I say you can. Any questions?\"\n\n\"Mistress does that mean I'll be coming back after tomorrow. I told you I would never try anything in the office.\" Pam asked\n\n\"Do you want to come back?\" I asked already knowing her answer.\n\n\"Oh yes I would. I couldn't think of anything better.\" She said, almost bursting with happiness.\n\n\"Pam, Glenda and I were talking earlier. How would you like to move in here for a week? Till next Sunday. If everything works out we could make it permanent. You could always leave anytime you like. Would you like to try it for a week.\" \n\n\"I would be willing to stay forever if you would let me. But if you don't like me after a week then there will not be any hurt feeling.\"\n\n\"Good tomorrow go to you apartment and bring back anything you may need for the next week. I notice you exercise. What do you do?\" \n\nI walked everyday back and forth to work. And I go to a gym three days a week. How could you tell?\"\n\n\"Your belly is flat and hard. And your bottom is small and firm. That's not normal for a girl that sits all day. You won't be able to walk to work from here but you can still go to the gym. In fact I would like you to continue that. I work out three to four times a week and Bill's going to take up running again. Well I don't know about the two of you but I'm ready to go to sleep.\" It was almost midnight \n\n\"Mistress I do have two more questions if that's alright.\" She asked shyly\n\n\"You can ask as many questions as you like.\" \n\n\"What would be my duties? I'm sure that I can contribute something to this household. And what about my paycheck, I sure I can't be expected to live here rent-free. The only reason I ask is that I do sent money every week to my mother who is ill and can't support herself.\" I though for a moment, Bill and I didn't need her money. But she should contribute something. And I would never take money from her mother. \n\n\"Your money is yours to do with as you please. The only thing I would suggest is that you save a portion of it in case you decide that you want to leave us someday. Your duties are the cooking since you say your good at it. And you can keep the down stairs clean Glenda can handle the washing and keeping the upstairs clean. And since the cooking is yours, in loo of rent you can buy the food we'll need. Is that satisfactory?\"\n\n\"Oh more than satisfactory. Are you sure it's ok with you.\" \n\n\"That's fine with me. Are you ok with that Bill?\"\n\n\"If I had a problem with any of this you would have heard from me.\" \n\n\"Oh one more thing you will be responsible for buying your own cloths. Unless there is something I want you to wear then I'll pay for that. Is there anything else you would like to ask? Don't be afraid to ask.\"\n\n\"No if I do think of anything I'll ask.\" She said as we got out of the tub. \n\n\"For breakfast I like fresh fruit and toast and lot's of coffee. Bill's menu changes but mine is always the same. Just so you don't make anything heavy because I won't eat it. I do love my coffee.\" We dried off and I put on a nightgown and Bill put a baby doll nightie. Pamie stood there drying her hair till I said \n\n\"Do you sleep in the nude, it's ok if you do?\"\n\n\"No I was wondering where I was going to sleep to night.\" She said \n\n\"Lets try you in here tonight. If that gets to crowed then you can take the spare bedroom.\" \n\nPam left the bedroom and came back wearing a pink satin nightie. I set the alarm as we all got into bed. Bill on one side, Pam in the middle and I on the other side. It wasn't crowded but definitely cozy. I wondered if they make bigger beds then king size. \n\n* * * * *\n\nSo ends Part Four Please tell me how you like it even if you don't. And if I should send in more parts \n\nThanks \nScribler"
    ],
    "authorname": "Scribler",
    "tags": [
        "hung dress",
        "loving act",
        "fuck bunnies",
        "feel shake",
        "waited bill",
        "ginny glenda",
        "jake julie",
        "ginger glenda",
        "glenda back",
        "love sheri"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/lifes-changes-ch-04"
}