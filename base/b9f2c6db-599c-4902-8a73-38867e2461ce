{
    "title": "Amy's Fascination Ch. 10",
    "pages": [
        "Amy tossed and turned, unable to fall back asleep. She had woken up at four in the morning after a particularly intense dream that featured her getting double teamed by her black lover Treyvon and her favorite porn star Jackson Hammer. As they both came in her in the dream, she had awoken with a real orgasm, her fingers in her pussy. \n\nNow her mind was focused on the day ahead. She had the day off from the coffee shop. It almost made her feel sad, as her workplace was quickly becoming a place where she would get fucked by black men. She wondered if Janice was going to have anyone come visit her in the stock room today. \n\nHer thoughts drifted towards Mara. The younger girl was working today. Amy hoped Janice wouldn't say anything to scare her before their night out. She had big plans for Mara that evening. \n\nShe looked at the clock. Five AM. There was still an hour before her husband's alarm went off. \"Fuck it,\" she thought. \"I'm not falling back asleep this morning.\" She got up and went out to the kitchen. \n\nAmy sat down at the kitchen table and opened the laptop. A notification from her email popped up. She clicked on it and saw that Treyvon had sent her the video he had taken the day before. She opened it and her pussy grew wet as she watched herself get fucked by three black dicks at once. Her hand slipped into her panties, almost of its own accord. She suppressed a moan as her own fingers penetrated her pussy, keeping pace with the black cocks on the screen. \n\nAmy was feeling naughty, and decided the video needed to be shared with her followers. She uploaded it to her profile and titled it \"My First Gangbang.\" As she posted it, she noticed she had an unread private message. It was from the morning before, when she hastily had to leave her conversation with Jackson Hammer. She had asked if they could continue another time. \n\n\"Sure, baby. Why don't we video chat tomorrow morning? How does 10:00 sound?\" the message said, followed by his contact information. \n\nAmy's pussy was on fire, but she reluctantly stopped playing with herself. She wanted to save her orgasm for Jackson. He had been responsible for so many of hers that she wanted to give him a good show. \n\nShe closed down her laptop and took a cold shower to try to calm herself down, but it was no use. She was still as turned on after she got out as she had been before. Her husband was awake now, so she made him breakfast and chatted with him for a bit. She did her best to listen, but her mind was focused on Jackson's monstrous black cock.\n\nHer husband left for work, and Amy busied herself with getting her kids ready for school. She packed their lunches, fed them breakfast, and got them on the school bus. She looked at her watch as the bus drove off. It was seven o'clock. She still had three hours to kill. \n\nFrustrated, she tried to do housework to occupy her time. She put on some music. Normally Amy listened to pop and rock but today she felt like something different. She had been getting more and more into rap music, since that was what played at Treyvon's house when she went over. In her mind, rap and hip-hop had become associated with sex, and she found herself getting turned on when she heard it. She put on a rap station and started her housework. An hour later, the laundry was done, the floors were vacuumed, and her pussy was soaked. She knew Mara would be at work already. Amy decided to text her. \n\n\"Are you excited for tonight?\" she asked. \n\n\"Yeah, I haven't been to ladies night in forever,\" Mara replied. \n\n\"I hope there will be a lot of black guys out at the club,\" Amy said, pushing the younger girl. She knew Mara would try to play it off like it was just going to be a regular night out with friends, and Amy wanted to keep reminding her that tonight was about finding her a black man. \n\n\"You are so bad,\" came the response. \n\n\"Guess who I'm about to video chat with,\" Amy text. \n\n\"Knowing you it's gonna be a black guy,\" said Mara. \"Is it Treyvon?\"\n\n\"Close,\" replied Amy. \"Jackson Hammer!\"\n\nIt took a moment for Mara to respond. \"No way! How did you even get in touch?\" came the response. \n\n\"He posts on the same interracial sex website that I'm on. He thought my pics were sexy and reached out. That's how I got that clip of his cock cumming everywhere that I showed you,\" said Amy. \n\n\"OMG, Amy! That's crazy!\" Mara text back. \n\n\"There's still almost an hour before we start, and I can't keep my hand out of my pants,\" Amy said. \n\n\"You're making it hard for me, too. I've been thinking about what happened yesterday ever since I left work last night,\" Mara text. \n\n\"Did you masturbate when you got home?\" Amy asked. \n\nOnce again, it took a minute for the girl to reply. She was still so shy! \"Yes. Kenny was home so I did like you told me and went into the bathroom.\"\n\n\"Did you make yourself cum thinking about all those black cocks fucking me?\" Amy teased. She could practically see the younger girl blushing. \n\n\"Well, sort of. I was thinking about them fucking me,\" Mara replied. \n\n\"Good girl!\" Amy said. She felt proud. \n\n\"I have to go, breakfast rush. Talk later?\" said Mara's text. \n\n\"Sure thing,\" she replied. \"Oh, and talk to Janice. She wants to know what you've been up to.\" Things couldn't be going better. Now Mara would have black dick on her mind all day before they went out.\n\nIt was now nine o'clock. She still had an hour before she was supposed to start her video chat. Her pussy had soaked through her yoga pants, thanks to her conversation with Mara. \n\nAmy decided to put on lingerie to make herself look hot for Jackson. She went through her closet and tried on everything she had. The fact that her husband had bought it all for her, and now she was using it to look sexy for a black stranger made her pussy throb. \n\nShe finally decided on a blue and black corset. It was the outfit she had worn when she posed for the first pictures that her friend photoshopped, and ever since then it made her feel even sexier. She picked out some lacy black panties to go with it and looked at herself in the mirror. She liked what she saw. \n\nStill having time to kill, Amy decided to take some pictures for her profile while she was all dressed up. She dug out her huge black dildo from her underwear drawer and took a few pictures of it next to her face, her eyes staring longingly at it. She kept the end of the dildo out of the frame to make it look more real. Then she moved on to taking a few shots of herself licking the head before parting her lips and taking it into her mouth. \n\nWhen she was satisfied with her blowjob pictures, she pulled her tits out of lingerie and pushed the dildo between them. She loved the contrast of the dark toy against her pale breasts. She wrapped her tits around the shaft and took the picture of the head jutting obscenely from her cleavage. She tried another pose, this time with one arm beneath her tits and the dildo lying across them. \n\nFinally, she propped her phone in the dresser and spread her legs. Moving her panties off to the side, she pushed the tip of the dildo into her pussy. Careful not to move it around too much, she snapped a few more pictures. After all, she didn't want to waste her orgasm before she got online with Jackson. \n\n\"These pictures are hot,\" Amy thought as she scrolled back through them. She went out to the kitchen and sat down at her laptop. She had just started uploading them when a message popped up from Jackson. \n\n\"Hey, baby. You ready?\" it read. \n\n\"I've been ready all morning,\" she replied, attaching a photo of herself licking the head of her dildo. She opened her video chat software and entered Jackson's contact information. She paused for a moment before hitting \"send\". Her chat program had all of her information on it, including her real name and her address. Should she change her name to \"BustyWhiteWife4BBC\" before connecting? In the end, she decided that it was more exciting for Jackson to learn her real name, so she went ahead with the call. \n\nJackson Hammer appeared on her screen. He was sitting on a black leather couch, wearing nothing but a pair of gray boxer-briefs. Amy could see the bulge of his enormous black cock beginning to tent his underwear already. \n\n\"Hello, Amy,\" he said, readjusting his cock. The sound of her name coming out of his mouth sent tingles through her body. \n\n\"H-hi Jackson,\" she said nervously, leaning forward a bit to give him a good view of her tits. \n\n\"Damn, baby, you are looking sexy,\" he said. \"Show me those titties.\"\n\nObediently, Amy pulled out her tits and presented them to the camera. Her pierced nipples were rock hard as she rolled them between her fingers. On the screen she saw Jackson adjust his cock again inside his boxer-briefs. \"Is that monster ready to come out?\" she asked. \n\n\"I don't show this to just anyone,\" he teased her. \"Only true black cock sluts get to see this dick. Show me you deserve it.\"\n\nAmy wasted no time. She picked up her dildo and squeezed it between her tits, leaving enough of the tip sticking out for her to suck into her mouth. She could taste her pussy on the toy's head as she licked it. \"I'm a real white slut, Mr. Hammer,\" she said between licks. \"I love black cock so much!\"\n\n\"Every bored white wife I meet says that,\" Jackson replied. \"What makes you any different?\" Amy could see his massive shaft beginning to strain against the fabric of his underwear. \n\n\"Because I fuck black dick every day, even though I'm married to a white guy,\" she said. She slid her chair back a bit so her entire body was visible on camera. She held the dildo between her legs and pushed it into her pussy, where it easily slid past her soaking wet lips. \n\n\"What about your husband?\" Jackson asked, adjusting his cock yet again. Amy could tell keeping it covered was getting uncomfortable for him. She fucked herself with the black dildo with one hand while pinching her erect nipple with the other. She knew what he wanted to hear. \n\n\"I don't care about my husband,\" she said, her pussy gushing as the words left her mouth. \"I only care about getting black cock! It's all I can think about. I'm a married white slut that needs her pussy filled with black man's cum!\"\n\n\"Yeah, baby. That's a good girl. You've earned this,\" Jackson said as he pulled his massive black shaft from his underpants. Amy's jaw dropped as she stared at it. She suddenly felt her pussy start to clench, and a surprise orgasm hit her. She pulled her dildo out and furiously rubbed her clit as her pussy began to squirt, spraying her wetness everywhere. \n\nThe black man on her screen seemed to like what he saw. Jackson grabbed his cock and started to stroke it as Amy came on her own hand. She licked her lips as she watched a drop of pre-cum ooze from the tip. \n\n\"I wish you were here with me so I could taste that magnificent black cock,\" she panted as her orgasm ended. She picked up the dildo again and traced her tongue around the tip. \n\n\"If I was there, this dick would be inside your pussy already,\" he said. \"I don't meet a lot of women who could take it right away, but I think you are ready.\"\n\n\"I've been practicing with this dildo for weeks,\" she said. \"And my black boyfriend's cock is almost as big.\"\n\n\"You said you fuck him every day?\" he asked, stroking his cock faster. \n\n\"He doesn't let a day go by without dumping at least two loads inside me,\" she said. \"Last weekend I tried to go camping with my husband and he followed me. We got my husband drunk and fucked all night while he was passed out.\" Amy had since put the dildo back into her pussy and was sliding it in and out while she told the story. \n\n\"Damn, that's hot,\" Jackson said. She could see his cock throbbing as he jacked it toward the camera. \n\n\"That was the day I was ovulating, too. I can't believe I let him cum inside me so many times, but it was so hot. The thought of getting pregnant with a black baby turned me on so much,\" she said. \n\n\"That's right, baby. Deep down, all good white girls want to get black bred,\" he said. \n\n\"Yes,\" she hissed, another orgasm building. \"I love it. I want a black baby so bad! I wish you were here to fill my pussy and knock me up!\"\n\n\"Aw, fuck!\" Jackson said, and his enormous cock twitched as a jet of cum erupted from the tip. He pumped his shaft in long strokes as it kept shooting its load toward the camera, and by extension, Amy's face. \n\nShe let herself cum again as she watched Jackson's huge cock spraying his seed everywhere. As she came, she thought about what it would feel like inside of her. She kept the dildo in this time, and imagined it pumping its load inside of her, filling her womb with his potent sperm. She pictured him pulling it out of her after he was done, the black shaft coated with both of their cum. Then she imagined herself pregnant with his black baby, and she blacked out for a second. \n\nAfter her orgasm was over, Amy started licking her pussy juices off of the dildo. She couldn't believe she was still so turned on. \"Are you ready to go again?\" she asked. \n\n\"Sorry, baby, but I don't have time,\" Jackson said. \"This was great though. We should do it again soon.\"\n\n\"Boo,\" Amy pouted. \"But I need to cum again.\"\n\n\"I'm sorry,\" he repeated. \"I really need to go. I'll make it up to you next time.\"\n\n\"Ok,\" said Amy, still licking the dildo. \"I'll hold you to it, though.\"\n\n\"Alright baby, I'll talk to you soon,\" he said and signed off. \n\nAmy felt frustrated. She had cum twice on the dildo, but she wanted more. After having the real thing all week, the fake cock was rapidly becoming inadequate. She finished posting her photos she took earlier on her profile and decided to send a few to Treyvon. \n\n\"What are you up to?\" she asked him, accompanied by a picture of her tits. \n\n\"Well, I was at work,\" he replied. \"But I won't be able to concentrate now. What are you doing?\"\n\n\"I was video chatting with Jackson Hammer,\" she said, alongside a photo of herself sucking her dildo. \n\n\"Good for you, girl! I knew you'd get his attention,\" Treyvon said. \n\n\"Yeah, except he had to leave and I'm still dripping wet,\" she said, and attached a pic of her pussy. \n\n\"Maybe I should take an early lunch today,\" he said with a wink emoji. \n\n\"Ooh, yes!\" she said. \"Meet you at your place?\"\n\n\"Nah, I'm coming to your house. See you in a few,\" came the reply. \n\nThe next twenty minutes were the longest of Amy's life. She kept her lingerie on, and tidied up her bedroom in anticipation. She sent a picture of herself with her dildo to Mara, but got no response. She tried watching TV, but she couldn't focus on the show. When she finally heard a car pull into the driveway, she practically sprinted to the door. \n\nAs soon as she opened the door, she grabbed Treyvon's arm and pulled him inside. She jumped on him and kissed his mouth, grinding her wet pussy against his leg in the process. \n\n\"Damn, girl, you really are ready,\" he said as Amy unbuckled his belt. She dropped to her knees in front of the black man and pulled his rapidly-inflating cock out of his pants. She rubbed the tip around her lips before opening her mouth and engulfing the head. Treyvon pushed it deeper down her throat and she gagged, but kept her composure. She was doing it! The black shaft in her mouth continued swelling. Amy felt her eyes tear up. She could barely breathe, but desperately wanted to keep sucking his dick. \n\nFinally, she couldn't take it anymore. She gagged again, and withdrew the slimy black cock from her throat. Three quarters of it were covered with her thick saliva. \"I'm getting better,\" Amy thought as she stroked the sloppy black shaft with her hand. \n\n\"Come on, girl,\" Treyvon said. \"Let's get this dick inside you. Show me where your bedroom is.\"\n\nAmy led the black man down the hallway, never letting go of his stiff cock. Opening the door to her bedroom, she pulled him inside and sat down on her bed. \n\n\"So this is the bed you share with your husband?\" Treyvon asked. \n\nAmy felt a rush of excitement go through her body, making her pussy gush. She loved it when he talked like this. It really drove home the point of how slutty she was being. \"Yes, this is where my husband and I sleep.\"\n\nTreyvon walked towards her, his erect cock pointed towards her like a missile seeking its target. \"When was the last time you had sex with him in it?\" he said. \n\n\"It's been weeks,\" she said, trying to remember. She didn't count the time she woke up and interrupted him. \n\n\"And now what's about to happen?\" he asked. Treyvon was at the edge of her bed now, towering over her. His cock was only inches away from her pussy. \n\n\"I'm going to cheat on him with a black man in our marriage bed,\" she said, shuddering with anticipation. \n\n\"It's one thing to fuck around on him away from home,\" he said. \"But this is another level of betrayal. Now every time you are here with your husband, you will be thinking about fucking my big black cock. Are you ready for that?\"\n\n\"God, yes,\" Amy moaned. \"Fuck me!\"\n\nTreyvon fell forward on top of her, and his massive tool slid into her soaking wet pussy. She moaned out loud again as she felt his girth slowly penetrate her. Feeling every inch as it pushed into her, she wrapped her legs around his waist to pull his body closer to her. \n\nAfter bottoming out in her pussy, Treyvon was still for a moment, letting her adjust to his size. \"It's taking less and less time each time we fuck,\" Amy though. She began to move her hips, needing to feel his enormous black cock pound her. He obliged, thrusting it forcefully into her eager cunt. \n\n\"You like getting fucked in your husband's bed by my black cock, you white slut?\" he whispered in her ear as he fucked her. Amy's eyes rolled back into her head as she moaned yet again, unable to control herself. \n\n\"Yes,\" she hissed. \"I love it! You fuck me so much better than he ever could. It's about time I had a real man in this bed with me.\"\n\n\"Soon you're gonna want to spend every night with me,\" Treyvon said as he withdrew his cock from Amy's pussy and drove it back in. \n\n\"Fuck!\" she said, feeling his dick hit her cervix. \"I already do! I think about your dick every night as I fall asleep.\"\n\n\"We'll have to work on giving it to you more often then. Now, get ready to take my load in your fertile white cunt.\" \n\nShe felt him tense up. \"Yes, give it to me! Cum in me!\" she cried as Treyvon's cock spurted his potent seed into her body. She could feel it spraying against the entrance to her womb. It was enough to push her over the edge, too. \n\nAmy arched her back under the black man as he pumped her full of cum. She raked her nails across his back as she thrashed, lost in her own orgasm. Her pussy squirted all over the huge black cock that penetrated her. Each thrust of Treyvon's hips splattered her wetness all over their bodies. \n\nA few minutes later when they had both recovered, Treyvon pulled his half-erect cock out of Amy and lay back on the bed where her husband usually slept. She draped one arm across his chest and lay close to him. Her other hand found its way to her freshly-seeded pussy, slipping her finger inside. She loved the way the black man's cum felt inside her. \n\n\"That was a good one, girl,\" Treyvon said. \"Showing off for Jackson really got you worked up.\" \n\nAmy giggled. \"Watching his cock shoot out all that cum was so hot. All I could think about was that cock inside of me, pumping all that sperm inside. It was so fucking hot,\" she said. \n\nTreyvon laughed. \"I better knock you up soon, or you're gonna chase him down for that black baby,\" he said, pushing her hand down to his cock. She grabbed it by the base and started slowly jacking it up and down. \n\n\"I don't think you have anything to worry about,\" she said, smiling. \"I've let you cum in my pussy every day for who knows how long now.\"\n\n\"Oh, you let me?\" Treyvon teased. \"You know you begged me for it, girl. Face it; you're addicted to this black dick.\"",
        "Amy stared at the monster black shaft in her hand as she stroked. It was hard as a rock again, and back to its full size. As it glistened with both of their combined cum, she felt the overwhelming urge to taste it again. \n\nShe moved her head down to his crotch while he laughed. \"See, I told you. You can't resist it,\" he said as her mouth engulfed his cock. \n\nAmy tasted the musky flavor of his cum mixed with her own girly juices. Her pierced nipples were rock hard again as she sucked the black man's cock. She still had one hand inside her inseminated pussy, playing with the cum inside her. Her other hand was tickling his balls while her tongue ran up and down his shaft. \n\nAs she gave Treyvon a blowjob in her marital bed, her eyes locked into the photograph on the bedside table. It was a picture of her and her husband, taken at the amusement park. She was suddenly hit with a pang of guilt. \n\nBut it didn't last long. Her eyes slid past the picture frame to Treyvon's naked body. The dark skin of his well-muscled chest, shiny with sweat, drove any feelings of guilt from her mind. Her lust flared at the sight of the black man confidently relaxing in her husband's spot in her bed. \n\nAmy swung her leg over him and straddled his cock. Lining him up with the entrance to her pussy, she lowered her weight down onto the huge black pole once again. Treyvon slid inside her seeded cunt with ease. \n\n\"God, it's so hot, fucking you here,\" she whispered hoarsely. \"I used to ride my husband just like this.\"\n\n\"Just like this?\" Treyvon asked. With one hand he pinned her arms behind her back, while the other grabbed her ass and pressed it down onto his crotch. He fucked his cock into her like a piston, making Amy's eyes roll back in her head. \n\n\"Ahh,\" she moaned. \"Ok not, ahh, exactly like that. Oh, fuck! He never made me feel like this! Ahh!\"\n\n\"You know why, don't you?\" Treyvon said, continuing to work her dripping wet pussy. \n\n\"Because he can't,\" she screamed, on the cusp of an intense orgasm. She drove her hips down onto the hard black dick. \"He's white, and could never fuck me as well as a powerful black man could.\"\n\nTreyvon released her arms, and she took the opportunity to pull her big tits out of her lingerie. She leaned forward as she rode, bouncing them into her black lover's face. His lips closed around her pierced nipple, and she doubled her efforts on fucking the cock that penetrated her. \n\nAmy continued her dirty talk, knowing Treyvon's mouth was full. \"Only a strong black man can make me cum now. My husband's little penis is nothing to me anymore. My pussy belongs to you! I love your big black cock!\"\n\nShe felt his teeth pull on her nipple, sending shivers of pleasure down her spine to her pussy. Her hips bucked ever faster as she impaled herself again and again on Treyvon's magnificent black dick. Her orgasm was almost within reach. \n\n\"Oh, God, yes!\" she yelled. \"Fuck me! Fuck your white slut's pussy! Cum inside me! Don't stop filling me up until I'm fucking pregnant with your black baby!\" Saying the lewd words aloud was enough to trigger her orgasm, just as she knew it would be. She opened her mouth to cry out in ecstasy but no sound came out. She writhed in pleasure on the fat black cock, her mouth agape, her eyes crossed. She felt her pussy squirt again, soaking Treyvon's lower body. \n\nAmy's orgasm abated but she couldn't slow down. She needed to feel him cum inside her. There was no other pleasure like it in the world. She pulled her tits away from his mouth and kissed him. \n\n\"I want your cum,\" she whispered in his ear. \"Please! Give me your load!\"\n\nTreyvon wrapped his arms around her and pulled her down against his body. Her tits slid to either side of his chest as they became covered in her squirt. His hands went to her ass and gripped it tightly. He was in control of the pace of their fucking now. \n\n\"That's right, girl. You want this black man's cum inside your married pussy, don't you?\" he asked. He pulled her hips upward at the same time that he pushed his own body down into the mattress, withdrawing his cock almost completely from her. A moment later he released them both, and Amy shuddered as she felt every inch of his cock glide through her pussy. \n\n\"I want it,\" she panted, out of breath. \"I want to feel you cum inside my cheating wife pussy!\"\n\n\"You want me to breed your fertile womb with my seed, don't you, girl?\" he asked, repeating his deep fucking motion faster. \n\n\"Oh, fuck yes, Trey! I don't want you to stop cumming in me until I'm black bred,\" Amy moaned as the huge black shaft penetrated her body. \n\n\"I can't wait to see your belly swell up with my black baby,\" he grunted. She could barely hear him over the wet slapping sounds of their flesh coming together. \n\n\"Yes! Yes! I want it! Get me pregnant!\" she shrieked. \n\n\"What will your husband think when you get knocked up, and he hasn't fucked you in weeks?\" he teased. \"What will he say when you give birth to my dark skinned baby?\"\n\n\"I don't fucking care!\" she said, almost past the point of being able to think. \"All I care about is your black cock! I love it! Yes! I love it! I love... you!\"\n\nTreyvon's cock let loose inside her the moment she said it. After one last push into her pussy, it began spewing out its load deep inside her fertile womb. His hands held her ass in place while his cock filled her with his potent seed. Amy's head flew back as she came with him. She collapsed in top of him, feeling his dick pulse inside her while his cum began to drool out of her slit. \n\nThey stayed like that for a long time. Amy was afraid to move and break the spell of silence. She wasn't sure why she had said it, but she was afraid it would make things weird between them. Did she mean it? What did Treyvon think? Did he even hear it over the sound of their sex?\n\nTreyvon was the one to move. He gently rolled her off to the side and stood up. \"That was amazing as usual, girl, but I should get back to work. Can I borrow your shower really quick?\"\n\nAmy agreed and led him to the bathroom. She tried to read his face as best she could, but he seemed be acting like he always did. \"Maybe he didn't even hear me,\" she thought. Her mind slightly at ease, she lay back down on her bed and played with her cum-filled pussy again. \n\nWhen Treyvon got out of the shower, she got up to show him out. She decided that if he was going to act like she hadn't said it, then so would she. She kissed him on the mouth as he left, promising to text him later about the progress of her night out with Mara. \n\nWhen he was gone, she went back to bed and touched herself absentmindedly for the rest of the afternoon. She couldn't stop thinking about what had happened. Did she mean it? The sex with Treyvon was amazing, but couldn't she really love him? \"It was just the heat of the moment,\" she told herself. \"I was saying how much I loved his cock. It was a slip of the tongue.\"\n\nReluctantly, she got up and showered so she was ready when the school bus came. She got the kids started on their homework and put dinner in the oven. She also remembered to change the sheets before her husband got home. \n\nThey ate together as a family. Amy made small talk with her husband but her mind was looking ahead to girl's night out with Mara. When they were finished eating she cleared the dishes and retreated to the bathroom to get ready. \n\nShe did her hair and makeup, and found a low-cut top and skirt to wear. She didn't want to dress too slutty, since it was supposed to be a girl's night, but she still had to be able to attract attention. She found a pair of big hoop earrings that a friend had gotten her as a joke, and decided they would be perfect for tonight. She put them in her purse, and put a sweater on over her revealing top. \n\n\"Bye, babe, I'm leaving,\" she told her husband. \"Don't wait up, I will probably be out late.\"\n\n\"Again?\" he asked. \"When did you become such a party girl?\"\n\nAmy blushed. \"Mara's still a kid, only 21 or 22. She's used to staying out late. I don't want to ditch her early.\"\n\n\"Okay, but we need to have a date night or something soon. I've barely seen you this past week,\" Trent said. \n\n\"We spent the whole weekend together, silly,\" she said, deflecting. \n\n\"Yeah, that's true. Alright, have fun. Love you!\" her husband said. \n\n\"Thanks, I love... you, too,\" Amy felt weird saying it after what happened that afternoon. She hoped Trent didn't notice her hesitation. \n\nWhen she got into her minivan, the first thing she did was taking off her sweater and put on her hoop earrings. She looked at herself in the rear view mirror and smiled. She looked like a slut. She would have been embarrassed to leave her house looking like this a few weeks ago. Now it was making her pussy wet. \n\nAmy made her way to Mara's apartment building. She didn't live very far from the coffee shop. She rang the buzzer and Mara let her up. The girl's apartment was pretty typical for a young, college-age couple. Cheap furniture, hand me down couches, and a TV that cost more than everything else in the place combined. \n\nMara was getting ready in the bathroom. She was wearing jeans and a modest top. Amy shook her head. \n\n\"Is this what you are wearing?\" she asked the girl. \n\n\"Umm... no?\" Mara said, seeing Amy's outfit. \"Did you want to help me pick out something?\"\n\n\"Definitely,\" Amy said. Together they went to Mara's closet. Amy searched through most of her clothes and rejected them before finding some tube tops and miniskirts in the back. \n\n\"Those are the clothes Kenny doesn't like me to wear,\" Mara said sheepishly. \n\n\"Good thing he's not here, then,\" Amy giggled, handing the girl an outfit. \"Where is he, anyway?\" \n\n\"He's playing XBox at the neighbor's,\" she said as she got dressed. \"He said he would be bored staying here by himself.\"\n\nMara's tits were nowhere near as big as Amy's, but they filled out the tube top nicely. Her nice round bubble butt looked equally as good in the black miniskirt. Amy was pleased with her selection. \n\n\"Ready to go?\" she asked. \n\n\"Yes,\" said Mara. \"Let me just stop in to let Kenny know when I will be home.\"\n\n\"Let's not give him an exact time,\" Amy said with a wink. \n\nMara blushed. \"O...okay. I'll just say goodbye.\"\n\nThey knocked on the door to the neighbor's apartment. In response there came a shout of \"Come in!\" Apparently they were too busy come to the door. \n\nInside, Amy saw two \"bros\" sitting on the couch, engrossed in their game of \"Honor's Duty\" or whatever it was. They were dressed almost identically, wearing t-shirts, basketball shorts, and backwards baseball caps. \n\n\"Which one is Kenny?\" she whispered. \n\n\"The one on the left,\" Mara laughed. \"Bye, baby, I'm leaving now!\"\n\nKenny didn't take his eyes off the screen. \"Alright, see you when you get home.\"\n\nThey closed the door behind them as they walked out. \"He didn't even look up from his game,\" Amy said. \n\n\"I'm glad, or else he would have seen my outfit and we would have gotten into a fight,\" Mara replied. \n\nNow Amy almost wished he had. If they had fought before Mara went, she might have been in a more adventurous mood. There was no use dwelling on it though. She was still confident she could make the other girl go black by the end of the night. \n\nThe two got into the minivan, and headed out towards downtown. Amy turned on the radio to set the mood. \"What kind of music do you like?\" She asked. \n\n\"I usually listen to country,\" Mara said. \"But I'm ok with anything.\"\n\nAmy flipped it to the rap station. As usual, the bass thumping started to make her pussy wet. \"Well, I've really been getting into rap lately,\" she said. \"You should really check it out, too.\"\n\nMara looked puzzled. \"Why's that?\"\n\n\"Because most black guys like rap, silly,\" Amy laughed. \n\n\"I should have known,\" Mara giggled. \"You're so bad.\"\n\n\"But seriously, it's what Treyvon always plays when we fuck at his house. Listening to it makes me think about sex,\" she said. \n\n\"Everything makes you think about sex,\" Mara teased. \n\nAmy laughed again, but continued. \"The lyrics are hot, too. Like this one.\" She turned up the volume, and they listened to the song. The rapper was talking about how he loved it when white girls would twerk for him at his shows, and how he would take them backstage and give them his dick. \n\nWhen the song ended, Mara said, \"Wow, I've heard that song before but never paid attention to the words. I can't believe it's just on the radio like that! Who sings it?\"\n\n\"His name is Lil Crank. He's one of my favorites. A lot of his songs are like that,\" Amy said. \"He's really hot, too, if you watch his videos.\"\n\n\"Maybe I'll check him out,\" Mara said softly. They listened to a couple more songs as they drove. Soon enough, they arrived. Amy parked the minivan behind the coffee shop, and they walked to the bar next door. \n\nThe bouncer checked their IDs at the door. Amy smiled. It had been a while since she had been carded, but Mara was young enough where it made sense. He waved them inside. \n\nBeing next door to the coffee shop, Amy had been there a few times for drinks after work. She had never seen the place so crowded. They pushed their way to the bar and ordered drinks. Amy was about to order two martinis, but suddenly thought about the amount of cum that had been pumped into her pussy over the past week. A minute later, a blue martini and a water in hand, they found a table someone had just vacated near the dance floor. \n\nAmy sipped her water and looked around the place. Predictably, she saw a lot of women dancing and being chatted up by guys. Most of them were white, however, and didn't interest her. She finally spotted a black guy out on the dance floor, but he was already dancing with a girl. She pointed him out to Mara. \n\n\"Look how hot that is,\" she shouted over the music. The black man she was watching was grinding his crotch against his girl's ass, a dark-skinned hand on her hip holding her close. \n\nMara followed her gaze. \"It does look sexy,\" she admitted, leaning over to talk into Amy's ear. \n\n\"Don't you wish you were her?\" Amy asked, watching the younger girl blush as she nodded slightly. Mara stared as the black guy bumped his hips against the girl. \"Do you think he has a big dick?\" she asked. \n\n\"First of all, he's black, so yes!\" Amy said. \"Second can't you see for yourself? Look at his bulge.\"\n\nThey both looked at the black man. He was clearly getting aroused. His cock was straining against his pants, showing a huge bulge as the girl rubbed against it. Amy could see Mara's nipples getting hard under her tube top. \n\nSoon Mara's martini was gone. Amy turned her attention back towards the bar when she saw two men walking towards them with drinks in their hands. They were good looking enough for white guys, but Amy wasn't interested. She didn't want them distracting Mara from being able to focus on the black guy. \n\n\"Hey ladies,\" the first one side as he walked over. \"We saw you from across the bar and thought you looked lonely. Here, have these drinks on us.\"\n\n\"That's sweet, thanks,\" Amy said, accepting the drinks. \"But we're both married.\" She flashed her wedding ring at the two men, who turned and walked away looking disappointed. She pushed both drinks over to Mara. \n\n\"You're so bad,\" Mara said as she took a sip. She was staring at the black man on the dance floor again. The woman had turned around now and was grinding her crotch against the man's cock. He was grabbing her ass, pulling her close as they moved to the beat. \n\n\"Somebody's getting fucked tonight,\" said Amy, with a hint of envy. She looked around the bar, searching in vain for more black men. \"Maybe this was the wrong bar to come to,\" she thought. \"I'll have to ask Treyvon about it next time I see him.\" Thinking about Treyvon made her feel awkward, though. She continued looking.\n\nAmy heard Mara gasp beside her. She turned her head back to the dance floor. The girl had turned around again and was grinding her ass on his crotch. What have elicited the gasp from Mara was that the black man was rubbing her pussy over her skirt. The dancing girl's mouth was open in a silent moan. She was clearly enjoying the attention the man's hand was giving her. \n\n\"So hot,\" Amy said. \"Aren't your panties just soaked right now? I know mine are.\" Mara didn't reply, but kept her eyes on the lewd scene playing out on the dance floor. \n\nAmy kept scanning the room. She was about to give up when she noticed two black men pushing their way through the crowd. They were young, mid 20's she guessed. They both were wearing baggy jeans that sagged low over their hips. One wore a tight white T-shirt and the other a green football jersey. It was a stark contrast to how Treyvon usually dressed, but Amy found them sexy nevertheless. \n\nThey made their way over to the bar. Football Jersey ordered drinks while White Shirt Guy looked around the room. He noticed Amy staring at them and gave her a nod. She smiled back at him and waved. He tapped his friend on the shoulder and said something to him. Football Jersey looked in Amy's direction and said something back. A few moments later they got their drinks and started walking towards their table. \n\nAmy touched Mara's shoulder. \"We're about to have company,\" she said. \n\nMara reluctantly took her eyes off the dance floor a couple and saw the two black men approaching the table. \"Amy!\" she whispered. \"I'm not sure I'm ready for this. I don't know what to say to them.\"\n\n\"Relax, you'll be fine,\" Amy reassured her. \"Just let me do the talking at first if that makes you feel better. \n\nThe black men reached their table. \"Do you ladies mind if we join you?\" White Shirt Guy asked. \n\n\"Not at all,\" said Amy. \"We've waiting all night for some real men to come over.\" \n\nWhite Shirt Guy grinned as he sat next to Amy. \"I'm Darius, and that's Lamar,\" he said, indicating Football Jersey. \n\n\"A pleasure,\" Amy said, taking his hand. \"My name is Amy.\"\n\n\"And you?\" Lamar asked as he slid in next to Mara. \n\n\"M-Mara,\" she stammered. \n\n\"Be nice to her, she's a little nervous,\" Amy said. \"She's never been with a black guy before.\"\n\n\"Amy!\" Mara hissed angrily. \n\n\"No? That's a shame,\" Darius said, staring at Amy. \"What about you?\"\n\n\"Oh, I don't know...\" Amy said with a sly grin. \"Maybe.\" She lifted her water glass with her left hand, showing her wedding ring. \n\n\"Damn, this chick is married!\" Darius said to his friend. \"I knew we picked the right place tonight.\"\n\n\"What you talking about, man? You just said yourself she's married,\" Lamar said. \"Let's get the fuck outta here.\"\n\n\"Nah, man, we're staying. She may be married, but I think she's down. What do you say, babygirl?\" Darius asked. \n\n\"Oh, definitely,\" Amy said, leaning forward to tease the two men with her cleavage. \n\nMara was awfully quiet during this exchange. Amy glanced over at her and saw she was watching the dancing couple again. The black man's hand was inside the girl's panties now. \n\nEveryone else on the dance floor seemed oblivious to them, but not Darius. He noticed immediately what Mara was looking at. \"You like watching them dance, huh, girl?\" He said. \n\nMara blushed and said, \"I... I wasn't... It was just...\"\n\n\"It's alright, girl. No judgment,\" he said. \"If you like what you see, keep watching.\" At this Mara turned even redder, but kept watching the dancers. A moment later, she gasped again as the black man took his hand out of the girl's panties, grabbed her by the arm, and led her off the dance floor towards the bathrooms. \n\n\"Show's over, I guess,\" Darius said. \"Unless you ladies want to dance?\"\n\n\"I'd love to!\" said Amy. She jumped up and grabbed Mara's hand, pulling her towards the dance floor. \n\n\"I can't,\" said Mara. \n\n\"Come on,\" Amy whispered to her. \"It'll be fun!\"\n\n\"Maybe in a bit. I'm still too nervous.\"\n\n\"Suit yourself,\" Amy replied. \"Finish your drinks. They will loosen you up. In the meantime, enjoy the show!\" She winked at Mara as she let Darius pull her onto the dance floor. ",
        "They took their places exactly where the other couple had been dancing. Amy faced Darius at first and started moving to the beat. She recognized the song that was playing. It was \"Hit That Azz\" by Young Gangstuh, another one of her recently discovered favorites. She turned her back to him and rubbed her ass against his crotch, just as she had seen the other girl do. Every so often, he would smack her ass when the song would say \"hit that azz.\"\n\nShe felt his dick getting hard as she rubbed up against him. He wasn't as big as Treyvon was, but he was big enough to send shivers down her spine to her pussy, making her even wetter. Her huge tits jiggled obscenely as she danced, barely contained by her shirt. \n\nAfter the song ended, Amy glanced over at Mara, who was watching her dance with the same hungry expression she wore when she had stared at the other dancing couple. She saw Lamar whisper something to her, and saw Mara blush again and lower her eyes. \n\nAmy turned around and pressed her body against Darius. She felt his big hands grabbing her ass, and began to grind her pussy against his cock. She leaned in to whisper to him. \n\n\"I want my friend to fuck a black man tonight,\" she said in his ear. \"Is your buddy up to it?\"\n\n\"Shit, you don't mess around, do you, babygirl?\" he replied. \"Yeah, Lamar's always wanted to get some white pussy. He'll give her what she needs.\" \n\nDarius moved his hands up her sides as they danced, eventually stopping at her shoulders. When the next song came on, Amy felt him spin her back around. One dark-skinned arm snaked around her belly and pulled her ass tight against his crotch. His other hand groped at her breasts as their bodies moved to the music. \n\n\"What about you?\" came his voice in her ear. \"Are you gonna get fucked by a black man tonight?\" He pinched her nipple through her shirt. \n\nIn response she wiggled her ass into his cock. \"I don't know,\" she teased. \"What would my husband think?\"\n\n\"Shit, babygirl, I know you don't care about him. Your eyes have been begging me to give you my dick ever since I walked in,\" he said. \n\n\"Feel how wet my pussy is for you,\" she said, pulling the hand on her belly down to her cunt. His thick fingers slid her panties aside and caressed her slick mound. \n\n\"Come on,\" he said, taking her by the hand and leading her towards the restrooms. She looked at Mara, who was staring wide-eyed, and Lamar, who had a huge grin on his face. She watched Mara drain her glass before she was pulled into the hallway leading to the bathrooms. \n\nAs Darius was about to open the door to the men's bathroom, it opened on its own. The girl from the dance floor came out, fixing her top. Her hair and makeup were a mess. She smiled at Amy before walking down the hallway. \n\nDarius gently pushed her into the bathroom. The black guy was washing his hands. He nodded to them when they entered, as if it were the most natural thing in the world for Amy to be in there. Darius lead her to the stall. It was definitely disgusting, but at that moment she didn't care about cleanliness. \n\nAs soon as Darius closed the door, Amy was on him. She kissed his mouth, tasting the cognac he had been drinking earlier. She pulled her tits out of her shirt and thrust them into his face while she fumbled with his pants. When she finally succeeded in freeing his cock, she turned and bent over the toilet, splaying her legs to give him access. \n\nWithout another word, he pushed into her, the wetness letting him slide right in. She swooned as her pussy was taken by yet another black cock. His hands were on her thighs, pulling her back and forth on his dick. \n\nAmy held on to the handicap rail to keep from falling over. Her big tits swayed under her as Darius pummeled her pussy from behind. The bathroom echoed with the sound of their animalistic rutting. \n\nStrangely, she thought of Treyvon. She was sure he wouldn't mind her having sex with another black man. But he was always very protective of her pussy. \"He never let Mike or JJ fuck my pussy yesterday,\" she thought. \"He wants to be the one to get me pregnant.\"\n\nDarius picked up his pace, and she could tell he was about to cum. \"I'm almost positive that he already got me pregnant,\" she thought. \"But better safe than sorry.\" She stood abruptly and turned around. \n\n\"I want you to cum in my mouth,\" she said, sitting down on the toilet seat. \"I want to taste it.\"\n\nDarius didn't waste time. He jammed his hard black cock through her parted lips and down her throat. Happily, since he was smaller than Treyvon, she was able to take his dick without gagging. Five or six thrusts was all it took. Darius grunted, and Amy could feel his cock pumping his load into her mouth. She swallowed every drop, relishing the strong musky taste. \n\nWhen he was finished, he pulled up his pants and helped her up. \"Shit, babygirl, you are one bad bitch,\" he said as he opened the stall. \n\n\"You're not so bad yourself,\" Amy replied. She fixed her clothes and went to the mirror to check herself out. Her makeup was a little smeared, but everything else looked ok. \n\nAs they approached the door, Amy thought of how hot it would be to open it and see Mara and Lamar waiting to go in. She crossed her fingers as they walked out. There was a couple waiting to go in, but it was just some white guy and his girl. \n\nThey made their way back to the table. Mara was no longer alone with Lamar. Two more black men had joined them. Amy could see that Mara had finished her second drink, and was definitely feeling more comfortable. She was now halfway through the drink Amy had passed off to her.\n\n\"Yeah, we work right next door,\" she was saying to one of the new guys. \"You should come visit me. I think you guys would really like it there.\"\n\n\"Looks like she's made some new friends,\" Darius chuckled. \n\n\"Oh, Amy,\" Mara shrieked when she saw her and Darius walk up. \"These are Lamar's friends, Odell and Calvin. Guys, this is Amy, who I was telling you about.\"\n\n\"We might have to check this place out,\" one of the guys said to Lamar. \"If it has fine ladies like this working there...\"\n\nAmy smiled to herself. She would definitely like going work better if more black men started visiting the coffee shop. She knew Janice wouldn't mind either. They were would to need to hire extra help if the three of them would be spending all of their time in the back room sucking black dick. \n\nShe noticed that Mara was acting very flirty with the black men. She would constantly touch them on the arm as she spoke to them, and giggle like a schoolgirl every time one of them made a joke. \n\n\"You ready to go dance now?\" Lamar asked, putting his arm around Mara. \n\n\"Okay,\" she said, draining her glass and allowing herself to be pulled onto the dance floor. Once out there, she began to grind her ass on Lamar, just as she had seen the other girl do. \n\nAmy turned to Darius. \"We should get out of here soon. If Mara has any more alcohol she might get too drunk, and I want her to remember every minute of tonight.\"\n\n\"Alright, we can go back to my place,\" Darius said. \"Let's give them a few minutes to dance and see if these two clowns can pick up some girls for themselves. Otherwise we're leaving them here.\"\n\nThe other two guys scrambled to the dance floor to try their luck. Amy watched Mara dance with Lamar. She wasn't being as forward as Amy or the other girl had been, but judging by the way Lamar's pants were sticking out, he was enjoying it all the same. \n\nAfter three more songs, Amy waved her over. Mara reluctantly came back to the table. \"We're all gonna go back to Darius's place,\" Amy said to her. \n\nMara's eyes widened. \"Okay,\" she said, sounding uncertain. \n\n\"What's wrong?\" Amy asked. \"Don't you want to?\"\n\n\"No, I definitely want to,\" Mara smiled. \"That's what's so weird. I thought it would be harder. Like I would feel more guilty.\"\n\n\"That's just what it's like with black men,\" Amy said. \"It's like our minds subconsciously know that's who we are supposed to be with.\"\n\n\"Whatever you say,\" Mara laughed. \"Although you've been right about everything else so far, so who knows?\" She turned around to go fetch Lamar. \n\n\"We all took cabs to get here,\" Darius said to Amy. \"You two alright with that?\"\n\n\"I can drive us all,\" she said. \"I'm parked right next door.\"\n\nLamar and Mara met them at the door. Odell and Calvin were nowhere to be seen. The four of them walked around the corner to her minivan and got on their way. \n\nDarius sat next to her in front. Mara was with Lamar in the second row. Darius gave her directions as they drove. In the rear view mirror, Amy could see Lamar feeling up Mara's tits and kissing her. She couldn't see where Mara's hands were, but she could tell they were moving. \n\nFifteen minutes later they arrived. Darius let them inside. He led the way to the living room, which had two large couches. He sat down on one, pulled Amy into his lap, and started kissing her. She kissed him back, their tongues dancing in each other's mouths. \n\nNext to her, she saw Lamar pull Mara down on top of him. \"I want to see,\" Amy whispered. Darius released her, and got up to turn some music on. \n\nMara was straddling Lamar as they made out. His hands had already pulled down her tube top, and were squeezing her perky breasts. His pants were open, and Mara's fingers closed around his black cock. \n\nDarius came back with his pants off as well. Amy took the hint and stripped off her shirt, releasing her big tits. She grabbed Darius's cock and began to stroke it. \"We can fuck again, but I want to be able to watch Mara,\" she whispered. \"Also, you can't cum in my pussy.\"\n\n\"Afraid you'll get knocked up with a black baby, huh?\" Darius said. \"No worries, I can cum in your face again.\"\n\nAmy smiled to herself. He wasn't exactly right. It wasn't a black man's baby she was worried about, just the WRONG black man's baby. She let herself get pulled on top of Darius, and felt his cock push her panties aside to enter her again. Any other time Amy would ridden his black cock like her life depended on it, but that night she was more interested in Mara's first blacking. \n\nLamar had pushed her down onto her knees between his legs. She had both hands around his dick, and was bobbing her head up and down on it. Every few times she would pull it out and rub the tip around her lips. Then it would go right back into her mouth again. \n\n\"She looks so beautiful, sucking that black dick,\" Amy thought as she slowly rode a black dick of her own. \"Just like I knew she would.\"\n\nLamar put his hand on top of Mara's head as she blew him. Amy heard her gag as the black cock penetrated her throat. The girl fought through it, though, and kept sucking. Amy felt proud of her. \n\nDarius's hands found her tits and were fondling them as he fed his cock into her pussy inch by inch. She arched her back and moaned, pressing them into his face. \"These tits are fucking amazing, babygirl,\" he said. \n\nNext to her, Mara stood up. Amy watched her take what was left of her clothes off. Lamar did the same, and the two embraced, kissing each other deeply. Amy loved the contrast of his dark skin on Mara's creamy pale ass as he explored her body. \n\nNext, Lamar laid her down on the couch. Mara's head was beside Amy's leg as she straddled Darius's lap. Lamar climbed on top of her, and lined his hard black cock up to the entrance of Mara's pussy. Amy reached down to stroke her face. \"Are you ready to experience what a real man's dick feels like?\" she asked the younger girl. \n\n\"Oh, my God!\" Mara cried as the black shaft pierced her tight pussy. \"It's so much bigger than my boyfriend's! It feels so good!\"\n\nAmy stared at Mara's pussy, watching it stretch to accommodate the black invader that was penetrating her. She began to ride Darius a little faster, feeling the familiar tingle of her approaching orgasm. \"Yes,\" she said to Mara. \"I told you that you'd love black dick once you tried it!\"\n\n\"Oh, fuck!\" Mara said, in ecstasy. \"It's so good, Amy. His black cock feels so good!\"\n\nAmy couldn't take it any longer. Finally seeing her naive friend taking black dick like a slut was too much for her. She felt her pussy begin to squirt as her orgasm washed over her. She forced her pussy down on Darius's shaft burying him as deep inside her as she could get. He kept sucking on her nipples while she came. \n\nShe was snapped out of her post-orgasmic bliss by Mara, thrashing and moaning on the couch next to her while Lamar pumped his hard black cock into her. Amy reached down and squeezed one of her pert breasts. Mara reaches her arms behind her and gripped Amy's thigh, squeezing hard. \n\n\"Are you cumming?\" Amy asked. \n\nMara nodded her head quickly, unable to speak. Seeing this, Lamar fucked her even faster. \"Fuuuuucckkk!\" she screamed, in a low, guttural voice. \n\n\"That's it,\" Amy encouraged. \"Cum on his black cock. Your boyfriend could never make you feel like that. This is why you need black cock!\"\n\n\"Yes! It's so good!\" Mara panted. \"So good! Yes!\"\n\nMeanwhile Darius had also increased his pace. He was thrusting into her pussy ever faster. Amy looked at his face, which was contorted into a grimace. \"Are you about to cum?\" she asked. \n\n\"Yeah,\" he replied. \"You'd better hop off if you don't want it inside you.\" He didn't slow down, however. She could feel his cock beginning to twitch in her pussy. \n\nAmy tried to stand, but Mara's arms were pinning her leg in place. She pulled away from the orgasming girl's grip, and this time was able to get off of Darius's dick. And not a moment too soon. Almost the exact second it pulled free from her pussy, the dark shaft began to shoot its load. Amy dropped to her knees and grabbed the spurting cock in one hand, aiming it at her mouth. \n\nThe first jet of cum hit her pussy as she stood. The second flew wildly into the air, landing on Mara's shoulder. The next two splattered across Amy's face before she finally got it into her mouth and was able to swallow the rest. \n\nAfter taking a few minutes to suck the rest of his cum from Darius's cock, Amy turned back to Mara. She was now on Lamar's lap, who was sitting up and bouncing her on his cock, reverse cowgirl style. Her eyes were closed as she rode him. \n\nAmy kissed her on the lips. Mara's eyes flew open, and Amy could see the animalistic hunger behind them. They kept kissing, Amy smearing Mara's face with Darius's cum. \n\n\"Are you on birth control?\" Amy whispered to her. Mara shook her head no. \n\n\"Are you going to let him cum in you?\" she asked. Again, Mara shook her head. \n\n\"You have to!\" Amy hissed. Her fingers flew to her pussy. She wanted to see Mara take a load bareback more than anything. \"Trust me. It feels so amazing when a black man cums inside you. It's absolutely worth the risk.\"\n\nMara gave her a skeptical look, which was wiped off her face a second later by a low moan of pleasure. \n\n\"Listen, you said earlier that I have been right about everything else so far. Just trust me. You won't regret it. After you feel that hot load pumping in to you, all you'll be able to think about is how to get it again,\" Amy whispered. \n\n\"Okay,\" Mara said finally. \n\n\"You want him to cum inside you?\" Amy asked, exited. Mara nodded. \"Then tell him!\"\n\nMara leaned her head back next to Lamar's. \"I want you to cum inside my pussy,\" she said softly. \n\nLamar must have been waiting for those exact words, because he growled loudly and let loose as soon as she said them. Amy went down to her knees to watch. Lamar's cock was buried to the hilt in Mara's pussy. She could see his balls begin to contract as he started cumming. She played with her pussy as she watched in awe, the underside of his cock pulsating with every jet of cum he released into the girl. \n\nMara screamed in orgasm as soon as she felt the first drop enter her body. Lamar wrapped his arms around her to steady her in place while his cock pumped his load into her pussy. Amy's fingers rubbed her clit as she watched her friend climax. Finally, as she saw a single bead of white cum begin to run down the black shaft inside Mara's pussy, Amy made herself squirt all over the floor. \n\nA few minutes later, after she had gathered herself, Amy stood up and looked around the room. The guys were taking on the couch. She walked up to Mara, who was standing at the window looking outside. When she turned, Amy could see she was crying. \n\n\"What's wrong?\" Amy asked, concerned. \n\n\"Nothing!\" Mara smiled. \"These are tears of joy. I had no idea it would be this good, Amy. I didn't know sex could be like that. Why was I wasting time with white guys all these years?\"\n\nAmy hugged her. \"I know. But this is just the beginning.\" Together, they walked back towards the two naked black men. Mara took Lamar's hand, and they disappeared into a hallway off to the side, presumably to a bedroom. \n\nAmy slid in under Darius's arm. \"I know I was kind of ignoring you before, but it's been my fantasy for a while to see my friend get fucked by a black dick. Can I make it up to you?\" she said. \n\n\"No worries, babygirl. You put on a great show. We should do this more often,\" he said. \n\n\"We can do it again right now,\" she purred. \n\n\"Yeah, but I mean tomorrow night, too. I know you're married, but you should be my girlfriend,\" Darius replied. \n\n\"I already have a black boyfriend,\" she said. \"But he's not the jealous type.\"\n\n\"Damn, I wish I would have met you sooner, babygirl,\" he said \"There can't be too many more like you out there.\"\n\nAmy smiled. \"Well, I do have a sister...\""
    ],
    "authorname": "MontanoIR",
    "tags": [
        "interracial",
        "bbc",
        "white wife",
        "impregnation",
        "cheating",
        "big tits",
        "squirting",
        "female masturbation",
        "lesbian"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/amys-fascination-ch-10"
}