{
    "title": "The Bra Salesman Ch. 07",
    "pages": [
        "Thanks again for all the comments and votes you have sent. I don't have time to reply to all of them, but I do read and appreciate them all, so thank you! :)\n\nChapter 7: The Confession\n\nUgh, I've been dreading this. All day long my hands have been clammy, my tongue has been dry, and my stomach feels like it ate several frozen burritos that may or may not have expired sitting in the tepid fridge of an off-highway convenience store that has old rusty gas pumps out front that you can't swipe a credit card on. And right now, I'd prefer eating those crappy burritos compared to what I'm about to do.\n\nLast night I realized I'm falling for Tasha. Fine, I'll go ahead and say it, I'm falling in love with her. As much as I don't want to admit it, I've grown to care about her. And that is probably the worst thing that could have happened to me.\n\nAll day at work I've been thinking about what I'm going to say to her tonight. How do I tell her that I'm not actually a bra salesman, that when we met I tricked her into letting me fondle her huge 48-inch breasts and fuck her in the dressing room? How do I say that all the exercises I've been giving her to help her fit into her lingerie, y'know the ones where she sucks my dick and I fuck her in the ass, all of those exercises are totally 100% bullshit? \n\nDave kept coming to my cubicle today and asking yet again if he can come over again so the two of us can fuck her again like we did before, but I've just been staring blankly into space. I don't know how to tell her any of this. Things were great before. She was a dim-witted woman with large tits that I could fuck whenever and however I wanted. It was all perfect and fucking spectacular.\n\nAnd now? Now I'm falling for her. I let myself get goddamned emotionally attached, and now I'm fucked. I've got all these lovey-dovey feelings churning in my chest that are making me feel guilty and are compelling me to come clean to her and tell her the truth. All of it. Every last bit. And it is going to totally suck and I am going to lose the best piece of ass I've ever had.\n\nBut then that's the problem. She's no longer a piece of ass, is she? No, now she's someone I care about and that makes me so fucking mad at myself. Why couldn't I just keep fucking this beautiful woman with the perfect body and unbelievable tits and just keep my mouth shut, my cock in her cunt, and my stupid fucking heart out of it? Most guys with a normal operating brain would leave well enough alone and keep fucking the big-breasted woman as long as possible. But noooooo, not me, not stupid asshole me, no I have to get emotional and loving and caring. I am such an idiot.\n\nSo I'm knocking on her apartment door and I still have no fucking idea what I'm going to say to her. But the sad fact is I can't keep living like this. I feel like there's the weight around my chest that makes it fucking impossible to breathe, and it's never going to get better until I'm honest with her about who I am and what's been going on.\n\nShe's hiding behind the door as she opens it with a big grin on her face like she's happy to see me. Because she is so fucking overjoyed to let this liar into her home and have an asshole like me fuck her and touch her, when I don't deserve any of this. \"Hi Albert, come on in!\" Hearing my fake name feels like having my forehead stabbed with a butter knife. Don't ask me why it's a butter knife, I have no fucking idea, ok? \"Hey, what's wrong?\" she asks as she closes the door behind me.\n\nI turn towards her and begin, \"Hey, I...\" I see now she's wearing some black fishnet stockings and nothing else. Holy fuck, this is going to be even harder than I thought. Go ahead dickhead, tell her everything. \"Listen, we need to talk.\" There it is. That's the phrase that everyone knows is a precursor to some horrible, despicable truth that no one wants to hear. A take a deep breath, trying to formulate the first sentence that I know is going to end our relationship forever. Fuck.\n\nBut before I get a chance to continue, Tasha blurts out, \"Oh! Wait a minute! Before you tell me, I want to tell you what happened to me earlier today!\" She still has this sneaky little smile on her face. Did she not hear what I said? Or does she not know what a phrase like that means?\n\n\"You'll be so proud of me, I think all the exercises we've been doing are really working! Remember that car repair shop that said that they require a blowjob whenever they give an estimate?\" You mean the perverted assholes who have been taking advantage of your naivet\u00e9 and lying to you just like I have been? I can think of a lot of words I'd use to describe them, but I won't because they're rubber and I'm fucking superglue with a liquid bonding shellac surrounded by a pasty adhesive. Or something like that.\n\n\"Well, they called me a few days ago and said that according to their schedule, my car needed to be serviced again. So I brought the car in today, and when they lifted the hood, they immediately noticed that my car needed some lubrication.\" Oh crap, is this a long story? I wanted to get this out before I lose my nerve. Shit, she's not stopping.\n\n\"But then they found out that they were all out of lubricant at the shop and that I would have to wait three weeks until the new lubricant came in. And I told them I couldn't wait three weeks for my car!\" Oh no, I do not like where this is going.\n\n\"So they told me that for some cars, semen can work as a good lubricant, but they needed my help to get their semen out. So I was happy to help them get my car working again so I didn't have to wait three weeks.\" Ok, I'm definitely starting to understand why your old boyfriend got frustrated with you.\n\n\"They gave me a tiny collection jar and I got on my knees and started giving two of the workers hand jobs, but they told me that was going to take too long and that I needed to give them blowjobs. Well, I wasn't thrilled, but of course I did it so I could get my car fixed. So I'm going back and forth between the two of them sucking as hard as I could.\" This story would have really turned me on a few days ago, but now that I actually care about her, this is really pissing me off. \n\n\"And just when one of them is about to cum, he grabs my head and holds in place so I can't move and all his... y'know, spunk shoots into my mouth. When he's done, I tried to dribble as much as I could into the jar, but it was hard to see and most of it ended up on my chest.\" I feel like I should say something, but of course I can't. I didn't say anything about these pricks the first time she told me about this repair shop, so what am I going to say now?\n\n\"So then I start sucking on the other guy, and I can tell he's ready to... y'know, and he does, but I kept missing the jar and I didn't catch hardly any. Most of it ended up all over my face and chest.\" Oh my god, my cock is throbbing and ready to burst out of my crotch.\n\n\"I apologized for not being very good at catching. I grabbed a rag to wipe off their sperm and put it in the jar but then it turns out that none of their rags work on semen. So I had to lift my boobs up and lick as much of it off of me as I could.\" That's right, nonchalantly move your pants around so your stiff dick has some room to maneuver.\n\n\"The good news is that there were four more workers there that day, so I get some more chances to catch more semen. One guy says he doesn't like blowjobs and can only produce semen when... y'know, doing a woman from behind.\"\n\n\"I really want to get all the semen I can for my car, so of course I get on all fours and let him do my from behind while I give the other guy a blowjob.\" Oh Lord, my cock is so hard now it's painful. \n\n\"Unfortunately they both came at almost the same time, so I couldn't get any semen from the guy in back of me. But I caught a lot of semen in my mouth and dripped it all in the jar.\" Maybe if I hold on to my dick through my pocket, I can keep it from rupturing my zipper.\n\n\"The lead mechanic said I still didn't have enough in the jar yet, so he called over his last two workers. They wanted to do the same thing, have one person do my from behind while I give a blowjob to the other. And I get on all fours again and was willing to do that again.\" I don't know what's making me hornier, listening to this story of hers or watching her tell it while standing there naked wearing nothing but black stockings. \n\n\"But after I put the one guy's... y'know, thing in my mouth, the other guy completely misses my hoochie and he's in my butt instead! Can you believe it?\" Oh, I can believe it, I know how wondrous your ass feels.\n\n\"I tried to say something, but of course I have the other guy's thing in my mouth. You think the guy behind me would know that he was in my butt, but apparently he didn't because he just kept on going.\" Oh my god, I think I'm going to cum in my pants. Quick, think about depressing things.\n\n\"It made me really sore, but at least he shot his spunk pretty quick. It was hard holding the jar under me while giving a blowjob, so I don't know exactly how much I collected.\" Horrible, terrible things. Death. Paying taxes. Getting a root canal. Sweet merciful heavens, just look at her body.\n\n\"But you would have been proud of me, I really started sucking hard, I mean really REALLY hard. I could hear the guy groaning really loud, so I knew it was working. He grabbed my head as well, but I kept right on sucking as hard as I could.\"\n\n\"He also shot his load into my mouth, but I hardly swallowed any at all and I managed to get nearly all of it into the jar. I had to lick a couple of drops off my boobs, but it wasn't very much.\" Drops of cum on your tits? I am so going to shoot a load in my pants right now.\n\n\"So long story short, the mechanic at the repair shop said that I did manage to get enough semen into the collection jar and I can pick up my car tomorrow! He also said that I looked great in my underwear and they really appreciated my help, so I think all the exercises we've been doing have really worked great. Isn't that great?\" Please oh please tell me this story is over, I don't know how much more I can stand.\n\n\"He did say something about needing to get some more lubricant next week for the back tires, but he would call me about that in a few days.\" Note to self, make sure she gets a jar of your cum to take to those pricks so that she won't have to... oh, who am I kidding? She's going to get talked into it one way or another.\n\n\"But anyway, you were starting to tell me something before I went on and on with my boring story. What were you saying?\" Oh right, how I need to confess that I'm a complete douchebag and that telling you all the lies I've been telling are going to make you hate me forever. Yeah, I almost forgot.\n\nUm, hello? Hey asswipe, it's been a fucking eternity. Standing in her apartment and not saying anything is kind of creepy and stupid. It's like you're just waiting here with this weird look on your face, just spit it out already. Tell the naked woman wearing nothing but sexy stockings what you know you have to. Be a man and do what's right for once in your miserable life. Just say it already.\n\nBut she breaks the silence first, \"Hey Albert, if you want to tell me later, that's ok. There's something I want to show you.\" Oh Jesus fucking Christ, you coward, grow a pair and just tell her what you need to. \"Ever since last night, I've been thinking about this, and... well... I wanted to... here, I'll show you.\" Why is she bounding over to her closet and pulling something out? And why does she have to look so fucking incredible as she does it? \n\n\"I was hoping you and I... well, I...\" she's holding a duffel bag that looks vaguely familiar. With a giggle, she says \"Gosh, this is embarrassing. I just... it's been months since... I really wanted... was hoping... you and I... maybe we could use some of this... like we did the other night.\" Good Lord, what the fuck is she talking about? I hope a coherent sentence is coming along any minute now.\n\nAnd then I remember where I saw that duffel bag. That's the bag that my coworker Dave brought over the other night, when he was posing as Dr. Cooper who had some... what did he call it? \"Super-duper ultimate-radical therapy\" to help her. And then he opens up this duffel bag full of handcuffs and blindfolds, and ball gags and nipple clamps and dildos and whips and who knows what else. Oh my god, that's right! She fucking loved that! After a night of fucking her every way humanly possible, she said she wanted to do more of that! \n\nNO! No no no no no no, I can't! I can't keep lying to her! I have to come clean and tell her what I've done and oh shit she's pulling out the handcuffs and smiling sheepishly. Or maybe that's her seductive face, I'm not sure. Oh dear god, now she's biting the stem of the whip and taunting me with her naked body. Ok, that's definitely her seductive face. NO! No, I've got to tell her everything that I've been oh Jesus, now she's swinging the nipple clamp chain around her finger, her bare breasts slightly jiggling with the motion, and laughing. \"So? What do you say?\"\n\nLord, I have to know, is this some type of cosmic, karmic trial to see just how honest a person I am and to see if I truly want to change my depraved ways of lying deceptions and become a better man? Because if that's what this is, if this is some sick, twisted test of yours, I need to go on record right now and let You know that ever since middle-school I have incontrovertible and immutable proof that I am in fact fucking horrible at tests. \"Hop on the bed and you put on the blindfold and I'll help you with the handcuffs.\"\n\nShe claps her hands gleefully and runs into the bedroom, pulling the blindfold over her eyes as she jumps on the bed and lands on her knees. Wow, she is really giddy about doing this! I don't know where this is coming from, but I will fall on my goddamned knees later and thank every god that does or might exist for bringing this angel into my life. And by angel, I mean a woman with enormous tits and a sluttish fixation on bondage. I think I'm even more in love with her now.\n\nI follow her into the bedroom carrying the duffel bag. I put some items on the bed and then get on my knees behind her on the bed. Abruptly I pull the bands on the blindfold so that they tighten over her eyes. She didn't realize what I was going to do so she gasps with surprise. \n\nI lean into her so that my mouth is pressed against her ear and whisper, \"Now you have to do everything I tell you, understand?\" Since she likes bondage, I figure she would enjoy playing the role of the helplessly subservient girl. The way she is eagerly grinning and nodding her head makes me think I'm right.\n\n\"Put your hands behind your back and don't say another word,\" I murmur and she immediately obeys. From behind her, I reach around and sink my fingers into the soft flesh of her breasts and rub them gently.\n\n\"Are you going to be good?\" I ask. She giggles and nods. \n\n\"Are you going to be bad?\" She playfully pouts and shakes her head. \n\n\"Because you know what happens if you're bad, right?\" Suddenly I grab her erect nipples and stretch them outward which makes her gasp and arch her back. \n\nI take the handcuffs that she'd been holding onto and snap them into place around her slender wrists. I tighten them to the point where they are pressing against her skin without causing too much pain. This pair of cuffs has an adjustable chain that I yank hard, which presses her wrists together and causes her shoulders to move back and her massive chest to jut out even more.\n\n\"Now you're mine,\" and I pull her hair back and clamp my teeth on her neck. With her blindfold on, she has no idea what I'm going to do or when, so she gasps in startled surprise when I bite down hard on her erect nipple, and then she immediately starts moaning.\n\n\"You belong to me,\" and I remove one hand from her breasts and press it into her groin and stroke her already damp pussy, \"every part of you.\" She spread her legs a little to give me more access to her. \"And I will do whatever I want.\" \n\nI forcefully plunge two fingers into her drenched twat and she grunts with pleasure \"UNGH!\" Her vagina swells with wetness and I move around inside her. She grinds her pelvis to help me push deeper inside her as she moans in approval.\n\nFrom the pile of items on the bed, I grab the nipple clamps and chain. I quickly examine the tiny metal clamps and assume that the small jagged edge of the clips can't hurt that much. But when I hear her yelp as I attach one of the clamps onto her stiffened nipple, I figure they must be more painful than they look.\n\nIn fact, she's holding her breath and clenching her lips, so I whisper in her ear, \"Do you want me to attach the other clamp?\" Immediately she nods her head, even as she keeps gritting her teeth and breathing quickly through her nose. I clamp the other end on to her remaining nipple, and she loudly whimpers and sniffles.\n\nThe loose chain between her breasts drapes below her navel, and I grab a hold of the chain and lightly pull down. She throws her head back and opens her mouth wide with a piercing sob, but then immediately presses her mouth shut. \"Are you ok?\" I ask. I mean, this is all fun and games, I don't really want her to be uncomfortable.\n\n\"It hurts,\" she whispers, \"but in a good way. I like it.\" I see a single tear emerge from under her blindfold and run down her cheek.\n\nI rub her chest some more, being careful to avoid tugging on the clamps or chain. She moans in appreciation as I softly kiss her neck and run my tongue down the long veins of her throat. \n\nWithout warning I push her down face first into the bed. She gasps and laughs at the same time, still blindfolded with her hands shackled behind her, as I position her ass so that her legs are spread wide, her pelvis is up in the air, and her head and torso are lying down on the bed. \n\nI press my throbbing cock into the moistness of her clit and move it around a little, which made her moan again. At first I softly press the tip of my penis in and out of her slit as I hold her firm, round ass still. Then I rapidly shove my cock into her as hard as I could, and she gasped. Slowly I pull myself out and rub the tip of my penis around her outer lips again. Suddenly I forcibly plunge inside her again, and she whimpered with pleasure. \n\nShe wiggled her ass a little, as if she were trying to entice me to fuck her from behind right then and there. As if I needed any more enticement. I grabbed her hips and pulled her back as I shoved my cock forward as hard as I could. She screamed, \"UNGH!\"Again and again, I hammered at her, \"UNGH! UNGH!\" and soon she was gasping for air and yelping at a high-pitch that only certain mammals could hear, me not being one of them. \"OOOOOH!\"\n\nThe muscles of her buttocks shook with every impact of my thrusts, \"UNGH!\" and I could see the sides of her massive breasts shaking underneath her \"UNGH! YES!\" as her whole body shuddered every time I rammed myself into her. \"UNGH!\" \n\nHer pussy was soaking wet by now, and the pillowy walls of her vagina were so swollen I could barely shove myself into her tight cunt. \"YES! YES!! UNGH!!\" But I continued driving myself into her body as hard as I could \"UNGH!\" over and over until her body trembled in orgasmic pleasure. \"UNGH! UNGH! UNGH! UUUUUNNGH!\"\n\nI hadn't come yet, so I didn't stop pummeling her defenseless body, \"UNGH!\" and she kept crying out with excitement. \"YES! YES!!\" I felt my own cock swell with cum \"UNGH!\" and I knew I was about ready to cum. \"UNGH! UNGH! UNGH!\" \n\nI dug my fingers into her back and ass and gyrated my body faster and faster, \"UNGH! UNGH! UNGH! UNGH! UNGH! UNGH!\" My pelvis was a jackhammer blur of thrusts \"UNGH! UNGH! UNGH! UNGH!\" and I heard her let out a long, orgasmic wail.\"UUUUUUNGH!\" \n\nMy cock exploded with jism, coating the inside of her vagina with my warm, sticky cum. I slowed down and felt my own heart beating like I'd run a marathon. I heard her panting for air, facedown in the bed, still blindfolded and shackled. As I slowly pulled myself out of her, a few small drops of cum slid out as well and ran down her inner thigh and over her black stockings.",
        "I rolled her over on her back as her chest continued to heave from gasping for air. The chain attached to her nipple clamps shifted from side to side with each breath. \"Just because I came,\" I tell her, \"don't think you're done.\" I grab a dildo off the bed, \"After I lube this dildo, I'm going to shove it inside you until you beg me to stop.\"\n\n\"No,\" she says between pants. \"Don't lube it, let me!\" And with that, she opened her mouth as wide as possible. If I'm going to fall for someone, I am so fucking glad I am falling for a woman who loves to put cocks in her mouth like a slut.\n\nI carefully put the rubbery penis into her mouth and she instantly starts moving her head back and forth, ravenously sucking on it. Listening to the sounds of her slurping and sucking on the cock-shaped device was suddenly making me extremely jealous of polyethylene. After a minute or two, the dildo is completely covered and glistening with her spittle.\n\nI hold the dildo and circle around her labia for a few times before I press it into her. Even though she is already wet and ready, I want to be sure she can handle the dildo since it is somewhat bigger than my cock, which again makes me jealous of the polyethylene dick.\n\nI slowly move it in and then pull it out, and as her body writhes I can already see that the dildo is coated with a mixture of spittle, cum, and pussy wetness. It slides in easily as I push inside her again, and I hear her moan. As I move the dildo in and out of her, I twist it a little and she arches her back, \"ungh.\"\n\nBy now the dildo is thoroughly lubricated, so I plunge it inside her harder, and she welcomes it by spreading her legs further apart. \"Ungh!\" I am moving the shaft faster and faster as drops of cum and wetness drip out of her pussy \"UNGH!\" but I am only able to put it in about two-thirds. \"UNGH!\" \n\nI force it into her harder with more vigor \"UNGH!\" and she keeps opening her legs wider. \"UNGH!\" Her hands are cuffed behind her back as her breasts, glistening with perspiration, shudder with each thrust \"UNGH! UNGH!\" I plunge it in even harder \"YES!\" and faster \"UNGH!\" and with more vigor \"YES! YES!\" until I get almost all the shaft into her. \"YES! UNGH! YES!!\" \n\nHer moist body is squirming with pleasure, and the chain draped between her gigantic tits moves from side to side every time I drive the dildo in her. \"UNGH! UNGH! UNGH! YES!\" I continue ferociously shoving it in, \"UNGH! YES!\" brutally hammering at her defenseless body \"UNGH! UNGH! YES! OH GOD! YES! UNGH!\" until she trembles with orgasm.\n\nBut I don't stop. \"UNGH! UNGH! OH GOD! UNGH! UNGH!\" She arches her back and spreads her legs as far as possible \"YES! UNGH! OH MY GOD! YES!\" I keep shoving the dildo into her hard \"OH GOD! UNGH! YES!\" until her sweaty body shudders again with another orgasm. \"OH GOD! OH GOD! UNGH! OH GOD! YES!\"\n\nBut I still don't relent. \"UNGH! OH MY GOD! OH MY GOD!\" I want to see her cum again.\"OH MY GOD! UNGH! YES! OH MY GOD!\" so I keep pummeling away at her vulnerable pussy \"UNGH! UNGH! YES! OH GOD! YES!\" until I watch her body thrash and shake wildly with yet another orgasm. \"YES! YES! YES! YES! OH GOD! YES! YES! OH GOD!\"\n\nFinally I stop and slow down, moving the dildo gently in and out of her a few times before pulling out. She is gasping profusely with beads of sweat dripping down and between her enormous tits rising and falling. She is still blindfolded, so I can't see the look in her eyes, but I can tell from her smile that she is in ecstasy with pleasure. \n\nI climb on top of her and kiss her lovely mounds of sweaty breast flesh and whisper, \"You've been a bad girl.\" I grab a hold of one of her nipples and slowly twist it. She opened her mouth but no sound came out. \"And now,\" I said releasing her tender nipple, \"I'm going to have to punish you.\" Still panting, she nodded enthusiastically and licked her lips.\n\nI grabbed both her nipples and squeezed the clamps even harder, and she threw her head to one side. I twisted her tits, and her entire body shook and every muscle tensed and quivered. She was wiggling with pain and excitement, tears coming out of her blindfolded eyes, and her massive breasts rippled as she trembled. I finally let go, and she started breathing loudly.\n\nI released the clamps from her nipples, now red and sore, and I gingerly bit them with my teeth. Her body struggled against the shackles behind her back as she arched her back and whimpered. I started sucking her tender nipples as hard as I could, and she cried out in pain. I gnawed and sucked, and her torso was instinctively twisting from side to side, helpless to stop me.\n\nIt wasn't long until I relaxed my mouth and softly slid my tongue over her tender nipples and up and down the skin of her breasts. I wandered around her entire chest, always coming back to her nipples and lapping under the clamps on her stiff, erect tips. \n\nShe whispers something to me, but I can't quite hear. So I lean in closer to try to make it out, \"punish me.\"\n\nThat was not something I expected her to say, but I decided to go along with it. I mean, I don't know how often a big-tittled woman like this is going to let me handcuff her, so I wanted to get as much out of this as I could. As I put the nipple clamps back on her breasts, I breathlessly ask her, \"And how should I punish you?\"\n\nShe rolled to the corner of the bed and digs around with her face in the pile of stuff until she gets the whip in her mouth with dozens of long, black strands of soft, silk lashes hanging down on one side. She returns to me like a golden retriever that desperately wants me to take the gift from its mouth and throw it again. Only this time, it's a retriever with enormous tits that wants me to whip her.\n\nI help her off the bed and take her to the other side of the room where her closet is. I open the door and see what I'm looking for; a hook at the top of the door. I take off all the dresses hanging there and throw them into the closet. Then I loosen the handcuffs around her wrists behind her back, then turn her around and reattach the handcuffs in front of her. Now I lift her arms over her head and wrap the chain around the hook in the closet. She is still blindfolded, but when she gives a tug, she realizes that her hands are now trapped over her and she is completely defenseless. She smiles and licks her lips when she hears me give a muffled practice snap of the whip.\n\nNow I have to confess, I've never been very comfortable with whipping anyone. And this is coming from someone who has repeatedly lied in order to continuously fuck a woman I didn't know and work it so that a friend could also fuck her. But there is something about whipping that just seems a little, I don't know, savage and cruel. The fact that the lashes on this whip were soft and silky meant that they wouldn't actually hurt like a real whip would. But more importantly, seeing her blindfolded, curvaceous body squirm with delight when the strands of the whip softly slashed across her naked back, her hands tightly handcuffed over her head helplessly, was enough to change my mind for me.\n\nI reared back and brought the whip forward again, and the silky strands beating against her skin made her yelp with pleasure. Again I whipped her, and she cried, \"YES!\" Over and over the strands of the whip slapped against her back and ass, \"YES! YES!\" and I watched her wiggle with glee. \"YES! UNGH! YES! YES!\" \n\nAfter a few more times, I saw her back was starting to redden, and I realized that even with such soft strands, the whip must still be hurting her. I was afraid her body might be stinging too much with pain and soreness, so I stopped beating her and asked her, \"Are you ok? I see that...\"\n\n\"DON'T STOP!\" she yelled to me as she turned around and bared her immense chest to me. \"Punish me!\" Her hands were still handcuffed over her head, and her blindfolded body trembled with excitement at having her exposed and vulnerable breasts beaten and whipped. The claws of the merciless nipple clamps dug into her erect nipples as the chain swung between her massive bosoms. Jesus Christ, I've never been with a woman who wanted to be whipped before. Her shouting almost made her seem like a completely different person.\n\nI slapped the whip across her sweaty body and she shrieked with pleasure, \"YES! OH GOD!\" Repeatedly I pummeled her body, \"YES! YES! UNGH! YES\" bringing the lashes ruthlessly down on her raw tits and nipples, \"YES! UNGH! YES! YES!\" until I saw them swelling with a painful redness. \"YES! YES! OH GOD! YES! OH GOD! YES! UNNNNGH!\" I had never seen anyone orgasm from a whipping, but goddamn that's what she did.\n\nI walked up to her and grabbed her breasts, and her shackled body twisted in the kind of pain that I could tell she found pleasurable. I leaned down and licked the sweat from between her incredible tits as I pushed two fingers into her cum-soaked pussy and felt it drenched with wetness and swollen with arousal.\n\nAfter I unwrapped her handcuffs from the hook on the wall, I led her back to the bed still blindfolded and threw her down on her back. Her hands landed over her head and I knelt between her thighs. One more twist of her clamped nipples made her cry in pain, but the smile on her face let me know she enjoyed it. I pushed her legs apart and pressed my erect cock against her cunt, still soaked with sweat and cum. \n\nMy god, you would think after weeks of constantly fucking this amazing woman repeatedly and relentlessly that my penis at some point would give up, tell the rest of my body to go fuck itself, and wilt away in protest from all the nonstop usage. But my brain and hormones profusely thank my persistent cock once again hardens into a stiff, ready-to-fuck shaft. \n\nI slide my dick in and out of her a few times as I listen to her moan with satisfaction. I can feel the muscles around her pussy tightening around my ecstatic cock as I nibble on her tender tits that writhe every time I bite my teeth on her reddened skin. My mouth is full of so much of her breast flesh that I barely taste the steel clamps still clutching her raw nipples.\n\nI shove my cock hard into her, and she gasps in pleasure, \"UNGH!\" already aroused from the whipping. Each time I thrust hard into her, she moans with encouragement, \"YES! YES! UNGH! OH GOD! OH GOD!\" Soon I'm hammering myself as hard as I can into her, \"UNGH! UNGH! UNGH! UNGH!\" as the chain on her enormous tits shakes from side to side, \"YES! OH GOD! OH GOD! YES! YES! UNNNNNGH!\" \n\nShe lets out a high-pitched scream in orgasm, but I haven't released my load yet, so I continue to pound her helplessly shackled body, \"UNGH! UNGH! UNGH! UNGH! YES!\" I grit my teeth and growl like an animal as she keeps screaming \"YES! YES! UNGH! YES! UNGH!\" \n\nI can feel myself ready to cum, so I grab one of her tits and squeeze hard, \"YEEEEES! UNGH! UNGH! UNGH!\" trying to maintain my balance on top of her as best I can. \"UNGH! UNGH! UNNNNNGH!\" I give a few more thrusts and then feel the streams of jism shooting into her warm pussy.\n\nExhausted, he laid down on top of her as the two of them gasped for air. She was still blindfolded and handcuffed, and with him pressing down on her breasts, he tried to be careful not to move and twist the clamps still embedded in her erect nipples. After they caught their collective breath, he eased his cock out of her and rolled over on his back beside her on the bed.\n\n\"Thank you SO much!\" she said with a dazzling smile as he slid the blindfold off her eyes and over her head. \"I have been desperate to do that with someone for months now. I begged Jack to whip me, but he always refused. I didn't think I'd find anyone I trusted enough to do that with,\" and then she turned her head and looked directly into my eyes. \"Until now.\"\n\nAs I took the handcuffs off of her hands and massaged her wrists, I knew I had to come clean. I had already cum so many other ways, after all. \"Tasha,\" I stammered. I hate this, I finally found a woman I like. And by that, I mean a woman with huge breasts that will not only let me fuck her continuously for weeks but who apparently has an insatiable fetish for bondage. And she is looking at me, tell me how much she trusts me. Now I have to tell her how untrustworthy I really am. This totally, completely, absolutely, royally, utterly sucks. \n\n\"Tasha, I have something I need to tell you,\" Damn it, I wish she would stop looking at me with such huge, adorable eyes. \"Something I have to confess.\"\n\n\"It's ok,\" she giggled, \"I already know.\" What? She knows? You mean, I've been wracked with guilt about how I've been lying to her when in fact she has seen through me this whole entire time? \"You don't have to be shy! I've done the same thing!\" Ok, clearly we are not talking about the same thing. \n\nI guess my face must have shown some confusion, because she kept going. \"You know!\" and then she whispers to me, \"Sometimes I orgasm too when we did our exercises together!\" She gave me a play slap on my arm, \"I've told you that! So it's ok! I don't mind that it's happened to you too!\"\n\n\"No, it's not that... I mean, yes I have orgasmed... but that's not what I wanted to tell you.\" I leaned down and pressed my head between her gorgeous breasts and took a deep breath.\n\n\"Then what is it?\"\n\nHere it is. Finally. The moment of truth. The moment where I actually tell her the truth. I hate this, I fucking hate it. But I feel like my heart is going to sink into a pit of despair if I don't tell her. Just tell her now. Just do it.\n\n\"Albert? Is everything ok?\"\n\nGo ahead! What the fuck are you waiting for?!? Tell her your name is not Albert! Tell her you've never been a bra salesman! Tell her there's no such thing as lingerie exercises! Get this goddamn fucking burden off your back! You can't live like this, you have to fucking tell her what a fucking liar you are! \n\n\"What did you want to tell me?\"\n\n\"I..\" Yes, I know those eyes of hers are full of innocence and affection and trust in you. \"I...\" Yes, she is looking at you expectantly because she believes in you, she has faith in a schmuck like you. \"I haven't been completely honest with you.\"\n\n\"What do you mean?\"\n\nI mean fucking everything! Tell her!! \"What we've been doing... these exercises... I...\" Goddamnit, will just fucking tell her already? \"They're not real. None of this is real. I've been lying to you from the start.\"\n\n\"Albert?\"\n\n\"I've never been a bra salesman, these exercises are all bullshit, the other doctor I brought in isn't a doctor, everything I've told you from day one isn't true at all.\" Oh shit, here it goes.\n\n\"Albert?\"\n\n\"My name isn't Albert, it's really John. I'm a complete fraud. I am an asshole liar who has taken advantage of you. I'm a horrible, despicable, conniving, scheming fake. And Dave wasn't a doctor, he was a coworker of mine I let come over.\" I can't believe it, I'm finally telling her! I'm actually telling her the truth! Don't stop!\n\n\"What are you saying?\"\n\n\"But the truth is that I've come to care for you and I can't keep doing this to you. I'm sorry, I don't want to hurt you, but I can't keep lying. I want you to know the truth and I hope you can find it in your amazingly wonderful heart to forgive me. Please, I beg you, please!\" \n\nOh my god, I did it! I really did it! And that felt so good, to finally stop the lies. My heart feels like a huge weight has been lifted. My lungs are actually filling with air for the first time in what seems like days. My body even feels lighter. She probably hates me, but I am convinced this is for the best, and I am so glad that I told her.\n\n\"Albert, I couldn't hear a word you said with your face pressed into my boobs. Could you repeat all that?\"\n\nFuck! I have to go through all that again?!? It was hard enough putting my heart on the line, and now I have to summon up the moral courage to do it again? Are you fucking kidding me? How much courage do you think a prick like me has left now? Oh, fuck that! I can't do this again tonight. I turn my head and bury it between her massive tits whispering, \"Can we talk about it tomorrow?\"\n\n\"Sure thing!\" she says with a sweetness I find intoxicating. She settles back in the bed and with my head burrowed between her bosoms, I can hear her breathing slow down into a gentle sleep of pure innocence. I'll tell her tomorrow. I will. Or the next day. Absolutely I will. Maybe the day after tomorrow would be better? This week for sure. I mean, I have to. All these lies are going to bite me in the ass at some point. Just please let me bite her ass one more time before I do."
    ],
    "authorname": "bobrobertson",
    "tags": [
        "busty",
        "lingerie",
        "trick",
        "con",
        "breast",
        "boob",
        "bra",
        "confession"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-bra-salesman-ch-07"
}