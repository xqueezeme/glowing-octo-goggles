{
    "title": "You're Not a Serial Rapist Ch. 24",
    "pages": [
        "\"Bill... Would you... would you,\" taking a deep breath, \"Would you like to make love to our very dear friend... Valerie?\"\n\nMy world came to a stop. I think even my hand stopped stroking her bare back.\n\nI didn't say anything. Just tried to grasp what the love of my life had just asked me. Thoughts racing through my brain in a nanosecond.\n\n'What?'\n\n'Where did that come from?'\n\n'Why?'\n\n\"Bill?\"\n\nKathy's face was now inches from mine. Those soft blue gray eyes. A look of love and gentleness. Her voice soft.\n\n\"Kath... Where did that come from?\" I softly asked.\n\nShe leaned in and lightly kissed my lips.\n\n\"Don't you know...? You're not supposed to answer a question with another question.\"\n\n\"I don't understand.\"\n\n\"It's a simple 'yes' or 'no' question. Asking for a simple 'yes' or 'no' answer,\" she softly said.\n\n\"I can't answer that, Kath. It's not a simple 'yes' or 'no' answer.\"\n\n\"Why?\" her voice still soft and quiet.\n\nTaking a moment, and taking a cleansing breath.\n\n\"I can't.\"\n\nHer soft lips on mine. Her eyes making me melt into hers. I hate it when she makes me melt like that. Well, maybe not. But still...\n\n\"Would it help, if I told you that I already know the answer?\" her lips on my cheek.\n\nI just looked at her. Confused.\n\n\"You two love each other.\"\n\nI started to say something. Kathy put her soft fingers against my lips.\n\n\"You two have loved each other for a long time. Before either of you even knew it. Before either of you wanted to acknowledge it. Long before you actually said the words to each other last winter, at the end of the quarter. You two have shared those heartfelt words many times since then.\n\n\"You held her, as she cried on your shoulder, after that day when she visited the Art Institutes. She thought you were mad at her for not including you in the whole idea of changing schools. That she was afraid of losing her two closest friends. I think that it hit her to the core. It was something she was determined to not let happen... no matter what.\n\n\"Valerie's been naked and in our bed a number of times. The first time we comforted her during that storm. The second time was the night she moved in with us and just wanted to be close to us. The time she cried on your shoulder as we comforted her after that 'asshole' of a date. And then when it got cold... I'm glad you didn't get her an electric blanket. And many other times.\"\n\nThere was a brief smile before turning serious again.\n\n\"You've held her bare body against yours many times. You have always been respectful and careful with her. Even when putting sun tan lotion on her front.\n\n\"So, why am I asking you now... if you'd like to make love to our best friend? Most women wouldn't even consider that... sharing their man with another woman... even a best friend.\"\n\nI started to say something again. And again, Kathy pressed her soft fingers to my lips. And then kissed me.\n\n\"Before we go any further. Would you please answer my question?\"\n\nRolling to my side so that we were both on our sides, looking deeply at each other. Kathy's hand gently stroking my cheek. Her cute little nipple peaking back at me. My hand gently stroking her cheek.\n\n\"Yes, Kath. I would like to make love to our very best friend.... Valerie,\" I whispered.\n\nShe leaned in and gently kissed me.\n\n\"See. That wasn't so difficult, was it? Besides, like I said, 'I already knew the answer',\" her voice soft and gentle accompanied by a gentle smile.\n\nShe scooted in close and our lips met, before pulling her on top of me. The kiss went on... and on... and on.\n\n\"I love you, Kathy.\"\n\nKiss.\n\n\"I love you, Bill,... We'll talk about it some more. Think about it.\"\n\nKiss.\n\n..........................................\n\nKathy said she wasn't going to say anything to Valerie until I was ready. However, I did start to look at Valerie differently. Kathy noticed immediately. There was always a tender smile when I looked back at her. Valerie didn't notice.\n\nLoving someone and being 'In Love' with someone are two different emotions that I had never consciously thought of. I knew that I definitely loved Valerie. But, was I 'in love' with her? I definitely missed her when she was gone. But, not like I missed Kathy when she was gone, like before she moved in. With Kathy, it was an emptiness a loneliness. That part of my heart was missing and longing for her return.\n\nI was not good at sorting through these types of emotions and feelings. I'm a guy.\n\nI was reminded of a cartoon I saw comparing the control panels of what controlled a woman's emotions and what controlled a man's. The woman's control panel was filled with lights, buttons, switches, and dials. The man's... one switch... 'On'... 'Off'.\n\nThoughts and questions kept going through my head.\n\n'What would our, as in all of OUR, feelings be toward each other afterwards?'\n\n'Was it going to be just a 'one time' thing? Or would Valerie be joining us in our bed. Or would there be times when it was just Valerie and me? I knew that Kathy and I would always have our times together.\n\n'What would I feel when I made love to Valerie?'\n\n'How would I feel after I made love to Valerie?'\n\nMost important, 'How would Valerie feel?'\n\nI think that thought was the most troubling. There was nothing I would do that would ruin our friendship. Our closeness. Our trust. Kathy was obviously OK with the whole thing, as it was her that brought it up. But, why? I couldn't do this until I understood the real 'Why'.\n\nI knew that if I told Kathy that I couldn't do it. That she would let it pass. So, there was no pressure.\n\n.......................................\n\nA couple of nights later, I said to Kathy, \"Let's go to bed.\"\n\nMy smile was soft. She knew it was a 'let's talk some more' smile. Non-verbal communication.\n\nWe said 'good night' to Valerie. She gave us a sly grin, figuring we were off for some 'lover's play-time', as it was still early.\n\nWe quietly got ready for bed: short shower together, teeth brushed... all that stuff.\n\nKathy draped her warm body over mine and waited. She knew to let me lead at my own pace. My hand gently stroking her smooth back.\n\nThe feeling of her warm soft bare breast against my side. The soft patch of pubic hair against my thigh. The scent of the body wash that I had used on her body a few minutes ago were all very comforting and drew me into her. I kissed the top of her head. She leaned up, kissed my cheek, then comfortably rested her head on my shoulder with her hand on my chest and waited.\n\n\"Kath. When I first asked you 'why', you went on and talked about the connection that Valerie and I share. How everybody has seen it. How much Valerie and I already love each other. Which are all very true. But, it didn't answer the real question, of 'Why?'\"\n\n\"I kind of thought that would be where you would go,\" She knew me so well.\n\n\"I'm glad to see that you've been seriously thinking about it. Over the last couple of days, I could tell you were. I could tell that you were looking at Valerie differently. I can't describe how much differently. Just differently. Like you were looking at her as more than a very good, and close friend. Deeper than that. And that's fine. What we are talking about here is something that is very personal... very intimate. Let me see if I can help. Tell you what's on my mind about Valerie and you.\n\n\"You know that she has never been with a guy. I think she's let you do more with her than she had with even that looser of an ex-boyfriend. And that's being kind.\"\n\n\"Yeah. I kind of figured that.\"\n\n\"A girl only has a 'first time' once. Every girl dreams that her first time will be something to be remembered. To remember that it was warm, tender, and loving. Not many girls get to experience their first time like that... not even me,\" her voice lowering to a soft whisper and almost cracking. I held her tighter. Once again, I wanted to kill that asshole.\n\n\"If the guy is as inexperienced as the girl, they'll fumble through it, and it's over in two minutes, or less. The girl laying there and wondering, 'what just happened?'. Wondering if that's it? Possibly feeling 'used'.\n\n\"The guy laying there, after just getting his rocks off. If the guy is just out for a 'conquest' then the girl feels cheap, like she's been used and discarded. I've known a few girls where that's happened. It affected them deeply, and for a long time.\n\n\"Bill. Valerie, our friend, deserves better than that. She deserves to be 'made love' to, for her first time. From a guy that loves her. From a guy that will treat her with love, respect, and caring.... A guy like you... her friend... her very dear friend.\"\n\n\"But Kath, she's put up so many 'not-to-be-crossed lines' I don't know that she would want to go there with me. To take our relationship to the next level. To become more than best friends.\"\n\n\"What level would that be?\" Kathy's voice still soft and comforting.\n\n\"Lovers.\"\n\n\"She would. I'll talk about that in a minute.\n\n\"But there's more. After her bad experience on that 'date' a few weeks ago, she's been really doubting herself. Wondering how she got drawn into that whole thing. How she totally misread that creep. I mean she came to our bed that night, cried on our shoulders, poured her heart out, and then slept comfortably and peacefully between us. She felt safe. Knowing that her friends were right there... protecting her. That we both loved her. That we were there for her when she so desperately needed us. That we would do anything for her. She needs to be loved. Emotionally... and, yes, Physically.\"\n\n\"I thought that was all past.\"\n\n\"That's the front she puts on. I know better.\"\n\n\"You've talked to her?\"\n\n\"A bit. She's scared to go out again. This is so different than when we were in school. In school, things were casual and fun, nothing serious. Now, there are guys out there interested in only one thing. To put another notch on their bedpost, not to say there weren't those kind of guys in school, it just seemed so aggressive now. I mean, look what almost happened to Alex. Valerie needs to have someone,\" looking up at me, \"to show her that not all guys are like that. To show her that she is special and deserves better.\"\n\n\"Wow,\" taking a deep breath, \"I had no idea she was dealing with all of that.\"\n\n\"There's one more thing. Remember that ex-asshole fianc\u00e9e of hers, telling her that she was frigid?\"\n\n\"Yeah. I remember. She told me about that. I couldn't believe that someone, in that kind of relationship would say that to the other.\"\n\n\"Or that time in her apartment, doing that second nude sketch of us. When she was done, she came around to show it us... and she was totally nude. She watched as you looked at her... at all of her, for the first time. I put your hand on her stomach and asked if she wanted you to touch her. I knew that part of her wanted you to. But, she wasn't sure. I knew you were excited at the prospect... you were still inside of me,\" I heard the grin.\n\n\"She knew it too. Then she apologized for getting you all worked up and not wanting you to go further. Asked that you not think of her as a tease.\n\n\"I don't think it was because of any line being crossed. I mean, I was there. It was different than when you guys had messed around before you met me. Then, she had lines, probably as much for her as for you. To keep you two from getting too serious. To keep everything on a fun and 'friends' level. We've talked about this. You never pushed her. Respected her every wish. Stayed with her as her friend. That the only thing you wanted from her was her friendship.\n\n\"I've watched as her boundaries with you have shrunken. From crawling into our bed with us. To letting you see her... all of her. Watching her touch you. Pressing her bare body against yours. I think she's ready for all of her lines to be discarded.\"\n\nTaking a deep breath, I started.\n\n\"I remember that time out back. The afternoon she was going to go back home at the end of her visit. All of us sun-bathing in the nude. You told her to put sun lotion all over my dick and balls. She was stroking me to the point of cumming. That you told her to finish me. She stopped. Not sure if she wanted... or could go there. I knew what she was thinking. I remember reassuring her that if she didn't want to, that she wasn't a tease. That she was my friend.\"\n\n\"I remember that too. I also remember that she asked you if you wanted her to do it. Then you told her that it was her choice. When she said that didn't answer her question... You said 'Yes'. She smiled. You two kissed. And then, grinned and asked what to do. It was a cute exchange.\n\n\"I'm afraid that if she does meet some guy, he'll push. And if he doesn't get what he wants will move on, and leave our friend hurt. That she will, again, think that it's because she's frigid. I know that, if, you guys get together, and she wants to stop. That you would have no problem. If she just wanted you to hold her, you'd be fine. Letting her go at her own pace.\"\n\n\"Thanks Kath,\" kissing the top of her head, \"That helps... helps a lot. But, I've got some concerns.\"\n\n\"What's bothering you, my love? Talk to me. You know you can talk to me about anything,\" as she kissed my cheek and moved closer.\n\n\"I know. That's why we go together so well. We can talk to each other about anything.\"\n\nTaking a moment to gather my thoughts.\n\n\"I'm concerned about what it will do to our relationships... all of our relationships.\"\n\n\"Those are good concerns. Let's take the easy one first... US. Nothing, absolutely nothing can, or will, ever come between us. We are so made for each other. We already respect, trust, are devoted, and love each other. Our hearts and souls belong to each other. That's not going to change. Nothing is going to change that.\n\n\"The relationship between Valerie and me. I don't see anything changing there. We are, and have been, close friends. I think this will bring us closer. After all, I'm sharing the most precious part of my life with her. She may be reluctant to accept, fearing that it will damage our relationship. But, like I just said, 'we are so made for each other', and she knows it.\n\n\"So, that leaves the relationship between you two. You two already respect and love each other. Making love to, and with, another person is very deep and emotional. I know that afterward, you two will feel more connected. It can't be helped. You can't be as close as a couple can get, physically and emotionally, without it affecting you, and I'm fine with that. Don't try to ignore your feelings for her. Don't try to hide those feelings, even from me. I know you too well. Enjoy the closeness. Someday she will find that special someone. Then he'll have to share... not completely; but, you know what I mean.\"\n\n\"Kath, what I am really concerned about if that, what if someway, somehow, one, or both of us might get hurt. I couldn't live with myself if I caused her any pain, if she got her heart broken. She means too much to me. Our friendship means too much to me to want to risk it.\"\n\n\"I know what you're saying. Like I said earlier, what we are talking about is something very intimate, very personal. You can't have such an intimate exchange without getting closer. Are you afraid that she will fall in love with you? Are you afraid you will fall in love with her?\"\n\n\"I don't know. Definitely a No on that last one. You are the only one in my life,\" kiss her forehead, \"Maybe a Yes on that first one. What if she does fall in love with me?\"\n\n\"Bill, she knows that you are mine and are totally devoted to me. If you do decide to do this with Valerie, it's like I said a few minutes ago, don't hide your feelings for her from her. I think that would hurt her more than anything. She'll want to know that you still love her, which I know you do, and always will.\"\n\nI was quiet as I held Kathy tight and listened to her breathe. Waiting for what I was going to say next.\n\n\"Talk to her.\"\n\nI got a warm and lingering kiss.\n\n\"I love you. I love it that you took your time. That you thought this through. That your main concern was how it would affect the three of us and mostly that you didn't want her to get hurt. That you talked to me about everything. That you were open and honest. I know that if you said you couldn't, for whatever reason, that you knew I would let it go. When I talk to her, I'll talk to her about your concerns, especially the last one. I think it's something for her to decide, if she wants to risk putting her heart out there, further.\"\n\n\"I love you.\"\n\nFor the next two hours, we made slow and gentle love, with the door closed, as we reaffirmed our undying and devoted love for each other.\n\n..................................................\n\nKathy left me to my own late Saturday morning. They were going 'shopping'. Non-verbal 'code speak' for 'I'm going to talk to her'.\n\nIt was the first of March. Still too chilly outside to do anything; but, warm enough to grill. I had a meal forming in my head. Then, Kathy and I were going to spend some more quality 'loving' time in our room... maybe with the door open. I had a couple of things that I thought she would have fun with. That we would have fun with.\n\nThe whole afternoon, thoughts of their 'conversation' going through my head.\n\n'What would Valerie's first reaction be?'\n\n'Would Kathy lay out the three things she had laid out to me?'\n\n'What would Valerie's final decision be?'\n\n........................................\n\nValerie, not being a subtle person, leaped into my arms, wrapped her legs around my waist, and buried her face into my shoulder. I held her tight as I felt her softly sob. Kathy watching he whole thing from the doorway, with a contented smile. The answer to my last question was 'crystal clear'.\n\nPulling back, I looked into her sparkling eyes, beaming smile, and tear streaked face.\n\n\"I love you sooo much Bill.\"\n\n\"I love you Valerie.\"\n\nOver a dinner of grilled barbequed half chickens, baked potatoes, and a green salad. They laid out 'our' night. I sat back and listened.\n\nIt was going to be a 'date' night.\n\nNext Saturday night, I would take Valerie to the little Italian restaurant that Kathy and I liked. It was quiet and romantic, with really good food. Then some dancing. Returning, we would take a shower together. Our first shower together. Then retire to Valerie's room. Not to emerge until morning, if then.\n\nThe whole time Valerie's face beamed. I had never seen her so thrilled. I didn't detect a hint of nervousness; but, next Saturday was seven days away. I'm sure the nerves would set in toward the end of the week. What was so cute about it, was that it was obvious that the two of them had put this whole scenario together.\n\n........................................\n\nI closed our door. We rarely closed our door, perhaps it was a carryover from summer, when we left our doors open for circulation. This was going to be a private time... our time. Kathy's eye's sparkling in anticipation. I held the most precious gift of my life in my arms, and just looked deep into those soft blue gray eyes.\n\n\"You're so beautiful,\" I got a little of a coy embarrassed smile. I loved it.\n\n\"You closed the door,\" her voice soft.\n\n\"Yes.\"\n\n\"You going to do something naughty to me?\" her playful smile adorning her face. Kathy's arms resting on my shoulders. Our faces inches apart.\n\n\"Maybe,\" my lips meeting hers, \"Would you like me to do something naughty to you?\"",
        "\"Maybe... Maybe I want you to do something so naughty, so nasty, to me that there will be absolutely no question that we are both going to go to hell,\" Kathy's voice now sultry.\n\n\"What if I want to do something extremely intimate with you?\"\n\nHer face lit up. Her eyes twinkling.\n\n\"mmmm. You're making my panties wet,\" her arms tightening around my neck. Her sweet breath on my cheek. Those blue gray eyes... had turned to an almost a smoky exotic gray. \"Extremely intimate, or very naughty. Decisions.... Decisions.... Decisions,\" pausing a moment. The playful smile was replaced with a soft loving look.\n\n\"I like the extremely intimate. Let's save the very nasty, naughty, for later, because I'm always in the mood for some naughty fun with you,\" our lips meeting in an extended soft kiss. Her firm braless breasts against my chest. Grinding her mound against my growing erection, I pushed back.\n\n\"You said something about your panties getting wet. Then, maybe we should do something about that,\" my voice husky. \"Go into the bathroom and put on that white semi-shear bra and panties, which you know that I love to see you in. Then get dressed again. And come back to your waiting fianc\u00e9e.\"\n\nShe grinned. I don't think it completely registered with her, yet, what I had in mind. But, I was pretty sure she knew it would be fun. I grinned.\n\nThe candles lit. She had done her mascara. Man, I loved her eyes. I also noticed that she now wore her engagement ring.\n\nKathy nuzzled up against me. Her arms again, resting on my shoulders. The look in her eyes was one of anticipation. Wondering what was playing in that imaginative, and playful, mind of mine.\n\n\"You said you were going to do something extremely intimate with me. I like the extremely part,\" her face soft. Her eyes sparkling in full anticipation mode. Kathy moved in a and gently kissed my lips.\n\n\"Yes. I am. But first... you have way too many clothes on. I'm going to sit over here, and watch. Watch as you slowly, and seductively, undress yourself for me.\"\n\nWe had never done this before. Her face lit up, in anticipation of the show she was about to put on for her fianc\u00e9e.\n\n\"OK. But, no touching... for now. At least from you. I'm going to enjoy watching you watch me as I unveil my body and sexy little breasts to your eyes.... To your appreciative and loving eyes. \"\n\nI didn't think to bring music. It didn't matter. Kathy started to slowly gyrate her hips to the tunes that were playing in her head.\n\nHer hands started at her hips and slowly slinked up her sides, through her hair, and reached for the ceiling. This caused the bottom of her shirt to raise up a few inches, revealing her cute navel. She did a slow half-turn letting me see smooth skin from front to back.\n\nKathy slowly leaned forward and gently swayed her hips back and forth. Her little bottom shifting from side to side. She peaked around and gave me a sexy grin as she continued to slowly, and seductively, sway.\n\nFacing me, I watched her hands move up and cup her little breasts. She gently massaged the covered little mounds. Then first one button was undone, then another. Kathy gave me a sultry look and then reached inside the opened top and under the white lacy bra cup. She closed her eyes and held her head back. I saw movement under the material and knew that her fingers were playing with her erect nipple. My dick throbbed.\n\nKathy opened her eyes, gave me another sultry look, pulled her hand back, and up to her mouth. I watched as her pink tongue slickened each finger. Then looking directly at me... her hand returned to inside her bra. She stifled a moan, as her mouth went open. I gasped. My dick throbbed again. Kathy looked at me and grinned. At this point, we both knew that she was going to have fun, and so was I.\n\nThe next two buttons were slowly undone. Her eyes never leaving mine. I watched as she pulled the blouse open to just where the dainty cups were hidden. Leaning forward, with her hands resting on my knees, she watched as my eyes traveled downward to take in the image of her hanging half-covered creamy little mounds. The dark and hard nipples hidden in the shadows.\n\nWhen my eyes returned to hers, she was grinning like a Cheshire Cat. Kathy leaned in and gave me a light kiss. Her tongue moving lightly over my lips, before slowly entering my mouth and swirled around my own tongue.\n\nShe stood and turned away from me. Pulling the blouse off her shoulders, down her arms, wrapping it around herself, and then slowly turned. The top half of her bra was exposed. Her nipples still hidden. She let go of the loose material and raised her arms. The white blouse floated to the floor, as the semi-sheer white lacy bra come into view. Shadows of her underlying dark areola and dark... completely erect nipples coming into view. My dick throbbed again. Even mostly clothed, she was one exotic and sexy woman.\n\nShe brought her right hand to her mouth. I watched her little pink tongue, once again, coat each of her five fingers. Her eyes with a sultry look and slipped her hand back inside the lacy cup. The material was thin enough that I could watch her fingers close on her nipple. Her thumb caressing the tightened miniature egg. This time, a genuine moan came from her. Her knees almost buckling.\n\nThe next kiss wasn't a gentle tender kiss. It was one of need. I almost thought that the show was going to be over. That she was going to rip off her remaining clothes, rip mine off, and then take me to bed and fuck my brains out. I could tell she was that turned on. And she had only taken off her blouse. There was more to come.\n\nShe sat back, looked down at the prominent bulge in my slacks. I groaned when her finger traced my hidden length. I stifled my own groan as she gave me a squeeze. She grinned, and kissed my cheek.\n\nHaving regained some control. I watched as she slowly unbuttoned her slacks and pulled them down to just above the panty line, just above that luscious honey blonde forest. She slipped her hand into the top of the hidden panties. I could see the movement of her hand, as it had completely disappeared. Her eyes were now closed. I heard a low moan, which signaled that her fingers were on her clit. Even in the dim light of the candles, I could make out the slow circular movement of her hand. I heard a soft exhale.\n\nKathy opened her eyes, gave me another sultry look, and pulled her hand back. Her fingers slick with her arousal. Then, she did something that surprised me... she leaned in and waved those fragrant fingers just under my nose. God, I loved her scent. Then rubbed them first against my lips and then slipped her slickened fingers into my mouth. She watched, with a loving look, as I licked them clean.\n\n\"Want some more?\" The first words that had been spoken. Her voice soft and sultry.\n\n\"There's lots more where that came from.... Lots more. Or maybe I should let you take it from the source, instead of me feeding you. Do you like me feeding you?\"\n\n\"Yes. Feed me some more,\" she grinned as her soft lips replaced her fingers against my needy lips.\n\nWe did that a few more time. One time I watched as she cleaned her own fingers. All the time intently staring into my eyes. Where did this sensual creature come from?\n\nKathy turned and bent over. The slacks fell from her hips and down her creamy smooth thighs. The heavy fragrance of her heated arousal being released. I stared at each of the partially hidden creamy globes and the dark crease that separated them. Kathy waved her little bottom back and forth, as she peeked back around to watch my expression. At one point, I saw her fingers moving under the sheer material as she probed her own sex. I groaned at that sight.\n\nClad in only the semi-sheer white bra and panties. Kathy again stood in front of me, shadows of her dark nipples and of her forest, erotically on display through the thin white delicate lace. Giving me a seductive look, she caressed her body with her hands, stopping at her breasts to give each a gentle massage. Her fingers again teasing her nipples.\n\nShe turned away from me.\n\nIt was the kind of bra that didn't have a clasp. I am pretty sure that it was made specifically for women with small breasts. Its main purpose was just for this... to showcase. To be seductive. To make her feel sexy. I loved it.\n\nIn one motion, it slowly traveled up and over her head, fluffing her blonde hair. Kathy flung it over her shoulder, turned her head to look back at me, and flashed me that signature 'Kathy smile'. Once again, I took in the smooth contour of her back... those little vertebra all the way down to the gentle inward swell of the small of her back.\n\nKathy turned around, the bra lightly draped over her breasts, seductively hiding them. I watched as the bra was slowly pulled up to reveal those magnificent half apple mounds of sweet flesh. She stood there momentarily with her hand on her hip, a gentle and appreciative smile on her face, as she once again presented her small firm bare breasts to my devouring eyes.\n\nI watched as she started to play with the delicate lacy bra against her breasts and nipples. Letting the edges lightly dance over the smooth skin... over each erect nipple. Kathy closed her eyes, tilted her head back as she savored the light touches. Much like she had when I used a silk handkerchief a while back. I swear I could see each hard nipple grow at the touch. I watched as the white material made one last slow trek up her bare torso... from just above her navel, across each breast lingering, swaying against each engorged nipple.\n\nShe came back to the present. With a grin, she leaned over, and dropped the dainty bra on my face. Even though it was just her bra, her sweet essence was there. Different than the musky scent of her arousal; but, it was there. I inhaled deeply.\n\nShe watched intently as I watched her gently massage each of her little soft mounds, pinching each erect nipple and pulling them away from her body. I groaned at the sight. She grinned.\n\n\"I love it that you soo love my little breasts... here. Kiss em.\"\n\nShe fed me first one painfully erect nipple and then the other. My tongue flicking each engorged nub, as gasps of contentment filled the quiet room. I engulfed as much of each mound of soft flesh as possible. Pulling back. My teeth gently pulling away each hardened nub.\n\n\"OH God,\" she gasped.\n\n\"I know you're hard... show me. Show me what I've done to you. Don't get naked... yet. Just pull your slacks down.\"\n\nI pulled my slacks and shorts down to my ankles. My solid pole of flesh jutting toward the ceiling. Throbbing at the image standing before me.\n\n\"I love this,\" she whispered, \"seeing that you got all hard without your dick being touched, just by looking at me. I love it even more that you want to see me this way. That you need to see me this way.\n\n\"And now for the last part. Are you ready? Are you ready to see your fianc\u00e9e all bare? All naked? All naked for you?\" her hands still roaming and massaging her breasts.\n\n\"Yes. Show me. Show me all of you... my love,\" I got a smile and a gentle kiss.\n\nKathy faced me, reached behind and pulled the thin material off her bottom and tucked it just under each cheek. I was treated to seeing half of her golden forest come into view. Her fingers reaching down to lightly brush through the soft strands, before disappearing. I was treated to another taste.\n\nShe turned around. Her hands reaching back to cup each cheek. I watched as her fingers massaged each pliable globe of soft flesh. Then she gave herself a playful smack and grinned back at me, as the flesh quivered.\n\nBending over with her knees slightly parted, the panties made a slow decent. A tiny white thread of her arousal connected the lace to her body before breaking. For a brief moment I considered diving in to lick it clean. But, knew that would be for later.\n\nShe stepped out of them. Turned and faced me. Hands behind her head. Legs seductively apart. I once again, shamelessly, feasted on her awe-inspiring body. So perfect. So sexy. So mine. Her smile, gentle, as she absorbed my longing gaze.\n\n\"I sooo love showing my naked body to you, as much as I so love having you look. I've said it before many times, and I'm going to say it again... I've never, ever, felt as comfortable and confident at having you look at my sexy little breasts as I do right this very moment. You look at me the way every woman wants her man to look at her.\"\n\nTurning to look back over her shoulder. I was once again rewarded with a 'Kathy smile' as I again took in her long smooth back, the little bumps of her vertebrae along her spine, firm butt cheeks with the crease separating the two firm globes, long and toned legs.\n\nI groaned. My dick throbbed.\n\n\"Have I told you recently that you have a nice butt?\"\n\nGrinning, \"I don't think so. But, you can tell me again.\"\n\n\"Kath... you have a beautiful butt.\"\n\nStill looking over her shoulder, smiling, I watched as Kathy's hands caressed each of her smooth mounds of soft flesh. Then giving each another playful smack. Stepping over, I was rewarded with smile from ear to ear and a light kiss\n\nI sat, mesmerized, as she slowly got down on her hands and knees, thighs together, making her outer lips puff out between them. She slowly swayed back and forth. It was if she was a snake charmer, and I was the transfixed cobra. I found my head moving side-to-side in sync with her gentle movements.\n\nSlowly parting her thighs, revealing her glistening sex to me, I gasped when I saw her fingers slip through her folds to open herself completely to my hypnotized eyes. Her sweet nectar oozing from between the pink inner lips. It seemed like just that act, released more of her stored up fragrance.\n\n\"Bill. Lick me. I so want to feel your tongue on me... your fingers inside of me.\"\n\nI was still, painfully partially clothed.\n\n\"Wait. I have to be naked when I taste you.\"\n\n\"Hurry... Please hurry.\"\n\nKathy's forehead resting on the soft carpet. Her little bottom high in the air. Thighs parted. I watched her fingers reach back and open her swollen lips to me. This was going to be the first of my tasting tonight.\n\nShe was as aroused as I've never seen before. Deliciously wet... Deliciously fragrant. All because of her slowly revealing herself to me. Because I told her I wanted to watch her undress... in front of me. To once again bathe in the glory of my loving, and appreciative gaze, as my eyes worshiped her body.\n\nMy tongue probed her clit and then did a slow lick up and through her opened petals. In all her arousal, she tasted divine. I needed more of her as my tongue continued to taste her sweet nectar and glide over her slick folds. I could hear Kathy's breathing as she let out soft sighs of pleasure. But, this was just the appetizer. The real feast, and the extremely intimate part was going to be done on our bed.\n\nPulling back and kissing each of her soft mounds.\n\n\"Kath, let's move to our bed. I have a surprise for you.\"\n\n\"You mean an extremely intimate surprise?\"\n\nI couldn't see it; but, I could 'hear' the smile.\n\n\"It wouldn't be a surprise if I told you, now would it?\"\n\nAnother kiss to each smooth cheek.\n\nI watched her lay on her back... legs widely opened waiting for me to take up my usual position between her legs... I had other ideas, as I lay on my back next to her and guided her into the position I wanted her. She was in a 'Reverse Cowgirl' position straddling my face. A little rivulet of wetness glistened down the center of her lips as they parted when she spread her legs over me.\n\n\"Lean forward.\"\n\nShe got the idea, as she slowly lowered herself onto my warm tongue. Her soft inner thighs against each of my cheeks. My hands gently kneading each pliable soft mound of smooth flesh. Pulling them apart... revealing that tight dark pink star and her swollen labia.\n\nI again, took in her unique womanly scent. Feeling the urge growing in me to have it, to taste it, to lick it, and to totally possess it. This time, I was going to take my time, to bring her to the peak of ecstasy, in as intimate a manner as possible.\n\nI had my head propped on a pillow and moved a little so I could gently kiss her inner labia. I kissed her there briefly, broke the kiss, inhaled gently... savoring, and then kissed her again, this time holding my kiss. Her taste was exquisite, sweet and musky, like something out of a candy shop. Then, still kissing her like that, I used my tongue to probe gently into the recess between her inner lips. I tasted the sweet, tangy flavor of her nectar, and then I moved my head a little more, so I could continue probing the very entrance to her pussy with my tongue.\n\nMy tongue traveling down through her folds that had unfurled like the petals of a rose in full bloom, to settle on that protruding button of her pleasure. She found that she could adjust herself so that my tongue could give pleasure to whichever sensitive spot that she desired.\n\nKathy looked down and saw my rock hard cock, grinned and instantaneously knew what I had in mind. Kathy gently smiled to herself as she realized, 'This was the extremely intimate part that we would share with each other'. She laid down. Her warm breasts against my stomach. I felt both of her hands cradle the base of my cock. Her cool fingers cupping my smooth scrotum. Massaging each full testicle. I gasped, and sent a moan into her sex. Her tongue made its initial contact, and then I felt her warm mouth engulf the sensitive head. I groaned through her sex.\n\nI held her open, my hands pressed against her thighs, and lifted my head to lick her. Immediately she groaned, as I ran my tongue in an upward direction from her clit to her drooling opening. I gathered a tongue-full of her nectar and drew it into my mouth, letting it coat my tongue and slide warmly down my throat. She was flowing like a stream, her honey warm and sweet. I licked again, eliciting another deep moan vibrating through my cock. The feeling was incredible as she worked her mouth up and down the length of my shaft, holding me upright with her hand at the base.\n\nI worked my head down a little further and gently teased her pink pearl with just the very tip of my tongue. My lips wrapping around her clit, where her labia met to form the hood, I began to work my mouth back and forth very gently with the underside of my tongue dabbing at her clitoris.\n\nI felt a shudder through her entire body, and she made an, \"Mmmmm,\" sound that I heard but also felt through the warmth of her mouth, as she gently bathed the sensitive plum of my cock.\n\nIt was a perpetual motion machine -- a cycle of each of us giving and receiving unbridled pleasure in the most intimate manner possible... each of us slowly and lovingly feeding off each other's sex. Delivering as much pleasure to each other as we were receiving from each other. We vowed that position '69' would become our second favorite love making position.\n\n\"In me,\" she gasped before returning to slowly bob on my rigid pole of flesh.\n\nIn that position it was easy for my fingers to enter her. To stroke the smooth slippery soft walls of her vagina. To caress her wetness and dance over that sensitive bundle of nerves.\n\nI was close, and getting closer rapidly.\n\n\"I'm going to cum, Kath.\"\n\nShe slowed.\n\nI could tell that she was close; but not quite there. Kathy made a slight adjustment. Her clit was now directly on my tongue. She started to move her hips, riding my tongue for her own pleasure. The pace on my cock increased, as my tongue frantically swathed her pleasure button. My fingers caressing her internal pleasure button. We were both frantic, like two out of control freight trains on a collision course that neither could stop. Each, to drive our partner to their release as much as we each craved our own release. Both of us knew we were heading for a beautiful crash of bodies and senses.",
        "My hips were moving. Kathy just sealed her lips around my hardness and let me simply fuck her mouth.\n\nI felt her body shudder as she pressed her sex hard against my tongue. I just held it there and let her ride it through each body shattering wave of bliss. I could feel the vibrations from the sounds of her muffled release through the sensitive glans that she held in her warm mouth as she paused while each wave traveled through her body.\n\nI couldn't warn her; but, when my balls pulled up and tightened in her hand she knew. Kathy engulfed as much of my cock as possible. That sweet feeling of liquid pleasure exploded from deep within my core and passed through me in three or four bolts of pure bliss as I delivered my thick semen into Kathy's warm mouth. The sounds of my own release muffled against her quivering sex.\n\nKathy collapsed. Each of us out of breath. We lay in a tangled heap of sated flesh as we came down from the shared high of our very intimate joining. So close that we breathed as one, panted as one. So close that our hearts beat in unison. So close that our skin in contact that, once again, made us feel like a natural piece of the other.\n\nHer hand still cupping my depleted balls. The slickened glans resting against her soft cheek. At times, I could feel light kisses along the shaft and head. My hands gently moving over each of her firm globes. My lips gently kissed her inner thighs and then her swollen labia that were still oozing from her arousal.\n\n\"Come up here and kiss me,\" my voice soft.\n\nThe kiss started with a heated passion, tasting ourselves on each other. It slowed and ended with soft loving and tender pecks.\n\nCuddling, \"Now I know why you closed the door. That was the most intimate and sexy thing I've ever done, or could imagine. Leave it to you to know how to get me going. I was wet by the time I got my top off, just thinking about what I was going to be doing next. Watching you, as you watched me undress. Putting on a show in front of you. All the time, your eyes on my little body and sexy little breasts.\"\n\nI was pleased that she had gotten rid of the term 'almost boobless body' and replaced it with 'sexy little breasts'. It fit her better.\n\n\"And then... when you had me straddle your face and lean forward. The feeling of your tongue on me. That I could move so that you hit me in just the right spot. The sight of your hard cock and smooth balls in front of me. I grinned to myself as knew what you had in mind. I had to take you in my mouth. Feeling your balls tighten just before you filled my mouth.... You taste so good.\"\n\nOur lips met again in a long and tender kiss. A soulful kiss of two lovers.\n\n\"Just curious... what was the naughty and nasty thing you would do to me?\"\n\nKathy's face grinning. Her eyes twinkling in anticipated mischief.\n\n\"Maybe, after I cum inside of you, I go down there and then drink both of our 'love juices' from your sopping pussy.\"\n\n\"mmmm, Bill. That is naughty. I can't wait to have you be naughty and nasty to me.\"\n\nKiss.\n\n\"I love you, Kathleen Marie, my love.\"\n\n\"I love you, Bill, my love.\"\n\n............................................\n\nThe week went on. Valerie seemed to get more excited every day. It was like watching a child as either their Birthday or Christmas was coming.\n\nA couple of evenings, they both came through the door an hour, or so, after I had gotten home carrying shopping bags. I asked Kathy what was in the bags. She just kissed my cheek, grinned, and said, 'You'll see.\"\n\nOver the winter, we had gotten into the habit of cuddling on the couch in front of a warm fire and watching some TV programs. Me in the middle with my arms around each of them. Their heads on my shoulder. At times, Valerie would fall asleep. Kathy and I both listened to our friend softly breathe as she slept.\n\nThis week, Valerie sat between us, her head on my shoulder, her hand casually resting on my thigh, Kathy's and my arms around her. I would lightly kiss the top of her head. She would look up at me through those soft brown and gold speckled eyes and smile.\n\nFriday night, we hit our favorite bar for some fun, food, drinks, and, of course, dancing. I kept it light. The dances were all light and lively. I danced with that little bundle of energy. She was beyond excitement... as was I. Kathy smiled as she watched our interplay.\n\nLater, cuddling, with the door open, in our quiet 'alone' time, Kathy softly says, \"I don't know what I want to do now... make love or have you save yourself for tomorrow night,\" I felt her soft lips on my cheek.\n\nI answered her dilemma, \"How about this? Let me make love to the most precious gift I have ever received. A gift so precious that I will cherish to my final days. The gift of your love.\"\n\nKathy rolled completely on top of me. Our lips making soft gentle love, as we tasted each other. My hands gently roaming over her soft smooth back. My fingers tracing down her spine. Feeling each of her vertebra.\n\nWordlessly, we rolled as we reversed our positions. Our kiss continuing. Her hands mirroring what I had done to her back.\n\n\"I love you, Kathy.\"\n\nKiss.\n\n\"I love you, Bill.\"\n\nKiss.\n\n\"Do you want me to close the door?\"\n\n\"No. I think Valerie's asleep. And I don't care if she isn't,\" Kathy's voice soft. Thinking, 'And if she isn't, she can watch what you'll be doing to her tomorrow night'.\n\nOne more kiss, and I began my journey of love down her soft tender body. I worshiped her breasts. Tonguing and flicking her very erect nipples. I loved the way Kathy would comb her fingers through my hair as I nursed on her nipples. The soft cooing sounds.\n\nKissing my way down her body, through those soft strands of corn silk. Inhaling her arousal. Tasting her. Savoring her uniqueness. Hearing her whisper my name as my tongue bathes her wetness. The feeling of her hands on the back of my head... pulling me into her core. Her soft sweet sounds of contentment filling the quiet room, as my lips and tongue made love to the only person in this world that truly mattered to me. The sounds of her release as my tongue and fingers work their magic on her two centers of pleasure. The feeling of satisfaction that I can give her all the pleasure she deserves. My best, and closest friend in the whole wide world... My fianc\u00e9e... My love.\n\nHer final words, before we drifted off to our shared dimension of dreams, \"Don't forget to take an extra dose of vitamins in the morning... both vitamins.\"\n\n......................................\n\nI woke to an empty bed and the aroma of coffee and bacon.\n\nEach standing in a loose pair of cotton sweats. The tops zipped up half way. Valerie came over and gave me a peck on my cheek, followed by a wide grin.\n\nThe plan for the afternoon was that they were going shopping... again. I asked Kathy, 'Shopping for what?'. I got the same answer as before... \"You'll see,\" followed by a wide grin... followed by a kiss on the cheek.\n\nI realized there was something I needed to get Valerie. Red was her favorite color.\n\nMid-afternoon, I heard a squeal from her bedroom. Followed by the thunder of her footsteps coming down the stairs. I turned just in time for her to leap into my arms, wrap her legs around my waist, and bury her tear steaked face into my shoulder. I held her tight was she soaked my shirt.\n\n\"Bill... thank you for the flowers. This is the second time you've bought me flowers. Nobody.... And I mean Nobody has ever bought me flowers. Not even once, but, you have... twice.\"\n\nI saw Kathy standing in the doorway with a contented smile. She blew me a kiss. I blew one back.\n\n.....................................\n\nReason 28, of why it's great to be a guy, \"You can be showered and ready in 10 minutes.\"\n\nI heard the upstairs shower about two hours ago. After that Valerie's door closed. After that our bedroom door shut. Then Valerie's door shut. The pitter patter of footsteps between the two rooms.\n\nI had been watching some mind numbing sports. Kathy emerged with a huge smile. Sat next to me, gave me a kiss on the lips, and rested her hand on my thigh. Nothing being said.\n\nThe light bouquet of Valerie's perfume preceded her. It was delicate, with a light floral fragrance.\n\nWhen Valerie entered the room, my heart stopped. From the first time I saw her in the lobby of her dorm, I had always considered her to be 'cute'. Tonight, she went from 'cute' to absolutely stunningly beautiful.\n\nHer brown hair had a soft sheen that looked as if it been brushed for hours. Over the months she had lived with us, she had let it grow out to the point that it now hung a few inches below her shoulders. The front was cut such that it framed her face.\n\nEach eye lash was long and separated. You could almost count the number of lashes. Her eyebrows were a nice dark brown, lush, and full.\n\nHer eyes... oh those eyes. Each were lined with black eyeliner that highlighted the full whiteness. Centered in that sea of whiteness were two large soft brown marbles each with soft yellow streaks. Each slightly different. It reminded me of the Tiger Eye gem stone. It was something I had noticed but never really noticed before. Don't know why... just never did.\n\nHer lips were soft and naturally pink with just a hint of gloss.\n\nValerie never wore a lot of makeup... she didn't have to. The two of them must have spent a lot of time. It was definitely worth the wait. The smile on her face said it all.\n\nShe wore an emerald green lightweight button-down sweater, with a gentle V neckline. The pendant laying just above the bottom of the V. They must have spent a lot of time searching for just the right shade of green for the sweater, as it matched the emerald in the pendant. While the sweater hugged her little mounds, the dark green kind of obscured their shape to everyone... except me. I couldn't tell if there was anything underneath. I would find out later.\n\nA pair of soft ivory slacks loosely fit over each of her butt cheeks.\n\n\"Wow Val... You're beautiful,\" I was rewarded with a smile that would brighten any room.\n\n\"Thank you. Kathy helped out a lot... with everything.\"\n\nI would later find out what 'everything' entailed.\n\n\"Let me get you guy's picture.\"\n\nWhile Valerie went to get her coat, Kathy wrapped her arms around my neck and grinned, \"You have no idea how many 're-do's' we went through.\"\n\n\"It was worth the wait. She's beautiful... just like you,\" our lips locking for an extended loving kiss. Valerie quietly watching from the hallway, with a soft smile.\n\nKathy noticed her and whispered in my ear, \"We have an audience; but, don't stop.\"\n\nIt felt a little strange... kissing my best friend... my lover... my fianc\u00e9e. While being watched by our best friend, who I was going to make love to later.\n\n\"I love you Kathy, my love.\"\n\nKiss.\n\n\"I love you, Bill, my love.\"\n\nKiss.\n\n\"Have fun. See you in the morning... maybe,\" she smiled.\n\n...........................................\n\nValerie and I sat in a corner booth with a bottle of Chianti wine.\n\nI reached across the table, took her hands in mine, and, once again, drowned myself in her eyes.\n\n\"What?\"\n\n\"Nothing... it's just your eyes.\"\n\n\"What about my eyes?\" her voice soft.\n\n\"They're so... so alluring.\"\n\nShe smiled, \"I remember you telling me that on our first date... on the hayride.\"\n\n\"I remember that too. I think you said something like, 'I'll bet you say that to all the girls'.\"\n\nThat brought a smile to her face.\n\n\"And, I think I said, 'Only to the ones with alluring eyes'. And do you remember what you said next?\"\n\n\"I think so; but, tell me.\"\n\n\"You said that if I keep saying things like that, that you may have to take advantage of me.\"\n\n\"I remember that. And I remember you asking if you could help,\" by now the smile went from ear to ear and her eyes twinkled at that whole remembered exchange.\n\nThe table was relatively narrow. I leaned across and gave a gentle kiss, followed by a sweet smile.\n\nI held up my glass, \"Here's to my best friend. Who without, none of this would have ever happened.\"\n\nValerie held up her glass, \"Here's to my best friend, who stuck by my side in everything I did, and never wanted anything more than my friendship. For that I am eternally blessed. I love you Bill,\" her voice cracking on those last four words.\n\nThen a smile appeared, as she added, \"I'm trying not to cry and screw up my makeup.\"\n\nWe sat there and compared notes on Kathy talking to each of us about tonight. We found out that our initial responses were the same to that 'yes' or 'no' question requiring only a simple 'yes' or 'no' answer. We shared our concerns, which were the same. Valerie's main concern was the same as mine... US. Valerie said that she agreed with Kathy... that after tonight we would be more connected.\n\nValerie squeezed my hand, looked at me with those soft brown eyes, and said, \"Bill, you know what I loved so much about your concerns was that you were afraid that somehow, I might get hurt. I have always felt comfortable and secure with you. Especially after I determined that you weren't a serial rapist.\"\n\nThat lighten the mood tremendously as those final words were said with a beaming smile. We leaned in and gave each other a soft gentle kiss.\n\n\"Val, one final serious note. If at any time later...any time at all, if you want me to stop, pause, or anything, or if I make you feel uncomfortable, you have to promise me that you'll say something. OK?\"\n\n\"OK. I promise. And, Thank you. Thank you for making me feel safe,\" with that, she came around the table, scooted over, and wrapped her arms around me. I could tell she was trying not to cry. I kissed her forehead.\n\nThen, out of the blue, \"Valerie, what's your middle name?\"\n\n\"It's Renee. Why?\"\n\n\"I don't know, just something that popped into my brain. Valerie Renee. I like it. It fits you.\"\n\nI was once, again, rewarded with a soft 'Valerie' smile, as I again gazed into her soft eyes.\n\n\"Val, I love to hear you talk. And I love getting lost in your eyes,\" I was rewarded with another smile and a soft loving kiss.\n\nThe food was good. The company wonderful. We got lost in our closeness. Any lingering doubt that later wasn't going to happen was quickly washed away.\n\n...................................\n\nWe found our friends at the local tavern. Everyone asking where Kathy was, as the three of us were always together. Plus, they knew of our relationship. Valerie and I looked at each other, and grinned. I think the same thoughts were going through our minds as to what to say back. Something like, 'Oh, Kathy's home. Probably reading a book. Bill's in the process of seducing me. Then we are going back home. Take a shower together, and then he's going to make love to me all night long.'\n\nInstead, we kept it simple, like, 'We had planned a 'date' night for tonight, at the last minute Kathy decided to stay home, and told us to go out and have fun.' Which was mostly true.\n\nWe chatted, drank a bit, and danced. I found a final song for the evening. Something light; but, with a message, Elton John, \"Your Song\".\n\nIt's a little bit funny, this feeling inside\n\nI'm not one of those who can easily hide\n\nI don't have much money, but boy if I did\n\nI'd buy a big house where we both could live...\n\nWe danced to the upbeat tempo. Others joined in. Again, getting lost in her soft Tiger Eye's.\n\n...And you can tell everybody this is your song\n\nIt may be quite simple, but now that it's done\n\nI hope you don't mind, I hope you don't mind that I put down in words\n\nHow wonderful life is while you're in the world\n\n\"Thank you, Bill.\"\n\n................................................\n\nNeither of had spoken during the short drive home. I think each of us were lost in our thoughts about what was coming. I didn't sense any nervousness. Valerie had snuggled up against me in the car and I wrapped my arm around her shoulder.\n\nThe door was closed to our room. The lamps on the two night stands bathed Valerie's room in a soft golden glow. The bed had been turned down. I grinned, as I envisioned Kathy turning down the bed with a gentle knowing smile.\n\nThe door shut. I took Valerie into my arms. At first I just held her. Her firm little breasts resting against my chest. She rested her head against my shoulder, my hands stroking her back. Her hands reaching up my back and mine over hers. I did discover a bra, a very thin and delicate bra.\n\nI pulled back and, once again, gazed into her soft sparkling eyes, a window into her soul that was so fearlessly spirited. There was no nervousness at all. Only the look of serenity and peace. She was giving herself over to me. Our lips met tenderly. Our tongues exploring each other. Dancing. Tasting each other. Valerie pressed her lower mound against my hardening bulge. She pulled back and smiled, as she kept pressing.\n\n\"Scared?\" I whispered.\n\n\"No. How can I be scared? I'm with you,\" Valerie whispered back.\n\nI smiled. \"Val, like I told you earlier, I want this to be wonderful for you. If you're not comfortable or if things feel like they're too overwhelming or anything, just tell me. Promise?\"\n\nShe nodded and then in a soft whisper, \"I promise.\"\n\nBut I could hear her breath coming in shorter, quicker gasps. I knew her heart must have been pounding as hard as mine was. We stared at each other. There was nothing left to say. Everything we had shared as friends and as admirers had led to this moment.\n\nI pulled her softly into me and kissed her deeply. She met my kiss with fervor, running her hands around my back and pulling me into her. We explored each other's mouths.\n\n\"Do you want me to undress you?\" as I gently stroked her cheek, looking into her soft brown gold-spackled eyes.\n\n\"I think it will be pretty difficult for you to make love to me with all of my clothes on,\" she grinned.\n\nYep... that was my Valerie... playful as ever.\n\n\"I think we should undress each other together,\" she grinned.\n\n\"But, I'll be naked before you,\" I grinned back.\n\n\"And your point is...?\"\n\nShe started working the first couple buttons of my shirt.\n\n\"As you can imagine... I've never undressed a guy... This is going to be fun.\"\n\nMy shirt unbuttoned, Valerie ran her hands over my chest... over my nipples. I shuddered a bit. She grinned.\n\n\"I've always did enjoy running my hands and fingers through your chest hair. Those times in your dorm room. Just enough hair to look sexy, but not too much to look like an overgrown forest.\"\n\nMy shirt discarded, I began to slowly unbutton her sweater. All the time looking into her eyes.\n\n\"I've never had anyone undress me,\" her voice soft and hushed.\n\n\"Then I'm honored,\" my lips kissing first her forehead and then each of her lips.\n\nI was curious what I would find underneath her sweater: a simple white lacy bra or something sexual and erotic. My curiosity was quickly satisfied as the first edge of her bra came into view, all I could tell that it was a light green.\n\nPushing her sweater off her shoulders, I gasped, as it fell to the floor.\n\nIt was light green... dainty... delicate... semi-sheer, and definitely very feminine. The thin material providing dark alluring shadows of the beautifully hard nipples and surrounding dark areola. I leaned in and kissed each nipple through the thin material.\n\n\"My God... Val... You're so sexy.\"\n\n\"Wait until you see the panties,\" she grinned. I let out an audible groan. I got another quick kiss.\n\nI watched Valerie concentrate as she undid my belt, then struggled a bit with the zipper. I felt the material being pulled down my legs. Soon, I was standing there with an obvious bulge. Valerie grinned up at me and then raked her fingernail over the outline of edges of the glans. I groaned.",
        "I could have taken her bra off and worshipped her beautiful little breasts; but, I wanted to wait and see her in the complete set of the sexy lingerie that she and Kathy had so carefully picked out for her unveiling. I kissed my way down her partially clad body. Stopping at her navel to probe a bit. I heard soft gasps, as she ran her fingers through my hair.\n\nOn my knees staring at the simple snap that held her slacks in place around her hips. It was a matter of moments before Valerie's slacks were pooled at her feet. I sat back and stared.\n\nThe underlying dark brown of Valerie's soft fur, cast a full \"V\" shadow through the thin semi-sheer lacy green material. I reverently kissed the middle of that shadow, knowing that I would be back to kiss those soft strands in a few minutes. Valerie watched, as I sat back and took in the sexy image that stood before me. I imagined the fun the two of them had in picking out this set of sexy lingerie for just tonight.\n\nShe turned her back to me and looked back over her shoulder and gave me that \"Valerie\" smile. I leaned in and kissed each of her lightly covered cheeks.\n\n\"You are so sexy, Valerie.\"\n\n\"Thank you,\" she grinned.\n\nI stood. We embraced each other. Her bra covered firm breasts against my chest. Valerie ground her mound against my bulge. My lips nibbling on the soft skin of her extended neck. Gently sucking on and pulling her soft ear lobe into my mouth. I was rewarded with soft sighs, as Valerie's soft fingers combed through my hair.\n\n\"My turn,\" her voice soft; but, with a grin.\n\nValerie sat in the edge of the bed. My aching bulge at eye level. With her fingernail, she again traced the outline of the edges of the underlying glans. I let out a gasp. I looked down and saw her grinning back. She slipped a finger inside the material between my thighs. Her fingernail lightly grazing my smooth sack. I let out another gasp followed by a low groan.\n\n\"Let's get this guy out. Time for me to see him. Time for me to play with everything, the way I've been dreaming of playing with everything all week.\"\n\nMy shorts slowly disappeared. Valerie's eyes went from my pubic hair, hard shaft, pink glans, and smooth scrotum up to my eyes with a grin, and then back.\n\nI watched as her eyes devoured every dark vein along the flesh colored shaft. Every wrinkle along on my soft pink scrotum. How the edges of the glans flared out. The oozing of the first drop of my clear arousal.\n\n\"It looks like it moves with each beat of your heart. I know I've seen you hard before. I've held you in my hand a number of times. But, this is different,\" her voice soft, almost a whisper.\n\nHer warm hand encircling the base, \"Those times were for fun... Right here... right now, I feel so close to you.\"\n\nThen Valerie did something that literally shocked me. She leaned in and planted a soft kiss on the tip of the sensitive head. Didn't take me into her mouth, or anything. Just a light kiss.\n\n\"Come up here. I need to finish your unveiling. And then we're going to take a shower until the hot water runs out. Then we are coming back here, and I am going to make love to you. I am going to make you cum so hard that your body will feel like Jell-O.\n\n\"Val, take your bra off. Show yourself to me.\"\n\nShe grinned, knowing that I wanted for her to give me a show. I stepped back, sat on the bed, and watched as she seductively slipped the thin lacey garment over her head. My eyes shamelessly feasted on Valerie's firm baseball-size soft mounds and her caramel colored areola.\n\nWe each watched as my fingers gently traced the curves of her breast, lightly brush across her nipple, which swelled at the gentle touch. Valerie let out a soft groan. My thumb played with the engorged pebble. Brushing backwards and forwards. Her nipple responding with rubbery-firm resilience to every touch. I can sense ripples of pleasure wash through her as I gently caressed each sensitive nub. Her body responding from the pleasure that holds her enthralled, spellbound, and wanting more, as soft coos and sighs filled the otherwise quiet room.\n\nI turn my hand and rubbed the back of my hand up and across the delicate soft flesh of her little breast. First one and then the other. Then back to rub my palm over first one achingly hard nipple and then the other. Valerie's eyes were closed as she savors my tender touches. When she finally opens her eyes, she gives me a contented smile, as my hand continues to gently stroke those tender soft mounds.\n\nI lean in and reverently kiss the open valley between her breasts. My tongue bathing each swollen pink gumdrop. Sucking as much of her soft flesh into my mouth. It was the first time, since Kathy and I had posed for Valerie, the previous year, which I had kissed, and sucked on her nipples. The feeling of our closeness intensifying by the second.\n\nValerie lets out a gasp, as she rests her soft warm cheek against my head and pulls me to her bosom. Our lips meeting, \"You've always loved my little boobs, haven't you?\"\n\nKissing the right breast, \"Yes.\"\n\nKissing the left breast.\n\n\"Since that first night in my dorm room, where you gave me ten minutes to worship your sexy little breasts, and every time since then... Yes, Val. I've always loved your beautiful sexy little breasts.\"\n\nThat got me another smile and soft loving kiss.\n\nI left a trail of kisses down her body. Again, stopping to probe her little navel. Planting a kiss in the middle of the shadow of her underlying soft fur. My hands slowly guided the soft semi-sheer green panty down. The sight of her soft brown mat of pubic hair forming a full \"V\" that narrowed as it approached the sweet chasm between her thighs. All enhanced by the gentle swell of her Venus Mound. I had seen Valerie's dark brown garden before, in the full light of the sunlight. This was different. This was alluring. It was sensual and erotic. The aroma of her arousal being released was intoxicating.\n\nI sat back and took in her completely nude form. Her femininity and sexuality glowed like the love goddess herself, Aphrodite\n\n\"My God, Val. You're so beautiful,\" leaning in to first rub my chin and then my cheeks over the soft brown strands, before planting a kiss.\n\n\"Like you said before, I've seen you naked before. But, not like this. Before it was fun. This is sexy and alluring. I want you. I want you so bad,\" I looked up to see a sweet smile, as she combed her dainty fingers through my hair.\n\nInhaling, \"So fragrant. So sexy. I'm going to enjoy tasting you, later.\"\n\n\"Really? You want to taste me? I thought guys didn't really like doing that.\"\n\n\"Maybe some. But, they're idiots. How could any man truly not appreciate his lover by not being as intimate as possible? To give pleasure to his lover. The feel, when it's all nice and slippery. And the sight! Like a little pink flower all covered in dew. I'm telling you, Val, it's a feast for the senses. Besides... I can already tell you're going to taste divine.\"\n\n\"Turn around,\" Valerie grinned as she turned. Her cute little smooth bottom right in front of my eyes.\n\n\"Val, have ever told you that you have a cute butt?\"\n\n\"I don't think so; but, you can tell me right now,\" as she looked over her shoulder and grinned.\n\n\"Val. You have a cute butt,\" as I leaned in and kissed each soft globe of smooth flesh, \"An absolute work of art,\" Another kiss to each of her little cheeks, \"Fit for an artist,\" I couldn't see it; but I could 'hear' the grin.\n\nI stood and took a step back. For a long moment we both just looked each other up and down, relishing the vision of each other's naked body, for really the first time. Each of us breathless in our escalating sexuality. It was me who spoke first.\n\n\"Dam Val. You are so sexy.\"\n\nThrough the grin on her face, \"You're not too bad yourself.\"\n\nI held Valerie under the warm water as our lips met. Her rock hard nipples against my chest. My hard dick nestled between her soft thighs. My hands caressing her soft butt cheeks, occasionally my finger would travel between those cheeks. I gently soaped her back... her butt cheeks, between her cheeks. Once it slid over her tight rosebud. Valerie let a gasp of surprise.\n\n\"Sorry.\"\n\n\"No. Just caught me by surprise. Never felt anything like that. Kind of different.\"\n\nI kissed each of her awaiting breasts. Licked each nipple. Then it was time to run my soapy hands over that tender delicious body. Through her soft fur. My fingers parting her velvety folds for the first time. Valerie letting out a soft sigh of appreciation at the gentle touch.\n\n\"Valerie, put your foot on the top of the tub.\"\n\nShe turned around and placed her foot on top of the tub, giving me complete access to her sex, and I took full advantage.\n\nI buried my mouth in her delicious folds... probing... licking. My arms wrapped around her, cupping and gently kneading her soft butt cheeks. This was perfect. It was right. On my knees worshipping and pleasuring my lover. I reveled in every moan, sigh, and gasp. Every little sign that told me Valerie was pleased, and more important... comfortable, with what I was doing to her. My fingers, penetrating her tightness, for the first time. Feeling her internal heat that was building. Her knees almost buckling. Her hands on my shoulders, as she balanced herself. Low, \"ahhhh's\" and gasps filled the steamy shower, as Valerie gave herself over to these new sensations, experiencing this level of intimacy for the first time.\n\nOur lips meeting.\n\n\"You OK?\" I asked, looking into those soft brown eyes.\n\n\"Yes. That was wonderful,\" she purred.\n\n\"That was just a preview of what's to come,\" we each grinned.\n\n\"My turn.\"\n\nValerie washed my back. I felt her hand slip between my thighs. Her soapy hand caressing my loose scrotum... gently milking each tender orb. I groaned. I felt her soapy breasts slide across my back. Her hands coming around and clasping as she held her warm soapy body against mine.\n\n\"Come here,\" I whispered, \"I need to wash your front... all of your front. But, first...\"\n\nOur lips meeting. Her wet, and still soapy breasts against my chest. My hard dick slipped between her thighs, parting her folds for the first time. I heard her give a soft, \"mmmm\". With that encouragement, I gently stroked my length. Her soft wet folds cradling me with each slow stroke. Sounds of contentment filled the steamy air.\n\nOnce again, kneeling down before her, I brought my slick soapy hand between her legs, from back to front, running it along those soft lips as I brought it forward. Then lathered up her full mat of soft brown pubic hair. My fingers moving in circles through the dark strands and pressed against her mound, making sure I pushed lightly against the cleft where her clit was nestled. Again she groaned as my fingers ever so gently slipped into her folds, getting them soapy and slick. I heard a low satisfying groan of pleasure.\n\n\"God Bill. That feels so wonderful. I don't think I ever want to take a shower by myself again.\n\n\"Come up here and kiss me,\" her voice low and hushed.\n\nOur tongues danced. Valerie swayed her soapy chest against mine. Her engorged nipples moving across mine was electrifying. We each groaned through our kiss.\n\n\"Val, we can stay here and play some more.\"\n\nKiss.\n\n\"Or I can take you to bed... Take you to bed and pleasure you in ways you never imagined existed. What would you like to do?\"\n\n\"mmmm.... You always ask me these hard questions.... Have you hold me like this... stroking your hard dick against me... rubbing my soapy nipples against you... or take me to bed,\" her voice was a soft cooing whisper. Her head resting on my shoulder.\n\n\"Bill. Take me to bed... Make love to me.\"\n\nThe room was now bathed in a soft candle light from the dozen, or so candles that had appeared during our shower. We both grinned... Kathy. We grinned again when we noticed the bottle of champagne and two champagne glasses. I heard Valerie giggle when she saw a dozen, or so, foil wrapped condoms on a night stand.\n\n\"Think that'll be enough?\" she giggled.\n\n\"If not... I know where there's more.\"\n\nEasing her onto her bed, our lips found each other, our kisses fusing us together. My tongue caressed her bottom lip, gently requesting entrance. Valerie opened her mouth and sought mine with hers. Our tongues met, caressing each other slowly, gently. I heard a whimper of joy. Our arms around each other, we melted into each other.\n\nI kissed my way down her neck. Nibbling on the sensitive flesh. My lips, wrapping around her soft ear lobe, pulling, and bathing the soft piece of flesh. I was rewarded with a soft whimper and a firm grasp around the back of my neck.\n\nFrom the times in my dorm room, over two years ago, I knew Valerie's nipples were extremely sensitive. So sensitive that the first time she let me kiss and suck on them she had a number of mini nipple orgasms. Something she had never experienced before that night and something she hadn't had the pleasure of experiencing in a long time. I planned on repeating that experience for her.\n\nMy tongue circling the pebbled skin of her light pink areola, I heard Valerie let out a gasp as the tip of my tongue flicked over the extremely engorged pink nipple. I bathed that sensitive miniature egg with flicks. My teeth graze over the hard nub before clamping down hard and stretching it outwards. The elongation made Valerie's eyes open wide and she gasped.\n\nI let it go for a second, moved my fingers to Valerie's mouth. A little pressure and she parted her lips. She got the idea. I watched as she coated my thumb and index finger, those soft brown eyes sensually staring back at me the whole time.\n\nWhile I kissed one erect rubbery nipple my wetted fingers traced delicious circles around the other. Flicking. Firmly pinching. Her fingers running through my hair. I glanced up at her while she gazed at me, with those impossibly brown eyes. I worshipped her nipples, back and forth, her breathing becoming labored. Her hips moving under me. Soft sounds of her pleasure filling the room encouraging me to continue.\n\n\"Bill, please... oh please... that feels sooo gooood,\" in a prolonged sigh.\n\nHer back arced off the bed at a light flick of my tongue. She whimpered once, and I relented, sucking her left breast as fully into my mouth as possible. Valerie cried out as I bathed it with the tip with my tongue, alternately flicking and caressing, with an occasional nibble thrown in. I moved back and forth, relishing the little disappointed sighs each time I disengaged, and the delicious moans as I started again.\n\nI felt her jolt, once.... twice and let out a let out a couple of little cries. I looked up and saw a smile and a twinkle in her eyes.\n\n\"You haven't lost your touch. I remember when you first did that to me, after talking me out of my blouse and bra. You silver tongued devil.\"\n\n\"I don't remember you complaining,\" grinning.\n\nI left a trail of kisses and nibbled down her torso. Resting my chin in the soft thick mat of her brown triangular patch of pubic hair. I put my lips near her navel and let my tongue dart in and out of the sensitive niche. Then my tongue traced a circle around her belly button, barely grazing her skin, before I plunged it into her navel and swirled it gently around.\n\nI heard Valerie let out a satisfying sigh.\n\n\"Ohhhh Bill, that's so good.\"\n\nI pressed my mouth around her belly button as I let my tongue massage down into her, a sexy simulation of what I would do to her in a few moments.\n\nI looked up into those soft brown eyes and gentle smile. I kissed the center of that lovely soft brown triangle.\n\nScooting lower, Valerie's legs opening in anticipation, slick with her liquid excitement. Her essence filling my nostrils. I closed my eyes and inhaled deeply: musky, heady and erotic.\n\n\"Val... I love your bouquet.\"\n\nOur eyes locked as I took another deep breath. I smiled. Valerie gave me a relaxing smile. I think she was worried, given her earlier comment.\n\n\"I can't wait to taste you... To taste your honey... your sweet, sweet honey.\"\n\nI nibbled on the soft inner flesh of each thigh. Her legs went wider.\n\n\"Val... open yourself to me. Show me the complete Valerie Renee.\"\n\nShe looked at me hesitantly, before, bringing both hands down. Her fingers at the top of her sex. Pulling upward and sideways. Opening herself. Giving herself to me... completely.\n\nValerie had propped her head up on a pillow. She stared as I took a deep breath and gazed at the masterpiece of beauty that lay before me. Her womanhood, her feminine treasure, bridging a hand-span thigh-gap. Pillowy outer lips, revealing the frilly pink petals of the delicate inner lips, waiting to be kissed. All swollen and pouting, glossy with her sweet nectar. And then, there was the entrance to her sexual being, impossibly pink... impossibly wet. Her little clit was poking out a good way from its protective covering.\n\nIt was a beauty and treasure that had been shared with no other man. A lump formed in my throat at the honor that she was bestowing upon me.\n\nMy eyes never leaving the open display of what I was about to feast on. Of what I was about to worship and bring my dear friend to a level of ecstasy she had never experienced. \"Val. You're beautiful. So beautiful. Are you ready for me to taste you?\"\n\n\"Oh yes. Please taste me,\" her voice soft and hushed.\n\nI reverently kissed the splayed opening. Savoring the brief taste that I would return to feast on that nectar in a bit.\n\nRunning my finger from her opening up to her clit, brought a loud intake of breath. Her one hand remained while the other hand reached behind my head and gently pulled me towards her opened sex. I went forward eagerly, beginning to suckle on those lovely lips. I gave her labia several long kisses, mimicking the same kisses I gave to her mouth. Her wetness was coating my lips and chin.\n\nOn the first licks I left my tongue large, flat and wet, running it over her entire opening. I savored my first real tastes of her tangy juice. She was tangy and salty with a wonderful little tinge of sweetness.\n\nValerie let out a long and prolonged moan of pleasure.\n\nMy tongue dipped into her, coaxing out a steady drip of liquid arousal. I licked and sucked, drinking in her liquid honey... her 'Elixir of Life', letting her essence fill me. I darted my tongue around, lapping up every droplet of moisture I could find. I thought I could happily drown in it.\n\n\"mmmm, Val you are so sexy.... You taste so good.\"\n\n\"Oh Bill... that feels so good. I've never felt anything like this.\"\n\n\"And Val, we've just begun. Do you want more?\" my voice soft.\n\n\"Yes,\" pant, \"Please I want more,\" pant, \"Lots,\" pant, \"Lots more.\"\n\nI returned to my mission of bringing our very good, and close friend, to levels of divine bliss she had never dreamed existed.\n\nPulling her inner lips into my mouth, gently sucking and running my tongue along the creases I found there. I delved deep into her cleft, always slowly working my way up. I found she loved having her lips suckled while I ran my tongue along the inside, and I repeated this again... and again... and again. I was having an immensely satisfying time, as I listened to her soft satisfying coos, and 'ahhs' in between softly whispering my name. Her hips were slowly gyrating against my face.\n\nThe hand that had been holding my head was now running fingers running through my hair as I loved her. I probed her open sex, inserting my tongue as far as it would go. Then out, then in, and out again. I got into a rhythm, making Valerie moan and push her herself towards me, trying to force me to go deeper. It was all involuntary. Her natural reflexes taking over her body in response to the new sensations it was receiving.\n\nI let my tongue journey up along her slit through the frictionless texture, then back down, each time getting closer and closer to her engorged clit. Valerie was emitting a steady stream of ohh's and mmm's, which were steadily increasing in intensity.",
        "Her clit was sitting proud and had swollen to a dark pink at the top of the inverted 'V', formed by her inner soft lips. I flicked it once with my tongue, earning an \"Ungh!\" and a buck of Valerie's hips. Pushing its dainty hood out of the way with my upper lip and trapped it between my tongue and my teeth. I gently massaged the exquisitely sensitive jewel with my tongue. Sucking the whole thing, hood and all, into my mouth and nibbled on it rapidly while my tongue reached in and massaged her love button. Valerie responded by moaning and bucking her hips. Her hands roaming through my hair repeating my name, telling me just what I needed to know. Valerie was relaxed and comfortable with what was happening between us.\n\nI ran slow circles around her pearl. Valerie groaned in pleasurable torture while she desperately tried to move her clit into the line of the source of the pleasure she was receiving.\n\nLooking up, and saw her arms lying out straight from her sides. Her hands digging into the sheet. Her head moving side-to-side, the elastic jiggle of her tight cupcake mounds that always had my attention, made my cock throb beneath me. Valerie's eyes had rolled back in her head, her mouth open in a relaxed 'O', as she took in all these new sensations of pleasure her body was receiving for the first time.\n\nGiving her exposed clit a flick, caused her whole body to spasm. I touched it again more gently, cradling it with my tongue and closing on it with my upper lip, and began sucking, as gently as I could. My new lover's breathing was starting to become ragged. Her grunts and moans increasingly primal as she began grinding into my face. I sucked her fully into my mouth and bathed her with my tongue... probing as deep within her opened sex as possible, before returning to the center of her pleasure.\n\n\"Oh, god, Bill, don't stop. PLEEAASSE don't stop. Just a little more, Ahhh, ohh!!\"\n\nAs my tongue continued to bath her sensitive pea, the tip of my index finger slowly entered her tight wet depth for the first time. Valerie let out a gasp and an \"Oh my,\" as she felt the warmth of my finger enter her and gently probe. She was insanely tight, but velvety smooth to the touch.\n\n\"Are you OK, my dear?\"\n\n\"More than Ok. Do that again,\" she panted.\n\nEntering her again, this time all the way to my third knuckle and stirred her soft spongy walls, all to the sounds of pleasurable gasps, moans, and groans.\n\nPulling back, a second finger entered, her, curled, and danced on her sensitive G-spot. Valerie's legs splayed wide. Her feet kicking upward toward the ceiling. She surrendered herself to me as the first wave of pleasure built and built from deep within her molten core.\n\n\"Oh fucking shit,\" she gasped.\n\nValerie began to jerk and shake. Her senses in overload as her orgasm claimed her... and claimed her... and claimed her. Her primal release filling the quiet room... time after time. I held on trying to draw it out and make it as intense as possible as wave after wave of pleasure propagated through her little body and then collided with her senses causing her to twist about. Her thighs, now, tightening around my head. Valerie's hands clenching my neck, as she pulled my probing tongue against her throbbing sensitive pearl.\n\nI kissed the open and seeping flower. My lips glued to the source of the liquid satin that flooded out of my lover, reveling in her post orgasmic flavor before slowly kissing my way up her sensuous body.\n\nAs she began to come down from that mountain of bliss, a great sense of happiness and satisfaction filled my heart. My very dear friend's first sexual orgasm. I loved that I could do that for her.\n\nFinding her lips, Valerie devoured the flavor of herself.\n\n\"I've never tasted myself before. Now I know why you like it so much... Thank You Bill. I love you.\"\n\nKiss.\n\n\"I love you, Valerie Renee.\"\n\nGrin and a kiss. Followed by a warm embrace, as I rested on top of her.\n\n\"God, Bill, my whole body feels like Jell-O.\"\n\n\"Good, Jell-O, right?\"\n\n\"Mmm, the best. The slightly warm and squishy kind.\" She ran her fingers up and down my spine. \"\n\n\"And we're just getting started. There's more to come... so to speak.\"\n\nThat got a wide grin, as our lips softly met.\n\n\"Bill, I want to feel you inside of me. I want you to make love to me. I want you to take my virginity.\"\n\nLooking into those soft brown eyes, \"No, Val. I'm not going to take your virginity.\"\n\nShe gave me a confused look that was between 'questioning' and 'hurt'. I lightly kissed her soft lips and gently stroked her cheek.\n\n\"Val, your virginity is a gift. A gift is not to be taken. A gift, is to be given. And this gift can only be given once,\" my voice low and soft as I continued to look deep into her soft brown eyes. Then I saw the smile.\n\n\"It's why I love you so much. You would never take anything from me. Would never hurt me... Bill. Let me do that again...\n\n\"Bill. Let me give you, my virginity. Let me give it to a man that I love. To a man that truly loves me,\" her voice cracking, as I felt a lump in my throat at those last words.\n\nSafely encased. I laid back, and had Valerie straddle me, my hard length nested in her soft brown pubic hair, inches away from her navel. I wanted her to be in control. She gave me a questioning look.\n\n\"What?\"\n\n\"I wasn't expecting to be sitting up here like this. I mean...\"\n\n\"You were expecting to be laying down, with me on top?\"\n\n\"Something like that. I mean... it's just what I had imagined.\"\n\n\"We'll get there,\" I smiled as I reached up and stroked her cheek.\n\n\"This way, you're in control, for now. This way you can go as slowly as you want. You can have me inside of you as little, or as much as you want. And, most important, Valerie Renee... This way, you can give yourself to me, instead of me taking you.\"\n\nI got a soft smile. Valerie leaned down to rest on my chest giving me a soft lingering kiss, before returning to straddle my awaiting erection.\n\n\"Go ahead Val. Feel me, as you move along my length. Lean in and rub your clit against it. Take your time. I'm enjoying watching you. I'm enjoying the view,\" Valerie gave a broad smile, as she sat up straight. Her firm breasts sitting proud and high on her chest.\n\n\"So, you like what you see?\"\n\n\"I don't like what I see,\" she gave me a little playful pout.\n\n\"I love what I see. What I see is a very very sexy woman. A confident woman. A woman that is confident in her sexuality. A woman that I love. And soon, I will be seeing you with me inside of you. Deep inside of you... For the first time,\" the back of my hands gently rubbing across her hard nipples.\n\nValerie leaned forward. Her soft puffy lips cradling my shaft. Moving her hips, she slowly guided herself along my length, lubricating me with her building arousal. She found that she could rub her clit against the underside of the crown. I watched as she closed those brown eyes and concentrated on the shared contact point between her clit and my cock. Her mouth opened to form a gentle 'O\". The nice thing was... her hard nipples were deliciously above my lips.\n\nShe let out a soft moan as I took each rigid pebble into my mouth and gently bathed her nipple, as she continued to pleasure herself.\n\n\"Gosh, Bill... I never knew anything could feel so good. I think I could cum this way.\"\n\n\"Do it Val... Cum for me. Cum for me, one more time. Let me watch you cum.\"\n\nThe pressure on my dick increased as her sensitive clit moved along my length. My hands reaching under and cupping each breast... pinching each nipple. Her breathing intensifying as the pressure on her nipples increased. She was close. I watched her face, as it turned from anticipation of the approaching climax to full release as another wave shook her little body. She cried out. I was sure Kathy heard that one too. I inwardly smiled at that, as I imagined Kathy, lying on our bed, grinning. She collapsed on top of me. I wrapped my arms around her and held her tight, as her breathing subsided.\n\n\"Bill. I'm ready to have you inside of me.\"\n\n\"Do it Val. Give yourself to me.\"\n\nValerie sat up straight. I grasped myself at the base and pointed my cock at her sopping opening. I could feel the heat of her sex, and its wetness, like a hungry mouth seeking prey.\n\nI saw a look of nervousness.\n\n\"Whenever you're ready, Val... take your time. I don't want to hurt you.\"\n\n\"You won't hurt me... I'll tell you later.\"\n\nLooking into my eyes, she slowly lowered herself. I couldn't see it; but, I felt the initial contact as her soft lips kissed the tip of my encased erection. Valerie nervously bit her lower lip. A little pressure and the crown penetrated her soft flesh. She hesitated. Never breaking eye contact. I could see the concentration, the determination. A little more pressure and another fraction of an inch. She stopped.\n\n\"I can feel you stretching me. But, the little I have in me feels good... feels soooo good,\" I saw a grin.\n\nShe continued. A little more. Pulled back a bit. Then, a little more. The muscled walls straining as she slowly took each bit of my hardness into her very tight warm glove. Then I watched as her brown forest enveloped the last remaining bit of my hard flesh. I heard a loud exhale as she bottomed out. Her thighs resting against mine.\n\nI had seen Valerie nude more times than I could count. Even the moment a few minutes ago; but not like this. I took a moment to admire this amazing sexual creature on top of me in this new realm of our relationship. Her skin golden and smooth in the soft candle light. Her breasts were little hills on her chest, flushed with her arousal. Her little pink nipples as taut and erect as I've ever seen.\n\nI reached around an gave her tiny butt a squeeze then ran my hands along the front of her hips, up her belly, and over her soft breasts. I squeezed her smooth, yielding flesh in my palms, gently rolling her nipples between my fingers. But, what really hit me was the gentle smile and the look in her eyes of complete contentment, a beautiful woman, embracing her burgeoning sexuality with a fervor for the first time.\n\n\"You're in me. All the way inside of me... so deep... so full... a nice full. You feel sooo good. I never imagined how wonderful this would feel. How does my gift feel to you?\" her look soft and loving.\n\n\"You feel wonderful. You look wonderful. And, thank you, Valeri Renee. Thank you for giving yourself to me. It's an honor I will never, ever, forget,\" my voice cracking on those last few words.\n\n\"Come down here and kiss me, then I'll show you what to do next,\" that brought a huge smile.\n\nOur lips met. Her soft breasts against my chest. Her hips moving forward letting her lips glide over my shaft. Sitting back up, she refilled herself, with a satisfying sigh, as her natural instincts, which had evolved since our Creation, took over.\n\n\"I think I get the picture,\" she grinned.\n\nWe gripped our fingers together, her slender, small digits in my much thicker ones, and gently rocked her hips back and forth. Her eyes closed, as she focused on these newly founded sensations of being filled, and then emptied... filled... and emptied. This was so sensual, feeling her every move and watching her face as she experimented with our bodies. Finally she lowered one hand down between us and felt my cock where it entered her. She looked at me and grinned.\n\n\"I wanted to feel down there... You and me. I just wanted to touch where we are joined.\"\n\nShe continued to slowly ride me. I held her hip with one hand while the other still held her hand, our fingers still intertwined, giving us three points of connection besides the mental and emotional ones that were so vital to our coupling.\n\nHer virginity, innocence, uncertainty, and any thoughts of frigidity vanishing into thin air, never ever to return. Each of those were replaced by confidence, self-assurance, and the empowerment of knowing the mutual pleasure of two lovers coming together as one.\n\nSoft sounds of her pleasure, again, filling the room.\n\n\"Val, lean forward. Feed me your nipples. I want to suck on each.\"\n\nValerie let out a gasp as my tongue bathed and sucked on each hard sensitive miniature egg, as she continued to gently rock her hips, gliding herself along my length. She moaned approvingly.\n\nI was going to have her sit up and sit on my lap, so I could be deep inside of her and also pleasure her nipples some more. But, decided that was a position for just Kathy and me. I let her continue, as it looked like she was enjoying herself. Problem was, that even with a condom on, I was getting close. I wanted to finish on top of her. I wanted to make love to her.\n\n\"Val, I know you're enjoying yourself, and so am I; but, let's turn over. I want to make love to you.\"\n\n\"I like that idea.\"\n\nBeing a twin bed, we had to uncouple. However; rejoining was effortless. I filled her in one slow languid stroke. A moan of pleasure passing from each of our lips as I filled her.\n\nValerie had pulled her feet up to just under her butt cheek and laid her knees out wide, giving me complete, and deep access to her molten core. I slowly stroked through that very tight and very... very wet channel. I would pull back until just the crown parted her swollen lips, hesitate, and then slowly refill her until my loose sack brushed up against her soft cheeks.\n\nThe first time, Valerie giggled, \"I can feel your balls on my butt.\"\n\n\"You mean like this?\" as I moved my hips side-to-side.\n\n\"Yes. Mmm. That feels so nice.\"\n\nMy pubic bone gently grazing across her clit, against that puffy Venus Mound. Her hands gently moving over my back. At times I would raise up on my hands and lock my elbows so our eyes could look into each other's soul, as I slowly made love to my long-time friend. Whispering my name with each loving stroke. The room was filled with her little love making sounds. Sounds that only a woman, being loved to can make. Many times our lips would meet. At times the kisses were frantic. Most of the time, soft and loving. Her hands reaching up and running through my sparse chest hair.\n\n\"I love rubbing my hands through your chest hair while I feel you moving in and out of me. You're so sexy.\"\n\nWe both groaned softly, as we stared into each other's eyes, making love to one another slowly, but passionately. Our lips meeting, tenderly and lovingly.\n\nValerie had closed her eyes, savoring our complete coupling. Taking in all the new sensations that her virginal body and senses were receiving. I couldn't help but smile at the look of complete peace and contentment that graced her face. The gentle smile ever present.\n\nI slid my cock slowly out of her to the tip, then glided it equally slowly back into her. She broke our kiss off and smiled that 'Valerie smile' into my eyes, telling me to give it to her. So again I repeated my motion several more times, slowly backing out to my very tip, then slowly burying back into her to the hilt, as we each savored our coupling... our joining... building our connection. After several moments, we settled into the slow relaxed rhythm that men and women had enjoyed since the beginning of time, as we pressed into each other softly.\n\n\"Bill. Go faster. Do it to me.\"\n\n\"I'm not going to last much longer.\"\n\n\"I don't care. You've given so much pleasure. I just want to watch you finish. I want to feel you finish inside of me. Please cum for me. Let me feel you cum inside of me for the first time. I want to know that I give you pleasure.\"\n\nValerie had, again, pulled her feet to just under her butt and opened her knees wide, giving herself to me. I picked up the pace. I didn't really fuck her. I could have. This wasn't about fucking. That would be another time. This was about loving. I just picked up the pace into a nice ageless rhythm. Once again, I was rewarded by sounds of Valerie's growing \"ahhs\" and \"ooohhh's\". Her hips moving under me matching the action of my hips. Her little breasts slowly swimming in sync with my movements in and out of her.\n\n\"Val. I'm going to cum.\"\n\n\"Look at me.\"\n\nOur eyes met. I knew that my soft loving look from earlier was gone. It had been replaced with a desperate need to release. To release what has been building inside of me all night. To complete our coupling.\n\n\"OH GOD VAL,\" the low primal groan as I drove deep into her one last time.\n\nFollowed by an, \"AAAAHHH.\"\n\nMy balls clenching and clenching and clenching as I filled that latex sheath.\n\nBy this time Valerie had wrapped her legs around me, and was pulling me into herself.\n\nI collapsed. Valerie held me in a tight embrace. Her face buried in against my shoulder. I could feel tears, as I looked into her gleaming eyes.\n\n\"I could feel you cum. Feel you throb inside of me. Thank you, Bill. Thank you so very much. I'll always remember tonight. The whole night. I love you. I'll love you forever,\" her voice cracking on those last four words.\n\nKiss.\n\n\"I love you... Valerie Renee.\"\n\nOur lips meeting for a final long and soulful lover's kiss. A kiss that was felt deep into each of our hearts, cementing our love.\n\nWe repositioned ourselves with Valerie's warm body draping across mine. Her head on my shoulder. Right hand resting on my chest, toying with my chest hair. My arms around her. We savored our new closeness. Our stronger connection. Our loving friendship.\n\n\"I'm glad you were my first. I have never felt sooo loved as I do right now. When Kathy asked me earlier in the week if I wanted you to make love to me, to be my first, I didn't know how to answer her. I don't think I had ever conscientiously thought about it. Maybe I had,\" sighing, \"I don't know. Even when I decided to move in with you two, I never imagined we would make love. Getting naked together was one thing. That was fun. Making love together... I mean you have Kathy. You guys are going to get married, and have babies.\"\n\nThat lightened the mood as we both laughed and kissed one more time, before I went into the bathroom to get cleaned up.\n\nI returned from cleaning myself to find two glasses of sparkling champagne and a glowing Valerie, sitting cross-legged. Totally uncovered. That soft dark patch of hair peeking between her crossed legs. Her skin bathed in the soft glow of the candles. Her face flushed in a soft warm pink.\n\n\"Here's to my very best guy friend. A friend that has helped me every time I needed it. A friend that I have been so very comfortable with ever since our very first date. A friend that I gladly gave myself to. A friend that has made me a woman. To the man that has made my first time, something every girl dreams it would be like. A friend that I deeply love, and will have a place in my heart forever,\" her voice once again, cracking at those final words. Her eyes filled with tears.\n\nI leaned in and kissed those tears away. Then...\n\n\"Here's to my very very good friend. A friend that has made everything here possible. A friend that brought me out of my social shell over two years ago. A friend that has let me into her heart. A friend that has a very special place in my heart, and always will, until the end of time. A friend that has honored me in a manner that can only happen once. I love you Valerie Renee,\" my voice cracking on those last words.\n\nWe slept peacefully in the little bed. I woke to find her draped across my body... asleep. As I lay there feeling her closeness... our closeness, my mind wandered back over the past two years of our friendship... our growing, and deepening, friendship, and 'yes' our love for each other. To here. Laying with Valerie. Again, it was the first time we had slept together, alone, and naked.",
        "We made love once again in the morning. I'm not sure how quiet it was. Valerie wanted to leave her bedroom door open.\n\nValerie and I stood in the doorway of our bedroom. Kathy was lying on her back, awake, totally uncovered.\n\nI watched as Valerie moved to completely cover Kathy's nude body with her own. Breasts against breasts. Mound against mound. Lips against lips. Valerie kissed Kathy with a passion I had never witnessed before. The kiss was followed by soft sobs from each. I stood back. Not wanting to interrupt the bonding that was taking place.\n\n\"Thank you Kathy. I don't think I could have done that... Had my most beloved possession make love to my best friend. And he is, because you own him as much as he owns you. You are truly... truly a wonderful and beautiful woman. And I love you with all of my heart. And you have a truly wonderful and beautiful man. Who loves you from the very bottom of his heart.\"\n\nThe three of us slept together later that night. No sex. Just bonding."
    ],
    "authorname": "32aa",
    "tags": [
        "romantic novel",
        "best friends",
        "small breasts",
        "virgin",
        "female virgin"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/youre-not-a-serial-rapist-ch-24"
}