{
    "title": "Christian College Sex Comedy Ch. 30",
    "pages": [
        "*Friends stand by you through the struggles your enemies create*\n\n(College, Humor, Lesbian, Strap-on, BDSM, Teasing, Interracial, Cunnilingus, Hot Tub, FFF)\n\n(Group Sex)\n\n(Yes, this tale is supposed to be somewhat humorous and outrageous too. While not always comedic, I'd like to think it is mostly a good-natured romp.)\n\n\n\n\"Hey, Jill, I'm home,\" I called out as I entered the 'family' home.\n\n\"I'll warm up some dinner for you,\" Jill called out from the kitchen.\n\n\"Thanks,\" I replied. I heard the TV coming from the den and headed that way. Belle was lounging on the sofa, arms over the back and feet kicked up on the coffee table.\n\n\"Hey, Kid,\" she greeted me without turning around.\n\n\"Hey, Belle. Please take your feet off the coffee table,\" I asked.\n\n\"If Jill wants me to move them she will ask me,\" Belle chuckled. \"This is not your damn home, monkey-boy.\"\n\n\"Jill wouldn't ask...mainly because she's afraid of you,\" I joked, \"so I'm asking.\"\n\n\"No,\" she stated.\n\n\"Fine, but you have only yourself to blame when you wake up in a black kitten suit in the center of the University of Virginia campus,\" I mocked her. Belle looked over her shoulder at me.\n\n\"Bring it, Bitch,\" she counter-mocked. I jumped over the sofa and sat beside her. Belle's gaze was a challenge, which I took up. I reached out and playfully pulled her shirt up so that I could start placing kisses on her stomach. \"Okay, I'm not going to pummel you in the next twenty seconds, so keep me happy and I'll let you live,\" she purred.\n\nI unbuckled and unbuttoned her pants before working them down. Belle's eyes clearly showed her curiosity as to how far I was going with this. I moved halfway off the sofa, began working her boots off, then wrested her pants and panties the rest of the way off as well. Once I had lifted her right leg up pointing to the ceiling, I moved between her thighs and gave her a devilish grin.\n\nBelle scooted her butt to the edge of the sofa before guiding my lips the last little bit to her pussy. It was already glistening with her arousal as I made my first contact.\n\n\"Zane, your food is ready,\" Jill called \u00ac\u00acout. Yes \u2013 yes, it was.\n\n\"He'll be there in a minute,\" Belle called out. As for me, I put my hands under her ass cheeks and lifted her to me.\n\n\"Someone's been eating their Wheaties,\" Belle murmured. I pulled her clit tightly between my lips with a powerful suction. When I started thrumming it with my tongue rapid-fire, Belle began to gyrate her hips and started panting.\n\n\"Are you done with the dishes?\" Belle called out to Jill.\n\n\"Almost, Dear,\" Jill answered.\n\n\"Hurry,\" Belle pleaded to me. She was working her nipples through her sports bra. I began wedging two fingers into her snatch, wiggling and twisting them around to up my game. Right as we heard Jill coming down the hallway, Belle grabbed a throw pillow off the sofa and bit down on it to muffle her scream.\n\nIn rapid order I pulled up her panties and jeans so that Belle could secure them before Jill came within view.\n\n\"I need to go to the bathroom,\" Belle announced as she hopped up and hurried to the downstairs lavatory in her socking feet. Jill snuck over, retrieved the remote control off the coffee table, and then headed to her chair.\n\n\"Zane, you may want to wash up before you eat,\" Jill said, somewhat embarrassed by the request. That was mostly likely brought on by either the glistening residue on my lower face, the damp spot on the sofa, and/or the smell of Belle's sexuality in the air. I'm an idiot but not a total moron; I headed off the bathroom as well.\n\n\"I think Jill knows,\" I sighed to Belle as we maneuvered around the sink.\n\n\"Ya think?\" Belle laughed. \"I tell you what; I'll tell Jill that I'll keep my boots off the furniture from now on. Let's see what she makes of that.\" \n\nI was afraid of what it looked like.\n\n\"She'll probably think that you've bribed me with sex,\" Belle gave me a hip nudge.\n\n\"That's wonderful,\" I groaned.\n\n\"It's the truth,\" Belle snickered. \"She's a brutal bitch but she never lies to you.\"\n\n\"True enough,\" I conceded; the Truth was a brutal bitch indeed and didn't play favorites.\n\n\"Tell me something, Zane; why do you feel entitled to put your hands on me?\" she asked.\n\n\"Entitled? I feel damn lucky for every opportunity I have with you. When I see you looking horny, I jump at the chance,\" I informed her. \"It's not like I have to psyche myself into wanting to be with you, Belle.\" This is usually when I have to explain my love and attentiveness theory to women. Belle barely shrugged as she exited the room and joined Jill in the living room.\n\n\"Zane's convinced me to leave my boots at the door,\" Belle spoke up. She had resumed her seat on the sofa.\n\n\"Oh...I \u2013 well, thank you,\" Jill managed to get out.\n\n\"Jill, I'll also start asking you about some of the sh- \u2013 crap I do, in case any of it annoys you,\" Belle continued. \"I know Zane dropped me in your lap; you've been cool about it.\"\n\n\"Thank you, Belle,\" Jill smiled. \"It has actually been quite nice to have someone home when I get in. You don't really appreciate companionship until you find yourself home alone.\"\n\n\"No problem, Jill. These accommodations beat my last place and the company is ten times better,\" Belle mused.\n\n\"I'm glad you are here too,\" I added. \"I also have some business to discuss really quickly. Belle, could you help us buy some motorcycles tomorrow afternoon? Second, I asked two girls to come over for a movie Saturday night, if that's okay?\"\n\n\"Sure, I'll go shopping with your psycho pack. As for the girls, anyone we know?\" Belle prodded.\n\n\"Erin and Gerry, the two girls who invited the gang out to a party last Saturday night,\" I related. \"I said I would spend some time with them but I let that fall through. They decided to let me make it up to them.\"\n\n\"'Decided to let you make it up to them?' \" Belle laughed. \"You are one weird dude.\"\n\n\"What? I don't understand,\" Jill worried. \"Did Zane do something wrong?\"\n\n\"Nah. Most guys who blow off a girl either don't worry about it or don't call back,\" Belle kept chuckling. \"Your nephew is more than a bit odd.\"\n\nI threw up my hands in disgust before turning and getting my dinner. I joined the two ladies, ate my dinner, and kissed Aunt Jill goodnight and made for the door. I caught Belle giving me a curious look so I doubled back and gave her a kiss on the cheek too. She looked more amused than anything else \u2013 seeing me in a domestic light must have seemed hilarious to her. \n\nI would have been worried about her having a negative reaction except I knew Belle didn't operate under life's normal restrictions. She could be chief bad-ass bitch of a 1% club and devotedly religious Aunt Jill's guardian at the same time. It was her ability to not give a damn about anyone else's opinions of her yet still hold a great deal of empathy for those she chose to care about that I valued so much.\n\n\n\nJUGGLING DYNAMITE\n\n\n\n\"Zane,\" Cassandra, a junior, caught me heading from the parking lot to my dorm. \"Handmaiden's Duty.\" Technically, it wasn't nine o'clock yet so I was vulnerable.\n\n\"Hey, Cassandra, what would you like me to do?\" I inquired politely.\n\n\"Lick me to unconsciousness,\" she smiled. Wait! Wasn't she a Rhaine supporter?\n\n\"What!\" I gasped. That was a little extreme for even my unconventional life path.\n\n\"I am just kidding,\" she giggled. \"I want you to be my towel boy this evening.\"\n\n\"Let's go up to your room,\" she took my hand, \"I want to pick out your swimsuit.\"\n\n\"Holy Hell,\" I muttered. I knew I should have stayed away from that Brazilian website. You were safe inside your dorm room from this tradition \u2013 unless your duty takes you into one.\n\nPaige materialized at my side as I cleared the stairwell. How my albino lover felt about the African-American woman leading me, she didn't show. Cassandra was a deep, rich brown color with straight hair that went well past her shoulders, both an interesting contrast to Paige's startling white. Cassandra was also a 40 D bra size and was the proud owner of an ass that was right on the safe side of being too much. \n\nIt wasn't worth mentioning that her father was also a partner in one of Florida's largest and most prestigious law firms. That she fully expected a video of her in a hot tub with me in, or close by, was a given. I had no clue as to why she wanted to piss daddy off because all I really could think about was which bikini she would chose.\n\n\"There is someone waiting for you in the bedroom,\" Paige whispered in my ear. My sexual antics are usually broadcast, which made me wonder why Paige was being clandestine about it.  I knew why the moment I passed around the last screen and saw who was on my bed \u2013 Gabrielle Black. She looked at ease, though she studied my approach. I had to work out what she might want, which wasn't easy, but I do have a way with women it seems.\n\n\"What would your five best movies be?\" I tossed out there as I collapsed on my back on the bed next to her. \"Reign of Fire, Dragon Wars...\"\n\n\"Dragonslayer,\" Gabrielle declared. \"It was my first and probably my favorite,\" she reclined at my side close enough so that I could make out her face looking down at me as we spoke.\n\n\"Pete's Dragon?\" I teased \u2013 reference my earlier idiocy for an explanation.\n\n\"No,\" she replied crisply. \"Never say those words together ever again, and if the next words out of your mouth are The Never Ending Story, I'll skull fuck you with your own pancreas.\" I was left with no doubt as to her ability and willingness to do just such a thing. Being Gabrielle's only friend was proving to be a threat to my physical well-being.\n\n\"Dragonheart.\" I elected to live. Gabrielle nodded.\n\n\"Dragonslayer, Dragonheart, Reign of Fire, Dragon Wars, and Erogen,\" she listed off her favorites. \"I've considered Q as well.\"\n\n\"Oh, the hell you say,\" I gasped. I rolled over to playfully smack her on her ass and pain ensued \u2013 my pain, as she grabbed and twisted my wrist effortlessly.\n\n\"No,\" I seethed through the agony, \"Q gets an ass-swat. You'll have to break it because I'm not letting you get away with comparing that dog Q to Reign of Fire.\" Then I rolled my head and screamed into the comforter because I've had my nuts ground into a puree and that didn't hold a candle to this level of pain.\n\n\"You are not touching me like that,\" Gabrielle whispered to me. She may have been talking normally; I was still screaming into the sheets because she hadn't let up. When she did, I gasped, \"No \u2013 not gonna \u2013\" and the pain returned. Things were fading to black and the only thing I could focus on was biting my own arm off to end my suffering.\n\n\"You really can take a beating, Zane,\" Gabrielle noted. \"I've known people to pass out after ten seconds of this hold and you've broken thirty. I am mildly impressed.\" She let go and like a switch, the pain vanished, though the arm was numb. I pushed up with my good arm until I was kneeling before the still reclining Gabrielle.\n\n\"Don't,\" she warned, already discerning my intentions.\n\n\"It is not happening,\" I ground out. \"Q does not stand in the hierarchy of dragon movies unless you want to drag Harry Potter in too.\" \n\n\"You are not laying a hand on me,\" she warned.\n\n\"You are going to have to break my other arm to stop me,\" I shrugged. I moved my other hand forward slowly.  When I broke the plane of her body, she grabbed my other wrist.\n\n\"Your arm is not broken, only suffering from a paralysis that will fade within four or five minutes. Now stop it.\"\n\nI tried to brute my way past her; she twisted the wrist and popped my shoulder joint. Oddly there wasn't too much pain, though my arm went limp. She leveraged me from a kneeling position to the vertical. I was starting to worry (yes, just starting) that I'd pissed her off when she mounted me, my useless arms pinned to my side, and she looked down at me.\n\n\"I find you amusing,\" she stated calmly. \"I am not saying you are a joke; you are willing to express playfulness despite your own pain and other people's resistance.\" I wiggled beneath her. A less experienced person would have assumed I was trying to break free. Gabrielle worked it out in seconds. She unzipped her shirt half way down then leaned down so that her bulletproof sports bra was in my face.\n\n\"If I don't do this, I'll end up killing you,\" she explained. I didn't get her ass but I was getting her cleavage \u2013 what a wacky world I lived in.\n\n\"Mmmphf,\" I replied. I was busy kissing the top of each breast above the bra and licking the valley between as rapidly as I could. I wasn't sure how patient she would be.\n\n\"Time for you to get to the meeting outside,\" Gabrielle explained. She moved off me to one side and began massaging my arms. \"I'll reconsider Q but don't hold your breath,\" she added as we got off the bed and headed out.\n\n\"I still owe you an ass-paddling,\" I groaned.\n\n\"Forty-seven minutes,\" Gabrielle pointed out. \"That is the time it takes to dig and fill in a three foot deep grave for a man of your height and weight. You might want to keep that in mind.\"\n\n\"Why? I don't know any guys of my height and weight,\" I smiled at her. What she said next made less sense at the moment.\n\n\"Too bad you are an only child; you would have made one hell of a big brother,\" she nodded.\n\n\"Gabrielle, what are you doing for Thanksgiving?\" I asked instead.\n\n\"Had I brought about oxygen deprivation to your brain, I would have a better understanding of that request,\" she regarded me. \"With me and my trouble, why would you put your family at risk?\"\n\n\"Family is more than blood; it is those you chose to let inside \u2013 not in your minds but in your souls,\" I responded. \"At some time you made the choice to live. I'm not trying to do you any favors out of pity; I'm responding to your desire to overcome all obstacles, and that drive is worth emulating by me and mine.\" She nodded once but became non-communicative once we entered the main room.\n\nThe rest of the group was gathering: our five educators, eighteen women I was familiar with in one way or another, plus a handful of ladies that normally spent some free time with me. I made a point of approaching the women I believed had been elected to lead their 'tribes'. A few, like Temperance, Hannah, and Chastity, were well known and liked me.\n\nRhaine and Joy had also come out on top of their respective tribes and, with nine other girls, made up the majority of the leadership. It was a bit disheartening to see the Traditionalist had come out on top but with the memories of the civil strife receding, it made sense that my side would suffer. The basics hadn't changed; this was still a Christian women's university.\n\n\"Zane,\" Dr. Kennedy began, \"I think Ms. Lane and I will have a list by Monday morning. Do you want us to submit a list of nominees to you by lunchtime?\"\n\n\"No, I rely on you two to make the right choices,\" I answered. \"I trust you.\"\n\n\"Even if we pick more Traditionalists than Progressives?\" Hudson Lane asked.\n\n\"The school is not mine but ours, despite what Dr. Scarlett thinks,\" I told her. \"You two know more about what makes a better jurist than I do. I'll stand by that belief.\" I thought Hudson was just playing with me and by the sparkle in her eyes and the tongue she flicked across her lips, I was right.\n\n\"We should have the Nameless selected by Friday afternoon,\" Dana informed me. There was no question of me accepting those names. If you aren't going to listen to your experts, why get them?\n\n\"Good enough,\" I said. \"Once they have accepted, have them contact me when they can and we'll work out a good time to meet with the other Janissaries.\"\n\n\"What are the Janissaries?\" a newcomer inquired. I looked at her. \"Sage Lincoln,\" she identified herself. \n\n\"It is the code word used to describe those who work on your behalf as part of an executive body: The Advocates, who will administer disputes between the tribes, and the Nameless enforce your, the tribal leaders', and the Advocates' decisions,\" Christina announced.\n\n\n\n\"Why do we need any of this?\" a second girl, KayLeigh Miller, asked.\n\n\"The stronger the tribal leaders and the Janissaries are, the less power I have,\" I explained. \"Think about it: I'm not mediating disputes or forcing ladies to do things \u2013 you women are. All the Janissaries are chosen by the five female educators in this room. The Tribal leaders can impeach any of them at any time. It is all on you to rule yourselves.\"\n\n\"How can we be sure you stay out of things?\" Rhaine wondered.\n\n\"I'm not staying out of things,\" I reasoned. \"I'm the human shield. If the tribal council needs money, I ask for the money. If there is no amicable solution to our problems, the Advocates can bring me in. If there is a problem with the Administration, you ladies formulate our response and I present it. Face it: If it is a crappy job, you ladies give it to me.\"\n\n\"It is rumored that we, the tribal leaders, can vote you out of school,\" KayLeigh volunteered. \n\n\"Can you get voted out of school?\" I countered.\n\n\"No. My parents paid for me to be here,\" she replied.\n\n\"Then why would I be any different?\" I grinned. \"Honestly, what I suggested was that I could be voted out as Mediator, but I have since been given the impression that the Vice Chancellor would only allow a male student to hold the spot...so you are currently stuck with me.\"\n\n\"Can we put other restrictions on you?\" Simone Brady prodded.\n\n\"This is not the 'Zane' show,\" Virginia Goodswell interjected. \"We need to decide when the new Student government will meet \u2013 I suggest Tuesday nights \u2013 and how we are going to conduct business.\"\n\n\"We can start by deciding where we meet,\" Chastity spoke up. \"I vote for Zane's place.\"\n\n\"What's wrong with the Assembly Hall, where we've always met?\" Rhaine countered.\n\n\"Rhaine, you are drinking a Dr. Pepper, KayLeigh, you are drinking a grape juice, and Joy was eating a bowl of vanilla ice cream with chocolate syrup when I got here,\" Hope snickered. \"You have hot plates and microwaves too, if needed.\"\n\nRhaine, Joy, and KayLeigh, all Traditionalists, looked guilty. They also looked like they treasured their creature comforts because they weren't running for the door.\n\n\"It is a nice place,\" KayLeigh admitted.\n\n\"And you don't get to come back up here otherwise,\" Rio grinned evilly. \"This floor is devoted to the freshman class.\"\n\n\"There are a lot of upperclassmen up here right now,\" Rhaine pointed out. \n\n\"Those are what you would call 'friends',\" Rio sneered. \"If you weren't freaking evil, you might have some.\"\n\n\"Please don't put it that way,\" I requested of Rio. Rio had every reason to be cranky. Mercy looked even more exhausted sitting at her side.\n\n\"Zane will arrange the room to fit your needs,\" Christina finally spoke, \"I guarantee it.\"\n\n\"You think you can control him?\" Rhaine shot back.\n\n\"I'm not afraid of him; he's not some wild beast. I ask him to do things for me and he does,\" Christina chided Rhaine. \"He is like any other freshman; it is that simple.\"\n\n\"He's rather mouthy for a freshman,\" Hannah joked.\n\n\"Well, maybe if you put my mouth to other uses,\" I bantered back. There was a moment of silence followed by Dana Gorman taking up her bottled water and walking over to me. She smiled down at my seated form while she poured out the remaining water onto my crown.\n\n\"Cool off, Casanova,\" Dana cautioned me playfully before returning to her seat.\n\n\"Exactly why do you keep her around again?\" Rio slapped my shoulder.\n\n\"Can you imagine how insufferable Christina would be if Coach didn't keep her in line?\" I smiled. Christina rolled her eyes while Rio chuckled. Virginia stood up and cleared her throat.\n\n\"I want to make sure that all the ladies \u2013 plus Zane \u2013 plan to make this experiment work. It is rather pointless to proceed if any of you can't be honest now,\" Virginia, my Spiritual Advisor, poled the audience. Most of the girls looked around to see who would do what but no one jumped.",
        "\"I think it is safe to say that we students will stay true to the Vice Chancellor's plan, though this is not an endorsement of Zane, his conduct, or even his continued presence here,\" Rhaine spoke for the group.\n\n\"With that settled, we can call it a night,\" Dr. Kennedy declared. \"Ladies, consider what issues we need to deal with so we can bring them up next Tuesday night \u2013 9 pm.\"\n\n\"Who do we send the itinerary to?\" Simone inquired.\n\n\"Zane,\" Hudson Lane volunteered me.\n\n\"I nominate Faith De Young (of Christina's inner circle) to be our Secretary of Record, if she wants the job,\" I said. Faith looked completely taken off-guard but nodded quickly.\n\n\"I'll do it,\" she made clear. The meeting broke up soon after with most of the student leadership departing. Dana, Hudson, and Christina & company hung around a little longer.\n\n\"Not the Glamorous Gremlin?\" Rio teased me on my choice of Secretary. She gasped and nearly fell over right after that. Iona smiled softly and shook her head. She realized that she was still a freshman and her day would come.\n\n\"Ah, here's one of the controllers,\" Heaven gave a devilish smile as she handed the device over to Rio. Miraculously, the other three sexual wonders were also handed over, ending the threat of torture for the day.\n\n\"I see a spanking machine in you bitches' future,\" Rio snarled at Chastity, Hope, Heaven, Faith, and Christina.\n\n\"I swear, I tried to get one of those damn things all day long,\" Valarie griped. \"You would think that after setting this up, someone would have given me one, but no \u2013 I am a freshman so I don't get to play the game.\"\n\n\"It was you!\" Rio screamed, and lunged at Valarie, who comically batted her away as Vivian and Mercy intervened.\n\n\"Yes,\" Val laughed, \"but it was Iona who figured out how to have captured your days by enlisting the aid of classmates with video phones. I can tell today's footage is going to be a classic.\"\n\n\"Why did you do it?\" Vivian asked Valarie.\n\n\"I had revenge on Rio and made Mercy ecstatically happy; it was a win-win,\" Val grinned vindictively. It was a credit to Rio's berserk nature that no one asked what Rio had done to warrant revenge; everyone automatically assumed that Valarie was justified.\n\n\"Everyone's sympathy is under-whelming,\" Rio grumbled. \"Come on, Mercy, let's get these things off.\"\n\n\"Do we have to?\" Mercy pleaded softly. Hell, I imagine she could barely stand but apparently, her limit to sexual overstimulation was unconsciousness. Rio used one finger to hook Mercy's collar and pulled her close.\n\n\"How dare you talk back,\" Rio whispered, but I was close enough to hear. \"I was going to settle for the vibrating nipple clamps that arrived today but now I'm thinking a few dozen paddle blows \u2013 to each cheek \u2013 are in your future, you annoying little bitch.\"\n\nAnnoying was Mercy and Rio's code word for 'love'; Rio simply couldn't stand the 'L' word.\n\n\"Vibrating nipple clamps?\" Christina was both confused and amused. \"Where do you people come up with this stuff?\"\n\n\"Adam and Eve,\" Rio shot back without batting an eye. \"Wait until I have Mercy's nipples and lips pierced; then the real fun begins.\"\n\n\"I don't think Mercy should have her lips pierced,\" Vivian suggested forcefully. \"They'd be glaringly obvious.\" Rio groaned and sighed.\n\n\"Not those lips,\" Rio clarified. \"The other ones, you know \u2013 labia, pussy lips, cunt etc.\" There was a pregnant pause in the room. \"Attach vibrator wires to those bad boys and Wow! Let the magic begin.\" \n\nMercy and Rio really were made for each other; they were both salivating at the prospect. Thankfully, I saw Cassandra hovering around and looking ready for me to start playing towel boy. \n\n\"Ladies, one last duty to perform and then my day is done,\" I attempted my exit.\n\n\"Zane, is it alright if I spend the night?\" Hope ambushed me.\n\n\"Of course,\" I smiled, because I'm a fucking idiot who is an embarrassment to the very concept of the mentally challenged and a parody of every teen boy date flick. I was already spending time with Iona, Paige, Barbie Lynn, and now Hope.\n\n\n\nMaybe I can find a way to have a secret government space array shoot an earthquake laser at my feet so a pit opens up underneath me and I plummet to a fiery death at the Earth's core. Maybe I watch too much bad TV.\n\n\"Iona, did my Viagra arrive yet,\" I teased my buddy. \"I'm going to need a pill tonight.\"\n\n\"Oh, Zane, I don't think we have any but I'll go online and see what I can get for you,\" Iona replied in all seriousness.\n\n\"I know some guys who smuggle them in from Mexico,\" Valarie offered. \"I'll make some calls.\"\n\n\"That is so cool!\" Barbie Lynn clapped her hands. \"Now he'll never go down. I can ride him all night long.\" She hugged me while a fearful vision of my desiccated, sperm-drained husk lying open-eyed and lifeless on my bed danced before my eyes.\n\n\"Zane?\" Cassandra called out.\n\n\"Oh...yes, towel boy and bikini selection,\" I muttered. I gravitated her way, took her hand, and led her to my room.\n\n\"What's that about?\" Vivian mused.\n\n\"Handmaiden's Duty,\" Iona informed the ladies. \"He picks out a bikini for her and acts as pool boy while she's in the Jacuzzi.\"\n\n\"I hope someone cleans that thing from time to time,\" Faith shuddered.\n\n\"Every morning at ten o'clock it is drained and cleaned, and the filter cleaned every Monday,\" Iona droned on without even looking up. The rest of that exchange was lost as I retreated to my bedroom.\n\nWhat followed could be blamed on Cassandra accidently dropping her drink in the Jacuzzi and me having to retrieve it; it was an unopened soda can. Or maybe it could be blamed on the surprisingly conservative (for my room) white and black striped bikini she wore. Whatever was the catalyst, inside five minutes I had Cassandra out of her suit, front to front, her crotch pressing me against the side of the Jacuzzi with my head barely above water while she rode my face in a pattern and energy that reminded me of Hawaii's North Shore.\n\nCassandra was pounding the back of my head against the wood wall as she drove her cunt over my lips and tongue again and again.\n\n\"Oh, Baby, you are so much better than my fingers,\" she communicated with an erotic growl. \"Keep it up...keep it up!\" She was the one in the control of the sexual rhythm so I was not sure what else I might do but keep licking and sucking as hard as I could.\n\nI was finally able to run a hand along her chocolate flesh until I managed to push against her sternum and got her to roll her shoulders back. That allowed me to start massaging and stroking one of her breasts while my other hand got between her legs from behind and gently penetrated her pussy.\n\n\"Za- \u2013 za- \u2013 za- \u2013 Zane!\" she screamed out. Note to self: Add earplugs to my Must Have List.\n\nCassandra slathered my nose, lips, and chin with her rather scalding, light to the tongue and tasty fluids. If she wasn't still trying to give me a concussion with her hips I might have enjoyed it more. As her orgasm dissipated, she slid down my body with a sated sigh. Her legs were outside mine so as she descended, her cunt came to rest on my Speedo-encased cock. Saying that my penis was hard would be like saying snow is cold or the English love their soccer; pretty much a given.\n\nHer eyes grew wide when she realized where she rested. She's a senior and a virgin in a Christian Girl's school \u2013 she began humping me...of course. Being Cassandra, she began humping me hard and thumping her way to another climax.\n\n\"Zane, I am totally rethinking you being allowed on campus,\" Cassandra panted.\n\n\"Is this a good thing or a bad thing?\" I wondered. At this time I had one finger lightly in her pussy as my other hand tenderly tweaked one of her nipples.\n\n\"Oh, I think every junior and senior should have their own personal freshman boy to keep under control with a strong hand,\" she grinned while she kept working my rod over with her cunt.\n\n\"Wouldn't it be nice if we developed a peaceful, platonic relationship based on mutual trust and respect?\" I suggested hopefully. Cassandra gave a deep, throaty laugh.\n\n\"You're funny...but no,\" she grinned evilly. \"After all, if that was the case, I couldn't do this: Zane, suck my other nipple \u2013 suck it hard, while I play with your fat phallus.\" Oh yeah, I love the way this is going (insert internalized weeping).\n\nShe worked out my cock painfully fast and began rubbing it deeply between her labia, to the point I felt the tightness of her vaginal walls on my cockhead.\n\n\"Zane, you know a whole lot about the sex stuff,\" she stated. \"What's a cock ring?\" Oh, HELL No! I have enough difficulty ejaculating as is. The last thing I need is something that allows another to make the prospects of my ejaculation even dimmer.\n\n\"It's a device \u2013 a ring \u2013 that is placed over the base of the penis to restrict blood flow, thus allowing longer erections,\" I grudgingly confessed. \"Thinking about getting one \u2013 as a Christmas present \u2013 for someone out of state?\"\n\n\"So...you could have intercourse...for a long time...and not ejaculate...so a girl would be...safe...in fucking you raw?\" Cassandra's voice was becoming more strained.\n\n\"Technically, yes, but a little music, some hand-holding, and dinner at McDonald's would suffice in getting me aroused,\" I tried to explain. \"There is no need for...something like that.\"\n\n\"Zane, clearly God put you...on this campus as a test for...true believers,\" Cassandra related, \"And every woman here needs...to be tested \u2013 A LOT!\" she screamed out her second orgasm of the night.\n\nMy hands raced down to grab each luscious buttock before her spasms caused her to slip down my cock and make her virginity a thing of the past. When my cock slapped against my stomach, I held Cassandra tight until she calmed down.\n\n\"You need to stay on campus during the weekends,\" Cassandra moaned with content exhaustion, \"so we can use you more often.\"\n\n\"Why do you think I flee campus every weekend?\" I thought. If she had her way, I'd be walking around with an IV in my arm and popping Viagra like M&M's. I chose life! If you think I am a coward, step up and take my place. I'll sneak back into the cemetery at night and put a flower on your headstone. You can take that permanent smile etched on your face to your grave, He-Man.\n\n\"I have to ask: What brought this on?\" I inquired.\n\n\"I received one of Mercy's controls and we shared the next class,\" Cassandra confessed. \"She glowed with such pleasure I thought she would pass out. I was suddenly curious.\"\n\n\"I had nothing to do with that,\" I groaned. \"I swear, it wasn't me.\" Cassandra placed one hand on each side of my face.\n\n\"Zane, it wasn't you \u2013 I know that,\" she smiled, \"but it is your presence that allowed something like that, her ability to experience that level of pleasure, that I want to experience. I have to go now. I need to report to the other girls what it was like so we can figure out what to do with you next.\"\n\nYou know, if I had been paranoid, I would have been right \u2013 people are plotting against me. Cassandra stood up and stepped onto the bench so that I was once more facing her puffy, somewhat abused pussy lips before she swung one leg over me and exited the tub. I closed my eyes and let my head hang over the side, facing up.\n\n\"Towel boy,\" Cassandra taunted me. I looked at her. Cassandra was dripping wet and she was extending a towel my way. I pulled my own tired butt out of the Jacuzzi and tenderly buffed her excellent body until she was dry. She gave me one last kiss, dressed, and virtually skipped out of my domain, happy, arrogant and plotting my demise.\n\nI cleaned up, dealt with the Jacuzzi, and took in my surroundings. The only witnesses to my congress and conversation with Cassandra were Dana Gorman and Hudson Lane, my voyeuristic adult female 'friends'.\n\nDana pulled me over as I walked passed her. Hudson Lane had gone off to get some drinks.\n\n\"You and Gabrielle...?\"\n\n\"You have no respect for my survival instincts, do you?\" I chuckled.\n\n\"Not really,\" Dana smirked.\n\n\"Fine,\" I groaned in feigned annoyance. \"She wanted to talk so we talked \u2013 nothing else happened.\"\n\n\"She beat you up, didn't she?\" Gorman persisted. \n\nAnother deep sigh on my part came out before I confessed, \"Yes. Why do you ask?\"\n\n\"I wanted to smack you around from the first day I met you,\" Dana laughed. \"I think Ms. Black has done admirably not beating you black and blue before now.\"\n\n\"Has yet another girl beaten Zane up?\" Hudson angled around to sit next to Dana. \"The consistency of the femdom attitudes at this school is frightening.\"\n\n\"Don't throw stones, Ms. Lane,\" Dana warned her. \"You, Zane, and Ms. Messier, the lawyer Ms. Buchanan hired to help Zane when he went to jail \u2013 I was head of security when it happened and I know when Ms. Messier arrived on campus, where she stayed, and when she, and you, left this dorm.\"\n\n\"You never said anything to Chancellor Bass?\" Hudson worried.\n\n\"No,\" Dana responded. \"You three are adults, and ruining your career here wouldn't have made expelling Zane any easier. I wasn't the sex police.\"\n\n\"Thank you,\" Hudson smiled. \"I now have another reason to be happy Zane championed your cause with the Board of Directors.\" She touched Dana on her thigh.\n\n\"It's not going to happen, Lane,\" Dana informed the lawyer while opening her V-8. \"I've had a long time to figure out that I'm not attracted to women.\" Wow, Dana knew that Hudson was bi-sexual and didn't care. That was another big plus for Dana in my book.\n\n\"That's what Brigitte Messier thought as well,\" Hudson winked. \"It turns out a little bit of Zane goes a long way to loosening up a girl's morals and expanding their horizons.\"\n\n\"I repeat, it is not going to happen,\" Dana shook her head. \"Zane's a student and I'm a teacher. Perhaps the day he graduates, I'll kidnap him for a long, frustration-relieving weekend. I haven't had sex in eight years and watching him work really stresses my resolve.\" \n\n\"You could always join me in the hot tub,\" I offered. I wasn't sure how serious I was. I also wasn't sure how bad a concussion Cassandra had given me.\n\n\"Zane, do you have any idea of what I would do to you if I focused all my pent up sexual fury onto that body of yours?\" Dana threatened. I gulped.\n\n\"Does it start with me tying you down?\" I suggested sweetly. Hudson was looking really intrigued by this. I was beginning to believe she had this erotic attraction to 'turning' straight girls, most likely mirroring her own Law School experiences.\n\n\"What do you think?\" she glared. Dana was becoming seriously aroused.\n\n\"I guess my only other question is if I can outrun you,\" I joked. Dana kept staring.\n\n\"Zane,\" Hudson snickered, \"do you realize that your swimsuit is basically transparent when wet?\"\n\n\"No...I didn't,\" I gulped once more.  My package was less than a foot from Dana's lips. \"Sorry, I'll be going to bed now,\" I backed up.\n\n\"That's a really nice ass,\" Dana sighed as I turned away.\n\n\"It is even nicer to touch,\" Hudson commented.\n\n\"It's not happening, Lane,\" Dana grumbled.\n\n\"Oh, you will come around,\" Hudson Lane laughed softly. \"I have faith in Zane.\" Dana growled in rebuttal.\n\nWhen I rounded the first cut-back leading to my bedroom, I heard and smelled sex \u2013 suddenly, sneaking off to Gabrielle Black's place and hiding out for the night sounded like a good idea...barring her killing me, of course. I sorted out the noises as I moved around until the room came into full view.\n\nReminder number one: Check the God Damn air filters!\n\nWhere the fuck do I begin?\n\nOn the far side of the bed, Mercy was on her knees, head down on a pillow with her painfully ecstatic face looking toward me. That was how I could tell she had been gagged. Her wrists were handcuffed behind her back, she was moaning and sweating up a storm, and her whole aura emanated with tantric excitement.\n\nIn case you might be wondering where her Mistress was: Rio was straddling Mercy's back, butt resting on Mercy's neck (by the tension in her thighs, Rio wasn't pressing down hard thankfully) and facing her playmate's highly vulnerable posterior.\n\n\"Hold out a little longer, my slut,\" Rio egged Mercy on quietly as she paddled those beautiful exposed ass cheeks, apparently in a random fashion.\n\nAnd now it gets weird(er): Behind Mercy, facing Rio, wielding a strap-on with firm, slow, and steady strokes, was Paige. For the love of the Almighty, should I be quarantined as an immorality contagion? It wasn't like Paige was an angel but she was taking a few giant steps to proficiently wielding an artificial cock into a bound girl's bunghole. The fact that Rio and Paige despised each other continued warping my perception of events.\n\nBarbie Lynn (farthest away in the closest group), Vivian, and Valarie were on the near side of the sheets. They weren't actually having sex but were talking in low voices with the occasional running of a hand through a companion's hair or tracing a finger from hip to thigh. It was sensual without being pornographic. It also appeared to be something they all three were enjoying.\n\nIn the middle section of my sleeping platform (it is an awesomely big bed) was Iona and Hope, who were doing a little more than cuddling together in quiet conversation. Hope stroked Iona's head compassionately as Iona gently teased and suckled on Hope's left breast. Every ounce of my experience cried out to me that Iona had initiated the sexual contact. That boggled the mind, right up there with Hope allowing a near stranger such intimate contact.\n\n\"Hey, Lover,\" Barbie Lynn gifted me with a sultry leer, \"are you going to take that off or are you going to allow him to bust out on his own?\" Bathing suit \u2013 penis \u2013 raging erection; got it. I yanked off my speedo fast enough to make my skin burn. I wrapped it up in a towel before tossing them in the clothes hamper. \n\nI quickly plotted out my journey, figuring out where I was supposed to end up. I was giving up the illusion that I controlled events because if I was created in God's image and that was the reason God wanted men to rule over women, then I think God was really Goddess and Heaven's soul had it right \u2013 change sides.\n\nValarie gave me a fearless grin as I climbed over her on my way to the middle. She shifted so that her breasts swayed from side to side. I took in the view before kissing her and moving on.\n\n\"Try to settle things down by eleven, Zane,\" Vivian requested. I nodded and then kissed the tip of her nose, which she returned by kissing my forehead. It was very motherly of her, barring the fact that the sheets barely covered her pubic region and every exposed bit of her looked scrumptious. \n\nMy last hurdle was Barbie Lynn, and that was an obstacle in more than just the physical sense. She knew how to stretch and yawn just right for making my blood boil with lust and my vision cloud with desire.\n\n\"You will come back to me, Zane,\" she said with brazen tenderness. \"Now go on and take care of the others who need you now.\" Best Blonde Bombshell ever.\n\nAs I settled behind Hope who was still facing Iona, I took it slow to let her instincts understand that I wasn't a threat but desirous of her.\n\n\"What's going on here?\" I inquired delicately. \"Hope, I didn't think you liked Iona all that much? And Iona, you have become much more confident in the past month; I like it.\"\n\n\"Zane, Iona is one of the bravest freshmen I've ever met. She's never backed down from a challenge and is smart enough to fight the battles she can win and send others to win the one's she can't,\" Hope explained. \"I have admired her for some time.\"\n\n\"I know you wanted Hope to be put at ease,\" Iona related. \"She's surrounded by people she has minimal familiarity with. I reasoned that I could help her adjust by doing what you do.\"\n\n\"Sexy, clever, lethal girls; this is definitely going on my Santa Wish List,\" I grinned. I was trying to settle in behind Hope when she wiggled around onto her back and indicated she wanted me to move between her and Iona. I was hardly in the mood to refuse and soon, both ladies were nestled in my arms. I was thinking about the next step when the situation around Mercy increased in energy and volume.",
        "Hope pushed halfway over my chest and Iona turned away from me so they could watch the proceedings. Mercy was shivering like a leaf in a thunderstorm. Rio moved up so that her face was inches away from Paige's. I could see Paige contemplating her next action before she leaned into Rio. They each placed a hand behind the other's head to keep them close as they kissed.\n\n\"You smart-ass hooker,\" Rio snickered. \"What flavor is that?\" Mercy was cresting toward her orgasm unattended while Rio made small talk with Paige.\n\n\"Mango \u2013 lip balm and mouth wash,\" Paige beamed triumphantly. Rio snorted.\n\n\"Really start hammering the bitch,\" Rio ordered/requested. Paige nodded. She slowly drew back until only the tip of the fake phallus remained in Mercy's rectum before savagely slamming it all the way in as hard as she could.\n\nMercy squealed through her gag and began to violently spasm. Rio dismounted Mercy and flopped beside her partner's head.\n\n\"Don't you dare lose it, Cum-Bunny,\" Rio pressed Mercy. \"Disappoint me and you will get nothing until the weekend. I won't let you touch anyone, even yourself. Are we clear?\"\n\nMercy sobbed and nodded while her body teetered on the precipice of total collapse. Paige was displeased with Mercy's resistance and began spanking her thighs and buttocks hard enough to leave imprints. Rio kept stroking Mercy's hair and urging her to hang on. At the pinnacle of the moment I knew Mercy could not go on, Rio spoke softly into her ear.\n\n\"You annoying whore,\" she said, \"I am so proud to be with you. Don't ever leave \u2013 now cum.\" Mercy's resulting climax was so powerful that her muscle spasms knocked Paige back on her heels knocking the strap-on mostly out of her ass. Mercy squirted, really squirted, onto Paige's lap, with even more juice shooting and coating Mercy's thighs and my sheets.\n\n\n\nUp front, Mercy was cursing up a storm through her gag, grinding the fabric between her teeth with tears streaming out of her clenched eyes. Before her thrashing subsided, Rio had pulled the gag off and was kissing her fiercely on the lips, again and again. Mercy curled into a ball and Rio immediately wrapped her arms and legs around her Sub, keeping her presence light but comforting.\n\nRio saw our attention being directed their way and mouthed: 'Best Bitch Ever!' using her eyes to exaggerate the force of the words. Paige was still looking over the sticky mess that she had become.\n\n\"Put the contraption to soak in the big sink and take a shower,\" I suggested. Paige could see no flaw in my suggestion so she gave me a wink, unstrapped the device, and made her way out of the room.\n\nWhen my eyes snapped back from watching a naked Paige exit, I saw that Hope's focus was on me.\n\n\"That looked fun,\" Hope stated clinically. \"It is not for me but it definitely looked like they all felt...cleaner in a spiritual sense when they were done. I would never have suspected. In fact, I thought being bound was debasing and weak.\"\n\n\"It is called bondage and it is part of a sexual practice called BDSM \u2013 bondage, discipline, sadomasochism,\" I explained. \"It definitely isn't for everyone, and certainly isn't as bizarre as Iona's furry fetish.\"\n\n\"Zane,\" Hope glared, \"I saw a CSI episode on furries and you can't be an Asian or Asian-American high school girl in the United States and not know about cosplay; Iona and I are not into either one of those lifestyles I'm pretty sure.\"\n\nWhile Hope was distracting me with her knowledge of other sexual subcultures, Iona snuck a hand beneath me and pinched my right butt cheek.\n\n\"Ow,\" I jumped. \"What was that for, Beautiful?\" I pleaded to Iona.\n\n\"I wanted to?\" she responded meekly.\n\n\"That sounds like a perfectly good reason to me,\" I smiled. I would be somewhat offended if it was someone else but Iona was special; like Rio, she would always have my back, but unlike my chaotic fiend, she never abused my trust (or so I thought).\n\n\"Do me a favor?\" Iona requested.\n\n\"Sure, anything for you,\" I answered right off the bat.\n\n\"Make her happy,\" Iona's eyes sparkled as the flickered to Hope. \"Tickle my ear when you finish.\"\n\n\"Sure,\" I sighed with feigned regret, \"if I have to.\"\n\n\"Thank you, Iona,\" Hope snorted in amusement, \"I've got it from here.\"\n\n\"Nite-nite,\" Iona yawned, then rolled over and pretended to drop off to sleep. Like that was going to happen anytime soon!\n\n\"What no- \u2013 \" Hope got out before I rolled on top of her. I used one leg to wedge hers open, then settled between them as I lowered my body down. Hope looked at me quizzically.\n\n\"Touch me wherever you like,\" I instructed. I showed her what I meant by kissing her cheek, then edging around to suck on her earlobe.\n\nHope led off with her fingertips running along the muscles of my forearms and following a twisted trail up to my shoulders. With equal care, she began rubbing her toes along my calves, up to my knees and lower thighs. This had the added benefit of rotating her hips so that her pubic hair scratched along the veins of the base of my cock.\n\n\"You know this is going to make field work with you far more difficult,\" Hope murmured. \n\n\"Now you know what I've been going through for a month,\" I teased her back. \"Now you know how I feel naked under your touch and so do I.\"\n\n\"You touch yourself much?\" Hope giggled. Iona did her best to smother her own mirthful reaction.\n\n\"Maybe you should come to my bed more often to keep my hands otherwise occupied,\" I suggested. Hope arched her back, thrusting her breasts into my chest and laughed lyrically.\n\n\"Touch\u00e9,\" Hope conceded. \"I wondered if I was imposing on your hospitality, wanting to spend tonight with you. Now I'm feeling as if I've been lured in and seduced by your masculine wiles.\"\n\n\"Zane...manipulating somebody!\" Valarie gave a comedic gasp. \"Well, there is always a first time for our ham-handed Lothario to launch a plot that doesn't involve him getting an extra fish stick for dinner.\"\n\n\"Ham-handed,\" Barbie Lynn mused. \"His fingers are smoking but hardly ham-like,\" which she emphasized by rubbing her hand over her crotch.\n\n\"Do you often stick smoked country ham between your thighs, Barbie-Baby?\" Valarie taunted.\n\n\"Only when your magic tongue and fingers aren't available,\" Barbie Lynn volleyed right back.\n\n\"Oh, you did not say that!\" Valarie choked. She vaulted on top of Barbie Lynn and the two started wrestling. Vivian scooted toward the edge and fended off the combatants from rolling over her.\n\n\"When we graduate and drag you back to our dungeon to live, are you going to miss other bed partners having these mid-coital conversations?\" Hope smirked.\n\n\"You underestimate your ability to focus my attention,\" I countered. When you are in bed with someone, you are in bed with THAT person, or so I believe. Hope's look sizzled, her body heated up, and she pulled me so close and tight, I couldn't make out any details beyond her eyes.\n\n\"I hate them,\" Hope purred.\n\n\"Who?\" I worried. You don't want one good friend to hate another good friend. You really don't want a good friend with marksmanship skills out the ass not liking someone you have become attached to.\n\n\"Christina and Heaven,\" she sighed, but I knew she wasn't serious. \"Christina because you would rather be with her and Heaven because she has you.\"\n\n\"Hope,\" I maneuvered so I could stroke her cheek, \"I can't promise you or anyone else anything beyond this school year. Neither one of us qualifies as 'normal' by any definition of the word. I certainly like being with you, if that matters...and not just in bed. You are beautiful, intense, and serious in a way we shouldn't be.\"\n\n\"Serious is not the most intimate of descriptions,\" Hope joked, \"but I think I know what you mean. As chaotic as your life is, I think we balance each other out.\" I didn't need words to agree with that; I let us return to our game of touch, kiss, and lick.  We were getting back into a playful tempo when the fight between Valarie and Barbie Lynn ended.\n\nThere was no hot, spontaneous lesbian eruption; it devolved into Valarie having Barbie Lynn pinned with her wrists on the pillow held over her head. Valarie was trying to administer a 'Wet Willy' (sticking a finger, or tongue, into your opponent's ear) and finally succeeding.\n\n\"I give \u2013 I give,\" squealed Barbie Lynn. \"Anything, just stop.\"\n\n\"Anything?\" Valarie prodded suggestively. Barbie Lynn's very ample bosom heaved with each deep breath she took, which had the effect of rubbing them in circles against Valarie's dangling breasts.\n\n\"Come with me to the Southwest this summer,\" Valarie demanded. Barbie Lynn was still giving it serious thought when Paige came traipsing back in, drying her hair.\n\n\"Where in the Southwest?\" Paige inquired. Valarie sat up on Barbie Lynn and looked over her shoulder at the albino lass.\n\n\"West of Laredo, East of the Pacific, South of Denver and North of Mexico,\" Valarie answered. \"Sant\u00e9 Fe, Vegas, the Painted Desert...places like that.\" I didn't see coming what happened next.\n\n\"Valarie, would you consider allowing to me come along?\" Paige asked politely.\n\n\"You really want to impress Zane that much?\" Valarie divined Paige's intention.\n\n\"That, and he's most likely going with Rio as well,\" Paige responded, \"so you are going to need all the help you can get.\" Rio didn't respond verbally \u2013 Mercy was still recovering \u2013 but glared with venom.\n\n\"What do you add to our little expedition?\" Valarie asked.\n\n\"I'll do it,\" Barbie Lynn interjected. \"I wasn't sure what I was going to do after graduation but seeing more of the world will do me good \u2013 and I hear it is cold in the desserts at night and I don't want Zane to catch a chill,\" she adds with a smile.\n\n\"I speak Spanish, plus a strong understanding of electronics, botany, and computers,\" Paige continued with a twinge of annoyance toward Barbie.\n\n\"Fine \u2013 both are in. We are getting our rides tomorrow afternoon at five,\" Valarie announced.\n\n\"Zane,\" Hope whispered, \"I appreciate the silence of our first date now more than ever.\"\n\n\"We can go back to your place?\" I offered.\n\n\"Oh, Chastity would love that,\" Hope snickered playfully. \"I'm afraid if you don't ravish her in the next few weeks, she is going to rape Heaven.\"\n\n\"I'll keep that in mind, but right now I want to be where I am...with you,\" I kissed Hope's nose.\n\n\"Can I try something, Zane?\" Hope turned serious and introspective.\n\n\"Of course,\" I said.\n\n\"Paige, come over here with me,\" Barbie Lynn suggested. The blonde wiggled over so that Valarie fell to the far side and indicated that Paige should join her.\n\n\"You only want to sex up my body,\" Paige accused Barbie Lynn, as she hopped onto the foot of the bed and put her fists defiantly on her hips.\n\n\"But of course I do, Paige-shugah,\" Barbie Lynn licked her lips, \"now get over here and give me a taste.\"\n\n\"Oh. In that case...\" Paige scampered over and reclined next to the dynamite blonde. Barbie Lynn had a strong, subtly alluring persona while Paige was constantly aggressive.\n\n\"A naked Paige Zeller sexual molesting an equally naked Barbie Lynn Masters will go down as yet another thing I never thought I'd see,\" Hope mused.\n\n\"Be careful who you think is molesting who,\" I cautioned Hope. A few seconds later Paige shook and fluttered. Barbie Lynn had slid a stealthy hand between Paige's thighs.\n\n\"Ooohhh...someone's been a bad little kitty,\" Barbie Lynn cooed, \"A bad, soaking wet little kitty.\" Paige hiccupped, then shuddered again. \"Does kitty need to be petted,\" Barbie asked as she stroked Paige's love box, \"or does kitty need to be spanked?\" And Barbie Lynn spanked Paige's cunt lightly, making Paige jerk.\n\n\"Master, I stand corrected,\" Hope nodded her head to me in respect of my sexual insight.\n\n\"You wanted to do something?\" I brought Hope back on track.\n\n\"Yes, Zane, yes I did,\" Hope smiled. \"Please lie on your back and close your eyes.\" It was my turn to nod as I complied with her wishes. She settled her haunches on my crotch and waited a moment.\n\nFirst was a kiss, followed in slow progression by a finger, nose, earlobe, toe, two fingers coated in her juices, two fingers coated in Paige's juices, a nipple (most likely the right), her other nipple coated in Barbie Lynn's juices, Valarie's tongue (given away by the movement toward me), Hope's tongue, her other big toe, and ending with her lips and tongue. The anticipation of what was coming next was fun. As Hope reclined on top of me, Mercy finally began to stir. \n\n\"Were you a good little tramp tonight?\" Rio panted hungrily at her partner.\n\n\"Yes...I \u2013 was I?\" Mercy rasped. She was fighting to stay awake, her fatigue a heavy burden to bear.\n\n\"The Slut will say 'Yes Mistress; yes I was allowed to be good tonight',\" Rio nuzzled Mercy's neck, ear, and jaw.\n\n\"Yes, Mistress,\" Mercy purred. \"My wonderfully annoying Mistress allowed me to be good tonight.\" Rio spanked Mercy's burning hot butt flank hard. Mercy flinched and cried out in pain.\n\n\"Did I tell you to adlib, you annoying, frustrating skank,\" Rio taunted her, \"or is my whore clever enough to sneak in an undeserved spanking?\"\n\nMercy buried her face in a pillow but I could swear she was smiling.\n\n\"Nipple clamps for you in the morning, and I'm getting those bitches pierced on Saturday, got it?\" Rio clarified the point by rolling each nipple between her forefinger and thumb. Mercy nodded but kept her face in the pillow. \"Fine, let's get underneath the covers. Snuggle up with me to keep me warm, and you had better suckle my nipples.\n\nRio took up her normal sleeping area, avoiding the wet spot, with Mercy at her side, her tongue playing with Rio's left nipple.\n\n\"Mercy,\" Rio whispered. Mercy kept tongue-flicking the nipple but looked up.\n\n\"You rock,\" Rio said even softer. Mercy pulled more of her weary body over Rio as the nipple play continued and Rio began stroking her paramour's hair lovingly. In that relationship, it was getting harder to determine who the 'better' half was.\n\nI searched around blindly for some lube, which had 'mystically' migrated under Barbie Lynn's pillow. \n\n\"Hope, put some oil on my cock and on your ass cleft,\" I told my Korean princess. She barely broke her iron mask of indifference before taking the bottle and doing as directed. I caught sight of Valarie, Vivian, and Barbie Lynn all peeking my way.\n\nI imagined it was the curiosity about my apparent decision to 'break' Hope in anally.\n\n\"Hope, point my cock up and mount it,\" I directed. In theme with the game the two of us played, Hope took my commands without question, even to the point where her virginity was in question. \n\n\"Push it back,\" I stopped Hope's decent as it contacted her rather moist slit. She pushed back a little. Being a virgin, she probably wasn't sure where in the vagina a penis should penetrate. \"Farther back,\" I insisted, then again, \"no, still farther.\" I felt my rod separate her ass cheeks as Hope slid on down. Only when her now soaking mound settled on my pubic bone did she figure out the game.\n\n\"Ah, that's cold,\" Valarie whispered to Vivian and Barbie Lynn.\n\n\"No butt sex for Hope tonight,\" lamented Barbie Lynn. My precious blonde really loved anal sex. I put my hands on Hope's hips to support her.\n\n\"Now ride me, Hope,\" I smiled. \"Give me everything you've got.\"\n\nHope started out slow, working out a rhythm that pushed my shaft and cockhead as deep along her ass crack as possible. She even stopped for a moment and applied more lube. Soon she was thrusting hard back and up quickly, then allowing a long, leisurely ride back to my crotch. She bounced down on me again and again, her resounding impact on my crotch becoming a wetter, smacking sound.\n\nHope was powerful, vibrant, and strong; she needed little of the guidance provided by my hands on her hips. I decided to move my right hand to her finely groomed pubic hair, then to her soft pubic flesh itself. I alternated between splitting her lips open and massaging her clit. With my left hand, I coaxed stimulation from her right areola and nipple.\n\nThis time, instead of scarring me, Hope wrapped her fingers in her hair. She gave a few desperate convulsions, then her whole body tensed backwards.\n\n\"Zane!!!!! Oh, fuck!\" she screamed. Her ass cheeks tried to squeeze my cock in a steel-tight vise but fortunately, the lube caused it to pop free before those buns of steel could turn my man-meat into ground beef (sometimes I visualize too graphically). \n\n\"I wouldn't believe it if I wasn't seeing it with my own eyes,\" Vivian sighed. \"A girl comes to a boy's room, both naked, and bad thing are supposed to happen \u2013 it is a moral weakness. How can either one expect to be constrained? Unless the boy is Zane, then it is all happy fun time. How did he not have sex with Hope right now?\"\n\n\"Sex isn't evil,\" Barbie Lynn yawned. \"We are not committing a sin and we are not weak.\"\n\n\"Amen to that,\" Valarie muttered, fighting off her own yawn. Vivian nodded and curled up with Valarie. How that couple came about, I don't know.\n\n\"Zane,\" Hope asked as she slumped gently onto my chest, \"what is actual sex with you going to be like? Is it going to kill me?\"\n\n\"Oh, God, I hope not,\" I exaggerated. \"It is going to be hard enough explaining to your dad how we are sharing a mutual learning experience. Telling him you died happily in my arms will not save my life.\"\n\n\"I understand,\" Hope purred. \"We fuck each other to death \u2013 problem solved.\"\n\n\"Yeah,\" I groaned, \"that's exactly what I was about to say.\" Hope laughed wearily. \n\n\"Does this mean we can have him now?\" Paige whispered to Barbie Lynn. Apparently, I had a heart attack or stroke because I dropped off to sleep before I could make a retort."
    ],
    "authorname": "FinalStand",
    "tags": [
        "college",
        "humor",
        "lesbian",
        "strap-on",
        "bdsm",
        "teasing",
        "interracial",
        "cunnilingus",
        "hot tub",
        "fff"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/christian-college-sex-comedy-ch-30"
}