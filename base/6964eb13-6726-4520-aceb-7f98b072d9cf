{
    "title": "Debauchery Pt. 02",
    "pages": [
        "In this latest instalment, we return to Angela Carmen Bradley and explore her high dive into a crazy world of swingers and sex clubs. Just how widespread were her parents' influence?\n\nIn Part One, we explored \"How would you react to finding out your loving parents were, in fact, hardcore swinging bisexual creatures?\" In this part, we start to peel back the layers of debauchery surrounding poor Angela. A woman, grieving her parents, and spinning out of control in a world she is not prepared for.\n\nThere are going to be a LOT of people coming in and out of this tale. For the first time, I am providing \"The Cast\" so you can keep track. It's at the end of the chapter. Which is a terrible place for it.\n\nWarning: This story is hedonistic and is free in exploring the wonder of heterosexual, bi-sexual, and homosexual relationships. There is a little implied incest, as well. If any of that offends you, please close the story and move on. This story is not for you.\n\nPlease enjoy.\n\nLove,\n\nLana Ocean (Estcher)\n\nP.S.: This is a work of fiction. Names, characters, places, and incidents are the product of the author's imagination or are used fictitiously, and any resemblance to actual persons, living or dead, business establishments, events, or locales is entirely coincidental. All fictional characters engaged in sexual acts are eighteen or over.\n\nP.P.S. As always, I welcome CONSTRUCTIVE criticism. And that doesn't mean trying to school me on my use of the English language. I'm proud of my half-assed editing on Literotica. This is fun shit, not work. I tidy things up as best as I feel I should and then publish it here. All for free. You're welcome.\n\nRecap of Part One\n\nAngela Carmen Bradley, a young, single, twenty-two-year-old woman, loses her fabulously wealthy parents to a terrible car crash. Lost in her grief, she commences going through her parent's belongings only to discover her parents were hardcore swingers and video-taped everything they did.\n\nShe then discovers her parents also ran a swinger's club in Virginia Beach. She visits and confronts the man still running the club; a friend of her parents she recognises from the videos named Derek. During the encounter, the man suddenly dies of a massive heart-attack. Angela contacts her lawyer friends, Willy, and Marcia, and commence investigating just what her parents had been up to all these years. It appears Angela may now own swinging clubs all over the world.\n\nWe start where we left off: Angela is just leaving her new lawyers' condo and heading home...\n\nPart Two -- Doors Open\n\nI returned to my car more than a little flustered. My pussy was very sore after two days of having unimaginable sex with Willy and Marcia. I didn't know what to think about it. I had never thought of having sex with more than one person. After days of watching mom and dad do it on the videos, it seemed a rather small step for me. I can't explain it any other way. At times, I imagined I was my mother and was soon lost in the sensations. Threesomes can be hard, especially when you don't want contact with the other woman if you're in an FFM. Marcia was understanding and patient with me. I could tell she wanted more. To partake in me. She said as much. Pleading with me to touch her. I couldn't and apologised over and over again.\n\nShe touched me a little. She found sneaky ways to do it and I admit it thrilled me. Her touch was so much softer and perfect than a man's. At first, she brushed up against the side of my boobs. That made my nipples so very hard. Willy noticed and commented. I denied it of course, saying it was his mouth on them. It wasn't and I think Marcia knew. She would help Willy line up his cock to my entrance. Her hands would slip and brush my labia in delightful ways. She made me so very wet.\n\nOnce she kissed Willy while I was kissing him. Her lips brushed the corner of my mouth and I barely stopped myself from turning my head the little bit it would require to taste her mouth. Her hands caressed my ass a bunch of times, spreading my cheeks for Willy. I found myself waiting for those brief touches and they turned me on immensely.\n\nAnother time Willy put his cock in my mouth, fresh from inside Marcia, and the taste of her pussy combined with his cock almost converted me. It was my first taste of pussy and I drooled uncontrollably. I had to hold myself back from gobbling and licking his cock all over.\n\nI'm not a lesbian. I'm pretty certain of that. Truly, I'm not interested. But in the middle of a threesome with Marcia, in all her glory, tempted me sorely. She's truly a beautiful woman; but she complained about her small breasts--which they weren't--about her ass being too big--it wasn't--and about how she wanted two mouths on her pussy--I couldn't do that. Unfortunately--or fortunately--I found being in bed with two people to be a massive turn on. Being inches away from a cock penetrating another woman is surreal. There's watching porn and then there's watching it live right in front of you. I had never been so turned on in my life. Its glorious to watch. Thrilling. Exciting. The smells and tastes are remarkable, and tantalising, and it made me so very horny. We never needed lubrication once. Marcia was dripping. So was I, which Willy loved and lapped at me constantly claiming I was still the best tasting pussy he had ever tasted. That pleased me to a level that startled me. I even gloated with Marcia which she laughed off. Willy unloaded his cum on us six times over the two days, each of his orgasms received with squeals of laughter and joy. Marcia said she wanted to eat his cum from my pussy. And again, I had to draw the line. But God, I wanted it, too.\n\nI was the party pooper. There was no doubt, but Marcia and Willy were completely understanding. It was too soon for me and too much change. Images of Derek would pop up at odd times and ruin my mood. His unseeing eyes were horrific and burned into my memory. I wondered if I could have prevented it had I known he had heart problems. The paramedic said he died almost immediately and likely felt little pain. The stroke had hit his brain hard. For me, it didn't seem right that someone could be alive and speaking one minute and gone the next. It seemed too fragile to me, especially at age twenty-two.\n\nI staggered out of Willy's condo, as I said, and returned to the street level to my car; a sweet, red-coloured Audi A5 Cabriolet with a rag top. My father had gifted the car to me last year when I turned twenty-one and I adored it. Mom had said it suited me perfectly and I loved the feeling of the openness and feeling of wind in my hair. Driving the streets of Virginia Beach in that car turned heads. I loved the attention.\n\nFor now, I sat in the driver's seat and winced and adjusted my panties. My pussy was raw. I don't think I had ever been fucked so much in my life. Even when Willy and I had dated years before. His skill had increased to the point where he was giving me orgasm after orgasm. Marcia had taken credit and Willy had grunted agreement. All it takes for a man to become an amazing lover is a lover who has the patience to teach and encourage. Willy had become masterful in my books and my toes were almost constantly curled in rapture.\n\nI thought back to a moment where we were all cuddling together in his bed. We had whispered together, knowing full well that Marcia was pretending to doze and listening in.\n\n\"I missed you, Willy,\" I murmured into his neck. I was lying half on him, my right leg thrown over his legs and my pussy pressed up against his thigh. My breasts were crushed against him, and I held him close with my right arm. He lay on his back and Marcia was spread eagle on the other side of him, her pussy open and gaping to the world without an ounce of decency. Her feet were tangled in the sheet, and her small breasts stood up proudly on her chest. The air reeked of cum, and pussy, and I adored it. I was satiated.\n\n\"I missed you too, Angie. It's been a year; I think since you dumped me.\"\n\n\"I didn't dump you. Don't make me sound like the bad guy. We broke up. It was mutual.\"\n\nI was answered by silence. I raised my head and peered over at him. His eyes tracked me, but he said nothing.\n\n\"It was, wasn't it?\" I asked, keeping my voice quiet.\n\nWilly shook his head and Marcia snorted. Willy glanced at her and smiled. \"No. You broke my heart, Angie. Then I found Marcia. Right there in front of me at the firm. I was never going to make a move. Not with a full partner in the firm. This was before dad's health turned for the worst. We could all see the signs, but Marcia was there for me. Helped me. And in time, we fell in love like it was the most natural thing in the world...\"\n\nI said nothing and put my face back into the crook of his neck. I could taste the salt of his manly sweat and felt my pussy tighten in response. Willy was a keeper, I knew that, but at the time I knew I couldn't tie myself down to a man so much older than me. I had left him and fooled myself into thinking it had been the right adult thing to do. I had broken his heart and that was on me.\n\nThen again, I had just let him cum inside me for the third time less than an hour ago and his cum was still leaking out of my pussy and onto his thigh. Unconsciously, I pressed my pussy against his thigh and rubbed it a little. When I realised what I had done I calmed myself for the thousandth time. Where was this new side of me coming from? A sudden image of parents having group sex cropped up and I pushed it mentally away.\n\n\"I'm sorry, Willy. I wasn't ready for anything more. I don't think I wanted it. Or needed it. I hope you can understand?\"\n\nI felt Willy nod his head. \"I do. Marcia helped me see that. And anyway, Marcia is the best thing that ever happened to me. First there was you. This over-the-top gorgeous blond. Porn star material, you know? Every boy's wet dream and I was yours. For a time. And that was all that mattered to me. I felt like I had won the lottery. With you by my side I could conquer the world. Then you left me. That shattered my ego, I think. I couldn't move past it. Marcia pulled me out of the funk. She's just as beautiful as you, inside and out. She doesn't see it and that makes me love her all the more. Does that make sense?\"\n\nI nodded into his neck feeling terrible inside and glad and jealous; all at the same time.\n\nWilly laughed a little remembering something. \"At first I was so worried about what the other people in the firm would think. I was so careful. Staying professional. Always speaking to her like a partner and not a lover. It was my dad who called us out. At a board meeting of all places. Remember Marcia?\" He paused and when she didn't answer, he continued. \"My dad had slammed his hand on the board table. It startled us all. Then he pointed a finger at me and said 'Would you just get it out already? Everyone knows you and Marcia have a thing going! Good for you both. Better than you moping about thinking about that blond girl you dated.' The room cheered and Marcia kissed me right then and there.\" Willy chuckled and Marcia did, too.\n\nI felt Willy move a little and looked over to see him caressing her right breast.\n\n\"I love you, Marcie,\" he said softly.\n\n\"Love you too,\" murmured Marcia.\n\nI lowered my face back where it was warm and smelled of man and felt a tear escape me. Willy was a remarkable man. One day I would find someone equally remarkable. One day.\n\nIn my car I adjusted my ass again. I had never been so sore. Marcia had insisted I apply a little coconut oil to my vagina, and I had with no other options. It helped but I knew I needed a long soak in a tub eventually. I sighed and turned over the ignition and put the car into reverse. My phone rang. I put the car in park and fished out my cell phone.\n\n\"Hello?\" I answered.\n\n\"Miss, pardon the intrusion, this is Javier.\"\n\nJavier Taylor is the steward of Bradley Manor, my home. Steward was a term he preferred from his home country of England. It meant he played the key administrative role in the household and managed all the other staff. But it was much more than that. He ran everything. I had been in a daze the past months and had ignored all the staff. Javier had run everything in my mental absence. For the first time I wondered what he knew about my parent's lifestyle. Surely, he had to know and that alarmed me a little. I didn't truly know him well. I never interacted with the hired help. I was prissy and entitled and ignored servants thinking that was expected of me. I'm such a bitch, I thought.\n\n\"Hello, Javier. No intrusion. I was just about to head home.\"\n\n\"Perfect Miss Bradly, that is good to know. I was just about to suggest that. Please come straight home, there is a private matter you need to attend to, please.\" His British accent always stirred something in me, but this time his words alarmed me.\n\n\"What's that matter?\"\n\n\"Miss, please, I will explain once you are here. This is best not discussed on a phone.\"\n\nI hesitated. I thought of demanding he tell me, but my instincts told me to follow his advice. \"All right. I'll be home in thirty minutes. I'm on the other side of town and traffic will be terrible this time of day.\"\n\n\"Yes, miss. See you when you get home.\"\n\n<p align=\"center\">* * *</p>\n\nI drove through a large wrought iron gate and into the gated community the Bradley Manor was nestled in. I drove up the winding hill and passed the other massive mansions, each on huge plots of land. This was one of the more upper crust regions of the United States. At the top of the hill stood my parent's mansion and it stood out. I drove through my own massive gate, opening to my key card, and drove the long laneway to the entrance. Two men stood at the top of the wide steps leading up to the ornate double front doors watching me approach. One man was Javier, and the other was Charles Smith, the chauffeur.\n\nCharlie ran lightly down the steps as I pulled up and parked to open my car door and helped me exit my vehicle with a firm hand in mine.\n\n\"Welcome home, Miss Bradley,\" he said. Charlie was middle-aged white man and had a few grey hairs in all the dark brown. Mom had always said he looked distinguished. I thought so, too. Older men catch my attention for some reason.\n\nI left the keys in the ignition. Charlie would want to park it in the garage with the other cars. \"Thank you, Charlie.\" I walked past him and met Javier who had descended the stairs halfway. Javier was a stunning black man. He had a full beard, with his chin almost all grey and fading back to black as it rose up to his moustache. Grey hairs were scattered across his full head of hair, and as always, he was impeccably groomed and wore an exquisite suit from some haberdashery in London.\n\n\"Good to see you, Miss Bradley. Please follow me,\" he said and then turned and started back up the front stairs.\n\nHe opened the front doors for me, and I strode in and placed my handbag on the ornate table in the entranceway. I spied Hailey Rivera, the head housekeeper, disappear quickly from sight into the back rooms. Caterina Fletcher, who did laundry stood nearby with her husband, Michael Fletcher, the head groundskeeper. They both nodded and smiled pleasantly at me. Javier moved past me and led the way up the stairs to the second level and down the corridor to another set of stairs leading up. He was taking me to the wing that held mine and my parent's bedroom. The area of the house was almost separate from the rest of the home. A home within a home, my father had often said.\n\nJavier walked quickly past my room and headed straight to the master bedroom. I could see the doors were open and as soon as I entered, I stopped in shock.\n\nThe room was a mess. Everything had been pulled out of drawers and cupboards and strewn about the floor. In places the drywall had been broken open exposing wires and wood frames. I could hear water dripping heavy from inside the bathroom.\n\n\"Oh my God!\" I gasped and stood there stunned. \"What the fuck happened?\"\n\n\"Miss, someone broke in here last night and ransacked the place.\"\n\nI looked around, trying to absorb all the chaos, not believing the amount of carnage. I then had a thought and rushed into the en suite. Right away I could see the tapes were gone.\n\n\"They're gone, I'm afraid, miss,\" said Javier behind me.\n\nI whirled on him. \"What are gone? What do you know?\"\n\nI must have shouted because Javier winced.\n\n\"The tapes, miss. Gone. That's all that I could find missing. And, um, the thumb drives.\"\n\nI gawked at Javier. How could he know about the tapes and thumb drives? This makes no sense. Who would break in here for those tapes? \"Have you called the police?\"\n\nJavier's face softened. \"No, miss. I couldn't. I can't report those tapes being stolen. Do you know why?\"\n\nHe searched my face and then it dawned on me. Javier knew. Of course, he knew, I realised. He dealt with every little detail of my parent's life. He runs Bradley Manor. He has to know everything. I nodded finally, feeling heat rush to my cheeks, and he looked relieved.\n\n\"I'm sorry, miss. I was forbidden to disclose anything with you. Your parents were quite clear. I've obeyed even after their death not knowing if you should know. I knew you would find out eventually. It must be quite a shock.\"\n\nI nodded numbly and looked around the disaster surrounding me. I pressed my cold hands to my hot cheeks.\n\n\"It is only the thumb drives that worry me, miss. They contain data that is very sensitive. In the wrong hands they could mean disaster. Politically. Worldwide.\"\n\nI was barely listening to him. My head was spinning with thoughts and worries. I still didn't understand the scope of what had happened. Someone had broken into my house and tore apart my parents' bedroom and stole tapes containing videos of my parents doing unimaginable things? Who would do that? Then my brain caught up to what he had said.\n\n\"I have the thumb drives. In my room.\"\n\nJavier's face lit up. \"What? You do? Show me!\" he exclaimed.\n\nI led the way to my bedroom. It was in shambles, too, but not nearly as bad. Someone had gone through my belongings, but quickly, it seemed. Perhaps they couldn't imagine me having the smut my parents had owned.\n\nMy books were all pulled down from the bookcase and I was alarmed. I looked quickly through them and found my fake copy of the Lord of the Rings with relief. I opened it and saw all the thumb drives still there. I showed Javier and he looked very relieved.\n\n\"Thank God!\" he said, and his face broke into a wide grin. \"Miss, that's amazing that you hid them! Have you looked at them?\"\n\nI shook my head. \"No, the VHS and DVDs were enough. I'd seen enough of my parents doing...\" I trailed off not sure how to vocalise it.\n\nJavier closed the book in my hand. \"Miss, these are not videos of your parents. These are records. Evidence. They should be locked up in the office, but your mother had a nasty habit of taking them out of there. She hated the office and would often work on the drives in the bedroom. She loved that space and sat at the window overlooking the back garden. I checked the office and when the drives weren't there, I assumed the worst. This is fantastic!\"\n\nI was getting more and more confused, and Javier saw it on my face.\n\n\"Miss, there is so much to tell you and show you. Please. Do not think badly of your parents. They were good people. Very good people. I'll explain everything.\"\n\nI looked into his face, seeing a different man than the man I grew up knowing. \"How involved are you?\" I whispered.\n\nJavier winced a little. \"As deep as can be, miss. As deep as can be.\"\n\nI searched his face. He didn't look embarrassed. He only looked like a boy caught peeking into the girls' shower at school. \"And the rest of the staff?\"",
        "Javier looked sheepish. \"Every single member of the staff was hand selected by your mother, miss. She was very selective and chose only those people open to her lifestyle. They know everything. Mostly everything, that is. Not all. Enough.\"\n\nI filed that away. Knowing my mother, I should have known. She always surrounded herself with likeminded people. She was always very careful. Of course the staff were all in. It's only me, little miss Angela, that's left in the dark. Always the last to know.\n\n\"Miss, there is footage...\"\n\n\"Footage? What do you mean?\"\n\n\"Security footage. From your parent's bedroom. Elsewhere, too.\"\n\nI gawked at him. I had never seen a single camera in the house. \"How is that possible? There aren't any cameras...\" I looked around the room and stopped when he shook his head.\n\n\"No, miss. I'm afraid there are cameras everywhere in the house. Your mother and father insisted. They record everything in the house. They keep what they need. I... I can show you.\"\n\nEven I felt the anger coming off of me. \"Everywhere? In my room?\"\n\nJavier shook his head. \"No, miss. Everywhere but there. And your bathroom. Of course. Your parents respected your privacy.\"\n\nI glared at him. I needed to rip this band aid off. \"Show me. Now.\"\n\n<p align=\"center\">* * *</p>\n\nA short time later I sat beside Javier in a small office, even more stunned than before. Javier had returned me to the master bedroom. He had approached the wall of built-in bookcases and placed his ring--a ring I had always noticed but never looked at--against a plain section of the wooden shelving, and I heard a click and the whirr of a motor. A section of the bookcase swung open, and I gasped in shock.\n\nMy head was about to explode with all these reveals. I doubted my sanity and questioned my life. How could I have been such a na\u00efve girl living in this house my whole life and know nothing about any of this? I felt like I might start crying and never stop.\n\nJavier was explaining. \"When your parents renovated the house about twenty years ago, they included this safe room. There are two other safe rooms that I will show you later. This one also served as an office. It's windowless and why your mother never chose to work in here.\"\n\nWe entered a small corridor that turned to the right, and I could sense it followed the outside shape of the house. It opened into a small, functional, windowless room. Lights had come on automatically and I could see multiple dark monitors arrayed on the back wall. A large U-shaped desk sat in front of the monitors with three keyboards and mice. Cupboards covered the right wall along with two large racks of computers. I could see a wall safe embedded in the left wall.\n\nI placed the Lord of the Rings book on the desk.\n\nJavier sat in the centre one of the three luxurious leather chairs in front of the desk. First, he picked up a small jewellery case and handed it to me. I opened it and found two rings inside. They had been my parents. I took the smaller one and placed it on my right ring finger. It fit perfectly. The ring was plain gold except for the small, raised symbol that represented Bradley Manor. Then, Javier moved a mouse and the monitors glowed to life, pulling my attention. They filled with images from the hidden cameras. Twelve monitors covered twelve different views.\n\n\"That ring will let you in here. It's magnetic. A simple thing, but the strength is just right to open the secret door. Any stronger or weaker and nothing will happen. It doesn't always work so just give it a try again. Once inside you can lock the mechanism. This space is shielded and armoured. You could survive most anything in here. There's food and water in the cabinets and there's enough for three people to survive a week at least. There's also blankets, inflatable mattresses, and two pistols. Sig Sauers with four magazines each plus several boxes of ammunition. The weapons are registered and legal.\n\n\"Now. Just give me a moment and I'll bring up the footage that covers the intruders. There were two of them, dressed in black and wearing balaclavas. Common hoodlums, I think they were. Watch the monitors number one, three, five and six.\"\n\nI spotted the small white numbers on the bottom right of each monitor and found the monitors he wanted me to pay attention to. The screens froze for a moment, and I could see Javier doing something on the monitor that was embedded in the desk right in front of him. He was using some specialised software. I sat in the chair to his left. Guns? In my father's house? He hated guns...\n\n\"Ah-ha. Here we go. Watch.\" He clicked the mouse and the view on the monitors changed. \"The outside cameras have infrared. You'll see the bright shapes of the intruders on monitor three... ah... now!\"\n\nI watched as two bright man-shapes appeared over the estate wall. The walls were stone and mortar and dated back decades at least and were twenty feet tall. They swung over the wall and lowered themselves on ropes. You couldn't make out any features and I watched horrified as the intruders made their way from garden shrub to fountain to the side door of the house. It was the servant entrance between the servant house to the main house.\n\nOne of the men crouched by the door. The camera caught him from above his left shoulder. He picked the lock with ease.\n\nJavier spoke. \"I timed it. It only took him nine seconds to pick a lock an expert would take at least fifteen to do. These men are experts and then some. Highly trained. I would wager they practiced before coming here.\"\n\nWe followed the men through the house. I assumed they were men. They moved like men and had wide shoulders and narrow hips. They moved with grace and purpose.\n\nAs the camera angle and view changed, I realised I had no idea the whole house was monitored so precisely. My whole life had been exposed and I wondered just what my parents knew of my high jinks in the house as an incorrigible, wilful child. Javier explained it was all state-of-the-art fibre optic cameras which were almost impossible to detect; each camera was incredibly small, each with a wide-angle lens. The detail was spectacular and crisp and in high definition.\n\nThe men moved quickly through the house. They knew the layout and never hesitated.\n\nJavier continued his commentary. \"I would suspect they are from the Large Triangle Group, or the LTG. A worldwide cabal of criminals run out of China. Headed by an elusive individual named Gui Po. Your mother and father had run ins with them over the years. They crossed streams at times when your parents unknowingly pushed them out of lucrative swinging establishments and more importantly, stealing the clientele. That's where the real power is. While the LTG coerced and blackmailed, your parents provided a welcomed haven for those people needing the privacy.\"\n\nI could only watch the monitors and listen. My head spun. I wanted out. I wanted it over.\n\n\"Watch. They head into the master suite and start looking right away. Watch how methodical they are. I'll speed this up...\"\n\nThe images blurred and Javier stopped it when they reached the cache of tapes and DVDs.\n\n\"Here they find the tapes and yet remain calm. Professionals. I had assumed they found the thumb drives at this point. Their bodies cover their actions.\"\n\nThey placed the tapes into a strange sling across their backs. I could see it bulge with the tapes and DVDs. Then the men were searching the entire bathroom and en suite. The toilet back was removed. The tiles around the whirlpool tub were broken open, damaging a water line. Walls were tapped and then broken open in places. It went on for a long time.\n\nI saw the timer on the monitors. Two thirty-eight in the morning. I was getting fucked doggy style by Willy at that point twelve hours ago if I remembered correctly. I had woken to feeling him eating my pussy again. A smile teased my lips.\n\nThe men in the security monitors paused in the middle of the bedroom and spoke for the first time. Javier stopped the replay.\n\n\"I'll pause it here. They speak for a short time. Clearly, they have failed to discover the thumb drives. I was confused at first here but now knowing you had them hidden it becomes clearer. They didn't expect to not find what they wanted. Perhaps. From here they go to your room.\"\n\nI watched the men leave and then enter my bedroom from the corridor. Javier leaned back and I could see the timer on the screens continue to count the time elapsing.\n\n\"We can't see into your room, of course. In about fifteen minutes they leave and retrace their steps out of the house.\"\n\nWe continued to watch until the men climbed back over the wall. Javier clicked something and the monitors returned to real time. The sudden brightness of the screens caused me to blink. I could see the other servants working throughout the house. The Fletchers were kissing out in the tool shed, Mr. Fletcher was...\n\nI looked away. He was clearly fucking her up against the workbench. She looked delighted.\n\nJavier coughed and turned toward me by swivelling his seat.\n\n\"Miss Bradley...\"\n\n\"Angela. For God's sake, just call me Angela.\"\n\nJavier paused a long moment digesting this. \"I will... try. Angela. Please let me explain some things. This may be difficult to hear. Please wait until I am done before you make any rash decisions. Please.\"\n\nI glared at him. I was angry, confused, betrayed, hurt, and more than anything, pissed off. I nodded, uncertain of what my mouth might say that I would regret.\n\n\"I entered the employment of your parents six months after they were married. They were in England, and we crossed paths. They were looking for someone to run their expansive household and I was offered the position. They found me in their new brothel, located in London. I had just ejaculated in your mother's bottom, and she rather enjoyed it.\"\n\nHe stopped there and waited for my reaction. Honestly, I was numb at this point. He could tell me anything and I would just have to accept it.\n\n\"From there the household grew. Your mother was exceptional at finding the right people. People who love to serve and people who are so open-minded that the lifestyle here in the manor was everything they could ever hope for.\n\n\"Your mother and father created an oasis here. A tranquillity. A nirvana. This was copied at the other clubs, but it never came close to what is here. Every single person working here is a member of a special club. Not your parent's swinging clubs, but the Bradley Manor Club. We have all signed NDAs. The people who work here were considered family by your parents. Did you know that?\"\n\nI shook my head. I never had a clue. My childhood was a whirlwind of fun and excitement. The servants had always been there, and I had ignored them as only the vain and self-entitled can do. I remember my mother and father always encouraging me to engage with the staff and I had always refused. Petulantly. But what Javier was describing couldn't be real.\n\n\"Watch,\" he said and pointed to the camera feed that showed the Fletchers having sex.\n\nCaterina was fully naked and bent over the workbench. Her husband, Michael was thrusting away at her hard from behind. His hands gripping her waist and pulling her hard against him. On another camera feed I saw Charlie the chauffeur approach the work shed. A feeling of dread descended on me.\n\nCharlie opened the door and strolled inside and undid the belt of his pants. Unbelievably, Michael smiled at him when he walked in. Michael pulled out of his wife. I could see his large penis, wet and slick, hanging down hard in front of him. Michael and Charlie spoke.\n\n\"What are they saying?\" I whispered.\n\nJavier did something and sound came out of hidden speakers in the small office.\n\n\"Thank God, Charlie. I was about worn out! Take-over, will ya?\"\n\n\"Mikey, you got to start working out! Your stamina is the shits!\"\n\n\"Would you two stop arguing! Charlie fill my ass! It feels empty!\"\n\n\"Yes, ma'am!\"\n\nJavier turned down the sound. Charlie took his thick cock, abstractedly one that looked rather good to me, and thrust into Caterina. She took it like a trooper and threw her head back in bliss. I could see the delight on her face. Her husband moved around, and she repositioned herself and soon had her husband's cock deep in her mouth, sucking like a mad woman.\n\nShe was taking it from both ends. Mouth to ass. I shuddered. Not with horror, but with the thrill that went through me, surprising me in the intensity.\n\n\"Is this normal?\" I asked, waving my hand at the monitors.\n\n\"Yes, Angela, it is. All the staff have sexual relations. It is quite normal here. They've been hiding it for the last few months. Ever since your parents passed. They grieved so hard, Angela. We were not in a servant relationship here. We worked here, yes, but gladly. We all love maintaining this small piece of heaven. We are extremely well paid. We want for nothing. And we have such freedom here.\n\n\"Your parents dying almost destroyed this family. We watched you carefully. Afraid to make the wrong move. Say the wrong thing. Unknowing how to explain this to you. It was me that urged caution. I saw you find the tapes. Watched you lose your mind. But always you came back to them. You watched them. You... touched yourself...\"\n\nI gasped and glared at Javier. \"You watched me masturbate!!!\" I was furious.\n\n\"No. As soon as you would start, I would stop watching. I promise you. I promise on the memory of your parents, Angela. I never breached that privacy.\"\n\nI glared at him. \"But it was recorded?\"\n\n\"Yes and erased. I can show you.\"\n\nI nodded, feeling flushed. \"Later. Keep going. Explain all this.\" I wondered if Javier was being honest. Did he watch me pleasure myself? Did that excite me?\n\n\"I don't have to. Your mother planned for this. Sort of. She said one day 'what if we die one day, Albert, how do we explain all this to Angela?' Your dad said to make a video and explain it all. So your mother did. It's in the safe.\"\n\nJavier rose and went to the safe. \"I'll give you the combination, of course. This is all yours. The password to the computers is 'Ge0rgeBi2et' with a zero for the O and a two for the zee.\" He opened the safe and turned the handle but didn't open it. He sat back down, and I rose and opened it.\n\nInside were more thumb drives, a large sum of cash, thick, black ledgers, and a gift-wrapped small box addressed to me. I stared at the box.\n\n\"I'll show you where the thumb drive goes and then I'll leave.\"\n\nI nodded and reached in and pulled out the gift box. I placed it on the desk and Javier showed me the interface to the computers and where the USB slots were. He showed me the computer and how it worked and then he quietly left. I watched him leave on the monitors. He crossed the master bedroom and then down through the house. He left by the side door, and I saw him enter the servants' house. I noticed there were no feeds there, either.\n\nI sat staring at the gift box for a long time. I don't know for how long.\n\nFinally, I tore it open and found a 128GB thumb drive inside. It was state-of-the-art. The control screen flickered and switched to a wallpaper screensaver. My eyes were drawn to it. It was a picture of me, aged sixteen, wearing a white bikini by the pool. I remember that day. I was heading to GMU at the end of that summer. I had always been ahead of where I should be academically in school and starting university at sixteen was not something I ever questioned. That summer had been the most amazing of my life. Mom and dad had started treating me like an adult. Taking me with them to places. I saw more of the world that summer than any time before or since. We had never been closer. Then came school and my own life and time with my parents dwindled. I wanted that time back.\n\nI wiped at the tears, pooling in my eyes, and jammed the thumb drive into the welcoming slot. I had it backwards, reversed it, and it still didn't work. I cursed, reversed it again, and this time it sunk home.\n\nAll of the monitors in the room flickered and then all the screens filled, and composed in one big picture, was my mom smiling out at me.\n\n\"Hi Angel!\" she smiled out at me. Then her voice changed to a stage whisper. \"I think I'm dead!\"\n\nI gasped and then heard my dad's voice off camera. \"Jesus, Margie. Don't say that. You probably are dead if she's watching this! How do you think that will make her feel?\"\n\nMy mom faked a look of concern and then grinned out at me. \"Pfft. Us women are stronger than that, aren't we hon? I wish I could see you, too. I would love to see the looks on your face when I tell you what I am about to tell you. It's going to be huge. Mind blowing. But first a little secret.\n\n\"My mom and me are the same. We look the same. We act the same. We feel the same. Her mom was the same way. And you, my darling Angela, will be the same as me. We're empathetic. Your dad says bullshit...\"\n\n\"It is bullshit,\" muttered my dad off screen.\n\n\"...but I know, and you will, too. We feel things different than most people. We can sense things. Fortunately, it's all about sex!\" My mom laughed and I smiled to hear it.\n\n\"Baby, your dad and I are swingers. Pretty hard-core ones. What's more, we run an international organisation that caters to the swinging lifestyle. We have clubs all over and the drive thingies...\"\n\n\"Thumb drives,\" said dad.\n\n\"...contain all you need to know about them. Plus, a lot of dirt on some bad, bad, people. Dirt that ends careers with either jail time or being six feet under it. Before you get all judge-y you need to realise that we are targets, hon. We didn't know this at first but there are others out there doing the same thing but for not so nice reasons. Your dad and me? Hon, I hate to break this to you, but we're bi-sexual creatures who crave sex like fish crave water. You're going to have to get past that, and you will, hon. I promise you, you will. A spark's gonna hit you soon. Flip a switch inside you and all this will make perfect sense to you.\n\n\"We started here in VB. A small club. We bought out an existing place, cleaned it up, got rid of the less-than-ideal people, and started to carefully find people to fill it with. It was slow going at first, but I started to get the hang of it...\"\n\n\"Your mom has a way of finding these people. I don't know how she does it,\" added dad, off-screen.\n\n\"Yes, you do. I'm empathetic. Remember?\"\n\nDad snorted.\n\n\"Ignore your father. We found people. And we grew. We stylised the place by having the clients also run the place. No hires. Just us playing and cleaning up after ourselves. It was like a tree fort. A special club just for us. It was glorious. But your father and I wanted more...\"\n\n\"YOU wanted more...\"\n\n\"...and we went to London. Someone in our club had met someone overseas and so we went over. Wonderfully strange place England. We found the club, checked it out, and bought it. We converted it over to our standard and then met Javier. He was wonderful. So British. So BIG!\"\n\n\"Like a horse...\"\n\n\"Just like a horse. Jesus.\" My mom looked off screen at something, her eyes glazed over. She shook her head. \"And then it started. Bradley Manor started. Javier knew people. We knew people. And suddenly we had the most perfect family here at Bradley Manor. All the staff are swingers, Angel. All of them. Sex is free and carefree here, Angel. It has always been this way and I beg you to let it continue. For the sake of the staff. This is their home, Angel. I promised them they would always have Bradley Manor. Please honour that, love.\"\n\nMom then went on to explain where each of the swinger clubs were and how many clients. She explained the rules of the clubs and how they vetted people. It was all fascinating. She talked for a very long time, and I absorbed maybe a tenth of it all.",
        "\"Now, the bad news. Your father and I made a lot of enemies. How? I'm not so sure. We were accused of stealing important clients from rather nefarious people. We didn't steal anyone! We just offered them a better place to be themselves! Honestly! But these people!\" Mom looked off screen at dad, I presumed and shook her head before looking back at me. \"The LTG are the worst. The Large Triangle Group. Chinese miscreants.\"\n\n\"Chinese crime syndicate,\" corrected dad.\n\n\"Yes, that,\" muttered mom. \"We lost some people, Angel. They were killed by these thugs. Good friends of ours. It was a clear message to me and your father. For a time, everything stopped. Then I got angry. Angry that these people could dictate how to run our lives and who to invite into it. So, we went bigger. And we started to gather information.\" Mom looked at dad. \"Hon, maybe you should explain this.\"\n\nI heard noises off screen and then dad slid into view and wrapped an arm around mom. There was dad, looking good and healthy. Just as I remembered him. A sob escaped me, and I needed so desperately to wrap him up in my arms and never let go. He smiled out at me, his eyes crinkling, his teeth shining, and the look was one I knew well. The look a father gives his daughter. That special bond. The one man in my life I could always trust so completely. My heart broke and I froze the screen by tapping the space bar.\n\nI stared through tears at the frozen image of my mother and father on the screen. They looked so beautiful and alive and well. I sat there for a long time soaking in their image. This is how I want to remember them. Alive and happy, staring directly at me, their daughter. Finally, I reached out and tapped the space bar and the video resumed.\n\nDad finished his wide grin. \"Hi baby. I'm so sorry we died. I hope everything is okay. I hope we didn't die badly. I'm sorry we never told you any of this and you are finding out this way. I presume Javier has shown you all this. He is a good, good man. I trust him with my life, and for good reason. What your mother and I have accomplished is in large part due to him. He runs the swinger clubs almost singlehandedly. He has the contacts. The means. The wherewithal. Listen to him. Trust him like you would trust me.\"\n\n\"And Angel,\" interrupted mom. \"Fuck him at least once. He's amazing.\"\n\nDad grinned and that shocked me the most. \"Yes, he is. Listen, Angel, I wanted to tell you all this when you turned eighteen. But you were deep in school and doing so well. I didn't want to jeopardise all that, so we decided to wait until you graduated. Then you changed majors. And then it never seemed like the right time. By now you either already know all this and are listening to this just to see us, or you are just finding out and are freaked the fuck out.\n\n\"I'm sorry you have to learn that your mom and I are bisexual. It's just the way we are. It doesn't faze us in the least. I love women and I love men. So does your mother. Don't think less of us. If anything, you should think more of us, in my opinion. We love everyone equally.\"\n\n\"Hmm,\" murmured mom. \"You loved Derek more, didn't you?\"\n\nDad blushed. \"No. Not more than you, baby, you know that.\"\n\n\"Liar,\" laughed mom.\n\nThey looked at each other and kissed. It was the kiss I always saw between them. Now I could see the trust and love in it. They trusted each other with other people. And loved each other more for it. That touched something inside me. Someone foreign and unexpected. Before I had a chance to examine it, dad continued.\n\n\"So, we ran into some bad people almost right away. Javier helped narrow down issues and soon we were collecting data. The thumb drives you have contained years of surveillance and recordings of some pretty bad people doing some pretty bad things. We keep this evidence and use it to give ourselves room to breathe. Nothing more. We don't sell the information or boast about it. When we catch wind of something bad coming our way from LTG we get ahead of it. We have evidence on people who would seek to do us harm and let them know doing so will result in their exposure. Some call that blackmail, but what would you call it when you use evidence to stop someone from doing you harm? I call it insurance. Javier handles those details. He has contacts in some high places in England. We leverage that and so far, we have escaped the wrath of the LTG. But they are out there. Always sniffing around.\n\n\"This we kept from you. We had you under constant surveillance at GMU. One or more of the students in your classes was always someone hired to protect you. Javier will have continued that. Ask him about it. But don't stop it. You need it for your safety.\" Dad looked at mom for a quick moment. \"If you are watching this, then your mom and I are dead. I would assume we were killed by the LTG. Ask Javier what he has found because I guarantee you, he would have investigated. We have contacts all over the world. Each establishment is protected and guarded. Our clientele is protected and guarded. Secrecy is at the root of all we do. LTG would kill to get their hands on the bad guys we have dirt on and on the good guys and gals we protect through Bradley Consulting. Javier says we are spread too thin. Your mom disagrees. Time will tell. But Angel, you've inherited the largest swinger's community the world has ever known. The clients...\"\n\n\"Friends,\" smiled mom.\n\n\"...are some of the most elite in the world. We are talking politicians, lawyers, doctors, rock stars, scientists, athletes... the list goes on. These people are the cream of the crop. Clean, skilled, intelligent, funny, sexy as hell, and powerful. We offer them a place to let loose. To enjoy their lives. Escape from the harsh reality of their world and escape to hedonism. Free love. All for a modest fee. A fee based on their income. Typically, five percent. Most of the money goes to the upkeep and maintenance and running of the clubs. A lot of security, too. It all gets eaten up. Some comes our way. A salary for your mom and me. That will now extend to you, alone. Javier handles the books.\"\n\nDad leaned forward and stared directly at me. \"Angel, you can let this all go if you want. Perhaps you should. There is enough wealth in our family to last generations. Just keep the staff happy and continue to give them a home, and hon, you can do whatever you want. It's your life. Follow your dreams. I just want you to know one thing from me. As your father. I've never been prouder of you. You are the light of my life. I adore you and love you. I only ever want what is best for you. Whatever you decide, know that I will respect it and love you all the more for it. I love you, Angela.\"\n\nI smashed the space bar and cried. Great wracking sobs burst from me, and the pain and anguish were almost too much to bear. I loved my daddy. He's the standard that all men in my life are held to. All I have ever wanted to do in my life was to make him proud of me and love me more.\n\nI heard a throat clear, and Javier walked into the small room carrying a tray with a covered dish. A bottle of wine and a wine glass sat on the tray. I wiped at my eyes and accepted the tissue Javier handed me after he placed the tray on the desk. I blew my noise in a less than dignified manner and Javier took the used tissue from me. I smiled a crooked smile at him.\n\n\"I'm so sorry, miss, um, Angela. I heard you crying in here for some time. It's late and I thought you would like to take a break and eat a little. You ate very little with Willy and Marcia and you must be famished.\" Javier lifted the silver dome on the tray and steam appeared and cleared revealing a small steak with roasted potatoes and green beans from the garden. My mouth salivated.\n\nJavier placed a napkin on my lap and then poured the wine.\n\n\"You knew I was with Willy and Marcia?\" I asked chewing the first mouthful of steak. It was perfect and medium-rare, and so juicy, and if Javier wasn't there, I might have picked it up and eaten it with my hands.\n\n\"Yes.\"\n\n\"Do you know what we did?\"\n\nJavier shifted slightly. \"Yes and no. I know you had a threesome but not how the threesome was conducted.\"\n\n\"Conducted?\"\n\n\"Who did what. They can take many forms. It all depends on comfort levels. If I may say, I thought it lovely that William has come back into your life. Your mother and father were quite taken by him.\"\n\nI raised an eyebrow at Javier.\n\nHe chuckled. \"Not like that. They were impressed with his morals and ethics. They were also relieved you ended your relationship.\"\n\nThat surprised me. \"Why?\"\n\n\"Your dad was especially. Your mom said it was because William looked too much like your father.\"\n\nA light turned on and I sat back and thought honestly to myself. Now that Javier had mentioned it, I saw the uncanny resemblance between William and my father. I had never seen it before.\n\nJavier smiled at me. \"Your mother said it was quite natural and normal. She adored watching you have your friends. Not watching you! Bad choice of words. Rather, she was pleased with who you chose to take as sexual partners. She said you were growing into who you would become.\"\n\nI chewed more steak and suddenly the small steak wasn't going to be large enough for my appetite. \"And who is that?\"\n\n\"Not for me to say, miss. That would be for your mother to describe to you.\"\n\n\"My mother is dead,\" I said and froze. I had never uttered those words before, and I felt a cold dagger pierce my heart. A sob escaped me, and I was glad my mouth was empty, or I would have choked. Grief hit me hard and suddenly I was being held by Javier. He held me easily. I could feel the wired strength of his arms and shoulder. I could feel his heat. His large hands holding me and stroking my back, their width covering so much of my back with each stroke. All the little hairs on my body stood up and I could feel his concern washing over me in waves. He cared about me. I could feel it like a warm breeze on my face. I could feel his sudden excitement holding me and how he pushed it down and away. I knew in that moment I could simply turn my head and he would kiss me. The clarity of it was unreal and I doubted my sanity. My crying slowed and stopped and for a moment I almost started something. I wanted to and I didn't. It was like staring off a cliff. Such a simple step but the fall was massive. And so, I remained at the edge and stared out into the abyss, letting him hold me until I felt myself again.\n\nSlowly we righted ourselves and I returned to eating. Soon it was gone, and one glass of wine was churning warmly in my stomach. The food was the exact right amount. The chef was amazing.\n\nJavier rose, emptied the bottle into my glass and left with the tray.\n\nWe hadn't said a word.\n\nI sipped my wine and pressed the space bar.\n\nDad was still staring at me. Then he smiled and sat back.\n\n\"I love you, too, Angel,\" said my mom, smiling at me. \"I hope you are okay and getting over our death. Death is part of life, honey. It comes for all of us. Some sooner than others. But we can't control that. You feel so much more than most people, Angel. Like me. Like your grandmother. And like your great-grandmother. We all have daughters as our first. Rarely a second child and I don't know why. You will feel so much more, and grief is the worst. It will feel as raw as the first day for a long time for you, Angel, and I'm sorry it is that way. But the plus side is wonderful. You will feel such love for people and when you find your match, you will know. Deep in your heart you will know.\" Mom looked at dad and her eyes shone with her love. \"Like your father here. I met him in university and instantly knew he was the one. Watching him suck cock the first time made me cry with joy. Finding your soulmate does that. You'll see. But enough of that. Dad wants to explain some financials with you. He suggests getting Javier back in the room with you and going through everything with him. My advice is to let Javier fuck you senseless. Your dad agrees, don't you love?\"\n\nDad nodded and grinned like a kid at me. \"He's really good, Angel. Let him pleasure you. The whole family is there for you at Bradley Manor. Indulge. Everything is safe there. Trust me.\" He winked at me. \"Stop this video here and come back with Javier. First thing we are going to do is ask you if you fucked yet. You might as well get it out of the way. Javier has wanted to fuck you since you turned eighteen, Angel. Go. Have fun, then come back and continue. Take a break, love.\"\n\nI pressed the space bar and drained the last of my wine. I felt a warmth flood through me, and the words of my parents empowered me. I felt vibrant and on the cusp of something large and exciting.\n\nI had always reined myself in with my partners. I always felt that I was holding back something and not knowing what it was, because it frightened me. Now, with this new knowledge, and the world my parents had opened up to me, I no longer felt frightened. I felt liberated. Free. Unstoppable.\n\nI also knew I had to change things. I already had an inkling. I just had to let my subconscious work on it a little more. I knew where I think I was headed and what I wanted to do. I just had to be certain.\n\nAnd for now, I wanted to feel Javier's mouth on my pussy. And feel his large black cock deep in my throat. And then deep in my pussy, and then deep in my... I put down the wine glass and ran out of the room.\n\n\"Javier? Javier! I need you now!\"\n\nPart Two -- Doors Open Wide\n\nThe birds outside the window woke me and my eyes fluttered open and spied the sleeping face of Javier lying next to me in mom and dad's bed. His mouth was open a little and small snore sounds escaped him. I smiled and let the memories rush back of last night.\n\nJavier had come running, worried something had happened. When he rushed into the room, I launched myself at him and pressed my lips against his and sucked his tongue into my mouth.\n\nJavier didn't even hesitate. He devoured me. Like an animal. He tore my clothes off and drove his face between my legs and sucked up my flowing juices like a man coming out of the desert. I came at once and thrust my pussy hard against his tongue and mouth, drowning in the waves of orgasmic pleasure that coursed through me.\n\nI felt liberated and free to do whatever I wanted. And I did. I pushed him on his back and ate the crack of his ass with abandon. I had bever done this before but somehow knew Javier liked it. Needed it. And I obeyed and lifted him to his first powerful orgasm. My lips locked around the bulbous head of his large cock and felt his forceful, thick cum, jet into my mouth. I was in heaven and moaned with the sheer vulgarity and deliciousness of it all. I wanted him to cum and cum and cum for me. I wanted to keep swallowing. But sadly, he stopped and when I started to complain he pushed me on my back and speared me with his entire length in one massive thrust.\n\nI howled with the pleasure of it. That one thrust broke down whatever barriers I had left, and I fucked that man like a wild thing. My pussy met his cock with equal hunger and our pelvis crushed against each other. Bone jarring thrusts that spread pleasure through my core and out through my hair and fingertips.\n\nI had never had sex like that before. I took him. Used him and he took me and used me. Each time he came I cried out in joy and followed each precious drop to my mouth. I need his cum inside me. Every hole. And Javier obliged me.\n\nEven now, watching him sleep, I wanted more. My mind wandered to the other staff. Mom and dad told me to enjoy them. To bask in sexual freedom. A slow smile crossed my face and I stretched long and hard in the bed. The sheet pulled back, and my breasts were exposed to the cooler air of the room. I felt my nipples harden and my desire grew.\n\nI touched myself and felt a new soreness. Javier's cock had been the largest I had ever had, and he had touched me in places no man had ever managed. I could feel his cum still seeping from my vagina and a naughty thought crossed my mind.\n\nI crawled over to Javier and then positioned my crotch over his sleeping face and started to play with myself. His cum, deposited only a couple of hours earlier, made my pussy and clit slick and feelings of pleasure thrummed through me. I looked down past my circling hand to watch Javier sleeping.\n\nI lowered myself and placed my sopping pussy, full of his delicious cum, down on his mouth. He awoke at first touch, looked startled and then started lapping at my pussy.\n\n\"Oh yes, eat me,\" I murmured. Knowing he was eating his own cum excited me beyond reason and soon I was humping his face and crying out for more. \"Oh fuck, yes! Eat that pussy! Eat that cum! Oh fuck, Javier, you're eating your cum out of my pussy!\" By now I had the fingers of both hands entwined in his hair and pulling his head hard against my spasming pussy. A quick orgasm flashed through me and revealed the even larger one waiting on its heels.\n\nI thrashed and fucked his face. He would have to force me off him for moments of air. I didn't care. I chased the elusive orgasm. I pushed his face lower and cried out when his tongue found my asshole and penetrated me deeply. I found my clit and rubbed it hard and ground my pussy on his face.\n\nThen it hit me. The orgasm bounded out of the forest and attacked me with its ferocity. I came so hard my eyes exploded with stars. It was so exquisite. So deep and pleasurable. I lost myself in it and came and came. Javier kept with me and then I felt splashes of warm cum hitting my lower back and ass. I looked back and saw Javier had been stroking himself the whole time.\n\nI flew off him as my orgasm eased back to a warmth deep in my stomach. I lay on my stomach feeling his cum leaving cold streaks down my back. \"Lick it off, baby!\" I demanded and Javier obeyed, washing my back with long broad strokes of his tongue. I heard him swallow and it was one of the hottest things I had heard in a long time. \"Baby, I love that you love your cum! Eat it all up. Give me a kiss!\"\n\nHe kissed me and then straddled my ass. I could feel his long cock between my ass cheeks and then up over my lower back. He has such a long penis. It was amazing. A true wonder. Javier rocked back and the tip of his penis, hot and scorching, pressed between my ass cheeks and found my pussy unerringly. He slid inside and then thrust into me with a precision and control that soon had me quaking in more bliss.\n\n\"You are fucking amazing!\" I cried as an orgasm triggered deep inside. His weight pressing me down hard on the mattress, his cock between my ass cheeks and deep in my pussy, combined with the relaxed and comfortable position I was in soon had me reaching the stars again. The position was called prone, and I loved it. It was one of the most relaxed fucks I ever had. He took me and that was all I ever wanted.\n\nWhen Javier came deep inside me long minutes later, I was lost again. Feeling his cock harden more and then spasm inside me triggered something and I was swirling in pleasure. I had never been so wet. So in touch with my sexuality. All I could smell was my pussy and his cum. Someone should invent an incense stick with that aroma. It smells like life. My orgasm subsided and I groaned at the loss.\n\nJavier collapsed completely on top of me and squished me deeper into the mattress. I didn't care. He was like a warm weighted blanket, and I felt warm, safe, and secure.\n\nHis mouth was right at my ear.\n\n\"Thank you, Angela. I have wanted that for a long time. So have all the staff.\"\n\n\"All the staff?\" That pleased me to hear.\n\n\"Oh, yes. We had thought when you turned eighteen you would join our family. It was not meant to be, and we have all been saddened by that. Now, today, I am hopeful that you will join our family, too.\"\n\n\"You mean fuck all the staff?\"\n\n\"Yes. It would mean so much to them.\"",
        "\"I bet. Wait, you mean the women, too?\"\n\n\"Oh, yes. They more than anyone would love to be with you. Love making between women is glorious. Your mother preferred it; I think.\"\n\nI remembered watching my mother pleasure and be pleasured by women in the videos. Javier wasn't wrong. But I knew she craved truly only one thing and that was my dad's cock. I had seen the looks in her eyes every time he had penetrated her. She became more alive. The two beasts became one.\n\n\"I don't think I can be with a woman, Javier. It's not my thing.\"\n\nJavier chuckled and the sound coupled with his lips touching my ear and brushing my hair gave me a delightful bout of the shivers. \"It is. You just need to jump in.\"\n\n\"And you know this how?\"\n\n\"You are your mother. In so many ways. You taste exactly like her. I almost cried when I tasted you last night. It was as if she had come back to life. The others will see it and feel it too. You will help them through their grief and with that you will help yourself. Trust me.\"\n\n\"My dad said to trust you. How did you find that amount of trust?\"\n\n\"I saved your father's life. I took a bullet for him. I also saved your mother at the same time. When I woke after surgery your mom and dad were there. They offered me a better future and here I am.\"\n\n\"Why did you do that? Take a bullet for dad?\"\n\n\"I loved him.\"\n\n\"What? You loved my dad?\"\n\n\"Oh yes. When I first saw him, I loved him. Your mom saw that. Then she took me to meet him. Made me fuck her arse all the time telling your dad just how good it was. Your mother had a way of opening up people. She opened me up so easily. And soon I was fucking your dad. It was glorious. He was my first. When I came, I cried, and they both held me. I loved your parents, Angela. They were my husband and wife in many ways.\"\n\nI lay silent taking it all in. Nothing bothered me about sex anymore. I thought Javier's love to be beautiful and it clicked in my brain and filled an empty spot and I felt more complete.\n\n\"Thank you, Javier. For loving my parents that much. I'm so sorry they left you.\"\n\nJavier was quiet and still and soon I detected he was shaking a little. I forced myself over onto my side and Javier spilled off me. I held him for a long, long time, and stroked his back and head like a little boy. He suckled me when he stopped crying and held me.\n\n\"You're safe here, Javier. Always safe here.\"\n\n\"Thank you, Margie...\"\n\nHim using my mother's name saddened me, but I understood. I held him a little tighter.\n\n<p align=\"center\">* * *</p>\n\nThe next few days were long and tiring. I spent most of the time in the office until Javier showed me mom's laptop that connected to the system remotely. Soon I was in the bay window in the master bedroom overlooking the garden. I would see the Fletchers wander by outside and waved to them when they spotted me. The housemaids started to enter my room more frequently, and I would rise and hug them each time and thank them.\n\nFeeling brave one morning, I kissed Patrici Watson right on the lips. When she responded, my pussy flooded, and I apologised and pulled away. Patrici had one hand on her own breast and the other on her stomach and she just stared at me and then fled.\n\nJavier scolded me later, saying I had Patrici so turned on she could no longer work. Nura Hughes was devouring her right at that moment, and this was distracting the head chef who then had to join in.\n\nI laughed at the absurdity of it all. Javier told me he was keeping the staff appraised. They were hopeful and excited. It also explained why suddenly I was seeing more and more of the staff. I had always thought they hid themselves from me because they didn't like me.\n\nJavier said no. \"They hide from you because they all want you,\" he said simply, and wandered away.\n\nMy first lesbian experience came the next day. I was feeling peckish and horny. I was bored of all the names I was reviewing in the data. I had started sorting the people into three and then four piles. Those I felt I could possibly trust, those I knew I couldn't, those who needed to be on the \"blackmail list\", and those who I couldn't decide which pile they belonged to.\n\nHailey Rivera, the head housekeeper, came into the master bedroom with a soft knock first. She was dressed in her normal well-dressed manner. She was about twenty years my senior, but she looked just as fit. She was Puerto Rican and had all the classic Puerto Rican beauty about her. I had always admired her gorgeous looks. She moved like a dancer, and I used to secretly watch her.\n\n\"Miss Bradley, sorry to interrupt, but today is the day I change the sheets on all the beds. If you don't mind?\"\n\nI looked her over. Her makeup was perfect. Her plump lips shone with a simple gloss. Her skin was a beautiful caramel and flawless. Her auburn hair was short in the front and along the sides but fell to her shoulders behind her. I had the sudden urge to brush her hair and wanted to. She used to brush mine from time-to-time and I still remember the feeling of her hands on my scalp. She always gave me such delightful shivers.\n\nI couldn't speak and so I nodded. I watched her the entire time. She kept glancing at me as she worked. She did everything with efficiency. She pulled back the thick duvet and bunched it up and placed it to the side. Then she pulled back the top sheet and made a noise.\n\n\"What's wrong, Hailey?\"\n\n\"I am so sorry miss. Nothing is wrong.\"\n\n\"You made a sound.\"\n\n\"Ah, si. It's just... it's been a long time since the bed was so stained.\"\n\n\"Stained?\" I asked and then immediately knew what she meant. I had been fucking Javier in that bed every day since he showed me the office. I knew exactly what stains would be there. \"Oh, shit! I'm so sorry, Hailey! You shouldn't have to see that!\"\n\nHailey chuckled and the sound awoke something in me. I wanted to hear that laugh again. In my ear. Up close. \"Ah, miss. I used to see this all the time.\" She looked back at me coyly. \"Sometimes it was me who made the mess...\" and she giggled again. She had never been so brazened in front of me.\n\nI froze as I felt my pussy tighten the hardest I had ever felt it tighten. I swear I flooded my panties in that one squeeze. \"Ha-Hailey... I... Can I brush your hair, please?\" I asked quietly, afraid of the words. Afraid of what they meant. Afraid of what they would lead to. Part of me hoped she would refuse.\n\nHailey turned slowly, pulling the top sheet with her. The sheet looked like the start of a sarong, and I wanted to gently pull it away. \"Miss?\"\n\n\"Angela,\" I said, feeling stronger, suddenly. \"Please call me Angela. Like you used to when you brushed my hair. Let me return the favour. Your hair is so beautiful.\"\n\n\"Miss... Angela, no...\"\n\n\"Please. I need this. Do you understand?\"\n\nHailey looked at me for a long, long time. I watched her breasts rise and fall with her breathing. Her slender waist sloping outwards to strong hips. Behind her was a beautiful Puerto Rican ass. The one songs are written about. The kind of ass men fall over each other for. But it was her dark, dark, brown eyes, surrounded by such pure white which always captivated me. She looked like sex. They call them bedroom eyes and until that moment I never had seen or felt it. I wanted her to look at me with those eyes as I made her cum.\n\nWhere did that thought come from? Oh my God, this is real. I really want this, don't I? I am like my mother. I felt like I was standing on the edge of a cliff again, but this time I knew if I jumped, I would soar instead. Soar through the clouds and emerge on the other side in bright sunlight, basking in the warmth. I hope I have the courage.\n\nI rose on unsteady legs and walked over to the makeup dresser. All my mom's things were still on display where she had left them. Today, I was suddenly okay disturbing them. Mom wanted this for me. I knew she did. I stood behind the chair and patted the high back. \"Come. Sit down. Please. I need to do this, Hailey. You need it, too, am I right?\"\n\nHailey just looked at me and then nodded her head and moved with an awkwardness I had never seen from her. She moved in stops and fits until she moved past me. She made a wider circle around me than necessary and then backed up into the seat, staring back at me the whole time. She looked afraid and I didn't know why. Doubt buzzed at the edges of my sanity.\n\nShe sat gingerly and then settled herself moving from one butt cheek to the other. She finally stopped moving and stared at my reflection in the mirror. I went to reach over her for the brush, but when my breasts touched the back of her head and the brush was still out of reach, I pulled back.\n\n\"Sorry, can you hand me the brush?\" I could see my cheeks were burning red in the mirror. So were Hailey's.\n\nHailey reached out, keeping her back ramrod straight in the chair. She fumbled around and then her fingers closed on the brush. She lifted it and held it over her shoulder. I couldn't keep my eyes from hers. I could sense her fear. It was fear but not a fear of me. It was a fear of something else. I took the brush and held it.\n\nI raised a hand and ran it down her hair on the right side of her head. Her eyes fluttered and then opened wide, finding me still staring at her.\n\n\"You are staring!\" she said.\n\n\"I can't help it, Hailey. You are so beautiful. Your eyes... they draw me in. So deep and gorgeous...\" I smoothed her hair again and Hailey seemed to soften in the chair. I raised the brush and ran it gently down through her longer hair at the back. \"I used to love when you did this to me. It was so intimate. Sensual.\"\n\n\"Yes,\" whispered Hailey, her eyes half-lidded.\n\n\"It always gave me pleasure. Goosebumps all over my body.\"\n\nI looked at Hailey's neck and arms and saw her skin was covered in goosebumps. I continued to slowly brush her hair, running my free hand down the other side. Her hair was so luxurious and soft. I leaned forward and smelt her hair and smelt flowers and mangoes.\n\n\"Your hair smells gorgeous. It makes me hungry!\" I said and watched Hailey's eyes widen.\n\nI continued to brush her hair as gently and lovingly as I could. Inside I was a mess. I wanted this woman. I had never wanted a woman, and this was freaking me out. But I knew her. Grew up with her. She had always been like a friend to me. A surrogate mother at times. I used to confide in her all the time about boys and she had helped me understand them, but always distant when the subject came up. Now looking at her looking back at me, I think I knew why. She wanted me. She always had. This woman was attracted to me, and I knew I was attracted to her. If anyone was going to be my first, it would be Hailey. It felt right.\n\nI leaned down and kissed the top of her head watching Hailey's reaction. She looked pleased and horrified at the same time. I ran my free hand down through her hair, circled her ear, and then down over the nape of her neck and left it there. I had a light finger on her jugular and could feel her heartbeat pounding and pounding and pounding, just like my own.\n\nI kissed the top of her head again because I liked it. \"I used to watch you secretly, you know,\" I said. \"You always move so gracefully. I tried to be like you. I would practice for hours on how to move like you. It's beautiful. Exotic.\"\n\nHailey laughed a little laugh and smiled at my reflection. \"Did you? I used to pretend to be you sometimes. Silly things. You move your own way, too, you know. A confidence and yet so feminine and soft. The way you bent over or rose on tiptoes to reach something high. So graceful. And your blond hair! I always wished I was a natural blond like you! But Puerto Rican girls don't look good with dyed blond hair...\"\n\nI brushed her hair and watched her in the mirror. \"Red would look nice on you, I think,\" I said.\n\nHailey raised a hand to her hair and grabbed some and held it out to look at it. \"Red? I never thought about red. Do you think?\" She reached up to smooth her hair and her hand touched mine briefly. The jolt it created sent an emotional shock through both of us. I felt her pulse beat harder under my finger.\n\nI kissed her head again. \"I think we should try it. We can always dye it back. I have a wonderful hair stylist in town. We should visit him.\" I kissed her head again.\n\n\"Why do you keep kissing my head?\" she asked softly.\n\n\"Because it feels right and good when I do it. Is it wrong?\"\n\n\"No. I like it.\"\n\n\"You used to kiss the top of my head; do you remember?\"\n\n\"Si.\"\n\n\"I liked it, too. Hailey?\"\n\n\"Yes, Angela?\"\n\n\"Will you kiss me?\"\n\nHailey stared at me in the mirror. She was shaking. \"Why? Why would you want that?\"\n\n\"Because my first time with a woman? I want it to be with you. Will you teach me?\"\n\nHailey nodded her head emphatically and then wiped a tear from her eye. \"Si. I would like that. Are you sure? Really sure?\"\n\nI nodded and then moved around her in the chair, lowered my mouth, and kissed her upturned lips. The moment our lips touched I knew it was different. Instantly better. Softer than kissing a man. So much nicer. A moan escaped me, and Hailey heard it and our soft kiss became slightly more frantic. I felt her tongue touch my lips and they parted, and her tongue touched mine.\n\nI could no longer pretend this was the kiss between friends. The touch of our tongues promised this was so much more than that. She tasted sweet and fresh, so much nicer than a man. I then decided the time for comparisons was over. Everything about this felt right and welcomed in my heart. A yearning reached up through me and my hand on her neck reached round and pulled her in tighter. Her lips quivered against mine and pressed just the right amount to express the same desire without hurting.\n\nHer lips were so plump and soft and wet. I was lost in them. I tasted them, pressed my own lips against hers and never wanted to break contact. She was soon panting, her breath coming in short and warm gusts, into my mouth, and so was mine.\n\nShe slowly stood and pulled me into an embrace at the same time. Feeling her breasts pressed against mine and knowing this was sexual excited me deeply. I pulled her in tighter and she squeezed me back. Our tongues danced and licked and tasted. I never wanted it to end.\n\nThen she turned me around and pushed me down in the chair. I sank down looking up at her questioningly, afraid to see disappointment. Instead, I saw the lust all over her face. She licked her lips and sunk down between my legs, pushing them apart. She grabbed the hem of my short dress and lifted it up exposing my panties and soaked crotch to her. I could smell my arousal. I watched her, the images burning into my memory.\n\nShe pushed my legs wide and I let her. I loved watching her looking closely and hungrily at my most private region. I had never felt so open and wanted at the same time. Her face leaned forward, and her fingers fumbled at the side of my panties at my mound. Then she pulled aside my gusset, took a moment to stare at my swollen labia, and then her mouth was on me.\n\nI cried out in pleasure. Her tongue softly slipped between my lips and ran up and through my wet folds. Her tongue kept climbing and climbing and then it was on my clit and my world exploded in pleasure. I came onto her mouth and bucked and called out her name. She kept licking through my orgasm, sucking, and drinking my juices. It was so much softer than a man and so much better. No man could ever achieve what Hailey did that day. It was perfection.\n\nShe made me cum three times in that chair before rising and pulling me over to the bed. She lay back and I couldn't get on her fast enough. I kissed my way down her blouse, pulling at her dress and lifting it clear. Still clothed, I kiss her exposed naked thigh and smelt her pussy just inches from my face and mouth. I was swallowing spit as fast as I could. I was ravenous for her. I licked up her thigh and spied my goal.\n\nHer pussy was trimmed beautifully exposing her thick lips and puffy pussy. It glistened with moisture and looked like one of the most beautiful things in the world to me. I pushed on her thighs, and she lifted and spread them. I watched her outer lips part wetly, exposing the glorious inside of her pussy. It gleamed pink and wet. Her vagina leaked a thick drop of liquid and before I could think my tongue found it and lapped it up.\n\nI had just licked my first pussy. I swallowed my treat and grinned. And now I've eaten my first pussy. My hunger and lust took me, and I started gently eating this wonderfully tasting woman. She was my first. I could no longer pretend women didn't excite me. I was surprised at just how wonderful women taste. It is a taste on its own. I've tasted myself and its familiar, but fresh from a woman who was not me, and the taste does things to your brain. I couldn't get enough and ate this beautiful woman with abandon. I felt something else inside me click and suddenly my world seemed all the clearer. After a lifetime of wanting men, I realised I was actually missing out on what I truly wanted: Women.\n\n<p align=\"center\">* * *</p>\n\nI remember Javier coming into the bedroom at one point later that evening. He brought Hailey and I a snack and with glorious decadent hot chocolates, piled high with toasted marshmallows. We declared our love for him and then shooed him away giggling. We ate our treat naked in bed and giggled like schoolgirls. I was deliriously happy. I lost count of the number of orgasms and truly it didn't matter. She made me orgasm so easily and I had her over the edge too many times. I came to it naturally, Hailey said. My mom was just as good, she added later. Hailey taught me just how a woman can make love to another woman.\n\nI spoke of my fears with her. Fears of being bisexual or being a lesbian and she consoled me and talked me through it.\n\n\"Your mother would be better at this than me,\" she said at one point lying inside my left arm on her back, pressed up against me.\n\n\"Why do you say that?\" I replied, tracing the outside of her closest areola. I kissed her ear and she shivered. Her nipple hardened a little and I smiled.\n\n\"It was your mother who brought out this side of me. And you look exactly like her, Angela. It is frightening. And she looked exactly like her mother. It's like reincarnation.\"\n\n\"Hmm. Strong genes.\"\n\n\"I'll say. Honey, you rocked my world better than your mom ever did but your technique was identical. Masterful. I'm surprised this is your first time.\"\n\nI didn't want to admit I had fantasised often about being with a woman. It had always been my private go to.\n\n\"Being a lesbian isn't anything to be ashamed of,\" she said softly, and her right hand stroked the outer lips of my pussy, sending shivers through me. \"I think it is natural for most of us. Women are much more sexual than men.\" She nodded her head against me when I laughed. \"It's true! Men think about sex more, probably, but women are more sexual. When aroused we are insatiable. A night of love making between women is so much more. More intimate. More pleasing. You will see.\"\n\nI doubted her.\n\n\"I think you doubt me. Your mother and I talked about this often. She said men are attracted to a woman's body. They get hard, they fuck, they sleep. Women generate more desire to have sex than men. We have a greater power of being turned on. But first we need that connection. Once there, our desires know no limit. With men, they don't form that connection until after sex. It's loca, no?\"\n\n\"Hmm. I think it's probably more nuanced.\"\n\n\"Oh, si! Our desires wane and wax. But when they are ready, hoo boy!\"\n\nI kissed the top of her head. \"That's certainly true.\"\n\n\"I'll tell you what your mother said one day. She said take a man and a woman. Make them watch porn. Male on male, male on female, and female on female. The male will be excited by the last two. The woman will be excited by all three? Do you see?\"",
        "I laughed. \"Yes, I do, but that all depends on the man and woman. Some men, like my father, would be excited by all three.\"\n\nHailey grew quiet. \"Ah, I see you know everything. Yes, your father was unique. Well, maybe not unique, but he was special. We all enjoyed him so much. Your mother was very fortunate. But most men, the thought of sex with another man is repulsive to them. Not so for most women. That has been my experience.\"\n\n\"No, I think there are plenty of women who hate the thought of lesbian sex. The world is complex. People like what they like. But,\" I hesitated, still thinking this through. \"some people, like my mother and father, they are just more open. Some people would say hedonistic. I'm feeling that now. I see a whole world of possibilities opening up. I feel liberated. Released from the prison of my own mind.\"\n\n\"Are you going to return the manor to the way it was?\"\n\n\"I don't know how it was...\"\n\nHailey carefully rolled over to her other side, pressed up against me, and took my nipple into her mouth and suckled me. She lifted her face and grinned up at me. \"It was this way. All the time.\"\n\n\"Oh, yes, then yes I am... don't stop...\"\n\n<p align=\"center\">* * *</p>\n\nWouldn't it be fun if suddenly I was just having sex all the time with all the staff? That wouldn't be reality, just pure fantasy. In my reality, Hailey left after changing the sheets and returned to the staff house. She asked me to come see the inside later and I realised with shame I had never been inside. Or invited. She said my parents had provided them with everything they had ever needed and would love to show me. I agreed but said it would have to be much later. She left after a long kiss, and I feel asleep.\n\nIn the morning, I ran a hot bath and soaked for an hour before dressing in something light and comfortable. I left my hair wet, but pulled it into a ponytail, and decided to take a long, barefoot walk through the entire house and grounds. I wasn't sure what I was looking for, I just knew I had to. I wore a silk lounging top and bottom and threw a silk robe over it. My breasts strained the top a little and stress-tested the top buttons. I loved it.\n\nI wandered through the manor first. I observed the rooms and the layout and filed it all away. Beyond the grand staircase the house opened up into a large hall. Chandeliers lit up the dark room and I pulled back the thick curtains covering the windows. Suddenly I could envisage the whole wall as a wall of glass, allowing a full, unobstructed view of the gardens outside. I turned and imagined tables covered in food with people milling about in dressing gowns and helping themselves to the fare. Wine and alcohol served by staff. Music playing from live bands. Laughter and voices filling the empty manor.\n\nI looked out at the garden and saw in my mind's eye a large gazebo surrounded by soft lighting and areas for lounging. People coming and going, free to pursue their desires. A careful existence sheltered and protected. An escape from the harsh realities of life. I looked back at the house and thought of all the rooms on the second floor, empty and waiting for a higher purpose.\n\nAll for a small cost by the members. A modest membership fee, but only for the invited and trusted.\n\nI smiled as I saw a future begin to blossom in front of me.\n\nJavier found me walking the garden path, humming to myself, and told me my lawyers Willy and Marcia had arrived. I smiled, kissed him warmly, and held him a moment.\n\n\"Are you okay, Angela?\"\n\n\"Oh yes, better than okay. Come with me and meet the lawyers. There's going to be lots of questions.\"\n\n\"Did you enjoy your time with Hailey?\"\n\nI grinned up at him. I loved that he was a head taller than me. \"Oh yes. That was memorable.\"\n\n\"You two were very vocal.\"\n\nI blushed and slapped his chest with an open hand. \"Oh no!\"\n\n\"The staff are very happy for you. You should know that. Everyone is charged up and horny.\"\n\n\"Oh dear!\"\n\nJavier chuckled. \"You seem happy. Grounded.\"\n\n\"I am. Thank you, Javier. My heart is bursting!\"\n\n\"Do you want to change before meeting your lawyers? You aren't wearing much.\"\n\nI giggled. \"No, they seen all of me and then some. Come. Join us.\"\n\nI took his hand and walked him into the house.\n\n<p align=\"center\">* * *</p>\n\nJavier had seated my lawyers in the family dining room. It's a normal sized room with a typically normal dining room table. When I entered, they rose and took in what I was wearing and made a show of hugging me and kissing my cheeks. I kissed Willy and then stood in front of Marcia and kissed her full on the lips.\n\nShe froze at first and then melted into my arms. I broke the kiss and leaned my head back to look at her.\n\n\"Hi.\"\n\nMarcia grinned. \"Hi, yourself!\"\n\n\"Wow,\" was all Willy managed.\n\n\"Hungry?\" I asked.\n\n\"Oh, yes. I am,\" smirked Marcia.\n\n\"Hmm. Later for that. I meant hungry for food. Our chef, Scott, has made us something at short notice, but knowing him, it will be decadent. Come. Sit.\"\n\nWe sat at the table and Willy and Marcia looked strangely at Javier when he sat with us.\n\n\"Willy and Marcia, meet Javier. He's the steward here at Bradley Manor. He is aware, knowledgeable, and was part of the businesses my parents ran. I asked him to join us because his involvement is not going to stop, and honestly he knows more than anyone about all this.\"\n\nWe sat with Javier beside me and Willy and Marcia on the other side of the table. Of course, being Bradley Manor, the table was set out for fine dining. Hailey came in and placed our napkins across our laps. I kissed her neck when she leaned over me. She responded by giving me a quick kiss and then danced away with her natural grace promising us the food would be served shortly.\n\nWilly and Marcia exchanged confused glances and I left them in the dark. I placed a hand on Javier's thigh under the table and squeezed.\n\nWe chatted about many mundane things. The weather was warmer than normal, and Virginia Beach was as crowded as ever with tourists. The occasional roar of a fighter jet blew overhead muffled by the house. Marcia said the Italian restaurant on the main strip had hired a new chef just as Scott Stevens, my chef, walked into the room and stood.\n\n\"Scott!\" I spoke first. \"Please say hello to Marcia and Willy, my lawyers and good friends.\"\n\nScott was looking at Javier and I seated next to each other, and I saw an eyebrow twitch upward for a moment.\n\n\"Of course, miss,\" he replied and walked over to Marcia and Willy and shook their hands. \"Welcome to Bradley Manor. I am the head chef, Scott Stevens. I have two sous-chefs, Isabel and Kevin, brother, and sister. Today we will be sampling some of their work, I hope you don't mind, Miss Angela.\"\n\n\"Angela, please.\"\n\nScott looked at Javier for a moment and then nodded. \"Yes, Angela.\"\n\nI moved my hand on Javier's thigh a little higher.\n\n\"That's better, thank you Scott. What will we be having?\"\n\nScott smiled and my heart missed a beat. He had such a charming smile. I had seen it before but never directed at me. His eyes kept roving between Javier and me. \"Today we have a light five course lunch. Don't worry the portions will be kept small. All preparations have been overseen by me and they meet my high expectations. You will not be disappointed as Kevin and Isabel have outdone themselves. We start with a lovely hors d'oeuvre of candied bacon to be eaten with your fingers. Followed by an appetizer of avocado bruschetta. This is bite-sized avocado toast on crostini topped with avocado, heirloom tomatoes, and a drizzle of extra virgin olive oil and herbs. The salad is a summer fruit cup of berries and melon served with cr\u00e8me fraiche on the side to cleanse your palate. The entr\u00e9e is Denver Frittata, which is a meaty and cheesy omelette crisped frittata style. In closing, Kevin has prepared a cream cheese and Nutella-stuffed French Toast for dessert. It is his own creation, and I admit he has outdone himself. Everything will be paired with wines and spirits. Are there any food allergies?\"\n\nEveryone had been oohing and aahing at the menu. We all shook our heads at the question of allergies and Scott beamed at us all and withdrew, promising the food would be out momentarily.\n\nMarcia gawked at me. \"Do you eat like this every day?\" she asked me, whispering loudly.\n\nI shook my head and laughed. \"Never, actually. I don't know what's gotten into everyone these days!\"\n\nJavier made a lovely soft laugh and I looked at him in surprise. \"Don't stare at me like that!\" he said, laughing a little louder. \"I have made some changes in the household. We are starting to return to how it was when your parents were here, Angela.\"\n\n\"Javier, it was never like this here!\"\n\n\"Miss, if I dare contradict you, you were gone at GMU most of the time. Your parents hosted many, many people here in their home all the time. Scott is beside himself with delight that he could have his sous-chefs prepare this meal today. He hopes this becomes routine. He is tired of making you burgers and pizza.\"\n\nI sat back in surprise. It was always surprising me here in Bradley Manor. I no longer felt like I recognised the place.\n\n\"Well, I for one did not expect all this,\" declared Willy looking pleased. \"And I can't wait!\"\n\nScott appeared in the doorway and stood watching me.\n\nJavier leaned over and whispered in my ear. \"He is waiting for you to order the food served...\"\n\nMy eyes went wide, and I felt heat rise to my cheeks. \"Oh!'' I looked at Scott. His head gleamed bald, and his dark goatee looked like it had been oiled. He was dressed as a chef, and I had hardly ever looked at him before. I noticed how his arms filled the chef's jacket. A strong man. Handsome. Sexy.\n\nMarcia interrupted my thoughts. \"Angela, you're just staring at your chef.\"\n\n\"He's just so handsome...\" blurted out of my mouth. I watched Scott's shocked expression and saw him blush, too. \"Oh, Scott, that was inappropriate. I'm so sorry! It's just I never really looked at you before...\"\n\nI saw the twinkle in Scott's eyes and knew he didn't find my comment at all inappropriate.\n\n\"No problem, miss. I've heard worse from your mother; God rest her beautiful soul.\"\n\nJavier snorted. \"True. It was more 'oh, yes! Harder! Deeper!'\"\n\nI saw Scott nodding in happy memories while I turned my head to glare at Javier. \"Javier!\"\n\nMarcia was goggling along with Willy.\n\n\"Well. I suppose I should start ordering you about, then. Anything you want me to order you to do, Scott? Anything I need to demand?\" I said and grinned at him. I could see Marcia looking flabbergasted.\n\nScott looked long and hard at me. To everyone in the room it was clear. He was thinking of purely sexual things with me. He held my stare and challenged me. I tilted my head ever so slightly in a nod and his smile and intensity grew stronger. My hand rose up Javier's thigh and touched the hardness of his erect penis.\n\n\"What the fuck is going on around her?\" questioned Marcia, sounding a little wild.\n\nScott broke his gaze and looked at Marcia. \"Just a little something the staff here enjoys, ma'am.\"\n\nMarcia looked lost and confused.\n\n\"I heard you mention the new chef at Giardino's, Miss Marcia. He is a friend of mine. If you like I can arrange a private sampling of his favourite dishes. For you and Mister William.\"\n\nMarcia looked like she had just won the lottery.\n\n\"I have a better idea, Scott,' I said. \"Arrange it for all of us please, including Kevin and Isabel, if you can?\"\n\nScott beamed that smile at me again. \"Miss, for you, anything. How about tomorrow evening? It's a Tuesday and quiet. He can give us a back room. You don't mind the back room, do you Miss Angela?\"\n\nJavier made a small noise when I squeezed his hard cock at Scott's words. No, I don't mind the back room at all and thought of Javier pounding my ass with the hard cock I had in my hand.\n\n\"No, I adore it, Scott. Please arrange it. Oh, and the private meal at Giardino's as well,\" I saw and heard Marcia gasp at my words. \"And please, serve our lunch now.\"\n\n\"As you wish,\" he replied and clapped his hands once.\n\nImmediately, Kevin and Isabel who had been hovering just outside the room listening to everything, entered the room with large silver trays carrying our starter. Kevin placed a plate in front of Marcia and Willy. Isabel came round my side of the table and stopped when she saw my hand firmly on Javier's cock and squeezing it through his pants.\n\nShe made a small noise and placed our plates down in front of us. She lingered a moment and then caught my eye for a moment. She smiled and slipped away with her brother back into the kitchen.\n\nKevin and Isabel were fraternal twins. Very close. Very cute. They were only a couple of years older than me. I rarely saw them but today I took a closer look at them.\n\nThey looked like any people their age. I could see tattoos at the base of their throats and wrists. They looked like they wore the same tattoos. Kevin was my height and very slim. He had unruly red hair, glasses, freckles, and large hands. His fingers were amazingly long and strong looking. He was definitely cute. His sister was the same height, red-haired but cut in a punk-style I wasn't familiar with. She had a ring in her lip and a diamond through the side of her nose. A small ring piercing hung off her right eyebrow. She had small breasts, barely a bump, and her hips were slim with a small ass. But there was something about her that was exotic and enticing. The smile she had given me had thrilled me.\n\nI jumped a little when Javier ran his hand up my thigh and touched me between my legs. I bit my cheek and looked down for a moment. His touch had come just as a stray thought of eating Isabel's pussy came to mind. A jolt of pleasure hit me and stole my breath for a moment. I squeezed Javier's cock in retaliation.\n\n\"Are you okay, Angela?\" asked Marcia, with fake concern, her eyes dancing with mischief.\n\n\"Yes, one moment,\" I managed and fought the pleasure Javier was giving me. His finger lightly touched my clitoris through the silk bottoms I wore. I was naked underneath and he had almost complete access to me. I tapped his cock with my hand, and he released me. I took a shuddering deep breath. \"Okay, we should dig in. Scott? Is there a drink with this?\"\n\nScott smiled at me, and I knew he knew what was going on under the table. That thrilled me. He pulled his arm around to his front to reveal he was hiding a bottle. \"This is Sortilege Maple Liqueur from Canada. It is very mild in strength but wonderful to the palate and combined with the strong flavour of the candied bacon, they were made for each other. Like lovers. Perfectly matched.\"\n\nScott poured a small amount in liqueur glasses and handed us each one. He poured one for himself and then toasted us. We clinked glasses and sipped before digging into the candied bacon. It was decadent. The liqueur made it all the more powerful.\n\nThe meal was a blur of eating, drinking, and laughing. Scott remained the entire time making suggestions and filling up glasses with more wine, sherries, and finishing with a rare ice-wine. My hand was back on Javier's wonder cock, and he was feeling me up, with a finger slipping inside of my hot wetness. His fly was undone, and his cock exposed and in my gentle, stroking grip. I was drunk and in heaven.\n\nEvery time Scott would come round my side of the table to fill my glass, he could see me stroking Javier. Isabel would loiter longer and longer every time she came round to place another wonderful plate of food before me. There was a sexual tension in the room off the charts that everyone, but Marcia and Willy, knew of.\n\nThe last time Isabel came round I dropped my napkin on the floor. Thrills ran up and down my skin at just how brazen I was becoming.\n\nAs soon as Isabel crouched down behind the table, I moved Javier's cock to point right at her mouth. She didn't even hesitate. She took his first four inches into her mouth and sucked him hard. Javier grunted and came. I watched his face. He was trying to hide it and not succeeding very well. I felt his cum pulse through his cock and into Isabel's eager mouth. Lucky girl.\n\nShe swallowed it all and it took a long moment. I looked around the table and Marcia was staring right where the very top of Isabel's head was. She said nothing but stared. Willy was engrossed in his dessert. Scott was grinning and I grinned back at him.\n\nJavier's face was darker than normal. He finally breathed and I felt the last jet of cum run through his shaft into Isabel's mouth. She quickly popped his cock free, found my napkin, rose, and placed it on my lap. She smiled at me, and I could see the sticky cum remnants on her lips.\n\n\"Thank you, Isabel,\" I said and beckoned her a little closer. She leaned in and I kissed her lips, running my tongue over the cum. \"This meal is simply delicious.\"\n\n\"Thank you, miss. My pleasure.\"\n\nIsabel almost skipped out of the room.\n\nI turned from watching her ass to seeing Marcia and Willy staring at me.\n\nWilly was the first to speak. \"Did you just kiss your cook?\"\n\n\"She's a chef, but yes.\"\n\nMarcia looked drunk and maybe stoned or high on something. \"After she just blew your steward under the table.\"\n\n\"Yes.\"\n\nMarcia started to guffaw like a donkey. Her head was thrown back, and she was just letting it rip. Willy stared at her in horror and then at me and then at Javier.\n\n\"She what? Did you say, 'blew him'?\"\n\nMarcia laughed harder. Javier was still hard and dripping and so I bent over and slurped up the free cum. It paired most excellently with ice-wine.\n\n\"Oh my God,\" said Willy, and he looked beyond shocked.\n\nScott backed out of the dining room and gripped both doors. \"Ladies and gentlemen, I will beg your forgiveness, I must be away. I hope you enjoyed your meal.\"\n\n\"Scott, that was amazing. My highest praise to your sous-chefs Kevin and Isabel. That was amazing. Thank you,\" and I clapped. Marcia and Willy took a second and then clapped, too, along with Javier. Scott bowed and backed up closing the double doors in front of him and was gone.\n\nMarcia was calmer, but her eyes were a little wild. \"Just what the fuck is going on around here?\"\n\nJavier cleared his throat. \"If I may, Miss Angela has come to life. Finally.\"\n\n<p align=\"center\">* * *</p>\n\nThis would be a great time for another montage. Cut to me explaining my parents' lifestyles and the threat from the LTG. Pan to the computers and screens. Data flashing Matrix style. Marcia and Willy hunched over paper printouts and circling things with a black Sharpie and pointing meaningfully at things and nodding their heads.\n\nBooze flows. Snacks are eaten. Music plays loud and rocking.\n\nFingers type on keyboards. Mice get clicked.\n\nYou get the idea.\n\nDonald, my husband, says to stop writing stuff like this and get back to the story. So, I will.\n\nReally it was kind of boring. Long and winded. In short, we told them everything. They were already my lawyers. We just opened up the kimono all the way. Then they had to absorb all that and come to terms with it. Then the fear of the LTG set in. Then vanished and then reappeared. It was all very emotional.\n\nOh, and Marcia kept staring at Javier. She wanted him so baaaaad. Sadly, Willy wasn't into sharing his girlfriend with another guy. With me, it's just fine. Men can be such hypocrites. What can I say?\n\nI showed some videos of my parents having sex. When mom was eating a beautiful girl out and really going at it, I caught Marcia looking at me in a way I now recognised. I nodded at her, and she grinned like a schoolgirl.\n\nMy new life was so very exciting.\n\nPart Two -- Poolside\n\nAn hour later we were reclining out by the pool. It's a large pool and one of those modern ones with waterfalls, and shallow pools, and recliners that are in the actual water in shallows. You could get around fifty people in that pool swinging cats and not hit one another. Javier kept making the drinks and serving them. He was an exceptional bartender. We were all clothed.",
        "\"Honestly, only you could wear silk all day and look perfectly natural in it,\" intoned Marcia, with a slur to her speech. We were all very inebriated. And horny. Well, I was.\n\n\"You should try it. Javier, honey, are there clothes to fit Marcia in the house? Like mine?\"\n\nJavier smiled. \"Yes. Want me to fetch some?\"\n\n\"Hmm, no. Take her with you. Come back fresh and dressed appropriately. I want some time with Willy here anyway.\"\n\n\"Yes, Angela. Marcia, care to come with me?\"\n\nMarcia looked at Willy, but he was staring at me. She took Javier's offered arm and waltzed off with him.\n\n\"Come sit with me, Willy,\" I asked.\n\nHe moved over and sat next to me on my lounger. He was trying to hide his erection. He had been sporting it for a long time now. I felt bad for him.\n\n\"Put it in my mouth, hon,\" I said. \"Let me relieve that pressure.\"\n\nWilly just stared at me and then looked around the garden and pool.\n\n\"No one will see and if they do, who cares? You've heard what this place is like. Embrace it, Willy. This is your chance to live your dreams.\"\n\nHe shook his head and looked around some more. \"This is... too much, Angela. I don't understand any of this. Or how you can be like this. This isn't you! Are you grieving or something? Does this have to do with your parents? I've never seen you debase yourself like this!\"\n\nAnd just like that my mood was shattered.\n\nI looked at Willy and saw the man I knew in university still sitting there. He hadn't changed at all. He was still the same lawyer. Still the man I dated all those years ago. Here he was, with a sexual menu with everything on it, right in front of him within reach, and he was harbouring issues with it all.\n\n\"What's wrong, Willy?\"\n\n\"William. Stop calling me Willy, that's a boy's name.\"\n\nI blinked at that. He had always been my Willy. Never William.\n\n\"We have full confidentiality, don't we, William?\" I asked after a long reflection.\n\n\"Yes, of course. We have a client-lawyer relationship and all our communication that relates to legal advice is confidential.\"\n\n\"Okay, good. So, I don't need to make you sign an NDA, correct?\"\n\n\"Well, no, actually that is a good legal practice. Even with your lawyer.\"\n\nI looked at him. \"Fine. Draft them up right now and I want them signed.\"\n\nWilly, sorry William, blinked at me. \"Um, okay...\"\n\nI rose and pulled off my robe. \"For you and Marcia. Use the office and printer. Standard clauses. Whatever you feel is appropriate.\"\n\nI pulled off my top, buttons still done up, like a shirt and tossed it aside. The hot summer sun hit my breasts and a revelled in the feeling. My hands on my hips had the waistband of the pants down and pooling at my feet. Four steps and a leap and I was diving into the cool, salt water of the pool. I swam underwater to the far side. I rose up at the far side of the pool and then looked back. William was gone.\n\nHopefully inside writing the NDAs, I thought. I felt saddened. Something that could have been great had just slipped through my fingers. I thought about everything and wondered where I had missed the signs. I would have to be smarter in the future. I needed to be more careful about who I invited into my inner circle of trust. Ex-boyfriends were now off the list.\n\nI swam for a bit, loving the feel of the water on my naked flesh. After all the alcohol the water was taking me back closer to sober. I floated on my back for a time. I was still on my back when Marcia came back with Javier.\n\n\"Nice tits!\" laughed Marcia. \"They are fucking spectacular! Jesus!\"\n\nI grinned and rolled over and spied Marcia just before she hit the water. I had caught only bare flesh. She swam under the water and then broke free right in front of me. She placed her arms alongside both sides of my neck and then kissed me.\n\nI could taste Javier on her lips.\n\n\"Have fun?\" I asked when we broke for air.\n\n\"Oh God, yes. His cock is so huge! So awesome. Thank you, Angela.\"\n\n\"For what?\"\n\n\"For letting me into this life. I'm afraid I will blink or wake up and it will all be gone.\"\n\nI kissed her again. I loved how easy it was. How I had nothing but pleasure from being intimate with another woman. It felt natural. Sexy. Expected. Her wet body pressed against mine and I loved that too. She was all softness and warmth. No hardness. No pawing hands. I felt safe with her. Being sexual and completely safe with someone was new to me. With boyfriends you always wondered even with trust. I know that's a terrible thing to say, and maybe it's just me, but I always wondered about the intentions of the boys I dated. What were they capable of if things went bad between us? Luckily, I never found out.\n\nWith Marcia I simply felt completely equal and fully understood. It was so refreshing.\n\nMarcia looked around. \"Hey, where's William?\"\n\n\"Drafting up NDAs.\"\n\n\"What? For us you mean? You want us to sign NDAs?\"\n\nI nodded not wanting to say more.\n\nMarcia pulled back, enough that we weren't fully touching anymore.\n\n\"Wow. Okay. Legally it makes sense, but wow. What happened?\"\n\n\"William happened.\"\n\nMarcia looked quizzically at me. \"Tell me?\"\n\nI sighed and turned and swam to the side of the pool. I climbed out and sat on the edge. Marcia joined me. I noticed the foot of concrete between us and almost sighed again. \"He questioned my sanity. So, I ordered two NDAs. Mostly for him, but perhaps this is the right thing to do. I have a lot of secrets and people to protect.\"\n\n\"What did he say?\"\n\n\"He said all this wasn't me. Suggested I was grieving my parents. He doesn't see that this is me finally letting my parents go. Me getting past my grieving. I love who I am now. I feel free for the first time in my life. I won't have that questioned by my lawyer.\"\n\nMarcia nodded. \"He was wrong. I can see that. I only met you the other day and already I can see the new improved you. You've blossomed. Come to life, as Javier said. Look, he's over there pretending he can't hear us. He's adorable.\"\n\nI glanced at Javier just as he pulled his shorts off and stood and stretched naked. My God, he's a beautiful man. And that cock...\n\n\"Look at that cock,\" whispered Marcia. \"I swear it passed through me, up through my stomach, and I could taste him on the back of my throat. Jesus.\"\n\nI giggled. \"Yeah. He's awesome.\"\n\n\"You are so fortunate, Angela Bradley. I'm envious of you. Listen. I'll happily sign an NDA or whatever you want, just promise me you won't cut me out of this. I'm in heaven.\"\n\nI looked at her for a long moment then I had this feeling. A sudden intuition or whatever it was. I knew I could trust Marcia. \"How about you come work for me full time?\"\n\n\"Are you serious? I'm a full partner at Wright and Wright. You would have me give that up to come work for you?\"\n\n\"There are benefits.\"\n\n\"Like what?\"\n\nI scooted closer and kissed her. My hand ran down her back and caressed her bottom where it was kissing the concrete under her. My tongue slipped past her lips and teased her tongue. I could taste Javier but mostly I could taste her own sweetness. Her lips pressed against mine and soon we were necking in earnest. Her hands went straight to my tits and squeezed them, and her thumbs found my nipples and teased them. I broke the kiss, but her hands stayed where they were.\n\n\"I've dreamed of touching these. I wanted to so bad when we were with William...\"\n\nI touched her and then we were kissing more.\n\nJavier cannonballed right in front of us drowning us in a deluge of water. We shrieked and jumped in after him. Which led to fun games naked in a swimming pool. I thought for sure water would fill me up, fucking under the water, but I guess human physiology takes that into account...\n\nWhen we emerged from the water, we found three signed copies of William's NDA lying on a table by the pool. I took Marcia's and tore them up. Marcia looked distressed.\n\n\"He's gone, Angela. He's left me, I know it.\"\n\nProbably seeing me eating her out while Javier fucked her doggy-style might have done it, I thought but said nothing.\n\nMarcia looked at me, tears welling in her eyes. \"What am I going to do?\"\n\n\"Move in here. We have lots of bedrooms. Pick one. Close to me.\"\n\nShe looked uncertain. Javier hovered nearby saying nothing. I adored that man.\n\n\"Don't decide right now. Stay for supper. Stay the night. Decide in the morning.\"\n\nShe nodded her head and I stepped forward and embraced her. She didn't cry, I'll give her that. But she held me a long time and didn't want to let go.\n\nLater, Marcia signed as a witness on William's NDA. She said she would notarize them and give her notice at the firm.\n\nWith that it was done, and I had a live-in lawyer. With benefits. I matched her salary when Javier nodded at me. I realised I had to get a better grip on my finances and looked long and hard at Javier. I knew just the man for the job.\n\nLater, the staff were all invited for a pool party and celebration. I introduced Marcia as our new live-in lawyer, told the staff to make use of her, and Hailey surprised me by taking that literally and took Marcia over to a lounger and into a sixty-nine.\n\nMy staff were all present: Michael Fletcher, the head gardener with his wife Caterina Fletcher, who did all the laundry and upkeep--she had even fixed up the damage in the master bedroom. Hailey Rivera, the head housekeeper with her girls, Nura Hughes, Bianca Rose, and Patrici Watson. Scott Stevens, my head chef with his sous-chefs, the twins Kevin and Isabel Russell. And of course, Charlie Smith, the chauffeur, easily the oldest of everyone.\n\nEveryone was naked. Including the twins. I watched them for a time and that feeling came to me again. I was watching something more than brother and sister having fun in the pool playing Marco Polo. Scott sat near me, and my eyes were drawn to his penis, exposed, uncut, and halfway between hard and soft. When he saw me watching it, it grew hard before my eyes. He was a solid six inches, and I watched his foreskin peel back and expose his gorgeous glans. His cock was more than hard. It gleamed with hard, engorged fullness; the veins thick on the side, his balls hanging heavy in a smooth hairless scrotum. I could see a wetness forming at the slit. I took in his gorgeous baldness and goatee and realised he was every girl's dream of a daddy figure.\n\nI put a towel on the pool deck in front of him and went to my knees and sucked him into my mouth. He grew hard immediately, and I popped him free and pressed his hard shaft up against his stomach to reach his glorious balls. He moaned and I felt his hands tentatively touch my head. I wanted him to take charge and when he didn't, I growled and took his hard shaft into my mouth and bobbed hard on it.\n\nI kept at it and then popped his cock free and looked up at him to find him watching me intently. \"Did my dad ever suck you off, Scott? Do I remind you of him? Or my mother?\"\n\nHis eyes went wide.\n\n\"My dad was pretty good at this. I've watched so many videos of him pleasing men. Do I please you?\"\n\nMy mouth circled his cock and I felt it harden even more and knew he was going to cum. He erupted into my waiting mouth and rope after rope flew down my throat. He produced so much cum, and I had trouble swallowing it all. When his cock stopped flexing in my mouth, I pulled it free and licked the tip where cum kept oozing out.\n\n\"That was a lot!\" I said in appreciation. \"So much!\"\n\nScott said nothing and panted.\n\nI rose and kissed him. \"Thank you for the wonderful lunch today. You and your chefs were amazing.\"\n\n\"My pleasure, miss.\"\n\nI tutted and kissed him again. \"Angela. I insist every man who cums down my throat call me Angela.\"\n\nHe nodded and then looked left. I followed his gaze and saw Kevin and his sister standing quite close together, mostly hidden by the side of the pool, and they were watching us. Their hands were below the water, and they weren't touching themselves.\n\n\"Okay, that's new...\" I murmured. Marcia moaned nearby.\n\n<p align=\"center\">* * *</p>\n\nToo much sun and too much booze had us all returning inside to various tasks. Scott promised a steak dinner on the barbecue for early in the evening and I took Marcia up to the master bedroom. I showed her my room and said she could have it and she agreed at once. I was moving into the master bedroom now. It was mine.\n\nMarcia and I showered the salt from the pool off us. It was a lovely shower, with just cleaning and a little kissing and touching. I loved the feel of her hands on me and told her. She confessed that she had been dreaming of being with me since that first day we had met. The threesome with her had driven her crazy knowing I hadn't welcomed her touch. She made up for lost time and we lay in bed afterward, letting the high of the afternoon shrink back to normalcy.\n\n\"I feel sorry for William,\" she said when we were quiet for a long time.\n\n\"Hmm, me too. I guess this life isn't for him,\" I replied.\n\n\"I know right? What man would turn this down?\"\n\n\"He loves you, you know.\"\n\n\"I know. I love him, too. Did you?\"\n\n\"Oh yes. Very much so. But something stopped me from pursuing it. A fear of being a lawyer's wife. Does that make sense?\"\n\n\"God yes. All the lawyers I know, the men? They all have mistresses. Every single one of them. They're never home. Always on the go. And so, they find these mistresses somewhere. Probably at bars. They're always in bars drinking. William would have been the same eventually. And I would have had my own mistress somewhere, right? Another woman. A man maybe? But damn I did love him. Did. Huh. That makes me feel terrible...\"\n\n\"And now you have me and you're part of the staff. So that means you're part of the family here.\"\n\n\"What does that mean, exactly?\"\n\n\"The staff all have sex together. All the time. I only just found out.\"\n\n\"Are you serious?\"\n\n\"My God, didn't you see them all at the pool? Everyone was fucking someone.\"\n\n\"Jesus, Angela! I thought it was all new! That everyone had eaten molly.\"\n\nI tittered imagining my sex crazed staff also on molly. \"No, not new. Just for me. I only had my first lesbian sex yesterday. Or was it the day before?\"\n\n\"Really? With whom?\"\n\n\"Hailey.\"\n\n\"Oh, she's a stunner. That ass. Oh my God. I mean, there I was looking up past her perfect puffy pussy, across her perfect rosebud, and past these two glorious mounds of female flesh. I couldn't keep my hands off them.\"\n\n\"She tastes good, too.\"\n\n\"Yes. She does. Almost as good as you.\"\n\n\"And you.\"\n\nWe grew quiet. We were exhausted. We lay together holding hands and I was at peace.\n\n\"So, what happens next? You have all these clubs all over the world and a criminal cartel hounding you. This is dangerous, Angela. Really dangerous.\"\n\n\"Don't laugh? Okay? I'm still thinking this through...\"\n\n\"Go ahead. I won't laugh.\"\n\n\"I want to turn Bradley Manor into a world-class sex club for elite clientele.\"\n\nMarcia propped herself up on an elbow and looked down at me. I could see the surprise on her face and the disbelief.\n\n\"Are you serious?\"\n\n\"Yeah? I mean, why not? I consolidate all those businesses. Collapse them and let the cartel think I'm out of the business. They take back over. Except, secretly, I will reach out to the existing members and select those I think would make a great fit here. We invite them here to Virginia Beach. Outdoor sex. Live music played by real bands. Famous ones. Make it super classy. Tuxedos. Evening gowns.\"\n\nMarcia flopped back on her back and let out a huge breath of air. \"That's... interesting.\"\n\n\"I'll need a great lawyer. One that can wrap these people into tight NDAs. Make it so they never want to speak a word of this. It'll have to be a massive secret.\"\n\n\"And you'll need a cover. A reason for this club at your manor...\"\n\n\"Oh, that's easy. I'm going to start fighting for women's rights worldwide. I've had enough of men trying to run things and fucking up the lives of women. I'll need to contact some international organisations. Offer my aid. And my money. Do you know anyone?\"\n\nMarcia grinned at me. \"Do I know anyone? Honey, have you met me?\"\n\n\"And what about my previous lawyers. I need to deal with that, still.\"\n\n\"I have some ideas. Leave it with me for now.\"\n\n\"Okay, I will, but soon, okay? I need to get everything back under my control. Meanwhile, wait until you see the list of names I've compiled. All the data was there. I just had to sort it. Make it make sense. I could use a tech guy though. Or tech girl. Woman. Jesus, whatever.\"\n\n\"I know a guy. He went to MIT and topped his class and he barely attended. I represented him a while back when he got into trouble for telling a state government their security was lax on their website. They went after him declaring him a hacker. Remember that governor a while back? He made the news about it. The whole internet laughed at him. The governor, I mean. Anyway, he's really good. Total nerd though. Glasses and everything. Super skinny. Red bull and Doritos. You know the type? If you can't quote something from Star Wars or that Marvel stuff, he won't really talk to you. Total introvert.\"\n\nI immediately liked the guy. Marcia had no idea just how much a geek I was. I asked her to set it up for tomorrow. She rose, left, found her phone by the pool, and by the time she got back she said the guy would be by tomorrow at eleven flying down from Washington, DC. For lunch, she added with a smirk.\n\nI rewarded her by using my mother's strap-on on her. She said I was now a superstar and came wailing like a banshee. It was super fun.\n\nAfter that we slept for an hour. Javier woke us and took us out to the pool just as the sun set. All the staff were there and helped serve and fix the food. I helped as best I could, but it was not my forte. Soon they planted my ass in a seat and took care of me. Each demanded a kiss and I happily obliged. Charlie the chauffeur kissed me the best, surprising me. I touched my lips after and soaked in his sweet smile. I adore my older men. Soon we were all seated and eating rib eye steaks with baked russet potatoes and saut\u00e9ed mushrooms and onions. And red wine. Lots of it.\n\nI had a lot to discuss with my large new family and when everyone was full and relaxed and wine glasses refilled, I clinked my glass and all eyes turned to me.\n\n\"Hi everyone.\"\n\n\"Hi Angela!\" was the responding chorus, followed by laughter.\n\n\"I want to thank everyone for being so kind to me, well for my whole life!\" Everyone laughed and I felt encouraged. \"But now its all changed and for the better. I know you took care to spare me from my parent's lifestyle and that is what they wanted. They were taken too soon, and I've been struggling to catch up with you all. I now see the family my parents built here. It's a beautiful family! And Javier has explained to me that you were all aware of what my parents did outside the manor.\n\n\"I'm here to announce that I will be making a lot of changes!\" My family all looked at one another with worry. \"Good changes. I've decided there is far too much risk with the cartel. My parents fought hard to spread their vision of how life should be. Perhaps they would have been successful, I don't know. What I do know is that I want to keep that lifestyle alive and well.\"\n\nThe faces turned hopeful.\n\n\"I don't have all the details yet. Just a crazy-ass idea right now, but I've been speaking with our new lawyer, Marcia... take a bow Marcia! Okay, showing your tits is a bonus, thanks for that. Well, we've been speaking, and I know now that I need to include you all in those conversations because this affects all of us.\n\n\"First, I'm going to collapse all the swinger clubs in the world. Completely divest. Now, now! I see those looks. Wait for it. Once consolidated I am going to concentrate all that effort right here at the manor. Bradley Manor will become the largest single swinger's club the world has ever seen. Second, I will personally clear all membership. My mom had a gift for that. I think I do too, and I'm going to use that to bring in only the best people, right here.\"",
        "I waited for the murmurs and comments to stop. \"I know this is big. It means this little oasis here will be a den of debauchery. It means constantly providing services twenty-four in seven. Hosting. Serving. Cleaning. All of that.\"\n\nI looked out at a sea of disappointed faces. I had just announced I was killing their dream. \"Third, and this is a big one. You aren't going to be staff anymore. You are going to be partners and help me run this place. What do you say?\"\n\nI was met with stunned silence. It was Hailey who spoke first and raised her hand.\n\n\"Hailey, you don't have to raise your hand...\"\n\nShe looked sheepishly at her hand and lowered it. \"What do you mean partners? What is that?\"\n\n\"It means I will be splitting the controlling stock with all of you. I plan on making this family real. We will all be partners and share in the dream.\"\n\nMarcia leaned forward. \"What she means--and next time talk to your lawyer first--Angela will control fifty-one percent of the business. The remainder will be split up.\"\n\nHailey was still confused and by the looks so were everyone else. \"And our salaries? You mom and dad paid us very, very well.\"\n\nI nodded. \"I'll get to that. I need a financial expert to understand the business like no other. Someone like Javier here...\" I looked at him and he jerked in his seat.\n\n\"Pardon, Angela?\"\n\n\"A promotion, I guess. I want to make you the chief financial officer of Bradley Consulting LLC.\"\n\nJavier nodded in slow motion and sank back in his seat.\n\n\"As for the rest of you, as partners you will receive your same salary but with a split of the profits at year end. Each salary will need to be adjusted to correct for your added responsibilities. Imagine having a staff of housekeepers that you manage and run. They will be yours. Tasked with keeping the rooms cleaned all the time. For our chefs, you will need to manage menus and servers. The new chefs will work for you. The chauffeurs will be increased to allow pick up of elite clientele from the airport or port. Charlie, you will manage all means of transportation including arranging flights for guests.\n\n\"We'll need security people. Better security. Sound and light engineers. The list goes on, but you get it. I am promoting everyone here to be a partner in Bradley Consulting LLC.\"\n\nMarcia stirred. \"You'll need medical people, as well. A way of screening everyone. I mean everyone in here needs to be confirmed clean from STIs. Right?\"\n\nI nodded and hadn't thought of that. \"See? So much to do. And I want you all part of that. My parents would want that. We collapse the business and consolidate here. Perhaps in time we could open a sister location, perhaps on the other side of the world to reduce travel for some. But we try it here.\"\n\n\"Who would come here?\" asked Kevin, sitting with his sister, their thighs touching.\n\nI laughed and named a few people. Everyone whistled. \"And that's not all, folks. We are going to be rubbing shoulders--and other things--with the rich and famous. Imagine a famous rock band playing up on the gazebo! Then fucking the lead singer! There's so much to work on, I don't even know where to start. Okay, that's it. What do you think?\"\n\nThe poolside erupted in cheers and laughter. I had been reading the crowd wrong. I had thought them disappointed. Instead, my dream became theirs and they could see the future being so much better. I saw tears in many eyes, and hugs started, and some kissing.\n\nIt was a wonderful night.\n\nPart Two -- The IT Guy\n\nThe next day I woke hungover in a strange bed. I looked around as my head pounded and saw a bunch of weird music posters of bands I had bever heard of. What is Crywank?\n\nI then felt the bodies next to me and looked over and saw Isabel and Kevin curled up together naked. I had no memory of being with them. I remember someone passing me a joint and then... nothing. Dammit! I secretly hoped I hadn't had sex with the twins, but my sore pussy gave proof to the lie.\n\nI staggered out of there and walked though the staff house. It was huge and gorgeous. I passed family photos of everyone, all grouped together. Everything was shared with everyone. I smiled despite my headache and slightly nauseous guts. I needed to pee and empty my bowels soon and fast.\n\nI hurried out of the house and along the path to the servant's entrance. I was glad those words would be leaving soon. Family entrance, that sounds better. I walked into the kitchen and opened the massive fridge and found individually bottled orange juices. I grabbed one, opened it, and inhaled it.\n\nJust then the front gate buzzer sounded. I groaned, needing to pee, and made my way to the small security booth near the front door and went in and looked at the monitor. An uber ride was parked at the gate and the driver was yelling at the intercom.\n\nI pushed the talk button. \"Yes?\"\n\n\"Finally! I've been here fifteen minutes already! My passenger insists this is the place!\"\n\n\"Who is your passenger?\"\n\n\"He says McLovin.\"\n\nI snorted before I remembered to release the press to talk button. \"Sorry, McLovin? Does he have a first name or is it just McLovin?\"\n\nThe driver's head disappeared inside the car for a moment before re-emerging to glare up at the camera. \"Just McLovin.\"\n\nI laughed and my head pounded harder. \"Geesh. Okay. Ask if he's the guy Marcia sent. Wait what time is it?\"\n\n\"It's 11:30 AM, miss.\"\n\n\"Jesus. Ask him.\"\n\nThe driver spoke to someone and then yelled up at the camera. \"Yeah. Marcia Oliver. He said he's the IT guy.\"\n\n\"Okay, come on in. I'll open the gate.\"\n\nI pressed the gate button and watched the car drive through.\n\nI looked down and saw I was completely naked. Again. Since when did this become normal?\n\nI raced upstairs, found the bathroom, washed up a little, spied Marcia in my bed with Hailey and Javier, threw on some clothes--a Clone Wars tee shirt featuring Ahsoka Tano and spandex boy shorts--and poked Marcia. She grumbled so I shook her. She woke up, bleary-eyed.\n\n\"Wuh?\"\n\n\"McLovin is here. Get up.\"\n\n\"Who?\"\n\n\"McLovin. You'll see. Your nerd is here. It's after 11:30.\"\n\nMarcia woke up then and sat up and looked around at the bodies in my bed. \"Oh my God, that weed was killer.\"\n\n\"Get dressed and kick these guys out gently. I think we may need the office.\"\n\n\"Okay. Okay. Give me ten, okay? Fuck my head hurts. And my pussy. Jesus.\"\n\n\"See you downstairs in ten. Get up!\"\n\nI ran out and reached the front doors just as I heard a soft knock. I laughed to myself. This guy thinks someone would hear that knock in this place?\n\nI swung open one of the doors and spied McLovin. He was wearing black. Everything was black. Black hoody, black cargo shorts, a heavy black backpack, black Converse sneakers, black greasy hair, black rimmed glasses, and a black \"I'm trying to grow a beard, but I simply can't\" scruffy, patchy beard thing.\n\nHe was adorable.\n\nHe gawked at me, his mouth hanging open. His teeth looked white and straight, at least.\n\n\"Hi? McLovin? You old enough to party?\"\n\nHe gawked at me.\n\n\"No one's gotten a hand job in cargo shorts since 'Nam.\" I said, hopeful.\n\n\"Um, hi. Marcia Oliver asked me to come round. I'm supposed to meet with the owner?\"\n\nHs voice was nasal and a little high-pitched. He sounded sixteen.\n\n\"How old are you?\"\n\n\"Twenty.\"\n\n\"And you graduated from MIT?\"\n\n\"Yeah, two years ago.\"\n\n\"At eighteen?\"\n\n\"Seventeen, actually, my birthday is in June.\"\n\n\"Cool. I was about to graduate from GMU this year. Just finishing my masters.\"\n\n\"In what?\"\n\n\"Business and math.\"\n\n\"Math? You?\"\n\n\"Why don't I look like a math genius?\"\n\n\"No. You look like a hooker.\"\n\nI looked down at myself. Fuck, I kind of did. So much for first impressions. \"Fair. I'm the owner, Angela Bradley.\"\n\n\"You're the owner?\"\n\n\"Yes. And who are you? You haven't told me your name.\"\n\n\"Clark Kent.\"\n\n\"Ah superman, try again.\"\n\n\"Peter Parker.\"\n\n\"Right, tiger. Try again.\"\n\n\"Finn.\"\n\n\"Hi, I'm Princess Bubblegum.\"\n\nThe boy--man?--grinned. \"William Adama.\"\n\n\"Kara 'Starbuck' Thrace.\"\n\n\"That series ended really bad.\"\n\n\"I know right? How to fuck up some of the best television ever.\"\n\n\"Did you see the ending of Lost?\"\n\n\"Yeah, I actually liked it.\"\n\nThe guy made a face. \"Fuck, one of those.\"\n\nI stood there staring at him. \"So?\"\n\nHe stuck out his hand and I took it and he let go immediately. \"Alfred. Alfred Taylor.\"\n\n\"Come on in, Alfie. You and I are going to get along famously. I can tell.\"\n\nAn hour later we sat in the kitchen eating cheeseburgers with steak fries that Kevin had just 'whipped' up. He makes the best cheeseburger ever and the way Alfred devoured it made Kevin happy.\n\nI offered him a beer, but he declined and took a Coke instead. I joined him. We ate and then I took him out to the poolside and sat in the shade at a table off to the side.\n\n\"So, tell me a bit about yourself, Alfie.\"\n\nHe looked around. \"You own this whole place?\"\n\n\"Yeah.\"\n\n\"And you have staff...\"\n\n\"Yeah.\"\n\n\"Where's Marcia?\"\n\n\"She's upstairs in my bedroom getting freshened up. She'll be down in a minute. I'll be honest, we partied and celebrated pretty hard last night, and everyone is either out of it or hungover.\"\n\n\"What were you celebrating?\"\n\n\"A new partnership. Everyone was pretty pleased.\"\n\n\"Oh, cool. I... I like your shirt.\"\n\nI looked down at my tee shirt and saw my nipples were on display under the thin fabric. But I was pretty sure it was Ahsoka he was interested in. Sorta sure. \"Thanks. Ahsoka is awesome. I can't wait to see who she becomes. You know with Anakin and everything. I'm worried she goes down the dark side.\"\n\nWe then started a full-on conversation about Star Wars. I loved it. The last time I had someone to speak to about stuff like this was with my dad. I missed him so much. I had that feeling again. It washed over me and confirmed to me that Alfred was a keeper. He just didn't know it yet and I grinned at him as he went on to talk about the latest episode of Clone Wars and how he loved Boba Fett and Aurra Sing. I told him that Mace Windu would be a bigger role, I was sure of it. This led to us talking about the Star Wars video game called Star Wars: The Force Unleashed. I had only finished half of it so far, but Alfred had completed it all and loved it.\n\nMarcia crept up on us while we were talking. \"Oh my God, Angela. I had no idea you were a closet geek!\"\n\nI frowned. \"I'm not in any closet, Marcia. I'm a geek and proud! Right Alfie?\"\n\nHe grinned at me and we high-fived, mostly missing our hands.\n\nMarcia kissed me like a lover does and I loved it. When I looked over, Alfie was awestruck and looking everywhere but at us. He was me only a few weeks ago. It felt like years. Marcia sat next to me and took my hand.\n\n\"Good to see you again, Alfred. I'm glad we stayed in touch.\"\n\n\"Yeah,\" he mumbled, and he was back in his shell. Marcia felt the shift and looked to me.\n\n\"Alfie, do you want to go swimming?\" I asked knowing he would say no immediately.\n\n\"No. I don't swim. I mean, I can swim, I just don't like it.\"\n\n\"Okay, maybe later. You ready to talk? Hear what we have to say?\"\n\nHe nodded and looked out over the garden.\n\n\"I need an IT specialist working here at Bradley Manor full time. You would be brought in under Bradley Consulting LLC as a partner and work on sorting out everyone's social presence and start going through a lot of data I have on a lot of really bad and some really nice people. It's a lot of work. You would live here. Eat here. Free room and board. And work. For me.\"\n\n\"What kind of bad people?\"\n\n\"The Large Triangle Group is pissed at me. I need them off my back and focused elsewhere. Plus, there are a lot of good people out there. I need to know more and how to approach them. I need intel. This is some serious Jedi skills I need, Alfie. I'm not gonna lie. You'll be extremely well paid and there's a bonus.\"\n\n\"Bonus?\"\n\n\"Yeah, you get to try and kick the ass of a hot chick who can easily beat your ass in video games.\"\n\nHis eyes lit up at that. I had a feeling sex was far off for this young man. He was clueless. A virgin I think, and I had to take things slow with him or he would bolt like a deer.\n\n\"I also need this place better wired. There are dozens of fibre optic lines providing closed circuit monitoring of this place. I need it better. More automated. I'll be bringing in a security team as well, I'll want you to perhaps lead that group. That'll depend on many factors. We are a family here, Alfie. We are all very close. I'd like to try you out for a bit and see if it works. If it does, Alfie, you're gonna love it here. I promise I will keep you safe and warm here. You'll be free to explore whatever your heart desires, and more, perhaps. Time will tell. So, for now, say yes, spend a week here. Get to know the place. If you don't like it, leave. No questions asked. Just an NDA. You understand?\"\n\nJust then Hailey, Nura, and Patrici wandered out, and failed to notice us sitting in the shade off to the side. They approached the pool, stripped off their clothes, and jumped in and splashed around.\n\nI looked at Alfie and saw him staring at the exposed breasts, ass, and pussy. \"Don't worry if you don't have many clothes. They're kind of optional around here these days.\"\n\nAlfie looked at me with an expression somewhere between hope, fear, and lust. \"Okay.\"\n\n\"Relax for a couple of days, okay? Then we'll talk business. I need to get a better feel for you, okay? I need a lot of trust. This is important work, okay?\"\n\nAlfie nodded; his eyes glued to the nakedness not far from him.\n\nI looked at Marcia and she grinned at me.\n\n<p align=\"center\">* * *</p>\n\nThat evening, Scott kept his promise and made a reservation at Il Giardino's ristorante on Atlantic Avenue in Virginia Beach. It was a busy place known for its exceptional menu. Charlie drove me, Scott, Marcia, Kevin, and Isabel in dad's old 1960 Lincoln Continental convertible. It was a very tight fit and so Isabel sat on her brother's lap, and although there was room, Marcia sat in Scott's lap. Me? I sat up front and found a classic rock radio station we could all sing to.\n\nWhen we arrived, there was much laughter as we all spilled out of the vehicle. People stopped and stared because we were dressed to kill. I wore a gorgeous black cocktail dress with five-inch heels I had found in my mother's collection. Marcia wore much the same except red in colour. Isabel even tried dressing up, but her tattoos and piercings made her look punk, and it was hot.\n\nThe men wore nice slacks with open collared shirts. Us girls had undone their top three buttons. I gave Charlie a quick kiss and he said he would remain downtown and for us to call him when we were ready to return home.\n\nAs soon as we stepped inside, by-passing the line of patrons waiting to get inside, we were met by the new chef. Scott embraced him and kissed both his cheeks and turned and introduced us.\n\n\"Everyone, this is Vaneet Bahir, my former apprentice. Vaneet, please meet Angela, Marcia, Kevin, and Isabel. Kevin and Isabel are my sous-chefs at Bradley Manor. Angela owns Bradley Manor where I work. Thank you so much for accommodating us at such short notice.\"\n\nWe all shook hands and kissed cheeks, and I took a long look at Vaneet. He was Indian by ethnicity, but he said he was born in London to English parents. Italian food was his speciality and Giardino's had managed to wrest him across the Atlantic to join them. He was fit and full of life and I liked him immediately. I couldn't help but notice the long looks he took of me when he thought no one noticed. It thrilled me.\n\nVaneet escorted us through the restaurant, all the tables full of guests laughing and drinking and devouring beautiful food. He stopped at a few tables and shook hands and we trailed behind him drawing stares from the other patrons wondering who we were to receive special attention from the star chef. I felt like a celebrity and held my clutch tight with excitement. In moments, we were placed inside a private dining room and Vaneet apologised and left us to find our seats.\n\nIt was a cosy room, lit by candles and dimmed lights. Chianti bottles festooned the mantlepiece and a low gas fire burned in the hearth. The art and d\u00e9cor were tasteful, and I felt immediately at peace. My stomach grumbled and Marcia laughed and rubbed my belly.\n\nNo sooner had we seated ourselves then servers poured in and started filling champagne flutes with Louis Roederer Cristal champagne. Vaneet returned with his own glass and seated himself in the spare chair, left vacant closest to the door to the room. He raised his glass and toasted us.\n\n\"To new friends. I hope this meal meets your expectations. I have prepared it specially for Scott, my mentor, my friend, and my confidant. Scott, I am forever in your debt. I am so pleased to be in the same city as you. It is why I accepted this position. It warms my heart to see you again.\"\n\nI looked at Scott and saw the expression that crossed his face. Everyone missed it except me and Vaneet. It was a look of adoration and my heart fluttered. These two men adored each other. A smile crept up my face and I vowed to do something about that.\n\nWhat followed was a decadent display of culinary delights. Each dish was paired with exquisite wines and spirits. Vaneet, according to Scott, had outdone himself. We especially enjoyed the discussions between the chefs, and I realised early on that Kevin and Isabel were exceptional chefs in their own right. This pleased Vaneet and Scott beamed in pride and praise. I learned more about cooking techniques and the subtle flavours of ingredients than I ever knew existed over the two hours.\n\nWith the meal finished, we did our best to finish the drinks. Small expressos appeared and helped dull the light-headedness of alcohol. I was warm and felt sexy and watched the interactions around the table. Everyone was happy and smiling and I felt a warm glow inside me.\n\nI found it hard to believe that my life had changed so much for the better. I could feel the respect and admiration in the room. These people were fast becoming my good friends, and more.\n\nDrunk and laughing, we left Vaneet after thanking his servers and the chefs. I made them promise to come visit Bradley Manor soon and they agreed with excited looks. They had seen just how friendly we were with each other. The touches, the kisses, the looks between us. It was electric and magical and contagious. Who wouldn't want to be part of that? I thought, and my mind spun with the possibilities.\n\n<p align=\"center\">* * *</p>\n\nA week later, Alfie was fitting in nicely. We all watched how we were around him and tamed everything down. He lived on cheeseburgers. It was pretty much all he wanted. And cokes. Javier took one look at him and slowly started working his own magic on the young man. He took him shopping for new black clothes, but at least they were more stylish.\n\nI played him at video games a lot. I beat him regularly and he kept trying harder. I slowly started wearing slightly more revealing clothes and one day I was playing with nothing more than a sleeveless shirt and my spandex boy shorts. We were sitting on the floor in front of the large screen television in the master bedroom. We had chairs but the floor was better. The remains of cheeseburgers and fries lay next to us with a half-dozen empty cans of coke.\n\nWe were pretty engaged in the video game and sitting close to one another when, impossibly, he beat me. Faking rage I pounced on him and started tickling him. In moments, he froze, and I looked down and saw my breasts had completely come out from the sleeveless shirt.\n\n\"Oops. Sorry about that,\" I said sitting on his hips and gazing down at him on his back. I didn't try to cover up. I gazed down at him with bedroom eyes.",
        "He stared up at me, his eyes roving over my breasts and soaking the image in. \"You're so impossibly beautiful. It's inconceivable.\"\n\n\"You keep using that word. I do not think it means what you think it means...\"\n\nHe failed to get the line and now I knew he was lost.\n\n\"Go ahead. Touch them. I want you to. Please?\"\n\nHe stared at me, waiting for the joke to land, for me to make fun of him. Truth was, Javier had cleaned him up. Had him shave, then cut his hair, he wore comfortable and quality clothing. He had deep blue eyes I really liked. He was sweet and cute and adorable. I was so ready to fuck him. Problem was, he wasn't. He didn't think he was worthy or some bullshit.\n\n\"Go ahead. Give them a good squeeze.\" I wanted to grab his hands but felt any sudden move would ruin this. It had taken me a week to get this far.\n\nHis hands rose and he brushed my breasts with the lightest of touches. It felt so good, and my nipples tightened painfully. He watched them in awe.\n\n\"They are super sensitive. Touch the nipples. Go ahead. Please?\"\n\nHe reached up again and touched a fingertip to a nipple. I could barely feel the touch.\n\n\"Harder. Cup them and squeeze them. Please? Like this...\" and I demonstrated. Squeezing them tight and pinching my nipples. I felt my pussy grow warm. I could feel his erection forming under my ass but resisted squirming although I wanted to grind him.\n\nHe reached up and bravely did as I had shown him. His mouth opened in awe as he watched himself play with my pendulous breasts.\n\n\"You're really cute, Alfie. I like you. A lot. You're fun to be with. You get all my jokes. We can do more if you want. I'm ready to be with you if you are.\"\n\nHe looked at me incredulously. And then he nodded, a look of awe and fear plastered on his face. Right then I wanted him more than anything. With his hands on my breasts--I doubted he would ever let them go now--I leaned down and kissed him softly on the mouth.\n\nHe had no idea what to do so I talked him through it. Softly and gently, I encouraged him and guided him. He was shaking hard. I took it very slow. I kissed his mouth, his face, his neck, and ears. I held his face and gently put my tongue in his mouth. He had no idea what to do or what was expected of him.\n\nAfter thirty minutes I swung off him and saw the look of disappointment that flashed across his eyes. \"I'm not done with you yet, Alfie. I'll be honest with you, okay?\" I pulled the hair out of my eyes and looked down at him. \"I've wanted you inside me since we met. Is it okay if we do that? You and me?\"\n\nHe nodded.\n\n\"Will I be your first, Alfie? It's okay if I am. I'll take it slow. Make it memorable. Is that okay?\"\n\nHe nodded and then shook his head. \"Not my first.\"\n\nI smiled down at him. \"Oh good! Who was your first, hon? How was it?\"\n\n\"It was terrible. I didn't want it. She... she made me.\"\n\nI was horrified. \"What? Someone made you have sex? Where? When was this?\"\n\n\"My last year at MIT... a professor...\"\n\n\"You were seventeen?\"\n\nHe nodded.\n\n\"We can stop here, honey. I would never force you. You have to want this as much as me. Okay?\"\n\n\"I... I do want this. Jesus, you're like a supermodel or something. No one is that gorgeous! I mean, look at you!\"\n\n\"Oh, honey. That's sweet. But so are you! Gorgeous! Those blue eyes! I adore them. But honey, you have to understand. We won't be boyfriend or girlfriend, okay? Just really good friends who like to fool around. And I mentioned a bonus before, remember that?\"\n\nHe nodded.\n\n\"Honey, everyone in this house has sex with one another. All the time. We've been hiding it since you've been here but my partners--the staff here?--they want to go back to the way it was before. Remember the ladies going skinny dipping? Honey, that's all the time here. You okay with that?\"\n\nHe nodded more vigorously.\n\n\"This professor? Did you turn her in?\"\n\nHe shook his head and I leaned down and kissed him again. He was starting to respond a little and moved the tiniest bit.\n\n\"Why not?\"\n\n\"Men don't report that. I would have been laughed at. No one would believe it...\"\n\nI understood and felt such sorrow for young Alfie.\n\n\"Honey, I'm going to take your pants off and suck your dick until you cum in my mouth, would that be okay?\"\n\nHe hesitated to search my face and then nodded almost imperceptibly.\n\n\"You might not last long, but that's okay. That's why I'm going to blow you first, so you get it out of the way. That way when you fuck me, you'll last longer. Okay?\"\n\nHis eyes went round.\n\n\"Ready?\"\n\nHe nodded.\n\nI slowly and gently removed his pants and his boxer shorts revealing an average penis straining hard and rising straight up. A little over five inches, circumcised, normal sized balls and scrotum, and hair everywhere. This young man needed some manscaping. Pre-cum was leaking everywhere. I looked at his cock and saw some abrasions.\n\n\"Baby, you need to stop jerking off so much. Next time, come see me, and I'll help you, okay?\"\n\nHe nodded and I took him in my mouth. All the way to the base in one practiced move, my tongue swirling. He exploded inside my mouth just like I knew he would. I took it all and swallowed. When he was done, I pulled him out of my mouth, keeping a vacuum until he popped free.\n\n\"Alfie, that was delicious. Thank you. I needed that. Now I can either fuck you or teach you how to eat pussy. What'll it be?\"\n\n\"P-pussy...?\"\n\nI squealed. \"That's the right answer! Always please your lady. Do that and she'll be yours. Honey, come up on the bed. Let me teach you everything! Then later you can have Hailey, or Nura, she likes you by the way, like a lot a lot. Or Patrici. She's hot, too. Or maybe two at once. Come on!\"\n\nBy the end of the second week, Alfie was known to wander the house looking for a willing partner. He was like a drug addict. He could cum over and over and was always looking for his next cum shot release. His stamina was improving, but mostly the women in the house wanted to know his limit and they tested it. The record so far was eight shots in one day. Javier was concerned with his mental health. I knew he was doing better than all right. Alfie was fast becoming a man and a truly good one at that. It only takes a household of insatiable sex hungry women to fix the most unconfident man around.\n\nWhen I finally explained to him what I wanted to do with the manor he was all in. Willing and eager. He became the next member of the family and a partner. He slept with Nura most nights. They were always together it seemed. His first threesome was with me and her. He only had eyes for her, and she noticed. I think she may have fell in love with him in that moment.\n\nThe other strange thing that occurred was when I wasn't satisfying young Alfie, which seemed like all the time, it was Marcia who never left my side. She had dumped William and cried in my arms afterward. We talked non-stop about everything and while it wasn't love for me--and I don't think it was for her either--it was something we both needed.\n\n<p align=\"center\">* * *</p>\n\nThe night I showed Alfie the office and the data was the night everything started to really click. I showed him the thumb drives and we spent some moments going through the data. We were sitting there just kind of hanging out and sifting through gigs of data when I mentioned my parents had been swingers and had made countless videos and that they had all been stolen by the LTG. I showed him the footage of the burglary and he was appalled at the lax security.\n\nAlfie took my mom's laptop and looked it over. Then he grinned at me and showed me a folder called Videos. He clicked on it and showed me all the files. I recognised them and chastised myself for not exploring my mother's laptop more. My mom had copied all her videos over to digital. I was so happy!\n\nI selected a video at random and opened it. The screens in the office lit up and my mom's smiling face peered out, really close up.\n\n\"Hey! Albert and I met the cutest guy today. A geeky guy just like our Angel. Albert was like 'maybe this will be like fucking Angela!' I never laughed so hard. Anyway, here he is!\" Alfie and I exchanged a look.\n\nMom swivelled the camera around and there was dad sucking a young man, no older than Alfie.\n\nAlfie freaked. \"Jesus Christ!\"\n\n\"Yeah, that's my dad and mom. They were swingers. Loved sex. You know that. We explained all the swinging clubs. Did you think I was making it up?\"\n\n\"No. But hearing something and seeing something are two different things, aren't they?\"\n\nMom had set the camera down and entered the scene by starting to lick the young man's balls.\n\n\"Your mom looks exactly like you. Its remarkable. You could be twins!\"\n\nI was watching Alfie. With the video so large on all the screens I could see where he was looking. He was looking at my dad sucking cock. I checked out his groin and sure enough Alfie had a woody.\n\nI reached over and pulled it out. We had moved to this level of intimacy. He had fucked every woman in the house at this point. He listened while they talked to each other about him. His confidence was growing. He was a patient and passionate lover. He had been trained by the best.\n\nI slowly jerked him while watching the video.\n\n\"My dad is really good at that. Look at him go! He takes it all the way in, like I do. Can you imagine him sucking your cock?\"\n\nAlfie shook his head. My hand job turned slick as precum boiled out of him.\n\n\"I bet if you asked Javier or Kevin, they could help you explore that. Its okay, you know. This house has no limits. Love is love, honey. Most of the women here, actually all of the women here, would love to watch you being blown by one of the men. I know I would. I...\"\n\nAlfie erupted. I should have watched more closely. His cum shot high and seemed to go everywhere all at once. He moaned deep and a truly impressive amount of cum appeared. His perfectly average cock and balls could produce some truly monumental volumes of cum. It was a wonder that no one in the house understood.\n\nAlfie apologised and we cleaned up. I hugged him and kissed him.\n\n\"You want to. I know you do, Alfie. I know more than most people what people truly want. Let me arrange it, okay? Who do you want to be your first?\"\n\n\"Ah, Kevin?\"\n\n\"Cool. He'll like that. I promise. His sister has been saying things...\"\n\n\"Are they doing it? They're brother and sister. Twins!\"\n\n\"I don't know, honey. Not for sure but I think I know the answer, but I don't confront it, ya know?\"\n\nHe nodded.\n\nI looked at his cock and he was still rock hard. I slipped off my shorts and mounted him on the chair. He slipped in like an old friend and we made love in the office. I kissed him throughout and he came after a lovely long five minutes, which is good for him. I had almost cum. He was getting better, and I said so. I cleaned him up with my mouth and he finally deflated.\n\nThen I showed him all my data and the four subsets I had created. I explained each one and what they represented.\n\n\"What criteria did you use to separate the data into those subsets?\"\n\n\"Intuition mostly.\"\n\n\"Intuition? Seriously? What is this some Jedi power you have?\"\n\n\"Fuck, I don't know.\"\n\nHe grinned at me. \"I like it when you swear. It means you're relaxed.\"\n\n\"I am relaxed. I have a load of your cum inside me. Marcia loves that. Says it makes her feel womanlier.\"\n\n\"This place is crazy, you know that, right? I keep waiting for the hammer to drop. A bunch of cameras and the 'gotcha sucka!'. Please don't let this end...\"\n\nI leaned in and whispered in his ear. \"Hon, my intuition says you aren't going anywhere. You're family now and always will be.\"\n\nAlfie sniffed and looked away before getting serious and hunkering down with the data. After a time, he looked at one of the thumb drives.\n\n\"There's a little number on each of them. Looks sequential. They mean anything to you?\"\n\nI smiled and went to the safe, opened it, and pulled out the ledgers. We compared the two and suddenly to Alfie the ledgers made much more sense. Names missing from the thumb drives were identified in the ledger. I had figured it out a long time ago. I was pleased Alfie did it so quickly.\n\nAlfie was gawking at the names in the lists. \"These are A-listers and politicians! Sports stars! Rock stars! Jesus, Angie, this is amazing.\"\n\nI took his head and made him look at me. \"You just called me Angie.\" I kissed him. \"Don't ever stop, okay?\"\n\nHe nodded, looked at me weird, and resumed his dialogue. He went on for a long time. Saying every name that wowed him. I was watching him. Only William had called me Angie. I didn't know I missed it until I heard it again. It sounded better coming from Alfie. I adored the kid.\n\nA little while later, I was almost asleep by this point, Alfie roused me by tweaking a nipple. I loved his new confidence, but damn, he was growing up fast.\n\n\"Angie, look at this. This is your parent's lawyers' firm, no?\"\n\nI looked and said yes.\n\n\"As they said, your mom and dad were looking into them. Look at all this. Phone taps. Video. Surveillance. They had someone watching them. Says here your mom and dad were going to break from them.\"\n\nI sat up and paid attention. \"Can we see why?\"\n\n\"Says they were embezzling from the company. A lot of money. Falsified forms.\"\n\n\"Jesus. Go get Javier. Right now.\"\n\nMoments later Javier walked in and sat down. We showed him the data and he blanched. I had a moment of clarity and opened up the message from my parents I hadn't finished. I was supposed to go fuck Javier and come back. I hadn't and I had forgotten.\n\nI pressed play.\n\nDad nodded and grinned out of the screen at me. I had seen this part already. He was talking about Javier. \"He's really good, Angel. Let him pleasure you. The whole family is there for you at Bradley Manor. Indulge. Everything is safe there. Trust me.\" He winked at me. \"So, stop this here and come back with Javier. First thing we are going to do is ask you if you fucked yet. You might as well get it out of the way. Javier has wanted to fuck you since you turned eighteen, Angel. Go. Have fun, then come back and continue. Take a break, love.\"\n\nDad stared at the camera for a long moment, blinking.\n\nMom spoke off camera. \"Think she did it?\"\n\n\"Our daughter? Of course, she did.\"\n\n\"Are you actually waiting for her to come back?\"\n\n\"Oh fuck, right. Hi hon! Welcome back! So? Javier and Angel. How was it? Pretty good I bet.\" Dad chuckled. \"That's great and I wish everyone there all the best. But now some bad stuff. Our lawyers are milking us. Your mom says someone outside her has influenced them. Turned them. Probably the LTG. If we haven't already fired their asses, you need to as soon as possible before they get their hooks into the business. I wanted Javier here because he needs to pull that string your mom mentioned to him once. Javier, pull the string.\"\n\nMom's laughing face appeared in front of the camera. \"Pull the string Javier! It's time!\"\n\nMom's face left and dad looked out all very serious. \"Okay. Go do that. From this point forward your mom and I want to share some things with you honey. And only you. Stop the video here and kick everyone out. Time for us to speak as adults about our lifestyle and what worked and what didn't. We don't want you repeating our mistakes. We were too big, too spread out. We pissed people off without knowing it. We should have stayed small. Stop here and then we'll talk, okay, Angel?\"\n\nI stopped the video and looked at Javier. He had his phone out and was texting a number. He pressed send.\n\n\"Who are you texting?\" I asked.\n\n\"Another lawyer. Practices in international law. Her name is Imani Jones. She knew your mother. As your mom said, I just pulled the string. She'll come running as soon as she can. She owes your mother big time. She'll probably bring her friend, Shanti Patel. She's a...\" Javier grinned at some inside joke in his head. \"She's a bodyguard.\"\n\nPart Two -- Bradley Manor Renovations\n\nDonald just reminded me that I have more to tell in this tale and I should probably start wrapping this part up. Yes, I'm married now. Didn't I mention this story was like ten years ago? I have a wonderful husband, a former Canadian named Donald, and I have a wife called Kelly, right from here in Virginia. I adore Canadians now. They're all like what Americans should be like. I swear they're more American than Americans. Anyway, it was reading Donald's story that made me want to write my story. I hope you like it so far.\n\nDonald stole my heart so quickly. I finally found someone like my mom had. Now I can't tell where I end, and he starts. And Kelly? She's a little wild. And so stunningly sexy all the time. I can't tell where I end and she starts, most of the time. But that's another story: Donald's story, and he tells it so well and I love reading the events from his point of view.\n\nBut I think you all just want to see where this part of the tale ends, am I right?\n\nA lot happened relatively quickly. Javier hired more staff. He would find people that seemed right and invite them over for an interview. I would meet with them. Talk a little and either nod or shake my head at Javier. I know you probably think this is bullshit but honestly, you ever get that sense about someone? That little voice that either warns you or says this is a nice person? My little voice is LOUD. And it's an all over my body kind of sensation. So far, it hasn't failed me.\n\nThe staff doubled. We had several cleaning staff and cooks lined up and hired. We also hired a fellow named Billy Barker and his team of construction people. Billy looked like your typical beefy construction worker and all the ladies at Bradley Manor found reasons to be near him to watch him work.\n\nWe hired a construction team because there were going to be a lot of renovations. We needed private rooms for guests, with full amenities. Specialised rooms for more interesting sexual activities. The garden needed lounging areas, with more privacy. The kitchen needed to be able to continually produce food and serve it quickly and efficiently. Essentially the manor was turning into a swanky hotel.\n\nThe first order of business was to convert my master bedroom over to a fully functional condo. And that meant expanding the rooms to allow my family to all move in from the servant house. In time the noise in the manor was deafening. Saws and hammers and who knew what else filled the house. Alfie was working with the new security team to better situate the cameras and the security of the grounds. Motion sensors were ordered, and infrared cameras mounted on the roof. He insisted on a cell phone blocker as well, saying we didn't want anyone to stream anything out of this place. Bradley Manor was going to be declared off the grid for guests.\n\nSpeaking of Alfie, he and Kevin were absolutely enjoying themselves. When I asked, they gave Marcia and I a demonstration. Live sex is so stimulating. And male-on-male sex is every girl's fantasy. So. Fucking. Hot. Alfie finally took my ass and my God he was excellent at it. Marcia lined her ass up beside me, and then so did Kevin, and Alfie fucked all our asses, switching from person to person. Alfie was turning in a skinny, nerdy, fuck master. I adore that kid. He has such a soft touch. Men need to learn from that. And he could fuck the daylight out of me too when asked. He was my little prodigy.\n\nLife at the manor was chaotic but exciting. Most nights, with the manor in shambles, the family gathered in my master bedroom, and we watched movies. Sometimes porn, and then it was often the videos of my mom and dad. We swapped partners and made love until we fell asleep exhausted. My house within a house was our safe place. Our sanctuary from the outside world.\n\nThat's when Imani Jones and Shanti Patel showed up and sorted out the last pieces of the puzzle. A puzzle I didn't even know I had.",
        "<p align=\"center\">* * *</p>\n\n\"They'll be here in an hour?\" I said to Javier. I held up the paint and fabric swatches for him to see just how busy I was. \"I'm kind of busy right now. Couldn't we get more warning?\"\n\nJavier shook his head. \"This is more warning than we usually get from them, trust me. Usually, they just show up. I get it. It's frustrating. They'll travelled a long way. From London. Just to meet with you.\"\n\n\"Hmm,\" I said and put one swatch in the 'maybe' pile. I looked over at one of the new little privacy gazebos on the back lawn and saw Billy Barker drilling Caterina Fletcher from behind. She was also blowing her husband. The little gazebo wasn't private enough and I made a mental note. \"Are they aware of the lifestyle here, Javier? I'm so tired of hiding it from people...\"\n\n\"I know, Angie. There are too many strangers wandering around. That will calm down. We are only six months from opening and I have started putting out the invitations exactly as you requested. Marcia has the old lawyers backed into a corner, but we need something more. Clout. This will take years in the courts to resolve if we don't find a faster way out of this. And you still have to close out the other clubs. But as to the lifestyle, you know they were good friends of your mom and dad?\"\n\nI had sold the club here in Virginia. It had been the only one I hadn't signed over to the lawyers. The mayor of the city had stopped by to thank me for cleaning up Virginia Beach. It had been hard not to laugh. He had no idea.\n\n\"Yes, I know. Describe them to me, will you? Again?\"\n\nJavier laughed and sat next to me. \"Imani Jones. She's thirty-two, and never married. Her parents and her brother, Akin, were Nigerian refugees into England. She was born a couple of years later. It was a hard life for them, but better than where they came from. Growing up it was just the four of them. A very close family. Then the father was killed by a bus. Then the mother was arrested for stealing, trying to feed her family. Then she arrested again for stealing food from the freezer of the house she cleaned. Then arrested again for stealing money somewhere. They locked her up then. Took her children away, they were only eight and six. Two Nigerian children in London. It was not good, but they managed. Her brother and her clung to each other. Depended on each other.\n\n\"Imani never forgot how her mother had been treated by the court system. She started reading law and then grew to love it. She paid for law school as a prostitute. She fucked men and women to make a better life for herself and her brother. She's managed. She was picked up by EDM Cessna, a prominent international law firm, foremost because she's black. She knew that but didn't care. It set her on the path she's on now. She's formidable and the world is only just starting to get to know her. She's worked some pretty intense legal battles. She always wins.\n\n\"Shanti Patel's story is unknown. She says nothing about it. Imani knows though and has told us to never ask. She's UK military, I'm certain of that. Indian ancestry. Strong as an ox and built like stone. She's pretty intense. She sees everything around her. Its uncanny, really. Hates men. Loves women. She's always working with Imani, it seems. Your mom seemed to think they are both part of some international effort. She didn't know more.\"\n\nI set down a fabric I didn't like. \"And why do we need to pull this string?\"\n\n\"Because this is too large for us to handle, Angie. This is the LTG, and your lawyers are caught up with them. Probably. If so, we need to sever that and make them think we just want out. Imani has the clout and experience to do that.\"\n\n\"And so why Shanti?\"\n\n\"Because sometimes Imani doesn't succeed the way she wants. That's where Shanti comes in.\"\n\n\"God, you make her sound like a hitman!\"\n\n\"Maybe she is...\"\n\n\"Javier!\"\n\n\"I'm kidding...\"\n\nI looked at him and could see he wasn't kidding. \"Javier, no one can get hurt. Ever. That's not who I am, and I won't start this with anger or pain or worse. We need to grow this from compassion and love.\"\n\n\"I know, Angie. I know. Just meet with them. Your mom trusted them, so you should too, right?\"\n\nI nodded.\n\nWe watched Alfie exit the manor texting on his phone and head toward the old servant house.\n\nJavier sighed. \"I think Alfie is becoming homosexual.\"\n\nI laughed. \"No. Far from it. He's as bi-sexual as they come. I think he just prefers men over women. His sex drive is off the charts, Javier. The women can't keep up with him. Kevin and him, they just fuck and get it out of their system. It's fine. Trust me.\"\n\nJavier kissed me then. \"I do. Just like your mother. Watching you come alive? That was the most pleasurable thing I have seen. Thank you.\"\n\nI kissed him back. I loved the touch of his beard on my face. It tickled. I adored this man. \"Thank you, Javier. You saved me; you know.\"\n\nHe nodded and got up and left. He was immediately replaced by Charlie. He sat next to me and gave me a kiss. \"Hi Charlie.\"\n\n\"Hi Angie. Alfie said I need to go pick up this new lawyer?\"\n\n\"Yeah, Imani Jones and her bodyguard person called Shanti Patel.\"\n\n\"Tall skinny black woman and a short stocky Indian woman, that right?\"\n\n\"Yup.\"\n\n\"Okay, I'm gonna leave now. Traffic will be bad on a Saturday.\"\n\n\"Okay, Charlie. Drive safe and hurry back.\"\n\n\"You got it sweet cheeks...\"\n\n\"Sweet cheeks?\"\n\n\"No?\"\n\n\"No.\"\n\n\"Sorry.\"\n\nI laughed as he scooted away, and I sat in peace, the swatches forgotten. The weekends were quiet after all the racket of construction all week. I wondered, not for the first time or the last time, whether I was doing the right thing. My family all thought it was perfect, but I had my doubts. What would I become? A Madame? Should I make everything like a boudoir? Wear slutty clothes? How would this all work?\n\nI was starting to get nervous and doubted every decision I had made so far. I had finished watching the video my parents made for me. The discussed what had worked and what had not when they had started the business. So far, without knowing it, I had skated around the bigger pitfalls. It helped that I had a team working with me. My parents had done it alone. I couldn't imagine that and was always thankful for my new family and their trust and love.\n\nI know this is going to sound trite, but I was actually feeling a little lonely. I didn't have that one special person in my life. Marcia was close, but she wanted something else and hadn't figured it out yet. She was happy here, but as for being a lawyer she really wasn't doing that much that I could see that was challenging her. I was worried she felt she had made the wrong decision. She had been a top-notch trial lawyer.\n\nMaybe I just need to get away for a little while.\n\nI then thought of all the clubs all over the world that I owned. That my parents' former lawyers thought they owned.\n\nPerhaps I need to visit them first before I shut them down.\n\nI grinned and then gasped when the perfect fabric caught my eye.\n\nEnd of Part Two\n\nThe Cast (sorted by first names just to make this list practically useless)\n\nAkin Jones -- Brother to Imani Jones, lives in London\n\nAlbert Bradley -- Father of Angela, deceased\n\nAlfred \"Alfie\" Taylor -- IT specialist at Bradley Manor\n\nAngela Carmen Bradley -- The protagonist, 22 years old, drop dead gorgeous\n\nBianca Rose -- Housekeeper of Bradley Manor\n\nBilly Barker -- Construction foreman, hired by Bradley Consulting, LLC\n\nCaterina Fletcher -- Laundry maid of Bradley Manor, married to Michael Fletcher\n\nCharlie Smith -- Chauffer of Bradley Manor\n\nChristopher Cox -- CEO of Bradley Consulting, LLC\n\nDavid Wright -- Owner of Wright and Wright Law Firm, father of William Wright, hospitalised with Alzheimer's\n\nDerek Burns -- Friend of Margie and Albert. Ran the Touch of Class swinger's club in Virginia Beach, deceased\n\nHailey Rivera -- Head housekeeper of Bradley Manor\n\nImani Jones -- Personal assistant to Angela, lawyer, Nigerian refugee, English, sister to Akin Jones, lives in London\n\nIsabel Russell -- Sous-chef of Bradley Manor, older sister to Kevin Russell\n\nJavier Taylor -- Estate steward of Bradley Manor\n\nKevin Russell -- Sous-chef of Bradley Manor, brother to Isabel Russell\n\nMarcia Oliver -- Lawyer for Angela, full partner in Wright and Wright Law Firm, girlfriend to William Wright\n\nMargaret \"Margie\" Bradley (nee Cooper) -- Mother of Angela, deceased\n\nMichael Fletcher - Head gardener of Bradley Manor, married to Caterina Fletcher\n\nNura Hughes -- Housekeeper of Bradley Manor\n\nPatrici Watson -- Housemaid of Bradley Manor\n\nScott Stevens -- Head chef of Bradley Manor\n\nShanti Patel -- Friend of Imani Jones, SAS military, bodybuilder, lives in London\n\nVaneet Bahir -- British chef at an Italian restaurant in Virginia Beach, former apprentice of Scott Stevens.\n\nWilliam \"Willy\" Wright -- Former boyfriend of Angela, owner of Wright and Wright Law Firm, former boyfriend of Marcia Oliver\n\nAuthor's Closing Comments:\n\nSpiralling down, down, down the rabbit hole... I hope you are enjoying the ride! I truly enjoyed bringing back Imani Jones and Shanti Patel. You have no idea.\n\nIf you can, please rate and comment! I read all comments and take them seriously--except plaintive spelling and grammar people. Shudder. I imagine these poor people, freshly masturbated cock in hand, cum on the floor or in a sock (do men really do that?), panting after sexual release, and thinking \"if only the author had used proper language and grammar, then I would have really cum hard...\" Heh!\n\nThat's just how my mind works.\n\nNext comes those people who read my warnings about lots of anal play and gay sex, and then give me one star, and then comment \"too much anal and I hate that, so one star for you! Take that...\" I mentally add in a \"you skank\" (I'm the skank in case that's not clear) at the end of those comments just to get their anger truly across. Hee!\n\nMyself? I am MUCH more concerned about continuity than anything else. If you find something not quite right, please DM me.\n\nOh, one last thing. I had someone email me with a request to write them a story tailored to their liking. While I would have normally been pleased to comply, I realised I had no way of ascertaining the age of the requestor. And I was never going to ask for verification, feeling it would cross a pretty bold line. My apologies.\n\nAngela Carmen Bradley will return in Debauchery, Part Three!\n\nLana Ocean\n\nDecember 2021\n\nAll rights reserved. Copyright \u00a9 2021 Lana Ocean"
    ],
    "authorname": "Estcher",
    "tags": [
        "homosexual",
        "swingers",
        "hedonism",
        "lesbian",
        "group sex",
        "intrigue",
        "virginia",
        "debauchery",
        "implied incest"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/debauchery-pt-02"
}