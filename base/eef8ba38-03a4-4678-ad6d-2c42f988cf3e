{
    "title": "The Journey Ch. 03",
    "pages": [
        "Hello friend, and welcome to Chapter Three of my series, The Journey.\n\nIf you haven't read Chapters One and Two, I need to know: what is your beef with continuity? Did you watch Endgame without watching Infinity War first? You ought not do that sort of thing. It'll hurt and confuse your brain, and I don't want that for you.\n\nContent warning: this story contains discussions of racism. If that's not your thing, feel free to skip this. I won't be offended, and you won't have to read something that's not your jam or might be upsetting to you! Thanks!\n\nTHE JOURNEY, PART 3\n\nSo many nights, my tears fell harder than rain, scared I would take my broken heart to the grave\n\n~~ NOVA Community College, Alexandria Campus, October ~~\n\nCindy was back on her bullshit again.\n\nI'd arrived at class ten minutes late because it was forty-five degrees, pouring rain, and I'd forgotten my umbrella. I'd waited in the lobby of the engineering building after my Calc class for the downpour to let up, before finally giving up and sprinting across the parking lot, then snuck into class, trying to be invisible. Dr. May noticed, but didn't call me out, which I was thankful for. I spread my wet coat out on the empty seat next to me to dry and pulled my laptop out of my backpack.\n\nShe'd posted the grades for the midterm papers on Blackboard, and I was hoping to get to class early to talk to her about mine. I was disappointed to have gotten a B minus. She'd dinged me on my citations too. I still didn't get the whole 'AP format' I was supposed to use, it was so dumb. I didn't understand why my citations had to be exactly a certain way, and the free online word processor I used wouldn't do it for me. I'd had other students tell me that Word would manage my citations for me, but I didn't want to drop a hundred bucks for a word processing program I didn't know that I'd ever use again.\n\nI also needed to get her approval for my final paper topic. I had an idea of what I wanted to do, but I wanted to talk to her about it in person, not via email. Maybe I could catch her after class.\n\nSo far this semester, we'd made our way through the sixties and the Civil Rights Act, the seventies and eighties, the Rodney King incident and the L.A. race riots. Tonight, we were discussing historical disadvantages of practices that were outlawed by the Civil Right Act but which were still having lasting impacts on minority communities.\n\n\"But you just said, redlining was outlawed in sixty-four,\" Cindy said, \"I understand that those neighborhoods can still be bad, but people can just move to a better neighborhood now.\"\n\n\"If they could afford to,\" Jeremy said from the middle row.\n\n\"That goes for anyone though, not just minorities. People have to pull themselves up by their bootstraps.\" Cindy was so fucking smug sometimes. I had no idea why she'd chosen this class, all she wanted to do was argue. Maybe she took it because it was all that was left open when she enrolled, like me. Maybe she was an Internet troll brought to life.\n\n\"Here's some homework for everyone,\" Dr. May said. \"When you get home tonight, lay down on the floor, then grab your shoes and try to pull yourself to your feet. It's not actually possible. It's an expression that people say, but never examine.\"\n\n\"I just mean that people have to work hard to make it,\" Cindy said defensively.\n\n\"I know. And I agree. But working hard isn't the only ingredient for success. Sometimes it's not even the most important ingredient. You need a support system. Both familial and societal. Which brings us back to the original point about the generational wealth gap,\" Dr. May said. She'd used notes on her legal pad in our first class, but since then she'd had her laptop on the podium every session, connected to a projector over the white board. She used it now to bring up an image.\n\n\"This is from a study by the Brookings Institute showing the rates of both black and white families accumulating wealth from nineteen-eighty-nine to two-thousand-sixteen.\" The chart showed a steadily rising line for white families and a more or less flat line for black families. \"The median wealth, not income, wealth, of a white family in the U.S. is one-hundred-forty-seven-thousand dollars. The median wealth of a black family is thirty-six-hundred dollars. What might be an explanation for this?\" She looked around the class. When no one raised their hand, Dr. May liked to just stand there, waiting, a little enigmatic smile on her face, until someone had the courage to give an answer. Finally, one of the black students in the class spoke up.\n\n\"Whites soldiers coming back after World War Two had the VA loan program, so they could buy homes and start building wealth, while we got pushed into redlined neighborhoods that banks wouldn't give mortgages on.\"\n\n\"Thank you, Sam, I knew someone had done the reading,\" she said with a smile.\n\nI'd done the reading and had known the answer too, but I almost never spoke up unless she called on me.\n\n\"So, white families had the opportunity to purchase houses, build equity, pass that equity down to the next generation, who could then use it to build more equity and pass that down, and so on. Meanwhile, families of color in redlined neighborhoods could only rent, usually dilapidated properties in areas of high crime and were denied the opportunity to build and pass down generational wealth.\"\n\n\"But redlining was outlawed sixty years ago,\" Cindy protested again, \"Why should we do anything about it now?\"\n\nI snorted with derision, then immediately regretted it as Dr. May looked my way. Fuck. This was the third time this semester I'd let myself react to Cindy's nonsense, leading Dr. May to call on me.\n\n\"What's your take on the subject, Miss Esparza?\" Dr. May asked me.\n\nI thought about what to say. There were all kinds of arguments one could make, from simply acknowledging the injustice of it, to talking about the Fair Housing Act, to discussing Ta-Nehisi Coates' reparations essay. But for some reason, a quote came into my mind. Not from the assigned reading. It was something I'd come across while researching my first term paper. It had impressed me enough that I'd googled the quote and found a video of the original source on YouTube, a grainy black and white film of a tall, thin black man in glasses, impeccably dressed in a suit and skinny black tie, talking to a reporter. I hoped I could get it mostly right.\n\n\"'If you stick a knife in my back nine inches and pull it out six inches, that's not progress. If you pull it all the way out, that's not progress. Progress is healing the wound. The knife's still in, and some people won't even admit that there's a knife.' That's about my take.\"\n\nI heard Sam mutter, \"Oh snap!\", while Cindy's face turned red. Dr. May's eyebrows rose a fraction of an inch.\n\n\"Malcolm X, very nice,\" she said with a smile.\n\nThe discussion continued without me getting called on again for the rest of class. As usual, a handful of students milled around Dr. May up at the front, and as usual I wasn't interested in getting in the crush of people to wait my turn. I packed up my stuff and headed for the bus stop.\n\nIt was still raining outside; my coat was still damp from my earlier run across campus and I still didn't have my umbrella. I heaved a sigh, went over to the trash cans next to the doors and rummaged around inside. I found a couple of plastic grocery bags, which had clearly been used to carry some students' lunches. Turning them inside out to keep my stuff clean, I wrapped my laptop and books inside them, then stuffed the now hopefully somewhat waterproof package back into my backpack.\n\nI took my jacket off, held it over my head and trudged out to the bus stop. Like I'd imagined earlier in the semester, the sun was a memory, having set while we were in class. With the rain, it was close to pitch black out by the street, the lone street light over the bus stop struggling, but mostly failing, to banish the rainy gloom. I hoped the bus would get here quick. Just as the thought passed through my head, a car flashed by on the street and threw up a wave of water, soaking my pants and boots from the knees down.\n\nFuck.\n\nI stood there waiting, getting more and more soaked. I couldn't believe the stop outside the school was one of the few in the county that didn't have a shelter for people waiting for the bus.\n\nI may have to bite the bullet and start looking for a used car, I thought, not for the first time. Trouble was, I didn't have much to spare, helping out Abuela the way I was, and sending money back to mam\u00e1 and my cousins, in Mexico.\n\nI suppose I could always move back in with her. I sighed at the thought.\n\nAs another car approached, I squinted against the glare of the high beams and stepped back into the soggy grass to avoid another splashing. Right before it passed, the car, a dark Ford Escape, sharply braked and pulled over to the curb. The passenger window rolled down and Dr. May leaned over and yelled at me from the driver's seat.\n\n\"Vivian! What are you doing standing in the rain?\"\n\n\"Waiting for the bus.\" I thought that was kind of obvious, but I tried not to sound sarcastic.\n\n\"It's pouring, get in!\"\n\n\"Thanks, but I don't want to get your seats all wet.\"\n\n\"Get in, before you drown!\" she insisted as she reached over and pushed the passenger door open.\n\nI looked down the dark street and saw no sign of the bus. Why not?\n\nI slid into the seat, dropping my backpack and coat on the floor between my feet with a splat.\n\n\"Thanks,\" I said, rubbing a hand over my scalp to squeegee the water out of my hair. A cold rivulet ran down the back of my shirt and I shivered.\n\n\"Here,\" she turned the heater on full blast and angled the vents towards me. \"I'm sorry I don't have a towel or a blanket or anything.\"\n\n\"I'm okay, thanks.\"\n\n\"You sure?\"\n\n\"Yeah, I just want to get home and get a hot shower.\"\u2028\n\n\"Where's home?\" She put the car in gear and started slowly driving.\n\n\"You can drop me at the metro. Either Pentagon City or Van Dorn, whichever is on your way home.\"\n\n\"Where do you live?\"\n\n\"Springfield.\"\n\n\"I can drop you off then, I'm headed that way.\" She turned onto route seven towards I-395.\n\n\"Are you sure?\"\n\n\"Absolutely. Can't have one of my star pupils catching pneumonia.\"\n\nI snorted. \"Right, a B-minus paper doesn't make me any kind of star.\"\n\n\"I judge my stars by their potential.\"\n\nI didn't know what to say to that. \"Well, uh, thanks.\"\n\n\"You're welcome. So how are you enjoying my class?\"\n\n\"More than I thought I would.\" She looked over at me with an amused grin, then back at the road and I felt a flush of embarrassment. \"I didn't mean... it's not that I thought your class would be boring. I just... this is my first semester of college. I kind of thought it would be, you know, too much for me. That I wouldn't be able to hack it.\"\n\n\"Well, I can't speak to the rest of your courses, but you're doing just fine in my class.\"\n\n\"Am I? I mean, I just missed getting a C on one of only two graded papers. And I know class discussion is part of the grade and I'm not very good at that.\"\n\n\"You are, actually. You don't say much, but when I do call on you, your answers are always insightful.\"\n\n\"But I hardly talk in class.\"\n\n\"Quality over quantity, Vivian. At least that's how I see it. I have students who try and dominate the conversation but rarely provide any value to the discussion, who are clearly just talking to try to pump up their grade.\"\n\n\"Huh. Like Cindy?\"\n\n\"Cindy is actually a valuable part of the class.\"\n\nI couldn't help it, I laughed. She didn't. \"Wait, you're serious?\"\n\n\"I don't think Cindy is necessarily malicious or bigoted. A lot of what she's saying is probably just what she's heard from her family and friends growing up her whole life. And Cindy raising those viewpoints gives me a chance to lead the class in examining those viewpoints, to discuss their merit and the underlying assumptions they are based on. And maybe, by examining them with us, Cindy and others will come around to examine their own points of view.\"\n\n\"Huh. Well you're a lot more patient with her bullshit than I am.\"\n\n\"It's not B.S. It's just her viewpoint. Which do you think you'd get more out of? A class where I present one point of view, and then the entire class nods and we move on? Or a class where multiple viewpoints are discussed and debated? When Cindy argues her points, then Sam comes back with a different point of view, then Jeremy with another, do you think the class will get more or less information? If you have conflicting information, you have to think about it, to decide for yourself which viewpoint has the most merit. Or if none of the opinions have merit. Or if all of them do.\"\n\n\"Huh. Hadn't thought of it that way. Calculus is just 'here's the problem, here's the technique to solve it, show me that you can do it'. So, you don't want that. You want us to think about all the historical shit you've told us about and then come up with our own opinion?\"\n\n\"Right. That's why you got a B minus, by the way. Your research on the Fair Housing Act was excellent, but you didn't do much in the way of analysis, expressing your own value judgement on the information you presented. I'm not looking for a regurgitation of facts. I'm looking for evidence you're thinking about what you're presenting and the conclusions you draw from that. And the comments you make in class show you're doing that, at least in your head.\"\n\n\"Huh.\" I thought about that for a bit, then looked down the road. \"That's my exit there.\"\n\nShe pulled off the highway and I guided her through the side streets towards my apartment. I had my usual urge to direct her to the nice apartments I used to decoy the last date who'd driven me home, but it was still raining and there's no way I'd make it through the mud field between it and where I really lived. I was kind of embarrassed to let Dr. May see my run-down apartment, but there was nothing for it as she pulled up to my building and parked.\n\n\"Thanks for the ride,\" I said, noting the time on her dashboard clock. \"I'm home about thirty minutes earlier than usual. And a lot drier than I'd be otherwise.\"\n\n\"If you'd like, I can give you a ride home again next week.\"\n\n\"Oh, thanks for the offer, but I don't want to be a pain.\"\n\n\"It's not a pain. It was nice to have someone to talk to instead of talking to myself.\"\n\nI grinned, imagining that Dr. May's conversations she had with herself were twice as interesting as anything I'd have to say. But still, man, that would save me a ton of commute time.\n\n\"I mean... if you're sure it's no trouble.\"\n\n\"No trouble at all. We can discuss your final paper topic on the ride next week if you like.\"\n\nHoly shit, that would be great! \"Uh, yeah okay. Thanks.\" I picked up my backpack and coat.\n\n\"No worries. I enjoyed talking to you tonight. You should speak up more in class. Don't be so bashful.\"\n\n\"I'll try.\"\n\n\"Good night, Vivian.\"\n\nUsually when someone insisted on calling me Vivian, after I'd told them to call me Viv, I could get pretty mad. For some reason, it didn't bother me with her. It made me feel... grown up.\n\nWhich is fucking ridiculous.\n\n\"Night, Dr. May.\"\n\nAs I reached for the door handle, she chuckled.\n\n\"Please call me Jane outside of class. Dr. May makes me feel a lot older than twenty-eight.\"\n\n\"Uh, okay. Thanks... Jane. Night.\"\n\nI ran for my door. Dr. May waited until I was under the cover of the stairwell to back out of her parking space. I stared after her.\n\nTwenty-eight? She had a PhD and was a year younger than me? And here I am, a first-year freshman.\n\n\"Fuckin' hell,\" I said as I watched her taillights disappear into the rain.\n\n~~ Chasing Tail, Arlington, VA, November ~~\n\n\"Nice to finally meet you!\" Mindy said, giving me a kiss on the cheek. She pulled out the one empty chair next to her at the bar-height table where she and her friends were sitting.\n\n'You too.\" I said, trying to sound enthusiastic.\n\nI had been talking to Mindy on the Her app for three or four weeks. We'd been wanting to meet, and this was the first Saturday night I'd had free since we'd matched. She had a nine-to-five job and wasn't much for going out on weekdays. I thought she might be right up my alley, though. She was on the femme side, long dark hair, dark eyes, wearing jeans and a tight, white v-neck t-shirt. Yummy.\n\nUnfortunately, she'd already had plans with friends but she invited me to meet her at the bar. I wasn't a huge fan of the place, but I managed to keep from referring to it as the Lesbian Applebee's when she asked me out. I also wasn't a huge fan of meeting a match for the first time with a group of their friends around either. It made me feel like an animal at a zoo, being examined by a group of school kids.\n\n\"This is my crew, that's Dee and Deborah,\" she said as I sat down, gesturing to a pair of women who were obviously a couple, \"We call them Double D, but no boob jokes please. And this is my friend Connie.\" I shook hands all around.\n\n\"Nice to meet all of you. What are we drinking?\" Three of the girls, including Mindy, were drinking orange concoctions in martini glasses.\n\n\"Pumpkin martinis,\" Dee and Deborah said in unison, then laughed.\n\n\"Froo-froo garbage,\" said Connie, then sipped at her own glass. Some kind of whiskey on the rocks it looked like.\n\nThe waitress appeared at my elbow. \"Hi, can I get you something?\"\n\nI fumbled with the drink menu on the table. \"Uh, not that pumpkin thing,\" I said, earning me a grin from Connie. Ironically, it was exactly the kind of drink I'd send to a girl if I were trying to pick her up, but I'd moved to harder stuff for myself in recent years. \"Uh... let me have... holy shit! You guys are carrying the Patr\u00f3n Estate Reserve?\"\n\n\"Yeah, we just got it last month,\" said the waitress, her pen tapping on her pad.\n\n\"I'll have that.\"\n\n\"Like, in a margarita or--\"\n\n\"Oh, fuck no, that'd be a waste! Straight up, with a lime wedge.\"\n\n\"You got it.\" She disappeared towards the bar.\n\n\"Tequila shots, eh? Might be my lucky night!\" Mindy joked.\n\nI chuckled and winked at her. \"This isn't a 'shot,\" I said, making air quotes with my fingers, \"This is sipping tequila, the good stuff.\"\n\n\"Damn right, don't waste the good stuff with mixers,\" Connie chimed in. I gave her a second look. Not my type. She was as butch as I was. She had a pile of dirty blonde dreadlocks, gathered into a leather tie that made them stick out like a brush from the back of her head. Nothing like Addison's almost waist length dreadlocks... well, before she'd cut them off in a fit of depression over her doctor chick. Connie's were short, maybe ten inches long. She was wearing a t-shirt that had a stylized silhouette of two nude women standing with their arms around each other that said Two great tastes, that taste great together underneath.\n\nI liked her snark, but I didn't do butch. I was the butch one when it came to a hook up. Besides, I was here to see Mindy.\n\nThe waitress brought my drink and before I could reach for it, Connie reached over, picked it up and took a sniff, before setting it back down in front of me.\n\n\"Damn, that smells good. Bring me one of those next time you come by.\" The waitress nodded and left us.\n\n\"You're gonna mix whiskey and tequila? Ouch!\" I said.\n\n\"Fear is for the weak.\"\n\nThat earned a belly laugh from me, which I quickly squelched as I noticed Mindy was looking between the two of us, a hint of jealousy on her face. I rested my arm across the back of her stool and she leaned against me.\n\n\"I'm glad we could finally meet. Thanks for being understanding about my friends being here,\" she said quietly to me.",
        "\"Worth it,\" I replied with a grin.\n\nThe next couple hours passed quickly, talking, laughing and drinking. I decided I really liked Mindy. She was pretty funny. And hot.\n\nThe two D's were nice. One of them worked with Mindy in an office, the other was a high-school teacher. Connie was a project manager for a software development company. I pretended I understood what that meant. The whole time Mindy kept scooting her chair closer and closer to me. By the time our third round arrived, her hand had taken up residence on my thigh under the table.\n\nI was pretty excited about the possibility of going home with her, but also it was nice to hang out with a group of women, having a good time. My circle of friends had narrowed in recent years. Dramatically, in fact, to more or less my bowling team. And now I'd given up my place with them in order to go to school.\n\nBut I was certainly having fun tonight. During our third round Connie started a lesbian joke-off. \"It's so expensive being a lesbian. We're always eating out.\"\n\n\"Hear about the new lesbian sneaker they came out with? It has an extra-long tongue and only takes one finger to get off,\" Dee said, cracking us up.\n\n\"You know why I can't diet when I get dressed up for the office?\" offered Mindy. \"Because it's hard to eat Jenny Craig when I've got Mary Kay on my face.\"\n\n\"We've been wanting to get a double-ended dildo,\" said Deborah, \"but money's so tight right now, we can't make ends meet.\"\n\n\"What do you call a lesbian with long fingers? Well hung,\" I offered.\n\nI felt Mindy grip my hand under the table. \"Your fingers seem pretty long to me,\" she whispered in my ear. I smiled and squeezed her thigh as I drained my glass.\n\n\"You want to get out of here?\" I ask her, \"We could share an Uber.\"\n\n\"Yes, please.\"\n\n\"Sounds good. You want to order it while I hit the head?\"\n\nWhile I was washing my hands, Connie came into the bathroom.\n\n\"You guys heading out, huh?\"\n\n\"Yeah. I never asked, how do you know Mindy?\"\n\nShe grinned sheepishly, \"We hooked up on Tinder a few years ago. The sex was good, but we didn't click romantically and we somehow ended up becoming friends.\"\n\n\"Not sure I've ever been friends with a hookup afterwards before.\"\n\n\"It was pretty awkward at first.\"\n\n\"I bet.\"\n\n\"Anyhow, I came in here because I wanted to give you this.\" She pulled a cardboard beer coaster out of her pocket and handed it to me. I saw there was a phone number written on the back.\n\n\"Uh...\"\n\n\"Don't worry, I'm not hitting on you behind my friend's back.\"\n\n\"Good. Because I can be a shit, but I'm not sure I'm that big of a shit.\"\n\n\"I wouldn't hit on you anyway, we're obviously both tops. It'd be closer to a UFC fight than sex. I just think you're funny, and you have good taste in booze. If you ever want to go drinking sometime, shoot me a text. Strictly platonic. Maybe we could wingman while hunting girly chicks.\"\n\nThis might have been one of the weirdest offers I'd gotten during a meet-up, and not even coming from the girl I was here to meet.\n\n\"I'll keep it in mind. It was nice to meet you.\" I stuck the coaster in my pocket and headed for the door.\n\n\"Hey, be careful not to let Mindy hurt you.\"\n\nI paused, my hand on the door. \"What?\"\n\n\"She got out of a pretty serious relationship about four months ago and she's been doing a string of hook-ups. Haven't seen her do more than a second date with anyone in a while.\"\n\nI eyed her for a long moment, a feeling of disappointment in the pit of my stomach. I had really grown to like Mindy over the course of the evening. And she didn't seem... out of my league. \"I appreciate the heads up.\"\n\n\"Make sure you pull her hair.\"\n\n\"What?\"\n\n\"You heard me,\" she said with a smirk, \"Trust me, you'll know when.\" She went into a stall and closed the door behind her.\n\nDefinitely the weirdest thing that's ever happened to me during a meet-up.\n\nMindy and I settled our bill, said our good nights to Double D and met our \u00dcber out front. As soon as the door closed, she was practically in my lap, much to the obvious amusement of our driver, who not so subtly adjusted his rear-view mirror more than once.\n\nWe kissed a little, but I wasn't one for giving a dude a show. It took maybe ten minutes to get to her apartment.\n\n\"Want to come up?\" she asked a little breathlessly. \"Or you can have Mr. Eyes up there take you home.\" The driver cleared his throat in embarrassment.\n\nI didn't answer. Instead I opened the door and got out, holding out my hand to help her out of the car.\n\nAs soon as the door of her apartment closed behind us, Mindy dropped her bag on the floor. I started to follow her, but she put her fingers on my chest and pressed me back against the door.\n\n\"Stay there.\"\n\n\"Okay.\"\n\nShe kicked off her shoes and walked to the other side of the small living room to stand in front of her couch, turned to face me and pulled her shirt over her head. Then she put her hands on her hips and looked at me with a little smile.\n\n\"Keep going,\" I said.\n\nHer smile grew wider and her white satin bra followed. Her boobs were really nice.\n\n\"You're not done.\" I leaned back against the door and reached down to pull off my Doc Martens.\n\nShe unbuttoned her jeans and shimmied them down her legs. The lace string of her thong caught on one side and half pulled the hip down as she did. She stepped out of her jeans, then pulled the sides up with a thumb hooked into each string, tightly framing the vee of her legs in white lace for my viewing pleasure.\n\n\"Keep going.\"\n\n\"You want me naked when you're still fully dressed?\" she said with an impish smile.\n\n\"I think that's what you want.\" I growled.\n\nHer mouth opened with a tiny gasp of anticipation, as she turned away from me and slowly slid her panties down to her knees, bending over at the waist as she did. I could see she was freshly shaved, not the tiniest trace of stubble. Yum.\n\nI pulled my own shirt over my head as I walked towards her. She started to straighten up, but I put my hand on her back and pressed her forward. She put her hands on the couch to keep her balance.\n\n\"I want to put my face... right... here.\" I said, as I knelt behind her, leaned forward and ran my tongue between her lips.\n\nShe gasped, \"Yes!\"\n\nI licked her with gusto, and soon there were rivulets of moisture running down the inside of her thighs. She started to straighten up and again, I pressed my hand on her back pushing her face towards the cushions. I brought my other hand up and slid two fingers inside her. She widened her stance and moaned loudly.\n\n\"God yes!\"\n\nI knelt lower so I could keep a steady rhythm with my tongue on her clit, while I fucked her with my hand. It didn't take long.\n\n\"Oh, Jesus! Oh yes! Yes! YES!\"\n\nHer knees trembled as she came and she spread her feet out wider to keep from falling, stretching her panties until I heard the sounds of fabric ready to tear.\n\nI stood and pulled her upright, turning her around to kiss her. She wrapped her arms around me, her hands running over the stubble on the back of my head.\n\n\"Bedroom! Now!\" she moaned into my mouth.\n\n\"Lead the way.\"\n\nShe stepped the rest of the way out of her thong, leaving it on the floor then she took my hand and led us into her bedroom. She made a bee line directly for her bedside table, rummaged in a drawer and pulled out a thick, fluorescent pink dildo and harness.\n\nHell yeah, I thought to myself.\n\n\"You need to be more naked now,\" she said, as she started tugging on my jeans. I pulled my sports bra over my head while she worked my pants and boxer-briefs down my legs. In moments I was naked as she was, and she knelt down in front of me to hold open the harness while I stepped into it. She stayed on her knees, tightening the straps around my hips, then she looked up at me as she took the end of the silicone cock into her mouth, coating the end with her saliva.\n\nFuck yes, this girl is my kind of freak.\n\nI pulled her to her feet and roughly shoved her onto her back onto the bed. She winced as I guided the fat head into her, so I took it easy at first, giving her short, slow strokes, letting her body accept it at her own pace. As I slid deeper and deeper into her, I leaned down, so that our faces got closer on each thrust. I finally sank completely into her and she wrapped her legs around me as we kissed.\n\nShe held me tightly to her, one hand around my back and the other stroking the back of my head, as I rocked my hips, thrusting in and out of her. Her breathing grew quick and shallow. I leaned away so I could get my hand in between our bodies to rub her clit, but she grabbed my wrist.\n\n\"No,\" she said, pushing at me.\n\n\"No?\"\n\n\"Get off.\" She pushed me harder and the dildo pulled out of her with an obscene slurping sound. She quickly flipped over, getting on her knees and arching her butt in the air, her face pressed into the mattress.\n\n\"Great ass!\" I said, giving it a sharp smack with my palm. She moaned as I took the head of the dildo and slid it in. Gripping her hips with both hands, I started roughly thrusting into her, my hips smacking into her ass with meaty slaps.\n\nMindy was making guttural grunts and moans as I ran one hand over the muscles of her back. As my hand slid up between her shoulder blades, she raised up on her arms and tilted her head back towards me.\n\nI recalled what Connie had told me and grabbed a thick handful of Mindy's hair, pulling hard, making her back arch even more.\n\n\"Yes!\" she cried out. I quickened my pace, watching the delicious jiggles my pounding was sending rippling through her ass as I pounded into her.\n\n\"Fuck! Fuck yes! Yes! Pull harder! Fuck...\" After several minutes of fucking her, she held her breath for a moment, then her legs started shaking. \"Yes! Yes, oh fuck yes! Goddamn, I'm coming! I'm c-o-m-i-i-i-n-n-n-g-g-g!\"\n\nI hoped her apartment walls weren't too thin or her neighbors would be getting an earful. Not that I cared. She collapsed onto the bed, and pulled away from me. The dildo slid out of her as she did, a long string of sticky fluid stretching out between the tip and her pussy then breaking off to fall onto her leg with a soft splat.\n\n\"Fuck yes, that was good,\" she moaned as she rolled onto her side.\n\nI climbed up onto the bed on my knees, gripped her leg and lifted it, exposing her to me again.\n\n\"Good, I'm glad you liked round one. Get ready for round two,\" I said as I shuffled forward to straddle her leg, wrapping her other knee around the side of my waist. I reached down and guided the head of the silicone cock back inside her.\n\nShe looked up at me with pleased surprise and lust as I started fucking her again.\n\n~~ Alexandria, Virginia, November ~~\n\n\"Expecting a call?\" Jane asked as I looked at my phone for the fourth time since we had gotten in her car.\n\n\"No, just waiting for a text.\"\n\nThis was the fourth week of Jane giving me a ride home after class. The amount of time and hassle she was saving me was worth the price of the class. Plus, we'd had some really interesting conversations.\n\n\"I really appreciate that I've never once seen you look at your phone during class. You're one of the few.\"\n\n\"I mean... if you're paying money to take a class, seems like you should pay attention.\"\n\n\"You'd be surprised how many people can't help themselves.\"\n\n\"It's a federal crime to be on your phone while driving a Metro train. That's good practice for being able to put your phone away. I always turn mine off when I'm driving. I just turn it on to check my texts and messages at the turnaround at either end of my runs.\"\n\n\"Really? I didn't know that.\"\n\n\"Yeah. I was involved in a crash a few years back. I always suspected the other guy was on his phone but they could never prove it.\"\n\n\"A Metro crash? When was this?\"\n\n\"Do you remember about three years ago, there was a train waiting outside McPherson Square and another train rear-ended it?\"\n\n\"Oh god, yes. I was on the Red Line up in North East when that happened and it was backed up for an hour. I finally got off and took a bus.\"\n\n\"I was driving the train that got rear-ended.\"\n\nI looked at my phone again. Nothing. I'd called Mindy after class while Dr. May packed up. I'd been trying to set up another time for us to meet during our class break. She hadn't answered so I'd left a voicemail. She'd been kinda quiet on our texts since our date. I knew Connie had said she was just into hookups right now but I really was hoping she liked me as much as I thought I might like her.\n\n\"Oh my god, were you hurt?\" Jane sounded shocked.\n\n\"Not really. He wasn't going too fast. No one died. I think only a dozen or so people went to the hospital.\"\n\n\"Still, that's terrible.\"\n\n\"I was a little spooked driving for the next couple months, but now I hardly ever think about it.\"\n\nWell, except for the fact I ended up being treated by Addison's doctor chick. I think about that all the time. I reached up and touched the scar on my forehead, then quickly dropped my hand back into my lap as soon as I realized what I was doing.\n\nJane pulled off I-95 and started winding through the streets of Springfield towards my apartment. By now she knew the way without me giving her directions.\n\n\"Oh, I forgot to tell you, I read your outline again for your final paper and I only had a couple comments. I'll put them in Blackboard for you tomorrow.\"\n\nI had decided I wanted to look at the social phenomenon of different races \"passing\" as white. Interestingly, I'd gotten the idea because I knew from experience that some people would assume I was white by my looks without much effort on my part. Then while I sitting in class not long after Whitey-McWhiteBread had punched me in my bar fight, I'd had the thought that while I could pass if I wanted to, Dr. May... Jane... probably would never be able to. Not that she ever would choose to. She was an incredibly proud woman, and the tawny color of her hair and her light brown eyes were so striking. But it wasn't something that would even be an option for her.\n\nThere's a good example of privilege, I thought. I wouldn't want her to try anyway. Her curly ringlets swept up over her head in her headwrap were just yummy. It'd be a crime if she ever straightened them. I shook myself. Stop thinking about her like that, she's so far out of your league and you don't even know if she's gay! My gaydar hadn't really pinged with her, so I assumed she was straight.\n\n\"So, my idea is okay?\"\n\n\"More than okay. I've never had a student do a paper on the phenomenon of passing. I've seen some graduate level work done on it, but never an undergrad. I'm interested to see what you do with it.\"\n\n\"It's pretty cool you look at our stuff while it's in progress and let us know if we're on the right track.\"\n\n\"I want everyone to succeed in my class. I've known professors who think they have to fail a couple of students every semester just to show they're teaching difficult subjects.\"\n\n\"That's fucked up.\"\n\n\"Right? Like, our purpose is to educate people, not show off that we can make a class so hard that people fail. That's ego triumphing over professionalism, if you ask me.\"\n\n\"Well... I really appreciate it. I want to do better than I did with my midterm.\"\n\n\"I'm looking forward to hearing you present your paper to the class.\"\n\nUgh. \"I have to tell you, I'm really not looking forward to that. I've never done a presentation in front of people.\"\n\n\"It's an important part of the class, Vivian. Most college classes have some form of presentation requirement so it's a good skill to learn.\"\n\n\"I know,\" I sighed, \"but I don't have to like it, do I?\"\n\nShe laughed. \"No, you just have to do it. Just follow the sample PowerPoint presentations on Blackboard for laying out your slides with your arguments and data. I can also send you a couple links to YouTube videos on public speaking if you'd like.\"\n\n\"Are you calling me one of the YouTube generation?\"\n\n\"I know you are, because I'm one too.\"\n\n\"Fair point!\" I laughed.\n\nShe pulled into the parking lot of my building.\n\n\"As always, thanks again for the ride,\" I said as I gathered my backpack.\n\n\"My pleasure. Have a good night.\"\n\nAs I reached my door, I stopped to watch her drive away, as I always did. She was a remarkable person. I almost feel like I was learning as much from riding home with her as I did in class.\n\nMy phone buzzed in my hand.\n\nMindy: Hey, sorry but the next couple weeks are going to be cray for me.\n\nMindy: I'll text you when things slow down and I have some time, okay?\n\n\"Right. Guess I'll take the hint,\" I said to myself and swiped her messages into the trash.\n\n~~ Smitty's Bar, Springfield, Virginia, December ~~\n\n\"Another round, Jim,\" I said to the bartender.\n\n\"You got it, he said, taking away our empty beer mugs. My shot glass was still half full.\n\n\"This is a nice drinking place,\" Connie said, lifting her shot glass and draining it. \"Old school. Like Barfly.\" Her dreadlocks bobbed as she drank. Today she was wearing them tied together on top of her head like the crest of a lesbian Roman helmet.\n\n\"What's Barfly?\" I asked hoarsely after I killed the rest of my tequila.\n\n\"It's an old movie with Mickey Roark.\"\n\n\"Haven't seen it,\" I said. Jim set two more fresh drafts on the bar in front of us, then two empty shot glasses and proceeded to fill hers to the brim with Old Gobbler whiskey, mine with Cazadores tequila.\n\n\"Here's to day-drinking,\" Connie said, holding out her beer. I touched my mug to hers and we both took long pulls.\n\nI'd kept the beer coaster she'd given me with her number, and after Mindy had ghosted me I'd texted to tell her that she called it.\n\nIf pressed, I'd have to admit I reached out to her in the hopes that she might talk Mindy into giving us a shot. It had hurt more than I'd expected. I don't know if it was because Connie had warned me that she wouldn't want to date and so I wanted her, just to be contrary, or if I'd really liked her that much.\n\nHonestly, I think that maybe I was finally tired of the one-night-stand life.\n\nIn any case, Connie had not tried to sway Mindy on my behalf, but we had become drinking buddies; this was our third time hanging out. It was nice to have a fellow lesbian to get drunk with. Not that my roommate Manny wasn't a nice guy, but we didn't have that much in common besides driving trains, bowling, and watching sports.\n\n\"Want to shoot some pool?\" I asked, nodding towards the empty pool table.\n\n\"Sure. Hey Jim, don't let anyone Bogart our seats, okay?\"\n\nThe bartender looked around at the otherwise deserted bar and laughed.\n\n\"Can I get some quarters?\" I asked, putting a five on the bar.\n\n\"Just four, or...?\" Jim asked.\n\n\"All of it. Gotta plug the jukebox too.\"\n\nJim groaned theatrically, but took my bill and handed me a stack of coins.\n\n\"Can we get some nachos started? Or are you going to be too mad at me to put in our order?\n\n\"If you don't play any repeats.\"\n\n\"Deal.\"\n\n\"What's his beef?\" Connie asked as I handed her four quarters.\n\n\"He doesn't like my taste in music.\" I said as I paged through the touch screen of the digital jukebox. She fed the coins into the pool table then started racking up the balls.\n\nI made some selections, then picked up a pool cue and danced back to the table as Pitbull's Fireball came on the bar's sound system.\n\n\"Hate to tell you, I think I agree with Jim.\"\n\n\"What are you talking about? This is grade-A stuff.\" I made the break, sinking the nine ball. I stood analyzing the table for my next shot, my hips shaking in time with the saxophone riff.\n\n\"My hips can't do that.\"\n\n\"Practice, practice.\" I leaned over and sank the eleven, then danced in a circle around the table while thinking about angles.",
        "\"Give me good old lesbian rock anytime.\"\n\n\"Lesbian rock? What's that?\"\n\n\"Joan Jett, Halestorm, Lita Ford, that shit.\"\n\n\"So, you're saying you wouldn't be up for hitting a dance club with me sometime?\" I took another shot and missed.\n\n\"Nah, not my scene. I'm more into mosh pits.\"\n\n\"Yet another reason we could never date.\"\n\nShe laughed. \"Yeah right. Can you imagine either of us being the Mindy?\"\n\nI was taking a sip of my beer as she said that and I snorted foam out my nose.\n\n\"Goddammit! Good timing!\" I coughed. It was laughable, imagining letting anyone fuck me like I'd fucked Mindy. Connie was right. I was a top and happy to be that way. I'd let Mindy get me off with her fingers, but letting her fuck me with her strap-on? Or Connie? Not happening.\n\n\"Too bad Mindy's on the prowl. Unlike you, I think I could have dated her. First time in a long time I've felt that.\"\n\n\"Eh, whatcha gonna do?\" She sank the three ball.\n\n\"I know. I just... have a hard time meeting woman in my comfort zone.\"\n\n\"What comfort zone?\" She took a shot, sinking the five, but the cue ball followed it into the pocket. \"Dammit.\"\n\nI retrieved the cue ball and studied the table.\n\n\"Oh, you know, not too dumb as to be boring but not too good for me.\" I missed sinking the fifteen.\n\n\"What the fuck does that mean, 'too good for you'?\"\n\n\"I mean... I dated a chick for a bit who was a lawyer. Super smart and accomplished. I really liked her, I just didn't have anything to offer her. I was out of my league by miles, and--\"\n\n\"You need to button that shit up, Esparza,\" she said, pointing her pool cue across the table at me like a sword. \"Don't be one of those losers who judge themselves by other people's accomplishments. Judge yourself by what you set out to do and if you get it done. If someone thinks you have nothing to offer, they're the problem. Not you. Fuck that lawyer chick if she couldn't see the person you are because of your job or whatever else you've done in life.\"\n\nI stood in silence, leaning on my cue. Addison had told me more than once she didn't think I was beneath her, but I'd never believed she really thought that.\n\nI started to line up my next shot, as Tito Nieves started bellowing how he liked it like that. I shook my ass to the music as I leaned over the table.\n\nConnie rolled her eyes at me as I stood up after sinking the twelve. \"How'd your presentation go?\" she asked.\n\n\"Oh, god, it was terrible. I was stuttering, I kept clicking my slides too far ahead. I'm sure I locked in a C for the semester. We only have one more class and we get our grades after that.\"\n\n\"That's a passing grade at least. You're engineering and you said you aced your calc class, right?\"\n\n\"Yeah, I think I'm in the top five in that class.\"\n\n\"There you go. That class is more important to you than some stupid class about race.\"\n\n\"It's not stupid! I've learned a lot. And it's a subject that impacts my life frequently, Miss White-Bread.\"\n\n\"Whoa, sorry! I didn't mean it like that,\" Connie said sheepishly, \"I meant, a class that doesn't really apply to your core learning objective of being an engineer.\"\n\nI laughed. \"See, that's something Dr. May would call out. I'll be a better engineer if I'm more well-rounded and have perspectives outside my own lived experience.\"\n\n\"Really? Nuts and bolts are nuts and bolts. Circuits are circuits.\"\n\n\"But if I'm designing something based on only how I'd use it, I'm not taking into account other cultural viewpoints and how they might make someone else use it.\"\n\n\"I guess,\" She stared at the table, pondering something. \"We do see a lot of that when designing user interfaces. We tend to use the color red on dashboards all the time to indicate something is trending bad, but in Chinese culture red means happiness. We had a big stink over that while designing an UI for a multinational corporation last year.\"\n\n\"See what I mean? I really like the professor too.\"\n\n\"Well, if you like her, see if she's teaching a different class next semester. You need more than one elective, right? Or, you could ask her if she'd be willing to mentor you.\"\n\n\"Mentor? What do you mean?\"\n\n\"When I was in college, there was this woman prof my first semester. I really liked her. She was one of the few women in the computer engineering department and I admired how she handled the casual misogyny that pervades computer nerd culture. So, I asked if she'd mentor me.\"\n\n\"What did she do?\"\n\n\"We met every two or three weeks for lunch or coffee. I'd tell her about what I had going on, any problems or doubts I had. She'd give me advice. She stayed with me all through my degree. It was really helpful.\"\n\n\"That sounds pretty cool.\"\n\n\"It was. We got to be pretty good friends. Reminds me, I owe her an email.\"\n\n\"Maybe I'll ask Dr. May if she'd do that for me.\"\n\n\"There you go. Now take a shot or I'm calling a time limit,\" she said, gesturing to the table.\n\n\"Shouldn't have said that,\" I said, looking at the balls with a grin.\n\nI ran the table on her.\n\n~~ NOVA Community College, Alexandria Campus, December ~~\n\n\"Wait, you're against gun laws?\" Cindy said.\n\n\"That's not what I'm saying,\" said Dr. May patiently. \"I'm saying that gun control laws in a lot of states started as efforts to keep African-Americans from buying guns. When the Black Panthers started marching with rifles in Oakland while observing the police interact with the community, what the media called 'cop-watching', the California legislature passed the Mulford Act, which was aimed at preventing the Black Panthers from being armed in public. It was signed into law by then-Governor Reagan.\"\n\nThe last class of the semester was basically just a wrap-up of the whole course, and had turned into a freewheeling discussion.\n\n\"So, you don't want gun control?\" Cindy asked.\n\n\"That's also not what I'm saying. We are constantly seeing images of white protesters showing up to various protests carrying rifles and dressed in military gear. Yet you almost never see a crowd of people of color showing up to protest a police killing or a voter suppression law while carrying guns. Why is that?\" Dr. May looked around for someone to answer.\n\n\"'Cause if we did that, the cops'd shoot us dead,\" said Sam, one of the African-American students.\n\n\"It's a possibility, one that can't be dismissed,\" said Dr. May, \"What I want is for laws as well as attitudes to be applied equitably, for everyone. When Philando Castile was pulled over for a traffic violation in Minnesota, he had a concealed carry permit and was legally carrying a gun. He told the officer he had a gun to try to make the situation safer, and the officer immediately shot and killed him, stating he feared for his life. And yet we have seen white people storming state legislatures dressed like paramilitary forces, only to be allowed to walk home freely.\"\n\n\"That cop was prosecuted,\" someone said.\n\n\"And he was acquitted,\" said Dr. May.\n\n\"So, you want everyone to carry guns to even the odds?\" Cindy asked.\n\n\"No, I want our society to reach a point where if I am legally, openly carrying a gun, I have the same presumption of motive for carrying my gun legally as a white person does. Instead there is the presumption that if I'm black and I have a gun, I'm up to no good and therefore it's justified for me to be met with lethal force without determining my actual intentions. That's inequitable treatment under the law. But that's not something we can legislate. That's something that can only come from the removal of unconscious bias from our society. And the only way that happens is for people to get to know people outside their own groups, to be educated on our differences and our history. It's been proven in studies again and again that the less diverse a community is, the more prevalent racism is. The more diverse a community, the more accepting people are of people who don't look or speak like they do.\"\n\n\"I read an article last month that the whitest states are the ones most against immigration,\" I volunteered, \"Iowa is ninety percent white and only six percent Latino, but Iowa polled higher than Texas in favor of building a border wall even though they're hundreds of miles from the border.\"\n\n\"Exactly!\" Dr. May said, pointing at me. \"There is a much higher percentage of Hispanic people in Texas, so people aren't as afraid, so to speak, of the unknown. Hispanics are people they see every day, work alongside, and live next to.\"\n\n\"Not to mention they get great Tex-Mex food as a result,\" I added, which earned me a round of laughter.\n\n\"So how do we change that?\" Cindy asked. \"Just bus a lot of Hispanic people to Iowa so they get used to them? That's not an answer.\"\n\n\"No, it isn't. There's not an easy answer. The progress of race relations in our country is something that inches forward, agonizingly slowly,\" said Dr. May. \"Sometimes it even moves backwards. But here is the key point I want to emphasize: representation matters.\"\n\n\"What do you mean?\" Cindy asked.\n\n\"Here's an example. When the movie Black Panther was coming out, there was a lot of griping online about how Marvel was being politically correct. Or that the movie would never be successful because black audiences are smaller in numbers. And what happened?\"\n\n\"Ryan Coogler made bank!\" Sam said, to a round of laughter.\n\n\"That's right, it was one of the most profitable movies Marvel has ever had worldwide. And black kids got to see someone who looked like they did, being a hero. But almost as importantly, whites got to see a black man being a superhero. And now, it's just... how it is. In the media, people of color have traditionally been the bad guys, which leads to an unconscious bias that if you see a black man with a gun, he's a threat. Now? Maybe one day, a cop who saw and liked that movie will pull over a black man who tells the cop he's legally carrying, and maybe the cop doesn't feel instantly threatened.\"\n\n\"That's kinda simplistic, isn't it?\" Jeremy asked.\n\n\"It's incredibly simplistic. Representation in the media isn't the only important thing either, although brother Chadwick did his part, God rest his soul. We need equal representation in government, in business, in local communities, everywhere. And not just black men. Women, gays, trans people, immigrants. We need all these groups to have a more visible, bigger role in society. And for that to happen, we need to help lift disadvantaged groups out of the holes we have spent decades putting them in, to help heal the institutional disadvantages that decades of Jim Crow and discrimination have left them in. And we need to invest in protecting them from efforts to keep them down because others are afraid that raising people up will cost them their own status in society.\"\n\n\"Is that why President Obama was so important to African-Americans?\" Cindy asked.\n\n\"Pretty much, but he was only a start, and you may have noticed there was a teensy little bit of a backlash to his presidency.\" Dr. May smiled at the laughter from the class. \"But it's not just the president. Look at Congress. African-Americans make up about thirteen-and-a-half percent of the population. And about twelve percent of the house of representatives are black. So pretty good there, right? But in the Senate, it's two percent, just Cory Booker from New Jersey and Tim Scott from South Carolina. Look at the federal judiciary. Forget the Supreme Court, where there has never been a black woman justice, there are about a hundred-eighty federal judges at the court of appeals level. That's where about ninety-five percent of settled case law is made. There are currently five black women serving on the appeals court level.\"\n\n\"Only five? That's crazy!\" Cindy said.\n\nDr. May nodded \"Yes, and the five currently serving are all sixty-nine years old or older.\"\n\nShe looked up at the clock on the wall.\n\n\"Okay, we're close enough to time that I think this is a good place to wrap up. I'll post your grades on Blackboard before I leave tonight so you'll probably be able to see them by the time you get home. I want to thank everyone for your participation, this has been a great class. I'm not going to tell anyone their grades in person, but I can say the lowest grade in the class was a C. No failing grades!\"\n\nThe room filled with woo's and yeah's.\n\n\"Thank you, Dr. May!\" Several students yelled loudly and the whole class started applauding. Dr. May gave a wave of thanks as everyone started packing up to go home for the last time.\n\n\"Don't forget to fill out your class evaluations!\" Dr. May called as students filed out.\n\nAfter packing my stuff in my backpack, I walked up front. Dr. May was pecking at the keys of her laptop on the podium.\n\n\"Hey Vivian, just give me a second to post the grades. I'll still give you a ride if you promise not to look at yours on your phone while we drive.\" She winked at me.\n\nI must be one of the C's she was talking about, I thought. She doesn't want to argue with me about it on the way home. Fair enough I guess.\n\nI already knew I'd gotten an A in my Calc class. I could have gotten anything higher than a sixty on the final and still gotten an A, and I knew I'd aced the final. As we cruised down I-95, I finally got the courage to ask.\n\n\"So, uh Dr. May--\"\n\n\"It's Jane, please Vivian. I can't believe I haven't broken you out of calling me that yet.\"\n\n\"Sorry, Jane, I, uh, I looked and you aren't teaching a course next semester?\"\n\n\"Not at NOVA, no. I've finished my post doc project research and Howard made me an offer to start teaching full time. Trying to get on the tenure track.\"\n\nI didn't know what any of that meant. \"That's a bummer. I really liked your class. I was going to try and take another one.\"\n\n\"Thank you! That really means a lot to me!\"\n\n\"Sure. But I was wondering if, uh, I mean...\"\n\nShe waited patiently as she turned off the highway and headed through the streets towards my apartment.\n\nFuck it, just ask. \"I was wondering if you'd, you know, be interested in mentoring me.\"\n\n\"Wow, that's... extremely flattering, Vivian.\" She paused, frowning in thought. \"I wish I could, but I don't think it would be a good idea.\"\n\n\"Oh. Okay...\"\n\n\"I'm sorry, I'm teaching two classes at Howard next semester and I'm writing a book based on my postdoc work. I don't think I'll have the time to--\"\n\n\"No, no, I understand, it's totally fine. I know it's a big ask.\"\n\n\"I'm really sorry,\" she said again, as she turned into my apartment's parking lot.\n\n\"It's fine. I appreciate you even considering it. Thanks again for all the rides this semester. You've spoiled me, I may have to get a car now.\"\n\n\"It really was my pleasure... For what it's worth, if you think you really need a mentor, I could come up with a few names of women who teach at NOVA.\"\n\n\"No, no thanks. I just... I really liked your teaching style.\"\n\n\"That's gratifying to hear. You did very well, especially for your first semester.\"\n\nIf you call getting a C in your class 'very well', I thought.\n\n\"Thanks.\"\n\n\"You're welcome. I'll have my NOVA email for a while if you need anything.\"\n\n\"Okay.\" I realized we'd been sitting in the parking space for a bit. \"Well. Goodbye, I guess.\" I grabbed my backpack and stepped out of her car.\n\n\"I'm really glad you reconsidered dropping my class.\"\n\n\"I am, too. Thanks for calling and talking me into coming back.\"\n\n\"Good luck with the rest of your program.\"\n\n\"Thanks.\"\n\nI watched her drive away, as always, then went into my apartment. Manny's door was already shut, indicating he'd gone to bed early. I took a quick shower then climbed into bed and turned out the light. I felt defeated. I'd really hoped that...\n\nIt didn't matter. I was pretty used to having to manage on my own. And it had been a lot to ask. She had more important stuff to do. Who'd want to mentor a C student any--\n\nWait. The grades were probably posted now. Turning the light back on, I dug my laptop out of my backpack and impatiently waited for it to boot up.\n\nI logged into Blackboard and clicked on grades.\n\nMy two freshman intro classes, A, A. I knew that. Those were snoozers.\n\nCalc, A.\n\nRace Relations in Modern American History... A.\n\n\"You're shitting me,\" I whispered to myself. I quickly clicked on the class and went into the details.\n\nClass discussion participation: fourteen of fifteen points.\n\nFinal paper: forty-nine of fifty points.\n\n\"No way.\" I went into the grading details on my paper to read Dr. May's notes.\n\n\"Ms. Esparza, I have seen no greater improvement in quality between a student's first and second paper than you have shown here. Your research is very good (good job on your citations, no errors this time) but your analysis really stands out. You have done an excellent job of differentiating between facts and your opinions, and your opinions are well-reasoned and insightful. I especially appreciated your discussion around the different impacts of passing between black and Hispanic populations. Well done.\"\n\n\"No fucking way.\"\n\nI clicked back to the main page and selected the grade point average, because while I knew what it would say, it didn't compute that I'd actually find it there.\n\n4.0\n\n\"A four. I got a fucking four-point-oh.\" I closed the laptop and laid back down, pulling the covers up to my chin. \"Maybe... Maybe I can do this.\"\n\n~~ Bowl America, Burke, Virginia, March ~~\n\n\"Yes, yes, get in there!\" Manny yelled, as I held my follow-through, willing my ball into the pocket. The pins exploded in yet another strike.\n\nFor my second semester, my manager had agreed to move me to night shifts, so I could take almost a full course load, with all my classes in the morning or early afternoons. The down side was having to come on shift right before the evening rush hour, five days a week, and working until well after midnight every day. The good thing, since no one really wanted that shift, was that I got Mondays through Fridays with every weekend off, which let me keep helping Abuela with her tamale business on Sunday mornings.\n\nBut almost as important to me, I got my spot on the bowling team back. It hadn't come without a few hard feelings. Stan, the guy who had taken my place, was pissed, but the guys dropped him the second I said I could start coming again. Apparently, he'd been the worst bowler on the team, and they'd finished tenth out of twenty teams in the fall season.\n\n\"C'mon Viv, you got this!\" Ra\u00fal shouted. Oscar and Manny were both on their feet clapping. Everyone within three lanes of us had stopped to watch.\n\nMy ball popped back up the return, and I picked it up, stepped to my mark then took a deep breath to try to settle the nerves in my stomach. I took a quick glance up at my score on the overhead screen.\n\nEsparza: X-X-X-X-X-X-X-X-X-XX - 290\n\nI held my ball up in front of my face and the crowd around me went silent as I focused on my aiming mark.\n\nYou can do this, you got this, I told myself. I strode forward and let it fly.\n\nI knew the instant the ball left my hand. It spun into the pocket like a bomb, exploding the pins. I screamed with joy, clenching both my fists as I spun around towards my teammates. Manny, Oscar and Ra\u00fal rushed up onto the lane and hoisted me up on their shoulders, bouncing me up and down as players from every lane nearby came over to high-five me.\n\nMy first perfect game.\n\nThe overhead P.A. crackled to life, \"Ladies and gentleman, we've just had a perfect game thrown on Lane fifteen! Give it up for Viv, bowling a three-hundred!\"\n\n\"Jesus, we ran into a buzz saw tonight,\" said the captain of the team we were playing as he shook my hand. This was game two of the three game match, and we'd won the second round by almost two-hundred pins with my last ball.",
        "\"I'll get us another pitcher for the last game,\" Oscar said, as the noise died down.\n\n\"Wait, take this,\" I said, pulling out my wallet and fishing out a twenty. \"Get me a double shot of Patron gold.\"\n\n\"Jesus Viv, you sure? You have class tomorrow morning.\" Manny looked worried.\n\n\"Dude, I just threw a perfect game! Let me celebrate a little bit.\"\n\n\"Okay, okay!\" he said, holding his hands up placatingly.\n\n\"Hey Viv, need you to sign these for me.\" Charlie, the alley manager, had two bowling pins and a Sharpie held out towards me. \"These are from the last frame you knocked down.\"\n\n\"Oh, sweet!\" Everyone who threw a perfect game signed one of their pins and it was displayed near the entrance. I was about to join the three-dozen or so other pins in the trophy case. \"What's the second one for?\"\n\n\"For you. You get to keep it.\"\n\n\"Man, thanks! This is so cool! Can I hang onto the pen for a minute?\"\n\n\"You can have it. Congrats again, Viv. I knew it was just a matter of time until you got one.\"\n\nI looked at the beat-up old pin in my hands. Charlie had written the date, the name of the alley and my name just under the red crown printed around the neck. I signed my name underneath.\n\n\"Manny, you sign too. I want the whole team to sign it.\"\n\n\"You sure?\"\n\n\"I wouldn't be here tonight without you guys. I want my teammates' names on this.\"\n\nOscar came back with a fresh pitcher and a glass half full of golden liquid, which he offered to me.\n\nI took the glass from Oscar and raised it to touch their beer mugs.\n\n\"To a perfect game!\" Ra\u00fal said.\n\n\"\u00a1Salud!\" I shouted, and slammed my tequila.\n\nWhoosh, that was a generous pour on a double, I thought as it burned down my throat. I bet I can sneak another one from the bar while Manny's in the can later.\n\n~~ Adams Morgan, Washington D.C., May ~~\n\nAs I walked up to the entrance of A League of Her Own, I nervously scanned the crowd on the street outside. I hadn't been here since the night I'd met Addison. I had been avoiding all the fancy lesbian bars in the District since we'd broken up, because I didn't want to run into her, especially if she was out with her doctor chick.\n\nMy second semester at school had been almost as good as my first. I'd gotten A's in Calc II, Foundations of Engineering, and General University Physics I. The C I'd gotten in College Composition wasn't that great, but then as far as I was concerned English class didn't have much to do with being an engineer, so fuck it. The prof had been a snotty fifty-something who I didn't like and who didn't like me. Also, since it was my nine A.M. class, I'd shown up late or hung-over more times that I cared to admit.\n\nStill, a 3.79 was nothing to sneeze at.\n\nWhile my semester was successful, my social life had been its usual slow-rolling disaster. I'd had a few one-night stands from matches on Tinder or Her. Two of them were one-night by my choice, the other one I'd liked the girl but she'd blown me off just like Mindy. I decided that I was ready to move on from my string of conquests. I wanted to date someone again.\n\nSince I decided I was ready to be over my fear of dating, it made sense to me to also try to get over my fear of running into a certain someone. And I'd always loved hanging out at The League. It was just classy enough that the women I met there were rarely too dumb so as to bore me, but mostly (mostly) not out of my... league, I guess was the right word. Sorry (not sorry) for the pun.\n\nI'd toned down my butch look just a tad for the night. No jeans and clunky boots for me tonight, I'd worn my only nice pair of khaki slacks, with my cleanest pair of canvas Chucks. I'd stuck with one of my usual button-down tops, turquoise green this time. Sleeveless of course, to show off my sleeve tattoo. And my arms. I'd spent the semester doing curls with Manny's barbell and I was pretty happy with how I was looking. I just hoped someone interesting felt the same way about me tonight.\n\nOnce I walked in the door, however, I could immediately see I wasn't dressed for the occasion. Usually the League played either rock and roll, or pretty good dance music. Tonight, I heard a young Michael Jackson singing I Want You Back, and I noticed that almost everyone was wearing seventies clothes.\n\nFuck, I should have checked the web site. I couldn't believe I finally got up my courage to come back to my favorite lesbian bar after three years and they were having a theme night that I wasn't ready for. I could have gone to the thrift store for a pair of bell bottoms at least.\n\nI made my way to the bar and found a space. The bartender came over and I ordered a margarita. I felt like ordering a straight tequila shot, to calm my nerves, but I was hoping to have a nice long evening and I didn't want to flame out early.\n\nMost of the girls along the bar seemed to be paired up already, but I could be patient. I sipped my drink, and alternated watching the crowd along the bar top and turning to watch the mass of dancers grooving to classics like Love Train. After the bartender delivered my second margarita, I looked up to see a pretty girl who seemed to maybe be alone at the far end of the bar. I decided to go for it, and raised my hand to get the bartender's attention...\n\n...and froze as two women filled the empty space next to my potential target.\n\nOne was tall, with curly red hair, wearing a tie-dyed tank top with a giant peace sign on it. The other woman was shorter, with a heart shaped face, dirty blonde hair, braided into two thick pigtails that were held back with a leather forehead-band and wearing a huge pair of round, pink tinted glasses.\n\nOh fuck! I knew them. I wracked my brain until their names popped into my head. Amber and Nora. Addison's friends. I could remember shoving past them on the steps of the Capital One Center, chasing after Addison after she'd caught me with another woman.\n\nI have to get the fuck out of here--\n\nMy skin went clammy as I felt a tap on my shoulder. Then I heard a familiar voice behind me.\n\n\"Fancy running into you here!\"\n\nI turned around and felt my eyes widen in shock.\n\nTo Be Continued...\n\nThank you for reading, Friend. Please leave me a comment to let me know your thoughts on Viv's journey. I have updated Viv's Dance Party playlist with the songs from this chapter, check my bio for more information."
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "lesbian romance",
        "gay",
        "latina",
        "single",
        "dating",
        "hookups",
        "college",
        "bowling",
        "single life",
        "one night stand"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-journey-ch-03-6"
}