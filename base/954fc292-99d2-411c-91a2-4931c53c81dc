{
    "title": "Crystal Clear Ch. 32",
    "pages": [
        "This chapter will not make sense without having read the prior two or three chapters.  This chapter also ends the Crystal Clear series.\n\nCrystal Clear is a continuation of my Road Trip series (see the end of 'Road Trip \u2013 California' for a list of the chapters of that series, in order to be read).  You need not read that series to enjoy this one.  Earlier chapters contain a synopsis of the story to that point.  \n\nAlthough real places and celebrity names are occasionally used for realism, this story is fiction.  Please 'read, enjoy, vote, and comment.'\n\n\n<center>Crystal Clear \u2013 Ch. 32\n\nCrystal clear again</center>\n\n\nNot surprisingly, I found a few residual women in my bed on Tuesday morning, and we made love again.  After that, we all showered, having some sexual play in our shower room, dressed, and then had a light breakfast.  \n\nI felt like a kid waiting for Santa Claus to arrive, just knowing I would get my favorite and most wished for present later that day \u2013 Crystal!\n\nThe clock slowed to a crawl.  I kept looking at it, trying to see how fast 5:30 p.m. would arrive.  It wasn't coming fast at all.  Occasionally, I looked at the clock three times in one minute.  At my insistence, Ellen called and verified that the flights from Arizona were running on time.\n\nAbout noon, Ellen pushed me out the door in my running togs and told me not to come back until I had run for an hour.  I followed her advice, and did feel better and more relaxed when I got back to the house \u2013 for about fifteen minutes.  \n\nI felt even better and more relaxed when Ellen joined me in the shower, and with minimal cajoling got me to make love to her on our special settee in the middle of the shower room.  When we were through and had dried off, we lay in our bed with our nude bodies embracing each other.\n\nEllen said softly, \"I'm glad she's coming back.  She's the only way we'll ever heal.  I love her.  You love her.  We love each other.  It's a time for forgiveness.\"\n\nAfter a minute, I said, \"I agree.  Things will be different, and we'll have to take them one day at a time, but it's time to move on, to get all this stuff behind us \u2013 Crystal and all of us.\"\n\nEllen said, \"You know, I love you more than anyone else in the world ... maybe even more than my sister.  I have ever since I met you, and I've told you this \u2013 I've told Crystal so it's no secret.  But, I know that the thing that will make you happiest and complete is to have Crystal back in our lives.  I want you to know that I don't feel I 'have' to share you \u2013 I 'want' to share you with her, because she's where so much of 'our' joy comes from.  Tonight, if it seems right, please bring her here, and make love to her; she'll need this kind of acceptance, forgiveness, and validation, and so will you.\"\n\nBased on the tough questions Lauren had thrown at us, I'd struggled with the lovemaking aspect of Crystal's return.  I knew that part of me would want to plunder her body the instant she emerged from the limousine; while another part would want to wait some long period of time until we both exploded into each other's arms again after many days and hours of deep and soul-bearing discussions.  Still another part of me wanted to punish her, but I'd put most of that behind me.  Ellen's words helped put things in perspective and adjusted my priorities.  We'd have to see what Crystal was like when she got to the house; maybe she wouldn't want any physical contact with us.\n\nEllen knew I loved her \u2013 truly, deeply, madly.  She knew she wasn't a 'second' \u2013 she was one of the 'firsts' in my life.  I kissed Ellen and just whispered my love to her.\n\nWe dressed and joined the others out in the kitchen.  Not an eyebrow went up about our long absence and obvious lovemaking time together; such was the behavior of our group.  What had transpired was normal for our lifestyle.\n\nThe rest of our guests started to arrive around 4:00 p.m.  \n\nNadia, Claire, Ellen, and Cindy had prepared a light buffet dinner for everyone, figuring that we'd want to 'empty out' in anticipation of the 'Big Bird' on Wednesday \u2013 our Thanksgiving turkey.  Ellen also noted that most of us were so nervous we had little appetite.  We broke out some nice wine, but everybody stayed a little subdued awaiting the 'Big Event' \u2013 Crystal's arrival.  Fortunately, there was an exciting high school football game on the television, and that proved to be a convenient diversion for everyone to gather and talk about.\n\nShortly after four p.m., Ellen used her iPhone to verify that Crystal's flight had landed.  \n\nA little after five o'clock, I went out the front door and sat on the front millstone steps of our large home.  One by one the others came out and sat with me until everyone in the house was outside.  Ellen stood, walked into the driveway, and looked back at us all.\n\nEllen put her hands on her hips and announced to everyone, \"This is too much ... you're all too intimidating.  I would be scared shitless to get out of the limousine with all of you sitting looking at me.  There should only be ONE person out here when Crystal's car arrives and that's Jim.  Come on, the rest of us should go inside.\"  Ellen led everyone except me back into the house.  As she went by, I grabbed her hand and kissed it to signal my thanks for her clear thinking.  I'd tell Crystal who was at the house and give her the opportunity to run away if she wanted to.  If I were lucky, maybe she'd let me come with her.\n\nI wanted to be calm, rational, forgiving, and welcoming when Crystal arrived.  I wasn't at all sure what she wanted to have happen over the long weekend, other than to 'interact' with all of us \u2013 to talk to all of us.  I ran through the questions Lauren had led me through, at least those I could remember.  Every second that went by I felt I was forgetting something crucial.\n\nI realized I was approaching Crystal's arrival all with my left brain \u2013 analytically, ordered, lists, key words to remember, sentences to say.  The closer to 5:30 p.m. my right brain started to erupt \u2013 the emotional side, with uncertainty, anxiety, love, anguish, worry, and general angst.\n\nAnd then at 5:20 p.m., I saw the long black car turn into the driveway.  The windows were so tinted I couldn't see into the car except through the windshield, and it wasn't the driver I wanted to see.  I remained seated until the car came to a stop twenty feet in front of me, and then I stood.\n\nThe uniformed driver got out and quickly moved around the car, to the passenger door opposite me.  He pulled the door open, and I stepped forward a few feet.\n\nCrystal emerged from inside, and our eyes locked on each other instantly.  I felt another surge of emotions race through my body at seeing her again: forgiveness, anger, doubt, confidence, and that angst.  I'm sure she could read every one of them.  I could only guess that she felt all of them too, and probably much worse than I did.\n\nI held my arms out to her.  \n\nCrystal's face suddenly scrunched up as she briefly bit her lower lip, she took a couple of irregular gasps for air, and then rushed into my arms as she started sobbing.  Crystal's tears instantly triggered my own identical reaction.  The chauffeur stepped back away from us with a surprised look on his face as our sobs broke out; he went and busied himself with a suitcase from the trunk of his car, and the few items Crystal had left on the back seat \u2013 her purse and a magazine.  He carefully stacked them next to the front door, walking around us in the process.  The chauffeur bid us good evening, got in the car, and drove away.\n\nThe two of us held each other tightly as we cried.  Occasionally, we'd pull apart to look at each other's face, but that would only trigger another round of tears and sobs.  I kissed her often around her face and hair.  After several minutes of our tearful greeting, I laughed through my tears and croaked out, \"If we keep doing this, we'll never get inside all weekend and we'll flood the front yard.\"  I guess the words were enough to break the ice.  Crystal gave me a wan smile and struggled to get ahold of her emotions.\n\n<center>* * * * *</center>\n\nCrystal sat next to me on the front stairs, her body tight against mine as I put my arm around her in a robust hug of acceptance and forgiveness.  \n\nI said, \"As you can probably tell from the other cars in the driveway and the turnaround, we have a lot of company inside.  Ellen made them all go inside except for me \u2013 I'm your welcoming committee at this point.  If it's too much, I can wave them away, and we can just sit here or in the back yard until they're gone \u2013 well, except for Ellen, Claire, Nadia, and maybe PJ.\"\n\nCrystal shook her head against me in the negative.  \"No, I want to see everybody.  I'm not proud of what I did \u2013 and you may not know the half of it, but I have to face the music; that's what my doctor said I had to do. The longer I postpone this ... even the deep discussions you and I need to have ... the more my depression will last.  I hate to sound like I'm using you all to get over a problem I started, but I'm guessing all your heads haven't exactly been in a happy state since I left either.\"\n\n\"We haven't,\" I volunteered.  \"We all wish you'd stayed.  We could have worked it out.\"\n\nCrystal pulled away and looked me in the eye, \"You don't know how far down the rabbit hole I'd fallen.  When I left, I realized I couldn't even look at myself in the mirror I felt such self-loathing.\"\n\nCrystal reached into the pocket of her jacket and passed a business card to me that read, 'Nashville Limousine, available 24/7,' and there were a couple of 800 numbers.  She said, \"I want you to hold that and listen to me.  Maybe you want to hold off the others for a half hour or more, but I have to talk to you first \u2013 and maybe you only if you think what I have to tell you is so bad that I should leave ... and I will go if you say the word.  I'll understand.  Maybe you don't want to hear \u2013 I guess I should give you that option.  Just call the limo service and they'll come back and pick me up right away.\"\n\nI stood and said, \"I want to hear everything you want to share.  Let me tell the others it'll be a while.  Do you want to go to the back patio of just sit out here?\"\n\n\"Sit out here, please.  Just so long as I can sit next to you \u2013 close to you like this.\"\n\nI went inside to the living room where the others were sitting.  I explained that we were about to start a major conversation and needed some alone time for maybe an hour, and then we'd come inside.  Everybody understood given the circumstances.\n\nEllen gave me a tearful look and whispered to me as I turned and walked past her to go back outside; she hugged me and sobbed into my shoulder, \"Don't lose her, Jim.  Please don't lose her.\"\n\nI nodded my understanding but steeled myself at what I was about to hear.  I couldn't imagine what else she could tell me that we didn't already know or speculate about with some certainty.  Maybe all she would tell us would be about frequency or intensity of how things had been, but maybe there was more. \n\nI went back to the front steps and sat beside Crystal.  This time I didn't put my arm around her; I sensed that she didn't want that at this instant.  I looked expectantly at her, hoping she didn't have something so bad that I'd reject her \u2013 a point I couldn't even envision.\n\nCrystal put her face in her hands and when she looked up her face was again streaked with tears.  She started in a halting voice that I could barely hear; \"I was already in a bad way before that last night when you brought me back here drunk, with a DUI, ... and drugged up \u2013 that night just topped off something that had started months earlier.\"\n\nWe knew that she'd been deep into drugs before she left.  We'd found her stash of pot, ecstasy, and cocaine after she'd left, and I extrapolated that her behavior on that Friday night hadn't been untypical of past months.  I hated it, but I'd come to accept it.\n\nCrystal said in a worried tone, \"I got into drugs about six months before I left.  Someone told me where to score some pot, and God only know why I wanted to try it again, but I did.  I'd only tried it a couple of times before when I'd been in high school, and thought it would be fun to give it a couple more shots.  I went to a bar that looked like a hangout for people who would have some grass, found a contact, and bought some stuff.  Fortunately, none of the guys recognized me \u2013 I'd dressed down, even changing into grubby clothes in the car before I went in the bar; I was just some chick that wanted to score some weed.  I guess they trusted me because they didn't hassle me or anything \u2013 just cash, and here you go.  For weeks that followed, when you and the others were gone, I'd light up outside and enjoy the buzz \u2013 a couple of times a week, and then every day, and then, well too often.  I went down into the woods if you were around.  I liked the buzz \u2013 too much.  I even took some to Europe as you know.\"\n\nI nodded to encourage her to go on, as well as to signal to her that I'd figured most of this out for myself.\n\nCrystal continued, \"When we got back from Europe, I went back for more.  There was a larger group of people there; some guys and a couple of women.  My 'source' sold me a bag and asked me whether I wanted to try some ecstasy.  I hesitated, but the girl I was sitting next to leaned over and whispered to me how great the sex was after popping an ecstasy.  She even volunteered her boyfriend and her to turn me on if I was interested.  At that instant I wasn't, but I took a pill and sat around with the group for a while having a beer.\"\n\nMy stomach ached because I could guess where Crystal's story was headed.\n\nCrystal's eyes started tearing again, and she snuffled.  \"The boyfriend, a guy named Vern and the girl \u2013 Debbie, started to touch me a lot.  Anyway, as the glow from the ecstasy warmed me up, I got really horny, and I started to return the favors.  Next I knew, we went into a backroom at the bar they seemed to know about and had sex; another guy joined us too.  They had old mattresses on the floor.  I couldn't get enough of anybody; I couldn't give enough either.\"  Crystal couldn't look at me as she talked; she sort of talked to the ground about five feet in front of her.\n\nI shook my head.\n\n\"After we wore the guys out, I found out when they hung out at that bar a lot, and said I'd try to hook up with them occasionally.  'Occasionally' for a month or two later became twice a week, maybe more, plus sometimes even over a lunch hour.  I started to want ecstasy every time it looked as though I'd be having sex \u2013 with them, with you, with anybody.  I kept telling myself that I didn't have a habit, but I did.\"\n\nCrystal sobbed loudly.  \"After that, the ecstasy became snorting cocaine for an even larger buzz \u2013 and sometimes taking both at once.\"  She looked at me through eyes fogged by tears.  \"The sex got more and more intensive, and started to involve a few more of my new 'friends.'  We got wild \u2013 more guys, more cocks.  There were more girls involved too.\"\n\n\"I was well into all this by the time we held Nadia's graduation party \u2013 the night she got engaged.  I'd taken an ecstasy and did cocaine that night as you know, and that was when I got you and three others to fuck the daylights out of me.  That had already happened before with some of the guys in this other crowd, and I loved it.  I craved it.  I didn't understand it, but ... I just had to have wild sex ... gang bangs ... group ... anything that gave me lots of orgasms that I could savor under the influence of the drugs.\"\n\nI hated to hear her admission, but Ellen, Claire, and I had deduced that something like this must have happened.  I whispered, \"Go on.\"\n\nCrystal tried to read my face for a few seconds, but I had my poker face on ... except for the tears running down my cheeks.\n\nCrystal said, \"Normally, I didn't drink that much when we were doing the pills and sex, but that Friday night I did many foolish things.  For one, prior to that night I'd always insisted the guys wore condoms, but that night I got shitfaced \u2013 very unusual; the guys were feeding me liquor faster than I could drink it.  When the buzz from the drugs took hold, plus the booze, I told the guys I wanted to be covered in their cum inside and out.  I wasn't thinking, and neither were the other girls who were in the same state I was.  We started early, so everyone was drunk and fucked out by ten that night.  For some stupid reason, I just pulled my clothes on over me \u2013 over my dripping body, I staggered out to my car and no one stopped me, and I started to drive home.  I didn't get very far before I got pulled over. You know what happened after that: I got stopped for DUI, passed out, and my sordid night exposed as you and the others got me ready for bed.  I'd never even thought about what would happen when I got home.  Maybe I got saved in some small way because of what happened that night. \"\n\nCrystal paused and looked at me with a look of hope.  She sobbed, \"When I came out of that drunken and drugged fog the next morning I realized I'd sunk really low \u2013 lower than I'd ever been in my life, and so low that I hated myself.  I'd let at least a dozen guys fuck me as I did every other act I could imagine with the guys and girls in the group.  I finally felt deeply ashamed about what I'd done.  I realized I'd been defiling a trust you put in me \u2013 you, Ellen, Claire, and all the others.\"\n\nTears were rolling down Crystal's cheeks as she continued, \"I couldn't stay.  I had to get far away from the drugs, and the sex, and that bar, and you and the people I'd so violated.  I had to figure out why I even 'started' to do what I did.  I'd been telling myself it was 'fun' and 'temporary,' but I realized something else was going on in my head \u2013 somethings I didn't understand and somethings that were ... slowly killing me, and I don't mean the drugs although they could have done that too.  I knew there was something deeper, and I had to figure out what it was.  I knew you wanted me to stay, but I couldn't do that with you or the others \u2013 not even with my parents.  I had to do it on my own.\"\n\nI whispered, \"Did you?  Did you figure it out?\"\n\nCrystal dropped her face into her hands and said in a muffled voice, \"Yes, I think so, but you may not like it.\"\n\n\"Try me.\"\n\n<center>* * * * *</center>\n\nCrystal paused and then spoke slowly and deliberately, \"Before I tell you, I want you to understand what happened and how I found the answer I think is correct.\"\n\nI nodded for her to continue.\n\nShe said, \"When I realized I'd hit bottom; I remembered Jill Danes telling me about this rehab facility in Tucson.  I couldn't even remember the name, but I started heading to Tucson to go there.  I did recall that she said they handled all sorts of 'tough' cases with discretion.  I figured I was a tough case, and that turned out to be more than true.  Eventually, on my way there, I telephoned Jill and got the name and phone number of the place.  I pleaded with her not to tell you, and made her promise; I didn't explain why I needed the place.  I called the place, and when I got to Arizona, they met me at the airport, I checked myself in, ... and then I started to cry again.  I cried so hard throughout the night, so much that the facility put a full-time nurse trained in critical care psychology and suicide to watch with me.  They thought I might be suicidal, and those thoughts weren't far from my mind.  How could I escape what I'd done to the people I loved the most in the whole world?  That nurse told me that if I did myself in, I'd hurt all of you more than I already had, and that would be a bad thing.  She turned that part of me around.\"\n\n\"The next day I went through an evaluation.  It was a bad day because all I could do was cry hysterically.  They got enough out of me to immediately start me with a good psychiatrist \u2013 Dr. Linda Cowan.  I spent almost full-time with her the first week, telling everything over and over again as she led me through all the terrible things I'd done and all the bad feelings I had about myself, even in areas I couldn't initially put into words.  I cried incessantly; I didn't know a body could hold so many tears or feel so bad.  Gradually, as each day passed, I calmed down and got a little more rational, and our sessions became a little shorter \u2013 finally, only an hour or two every day, but seven days a week.\"",
        "\"Dr. Cowan would give me homework to do, and then we'd start each session with a discussion on what I'd done from the day before.  I had to read books and articles \u2013 things that covered trust, faith, loyalty, duty, obligation, relationships, and reliance, and other things like self-confidence, self-reliance, self-love, and narcissism.  I had to study about drugs and STDs too, and what they did too your body.  Next, she got me to think about what I trusted and had faith in.  We talked about spirituality, and the union of mind, body, and spirit, and what my God concept was.  I would cry because I remembered so many discussions you and I had about some of these topics.  Oh, God, Jim, I cried so hard and so often I didn't know I'd survive.  Some nights I was sure I'd never see the dawn from the pain I felt.\"\n\nI reached over and took Crystal's hand in mine.  I hurt just thinking of her hurting.  Crystal smiled weakly at me in response, but continued to hold my hand tightly.\n\nShe squeezed my hand and continued, \"Part of what I'm going through other women go through too; my case is severe according to Dr. Cowan.  I know it may be silly to you, but I'm getting older, and I have so much more I want to do.  You'd think with the singing, the concerts, and the movies, having fans, fame, and the stuff surrounding these things that I'd be satisfied, but ... well, somewhere in the midst of all this I guess I expected I'd feel different \u2013 complete, more unified and serene.\"\n\nShe gave a mock laugh of self-derision, \"So what do I do?  I blow myself up into a million pieces with drugs, indiscriminate sex, and alcohol.  I alienate the people who are dearest to me.  Not only do I start having all these insecurities, I disintegrate myself instead of getting more integrated.  I fly apart uncontrollably instead of figuring out how to tighten up my life around the things that are important to me \u2013 around the people who are important to me.\"\n\nA wave of anger came over me, and I couldn't resist the urge to vent.  I stood and turned back to her, \"Crystal, I was around all the time and ready to listen to you \u2013 your worries, your crises, your bad feelings about yourself.  Instead, you walled yourself off from me \u2013 from your sister, your mother, and the rest of your close friends.  YOU STOPPED COMMUNICATING WITH ME \u2013 WITH US.  Did you think so little of our love and care for you, that you turned your nose up at what you knew we'd do for you \u2013 to try to help you?  Almost every day I'd ask you how things were going or if you felt OK, and you'd say you were 'fine' or I guess, blow me off.  You were lying to me.\"\n\nI paused for a second and went on, \"You were lying to me, and that's the one thing I can't stand when I think back to the months before you left.  I forgive you for the drugs and the crazy sex with people you didn't know; I hope those things are behind you, but the hardest thing to forgive, and that I'll never forget, is that YOU didn't trust ME with what was going on in your head.  I thought we were close, but now ... I'm left to wonder.\"\n\nCrystal sobbed for a minute, \"I know.  I know.  I felt terrible about not talking to you, but I had to do it myself.  I couldn't even articulate what I felt.  I'd just wake up depressed, put on a brave face, and try to act 'as if' everything was all right when it wasn't.  I knew it wasn't, but didn't know what to say.  I think the drugs and sex made me temporarily forget the bad feelings welling up inside me.  I found out late that they really contributed to my depression and ill-feelings about myself.  I'm so sorry I went that way.\"\n\nShe paused for a huge sniff, \"Dr. Cowan helped me see the same things you just said that I'd shut out you and the others that could have helped me out of the darkest part of my life.  She was amazed at the physical relationships we shared, but helped me see that I'd shut down the more important part of those relationships \u2013 the sharing of the good, the bad, and the ugly, and inside me things were really getting bad and ugly.\"\n\nShe looked at me with teary red eyes, \"I didn't want to burden you with my craziness.  What could you have done when I said 'I'm feeling bad today, and I don't know why'?\"\n\nI sat beside Crystal again and said softly, \"We could have talked.  I could have told you about my bad days before we met.  We could have gotten you help.  We could have done \u2013 and probably should have done interventions of some kind with you.  One thing I still kick myself about is not being forceful enough about your increased drug use.  I saw it right in front of me, I talked to you a few times, but I didn't persist.  I didn't check to see whether you'd really stopped.  In hindsight, I knew you were escalating your use, I just didn't want to admit it.\"\n\nNow, I was the one that sniffed and took a deep breath to bring life-sustaining oxygen into my tired lungs.  I looked at Crystal and said, \"So, go on about your treatments and what Dr. Cowan helped you learn about yourself.\"\n\nCrystal squeezed my hand.  \"I relearned some things about myself.  I like sex \u2013 surprise!  I like the way we play and the way we make love.  I love that we have a small group of intimate and sexy friends who join us.  None of that bothered Dr. Cowan at all; she was wonderful, not a bit judgmental, and actually supportive of our circle.  She knew more about polyamory than I did.  I found a boundary in my discussions with Dr. Cowan: I feel uncomfortable admitting new people to our circle that I haven't met before, even if someone else in the group \u2013 like you, maybe \u2013 vetted them in some way.  The trouble is, this is a 'sometimes' thing; it's hard to explain.\"\n\nShe sighed deeply and went on, but kept holding onto my hand.  The words were starting to flow more easily and without so much crying.  \"One example we homed in on happened when we were in Switzerland.  Jed, Lea, Samantha, and Janice visited, and we got together with them for almost two-and-a-half weeks of solid and fun sex.  It was fun, but I felt inferior to Lea, Sam, and Janice; they were so beautiful and poised. I felt like a country bumpkin, and truth is, that's exactly what I am underneath the veneer of a popular country music singer and movie star.  I'd never met them before \u2013 you knew Jed and blended right in with the others as you always do, and I went along with it.  Oh, I liked it, and I'm not at all trying to push my problems off on you; it's just that when I reflected back on it, I wished I'd known them before hand in some other situation instead of showing up and we all hop into bed.  I sort of felt that way the first time we got together with George and Summer, and I ended up with George; I thought it was expected of me while you went off with Summer.  Don't get me wrong, I liked the sex and the results, it just felt 'off' when I went back over it with the doctor.\"\n\nI stepped in, \"Did it bother you that I was having sex with other women?\"\n\nCrystal thought a moment, \"Sort of.  I worried you'd like them more than me.  I didn't worry about Ellen, Claire, or Nadia.  Surprisingly, the way PJ suddenly appeared and we immediately started to make love with her bothered me, but I didn't know it until Dr. Cowan helped me identify it.  You just picked her up on a morning run, but I know that's what you sometimes do, and I love you for it and I don't want you to stop.  You'd also never met Sam, Lea, and Janice, but you slid right into that so easily.  Edie too, but she's special for other reasons I'll come to.\"\n\nI asked, \"What about your mother?\"\n\n\"Oh, God,\" Crystal said with a large sigh.  \"I had to work that one through for several weeks with Dr. Cowan \u2013 we did the whole parent thing looking for the seeds of my ... my instability ... in my parents.  So, initially, I liked that you and my mother bonded and had sex, and then it bothered me, and now I've come full circle, and I think it's a good thing that I am solidly behind because it unites the family in some unique ways.  I know Mom and Dad's being with us sexually had bonded the two of them together like never before, and I've never seen them happier.  I had a couple long conversations with my Mom and separately with my Dad while I was away.  I think your relationship with Anna is the same; I'm glad you and your sister connect emotionally and sexually, and I'm privileged to know her in the same way.  I think of Lauren that way too.  See, they were people we'd known for a long time and that we'd talked about and talked with before anything happened.\"\n\nI said, \"Help me draw the line a little finer.  What about Margo or Tanya?\"\n\nCrystal shook her head, \"They're not on my list, nor are most of the other women you met along your road trip.  I hate to say it, but Tina Devoe and Jill Danes are not on my list either, nor is Beth Mansard or the two girls on Joe's ocean liner \u2013 Luba and Renata.  They were all just 'fall-in-bed' acquaintances \u2013 initially a step beyond a one-night stand.  I don't know what kind of time frame to know someone ahead of time that I'm thinking of; I have no idea.  It's just ... \"\n\nI interrupted, \"So you want a close-knit polyamorous group that doesn't include others unless we've known them for a while, and we all feel comfortable about them 'before' we initiate sex with any of them \u2013 male or female, I assume?\"\n\nCrystal whispered, \"Yes.\"  I heard the catch of a choke at the back of her throat, as though in that one word she had sealed her fate.\n\nI also could tell from the tone of her voice that she thought her agreement would result in my picking up the phone and calling a limousine to take her back to the airport.  She even glanced at the shirt pocket I had slipped the limousine's business card into, so I felt I'd intuited her thought accurately.  And then, I saw the verifying tears start to roll down her cheek again.\n\nCrystal sobbed, \"I'm sorry I'm this way.  This is where my mental wanderings over the past six months have taken me.  Deep down I've got a bit of an inferiority complex.  I love you so much, and I don't want to share you except with people that I think deserve you.  I'm willing to share with some people \u2013 I like sharing you with some people \u2013 people that I love, but not others, not casual acquaintances.\"  She sobbed, \"Does this make any sense at all?\"\n\nI pulled Crystal into my arms and pushed her head against my chest, immediately feeling her tears soak into my shirt.  She cried for a minute, and I rocked her gently.  I whispered next to her ear, \"It makes sense.\"\n\nCrystal pulled away from my chest, looked at me, and blurted out, \"There's more.\"  \n\nI nodded for her to continue.\n\nShe launched into more of her self-learning.  \"I failed myself.  Over time, partly due to the success of my recordings and concerts, I'd come to expect 'perfection' from myself.  Every song had to be perfect.  Every concert had to be superb.  The way I dressed, looked, spoke, and on and on, it all had to be perfect.  I had such high expectations for myself that when I started to slip and slide, even inside my head where no one else could see, my whole being got a kick in the ass.  Later, I couldn't believe I'd gone against some of my basic rules of life, but I kept doing it \u2013 and that made it worse.  I went in the wrong direction to help myself.  I got in a vicious spiral downward.\"\n\nShe cried into my shirt again.  \"I'm such a mess.  Still!  Dr. Cowan has worked the entire time with me about not trying to be perfect, to just accept myself as I am, and to not beat myself up, but I keep doing it over and over.  I fail to meet even my simplest expectations sometimes.  Dr. Cowan says I'm setting the bar too high, as she calls it.\"\n\n\"Maybe you are?\" I volunteered.  \"Until the last few months, what you referred to as your dark period, I never felt disappointed in you in anything you did.  You were wonderful.\"\n\nCrystal shook her head, \"No, you were the perfect one through all this.  You were so full of love for everyone, and so inclusive, and you always would say the right thing or have the right solution to some problem any of us were facing.  You'd be so tolerant and forgiving.  You're the perfect one.\"\n\nI spoke in a weak voice, \"Oh, Baby, if only you knew how imperfect it feels to be inside me.  I'm always struggling with some insecurity or uncertainty.  I doubt I could live with a truly perfect person; I would know I'd never measure up to either their expectations or my own.  I still surprise myself almost every day about what I've done, about what you helped me do with my life.  Honey, without you I'd still be adrift.\"\n\nShe said, \"As you said, I held a lot in \u2013 many of my insecurities, but they festered.  I'm working on this now, and Dr. Cowan wants me to talk about not only my expectations for others, but also tell others what I expect for myself.  She wants me to listen when someone tells me I'm shooting too high or that I'm off base.  She wants me to TRY to be 'imperfect' and to like it, to savor it, and to know that I'm that way because I'm human \u2013 and that's a good thing not a bad thing.\"\n\n\"I can help you there, anyway I can.  I need to be more open with you about my own feelings.\"  I paused, feeling there were still some untouched areas.  I said tentatively, \"There's more, isn't there?\"\n\nShe took a huge breath.  \"This part ... what I want to say ... well, it's one of the hardest for me to talk about with you because I think it's where we may part ways because it involves you so directly.\"  Tears were willing up in her eyes, and she again looked at the pocket with the business cards of limo service in it.\n\nCrystal got control of her voice and said, \"You have three children now: two by Summer and one any day by Edie.  I'm proud of you, and those women are near and dear to you, and they're on my A-list of beautiful and loving people we know.  They're the mothers to your children, and I love them for that alone, let alone how nice they are and have been to us.  I include George in that too despite our ... awkward start for me.\"\n\nI nodded.  \"OK.  I think I understand.\"  Even as I said the words, I knew I was missing something important.\n\nCrystal shook her head.  She blurted out through a choked up voice again, \"NO.  YOU DON'T UNDERSTAND AT ALL.  I  WANT YOUR BABY TOO.\"  With that she threw herself back against my chest and hugged me to her.  Crystal's sobbing became uncontrollable at that point.  I could tell she didn't want to look at me to face the possible rejection of what might be her most important reason for being here.\n\nI wrapped my arms around her and thought about what she said.  She sobbed and sobbed, so much I couldn't even speak because she wouldn't have heard me over the sobbing, choking, and snorting noises she was making.  This was an area even Lauren's questions and my own thinking had never addressed.  Eventually, as Crystal quieted down and waited for the guillotine to fall, I whispered to her, \"That can be arranged.\"\n\nCrystal jerked away from me.  With red eyes and wet cheeks, she studied my face to test my sincerity;  \"Do you really mean that?  Talk to me.  What do you mean?\"\n\nI started, \"Crystal, I fell in love with you on a back road not too far from here \u2013 the day your tour bus broke down, and you had to get to a recording session.  I took this hot looking babe that could sing on a motorcycle ride, and she changed my life in so many ways from that day on.  For one, she rescued me from the grief I'd wallowed in after Karen died.  YOU gave me hope and made me see a new future \u2013 a future with you.\"\n\nI kissed away a tear on each of Crystal's cheeks, tasting the saltiness of the liquid.  I went on, \"I forgive you for everything you did \u2013 the drugs, the sex, and for running away from us.  I love you, and I would move heaven and earth to make you happy.  A baby won't automatically do that.  You know that real happiness will have to come from inside you?\"\n\n\"Yes, yes,\" she said quickly.  \"Dr. Cowan is always reminding me of that.  But, you really forgive me enough to father a child with me?\"\n\n\"Yes.\"\n\nCrystal looked at me with intensity, testing my sincerity.\n\nI added for emphasis, \"Yes, I forgive you.  I won't forget all that's happened, because there were many lessons we both learned from the past months; you especially.  One of them apparently includes expressing your feelings instead of denying them until they explode into a bad habit or two.\"\n\n\"Huh?\"\n\n\"As I said a minute ago, we weren't talking enough.  Maybe we were substituting sex for communication, and believing that was all it took to be close to one another, but that's only one factor.  After you'd left, I realized how little I knew about what you were thinking.  You'd done what I thought was the impossible, walked out on us.  I really thought you were throwing everything we had away, and I didn't know why.  I knew what you'd done, but not why.  I wasn't sure you'd come back.  If we'd been talking, even about stuff that felt 'a little' off, we'd have opened some doors to learning about the stuff you just talked about, rather than let it fester inside you \u2013 or me \u2013 or any of us.  Stuff that festers, becomes bad stuff after a while, and later it blossoms into actions we regret.\"\n\nCrystal nodded, \"Oh, boy, do I understand that now.\"  She pulled several tissues from her skirt pocket and started to blot at her eyes and cheeks.\n\nI picked up the thread of conversation we'd bypassed for a minute, \"As for having a child, I would be proud to father a child with you.  That would make both of us very happy indeed.  It's a big step; are you sure?\"  I smiled broadly at Crystal as I pulled her away from me so I could look her in the eye.\n\nNow, the tears really flowed down her cheeks.  Crystal said, \"I'm really, really sure.  Yes.  Dr. Cowan said that part of my darkness involved my 'biological' clock going haywire \u2013 hormones and all.  I couldn't see that, I was so focused on my career, and I'd talked myself into believing I'd never have kids; I'd have a long career instead.  Cowan said my body thought otherwise, and was over-riding those decisions and trying to get my attention, albeit in unconventional and inappropriate ways.  Actually, she helped me figure that out, and it so fit with what I was feeling.  I didn't want to go back and revisit the decision about not having children that I made years ago, but now I have, and I've changed my mind totally and completely and without reservation.\"\n\nI nodded and encouraged Crystal to continue with anything she wanted to say.  \n\nCrystal suddenly looked exceptionally nervous, almost as though she'd remembered a list of things we had to talk about, and she'd reached the one she'd postponed the longest because it was the hardest to deal with \u2013 for me to deal with.  I hoped it wasn't the one that would hurt the most for either of us, but I could tell it was the hardest for her to broach.  \n\nCrystal whispered a few words to herself with a very worried look on her face; she glanced at that pocket with the limousine's business card in it again, so I knew whatever she planned to say would be monumental.  I couldn't even hear her first sentence it was so silent.\n\nCrystal cranked up the volume slightly, \"One more thing ... do you remember ... shortly before Nadia's graduation party ... we were coming back from a run ... you asked me a question?\"  She scrunched up her face and tried to choke back crying for a second, and then haltingly stuttered, \"I. Want. To. Change. My. Answer.\"  Each word was punctuated by a sob of epic proportions.\n\nCrystal threw herself back against my chest again accompanied by a further flood of tears and loud crying.  I would have never guessed Crystal could cry so much fluid in such a short period of time.  This visit \u2013 this very conversation \u2013 must have been mind consuming for her for months.  I wrapped my arms around her and held her close to me, rubbing her back with one hand.",
        "I repeated with certainty because I knew instantly, \"I asked for you to marry me, and the question still stands.  I will gladly accept a 'Yes' instead of the 'No' you gave me at the time.\"\n\nFrom below my chest I heard through a cracking voice, \"You will?\"\n\n\"I will, and I do.  You say the right word, and I'll make it happen.  I'll do it as soon as we can get a marriage license, or I'll fly to Vegas with you tonight and do it.  Crystal, I still love you just as much, if not more, than I ever did.\"\n\nCrystal pulled away to look at me again.  She was still crying and trying to focus on my face through her red, teary eyes.  \"You forgive me for all that shit I did, for not talking to you, and you accept the imperfect me, and you'll have a baby with me, and you'll marry me?\"\n\n\"Yes, on all counts.\"\n\n\"Oh, God, I love you so much.  You're making this so easy for me.  It took me a two whole months with Dr. Cowan to work up to coming back and saying these things.  I haven't slept well at all worrying about what you'd say or do, whether you'd kick me out ... instead, you ... you love me! ... And, you'll take me back!\"  \n\nCrystal launched herself into my arms and planted a super-molten volcanic cosmic explosion nuclear kiss on me that curled my toes.  A kiss I'd missed for six months.  I kissed back with equal fervor.\n\nAfter we broke apart, I spoke, \"Just to remind you: you had some good reasons for saying 'No' at the time that mostly involved the others.\"\n\nCrystal said excitedly through her tears, \"I know.  I know.  I've thought about that \u2013 about them \u2013 all our friends and lovers.  I talked about this over and over with Dr. Cowan too \u2013 back to my inferiority complex.  We can still have the same relationship with everyone we do now; it'll just be with US instead of YOU and ME separately.  Can you live with that?\"  For a second, she looked worried again.\n\n\"I keep saying 'Yes' to you.\"  I gave her a supportive smile.\n\nWe were quiet for a moment, and I asked, \"Is there anything more?\"\n\nCrystal nodded almost in relief, \"Just one, and I hope it's easy for you.  It's nothing bad or earth shaking, or as dramatic as anything we just talked about.  Would you come back to Tucson with me for a couple of days and meet with Dr. Cowan and probably me?  She thinks it would a good idea to meet you, talk to you, and for the three of us to hash over some of this stuff in her presence \u2013 sort of like couples therapy.  It'll help her give me some closure on some of this stuff, plus I think she might have some homework questions for you to think about, but she never told me what they were about.\"\n\nI laughed, \"That'll be another 'Yes.'  Lauren worked through dozens of deep and probing questions with me about what your homecoming would be like, how I felt about you, what made me mad, what made me happy, how I'd react, how the others would react, what you'd be like, and on and on.  I'm used to tough questions and doing homework thanks to her.  She tapped into a friend who's a psychiatrist at her hospital to get ideas about what to talk to me about.  It seems like those questions have been a major part of my life since you left.  So, yes.\"  I paused and asked again, \"Anything more?\"\n\nCrystal hugged me, shook her head, and sobbed with happy tears this time instead of tears of anxiety and fear, \"Oh, no.  You forgive me, you'll live with me, and love me, you'll be a parent with me, and you'll marry me, what else could I wish for?  Right now, you've made me the happiest I've been in a year.  I feel as if an elephant just stopped sitting on me.\"\n\n\"Shall we tell the others?\"\n\n\"Yes.  All of it, please.  But, first, I want to talk with just Ellen and Claire.  Could they come talk?  You can stay too if you want.\"\n\nI understood the dynamics of the situation.  I went inside and got Crystal's sister and her nearly adopted sister.  The three of them sat side by side on the stoop with Crystal in the middle.  I sat back and let Crystal do it her way; she'd obviously put a great deal of thought about what she'd say and how she'd say it.  Another ocean of tears descended onto the front stoop from the three of them.\n\nEllen didn't blink when Crystal told her on the front stoop that we planned to marry, but I watched her eyes tear up, and she bit her lip to control her emotions.  Eventually, Ellen started sobbing uncontrollably with her face in her hands.  After talking with Crystal, Ellen staggered down the driveway sobbing wildly.  Claire had gone with her \u2013 also with tears streaming down her face.  Crystal followed close behind the pair.   They stood among the parked cars and talked, Crystal doing most of the talking.  I couldn't hear them.  After fifteen minutes, the trio came back to the stoop and looked as though they'd reached some understanding that satisfied each of them.   I find out later from one of them what got said; I thought it important.\n\nThey said they were ready to meet with the others, so we went inside to see the rest of our circle of friends.  I put my arm around my new fianc\u00e9e, and we went through the front door of 'our' home with Ellen and Claire part and parcel of the family.\n\n<center>* * * * *</center>\n\nCrystal had another tough and teary time with all our friends.  I got her some water, probably to replenish her supply of tears, and she went through her agenda with everyone, answering questions along the way, and losing more tears in the process. \n\nWhen she finished, we partook of a buffet supper that Nadia, Ellen, Claire, and Cindy had arranged.  Crystal tried to avoid being the center of attention, but given the notoriety of her return that was a tall order that evening.  She toughed it out, however, and I thought became the stronger for it.  I could imagine her doctor praising her for sticking it out and not running for the hills.  Often, I'd find her at my side seeking my strength to make it through the evening.\n\nI found four aspects of the evening particularly interesting after we had rejoined the others that night, no one blinked an eye that I'd forgiven Crystal for her sins; second, everyone took it in stride that Crystal wanted a baby by me and that I'd agreed; and lastly, no one did anything but cheer that Crystal and I had decided to get married.\n\nThe only woman to react at all to the last two points was Crystal's Mom, Kim.  She swooned over the idea of having a grandchild and over the idea of the two of us getting married.  She told me she felt a little distant to the children I'd had with Summer and Edie, but told me she suddenly realized she'd be a grandmother to four children \u2013 and maybe more.  She could now relate to the children I'd had with Summer and soon by Edie.\n\nAt one point, I pulled Ellen aside.  I put my hands on Ellen's shoulders, \"Hey, are you OK with what go said tonight?  You looked sad at one point \u2013 really sad.\"\n\nEllen shook her head and bit her lip for a second, \"I'm OK now.  Maybe you don't know how much I love you.  I would marry you in a heartbeat and have babies with you, and everything.  I was worried that things would change when you married my sister \u2013 that I'd be on the 'outs.'  I want to be in your life, and I mean just like a wife \u2013 just like we've been.  I know you think about me all the time \u2013 Crystal and Claire too.  We've been like wives, but just didn't take the steps to legalize it for any one of us.\"\n\nI hugged Ellen.  I said, \"And now?\"\n\nEllen smiled, \"Crystal is so inclusive.  That's all I'll say for now.  I love her.  I love you and Claire.  And we love each other.  Nothing's going to change that.  The three of us want to tell you when we're all together; it's Crystal's idea anyway.\"\n\nI wanted to know what was up right then.  I wanted to be sure another earthquake wouldn't erupt at the end of the evening.  I went and pulled Crystal and Claire from the crowded living room, trying to minimize the disruption so the group wouldn't think there was a crisis brewing.\n\nI pulled them into my den.  The three women sat in a row on my leather sofa, and I sat in my desk chair.  I said, \"OK, tell me what got said.  I saw the tears and body language before we came inside that clearly told me Ellen \u2013 and I suspect Claire \u2013 were worried that when Crystal and I wed things would change for them \u2013 that I'll be unavailable to them, that I won't think about them the same way I have, and maybe that I'll stop loving them.\"\n\nCrystal shook her head, \"Oh, dear; you're exactly right, and that's what we talked about.  I love the three of you so much, but that's not what I am intending to happen at all.\"  She thought for a moment, \"As I said in the other room, I need a deeper sense of roots and stability.  It's probably an age thing, and this has to do with salving my own insecurities.  I just know I'll feel better and more secure and more loved to be married.\"\n\nCrystal took a deep breath; \"I'm not taking Jim away from either of you.  I WANT his relationship to continue with you.  I find happiness and joy in the way you each interact with him.  I find happiness and joy in how you interact with me.  I want us to share ourselves with each other, as we have for the past few years.  Maybe it's silly, and I didn't say it when we were outside, but I'd put that in writing too, and maybe we should so we make sure our expectations are clear for each other.\"\n\nCrystal went on, \"Dr. Cowan made me worry a lot about expectations \u2013 my own and other people's expectations that go on in a relationship.\"  Crystal thought for a minute, \"My expectation was that you'd both take care of Jim while I was away \u2013 you'd love him and keep him satisfied, and knowing Jim he would do the same for you.  I don't want that to change now that I've come back.\"\n\nClaire leaned over and kissed Crystal on the lips, \"I am content to take life as it comes.  I love all three of you, and I'm so glad you're home and that you'll be home from here on out, and that things will become what you said.\"\n\nEllen turned her sister to her and kissed her with a smile.  \"I'll gladly live with this.  Just know that sometime; eventually, I'll probably want a baby with Jim.  I already have felt married to him.\"\n\nClaire said, \"Me too.\"\n\nI spoke up, \"And, I have felt married to each of you.\"\n\nI still didn't get it.  There was some basic point I was missing.  I finally said, \"What am I missing here?\"\n\nCrystal said, \"We're going to have three wedding services.  You're going to marry the three of us.\"\n\n\"Huh?\"\n\nCrystal explained, \"We have three simultaneous ceremonies.  I marry Jim as far as the State of Tennessee is concerned.  Ellen and Claire marry you in a way that creates the same bond of love \u2013 a bond between all of us.  We'll do it publically, in front of all our friends and relatives and the media.  I know from reading about polyamory over the past half-year that it's been done many times before.  Some people call them 'commitment ceremonies.'  We may become the most publicized ceremony of this kind, but someone's got to be first.\"\n\nMy mouth had dropped open.  I said to Crystal, \"You ... you'd do that for your sister and Claire ... for us?\"\n\nCrystal's eyes teared up again.  \"Ellen's my sister, and Claire may as well be.  I love them so dearly, and yes, of course, I'd do that for them if you're willing to do that with the three of us.\"\n\nI nodded numbly.\n\nClaire looked quite happy.  She said with a smirk, \"You'd better call Edie.  This is going to be front-page news once word gets out: one handsome country music star, marrying three other women.  People magazine will have reporters sitting on our doorstep for months.\"  She actually giggled, a sound I'd not heard from her since her arrival home.\n\nI carefully watched Ellen and Claire attempting to read any dissatisfaction with the proposal, but I found none.  As we walked back down the hall to the living room, Ellen grabbed ahold of my arm and slowed me down for a moment.  She pulled my head down to her, kissed me with tears burgeoning in both eyes, and whispered, \"Thank you; this works for me.\"\n\nClaire rubbed my back as she walked by and gave me a smile.  I got the same message from her.\n\nI said to Ellen, \"We don't have to work out the logistics tonight, but over the next couple of weeks let's each talk about this so we create something really beautiful and bonding between each of us.  Now, how about we drift back to the party.\"\n\nAbout ten o'clock, I saw that Crystal was exhausted.  She'd mentioned she hadn't been sleeping well, plus the past four or five hours had been emotionally draining for her \u2013 an hour long conversation with me, equal time with Ellen and Claire, and an equal time explaining things to our friends, and then socializing that involved even more talk.\n\nI had three women in the super-emperor bed with me that night, but at the insistence of two of them, I only made love to Crystal.  The event was tender, compassionate, and not without many tears as we reconnected.  Our lovemaking wasn't the most passionate or most loving or most anything; it just was what it was \u2013 and it was wonderful.  \n\nWe fell asleep in each other's arms with pledges of love.\n\n<center>* * * * *</center>\n\n<blockquote>Nashville.  By Edie Gerst.\nCountry and Music Stars and Friends Wed in Unusual Ceremony\n\nThe wedding of the year and maybe the century was held on Saturday at Nashville's Richland Country Club when country music and movie stars Jim Mellon and Crystal Lee married in front of a star-studded throng of over three-hundred guests, many of who are well-known singers or movie stars in their own right.  In a rare personal appearance, billionaire Joseph Mansard rounded out those in attendance.\n\nWhat made the ceremony highly unusual were the nature of the multiple ceremonies that took place.  First, besides formally marrying Crystal Lee, Mellon 'married' two other women in the same love ceremony: the bride's sister, Ellen Lee, and rising movie star Claire Whitman.  The bride's parents, Donald Lee, a retired engineer from Knoxville, and Kimberly Lee, a retired school teacher, presented each of the women to Mellon in the individualized marriage and commitment ceremonies.  As part of the ceremony, the 'brides' committed to each other as well.\n\nThe three brides, Crystal Lee, Ellen Lee, and Claire Whitman wore identical Vera Wang wedding dresses designed especially for the occasion.  Each dress was a strapless 'dream of white' ball gown with an elongated dropped waist that flared to an integral floor length skirt made of taffeta with a spiral lace pattern beneath an overlay of fine white netting.  Each bride wore a matching white net veil, pulled back to highlight their tresses.  The trio of brides looked spectacular, particularly since they each had gorgeous long hair to highlight their dresses: blond, brunette, and red.  \n\nThe trio of brides each received identical matching Love Rings from Mellon, each ring comprised of a 10.05-carat cushion cut diamond surrounded by two 1.63-carat trapezoid cut side diamonds in a decorative platinum setting. \n\nIn a second, highly unusual and companion ceremony, Mellon also pledged his love and devotion to seven other women also listed as 'brides' in the program, and who also returned the pledge to Mellon during the ceremony: Anna Rollins, the groom's sister; Lauren Washburn, sister-in-law to Mellon by way of his late wife; Kimberly Lee, mother of the brides Crystal Lee and Ellen Lee; Nadia Iilyn, managing director of Western Recordings; Summer Ellis, mother of two of Mellon's children; Edie Gerst, mother of one of Mellon's children; and Kimberly Hume, CEO of TSI, a major solar technology company based in North Carolina.  Each of the women presented themselves to Mellon, who in turn presented himself to the women with cross-commitments of life-long love.  Crystal Lee, Ellen Lee, and Claire Whitman also took part in the ceremony that was as much between the women as with Mellon.  Love rings were presented by Mellon to each of these women during the ceremony as a symbol of the love between all of them.  Four of the 'brides' in this second part of the ceremony are also married to others.\n\nMellon received a single simple blue diamond wedding band from his ten 'brides,' the ring presented to the groom on behalf of the women by Crystal Lee.  The ring consisted of 2.64 carats of channel-set square-cut blue diamonds within rings of sparkling round cut white diamonds, in a luxurious woven rhodium and platinum setting.  The names of each bride are inscribed on the inner latticework of the eternity ring.\n\nFor the first part of the ceremony, twelve bridesmaids were stunningly attired in complementary off-white dresses also designed by Vera Wang. Among the bridesmaids were PJ Randall, the popular songwriter for some of the newest Lee-Mellon songs; Beth Mansard, media industry CEO; Nadia Iilyn, managing director of Western Recordings; Margaret St. James of Royal Investigations, Ltd. in London; Kimbery Hume, CEO of TSI; Cindy Wonder, lead singer for The Hobo Palace band; Lauren Washburn, a relative of the groom from Vermont; Anna Rollins, the groom's sister; Jill Danes, the movie star; Tina Devoe, a senior executive at Sony Entertainment; Summer Ellis, mother of two of Mellon's children; and Edie Gerst, a reporter for the Dayton Daily News, BBC, and the New York Times, and mother of one of Mellon's children.\n\nTwelve groomsmen balanced out the other side of the altar in the non-denominational service that started at four in the afternoon.  The groomsmen included: Terry Ross, agent for Lee and Mellon; Daniel Crossman, publicist for Lee and Mellon; Sean Livingston, director of administration for Western Recordings; William Cavanaugh, leader of the Country Rebels band that usually plays with Mellon and Lee; George Ellis, a friend from Greenville, Ohio; Joseph Mansard, media mogul and billionaire; Jake Randall, popular songwriter for many Lee-Mellon songs; Craig Olson, a friend from Idaho and former Green Beret with Mellon; James Hume, retired solar technology executive and friend of the groom from Florida; Robert Knight, a friend of the groom from Pennsylvania; Peter Krakowski, hotelier and friend of the groom from Michigan; and Jed Jessup, university professor and friend of the groom from Iowa.\n\nMellon, Lee, and Whitman recently completed a movie for Sony Entertainment entitled Triangle scheduled to be released the weekend before Thanksgiving.  The movie is expected to eclipse 'Gone With the Wind' as a cinema phenomenon.  Mellon and Lee also have a new album by the same title scheduled for release about the same time, along with a separate album of Christmas Hits.  Mellon and Lee are also scheduled to start a North American tour commencing in February of next year.\n\nMellon and the three brides plan to honeymoon at an undisclosed location rumored to include a week or two aboard a ship called the Beth-Claire in the Caribbean.  The boat is owned by billionaire Joseph Mansard.  The four expect to return to work by the first of next month.\n\n###\n\n<center>* * * * *</center>\n\nOne Year Later\n\nNashville.  By Edie Gerst\n\nMellon and Lee Announce Family Addition\n\nCountry music stars Jim Mellon and Crystal Lee announced yesterday the birth of their first child together \u2013 Karen Kimberly Laurana Mellon.  Mother and baby are doing fine and returned home after a brief stay in hospital.  Baby Mellon weighed in at seven pounds, ten ounces, and twenty inches.  [insert photo of Mellon, Lee, and baby]\n\nJim Mellon and Crystal Lee said the baby's name honors Mellon's first wife, Karen Mellon, who died at a young age of an autoimmune disease about seven years ago, Crystal's mother and the baby's grandmother \u2013 Kimberly Lee, Kim Hume \u2013 a close friend and mentor to Mellon, and Mellon's sister Anna and former sister-in-law Lauren, all of whom remain close friends of the family and took part in the major commitment ceremony at last year's 'Wedding of the Century.'</blockquote>",
        "<blockquote>When asked to speculate about the baby following in their parent's footsteps in the music and entertainment business, the pair burst out laughing.  Mellon said in a humorous tone, \"Ask us in about twenty years.\"\n\nMellon has fathered three other children.  Two with Summer Ellis, whose husband George is a war veteran with Mellon, and one child with Edie Gerst, a single-mother and reporter for the Dayton Daily News, and a correspondent for the New York Times and the British Broadcasting Company.  Ellis and Gerst, both love interests of Mellon, took part in the special commitment ceremony with Mellon last year.  They remain in close contact as Mellon continues his part-time father role with each of those children.  George Ellis formally adopted these three children in an open adoption with Mellon's blessing.\n\nAbout a year ago, Mellon married Crystal Lee, as well as made similar commitments to Ellen Lee, Crystal's sister, and Claire Whitman, a close friend and movie star, and seven other women.  Jim Mellon, Crystal Lee, and Claire Whitman completed the blockbuster movie for Sony Entertainment entitled Triangle, and the trio has been engaged in making a sequel to the box office smash hit to be entitled 'Vectors'.  Filming for the new picture isn't expected to complete until this fall with a possible release by the Christmas.\n\n###</blockquote>\n\n<center>* * * * *</center>\n\nCrystal had just nursed KK, as we'd started to call her, and then the baby had gone back to sleep; she was a good baby and easy to care for.  I would do a round with her around eleven o'clock, just before I went to bed.  Crystal was leading us through the angst of hiring a nanny, but so far none of the people who had applied for the position met our strict requirements.  She was also struggling to get back to the weight she'd had before she got pregnant.\n\nCrystal, Ellen, Claire, and I loved the back patio of the Nashville home looking across the pool into the woods where the sure signs of spring were now showing.  Sunset would come in another hour.  Slightly behind us, a space heater warmed the immediate air around us, warding off the evening chill.  Crystal and Ellen were snuggled in under my arms on each side of me; Claire contentedly snuggled up against Crystal.  I'd spread a blanket across the four of us.  We weren't feeling particularly aroused, just in one of those moods where we were especially comfortable to be in each other's presence and to be physically and intimately touching each other.\n\nI spoke, \"Sure seems empty around here without the others hanging around \u2013 Nadia, Sean, Terry, and the others.\"\n\nEllen chortled, \"Just us old folks, huh?\"\n\nI laughed because Ellen hadn't turned thirty that long ago.\n\nCrystal nuzzled into my neck a little more and said, \"This is cozy.  I like it.  I like when the others come by or stay with us, but you three are the rocks that anchor my life.  I love you \u2013 you know: mind, body, and spirit.\"\n\nWe agreed with her.  We were the core foursome around whom the others orbited.  We were the rocks for each other, and we loved each other in all dimensions of the soul.  We loved the others in the same measure.\n\nWe sat in silence for a long time, just appreciating each other's presence and our closeness.  Occasionally, one of us would get the urge to kiss someone close to them.  The love and tenderness in the early evening were palpable.\n\nFrom the woodsy trail in the backyard where Crystal and I often ran, we heard the snapping of a few twigs.  A regal buck appeared at the trailhead without a fear in the world; head held high with a start on what would become a splendid rack of antlers.  He looked around and spotted us; and even as we moved slightly so we could follow the magnificent animal he showed no fear.\n\nHe snorted a couple of times in a non-aggressive manner.  Behind him, then came a sleek doe and close behind her a speckled fawn that couldn't have been more than a couple of weeks old.  \n\nThe trio of deer walked peacefully across the backyard, occasionally sniffing the ground, and then pausing to look at us as our heads followed them with our mouths agape.  They felt no fear.  Maybe they felt the love that we had for them and that we felt for each other.\n\nI wondered if the buck or doe had grown from the fawn I'd seen years earlier shortly after I'd moved in with Crystal after my road trip.  We'd each traveled so many miles since then, and endured a few hardships along the way.  The older deer also looked old enough to have seen many miles in their journeys through life the same way we had.  Slowly, as though to show his bravado, the buck slowly strutted in a circle right in front of us, and then slowly moved to the start of the trail into the woods on the other side of the yard, but he paused there waiting for his mate and offspring to follow.\n\nThe doe looked at us and shook her head slightly as though to say 'Hello'.  The fawn had come a little closer to where we sat, displaying precocious curiosity.  At a brief snort from his mother, the fawn backed away from its approach, but continued to study us \u2013 almost as though it was memorizing what we looked like for a future 'safe' visit.\n\nJust for kicks I nodded slowly at the doe to say thank you for visiting.  Surprisingly, she nodded back, turned, and pranced away in no particular rush with the fawn in close file.  She didn't bolt or run; she pranced in such an elegant way.  The fawn walked haltingly behind her following his mother, and not even attempting to duplicate her dance steps.  The trio of deer turned and looked back at us before slowly disappearing into the woods.\n\nThe moment touched me as a similar moment had years earlier when I'd just come back from a run and started a meditation in the small clearing at the edge of our acreage.  I remembered every second and every emotion I had felt then when a doe and fawn had appeared, and I felt each of them now in the same intense way as I hugged Crystal, Ellen, and Claire, and kissed each of them.\n\nI had so much to be thankful for.\n\n\n<center>The End of Crystal Clear</center>"
    ],
    "authorname": "Romantic1",
    "tags": [
        "celebrities",
        "group",
        "coming home",
        "renewal",
        "reawakening",
        "marriage",
        "ceremony",
        "polyamory",
        "forgiveness",
        "love"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/crystal-clear-ch-32"
}