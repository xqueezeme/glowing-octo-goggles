{
    "title": "Contest: Alternate Chapter",
    "pages": [
        "Author's Note: This was written at a reader's request because in the original series Danielle didn't complete this task. It's a lot longer and rougher than it would have been had I written it along with the original series. I hope you enjoy!\n\n\"Danielle?\"\n\nIf she had never heard that deep, drawling voice again it would have been too soon. Doug had the kind of voice that stirred a woman's body, deep, low tones that reverberated down her spine and into her core. Hell, his voice had been one of the first things to attract her to him, promising all sorts of sensual delights and sinful experiences. If only she'd known the perverseness that went on in his head before she'd been seduced by his voice. Even filled with disbelief and knowing what she did, just hearing his voice revved her engine.\n\n\"Hello Doug.\"\n\nThere was a long pause and she knew that she should speak first, to tell him why she was calling, but she felt frozen. This was so much harder than she thought it would be, but she couldn't let Violet win. She just couldn't. They were tied neck and neck and all she needed to do was this one thing... besides, a lot of the fantasies that he'd told her he'd had, she'd experienced a bit of this past week, facing down her fears. She could do this, she told herself.\n\n\"To what do I owe the pleasure?\" he asked, his voice sounding hard and surprisingly cautious. It also didn't sound like he truly thought that hearing from her was a pleasure. In fact, she could still hear some anger in his voice. Maybe she was just imagining things, but maybe he really was still holding a grudge. \n\nShe cleared her throat to help prepare herself, but her voice still came out sounding squeaky and frightened. \"What would you say if I offered myself to you for three hours?\"\n\nDead silence.\n\n\"Offered in what way?\" There was nothing in his voice that gave away what he was feeling and that only heightened her anxiety more.\n\n\"In whatever way you'd like. To do whatever you'd like with me.\"\n\n\"Why?\" Now he sounded suspicious and she couldn't blame him. What would she think getting a phone call like this from someone? \n\n\"Violet and I have a bet going.\"\n\nTo her surprise he laughed, freely and loudly. She'd always loved his laugh. \"God that is so you Danielle.\"\n\nShe couldn't help but smile. \n\n\"All I need to win is to spend three hours with you. You can do whatever you want.\"\n\nDoug sighed.\n\n\"I'm not going to do whatever I want. That's not how it works and you know it.\"\n\n\"I'm saying that's how it works this time,\" she said calmly, trying to hide the high levels of anxiety that she was feeling. Giving herself over to Doug completely was terrifying to her. It had been over a year since she'd last seen him and she had no idea what levels of perversity he'd sunk to in that time. The fantasies that he'd shared with her, that he'd wanted to do with her, had terrified and disgusted her enough that she'd broken up with him and now she was giving him carte blanche to do whatever he wanted. \n\nThere was a long moment of silence on the phone and she closed her eyes, her heart pounding in her chest as she wondered what he was thinking. \n\n\"When?\"\n\n\"Tonight. It has to be tonight.\"\n\n\"What if I have plans?\"\n\nShe blew out a gust of air. \"Then I'll lose the bet and you lose your chance to have me at your mercy for three hours.\"\n\n\"At my mercy for three hours...\" she could hear the old anger in his voice again as he contemplated that scenario. His voice deepened even lower. \"I like the sound of that. I think you like the sound of it more than you're willing to admit.\" Danielle shivered but said nothing. Yes, part of her liked the sound of that, she couldn't lie. \"Be here at eleven.\"\n\nBefore she could reply to ask why so late, he hung up the phone. Shaking a little, she punched the 'end call' button on her cell. What had she gotten herself into?\n\n*******\n\nDoug was just as she remembered him. At 6'3\" he towered over her 5'7\" frame, something that she had always enjoyed because he was one of the few men she'd ever met to truly make her feel small and vulnerable. Of course, everything about him was in proportion, from his very large, blunt-fingered hands to his oversized cock. Perhaps if he'd had a smaller dick then she might have been less stringently against him wanting to put it in her ass. Although when they'd been dating she'd considered anal sex to be completely disgusting. This past week she'd found out that she could enjoy herself during it, but then again the cock that had taken her anal virginity had been much smaller than Doug's monstrosity.\n\nDark hooded eyes stared down at her as he ran his hand through his dark brown hair, which he'd allowed to grow out longer than he'd had it while they were together. Stubble on his face only increased his rugged good looks. Doug was the kind of man who drew attention just by walking into a room, not just because of his size but because of the aura of confidence and danger he had around him. Girls who liked bad boys went wild over him, especially when the saw the dragon tattoo that was clawing its way out of his sculpted back. Right now he was shirtless, showing off his muscular upper body and the brushing of dark hair across his chest and in a line down his stomach. That line continued all the way into his low slung-jeans, emphasizing the V shape of his hips, leading her eyes straight to the bulge that was already growing behind the fabric.\n\nNice to know that she still had that immediate effect on him.\n\nLicking her lips, she looked up again to meet his eyes, registering that he'd completed his own sweeping appraisal of her body. She'd decided not to pretend she was there for anything but sex and she'd dressed appropriately in a tightly fitted black pleated skirt that barely covered her ass and a tight red tank top that showed off her tanned skin and blonde hair to perfection. The low v neck of the top also showed off her massive breasts perfectly, cupping them and pushing them together to create a glorious amount of cleavage that men salivated over; it had a built in bra so that she didn't need to wear one, so the fact that her nipples had hardened the moment she'd looked at him was very obvious. Knowing how much Doug liked her hair, she'd left it hanging loose around her shoulders, hoping that by trying to please him with her appearance she might gain some kind of reprieve. \n\n\"Are you wearing any underwear?\"\n\nIt was more of a demand for a response than a question and Danielle bit back her automatic saucy response. Considering that she was going to be completely at his mercy for three hours, beginning the their time together by making a sarcastic comment about how a hello might be nice didn't seem like the best idea. \n\n\"Yes,\" she said in a low voice, looking away from his penetrating gaze. She was wearing a red lacy thong, the same red as her shirt, and it was already wet with arousal. Damn him for his effect on her. Having him this close to her again, smelling the spicy masculine scene of his cologne and body, was turning her brain into mush. There was a reason she'd written him a Dear John email to break up with him instead of doing it in person. \n\n\"Take them off.\"\n\nThe command, in his husky voice, sent a shiver up his spine. It was beginning already. This was the part that she'd always liked, the domination, her submission, the naughty thrills and painful foreplay. No wonder she was creaming herself. Not a single man since Doug had been able to affect her this quickly, on this visceral a level. \n\nSliding her hands under her skirt, careful not to flash the neighborhood behind her, Danielle tugged off her thong and put them into Doug's waiting hand. Heat bloomed in her face as he brought them to his nose and smelled them, amusement sparking in his eyes. The scent of her arousal was already obvious. There was no hiding her reaction to him. \n\n\"Already wet,\" he said. She should have known he wouldn't let it pass without comment. Humiliation had never been one of his major kinks, but she shouldn't be surprised that he might find it a lot more palatable now, with her. \"Take off your skirt and show me.\"\n\nFor a moment she hesitated, but the look in his eyes promised retribution if she tried to argue, and she had already decided that she didn't want to get off to a bad start. Although she wasn't sure that she considered stripping on his doorstep a good start. What if someone saw? But that was his concern, not hers. She didn't have to live in this neighborhood after all. And this was obviously something he'd been planning from the very beginning; in his quiet neighborhood there was no one out and about at eleven. This was why he'd wanted her to come late. Chances are, no one would see her... but the element of uncertainty was there. It was both humiliating and exciting to strip off her skirt and spread her legs for him, tilting her hips forward as she used one hand to spread open her pussy, the way she knew he'd want her to.\n\nHer pink pussy lips glistened in the light as Doug's lips twitched with satisfaction at both her capitulation and her knowledge of how he'd want her to present herself.\n\n\"I see you haven't forgotten everything,\" he practically purred. Danielle flushed again and looked down, although she kept her pussy spread for his view. \"Down on your knees. You can take off your shirt and use it for padding along with your skirt if you want.\" The indifference in his voice said that he truly didn't care. \n\nDanielle's insides clenched. Exhibitionism was so not one of her kinks, but there was something arousing about Derrick's desire for revenge on her, his intentional set-up for her humiliation and to challenge her. Now she had the choice between the flimsy skirt fabric between her knees and the concrete of his front step, or stripping down completely in order to save her legs a little comfort. She decided to just kneel down. Hopefully he wouldn't make her stay here for too long. \n\nOn her knees she looked up at him, his eyes glittering with excitement and lust as he stared down at her, undoing the front of his jeans, which were filled to bursting with his long, thick meat. It hung, bigger and harder than she remembered, bobbing in front of her face under its own weight, the plummy purple head already leaking liquid. \n\n\"Suck me Danielle. We're not going inside until you get me off.\"\n\nEager to show herself willing, Danielle took his hot length in her hand and began licking around his head, cleaning it of the salty sweet liquid and letting her saliva coat his knob to make it easier for her to fit her mouth over him. As he moaned, his large hands coming down to rest on her head and begin gathering up her hair, she slid her tongue up and down his long, long length, licking all twelve inches of him as if he was a giant popsicle. She knew from experience that the more she lubricated his shaft with her mouth, the easier it would be to fit him down her throat... and she also knew very well that down her throat was where he was determined to go. \n\nAs he began to pull her hair into the semblance of a pony tail for him to hold onto, Danielle licked her way back up to the glossy helmet and wriggled her tongue into his pee slit. Doug hissed under his breath and his grip on her hair tightened. Glancing up at him, she was almost disturbed by the intense need she saw in his face, the way he was watching her orally service him. Her eyes sliding back down to his mouth watering abs, she opened her lips and sucked his head between them, her tongue flicking over the sensitive, velvety skin. \n\n\"Fuck yes...\" Doug moaned and thrust his hips forward, shoving another inch of cock into her mouth. \"God you've got such a hot mouth....\" \n\nWithout waiting for her participation, Doug used his hand on her hair to pull her down onto his cock, his hips thrusting and fucking deeper and deeper into her mouth. It was no less than Danielle had expected, and she loved it. The hard way Doug used her had satisfied so many of her darker needs while they were together, it was why she'd been so shocked when she'd discovered that she hadn't been satisfying all of his, that he'd had needs much more perverse and twisted than she'd imagined. But this... this right here she could enjoy without hesitation. \n\nSaliva pooled in her mouth as she lowered herself down onto her knees, changing the angle of his cock so that it was pointed more downwards. It also changed the angle of her neck, allowing him to plunge deeper, past her nominal gag reflex and into the tightness of her throat. This had always been Doug's favorite position, not just because it allowed him to deep throat her so easily, but because it forced her to look up at him as she did so. Now their gazes clashed as he forced more and more of himself into her throat, making it burn at this use that she was no longer accustomed to. \n\nIt was a show of complete dominance over her, as well as a warning. Already he was pushing her out of her comfort zone. She was on her knees on his front door step, her bare ass gleaming in the moonlight for anyone who was driving by or peeking out their window to see, and he had his huge cock shoved down her throat. With his hand fisted in her hair, creating a pony-tail holder with his fingers, he had complete control over the movement of her head. It was Doug's whim that allowed her to breath, when he pulled out far enough for her to suck air in through her nose, her lungs and throat straining with the effort.\n\nShe could see the sheer enjoyment in his eyes, of seeing her on her knees worshipping his cock again. Doug had always loved that she was able to take his full length down her throat and now he pulled back and shoved all the way in, until her nose was buried in the musky scent of his groin, pressing against flesh and coarse hair. Around his length her throat muscles spasmed, fighting to hold his thick meat. Vibrations as she silently moaned traveled up his cock.\n\n\"FUCK...\" his head fell back a moment before coming back down to stare at her. \"I almost forgot how good that feels.\"\n\nThen he pulled out far enough to let Danielle gasp for air before shoving back in deeply, using her face like he would her pussy. The rough skull-fucking was making her feel light headed as she struggled to get enough oxygen in between his hard thrusts, both hating and loving the way it made her feel. Her pussy was gushing with need, her body loving the rough handling, and at the same time she hated that she had this reaction to him. That she still wanted him as badly as she did. \n\n\"Ah fuck... Danielle...\" Doug let out a low groan and shoved deeply into her, she could feel the pulsing of his cock against her tongue and his dark eyes were wild as he pumped what felt like a gallon of cum straight down her throat and into her stomach. As she swallowed, her throat muscles massaged the length and head of his cock, milking him of every last drop of creamy fluid. It was warm in her belly and she became even more dizzy with air loss as he finished his climax, holding her face pressed tightly against his groin.\n\nWhen he pulled out, he released his grip on her hair and stepped back; surprised by the sudden loss of his support, Danielle's upper body fell forward. She was suddenly very aware of the soreness in her knees from kneeling and the burning of her throat from his rough use. Peering up at him, on all fours, she saw that he had already regained his composure, the wildness in his gaze now hidden behind a mask of indifference as he tucked his chubby cock back into his pants. Part of her wanted to break that control of his again.\n\n\"Get up and come in,\" he said sternly. \"With only three hours we don't have any time to waste and you will be punished for dawdling.\"\n\nStifling a protest, Danielle got to her feet, picking up her skirt as she stood and walking into the house. Doug grabbed her by the arm as she passed him, halting her in her tracks. With his free hand he reached between her legs and plunged one thick finger into her sopping folds. Danielle groaned with pleasure as he skewered her with his large finger, her hole tightening anxiously around him. \n\n\"Got you wet did it?\"\n\n\"Yes Sir,\" she said, moaning as she tilted her hips forward, trying to rub her clit against his hand. Unfortunately he removed his hand entirely and she whimpered with disappointment. \n\n\"For the next three hours you're going to call me Master,\" he said, his eyes glinting with some kind of deep emotion. Turmoil swirled through Danielle, even though she told herself that it was just another word, another name, it did mean anything. It was also hard to keep her smart mouth shut and not point out that the three hours had already begun, since she'd arrived at 11 o'clock right on the dot. But she had a feeling that he was purposefully trying to push her into saying something that he could punish her for, so she held it back. \"If at any point you need to stop tonight, you will say 'red.'\" Doug grinned devilishly. \"Of course, then you'll lose the bet.\"\n\n\"Yes Master,\" she said instead, as meekly as she could, looking down at her hands clasped in front of her bare pussy.\n\nDoug let out a roar of laughter. \"You think you're going to find me more lenient if you behave now?\" The amusement in his voice suddenly turned into something like a snarl, the hand on her arm tightening hard enough that she gasped as her head flew up and she looked into his dark eyes, stormy with repressed anger. \"You have plenty to be punished for Danielle, and a few moments of obedience is not going to make me forget that.\"\n\nWith that he turned and began walking, pulling her along with him and heading for the basement door. The hard grip on her arm loosened a bit, but she wouldn't be surprised if she had bruises on her pale skin tomorrow in the shape of his fingerprints. \n\nWhen she had broken up with Doug his basement had already been set up like a Dungeon, but now there were new toys and contraptions set up that she had never seen before and a spike of anxiety went through her. She recognized the spanking bench and Saint Andrew's Cross, but now there was also some kind of table that looked like the top was segmented, what looked like a Medieval Rack, and all sorts of chains and ropes hanging from the ceiling. A sex swing was recognizable among them, but it wasn't the only piece hanging from the ceiling. \n\nNew whips and other implements of pain and pleasure hung from the walls, alongside the ones that she recognized. Anticipation thrummed inside of her, her juicy pussy starting to leak down the insides of her thighs as she took in the erotic and dangerous room. It wasn't until she had taken her fill of looking that she realized Doug was waiting for her, watching her reactions to the changes that he'd made. \n\nOnce she met his gaze again, it was like a signal that she'd finished looking and he pulled her over to the center of the room where a chain was hanging down from the ceiling. \n\n\"Take off the shirt,\" he demanded. Danielle did so immediately, not missing the way lust flared in his eyes as her massive mammeries were exposed, nipples already puckered and aching to be touched. Even though she hated how big they were, how they sagged under their own weight, she couldn't deny that she wanted to feel Doug's big hands on them again and that she loved the way he looked at her when she was completely naked for him. \"Wrists.\"\n\nHe cuffed them with leather cuffs lined with fur on the inside, prettily stamped with Celtic designs on the outside, in front of her body before lifting her arms and attaching them above her head. The position forced her breasts to thrust outwards at him and Doug's eyes gleamed in appreciation for the lewd picture she presented. \n\nDanielle groaned as he attached cuffs to her ankles and then to a spreader bar. It was now obvious that he'd set the chain specifically for her, it was the exact height to make her stretch out her body while allowing her to keep her feet just barely flat on the floor while spread to the distance of the spreader bar. Eventually the position would make her muscles ache, for now it just made her incredibly vulnerable to him. ",
        "\"You have no idea how much I've wanted to see you like this again,\" he whispered, half to himself as he turned and went to pull some toys out of a drawer. When he returned, he came up behind her, running his hand down her back and over the curve of her buttocks, his fingers sliding into the crease to probe at her hole. Danielle moaned and wriggled. She heard him dropping to his knees behind her, his hands spreading her buttocks even further as she could feel his hot breath on her anus as he inspected the hole she was sure that he wanted to breach next.\n\nAnxiety made her breath come in short, hot pants as she tried to stay relaxed, tried not to clench her butt cheeks against him. Something wet pressed against her crinkled hole and she jumped before realizing that he was tonguing her there. It was a completely different sensation from being eaten out, pleasurable but strange and so decadently forbidden that she felt her holes clenching in reaction to just the idea. Never before had Danielle allowed Doug any kind of access to her asshole, the closest he'd gotten was when he'd been eating pussy and he seemed determined to make up for this lack now. \n\nHis tongue probed and delved, pushing the tip in and out of her hole as Danielle gasped at the rude intrusion. Even knowing how perverse some of Doug's fantasies were, he'd never mentioned anything like this! But from the eagerness of his mouth as he sucked and licked at her backdoor, she knew that he was truly enjoying himself. Having already found that anal wasn't as objectionable as she'd always though, thanks to this contest, Danielle gave herself over to the sensations and began moaning with the pleasure that she was feeling, pushing back against his questing tongue as much as she could. \n\nFor a moment Doug paused in shock at her reaction and then his efforts redoubled, the thick muscle of his tongue pushing its way into her anus, past her sphincter. Danielle trembled in her bonds, shuddering at the strange pleasure of the sensation, the tingling nerve endings in that sensitive area. \n\nSuddenly he pulled away, his hands leaving her and Danielle moaned in disappointment. She'd just started to truly enjoy that. Noises behind her made her peek to see what he was doing and then she felt his fingers back between her cheeks, one slick digit poking rudely at her anus. The tip slid in with little resistance and Danielle moaned again. The more he played with her ass, the more her pussy throbbed with need for its own penetration. Instead his finger just slid deeper into her ass, probing the tight tunnel as each knuckled was forced through her clenching ring. \n\nDoug's fingers were thick, so even having one inside of her was like accepting a small cock into that tight space. After all, it had been several days since her first anal penetration and it had easily and quickly shrunk back down to its original proportions. \n\nSomething brushed against her pussy and Danielle cried out her encouragement, pushing her hips back to try and increase the contact to her swollen folds. Doug teased her pussy with one hand as he pumped his finger in and out of her asshole. Just as she was about to start begging him to finger fuck her pussy, he slid the finger in her ass out to the very tip and then began pressing in with two of them, stretching her wider. \n\nGroaning at the strain on her ass to accept two of his thick digits, Danielle trembled, her cunt's needs lessening slightly as the burning stretch in her ass became the most pervasive sensation she was experiencing. Doug twisted his fingers back and forth as he sank them deeper, creating an entirely new barrage of sensations for Danielle as her asshole strained and clenched. Then he brushed his fingers over her pussy lips again. By this time Danielle could feel her juices trickling down to almost mid-thigh, she was so horny.\n\n\"Please... please Master...\" she begged, hoping that remembering to call him Master would help her pleas. \"I need to cum.\"\n\nIn answer Doug removed his fingers from her pussy and gave her ass a sharp slap, making her moan and clench around his fingers in her back door. \"You will cum when I'm deep inside your tight little ass and not before.\"\n\nShe felt almost like crying, the burning in her pussy wasn't subsiding at all and the slap he'd given her ass only increased her arousal, the sharp sting adding to the complex mix of sensations that made her need to cum so imperative.\n\nDoug pumped her anus a few more times with his fingers before withdrawing them. Her asshole felt empty, but he didn't let that last for long. Something even more rigid than his fingers began to push into her. Fairly slim and pointed, it nudged inside her dark hole before it began stretching her as its size expanded down it length. Danielle whimpered as her ass hole swelled around it, quickly reaching the girth Doug's fingers had stretched her to. The hard toy was much more unyielding than Doug's hot flesh and she squirmed as her hole was stretched even more. \n\n\"Please, it's too big!\" she cried out as her hole was forced wider, going up on her tip toes to try and escape the relentless intrusion. Her protest was met with a chuckle.\n\n\"I'm wider than this, sweetheart, so really I'm doing you a favor.\"\n\nThere was a sharp shove, the pain richoting through her as her asshole expanded and then clamped down tightly around the base of the plug, her tunnel quivering with the strain on her muscles. Even the base of the plug was thick, her tight ring clenching and protesting the stretch. Her breath came in gasps as her body adjusted to the large intruder, breathing through the pain and subsequent arousal took all of her concentration. \n\nIt wasn't until Doug was standing in front of her, hefting one large breast in his hand and wrapping rope around the base of it that awareness of her surroundings returned. Making a figure eight with the rope, Doug firmly secured both breasts so that they were standing out even more, rubbing his hands over the fleshy mounds in appreciation. It succeeded in distracting her from the burning stretch of her ass, especially when he lifted one succulent nipples to his mouth and between to suckle at the tender nub, pulling on it hard with his teeth.\n\nGasping and moaning, Danielle felt each nip of his teeth like a lightning bolt, going straight to her hungry cunt. She was so aroused that she was starting to feel light headed, and as he switched his attentions back and forth between her nipples \u2013 which were rapidly becoming more sensitive due to the bound state of her breasts and his oral attentions - she wondered if it was possible to cum from nothing more than nipple stimulation. Certainly her ass was rhythmically clenching around the plug inside of her as if it was a cock that was fucking her, her pussy convulsing in time. Every nerve ending felt like it was on fire, like there was a great gushing wave coming to sweep her away.\n\nThen Doug removed his mouth and Danielle screamed her frustration as her pussy pulsed emptily. She struggled with her bonds for a moment, too far gone in animal need to think clearly. When she finally ceased her struggles, panting for air, Derrick was standing in front of her with a riding crop in his hand, watching her writhing with evident enjoyment. He'd stripped off his pants, probably because his hardened cock had become too uncomfortable within the tight confines of fabric. \n\n\"So my sweet Danielle... tell me more about this bet.\"\n\nThe crop tapped against his calf threateningly.\n\nDanielle cleared her throat, trying to calm her thoughts and her body. \"Violet and I went to Jared... we wanted to show each other up. He set us tasks for this week and we each completed the same number of them as of today... but if I spend three hours with you then I'll win.\"\n\nStepping forward, looking rather curious, Doug ran the flat leather end of the crop up Danielle's stomach, brushing it over her nipples. She tensed and shuddered, waiting for the slap, but he just continued to stroke her body with the soft leather.\n\n\"What tasks have you completed this week?\"\n\nHeat suffused her face and Doug raised his eyebrows. \"That bad? Tell me.\" At the same time he commanded her to tell him, he slapped the crop lightly against the side of her right breast. More sensitive from the binding he'd put it in, the small slap both hurt and tingled deliciously. \n\n\"The first one I completed to was to have my tits tortured.\"\n\nA cruel smile spread across Doug's face. \"I can certainly see the appeal. What happened?\" \n\nHe slapped the side of her left breast and Danielle jumped a little. \n\n\"He tied me up like this actually,\" she said with a little smile, hoping that it would get under his skin to hear about what another man had done to her. Surely he couldn't punish her for it since he'd commanded her to tell him. \"Gagged me, bound my breasts like this but tighter.\"\n\n\"Not breasts, tits,\" Doug said slapping both of them with the crop in quick succession. She moaned at the flashing mix of pleasure and pain, he'd hit her hard enough to leave little triangular marks on flesh that was already turning pink from the bondage. Her nipples throbbed.\n\n\"He paddled my tits, really slapped them around. It hurt but it felt so good too.\" The crop slapped into her again, striking the sensitive undersides of her boobs and she arched backwards as she shuddered. \"Then he undid the ropes around my breasts and massaged them with his hands and told me that things were about to get rough. He used rubber bands, big ones, that went all the way to the base of my breasts \u2013 tits \u2013\" another whack of the crop \"and lined them. It hurt so bad with all the blood being trapped in them, it felt like he was crushing my tits.\"\n\nTracing down the center of her breasts, Doug encircled her nipples with the leather of the crop.\n\n\"Then what?\" he asked his voice husky. Danielle shivered as he reached down with his free hand and began fisting his cock. Obviously her recital of the tit torture that Chris had put her through was turning him on as much as it was her and she couldn't decide whether that was a good or bad thing. \n\n\"He whipped my tits until I thought they might pop before he took the rubber bands off. When he pushed a vibrator in me I realized I was soaking wet.\" The crop came down hard on the tops of her breasts and Danielle moaned. \"He released my arms so that I could lay down on the floor. Then he clamped my nipples used the chain between them to help him titty-fuck me.\"\n\nShe shrieked as the crop came down hard on each of her nipples in turn, jerking her wrists in reaction as she shuddered and writhed. The hard nubbins stood out further, begging for more punishment, slightly darkened by the impact. Doug walked around behind her, the crop tracing a line from her stomach to her back and down to her ass. \n\n\"What else did you do this week?\"\n\n\"I served as a food platter for one of Jared's parties.\" The crop lashed her buttocks, making her cheeks clench around the thick plug inside of her. With her nipples burning and the sharp slaps he'd been giving her breasts, she was now assaulted with stinging pain on both sides as well as the deeper throbbing of her straining anal muscles. \"I had sex with a woman.\"\n\nHeat burned in her cheeks as she admitted this to him, glad that he was behind her where she couldn't see his reaction. The crop came down hard across her buttocks over and over again as she cried out and writhed. The marks stung, but more painful was the way her rear tunnel felt as it clenched and shuddered around the unyielding toy inside of it. \n\n\"What else?\"\n\n\"I lose my anal virginity,\" she whispered. \n\nThe crop viciously lashed upwards between her legs, so fast that she could hear the air displacement as it moved, followed by the wet smacking sound as it hit the sensitive folds of her cunt. Danielle cried out and then screamed as it was followed by another and another. Her body danced as she squirmed and tried to get away, but the spreader bar held her open and vulnerable. The crop snapped against her clit and her entire body tensed, waiting for the next hit, the one that would allow her to cum... but Doug had recognized the sounds too well and she heard the crop dropping to the floor behind her.\n\n\"Oh please,\" she begged, tears leaking down her cheeks with how badly she needed to cum, her abused pussy aching for completion. \n\n\"Oh please what?\" Doug murmured behind her, the anger in his quiet voice cutting through her like a knife. \"Please have mercy after you gave this sweet ass to someone else?\"\n\nSuddenly he was in front of her again, shoving a gag into her mouth. The anger in his eyes was overriding the lust and Danielle quailed a little at the sight. Fear flashed through her. \n\n\"If you need to say your safe word while gagged, scream three times in a row while shaking your head.\" Danielle stared at him. Despite his declaration that red was her safe word for the evening, she hadn't truly expected him to honor it. He snorted in disgust at the expression on her face.\n\n\"Still thinking the worst of me. It's time for some hard truths,\" he said almost conversationally as he walked over the wall and picked up a flogger. Returning to stand in front of her he slapped the inside of her thighs, working his way up to her pussy as he spoke. \"You asked me to tell you my deepest darkest fantasies. And I did. I did not ask you to perform any of them that you were not interested in, I already knew that you had boundaries that didn't include some of my interests. When you asked if I wanted to do any of them with you, I told you the truth and said yes. That didn't mean that I wouldn't be satisfied never having them fulfilled.\"\n\nThe flogger slapped between her legs as she tried to focus on what he was saying, not entirely understanding the point. Sparks of pain flashed through her tender folds where the many stranded whip landed. \n\n\"When you asked if I'd ever fulfilled any of them, I told you that I'd had a threesome with my cousin Tori. You then assumed that I'd had sex with Tori, not that you said that to my face.\" The flogger landed with a wet splat, but Danielle was too taken aback to yell. \"You waited until you had left and then you wrote me a letter, filled with all sorts of assumptions and accusations that you never allowed me to answer.\" Another hard hit between her legs, and this time Danielle let out a muffled shriek. \"You decided that sharing my fantasies meant you were expected to fulfill them and that I would never be happy unless you did. You assumed that I had sex with my cousin. You assumed that I was some twisted pervert bent on indulging in all sorts of perversities that you had no interest in, whether you wanted to or not.\"\n\nThe storm clouds on Doug's face told Danielle just how angry he was over her assumptions. It was true that after he'd told her his fantasies she hadn't want to talk to him; that she'd cut and run and then taken the coward's way out and broken up with him over email. A particularly nasty email. And then blocked his address so that he couldn't write her back, refused to take his calls, and in general didn't allow him any kind of explanation whatsoever. \n\n\"I would never have done anything that you didn't want, that we didn't agree on,\" he said with quiet pride, the flogger hanging at his side. The smell of her pussy filled the air, despite the shame that was filling her heart. Had she truly misjudged him so badly? \"I loved you but apparently you didn't even know me. So tonight...\" the lust reignited in his eyes and Danielle shivered as his voice deepened, his face coming alive with sensual anticipation. \"Tonight I will fulfill some of those fantasies with your luscious body, now that it comes freely offered. And maybe we'll both learn something.\"\n\nThat last was said very quietly as he moved behind her, trailing his finger down her arm and side to her hip. Danielle struggled with the idea that he might be telling the truth, that he might not just be saying this with hind sight, and she wished that she'd talked to him before after sending him the e-mail. \n\nThen he palmed her buttocks, squeezing the creamy flesh hard, digging his fingers in and she found her thoughts and regrets fading away as the rough mix of pain and pleasure rippled through her. The stinging pain from the crop remained, an overlay of sensation on top of the hard gripping. Danielle squirmed as he pressed his fingers against the base of the butt plug, pushing it deeper. Then he began to pull it out and she gasped as the tight ring of her ass stretched around the bulbous base before the plug began to slide easily out. The receding sensation was a relief and yet strangely painful. \n\nAs her hole gaped, she could feel Doug pressing the thick helmet of his cock to it. Slick with lubrication, the velvet soft mushroom was thicker than the plug. His shaft began to press into her, so much more intimate and hotter than any toy. And unlike the toy, his cock was thick all the way down. \n\n\"Fuuuuuuuck...\" he groaned in her ear as he began shove his dick into her gripping asshole. The first few inches slid in easily thanks to the plug, before the stretch of her muscles started burning again as he forced his way deeper and deeper into her cramped tunnel, taking long, burning strokes. He unsnapped the gag behind her head and pulled it from her mouth. \"Tell me how it feels Danielle...\" His breath came in lustful, ragged pants. \"Tell me how it feels to have my cock sliding inside your tight ass.\"\n\n\"Oh God... too big... please... Doug, slow down... oh fuck...\" Her squirming was to no avail; his cock seemed endless as more and more of it sank into her body, working its way up her dark channel. The interior of her ass felt like it was on fire, burning with the strain and rough friction of this intimate probing. \n\n\"Master,\" he said, reminding her of his orders and not slowing his pace at all. Truthfully he wasn't going so fast that she was in real pain, but with a cock as large as his there was a great deal of burning discomfort and straining muscles. \n\nDanielle gasped as he thrust upwards again, burying more of himself, but his groin still wasn't touching her ass cheeks, there was still more of him for her to take. \"Please Master!\"\n\nReaching around to her front, Doug pushed his fingers into her sopping cunt and Danielle half screamed, half moaned her response as her insides clenched around him. \n\n\"I want you to feel the burn,\" he said in her ear as he stroked her pussy, force-feeding more of his meat into her rear entrance. \"We both know that you like it better when it hurts.\" He shoved again and Danielle finally felt his groin pressing against the soft curves of her ass, his hard body rubbing against her beaten cheeks. \"Is the pain making you hot Danielle?\"\n\n\"Yeeeeessssss...\" she let out a low moan as he pulled half his cock out of her and then shoved it back in. Hard. It felt like he was rotting around in her stomach, like she might feel his cock pushing up into her throat.\n\nAlthough he couldn't help the pain that came with having a cock the size of his embedded in her nearly virgin anus, Doug seemed to be surprisingly careful of her pleasure as he began to rhythmically fuck her ass with slow and steady strokes, allowing her body to accustom itself to this shocking intrusion. His fingers pushed inside of her cunt, curling into her body and searching for her sweet spot, the heel of his palm rubbing wonderfully against her clit. The pain and pleasure surged inside of her along with his steady thrusting, melding into that sweet of mix of sexual torture that made her hottest.\n\nClenching down on his fingers and dick, Danielle could feel her denied orgasm rushing towards her, the surprisingly gentle fucking of her ass only increasing the tumult of sensations that rose within her. She cried out in glorious rapture as her holes tightened and released, sizzling heat spreading throughout her body along with her sweet release. Just as she had been denied forever, the pleasure seemed to go on that long, spurred by the relentless steady strokes in her back door and Doug's knowledgeable fingers. Her body spasmed as she said his name over and over again, wondering why she hadn't let him do this to her before. ",
        "His hand slowed its grinding into her soft cunt, allowing her orgasm to subside as she moaned and panted. Bringing his hand to her mouth, he shoved his fingers between her panting lips, dripping with her cream, and Danielle willingly sucked them clean, feeling decadently naughty. Doug's groan told her how much he was enjoying her eagerness, as she had always been reluctant to taste herself. But right now she felt incredibly wanton in the glowing aftermath of her climax.\n\n\"My turn,\" he whispered in her ear, and then he grasped her breasts hard in both hand and used them to leverage his cock up into her with a hard and forceful thrust. \n\nPleasure skittered away as he began a savage ass fuck, no longer gentle or slow, he rammed her hard and fast, squeezing her massive tits as he ravaged her. Danielle screamed and shuddered, bound in place and unable to move away from his forceful pounding into her body. If he hadn't been so slick with lube, if he hadn't taken the time to loosen her up so thoroughly, he probably would have torn something with the brutality he was showing her tender hole now. Rosy pink breast flesh spilled over his fingers, the little red marks from the crop showing clearly, the bindings around the massive mounds adding to the ache in them as he gripped them hard.\n\nIt was a savage fucking lust and punishment, taking her breathe away as tears ran down her cheeks, her head falling back as she let out a scream of erotic agony. The wet sucking of her ass was drowned out by her cries, although she could hear Doug's lusty groans in her ear as he enjoyed her torment, her struggles only spurring him to greater heights as he mauled her breasts in his hands, his rutting cock mercilessly impaling her with its rigid fury. \n\nThe worst part was that her core still throbbed from the pleasure that he'd brought her already, and her body's reactions became confused under his brutal assault. Shivers of ecstasy still ran up and down her limbs, despite the burning agony of her tender backside, and the movements of his cock continued to press into her pleasure spots from the inside. Danielle was caught on the fine line between pain and pleasure, small orgasms rocking her even as she screamed with anguish. What Doug was doing was tearing her apart, not just physically but mentally; she'd never walked this knife's edge before and hadn't known its power, its seductive call. He had broken down her barriers with his words, pleasured her body and now he was taking what was rightfully his, and she didn't know if she'd ever be the same again. \n\nHer pussy gushed fluid as she came again, tears falling from her cheeks to her breasts, making them slippery in his hands. The burning tunnel of her rectum squeezed him as she came, increasing the glory and the torment. She began to imagine that she was nothing more than a receptacle for Doug's lust, his massive cock, his seed, and it only aroused her further. Choking on rapture, Danielle cried out for mercy, but she never let the word 'red' pass her lips. \n\nFinally one of Doug's arms came around her stomach, like an iron band, holding her body in place as he thrust upwards forcefully, all the muscles in his body straining as he let out a roar of triumph and filled her bowels with hot cream. The pulsing of his cock in her ass was so forceful it was almost a vibration and her muscles rippled around him as if her body was sucking his seed deep inside of her. Her cries dwindled to moans as he held himself still, her breath becoming labored because of the arm around her stomach. Slowly his hand on her breast gentled to fondling rather than gripping and she could feel herself relaxing, allowing herself to hang by her wrists as she came back to earth.\n\nSoft kisses down the back of her neck made her over sensitized skin shudder and she clenched around Doug's cock as it shrank inside of her, making him moan and thrust again. Danielle whimpered as the endorphin levels in her body started to drop and she could feel the sharp ache of her abused anus more keenly. \n\nHolding her hips, Doug dropped another kiss on her shoulder before easing his cock from her hole. Danielle moaned and sagged in her bonds, her legs and back muscles feeling very sore, although nothing could compare to the throbbing ache of her asshole. She protested as something began to slide back into that savaged receptacle. \n\n\"Shhh,\" Doug said soothingly. \"You should barely feel this.\"\n\nIt was true, she barely did. The plug that he had worked so hard to insert into her tight hole initially was now sliding inside quite easily, all the way up until the very end when he had to push it through her poor sphincter with a little shove. Then it settled snugly inside of her and she didn't have the energy to try and dislodge it. \n\nUnbinding her breasts made her moan again as sensation fizzed back into them, not quite painful but not quite pleasurable either. Doug rubbed them for a moment, taking the time to brush over her nipples, before kneeling in front of her and pulled her free of the ankle cuffs before standing and repeating the process with the ones on her wrist. Fortunately he kept a steadying arm around her as he did so, because Danielle barely had the strength to stand and she found herself leaning against his broad chest. \n\n\"That was very nice,\" he said, his deep voice sounding both reverent and appreciative. Danielle looked up at him in surprise, even more shocked when she saw the almost tender expression on his face. \"Thank you.\" And then he kissed her. Softly, sweetly, and oh so seductively. She found herself clinging to him, losing herself in his kiss as if he hadn't just violated her asshole in the most brutal sexual experience she'd ever encountered. Their lips parted and his tongue delved between hers, exploring her mouth as his hands stroked her back and the top curve of her butt.\n\nIt completely annihilated any anger or disgust she might have had with him, throwing her completely off guard. Continued brutality she could have dealt with; this loving tenderness had her confused and conflicted - especially since her immediate reaction was to cuddle into the body of the man who had just caused her to scream in genuine agony and then plugged his cum in her for good measure.\n\nDoug swept her up into his arms and carried her to the bed, a gesture that she'd always considered romantic. Of course, he'd done things like that while they were together, but somehow once she'd heard his fantasies she'd forgotten all of that and focused on the depraved things he wanted to do to her. Some of which she no longer considered so depraved, although the anal sex had hurt just as bad as she'd always feared by the end of that. But not bad enough that she'd said her safe word, and there was some pride in that. In fact, she harbored the suspicion that Doug had removed her gag just so that there could be no confusion over whether or not she said her safe word while he was busy pillaging her anal cavity. \n\nHis current actions didn't exactly jibe with the monster she'd made him out to be in his head. \n\nEspecially now when he lay her down on the bed and got her a glass of water, insisting that she drink all of it so that she wouldn't be dehydrated. And then he put her face down and massaged her lower back and legs, soothing the soreness in her muscles that had resulted from her bound position. She moaned her appreciation as her body relaxed, even the plug in her ass didn't seem as invasive now, although her hole was still very sore. \n\nWhen the doorbell rang, she tensed again. \n\n\"Stay here and don't move,\" Doug said. He didn't need to add the 'or else,' it was evident from his tone of voice. And right now Danielle had no interest in defying him; the aftercare he'd provided had her feeling good, sleepy. \n\nIt wasn't until he was coming down the stairs and there were extra footsteps, lighter than his, and a woman's voice, that she began to tense up again. Not moving suddenly became a major effort, because she wanted so badly to turn around and see who he'd brought into the room with them. Who was getting a prime view of her slightly spread legs, slick bare pussy and plugged rectum?\n\n\"Oh Doug... you weren't kidding!\" The laugh that bounced around the Dungeon made Danielle twitch and an unreasonable surge of jealousy flared through her. Who was the unseen woman? Doug would have mentioned if he had a new girlfriend... wouldn't he? \n\n\"Danielle you can turn over now,\" Doug said, sounding amused. She did so immediately, rolling onto her back and starting to sit up until her insides throbbed and she remembered the plug. Resting on her elbows, she stared at the woman standing next to him, who was staring back at her with lust and glee. \"You remember my cousin Tori?\"\n\nTori that he'd had a threesome with before? Yes, Danielle remembered Tori. Bile rose in the back of her throat. \n\n\"The look on her face!\" Tori laughed again. \"You did tell her that we've never had sex?\"\n\n\"Yes, but I don't think she believes me.\"\n\nConfused, Danielle kept her mouth shut. Okay, so he had said that at the beginning of the night, but it was true that she hadn't quite believed him. After all, he'd admitted having had a threesome with her. Multiple threesomes actually. A small smile on his face, Doug walked over and seated himself on the edge of the bed, putting his hand in the middle of her chest and pushing her down flat on her back. \n\n\"Poor confused Danielle,\" Tori mocked, coming to stand beside where Doug was sitting. She snorted. \"You're just too willing to think the worst of everyone, looking down your nose at everyone who does things a little differently. Well I'm looking forward to taking you down from your high horse.\"\n\n\"What's going on?\" Danielle finally asked, since it didn't look like anyone was going to explain to her. She did her best not to sound belligerent, but that just meant she ended up sounding scared and confused. \"I don't understand.\"\n\n\"I'm sure you don't sweetheart,\" Tori sneered. She was a beautiful woman, about the same age as Doug, with short dark hair cut in a bob. Taking off her coat, she revealed that she was wearing a leather corset which pushed up her generous cleavage - although not nearly as generous as Danielle's - and a short black pleated skirt that also looked like it was made out of leather. It didn't leave very much to the imagination. \"Because rather than letting Doug explain anything to you, you ran and then sent him an email. And then still wouldn't listen.\"\n\n\"He already told me all this-\" Danielle started to say and then yelped as Tori reached out and slapped her tit. To her shock, Doug didn't say anything, he just sat there, watching. \n\n\"I didn't say you could talk,\" said Tori sharply. \"In fact, I don't want to hear a single word from you unless Doug says that you can.\"\n\nDanielle looked at Doug, but he just smiled at her. The expression on his face didn't make her feel any less apprehensive, he looked more excited than anything else. \n\nClimbing onto the bed, Tori straddled her stomach. \"Put your hands above her head. Higher. Stretch yourself out. Mmmm... you've got such great big boobs Danielle... I was always jealous that Doug got to play with these.\" Doug's cousin squeezed Danielle's massive breasts hard enough that Danielle let out a small moan immediately; despite the fact that her hands were much smaller than Doug's, she seemed a lot rougher. But maybe that was just because Danielle's breasts had already taken a cropping and then a mauling as Doug fucked her ass. \"You see Danielle, Doug told you that we had threesomes and you immediately assumed that meant he fucked his cousin. But I don't like to play with boys. I like to play with girls.\" She gave Danielle an evil grin as she pinched her nipples hard, twisting them, as Danielle mewled and squirmed beneath her. Looking up at Doug, she could see the lust on his face as he watched his cousin play with her tits. \"And Doug likes to watch girls get it on. More specifically, he likes to watch a woman being dominated by another woman.\" Her tone become almost confiding, although she never let up on the nipple twisting, tugging and pinching. It was hard for Danielle to concentrate on what Tori was saying when her nipples were throbbing so hard. Every jagged rasp of pain seemed to shoot straight through her pussy, which was rapidly filling with cream all over again. \"Between you and me, I think the little hint of incest gets him off even more,\" she winked at Doug who just shrugged, \"but mostly it's the girl on girl thing, especially the way I like to do it.\"\n\nLeaning down, Doug whispered in Danielle's ear. \"It's true... I've never touched Tori sexually, but I do like to watch. And now I'm going to watch her play with you to her heart's content and then we're both going to fuck you. Don't cum sweetheart, you'll regret it.\"\n\nThis entire time, Tori was plumping Danielle's breasts, obviously in awe of their gigantic size, and thoroughly enjoying torturing Danielle's nipples. \"God Doug... these are so big... I bet a woman could fuck them. I think I'm going to try to do just that.\"\n\nGiving her a lazy smile, Doug leaned back, reaching down to his cock which was slowly rising again and rubbing his hand along the length of it. \"This should be interesting.\"\n\n\"Here slut,\" Tori snapped out in a completely different tone of voice that made Danielle jump. \"Hold these oversized melons up and together, they're too big and floppy for me to fuck.\"\n\nSlowly, Danielle lowered her arms from above her head and pushed her tits together, the same way she would if Doug wanted to fuck them. But she didn't understand how Tori was going to. The other woman tweaked her nipples once more and then lifting her body up, straddling Danielle's massive chest. When her wet pussy came down on top of Danielle's left breast, she realized that Tori wasn't wearing any panties. \n\n\"Mmmm... that feels nice... I can feel her nipple rubbing on my clit...\" Tori said as she began to rub her pussy all over the top of Danielle's breast. Danielle was both horrified and fascinated. She could feel the rubbery flesh of Tori's pussy teasing her sore nipple, it was almost soothing with its warm slickness, a much more gentle touch than Tori's hands had been. The other woman moaned and rubbed hard, making Danielle work a bit to keep her breast pointed upwards the way that Tori wanted it. \n\nGlancing at Doug, she could see that he was enjoying the show, his hand slowly fisting his cock which had hardened completely as he watched his cousin rub herself on Danielle's tit. After a moment Tori switched breasts, rubbing her pussy juices all over Danielle's other breast, coating it with her juices. The air felt cold on the one that she had abandoned, it was wet with glistening pussy juice. The smell of musky, feminine arousal filled Danielle's nose, mixing with the fear and anxiety in her head. \n\nTori frightened her a little; she had a good idea of what Doug wanted from her, but she had no idea what torments another woman might come up with. Plus, she seemed to have a grudge against Danielle for the way she'd treated her cousin. Already Tori was pushing beyond the boundaries of anything that Danielle had known, and she truly seemed to be getting off on rubbing her cunt all over Danielle's tits. It was frightening and exciting at the same time, and having Doug watching both made her feel a little safer and added more humiliation to the situation. \n\nLifting herself off of Danielle's breasts, Tori smiled as she saw her handiwork. \"Mmmm, that looks nice doesn't it? God these things are so huge... you're like a cow Danielle. Can you lick your own nipple? I've always wanted to see someone do that and I think these udders are big enough.\"\n\n\"She can,\" said Doug, his voice deep with lust. \n\n\"Lick my pussy juices off your fat tits,\" Tori commanded. \"I want to watch.\"\n\nReluctantly Danielle lifted her breasts to her mouth and began licking at the warm cream that Tori had coated them with, further soothing her nipples with her tongue. \n\n\"That's it,\" said Tori, looking fascinated as she reached her hand beneath to skirt, obviously aroused by humiliating and dominating Danielle. \"Lick my cunt jizz off of those knockers.\" \n\nTori's juices were musky, peachy but slightly bitter, on Danielle's tongue as she did her best to clean off her flesh. Some of it she couldn't get and it coated her chin, making her feel even more embarrassed, as the other two watched her lapping at her breasts. \n\n\"Get me some clamps, Doug,\" Tori said. It sounded halfway between an order and a request, and Danielle was surprised to see that Doug immediately got off the bed, his cock bobbing between his legs as he went to get the clamps. As soon as he was moving, Tori leaned over and whispered viciously in Danielle's ear. \"You're going to pay for how much you hurt him you stupid cow.\"\n\nDanielle wanted to protest, but Tori glared at her, just daring her to talk. Closing her mouth, Danielle clenched her jaw and waited. Had she really hurt Doug that badly? Why hadn't she read anything that he sent to her? Regretting her hasty actions, Danielle couldn't do anything about that right now except try and get through tonight... preferably without Tori doing any real damage to her. \n\nThe clamps that Doug brought over were rubber tipped, and - fortunately - not adjustable. Danielle recognized them though, they would be tight and painful, especially after all the abuse that had already been heaped on her breasts, especially by Tori's sadistic fingers. But at least Tori wouldn't be able to tighten them further. She sent Doug a look of pure gratitude, but he just stared back at her blankly. Biting her lip she tried not to feel disappointed that he didn't seem to care whether or not she felt grateful to him, at least he'd made it so that Tori couldn't be too vengeful on her tender body. \n\nWith Tori's head turned, she quickly wiped her chin of the pussy juices that had rubbed onto it from her breasts. The taste of Tori was in her mouth, on her lips, and every time she breathed, she sucked in the flavor of the other woman's essence. It made her feel a little nauseous, not because she was so against girl on girl action anymore, but because the other woman was so intent on tormenting and humiliating her. Humiliation wasn't something she'd ever experienced with Doug, but every time Tori opened her mouth Danielle felt herself shrinking, the shame of how she'd treated Doug sweeping through her. It was obvious that he wasn't looking at his cousin with lust; all of his desire was for Danielle, he just liked to see Tori dominating her. \n\nIf she hadn't been so frightened of Tori, so afraid of how brutal Tori might get with her, Danielle might have enjoyed having another woman dominate her while Doug watched. In fact, she was pretty sure that if Doug had watched her lesbian encounter earlier this week, she would have been turned on immeasurably. \n\n\"Keep holding your breasts up, I want you to present them for the clamps,\" Tori ordered as she turned back to Danielle, fiery lust apparent on her face. \n\nDanielle shrieked and squirmed beneath her as the first clamp was applied to her right nipple, pinching the tender bud tightly and half-crushing it in its rubber grip. Tears sparked in her eyes as her back arched and she panted, trying to breathe deeply through the pain. To her surprise, Doug sat beside her and began to stroke her hair tenderly, although his eyes were still hot with lust and all of his focus was on the clamp that was about to go on her left nipple. It bit into her tender skin and she shrieked again, her breasts topped with twin peaks of pain, they practically pulsed with it. \n\n\"Mmmm so pretty,\" Tori said, tugging on the clamp and making Danielle squeal again. Tori laughed and then began to undo her own top, unhooking the front of it so that the leather parted and her breasts came spilling out. As she did so Doug reached over and began to play with Danielle's breasts, squeezing and flicking her nipples so that little jolts of pain shot through her. She was both relieved and surprised to see that he was much more interested in the breasts he'd already been playing with than in watching Tori undress. ",
        "When the other woman was completely naked, she sat on the other side of Danielle and leaned back, stroking her own pussy as she watched Doug squeezing Danielle's massive mounds. The pain in her nipples was fading, only renewing when Doug actually touched them, and then sharp flares of pain would spike from them. It made her pussy throb in reaction, her ass spasming around the thick plug, as her cunt ached to be filled. \n\n\"Alright Doug, it's my turn,\" said Tori with a smile. \"Come here cow, I want to see those udders hanging down while you suck on my tits.\"\n\nTrepidation humming through her, Danielle reluctantly moved away from Doug's hands and crawled over to Tori, who spread her legs so that Danielle could kneel between them. The other woman had a thin strip of dark hair leading down to her wet slit and her dark pink nipples were already budded and hard.\n\nAs she leaned forward to begin to kiss and lave oral affection on Tori's hard nipple buds, she could see Doug moving around to the side of them to watch. Tori moaned as Danielle began to suckle at her nipple, opening her mouth wide and sucking as much breast flesh into her mouth as possible. Then she bit down as much as she dared and Tori hissed, one hand on Danielle's hair as she tugged her head back and the other reaching beneath Danielle to pull on one of the clamps. \n\nWith a shriek, Danielle opened her mouth and allowed Tori to jerk her head back. \n\n\"Ah fuck... that was good,\" Tori said with a wild laugh. An imprint of teeth could be made out on her breast, encircling her nipple. Danielle panted as Tori held her hair up. \"No wonder Doug likes you so much, you've got spirit. Do the other one, but not quite as hard or you'll regret it.\" The purring threat was almost eager. \n\nFilled with trepidation, Danielle lowered her head to Tori's other nipple, licking and sucking in the same manner, only this time it was harder because Tori hadn't released her grip on Danielle's hair and she kept playing with the clamp on her nipple. Danielle gasped and moaned as Tori released tiny bits of pressure on the clamp and then reapplied it, the pain making her writhe and pant. She could barely close her mouth long enough to bite down as she whimpered. Blood would start to push into her nipple, trying to recirculate as Tori opened the clamp enough to loosen it \u2013 which hurt like a bitch \u2013 and then let it clamp back down again \u2013 which hurt even more.\n\nWhimpering, tears ran down her face, as she did her best to bite Tori, but her constant yelps and shrieks inhibited her. Finally Tori yanked her head back.\n\n\"Do you like that sweetheart?\"\n\nHer limbs trembling, her left breast throbbing from the continued abuse of her nipple, Danielle couldn't shake or nod her head because Tori's hand was holding it so tightly. But Tori wasn't looking at her anyway, she was watching Doug, even though the words had obviously been meant for Danielle. She jumped as she felt Doug's hand settle softly on her ass, caressing down until his fingers slid into her plump pussy lips, soaking wet with her cream. \n\nLaughing, he pulled his hand away and held it up to show both women how quickly coated it had become.\n\n\"I'd say she likes it better than she'd ever thought she would,\" Doug said. He dipped his hand into her pussy again, coating it with juices, and then both women watched as he brought that hand to his dick, using her honey to coat his dick to masturbate with. It coated his huge dick, turning it glossy as he rubbed his hand over it. \"Mmmm, she feels good.\"\n\nDanielle couldn't help but be even more aroused by this show, as he masturbated with her pussy cream. She moaned, hoping to draw his attention. Immediately he looked at her his hand moving faster as their eyes met.\n\n\"You two are just too adorable,\" Tori said, rolling her eyes. She forced Danielle's head down between her legs. \"Lick me cow, Give Douggie here a show.\"\n\nKnowing that Doug was watching, and enjoying watching, did help Danielle's reluctance as her face was pushed into Tori's wet snatch. She stuck her tongue out and began to lick with long strokes, trying to remember all the little tricks that she'd discovered during her first lesbian experience, hoping to please the Domme. With a sigh of satisfaction, Tori's hand on Danielle's hair gentled as Danielle licked and sucked on her pussy lips, doing her best to please both Doug and Tori. \n\n\"Mmm you're not half bad at this,\" Tori murmured as Danielle pushed her tongue into the other woman's hole. She let out a long, low moan as Danielle pushed her tongue in and out of Tori's pussy hole, fucking her with it. \"Go lower, lick my ass.\"\n\nNow that was new. For a moment she hesitated and Tori's grip tightened on her hair as she brought her knees further up, exposing her asshole to Danielle's mouth. As she was bent lower to put her mouth to the rosebud of Tori's anus, Danielle's breasts began to press into the bed, her nipples rubbing against the fabric of the sheets. They itched and burned as more pressure was put on them. Trying to ignore the little jabs of pain, Danielle began to lick at Tori's ass.\n\nIn some ways she found she liked it better than eating pussy, it wasn't as wet and sloppy, although some juices had trickled down. There was a dry musk to the taste, but not dirty. Obviously Tori kept up with her hygiene. The other woman moaned and humped her hips up and down as Danielle pressed the tip of her tongue into the tight hole, remembering how good it had felt when Doug did that to her. \n\nAs she rimmed Tori, Doug's hand reached beneath her to tug on her clamped nipple, the one that Tori hadn't been heaping extra abuse on. \n\nSeeing what was happening, Tori ordered Danielle back to her pussy. This time Tori kept more control of the situation, her hand firm on Danielle's hair as Tori began to ride her face, shoving it into her cunt and rubbing her wet pussy all over Danielle's face; she had to close her eyes as Tori coated her face with cream, breathing harder and faster. It was no longer a matter of Danielle eating her pussy, Tori was literally rubbing Danielle's face into her cunt. \n\nMuffled screams emerged from Tori's cunt as Doug pulled the clamp off of one nipple and then the other, blood flowing back into the little buds as they rubbed as her breasts bounced and rubbed against the bed. \n\n\"FUCK YES,\" Tori moaned, forcing Danielle's face up and down harder. Salty tears mixed with her pussy juice as Danielle screamed and cried, the humiliation and sexual agony overwhelming.\n\nEven worse, Doug then returned his hand to her pussy, shoving fat fingers into her hole. It was tight with the plug filling her ass, and Danielle's hips jerked. She didn't want to feel good right now, not with her nipples screaming their torture and her face being rubbed along another woman's pussy, but Doug knew exactly how and where to touch her to turn her on the most. \n\nTori writhed and arched, pulling Danielle's open mouth onto her the top of her pussy where her clit was. Automatically, Danielle started sucking, her face feeling sticky and wet from pussy cream as she finally opened her eyes and blinked. Even her eye lashes were coated with it. Flicking her tongue against the engorged bud of Tori's clit, she did her best to please as the other woman cried out in orgasm, her hand tight on Danielle's hair. The vibrating whimpers Danielle produced as Doug finger fucked her only increased Tori's pleasure. \n\nFinally the other woman released her and Danielle panted four breath, her face falling back down between Tori's legs. The other woman's pussy was still in her face, but at least it wasn't on it. The swollen folds were slick and plump, bright pink with pleasure. \n\nFor herself, Danielle felt humiliated and frustratingly horny. Her ass was still in the air, filled with a rubber plug, as Doug's fingers plunged in and out of her hungry pussy \u2013 which still hadn't been properly pleasured \u2013 and her face was coated with another woman's juices. \n\n\"Clean her face off Tori, I want to fuck her,\" Doug said. Danielle turned her face away from him, not wanting him to see her like this. Tori gave a little sigh and got off of the bed, returning with a damp cloth that she wiped Danielle's face with, her hands surprisingly gentle. \n\n\"Thank you Master and Mistress,\" said Danielle carefully. For a moment Tori pursed her lips as if she was considering punishing Danielle for speaking, even if it was in gratitude, but Doug smiled. \n\n\"Good girl.\"\n\nIt had been so long since she'd heard him say that and it still sent a rush of pleasure through her. \n\n\"Tori, go get set up. Danielle, move over,\" Doug ordered. And just like that, the dynamic suddenly changed. Tori was no longer in charge, although Danielle didn't fool herself into thinking that she wouldn't have to follow Tori's orders, it was just that Doug was now directing the scene. She scooted over quickly as he removed his fingers from her pussy.\n\nLaying down on the bed, his cock pointed straight up in the air, already lubed with Danielle's juices, he grinned at her.\n\n\"Climb on Danielle, I know you want this in your pussy.\"\n\nOh she did, she really did. As she straddled him, leaning forward to line his cock up with her pussy, Doug lifted his head slightly and whispered in her ear. \"We only have an hour and a half left, so you'd best be quick about it.\"\n\nOnly... a shudder went through her. After all she'd endured, she was only halfway through this ordeal. Obviously she was looking at the glass as if it was half full and Doug saw it as half empty. On the other hand, she truly was looking forward to having his massive dick in her needy pussy; it felt so empty and aching, so slickly ready for him. \n\nThe broad head of his dick pushed against her hole and she moaned; she'd almost forgotten about the plug in her ass. Having a full asshole made her pussy so much tighter and she could feel her tunnel straining to open wide enough to accept Doug's cock. To encourage her, he reached up and began to play with her breasts, pinching her ultra-sensitive nipples. They were a dark red color after being clamped for so long, and the touch of his fingers burned like erotic fire, a sensation so intense that she couldn't tell whether it was pleasure or pain. \n\nPushing down hard, she felt the head of his cock pop into her hole, her quivering thigh muscles struggling to leverage her up and down and work his thick meat deeper into her as gravity tugged her body down on top of him. Her muscles were so weak that it was hard not to slide down faster than her pussy was ready for; the incredible fullness of having both her holes filled was making her writhe on top of him as she sank down. Every pinch of her nipples made her pussy convulse around him and Doug began thrusting his hips upwards, filling her faster and harder. \n\nDanielle lost control of her leg muscles and with a sloppy wet sound her body sank down full onto his, burying his massive cock to the hilt in her tight warmth. She threw her head back, crying out because it hurt so good as his dick completely filled her, the spongy head nudging against her cervix. \n\n\"Ride me,\" he ordered. \"I want to watch your tits bounce. And you're still not allowed to cum.\"\n\nShuddering with the overwhelming sensation of Doug's cock in her pussy while her asshole tightened around the thick plug, Danielle began to move herself up and down his slick pole; the burning friction only adding to the pleasure. She wanted to grind her body down on top of him, to rub her clit against his groin, but since she wasn't allowed to cum yet she didn't dare. Instead she leveraged herself up and down, high enough that half of his cock was out of her, before sliding back down on it again, focusing on pleasuring him as best she could. As her inner muscles tightened around him, it set off little tremors of pleasure through her body, but she fought them back, not wanting to know what her punishment would be for disobeying his order.\n\n\"Fuck yes.... god Danielle, your pussy feels so good...\"\n\nDoug surged beneath her, closing his eyes for a moment and then opening them again to stare up at her. His hands pressed on her stomach, pushing her further upright so that he could watch every movement of her bobbling breasts as she moved on top of him. With her hands pressed against his stomach, helping her push herself up and down, Danielle could feel his cock nudging deeper, pressing hard against her cervix. It hurt enough to take her breath away and at the same time she loved knowing that he truly was completely filling her up, all the way to her womb. \n\nThe rapt expression on Doug's face as he watched her moving on top of him was enough to make Danielle truly regret leaving him without allowing for an explanation. So much of what he had said tonight made sense; why had she run from him and not allowed him to talk her back to him? Maybe she just hadn't been ready yet. After all, even though she had thought herself pretty sexually adventurous, there were a lot of things that she hadn't done before this past week. The movement of her hips changed and she leaned forward, staring down into his eyes as she made love to him, her pussy sucking at his large cock. \n\nPleasure coursed through her, her breasts brushing against his chest. The hair on his chest tickled her tender nipples and the hard, rosy red buds tightened even more as she teased their bodies. Danielle placed her elbows on either side of his face, holding herself above him. The moment was remarkably intimate. \n\nReaching up to brush her hair out of her face, Doug tucked it behind her ear, smiling at her. Then his expression changed.\n\n\"I've waited so long to see you look at me like that. Try not to hate me now.\"\n\nShe had no time to ask what he meant before he was pulling her down, claiming her mouth in a searing kiss. One hand held tight to the back of her neck, the other on the small of her back, forcing her to stay securely lodged on his cock, so that she couldn't raise herself up again. Then the plug in her ass moved and Danielle cried out, the sound muffled by his tongue as he thrust it between her lips. Tori was back and she was sliding the plug from Danielle's ass. Her tight ring protested as it was forced open around the bulbous bottom of the plug and then she felt a sense of relief as the plug was removed.\n\nHowever, that relief didn't last long. Something else thick and rubbery and hard pushed against her hole, sliding in easily. It felt like a dildo, thick and long - although fortunately not as thick as Doug's cock. Her distended anus tried to grip the slick surface as it slid into her body, but it was too well lubricated. Squishy sounds came from behind her as the rubber cock pulled out and pushed back in, sloshing its way through the cum that Doug had deposited in that dark hole.\n\nThe sensation of movement in her ass was completely different from having Doug fuck her while a plug was there. As soon as the dildo was securely lodged in her she felt Doug's cock in her pussy begin to recede, pulling out, and then they began to thrust, one after the other in a steady rhythm. Hands gripped her butt cheeks and she could feel leather and flesh slapping against the creamy mounds, and she realized that Tori was fucking her with a strap-on. \n\nThey moved in unison and it was obvious from the easy rhythm of their fucking that they had done this before. Dizzily, Danielle realized that this must be another way in which they'd had threesomes with other women. The sensation was incredible, the sensitive nerves around her anus tingling as Tori raped her ass, her pussy spasming with the abject pleasure and pain of it, the two cocks rubbing against each other through the thin membrane separating her holes. \n\nAs soon as Doug released her mouth, his hold on her neck loosening, Danielle buried her face in his muscled shoulder, completely overwhelmed by all the shocking new sensations running through her. It was heaven and hell, her tender holes protesting and yet craving, her body shuddering uncontrollably as their thrusting began to pick up speed. She was surrounded by their moans, their hands caressing her body between them, using her like a piece of meat to find their pleasure.\n\nShe fought off her climax, the tension in her body becoming almost unbearable as they fucked her. Behind her, Tori was moaning and panting as she fucked Danielle's ass, her hands tight on Danielle's buttocks, spreading them apart so that she could see the thick rubber cock sinking into Danielle's hole over and over again. They pushed and pulled, working her like pistons on an engine, and her toes curled with the effort of holding back her release. Closing her eyes she could feel the tremors in her body increasing, her clit throbbing as every thrust of Tori's into her backside pressed the little pearl against Doug's body, trapping it between them and rubbing it over his flesh. \n\n\"Fuck.... oh fuck.....\"\n\n\"Don't cum... you're not allowed to cum...\" Doug whispered in her ear between groans. \"You'll be punished again if you do.\"\n\nBut her body's needs were clamoring loudly and she didn't care if she was punished anymore. \n\n\"Fuck you...\" she breathed in his ear, and then she felt the vibrating rumble beneath her as he growled in anger at her insult. His cock stabbed upwards, his pubic bone slamming against her clit, the way he had been the entire time, but this time Danielle ground herself down on him, rubbing her clit across flesh as her holes clamped down.\n\nShe screamed as white-hot ecstasy flowed over her and she clung to Doug's body as if he was her rock in a storm, the movement of the cocks like the waves of the ocean, pounding into her as she crashed against the cliffs. Pleasure sizzled up and down her spine, her lower body was hot and tingling, her muscles spasming as her holes were filled and emptied, filled and emptied. Her pussy gripped Doug like a vise, massaging the entire length of his cock as she rippled around him. Bellowing, he thrust and strained upwards, his hands hard on her thighs as he pulled her fully against him, his body rubbing against her engorged clit as he began to pulse inside of her. \n\nThe hot gush of jizz against her woman, the throbbing of his cock against her convulsing walls, and the rubbing press of her clit against him sent Danielle screaming into a multiple orgasm that was so intense tears began to fall onto Doug's shoulder as her pleasure receptors went into overdrive. It hurt, it blossomed, it sent her soaring into bursts of fireworks, her eyes unseeing as her body was given over to pure erotic bliss. Tori's heavy thrusting as Doug's cock emptied itself helped to draw out her release, her anus shuddering as flashes of pure heat seemed to flare from that overused tunnel, an anal orgasm that mixed with the pained pleasure she was already experiencing and left her a mewling, writhing mass of sensual flesh. \n\nShe collapsed on top of Doug, completely limp as Tori finally crowed her triumph and thrust hard into Danielle's ass, grinding herself between Danielle's cheeks as she gripped her hips and cried out her own release. Doug's hand stroked down Danielle's back as she whimpered and trembled, her ass still shuddering around the thick length of rubber that was now gyrating in her back hole. Finally Tori's cries of pleasure quieted and she let out a long sigh before easing the strap-on from Danielle's abused hole.\n\nThe sudden emptiness of her anal cavity made Danielle groan; it felt almost unnatural after having been filled for so long. She could actually feel her hole gaping, the slight ache in her anal muscles as it began to finally close for the first time in over two hours. Doug continued to stroke his fingers down the center of her back, soothingly. \n\n\"Get her a glass of water,\" he murmured to Tori. \n\nDanielle didn't look to see if the other woman obeyed, although she could hear her moving away. The trickle of tears were finally drying and her body felt both incredible and awful. Her anus was still sore and throbbing, feeling almost as if someone had burned it, her pussy was finally sated, and her breasts felt completely mauled. They were squashed down on top of Doug's hard body, making it hard to breath, but she didn't want to move either. Even mostly shrunken down, he felt good inside of her. Danielle rubbed her face along his collarbone, enjoying the feel of his silky skin with the slight bristles of hair against her cheek.",
        "He chuckled. \"Don't get too comfortable sweetheart, you still have a punishment coming to you.\"\n\nLifting her head, Danielle looked at him with pleading eyes, but he just shook his head at her. \n\n\"You not only disobeyed me, you did it willfully,\" he said, smiling wickedly. \"There's no way you're getting out of being punished during the last of my time with you.\"\n\nLetting out a groan, Danielle settled herself back down on his chest. She didn't protest his statement. As tired as she was, what could he really do to her that she would feel? Okay, she knew that was a stupid question, but at the moment she was too sated and exhausted to care. Besides, she at least had until Tori came back with the water to rest.\n\nUnfortunately it only took Tori another couple of minutes to do so, and then Doug was pushing her off of him. She went reluctantly, immediately missing the warmth and strength of his body touching hers, as well as the feel of him inside of her. Now both of her holes were empty, although she was relieved that her asshole was. Cum was starting to leak from it as it closed, and she winced as she sat down on the bed. It definitely ached more than when she'd lost her cherry. \n\nTori and Doug drew off to the side, talking in hushed tones that made her even more nervous as she drank her water. The cool liquid felt wonderful on her throat and in her heated body, helping to relax her and make her feel a little bit less exhausted. She drained the glass more quickly than she thought she would and Doug refilled it for her, having finished his conversation with Tori, only he sat next to her and held it rather than giving it to her to drink from. Drinking from a glass he was holding was another surprisingly intimate moment and she found that she was enjoying herself too much to really worry about her punishment.\n\nWith a start she realized it wasn't just that she was enjoying herself - she was starting to trust Doug again. Was that why she had run when he'd finally told her his fantasies? Not just disgust over the fantasies themselves, or her fear that she would never be enough for him since she didn't want to fulfill them, but maybe because she felt betrayed that he hadn't even mentioned them before? In addition to her fear that he would cheat on her with his cousin, which she could now see was a completely illegitimate fear. They were engaged in a threesome with her and yet there was no sexual tension between them and no interest in having sex with each other; all of their attention was completely focused on torturing and pleasuring her.\n\nWhen she finished sipping from the cup she found that she was sad the moment was over, and apprehensive about what was to come next.\n\n\"Half an hour,\" Doug said, smiling as he put the glass down. \"Do you think that's enough time to punish you sufficiently in, Danielle?\"\n\n\"I'm sure you'll make it work,\" she said dryly. He raised an eyebrow at her and she flushed. \"Master.\" The way she was talking to him she was practically begging for a harsh punishment. In fact, she was starting to wonder if she wasn't more of a masochist than she'd realized. While she was still tired and sore, most of her exhaustion had receded and she could feel anticipation starting to hum through her body again. Wanting to know what they had planned for her.\n\nThey didn't make her wait long. \n\nPlacing her in the center of the bed, Danielle's wrists and ankles were adorned with leather cuffs and her body stretched out in a large X, each of her limbs chained to a different bedpost. Her legs were splayed wide open, enough so that even her inner pussy lips were spread to accommodate the stretch. The completely vulnerable position was turning her on, despite the incredible orgasm she'd already had. Her pussy lips were so sensitive now that even the cool brushes of air as Doug and Tori moved around her seemed to make her nerve endings tingle, and her nipples were the same way although they'd finally almost returned to their normal coloring. \n\nTori clambered on top of her, kneeling with one knee on either side of Danielle's head, her pussy hovering over Danielle's face. Her pussy was a darker pink than before, swollen with blood from her orgasms, and her clit was out from its hood, looking like a tiny cock as it peeked from between her folds. Danielle was overwhelmed by the musky scent of arousal from the other woman, and she could feel her body responding in kind. The crinkled rosebud of her anus winked at Danielle from between Tori's buttocks.\n\n\"Here,\" she heard Doug say, but with Tori's pussy in her face she couldn't see anything. Oil slicked over her skin, her stomach and her breasts. It felt good and she relaxed into the tender ministrations of Doug's hands as he caressed her breasts and nipples with it. \n\nSomething wet and burning splatted onto her stomach and Danielle screamed in surprise and pain. The sharp flare of heat seemed to singe her nerve endings and she automatically struggled against the cuffs, but her body couldn't move anywhere. Another splat, just above her naval, had Danielle sucking in pussy flavored air. The first burning spot was already cooler, but she couldn't concentrate on it because a series of wet splats began to trickle down onto her oiled skin, landing in a small line heading up towards her breasts, a little path of fiery footprints that had her writhing with every drop. \n\nThe bed shifted and she could feel Doug settling into place between her ankles, so whatever was causing the burning was being done by Tori. Warmth, tingly warmth pressed against the bottom of her calf as the burning stopped. She could feel something cooling and hard settling on her stomach where the singing heat had come from. Wax, Tori had been dripping hot wax onto her. \n\n\"Do you know what this is?\" Doug asked from between her feet, the tingly warmth slowly moving up her leg towards her knee. It felt like little carbonated bubbles were popping against her skin, slightly ticklish and not at all unpleasant. \n\n\"No Master,\" Danielle said, trying to speak loudly so that he could hear her. \n\n\"It's a violet wand. Do you know what those do?\"\n\n\"Yes Master.\"\n\nSuddenly the pleasant bubbling warmth seemed much more threatening. Electricity... he was playing with electricity on her skin. But it didn't hurt... she tried to relax. When he reached her knee the warmth and bubbling seemed to increase, not to a painful amount, but right up to the line between pleasurable and painful. It slid up her thigh and Danielle began to squirm in fear again as the source of the electricity headed towards her vulnerable pussy, finding it impossible to be still. \n\n\"Please... please don't Master,\" she begged. \n\n\"You have your safe word,\" he said. \"Although it would be a pity to use it this close to the end.\"\n\nDanielle groaned at the trap he had her in. \n\nAn inch away from her pussy the prickling warmth was removed and her body throbbed and then relaxed, her tense muscles releasing. It was almost like a mini-climax. She blew out a long sigh of hot air onto Tori's humid pussy, shuddering with relief. And then shrieked as another drop of hot wax fell onto her rib cage, just below her right breast, followed another below her left. As she cried out, Tori's pussy lowered, muffling her cries into the soft, wet folds of pussy. It was hard to breathe, but she stuck out her tongue and started to lick at the wet, swollen slit, hoping that Tori might ease up her hips.\n\nThe other woman did begin to move her pussy up and down over Danielle's mouth, letting more bits of wax fall onto her sensitive breasts. Now that she knew what to expect the stings of pain weren't so bad, although she jerked every time one landed, it was more the anticipation of waiting. \n\nAs soon as the drops of wax stopped falling, allowing them to cool in a sprayed pattern on her creamy breast flesh, she felt the tingle of electricity on her other calf. The bubbly fizzing moved up her leg, slowly increasing in intensity. She began to lick more fervently at Tori's pussy, partly to distract herself and partly to try and redirect some of the energy that her fear was producing. The tingling increased, sliding quickly to that line of pain as the wand worked its way up her inner thigh and Danielle's limbs pulled at her restraints, her whimpers of anxiety vibrating along Tori's pussy folds. \n\nAgain, an inch away from her pussy, the wand stopped and she was able to relax again. More wax began to drip onto her breasts, one tiny drop hitting right next to her nipple and she writhed with the sharp pain of it. Her pussy throbbed in reaction. The combination of adrenaline from her fear and arousal from her vulnerability and the sexual torture was a heady mix, cream was leaking from her pussy and down into her asscrack, mixing with the cum that was slowly leaking from her lower hole.\n\nSomething touched her pussy and she jerked. It was warm and smooth, and as it rubbed over her pussy lips it began to tingle. Danielle shuddered and moaned, it felt incredibly good as the sensation of bubbles popping slid through her pussy, pushing into her hole. Wax dripped onto her nipples and she tightened convulsively around the wand, the electricity tingling against her inside. The wand was starting to feel hotter, more intense, as Doug fucked her hole with it. Hot wax now completely coated one nipple and she felt a drop on the other. Tori was moving her pussy on Danielle's face again, apparently tired of Danielle's distraction - she tried to concentrate on licking, but with everything going on with her own body she couldn't. \n\nThe wand slid out of her pussy and then it shocked her, like static electricity to her most sensitive bits but a hundred times more painful. She screamed as her clit pulsed, her pussy spasming. It felt like burning and tingling and slapping all at the same time. Tears leaked from her eyes. The tender folds of her pussy were already sensitive from the incredible orgasm she'd had, and the pain from the electric shock seemed to linger in her flesh, making it ache.\n\nAnother shock hit her pussy, closer to her clit this time, burning hot, and she writhed as she screamed into Tori's pussy. Pain flared in her uncovered nipple as hot wax was poured on it, the two areas of her body dueling for attention as she tried to work past the torture. Then the wand slid into her pussy hole, warm and tingling again, and her pussy shuddered around it. Doug was playing with her body, coaxing her to the line where pain and pleasure blended into one. Adrenaline and endorphins were pumping through her system as Tori pulled the wax from her breasts, pinching her already tormented nipples as she began to ride Danielle's face. \n\nShe could feel her own orgasm coming as Doug fucked her with the wand, playing with the intensity so that her pussy was filled with bubbles and then a tingling close to pain before going back to bubbles again, playing with her fear of the wand. Could he shock her like that while it was inside of her? Her pussy spasmed at the thought, her body trembling. Against her will, her hips began to move as Tori came on her face, the other woman's clit rubbing across her lips. The tight pinch on her nipples became almost unbearable and she could feel the first quivers of release beginning in her woman.\n\nSuddenly the wand was pulled from her pussy and she received a violent shock, straight to her clit. The sizzling pain rocked her, averting her orgasm and making her scream and writhe. Her entire lower body resonated with echoes of the incredible pain, as tears mixed with pussy juice on her cheeks for the second time that night. Sparks flared in front of her eyes and for a moment she thought she might pass out, everything was so bright and fuzzy... and then as her eyes came back into focus she realized that Tori was no longer straddling her face.\n\nHer pussy hurt and at the same time her body wanted the orgasm that had just been denied. Danielle whimpered. If Doug came near her with the violet wand again she would probably say her safe word, she didn't think she could take another jolt like that, even though the lingering fizzing pain made her incredibly horny. \n\nClosing her eyes, she let Doug wipe off her face again, cleaning it of the pussy juices. Carefully he removed the cuffs on her ankles and wrists and Danielle brought her arms down to cradle her breasts, feeling the hard wax on her stomach and soft mounds, but she only closed her legs a little bit. Her pussy was too sore and also too needy for her to close her legs all the way.\n\nThe bed shifted beside her and she opened her eyes to find Doug looking down at her, his hand supporting is head. He was on his side and his free hand came to rest on her stomach, warm and strong. Tori had disappeared.\n\n\"Is it over?\" she asked.\n\n\"If you want it to be. It's been three hours.\" His voice was quiet. Muted. Careful. \"Tori's gone.\"\n\nBlinking, she tried to figure out his expression and the strange tone in his voice, for some reason it felt like he was saying something with his words that wasn't quite clear to her.\n\n\"Did we fulfill all your fantasies?\"\n\nDoug laughed. \"All but one.\"\n\nShe frowned. \"Which one?\"\n\n\"I wanted to try giving you a golden shower, remember?\" Even now she could see the little spark of lust flare in his eye at the idea. Danielle made a face and he laughed again. \"That's what I thought.\"\n\n\"Why didn't you during the three hours, if that's what you wanted to do?\"\n\n\"Because it's not what you wanted,\" he said quietly. His hand smoothed over her stomach, running over the wax and down towards her mound. Tilting her hips up, Danielle found that she was holding her breath, wanting his fingers to slide between her legs and massage her sore pussy lips, to soothe some of the lingering, throbbing ache and to give her the orgasm her body wanted. But he didn't. He just smiled, came close to her mound and then continued moving his hand across her lower stomach. She let out a huff of disappointment.\n\n\"I thought that the three hours was about what you wanted.\"\n\n\"Maybe to you.\" For a moment they were both quiet, Doug staring down at her body, her watching his expression. Eventually he met her eyes again. \"I think you got the wrong idea about our relationship and BDSM. I never wanted to do anything that you didn't want to do. I had fantasies, yes, but I didn't need to fulfill them unless you were interested too. Just because I was dominant, that didn't mean I was going to force you into anything you didn't want.\"\n\n\"I think I know that now,\" Danielle said, reaching a hand up to touch his face, wanting to wipe the sadness in his dark eyes away. \"I'm sorry I didn't let you explain before.\"\n\n\"Me too.\" They were both quiet again for a long moment. \"You don't have to leave now that the three hours are up. You can stay if you want to.\"\n\n\"Stay for the night or stay and be your girlfriend?\"\n\nAlthough he looked expressionless, there was something vulnerable in Doug's eyes that completely melted Danielle's heart. It didn't matter that he'd just spent the last three hours subjecting her to the most excruciating sexual torture she'd ever experienced, he'd also made sure that she'd enjoyed every last bit of it and he'd taken care of her throughout all of it too. There was a lot more to Doug than she'd given him credit for in the past.\n\n\"Whichever.\"\n\nDanielle snuggled closer to him and something akin to hope flared in his eyes. \"I'd like to stay and try being your girlfriend again if that's okay with you.\"\n\n\"That's more than okay with me,\" he said warmly, leaning down to kiss her lips. Danielle slid her hand along his jaw and behind his neck, happy to be able to touch him, to curl his hair into her fingers as their tongues probed each other's mouths. When he pulled back, he was panting and his long cock was pressed against the side of her body, hard and ready.\n\n\"I want to fuck you.\"\n\n\"Okay.\"\n\n\"I'm not going to be gentle about it.\"\n\nSpreading her legs wider, Danielle stared deeply into his eyes, her voice dropping to a husky whisper. \"Good.\"\n\nHis fingers slid down her stomach again, this time curving over her mound and into her pussy. He pinched her clit. Hard. Gasping, Danielle clung to him as her body arched. \n\n\"You want me to hurt you.\" His voice was a low growl in her ear as he shifted on top of her.\n\n\"Yes,\" she said, moaning as he settled between her legs. \"Fuck me hard Doug. Hurt me.\"\n\nThe head of his cock probed her hole and then he shoved in, impaling her with half of his spear as she cried out in pain. Her pussy walls were forced open, the tender flesh of her pussy lips almost caving inward with the force of his thrust. Backing out one inch, he thrust forward again and buried himself to the hilt as Danielle thrashed beneath him, finding it impossible to hold still now that she wasn't restrained. \n\nDoug's hard body pressed her down, his hands finding her wrists and holding them down on either side of her head, his broad chest smashing her breasts against her body. The rub of her nipples against his wiry hair made the tender buds burn, although not nearly as bad as her pussy was. He gave her no time to adjust, he set a bruising, forceful rhythm, plundering her cunt with his giant cock, pounding her into the bed. Danielle gasped and moaned as he fucked her hard, the aching pain that was lingering throughout her body slowly turning into her own secret pleasure.\n\nShe liked being at Doug's mercy, having her hole forcefully stretched beyond her endurance, being erotically tortured and then fucked silly by his giant cock. The orgasm that he had derailed with the electric shock to her clit was gathering again; that tiny nub feeling extra sensitive, almost as if the shock had made it bigger and now it was squashed and abused by Doug's bruising thrusts. \n\n\"Oh fuck... oh fuck oh fuck oh fuck...\" she chanted over and over again as Doug rammed her, showing no mercy to her abused flesh as he did an erotic and painful bump and grind against her tortured folds before withdrawing and slamming into her again. There was no way she could match him thrust for thrust, he was moving too hard and too fast, all she could do was lay there with her legs loosely draped over the back of his, her lower body flopping as he took her hard. \n\nThen her orgasm crashed into her like a freight train, ecstasy slamming into her and making her scream with the painful rapture of it. She was barely aware of Doug pushing her hands above her head and holding both of her wrists in one of his huge palms, until his other hand found its way down to the steamy juncture between their bodies and his strong fingers found her swollen clit, pinching and twisting it as she came. The extreme sensitivity of that organ by this point made his handling of it brutally torturous, and she screamed again, a different kind of scream as her release went from blissful to agonizing.\n\nShe couldn't stop cumming and it hurt, especially as Doug abused her clit even more, her pussy convulsing continuously around his cock. He'd had to slow the pace of this thrusts, but it barely mattered because she was now writhing and twisting beneath him, trying to get away from his sadistic fingers as he tormented her further. The arrival of another, stronger, orgasm blinded her and she went falling into the firework laden darkness.\n\nWhen she opened her eyes again her pussy was convulsing around Doug's relentless cock, her hands free although they were still beside her head, and Doug's hands were gripping her hips hard enough to leave bruises as he ravaged her overworked pussy. Seeing her eyes open and her whimpering moans coming to life again, Doug yelled and threw his head back, his body arching so that his hips thrust forward hard enough that Danielle felt like a baseball bat had just rammed into her womb. She shuddered as he finally began to pulse inside of her again, hot jizz splashing against the opening of her womb and flooding her tunnel with white froth. ",
        "Doug's hands slid up her body as he leaned over her, a slow motion collapse on top of her. Shuddering with the last of her own orgasm, wringing pleasure from his cock as her pussy rippled around it, Danielle wrapped her arms around his shoulders, holding him tight on top of her. Partly for the intimacy of it, and partly because she wasn't sure if her body could take it if he did anything else to her poor pussy. \n\n\"Fuck that was amazing,\" he whispered hoarsely.\n\n\"Yes,\" whispered Danielle, turning her head to kiss his temple. Doug moved so that he could kiss her lips, softly, lingeringly. \n\n\"Do you think you'll want to do something like this again sometime?\"\n\nShe thought about it for a moment. \"Not any time soon. I don't know. Maybe.\"\n\n\"Three hours for my birthday?\" he asked with a twinkle in his eye. Danielle laughed. And then realized that his birthday was six months away. He really was thinking long term.\n\n\"I still love you,\" she said. \"I missed you. I think that's why I refused to listen to any of your explanations, I knew that if I read anything from you or heard your voice that I would go back to you, no matter what your reasons were.\n\nHe smiled at her, not looking at all upset. \"I still love you too.\"\n\nAnd he lowered his mouth for another kiss.\n\nWrapped up in his arms, Danielle realized that she didn't really care about the bet anymore or whether she or Violet was more sexually adventurous. That had been something shallow, to fill the hole that leaving Doug had left in her heart. Now she was a winner either way, because she had Doug back and she was ready for him and his fantasies. And she was better for him now, they'd be able to work through things together. Kissing him hard, she felt the aches of pain in her body like a badge of honor. Who knew that the contest would end up sending her back to the place she really belonged?"
    ],
    "authorname": "Goldeniangel",
    "tags": [
        "ex"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/contest-alternate-chapter"
}