{
    "title": "Outsourcing",
    "pages": [
        "Author's note: this is just a short, fun thing I put together while staring out at the lawn with a drink in my hand. No deep meaning here.\n\nOutsourcing: his shrewd wife taps ready teen for booty duty\n\n**~~**~~**~~**~~**~~**~~**~~**~~**~~**~~**~~**\n\nDammit I love my wife.\n\nHer name is Meredith and everybody calls her Merry. She's perfect. She works a full-time job as a management consultant. She cooks, cleans, does the laundry and the grocery shopping. She files our taxes and she walks my dog. She's a slim, dark haired twenty-seven year-old hottie that pounces on me for sex at least twice a week. Plus, she's smarter than me and she can deepthroat like a pro.\n\nI don't deserve her. I'm not sure anyone does.\n\nThe sick part? I was still only 99% happy. So why the 1% hold-out? I'll be blunt: she wouldn't let me put it in her ass.\n\nI know, I know, I'm an ungrateful bastard.\n\nI'd tried everything to get her in mood for anal. Soft music. Massages. Long hot baths. Booze. Pot. We even tried ecstasy once.\n\nBut nothing worked, I heard the same things over and over.\n\n\"Exit only, honey.\" \n\n\"Why is your tongue in my butt again?\"\n\n\"Slide that dick back up to the right hole or I'll break it off, Romeo.\"\n\nIt was driving me crazy.\n\nI love my wife. She's gorgeous. I'm in lust with her fantastic little heart-shaped ass. It looks incredible in jeans. In fact, it's how we met. Nine years ago, I picked her up in the grocery store after following her swaying rump and swinging chestnut brown ponytail all the way through the market before working up the courage to ask her out.\n\nWe hit it off great. But I soon found out that her perfect tush was just for looking. No pokey-pokey. Or licky-licky. Maybe some rubby-rubby, but that was it.\n\nSeven years of marriage later, I was going insane. Not being able to take advantage of my wife's callipygian gift was like owning a ferrari you're not allowed to drive. It just didn't seem right.\n\nThe funny part is that my wife was sympathetic. She actually felt bad about not being into anal. No way in hell she was going to do it, but she felt bad about it.\n\nFor my twenty-eighth birthday, she solved the problem. Did I mention that my wife is smarter than me? I think it was right before the part about her deepthroating like a pro.\n\nIt started about two months before my birthday. I came home from work and my wife was packing up a cardboard box. It had a really weird mix of stuff inside: chips, pretzels, socks, a roll of duct tape, a fuzzy pillow, some paper towels, a couple of bottles of wine and...\n\nI looked closer...\n\nA bottle of Astroglide? And a dildo? And a little buttplug? And a boxed set of DVD's titled \"Assmaster's Vols. 1-6\"?\n\n\"Uh, honey?\" I reached down into the box to pick up the videos. I was amazed she even knew where to buy things like this.\n\nMy wife smacked my hand away. \"Hey! It's not for you, Tom.\"\n\n\"Oh. So who's it for?\"\n\n\"Sorry stud, can't tell you. I'm working on your birthday present.\"\n\n\"You're mailing someone else porn as part of my birthday present?\"\n\n\"Yep.\"\n\n\"Riiiiight. I'm going to grab a beer and go sit on the back porch until I figure this out.\"\n\n\"Good luck,\" she smiled as she taped the box closed.\n\nI couldn't figure it out.\n\nSomething suspiciously similar happened a month later. I had just mowed the lawn and I was taking a shower. My wife came into the bathroom with a digital camera. She took off her clothes, dug a disposable razor and a can of shaving cream out of the cabinet, and got in the shower with me.\n\nI saw where this was going when she spread some shaving cream on my nuts.\n\n\"You haven't shaved my balls since our honeymoon.\"\n\n\"I want you to look good for some sexy pictures.\"\n\n\"So that's what the camera is for?\"\n\n\"Mmmhmmm.\"\n\nShe hummed to herself happily as she finished my sac and then shaved the patch above my shaft too. When she finished, she rinsed me clean and pulled me into her mouth for the deepthroat treatment.\n\nDammit I love my wife.\n\nShe bobbed and slurped on my seven inch pole and smiled up at me while she did it.\n\nThen she popped her mouth free, turned off the water, and grabbed her camera. She used it to snap a few pics of my stiffy from different angles.\n\n\"Uh, honey. What do you plan on doing with these pictures?\" I wondered.\n\n\"Can't tell you, I'm working on your birthday present.\"\n\n\"Riiiiight.\"\n\nShe ditched the camera and came back to swallow me again. About two minutes later, I was grunting and spewing cum down her throat. She happily gulped over and over again until I finished.\n\nThen she kissed the tip of my deflating dick and smacked me on the butt on her way out of the shower, \"You're welcome.\"\n\n\"Was that part of my birthday present too?\"\n\n\"Naah, that was just a blowjob.\"\n\nShe smiled as she picked her camera up and left.\n\n\"I'm going to figure this out,\" I yelled down the hall.\n\n\"Uh huh, good luck,\" I heard her laugh.\n\nI couldn't figure it out.\n\nWhat really threw me was when the delivery guys showed up at our house the next Saturday. They carted off our older washer and dryer and installed a set of new high-capacity, front-loading ones.\n\nMy wife came downstairs just in time to sign their paperwork.\n\n\"So what's with the new appliances, Merr?\"\n\n\"Can't tell you, I'm working on...\"\n\n\"...my birthday present,\" I sighed.\n\n\"Yep,\" she smiled brightly and leaned up on her tiptoes to kiss my nose, \"Come on upstairs and fuck me as a thank you. You might as well get a head start. You'll have a lot of thank-me fucking to do after you get your present.\"\n\nI fucked her. I had no idea what I was thanking her for. But I fucked her.\n\nFinally, my goddamn birthday came. Nothing freaky happened in the morning. My wife and I both got ready for work like usual. She did give me a nice long smooch as we climbed into our cars and then she told me to get home from work as soon as I could.\n\nOf course, it was an incredibly shitty day at work. Worse, traffic sucked on the way home. Fridays are always the ugliest where we live. It was after seven o'clock before I even pulled into the garage.\n\nI had to step over a huge, unfamiliar duffle bag packed with dirty clothes laying in the laundry room. The spiffy new washing machine was already going. I made the turn into the kitchen and was happy and sad at the same time.\n\nHappy because our old next-door neighbor's daughter was chatting with my wife. Dylan had always been a nice girl. Merry and I were the older brother and sister she never had. She used to hang out at our house all the time. We'd even given her a key.\n\nOf course, Dylan had turned into a drop-dead hottie as she grew up too. The friendly and nosy ten year-old I'd met developed into a nubile young heartstopper before she moved away.\n\nI looked at Dylan standing behind the counter next to my wife. Her dark blonde hair, big green eyes, and fit little tennis player's body were probably driving the guys at her college nutters.\n\n\"Dylan!\"\n\n\"Happy birthday, Tommie!\" she grinned. She bounced with excitement and I watched her perky chest bob up and down under her t-shirt. And yet she didn't run over to hug me like she used to.\n\nMaybe she'd outgrown me or maybe I was an uncool old guy now. Well, I was nearing thirty. That bummed me out. Plus, Dylan's unannounced visit meant that whatever sexy fun my wife had planned for my birthday would have to wait.\n\nI felt old. Old and horny. That's a crappy combo.\n\nI had just about lost hope, but I still asked, \"So Merr, can you at least tell me what you got me for my birthday?\"\n\nMy wife pointed at Dylan, who was now practically vibrating with excitement. Her brassy blonde ponytail was twitching back and forth behind her head.\n\n\"Dylan has my birthday present?\"\n\n\"No sweetie, she is your birthday present.\"\n\nI looked at the still grinning teen, \"You're my birthday present?\"\n\n\"Yep, I'm your birthday present,\" she cheered, lifting her arms in the air.\n\nWell, it was nice to see her again. Maybe we could go play some tennis tomorrow. Or maybe make a big pitcher of sangria and she could fill me in on the last year of her life since her folks moved away or...\n\nThat mental train fell right off the track when my wife nudged Dylan towards me and the grinning teen rounded the kitchen counter then bounded over for a hug, crushing her sleek little body into mine. \n\nHuh? Dylan was naked from the waist down.\n\n\"Dylan, you're not wearing any pants.\"\n\n\"Nope, and I'm not going to be wearing any tomorrow or the next day, either. So...\"\n\nI looked at my wife over Dylan's shoulder. \"Whoa, you win. As birthday presents go, having a half-naked coed wandering around our...\"\n\nMy wife held up her hand and was biting her lip to fight back her laugh, \"Hold on genius, you didn't let Dylan finish.\"\n\nI looked back down at Dylan, she was smiling up at me as she waited patiently. \"I was going to say that I'm not wearing any pants so you can fuck me whenever you want while I'm here for the weekend.\"\n\nI felt woozy, the entire world rotated left about three degrees.\n\n\"But only?\" My wife, looked at Dylan and arched an eyebrow.\n\n\"Oh yeah,\" Dylan nodded and smiled even brighter, \"just in my butt though. Sorry, anal only. Merry's rule.\"\n\nIn the pause that stretched out after, the first thing I thought to do was look around for some hidden cameras. This had to be a joke.\n\n\"You're... you're serious?\"\n\n\"Yep,\" they answered in stereo.\n\nMy wife made her \"patient face\" while she cracked open a few pistachios from a bowl on the counter. It's the face she makes when she explains stuff to me. One last time: she's smarter than me.\n\n\"You see love, I've done a lot of thinking about our anal sex problem. I'm just never going to like it. At one point, I was even looking into hypnosis. But the idea of paying some psychiatrist to put me to sleep and convince me that I liked it in the ass seemed too weird to go through with it.\"\n\nShe snickered then shook her head and chewed a few pistachios. She was giving me time to let this sink in before continuing.\n\n\"The trouble was, I was thinking about our problem like a wife. I should have been thinking about it like a management consultant. When I switched gears, it took all of thirty seconds to figure out what to do about this whole butt sex thing.\"\n\nShe smiled as she came over to bat at Dylan's ponytail playfully, \"I'm outsourcing it. To an expert.\" She patted the little blonde's head.\n\n\"You're an expert?\" I looked down at Dylan suspiciously.\n\n\"Yep, I've had more than my share of backdoor loving. In high school, I let one of the guys on the swim team give it to me in the ass. And I really liked it. He bragged about it in the locker room the next day. After that, there was a waiting list for my butt. The tennis skirts I wore half the year helped too. Great advertising. What is it with you guys and tennis skirts anwway?\" she laughed.\n\nI couldn't answer because I was still processing.\n\n\"So you never wondered why I had so many dates in high school, Tommie?\"\n\n\"I just thought you were popular...\"\n\n\"Oh, I was popular all right,\" Dylan laughed, \"And I loved every minute of it too. But I went cold turkey on that stuff when I started college. I don't need that reputation following me up there.\"\n\n\"Except?\" my wife prompted, chewing more pistachios calmly.\n\nDylan nodded. \"Except now I miss getting poked in the heinie. A lot. And there's nobody to play those games with me at school. I'm going crazy. Of course, it didn't help that Merry sent me that care package chock full of anal porn, sneaky bitch,\" Dylan giggled.\n\n\"Or?\" Merry's nose twitched proudly.\n\n\"Or the pics she e-mailed me of your giant stiffy,\" Dylan smirked.\n\nMy wife grinned. \"Sorry Dylan, but it did give you some nubbin rubbin' material for those lonely nights up at school. It also softened you up a little too before I pitched my idea,\" she admitted.\n\nMy wife looked up at me, \"You see where this is going, honey? You're going to help Dylan and she's going to help you.\"\n\nShe took Dylan by the hips and tugged her away, \"Girlie, why don't you bend over the kitchen table there and show him what he's won? I'm going to go TiVo his Friday night TV shows. This is going to take awhile.\"\n\nI watched my wife leave.\n\nDammit I love my wife.\n\nDylan grinned and moved to the kitchen table. She slowly draped her little body onto it from the waist and looked back at me over her shoulder expectantly.\n\nI looked down.\n\nDylan's bare ass was precisely what you'd think a nineteen year-old star tennis player's ass would look like. It was tiny and round and firm. Her toned miniature cheeks made a tight cleavage. There were even two magical little dimples just above her ass on either side of her spine. It was the single hottest butt I'd ever seen. Even hotter than my wife's.\n\nDylan was staring at me as she swished her hips from side to side a little. Her tiny tush swayed back and forth without a single jiggle. Just a smooth flexing of her sleek buns.\n\nOh dear god in heaven.\n\n\"Go ahead and touch me, Mr. Marsh. Don't be scared. I'm your birthday present.\"\n\nThat was dirty pool. She'd always called me Tom. The 'Mr. Marsh' thing was just to mess with me. Of course, it seriously worked.\n\nI reached forward and touched Dylan's ass like you'd touch the holy grail or the ark of the covenant. With reverence, awe, and humility. This was proof that there was a divine power out there. He existed and he had molded this little blonde coed's perfect ass just for me.\n\nTouch it? Oh no, it needed to be worshipped.\n\nI fell to my knees in my own kitchen and buried my face between the finest buns I'd ever seen.\n\nDylan didn't seem surprised a bit. She didn't jump. She didn't even twitch. And she certainly didn't wiggle away. No, she actually pushed her ass into my face. And she moaned.\n\n\"Your wife got me some kiwi-strawberry bodywash. Like the smell? I just used it in your shower a little bit ago. I wanted to be nice and fresh for you. Of course, I'm happy to go funky too. If that's what you like. I'm game for anything this weekend.\"\n\nShe clenched her cheeks around me gently a few times as she talked, massaging my face with her buns. Dylan knew her ass was phenomenal and she knew how to use it to drive a guy wild.\n\n\"I muv yr mass,\" I muffled out from her butt, refusing to pull away long enough to pay her the compliment.\n\nShe understood me anyway.\n\n\"So happy to find a boy who fully appreciates it.\"\n\nShe reached back and laced her fingers into my hair and pulled my face into her more firmly.\n\n\"Lick me,\" she whispered, \"I want you to.\"\n\nMy tongue came out on its own and lapped at her tiny pale sphincter, twisting and digging at her tight little knot.\n\n\"That's it, stud. Keep licking. Oooh, I missed this,\" I heard her groan. \"Here, give me your hand too?\"\n\nShe reached back and guided it up to her little mound. Her pussy was completely hairless and perfectly smooth.\n\n\"Like it Tommie? I sugared myself bare for you last night. It hurt a little but now I'm so smooth and bald for you. I've been looking forward to this weekend. I've been texting Merry about it all week. I was worried she'd back out.\"\n\nDylan circled my thumb and teased it at the entrance to her already slick pussy. Then she dragged my thumb down her smooth slit and centered it on the hardened nub of her clit.\n\n\"Rub me a little too? Real gently while you're rimming me. It always makes me cum,\" she panted.\n\nI swirled tight circles on her clit. It was as hard as a little pebble. With some patience, I also pried my tongue through her asshole and drove it in and out of her quivering opening. It was twitching and snapping on my tongue like something small and hungry.\n\nDylan was enjoying this as much as I was. Her pussy juices were soon dripping down my wrist.\n\n\"Keep licking... almost there...\" she mewled.\n\nNo problem. I could have done this all day. I licked, sucked, and lapped at her strawberry-kiwi flavored ass with glee.\n\nWhat followed was one of the top ten moments of my life. This adolescent goddess twisted through her orgasm with my nose buried between her cheeks. She rode my face, my tongue, and my thumb, grinding and humping as she came. Her movements were so erratic that my thumb slipped off her clit and sank into the tight wet heat of her pussy. Her vagina was heaving and squeezing just as violently as her asshole nipping at my tongue.\n\n\"Gaaaaaah,\" she wailed and came harder.\n\nI almost blew off in my pants. This girl seriously liked getting her salad tossed.\n\nDylan finally let go of my hair and slumped limply on the kitchen table, panting to catch her breath.\n\nI was standing up and rubbing my knees when my wife swung back into the kitchen. She was carrying a basket of laundry.\n\n\"So? How was it?\"\n\n\"Awesome,\" I gasped.\n\n\"I was talking to Dylan silly,\" she rolled her eyes. \"Well?\"\n\nDylan brushed away some of the blonde hair that had fallen out of her ponytail onto her face and looked up. \"You are seriously missing out here, girlie. He is really, really fucking good at rimming.\"\n\n\"I'm going to have to take your word for it,\" my wife smiled. \"Do you wash your work-out clothes with your whites or separately?\"\n\n\"Separate.\"\n\n\"Gotcha. So, going to fuck my hubbie now or later?\"\n\n\"Now. And probably later too. He's got my motor seriously running.\"\n\n\"All right, but don't kill him. I like having him around. Need me to suck him a little? You know, to get him slippery?\"\n\n\"Seriously? That would be great. I like spit more than lube. A little friction in the bum is better. You feel more.\"\n\n\"Yeah, going to have to take your word on that too,\" my wife half-smiled. She set her laundry basket down and knelt in front of me.\n\n\"C'mon honey, let's get your slacks off so you can put your cock in the nice little girl's ass.\"\n\nMy wife had my pants down and my drooling dick in her mouth a few seconds later. I was as hard as I'd ever been. I was getting oral from my wife with a nubile young blonde waiting for me to sodomize her. Maybe I'd died in a car crash on the way home from work because this was my personal heaven.\n\nI followed my angel-slash-spouse as she pulled me by my stiffy over to Dylan's insane ass and rubbed my tip up and down the smooth valley between her cheeks.\n\n\"Sure you're ready for this, Dylan?\" my wife asked, \"You're not like, out of practice on the whole anal sex thing are you?\"\n\n\"S'like riding a bicycle. I'll be fine.\"\n\n\"Okay, it's your ass. Literally,\" my wife chuckled. \"I'm leaving though. It's going to hurt just to watch.\"\n\nDylan reached back with one hand to pull one of her cheeks open as I leaned into her with my erection centered on her backdoor. Even though her little hole had been thoroughly rimmed and I was dripping with spouse spit, my cock still buckled and bent as I pressed it against her rosebud. Young Dylan was small and tight.\n\nBut she also knew what she was doing.\n\n\"Gimme a sec?\" she exhaled softly.\n\nI eased up but was still resting against her backdoor so I felt her sphincter pulse and stretch as she forced herself to relax. Her ring opened slightly.\n\n\" 'Kay, push again,\" she said quietly.\n\nI did and it worked. I watched as my tip sank slowly inside her then carefully slid an inch into her ass after she didn't object. It was like easing into hot butter. I never remembered anal sex feeling this good. Wow, Dylan's butt was perfect on the inside too.\n\n\"Wait a sec,\" she murmured. I felt her squeeze and relax a few times. The squeezes were a firm grip, like a rectal handshake. Dylan seriously knew what she was doing. \"Ooh, that's nice. Okay, more Tommie.\"\n\nI pulled out a bit and sank almost halfway into the furnace of her tight rear entrance.\n\n\"Dylan, marry me?\" I whispered jokingly. I used to whisper marriage proposals to her when she was little.",
        "Her answer was always the same and she gave it to me now, \"You're already married silly. You love Merry,\" she giggled.\n\nBut then she nibbled her lower lip and gave me better smoky-sexy eyes than a teenager should able to pull off, \"It's nice that she's willing to share you with me, though. I'd have boinked you awhile ago if I knew she'd be this cool about it. So how much more of you is there left out there?\"\n\nI glanced down to where my shaft was wedged between her round little buns. I pulled them apart gently and saw her tiny ring struggling around my girth.\n\n\"About another four inches.\"\n\n\"Mmmm, give me half of that.\"\n\nI sank further into her. It was getting hotter the deeper I got. Dylan ass was an inferno.\n\n\"Jesus, this is hitting the spot,\" she moaned while I sank my way in, \"Is anal as good as you remember, stud?\"\n\n\"Better. It's all I can do not to blow my load right now.\"\n\n\"Do the best you can. If you can't last, you can make me happy next round.\"\n\nNext round? Oh god, she was a treasure. \"Dylan, I love you. Run away with me.\" That time, I was only half-joking.\n\n\"Awww, I love you too. And I love having your giant dick buried in my butt. Speaking of which, I'll take the rest now, please.\"\n\nI ground myself home into her ass. The gorgeous blonde adolescent shuddered hard enough that it shook the table a little.\n\n\"Whoa,\" she gasped, \"Hold on. I didn't expect... I've never... jesus, you're a big boy. I need you to keep still and let my body rearrange a little, okay lover?\"\n\n\"Yep.\" Who was I to argue?\n\nWe stood there in the kitchen together waiting for her miniature body to adjust to my ridiculous intrusion. She took deep breaths and let them out slow. I rubbed her buns gently.\n\nThat's when my wife came back.\n\n\"Dylan, do you use sheets or fabric softener with... holy crap honey! The whole thing on the first try? I hope you know what you're doing.\"\n\n\"Oh, trust me, I know what I'm doing,\" she gritted out through clenched teeth.\n\n\"Doesn't it, you know, hurt?\"\n\n\"A little, but in a really good way,\" she was taking her deep breaths again.\n\nMerry looked at me seriously, \"Be gentle with her, sweetie. It's been over a year since she's done this and those were just high schoolers. You're probably bigger than they were.\"\n\n\"Oooh yeah, he's bigger,\" Dylan giggled nervously into the table, \"Longer and thicker. No wonder you won't let him do this to you. His cock is not for a beginner's ass.\"\n\n\"Okay, Tom,\" Dylan fidgeted under me finally, \"I think I'm ready. Start poking fella, but go slow for me in the beginning. You going to stick around and watch us Merry?\"\n\n\"No,\" my wife answered, but it was a small 'no' and there was no conviction in it. She didn't move to leave either.\n\nI pulled back and felt the long glorious friction of a young ass gripping me as I withdrew almost completely. Dylan's knees shook and she moaned as I dragged at her tender insides on the way out.\n\nI paused and then slowly started working myself back inside the little teen. She smartly arched herself up towards me to help. Inch by inch, I slid into her absurdly tiny butt again. Her ring collapsed inward, following my shaft as I drove into her carefully.\n\n\"Holy hell, Merry,\" Dylan grunted at about the three-quarter mark, \"he's fucking my damn liver.\"\n\n\"Awww, does my hubbie have too much cock for you honey?\" she teased.\n\n\"Uh uh, this is awesome. It's never...\" she gasped as I pulled out and sank into her again, \"it's never felt this fricking good before.\"\n\nShe looked back at me through slitted eyelids, \"Tom, remember when I said it would be okay if you came early and that you could catch me on the next round? I lied. You've got me seriously worked up already and I need to cum. If you blow before I do, I'll twist your nuts off.\"\n\nI stopped fucking. It was the only way to keep from boiling over in her ass.\n\n\"No!\" Dylan mewled, \"Keep going.\"\n\n\"You want me to keep fucking you and not cum? Dylan, I don't think that's possible.\"\n\nDylan's hand reached around and she circled my shaft with a few fingers partway down. She squeezed me tightly.\n\n\"Go,\" she pleaded.\n\nI plunged into her again up to her fingers. But with her short reach and her fingers in the way I could only get halfway inside her.\n\n\"Aaah, I want the whole thing.\" Dylan brushed some stray hair from her face again and looked at my wife. \"Merry, come here for a sec? I need your help. I need you to wrap your thumb and your first finger around Tom's dick. All the way at the bottom. And squeeze. He won't be able to cum and he can get me off before he loses it.\"\n\nWhat's hotter than fucking the ass of the gorgeous teenage girl who grew up next door? Having your wife help you do it.\n\nMerry was shaking her head as she came over, but she did as Dylan asked, strangling my stiffy with her small soft fingers. Together we fucked Dylan, pumping my gigantic erection in and out of the little coed's incredible butt as she moaned and grunted into our kitchen table. Dylan's blonde ponytail bobbed insanely with our rocking.\n\nAt first, Merry was wincing each time I sank into Dylan. She looked worried about our little friend. But the girl was clearly enjoying herself.\n\nWhen Merry realized Dylan was okay, she looked up at me and pulled me down for some very nice kissing. While we fucked Dylan's ass. Wow, that was hot.\n\nEven hotter was when she spanked one of Dylan's buns a few times for good measure. That's when we both learned that Dylan likes to be spanked. It got the bent-over teen so excited it pushed her right over.\n\n\"Aaah, aaah,\" Dylan moaned and whimpered as her orgasm crushed down on her.\n\n\"...let go... Merry...\" she gasped out as her knees collapsed and the kitchen table squeeked slightly under her weight. Her rectum fluttered and quivered along my entire length and then her asshole locked down like vice.\n\nI fought its grip to keep fucking her through her peak, right up until my wife released me. It was like a dam bursting. Instant orgasm. My first spurt was gigantic and planted deep into Dylan's spasming bowels. Then came another giant spurt. And another. I kept jetting cum into the little blonde teen as she herked and jerked beneath me, finishing her own orgasm.\n\n\"So much cum,\" Dylan cooed as I continued to gush semen into her tiny hole. It was getting ridiculous. My nuts started to hurt. I watched dizzily as some of my cum leaked out of her and ran down her slender leg a little ways before dripping onto the floor.\n\nWhen we were finished, Dylan and I were both panting like we'd run a marathon.\n\n\"Okay, I have to admit,\" my wife looked back and forth between us, \"That was pretty hot.\"\n\n\"Giving you second thoughts about trying it?\" I asked hopefully.\n\n\"Hell no,\" she patted Dylan's back gently, \"that's what I've got her for.\"\n\nDylan giggled weakly into the kitchen table. She winced and whimpered as I slowly pulled myself from her ass.\n\nMerry rubbed her back soothingly, \"Take her upstairs, Tom. The big bathtub is already filled. She looks like she needs a relaxing soak.\"\n\nI lifted Dylan's little body into my arms and she wrapped her arms limply around my neck.\n\n\"Thanks Merry,\" she said softly, her head lolling on my shoulder, \"Leave the rest of the laundry? I'll finish it tomorrow.\"\n\nI carried Dylan upstairs and helped her into the tub. She pulled off her t-shirt. She was naked underneath and she smiled weakly when I stared at her round, pert little breasts with their perfect little pink nipples.\n\n\"Like 'em?\" she swayed her chest at me and grinned.\n\n\"Love them. But then I've always thought you were pretty Dylan.\"\n\n\"Thanks, Tommie,\" she sighed as she slipped into the hot water.\n\nI parked myself on the floor next to her and rested my chin on the tub's edge.\n\n\"Sure you're okay, kiddo?\" I worried.\n\nMy question came just as a few bubbles drifted up through the bath water.\n\nDylan looked at me and blushed, \"You... uh... pushed some air up in there. Sorry.\"\n\n\"So nothing's broken?\"\n\n\"Nah, I'm fine. Just a little wiped out for a minute there. I feel better already. That was intense. I forgot how much I loved the feeling of a guy shooting his stuff in my butt. We can totally go again later tonight if you want. Even if I'm asleep. Just come over to my room and wake me up. I'll roll right over and let you do me. I love sleepy booty loving.\"\n\nShe patted my cheek and smiled. Then she dipped her head underwater. When she came back up, her hair was darker and wetter and sexier.\n\n\"Stand up for me, fella? I never got a good look at the thing you just crammed up my butt. I should say hello.\"\n\nWhen I stood, she rose to her knees in the tub and pulled my cock head into her mouth. She sucked and licked my tip tenderly at first. Then she smiled and grew more eager when she felt it responding. She pulled more of my shaft into her mouth as I thickened, lengthened and firmed until I was hard again.\n\nShe bobbed up and down skillfully and twirled her tongue while twisting a hand at my base. She looked up at me with renewed hunger. She wanted more. I did too.\n\n\"You know what, Tom? Screw later. Get in here and do me again. I have a year of anal to catch up on.\"\n\nI crawled into the tub and she straddled me. I watched her eyes squeeze shut and her mouth fall open a little as she centered me on her freshly-fucked backdoor and sank down to sheath me in the still slippery chute of her ass.\n\nI'd never met a girl who enjoyed anal sex as much as I did. Funny that she grew up right next door.\n\nIt was like that the entire weekend. She lounged around our house, reading, typing on her laptop, doing laundry, watching TV, or helping Merry cook. Having a horny teenager hanging around does sick things to a man's libido. I spent half of Saturday with my face in her ass.\n\nBy Saturday afternoon, her promise not to wear pants became 'aww fuck it, I'm going completely naked.' When Dylan pulled off her little tanktop and starting moving around so casually naked, so utterly comfortable in her own skin, I had to borrow her from Merry while they were fixing a late lunch.\n\n\"Excuse us,\" I tugged Dylan into the living room and helped her sit up on the cushioned bay window.\n\nShe smiled and cooed as I worked myself into her ass again and we fucked like bunnies.\n\n\"I love your cock,\" she sighed as I sawed in and out of her tiny tush. She pulled me down to kiss her as we humped and dragged my hands up to roll and tug on her hard little nipples.\n\nI didn't last long. I came inside her and she twitched her nose and squeezed her ass with each of my spurts. It was like being milked, she sucked the cum out of me with her talented sphincter.\n\nI did as she asked when she said not to move afterwards. I watched as she masturbated with my shaft still buried between her tight buns. Her fingers blurred over her little clit and she nibbled her lip in concentration. In seconds, I felt the frantic clutching of her ass when she came, red-cheeked and moaning over and over.\n\n\"That was nice,\" she nuzzled my nose tenderly when she finished. We caught our breath and she stood up and went right back to the kitchen to help Merry with lunch.\n\nIt wasn't just me starting things up either. Dylan was just as bad. Our last and longest session began when she pulled off my shorts while I was sitting on the couch and watching a football game. She climbed up onto my lap and impaled herself on me without a word. She quietly rode me facing the TV so she could watch too.\n\nShe stretched it out by only fucking me during the commercials. In the meantime, she held still, sitting in my lap with my cock buried in her ass. During the game, she just squeezed herself around me every few minutes. It was the first time in my life I was begging for the next commercial. \n\nAt each break, she would lean her back against me and start riding, working her tiny asshole up and down my length. She made herself cum three times that way, rubbing her clit until she moaned and shivered her release. Her fit young body was covered in a light sheen of sweat after her first cum.\n\nFor her last orgasm while we watched the game, she managed to wriggle two fingers into her pussy too. It made her ass even tighter around me.\n\n\"Wish I'd brought the dildo Merry sent me,\" she muttered as she stroked us both from the inside.\n\nI made circles ather nipples while she skewered herself up and down on me and she sawed her fingers in and out of herself at the same time. She had the largest orgasm of the weekend, collapsing in my lap limply.\n\nA few minutes later, she stirred and pulled my hands under her ass. She told me to push her hips up a little. As I lifted her slightly off me, she rested her head on my shoulder and licked my earlobe.\n\n\"Ream me, Tommie? No fooling, I want you to seriously fuck my little butt. I want to feel it tomorrow when I'm sitting in class. I want to remember this perfect weekend, you beautiful, rump-loving man.\"\n\nShe didn't have to ask twice. I drilled up into her tiny body so hard we made rude smacking noises as we collided. Her ponytail slid free and her golden hair flew all over the place.\n\nDylan had to clutch her tits because they were bobbing up and down crazily.\n\n\"Ugh, fuck, ugh,\" she wailed as I pumped in and out of her, \"Yeah, fuck me.... that's it, sweetie... I won't break.... give it to your little butt slut...\"\n\nWhen she felt me start cumming, she knocked my supporting hands away and fell into my lap, burying me completely in her ass. She rocked and ground her hips down on me, twirling her rectum around my cock for a spectacular finale. It emptied my testicles completely. The last few ejaculations were dry ones &ndash; a wicked mix of pleasure and pain.\n\nShe finished by kissing my cheek then licking away a few droplets of sweat that had rolled down over the past half hour.\n\n\"Not bad, stud,\" she sighed and twisted to hug me, sitting sideways in my lap. She cuddled in and fell asleep like that, with my cock still sheathed up her ass and her head resting on my shoulder. She even snored a little. It was incredibly cute.\n\nBy the time Dylan packed up to leave after dinner on Sunday, the two of us could barely walk.\n\nMerry was chuckling as she gave the poor girl a soft cushion to put under her abused butt for the almost two hour ride back to school.\n\nDylan hugged us both before she left. She held me tight for a long time and buried her nose in my neck.\n\n\"I had a wonderful time, Tommie. Thank you,\" she kissed me and hugged me closer. \"Now go ahead,\" she whispered, \"Squeeze it. You know you want to.\"\n\nI did want to. I can't help it. I'm a butt guy.\n\nI let one hand skid down to her tush and I palmed it easily with just the one. I gave it a good firm squeeze goodbye.\n\n\"Good boy. Rest up and eat your vegetables. I'll be back,\" she pecked me on the lips then got in her car and drove off.\n\n\"She'll be back?\" I looked at my wife.\n\n\"She's a college student, silly. Why do you think I got the new laundry machines? Don't you remember being in school? College students always have laundry in giant heaps. Dylan will be back once a month to do it. And you.\"\n\nI blinked in disbelief.\n\nMy wife smiled up at me and tiptoed to kiss my nose, \"What? You didn't think I'd give you this once and then just take it away, did you? That would be cruel. What kind of woman does that to the man she loves? Nope, your birthday present was a monthly subscription to that little girl's ass.\"\n\nMerry was looking quite proud of herself as she pulled me back inside the house, \"Now go shower the various teenybopper fluids off yourself and take me to bed, stud. You're already way behind on your thank-me sex.\"\n\nDammit I love my wife. "
    ],
    "authorname": "PacoFear",
    "tags": [
        "loving wives",
        "girl next door"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/outsourcing"
}