{
    "title": "A Cup of Tea Bk. 01",
    "pages": [
        "Thank you to StormKite for your invaluable assistance. This story wouldn't have made it to the finish line without your help. \n\nThis is a work of fiction. Names, characters, businesses, places, merchandise, companies, events and incidents are either the products of the author's imagination or used in a fictitious manner. Any resemblance to actual persons, living or dead, or actual events is purely coincidental. All characters depicted in sexual situations are 18 years of age or older. \n\nChapter One \n\nThe Borough of Queens, City of New York \n\nSpring, Present Day \n\nCherry blossoms fluttered to the ground as a procession of delivery trucks rumbled by, some stopping to make deliveries at the small mom and pop grocery stores and vegetable stands that dotted the busy thoroughfare. The annual explosion of pink and white was welcomed with a just completed neighborhood festival as the residents celebrated the coming of spring after a long and bitterly cold New York City winter. The remnants of the weeks ago snowfall lay on the grassy boulevard adjoining the street, its original pure white color now a dirty grey. Couples walking leashed dogs and children on their way to school passed one another on the sidewalks as shop owners rolled up metal doors, welcoming the start of another day. \n\nEarly morning sunlight filtered in through thin vertical blinds as a slightly built Japanese woman wearing a traditional silk kimono strained piping hot water through fragrant tea leaves. She sat with her legs neatly tucked underneath her at a low-rise sandalwood table. Keiko called to her aging mother to join her in their first tea service of the day. As they sat there sipping the traditional drink of their ancestors, the discussion took place in hushed tones due to the recent passing of Keiko's father and Mariko's husband of forty-five years, Koji Muramoto. Koji had been a pillar of the local Japanese-American community, and his presence was already sorely missed. The two women grieved openly as they discussed the passing of the family's patriarch and the handling of his legacy. \n\nThe most pressing matter was Koji's duties at the Japanese-American Community Center. Every Friday he managed the food service for the elderly members of their tightly-knit group, starting early in the morning to shop at the local grocery stores and then spending the remainder of the morning preparing and serving lunch in the expansive common room that served as a dining room on Fridays. Mariko had always accompanied her husband, but the seventy-year old woman had never managed the food service by herself. The Friday tradition was suspended when Koji became ill, and this upcoming Friday would be the first lunch served in twenty-seven years where Koji was not managing the process. \n\nKoji's passing had been a long and tortuous process. The advance of his pancreatic cancer took over a year and a half to claim the stout first generation Japanese-American, whose parents immigrated to the United States shortly after World War II. Mariko entrusted the management of the finances of the household to her daughter, as her husband's prolonged illness made a significant dent in the family savings and the family's remaining money had to be stingily managed. Despite Keiko's financial acumen, it was a struggle to pay the medical bills that were still coming in while attending to the rent and other expenses of day-to-day living. \n\nBoth women knelt quietly at the table, completing the tea ritual as if it were a long familiar folk dance. The fragrance of the tea, and the solemnity of the ancient ritual, dispelled the anxiety of the moment as both women pondered their uncertain futures. \n\n* * * \n\nDax Hanlon started his morning as he always did, sitting at a small square table covered with a white tablecloth, the table flush against an expansive picture window overlooking the East River. The apartment building that included his penthouse apartment was one of his first acquisitions in his burgeoning collection of New York real estate. His full-time housekeeper and chef, Madeline, at precisely 7:30 a.m., placed a gleaming white ceramic bowl holding half a grapefruit and a small square plate holding two soft scrambled eggs and a slightly burned piece of toast in front of him. He nodded in silent approval, noting that the toast had just the right amount of char on it. The redheaded chef returned moments later with a small clay pot of orange marmalade, a cup of hot Kona coffee and a neatly folded Wall Street Journal. \n\nThe young real estate scion glanced at the headlines, then set about eating his breakfast. As he scraped the last of the eggs off his plate he looked out his window to the East River and beyond, watching a jet make its final approach to LaGuardia. Life had been good for Dax Hanlon. Even though he suffered mightily during the divorce from his second wife, his life had now resumed some sense of normalcy, and the daily routine he observed helped him reach what he thought was his emotional center. \n\nHe tossed his cloth napkin on his plate and went to his closet to finish dressing for a long day at the office. He stood in front of the floor to ceiling mirror in his walk-in closet and adjusted the knot on his Hermes tie and then drew the sleeve of his custom-tailored suit coat up his left arm and then his right, shrugging his shoulders to straighten the jacket. He adjusted his collar and pushed back a lock of his ebony hair off his forehead. Satisfied, he walked briskly to the front door and bid goodbye to his housekeeper. \n\nA pristine black Bentley sat idling near the curb as Dax exited his apartment building. The back door was held open for him by his driver, and as expected his assistant Melanie, a tall, leggy brunette, was sitting on the far side of the spacious leather bench seat. As he slid into his usual spot on the bench seat, he couldn't help but notice that she had either absentmindedly (or purposefully) left one extra button open, allowing him the privilege of seeing her magnificent cleavage. As his driver (and right-hand man) Mason shut the rear passenger door with a reassuring thud Dax thought it ironic that he finally had the wherewithal to afford a $350,000 car, yet he had never driven it himself. Mason was a high school classmate and had been with Dax for the past twenty years. If there was a job that needed to be done, Mason was his man. \n\nDax had hired Melanie five years ago as an unpaid intern. As she proved to be indispensable, her job duties morphed into serving as his personal assistant. Melanie probably knew Dax better than he knew himself. She knew she was eye candy, and had purposefully left the extra button open. As expected, Dax treated himself to the view when he entered the vehicle, seeing the snow-white skin that formed the deep valley between two perfectly formed breasts. But for Dax it was all business now. \n\nA smile curled up on Melanie's full lips as she recalled that clumsy (and awkward) night two years ago when they had worked together to close a deal with a local investor who had cobbled together a small portfolio of apartment buildings in Queens. Their trip to Miami to meet with the retired investor, a rotund Japanese man in his eighties, had been successful, and after the papers were signed the pair ended up in the hotel bar until last call at two a.m. Dax had just separated from his second wife, and even though they were more than ten years apart, and against their better judgment, they ended up in her room. \n\nDax swore it was the only time he had ever found himself impotent, despite Mel's heroic efforts. For Dax, that was the last time they would be lovers. Mel's intentions weren't as clear. Although Dax assumed their relationship was now plutonic, Mel never discounted the possibility that there could be more between the two of them. She was a strong woman, but no less susceptible to his imposing physical stature and boyish good looks. She didn't press the matter, but took every opportunity to remind Dax that she was a young, desirable and available woman. \n\nAs they went down Park Avenue toward Dax's office building, Mel briefed him on the meetings she had scheduled that day. Of note, the afternoon meeting featured a prominent real estate investment trust that had taken an interest in an apartment building in Queens that was purchased from the Miami-based Japanese investor. Dax was interested in liquidating that entire portfolio of apartment buildings so he could redeploy his capital to an office building in Manhattan that had recently been placed on the market - a building adjacent to one that Dax already owned. Dax had done business with this REIT before, and knew that the principals were sharp, but also acutely time sensitive. One of the men had gone to Harvard Law School with his father, so there was a certain affinity between the two of them. \n\n\"So Mel, before I step into the conference room, what do they want?\" Dax always looked for an edge in his business deals and had tasked Mel with shaking down her sources for the word on the street. \n\n\"I heard that they're interested in developing strip centers in the boroughs, and they've made discreet inquiries regarding rezoning the land under that fourplex in Queens.\" Mel was confident in her information. One of her sources was a clerk in the planning department, and she was always a reliable source for gossip. Dax's ears perked up at the word rezoning. If that land could be rezoned to commercial, it could easily double, if not triple in value. \n\n\"And don't forget, Owen's wife's name is Dottie,\" Mel added. \n\n\"Nice job Mel.\" Dax was already thinking about how much of a profit he'd make off his investment. He liked having the upper hand in business discussions, and it was clear he had something that they wanted. Brimming with confidence, Dax opened the glass door to the main conference room, admiring the view from the conference room's floor to ceiling windows and then noting that the two men he expected had also brought an associate, a stunning blonde in a designer jacket and skirt and black pumps with four-inch stiletto heels that accentuated her long legs. Dax couldn't help but stare at her as she rose from her chair at the conference table. \n\n\"So Dax,\" said the man Dax knew to be Owen Harrison, his father's roommate in law school. \"It's good to see you again. You look well.\" \n\n\"I'd say the same about you. You haven't aged a day in the last ten years. And how is Dottie?\" Dax asked, showing Owen the necessary respect that he remembered the name of Owen's wife. \n\nDax suddenly remembered Dottie was the woman who seated herself next to him at a dinner in the Hamptons. He remembered seeing Dottie put her hand under the tablecloth and onto his thigh. Her fingers pressed against the inside of his thigh, all the while Owen and Dax were discussing the latest loss by the Knicks. She touched the bulge in his pants before he was able to push her hand away. \n\n\"She's great. She loves working on her garden,\" answered the older, greying man. \n\nDax suppressed a smile. It was doubtful Dottie ever got her hands dirty on their ten-acre estate in the Hamptons. The only thing that Dottie seemed set on was getting her hand on his cock. \n\nThe blonde confidently stepped forward for her introduction. \n\n\"Dax, allow me to introduce you to our new associate, Stella Parsons,\" said Owen. Stella offered her hand. As Dax and Stella shared a polite handshake, Owen continued. \"Stella was with Tauckman for five years and just joined us a few months ago as a senior analyst.\" Dax knew that Tauckman was reputed to be one of the sharpest developers of suburban strip malls. Mel's intel was spot on. \n\nDax went over to the credenza to pour himself a cup of coffee. The others already had coffee in front of them. \"So what brings you here today?\" asked Dax, already knowing the answer. \n\nStella answered. \"Well, Mr. Hanlon ...\" \n\n\"Dax.\" \n\n\"Well, Dax, we're interested in your four-plex in Queens. We have a strategy to rezone that property to commercial and develop a strip mall on that site. The problem is there's a short window of time to get this done before the sympathetic members of the planning commission turn over. The new appointees are scheduled to assume their posts in about six months.\" \n\nDax paused as if he was thinking about what she said. Before entering the meeting he had already decided on what he would ask. Given their eagerness to conclude a deal, he added $250,000 to his mental asking price and told them. The three of them seemed nonplussed by the number, which made Dax feel as if he was still underpricing the property. \n\nStella looked to the two principals and Dax saw a subtle nod from Owen. They too had agreed on an acceptable price before the meeting and it was clear that Dax's number was within the range they had agreed upon. Dax was excited at the prospect of concluding this deal quickly, and at a substantial profit. \n\nStella continued. \"I believe that your price is acceptable. But there is one caveat. We need you to sell us the building free and clear of the existing leases. Our bank won't give us the necessary financing unless we have clean title. As an incentive, we're prepared to increase our offer by $500,000 if you can buy back all four leases in the next sixty days. We're prepared to close within ninety days, subject of course to the usual inspections.\" \n\nDax couldn't believe his good fortune. Not only would he realize a handsome return on his investment, he would earn an extra half million for something that was routine for him. Without even looking at the leases, he was confident he could buy out his existing tenants for less than $200,000. That would leave him with an additional $300,000 in profit. \n\n\"Agreed,\" said Dax, shaking Stella's hand. \"I'll have my attorneys start drawing up the papers for a close in ninety days.\" He also made a mental note to ask Stella out for drinks. \n\nDax stepped outside the conference room and had another assistant summon Mel. The tall brunette appeared moments later. Dax gave her a knowing smile. She nodded, understanding that the deal was done. They walked into the conference room. \n\n\"This is my assistant Melanie Robertson. Mel, you remember Owen and Hank. And this is their new associate, Stella Parsons.\" There were handshakes all around as Dax continued to talk. \"Mel will interface with our lawyers and your team to make sure all of the documents that you require on the fourplex will be provided as soon as possible. Mel, we're looking at a close in ninety days. I've agreed to take the laboring oar on buying out the existing tenants.\" \n\nMel nodded her approval, and also noted that Stella was now likely on Dax's radar screen. Another ship passing in the night she thought. She chided herself for her jealous reaction, reminding herself that she had no claim on her boss. Mel recalled, with a bad taste in her mouth, her long-term affair with Owen's partner Hank Rossetti. It gave her chills, and not in a good way, when she shook Hank's hand. He was twenty years her senior, but still an attractive man ... and married. Mel still remembered every detail of the night she was expecting for him to tell her that he was leaving his wife to marry her, and instead told her he was breaking it off. After he told her, she allowed herself a small measure of satisfaction when she slapped his face with enough force to pop out one of his contact lenses (it ended up in pieces under Mel's expensive high heels though she claimed she couldn't find it). That happened five years ago when she was in her early 20's. Her years with Dax showed her the ropes in a man's world. Something like Hank would never happen again. \n\nSince the meeting was completed, the REIT team gathered up their reams of paper and looked to Mel for further instruction. Mel's eyes bored into Hank's, and Hank blinked, lowering his head. Dax knew what happened between Mel and Hank and watched with amusement at the silent pissing match between the two former lovers. Mel returned after escorting the visitors to the lobby and saw a smirk on her boss's face. \n\n\"Fuck you Dax.\" \n\n\"What?\" \n\n\"I saw you watching Hank and me.\" \n\n\"I was entertained. That's all.\" \n\n\"Hence the 'fuck you'.\" \n\n\"I get it.\" Dax was feeling so good he was going to let Mel have her fun. \"Let's figure out a game plan to wrap this deal up. Get Alan on the lessees. Tell him that he's authorized to offer up to $25,000 to each of the tenants. If any of them say no, I want to handle the negotiations.\" \n\n\"Understood.\" Mel expected Dax's orders and had already sent Alan an e-mail asking him to be in her office in an hour. Then she waited for it. \n\n\"And get in touch with Stella. I'd like to meet her for drinks tomorrow night after work to discuss the details of the deal.\" \n\n\"Yes sir,\" said Mel, giving him a mocking salute. She knew the only detail they'd discuss was whether they'd go to his place or hers. She started to seethe at his superficiality and questioned why she even cared. \"I don't want to be his fucking pimp,\" she fumed inside. \n\n* * * \n\nThe following evening Dax was sitting in his favorite bar in the East Village, nursing a 16-year-old Scotch, when Stella came through the front door, looking every bit the fashion model in a slinky low-cut black dress and matching heels. Dax straightened his tie and tugged on his shirt cuffs as he witnessed her entrance. Even though the bar was Dax's home field, her breathtaking dress turned the tables as she sidled up to him at the bar. \n\nDax lowered his hulking athletic frame off of his barstool and extended his hand to her, clasping her slender hand between his muscular ones. \n\n\"Shall we get a table?\" Dax asked as he pulled her closer to him. Her perfume wafted past his nose. \n\nShe stiffened her body and gave Dax a look of disapproval. \"Mel told me to meet you here. I've got to meet my boyfriend for dinner in about thirty minutes,\" she said in a 'don't fuck with me' tone. \"So what are the details you'd like to discuss?\"  \n\n\"I thought maybe you wore that dress for me.\" Dax was clueless. Stella was furious. \n\n\"No. Don't flatter yourself. I'm here to iron out the details of the deal we discussed and nothing more.\" She was royally pissed, and was regretting being the one to recommend the deal to Owen and Hank. \n\nDax wasn't used to the cold shoulder from a beautiful woman, and struggled to find his footing. He mistook arrogance for the quiet confidence he was trying to project. \"Part of the deal is making sure I'm happy.\" \n\nShe put her hands on her hips so that there was no mistaking her message. \"You should be happy since we offered you much more than you were asking.\" \n\nShe desperately wanted to say, \"You arrogant prick. I wouldn't go home with you if you were the last man on Earth.\" Apparently her body language delivered the intended message. \n\nHe raised both of his hands in mock surrender. \"No harm in asking. You're a very beautiful woman.\" \n\nStella backed away from him. \"I've got to go. If you want to discuss anything more, have Melanie make an appointment with my assistant to call me in my office.\" She walked out of the bar, letting the door slam behind her. The bartender, an old friend of Dax's, shrugged his shoulders at Dax as he witnessed her hasty departure. \n\n* * * \n\nThe following day Dax was in a foul mood. When Dax was in a foul mood, everyone in the office suffered. Mel knew that meant the meeting with Stella didn't go as Dax had expected and in a pique of anger at his adolescent behavior, decided to have a little fun at his expense. \n\n\"So how did it go last night?\" she asked, saccharin sweet. \n\nDax was in no mood to play her game. \"You know how it went,\" he growled. \n\n\"You play with matches, you're going to get burned,\" she said, in an 'I told you so' tone of voice. ",
        "\"Fuck off Mel,\" said Dax dismissively, unable to come up with a snappy rejoinder. \"Let's talk about that apartment building deal. How did it go with Alan yesterday?\" \n\nMel shifted to business mode. \"Quite well. Three of the tenants took the $25,000 offer. The fourth didn't, but Alan thinks you can close the deal. That tenant was late twice in paying the rent and the lessee, a Mr. Muramoto, passed away a few months ago. No one has stepped forward to assume the lease.\" \n\n\"So who do I have to meet with?\" Dax was now chomping at the bit to get out of the office and away from Mel. \n\n\"Keiko Muramoto. She's the daughter.\" \n\n\"Fine. Just give me the address and I'll go there this afternoon and button this up. You make sure the lawyers are drafting the papers.\" \n\n\"Already on it. You should see a first draft tomorrow.\" \n\nDax was already halfway out of the door. He didn't hear Mel's answer, but knew she was on it. He only reminded her as his way of pissing her off. It didn't work. \n\n* * * \n\nHe was familiar with that part of Queens, a mixture of Japanese and Irish families. The wide boulevard boasted Irish pubs and Japanese grocery stores, dotted with the usual dry cleaners and shoe repair businesses. Mason searched for a parking place, parallel parking about a half block from the apartment building. Dax got out of the back seat, carrying a small stack of papers he was expecting to get signed that day. He got out his phone and was checking messages as he striding confidently down the sidewalk, knowing that he had an extra $25,000, or even more, to close this deal. Sun glinted in his eyes as he was walking and caught the edge of an upraised part of the sidewalk with the tip of his shoe. He tripped, throwing the papers he was carrying high into the air as his right knee scraped against the pock marked concrete. \n\n\"Fuck!\" he roared as the unexpected impact ripped open his Italian trousers at the knee, scraping his skin as he stopped his fall with his hand, skinning it as well. His papers fluttered to the ground all around him. \n\nDax's fall and cry startled a woman who was walking towards him. She extended her arms to help him up. Stunned, he saw a diminutive Asian woman looking at him, studying him as if he was a laboratory specimen. Her face crinkled as he took her hand to help him get upright. \n\n\"Thanks ... thanks a lot,\" Dax said to the woman as he was brushing the dust off his torn pants. The woman stood back, watching him but offering no further assistance. \n\nDax steadied himself, taking a tentative step to test the scraped knee. The wound was starting to tighten, and Dax limped noticeably. He had pebbles sticking to his right hand until he flicked them off. A breeze started to blow the papers, and Dax realized he'd have to move quickly to grab them before they blew into heavy traffic. By now, another Asian couple walked by, both of them looking at a white man with torn pants scurrying to retrieve papers swirling in the breeze. The papers finally retrieved, but definitely worse for wear, he took no more than ten steps before arriving at his building. Dax had never visited this property before, even though his ownership was now going on two years. \n\n\"That's why I have property managers,\" he thought, somehow excusing his ignorance of his own real estate portfolio. \"I just give the building to Alan to manage and he takes care of all of the details. My time is better spent chasing the next deal.\" \n\n\"I never thought I'd ever have to see this fucking building in the middle of fucking Queens,\" Dax said to himself as he opened the worn aluminum door guarding the building's entrance, his ego and his knee both smarting from his embarrassing fall. \"I just have to get this done. I've got thirty minutes to talk to this ... what the fuck is her name? ... yeah ... Keiko ... that she just won the lottery because I'm going to give her a check for $25,000. One and done, baby ... then the Knicks game ... yeah the Knicks suck but Dana got great seats, right next to fucking Spike Lee ... so I'm gonna get this done quick and then be onto the game!\" \n\nDana was his first ex-wife. He had married her right out of the college where they met, a well-known Ivy. His father was a prominent New York City attorney and Dana's was a well-respected cardiologist. Their wedding announcement was published in the Sunday New York Times. Dana was a man's woman. She could cuss with the best of them and was the most rabid Knicks fan that he knew. The only make-up she used was black eyeliner to highlight her dark blue eyes. Short, bleach blonde hair, and full of sass. Truth be told, she was the one that taught Dax how to fuck, and taught him well. \n\nHer father had given her two courtside tickets to the game, and Dax was the first person she thought of to take. She knew he was a huge basketball fan, as they had attended many Knicks games together when they were married. Their divorce had been over fifteen years ago, so the passage of time had partially healed the wound between them, a wound opened when Dax had an affair with his first administrative assistant, who turned into his second wife. \n\nDax fumbled through his pants, looking for the slip of paper on which Mel jotted down the apartment number he was looking for. The entranceway was dated but still kept in perfect shape and the elevator lobby was immaculate. Dax made a mental note to thank his maintenance manager. He finally found the small piece of paper stuck in a seam in his pocket, but in the process of turning his pocket inside out he dropped his expensive fountain pen. The casing of the Mont Blanc broke open on impact with the unyielding surface, splattering black ink on three of the white tiles. The tiles were so old some of the glazing had worn completely off, leaving the ink to bond with the tile's surface. Dax started swearing as he used the cuffs of his light-colored Saville Row suit coat and dress shirt in a vain attempt the mop up the mess. \n\nDax didn't think quickly enough to realize that Italian wool and Egyptian cotton didn't take kindly to ink. The black stain became permanent the moment it touched the fine materials, so in the two seconds that Dax used his coat and shirt as cleaning rags, the value of his $5,000 custom tailored suit and shirt went to zero. Now Dax was on his knees, cursing again, expletives reverberating off the walls. In the span of a few short minutes he had ruined his pants, shirt and jacket. \n\nThe same woman who had helped Dax up on the sidewalk was hovering over one very pissed off person. \n\n\"Not your day is it ... Mr. Hanlon?\" came a disembodied voice from above Dax's head. \n\nDax, still on his hands and knees, looking at his ruined cuffs, and then up in the direction of the voice. A stern looking Asian woman, the same one that he saw just minutes before, was looking down with a disapproving stare. His first instinct would have been to say something smart. It was his natural defense mechanism against people he didn't like. But this woman was different. Her air of authority didn't leave room for a rude comment. \n\n\"So you know who I am?\" \n\n\"Of course,\" the woman snapped. \"How would I not know?\" \n\n\"Excuse me?\" Dax asked, confused by her question as an answer to his question. \n\n\"You're a tall, white male in an expensive, but now worthless custom-tailored suit. You didn't know about the lifted concrete in front of the building so you're not from around here. You started swearing in my building. You must be Dax Hanlon, my landlord.\" \n\nDax looked at the woman more carefully. She must be the person he was to meet with. \n\n\"Keiko?\" His voice still wavered with uncertainty. \n\n\"Of course I'm Keiko. Who else would know who you are?\" She had no compunction about overtly questioning his intelligence. \n\nThe woman had a point, but was already starting to annoy him. Dax restrained himself from speaking his true mind and reminded himself that the Knicks and Spike Lee were waiting for him. He had to sweet talk this woman into selling back her apartment lease to him. He told himself he could do it, even though he already had two strikes against him. \n\n\"Shall we go to my place?\" Keiko asked, her impatience clear. \n\nTaken aback, Dax was used to hearing that phrase in a completely different context. He started to mumble his answer. \n\n\"To talk,\" the short Japanese woman added, insulted that Dax would take her statement as an invitation for something else. \n\n\"Uhhh ... sure ...\" stammered a suddenly flummoxed Dax, his guard devastated by a woman he had just met. \n\nShe turned around and started walking towards the elevator. Dax followed. She pushed the button and moments later the doors opened to a clean but dated elevator cab. \n\nAs the doors shut, Dax, pants ripped and suit coat permanently stained, felt uncomfortable during the silence on the short ride to the second floor. Even though the woman standing next to him was a head shorter, she felt like the taller of the two in the elevator. \n\n\"Nice building,\" he said, trying to make conversation, as the cab lurched to a stop and the doors opened to the second floor. \n\nKeiko turned around, causing Dax to stop in his tracks, his chest even with her head. \n\n\"You've never been here before, have you Mr. Hanlon?\" She sounded like a lawyer taking his deposition. \n\n\"Uhh ... no,\" Dax mumbled, his embarrassment evident as the words tumbled out of his mouth. \n\n\"I figured,\" said Keiko under her breath, in a low enough voice that Dax didn't hear it. \n\nThey went to the end of the hallway and stopped in front of the apartment on the right. Keiko reached into the small clutch purse she was carrying and fished out a key. She opened the door and invited Dax in. Dax was oblivious to the fact that there were shoes lined up neatly outside the apartment door and that Keiko had already effortlessly traded her street shoes for comfortable slippers. \n\nDax lumbered into the living room, rice paper screens dividing the dining room from the living area. He decided to wait to be invited to sit. \n\nKeiko looked down at his shiny black tasseled loafers, thinking Italian, of course, and then looked at him. \n\n\"Hrrrrmp,\" she uttered with her lips pursed tightly together. \n\nDax was slow on the uptake, but he got it. He took off his shoes and put them by the front door. \n\n\"Thank you, Mr. Hanlon,\" her gratitude not genuine. She had already drawn the conclusion that Dax was just another rich real estate asshole who wanted something from her. She decided to disarm him with kindness. \n\n\"Please sit Mr. Hanlon,\" pointing to a small armchair in the living area. \"May I make you a cup of tea?\" \n\nIn Keiko's world, it was considered to be impolite to refuse a cup of tea when offered by the host. Keiko was already moving towards the kitchen to boil the water. \n\nDax was on a timetable he didn't want to miss. \"No ... no ... I don't have time for that,\" he almost shouted to Keiko's back. \n\nKeiko stopped in her tracks. \n\n\"You don't have time for a cup of tea?\" Keiko asked, incredulous at his response. He was shaping up to be an asshole ... supreme. \n\n\"I don't,\" said Dax, in that smooth voice he used when he was going to ask for something. Keiko's guard went up. She sat back in her chair and neatly folded her hands in her lap. \n\n\"Then Mr. Hanlon, who doesn't have the time to have a cup of tea with me, what can I do for you?\" Dax had heard that tone of voice before. It was the same tone of voice a loan officer would use when she was going to tell him no. Now he knew he was on very thin ice. \n\n\"I'm sorry Keiko. Ordinarily I'd be happy to sit and have tea with you but I have an important business appointment I have to attend to back in the City.\" He gave her his pat feeble excuse when he was really saying no. Keiko wasn't buying it. \n\n\"So then, what we have today is not an important business appointment.\" She dug the barb in deep. \n\nDax immediately realized his gaffe. A small white lie like this would normally roll off his lips like the morning dew off a leaf. But this was different. This woman could SEE him, really see him. And that made him uncomfortable. Dax had to remind himself why he was there. He was about to reap a $500,000 bonus if he could just sweet talk this dragon lady into selling her lease to him in the next ten minutes. \"Cool\" he said to himself. \"Stay cool.\" Dax has been in tighter situations than this, but somehow the answer didn't magically appear on his lips. \n\n\"No ... no ... this is an important business meeting.\" Dax felt he sounded lame, and he was right. \n\n\"So then ... you have time to have a cup of tea with me,\" Keiko said the moment the last word was uttered by Dax. She started to get up again to start the water. Dax reached out and grabbed her arm, not tightly, but Keiko was a small woman and Dax was a large man. \n\n\"Excuse me ... Mr. Hanlon!\" Keiko barked, the unwanted touch surprising her. \n\nDax pulled his hand back as if he had just touched a hot stove. \"Excuse me ... please excuse me.\" \n\nAs Keiko glared at him, Dax tried to calm the situation. \n\n\"Keiko, please sit.\" He motioned to her chair. \n\n\"I'd prefer to be called Ms. Muramoto if that's acceptable to you,\" she said as she sat. It wasn't really a request, it was a command. Dax got it. \n\n\"Ms. Muramoto. I'm here to present you with a once in a lifetime opportunity,\" Dax began, sounding every bit the real estate hustler instead of the real estate tycoon. \n\n\"Really, Mr. Hanlon. Is that the best you can do?\" she said sarcastically. Her eyes narrowed. \"Do you have a business proposition or are you trying to sell me a set of steak knives?\" \n\nDax was completely off balance. He couldn't remember the last time he had fucked everything up this badly. He was wearing a suit coat and shirt with a large ink stain and ripped pants. He just had a verbal sparring match with a woman who was half his size, and she had successfully tied him into a pretzel. \n\n\"Really, Ms. Muramoto,\" Dax started, trying to buy time to gain his footing. He decided to just say it. He was in a hurry and things couldn't get worse, or so he thought. He would just give her his top number. It wasn't his modus operendi, but he wasn't thinking as clearly as he usually did. \"I'm prepared to pay you $50,000 for your lease.\" \n\n\"$50,000? For our lease? That's the subject of our 'important business meeting'?\" her saying the last three words while making quotation marks with her fingers as a mocking gesture. \n\nDax continued to be in the twilight zone. He gave her a blank stare, something he had never done in any business meeting. He always had something to say, and usually he was right. \n\n\"I can tell you the answer now so you can get to your next important business meeting. The answer, Mr. Hanlon, is no.\" Her arms were folded. There was no room for negotiation. \n\n\"You won't consider it?\" Dax asked, his turn to be incredulous. His accountant had run the numbers. \n\nThe present value of their lease is only $20,000. I'm offering $30,000 over that and this foolish woman who clearly needs the money is turning me down. I'm offering her more than double what the lease is actually worth. She doesn't get it. But maybe she's smarter than I give her credit for. She's already cornered me once. \n\n\"Why should I reconsider?\" countered the defiant woman. \"It's not as if you're going to give up your fancy penthouse apartment in New York City for a second floor apartment in Queens to live with a bunch of Japanese people, are you?\" Keiko knew the answer but wanted this arrogant asshole to tell her the truth. \n\n\"No,\" he said in a voice devoid of emotion. Dax had decided to surrender and tell her the truth. \"I've got an offer for the building and the three other tenants have decided to sell. I just need your apartment. I'm offering you double what I bought the three others for.\" \n\nKeiko was glad that the pretense of doing her a favor was over. \"I guess I should be flattered, but I'll be sure to tell my neighbors that they can get $50,000 out of you if they haven't yet signed the papers. \n\nDax had to contain his rage. He couldn't believe that this woman had elevated his anger level to a point he hadn't felt since he was on the varsity wrestling team in high school and the best wrestler on their cross-town rival was able to knee him in the balls without being seen by the referee. Needless to say he was pinned in the next five seconds, and after he recovered he got into the only fist fight of his life after those matches were completed, out in a playground of a high school he'd never visit again. \n\n\"So what is it, Mr. Hanlon, what are they going to build here?\" \n\n\"A shopping center,\" Dax admitted. His shoulders were slumped. He wasn't paying attention to his body language. He had never met a woman able to control a situation this way. His guard wasn't just down, it was out. \n\n\"No, Mr. Hanlon, we won't take your $50,000 so you can build a shopping center. My parents have lived here for thirty-two years and my mother wants to spend the rest of her days here. You know that my father passed away here after a long illness.\" \n\n\"I'm sorry,\" Dax said, reflexively. \n\nKeiko suppressed the urge to say something she would regret, even though it was to someone she despised and wouldn't ever see again. \"Thank you,\" she said automatically, her ingrained Japanese manners overruling her baser instincts. \n\nDax perked up when he realized he only had five more minutes. He decided to play the last card he had. If he finished in the next five minutes, then the traffic back to the City would make him miss only the first few minutes of the game. \"Ms. Muramoto. You didn't sign the lease. Your father did. Since he passed away then the lease rights pass to your mother. Can we ask her?\" \n\nKeiko was infuriated by his request. Her mother spoke very little English, and left all matters relating to business to her only child, who worked as a CPA for a local accounting firm with an almost exclusively Japanese clientele. \n\n\"No,\" she said, thinking that was the end of the discussion. \n\nDax fumbled through the papers he was carrying. He had thrown them up in the air when he fell so they were now out of the meticulous order that Melanie had put them in, color coding each page and highlighting each place that required a signature.  \n\n\"Ms. Muramoto, I must insist. Since Mr. Muramoto passed away you will need to have your mother sign this document acknowledging she promises to be responsible for the obligations under the lease.\" He waved the crumpled paper in front of her. She laughed to herself when she saw grass stains on the page. \n\n\"Our lease agreement provides that if we don't receive this signed acknowledgement within 30 days of death then you're in default under the lease. When did Mr. Muramoto pass away?\" \n\n\"Almost three months ago.\" \n\n\"We could start eviction proceedings.\" \n\n\"You're threatening me?\" \n\n\"No ma'am. I'm just pointing out that you are technically in default on your lease right now. Could you please ask your mother to join us? I'm already late.\" \n\nDax looked at his phone. Now he should have left five minutes ago. He started to shift in his seat as Keiko went to get her mother. She was fuming inside, feeling that she was being blackmailed by this arrogant outsider. How would disturbing her mother change her decision? \n\nShe knocked softly on her mother's bedroom door. Her mother was napping. Keiko could hear her shuffle out of bed. The door opened a crack. Mariko asked why she was being disturbed and Keiko, in an uncharacteristically animated fashion, described their situation. Her mother retrieved her housecoat and then opened the door, following Keiko into the living room. \n\nDax had the good sense to stand up when the elderly Japanese woman came into the room, her presence felt as someone not to be trifled with. She had greying hair, long and twisted into a braid, and was wearing a white terrycloth housecoat and slippers. As they sat down, the two women exchanged comments in Japanese, which for Dax were incomprehensible, while acting as if Dax wasn't there. ",
        "Keiko turned to face her oppressor. \"My mother asked why I didn't serve our honored guest tea. I told her that you were in a hurry and refused.\" \n\n\"Tell your mother that next time I'll be sure to make time for tea.\" Dax tried honey instead of vinegar, though it was far too late to extend an olive branch. \n\nKeiko translated and her mother nodded, then turned her head to Dax and said something in Japanese. \n\n\"My mother said that she would welcome that. I'm telling you there will be no next time.\" \n\n\"Did you tell her about my offer?\" \n\n\"I did. She said it was up to me. I'm in charge of financial matters in this household so she will take my recommendation. My recommendation is to decline your offer.\" \n\nDax glanced again at his expensive watch. Keiko watched his eyes. \n\n\"You need to go, Mr. Hanlon?\" She knew full well he was anxious to leave. \n\nDax knew that he couldn't solve this problem in the next five minutes ... or perhaps ever. He rose up out of his chair, looming over the two smaller women. \n\n\"I must be going now. May I call on you again?\" \n\n\"For what purpose, Mr. Hanlon?\" \n\n\"Perhaps you'll change your mind.\" \n\n\"You know you shouldn't count on that.\" \n\n\"Maybe I'll change mine.\" \n\n\"That's for you to decide. Keiko rose out of her chair and went to the front door, opening it and standing aside. \"Good day Mr. Hanlon.\" \n\nDax knew when he was beaten. He put on his shoes and gave his antagonist an exaggerated bow. \"Good day Ms. Muramoto.\" \n\nDax stepped over the threshold as the door closed softly behind him. \n\nEven though he was in a hurry, he stood just outside the door, in the quiet of the hallway, as he noticed shoes outside each doorway. As his anger quelled, he chided himself for being thoroughly unprepared for this meeting. He recalled his numerous social gaffes, beginning with his foul language in polite company, and his failure to observe their customs. The half million dollar windfall was slipping through his fingers. \n\nDax looked at his stained coat cuff, ruined shirt, and the tear in his pants. He smiled. \n\nWhat a fucking idiot I've been. I thought I had a lay-up and ended up being shown the door by a woman who easily bested me. Am I slipping? Where was Dax, with the silver tongue? \n\nHe looked again at his watch and realized he was ten minutes past his cut-off time. He rushed out of the building and ran down the sidewalk to his car when he reminded himself to look down. He stepped gingerly over the upturned concrete in the sidewalk, this time avoiding the fall. Mason opened the door for him. He got into the car and breathed a huge sigh of relief that his sparring match with a superior partner was over. Ordinarily he would have Mason play talk radio, listening to the inane banter of the fans and host as they dissected the Knicks' last loss and then the game that night. But tonight wasn't like any other night. He had stepped into a different world, and suddenly his gyroscope was out of kilter. He spent the next hour thinking about how to reach into Keiko's world and get what he felt was rightfully his. \n\nDax arrived at Madison Square Garden almost an hour late, with the game late in the second quarter. He found his way to his empty courtside seat. Dana nodded as he sat. \n\n\"Sorry, traffic.\" \n\nDana looked at the usually nattily dressed man and saw the large black stain on the cuff of his suit coat and the cuff of his shirt and a massive tear in his pants. There was dried blood on his exposed knee. \n\n\"Don't ask,\" said Dax, not at all in the mood to be subjected to an inquisition by his ex-wife. \n\nThere's an old saying that bad things happen in threes. After the disaster that afternoon, there was no Spike Lee in his usual courtside seat and the Knicks were blown out by thirty points. As they were leaving the game, Dax was unusually subdued. \n\n\"What's up Dax? You didn't utter a peep during the game,\" observed his host and ex-wife. \n\n\"What do you mean?\" \n\n\"C'mon Dax. You're not yourself. I was married to you.\" \n\n\"I had a strange meeting today.\" Dana took his arm as they wove through the crowd to Dax's Bentley. He went about explaining his day, starting with his fall, which Dana thought was hilarious (Dax somehow missed the humor in the incident), and then his interaction with Keiko. \n\nMason was waiting curbside. They both got into the back seat. The noise and commotion was left on the other side of the heavily tinted windows. \n\n\"You obviously fucked up,\" said Dana, never one to mince words. \"You have the body of a man but the mind of an adolescent. Sounds like you've met a real woman, not one of the ditzy blondes you've been chasing recently.\" \n\n\"Dana, why don't you tell me what you really think,\" said Dax, the sarcasm evident in his tone of voice. \n\n\"I think I just did.\" \n\n\"It ain't over till it's over,\" said Dax, quoting his favorite Yogi Berraism. \n\n\"I think it is for you,\" replied Dana, always eager to get in another dig. The baggage of their failed marriage came welling to the surface. An honest assessment of his shortcomings was exactly not the thing Dax needed at this time. \n\n\"Fuck off Dana. I can fix this.\" \n\n\"Who got you the courtside ticket tonight?\" \n\nThere was dead silence. It was the second time Dax was pinned that day. \n\n\"You,\" said Dax, in defeat. \n\n\"Then listen to what I have to say. Call her and apologize. You can't waltz into someone else's neighborhood and expect the waters to part for Dax Hanlon, real estate mogul. You need to play by their rules if you want to win. Sounds to me like you were trying to cram the Dax Hanlon rulebook down her throat.\" \n\n\"Maybe I was a bit too hasty in my approach.\" \n\n\"Maybe? You tried to steamroller her. By the way, was she cute?\" \n\nDax was surprised he hadn't focused on Keiko's appearance. He was too busy treading water with her. He thought for a moment before answering. \n\n\"I guess she's attractive. I was too busy pulling her quills out of my skin to really notice.\" \n\nDana let out a belly laugh. \"The great Dax Hanlon was so twisted in knots that he didn't notice?\" \n\nDax remembered Keiko's subtle fragrance. Was it apple blossoms? Lilacs? She had a mane of jet black hair pulled up into a bun. It looked almost luminescent in the filtered sunlight of her apartment. Her almond shaped eyes were coal black, the color matching her thin eyebrows and contrasting with her porcelain skin. She had fine facial features, her high cheek bones and the soft curve of her chin looking as if they were carved by a master artisan. She had small breasts and dainty feet, so unlike the women Dax usually chased. Yet Keiko's air of quiet confidence enhanced her natural beauty. \n\n\"I did notice.\" \n\n\"So you're smitten. That's why you can't manage this situation.\" \n\nDax was quick to deny, even though Dana was right. \"That's not it at all.\" \n\n\"Isn't it?\" \n\n\"It's business Dana. Strictly business.\" \n\n\"Of course.\" \n\nIt was Dana's smugness that drove Dax up the wall. Their little repartee reminded him of why they weren't living together. They finished the remainder of their journey in silence. \n\nThe sleek black car arrived at Dana's apartment building (which was also owned by Dax). Mason got out and opened the door for her. She put her right foot on the sidewalk and looked back into the car's cabin. \n\n\"Do the right thing, Dax.\" \n\n* * * \n\nDax steeled himself to render an apology, something he was loath to do. He punched in Keiko's phone number. \"Ms. Muramoto, I think we got off on the wrong foot yesterday.\" \n\n\"I don't. I think you did exactly what you intended to do. You offended me. You offended my mother and even my deceased father. You tried to buy my home so you could destroy it for a meaningless shopping center. I don't like you and I don't like your offer.\" Keiko was never one to mince words. Dax wasn't used to being talked to that way. Nevertheless, instead of becoming belligerent, he felt a compulsion to assuage her concerns, and perhaps to please her. \n\n\"I realize I didn't make a good accounting of myself yesterday. For that I apologize.\" For the first time, he sounded genuinely contrite. Keiko was expecting belligerence, and not self-awareness of his shortcomings. For a man like Dax Hanlon, admitting he was wrong was a big deal. And Keiko knew it. \n\nThe was an uncomfortable pause on the phone. \"Thank you Mr. Hanlon. I appreciate your apology. I'm helping my mother with preparing lunch at our community center, so if that's all ...\" \n\n\"Can I help?\" Dax blurted, not exactly sure why he said it. \n\n\"Help ... me?\" Keiko let down her guard and laughed. His offer of help was so unexpected, and sounded sincere. \n\nDax sensed that he was making headway. For once he didn't meet a stone wall. Dana's words were still ringing in his head. \n\n\"Yes ... yes ... I can be there in an hour.\" He would have to drop everything to be in Queens in an hour. Mel would have killed him if she had been in the room with him. \n\n\"No strings attached?\" \n\n\"No strings attached.\" \n\n\"Wear comfortable clothes.\" The line went dead. \n\nDax stared at the screen of his phone. He had never volunteered to do anything in his life. Why did he do it? What had he gotten himself into? There was something about her ... he had never met anybody like her in his life. \n\n\"Comfortable clothes?\" What does that mean? The woman's impossible. I offer to help and she dismisses me as if I'm one of her minions. I don't have time to get changed anyway, so I guess it's coat and tie. \n\nDax summoned Mason, and within minutes his Bentley was parked in front of his office building. He got into the car and dialed Mel. \n\n\"I've got a meeting in Queens I've got to take. Can you cancel my meetings until two?\" \n\nThere was a buzz on the line. Dax wasn't sure Mel was there. \"Mel?\" \n\n\"I was just throwing a dart at a picture of you. Do you want to know what I hit?\" \n\n\"No, God damn it. Can you clear my schedule?\" \n\n\"So you're going to cancel the Reynolds meeting? The meeting I had to pull strings to get. The meeting so you can buy the office building you've had your eyes on for the past three years? That meeting?\" \n\nDax had forgotten about the meeting. Somehow his interaction with Keiko had turned his world upside down. He couldn't believe that he forgot about the meeting he had been waiting for ever since he got the offer for Keiko's apartment building. He might not get another chance. \n\n\"Oh fuck. Mel ... I made a promise I can't break. Cancel the Reynolds meeting. See if they can reschedule to next week.\" \n\n\"What the fuck is in Queens?\" \n\n\"Uhhh ... it's the apartment deal.\" \n\n\"I thought she said no.\" \n\n\"I'm trying to change her mind.\" \n\n\"So what do you want me to tell them?\" \n\n\"Uhh ... tell them I had a personal emergency or something like that. Tell them whatever you need to tell them, just get my meeting rescheduled.\" \n\n\"Dax?\" \n\n\"Yeah?\" \n\n\"Are you OK?\" \n\nHe wasn't OK. He couldn't explain his own actions. Yet he felt no doubt he was doing the right thing. \n\n\"Yeah, yeah, Mel, I'm fine.\" \n\n\"OK. If you say so. I'll try to reschedule but you know what they're going to say.\" \n\n\"Do your best.\" \n\n\"Right boss. You take care.\" \n\nMel's radar antennae were sticking straight up. There was nothing that transpired in the last five minutes that in any way resembled the Dax Hanlon she knew. He cancelled a meeting that he moved heaven and earth to get. He was going to Queens to deal with a woman he told her was the ballbuster of all time. Dax wasn't the kind of guy to go back for a second helping of humble pie. \n\nThose questions and doubts didn't enter his mind. He just knew that he had to see her again. For what reason, he didn't know. It was a strange feeling for Dax, a man always in control, to now be acting in a way he didn't understand. He did want to meet with the Reynolds team to pursue his trophy office building. He had spent a considerable amount of time and political capital to get this highly sought after meeting. Keiko flipped his life over, his priorities tossed into the air. He had made a promise to her. The thought of cancelling his trip to Queens never entered into his mind. It was preoccupied with an image of a beautiful Asian woman. \n\nIt was still early morning, and the streets were jammed with delivery trucks. The sleek Bentley slowed to a stop as uniformed school children streamed across the four lane road. Dax cursed when he saw he was going to be late. He said an hour and it was closing in on an hour and a half. Mason finally maneuvered the Bentley around two trucks parked in a traffic lane and then swerved to nab a parking place about a block from the apartment building. Dax walked briskly, but having learned his lesson, kept his phone in his pocket. He sprinted into the lobby, now familiar to him, saw the three blackened tiles (he cursed to himself instead of out loud) and took the elevator to the second floor. Outside of Keiko's apartment, he carefully removed his shoes and then knocked. He heard feet padding to the front door, then saw the door swing open a few inches. The coal black eyes behind the door surveyed the tall, athletic man, wearing an expensive suit and tie. Yes, he was handsome. Beautiful and not yet broken.  \n\nThe door was shut again to allow Keiko to take off the chain lock. It opened and Dax was treated to the sight of a casually dressed Keiko, this time with her hair down. Dax had wondered what it would look like down. It flowed down her back like a meandering river, a lustrous ebony mane. Her face, freshly scrubbed, demure, and void of imperfections, carried fine boned delicate features. She was wearing a grey \"Middlebury\" sweatshirt and a well-traveled pair of jeans, cuffed at the bottom, and old school red canvas tennis shoes. \n\nKeiko almost laughed out loud when she studied his clothes. Dax stood there stiffly as she pulled on the lapel of his jacket so she could see the label stitched inside. It said, \"J.W. Porter, London.\" \n\n\"That's your idea of comfortable clothes?\" This man was pushing her limits, but she enjoyed the challenge. \n\n\"I didn't have time to go back to my apartment and change. Truth be told, I really don't own any casual clothes. So here I am.\" He spread his arms wide as he said it. Somehow he was unable to lie to her. \n\n\"Suit yourself,\" said Keiko reflexively, then realizing her inadvertent pun. This one is already bending to my will, she thought. He's stopped lying to me. \n\n\"Very funny,\" Dax deadpanned. It was the first non-hostile exchange between them. It was not lost on either of them. \n\nKeiko made no move to go into the apartment so the two of them stood in close quarters just inside the entryway. Dax wondered what she looked like under her baggy clothes, then banished the thought. Then he wondered why he was there. \n\n\"My mother should be ready to leave in a minute.\" \n\nMariko came out of her bedroom, wearing a simple dress and traditional wooden sandals. \n\n\"Ahhh, Mr. Hanlon. You have returned,\" said the elderly woman, standing with perfect posture. \n\n\"He offered to help, mother.\" \n\n\"So I see. And such nice clothes.\" \n\n\"He didn't have time to change. I'm sure he can afford the dry cleaning bill,\" noted Keiko, talking as if Dax wasn't there. She thought she was calling his bluff when he offered to help, and begrudgingly gave him credit for showing up. But the real work lay ahead. \n\nThey went into the hallway, Mariko putting on her street shoes. Dax noticed that both Mariko and her daughter had on comfortable shoes. Dax felt self-conscious as he tied the laces on his wingtips. \n\nThey went outside. Mason had moved the car to a space right in front of the building. \n\n\"Allow me to take us where we're going,\" said Dax, hoping the car's plush interior would impress them. \n\n\"No thank you. We prefer to walk. It's only ten minutes away and my mother enjoys the walk.\" \n\n\"That's fine. I'll walk with you.\" \n\n\"As you wish.\" The two women started walking side by side, with Dax trailing. Dax turned his head around and mouthed the words \"I'll call you\" to Mason. The car lights flashed, acknowledging that the message was received. \n\nThe walk was surprisingly enjoyable to Dax. They passed a number of stores where Keiko and the shop owner exchanged pleasantries. It was clear that the two women had earned the respect of the community, as a number of passersby greeted them with affection, with many expressing condolences for Koji's passing. As they neared the Community Center the back edge of Dax's dress shoes had raised a large blister on his heel. With his scraped knee from the previous day and the blister, he started limping. \n\nKeiko was walking ahead in conversation with her mother, but spotted Dax's distress out of the corner of her eye. \"Are you OK?\" she asked, genuinely concerned. \n\n\"I'll be fine.\" Dax soldiered on, trying the ignore the pain of the blister. He no longer wanted to be the center of attention. \n\n\"OK.\" Keiko was pleasantly surprised that Dax didn't take the opportunity to complain. He wanted to please her, that much was clear to her. She unlocked the back entrance to the kitchen and let Dax and her mother in. It was spotless, just the way Koji had left it many months ago. Keiko opened the large commercial refrigerator to find that volunteers had already purchased all of the ingredients for the luncheon they would prepare. She pulled out a box of fish, still packed in shaved ice. She put it on a stainless steel shelf next to a large prep sink. \n\n\"Have you ever cleaned a fish before?\" she asked, as she pulled a fish out of the box. \n\n\"What kind of fish are these?\" said Dax, trying to avoid answering the question. He hated fish, and cleaning and scaling fish in his suit and tie was about the last thing in the world he wanted to do. \n\n\"Mackerel, Mr. Hanlon. And you didn't answer my question.\" \n\nAs a child, Dax had spent a number of summers at his grandfather's cabin on a lake in Maine. He had gutted and cleaned countless fish and he vowed he'd never clean another one. But now, standing next to a slightly built Asian woman who was at least six inches shorter than him, he didn't react as he expected, which was to continue to deflect the question. \n\n\"I know how to clean a fish.\" \n\n\"Excellent,\" she said, then pointed to the soap dispenser and paper towel dispenser mounted above the sink. \"Wash your hands and clean the fish in this box.\" \n\nHe took off his coat and tie and rolled up the sleeves of his white designer shirt. Keiko went to the closet and returned while Dax readied himself. \n\n\"Here, Mr. Hanlon,\" she said as she handed him a clear disposable plastic apron festooned with a colorful floral pattern. \"Put this on.\" \n\n\"Please. Call me Dax.\" \n\n\"Very well ... Dax.\" \n\nDax smiled at Keiko's baby step towards informality. He pulled the loop of the apron over his head and tied the back, now looking comically awkward in his custom-tailored white shirt and a woman's apron. He stood at a stainless steel sink with a box of fresh fish packed in ice sitting on the counter next to it, the pungent smell making his nose crinkle. \n\nHe picked up the first fish by the tail, holding it as if it was a dead mouse. \"Is there anything else that you need done?\" \n\n\"Funny, Dax. You finish this first.\" \n\nKeiko left him to his chores and went elsewhere. There was a certain calmness that overcame Dax as he finished scaling his first fish and proceeded to gut it, throwing the bloody entrails in a large plastic bucket. The sleeves of his white shirt were already splattered with fish scales and blood, but somehow that didn't bother him. It was productive work - the first real work Dax had done in as long as he could remember. He completed the second fish in half of the time, and achieved a rhythm that soon had him pulling the last fish out of the crushed ice. He presented the box of cleaned fish to Keiko. ",
        "\"All done,\" said Dax proudly. \n\nKeiko looked at the box of meticulously cleaned fish and nodded approval. \"Well done, Dax. You surprised me.\" He had indeed surprised her. She thought that the box of fish would discourage him, and that he would be calling his driver to take him back in his fancy car back to his fancy apartment. Instead, he stood before her beaming like a ten year old boy, covered in pieces of fish entrails and blood. \n\n\"What's next?\" he asked, putting the box on the counter and then wiping his hands on a kitchen towel. \n\n\"We prepare the stew.\" \n\nDax was prepping vegetables on a large stainless steel work table as Mariko and Keiko fileted the fish and cut the filets into smaller pieces. They dumped each batch into a large pot of broth that was already bubbling on the commercial range. As Dax was peeling a carrot his phone started vibrating in his pocket. It was Mason. \n\n\"Time to go, sir. You've got a two o'clock back in the City and we'll have to leave now if we're going to make it.\" \n\nDax hadn't felt this relaxed in years. Working in the kitchen was a welcome change from the grind of endless meetings in windowless conference rooms. \"Was this real freedom?\" he thought. Something started to creep into his mind that had no place there before - doubt. Dax always acted with certainty and always got his way. Yet, taking orders and allowing his mind to wander had its appeal. \n\n\"Tell Mel to cancel it. In fact, have her cancel the remainder of my appointments today.\" \n\n\"But ...\" \n\n\"Just get it done.\" \n\n\"Yes sir.\" \n\nKeiko heard Dax's end of the exchange. \"So you're going to be here more than an hour,\" she said, clearly pleased. She could sense his change in mood. His hard edge had softened. \n\n\"You're a quick study,\" quipped Dax. \"Now what's next?\" \n\n\"Finish up the vegetables and then we need to get the dining area ready.\" \n\nAs the fish stew simmered, its seductive smell now permeating the kitchen, Keiko went into a closet and pulled out a chef's jacket, clean, but bearing faded stains on its sleeves. She draped the jacket over her arm and showed it to Mariko. Her mother's eyes teared as she nodded. She went up to Dax and presented him with the revered garment. \n\n\"It's my father's chef jacket. Why don't you take off your apron and put this on?\" \n\nDax knew that he was being given a small reminder of Keiko's father, and a surge of admiration and respect overcame him. \n\n\"Thank you. I'd be honored to wear it.\" He took off the heavily stained apron and threw it in a trash can and put on the jacket. It was a tight fit, and the sleeves were about two inches too short. Even so, Dax would have happily traded his custom tailored jacket for this one. With his business meetings out of his mind, he concentrated on working with Keiko to wipe off the large rectangular dining room tables and retrieve the stacks of plastic chairs, pulling each one off the stack and arranging them around the tables. Mariko was busy seasoning the stew, then slicing baguettes and putting the pieces into red mesh plastic baskets that were then placed on each table. There was quiet as each person concentrated on their tasks, the only noise being the squeaking of the rubber tips of the chair legs as they rubbed against the linoleum floor. \n\nKeiko surveyed the room and smiled with satisfaction. \"We're ready.\" \n\n* * * \n\nAs Dax was serving, an elderly Japanese man with a white beard looked at the tall man as his bowl was being filled with the fragrant stew. He moved his tray down the line, now in front of Keiko. She doled out some cut fresh fruit into a bowl and handed it to him. \n\n\"You ... boyfriend?\" he asked, in halting English, showing a grin with tea-stained teeth. \n\nKeiko snickered. \"No ... just someone who wants to help.\" \n\n\"He no here just to help,\" the man replied, showing the wisdom of his years. \n\n\"Maybe not,\" said Keiko, her heart clearly softening. \n\n* * * \n\nThe door to the community center dining hall was closed and locked. The last of the pots and pans had been washed and put away. Dax folded Koji's jacket and placed it on the counter and then used his shirt sleeve to wipe the sweat from his brow. \n\n\"I guess it's time for me to go,\" he said, tired but happy. \n\n\"Thank you, Dax. You were a great help.\" Keiko stood on her tiptoes and gave him a peck on the cheek. \n\nDax beamed, the original purpose of his visit long forgotten. He stood under the bright fluorescent light of the commercial kitchen, stinking of dead fish, and couldn't remember the last time he had enjoyed himself as much as he had that day. \n\n* * * \n\n\"You look good boss man,\" said Mason, looking at Dax's ruined white shirt, the cuffs heavily stained with fish blood. \"You seem to ruin your clothes every time you visit this woman.\" But Mason saw a man refreshed. He saw the same sparkle in his friend's eyes that he had seen twenty years ago. \"It suits you.\" \n\n\"I do feel good. I didn't know that gutting a fish could be so rewarding.\" \n\n\"You are ... fragrant, sir.\" \n\nDax laughed. He stunk of fish and had ruined yet another set of clothes. Ordinarily, he would have been horrified to be soiling his immaculate limousine but that thought never entered his mind. Her face, her touch, he wanted to remember every detail of being with her. It was as if she was exerting an unseen pull on him - a force he was unable to resist. \n\nAs they crawled in heavy traffic, Dax called Mel for an update on the rescheduling of the Reynolds meeting. \n\n\"Got good news for me?\" \n\n\"I'm afraid not. They told me that they're going to meet with several other companies that have expressed interest in their building. If those don't pan out they'll come back to you.\" Mel waited for the explosion. \n\n\"I was afraid that was going to happen.\" \n\n\"What?\" said Mel, unable to contain herself. \"No screaming, yelling?\" \n\n\"Maybe it was meant to be.\" \n\n\"Dax, seriously, are you OK? You've been chasing this deal for months. Then you cancel it for some stupid reason and don't seem to care that you've lost it.\" \n\n\"It wasn't a stupid reason.\" \n\n\"Tell me. What's up?\" \n\n\"Nothing. Really.\" \n\n\"Fine, don't tell me.\" Dax heard a click. \n\nMel went online to research Keiko Muramoto. She found a picture of Keiko announcing her affiliation with a local accounting firm. No wonder, she thought to herself as she studied the picture of a beautiful Japanese woman. This woman had Dax wrapped around her little finger. \n\n* * * \n\nDax was standing under the hot spray of his shower, attempting to remove the fish odor from his skin. As he scrubbed his arms, he started thinking about what Dana had said to him. Did he have a crush on Keiko? His relationship with her wasn't like any of the others that he'd been in. Although Keiko was attractive, there was something else. Something he couldn't pin down. \n\nAs he thought about Keiko, his cock stirred. As men are wont to do in a shower with an erection, he started stroking his engorged penis, conjuring up an image of Keiko hovering over him as she watched him prone on the floor, splattering cum all over his chest. The image fueled his desire, and with each stroke he ejaculated pearly ropes of cum on the shower floor, his knees weak from the gut-wrenching orgasm. \n\n* * * \n\n\"You're going to be gone again on Friday?\" Mel now knew that Dax's relationship with Keiko was more than business. It was the third time he'd asked to have his Friday calendar cleared. Mel put the call on speaker so she could access his schedule for Friday. \n\nHer tone of voice sounded more like that of a wife than an assistant. \"Yes,\" he replied, becoming annoyed at her comment. \n\n\"She's not your type.\" \n\n\"Jealous?\" \n\n\"Not at all,\" Mel replied, Dax not believing her lie. \"She just doesn't look like the kind of girl you've been chasing.\" \n\n\"So you've seen Keiko?\" \n\n\"Well, I may have done some online research.\" Mel could feel her jealousy bubbling to the surface. She reminded herself to be careful. \"Is she nice?\" \n\n\"She wasn't nice to me in the beginning ...\" \n\n\"Because you were being an asshole ...\" \n\n\"That's true. I think being with her has shown me that I may not fully understand the complexities of the female mind.\" \n\n\"You think?\" \n\n\"C'mon Mel. Cut me some slack. This is all new to me.\" \n\nMel had to admit that Dax had demonstrated a great amount of self-awareness, an attribute formerly in short supply. He was changing, and for the better. She decided that maybe this direction was a good one for Dax and for her. She needed to let go of the fantasy that she and Dax would hook-up. \n\n\"I'll move the Jensen and Martin appointments to next week. You should be clear tomorrow. And I'll make sure that Fridays are blocked out for you.\" \n\n\"Thanks Mel. You're a peach.\" \n\n* * * \n\nDax began spending all of his free time with Keiko, becoming a regular volunteer for the Friday lunches at the community center. His respect and affection for her grew each time they were together, and the proposal from Owen Harrison's group was long forgotten. Dax saw that his little fourplex was the focal point of Keiko's community and that he didn't want to disturb that dynamic. \n\n\"I've decided I'm not going to sell,\" he announced after finishing his clean-up chores at the community center. \n\n\"I'm not surprised,\" replied Keiko, recalling that no mention of the lease buyout had been uttered since she had refused his offer. \n\n\"You and your mother can live here as long as you like.\" It wasn't like Dax to be magnanimous, but since meeting Keiko there were a lot of things about Dax that had changed. \n\n\"Thank you,\" she said, her thanks giving Dax a feeling of satisfaction. \"Would you join me and my mother for a cup of tea?\" \n\n\"I would be delighted.\" Dax knew that Keiko wouldn't have extended the offer if there was still friction between the two of them. \n\nThey washed up and then locked the kitchen. Outside in the afternoon sun, they walked together hand in hand to Keiko's apartment. Dax had signaled Mason to move the car, and the Bentley soon disappeared into the traffic, to await Dax's call from Keiko's apartment. \n\nWhen they entered the apartment, Dax noted a neatly folded kimono on the sandalwood table. Keiko picked up the garment with great reverence, holding it front of her and offering it to Dax. \n\n\"This is my father's kimono. I would be honored if you would wear it for the tea ceremony.\" \n\nDax bowed and then took the kimono. He put the kimono on and held his arms out, allowing Keiko to tie the sash for him. Mariko emerged from her bedroom also wearing a heavily embroidered kimono. The two women knelt before the table and Keiko pointed where Dax was to kneel. As Mariko watched, Keiko took a red napkin, which was folded in the sash her kimono, to wipe the inside of the tea bowl that would be used to brew the tea. The tea bowl (about the size of a large soup bowl) was placed in a black lacquer tray. A stainless steel kettle was sitting on a trivet on the table. A bow was exchanged between all participants, then Keiko took the red cloth napkin and wiped the edge of the tea cup. She poured a small amount of hot water into the tea bowl, then used a bamboo whisk to stir the water inside of the bowl, then used the napkin to dry it. Another bow was exchanged, then two scoops of tea leaves from a covered container were spooned into the bowl. The hot water was then poured into the bowl and the whisk used to vigorously mix the leaves and the water, turning the tea almost into a cream. As the guest, Dax bowed and gave thanks for the tea, placing the bowl in his left hand, turning the bowl twice and drinking it. \n\nDax was impressed by the reverence and precision of the tea ceremony, and enjoyed the smell and taste of the tea. He now understood the magnitude of the insult he had inadvertently delivered when he rejected Keiko's previous offers. He wondered how he could have been such as asshole. \n\nThe tea ceremony completed, Dax folded the ceremonial kimono and handed it to Keiko. She handed it to her mother and then took Dax's hands into hers. \n\n\"I'm impressed by your newfound interest in our culture.\" She was truly impressed by the changes in Dax's personality. Gone was the brashness and arrogance. In its place was patience and respect. \n\n\"I want this.\" \n\n\"I know you do,\" she said, kissing him on the cheek. \"Maybe he is the one,\" she thought to herself. \n\n* * * \n\nDax finally screwed up the courage to take Keiko to see his apartment. He would accompany Mason in picking her up at her apartment. \n\nThe Bentley idled by the curb as Keiko approached. Mason opened the back passenger door. Dax was waiting with a broad smile on his face. \n\n\"Shall we?\" he said, extending his arms towards her. She offered her cheek for a chaste kiss and got into the car. \n\nThe traffic was heavy, and the late afternoon rush hour traffic trapped the Bentley on the Van Wyck expressway (a misnomer if there ever was one). Keiko peered out the heavily tinted windows, watching a darkened version of her reality, always studying other people. A woman putting on make-up as her convertible crept along, an older man sleeping with his face pressed against the back window, and a man who looked directly at her from a passing sedan. Dax was mesmerized watching his guest study the outside. She had a calm about her, the same calm she demonstrated when he fell to the pavement. She was a student. She studied everything. The long silence prompted Dax to fill the void. \n\n\"Do you go to Manhattan often?\" \n\n\"When I need to.\" She was still staring out the window, her voice reflecting off the glass. \n\nDax wasn't a practiced conversationalist. Usually the women would talk and he would fake listening. She didn't seem compelled to share anything about herself. \n\n\"When do you need to?\" \n\n\"My accounting firm has a number of clients located in Midtown. I probably call on them once every two weeks during the busy season.\" She head still didn't move. She didn't appear to be interested in the conversation. \n\n\"Well, what do you do for fun?\" \n\n\"Fun?\" \n\n\"You know. When you do stuff and you smile. You do smile, don't you?\" \n\nKeiko twisted in her seat, her face now inches from his. She unleashed a disarming smile. \n\n\"You mean like this?\" \n\nDax mumbled an answer. He wasn't used to carrying a conversation. She was toying with him as a cat would with a cornered mouse. He decided to press on. \n\n\"Yes, like that. So what do you do for fun?\" \n\n\"I spend a lot of time with my mother, but what little free time I have I enjoy spending it painting with water colors and reading.\" \n\nDax didn't know how to artfully extract the information he was seeking so he just asked. \n\n\"Are you seeing anyone now?\" \n\nKeiko cocked her head, not expecting such a bold question out of the blue. \n\n\"I'm not sure you're entitled to an answer to that question. I'll tell you that I'm not in a committed relationship.\" \n\n\"Fair enough, fair enough,\" Dax stammered, realizing he may have stepped out of bounds. They hadn't even kissed yet. For all he knew, she was going to his apartment out of curiosity rather than any genuine interest in him. But he had to know. \n\n\"Is there room for me?\" \n\nKeiko took his meaty hand between hers. She gently massaged his fingers as she spoke. \n\n\"Of course there is. But I'm not one to have a conventional relationship with a man.\" \n\nThat statement couldn't go unchallenged. \"What do you mean by a conventional relationship?\" \n\nKeiko thought for a moment. \"You've been married two times?\" \n\n\"Uh huh.\" \n\n\"Those are conventional relationships.\" \n\n\"You don't even know ...\" \n\n\"I know.\" \n\nShe pulled his head towards her and lightly brushed her lips against his, then pulled his ear close to her lips. \n\n\"I'll show you.\" \n\nThe Bentley eased out of the traffic and into the underground garage. Its tires squealed on the concrete as Mason turned the limo into its assigned parking spot. The burly chauffeur dashed around the car and opened the passenger door, letting in the harsh fluorescent light and the cool damp air of the basement. \n\n\"Home, safe and sound,\" he proclaimed as he helped Keiko out of the back seat. She rested two fingers on his outstretched palm as he helped her out of her luxurious cocoon. Even with that fleeting touch, Mason knew that the woman that had enthralled his boss was nothing like any of the woman Dax had dated. \n\nThis was the first time Dax had seen Keiko dressed up in Western-style clothes, and her appearance was nothing short of spectacular. She was wearing a clingy black wool jersey dress with black heels. The dress hugged her slender body and the additional height afforded by the heels made her diminutive frame more imposing. Even though she had small breasts, the bra she was wearing showed them to their best advantage. \n\n\"Very nice,\" said Dax as his eyes travelled up and down his attractive visitor. \n\nMason went to the elevator and pushed the call button. Keiko stood uncomfortably close to Dax, crowding him. With her heels she was much closer to looking at him at eye level. Her hand dropped down and she used her fingers to trace along the inseam of his pants, getting uncomfortably close to the growing bulge in his pants. He shivered at her sensuous touch. \n\n\"So you like what you see, Mr. Hanlon?\" \n\n\"Very much so. Can I see more?\" \n\n\"In time.\" She wet her finger and then ran it slowly across his lips. Dax attempted to suck on it but wasn't fast enough. She then whispered in his ear, \"Patience.\" \n\nThey went up the elevator with Mason, stopping at Dax's penthouse. \n\n\"Will that be all, sir?\" asked Mason, holding the elevator door open with his hand. \n\n\"That'll be all. Thank you, Mason.\" Mason grinned as they exited the elevator. He wondered what web this temptress was spinning for his boss. \n\nThe elevator doors closed and Keiko and Dax were alone. Dax punched his security code into the keypad next to his front door and then pushed it open. Keiko was greeted with a panoramic view of Queens to her left and Brooklyn to her right, wispy white clouds framing the horizon. The small dining table had been set for dinner, along with a bottle of chilled Champagne in a bucket of ice and two crystal flutes. \n\n\"It's lovely Dax.\" \n\nDax was oblivious to the view. His eyes were on Keiko. \"So are you.\" \n\nShe kissed him again, this time swirling her tongue against his as their passions rose. He lost himself in the kiss, and ran his hand against the large expanse of exposed skin on her back. As they kissed, his hand ventured lower, touching the lace covered elastic band of her skimpy panties. She broke the kiss when she felt his hand in an area that he had not been given permission to touch. \n\nAs she broke the kiss, Dax couldn't stop himself from begging. \"Please ... I want you.\" \n\nKeiko stood up straight. Her eyes narrowed. \"It has to be on my terms.\" \n\n\"Your terms?\" \n\n\"That's right. I only have only one rule. If you choose not to obey one of my commands, our relationship is over. Is that understood?\" \n\nHer declaration was clear. This was the \"unconventional\" relationship she had tantalizing left undefined until now. \"Yes, I understand.\" \n\nKeiko had to confirm that he was ready ... and willing. \"Get on your knees ... and be quick about it.\" \n\nUnquestioning, her budding submissive grimaced as his knees slammed into the hardwood floor. \n\nHe felt her power over him. It was as if he had been going through life in the dark and in her presence he was in the light. He felt alive ... truly alive ... for the first time. He became hyperaware of his surroundings ... it was his apartment, his sanctuary, his private domain, but somehow it wasn't his anymore. \n\nShe stood over him, gazing down into his eyes, deep pools of emerald green, shimmering in the light, pleading for her guidance. He looked into hers, so full of life, her shiny black hair now hanging down, framing her face. His life was in her hands, yet he knew with certainty that was precisely what he wanted. ",
        "\"Do you want me?\" she asked rhetorically. Dax supposed she just wanted him to say it. She did and he did. \n\n\"You know I do.\" \n\nKeiko wandered into the bedroom, running her fingertip across his armoire, as if looking for imaginary dust, and then touching the linens on his bed, the cool, silky material skimming across the palm of her hand. She flicked on the light and went into the bathroom, turning around, commanding in her presence. She wiggled her finger, signaling Dax to join her. \n\n\"Undress me.\" \n\nHer voice was a sexy as fuck. \n\nDax was of course surprised by the abruptness and nature of her command but happily crawled over to her on his knees and started pulling up her dress. He gripped the soft, pliable jersey material between his fingers, rubbing them together to feel the fabric. He pulled upward, trying to mind his hands so they didn't touch her legs, and paused when her dress was above her waist, exposing a pair of white bikini style panties. They were sopping wet. The irregularly shaped dark wet spot was growing as Dax stared at it. \n\n\"Faster ... undress me faster,\" her muffled voice barked behind the veil of her dress. \n\nDax pulled the jersey dress over Keiko's outstretched arms. He watched the muscles in her slender forearms flex as she stretched her hands upward. He started to shake, and his breathing became ragged. He was holding her dress and staring at his vision of a goddess, her pert breasts displayed by her demi-cup bra. He shuddered again, unable to move. \n\n\"Dax, do you want this?\" his dominant asked, now fully in control. \n\nHe shook his head as if to shake out the cobwebs. \"I do. I do more than anything.\" \n\nIn a more soothing voice, she brought him into the present. \"All right then. Breathe. Just do what I say, OK?\" \n\n\"OK.\" \n\n\"Now finish undressing me.\" \n\nHe reached behind her to unhook her bra, his face only inches from her chest. As the bra slipped off her shoulders she clasped her hands behind his head and brought it tight against her chest, his cheeks touching the sides of her breasts. She used her hands to press her breasts against his face, the stubble of his five o'clock shadow tickling her skin. \n\nShe sat on the edge of the tub and pointed to her outstretched foot. He admired the daintiness of her feet and the shape of her calf as she flexed her foot so her toes were pointing outward. Her blood red nail polish on her toe nails (and fingernails) made Dax desperately want to break discipline and take her into his arms. But her grip on his psyche was much stronger than his compulsion. He stood impassively, waiting for her instruction. \n\n\"Wash my feet.\" \n\nFor Keiko, it was an act of obedience, respect, and above all submission. \n\nDax almost said, \"What?\" but knew that questioning her request was tantamount to an insult, and maybe the end of their \"relationship\". He leaned over and rolled up the cuffs of his pants and his sleeves and stood in the bathtub, looking down at Keiko, her bare leg held out, toes pointed, her waist covered by a sheer pair of panties. Dax could see the outline of her pubic lips against the tight-fitting see-through material. He was exercising more self-control that he had ever done in his life. The world revolved around Dax. Dax got what he wanted. People wanted to give Dax what he wanted. Yet here he was, standing in a cold white porcelain tub with the most bewitching woman sitting not more than a foot from him, and had no inclination to take what he clearly wanted. \n\nDax turned on the water to the tub and knelt into the rush of water, his Italian slacks now ruined, bending forward to rub a bar of soap against her exquisitely formed foot. \n\nDax lovingly caressed her foot, running his fingers between her toes, trying to elicit a reaction. Although he appeared to be intensely watching his hands massaging her foot, his trained peripheral vision was seeing a woman of great beauty radiating her power over him. Her face was ... pensive ... as if she was thinking about a complicated math problem. \n\nHe was making love to her foot, rubbing the soles of her feet and working his way upward to the arch and then massaging each toe by rolling them between his fingers. He couldn't shake the thought that he was experiencing one of the most blissful moments of his life. He was being of service to the most beautiful creature he had ever laid eyes on. He felt a surge of satisfaction as he lightly manipulated the bones in her foot. \n\n\"Good boy.\" \n\nThose two words resonated like peals of thunder to the novice submissive. His knees felt weak and his thighs were trembling. He wondered how surrendering control could give him such great satisfaction. His inability to answer that question didn't relieve him of his desire to continue. He knelt there, the soapy water lapping against his pant legs, washing her feet until she told him to stop. \n\nKeiko felt that surge of pleasure that came with the supplication of her submissive. The power over another. All the men she had met in her life were typical Japanese men, polite, neat, and ... boring. She was thirty-two, and considered an old maid in the Japanese community. But it wasn't for lack of interest. She had dated a good number of men, all of them fawning over her beauty. She knew she wielded power over these overly eager hormonal, suppressed, men, and simply honed her kinkier preferences over time, with many eager supplicants begging for more. But she had never dated, let alone allowed herself to be in an intimate relationship with a Caucasian, and this man first came across as everything she despised: arrogant, inconsiderate, superficial, greedy, and willing to use his good looks as a weapon. \n\nBut she was wrong. She knew that now. He was in front of her, head down, but with a rigid back, his muscles rippling in his waterlogged shirt sleeves. He was magnificent. She tried not to look. Not to be dazzled by him, as he displayed his charms. And for the most part she was successful. Dax always got what he wanted, and he wanted to be exactly where he was at that moment. Was she as sure? Not then. She was too practical. She thought of the scandal in her community if she were to be seen in the arms of Dax Hanlon. \n\nEven with her mental reservations, she wanted to see where this would go, how it would play out. She was attracted to him, against her better instincts, and his clearly subservient position in front of her was simply irresistible. She knew that he had never washed a woman's foot before, but she spent the entire time suppressing a smile of great joy when his broad hands tenderly massaged her foot and her toes. \n\nHis want was palpable. But she hadn't decided whether he would get anything more, or whether she would leave him in the tub, in tepid water, kneeling on a hard surface, until morning. His cock was straining to break free of his pants. Dax had no way of controlling his overwhelming desire for her. Keiko could see the large lump in his pants. It looked big. She tried not to let her lust cloud her judgment. \n\nShe typically would have ended her session at this point. Her supplicant was usually permitted to touch her, but not in any intimate places on her body. In unusual circumstances she would permit her sub to touch or play with her breasts. There were only two subs who gave intimate service to her nether regions but neither was permitted to penetrate her. That was for someone special. She would know it. She wondered if Dax was this man. \n\nBut even then, he would have to earn it. Under no circumstances would she lose her virginity until she was sure, absolutely sure, that she would want to be with this man for the rest of her life. No man had ever come close to meeting her standard. And at that moment she doubted he was the one. \n\nThe intimate service to her feet earned him more. More than she wanted to give him. But she wanted to see his cock. She was sure it was big, but she wanted to see how big. And she wanted to feel him in her way, to feel the lamb soft skin of the underside of his throbbing penis. \n\nShe lifted her leg out of the tub and swung her body around so she was facing away from the tub. \n\n\"Dry them.\" \n\nDax scrambled out of the tub, his wet clothes clinging to his body. He knelt in front of her as she sat on the edge of the tub, his eyes were looking directly at her breasts. He watched her small breasts and nubby brown nipples as her chest heaved with each breath. He turned to his right and pulled a bath towel off the stainless-steel towel bar. He rubbed the ultra-soft terry cloth against her skin, pulling off every drop of moisture on her foot and then upwards on her calf. \n\nAs he toweled off a few drops that were perilously close to her thigh, she instinctively barked, \"That's enough!\" The sharpness of her voice startled Dax, and he dropped the towel and sat upright on his haunches. \n\n\"I'm sorry,\" Dax said, not knowing his transgression. \n\n\"Of course you are,\" said Keiko as she tried to buy time to regain her composure. She feared if she let him touch her thighs when she wasn't mentally prepared that they would part to allow his advances. Why did his drying her feet feel so good? \n\n\"Continue.\" \n\nDax finished drying her feet, being careful not to venture too close to her thighs, and then awaited his next command, head respectfully bowed. \n\n\"Take off your clothes and lay on your back on the floor.\" \n\nHe had fantasized about this very moment. His cock was now throbbing painfully in his pants. Dax looked at his clothes. Two buttons had already popped off his shirt and it was wet, with one sleeve torn. His wool pants were drenched, and he could feel the material constricting around his legs. He was relieved that she asked him to shed his clothes, but wondered why he would be lying on his back on a cold, tile floor buck naked. \n\nHe knew now his perception he controlled his life was illusory. He was never able to scratch the surface under a person's veneer, even with his two ex-wives. He didn't have a deep emotional connection with anyone - until now. Keiko was in control of him not only physically, but emotionally. She was methodically stripping away his defenses, laying bare his desire to please her. \n\nAs Dax took off his clothes, Keiko feigned disinterest but was watching his every move. Dax's daily workouts resulted in a chiseled body on his six-foot two frame. Keiko was fascinated by the definition in his muscles. As Dax bent over to place his folded pants on the floor, she admired his muscular rear and legs framing his cock, even flaccid larger than any she had seen. She could see its massive head and wondered if it would ever enter her, and whether she could accommodate its girth. She watched it dangle as he bent over, and as he finished he turned around to face her. His sudden movement caught her by surprise, and he saw her looking at him. She averted her eyes, but he saw that she was watching him. He now knew that she wanted him. He wanted to know how badly. \n\nKeiko was embarrassed that a sub would catch her staring at him. This man was affecting her in ways she couldn't control. That worried her. She was always in control. Why him? This arrogant, superficial man? There was much more to this man that she couldn't see. And she wanted to see everything. \n\nDax lowered his bare bottom onto the small, marble tiles, their coldness stinging his skin as he sat. He reclined with his legs still bent at the knees until his view was of the ceiling of the bathroom. He was unable to stop his real estate eye from noticing the intricate woodwork on the crown molding covering the intersection of the wall and the ceiling. The hand cut glass fixture he bought in a Paris flea market two years ago glowed above him. He lowered his legs until they were straight. He tried to stare straight upward towards the ceiling. He could feel his penis throbbing. He couldn't stop it. He didn't care. He would show himself to his woman as he was, not what he thought he was. \n\nKeiko wasn't sure she contained her surprise when she saw his cock throbbing as if it were an animal, straining at its leash to break free. The purple mushroom head flared as her foot brushed against the inside of his thigh. \n\n\"Uhhh,\" moaned Dax through clenched lips. Even the lightest of touches from her made his skin blaze with desire. \n\nA smile curled up on her lips as she watched him arch his back, pushing his thigh against her foot as it traced upward, her toes skimming against the underside of his cock. Dax grunted as a small trickle of blood meandered down his chin, unknowingly he had bitten his lip to suppress his groan. \n\n\"Your cum belongs to me,\" she said, her tone leaving no doubt as to the importance of her statement. \n\nShe leaned over ... slowly ... her long mane of ebony black hair hanging free in front of her. She got on her knees and ran her hair from his feet to the inside of his knees. The muscles in his legs were quivering as she swept her hair upward across his exposed testicles and the underside of his penis. His lips started moving but no sound came out of them as this exquisite torture made his blood boil with desire. \n\nShe then rubbed the sole of her foot against his penis, pinning it against his chest. \n\n\"Answer me. Your cum belongs to me.\" \n\nIt was exquisite pleasure, the baby soft skin of the bottom of her foot rubbing against and exciting every nerve ending in his throbbing cock. \n\n\"Yes ... my cum belongs to you.\" \n\n\"I don't want it now. Do you understand?\" she barked, tapping her hand on his leg to stress the importance of her statement. \n\n\"Yes.\" \n\nHaving heard his promise she spread her toes apart and ran them up and down his turgid cock, the purple veins pulsing as cum tingled in his balls. Now it was a war of wills. A war Dax knew he couldn't win. But he wouldn't make it easy for her. \n\n\"Enough?\" she asked, baiting him. \n\n\"No,\" he sighed as if he wasn't feeling anything. He was biting the side of his lip as he said it. \n\nKeiko placed the length of her foot against his member, flexing her toes and making the muscles in her arch ripple. \n\n\"Oh ... God ...\" Dax said in an almost inaudible moan. \n\nHe fought his orgasm, clenching his muscles, the sweat beading on his brow. \"No ... no ... I won't give in just yet,\" Dax told himself. \n\nShe laughed, and wanted her laugh to be heard, when a drop of precum touched her foot, it dangling from the tip of his manhood as she moved her foot, stretching the thin bead of liquid until it snapped. She had enough of the one upsmanship. She knelt next to his prone body and used her thumb and forefinger to encircle the shaft of his cock with her fine boned hand, its girth massive enough that the tip of her finger did not reach the tip of her thumb. She squeezed until they almost touched and then started moving her hand up and down. \n\n\"You win,\" Dax thought as he surrendered to her touch, the velvet soft feel of her skin against his and the delicious pressure of her fingers triggering a spurt of cum that hit his chin, lewdly dripping down as long ropes of cum crisscrossed his chest. His breathing became ragged as she continued to milk the cum out of his balls. \n\n\"You disobeyed me,\" Keiko said flatly, as Dax's forehead pounded. \n\n\"I'm sorry,\" gasped Dax, knowing he was expected to fail. He was shivering now on the cold marble, aftershocks of his climax still rippling through him. It was a new feeling to him - to be used - and to his surprise it was deeply satisfying. \n\nShe took the towel Dax used to dry her feet and threw it on his chest. \"Clean yourself up. I'll be in the bedroom.\" \n\nKeiko had already gone far beyond what she had expected to transpire that evening and was in uncharted waters. She saw his magnificent cock and his skill with her feet and wanted more. Her body demanded more. She succumbed to her baser instincts and sat on the edge of the bed. She debated with herself, asking if she should let him touch her. It was inevitable that she would so why not now? \n\n\"Come here,\" she called out towards the master bathroom. \n\nMoments later Dax emerged, his hair disheveled, with red marks on his back. \n\n\"Turn around.\" \n\nDax stopped in the middle of the bedroom and turned so his back was facing her. His back was cross-hatched with red lines made by the grout lines in the bathroom floor. Keiko was amused by the performance art and ordered him to kneel in front of her. She wanted to be sure she was making the right decision. \n\n\"Tell me why.\" \n\n\"I ... I don't understand.\" \n\n\"Tell me why you want to serve me.\" \n\n\"I ... I don't know. I asked myself that question. It's a compulsion. An irresistible compulsion. I don't feel complete unless I'm with you. I can't describe it any better than that.\" \n\nKeiko was more than satisfied. The brash real estate mogul was now hopelessly in love with her. She knew it now. She parted her legs a few inches, just enough for Dax to see a growing wet spot in her panties. \n\n\"Do you see?\" Keiko could see his eyes trained on the junction between her legs. \n\n\"Yes,\" he replied, not moving his eyes away from her pale, white thighs and the translucent material covering her sex. \n\n\"You may kiss me there,\" she said, not believing she was inviting this man she despised to her most intimate of gifts. \n\nDax kissed up the inside of her thighs, as she leaned back into the bed and spread her legs wide enough for Dax to get his head between them. He reached up to pull on her panties. \n\n\"Did I give you permission to take off my panties?\" \n\n\"No ... no, you didn't.\" \n\nHe let go of the panties and continued to lavish her thighs with kisses. He then pushed his lips against the gusset of her panties, his tongue brushing against the silky material, only millimeters from her pulpy flesh, fragrant as if scented by a heaven he would never visit. Dax's cock stirred as he licked the material, her nectar now flowing freely as he lapped it up as it oozed through the porous material. He kept licking until she could take no more, lifting her hips in silent surrender as Dax slid the sopping wet panties off of her. \n\nThe smell of sex was thick in the air as Dax plunged his tongue into her sex. He became ravenous. The stubble on his chin was covered by his spit and her nectar as he laved her pussy lips over and over. Her eyes narrowed as he went upward, concentrating on her clitoris, sucking it into his mouth as if it were ripe fruit. Her hips involuntarily flexed as she felt an orgasm forming deep inside her. Dax sensed it as well. He had made love to many women, and he knew when one was close. And she was close. He sucked harder, swirling his tongue around the hardened nub, and making loud sucking noises as her hips now flexed in rhythm with his tongue. \n\nKeiko didn't want to, but words leapt out of her lips. \"Oh yes ... yes\" she panted as Dax sensed her release was imminent. He slid his index finger under his tongue, wetting it with the combined juices of his mouth and her weeping pussy, and then slid the finger lower, circling her anus and then pressing inside. \n\n\"Oh God!\" gasped Keiko as the orgasm she was working so hard to suppress ripped through her, surprising her with its intensity. Dax was still sucking on her pussy and slowly pumping his finger in and out of her back channel as orgasm after orgasm vaporized her carefully constructed fa\u00e7ade of calm and self-restraint. No submissive had ever made her feel like this. \n\nThere was no way she could wean herself off this feeling, but there were still her protocols to follow. Her protocols perfected over time. Her protocols to assume and maintain control. Were they shattered to the point she would willingly lose her virginity to him? \n\nHe looked at her, his eyes pleading for their mutual release. His cock was throbbing again, hardened. There was no question of his desire. It was only whether Keiko would permit him to be the first to have her. Her heart screamed yes. She summoned every ounce of willpower in her body to exercise the self-control she was about to lose. ",
        "\"Not yet, my love,\" she said as she gently but firmly pushed him away with her hand. \"Now do be a dear and fetch me a cup of tea.\" \n\nTo be continued ... I promise."
    ],
    "authorname": "soppingwetpanties",
    "tags": [
        "bdsm",
        "blowjob",
        "cunnilingus",
        "domination",
        "femdom",
        "orgasm denial",
        "romance",
        "submission"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/a-cup-of-tea-bk-01"
}