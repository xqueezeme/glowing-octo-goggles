{
    "title": "A New Way of Seeing Things Pt. 03 Ch. 10",
    "pages": [
        "Standard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\n. \n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental. \n\n*****\n\nPay attention to your driving, the Lady reminded her yet again, and again she was successful for only a short time before her thoughts returned to where she had just come from, and what had been discussed... \n\nProposition. Her hostess had said the word in a way that made it sound harmless, even a little exciting, but Gwen's ingrained sense of caution rose to squash those notions. \"A proposition?\" She had asked the other rider. \n\nMrs. Danning smiled. \"Yes, a proposition. You may or may not be aware, but in addition to horses I have a passion for good photography. I'm especially pleased when those interests are come together. \n\nI'm having my private quarters at the farm in Kentucky renovated and I need something nice for the walls of my bedroom. I've commissioned Danilo Castigalli to produce some pieces for me. So you know him?\"\n\nGwen thought for a moment. \"The name sounds familiar...\"\n\n\"He's a frequent contributor to many of the equestrian magazines and is considered a rising star in the art world. I've had a particular project in mind for a while\u2014I've known the horse I wanted for this for some time, but could never find the right rider. Until now.\"\n\nGwen's eyes widened in surprise as her confusion became understanding, then denial. \"You don't mean me?\"\n\nSylvia laughed. \"Yes, you. Your form is impeccable, yet not forced\u2014it all comes very naturally to you and that's the look I want. You have a certain aura about you Gwen\u2014how do I put it-confident experience in a wrapper of mature beauty. Of course, Else's glowing evaluation of you-\" She's using the term glowing very liberally, Gwen thought, Else Ritter never \"glowed\"\u2014\"helped plant the seed. I was intrigued by the respect and wanted to see for myself. This afternoon was sort of an audition, one that you passed quite nicely. You're exactly what I want for this.\" \n\n\"But I'm not a model\u2014\"\n\n\"You were a few weeks ago,\" Mrs. Danning laughed. \"As I said, there's a confident beauty to you, whether you're in breeches or bare-ass naked.\" She paused for a moment before continuing. \"The air of, how should I put it, arrogance without conceit you maintained while flashing your naughty bits to complete strangers was impressive. It was almost as if you were daring people to look. That's the attitude I want for this project.\"\n\n\"I don't understand?\"\n\n\"Gwen, I've got in mind something that requires a true equestrienne, a rider so good and so composed that she continues to shine even without, umm, distractions like a starched shirt or pressed morning coat.\"\n\nWell now she's just making no sense whatsoever, the Lady opined. \"I'm sorry, I still don't understand?\"\n\nMrs. Danning smiled. \"To put it bluntly, this photo shoot will require some nudity-tastefully done, of course, artistic, not pornography, it will be on the walls of one of my homes after all\u2014but the rider I've been looking for would project the same air of self-confidence and control whether she's dressed or not. I've seen you both ways, and I think you'll do just fine.\"\n\nGwen blushed and shook her head. \"I'm flattered, I think, thank you, but I couldn't... I'm a married woman with two daughters. What would the people my husband and I do business with think if they saw me like that? What would my family think?\" \n\nMrs. Danning smiled. \"These won't be going in Horse and Rider, Gwen. As I said, my bedroom only, out of the public eye.\"\n\n\"But you could always change your mind about that...\"\n\n\"Only with your permission. My personal collection only unless you say otherwise. The modeling contract you'll be signing is very clear on that.\" \n\nGwen hesitated, somewhat irritated the woman seemed to be assuming her consent was a given. \"Again, I'm flattered, but really, I couldn't\u2014\"\n\n\"I would compensate you very well...certainly much more than you made for that few hours in my home.\"\n\n\"It's not about the money,\" Gwen protested softly. \n\n\"So why did you model for us a few weeks ago? My guests and I saw everything you had to offer then...weren't you afraid someone might find out?\"\n\nThe question made Gwen pause momentarily, her mouth agape while she grasped for a suitable answer. \"A little,\" she admitted, unwilling to reveal the danger had also been a thrill. \"I did it because I was asked to,\" she finally answered. \"It was, I don't know, it felt like a challenge, or a dare? Whatever the reason, it was a foolish thing to do and I don't exactly know why I said yes. I'm not sure what else to say.\"\n\n\"Say yes again,\" Mrs. Danning quickly replied. \"I think you enjoy challenges, Gwen. Things that break up the routine, that push on your comfort zone. Like picking a strange, spirited horse to ride...or strutting around naked in front of a bunch of rich bitches. Just think of this as another challenge. I dare you. Tell you what,\" she continued, spurring her horse into a walk. \"Think it over. I'll give you Rae's number, if you have any questions, call. Otherwise I'll assume it's a yes and have her call you sometime next week to make further arrangements.\"\n\n\"Mrs. Danning, I\u2014\"\n\nThe older woman glanced back over her shoulder at the rider hurrying to catch up. \"Sylvia. While I occasionally will take no for an answer, once I set my mind on something I try very hard not to. Tell me what you'll require and we'll see if we can't come to an agreement.\"\n\nDespite her protestations, Gwen had promised to at least think about it, and pondered the woman's words all the way home. The Lady was adamant the offer be rejected\u2014politely, of course, one could not risk offending a woman such as Sylvia Danning\u2014and it certainly seemed the smart, safe thing to do, but the Slut continued to press for an exploration of the possibilities. She pulled over at one point to call Natalie and seek her advice, hopeful and fairly certain what it would be, the Lady thankful she got voicemail instead. \n\nTim had dinner waiting when she arrived home. \"How'd it go?\" he asked, stirring a pot he had set to warm some time ago. \n\n\"Good, okay,\" she said distractedly, grateful to be relieved of the cooking duties.\n\n\"Yeah?\" he asked, putting plates on the table. \"No surprises?\" \n\n\"One...\"\n\n\"Uh-oh. Nothing bad, I hope.\" They sat, Tim now showing some concern.\n\n\"No, nothing bad really, just...did you know Sylvia Danning likes photography?\" \n\n\"You mean taking pictures?\"\n\n\"No, collecting it. She commissions photographers to add to her collection and wants to have some of one of her horses taken.\"\n\nTim waited patiently for more details, a confused smile on his face. \"And, that concerns you how?\"\n\n\"She wants a rider as well for some she's having taken. Me.\"\n\nHis smile widened. \"Wow! That's an honor, right?\"\n\nGwen shook her head irritably. \"It's not like that. She wants someone who will, well...\" her voiced trail off and she hesitated. \"I was at her house that night...she wants someone who will pose without their clothes on. Mrs. Danning said it would be artistic, not pornography,\" she hurriedly added, \"and that they'd be part of her private collection, for her farm in Kentucky, but still...\" \n\nThe smile on her husband's face did not slacken. \"Didn't think I ever saw anything like that in one of your magazines. Gonna do it?\"\n\n\"No!\" The Lady answered for her. \"What if somebody saw them?\" \n\n\"Sounds like they're going on the wall of her house? Do you know many people who spend time at one of the Danning estates?\"\n\n\"No, at least not that I know of...\"\n\n\"Then the chances of somebody you know seeing them are pretty low. And even if they did, what are they gonna say\u2014hey, one of the richest women in the country has some pictures of you? So it sounds like you told her no?\"\n\nGwen pushed a green bean around her plate, avoiding eye contact. \"I told her I'd think about it. \n\n\"If you didn't say no right off, you must at least have some interest. You should do it.\"\n\n\"You can't be serious!\" Please be serious, The Slut hoped. \"That's easy for you to say. What if someone wanted to take pictures of you naked?\" \n\n\"I'd check to make sure they weren't blind and hadn't been drinking, then I'd be flattered as hell,\" he said with a laugh. \"Besides, we've both let other people see us without our clothes on, and Cricket's seen a lot more than that...\" Tim knew he would not have pressed a matter like this with the old Gwen, not that it ever would have come up\u2014pushing her past her restrictive bounds had always been a recipe for disaster and he had learned to avoid it early on in their relationship. But he sensed something different this time, like she wanted the push. \"You posed for me in front of a stranger...think you'd get a set to keep? I'd love to see what naked horseback riding looks like.\"\n\n\"It will probably look ridiculous, and I'm sure it will feel uncomfortable,\" she mused sourly. \"Sweaty skin on leather? I'll probably end up sticking to the saddle and getting rashes. Maybe they'll just have me on a blanket instead, or bareback...been a while since I rode that way.\"\n\n\"My favorite way to ride,\" Tim replied, a sly smile spreading across his face as he studied his own meal. \n\n\"You're terrible,\" she scolded, but enthusiastically encouraged him to mount her and show off his skills at bedtime that evening. \n\nCricket arrived mid-afternoon the next day. She had come with some trepidation and had even briefly considered avoiding an overnight stay as a means of preventing a recurrence of the events of her previous visit. Normal people did not watch other people have sex, and normal people did not want to be seen! But Tim and Gwen seemed so normal\u2014and nice\u2014in every other way, and the little kink they shared was not enough of a reason to end a friendship she so needed and valued. If her watching gave them a thrill, she reasoned, then it was the least she could do given all they had done for her. As for herself, she knew she wanted to believe she was otherwise normal to the point of bland, nearly invisible to the rest of the world, so perhaps this one descent into perversion could be forgiven and occasionally overlooked. She hoped her deviant private side could successfully coexist with her stable, no-nonsense public persona, although she worried what would happen if the private side ever took control.\n\nThe conflict was surprisingly easy to put aside during her nightly masturbation sessions, however. The memories of what she had seen and done transformed into elaborate fantasies, ones where she brimmed with sexual confidence bordering on arrogance, ones where she boldly pushed the door open and joined the naked bodies on the bed to pleasure and be pleasured in a variety of ways, some most likely questionable or even physically impossible in real-life.\n\nThe lateness of her arrival and the unseasonably cold, misty weather had made even a short ride an unappealing prospect, and the women spent a couple of hours together polishing leather and steel instead. Gwen debated telling her young friend about her ride the day before but decided she was not yet ready to share what she had been offered, or admit that her resolve to decline was steadily weakening. \n\nTheir casual conversation fell silent at the sound of Tim's boots shuffling into the barn. \"You guys hungry?\" he asked, poking his head around the side of the open stall doorway. \n\nThe women looked at each other. \"I could eat,\" Gwen finally volunteered. \"Let me go see what we have in the fridge.\"\n\n\"How about a pizza at Granato's?\" Tim suggested.\n\n\"Do you want to go get it while we set the table?\"\n\n\"Nah, let's go there and eat. Give the regulars something to talk about, how I came in with a beautiful woman on each arm.\"\n\nGwen smiled. \"Do we have time to clean up?\"\n\n\"I'm in no hurry.\" \n\nTim was the first to be ready, the fact that Gwen had left their bedroom door wide open while they changed not lost on him. He also noted Cricket's mostly open door as he made his way back up the hall, only a small portion of her room still obscured from view. Unfortunately, it was the part she had chosen to dress in, and he shook his head and smiled. Maybe next time. \n\nThey were in no hurry at the restaurant either, the women each sipping their way through two glasses of wine while Tim stopped after two beers. Stomachs full and the edges softened by the alcohol, they made their way out of the warm restaurant, into the chill damp evening and back to the house. \n\n\"Might be a good night for a hot tub before bed,\" Gwen suggested as they entered the kitchen, the others agreeing with a mixture of nervousness and excitement. She pulled out a bottle of wine and two glasses and set them on the table before disappearing down the hallway. She returned a short time later, nude and carrying three towels, putting two on the table and slinging one over her shoulder. \n\n\"Be right back,\" Cricket chirped softly and headed to her room. Tim glanced at Gwen, then followed the young woman at a respectful distance. He cursed himself after shedding his clothes, realizing he had forgotten to take a towel from the table to wrap about his midsection. He thought about retrieving another one from the bathroom, but decided their houseguest was soon going to see him in all his glory anyways, Still, he hurried down the hall in the hopes he might get to the kitchen and his covering before she did. \n\nThe young woman was already in the hallway when he exited the bedroom, likely having the same thought of arriving first as she had forgotten to grab something to wrap herself in as well. His cock instinctually twitched at the subconscious initiation being sent by her swaying hips and the tight little bottom. Down boy, he pleaded with his alert member. Save it for the other naked woman.\n\nCricket had grabbed a towel but not yet wrapped it around her body when he turned the corner. The young woman's eyes glanced at his to acknowledge his arrival then looked down to break the stare, reflexively stopping at his midsection. They lingered for only a second before being averted altogether to help wrap the fabric she held around her body. Tim hesitated before reaching for his, her bare thigh partially blocking his path to it. He stepped forward, clearing his throat to announce his honest intention, and Cricket again looked down as he stepped towards her, his swinging penis just inches from brushing against her flank as he reached. She hurriedly stepped aside and finished the job of covering herself. \n\nTim carried their drinks and trailed the women up to the pool. Gwen still carried her towel rather than wearing it and the damp night air made her shiver as she hurried to the tub's edge and the steam rising from it. Cricket was next, quickly dropping her towel and sliding into the water, but not before Tim caught a glimpse of her pert breasts and triangle of thatch between her legs. He poured and set down their wine beside each of them, the light from the bottom of the tub and the agitated water combining to tease him as to what lay beneath its surface. Tim grabbed his beer and walked around the circular edge to an open seat.\n\nHe dropped his towel and Cricket looked up at him as he stood across from her. That's what a man should look like, she thought, rougher, more angular and muscular than her own, and much more hairy ... and that thing between his legs...a pink mushroom-capped length hanging loosely over a sack being weighed down by the balls inside, nestled in a thick brown patch of wiry curls. It certainly didn't look small, despite the evening's chill and what Gwen had said about the cold's effects. She stared at the flaccid length, briefly imagining it in a different, more menacing state. The male form in general, and Tim in particular, was very easy to look at, she acknowledged. Her private time with Gwen was certainly both erotic and enjoyable, but to have something like that pressing down on her...your friend's husband, she scolded herself, and looked away. Too much wine. Be careful.\n\nTim noticed where the young woman's attention was focused as he looked down to find the first step and again felt first pulse of his shaft awakening. He dropped into the steaming water, silently cursing the sudden heat on his tender sac, then sat to hide it all between his thighs until his excitement passed. There were occasional heavy-lidded glances but not much talk, the warmth, alcohol and drone of the pump filter lulling them into a state of relaxed well-being. \n\n\"I'm getting out before I fall asleep and drown,\" Gwen finally announced, standing and turning to step out. Tim did the same, and Cricket watched his glistening body emerge just a couple of feet away, his penis streaming water like some alien sea creature as it broke the surface. She held her breath, looking on as his muscular legs and ass propelled him up and out on to the damp concrete. \n\nTim tried to not be so obvious as he snuck his own peek when the young woman rose. Her ex must be an idiot or gay, he thought, not to have been fucking that long and often. Small and delicately featured, probably hiding a willingness to take\u2014and enjoy-a pounding. Just like Gwen. He turned away and dried himself before his cock could betray him.\n\nThe women wrapped themselves with their towels for warmth, Tim for modesty, and made their way down to the house. Gwen disappeared into the bedroom, returning a moment later in her robe. \"I think I'd like a little more wine and some TV before bed,\" she announced, pouring a glass and moving to the living room. Cricket and Tim joined her after they had dressed, her husband now in shorts and a t-shirt, her young friend in a thigh-length nightgown. They sat and watched in silence, Gwen and Tim in their easy chairs, the young woman on the couch with her legs folded modestly underneath her.\n\n\"Long day,\" Cricket finally announced as she stood after the news, the stretch that accompanied her yawn pulling her cover up to just below her crotch. \"If you'll excuse me, I should probably go to bed.\"\n\n\"Sleep well,\" Gwen told her, rising to give her a peck on the lips. \"You know where everything is-help yourself.\"\n\n\"G'night,\" Tim said as the young woman made her way by his recliner and towards her room. \n\n\"G'night.\" She stopped next to his chair, hesitated, and impulsively bent to kiss the top of his head. \n\nTim smiled and shrugged at his wife as her friend continued on past him. \"You going to bed, too?\" \n\nGwen watched Cricket disappear down the hallway, then turned off the TV and moved to his chair. \"In a little bit,\" she replied, settling herself across his lap, her arms loosely around his neck. \"Am I too heavy?\"\n\n\"Light as a feather.\" Another day, another surprise, he thought with amusement. He couldn't ever remember her sitting on his lap before. The lips that found his soon had his complete attention.\n\nTim's hand had no problem undoing her carelessly tied sash, flipping back the robe's edge and caressing bare skin when he met no resistance to his advance. He teased, fingers running up to the side of her breast then down to the turn of her hip and down her inner thigh, drawing close to her sensitive nipples and mons with each pass but never quite getting there. Gwen shifted to prop one foot against the chair's arm and parted her legs after one such approach that was stopped by her pressed-together thighs. Tim was grateful for her movement; while she was light, the pressure of her body on his cock was making its attempt to uncoil difficult. ",
        "He took Gwen's implied invitation and slid his hand between her thighs on the next pass, index and middle finger parting slightly to caress her lips as they continued down. His index finger shifted on the way back up and dragged through her wet furrow and across a clit aching for his touch. \n\n\"Oh,\" she gasped softly in his ear. \n\nCricket had shed her gown and lay back on the bed in her darkened room, the door left open to better hear the couple heading for their bedroom. The sound of the TV coming from the living room had ceased, they're probably just taking care of a few things before bed, she thought, and opened her legs to allow her fingers to idly play while she waited for them to pass and hopefully, the show to begin. \n\nThe young woman soon realized that the house had gone quiet\u2014no pots and pans being put away, no doors being opened and closed, just silence, and she wondered if they had somehow gotten by her without being heard. Her patience lasted a moment longer before her arousal and curiosity won out. She rolled off the bed and crept to the door after tossing her nightgown back over her head, cautiously poking her head into the hallway. A look left confirmed Tim and Gwen's open door, the room dark. There was still enough light coming down the hallway from the living room to see the bed was empty. She glanced right and waited, listening for their approach. Still there was no sign of them, and Cricket crept towards the light.\n\nShe stopped just short of the open room at the end of the hall. Her curiosity pushed her to bend forward, just far enough to get a quick look around the corner, catching a glimpse of the back and side of Tim's easy chair and the top of his head above the cushion. She saw Gwen too, sitting on him, her face visible above the back of the chair and one leg extended over the side while the other bent at the knee, foot propped against the arm. Her eyes were closed as she kissed his neck and the young woman risked another step forward, hopeful the couple would be too caught up in their makeout session to notice her, ready to retreat when they took it to the comfort of their bed.\n\n\"Oh,\" Gwen gasped softly, and Cricket's arousal flared with the obvious pleasure and passion in that simple little sound. The surge through her body made her slow to react when her friend's eyes, heavy-lidded and full of lust, slowly opened. The young voyeur froze as their eyes locked, common sense and good manners telling her to run for her bedroom, the smile that slowly spread across her friend's face taken as an invitation to stay. Gwen's eyes closed again, the motion of Tim's arm and Gwen's reaction a good clue as to where his hand was. \n\nCricket crept as close as she dared while still leaving time to retreat before Tim could see her should he decide to get up and take what she was certain he was going to get. It was Gwen who finally untangled herself, however, giving her audience another smile before getting to her feet and standing in front of her husband. Cricket began to back away, ready to give them space to get to their room and maybe follow along behind after they had settled themselves, but the older woman had other ideas. Gwen slipped the open robe from her body, now naked to both her husband and her friend, then bent over Tim. Cricket was sure from the tugging motion that his shorts were being removed and the blue fabric carelessly tossed to the side was her confirmation. The chair blocked her view of what the shorts had covered, and she cursed her luck. \n\nGwen sank to her knees, her head and upper body disappearing from view as she bent forward to drag her tongue up his length. Tim groaned and grabbed the chair's arm in response. The young woman behind him considered moving to a better vantage point but held back. The nerve and courage imagined in her fantasies to so boldly satisfy her voyeuristic urges evaporated, not yet brave enough to show him what her own hand was now doing under her gown. \n\nGwen didn't spend long on her knees; just enough to put the finishing touches on her husband's readiness. She rose and straddled Tim's thighs, shuffling forward while pushing on his chest to recline him a little further. Looking down between them, Gwen grabbed his cock, aimed, and sank down. Her eyes, filled with lust and pleasure, again found her friend's and her satisfied smile conveyed the deep satisfaction of being filled so completely. Cricket smiled back in encouragement, and her friend's eyes again closed as her hips began to rock against the body beneath her. Tim's head was pulled to her breast, and the young woman could see the firm mound flatten against his lips as he hungrily sucked and tongued her areola. Rough hands grabbed her ass but he left the pace and tempo of their fucking to the woman impaled on him. Gwen's hips twitched and bucked as she fought to maintain the pressure his pubic bone was putting on her clit. \n\nThe two bodies ground against each other, low masculine grunts following some of Gwen's efforts to bury him further, soft gasps and whines coming from the woman riding him. Gwen's eyes again opened, focused on her watching friend, then closed as a soft whimper escaped her lips. \"Right there, Tim,\" she breathed. \"Right there. I'm...I'm...I'm\u2014\" Cricket watched her body go rigid, a sight she had come to know well, and wondered if an orgasm felt different when being caused by the touch of a man. She imagined her friend's convulsions looked more pronounced, more violent...but it could have been from the cock that was now thrusting up into her.\n\nGwen held her husband's head to her chest as she came down off her high, trapping him against her breast while he debated how long he could go without breathing. Suffocated by my wife tits, he thought wryly. That's something even Charlie would be impressed with if he didn't think it was a bullshit story. She relaxed her grip enough for his nostrils to draw a little air, smiling at Cricket before looking down at the face buried in her chest. \"Are you close?\"\n\n\"Move a muscle and you'll find out,\" came the muffled reply.\n\nShe straightened a bit at the waist, hands on his chest, letting him take control. Despite his warning it took more than one stroke, but it was less than twenty, each one hard enough to elicit a small gasp from his wife. He erupted after a particularly energetic thrust that lifted her pussy completely off of him and allowed his cock to flop free, his first spurt hitting him below his belly button. Gwen reached down to reinsert him, but Tim urgently needed something other than empty air at that moment and grabbed her hips to press her labial lips down against his length, sawing back and forth through the wet folds as he came. He announced himself empty with a final shiver and exhalation. \n\nNeither moved or spoke for a moment. \"Better?\" Gwen finally asked softly.\n\n\"Great,\" He lowered his voice to a murmur. \"Did we have an audience?\" \n\n\"Uh huh.\"\n\n\"She still there?\" \n\n\"Just went back to her room, I think.\" \n\n\"Wanna see if she needs anything?'\n\nGwen got off and stood. \"If you think I should. But I want to make sure you're properly taken care of first. Stay right there-be right back.\" \n\nShe hurried past him out of view down the hall. Tim thought about grabbing some paper towels from the kitchen to clean up the slippery mess he had produced and Gwen had spread across his stomach and cock but paused at the sound of running water coming from the girls' bathroom. She hurried back a short time later, warm wet washcloth in hand to tenderly clean him, delicately grasping his still-tumescent cock between two fingers and moving it to reach every shiny wet splotch. \"Did I get it all?\"\n\n\"Uh, yeah, I think you did. Thanks.\"\n\nGwen kissed him and stood. \"Are you sure you don't mind if I, uhh, check on Cricket?\"\n\n\"Nah, just don't be mad if I'm asleep when you come to bed.\"\n\nNot mad, she thought, maybe surprised...Gwen smiled and again disappeared behind his chair, down the hall. \n\nTim waited a moment before getting up and following her. The gentleman in him had not intended to stop outside Cricket's room out of respect for their privacy, but his little head told him to fuck that when he heard the murmur of voices and the young woman's nervous giggle that came through the partly-open doorway. His cock stirred at the scene he imagined was happening just a few feet away.\n\nThe house was quiet save for what the sound of wet kisses and little purrs of contentment. Even those faded, and his thumping pulse was loud in his ears until a soft \"ooohhh,\" floated from around the other side of the door. Cricket, he instinctively knew, her little-girl voice in a grown woman's body distinctive. His erection surged to fullness in just a few wild beats of his heart and he wondered what exactly Gwen had done to get that reaction from her young friend. Tim grabbed his resurgent cock and began to stroke. \n\n\"Yessss,\" she purred, \"right there\u2014oh, yes\u2014right there, just like that.\" There was no response, and Tim desperately wanted to believe Gwen's mouth was otherwise occupied at the moment. \"You can squeeze them a little harder, if you want. Please.\" The image in the listening man's head was hotter than any porno he had ever seen, and he worked to keep his hand in check and make his own pleasure last at least as long as theirs.\n\n\"Ah-ah-ah, that's so nice...\" Cricket groaned quietly. Her voice was soft but soon turned urgent as she encouraged and directed her friend's efforts, \"I'm coming, Gwen,\" she panted, \"I'm coming! I'm coming I'm coming I'm comingggggggg!\" Tim heard the antique bed frame squeaking, from the young woman's spasmodic twitching as she rocketed through her climax, he guessed. He had heard that bed make that noise before, back when it was still Ali's bedroom, and put two and two together. Tim's thoughts were not on his daughter's masturbatory history however, it was on the women who were in that bed now...he was closes himself and removed his hand from his length as a precaution.\n\n\"Better?\" Gwen's voice, calm and steady. Cricket giggled and laughed in response. Tim crept back to their bed and lay down in the dark room, looking beyond their open door and down the hallway. A shadowy figure appeared a few moments later and it took him a second to confirm that it was Gwen. She came in and lay down next to him, not bothering to shut the door behind her. His lips quickly found hers, the scent of a woman in heat still fresh on her cheeks, unconsciously inflaming a primal need to reassert his claim on his wife.\n\n\"Lay back,\" he grumbled, his callused hand pushing on her shoulder while he rose to a kneeling position. \"Spread your legs,\" he ordered. \"Wider.\" Gwen brought her legs as far apart as she thought possible, wide open and vulnerable before him, the pink of her inner lips visible below a smudge of hair even in the semi-darkness. Tim quickly covered her body with his, his cock finding her opening on the first stab. \"Tight and wet. Just like I like it.\" He nuzzled one cheek and ear, then the other, as his hips worked, finally pushing up to lock his arms and look down at her. \"I like the perfume, too.\"\n\nIt took Gwen a moment to figure out what he was referring to, her hands flying to her cheeks and her eyes widening in understanding and surprise. Tim restrained himself from laughing at the almost-comical look of shock on the woman beneath him. \"It's okay\u2014it's really hot,\" he continued, his thrusts gaining force and thudding home against her. \"It tells me where you've been.\" He withdrew deliberately. \"But I'd give a hell of a lot to see how you put it on.\" His hips came forward, quick and powerful, a grunt escaping from him as his progress up inside her was abruptly halted. \n\nGwen's hands grasped at his flexing ass. \"You would really want to see that?\" Duh, of course he would, the Slut answered. And you want to show him.\n\nAnother stroke, another grunt. \"Uh huh. I've always wondered what it would look like...you two together.\" You don't mind her seeing you and me, right?\" \n\n\"Maybe she doesn't want to be seen...like that...\" The Slut doubted it would be too much of an inconvenience for her.\n\nAnother gasp escaped from Gwen as he rutted her, his urgency growing. \"Maybe I could learn some secret girl tricks to make you happy.\"\n\n\"You're already very good at making me happy. And right now I want to make you happy again,\" she deflected. \"Come in me, honey,\" she urged, her hips rising to meet his, \"fill my up. Every last drop.\" \n\nCricket had scrambled from the bed as soon as Gwen had left her, moving to the open doorway, standing and listening. She could hear the couple at the end of the hall clearly enough; she heard Tim take charge and command her friend to open her legs to him. The tone of his voice made it unlikely this would be a slow and tender coupling, and she briefly feared Gwen's stop at her room had somehow angered him. \n\nThe young woman risked a peek around the corner after the first slap of flesh and accompanying grunt. Two legs formed a vee in the dim light down at the end of the hall, the view of their intersection blocked by a pair of legs and pale ass laying between them. The comment about Gwen's perfume had confused the young woman\u2014she didn't remember her friend wearing any. It struck her like a thunderbolt when she finally linked Tim's comment about its application to where Gwen's face had just been.\n\nTim's voyeuristic request only amplified her shock. A part of her flatly rejected the idea, another part found the idea exciting, and a small part suggested she rush in and give her consent. Her common sense prevailed, and she stood watching Tim's ass flex and thrust as Gwen tried to pull him deeper. His pounding became more frantic, and Cricket knew from his rigid body and extended groan that he was filling her, just as she had asked."
    ],
    "authorname": "BusyBadger",
    "tags": [
        "voyeur",
        "exhibitionism",
        "wife",
        "husband",
        "missionary",
        "cowgirl",
        "photos"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-03-ch-10"
}