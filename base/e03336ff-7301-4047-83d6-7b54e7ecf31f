{
    "title": "Claiming Treasure Ch. 01-05",
    "pages": [
        "CLAIMING TREASURE \n\nBook 3 in the Treasure Series \n\n(Book 1- Treasure, Book 2- Buried Treasure) \n\nHeather's POV \n\nPrivate Jet over Central Washington State \n\nTurbulence woke me from my sleep, and the pain in my hip and ribs made sure I couldn't return to the land of nod. I pressed the button to raise my seat up. Carson's bulky frame was relaxed as he looked out the window. He didn't look like a wolf, he looked normal; well, if a 'normal' person had muscles like a linebacker, and a face like a god. I stared at him while his big hands worked the keyboard of a laptop. I couldn't reconcile the kind man who had carried me out of the room with the oversized, scary-looking wolf who took me away. My head was trying to accept that almost everyone I had met since Orlando was a werewolf. If that wasn't enough, my babies were going to grow up to be like them. He must have sensed me and looked up. \"Hi,\" I said, at a loss for words after it all. \n\nHe looked up and smiled at me. \"I'm sorry you didn't rest better.\" I raised my eyebrow; how did he know that? \"Your breathing would change, and you were groaning in your sleep. My Pack Doctor will meet us at the Yakima Airport. He knows of your injuries and will treat you on the way to my home.\" \n\n\"There's not much you can do for broken ribs,\" I said. \"And I can't take painkillers pregnant.\" \n\n\"He knows of that as well. You will like him. He treated Rori after the bear attack.\" I hadn't heard that story, so he told me of Rori's past, her shift to a wolf, and the problems that came about when her parents found out she wasn't human. \"Rori knows what you are going through, Heather. She sends her love and apologizes for not protecting you better while on her Pack land.\" \n\nIt was all so bizarre. The red-haired dynamo was in charge of over fifty werewolves! Their Pack was in plain sight on a Northern Minnesota lakeshore, masquerading as a timeshare resort. \"Am I going to become like her parents? A trusted person?\" \n\n\"Trusted Agent, and no,\" he said. \"The Council must approve those, and Rori's pack has more Trusted Agents now than the rest of the Packs combined. Many Alphas believe that any human with knowledge of us is a risk, so they don't grant it easily. Even Frank Grimes, who has done so much for us and our kind, has not been granted that status yet.\" \n\n\"Why not?\" \n\n\"Rori and Chase are accused of allowing him to learn our secret, even though it was my mother who shifted when the Sons attacked the Arrowhead Alpha house. They pled guilty in January, but the Alphas could not agree on punishment. All the Alphas of the world are coming to form a new jury, starting the day after tomorrow. That is why there were so many people in the dining hall; everyone was celebrating Greg's mating to Tatiana. The Baronsky Pack Alphas, three members of the Werewolf Council, and a half-dozen Alphas had arrived early. As I said, you sure know how to make an entrance.\" \n\nI snorted, which caused a sharp pain in my ribs. I breathed through it as I looked out at the lights below; we were flying over open country, there weren't many. \"Was this a better entrance than crashing into the Brotherhood clubhouse in Orlando with four bikers on my ass?\" \n\nHe laughed a little. \"I saw the video; it's a tough call. This one was off the scale for awkward reunions, wouldn't you say?\" \n\nI nodded, thinking of how many people saw my dreams squashed like a bug on a windshield. No wonder they didn't say anything while it was happening. My life was a mess, and no one could look away from the train wreck it had become. \"What now,\" I finally asked. \n\n\"There are specific clauses in the law I want to invoke to protect you. Before I can grant it, you must ask for my protection while on my Pack's land. Do you know what asylum is?\" \n\n\"Yes, it's like when you let someone into your country when they are fleeing something in their old country. If sent back home, the person would be in danger.\" \n\nHe closed his laptop and put it in a bag by his feet. \"Exactly. Werewolf law has the same construct, although rarely invoked. A wolf fleeing a bad situation that enters another Pack's territory can request asylum from that Pack's Alpha. If granted, the person gains the protection of the Pack, and the Alpha they left must respect it. If they want the person back, there is a legal process they have to follow with the Council. The Council will hold a hearing, where they must show cause for voiding the asylum claim. The person and the Alpha gets to respond, and all of this can take months. The person remains in the asylum Pack until the Council decides the matter. If the Council decides in the wolf's favor, they shift allegiance to the new Pack and become a full member.\" He paused for a moment, letting me catch up. \"With you, it's a little more complicated. Werewolf law does not apply to you as a human, but it would apply to your babies. I would be granting asylum to your twins, technically, and you would be along for the ride.\" \n\nHearings? Council? \"It seems like a mess. Wouldn't I be better off on my own? I have money and friends. I could go to any Brotherhood chapter and get protection.\" \n\n\"You could, but that would leave me in a bad position,\" he said. \"I removed you from a situation where you should have been apprehended or killed, and I ignored the explicit direction of the Council members there to return you. If you leave, I have no defense for my actions. I will be tried and found guilty.\" My stomach flipped; he couldn't suffer because of me! \"The only legal way I can protect you now is through the asylum process. My brother Sawyer confirmed that to me while we were running away. I could be stripped of my Pack, imprisoned, even killed for what I did.\" \n\nI looked in his eyes and saw the fear and pain in them. It hit me then just how much he had risked for me. \"Why would you do this?\" \n\nHe reached over and took my hand. \"I reacted without thinking to get you out of there because I didn't want you to end up dead,\" he said. \"Then I realized that I HAD to save you. My wolf agreed with me; we would not allow anyone to hurt you again.\" \n\n\"Your wolf is separate from you?\" \n\n\"Kind of. Our wolves are part of us, but different? It's hard to explain. We have been together since I was seventeen. He is more instinctual than me; he wants to hunt and protect.\" \n\n\"Your wolf doesn't want his mate?\" Everything I had heard thus far said the mating drive was the important thing, more than love. Greg had proven that to me. \n\n\"He did. Our mate rejected us, and she died not long after. There is no happily ever after for me.\" He looked out the window, unable to show me his face as he fought back the emotions. My heart went out to him, and we didn't talk as we landed at the airfield in Yakima. \n\nHe carried me out of the plane, one of his men carried his luggage to the big cargo van waiting for us. A man who looked to be in his sixties waited at the bottom of the stairs next to a gurney. \"Really?\" \n\n\"You're injured, and it makes it easier for him to treat you,\" he said. \"Doc Myers, may I introduce Heather Rhodes,\" he said as he laid me on the gurney. \n\n\"It's a pleasure to meet you, Ma'am. How are you feeling?\" \n\n\"Sore, and it hurts to breathe deep,\" I said. The two strapped me in, then rolled me to the back of the cargo van. As the gurney slid inside, I saw what the plain white exterior hid. The cargo van was a rolling ambulance! Doc climbed in next to me as Carson went to the passenger seat. \n\nHe slid a curtain across, hiding me from the men in the front. \"I'll need to examine you, and for that, I'll need to remove some of your clothing. You'll have privacy.\" \n\n\"Thank you.\" By the time we turned out of the airport, I had an IV in place, and the painkiller was starting to hit. \"This is safe for the baby?\" \n\n\"Yes, and it will make this next part more comfortable for you.\" He helped me sit up and remove my shirts before he inspected my chest. \"You were jumped on?\" \n\n\"Yes, and landed on a table.\" I winced in pain as his fingers sought the breaks, then he used a portable ultrasound to check the areas. \n\n\"I'll get X-rays later, but this isn't as bad as I thought. Your lungs are full, but two ribs have been fractured and remain in place. I'm going to apply ice to help with the swelling; you'll need to ice the area for fifteen minutes an hour while awake. I'm prescribing you anti-inflammatory drugs for the next two weeks.\" He helped me put my T-shirt back on, then had me lay back so he could check my hip. Taking my jeans down and rolling to my side exposed the bruised area, but he didn't feel anything else. \"Ice and rest will help the bruising. I'll show you some exercises tomorrow for both your injuries.\" \n\n\"How long will I be out of commission, Doc?\" \n\n\"It will take three to four weeks for your ribs to heal enough you can take deep breaths without pain. The hip, maybe two weeks. You can do as much as you are comfortable doing. Now, let's check the twins, shall we?\" He rolled me onto my back, leaving my jeans down, and spread the gel on my belly. \"You are fifteen weeks along?\" \n\n\"Yes,\" I said. I watched the screen as the two amniotic sacs came into view, and heard the rapid heartbeats. Doc moved it around as I watched my babies move, tears streaming down my face. \n\n\"They're doing fine. We'll continue your prenatal care after I check on you tomorrow.\" He wiped the gel off, then got out two bags of ice from a cooler near the front. \"Carson told me of your injuries, so I came prepared.\" \n\nI sucked in my breath as the cold packs hit my skin, then he covered me with a blanket. \"How long until we arrive?\" \n\n\"It's about another hour,\" he said. \"Our Pack lands are well up in the mountain, with only one winding road heading to it. It's quite isolated, our valley.\" I saw his eyes lose focus, then he smiled. \"I will see you in the morning, Miss Rhodes. Someone else wishes to sit with you.\" \n\nHe moved the curtain aside, and Carson's large form somehow squeezed through the tight space before Doc took the passenger seat. \"The babies are fine,\" I said with a nervous smile. \n\n\"You did well to protect them. Tatiana admitted she was trying to harm them.\" \n\n\"She's still alive?\" I'd hit her with one forty-caliber round at close range. \n\n\"Yes, thanks to Chase. He was able to stop the bleeding and repair the damage to her shoulder.\" \n\n\"You've talked to him?\" \n\n\"I got an email from Sawyer filling me in on the shitshow we left behind. Trust me, we're both better off here, even though I have to go back soon.\" \n\n\"Go back?\" All I could imagine was him getting thrown in jail for me. \"Why?\" \n\n\"I'm still an Alpha, and Chase and Rori are still on trial. Now, we just crossed onto Cascade Pack lands, so it is time. I won't force you to stay here, Heather. If you want to leave, I'll drive you to the airport and buy you a ticket.\" \n\n\"But, you will get in trouble,\" I said. \n\nHe nodded. \"And I won't be able to protect you. Nothing short of war will get to you on my land. I swore to you I would keep you safe, but only if that is what you want.\" \n\nThis man was behaving like I had dreamed Greg would be, and I could sense the truth in his words. \"I want to be here,\" I said. \n\n\"Then say the words. 'I, Heather Rhodes, request asylum in the Cascade Pack for my unborn children.'\" I repeated the words before he smiled at me. \"I, Carson Nygaard, Alpha of the Cascade Pack, grant your asylum and the protection of my Pack.\" He leaned over and kissed me gently on the forehead. \"It's time to remove the ice packs,\" he said. \"May I?\" \n\n\"Yes,\" I said. Carson moved the blanket back, his eyes flashing as he pulled the ice away and saw the bruised skin. He put the ice back in the cooler, then pulled my shirt down and jeans up before covering me with the blanket again. I could see how angry he was, not at me, but at himself for letting me get hurt. It wasn't his fault, I thought to myself. Carson had saved me, he'd been nothing but a friend. \"Carson?\" \n\n\"Yes?\" \n\n\"Can I ride on your wolf again?\" \n\nHe broke out into a wide grin. \"We would both love that,\" he said. \"We can ride snowmobiles too. There are some beautiful trails on my land.\" \n\nI looked forward, catching a glimpse of the snow-covered trees along the road. \"I wish I could see where we were going.\" \n\n\"She can sit up if you help her,\" Doc said from the front. \n\nHe started to unbuckle the straps, then helped me sit up and move to the front of the gurney next to the chair he was sitting in. His land WAS beautiful; the moon made the snow-covered mountains glow. He told me about his Pack as we drove further on the mountain road. \"Oh my God, is that all yours,\" I asked as we turned and a village came into view. Dominated in the center by a large log structure on the top of a hill, surrounded by dozens of smaller log buildings and homes, it looked like a Christmas card. \n\n\"The big building is the Pack House. It's a lot like Rori's, in that it has dining and meeting facilities, offices, and recreational facilities. The wing you see on the right side is the residence area for Pack leadership.\" \n\nThe place was HUGE, at least three stories plus a basement, with steep rooflines. The foundation looked like river stones, extending up to the first floor, then logs for the next two. It was T-shaped, and I could see the third wing extending out the back away from the parking lot in the center. \"Where is your room?\" \n\n\"The Alpha quarters and guest rooms are on the top floor on the right side,\" he said. \n\n\"They must be HUGE!\" \n\n\"They are too big for me, to be honest. I've been Alpha for over a year, and I still sleep in the room I grew up in. I keep thinking that Mom and Frank will decide to come back to her Pack and take over again.\" \n\n\"They'd take it from you?\" \n\n\"If I asked, I guess. I'm not doing well, Heather. I never thought I would be Alpha, that was going to be Sawyer's job. A Pack deserves a Luna, and I couldn't give that to them.\" \n\n\"Couldn't you mate another?\" \n\n\"And take away another man's fated mate? I couldn't do that either. Only a few people know what happened, and they are keeping my private life private. It doesn't stop Mom from trying to get me to meet every unmated she-wolf she can put in my path.\" \n\n\"Poor guy, all those hot women constantly parading in front of your eyes.\" I felt jealous, somehow. \n\n\"Tedium, knowing nothing will result from it,\" he said. We pulled up in front of the house, and he helped me out as the back doors opened. The air was clean and crisp. Carson offered me his arm, and I slowly made my way up the stairs and into the Pack House. \n\nThe entry area was three stories high, with staircases on each side. I froze as I saw over fifty people lining the room, all bowing their heads as we came in. \"Welcome home, Alpha Carson,\" a man as they walked forward to greet us. He was almost as big as Carson, and his wife was tall and athletic-looking. \n\n\"Thank you, Beta Carl Striker, Beta Angelina, may I introduce Heather Rhodes. Carl and Angelina are my Lead Betas and are in charge in my absence. Cascade Pack, I have granted Heather Rhodes asylum, and promised her the protection of our Pack,\" he said loud enough for everyone to hear. \n\n\"We are at your service, Miss Rhodes,\" he said as he bowed his head to me. \n\n\"Please, call me Heather,\" I said as I held out my hand. He took it, bringing it up to his nose, then his wife did the same. \"I look forward to meeting you all, but right now, I need to get off my feet.\" My hip was stiff, and standing was uncomfortable. \n\n\"Of course,\" Angelina said. \"Come on then. I will get you settled while the Alpha deals with what he must.\" Carson nodded, and she led me to the side where I found an elevator. \"I thought stairs might be a bit much with your injuries.\" \n\n\"You know?\" \n\n\"We all know. Nice moves, by the way. There aren't many humans who could put a Petrovsky down, and you did it twice.\" The door opened as I looked at her in shock. \"One of the Arrowhead pack members took cellphone video. Alpha Rori encrypted it and forwarded it to Carl. You've had some training?\" \n\nI nodded. \"I was a state Judo champion, but the last three months, I've been training with Warriors Brent and Laura on Krav Maga and Mixed Martial Arts. I've also been training with knives and pistols, but you saw that.\" \n\n\"I did. Your draw time to a shot on center mass was one point four seconds, not bad at all.\" The door opened into a hallway, the railing overlooking the open vestibule. We walked to an open door, revealing a nicely-decorated guest bedroom. \"Alpha Carson's room is across the hall, and our rooms are the next one down on the left,\" she said as we walked in. \"I'll have some food brought up. Is there anything else you need?\" \n\n\"Help me get these clothes off?\" She helped me to strip down and get in the shower. I let the warm water cascade over my face as she went to find clothes, promising they would have my size in their storeroom. I let my emotions out as the water washed my tears away. \n\nGreg was over, and I needed to move on. I had to live if only to provide a home for my babies. \n\nI heard a knock, and Angelina came back in with a stack of clothes. \"How are you doing?\" \n\n\"I can't raise my arms to do my hair,\" I said. \n\n\"Hang on.\" Thirty seconds later, she was in the shower with me and working the shampoo into my hair. \"It's going to be all right. Our Alpha has claimed you, and that makes you one of us now.\" \n\n\"It's going to take some getting used to,\" I said. \n\n\"All you need to do is rest up and take things one day at a time. We're all excited about your pregnancy; we haven't had pups in the Pack for five years now. Twins will be such a blessing.\" \n\n\"Do you have children?\" \n\n\"No, not yet. We've been mated for forty-two years now, and I've never taken.\" \n\n\"Wait, how old are you?\" She looked to be in her late twenties. \n\n\"I'm seventy, and Carl is eighty-two,\" she said. \n\n\"Wait a minute! How old is Carson then?\" \n\n\"He didn't tell you?\" She giggled a little before her eyes glazed over, which Carson explained happened when they were mind linking. \"He said it was all right to tell you as long as I told you how old Sawyer is too. He's eighty-seven, and Sawyer is a hundred and thirty-two.\" \n\nMy mind couldn't handle that, and she grabbed me to keep me from losing my balance. \"It's all right. Werewolves can live to be over four centuries old. Carl and I are still young mates. Waiting fifty or more years between children is common for us, hence the lack of pups now.\" \n\nThe shower over, she helped dry me off and put on a soft T-shirt, underwear, and flannel sleep pants before leaving. I finished in the bathroom as Carson knocked on the door. \"Hi,\" I said as I let him in. \n\n\"I have to return to Arrowhead now. I'll be back in a few days.\" \n\nI nodded as a tear formed in my eye. Moving forward, I lightly hugged him around the waist. His arms came down on my back, gently returning the embrace. \"Stay safe,\" I said. \n\n\"You too, Heather.\" His hands moved up to cup my face, and I looked in his eyes as he moved his lips down until they gently brushed mine. \"I'll call you tomorrow.\" \n\nHe left the room, leaving me standing there watching the door. \n\nCh. 2 \n\nChase Nygaard's POV \n\nArrowhead Pack House \n\nThings had been so quiet, I knew it wouldn't last. \n\nI just thought the fireworks wouldn't start until the jury convened. \n\n\"GREG,\" I heard from the back of the room. Looking up from the table I shared with our guests, I was shocked to see Heather Rhodes running towards us. \n\n\"I thought she was in hiding,\" I sent to everyone in our Pack. \n\n\"Oh, shit,\" Ron sent back. \"She doesn't know he dumped her three months ago. I didn't have an address to send his rejection letter to.\" \n\nThe room was silent as she jumped into his arms and wrapped her legs around him. Chairman Coffey was in the position of honor in the center of our table, and he looked past me to Councilman Yakov Baronsky on the other side of us. Alpha Ivan Baronsky and his mate Svetlana were farther to our left, while Vasili, Ekatarina, and Timur Petrovsky were to the right. We were all looking on in shock as Greg pried her from him. ",
        "\"Greg?\" \n\n\"I told you we were over, Heather. You need to move on.\" \n\nIt was like watching a car accident, and no one could look away. It was why we sent Greg away after we found out he was in a relationship with a human under our protection; sooner or later, he'd find his mate, and she would be hurt. \"Get more security in here now,\" I sent to my Betas. \n\n\"What?\" Heather was in shock, tears starting to stream down her face. \n\n\"I broke up with you in that letter three months ago. You need to accept I've moved on and found someone else.\" \n\nShe slapped him as a few of my men moved into position. Councilman Baronsky started to stand, and I put my hand on his arm and shook my head. We had to let this play out. \n\n\"YOU FUCKING BASTARD, YOU KNOCK ME UP AND SEND ME A FUCKING 'DEAR JANE' LETTER?\" \n\nThe look of shock and rage on the Baronsky Petrovsky family was scary. This revelation changed everything. \"You're pregnant?\" \n\n\"Twins,\" Heather said. \n\nThank Luna that Tatiana had gone to the Ladies Room and missed this. \"Ron, get her out of here and off Pack lands before she gets herself killed,\" I said. \n\nToo late. \"YOU BITCH,\" Tatiana yelled as she ran towards them. \"HE'S MINE.\" I watched as she swung a punch towards her stomach. Heather turned, and I heard the crack of her hand as she broke it on her hip bone. Heather spun and kicked a shocked Tatiana in the face, knocking her down. \"He was mine first,\" she said as she stood tall. \"But, you can have his lying ass.\" \n\nTatiana shifted and went after Heather before my men could get to her. I glimpsed the pistol before the shot rang out, hitting Tatiana, then Greg grabbed her and slammed her onto a table. There was another shot, and people were taking cover. \"Cover the exits and get Heather out of here,\" Rori sent as my Pack members, and I moved to intercept Tatiana's family. \n\n\"I'll take her,\" Carson said. He picked her up and ran out of the room, while my Pack blocked any pursuit. Tables overturned, punches got thrown, and curses hurled about as Packs moved to protect their Alphas. I moved my pregnant mate behind me, where she joined a pregnant Margaret. Our family and guards quickly isolated them from the violence. \n\nSome of the warriors shifted to their wolves, forming a perimeter around their charges. \"SHE MUST DIE,\" Councilman Baronsky yelled. \n\n\"LEAVE HER ALONE,\" Rori yelled back. \n\nHeather was on her way to the tunnels, and a wolf lay bleeding on the floor. \"MOVE ASIDE, SHE NEEDS MEDICAL ATTENTION,\" I yelled out as I pushed my way to where Tatiana was. \n\nIt was like a switch turned on. The people in the room realized there were more important things than posturing. \"Julie, get the stretcher out of the pool area,\" I sent to one of the Omegas near the door. Grabbing one of the cloth napkins, I held it over the hole in the she-wolfs chest. \n\nChairman Coffey was holding back the Baronsky family, promising them the human would be held accountable. \"Alpha Rori, that human is to be apprehended and returned here immediately,\" he said. \n\n\"That human is under my protection, Mr. Chairman.\" \n\n\"Another one? By Luna, how long will we tolerate this flouting of our laws,\" Alpha Baronsky yelled. \"I'll send my men after her.\" \n\n\"You are guests on MY land, Alpha Ivan. I suggest you remember that. I will not allow you free reign of my territory.\" \n\nChairman Coffey moved behind me as Greg and Timur helped to lift the unconscious Tatiana onto the stretcher. \"You are still under arrest, Alpha Rori and the Council's authority exceeds yours. I have sent my Enforcers to retrieve the human female. You will not interfere, or you will answer for it.\" \n\nFour people picked up the stretcher as I kept up the pressure on the gunshot wound. I wished I had Possum here, but I did not. I sent Omegas ahead to open up the Clinic and get blood warming. \"What's her blood type,\" I asked her father. \n\n\"O negative,\" he said. \"We will donate whatever is needed.\" \n\n\"Later,\" I said. We moved Tatiana onto the steel table In the operating room. \"Vasili, take over for me and don't remove the napkin until I tell you. Ekatarina, in that cabinet, there is a blood transfusion kit on the second shelf. Bring it, and an IV stand over here.\" \n\nJulie came in with four bags of blood, and I put them on the warmer before I changed into surgical scrubs and a gown. Werewolves didn't have as many problems with infections as humans, but we could still get them. I hung an IV bag while the blood warmed, then checked her respirations. \"The bullet is somewhere in her chest, and her left lung collapsed. I need an assistant; do you know anyone with medical training?\" \n\nEkatarina nodded. \"I was a medic in the Great Patriotic War,\" she said. \n\n\"Scrub in.\" I injected a sedative to ensure she would remain out for this, then brought over the portable X-ray. The bullet had lodged in her ribs. I would remove it, but first I had to stop the bleeding from the artery near her shoulder. Ekatarina prepped a surgical tray and adjusted the light as I finished scrubbing in. She put my gloves on, and I was ready. \"Vasili, when I tell you, you are going to remove the cloth and go wash up. You may assist if you wish, or go to the waiting room.\" \n\n\"I will help,\" he said. \n\n\"Good. Ekatarina, I'll make an incision to expose the bleeder, be ready with clamps.\" \n\n\"Ready, Doctor.\" There was some spray as the cloth came off. I made a quick incision and used retractors to open the wound. The artery was torn open on one side; I quickly clamped both ends. \"Suction.\" With the arterial bleed stopped, I could see what else was wrong. \n\n\"Ekatarina, hang two units of blood while I repair this,\" I said. I cut the ends, bringing the clean edges together while I sewed it back whole. It took ten minutes to complete the stitching and restore blood flow. Satisfied, I cleaned the bone fragments out before I sewed the lung up where the bullet had pierced it. \n\nDuring that time, Ekatarina hung the blood, and Vasili had shaved and prepared Tatiana's chest for the next part of the surgery. She had also established a breathing tube with oxygen, important since Tatiana was down to one working lung. I moved to her lower chest, over the bullet, and made another cut. Ekatarina moved the ribspreader into place and cranked it open. A minute later, the deformed round clanged into the tray. She was lucky it didn't fragment. \n\nI repaired the lung and reinflated it, leaving a drain tube in place. I looked at the clock after I closed up; we had been operating on Tatiana for just over an hour. I tore my gown and gloves off, balling them up and putting them in the garbage. \"Love, we just finished. Tatiana will recover, but I will need to monitor her tonight.\" \n\n\"Thank Luna. Carson got away with Heather, and there's nothing the Council can do about it. I can't order another Alpha, and he can't get ahold of him or his Beta.\" \n\n\"I hope he knows what he is doing.\" \n\nShe sent her love and amusement over the bond. \"I think his wolf knows what he's doing, even if he doesn't yet.\" \n\nI closed the connection as Tatiana's parents finished cleaning up. \"She will be able to leave in two days, and fully recovered in two weeks,\" I said. \n\n\"Thanks to you,\" Ekatarina said. \"I saw the wound. Without you, she would have bled to death.\" She gave me a brief hug, then Vasili pulled me into a bear hug. \n\n\"It is what I do; I was a Doctor before I was an Alpha,\" I said. \"Frankly, being a doctor is less of a hassle.\" \n\nI left Ekatarina behind to monitor her daughter while Vasili and I went out to the waiting room. Greg came to his feet as I walked in; he looked like he'd been through hell. He was sitting by himself, the distance from Timur Pretrovsky and the Beloretsk Alphas notable. \"She will recover,\" I said, and they relaxed. \n\n\"Can I see her,\" Greg asked. \n\n\"When I move her to a room,\" I said. I smiled as two Omegas brought a cart loaded with food in; with all the drama, I hadn't eaten. The kitchen had turned out a prime rib dinner with all the fixings, and we all tucked in. Rori told me it took half an hour to pick up the dining room and serve dinner to everyone else. \n\nI finished quickly and brought Greg back to the room. We moved Tatiana to a bed, and I set up the equipment and video so I could monitor her from my office. Greg got on the bed behind her and shifted, his wolf curling around her. I didn't object; a mate kept a patient calm and would speed up her healing. When I went to my office, Vasili came with me. I offered him a chair, then opened a cabinet below the bookshelf and removed two glasses and a bottle of vodka. I poured the two, leaving the bottle out, and handed him one. \"To Greg and Tatiana, may this make them better in the end,\" I toasted. \n\nWe tossed the vodka down, and I poured him another. \"I have to watch them,\" I said in apology. \n\n\"It is I who should apologize. My Alpha has informed me of the history between Heather and Greg. It appears she never got his letter rejecting her after he found his mate, and your Beta never forwarded her letters to him.\" \n\n\"We will deal with that, but I do not believe it was intentional. Heather was in hiding with the other humans in our Pack and our children, at a location we do not know. We had no way to get in touch with her, and no place to forward Greg's letter.\" I sat back and looked out the window. \"The real question is what we do now.\" \n\n\"They are mates; it is too late to change that,\" he said. \n\n\"And there lies the problem. Greg is a new member of our Pack, and his lack of maturity and discipline was part of whey we sent him to Beta Camp. His relationship with the human needed to stop, and we thought time apart would do that. We did not know he would find his mate in your daughter.\" \n\n\"It creates a difficult situation for her if the human lives,\" he said. \"Of course, that is beyond our control now that the Council is involved.\" \n\nI didn't need to say that Greg and Tatiana staying in our Pack would be awkward. Heather was our charge, and she had friends in this Pack who wouldn't respond well to what Tatiana did. \"What were Tatiana's plans before she found her mate?\" \n\n\"She is in college, in her second year, and wants to be a doctor,\" he said. \"Part of why we are here was to speak to you about continuing her medical training.\" \n\n\"A full-time doctor would be helpful as our Pack grows,\" I said. \"Perhaps a compromise is in order?\" \n\n\"What are you thinking?\" \n\n\"We send the pair back to Russia until she completes her University. That will allow both to mature, and for her to learn English, and Greg to learn Russian. Once she graduates, she takes exams for medical school here. The University of Minnesota-Duluth has a medical school that is within driving distance of us.\" He nodded, thinking it over. \"She is young and possessive of her mate. One hotheaded mistake should not derail her dreams.\" \n\n\"True. Greg is not so young, and should have known better.\" \n\n\"Yes, but you will have several years to help him mature in your Pack.\" \n\n\"I would have to speak to my mate and my Alphas. You would not insist on a punishment?\" \n\n\"Not for the attack; the humiliation of the attack and the injuries she suffered are enough of a punishment. She would need to apologize publicly for her behavior, and to Heather if she returns. I think it would be best if we settled the offense between our Packs privately, and informed the Council of the resolution.\" \n\n\"She shifted in front of a human,\" he said. \n\n\"Yes. That is beyond our control now; I'm sure charges are coming.\" \n\nHe nodded. \"Your trial has caused us to rethink many laws we took for granted. I will speak to my Alpha; changes in the law will help my daughter as well as your Pack. We have to do something; our Packs are slowly dying out. Twins would be a help, even if Tatiana refuses to raise them as her own.\" \n\n\"She has to be alive to bear them before they can be that blessing, Vasili. We need your support with the Council against those who want her killed immediately.\" He nodded. \"And you must convince your daughter. If she does not show remorse, she will never be allowed back in Arrowhead.\" \n\n\"Trust me, Alpha Chase, we will be speaking with my daughter. If you will excuse me, I need to tend to my mate.\" He stood and extended my hand. \"Thank you again, Alpha.\" \n\nCh. 3 \n\nColletta Nygaard's POV \n\nYakima Airport \n\nI sat with my mate Frank at the airfield coffee shop, drinking a hot chocolate as we waited for Carson to return. When things went to shit at Arrowhead, we were in Duluth shopping. Carson asked us to take his jet and return to Yakima to stay with Heather. We had landed an hour ago, and the aircraft was refueled and ready for the return trip. \n\n\"His wolf has claimed Heather,\" Frank asked me for the fifth time since we left. \n\n\"Rori believes so, and Carson's behavior would bear that out. He defied the Council to run her out of there. Now, Carson continues to defy them by keeping her. He wouldn't do it out of obligation,\" I replied. \"It's about time.\" \n\n\"I don't understand.\" \n\n\"It's not something you would; you are a new wolf, mated from your first shift. You haven't had to deal with the rejected or the widowed yet.\" \n\n\"You said Carson was unmated,\" he replied as he sipped his coffee. \n\n\"He is, but not by choice.\" The heartache of that time came back full force; Carson never spoke a word of it, but a Mother could see the pain and loss in his eyes. \"His wolf could not hide the pain from me, and only one thing could have crushed him like that. Rejection by his true mate.\" \n\n\"Why? Why would someone reject their mate?\" \n\n\"I pieced the story together after Carson returned home two days after he left for Katahdin Pack. They were hosting Beta Camp, which is a Council-run boot camp for future Pack leaders. Beta Camp happens every third year and serves to train and prepare them for the job. The social purpose is just as important. It allows them to make friends with leaders in other Packs as it brings together dominant wolves from around the world. It often results in one or more matings.\" He nodded as I took a drink, my cocoa cooled enough to drink now. \"I had received a call from Paxton Blackledge, the Katahdin Alpha, informing me he had kicked Carson out of camp for fighting. I was a little shocked; fights happen among dominant wolves as they jockey for position at camp. The only reason to not allow the boys to fight it out is if it would be to the death. As often is the case, it was over a mate, and it was the Alpha's son who Carson was going after.\" \n\n\"His true mate was with the boy when Carson found her,\" Frank guessed. \n\n\"Yes. The two had mated six months earlier; I remembered getting the announcement.\" The emotions were coming forward again, and Frank reached out to hold my hand as I gathered myself. \"Anastasia and Steven had two years together. She was shot and killed by a poacher, and he killed himself to be with her. Paxton's mate has not become pregnant since, and his Pack has no heir.\" \n\n\"What happened when Carson came home?\" \n\n\"He wouldn't talk about it, and he withdrew from everyone. He would take long runs around our territory, sometimes remaining for weeks in his wolf form. He wouldn't respond to our mental calls, and if we got close, he would run. It was six months before he came back to us, but he was no longer the fun-loving son I had raised. He was cold and distant, hiding behind his work and his training. He didn't want our sympathy, and we weren't going to force him into confessing his pain. I just loved him and prayed to Luna that he would find a female who could spark his wolf's interest again.\" \n\n\"And now he's found a female.\" \n\n\"Yes, and she's a human, pregnant with another wolf's children. That boy doesn't do anything the easy way,\" I said with a shake of my head. \n\n\"Chase didn't take the easy way either, from what I've learned.\" \n\n\"No, but together they have grown into an effective Alpha pair. He was never the dominant one, Coral was. It was wise for Luna to pair Chase with a strong Alpha Female and Coral with a less dominant male.\" \n\n\"And Ashley? Why did Sawyer have to wait so long?\" \n\nI smiled at the thought of the pair; my oldest was finally happy and expecting a child. \"I don't know. I've prayed for her since my boy was born; I think Ashley is the reincarnation of the fated mate he never found. I don't have all the answers where the Goddess is involved. I can't explain how I found you, but I'm not arguing.\" \n\n\"Me?\" \n\n\"Yes. Fate placing you in my life on that plane, then all that happened since then. You shouldn't have a wolf, much less a wolf to match mine in dominance. When you show up in Council, others will challenge you. That is why we've worked you so hard to learn how to use your wolf.\" \n\n\"It hasn't been much of retirement, not when I'm getting my ass kicked daily.\" \n\nI snorted at that; I had been riding him hard in more ways than one. His training as a human helped in that form, but we had to teach him how to fight in his wolf. We'd spent a lot of time at Arrowhead in the woods, as he learned from me, my sons, and Beta Ron. He picked it up quickly and could hold his own against Alphas and experienced Betas now, or multiple wolves of lower rank. His wolf was my match in every way, and anyone who challenged him would regret it. \"But you like when I kiss your owies better,\" I teased. \n\n\"Minx,\" he teased back. I heard a vehicle approaching, and headlights shone into the coffee shop as it parked. \"I'll get our bags,\" he said as I went to the door. \n\n\"Carson,\" I said as I opened my arms for my middle boy. He embraced me tightly, then stepped back as I kept my hands on his arms. \n\n\"Thanks for doing this, Mom.\" \n\n\"It's no problem at all. Rori doesn't want Frank anywhere near the Alphas, and I have to agree.\" He looked worried. \"How is Heather handling what happened?\" \n\n\"Better than I expected, but who knows what she will think in the morning,\" he said. \"I told her what I could in the time I had. She's resting now. Doc gave her some painkillers to help her sleep.\" \n\n\"Is she staying in your room?\" \n\nHis jaw dropped. \"NO, Mom! She's... it's not like that. Her whole world just crashed around her, and she is a friend I'm helping out.\" \n\nI just nodded. \"So, Heather is staying in the dorms with the other unmated women.\" \n\nHe looked surprised, then realized what I was doing. \"Fine. I put her in the guest room across from mine. You can have your old room back; I've left it alone.\" \n\nHe'd refused to take over the Alpha's Quarters since he took the spot. \"No, I'll use Coral's old room. You are the Alpha, and the Alpha's Room is for you and your Luna.\" \n\nI embraced him again as Frank came back and shook his hand. \"Your plane is ready to go,\" Frank told him. \"You're doing a good thing by granting her asylum. Don't let anyone take her from you.\" \n\n\"I won't,\" he said before he walked out to where the jet was waiting for him. \n\nFrank opened the door of the SUV for me, and we waited until the jet was out of sight before we left. We drove for about an hour until we passed through the Pack border, and the driver pulled to the side. \"What's going on,\" Frank asked me as I opened the door. \n\n\"Strip and shift,\" I told him as he got out onto the snow-covered shoulder of the road. \n\nI'd been training him long enough that he didn't argue. He piled his clothes in the back seat, then shifted into his wolf. \"This is a test for you and our patrols. There are twenty wolves out there waiting for you, and a case of steaks goes to the wolf or wolves who take you down.\" \n\n\"And if I make it through to the Pack House?\" \n\n\"Then I'll be waiting for you outside. If you want me, you'll have to chase me down and take me.\" ",
        "His wolf smiled and wagged his tail at me. \"The whole Pack will hear you howl as I take my reward,\" he said. \n\n\"Talk is cheap. The Pack House is fourteen miles in that direction, over that notch in the ridge. Fights are to yield.\" He jumped up and put his paws on my shoulders, licking my face before taking off into the woods. He let out a long howl, which was answered by at least a dozen others. I got back in the SUV, and we arrived at the house a half-hour later. Two of our Omegas took our bags to our room, and I piled my clothes near the door before I went outside to wait. \n\nI missed the Pack link the most. We were technically part of the Arrowhead Pack, as Frank had submitted to Chase when he first changed. I was known and loved here in the Cascade Pack, where I had been Luna for over a century, but it wasn't mine anymore. I sat at the top of the stairs, listening to the howls and the yips of pain as Frank made his way towards us. \n\n\"He's doing well,\" Beta Angelina said as she walked out and sat next to me, wrapping a blanket around us. \"Most of the patrols thought he'd come straight through the notch, but he crossed a mile to the east. He's fast; only three have tangled with him.\" I looked at her, tilting my head. \"They're finding out that you don't take on an Alpha alone.\" \n\nShe sipped at her insulated mug of coffee and told me the updates on his progress she got on the Pack link. It wasn't long before I could hear them running hard after my mate. \n\nShe stood and removed the blanket, moving out of the way. I turned to look as they broke through the trees into the clearing around the homes. \"Oh, you're going to get some loving soon, Luna Colletta,\" she said with a grin. \n\nI stood at the top of the stairs as Frank shot out of the trees like a cannon, a dozen wolves trailing behind him. He leaped for the stairs, skidding to a halt just before he slammed into the stones to the side of the door. The warriors chasing him stopped down below, panting hard and hanging their heads. \"Two dozen warriors out there, and he makes it through to the Pack House without a scratch,\" Angelina growled at them as they sat down. \"You knew what the consequence of failure would be. Get some rest, because the punishment run will begin at five AM.\" The wolves slunk off, some heading to the smaller homes, others passing Frank and Colletta and bowing their heads respectfully as they went past. \n\n\"I believe you know the consequence of my triumph,\" Frank told me. \n\n\"And I told you that you would have to catch and submit me if you wanted your prize,\" I said back. \n\n\"I'll give you a thirty-second head start.\" I took off for the trees, hearing his howl as time expired. I was on my old land, I know every rock and tree, but Frank is a beast in wolf form. His long stride and endurance wore me down. Ten minutes later, I could feel his breath on me. He swatted at my rear leg as I reached the top of a hill, causing me to crash to the snow and slide to the bottom. When I stopped rolling, his teeth were on the back of my neck. \"Submit to me, love,\" he said. \n\nBeing chased by your mate is the werewolf version of foreplay, and I was wet and ready for him. \"Take me hard,\" my wolf and I begged him. He moved behind me as I raised my hips under him, his cock head finding the right spot. He shoved his hips forward, sheathing himself in one long move. I howled in pain and pleasure as he stretched me open. \"YES OH LUNA YES,\" I sent as he started to slam in and out of me. \n\nHe pounded me into a puddle of wet fur as his wolf took the spoils of victory. I lost track of the number of times I climaxed on that big cock of his, especially after the knot formed. It was like a softball, stroking my insides and slamming back against my G-spot with every one of his short thrusts. When he got close, he started moving so fast I thought I would pass out from the pleasure. The orgasm that hit when I felt him fill me with his hot seed was so intense I passed out. \n\nI woke as I felt him withdraw, and the fluids spilled out of me and onto the grass and snow. \"Are you all right?\" \n\n\"I don't know if I can move,\" I told him. \n\n\"Rest, I'll be back.\" He licked my neck and ran off, returning twenty minutes later with a fat snowshoe hare in his mouth. He dropped it in front of me, sitting with his tongue lolling out the side of his mouth. I tore the fur off and ate the still-warm flesh, tossing the rest to him. He licked the blood off my muzzle, then cleaned my still-sore sex. \"We should get back,\" he said. \"We can't sleep in too late if Heather needs us.\" \n\nWe moved through the trees, making our way back to the Pack House and a warm shower. \"Do you think there is anything to the Arrowhead Blessing,\" he asked as he washed my back. \n\n\"There are too many pregnancies to be random chance,\" I said. \"If we...\" \n\n\"I'd love to have a child with you,\" he said as he moved his hands around me from behind. I could feel him stiffening against my butt as his hand moved down. \n\n\"If you didn't pup me tonight, another time isn't going to do it,\" I said as I moved his hand away from my tender pussy. \"We need to sleep.\" \n\nAnd we did. \n\nAfter some gentle loving, ending with me filled to overflowing again. \n\nCh. 4 \n\nCarson's POV \n\nNear Two Harbors, MN \n\nSince we were arriving in the middle of the night, we had to fly into the Duluth airport instead of the closer Two Harbors airfield. A rental car was waiting, and I drove north to rejoin my family at Arrowhead. As soon as my car turned west from Two Harbors, I sent a mental call to my brothers, hoping one was awake at five AM and in range. Chase was the only one that answered. \"Morning, Carson! Good to have another clown for the circus,\" he said. \n\n\"You're up early.\" \n\n\"You aren't the only Alpha flying in this morning for the trial. With Roadkill gone, we're short Betas, and I'm coordinating transportation and lodging. Where are you?\" \n\n\"Heading north on 12, ten minutes from the airport. What's going on?\" \n\n\"Our enemies smell blood in the water, Carson. You'll be placed under arrest when you arrive for violating a Council order, in that you did not stop and return Heather to the Council when directed.\" \n\n\"Damn right, I didn't.\" If that's the fight they wanted, that is the fight they would get. \"What does Sawyer say?\" Our oldest brother was the Lawyer in the family, Chase was the Doctor, and I was the brother no one expected to be more than a loyal Beta. \n\n\"Stick to the asylum claim, but there are problems. Heather couldn't technically request asylum until she reached your Pack lands.\" \n\nShit. \"So I'm fucked,\" I said. \n\n\"We might need to nullify a jury, like with us. If you survive the trial, you will face an Alpha challenge over your actions. We aren't the only side wanting to flip the jury by changing the minds of some Alphas. The offense of taking the woman away is enough for the Council to allow the aggrieved person the trial by combat. If you lose, they pick up a seat on the jury against Rori and me.\" \n\nI knew my reputation in the Council; I was the Alpha by default, not by merit. If they couldn't get me removed legally, they'd do it the old-fashioned way. \"Has anyone filed a challenge with the Council yet?\" \n\n\"Rumor has it there was one filed within an hour of the fight.\" \n\nMy wolf growled at the thought of a challenge, wanting to taste the blood of the man who thought to take what was MINE. \"The Cascade Pack is ours to rule and protect,\" I told my wolf. \n\n\"No one hurts her,\" my wolf told me. It was a little weird having him back in my head so much after decades of apathy. Now that he was back, I was stronger and more determined than ever. \n\n\"Then, a fool will meet the teeth and claws of a Nygaard Alpha,\" I told Chase. \n\n\"THAT is the Alpha we need today,\" he told me. \"I'll meet you for breakfast at the dining hall.\" \n\nI closed the connection and drove, arriving at five-thirty at the main gate of Arrowhead. I noticed that security had changed; the Arrowhead guard was standing with a Council Enforcer and a warrior from Oxbow Lake. I stopped the car and rolled down the window. \"Morning,\" I said. \n\n\"Good morning, Alpha Nygaard. The Alphas are expecting you in the dining hall,\" the Oxbow guard said. \n\nThe Council warrior had moved to the passenger side and knocked loudly. I rolled down the other window. \"What is your problem,\" I snarled. \n\n\"You are under arrest, Alpha Nygaard. As such, Enforcers are to be with you at all times. Unlock the door, please.\" \n\nI hit the button, and the big man got in. \"Stay the hell out of my way, Enforcer.\" He was smart enough not to say anything as I rolled the windows up and drove. I parked my car in the Alpha Mansion driveway, then got out and walked up the hill to the expansive Pack House. I ignored my guard as I walked inside, and an Omega took my coat. \n\nConversations stopped as I walked into the dining hall and spotted Rori and Chase at the head table. The room was half full, and I recognized some of the European and American Alphas and two Council members. I smiled as Rori got up, and I gave her a big hug as Chase welcomed me back. \"Good flight?\" \n\n\"Slept most of the way,\" I said. \"I'm starving. I'm going to grab a plate.\" \n\n\"No problem, the buffet will be open until nine, and the proceedings start at ten,\" Rori told me. I went over to the food, loading up with biscuits and gravy on one plate, then pancakes with bacon on the other. The day was always better when you started with pancakes, as Mom used to say. \n\nI carried the plates over as I thought about what Heather must be thinking now. She had done nothing but fall in love, and her life was in danger again, this time from those who had protected her. I took a seat next to Sawyer, who was feeding his mate Ashley off his plate. I smiled at the gesture; it was a male wolf's way of ensuring his baby would be healthy and reinforced the bond with the mother. There was no greater love than giving her your bacon. \n\nWe all sat down at the table of eight, with Alpha Coral, Beta Ron, and Beta Teri being the rest of the table. I switched to the family bond so we could talk without being overheard. \"What is your legal advice, brother?\" \n\nSawyer took a bite for himself, then pulled Ashley over until she was sitting on his lap. \"Have a good last meal?\" \n\nMy jaw dropped, that wasn't what I expected, and the others cracked up when they saw my face. \"What is going on?\" \n\n\"When you returned home, I informed the Council that Heather was at the Cascade Pack. I also informed them that Heather had asylum, granted by you as the Alpha. They weren't happy; they demanded I get in touch with you and force you both to return. I refused, quoting the Asylum laws, and reminding them that I was a fellow Alpha and could not demand ANYTHING from you.\" \n\n\"That must have been a fun conversation.\" \n\nSawyer nodded. \"Well, let's say it was a good thing you went dark on communications because your Betas caught an earful from Councilman Baronsky. He's leading the charge to return Heather and have her put to death.\" \n\n\"Because if Heather is dead, his granddaughter will not receive as much punishment for her actions,\" Coral added. \n\nSawyer nodded and continued. \"The Council lawyers spent a few hours reviewing the law, as did I, and they took things a different way. They have charged you not for granting asylum, but for disobeying a Council directive to return Heather for trial. Under the law, if they can prove an illegal act preceded the granting of asylum, then the asylum is not valid. As we speak, Council Enforcers are making their way to the Cascade Pack. If we lose, they will demand entrance and will execute Heather on sight.\" \n\nMy wolf roared to life at those words; I stood, sending my chair flying, and my growl silenced the room. I barely fought back my shift, growling at the Enforcers and Warriors who were moving to surround me. Others were moving between me and their Alphas or Lunas. \n\n\"Relax and sit back down, brother,\" Coral said as she rubbed my back. \"Sawyer informed Mom, and we have a plan. She isn't part of your Pack, and if necessary, she and Frank will take her into hiding. They won't get to her, she promises you.\" \n\nI pushed my wolf back down, took a deep breath, and waved the Enforcers back. I retrieved my chair and sat back down to eat. The room returned to normal now that the threat of an enraged Alpha was over. \"What defense do I have for ignoring the Council order?\" \n\n\"Ignorance is out. The Council forced Chase to contact you and order you back, and you ignored the order.\" I glared at my younger brother. \"Don't get mad at him, he and Rori are in enough trouble without adding another charge of Council disobedience. They couldn't force you to do anything, so they aren't liable.\" \n\n\"What else?\" \n\n\"The Council orders can't go up against the instinctual nature of our wolves. Protection of a mate, safety of a family or vulnerable Pack member, or being under an active Alpha order. There was a case two centuries ago where a Beta was found not guilty because the Alpha Order was still in place.\" \n\nWhat a shit sandwich. \"Can we nullify the jury?\" \n\n\"I don't know, with all the Alphas here, that will likely be the jury, especially since a Russian pack was aggrieved,\" he said. \n\nI had one idea, but it was a long shot. \"Let's talk about other things while we eat,\" I finally told the table. \"How is your pregnancy progressing,\" I asked Beta Teri. \n\n\"Good, no morning sickness yet,\" she said with a smile. I finished my breakfast as we talked about the babies, the weather, and anything other than the upcoming trial. When we finished, the ladies decided to hit the pool, the water being the preferred exercise for pregnant females. Chase led Sawyer and me to his office. I left the Council guard outside and closed the doors, soundproofing the room as I explained my idea. \n\nWe emerged just after nine, going our separate ways. Sawyer went to change and prepare, while Chase had to stop by the Clinic and check on his patient. I went to my room, calling home to check with my Betas. Heather and Colletta were still sleeping, and Carl was leading the warriors on their punishment run. I laughed as Angelina told me of Frank's challenge; he was a stronger wolf than any of us believed possible. He made Mom very happy, 'multiple times' as Angelina put it, enjoying how she could tease me about my mother's sex life. \n\nI didn't care. My Mom had been a hollow shell after rejecting our father in his descent to madness, only holding on to life because of her grandchildren. Seeing her truly happy was worth any amount of brain bleach at the thought of Mom having sex. \n\nI was dressed and ready when Sawyer arrived to take me to court. As we suspected, my trial would be first; Tatiana was still healing, and they wanted my status resolved before the jury convened for Rori and Chase. We walked into the room at the Pack House, the cameras rolling as the proceedings were broadcast to Packs around the world. \n\nIt didn't take long for the fireworks to start. When Alphas were called forward to form the jury, Rori went to take her place for the Arrowhead Pack. \"Objection,\" Prosecutor Matthew Kirk said to the Chair. \"Alpha Rori pled guilty to charges and is pending sentencing. Surely we are not allowing her to sit in judgment over her brother?\" \n\n\"Sustained,\" Chairman Coffey said. \"Alpha Rori, step down.\" Alpha Kirk and his Luna, who was sitting on the jury for him, smirked in triumph, knowing they had just knocked a vote away from me. As Rori walked back to sit behind me, Beta Ron walked forward and took her place. \n\n\"What is this,\" Alpha Kirk said. \"He's not even an Alpha!\" \n\n\"Alpha Chase would be barred under the same rule, Mr. Chairman. Beta Ron is next in line for the Alpha position at Arrowhead,\" Sawyer responded. \"The Alpha is within her rights to appoint a substitute if she is not able to fulfill her responsibility to the Council.\" \n\nThe arguments went on for a few minutes, but Sawyer had the law on his side. Sawyer and I stood as the reading of the charges. When asked for my plea, I answered, \"Not Guilty.\" \n\nThe prosecution's case went quickly. Chase was forced to testify, and he confirmed he sent me Councilman Baronsky's demand to stop and return Heather to the Pack House. The Prosecution was ready to call multiple witnesses from the pursuit, but Sawyer cut that off, stipulating to the fact that I took Heather off Arrowhead lands and onto Cascade Pack lands. \"The prosecution rests,\" Alpha Kirk said. \n\n\"The defense calls Alpha Carson Nygaard,\" Sawyer said. I went forward and was sworn in, sitting in the witness chair before the Council. \"Alpha Carson, you were present in the room when Heather Rhodes confronted?\" \n\n\"I was.\" \n\n\"Why did you interfere?\" \n\n\"I had to,\" I said. \"Heather is my friend. I met her late last year here at Arrowhead Pack. She was pregnant, injured, and in danger from the mob that was forming. I picked her up and removed her from a volatile situation until cooler heads could prevail.\" \n\n\"Did cooler heads prevail?\" \n\n\"I would say no. A posse was sent after us, intent on killing her without a hearing. I contacted my Beta and had him drive the car around, then drove to Alexandria and took a plane back home.\" \n\n\"Your brother told you of Councilman Baronsky's order, did he not?\" \n\n\"He did, and I ignored it. Tatiana Petrovsky is a member of his home Pack; he is hardly a neutral arbiter of her fate. She knew of us, and I explained to her the options before arriving home. She formally requested asylum on behalf of her children, and I granted it.\" \n\n\"Objection,\" Alpha Kirk said. \"The Council has not ruled on the validity of the asylum.\" \n\n\"Nor has the witness stated it had done so,\" Sawyer responded. \"He merely stated the facts of the situation as he knew them at the time.\" \n\n\"Overruled,\" the Chairman said. \"Proceed with your questioning.\" \n\n\"You saved Miss Rhodes from a mob because of her pregnancy?\" \n\n\"In part. Heather did not know that she is carrying twin werewolf babies. All babies are to be treasured and protected at a time when there are not many pregnancies among our kind,\" I said. \"Well, unless you are part of the Arrowhead Blessing. Alpha Rori started a baby boom, this Pack has four more pregnant members since New Years, and two more at Oxbow Lake,\" I said with a smile. The trail feed moved to the audience, and I watched as women looked at their mates with longing. Rori had made it clear at her trial that Luna was watching and had chosen sides, her blessing of fertility being evidence of that. \n\n\"Would you have done it if she was not pregnant?\" \n\n\"Yes, without hesitation,\" I replied. \n\n\"You knew that removing her was defying Council edict, and you could be prosecuted and punished for this?\" \n\n\"I did, but I didn't care about what might happen to me.\" \n\nHe turned to the audience. \"Why? Why would you defy the Council over a mere HUMAN?\" \n\nI paused for dramatic effect, leaning forward and looking directly into the camera. \"I rescued Heather from them because my wolf and I recognized that Heather Rhodes was my choice mate.\" \n\nThe room exploded in shouting and disorder as I sat back and waited for calm. I'd publicly claimed Heather as my own, and now I needed to keep her alive until she agreed to the change. \n\nCh. 5 \n\nCarson Nygaard's POV \n\nArrowhead Pack House, Trial Room \n\n\"IMPOSSIBLE,\" Alpha Matthew Kirk roared from the Prosecutor's table. \"Miss Rhodes is HUMAN. No wolf means NO MATE BOND.\" ",
        "\"I didn't say I had a mate bond with her,\" I replied as things calmed down. \"Honestly, she isn't ready for a man or a mate. She's had her whole life ripped apart multiple times, and the wounds from her rejection are still fresh. Add in that she's pregnant and alone now, and the reaction of my kind to her, and a relationship with me isn't happening now.\" \n\n\"Then there is no mating, and you have no defense.\" \n\n\"You aren't listening, Alpha Kirk. I said that MY wolf had recognized HER as my mate. As such, my actions to protect her fall into the Mate Protection exception in the law.\" \n\nThere were more outbursts in the crowd and among the Alphas, and the Chairman had to gavel the proceedings to order again. \"I will not warn you again. Alphas, order your audience members to remain seated and silent during the proceedings.\" They did, and the crown still under command. \n\nCouncilman Millner nudged the Chair, getting the floor. \"This is ridiculous, Alpha Nygaard. We all know you are unmated, you've visited my Pack with the other males looking for mates! Don't presume to confuse your lust for an attractive young human with the blessing of the mating bond.\" \n\n\"I am no Greg Barks, Councilman Millner. I have not seduced her and left her pregnant, and I am not acting on lust.\" \n\n\"How can you know if you've never felt the mating pull,\" Councilman Kirk said. \n\n\"You do not know me or what I have experienced,\" I said as I stared into his eyes. \"I have felt the mating pull. She rejected me out of hand, having already chosen a choice mating to another. I know what the pull is, gentlemen. I know it cannot be in place without her having a wolf. MY wolf, which has been sullen and withdrawn for about five decades, sat up and took notice when I met Heather. When she was in danger, I responded as if she was my mate. In my wolf's mind, she IS my mate, and I will have no other.\" \n\n\"You have not marked her, and she has not accepted you,\" Alpha Kirk said. \"She might reject you as well.\" \n\nMy wolf growled at the thought, but I kept it down. \"That may happen despite my best efforts to win her over. I cannot depend on an irresistible pull or instinct to win her heart. I have a tough test ahead of me, and you are not making it easier. The longer this goes on, the less time I have.\" \n\n\"Time until what,\" Sawyer asked me. \n\n\"The laws regarding humans are wrong, but they are clear. I have granted Heather Rhodes asylum in my Pack from those of you who seek to kill her. A foolish, reactionary desire that would take my Mate from me and bring unwanted attention from human authorities. Do you have any idea what would happen if you were to kill her?\" \n\n\"You and your brothers would rebel,\" Alpha Kirk said with a sneer. \"You would bring us to war over a human?\" \n\n\"We would not have to declare war for you to get one,\" I responded evenly. \"You people have no idea of the forces you are dealing with. You think you can slice her throat and bury her in the woods, and your problem is solved. Real life isn't like that.\" \n\n\"It IS that simple,\" Councilman Baronsky said. \"She knows, she dies. It is the way we have protected our kind for CENTURIES.\" \n\n\"It is that kind of ignorance that will get us all killed,\" I said as he glared at me. \"Heather Rhodes is not some orphan streetwalker, with no family and no history. She is claimed as a Club Princess by the Steel Brotherhood, a biker club with chapters all over the country and thousands of members. Her guardian is a President, and keeping her safe was part of the bargain Alpha Chase made when we took down the Sons of Tezcatlipoca. The Brotherhood will take their vengeance on anyone who harms their member.\" \n\n\"It's a biker club, nothing to worry about,\" Alpha Kirk said. \n\nI just shook my head at their stubbornness. \"If you think that, you deserve your fate. It's more than the Brotherhood. She has influential friends in human law enforcement, ones who won't let her disappearance go unsolved. They will descend on us like locusts, leaving nothing behind when they leave. The deal we made with the Government three months ago will go away. Every business deal, front company, bank account, and forged document will go under the microscope. We cannot withstand the scrutiny they would bring. Our secret would be lost, along with our land and our lives.\" \n\n\"People die all the time, Alpha. Humans are fragile; we can make it look accidental,\" Alpha Kirk replied. \n\n\"And you would kill her when she has done nothing more than love one of us,\" I said. \"She has the protection of my Pack. You will have to go through me to get her, and I am not fragile, and will not die easily.\" \n\nThe Chairman looked into my eyes, and I stared back at him. I didn't care if this was challenging him, this was my MATE they were talking about, and no man would take her from me. \"I do not know if a mate bond exists, but I can see the passion in which he defends her. Counsel, do you have other evidence to present?\" \n\n\"No, Mr. Chairman,\" Sawyer said. \n\n\"The defendant may return to his seat.\" I did, and the Chairman gave the jury instruction. \"The decision to be rendered is not whether Alpha Carson refused to follow a valid order by a member of the Council. He has admitted to that. The question you must answer is whether the Mate Protection exception applies to his disobedience.\" \n\nThe Council left, then the Alphas filed off into the conference room. When the doors closed, Alpha Rori excused the rest of us. I sat back in my chair, wondering if what I did was enough. \"You'll be fine,\" Rori said as she put her hand on my shoulder. \"A wise Alpha doesn't interfere with matings.\" \n\n\"I hope you're right,\" I said. \"I have to call home.\" \n\n\"Use my office,\" Rori said. \"Your Pack was watching, and they already know what you are going to say.\" \n\nShe was right; when I called on Skype, my Betas congratulated me before leaving so my Mom could talk. \"I'm so happy for you,\" she said as she wiped a tear away. \"You had us all in tears,\" she said. \n\n\"Great.\" Sworn testimony was not the way I wanted to confess my growing love for Heather. \"How is she doing?\" \n\n\"She's talking with Doc right now; there's a lot going on in her head after watching the trial.\" \n\n\"Mom, was that a good idea?\" \n\n\"She can't be the only one here who doesn't know what's going on, Carson. You were wonderful, you stood up for her, and that can only help.\" \n\nI could imagine what she was thinking, hearing what I said, and what those backwards-ass Alphas were saying about her. She's probably planning to run as far away from us as she can. \"Did she freak out yet?\" \n\n\"No. Heather is stronger than I imagined, Carson, and I can see her becoming a good Luna once she gets a wolf. She has courage, that one, and a selfless heart. I'd worry that she will agree to mate with you, not out of love, but because it is the only way to save her babies.\" \n\n\"You need to do whatever it takes to keep her safe, Mom. Council Enforcers are on the borders. If I lose, they will come and take her.\" \n\n\"They can try,\" she said with a growl. \"The moment you claimed her, she became my daughter, and those babies my grandchildren. The Pack knows her as their future Luna. They will not let the Enforcers take her away, and Frank and I cannot be commanded to give them up. They will be long gone before the first Enforcer makes it to the Pack House.\" \n\n\"Thanks, Mom.\" She wished me luck and let me go; leaving the office, I barely noticed the Council Enforcers following me as I went to lunch. The Pack's mood was joyous; a mate claiming was a cause for celebration, and when it was an Alpha? Big news. It took me five minutes to make it to my seat with all the people congratulating me, and I didn't even know if she would accept me! \n\nLunch was fantastic; Philly cheesesteak sandwiches, onion rings, and a Coke. I was cleaning up the mess on my plate when the Chairman announced a verdict was in, and we would convene again in twenty minutes. \"Coral, what's going on,\" I sent. \n\n\"You know the jury is sworn to secrecy,\" she responded. \"If you want to help, have the kitchen send more onion rings and dill pickles. I can't get enough of these things.\" I laughed and let Mykayla know as she came by with a pitcher of water. The fourteen-year-old orphan was helping out in the kitchen since this trial was an 'all-hands' evolution for the Pack. \n\nThe crowd made its way back in after lunch. A few minutes later, I was standing behind the defense table as the Alphas and Council walked in. The proceedings were gaveled back to order, and the video was running again. \"Members of the jury, on the count of disobedience of a Council order, how do you find the defendant, Alpha Carson Nygaard?\" \n\n\"Not guilty based on the Mate Exception,\" Alpha Robertson replied. \n\nI leaned back in my seat, relieved that the first part was over. The Council would now have to recognize my claim to her and my offer of asylum. \"Very well,\" Chairman Coffey said. \"We now move to the question of asylum. Alpha Carson can make his case, and the Council and Alphas will be allowed questions. Since this is not a criminal matter, the Council itself will decide. Alpha Sawyer, you have the floor.\" \n\n\"Thank you, Mr. Chairman. The matter is a simple application of Pack law. Heather Rhodes made it to Cascade Pack lands and requested asylum for her and her unborn children. She faces a real threat of death that meets the asylum criteria, and the Alpha granted the asylum. Under the law, she is part of and protected by the Cascade Pack, and any action to harm her is an act of war.\" \n\n\"This is outrageous, Mr. Chairman,\" Alpha Kirk replied. \"You cannot apply Werewolf law to a HUMAN female. The asylum is void because humans are not eligible under the law to ask for it!\" \n\n\"Asylum applies to both to Heather AND her pups,\" Sawyer responded. \"The Law allows for children and the unborn to be represented by a parent. A mother certainly qualifies.\" \n\n\"Not if she's human. Humans have no rights under Werewolf laws!\" \n\nSawyer grabbed a piece of paper off our table. \"If I may? Here is the relevant section. 'Any person who reaches the territory of another Pack and whose plea for protection is accepted may be granted Asylum by that Alpha. Asylum status places the person under the authority and protection of the granting Alpha. Asylum status ends if the person joins the Pack as a member, or if the Asylum status is voided by the Werewolf Council after an evidentiary hearing.' It says nothing about the person having to be a werewolf.\" \n\n\"It is IMPLIED in the wording, Mr. Chairman. A human cannot 'fully join the Pack' because they have no wolf, and no Pack Bond is possible. Therefore, a human cannot reach the end of an asylum claim.\" \n\n\"Are you so sure about that, Alpha Kirk?\" He looked back to where Chase and Rori sat. \"The Arrowhead Pack has TWO humans who are both Pack members and Trusted Agents; in fact, they are Pack Betas. Alpha Rori's adoptive mother is the Pack Nurse, and her stepfather is in charge of Pack facilities. Both live on Pack land, in Pack housing, and have supported and protected the Pack like any other member. Both are loved and valued MEMBERS of the Arrowhead Pack. If other Packs do not recognize the value of humans to them, it does not matter to those Packs who embrace and trust humans as their own. If Heather Rhodes accepts Carson Nygaard as her mate, she will be the Luna of the Cascade Pack.\" \n\n\"Some Luna! Unable to link, unable to shift, unable to protect the Pack,\" Councilman Baronsky said. \n\nSawyer just laughed. \"She took down a trained Werewolf female, TWICE. How is she different now than any other Werewolf female who is pregnant and unable to shift?\" \n\nThe crowd was still under Alpha command to remain silent, but their faces showed the argument was getting through. Alpha Kirk knew he was losing, so he shifted gears. \"And she IS pregnant, and the father of those pups has clear rights under Werewolf law.\" \n\n\"He may ask to see the children when they are born,\" Sawyer replied. \"Alpha Carson would not deny a man visitation.\" \n\n\"I'm speaking of the Bloodline Rights,\" Alpha Kirk said. I was shocked; I'd heard about those in our history books, but no one in the modern age would use them! They were a relic of the laws from before the Council existed as a governing body. \"When a male werewolf finds his True Mate, he OR his mate may eliminate any bastard children he has fathered with other women. This right ensures his hereditary bloodline is ONLY through his true mate. The law is why Tatiana was within her rights to end the babies Heather was carrying.\" \n\n\"This is barbaric! Infanticide cannot be the answer,\" Alpha Coral said. \"The law was only used for Alpha bloodlines, not a Pack Warrior! It is a relic from when we all lived in caves, and for good reason! We have risen above killing innocent babies, have we not?\" \n\n\"And yet the law remains,\" Alpha Kirk said. \"Females, children, and the unborn do not have the rights of a Male under the law. If the Father has this legal right, asylum cannot be used to evade it. \" \n\n\"We'll be changing that soon,\" Coral said under her breath as others nodded in agreement. \n\n\"To be clear, Alpha Kirk, you believe that Heather Rhodes' asylum is void IF the father of the twins wants to kill his children.\" \n\n\"I didn't say that,\" he replied, knowing how it sounded to the audience. \"I said that his RIGHT to do so means that Heather's asylum protections ARE void if he doesn't want the babies for his own.\" \n\nWhat an asshole. Sawyer had played him perfectly; with every word, their disgusting beliefs were made clear to everyone. He'd walked right into the trap we devised. \"And if the father does not want to exercise that right? Would it change anything?\" Kirk said nothing as Sawyer opened a folder on the table, handing a copy of the paper to Alpha Kirk, before passing another copy to the Council Chairman. \"This morning, Greg Barks signed papers terminating his rights to his children. He consented to them being claimed by adoption and raised by Alpha Carson Nygaard and his mate, Heather Rhodes.\" \n\n\"WHAT,\" Councilman Baronsky yelled. \n\n\"The papers are in order, and thus the parentage and future of the pups are no longer a Council matter. The mother and father are in Cascade Pack and will remain there.\" With that, he sat down. \"Look at Kirk,\" he sent to the family. \"He looks like his toys just got taken away.\" \n\n\"It's not over yet, the Council has to decide on Heather,\" Coral said. \n\nThe quiet in the courtroom as the Council reviewed the papers was broken by yelling, then a loud crash as someone knocked over furniture. A plea for mercy was met with a FURIOUS growl. \"I WILL KILL YOU,\" a deep voice yelled with a Russian accent, followed by the sound of a fist hitting flesh over and over. \n\n\"Stay where you are,\" Rori ordered as she and Chase got up to see what was happening behind the curtain that divided the courtroom from the rest of the Pack House. Her Warriors did not move to break up the fight as I expected. Instead, they stepped aside as a small black and tan colored wolf ran into the room. The frightened animal hid behind Rori's legs as she shook uncontrollably. \n\nRori leaned down, and her face contorted with rage as she picked the little one up. \"He hurt Mykayla,\" she growled as she walked towards the curtain with the juvenile wolf in her arms. \"DON'T KILL HIM, HIS ASS IS MINE,\" she yelled as she exited the room."
    ],
    "authorname": "partwolf",
    "tags": [
        "destined",
        "love",
        "mates",
        "motorcycle",
        "pack",
        "war",
        "werewolf",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/claiming-treasure-ch-01-05"
}