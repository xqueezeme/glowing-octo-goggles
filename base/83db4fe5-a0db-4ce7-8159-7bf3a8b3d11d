{
    "title": "Surefoot 03: Field Trip Ch. 05",
    "pages": [
        "Planet Luntanu, Alpha Squad Base Camp, 2030 Hours:\n\nThe food hadn't gotten any better, but it was darker now, so at least they didn't have to see it so clearly.\n\nSasha squatted on a container from the shuttle, fingers working over the screen as she edited the overall report, recalling Commander T'Varik's advice to maintain the principles of the acronym FACT: Factual, Accurate, Concise and True. She was doing her best, though with all their misadventures, the acronym could also stand for Flawed, Amateurish, Crap and Terrible.\n\nThe Squad sat around the fire, Sasha, Neraxis and Jonas back in their charred uniforms, which at least had dried for the most part. Everyone perused their individual reports on their PADDs, while Sasha's PADD, linked to theirs, collated everyone else's. It was quiet, except for the crackle of the fire and the occasional zapping sound of the electric coil Jonas rigged to the top of a light pole, attracting and killing insects - while Kit would look up occasionally, and forlornly at them.\n\nFinally Neraxis confirmed what most of them were already thinking. \"You know, we're gonna be lucky they let us off the ship for the next Away Mission.\"\n\n\"It's not that bad,\" Jonas defended beside her.\n\n\"Indeed,\" Eydiir agreed. \"You are exaggerating slightly.\"\n\n\"Still,\" Giles began tentatively. \"They don't necessarily have to hear about all of those things.\"\n\n\"Why not, Friend Giles?\" Kit asked. \"The events happened, as embarrassing as they might be.\"\n\n\"Because there's such a thing as too much information, Kit.\"\n\n\"There is? How is that possible?\"\n\nGiles looked to the others for help. Sasha spoke up. \"Well, Kit, one of the tenets of a good report is being Concise. It would not necessarily help the report to detail how you broke protocol by eating native insects and getting sick.\"\n\n\"Or my completely understandable accidental damage to the temple,\" Giles offered.\n\n\"Or the pig attack and the burning of the uniforms,\" Jonas added.\n\n\"But definitely keep in Sasha eating the monkey crap,\" Neraxis insisted, smiling. \"There's a public interest issue involved.\"\n\nSasha was ahead of the rest of them, deleting all the uncomplimentary parts of their Away Mission, and ignoring Kit's continued look of concern. Still, she felt the need to explain. \"No one needs to know every little detail about what goes on, Kit. An omission of the truth isn't like a lie. After all, if a tree falls in a forest and no one is around, does it make a noise?\"\n\n\"Yes, it does.\" Kit looked around at the others. \"My former homeworld has many spacefaring neighbours: the Federation, the Cardassians, the Boslic and others. All have claimed to be advanced, enlightened and benevolent. But when I needed to leave my world and sought help, the others refused, or demanded payments that I could not provide.\n\nThe Federation, however, as represented by Starfleet, was different. It was a Starfleet captain who granted me asylum, who helped me escape and who later sponsored me for the Academy. He had nothing to gain from helping me, and had he refused, no one else would have known about it. But he didn't refuse. He upheld the ideals he espoused. \n\nI will always be grateful to him, and the organisation he represents. The organisation we all now represent.\" He looked back at Sasha. \"Respected Friend, forgive me for speaking my mind, but it is when no one bears witness, when no one is in judgement of us, that we must maintain our integrity the most.\"\n\nThe group went silent, Sasha staring at the Qarari, surprised at what she had heard from him. \"Kit... why did you need asylum?\"\n\nKit stared back, his expression unnervingly still, except for the blinking of his round eyes and the soft flutter of his throat folds, before he replied, \"My government and I agreed to disagree. It does not matter now. It is in the past.\" He glanced up into the darkening sky. \"Friend Eydiir, surely I can have just one of the four-winged flyers, yes?\"\n\n\"No.\"\n\nSasha wanted to enquire further - the talk about the bugs was clearly an attempt at diversion - but then her combadge chirped. \"Private Message: Squad Leader Miro to Squad Leader Hrelle.\"\n\nShe glanced at the others, a little embarrassed, before answering the hail. \"Hrelle here.\"\n\n\"Hello, Sweetness. I know it's not 2100 Hours yet, but I want you, and I don't want to wait any longer.\"\n\nNow Sasha felt herself fully blush. \"Well, I suppose I could come early...\"\n\nJared's laugh carried loudly. \"Now there's a straight line waiting for a retort. I've set a light/sound beacon outside my shelter for you to follow. Don't keep me waiting. Jared out.\"\n\nThe group went silent, until Giles asked, \"Well? Are you going?\"\n\nSasha stared at the fire. Kit's words clung to her. She desperately wanted to go, wanted to be with Jared, to reach this next stage in her life, to have something good to remember about this Away Mission, even if it wasn't exactly noteworthy for her report. But it was still breaking the rules.\n\nShe looked around her friends again. \"You guys really wouldn't mind if I went?\"\n\nThey all nodded or made sounds of support. Except for Kit, who had made his feelings known already, and offered only a plaintive look.\n\nShe looked away as she rose to her feet, and went for her phaser and a hand torch. He didn't understand; he didn't even have a sex drive.\n\nShe was glad for both, as the trail between her camp and Beta Squad's was dark and uneven, with many things in the trees, noisy and mocking.\n\nIt was okay. She was allowed to do this. She was an adult. Jared was an adult. If they weren't in Starfleet, they would have gone to bed long before this. There was nothing wrong with it.\n\nNothing.\n\nShe saw the beacon just ahead, though she kept at a slow pace, as the trail was still uneven and treacherous even with her torch. His squad's campsite was nearby, to judge from the lights coming from it. She smiled faintly as she saw Jared standing outside his shelter, switching off the sound portion of his beacon but leaving the light on. \"About time, lover.\"\n\nThe Argelian boy was clad in a blue cotton shirt open to the waist, revealing a smooth, chiselled chest and abdomen, and black trousers. He was... yummy. He took Sasha's breath away.\n\nJared drew closer, eyes locked with Sasha's but his hands reaching out, gently taking the phaser and torch from her and casting them to the ground. Then he reached up, cupped Sasha's face in his hands and kissed her. Sasha felt herself melt, and at the same time, her body galvanised, and she embraced him, her hands moving over her back and down to his rear, relishing the feel of his firm flesh.\n\nJared led her into the shelter, where sleeping bags had been open and laid out on top of each other, offering enough space and cushion for two. Sasha lay back, looking up at Jared as he half-knelt over her, kissing her again, their mouths grinding against each other, Jared making an effort to undress her, smiling in the dim light seeping in outside. \n\nHe laughed softly. \"Should have had you strip outside, we hardly have room in here.\" He reached down, as if to cup one of Sasha's breasts through her uniform - only to remove her combadge and toss it aside. \"And bloody Starfleet can go to hell for a few hours.\"\n\nJared laughed softly and bent down to kiss her again.\n\nSasha blocked him. \"Wait- No-\"\n\nThe Argelian stared down at her. \"What?\"\n\nSasha shook her head, pushing up to get Jared off her. \"No, we can't-\"\n\nHe slumped to his side, facing Sasha and looking even more confused than before. \"Yes, we can, it's the perfect opportunity! T'Varik and your Dad are in orbit, no one will ever know!\"\n\n\"We'll know.\"\n\nJared froze again, before reaching out to touch Sasha's cheek, whispering gently, \"You're scared, that's all. It's your first time. I'll take care of you.\"\n\n\"I'm not scared. But we agreed to abide by Starfleet regulations.\"\n\n\"It's an unfair, idiotic regulation!\"\n\n\"That doesn't matter, we still agreed to it.\"\n\nJared rose onto one elbow, letting his hand drift down again. \"Come on, Sweetness. Be adventurous like your mother.\" He leaned in again to kiss her.\n\nSasha brought a hand up between them again. \"What does that mean, 'adventurous'?\"\n\nJared started to reply, then caught himself, before finally shaking his head and declaring, \"It's nothing, just relax...\" His hand moved to her waist.\n\n\"No.\" Sasha drew up quickly, sitting up cross-legged and facing Jared on an equal level. \"Explain 'nothing'. What made my mother adventurous?\"\n\nThe Argelian made a soft, murmuring laugh. \"Come on, Sash, you must realise yourself, right? She married a Caitian, after all. That's not exactly normal.\"\n\nSasha felt like she'd been struck with a hammer. Her heart was racing now, for all the wrong reasons, and she felt dizzy, not believing what she was hearing. \"How can you talk like that? You want to be in Starfleet, but you're prejudiced against Caitians?\"\n\nNow he looked indignant. \"Prejudiced? I'm not prejudiced! I like Caitians! I appreciate them! They're like my people, they're hedonistic, they embrace all the sexual aspects that life has to offer.\" He smiled. \"And I figured growing up around one of them might have had an equally liberating effect on you.\" Now his smile dropped. \"Clearly I was wrong. You remain as bland and boring as every other Earther I have encountered. I wasted my time with you.\"\n\nShe glared in disbelief at him. \"Is that why you were interested in me? Because you thought I was... exotic? Uninhibited?\"\n\n\"What's wrong with being uninhibited? Your mother clearly was.\" He wore a smug, condescending expression that suddenly made him as unattractive to her as his words. He leaned back on one elbow. \"Did she ever say what was it that got her going about him? Was it the ears, the claws? I know, the tail, right? It has to be the tail.\"\n\nSasha stared at him for a moment longer, before she reached out, grabbed her combadge where Jared had thrown it and crawled out of the shelter to get her other things. The Argelian followed her. \"Where are you going?\"\n\n\"You want to know what got my Mom 'going' about Esek Hrelle?\" Sasha demanded, her voice rising even as her stomach felt like it was plummeting. \"He was decent and kind and patient and wonderful to her! And to me, too! Even when I was being a little bitch to him! She married him because she loved him!\"\n\nNow Jared offered her a look of condescending derision, like an older brother having to deal with a child who refused to accept where babies really came from. \"Yes, Sasha, I'm sure she *loved* him. I'm sure she loved him so much she couldn't walk for days at a time.\" He smirked. \"It must have been like legal bestiality for her-\"\n\nSasha's fist connected with his jaw.\n\nJared yelped and staggered back, tripping over something in the dark and falling onto his shelter, collapsing it. She found her phaser and torch and stumbled her way back to her own camp, anger and tears fighting for dominance.\n\n*\n\nStation Salem One, Eismann Family Quarters, Eleven Years Ago:\n\nSeven-year-old Sasha sat up in bed, silently willing in vain for her mother to forgive her, to forget why she was there, to beam away... to do anything but sit at the side of the bed, dressing gown tied tightly around her waist, the silk lapel lifted to hide the bite marks on her neck.\n\nShe looked so angry, but in that horrible quiet way that carried into her voice. \"It's late, and you have school in the morning, so I don't intend to keep you up any longer than necessary. But you had better believe that tonight is not going to be the end of- keep your eyes on me when I'm speaking, young lady!\"\n\nSasha had been looking past her, focusing on the line of Starfleet Huggables, soft plush dolls of various races in Starfleet uniforms, that all the kids in her class were collecting, albeit replicated ones rather than the more expensive originals.\n\nNow she reluctantly looked back at Mom, as Mom continued her lecture. \"I was honest and upfront with you from the start. I told you that Esek and I would be coming home after your sitter put you to bed, and that he would be staying over tonight, so you wouldn't be surprised if you saw him in the middle of night or in the morning. And I know I have told you many times to never come into my bedroom without knocking.\"\n\n\"You come into *mine* without knocking,\" Sasha muttered in protest.\n\n\"Excuse me?\" Mom's glare narrowed on her. \"EXCUSE ME? You think that's the same thing? Listen, Bubulah, when you're older, and you start to show some maturity and responsibility, then you'll get that privilege. You knew we were in my bedroom, you heard us, but still you came in anyway without knocking while we were making love!\"\n\n\"That's not how you do it!\" Sasha declared angrily. \"I know! I saw a video in Biology Class!\"\n\nMom's face darkened, and she breathed out before replying in a tight, controlled voice. \"I'll have you know that there are many ways that two grown-ups can make love.\"\n\n\"But if you do it with a Caitian, you'll have babies that'll claw their way out of your belly!\"\n\n\"What? Who told you that?\"\n\n\"Leonard.\"\n\n\"Who the hell's Leonard?\"\n\n\"Suzanne's big brother. He's ten.\"\n\n\"Well, I hate to contradict someone with so many years of wisdom behind him, but I can tell you that firstly, grown-ups don't just make love to have babies. They do it because it feels good, and because they love each other and want to share that love with each other. Secondly, humans and Caitians can't have babies without help from doctors; they would have to take out one of my eggs and treat it so it will take a Caitian seed. And thirdly, their cubs do not claw their way out of their mother's bellies; if they did, the mothers wouldn't be around to feed them and take care of them, now would they?\"\n\nIt made sense to Sasha. But she refused to admit it. As far as she was concerned, the man that Mom was dating - and now making love with, yuck! - was nothing but an intruder, unwanted in their lives. Oh, he tried to be nice, and he promised to take her onboard his starship and let her sit in the Captain's chair, but if he thought he could trick or bribe his way into their family, he was in for a big disappointment.\n\n\"And I promise you, I have no intention of having another baby,\" Mom assured her. \"The one I already had and is sitting up in front of me right now is proving a handful enough.\"\n\n\"Leonard says Caitians keep their women naked and make them have babies or they'll eat them.\"\n\nMom frowned. \"Leonard is an ignorant putz. Do you think the Federation would allow a member world to do that to their own people? Do you think I would go out with a man who would hurt me? I trust Esek. He may look rough and tough, but he's more like a big... teddy bear. You know, he had every right to be angry about what you did tonight, but instead, he's in my room, upset that we might have scared you. Very upset.\"\n\nSasha scowled and looked away. \"Good.\"\n\nBut Mom reached out, took Sasha by the chin and drew her back to face her again. \"No. Not Good. You listen to me, young lady. I love that man in there. He's funny and warm and generous, and despite all your efforts to drive him away, like you've done before with other men I brought home, he has been nothing but patient and kind with you.\" Now tears welled in the woman's eyes. \"And I am tired of being alone.\"\n\nSasha shook her head. She never wanted to see her Mom cry, for any reason. Sasha couldn't remember her Dad, only knew him through videos of him with Mom and herself as a baby and a toddler. Mom always talked fondly of him - but never mentioned how lonely she was without him. Now she felt her own tears blossom. \"You- You have me...\"\n\nMom smiled and wiped the tears from her eyes. \"Yes. Yes, I do. And when you're not being a pain in my toches, I couldn't have a better daughter.\" She used her thumb and forefinger to clear away Sasha's tears as well. \"But even the best daughter can't do everything for me, just like the best tricorder can't do what a communicator can do. Grown-ups need other grown-ups, to talk with, to share grown-up things... and to make love with, as disgusting as I know that sounds to you right now. Grown-ups need grown-up friends.\n\nAnd you know, Esek could be your friend, too. He'd love that. Family is very important to Caitians. But his family back on Cait don't speak to him any more, because he chose to join Starfleet instead of staying at home and running their business. Imagine how you'd feel if your family did that to you?\"\n\nThat made Sasha pale. She had wanted nothing more than to be in Starfleet, like Mom and Dad. Who could be so mean to their child? \"Is he lonely too?\"\n\nMom's tears returned. \"I think so.\"\n\nSasha stared hard. It wasn't fair, saying that about him! She wanted to hate him! How was she supposed to do that?\n\n\"Hannah?\"\n\nMother and daughter dried their respective tears and looked over at the silhouette in the doorway to Sasha's bedroom, Mom saying, \"You didn't have to get dressed, Esek.\"\n\n\"Sorry, Hannah, but I'm afraid I did; I got a call from the Furyk. There's a Nausicaan raider spotted in the freight lanes waiting for the next shipment from Deneva. Sasha, may I have permission to come into your room, please?\"\n\nMom looked to her, the woman's frustration at the turn of events for the evening obvious. \"Well? May he?\"\n\nSasha looked to him, nodding without saying anything, hoping they realised how difficult it was for her to do even that.\n\nHe strode in, his hands behind his back until he dropped to one knee beside the bed. \"I was going to give this to you in the morning, but since I won't be here...\" He held up a Starfleet Huggable: a Caitian one, complete with pointed ears and a curling tail. \"We were cleaning out our cargo bays on the Furyk, and found Captain Fuzzybutt here. Everyone else wanted to flush him out the airlock, but I thought he might find a good home with you.\" He held it out to her. \"What do you think?\"\n\n\"Sash?\" Mom prompted.\n\nThe girl accepted it perfunctorily.\n\n\"Well?\" Mom added, more forcefully.\n\n\"Thank you.\" Sasha offered, still without looking at him. She had used the words plenty of times to Hrelle, along with 'Hello' and 'Good Night' and 'I'm Sorry' - and never meant any of them at any time. She thought she was getting good at it.\n\nAnd he was too stupid to notice. \"You're welcome.\" He rose again, looking at Hannah. \"I'll wait for you in the living room.\"\n\nMom nodded as he departed, smirking at Sasha when they were alone again. \"Listen to him, 'cleaning out our cargo bays'. He's been searching for one of those for weeks now for you. He ended up trading a whole crate of Spican flame whiskey for it with a Miradorn freighter captain.\"\n\nSasha set the toy aside. She didn't need his replicated garbage.\n\nMom frowned at the response. \"You *do* know it's an original, don't you?\"\n\nSasha looked up again, not believing her. Then she picked up the doll, turned it around and lifted up the back of the uniform jacket, finding the latinum dot of authenticity and number, something that couldn't be replicated, or even been put through a transporter beam, but hand-crafted on Earth and physically exported! But it was worth a fortune! She'd seen the prices of them in catalogues!\n\nWhy would he do that, after the way she treated him? Why?\n\nMom rose to her feet. \"Now, I want you to get some sleep, and-\"\n\nBut Sasha threw off her bedcovers, Captain Fuzzybutt still in hand and the tails of her nightdress fluttering as she raced into the living room, where Hrelle was standing, looking bemused at her. \"Sasha?\"\n\nShe barrelled into him, hugging his big belly as much as she could. \"Thank you! Thank you! THANK YOU!\"\n\nIt was the first time she meant it.\n\n*\n\nSasha stormed back into the campsite and took her place back among them, kicking a rock and cursing for good measure. Everyone stopped chatting and looked at her, before Neraxis finally observed, \"That was quick. Didn't stay for seconds?\"",
        "Sasha glowered. \"Didn't stay for firsts. I... changed my mind. I know I could have gotten away with it, I know no one would have told, I know it's a stupid regulation. But I didn't.\" She looked to Kit. \"I guess you were right: a tree that falls in the forest and no one hears it still makes a noise.\"\n\nKit nodded, looking pleased with her decision.\n\nThen Jonas blurted out, \"I'm glad.\" When Sasha looked at him, he looked back, both hesitant at being the centre of attention and emboldened. \"I'm sorry, Sash, I know you wanted to be with him, and I know it's selfish of me, but... I like having you as our leader. I don't want you to risk being kicked off the program for a... a bit of fun. Especially with Mister Galactic Gigolo. You deserve better.\"\n\nEydiir, sitting beside him, patted him on the shoulder. \"Well said, Jonas!\" She looked at Sasha. \"He is right; it is honourable that have kept your word.\"\n\n\"How did Jared take it?\" Neraxis asked. \"Leaving him like that?\" \n\nSasha stared into the fire. \"We had a fight. He... compared my Dad to an animal.\"\n\nThe group went quiet.\n\nUntil Giles asked, \"Is Jared still alive? Do we need to pack up and run for the border?\"\n\n\"He's still alive. I only punched him.\"\n\n\"He deserved worse,\" Jonas said.\n\n\"No argument there.\"\n\n\"If you desire,\" Eydiir suggested. \"I can creep into their camp and secretly infect him with a local fungus I identified that will cause extreme and lingering scrotal irritation.\"\n\n\"What? You can't do that!\"\n\n\"Yes I can,\" the Capellan insisted. \"I am very stealthy.\"\n\n\"And if you're on the rebound,\" Neraxis offered, nudging Jonas' other side. \"You can date Scrappy here. He hasn't stopped talking about touching your boob since you left.\"\n\nRusset-faced, Jonas started to protest, before just giving up.\n\n\"How about we all just sit here, have our terrible food and tell stupid jokes?\" Sasha decided, looking down at the remains of her ration bar on the ground, where the local insects were giving it a wide berth. \"I hope Dad is happy making us eat this- Dad!\"\n\n\"What is it?\" Giles asked.\n\nShe didn't answer, rising and heading for the shuttle, suddenly remembering the bag her father had given her before they left the Surefoot, but she had been too busy making an absolute balls-up of their Away Mission to remember it until now. She found it and returned to the camp, noting its weight for the first time. \"What the hell did he pack in here for me?\"\n\nShe set it down before them, opened it and rummaged through the contents, removing a series of foil packets and holding them up to the light to read their labels. \"Hey! There's wasabi nuts, licorice, Jelly Novae, Crunchicles, Betazoid chocolate! All kinds of snacks!\"\n\nThe others leaned in longingly, as she started handing them out, her mouth watering. \"Seven Hells, we've got Potato Rods, gumdrops, Honey Hortas- wait, are these... sugar-coated locusts?\"\n\nKit held up his hand. \"Respected Squad Leader, if no one else would like those-\"\n\nShe threw the bag at him as she continued removing the contents of the satchel. \"Self-popping popcorn, Mugatu Chews...\" She drew out a bottle in a refrigerated sheath. \"Aldebaran Whiskey?\"\n\nGiles reached out and took it. \"You guys can keep the rest, I'll manage this.\" Then his smiled dropped as he read the label further. \"Wait, 'Non-Alcoholic'? Son of a...\"\n\nNeraxis guffawed, spitting wasabi nuts out of her mouth before collecting them from the ground again. \"At least it's chilled.\"\n\n\"Speaking of which,\" Sasha murmured, withdrawing another refrigerated container. \"Chocolate Wobble ice cream! It even has spoons.\" She passed that along, laughing with delight, immediately taking back everything she said and thought about her father since their departure. What a wonderful way to end the Away Mission- \"What the-\"\n\n\"If it is more insects-\" Kit started.\n\n\"No, it's...\" Sasha replied absently, withdrawing a plush toy, soft, furry... and intimately familiar. \"It's... Captain Fuzzybutt.\"\n\nThe Squad looked up at her, Giles asking, \"What?\"\n\nShe held it up carefully to the light. It was indeed her old Starfleet Huggable. It even had the latinum dot and authentication number; she knew that number by heart, what with all the times she had shown it off to her fiercely envious friends. She was stunned. \"It's Captain Fuzzybutt. Dad got him for me when I was seven. It was early on in his relationship with Mom. I was so mean to him back then.\" She was overcome; tears poured down her cheeks, in a way that didn't when she fought with Jared.\n\nEydiir leaned closer, concerned. \"Are you okay?\"\n\nShe nodded, wiping her face but still staring at her old toy. \"I couldn't find it after the attack on Salem Four. After my Mom was killed and Dad went missing. I thought it must have got lost when they packed away all our things and I was shipped to Earth to live with my grandparents. Dad must have found it again when he got access to her possessions.\" She hugged it tightly, remembering the feel of it against her cheek, the smell of it. \"I never kept it with the others in my collection; it always slept with me when Dad was off on a mission. I'd talk to him through it and- and-\" She sniffed and looked up. \"Sorry, guys. Some Squad Leader you ended up with, huh?\"\n\n\"No one's complaining,\" Jonas assured her, smiling.\n\nEydiir stuck out her jaw. \"And if anyone does complain, I will chastise them.\" She glared at Giles as she declared this.\n\nGiles had been drinking the fake whiskey, but now stopped and stared back. \"Why are you looking at me while you say that?\"\n\n\"Based on past experience I am assuming that you will be the one to say something foolish.\"\n\n\"Oh, go polish your kligat, you barbarian.\"\n\nSasha was grinning at them. \"You know, I think you two really like each other.\"\n\nBoth of them looked at her, Eydiir declaring sharply, \"A woman embracing a stuffed effigy is in no position to judge others.\"\n\nSasha brought the doll closer, whispering in its ear loudly enough for them to hear, \"Don't listen to them, they're just jealous.\"\n\nEveryone continued munching and drinking away, no one arguing with her.\n\nTO BE CONTINUED"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "science fiction",
        "space",
        "federation",
        "caitian",
        "starfleet",
        "starfleet academy",
        "starship",
        "alien11111",
        "fanfiction"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-field-trip-ch-05"
}