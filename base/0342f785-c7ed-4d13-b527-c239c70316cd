{
    "title": "Impact of Collision Ch. 02",
    "pages": [
        "So hopefully you have read Chapter 1 before starting on this Chapter, if not I would encourage you to go back and have a quick read. There have been a few edits since the original posting.\n\nAgain, this is a collaboration with the wonderful SiteNonSite.\n\nAnd as always I encourage you to take the time to read all of SiteNonSite's stories, if you haven't already.\n\n<hr>\n\n<div style=\"text-align: center\">Bachelorette</div>\n\n<br>\n\nI was lying in bed, my panties soaked, the wisps of a dream already breaking up. I'd woken up touching myself and cumming hard enough to make my back cramp and seize. \n\n'What did I call out?' I wondered. I'd woken up shouting but didn't know what. I'd never masturbated in my sleep before. I'd still been so deliciously turned on I couldn't help touching myself again. I struggled to recall the dream. Bits popped into my head, of watching Claire... or being watched? Her against the wall, kneeling behind her, her bare ass... I was pushing my fingers over my hard clit and I stopped myself, remembered the movie, remembered the dream. As strange and disturbing as it was, I was able to shake it off.\n\n'Bad movies and pent-up frustration,' I told myself as I hopped out of bed. 'It's just been too long.'\n\nMy Sunday was otherwise uneventful, a phone call with my mom, brunch with my friends Darci and Kwasi in Fort Greene at a place inside an old liquor store. I stopped for eggplant and other fresh veggies before heading back to the food desert that is Midtown and then cooked a big briami for the week while cleaning my apartment. \n\n'You're a hell-raiser, Sarah Beth,' I told myself as I folded my laundry. \n\nI went to bed that night still feeling wound up and frisky. I pushed down my panties and kicked them off, spread my legs, and began to touch myself. I fantasized about being fucked outside, about being watched, of being fucked bent over the back of a car in front of passing traffic. All the hits. Nothing worked. I tried fantasizing about sucking Danny off. I even tried picturing that shithead William. I found myself imagining being caught masturbating in the ladies' room at work - a variation on a fantasy I've had since high school - but being scolded and watched by an older woman was dangerously close to the dream. \n\nI finally gave up, so frustrated I thought I might cry.\n\n<hr style=\"width:25%;margin-left:0\">\n\nI was happy to get back to work Monday. I showed up almost an hour early. Spent the time going through my harddrive and clearing junk off my desktop. By the time my boss Keith and coworker Ben arrived, I was cleaning the office. It was time well spent. Turns out we were on deadline with a week's worth of long late nights ahead of us. I was happy for the pressure, it made my week go by fast. \n\nI had thought about Claire on and off, our funny and friendly real life interactions, and considered calling her or dropping by the gallery. I thought about seeing if she wanted to meet for dinner or catch a show. The Go! Team was playing the Bowery, I wondered if she'd like them; tried to picture her jumping around in that crowd. I couldn't imagine it. \n\nI invited Darci and Kwasi instead, but they already had plans. I thought about inviting Kip from work, but as much as I like him, I knew he'll already have something ten times more fabulous planned. In the end I chicken out and don't go.\n\nBefore I knew it, it was Friday again. We'd finished the off-site I'd been working to prepare for all week. It was for staff from a bunch of other departments and was exciting. There were a couple glitches, but Keith congratulated me, saying he thought it went really well overall. It had already been a long day, and I felt spent but there was an obligatory dinner and drinks afterwards, making it even longer.\n\nThey took us to a steak place in TriBeCa. I'm a vegetarian, so while everyone else gorged, I picked massive sizzling cubes of lardon off an iceberg wedge, despite having told the waiter I'm a vegetarian. And while the crowd was friendly, they were mostly a decade or two older. As far as Friday nights go, I really wasn't feeling it. But for Keith's sake I wanted to be polite so I continued on to a bar nearby with the group for a couple more drinks. \n\nThe atmosphere at the bar was much more relaxed, everyone started to loosen up a bit with a few drinks under their belts. Kip was there, so I was having a great time until he abandoned me to chat up a beautiful young guy from the Business section and one of the guys from the Real Estate section began to hover. Suddenly I was really looking forward to going home. \n\nI was psyching myself up to tell Keith I was going to leave, when I saw Claire arrive with a group of women. She looked a bit out of place. The other girls looked bridge-and-tunnel. \n\nIt was a bachelorette party. They were super rowdy and one of the women wore a tell-tale plastic tiara. Claire wasn't rowdy like the rest, but she looked like she was having a good time. She's a lovely woman. Her friends were pretty, but Claire, with her long blonde hair pulled back tight and her tall lean yoga-figure stood out like a swan amongst geese. I wondered what her life was like, tried to picture where she might live, if she had met anyone nice yet. \n\nI got another drink, when a woman named Kathy from the Style section came over and started talking about something she wanted us to work on with her. \n\n'Not now, Kathy... it's Friday night,' I thought. \n\nPart of what I was up against at work was that my department was very new and very small, just my boss Keith and me, and Ben, our code geek. And almost no one at the Times understood what we did or what to do with us. Until a month ago they all seemed to think we were the bar-chart specialists, now we were the map people. Kathy was especially clueless, she wanted help with a PowerPoint presentation, which is not at all what we do.\n\n\"Yeah,\" I told her earnestly, \"let's check in on Monday to discuss it further.\"\n\nI don't think Claire saw me, and while I wanted to go say hi, I didn't want to intrude on her fun. I was also feeling a little overserved and figured I'd better make my exit before I said something rude to Kathy or one of the others, but I urgently needed to pee first. \n\nWhile waiting in the queue at the toilets, someone crashes into me from behind, I turn, ready to give them hell, and see Claire's laughing smiling face. \n\n\"I think it's really your turn to run into me? But who's counting...\" she quips. \"What are you doing here?\"\n\n\"Obligatory after-conference drinks with work peeps,\" I explained as she embraced me and greeted me with a kiss on each cheek - much wetter and warmer than the last two. \n\n\"New York is the biggest small town in the world, right?\" She asks, flushed and wet lipped, her eyes looking a little glassy. \n\nI suspect I'm not the only one feeling overserved. \n\n\"I saw you with your group,\" I admit, \"but I didn't want to intrude-\" \n\n\"Say, do you want to get out of here, maybe get a bite?\" She asks, glancing around nervously, a slightly desperate look in her eyes. \"The bachelorette has started asking about my date for her wedding. Turns out ALL of her friends have brothers they want to set me up with.\"\n\n\"Ergh, don't tell me you're the only single lady in that group?\"\n\n\"Yeah... Jessica is wonderful. She's engaged to one of my best friends from school, but I don't really know any of her friends, and I'm really not keen to be a date for some Jersey Shore type... oh God, you're not from Jersey are you?!\"\n\n\"No,\" I laugh, \"Buffalo, which is just as bad, if not worse.\"\n\n\"No,\" she says firmly, giving me an appraising look. \"Definitely much better.\"\n\n\"Well,\" I stammer, blushing under her warm regard, \"I'm done with my thing, I was just about to sneak out when you caught me. Sooo... where do you want to go?\"\n\n\"Anywhere really; anywhere that's not this fucking bachelorette party... Hey,\" she started, abruptly shifting tone and making a comically apologetic face, \"do you think you could, uhh, maybe pretend to be a drunk friend I need to take home, so, you know it won't seem like I'm ditching?\"\n\nIt wasn't a big stretch actually. While I had only meant to have a couple drinks, thanks to Kip I'd had a few. As I hadn't really eaten and the cocktails were strong, and I am a total lightweight... I am truly deep in my cups.\n\n\"I can be your drunk,\" I tell her dryly, eliciting a big smile, \"but first I have to pee.\"\n\nWe're at the front of the queue and the door opens for me. I'm a little bit surprised when Claire ducks in with me, but she puts herself at the sink and opens her purse, looking at herself in the mirror as if it were nothing at all.\n\n\"So what's new with InfoPorn?\" she asks as she examines her lips. My panties are half down, but I stop short. InfoPorn was the studio name I'd used when I got out of school, before I got hired at the Times. (My mother is still furious about the name.) Claire looks at me in the mirror as I hover in surprise over the toilet seat. A sly smile steals across her face as I sit down. \"I Google stalked you,\" she admits. \"There aren't that many Sarahs doing 'information visualization' at the Times - you're kind of a big deal!\"\n\nI blush at the compliment, or maybe because I'm still hovering bare-assed, and she's smiling at me in the reflection. I continue to pull my panties down and lower myself to the toilet, mumbling something about awards being stupid. \n\nI googled Claire as well of course, finding her gallery online, looking at her picture in the directory, sleek and stylish, and then pages of pics of her at parties on social blogs; New York, Paris, London... Looking at them, her beautiful outfits and fashionable friends, I had wondered if I was jealous of her, if perhaps that's what the dream was about. I can feel myself blushing scarlet now at the thought of the dream. I fight the impulse to hide my face in my hands.\n\nDon't get me wrong, I am proud of my looks. I dated the most popular guy in school and was the Homecoming Queen (and valedictorian). But no one would ever describe me as sleek or exotic. I'm more like the \"girl next door\" and Claire is a \"supermodel\". \n\nI've definitely struggled with my self image. My mother says I'm \"womanly.\" I'm skinny-fat and try to dress cool, or cool enough, but my boobs and ass are big and don't lend themselves to haute couture. Danny used to say I could have been a stripper. Claire's figure is the figure I always wished I had, and her fashion was next level. I tried not to think about it too much as I sat on the cold toilet seat and forced myself to relax enough to pee.\n\n\"Do you like tapas?\" Claire asks, she's was applying lipstick. She looked like a model. Like a photo of a beautiful woman putting on lipstick.\n\nI told her I did.\n\n\"Have you been to Puerta Roja?\" she asks, \"it's not far from here, and I've been meaning to try it.\"\n\n\"No, but I've heard it's amazing.\"\n\n\"Perfect, it's right around the corner from my place, and I've never been!\" Claire's enthusiasm is plain, she's looking at me as I finally let go and pee. I can see the surprise in her eyes and feel myself once again blush furiously. It's a Niagara. \n\nBut she seems unfazed. Looking away as if nothing is happening, she says, \"your work is really lovely. I expected something dry...\" she glances at me and pulls a comic face, \"Clinical? But it's much more abstract and fantastic than I ever imagined charting data could be. To tell the truth, I didn't really know what I was looking at most of the time, just that it was exciting and beautiful.\"\n\nShe is doing her eyes now, politely speaking over the thunder of my pee. Again I want to hide my face, but instead, I think I do a pretty good job of seeming nonchalant. \n\n\"The big interactive election map the Times did last month,\" she asks after I finally stop peeing, \"was that you?\"\n\n\"Yes!\" I chirp. Trying to clean myself without looking like I am, but Claire is so absolutely unfazed. I don't get any sense that she cares at all - so I do my best to follow her lead. \"...or at least, it was my team. It was my boss Keith's brain child. But yeah, I worked on it.\"\n\n\"It was really amazing,\" Claire tells me. \"No, really! That was great journalism. I was very impressed. I felt like I really got what happened in a way that no article had made clear.\"\n\n\"Thanks!\" I am pulling up my panties, this is all so strange and funny, but also so fun. I'm so excited that Claire gets it - that she gets me.\n\n\"Do you write code?\" she asks.\n\n\"Some, but I really should learn more. We have a full time coder named Ben,\" I say, gesturing vaguely to the outside world. The world of Keith and Ben and Kathy and the rest, all of whom seem infinitely distant from our little bathroom stronghold. \"I studied design, but I used to do all my own code, so I'm good in a pinch.\"\n\nClaire gives me an appreciative look and makes room for me at the sink so I can wash my hands, but before I can freshen my makeup she stops me.\n\n\"Nope, no makeup, drunks don't do makeup, time to be my drunk!\"\n\nShe brushes her fingers across my lips giving my lipstick a little smear. I feel a jolt of excitement and fear as she did.\n\nI hadn't really pictured making a drunken exit... the bar is crowded - what if Keith or Kip or someone else from the paper sees me? But then I think of Claire calling me a gem after I'd spilled wine over her, and I smile. \n\n\"What do I do?\"\n\nClaire puts an arm under mine and around my waist, supporting my weight and I slump into her.\n\n\"This isn't the first time you've done this,'' she accuses. I smile and do my best drunken giggle. \n\n\"You'rrrre shooo nishhe,\" I slur. \"How's that?\"\n\n\"Holy shit, you're much better at this than I expected... Here we go!\" She tells me as she opens the door and guides me through the crowd. With comic timing we almost bump right into the bachelorette, so I let my momentum carry us, making sure we do. \n\n\"Claire!\" she says in surprise, a pink penis-shaped drinking straw dropping to the floor from her mouth and spilling her watermelon daiquiri down my bare leg. \n\n\"Jessica! Oh my gosh, Jessica! Jessica, this is my friend Sarah!\"\n\n\"Whatsh her name?\" I ask Claire, who fought not to laugh. \n\n\"Jessica, I ran into Sarah in the ladies room,\" Claire explains, and then in a stage whisper, \"I think she's had a little too much to drink.\"\n\n\"TooMUSH?!? I'm fine...\" I declare, but let the daiquiried leg slowly slip out from under me, dragging Claire down, who has to struggle to right and support us both.\n\n\"Oh, Sarah, it's so nice to meet you!\" The fear in Jessica's eyes is palpable. She did not want her party saddled with some random drunk bitch.\n\n\"I'm so sorry Jessica, but I think I should probably take Sarah home, you know, before...\"\n\n\"Are you a queen?\" I ask, narrowing my eyes at Jessica suspiciously and making Claire stutter with laughter for a moment.\n\n\"Oh I totally understand...\" Again, if Jessica is making any attempt to hide the relief in her eyes, she's failing spectacularly. \n\n\"Why does your crown have dicks on it, your highnessh?\" I ask, as Claire's hold on me slips. \"Are you shome sort of cock Queen?\"\n\nClaire is grabbing me, trying to regain her hold, pushing me past Jessica and towards the door. \"Sarah! it's Jessica's bache...\" \n\n\"Do you live in a beautiful phallush in an enshhhanted CONDOM?\" I interrupt, my voice getting louder the closer we get to the door. Claire all but shoves me out the door.\n\n\"Oh my GOD,\" Claire is hissing in my ear, choking back hysterics as we tumbled out onto the street, \"SARAH, where did that come from?!\"\n\n\"Too much? \" I ask, straightening up and instantly shrugging off my drunken routine for comic effect. \"You're a surprisingly terrible liar! I thought you were in sales?\"\n\n\"I know,\" she laughs. \"I'm a terrible saleswoman as well, but you... you are an actrice!\"\n\n\"Well, I may have done some theater in college,\" I tell her modestly. \"And you did say you wanted take-home drunk?\" \n\n\"Fuck, you are full of surprises! You really put on a fucking show. I think I'm going to keep you!\" she says through her laughter.\n\nWe are still holding onto each other, both of us laughing uncontrollably. My sides ache. Claire sees a cab and leaps into action, dragging me to the curb with her, she puts a finger and thumb in her mouth and whistles like a Goddamn steamship.\n\n\"Jesus!!\" I exclaim in surprise, holding my ear. But Claire pays me no mind, focused only on the cab sliding to a stop in front of us. And seconds later we are racing crosstown for tapas. \n\n\"You are a very good lady to have around in a jam,\" she tells me. \"I owe you a glass of wine.\"\n\n\"Just one?\" I ask, still soothing my ear with my finger.\n\n\"A bottle it is!\" She laughs.\n\nClaire buys way more than one bottle of wine. There's also dancing, and cocktails on the house, and possibly dancing on the tables... things are getting a little blurry. At some point, long after closing time, Claire decides it is time to go home.\n\n\"I am take-home drunk!\" She tells all our new found friends as we stumble out onto the street; this time in earnest.\n\nIt is a short walk, or maybe a stumble, to Claire's place. She is serenading the neighborhood on our way home. \"Je suis ton pile, tu es mon face,\" she vamps in a smokey husky voice. \"Toi mon nombril... et moi ta glace!\"\n\nIt is so beautiful and sexy. I can't understand what she is singing, but she sings beautifully, swinging her hips and smiles at me as she dances backwards down the block, pulling along me by the fingers. \"Tu es l'envie et moi le geste, toi le citron et moi le zeste! Je suis le th\u00e9, tu es la tasse, toi la guitare et moi la basse!\"\n\n\"That'sss such a beauuuutiful song,\" this time not even faking my slur.\n\n\"Oui, c'est une chanson fran\u00e7aise des amoureux.\"\n\n\"My Frencshh is merrrrde, what's it mean?\" But she won't tell me, and then I wipe out, sprawling across the pavement. \n\nClaire's place is enormous compared to my little apartment, despite her efforts to convince me it's small. It has high ceilings and huge double hung windows facing the street. She sits me in a chair and gets me a glass of water while I study the wreckage of my shoe. The heel has sheared off and is dangling by a strip of leather. \n\n\"I'm really ok,\" I tell her. Too loud, she's already back, I'm shouting in her face. \"I'm just such a klutz,\" I whisper. \n\n\"Here, drink this,\" she commands, handing me a glass of water. Her eyes look a little out of focus. But then she reconsiders, and taking the glass back, takes a long draft before handing it back to me, disappearing again. The water is wonderfully cold and I take greedy gulps, emptying the glass. Claire is back with a wet washcloth. She kneels in front of me, and dabs at my bloody knee.\n\n\"Your French is beautiful,\" I tell her. \"Where did you learn?\"\n\n\"Paris,\" she says with a smile. \"I'm French.\"\n\n\"You have no accent.\"\n\n\"I grew up in Asia. I went to American international schools.\" She takes my hand and is cleaning the scrape on my palm. \"It's not so bad.\"\n\nThere had been a number of times that night - that I'd said something about a tv show or someone had referenced politics or an event - and Claire had looked strangely blank, a little confused. Almost like she hadn't understood the words. It made sense now. The references were lost on her because she hadn't grown up here, she just sounded like she had.\n\nShe was looking up at me guilelessly; those enormous eyes, that too-pretty face. I realize I'm staring.\n\n\"I'm so sorry, I should just go...\"\n\n\"Noooo... stay!\" she says, looking up at me. \"Please. It will be fun, a sleepover? It's almost morning.\"\n\n\"I feel so bad.\"\n\n\"Shhh. Enough of that. Let's get you ready for bed.\" Claire is standing and offering me her hands. I put down my glass and take them. She dances me to the little bathroom, one hand in mine, held high, the other arm tight around my waist. Parking me in front of the sink she leaves me while I wash my face and brush my teeth with my finger. ",
        "\"Do you have something I could sleep in?\" I call through the door. \n\nThere's a loud crash of something large falling over and she reappears at the bathroom door, eyes wide and a big goofy grin on her face.\n\n\"It's fine! Everything's fine!\" She exclaims. \"Here.\" \n\nShe shoves a towel and a t-shirt at me and closes the door. I pull my dress over my head and hang it on the door. Undoing the clasp of my bra I look at myself in the mirror. \n\nI look drunk. My nose and cheeks are flush, my hair is a bit wind-blown. My makeup's a mess. \n\n\"Drunks don't do makeup!\" I whisper to myself.\n\nEven if my eyes and lips are smeared, my hair actually looks really good, all loopy curls and coppery highlights.\n\n\"I should get drunk more often.\"\n\nI get a lot of compliments on my hair, I think because of the strawberry blonde color, but maybe because it's so thick. My breasts are both my favorite and least favorite feature. I touched them now, hefting their weight. My nipples are puffing up. \n\n\"Now, now,\" I warn them.\n\nI remember Claire's comment at the tapas bar. She had told me I looked like Emilia Clarke and how much she liked my eyebrows. I look at myself with new pride and think about her dark hard nipples. \n\n\"What are you doing Sarah?\" I mutter to myself. I'm squeezing my breasts.\n\n\"What?\" Claire calls from the other room. \n\n\"Nothing!\" I call back, jumping into the shower. I take a quick cold rinse, just enough to wash off the sweat of the dancing and grime of the city and sidewalk - and hoping the cold would maybe sober me up a little. Drying off, I put on the t-shirt Claire had given me. It was a little small, a bit tight across the boobs, not quite reaching my panties. \n\n'It's my turn to put on a show,' I think bleakly, looking at my hard puffy nipples.\n\nI take a deep breath and open the bathroom door feeling very self conscious (and still every bit as drunk as before my cold dowsing). But the lights are already dimmed. \n\nClaire is wrapped in a towel. She is pulling back the covers on the bed, looking like something out of a catalog; the enormous windows, her beautiful white bed and overstuffed duvet, her perfect Parisian silhouette.\n\n'I would buy that bed,' I tell myself. 'I would buy that towel...'\n\n\"Come,\" she orders, stooping to pat the bed. I obey. She steps into the washroom as I make myself comfortable. I listen in the dark, my head spinning a little, as she showers and does her ablutions. \n\nNominally Claire's loft is a studio apartment, but it has 16' ceilings and is almost twice as big as my one bedroom apartment. The bedroom, where I'm tucked in, is to one side of the main space, there is no door, no \"bedroom\", just an alcove the size of my apartment with a big four poster bed, a huge antique armoire, and two massive double hung windows facing the street. At the back of the bedroom-alcove is the bathroom - again, twice as big as mine - with beautiful Victorian fixtures.\n\nThe main space is enormous with three more big windows facing the street. She has two large paintings, hanging facing each other. I'd just glanced at them when we arrived. In the dark all I can make out is the one on the far wall that looked like a drippy scrawl of Mickey Mouse, the other is hidden from me around the corner now, but was some sort of grid of tie dye or batik. \n\nBesides the kitchen, which is a simple industrial affair tucked in the back corner, the main space is relatively spare. Opposite the bedroom-alcove there is an antique \"secretary\" desk stacked with books and magazines, the latest aluminum monitor, and a minimalist keyboard. In the center of the space, facing the windows is a big white sofa that looks comfy and expensive and disturbingly like the sofa in my fantasy... I try not to think about that. In front of the sofa is an oval Saarinen coffee table and a couple of tulip chairs. \n\nThe ceiling of the loft is antique pressed tin, and ancient peeling paint. In the main space there is old track lighting, but hanging over the bed, from a battered rosette, where a chandelier or other fixture might have hung once upon a time, are dozens of bare incandescent bulbs, each wired to the same small point on the ceiling by black industrial electrical cable. One bulb would have looked like a construction site, dozens look like an inverted Edison bouquet. In the long light from the street lights the darkened bulbs are beautiful and sculptural. Like a smoky insect's eye looking down on me.\n\nThe bathroom door opens and throws a wedge of blinding light across the bed. I watch as Claire emerges backlit and then disappears again as the light goes off. Momentarily blinded, I listen as she pads over and slides in next to me, pulling the duvet up to her chin. \n\n\"We made it!\" She whispers, smiling across at me in the dark. \n\n\"I like your apartment,\" I whisper back, enjoying the conspiratorial mood.\n\n\"Thank you, but it's not really mine, it belongs to step-father,\" she admits. \"But I like it too. It's so New York.\"\n\nI would have called my ancient tenement and dark one room apartment in Hell's Kitchen quintessentially New York. Now I'm not so sure...\n\n\"Oscar was such a good dancer,\" I tell her.\n\n\"Yes, I think he wanted a taste of young Sarah,\" she enthuses. \n\n\"Nooo!\" I laugh. Oscar, the owner of Puerta Roja, had reminded me of a tall, thin Stanley Tucci. He had been charming and funny, making a great show of dancing with Claire and I at the same time - but he had also been at least sixty, maybe seventy. \n\n\"I think I would fuck Oscar.\" Claire tells me wistfully. \"\"It's been so long, I think I'd fuck just about anyone at this point.\"\n\n\"The tech bro?\" I ask, my eyelids drooping.\n\n\"No,\" she whispers, her voice husky, \"I'd never stoop to beastiality.\"\n\nWe can't contain our laughter at this. Suddenly somber and somewhat pensive, Claire mulls, \"But Oscar...\"\n\n\"Noooo,\" I moan. \"He's too old!\"\n\n\"Yessss!\" she hisses back. \"He's old and he's sexy. But honestly, I don't think he'll have me. He only had eyes for Young Sarah. You may have to take one for the team. I think I have a new favorite local, I won't lose it because you won't put out.\"\n\n\"Well I guess if that's what's at stake, I'll just have to fuck Oscar,\" I whisper sleepily.\n\n\"You're so good to me,\" she breathed.\n\n\"Anything for my Claire\" I mumble. I am starting to breathe heavy, slow and deep when Claire again puts her face close to mine.\n\nI must have drifted off. I wake up in the dark to the sound of rain. My face is in Claire's hair. It feels smooth and clean and smells deliciously old fashioned, earthy and sweet; like ambergris. I am spooning her, my whole body pressed against hers and my arm under hers, wrapped around her waist. I start to move back, to lift my arm, but she moans a complaint, and holds my arm in place with hers.\n\n\"It's nice,\" she murmurs.\n\nWhen I wake up again it's morning. Claire and I are a tangle of limbs. We're sharing a pillow. Her eyes are open, studying me.\n\n\"You're fun to sleep with,\" she told me, narrowing her eyes and curling the corners of her mouth into a mischievous smile.\n\n\"I move around a lot,\" I apologize.\n\n\"You do,\" she agrees. \"But you're gentle and soft and warm. It was quite nice.\"\n\nI can remember holding her in the night, my hand on her bare belly... I have a memory of holding her bare breast. My sleepy brain suddenly realizes something, I move my hand up her thigh to her hip, up her waist...\n\n\"You're naked?\" I murmur in my drowsy haze.\n\n\"Yes,\" she tells me simply, as if it were nothing at all. I looked at her smiling face, her clear hazel eyes. Maybe it is nothing at all?\n\n\"Brunch?\" she asks.\n\n\"Tylenol?\" I beg.\n\n<hr style=\"width:25%;margin-left:0\">\n\nThe day is bright and clear. Claire takes me to a tiny restaurant called Smith and Mills for brunch. Their bathroom is built inside the cage of an old elevator and has a strange folding sink. It's crisp, but warm enough in the sun to have their doors open and we sit outside drinking Bloody Marys and eating eggs. Claire tells me about her brothers, her family in France and Germany. Her feelings of dislocation in Paris, and now New York. I tell her about my parents, about my brother and sister, and Danny, about escaping Buffalo, about my own loneliness, at Brown and here. \n\n\"We didn't have things like homecoming,\" Claire says, sounding almost jealous. \"I just know it from movies.\" Being the Queen must have been fun, all the attention?\"\n\n\"It was,\" I admit. \"But it was mostly about Danny, I'm not friends with any of those people anymore. Going away was like I was somehow judging them... maybe I was.\"\n\n\"Why didn't you have more friends at Brown?\" Claire wonders, looking at me hard. Maybe she wonders if I'd done something bad. Had I?\n\n\"I don't know. I'm naturally a bit of an introvert? I think that's part of it. But I think, in all honesty, being with Danny isolated me? I was never fully there,\" I admit. \n\n\"But not any more!\" She tells me, and her face lights up - maybe seeing I was going to a dark place. \"Now you are HERE!\"\n\n\"YES!\" I agree, realizing she's right, I didn't feel lonely at all. \"New York is where I want to stay!\"\n\nCatching me by surprise, our waiter sings out, \"I get allergic smelling hay!\" \n\nClaire looked on in confusion as the two of us laugh at his Eva G\u00e1bor impersonation. As soon as he steps away, I turn to Claire and explain Green Acres as best I can.\n\nAfterwards we walk up the Hudson River Park. We lay in the grass on a pier, Claire's head in my lap, talking and napping. She tells me about growing up in Bali, teaching me to count to ten in Balinese. \n\n\"This is the best date I've ever been on,\" I tell her. We are walking arm-in-arm up the Highline through Chelsea drinking \"New Orleans-Style\" iced coffees. Claire had been telling me about Sarah Sze, who's artwork dots the elevated park. \n\n\"It's true!\" Claire laughs. \"All that's missing is a romantic home cooked meal.\"\n\n\"I can make us dinner!\"\n\n\"Oh no! That's not what I meant-\"\n\n\"I know, I know!\" I assure her. \"But I have everything for a massaman curry, and I need to make it tonight.\"\n\n\"Really?\"\n\n\"Why not?\"\n\n\"And it's only fair,\" Claire says. \"Since I showed you mine, you can show me yours!\"\n\nI stare at her in surprise, picturing her climbing out of bed naked this morning.\n\n\"Your apartment,\" she says with a wicked grin, laughing at my rising color. \"I can't wait to see your apartment.\"\n\nWe dismount the Highline to buy wine, which Claire chooses after much deliberation with a smitten wine store clerk. She ends up choosing four bottles, and smiles when I look at them in alarm.\n\n\"Always better too much than too little,\" she explains. \n\nI'm a bit self conscious about my neighborhood, which isn't really a neighborhood at all. \"It's technically the Fashion District?\" I tell her. \"But I think that was a rebrand because real estate agents hate saying Hell's Kitchen.\"\n\nMy building is the only tenement on what is otherwise a rowdy commercial street. The store fronts are all big fabric wholesalers and jam packed trimming and notion stores - most of which are closed on the weekend. No tapas places, no restaurants of any kind, and what passes for a bodega is a corner store that mostly caters to the weekday lunchtime crowds. So my block is super quiet on the weekends - kind of desolate, but in a good way, kinda?\n\nMost of the block is tall loft buildings. Judging by what I can see from my windows, some are offices, others workshops and warehouse spaces stacked with boxes, a few seem to be occupied, there are big all night parties on the weekend sometimes. The curtain wall is a sheer black canyon wall, no setbacks. The once-beautiful brick and terracotta facades and windows are all filthy with soot and blend to be more of a dark stony surface than architecture. \n\n\"Beautiful\" she says, surprising me. I realize she's looking at our feet, at our shadows.\n\nAnd she's right. Sunsets are especially lovely this time of year because before the sun goes down it throws long golden light crosstown from the Hudson. Our shadows are fantastically elongated beings as we walk arm and arm. \n\n\"My boss Keith told me it's called Manhattan-henge,\" I tell her. \"It's supposed to line up straight down the street any day now.\"\n\n\"It's super cool here,\" she says seriously, peeking through the steel shutters at a display of buttons and zippers. \n\n\"The entrance is gross,\" I warn Claire as we approach my building. \"But I can walk to work and it's rent controlled.\"\n\n\"Did you live here with Danny?\" she asks, ignoring the scratched and scoured plexiglass in the steel case door. Everything is covered in the remnants of ancient stickers.\n\n'Stickers must have been a big deal ten years ago,' I think to myself for the ten-millionth time. \n\n\"No,\" I tell Claire as we climbed the steps. The ancient bluestone stone treads are worn down to soft slumped saddle shapes. \"Danny wouldn't live in the city or sign a lease. We lived in a sublet in Hoboken.\"\n\n\"Jersey?\" She asks in horror.\n\n\"I know! We weren't there long, but I hated it,\" I tell her, thinking of the ratty little garden apartment he'd found. \"And the commute was awful.\"\n\n\"How did you find this place?\" She asks, as I unlock my door, a little winded from the walk up.\n\n\"Luck,\" I admit. \"A woman at work was giving it up and heard me talking to my boss about the break up; about needing to find a place.\"\n\n\"Oh Sarah, it's wonderful!\" She says as I turn on the lights. Makes me smile. Janet, the woman who had handed the apartment off to me had made it really nice, and she left me almost all her furniture. But I'd painted, and while I don't have art like Claire's, I'd found cool things for the walls.\n\n\"You organize them by color?!\" Claire says, looking across at my books. She's making herself at home, kicking off her shoes and dropping her jacket on Janet's little loveseat. \"I've never seen that! It's so pretty!\"\n\n\"Really?\" I laugh, putting the wine bottles on the table and ducking into the kitchenette. \"I file that under things you do on a really boring weekend.\"\n\n\"Maybe you... oh, and you have wonderful books!\" The glee in her voice makes me feel proud. \"What is the 'Felton Project'?\"\n\n\"Aren't those cool? Nick is an amazing designer. They are annual reports of his life; the music he listened to, places he went... He's been doing them for a few years. I love them.\"\n\n\"Oh this is AMAZING! How have I never heard of this?!\" Claire asks. \n\n\"I opened the Albari\u00f1o,\" I tell her, handing her a glass. She's leafing through Nick's report, looking at the graphics.\n\n\"This is so funny, I love it... cheers Sarah, to new friends!\"\n\nShe looks me in the eye as we toast and drink. Smiling with approval at the wine.\n\n\"Yum! That is a very good little wine shop,\" she tells me, looking at her wine. \"Paula should order from them, but she has some place downtown she's married to.\"\n\nClaire stands in the door of the kitchenette (because there's not room for two) while I prepare the massaman, pulling everything out from the fridge, it's a quick prep cutting the vegetables. She babbles happily, keeping me entertained and asking gently probing questions. A new friend, feeling out a new friendship. \n\nI feel her curious eyes on me as I dry fry some of the spices. \"It's not traditional, but this will make it taste so much better.\"\n\nThe conversation stalls, temporarily, as I blitz the ingredients for the curry paste. \n\n\"That smells divine,\" Claire remarked, stepping in closer to smell the paste mix, before returning to the doorway, \"You make it look so easy.\"\n\n\"I've cooked for myself since I stopped eating meat, but cooking shows, ice-cream and movies were my break-up remedy. I guess this is the best part of that break-up,\" I offer, as I turn on the stove and put some oil in the pot and start to fry the curry paste a little with the potatoes and kumara before adding in the coconut milk and the rest of the vegetables. \n\n\"You have a lot of cook books,\" she observes, looking along the bookshelf. \n\n\"I started collecting them in middle school,\" I tell her. \"I wanted to be a chef when I was little. A couple of those are really old. The Louisa May Alcott Cookbook is all recipes from the book, Little Women - it was my first.\"\n\nDinner is almost ready and she is opening the second bottle. \n\n\"Saffron,\" she pronounces approvingly, handing me my glass to try. \n\n\"Wow, tart, that's really different,\" I admit, studying the cloudy amber \"orange wine.\"\n\n\"Give it a chance,\" she urges me. \"Once it opens up a bit, it will go really well with the curry.\"\n\nShe's right, it makes for a lovely pairing, and I tell her so. I put the rice and curry into warm serving bowls and bring them out.\n\n\"C'est d\u00e9licieux!\" Claire proclaims, helping herself to a little more. \n\n\"I'm so glad you like it!\" I tell her. We're sitting across from each other at Janet's miniature dining room table. A round oak antique, just big enough to seat two. She pours me the last of the \"orange wine\" and gets up for another bottle. \n\n\"LIKE IT?\" Claire asks in mock outrage from the kitchen, she is banging around looking for the corkscrew. \"Oh my God Sarah, that's the best meal I've had in months!!! You are going to make a wonderful wife!\"\n\n\"The wine opener is right out on the counter, it's red,\" I call to her. \"As for wife, I'll need to find someone who doesn't mind vegetarian...\"\n\nClaire re-emerges smiling and waving the little red corkscrew in triumph. \n\n\"I'd go vegetarian this minute if I got to keep you!\" She pledges. \"And giving up foie gras is no small thing for a Parisian... still, I wouldn't hesitate.\"\n\n\"Well thank you,\" I say blushing a little at the flirty compliment. \n\n\"Was Danny a good lover?\"\n\n\"What?\" I sputter into my wine, no longer blushing just a little. \n\n\"I'm sorry,\" Claire laughs. \"I didn't mean- it's just you were with him so long. I thought maybe...\"\n\nShe held her hands up, far enough apart for me to choke at the image.\n\n\"NO!\" I roar. \"I mean, Jesus, he wasn't a donkey if that's what you're asking.\"\n\n\"It's just that you were together so long,\" she tells me, pulling the cork with a satisfying pop. \"There must have been something?\"\n\n\"When we started dating I was really young,\" I justify. \"Danny was two years older, and popular - captain of the hockey team - handsome - all that. He just... he always seemed SO mature, and my parents really liked him... loved him. Our families went to the same church. I don't think he knew I was alive when we were growing up, but I always looked up to him and the other older kids. Honestly I think that's why we were together so long - the church, our families. Our parents were devastated when we broke up - still are.\"\n\n\"But you should be with someone that makes you happy,\" she says signaling for me to finish my glass. I obey and she pours me a dram of the new wine. I followed her example and swished my glass clean before drinking it all. She fills my glass then gives me a hard look. \"So was he any good?\"\n\n\"I was so young...\" I start. \"I haven't really been with anyone else.\"\n\n\"But you must have-\" Claire says, clearly shocked. I remember making out with William, his hands on me, how awkward it had been, how hard I'd tried. I can feel myself blushing. \n\n\"My first time was awful,\" she admits quickly, covering for my embarrassment, for which I'm grateful. \"He was an older boy, but clumsy and short lived, and too big.\" She held her hands apart again and we both start laughing hard, especially when she pantomimes holding something as big as a can of coke in one hand. \"Ah putain! This fucking donkey. I was horrified when I saw it!\"\n\n\"Did it hurt?\" I want to know. I've always been curious what it would feel like. Danny wasn't tiny, but he wasn't big either. I thought of the time Kwasi had shown me his erection, how long and thick it was. It had been on a dare, we had been playing some stupid drinking game, he'd turned so only I could see it. He'd rolled his foreskin back to show me his dark bulbous glans. I only had to look, but after looking in his eyes for approval I'd taken him in my hand. It had felt very different from Danny's, thicker and somehow denser. I couldn't imagine how it would feel inside. It must have shown on my face. Kwasi and the others had laughed at my expression as he'd put himself away.",
        "Claire's eyes narrow and she gives me a knowing smile. \"I think Young Sarah's curiosity isn't entirely idle...\"\n\n\"No!\" I cry, feeling myself flush.\n\nClaire is laughing very hard now, her face turning red as she desperately tries not to spit out her wine. \n\n\"You are a talented actrice,\" she tells me, \"but a terrible liar.\"\n\nI take a long drink, trying to cover my embarrassment, or perhaps drown it. I drop my eyes and bury my chin in my neck. \n\n\"Oh no! But don't feel bad, please don't hide. You mustn't!\" Claire beseeches. \"Besides, you have the prettiest complexion. I love how easily you color - there it is again!\"\n\nI cover my face, laughing at my own embarrassment.\n\n\"Really,\" she said prying gently at my fingers, \"don't feel bad. I will tell you about every big dick I ever had... especially if it keeps you blushing.\"\n\nAnd she does. And I do keep blushing. We had a bawdy raunchy night and Claire tells me EVERYTHING. We hoot and holler and God help us, we finish the fourth bottle. The kitchen is still a mess and the table a wreck between us. At some point Claire gets up to clear her plate and I see right away how drunk she is. \n\n\"No leave it,\" I tell her, standing, and realizing how drunk I am. I make an executive decision. \"Leave it all. We'll take care of it in the morning. Let's get you something to sleep in.\"\n\nClaire wrinkles her brow, perhaps preparing to refuse my invitation to stay, or protest her own sobriety, but then thinks better of it. Sticking out her lip in a pout, she puts down her plate.\n\nI wonder idly if it's because she realizes she was drunk, or because I'm going to put her in bed clothes.\n\nPerhaps it's a little vindictive of me, but remembering the tiny shirt Claire gave me to sleep in, I give her the smallest shirt I own. \n\nI debate whether or not to wear a t-shirt as well. In a moment of stubbornness, or maybe just wanting to show off for Claire, I choose my nightie.\n\nI am brushing my teeth when Claire comes in behind me seeing what I have on, she of course makes a fuss, laughing as I blush yet again. \n\n\"It's too lovely!\" she says, touching my shoulder, and turning me, for a better look. \n\n\"Itch wha I alwaysh shwear,\" I slush past my toothbrush and through my embarrassment, as I spin for her, painfully aware that I'm echoing her explanation from this morning for sleeping in the nude.\n\n\"Of course,\" she says, giving me a wry smile and asking to use my toothbrush. \n\n\"Jush ushe your finger!\" I mumble, watching her in the mirror.\n\nClaire looks adorable in my little black t-shirt. It shows off her belly. She's wearing black silk bikini panties that just cover the little triangular mound of her mons and sit low on her tush, leaving half her crack exposed. \n\nPutting the toothpaste on her finger, she brings it to her lips, looking at it suspiciously. She pushes it in her mouth and begins to scrub, her brows wrinkling, she glares at me in the mirror covetously, watching me brushing my teeth.\n\n\"How about you?\" Claire asks me once we are all tucked into my bed, her hazel eyes shining in the dark. \"What's the hottest thing you've ever done?\"\n\n\"I haven't done anything,\" I tell her. \"Nothing like you. No Algerians or Norwegians, just one Buffalo...\"\n\n\"Yes yes yes, but there must be something, a favorite...\" Claire says, her eyes hooded, lashes long and still moist from washing her face. \n\n\"Nothing as hot as the Norwegians,\" I admit, thinking about it. \"But Danny and I had sex in Central Park once... during the day. I came right away, like as soon as he pressed into me.\"\n\n\"Sarah, what a naughty girl. You've been holding out on me!\"\n\n\"It was just once, and it was over before it started,\" I tell her defensively, but then admit, \"I... think about it a lot.\"\n\n\"Mmmm,\" she almost moans in agreement. \"I have certain things I 'think of a lot' too...\"\n\nShe is smiling, her eyelids almost closed. I feel her shifting her weight, struggling with her shirt.\n\n\"...especially when I'm tired, but too worked up to sleep... like now,\" she whispers, her voice husky with sleep, the shirt pulling up over her face. \"I can't... this... let me?\" \n\nI'm falling asleep but grunt my assent as she squirms and struggles, finally pulling off the little black t-shirt.\n\nClaire settles down and shifts next to me, rearranging herself. My eyes are closed but I listen as her breathing changes, as she positions herself on her back.\n\nI am mashing myself deeper into my pillow when I feel her shoulder begin to make small rhythmic movements. At first I think I'm imagining it, that I must be... but I open my eyes a slit and I think I can see the duvet moving at her midriff, and then I most definitely see her other hand moving under the covers, moving over her breasts.\n\nI make myself go still. Did I tell her to do this? Is 'this' really what I think it is? My heart is thundering in my chest. I feel like she must be able to hear it. \n\nClaire begins to twist her neck with pleasure, as her knees rise and pull the duvet down to just above her nipples. Her bare shoulders are exposed. If I had any doubt before, all doubt is gone now.\n\n'Is this a French thing?\" I wonder. I am shocked, but also captivated. Keeping my eyes hooded, almost closed. It's like the dream, I am watching Claire, entirely rapt. \n\nHer shoulders are thin and lean. I feel like I can see individual muscles pulling over fine bones beneath her pale skin. The delicate blue veins of her neck showing as she stretches with pleasure.\n\n'She thinks I'm asleep,' I tell myself. 'If she knew I were watching she would be mortified.'\n\nI should be mortified. I am spying on her, but I can't look away. My whole body is flush. Part of what I'm feeling is shame. I have never been comfortable touching myself. It's something I do when I'm drunk and desperate.\n\n'And alone,' I think, a little unkindly. But part of what I'm feeling is shameless, remembering my fantasy of her naked, spread across the sofa; remembering the dream, the feel of her ass against my face. I take a deep breath, inhaling slowly, trying to keep from shaking, from making a sound.\n\n'Who am I to judge?' I wonder, as she moans softly and looks my way. My eyes are barely open. She can't see that I'm watching... I'm almost positive. My heart is thundering in my chest. I'm not shocked by what she's doing, I realize, I'm afraid she'll stop. My whole body is responding to hers. I'm getting wet.\n\nI can see Claire's shoulder really working now, feel her elbow moving against my belly. The mattress gives as she rolls her hips, and spreads her legs until one thigh is resting on mine, until the duvet was pulled down off my shoulder, down past her breasts. I can see her free hand squeezing and pulling at her dark nipple. They are stiff and long. \n\nHer breasts are smaller than mine, but not small, and exquisitely formed. They looked firm, standing up off her chest, topped by those dark confectionery nipples - which shine in the dim light of my bedroom. \n\nI want to touch her thigh resting on mine, I want to squeeze her but I don't want her to stop. I don't want to stop watching her, her small movements are like avalanches or explosions, but I am frozen - afraid if I move, she'll stop. Nothing left to watch. \n\n'She's masturbating in my bed,' I think. Realizing with a shock that I am squeezing my breasts and tugging at my nipples in sympathy. I know I should stop, that I should stop her, but instead I just try and hide what I'm doing, afraid she'll see, but unable to stop. \n\nI am quite certain I have never been as turned on as I am watching Claire. But I'm also certain that I have never been as sexy for anyone as Claire is being for herself. If I was a guy I would have cum just watching her. As it is I'm pressing my legs together as hard as I can and wishing I could touch myself. But I don't dare, for fear of shaming Claire, but also for fear of interrupting her. I don't want her to stop.\n\n'I want to see her cum,' I realize.\n\nClaire arches her back, her spread leg pressing down on my clenched thighs. The duvet is pulled down to her waist. I can clearly see her arm working at her center, a glimpse of her wrist appearing and disappearing beneath the covers. Her free hand is stroking her bare belly and taking swipes at her nipples, pinching them. But it's her face that has my attention. I thought I knew how beautiful Claire was, thought I'd seen her at her most elegant, but this was something else. I can see her blood moving in the flush of her cheeks, her skin seems transparent, seems to glow with the heat of her building pleasure. I am seeing her beauty for the first time, seeing it broken down by pleasure, deconstructed by ecstasy, and somehow rebuilt to an even greater height. \n\n\"Please...\" she begs, her voice hardly a whimper. The sound is so raw, so tender. \n\nShe's looking at me, but my eyes are hooded, almost closed, it's dark. Surely she can't tell I'm watching her. I'm drooling. I can feel the spit wetting the pillow under my cheek. Biting her bottom lip, Claire squeezes her eyes closed. Tiny beads of sweat make her forehead and cheeks glisten. An expression of intense concentration crosses her face and her body begins to shake, almost vibrate, as her hand works furiously, slowly moving the duvet down until she is entirely exposed. I can see her hand and fingers - wet and frantic between her thighs.\n\n\"huh huh huh huh,\" her breath pulses, soft bursts, almost gasps.\n\nIt all stops, resolves for a brief instant as relief washing over her face. She closes her eyes and goes rigid, her whole body straining. Her jaw hinged as wide as it could go, making an almost silent cry as she cums against me.\n\n\"aaaaaaassassaaa!\"\n\nI lay there in silence, the covers are pushed down to our thighs. I can hear Claire regaining her breath, ragged gulps of air slowly morphing into deep rhythmic respiration. After a time she begins to snore very softly. I can smell her. \n\nI am wide awake, all I can think about is her movements and how I could feel them, her thigh pressing against me, how beautiful she was as she came. I want to touch myself, but I don't dare, terrified I'll wake her. I watch her sleeping, naked and uncovered, replaying her actions in my mind. The more I think about it, the more incessant my need. \n\nI picture myself masturbating in front of Claire, of her watching me like I just watched her. I imagine spreading my legs wide, so she can see my fingers going in and out. The images get more and more extreme and lewd until I imagine kneeling over her face, rubbing my clit and squeezing my breast as she looks up at my pussy. In my fantasy my pussy is shaved bald. It's wet and smooth, hanging just above Claire's open mouth. It's so obscene. It's enough, I feel like I might cum just thinking about it. \n\nI imagine looking out the windows and seeing a face watching us from a window across the street. Seeing me straddling Claire's face. I begin to shake and shudder. I'm cumming. I haven't even touched myself and I have to stifle a cry as a powerful orgasm blows through me.\n\nIt is a very long time before I'm able to fall asleep. \n\n<hr style=\"width:25%;margin-left:0\">\n\nI wake up to the sounds of Claire moving around in the kitchen and the smell of coffee. Light is streaming in from the street, lighting up the bedroom's western wall. \n\n\"Good morning, beautiful!\" Claire says, smiling and handing me a cup of coffee, and taking a seat on the edge of the bed next to me. My nightie is rucked up, I pull it down covering my belly. Claire is back in the little black t-shirt. Her hair pulled back. \n\n\"I need to go,\" she says, making a sad face. \"Our artist arrives from Paris today and Paula, my boss, wants me to meet her at JFK. I cleaned the kitchen. How great is this Julius Caesar poster? How did I miss it last night? Is it ok if I take a rinse?\"\n\nThis all comes out in an exuberant rush. I nod and watch her disappear into the bathroom through sleep-caked eyes and reappear almost instantly, looking fresh and smelling of my soap. She gives me a quick kiss on each cheek and in a swirl of words she's gone. \n\nMy head was pounding. I couldn't remember having drunk that much in, well... since the night before. I'm not sure I can keep up with Claire. Next to the coffee on my bedside table was a glass of water and two Tylenol. I took them, and gulped at the water. It was cool and fresh. Rolling over I pulled the duvet back over my head, in an effort to block out as much light as I could, I took a deep breath. \n\n\"Lucky girl,\" I told myself.\n\nHead under the covers, I could smell Claire on my sheets, her old fashion smell I found myself imagining came from some legacy perfumery in Paris, but also the smell of her sex. She had marked my bed. I closed my eyes, slipped in and out of a light sleep, and dreamed of our tangled limbs. \n\nI got up a couple hours later and found my kitchen clean and everything put away where it belongs. There was a thank you note on the little dining room table.\n\n<p style=\"margin-left: 50px; margin-right: 50px\"> C'\u00e9tait une d\u00e9licieuse soir\u00e9e, merci beaucoup. \n\nJ'avais la peau du ventre bien tendu.\n\nxoxo C</p>\n\nI decided to take a soak. I stood shivering in the bathroom, the tap roared with water. I looked at myself in the mirror. My hair was a fright. My nightie is see through, I could see my breasts clearly; my nipples. \n\n'Why did you wear this?' I wondered. I felt foolish; blamed myself for what had happened. If Claire had known I'd watched what would she think of me? I tugged at the hem of my nightie. I felt silly and more naked than if I weren't wearing anything at all. \n\nI lifted the frilly transparent thing over my head and hung it on the door; pushed my panties down. I left them in a pile on the floor and stepped into the tub. I tried my best to a the heat deliver me from my shame and embarrassment. I pushed myself under the water; held my breath as long as I could, perhaps I hoped my regrets and misgivings would dissolve? When I surfaced my chest was still tight with the feeling that I'd made a terrible mistake. \n\nI covered my eyes with a wet washcloth, but I kept seeing Claire's face as she cums. I thought of my fantasy; of her sprawled out on the white couch, her legs spread, her pussy bald. I'd seen Claire naked twice now - glimpsed really, too shy to have actually looked. I'd watched her masturbate, but again, not bold enough to have raised my head and watched. I haven't actually seen her bush. I wondered if she is shaved... she could be, or it could be trimmed very short.\n\nI soaped up my legs and began shaving. I don't have a lot of body hair, and what little I have is translucent and reddish, so fine it's almost invisible. Still, moving slowly and taking much more care than I might normally, I shaved my legs. Repeatedly soaping my hands and using the lubrication to feel for any errant stubble, I went over and over them until my legs were perfectly smooth to the touch. I pushed myself up and took a seat at the back of the tub and lathered my pubes. Again, my bush was small and the hairs were fine and soft to the touch; a light reddish blonde. (\"The carpet matches the drapes,\" I heard Danny boast to a friend once.)\n\nI have always trimmed my pubes a bit in the summers, but otherwise I've never really groomed, never really needed to. I spread my legs and balanced my feet on the edge of the tub. I began by trimming them short with a pair of scissors, then shaved what little hair I have on my lips. Again, I used soapy fingertips in search of any errant hairs or stubble. I began shaving the triangle of my bush from the outside, and like my legs I took great care and stopped repeatedly to examine the shaved skin with soap-slicked fingertips. \n\nI meant to trim and neaten, to shape it into something pretty, maybe a trail. I'd imagined showing it to Claire; imagined her cooing approval. Imagined spreading my legs wide in front of her. The trail was gone. I'd shaved it all.\n\nI blushed as I realized that my first thought had been to wonder what Claire would think, that I'd pictured her smiling, laughing with delight, her eyes wide with surprise and admiration. But I was also pushing a finger between my lips while I did so. It was so wrong, such a terrible transgression, but I was too turned on to care, too turned on to stop. \n\nMy fingertips were slick, but not from the soap. I thought about the night before, the way her jaw hinged as she came, her hands touching her nipples, the moment her leg touched mine, the shock of realization that she was masturbating in my bed, the vibrations of her shoulder movements. I thought about how badly I'd wanted to cum after watching her give in to her own pleasure, how my own pleasure took me by surprise. I stroked my clit, while recalling Claire, I wondered for the hundredth time if she had simply been pleasuring herself, or if she was \"putting on a show.\" The idea that she was doing it for me to watch brought me closer to my own release. My mind seemed to chase after itself.\n\nI again pictured myself straddling Claire's face, I imagined her looking at my shaved pussy while someone watches us. I felt myself losing control. The idea of us being watched is so powerful I felt like I might swoon. \n\nThe first jerk was like a cable tied to some part of me deep inside I couldn't touch.\n\n\"Oh God CLAIRE!\" I called out, shocking myself more than my fantasies, my voice was loud and clear and real. My orgasm blew my shock and embarrassment into pieces, it left me suspended in pleasure, at least for a moment..."
    ],
    "authorname": "ButteredCrumpet",
    "tags": [
        "female masturbation",
        "romance",
        "masturbation",
        "exhibitionist",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/impact-of-collision-ch-02"
}