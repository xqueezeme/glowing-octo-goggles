{
    "title": "A Big Shiny Blue Marble Ch. 09",
    "pages": [
        "***Sometimes what you don't want to see just shows up anyway, no matter what you do. 0_o\n\n--------------\n\nThey ran into each other now and then over the next two weeks. It hadn't been the intent of either of them -- it had just happened.\n\nSelena was in an area a little far from her home, and had stopped at an inn for the night. The next morning, she was on her way out of the door when she saw them. He felt that she was nearby, he didn't even have to try to sense her. All that he needed to do was to look down.\n\nNahl'een's little head was looking in her direction.\n\nSelena stopped where she was, halfway down the steps. She stood there enthralled as they rode slowly past, Dahlgren and his little girl. Selena didn't know why, but she felt a sudden pang in her heart to see them. \n\nShe thought that he hadn't seen her, but the truth of it was that he made certain not to look.\n\nBut what rooted Selena to the spot was the way that the girl in the saddle in front of him stared at her, turning her head as they rode past. The bright blue eyes fixed on her like a pair of lances into her soul. It went on long after it should have stopped, long after the girl who might have found something of interest to her in a stranger's face should have looked away. She even leaned back a little, trying to see around him. \n\nShe watched them ride off slowly out of sight. She could see that they were talking to each other. He was pointing something of interest out to her in any direction but the one where she stood. He didn't look back once.\n\nSelena left then, on her way to some business of her own in another direction and a little glad of it. Seeing the pair of them bothered her for the next three days.\n\nJust as she'd gotten over it and was back in the same town, she'd seen them again. She was in the small shop there to buy a bit of meat and some bread for her trip home. She had some money and no desire to have to hunt something up for dinner. She just wanted to get away from there.\n\nBut as she stood at the counter, waiting for the slowest shopkeeper in the known world to weigh out the quantity of meat that she wanted, he came in, suddenly turning to look for something on the shelves in another part of the shop. She couldn't wait to pay, and he had no idea why he was looking at women's shoes.\n\nBut at last, she had her purchases and was on her way out of the place. There was a girl there, next to his horse, the one that she'd know anywhere at a glance. She was speaking to a couple of other children, but just as Selena made it to the edge of the top step, the girl stopped speaking and her head turned around. \n\nThose huge blue eyes stopped Selena cold.\n\nA woman was walking up the steps. She looked at Selena and smiled. Selena nodded once, still looking at the girl.\n\n\"Excuse me,\" the woman said, \"Is that man in here, the one who comes here with that little girl there sometimes?\"\n\nSelena nodded vacantly, still held by the blue gaze. \"Yes,\" she said a little absently, \"Why?\"\n\n\"I think he's the ranger, isn't he? From the way that you're dressed, you must ride with him. Is that your little girl?\"\n\n\"No,\" Selena replied. \"I don't ride with him. He's, ... \"\n\n\"He's right behind you,\" the woman smiled, \"Excuse me.\"\n\nSelena walked down the steps. The little girl almost jumped back a step, and was about to run away.\n\nIn that instant, Selena saw two young riders racing through the town without thinking to look for people on the street. Selena lunged and pulled the girl back as they passed. The girl turned her head, and Selena saw the fear in her eyes. She let go of the girl's hand and watched dumbly as she ran past her to Dahlgren. He picked her up.\n\nSelena strode to her horse without looking back and dumped her purchases into the closest saddlebag to swing up into the saddle as quickly as she could. She groaned as she realized that she'd need to ride right past them. She tried not to look, but she just couldn't stop herself.\n\nTime had long since gone into a sort of slow motion for Selena. She saw that the two of them were looking at her, paying no mind to the other woman who stood there talking to them.\n\nShe'd have ridden straight home then, if she could. But it wasn't possible. It was a good three day ride from where she was, four at a relaxed pace, and Selena was anything but relaxed. She was upset.\n\nShe'd seen two different things in that little girl's face. At first, she'd seen wonder and maybe longing, but it had changed in the blink of an eye when she'd held the girl's arm to keep her from being ridden down by the two young fools. What she'd seen then was terror.\n\nShe shook her head, but the image remained in her mind of a little girl who'd been in terror of her.\n\nThere was something else as well, and she'd seen it as she'd been spurring her horse and looking at them. She hadn't heard a thing but the sound of her pulse in her ears, but she'd seen Dahlgren Runei's lips moving as he'd watched her pass. She'd been riding for almost an hour before she realized that he'd been thanking her.\n\nShe slowed her mare to a slow walk and hung her head as she began to cry. She didn't know why, she just felt the need to do it. She thought that she must be losing her mind.\n\n--------------------------\n\nAs she rode into the third town later that day, she decided that she just couldn't go on any further. She really hoped that a decent night's sleep was all that she needed, and so she headed for the inn that she knew there.\n\nAs she walked up to the innkeeper, he straightened and grinned, giving a nod to someone across the room, \"Why, Miss Patty,\" he exclaimed, using the only name for her that he knew her by, \"Yer lookin' like you've been ridin' just ahead of the devil himself. Come on and have a sit by the fire. I've got yer favorite table there with a chair free fer you to sit at. There'll be no standin' against the wall and waitin' fer a seat fer you tonight. Will you be stayin' the night with us this time?\"\n\nShe nodded dumbly, really wishing that he hadn't used that one particular turn of phrase, as she allowed him to guide her to the table by the fire. It was almost deserted, but for one other person. Selena didn't care. All that she wanted was a little warmth by the fire and a pint into her, and then maybe a bowl of something hot before she turned in. The old innkeeper pulled back a chair for her and she sat down heavily. It took her a second to realize that the man still stood there expectantly.\n\n\"Have you got any good stew?\" she heard the other person say. It came to her that this was a woman. A little odd, but then this place wasn't as rough as a lot of the places where Selena bedded down occasionally. It was just a little different, that was all.\n\n\"Yes Mum,\" he smiled, almost bowing and causing Selena to wonder why, \"We've got a few on the go tonight. We've a good beef stew, some tasty rabbit stew, even venison tonight, if there's any of it still left.\"\n\n\"We'll have a bowl each of the venison stew, or the beef if the venison is gone, and a pint of dark each as well,\" the stranger said, \"Oh, and some good crusty bread if you have that too.\"\n\nSelena raised her head, looking across the table in a bit of wonder. She began to reach for her pocket for a little coin.\n\n\"Forget it, Patty,\" the man said, \"This lady's been waitin' on you for a long time now. She's already paid for whatever you want. Yer in luck, Mum, the bread's not long out of the oven and I can bring yer a load of it still hot, I hope. I'll be back in a shake.\"\n\n\"What is this?\" Selena asked, as she looked across the table a little suspiciously. The other person wore a hood, pulled down low, and all that Selena could see was the lower half of a strikingly beautiful face. \n\n\"Nothing bad, so you needn't fear,\" the woman said, \"Let's just wait a minute until old Bob there gets our pints at least, though you look as though you're in need of the stew more than the pint.\"\n\nIt took a few minutes and as they waited, Selena looked around the place. For this time of day and this day of the week, the place looked about the same as it did at any other time that she'd ever been in here. The old constable was in, but then he almost lived here. She'd never actually seen him anywhere other than in here. \n\nShe looked for her contact -- the man who might come to her if there were any jobs on the go which she might be interested in. But he was nowhere in sight. It was a little odd.\n\nBut Bob bustled over at that point and in another minute, Selena had a hot bowl of goodness in front of her and a pint near her right hand. A large basket of warm, sliced, crusty bread sat off to the side between them, covered with a cloth.\n\nSelena felt the heat of the stew as a big spoonful slid down her throat. She almost wanted to cry for the way that it felt so good inside of her, radiating warmth instantly. She looked across the table, and the other woman was eating as well. \"Go ahead, eat. Get some life back into you. We've plenty of time for the talk that I want.\" She nodded in the direction of the rest of the room.\n\n\"The copper's already stupid with all the bitter ale that I could pay for inside of him. I expect that he'll fall over asleep in a few more minutes.\n\nYour man Harry -- the one who looks for work for you? He's a little loose too tonight, and right now, he's in the arms of a very bored wench and he thinks that he's giving her the fucking of her life. She can't wait for him to finish. I've bought her for him all night, and she's dying for him to squirt his load and drop off to sleep, just like all the other times. Then she can enjoy a long sleep, since she doesn't have to service anyone else tonight. All of the other girls are busy as you can see if you look.\"\n\nSelena began to smile and it turned into a grin in another few seconds. This girl really knew how to read a room. She began to chuckle, but her companion grew a little serious just then. \n\n\"By the way, if I were you,\" she said, \"I'd try to make the acquaintance of the big boy there, the one in the red shirt? Not tonight, but maybe soon, have a little chat with him. Your Harry's a rat. He's looking to sell you out to the deputy constable, the young one who is trying to make a name for himself before he dies of boredom in this place. Harry's thinking that you're a little too tight with your cut to him. But our big man there, well, he's missing his pretty boyfriend tonight because Harry sold him out to the law for skimming town funds. Red is nursing a grudge, and you ought to talk to him before he acts on his own.\n\nA little smooth talk -- since you're safe from him, and a little coin, no more than a silver, I'd say, and old Red there would be happy to slip a dirk through one of Harry's kidneys. In -- twist -- and out, and Harry won't rat out anyone anymore. You know that nothing can stop a cut kidney from bleeding him dry. I'd go over there right now and talk to Red for you, but we don't need the excitement that it would cause, do we? You're too tired for that sort of fun tonight.\"\n\nSelena laughed a little nervously. This lady could read things a little too well for someone who wasn't even in here every night. She'd never seen her before.\n\nShe sipped her ale a little and went back to her stew. Her companion grabbed a slice of the bread and dipped it a little in her own stew. After bringing it to her mouth, she closed her eyes in bliss for a moment. \"Oh, you have to try this stew with a bit of the bread. This makes a day on the back of a horse looking for you worth every minute.\"\n\n\"You were looking for me?\" Selena asked.\n\nThe other woman nodded earnestly, \"I was. And I'm so happy to have found you, finally. I have a bit of business for you, if you're interested -- and I so hope that you are.\"\n\nIt was hard not to like the other person, Selena found, especially when she smiled. She found herself smiling along before she knew it. \"What needs doing, \"she asked,\" and what's the offer for the pay?\"\n\n\"MMph, \"the woman made a noise as she held up her hand, her mouth full of stew and bread. \"Sorry,\" she smiled after a moment, \"I'm really being a bit piggish, but this is so good, isn't it?\"\n\nSelena nodded and the woman began. \"Alright, no offer,\" she said, \"The price is fixed because the job is guaranteed. You don't even have to do very much, but it'll cost you two days of your time, once you get there, three at the outside, and that's beyond traveling time. We're not paying for that. Oh! I almost forgot,... Here.\"\n\nShe slid a gold coin across the table to Selena, keeping her hand over it so that only Selena could see what it was. Selena stared and looked up.\n\n\"This is yours,\" she said, \"It's the pay for only sitting here tonight and listening to me tell you about the job.\"\n\n\"But,\" Selena almost exclaimed.\n\n\"Shh, \" the woman smiled, reaching with her other hand to place the coin in Selena's hand, \"Take it. Really, it's yours just to hear me out. You can accept it and walk, once you've heard me, or you can stay and hear it all. I can tell you that there are ten more as pay for the job, see?\" \n\nShe opened the hand that she'd slipped into her pocket and Selena could see that there were ten more golds there. She'd never seen that many in one place in her life. \n\nThe woman closed her hand. \"I'm serious. Now, are you in just to listen?\"\n\nSelena opened her hand for the briefest instant and then closed it again, slipping the coin into her breast pocket with a nod.\n\nThe other woman smiled in a bit of relief.\n\n\"Are you sure that you're talking to the right person?\" Selena asked, \"I'll tell you for nothing that I've never had a payday as big as what you're talking about.\"\n\nThe woman shook her head. \"That's not important. I know about you and what you can do. Even that isn't what's really needed here. We're looking for the right person, and no one else will do. What I want will be like a walk in the churchyard on a sunny day for you, easy as slipping on cowshit. But it has to be you, no one else. I know who you are. I won't say your name above a whisper in this place. It's not important to anyone else, but it's so important to me.\"\n\nShe slid another coin across the table under her palm. When it got to Selena's hand, she tapped gently with her index and middle fingers. \"This is something else. It has nothing to do with the job. This is the thanks of a small family for something that you did for us. Please, if you don't take the job or anything else, please take this with our thanks.\"\n\n\"I don't know what you're talking ab-\"\n\nSh,\" the woman said, \"Take it and I'll explain.\"\n\nSelena palmed the coin and it went into her pocket as well. \"Look,\" she said, \"You're making me jumpy. Nothing ever happens for me like this. I haven't done a thing, and I have these. What's going on?\"\n\n\"Alright,\" the woman said, \"You ought to know who you're dealing with, right? You'd do a lot of jobs for a lot less than I'm willing to pay, but this much makes you nervous. I can understand that. Just sit still for a moment.\"\n\nSelena found that she suddenly could not move or speak. It frightened her, but the other woman began to speak then, in soft tones to try to calm her.\n\n\"I'll release you in a few minutes. I happen to know that you have certain, ... fears. I also know that you likely got them for a good reason. That's my problem here -- to get you past them, at least long enough to listen.\n\nI need you to get past them, and I think that we can do this, but you must hear me out. This way, you'll at least sit here long enough for me to finish. No harm will come to you, you have my word, and my word is better than the word of anyone who you might know, except for one man, and it is most certainly better than your own, ...\" She leaned forward to whisper.\n\n\"Selena Meadesbreath.\"\n\nShe sat back a little for a moment. \"I wouldn't need to do this if I knew that you'd listen, but I have no intention of seeing you put your hands over your ears like a child. It's demeaning to us both, to say the least.\n\nNow,\" she began, \"My name is Ny'Zeille. If it happens to sound a little like a demonic name to you, that's because I am a demon.\" \n\nSelena would have jumped up screaming, but she couldn't move a hair. She watched as the eyes which she couldn't see until now glazed over reflectively for just an instant in the darkness under that hood.\n\n\"Just so that you know who it is that you're dealing with,\" she smiled.\n\n\"The second coin that I gave you is for what you did this morning when you grabbed a little girl's arm to keep her from running into the path of a pair of horses. She was frightened of you, and she does not know why, much the same as you are frightened of me right now. I'd bet a lot of money that if I asked you just what it is that you are afraid of, you would not be able to tell me a real reason which makes any sense to either of us. All that you know is rooted in the superstition that you have heard in taverns since you left your home.\n\nIt's alright. I understand, so don't think that I am insulted. I understand you far better than you know. Your family was attacked by red demons for nothing which they did. My man was killed by humans, defending me as I gave birth to our son. Other than your point of view, there's really no difference, is there? So you see, I do understand you.\n\nAnd you should know something else. I killed those who killed the one that I loved. They were the only humans that I have ever harmed on this world. I certainly have no intention of harming you.\n\nAgain -- just so you know -- there is more than one person who is grateful to you for what you did. The little girl's name is Nahl'een. It means Jewel of the Evening. You know that a ranger has adopted her as his daughter. They love each other very much. I love that little girl very much as well, Selena. She is my granddaughter. The ranger is my son.\n\nIt has happened that he has found children, survivors of the mayhem that he must deal with sometimes. If he can, he brings them to the local church or to the temple orphanage. In the case of Nahl'een, he saw at once that she was the same as he is, and the two found that they needed each other, her needing a parent mostly, and so he has taken her as his own daughter. They are the same. In case you need reminding, my son's father was a human.\n\nThis job that I wish to offer you involves nothing untoward about it at all. There is no crime that I wish to be committed by you. Indeed, you wouldn't understand my reasons, but by having you do this for me, I am trying to prevent what I believe to be a crime from occurring. Mostly, it involves a bit of your time, to answer questions about when you were a little girl yourself. After that, you will be asked to do simple things, such as picking up a pebble. I make no joke here.\n\nYou might wonder why I would pay anyone so much for such a thing. The answer is simple. It will involve you being in a home where two people live; my son and Nahl'een. There are a few demonic things there, but they'll leave you alone unless you try to steal something or hurt Nahl'een. Other than that, I can guarantee your safety.\n\nIt doesn't matter what a person's circumstances might be, Selena, everyone has their price. I set the pay for the job to be more than enough to interest you, that's all.\n\nI understand that there might have been the beginnings of something between you and Dahlgren, but that you ended what was beginning likely because you learned of what he is. That is neither here nor there to me. You might feel a little uncomfortable to see him again and so the gold is partly to pay you in compensation for that. If being in the same room with him for a couple of hours over two days really bothers you, try to remember the ten golds that I'm paying you. You will likely only have to answer his questions to the best of your recollection.",
        "And I'm not paying him anything, Selena. How he might feel about you is not my concern. I am interested in aspects relating to your childhood. I'm paying you to come and try to recall a few things which might be a little hard to remember. It might take as long as three days, but likely not. Probably two will be all that's needed. I'll provide food, a very comfortable place to stay and you will not be harmed in any way.\" \n\nShe smiled a little, \"Though I have heard from him that you seem to have a little trouble believing that when it is said to you.\"\n\nNy'Zeille sat back and sipped her ale for a moment. Setting the tankard down, she smiled again. \"Now, I hope that I haven't forgotten anything, and I've allowed you a little time to calm yourself. As far as your fears go, you ought to consider that if I wanted to harm you, it would already have happened. The golds in your pocket are real, and they are yours to keep. When I release you in a moment, you may scream and howl in fear and act like fool. That is how you will be seen, because if you do that, you will find yourself here at this table alone with only one tankard and bowl of stew.\n\nThe gold is yours in any event, Selena. Try to remember that I'm offering ten more as pay for the job. You will not be harmed in any way, and you will be a little rich too.\"\n\nShe leaned forward, looking closely, \"I think that I can see why Dahlgren liked you so much.\" She looked for another few seconds, and then sat back with a smile, \"Alright, this has gone on long enough and what's left of your stew there is growing cold. Stay with me a little longer, and if you wish, I'll be happy to buy you another one. I like your company. Try not to fall over now.\"\n\nSelena almost landed with her nose in her bowl, but she recovered and stared across the table.\n\n\"I really am sorry to have frightened you,\" Ny'Zeille said, \"I couldn't see any other way to do it. You should eat your stew,\" she nodded.\n\nIt gave Selena something to do while she tried to think, so she ate, surprised that it hadn't really grown any cooler as her companion had spoken.\n\n\"You're serious,\" she said, \"All of that, you're serious?\"\n\n\"Incredibly so,\" the woman said, \"I don't throw golds around lightly. They don't come much easier to me than they do to you. Will you do it?\"\n\nThe rogue looked up from her bowl and took a piece of bread, \"When?\"\n\n\"Now would make me happy to hear it, but it's not possible without really upsetting you. Why not spend the night here and ride back with me tomorrow? I will lead you to my son's home. It's quite lovely there.\"\n\n\"Couldn't you just give me a map, and I'll find my own way there?\"\n\nNy'Zeille chuckled, \"Believe me, it is far better this way. If I gave you a map, you would come like the thief that you are, wouldn't you? You wouldn't be able to help yourself. You'd crawl around outside the wall, trying to see what was what. It's always about some sort of a plan with rogues.\n\nI wouldn't mind allowing you the challenge of it so much myself, just to see what you'd do. But it is not my home, it's Dahlgren's, and I know that he wouldn't like it. But that is not the real danger. You, being as skilled as you are -- and I do respect you for it, by the way -- would find a way over the wall. I can't imagine how you'd manage it, but I think that you would find a way.\n\nAnd that would be the end of the loveliest rogue that there most surely has ever been. There are things there, Selena, some living and most not. Their purpose is to wait and defend. They never sleep. They never rest. There is no way that they cannot sense you. There is no way that they would not tear you apart. It is all that they are there for, most of them.\n\nI already like you. I have no wish to see you harmed. And if it were to happen, I would never have the chance to learn the answers which I seek about your childhood, and before you ask, this place is not the one to ask what I need to know. My son's home is peaceful beyond anything that you might have experienced. It is lovely, and there is a garden where you can sit and your thoughts just come to you as you watch the birds. A much better way to try to remember, I think.\n\nSelena regarded Ny'Zeille from under her eyebrows as she ate, \"I won't be hurt or tied up or anything?\"\n\nThe woman laughed a little, \"Not even if you wanted to be.\"\n\nSelena remembered something and looked over, \"Will the girl be there?\"\n\n\"Nahl'een? Yes. She lives there. If you do not wish to see her, I can tell her to leave you alone. Otherwise, she will probably drift around on the edges of your sight, being curious about you but not daring to come close. I don't know why she was like that with you. She certainly isn't like that near other humans. I've never seen a little girl who can make friends with others so quickly.\"\n\n\"Will you be there, Ny'Zeille?\" Selena asked. She was feeling a little comfortable with this woman at least, now that she understood a little more.\n\n\"I might be, I don't know,\" she said, \"I must sometimes be somewhere else. It depends on where I am needed most. I can try to be, if you wish, but you should know something here. \n\nHumans are ashamed of their bodies. You all seem to think that not wearing clothes has something to do with mating. It most certainly does not for demons. We are not ashamed of ourselves at all and only seeing another of us naked does very little -- unless one is a red demon. They are barbarous things. It is one of my son's favorite pastimes to hunt them wherever they appear on this world. If I am there when you come, I will likely not be wearing anything. I hope that it doesn't bother you, though if it does, I won't much care. \n\nAs far as your next question goes, what my son does as far as what he might wear is up to him, but I believe that he will be wearing clothing out of consideration for your feelings. Just remember the ten gold coins which await you at the end of it. \n\nNow,\" she said, \"Will you do it? Will you come?\"\n\n\"Give me a minute,\" Selena said, \"I need to think.\"\n\n\"Certainly,\" Ny'Zeille said as she got up, \"I'll be right back. You should pull your hood up. Harry is about to come down the stairs and he's miserable because the wench that I paid for has told him just what kind of lover he is. He has thoughts now -- thoughts of, ... leaving this village, but not before he gets a little coin by talking to the deputy constable. Just think about deciding and please wait for me.\"\n\nSelena pulled her hood up and tried to watch what she could as Ny'Zeille made her way over to the large man in the red shirt. They spoke for a minute and Selena could just see the payment as it was made. The man nodded and got up, walking away. Ny'Zeille came back, looking down with a tiny smile just visible on her face.\n\nAs she sat down again, Selena turned back and saw Harry coming down the steps with storm clouds over his brow. But his expression turned to shock and surprise as he was grabbed and muscled out through the side door. Selena knew that it led to an alley. She turned back to her companion.\n\n\"I hope that you didn't have anything that you wanted to say to him,\" the demon smiled, \"I'll tell you when I feel that it has happened, but I think that Harry, ... Ah! Harry is now the late, unlamented Harry. And you're welcome.\"\n\nSelena stared, \"You can really do all that? Make things happen as you want them to?\"\n\n\"No,\" her companion smiled, \"I just felt things. With that, if you use your head, it's only a little bit of charm here and there and you often get what you want. I just didn't know that Harry was so sensitive about his little, um, ... shortcoming, that's all. I didn't expect him to be told in the manner that he was.\"\n\n\"Alright,\" the rogue said after a moment.\n\n\"You'll do it, then?\" Ny'Zeille asked.\n\n\"Yes,\" Selena replied, \"If you can do the things that I've seen here tonight, then you could also likely just make the idea come into my head that I want to go to Dahlgren's home, and I'd have gone. This way, I get ten golds, and the chance to look at him again for a little while, not that it will do me any good.\"\n\n\"What do you mean?\" the demon asked, knowing full well what was meant anyway.\n\n\"Nothing,\" the thief replied, \"As you said, everyone has their price. Ten golds is enough for me to suffer through two or three days. And if you don't mind too much and if it's possible, I'd prefer it if you were there. I understand about what you said. It's just that, ... I think I'd feel better if you were there to talk to a little. I won't feel so alone then, I think. I don't care what you wear. I know it's not likely true, but you feel a little like a friend -- at least someone that I know a little bit.\"\n\n\"I am a little surprised at your words, Selena,\" the woman smiled, \"and I do think that you fear the way that you do over nothing. But I think that I can see it from your side. It won't be as bad as that. It probably won't be bad at all.\"\n\nSelena nodded, but inside, she hoped that it was so. Before this, she wouldn't have thought that she'd have agreed to something like this for anything. But ten gold coins...\n\nShe guessed that she did have a price after all. She'd likely have agreed for three.\n\n------------------------\n\nThe next day dawned bleak and overcast. The two women sat for a bit of breakfast before they left. Soon afterward, it began to snow, wet and heavy flakes, though nothing seemed to accumulate on the ground other than water.\n\nBy the time that they reached the second village, it had turned to cold rain. It made everything miserable, but Selena found that talking to Ny'Zeille could lighten the feeling of dread in her mood and she appreciated it. Every once in a while though, ...\n\n\"Gah!\" the demon exclaimed just as they'd ridden through the place and were back on the road again, \"The day is a miserable bitch. My knees are wet and it's running into my boots. And we've only just left!\"\n\n\"Mine too,\" the rogue groaned, \"and my hands are wet right through my gloves. They're freezing. I think I'd prefer just cold, dry snow.\"\n\n\"No you wouldn't,\" Ny'Zeille grinned over, \"It would pile up and the going would be even slower. When I'm riding through shit like this by myself, sometimes I pull one glove off with my teeth and warm my hand against my tit. It's a rude shock at first, but it warms quickly. Then I switch. It does help some.\"\n\n\"Can't,\" Selena said, \"Not much to warm anything against. I have to use my armpits.\"\n\n\"Ah well,\" the demon chuckled, \"Your hard luck then.\"\n\n\"Yes,\" Selena sighed. \n\nThey rode on in silence for a minute before they both burst out laughing. It made Selena feel a little better to laugh.\n\n\"Was Dahlgren hurt over what I did?\" she asked, \"I saw him asleep and I really wasn't ready for what I saw.\"\n\nHis mother rode in thought for a moment, \"Yes and no,\" she said, \"He wasn't exactly heartbroken, since nothing much had passed between you, and he is a grown man, after all. It's not as though he was crushed. I think that it just made him a little sad. He is used to how he is feared. He accepts it, since he can't change it, any more than you can give yourself bigger tits to warm your hands with, I guess.\" She chuckled.\n\n\"He found himself in a bit of a tight spot on that mountain with you. He was really afraid that you would freeze to death, and so he stayed. He didn't want to sleep together with you for fear of what happened anyway. He thought that it might, but he had no other solution. I had to drag it out of him, but he told me that the way that you slept was your idea.\" Ny'Zeille began to fumble, looking for pockets.\n\nSelena smiled over, \"Going to warm your hands?\"\n\n\"No,\" her companion grumbled, \"I'm trying to find my pipe. I want a smoke, if I can manage it.\"\n\nThe rogue watched as Ny'Zeille was able to get all of the required bits and preparations of the ridiculous habit together in the cold rain somehow.\n\n\"How will you manage to light that?\" she asked, \"Have you got matches, or a flint or something?\"\n\n\"No, ...\" the woman said with a smirk, \"Don't need them.\" She held up a finger and a flame grew out of the air above it, staying there in the rain just long enough to allow the lighting of the pipe. Selena was awestruck.\n\nNy'Zeille smirked, \"Well I am a-\"\n\n\"I know,\" the rogue grumbled, \"You probably just grew your tits to the size that you wanted as well.\"\n\nThe demon stared and it brought them another round of laughter.\n\n\"Can't,\" she said around the stem of the pipe, puffing for a moment until she pulled it away from her mouth, \"The way that we look is fixed, just as yours is. Many of us who live here have found that we can have another way to look to humans, such as the way that my son can appear as the handsome dark ranger to you, and the other way when he obviously felt safe enough with you to relax as he slept. We can't change the way that we look to humans either. I can look like this, or I can look like something else.\"\n\nShe smirked, \"Don't even ask, Selena. I don't feel much like chasing you all over the land here trying to get you to calm down again.\"\n\n\"I was going to ask, you know,\" Selena smiled.\n\n\"Do you really think that you could stand that?\" Ny'Zeille turned a little in the saddle to look at her.\n\n\"Oh, I don't know,\" the rogue replied, \"I haven't really seen all of this face yet, though I can see that you're lovely. I guess that I can handle it.\" \n\nShe smirked, \"I'll just keep thinking of my ten golds, I guess.\"\n\n\"That's the spirit,\" The demon chuckled as she threw her hood back. \n\nSelena had just enough time to see that she'd been right about her companion before her face changed for only an instant. Then the human face was back and the hood came back up.\n\n\"Happy now?\"\n\n\"Yes, actually,\" Selena grinned, \"I think that I've just been allowed to see something which very few humans have ever seen, both of the faces of a demon. I didn't know that there were only two ways that you can look. You're very beautiful either way and I can see where Dahlgren got his fine looks from.\"\n\n\"I can feel that you mean that,\" the demon said, \"thank you, ... Wait, are you saying that you like the way that he looks in his natural shape? From what he said, I would have thought that you were terrified.\"\n\n\"I was,\" Selena nodded, \"I almost peed myself when I saw what I'd been sleeping against. I was scared to death. But I got hold of myself and seeing that he didn't look as though he'd wake up, I got my things together and left. I didn't know what he'd do if he woke up and seen me there.\"\n\n\"I think,\" Ny'Zeile said, \"that he likely would have smiled and said 'Good morning' to you until he saw and felt your fear of him. If I know him, he'd have likely told you to sit still long enough for him to leave and feel embarrassed over it later.\n\nAs it was, he woke up and found you gone and worse, ...\"\n\n\"Worse?\"\n\nThe demon sighed as she puffed on the pipe and looked down for a moment, \"You did steal his horse again.\"\n\n\"Ah,\" Selena nodded, and they fell silent for a time.\n\n---------------------\n\nBy the time that they'd gotten close to the little place near the mountain road to both the temple and Dahlgren's house, the rain had changed to freezing rain and sleet.\n\nSelena's mood had deteriorated. She threw back her head and yelled in frustration, \"FUUUUCK! Stop this shit already! I hate it when little bits of snow and ice fly into one ear and out the other.\"\n\nNy'Zeille looked over, \"Selena, put your hood up. Your hair is freezing.\"\n\n\"I can't,\" she said, \"my hood is soaked through and almost frozen stiff because of how wet it is.\"\n\n\"Then hold still,\" the demon said. Selena felt her hood rise from her back and she saw the ice crystals on it spray off in all directions around her. Since the wind was at their backs, she saw swirls of fog or mist pass her for a few moments. \"What? What are you -- \"\n\n\"Hold still,\" was all that she heard. The next thing that she knew, her hood was over her head and it felt wonderfully warm.\n\n\"Thank you so much,\" she smiled over.\n\n\"It's nothing,\" her companion said, \"I'd have done it sooner, but I didn't notice it before now. I can't have you get to where we're going only to die of exposure. Besides, I really like you. I feel that you are beginning to see me as a friend, and I am very surprised. I'd do a lot for my friends, Selena. You will not freeze to death with me along, though I'm beginning to think that weather like this seems to follow you.\"\n\n\"I'm beginning to want to agree with you,\" the rogue said, as the wind picked up and blew their cloaks out ahead of them. The sleet began to sting like gravel against any exposed skin.\n\nThey rode on and a few minutes later, Ny'Zeille surprised Selena. She didn't even turn her head, she just spoke.\n\n\"What did you say?\" the rogue asked.\n\n\"I said,\" the demon turned to smile, \"He did like you very much, you know.\"\n\n\"Really? He told you that?\"\n\n\"Yes\", her companion said quietly, \"I didn't even have to drag it out of him as I did for most of it all. He said that.\"\n\nIt made Selena smile for a moment, \"I liked him too,\" she said with a small sigh before she sat up a little straighter to ease the ache in her back, \"But that's in the past. I've seen him twice since then, and I wouldn't say that his expression was kind. I'm just going to do what you need so that I can collect my pay and be gone, Ny'Zeille. I think that I'd like it a lot better if you were the one who asked me what you need to know, and if I could, I'd just go then, without seeing him at all if I could manage it.\"\n\n\"Well, I think that's for you to decide tomorrow,\" the demon said, \"This is getting more stupid by the minute. Look, the town's just ahead there. Let's see if there are still any rooms, and I'll pay for our rooms and even a hot bath and dinner.\"\n\n\"I'd argue with you,\" Selena shouted into the sudden blast of wind, \"but I'm not that stupid.\"\n\n-----------------------\n\nThey managed to get two small rooms and the world didn't look quite as severe from the warm side of the inn's windows. They'd paid extra to have their horses seen to in a warm stable and they now sat in dry clothes looking at each other over some good hot food.\n\n\"I've just had a thought,\" Selena said seriously, \"How would you manage this trip if you were alone? Be honest with me, Ny'Zeille, please.\"\n\nThe demon looked at her for a moment. \"Well, if I were where we were and alone there? If I was faced with bad weather and needed to get to Dahlgren's home in a hurry?\"\n\n\"Yes,\" the rogue nodded, \"I have a feeling that it wouldn't be a problem at all for you, would it?\"\n\nHer friend shrugged, \"Not really. I always travel light. I can fit all of my things into a small bag which I can carry on my back. I'd have sold my horse and saddle and, in a private place, I'd have just put my small pack on and flown. Weather like this isn't very thick. I can get above it in only a few minutes. I'd have just flown then. I only bought my horse and saddle here yesterday to ride out ahead of where I knew that you would go. I wanted to be waiting for you when you came. I learned about what you did from Dahlgren's thoughts. We can sense each other from a long way off.\"\n\nShe looked down, a little uncomfortably, \"We can't wait for springtime for what is needed to be known from you, Selena. I wanted to meet you very much, both to see if you were all that I have heard about you and to maybe get a glimpse of a girl who had managed to touch the heart of my son for a little while. He thinks that there is no one for him on this world. I've told him differently a thousand times, but he is just like his father in his stubbornness.\n\nHe may be correct, I don't know, but I wanted to meet you anyway, and once you had agreed to come, well the weather just turned to this shit. I wasn't going to leave you to travel all of this way alone.\"",
        "\"She smiled, \"You seem to have a tendency to want to freeze to death, and you said that you haven't got big enough --\"\n\nSelena laughed, but afterward, she stared a little, \"So you rode with me all day in this because you're concerned for me?\"\n\nNy'Zeille nodded, \"I didn't mean it, I was really trying to watch out for you, but I have found a friend on this road, and though the ride wasn't pleasant, I've enjoyed your company all day. \"\n\n\"I have too,\" Selena grinned, \"and I'm thankful for your company, especially now that I know that you didn't have to suffer as I did. I'm even more thankful now. I made a friend too, one who seems to be trying so hard in such a subtle way to force me to think about my fears about what you are. I've learned a lot. I'm almost not afraid to go now, I'm just a little nervous, that's all.\"\n\nNy'Zeille reached for Selena's hand, \"Trust me, there is nothing for you to fear. By the time that you awake in the morning, I will be gone. You only need to follow the road out of town and turn right at the second road, the very small path. Just go up to the gates when you get to the top. You will be welcomed, I promise it.\n\nI want to go on ahead to make sure that everything is ready, and that there is enough food. I arranged to have my horse loaded with food from the shop tomorrow when I leave while you were in your bath. If I leave it to Dahlgren, there won't be enough. I think that a woman can understand. But you will be welcomed and not treated as anything other than an honored guest.\"\n\nSelena's face fell a little, \"Alright,\" she said, \"I'm a big girl. I guess I can manage that. You will be there, right?\"\n\n\"Yes,\" Ny'Zeille replied honestly, \"unless a war breaks out somewhere or something. I will be there.\"\n\nThey ate for a time and looked out through the window at the storm. It was just a bit of miserable weather, nothing much was accumulating on the ground. The meal was finished and Ny'Zeille had broken out her pipe and sat puffing contentedly as they looked out into the gathering gloom of the storm and the approaching nightfall.\n\n\"You're very proud of him, aren't you?\"\n\nThe statement, spoken as it was out of thin air, surprised the demon a little, but she smiled and nodded, \"I am, so very proud of him. What he is can be a disadvantage on both sides. Look at the way that people fear him here. On the other side of things, he would be thought of as weak because of his human blood, but he has shown them all to be wrong. He has taken up the old faith of The Balance, and has risen to what might be called a Templar by humans as the word for a knight of a faith. To us, he is a ranger here, though he acts when there is imbalance that he can correct. It is a high honor, though it is a lonely life as well. \"\n\n\"I don't have many friends,\" Selena said quietly, \"In my line of work, it can usually only be a liability -- a hole in my safety, if that makes sense. I'm finding that I miss not having the sort of friend that I did as a child, someone who cares, someone who can be trusted.\" She looked at her friend's pipe for a moment,\n\n\"May I?\"\n\n\"What?\" the demon startled in surprise, \"Oh, of course, Selena. I didn't know that you -- \"\n\n\"I used to,\" she said, taking the pipe from Ny'Zeille, \"It's not something that I can afford to do much, so I almost never do.\" She puffed a little and handed the pipe back with a little grin.\n\n\"Anyway, I believe that I have made just that sort of friend today,\" she said smiling, \"and I'm feeling pretty good over it, too. So good in fact, that I'm buying the next ales.\"\n\nThe demon's jaw dropped open in a grin, \"And here I'd thought that your cheapness was result of the measure of your chest.\"\n\n\"Careful,\" Selena chuckled.\n\n\"You know I only make sport,\" the demon said, \"You told me that you were terrified when you saw my son, but you did not answer me when I asked you if you liked his natural form as well as the one that he shows to humans here. \n\nI guess that I am fishing, trying to think of what to look for in the sort of woman that he'd want, since it confuses me so much that now I wish to know. Thinking about it logically, I think that the best chance would be with a girl like him or a demon girl who is a little tolerant. None of that really matters, of course. Love between two people is a random thing oftentimes. He and I can speak of almost anything, but if I mention a female for him at all, he grows instantly clinical -- as though we are discussing a battle that he was involved in.\n\nSelena's eyes flashed, \"Ny'Zeille, ...\" she had to think about it, \"You look here, Ny'Zeille Runei,\" she said with only a little mock gravity, \"Are we friends or not? Because if we are, then I'll not have you blabbing everything that I tell you to that son of yours, are we clear?\" \n\nNyZeille smiled and looked down, trying to hide her grin, \"Yes, Selena. We are friends, and I won't tell a thing.\"\n\n\"Well aright then,\" the rogue said, \"I'll only tell you this once, because we're here and all, but not one word of this will reach Dahlgren's ears, or I'll never trust you again. I'll want your word on this, that bloody world-famous Runei word that Dahl always pisses me off over when he reminds me of it.\"\n\nShe saw her friend's chin come up and nod, \"I give you my word. You called him 'Dahl'.\"\n\nSelena pursed her lips and blew one of the strands of her dark hair out of her eyes, \"Pfft, Just forget that I said that.\" She leaned forward conspiratorially and her friend did the same.\n\n\"This is only for your ears, my friend, because even though I'm not exactly thought of as a much sought-after sort of shy girl, I am human, and I've found that it just doesn't pay to have something like a girl's secrets overheard at all. I was so hopeful to get to know him a lot better. It's bloody obvious to me now why, but I've never met anyone like him. I saw your son and I had so many things to deal with inside me all at once. I did the only other thing that I could think of. I packed up like a frightened mouse, trying hard not to chatter my fears out loud to myself as I did it, and I ran. \n\nI'm not proud of what I did, especially after how we fell asleep and what we did before that. I'm actually ashamed of myself over it. \n\nI doubt that I can, or that I'll even ever get the chance to apologize, but I really wish now that I hadn't sat on my wet ass in front of my own house wishing that he wasn't there. What I should have done then was just thank him and tell him that I was sorry for everything that I'd done. \n\nHe really needs to find a better sort of girl for himself.\"\n\nNy'Zeille sat listening to all of it, but she did catch it and moved to pull it back in front of them, \"The only OTHER thing? Did you think to hurt him? Kill him? I'm a little confused.\"\n\nSelena rolled her eyes and looked down. She was suddenly very interested in her own fingernails. \"No. He hadn't hurt me or even threatened to hurt me. Nothing like that.\"\n\nShe looked up, \"Please, Ny'Zeille, I'm talking about him to his mother, of all people.\"\n\nThe woman smiled slowly, \"His mother, who is a demon, after all.\"\n\n\"Who's a de- Hey!\"\n\nThe smile grew wider as she tilted her head, \"Well if you can't confide your darkest desires to a demon who is a friend to you, who then? \n\nNo one with a brain would dare confide in one of these preachers which every town seems to have at least one of. The idiots would only denounce them for admitting what they themselves feel the same as anyone else, but they'd be happy for the chance to burn an innocent and keep the rest cowed.\"\n\nShe laughed, \"Can you just imagine what one like me would do if it was attempted? I'd hang him by his own bag right over the door of his home and set that ablaze for the stupidity of it all.\"\n\nSelena's eyes narrowed down to slits as she set her jaw, \"Alright. It doesn't matter anymore anyway, and not one word, Ny'Zeille,\" she warned, \"or I'll walk away from your job out of embarrassment. There's not enough gold in the world for that, by the way, if I find out that you told him any of this.\"\n\nShe sat back, looking out into the darkness on the other side of the window. Her voice came out very softly and carried a hint of childlike wonder to it, \"I saw him lying there, still clothed because of the cold and I stared at his face. I had a whole lot of other things coming up right then, but there was one thing -- one sudden desire that I had and it frightened me like nothing I've ever felt -- because, well, I need to feel that I always have some control, somehow.\"\n\nShe looked down, \"And right then, I could feel that I was losing that control.\"\n\n\"Why?\" the demon asked softly as she reached out and touched the rogue's hand, \"What was it?\"\n\nSelena sighed, \"He's always looked so good to me. Every time that I've ever seen him, whether he's looked at me or not, every time, I lose my breath, or that's what it feels like to me. I can see him a hundred times a day and I'm fine, but the next time that I see him somewhere, it's the same thing all over again, just the first time.\n\nRight then, I looked, wanting to know if it would happen again, because we'd fooled around a little the night before. We didn't do it, but I really wanted to.\" \n\nHer voice grew even softer, \"It did happen, Ny'Zeille. He was lying there and every so often, I could see what he really was, ... and it happened anyway! \n\nI wanted to kiss him so much. I almost couldn't stop myself. I wanted to kiss him so softly so that he'd wake up and see me there over him. He'd have probably needed to go pee or something, but I wouldn't have let him get up. That's why I ran. If I didn't stop myself, ... \" \n\nShe closed her eyes, and drew a breath, \"Oh, I'd have just fucked him silly right there. We'd have frozen to death on that mountaintop with his stupid tent on top of us, but I wouldn't have cared, not until long after I'd had him.\"\n\nShe hung her head.\n\nBefore Selena could start to cry, feeling shame for what she'd admitted to his mother, Ny'Zeille pulled herself forward and lifted Selena's hand to her lips. She kissed that hand slowly and set it down on the table again, though she didn't let go, she just held it.\n\nThe rogue looked up and saw her soft smile.\n\n\"I want to make an admission of my own, \"Ny\"Zeille said, quietly, \"Firstly, I don't think that you ought to feel badly about what happened. If it helps any, I can tell you that he only thinks that you will not listen to him out of some fear that you have. It may have been so then. Secondly, we are both females, no matter what we are, and you should know that I understand. \n\nThirdly, I will not tell any of this to him at all. It is not my place to interfere and I find that I value your friendship so much. But lastly, I need to tell you something. \n\nI only had the chance to bear one child. I have never found another male who I felt that I really wanted after what I had. So I only had my son. I have already admitted my pride in him. But now I will tell you something else. If I'd had the chance, long ago, just one more chance to bear another child, I am sure now that I'd have loved so much to have had a girl just like you, my young friend.\n\nBut we can only have what we have, Selena,\" she said, \"I am happy to have my friend. Besides, I have just realized that there is a flaw to my wish. Dahlgren would have had a sister then, and I have a feeling that your childhoods would have been very loud indeed.\"\n\nIt made Selena smile and she thanked Ny'Zeille for the thought as they stood up and said goodnight and parted company on their way to their respective rooms."
    ],
    "authorname": "TaLtos6",
    "tags": [
        "demon",
        "rogue",
        "thief",
        "bounty hunter"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/a-big-shiny-blue-marble-ch-09"
}