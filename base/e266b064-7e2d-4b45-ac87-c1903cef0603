{
    "title": "CvsN 25: Tour de Spain",
    "pages": [
        "---\n\nJack sees more of Spain, and of his Spanish Beauty\n\n---\n\nAna Isabel had left me with an immediate problem. A hard-on that just wouldn't quit. And with her departure, I was forced to consider alternatives. First and foremost, the woman next door.\n\nBefore I tested those waters, I knew I should call home. It was nearly 1:00 am, but it would be around 6:00 pm on the east coast. Give or take an hour. I was never very good at those time conversions.\n\nI got the girls on both lines and regaled them with our success and our night on the town, describing the tapas and the flamenco dancing. \"We just had to get out of there. The dancing continues until after one. We've got a plane to catch in the morning,\" I told them.\n\n\"Who's 'we',\" Beth asked.\n\n\"Chris and I. She's in the room right down the hall. Poor girl was nearly mauled by all those men,\" I laughed.\n\n\"I bet you're getting your fair share of attention,\" Beth continued.\n\n\"Not like her, that's for sure. The odds aren't much in my favor.\"\n\n\"Was your Major there?\" Debbie asked.\n\n\"Yes, and she and Pablo served as our guide. But I'm back in the room alone now, and I've been a good boy. No new girls for poor Jack,\" I insisted.\n\n\"Be careful of her,\" Debbie said. \"I'm sure a guy like you would be a real catch.\"\n\n\"Not for her. She's some distant cousin or niece of the King, and off limits to mere mortals.\"\n\n\"If you find yourself slipping, find some nice young Spanish chippie. Keep away from her,\" Debbie said, more forcefully than I could imagine. I couldn't help but wonder what was going on with her. Maybe Karen was rubbing off.\n\n\"Debbie!\" Beth squealed, \"Did you just tell him to pick up one of those Spanish girls?\"\n\n\"Better on of them, than ending up in that woman's web, and never coming back,\" she said, entirely serious.\n\n\"Stop it, Deb. Nothing is going to stop me from coming home to you. And I'm not about to go out and pick up some local kid just to get my rocks off.\"\n\nShe sounded upset. \"I'm sorry. I keep getting this feeling that I'm losing you. That you're not coming back.\"\n\n\"I'm coming home in three days, and the only beauty I want is you.\"\n\n\"Hey!\" I heard Beth's indignant reply.\n\n\"The both of you.\"\n\n\"Don't forget us,\" Debbie said sorrowfully.\n\n\"Hurry home Jack,\" Beth interrupted. \"I'll see if we can't plan another coming home surprise for you.\"\n\n\"As soon as I can, Angel. As soon as I can.\"\n\nThe call left me a little perturbed, but I shook it off, and decided to check in on my boss. I hadn't heard any noises from her direction in a while.\n\nThe adjoining doors were unlocked, and I peeked in carefully, to make sure I wasn't interrupting anything. The lights were off, but the entry light was on, and I could see Chris lying on the bed, naked, on top of the covers.\n\nI slipped into the room and sat down on the side of the bed, gaining Chris' attention. She turned and smiled at me, sleepily.\n\n\"Did we have fun tonight?\" I asked her.\n\n\"I don't know about you but I did,\" she giggled.\n\n\"I could tell from the screams. Those two old guys must have had a hell of a time.\"\n\n\"Just the General,\" she said. \"We kind of came to an understanding that the Colonel would have to wait a bit.\"\n\n\"Poor Colonel. So how was the General?\" I asked, teasing. I stretched out beside her and caressed her breast.\n\n\"Very attentive. Not much for stamina, and pretty much a one trick pony, but he seemed quite happy to make sure I was well taken care of. I guess experience counts for something. You want to know something weird?\" she asked.\n\n\"I'm not sure, how weird? Chicken or feather weird?\"\n\n\"Nothing like that. It's just that was my first time ever using a rubber. 30 years old, and my first time. Weird huh?\"\n\n\"Not too weird,\" I told her. \"I was afraid he made you march around the room and salute him,\" I teased.\n\n\"Oh yeah. That too.\" She laughed. She leaned down and started playing with my cock, \"How about you? This fellow seen any new pussy tonight? You and the Major seemed to be getting along awfully well.\"\n\n\"No such luck. I mean, she's nice and all, but I think we're playing on two different fields. Unless my ancestors lived in castles and were living off the work of down-trodden peasants, I'm not in the running.\"\n\n\"Aww. The mighty Jack strikes out? Say it isn't so!\" She seemed to really be getting a kick out of my situation. I was almost tempted to tell her about the close call, but for all my moral lapses, I wasn't the kind of guy to kiss and tell, particularly when the lady was interested in keeping things quiet.\n\n\"At least one of us got lucky tonight. Two, including the much honored General.\"\n\n\"Three, if you can wait a minute for me to take a shower and freshen up. Shall I join you in your room, in 10 minutes?\"\n\nI couldn't turn her down. \"Love to. See you in 10.\"\n\nBack in my room, I realized there was a lot of evidence I hadn't been alone. I rolled the champagne cart, dirty glasses and all, into the hallway, then straightened out the bed. I could still smell the fragrance of Ana Isabel in my room, and I took care of that with a spray of cologne around the bed. A little strong, I opened the window a bit to get some air movement. One last scan of the room, and I saw a tube of lipstick left on the dresser. I barely had time to stash it in a drawer before Chris made her appearance.\n\nShe was wearing a tempting little bit of lingerie that barely hid the goodies underneath. It only took me a few seconds to get her into my bed, and a couple of minutes more for me to get inside of her. \n\nAll in all, not a bad night. Not at all.\n\n* * *\n\nZaragoza wasn't the slam dunk I was hoping for. We had several issues getting the system to communicate with the server before we found the problem. Even then, we weren't able to bring all the units up, and found another issue with the database. For some reason the Zaragoza records were firewalled, and it took a bit of work to get the access tunnelled. It was late by the time we were finally up and running, but managed to get the demo up before we'd lost any credibility.\n\nPablo was great in support, and Chris managed to keep the brass from breathing down our necks. My favorite Major kept her distance, watching all, but staying out of it. When the demo was fully functional and running with access to all necessary data, I stepped back and let Pablo drive again. \n\nHe was getting good at it, and asked around for suggestions, providing the required results almost instantaneously. I was finally able to slide out of the limelight, and hunt down a coke. \n\nMajor Ana Isabel de Borbon is a demon. She sees all, knows all. And in this case anticipated all. While I was asking a trembling non-com where the soft drinks were, she appeared at my side, a 16 oz ice cold bottle in her hand. She gave me the first smile of the day.\n\n\"I didn't know if you were going to pull it off,\" she said. \"It looked close there.\"\n\n\"A lot closer than I had hoped for,\" I admitted.\n\n\"But once more, you're the conquering hero, and still you let Pablo get all the praise.\"\n\n\"I'm happy enough to know I'm doing a good job. And he's been a great help. If I can help him a little, great. I hope he comes out of this smelling like a rose.\"\n\nShe casually reached out and brushed my arm, giving me goose bumps. She look still and hard today, not the sensuous creature in my room the night before. Still, I knew well what was hidden, just barely out of sight.\n\n\"Noblesse Oblige,\" she said.\n\n\"Pardon?\"\n\n\"Of course you put on a show for the brass, they pay the bills and make sure the right approvals go through. Your boss understands the politics well, doing her best to keep the General happy, very happy. And the Colonel as well. But you make those beneath you look good, and feel good, even though it gains you nothing. You are above that.\"\n\n\"Don't go spreading rumors like that,\" I teased. \"I'm not all sugar and spice you know.\"\n\n\"Sugar and spice?\" she asked.\n\n\"And everything nice - a children's poem.\"\n\nShe leaned in to whisper in my ear, and my hopes shot sky high. \"Looks like you may have to bail Pablo out, I think he's having some difficulty.\"\n\nI looked up to see the Captain switching back and forth between two screens, and I was fairly certain I knew what was up. I moved quickly back to his side, and reminded him of the basic system configuration. In the settings, he hadn't selected the 'clear on exit' check box. \n\nWith a quick review of the settings, and two quick changes, he was back in the saddle again, his momentary nervousness in check.\n\n\"Sorry about that. My fault. I changed the settings during testing. After initial installation, they'll be at the correct configuration.\"\n\nOnce more I stepped back. But not too far in case of anymore gotchas.\n\nThat about settled it, and after just a few more minutes, we were shutting down the system, and being shuffled off to another night of celebration in the ancient and fascinating city of Zaragoza.\n\nThere was a short break while the party was assembled, rides were found, and a few additional lovely escorts were requisitioned for our outing. Ana Isabel returned after a short hiatus, wearing a simple, yet striking little black dress that once again had me staring. She certainly cleaned up nicely. I understood the purpose of the large tote bag she'd brought on our short trip. \n\nThe locals were very proud of their history, and the history of northern Spain where hundreds of years of battle kept the moors from crossing the Pyrenees. The landscape was dotted with castles and fortified churches, and our little tour began downtown at the Plaza of Pilar, where ancient Roman ruins from 20BC stood alongside a Moorish tower and a huge Spanish basilica, a pilgrimage sight for the miracles performed by the Virgin Mary. It was a strange blend of old and new, and utterly fascinating.\n\nWe were given a tour of the Basilica by the proud locals, viewing the 15th century Sagrado Imagen, and La Columna, the column where Mary appeared to the Apostle St. James. The same column whose holy properties protected the Church throughout the years, particularly from the bombings during the Spanish Civil War. We were directed to look at the frescoes painted by Goya. The busboy from 'El Botin' had done well for himself.\n\nMy guide was a pretty little Lieutenant named Pilar. The same name as the Church.\n\n\"Pilar. That's a pretty name,\" I told her, still looking about for the Major.\n\nShe laughed. \"In the North, every other girl is named Pilar, it seems. Here it is as common as John or Robert, in your country.\"\n\n\"Ah, but I am quite certain not every Pilar is as lovely or as kind a host as you are,\" I told her in my rusty Spanish.\n\nOur tour took us down a series of side streets, where we stopped for the requisite tapas, at a few different locales. I was attended to nicely by our hosts. When they weren't filling me in on their local history, they were querying me about the D.C. area, and even an occasional discussion of the new system. Pilar stuck to me like glue, and my partner in crime, Chris, was never lacking for attention, her favorite Colonel never far from her side. The Major was always in the crowd, often nearby, but somehow always a short distance away. My buddy Pablo was often by my side, but he was enjoying the outing as well, and using the opportunity for some face time with the big brass, and to chat up a cute local who'd attached herself to him.\n\nBy the time we reached our final destination, I was glad the walking was over. I couldn't imagine what it was like for the ladies in their high heels. La Bastilla restaurant was on the river, across from three bridges that joined northern Zaragoza, all residential neighborhoods I was assured, from the historic southern side of the city.\n\nNo show for us, just a gastronomic orgy of tastes, starting with what I was told was the best ham in Spain, although Pablo, once again seated nearby, told me it was only the second best. It was sliced paper-thin and melted in your mouth. As the first entry, it was a great start. My only disappointment was that Ana Isabel was separated from me, sitting opposite and at an angle. Beside her was another General, who seemed intent on talking to her, although far less 'friendly' than most at the table. He'd occasional speak across the table to me, and we would discuss differences in programs and bases I'd visited. The conversations would never get very far before Ana Isabel would gently recapture his attention.\n\nMost of the evening, I flirted with Pilar, who was very open to my attention, and as the wine flowed, and the excellent food kept coming, I found her more and more enchanting.\n\n\"Tell me more about Buenos Aires,\" she begged, while offering me a taste of the mysterious food on her plate.\n\n\"The downtown is incredible. Avenida 9 de Julio is a full block wide, it must have 20 lanes. Of course the oldest buildings there would seem brand new in your beautiful city.\"\n\n\"They say it is very beautiful, very Spanish.\"\n\n\"In some ways it is. It is many cities, rolled in one. La Boca, downtown, is like a piece of Italy, where Italian is spoken, and the restaurants are like stepping into Rome. And the steaks, unbelievable.\"\n\nShe sighed, \"I joined the military to see the world. And yet, I've hardly left my home town. Someday I'd like to see the great cities. Paris, Buenos Aires, Rio, Washington, London, New York.\"\n\n\"I'm sure you will. When you come to Washington, I'll show you around. It is a fascinating city, so open, so many parks and museums. You'll love it.\"\n\nShe was flirting outrageously, accepting my caresses and returning them in kind. \"I'd love to have you show me around.\"\n\nHer raven tresses reminded me of Ana Isabel, but her petite body was very different. Small and rounded, with abundant curves that promised wonderful experiences to anyone so fortunate to explore them. Her eyes were so dark they were almost black, and it was easy to get lost in them. \n\nI knew we had intended to return to Madrid that night, but wondered if that plan had been changed. It was close to midnight and things were still going strong. \n\nI turned to my Madrile\u00f1o companion. \"Pablo, what are the plans? Are we still flying back tonight?\"\n\nHe looked surprised. \"Impossible. If you wanted to return tonight, you shouldn't have done so well getting everything working. Too many happy people tonight. We'll be staying at the Hotel Tibur; we passed it walking here. We'll return in the morning. I thought you understood.\"\n\n\"Is Chris aware?\"\n\n\"Certainly. She was asking if it had private baths. So many of the downtown hotels share bathrooms.\"\n\nWith that information in hand, it was time, I decided, to see if Pilar was interested in continuing our tour.\n\n\"Do you live nearby?\" I asked her.\n\n\"Oh no. I live on the base. It will be a long lonely drive back tonight,\" she said.\n\n\"Perhaps you'll join me in a night-cap at the hotel, afterward.\"\n\nShe looked a little surprised. \"Se\u00f1or Jack, I'd love to but I think you should know that I have a fianc\u00e9.\" She leaned closer, rubbing my arm. \"You are here tonight, very charming and handsome, but tomorrow you'll be gone. And Miguel will still be here for me.\"\n\n\"Miguel is a very lucky man,\" I told her, sincerely.\n\n\"And is there no special woman in your life?\"\n\nAmazingly, I found myself opening up to her, and on the long walk back to the hotel, where about a dozen of us stopped in the bar for nightcaps, I told her far more than I intended about my living situation at home.\n\nShe was wonderful to talk to, curious and easily amused, teasing me about sleeping alone in Spain, with all those women waiting for me at home. \"You tempt me, Jack. What kind of man can keep two women happy?\"\n\n\"A very luck one,\" I admitted.\n\nOur Madrid contingent was at the bar, along with a few late night lingerers. The Colonel was monopolizing Chris's attention, no surprise there, and Pablo seemed to have landed his cute young escort. Ana Isabel was being entertained by two of the brass, but it looked awkward, like they were trying to hard to be interesting and charming, and she was letting it all pass her by. The locals, minus Pablo's friend, left en masse, all headed back to the base, leaving the rest of us to snatch a few hours sleep before catching an early flight back to Madrid.\n\nChris and I had no bags, and had to get toiletry basics from the main desk. The Colonel and Pablo each claimed to have everything they needed in their briefcases. Ana Isabel seemed to be ready as well, and wished us all good night as we split up for our rooms.\n\nI was feeling lonely, without the opportunity to hunt down Chris in the night, if the Colonel's intentions were what I believed they were. No adjoining rooms for us. We weren't even on the same floor. I noticed that the Colonel was right down the hall from her.\n\nIn my room, I made my call home, catching Debbie. Beth was out but would return shortly.\n\n\"I miss you,\" I told her.\n\n\"Not as much as I miss you,\" she said softly.\n\nI talked a bit about our day, and our evening tour.\n\n\"Was your Major the guide again?\" she asked, carefully.\n\n\"Hardly spoke to her all day. A lovely young lieutenant kept me company most of the night, but she's returned to her fianc\u00e9, leaving me alone, once more.\"\n\nShe laughed. \"A country of beautiful women, and poor Jack sleeps alone every night. What would your buddy's think?\"\n\n\"They'd think I'm the luckiest man in the world to have you waiting for me at home. Just two more days.\"\n\nA few minutes later Beth picked up the line and made me go over my activities once more. \"Hurry home, Jack. We're lonely. All the toys in the world can't fill your place in our bed.\"\n\n\"I swear, I'm tempted to let Chris handle the rest of this and jump on a flight tomorrow, if I didn't think it would get me fired.\"\n\n\"Don't worry, baby. We'll survive, and I promise you, we'll make it all up to you,\" Beth said. \n\nI said my goodbyes, pleading tiredness and a need to get up in about 6 hours. \n\n\"I'm almost sorry your lieutenant had a boyfriend. It might have made for an interesting story,\" Debbie teased.\n\n\"Deb! Stop that! He has all he needs waiting for him right here. Even Jack can last a week without. Can't you Jack?\"\n\n\"As long as I know it's you I'm coming home to,\" I assured her before ending the call.\n\nI was undressing when the phone rang.\n\n\"Jack? I'm not waking you am I?\" I heard Ana Isabel say.\n\n\"Not at all. I was just getting in bed.\"\n\n\"If you have a few minutes, I thought we could talk.\" \n\n\"I'd love to, anything in particular?\"\n\n\"Perhaps you'd come to my room. I'm in 510.\"\n\nThat was an offer no man in his right mind could refuse. \"Give me just a couple of minutes and I'll be right there.\"\n\nI cleaned up a bit, threw on my pants and shirt, and slunk off to her room. At the first knock she opened the door, peeking out from behind the chain, then closed the door for a moment before letting me in.\n\n\"I hope you're not mad at me,\" she said stepping back from the door, as I closed it behind me.\n\nHow could I be mad? She was wearing another knock-out lingerie combination that instantly elicited a response in me.\n\n\"Mad? At you? Never,\" I assured her, stepping closer and reaching behind her neck, gently touching her. \n\nShe spun away from me and sat on the bed. \"The General is an old family friend, and I didn't want too many tongues wagging,\" she explained. She giggled, \"Sorry about Pilar. I thought you might like her, but I knew she's still in love with her young pilot. I'm surprised she stayed as long as she did.\"\n\n\"She was nice, and very easy to talk to,\" I admitted, sitting beside her on the bed.\n\n\"I believe so. You certainly seemed to be opening up to her,\" she giggled.\n\n\"And was my favorite Major eavesdropping?\" I asked.\n\nShe leaned back on the bed, looking devastating. \"Just a little. Am I really your favorite Major?\"",
        "\"Absolutely. No doubt. Without any reservations.\" I reached over and stroked her leg, only inches from me.\n\nShe looked at me very intently. \"The rules have not changed, Jack. If that bothers you, and you wish to leave, I understand.\"\n\nMy hand caressed further up her bare thigh. No stockings tonight. Just an incredible bra and panty set that nearly had me panting. \"Ana Isabel, I'm happy to spend any time I can with you. Anyway I can.\"\n\n\"Then why don't you get comfortable?\" she said softly.\n\nI quickly stripped down to my boxers, and climbed back onto the bed with her. She turned to me pulling me into her arms, and kissed me like we were long lost lovers. My hands were not idle as I explored her soft skin.\n\nAfter a few minutes of play, I worked my way down her body and between her legs. She opened them for me, allowing me to touch and caress her, slowly homing in on my true target. I could smell her need and it was getting to me. I chewed on her pussy through her silken panties, and wanted so much more. I didn't know how far I would be allowed to go and threw caution to the wind. I reached for her hips and drew her panties down slowly. When I had them half way down her thighs, she resisted a bit.\n\n\"Jack?\" her tone sounded cautious, and warning.\n\n\"I just want to pleasure you. I won't go too far,\" I assured her.\n\nShe pulled her legs closer together, allowing me to separate her from her designer panties. I slid back between her legs and once again feasted on her.\n\nI looked up when I felt her moving, and saw her piling the pillows behind her so she could look down at me. She smiled for me, letting me know it was Ok, and I went back after her with everything I had, every trick I knew, wanting her to remember this. \n\nIf her moans were any indication, she was enjoying my efforts immensely, reaching down and running her fingers through my hair while my tongue slaved away. Her moans grew louder, and her hands drew me in tighter, as she got nearer to my goal. I wasn't going to make it easy on her, and slowed up, changing motions, getting her close before backing off a bit. As her breath normalized, I attacked again, three fingers filling her, while my tongue and lips teased her clit out of hiding and gently massaged it. After I'd gotten her close twice, I decided to allow her to come, and searched out her inner hot-spot while my tongue vibrated her clit. Her cry was incredible, making me wonder if we'd have a knock on the door asking us to quiet down. \n\nShe rolled onto her side gasping, her legs pulled up, and it gave me a chance to rub her butt cheeks, reaching between her legs and teasing her back-door. I moved in close and licked her from her pussy right to her forbidden dark star, and pressed my tongue into her, penetrating her tight ass.\n\nI sat up and roughly brought her to her knees, her ass raised deliciously. I rimmed her deeply, tonguing her ass as far as I could, then slid a finger into her butt, making her squirm for me. I lowered my oral attention, licking her wet pussy, while I stroked my finger into her dark tunnel. Bringing both hands into play, I slid a couple of fingers into her pussy, while I continued playing with her beautiful ass. I was nibbling on her cheeks when she spoke up, \"Jesus, Jack, I'm going to come again, don't stop.\"\n\nThat was music to my ears, and I fucked both holes with my fingers, sliding another into her pussy, twisting in and out of her. She cried out for me again, her legs giving out and sliding apart, lowering her trembling body to the bed. \n\nI crawled up next to her, lying against her heaving body, kissing her shoulder and fondling her. My hand wandered back down to her delightful rear, squeezing her cheeks, and occasionally teasing her back entrance a little more. \n\nShe turned to me and kissed me hard, then rolled me onto my back. I was hoping she'd reciprocate. I wanted to be back between her sexy lips again, and I felt like I'd been hard for hours. She grabbed my boxers and pulled them down; I raised my hips to make it easier, then kicked them off once they were around my ankles. I watched her face move down to my cock and her mouth covered me, giving me the wettest blow-job I could remember.\n\nShe pulled away after just a minute or two, a string of saliva stretching from her ruby red lips to my straining manhood. She gazed on me with a look of pure lust and straddled my hips. She held my steely shaft in her hand, bent over and started moving down onto my cock.\n\nI knew I should stop her, but couldn't if my life depended on it. Still, I looked up and whispered, \"The rules?\"\n\nHer eyes pierced mine. \"I don't think this is quite breaking my promise,\" she said softly, then grimaced as I felt an intense pressure against the head of my cock. She pushed down and I felt myself enter her, it was like being squeezed by a fist. \n\nShe continued to strain, and I watched her body lower fractionally. \"God, you're big,\" she groaned, then pushed again taking another inch or so. \n\nShe sat up, adjusting her legs, and rose up, easing the painful pressure for just a moment. Then she was lowering herself again, and I reached down and held my staff in my hand, to keep it from bending in half. The pressure was intense. I could finally see her bright pink pussy staring at me. Empty. \n\nShe was taking me in her ass.\n\nI groaned as she continued her journey, pulling my hand away when I felt the pressure of her coming down against it. It seemed to take forever, but I'm sure it was only a couple of minutes until she had most of my length inside of her.\n\nOnce she'd managed that much, her pace picked up, and I watched in delight as she fucked me, long strokes, deep into her back door. She was still unbelievably tight, but the going was easier.\n\nBeing worked up for so long had its consequences. \"I'm not going to last much longer,\" I warned her, fucking back against her.\n\n\"Good. I couldn't take this for too long. Come for me Jack.\"\n\nWe had a great rhythm going, her body moving up, while I pulled back, then coming together roughly, driving deeply into her. Her hands were now between her legs, rubbing her pussy roughly. The view was so erotic, her face in a ricture of concentration, as she rode me, her breasts quivering in her lacy, near see-through bra. I grabbed her hips and fucked into her hard, pounding her poor ass, until I couldn't hold back a moment more. With a loud grunt I shot into her, pulling her down against me, fully sheathed, and emptied myself into her sweet butt. I pushed into her as far as I could, transferring the last of my cum.\n\nAna Isabel leaned down and laid across my chest, gasping. I held her close, kissing her wherever I could, my hands caressing her smooth flesh, as I felt myself slide out of her, escaping with a noticeable pop.\n\nShe giggled. \"I guess you like my butt, just a little.\"\n\nI lifted her face, looking into her eyes and kissed her hard. \"I love everything about you.\"\n\nShe sighed and rested on me, her full weight on my torso. I loved the feel of that too. \"Mmmm. My young Hawaiian prince. You test all my boundaries. You are bad for me.\"\n\nOk. So I'm a little less than 1/2 Hawaiian, and by no means a prince. But I wasn't going to fight against her fantasies. \n\n\"Pele, the fire Goddess would love you. You seethe with fire like a volcano. Your heat scalds me.\"\n\nShe turned her head and smiled at me. \"Ah, but you know how to calm the volcano, and extinguish the fires so sweetly.\"\n\nShe slid off of me, but stayed in my arms, kissing me so gently, so thoroughly I never wanted it to end. Then I felt her drawing out of my arms, climbing off the bed and heading for the bathroom. I used a box of tissues beside the bed to clean up best I could. We'd made a bit of a mess. \n\nI was picking tissue pieces off the head of my cock when she knelt down beside me, and used a warm washcloth to clean my semi-hard cock. \n\n\"He looks so soft and innocent now. Nothing like the iron rod that tore open my poor butt just a little while ago.\" She leaned over and gave it a little kiss, that had it twitching. She looked up at me, and ran her tongue around the head, stopping abruptly as it started to harden in her hand.\n\nThere was no crying scene this time, she just stood up and pulled her panties back on, looking back at me wistfully. \"It's late, Jack. Perhaps you should go.\"\n\nI wanted to stay with her, fall asleep with her in my arms, and awaken with her. She wasn't ready for that. So I did what I must, standing and dressing. She came to me, straightening my collar, and slid into my arms, kissing me again.\n\nShe hugged me tightly. \"I'm sorry I can't do more.\"\n\n\"More? You were incredible. I'm so lucky to have met you.\" I told her.\n\nShe hugged me tightly, painfully so, then turned away and walked to the window. \n\n\"Goodnight, Ana Isabel,\" I told her from the doorway. I slipped into the hallway and headed back to my room.\n\nThe girl was a mystery, but I figured I'd play Sherlock Holmes for a bit and see if I couldn't solve the riddle that was my beautiful Spanish Major.\n\n* * *\n\nI hadn't brought any changes of clothing with me, and as much as I wanted to try a run by the river, I doubted the locals would approve of me taking a jog in my boxers and dress shoes. Instead I did some push-ups, crunches and squats, just to get the blood flowing, and told myself I'd do an extra hard run the following morning. I had a message on the phone, letting me know that the team was meeting for breakfast. I had 20 minutes to pull myself together and head downstairs.\n\nOver breakfast, Ana Isabel once again behaved with perfect propriety, although the Colonel and Chris were acting chummier than ever, and Pablo's date from the night before was still with us, the two of them flirting as if the evening had never ended. \n\nI was sorry to leave Zaragoza behind, it was an interesting city, and my companions had been memorable. I knew it was unlikely I'd be returning any time soon.\n\nIn Madrid we were allowed to clean up before the afternoon training session, and I was standing in front of a new group of trainees by 1:00pm. With Pablo along for assistance it was an easy way to pass a few hours.\n\nAs we finished up, Ana Isabel came in and let me know that the team had sent the changes in. Time for her gang to see if they could resolve the issues. The next day I was scheduled to work with them and provide a software overview. At least we had a live exercise to work with.\n\nI hadn't seen hide nor hair of Chris or the brass since the day had started. I was wondering if we'd be expected to party the night down, but I was kind of looking forward to an earlier night. My home life was making me sedentary. And I still hadn't finished with my cute boss.\n\nPablo was standing by my side, which put the damper on any possibilities of testing my Major's willingness to play a little more. \n\n\"Any more big plans for the evening?\" I asked Pablo, loud enough for Ana Isabel to be included in the comment.\n\n\"Not tonight. But don't make plans for tomorrow. We're all going out. Big celebration. Tonight you're on your own. Do you want to make plans for dinner?\"\n\n\"I think I'll look for Chris, and make a quiet evening of it. It's been a pretty wild week. Any idea where I might find her?\" \n\nAna Isabel made her presence known. \"I believe they were headed to the Officer's Club. Shall we join them for a drink before you head back to town?\"\n\nThe club bar was crowded, but the three of us found our way to the bar. Looking around I didn't see Chris or the Colonel. One nice thing about being with Major de Borb\u00f3n, the crowds parted like the waters before Moses. \n\nAt the bar I ordered drinks and placed my arm around Ana Isabel's waist, flirting like our first night. She was cheerful and friendly, and made an effort to include Pablo in our discussions. \n\nAfter just a few drinks we were teasing Pablo about his conquest, and it was fun to see him blush like a schoolboy.\n\n\"I thought you might have made a friend,\" he said.\n\n\"I was setup, Pablo. My little friend had a fianc\u00e9. Nothing but a tease for me.\"\n\n\"Is it my imagination, or did your boss and the Colonel seem very friendly,\" he asked, still steering the discussion away from his own escapades.\n\n\"It's a possibility. A very distinct possibility,\" I admitted.\n\nI had never seen the Major drinking so heavily. And she was getting chattier and friendlier as the liquor flowed. I was hoping our friends would show up before I had to carry her out of there.\n\n\"You have been holding out, Jack,\" she said with a mischievous grin, tugging on my arm.\n\n\"Moi? How?\"\n\n\"You told me you were not married, but forgot to mention your living arrangements, did you not?\"\n\n\"Ah, so you WERE eavesdropping last night.\"\n\n\"It is like you say, I see all, hear all,\" her smile was teasing.\n\n\"And what did you hear?\" I asked.\n\n\"So much. Once I knew what to ask, it all comes out, you know.\" She glanced over at Pablo who blushed again. \"And I was not the only one listening last night.\"\n\n\"Pablo!\" I reached out and poked him. \"Bros before hoes, man!\"\n\nHe looked at me curiously. \"Bros before hoes?\"\n\n\"Guys have to stick together. No conversing with the enemy.\"\n\n\"She is my cousin, Jack,\" he said with a hangdog look.\n\nI relented. \"No problem. Nothing to hide, really. I do live in a house with several women, and I am in a relationship with two of them.\"\n\nI felt some jostling behind me, and saw my boss and her coterie slide in behind us. Finally. \"Oh! This should be interesting. Tell us more, Jack,\" Chris teased.\n\n\"Yes, Jack, tell us more,\" the teasing Major said.\n\nI scowled at Chris, then turned my attention back to my favorite Major. \"I own a large house, with several roommates. Two of them, Debbie and Beth, are my girlfriends, and we share a room.\"\n\nPablo looked surprised. \"With two of them?\"\n\n\"Yes, Pablo. Two.\"\n\n\"You must be lonely, over here all alone,\" Ana Isabel teased. She turned to Chris, \"You know these women?\"\n\n\"I know of them. Seen them around,\" she admitted cautiously.\n\n\"Are they worthy of him?\" Ana asked.\n\nChris laughed. \"Devastating. Both of them. Unworldly.\"\n\nI'm sure I blushed, but the room was dark enough I was certain nobody noticed. \n\nAfter a lot of teasing and coercion, I pulled out my wallet and displayed the one picture I kept of them. In the picture the girls were standing side-by-side, arms around each other's waists, Beth's head leaning on Debbie's shoulder. They were dressed in shorts and t's, showing a good bit of skin. The wallet was snatched out of my hand and passed around, getting a good bit of play out of the crowd.\n\nThe wallet ended up in my Major's hands and she studied it carefully before passing it back to me. \"They are very beautiful,\" she said in a neutral voice. \"The blonde is a model? An actress maybe?\"\n\n\"No,\" I laughed. \"Just a very pretty, very loving woman.\" I reached out and stroked her arm, \"and no more beautiful than the women of Spain.\"\n\nPablo cheered and raised his cup. \"The women of Spain. The most beautiful women in the world.\" That got a rise out of everyone around us, and everyone toasted. Except my Major who was disturbingly quiet.\n\nI leaned in to Ana Isabel. \"You're mad at me,\" I said for her ears only.\n\nShe smiled, a sad little smile. \"Mad? No. But it explains a lot. I knew a man like you could not be truly single. But two? Those two?\" She rolled her eyes, then took a long hard draw on her drink.\n\nThe Colonel brushed up against me, throwing his arm around me. \"So now we know!\" he laughed. \"That's why Jack spends each night alone, in a city like this. If I went home to that, I would lock the door and never come out!\"\n\nI laughed with him, but felt weird doing it. Chris was at his side, and ready to chime in. \"And if the rumors are true, then young Jack finds time to play with his other house-mates too. Quite the Lothario.\"\n\n\"Lothario? Cervantes?\" The Colonel asked.\n\n\"Casanova. Lady's man,\" Chris explained.\n\n\"Ah. Casanova, yes. You should be very careful of him, Chris.\" He gave me a hug with his arm, still holding onto Chris.\n\n\"Oh, don't worry about me. I've got his number,\" she teased.\n\nWhen he let me go I turned back to the bar, but my favorite Major had left. I hunted down Pablo and asked him where she was.\n\n\"Home, I'm sure. She doesn't stay out with us much. Inappropriate.\" He smiled and gave me a nudge. \"I think she likes you, Jack.\"\n\nI laughed it off. \"Not after hearing all that stuff.\"\n\n\"You don't know the Spanish women, Jack. Now you are a challenge. Even for the Glacier Major.\"\n\n\"Afraid not. Back in the deep freeze, I'm sure.\"\n\n\"No problem. Let us go out. You won't go home alone. I'm sure.\" His big smile was infectious. \"With you there, even I won't go home alone.\"\n\n\"I don't think that's a problem for you, Pablo.\"\n\n\"Not tonight!\" \n\nChris found me, and pulled me to the side. \"Want to make an evening of it? Just you and me? The Colonel's headed home, and I could use a little 'quiet' time.\"\n\nIt sounded like the best plan to me, and I bowed out of Pablo's plans assuring him that we'd go out another time. Either on another trip, or when he came to D.C. It took us another half-hour to escape, but I was content to bundle my boss into a taxi to the city. I didn't feel much like partying, but thought a little quiet no-attachments intimacy would be nice.\n\nAnd it was.\n\n* * *\n\nOn my late night call home, I told the girls they'd been a hit at the bar. \"I'm a legend now. They laugh and tease me that they know why I always go back to the hotel and sleep alone.\"\n\n\"Still no Spanish girls to tease us with?\" Beth asked.\n\n\"Quiet evening tonight. No parties, no going out. In my room alone, and missing my women.\" I confessed.\n\n\"Two more days,\" Debbie reminded me.\n\n\"And then I'm coming home where I belong. I can barely stand it.\"\n\n\"Are you in bed now?\" Beth asked, teasing.\n\n\"Yep. And really, really missing you.\"\n\n\"Are you naked?\"\n\n\"As a jaybird,\" I admitted.\n\n\"Hold on, I'm switching phones,\" Beth said.\n\n\"So the Major's leaving you alone?\" Debbie asked.\n\n\"Spent the required 10 minutes socializing, then disappeared into the night. Just the guys, then just me.\"\n\nMy story was starting to fall apart. My boss had just entered my room, after making her call home. I pointed to the phone, and held up 5 fingers. Five more minutes. She wore a naughty smile, and nothing else, as she slid into my bed, holding her finger over her lips. Crap.\n\n\"Good. Come home to me Jack,\" Debbie said, almost pleading.\n\n\"Day after tomorrow. Then we're locking the door until Monday.\"\n\nI heard Beth pick up. \"Guess what Jack? I'm naked too. Tell me, what would you do with me if I was there?\"\n\n\"Silly girl, if you were here, I'd be fired for dereliction of duty.\"\n\nDebbie laughed, \"I'll let you two play. I've got to feed the little ones.\" She hung up, leaving our ornery younger roommate to tease me.\n\nEvil Chris was leaning against me, gently fondling my cock. I guess she wasn't quite done for the night.\n\n\"Just you and me Jack. Right now. Naked in your bed, in Madrid. What would you do. What would you want me to do? You know what I'd want to do. I'd have your big fat cock in my mouth right now, feeling how big it is, and how it stretches my lips. I'd suck you right down my throat, over and over again, until I made you groan like I love to. Can you feel that? Me sucking you deep? Stroke your cock Jack, like I was sucking you now.\"\n\nSurprisingly, the little minx's words were getting me hard, despite depositing a couple of loads into my accommodating boss, just minutes earlier. Chris's actions weren't hurting things either.\n\n\"Are you hard? Jack? Hard for me? Hard enough to make me gag, while you fucked my face?\" Beth asked.\n\n\"Hard as a rock, Beth. God, I'd love to feel your mouth on me.\"\n\nChris took that as an invitation, sucking me deeply.",
        "Beth heard my moan. \"That's right. Stroke it for me. Stroke that fat cock. Imagine my mouth on you right now.\" I could hear her making noises like she was sucking me. \"Can you hear that? It's not as big as you, but I'm going to suck it just like I'm sucking you. Here I come, Jack.\"\n\nShe was making wild noises, slurping away on one of our toys, while Chris gave me her best effort blow-job. I closed my eyes and listened to my girl at home fantasize about sucking me. I heard her gasp.\n\n\"I need more Jack. So much more. I need you to fuck me, Jack. Tell me how you want me.\"\n\n\"Ride me,\" I told her.\n\n\"God, just what I want. Here I come. I'm above you now, lowering down onto your cock, just the head penetrating me. That big hard knob opening me up so good.\"\n\nChris wasn't idle. When I said 'Ride me', she grinned and climbed atop me, slowly taking me in.\n\n\"Jesus, Jack, you feel so good in me. Filling me so nicely. That's it, I have the whole damned thing inside me. I can feel you throbbing. Are you throbbing for me, Jack?\"\n\n\"Throbbing and aching, Beth. Fuck me. Fuck me,\" I moaned for her, while Chris slowly, quietly, rode me.\n\n\"I can hear it, Jack. I can hear your need. Do I feel good? Does my hot, tight little pussy feel good?\"\n\n\"You feel incredible,\" I told her, earning a mischievous smile from Chris, who ground down against me.\n\n\"Good. I want you to feel wonderful. I want you to feel how hot and wet I am for you. Five nights without you, Jack. I can hardly stand it. Fuck, you feel good in me. Fuck, fuck, fuck,\" she groaned.\n\n\"Come for me, baby. Make me come for you.\"\n\n\"Fuck me hard now. Hard. Pound up into me. Fill me with your hot cum, Jack. Watch my tits bounce for you. Feel my warmth envelope you, squeezing you, milking the juices out of you. I need you to come for me, Jack. Come for me. Come inside me. Make me come for you.\"\n\nI was thrusting against Chris, my girl's words driving me crazy, while my boss provided the surrogate body. I could hear my voice catching, as I thrust more forcefully. \"I'm going to come, baby. I'm going to come so hard, so deep inside you. Can you feel it? I'm about to come,\" I gasped, my voice catching, as Chris rode me harder.\n\n\"That's it Jack, I'm so close. So damned close. I need your come. Come for me.\"\n\n\"FUCK!\" I groaned into the phone, as I filled Chris's pussy.\n\n\"Oh. Oh...Oh,\" Beth whimpered. I heard a huge sigh on the other end of the phone. \"Fuck, I needed that. You made me come, Jack. You made me come so nice, thank you.\"\n\n\"Thank you,\" I told her. \"I needed that.\"\n\n\"I bet you did. Feel better?\"\n\n\"You can't imagine.\"\n\n\"Good. Now go to sleep and dream about what I'm going to do with Debbie tonight. And what we're both going to do to you when you get home.\"\n\n\"Goodnight, Beth,\" I told her. Hanging up the phone, I looked down at Chris who was wearing a guilty little grin.\n\n\"That was naughty,\" I told her.\n\nShe lay down in my arms, still lying on top of me. \"That was really naughty,\" she admitted. \"And so damn sexy. I'm sorry, I couldn't resist.\"\n\n\"You know you'll have to be punished now, don't you?\"\n\nShe grinned. \"I was counting on it.\"\n\nFor a quiet night, we didn't get a lot of sleep.\n\n* * * * *\n\nThe trip is almost over, but the fun is just starting. Hope you enjoyed this chapter! "
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "oral",
        "travel",
        "role-play",
        "phone sex",
        "anal",
        "boss"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/cvsn-25-tour-de-spain"
}