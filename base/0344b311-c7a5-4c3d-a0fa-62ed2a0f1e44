{
    "title": "Ditzy Donna",
    "pages": [
        "It's prom season and being the dork I am, the only person available that will go with me is another cast off from the student population. Her name is Louise Johnson. To most people she's known as 'Looney Louise'. She wears clothes that don't fit; hair designs not yet invented by man, and is the biggest buffoon in the class. I can't decide to ask her or just go stag. Going alone will solidify my status as the biggest loser in the school while going with her simply ties us with that honor.\n\nStill, she's got a nice rack...\n\n\"Ralph Junior, finish cleaning the garage, your mom wants this done before she gets home!\"\n\n\"Okay, Pop.\"\n\nWhat a great way to spend a Saturday afternoon, cleaning up my parents crap in their garage. Good thing I'm almost done so I can go back into the house and do nothing tonight. A social life requires friends which I'm a little short in supply right now.\n\n\"Hey, Junior, got any plans tonight?\"\n\n\"No, Pop.\"\n\n\"Why don't you call that Louise girl you're taking to the prom? Go out and have some fun. I'll give you fifty bucks and you can use my car.\"\n\n\"I haven't asked her to the prom and she's not my girlfriend, Pop.\"\n\nHe walked back to the house shaking his head. I knew he meant well, but he just doesn't understand what its like to be me. Yeah, I could call her and I'm sure her social calendar was just as wide open as mine, but I'm not sure I want to spend an evening worrying about what she's going to do next.\n\nPop came and went a few times to make sure I wasn't throwing away anything of any value. God forbid I should get rid of an old tennis racket with half the strings missing.\n\nI finished repacking their treasure (crap) into some boxes and started reloading a shelf on the far wall. As I was about to lift the last box up, I noticed an old marble composition book laying on it. It must have been under the crap I pulled off and chucked earlier though I could swear the shelf was empty when I pulled the boxes down before. I opened it and saw that the writing in it was my Pop's. Flipping through the pages, I stopped at the word 'boobs'.\n\nQuickly I finished the garage, stuck the book in my pants waist, covered it with my shirt and headed back to the house to take a shower. Pop stopped me at the bottom of the stairs.\n\n\"Here's a late birthday present for you, Junior,\" he said, holding out a small wrapped package. \"Turning eighteen is a milestone in life. I want you have these.\"\n\nIt was a pack of Trojans; lubricated, ribbed, and spermicidal.\n\n\"Ah, thanks Pop, but I'm not sure I'm going to need these anytime soon.\"\n\n\"You never know, son. Come on, give the girl a call.\"\n\nI sighed. \"Pop, you don't know what you're asking me to do. She's a walking disaster. She's so bad they call her Looney Louise. Now do you understand?\"\n\n\"Do you like the girl?\"\n\n\"I don't know. I've talked to her a few times. She seems okay, but she does dumb things. She does have a nice set, though,\" I said, holding my hands out in front of me for effect.\n\n\"Nothing wrong with that,\" Pop replied with a grin on his face.\n\nI headed to my room and put the book under my pillow.\n\nAfter getting a shower and changing, I went down to raid the fridge. The house seemed quiet. \"Pop?\" There was no answer. \"Pop?\" I shouted out the window. His car was gone. I grabbed a soda and a box of leftover KFC and headed back to my room.\n\nI flopped down on the bed and opened the book. The first few pages were simply notes or doodles. On the fifth page there was a heading.\n\n\"Sunday, December 15, 1974.\"\n\nThat was almost thirty years ago. I knew Pop was almost fifty, so he must've been close to my age when he wrote this.\n\n-\"I'm writing this down so I'll never forget the events of the last few days (as if that's actually possible). One thing's for sure; I'm not the same person I was before this all started. The events began two days ago on Friday the 13th...\"\n\nPop never really talked about his past. Once and a while he'd tell a story about this or that, but mostly they were stories within the last twenty years or so.\n\nI turned the page and his story began...\n\n* * *\n\nI was sitting in my living room watching 'Second City TV' on an old black and white as another Friday night was going to waste with nothing to do. I just can't believe my crappy luck when it comes to girls. I'm nineteen years old with my own apartment and a good paying job. I'd been in that apartment for seven months and not one female has set foot in the place to visit me with the exception of my Mother.\n\nI've had a few dates here and there, but nothing that went far enough to suggest a little fun back at my place before they went home. I'm not bad looking. I have an average build and height, blond hair and green eyes. I have a decent sense of humor and like going out as much as anyone else. I suppose the problem is that I'm looking for a girlfriend. They can sense it the moment you meet them and it places them on the defensive.\n\nI remember looking at my watch and realizing that my friend Jim would be by soon. Usually he dropped in on Fridays around that time either with a girl or on his way out looking for one. Sometimes I would go with him, but it usually meant holding up in a bar until closing time, talking about how great it would be to meet some girls. Not that there were any in those places.\n\nIf he had a girl with him, he usually asked me to find somewhere to go for a few hours. I couldn't get any girls in the place but he could. What a guy. Sure enough, there was a knock at the door.\n\nI took a peek through the peephole and could see it was Jim and he had a guest. I didn't feel like bailing out of my home that night. I considered playing dead. Jim knocked again.\n\n\"Ralph, open up. It's me. Someone here wants to see you,\" he shouted through the door.\n\n\"Really?\" I mumbled, as I peeked through the hole again. I could see Jim and the girl, but I could also see the slightest bit of someone else off to the side. \"Oh, great, a blind date,\" I thought. The last one Jim set me up on forgot to wash herself sometime that week. Combing her hair would have been a new experience for her, and the last time I checked, there were seven holes in a persons' head, not eight.\n\nI could have just said I was sick.\n\nI could have told them I had a girl in the place too, but the laughter coming from the other side of the door might have disturbed my neighbors. Who am I kidding? They would have been laughing right along with them.\n\nI opened the door and my friend smiled back at me.\n\n\"Hey, there you are! Taking a nap or something?\" asked Jim, goofing around.\n\n\"Well...\"\n\n\"This is Kelly,\" he said, pointing briefly at a cute brunette.\n\nI nodded in her direction and she giggled a little.\n\n\"I'm sure you remember this one,\" Jim said, pointing off to the side invisible from the peephole.\n\nShe's my height with blue eyes and wild short blonde hair. There were too many teeth and gums showing when she smiled and there was a bit of a snort when she giggled. She wore an oversized sweater with sleeves that fell a foot below her hands and flapped around as she waved at me. Her jeans were too long for her and were frayed from dragging on the ground. Her big toe was sticking out from an old sneaker and wiggled with a life of its own.\n\n\"Hi Ralph!\" she said, with a giggle and snort.\n\nIt had been three years since I'd seen her. I'd like to think we were an item at the time, but the reality was that we were good friends and not much more. Even with that relationship, I was closer to her than any other girl in my life. She's an amazing and interesting person. She has the ability to perk you up with that never fading smile and giggle. When things got dull, she livened things up with a joke, pratt fall, or some off the wall stunt. Her parents moved cross-country when we were still in tenth grade. That hurt. I didn't realize just how much I relied on her being around. We exchanged a few letters, but I hadn't heard from her for over a year.\n\nShe wiped her nose with her flapping sweater sleeve and snorted.\n\nNope, she hadn't changed a bit.\n\nI felt flushed. My heart was racing with joy and excitement. Ditzy Donna was back in town!\n\n* * *\n\nI closed the book.\n\nDitzy Donna? My Mother was known as Ditzy Donna? I always thought she acted like she had too much caffeine. I went back to reading...\n\n* * *\n\n\"Oh my God,\" was all I managed to say before she wrapped her arms around my neck and hugged me, moist sleeve and all.\n\n\"Okay then,\" said Jim, as he and his date passed us and entered my apartment, closing the door.\n\nAs she held me tight, I could feel her shaking. At first I thought she was cold, and then I thought she was crying. Then she snorted.\n\n\"What's so funny?\" I asked.\n\n\"I think Jim just locked you out.\" Giggle. Snort.\n\nI tugged on the door and sure enough, Jim had turned the dead bolt. I patted my pocket in vain knowing my keys were right inside the door on a hook. I checked my back pocket and found that I didn't have my wallet either.\n\n\"Ah man,\" I said, knocking on my own door.\n\n\"Come on, don't worry about them. Let's go out,\" she said pulling me to the building door.\n\n\"I left my wallet inside,\" I replied.\n\nShe blew raspberries at me. \"Don't worry about it, my treat,\" she said, as I wiped the raspberry remnants off my face.\n\n\"Where are we going?\" I asked, clueless.\n\n\"I don't know,\" she replied pulling me out to the parking lot.\n\n\"Did you drive here?\"\n\n\"Nope,\" she said, dragging me out to the street. A car came close and Donna squinted, looking at the driver. \"Nope.\" Another one closed in and said, \"That'll do.\" With that she pulled her shirt and sweater up and flashed the driver. There couldn't have been more than a second before the driver's foot went from the gas to the brake and the car made a grand skid to a halt. The front passenger side door flung open and Donna jumped in. \"Come on!\" she said as she motioned with flapping sleeves. I got in next to her. \"Thanks,\" she said to the driver.\n\n\"Shit,\" he replied. \"I knew it was too good to be true.\"\n\n\"Sorry,\" she said, flashing him again. \"Where're you going?\"\n\n\"I was heading to work over on Route 1. Where do you want to go?\"\n\n\"Hey Ralph, is the 'All the Way House' still open?\" Donna asked while playing with the guy's fuzzy dice.\n\n\"I think so.\"\n\n\"Let's go there. It's on the way,\" she said, giving the guy another peek at her boobs.\n\n\"How come I don't get to see them?\" I asked.\n\n\"You're not driving.\"\n\n\"Oh.\"\n\n-\n\nThe 'All the Way House' was a burger and beer joint that seemed more like an old time tavern than an eatery. It was dimly lit with booths and tables as well as a counter with stools. It had an old jukebox that played equally old 45's for a quarter or three for fifty cents. It offered the standard fare such as hotdogs and various types of burgers served with a basket of French fries. What set this eatery apart from the others was its famous 'All the Way' sauce.\n\nThat special secret sauce was invented by some Irish guy around the turn of the century and intended as revenge on his neighbor. It consisted of hot dry mustards mixed with hot peppers, onions, mushrooms, and lots of vinegar. It was then slowly simmered for several days until it had the consistency of thick gray ketchup with lumps. It was perfect for on top of hotdogs or burgers, or a basket of fries. Of course, you could get your food any way you wanted it, with or without the sauce served on the side. But the truly brave would order their meal 'All the Way'.\n\nThe brave and the assholes, that is.\n\n-\n\nDonna was busy thanking the driver by letting him cop a feel as I entered the House. It was just the same as it was the last time I had been in it, about three years before. The Big Bopper was singing \"Chantilly Lace\" on the jukebox as I spotted one empty booth toward the back. The place was packed with Friday night kids either finishing with activities for the evening or just getting started. I made my way to the booth and sat at the far wall facing the door. Looking over the menu told me nothing had changed except for the prices. There was a whoosh of air and suddenly Donna was seated across from me. Her sweater was in disarray and her hair was even more out of whack than usual.\n\n\"Did the guy leave?\" I asked, looking for her eyes through the blonde bangs.\n\n\"Yeah, he went away happy,\" she replied, pulling her sleeves up, finally revealing her hands. They were not graceful or delicate, but they fit her to a tee.\n\n\"I'm not sure I want to know what that means.\"\n\n\"Yep, best not to ask,\" she replied, eyeing up the menu.\n\n\"You know, I don't think I've been in here since the last time we were here together,\" I said, paging through the play list on the control box in the booth.\n\nDonna stared at her menu a minute and then a frown came over her face. I knew she was trying to remember the night in question. It bothered me that she didn't since it was kind of a memorable night. Well, to her we were just friends.\n\n\"Donna!\" shouted a large woman who apparently was our waitress. I say apparently because she wore a black dress with white lace, a small black lace bonnet, an equally black apron and up to a second ago, a 'Fuck you and the horse you rode in on' look.\n\n\"Peggy!\" shouted Donna, as she leapt to her feet and into the extremely large woman with equally large breasts. I remembered her from the last time we were there.\n\n\"Oh, it's so good to see you. How are doing, baby?\" Peggy asked, squeezing Donna for all she was worth.\n\n\"Great! How's the kids?\" asked Donna, trying to breath in Peggy's grasp.\n\n\"Hell raisers!\" she replied, letting Donna loose.\n\n\"Yeah, well, six boys will do that,\" giggled Donna, looking back at me and winking.\n\n\"Eight,\" fired back Peg.\n\n\"No shit,\" snorted Donna.\n\n\"Yep. The last one was born before the water broke!\"\n\nI shuddered. Donna laughed, snorted, and dropped back into her seat. I looked up at Peg.\n\n\"What the fuck are you looking at?\"\n\nActually, I was looking at her breasts. They were huge.\n\n\"Nothing,\" I replied.\n\n\"Baby, what can I get you?\" Peg asked Donna.\n\n\"Just a cola right now, I'm still looking.\"\n\n\"Okay,\" said 'Big Peg' as she turned and walked away, ignoring me.\n\n\"I'd like a...\" I started to say, and then cleared my throat as it became obvious that I was being tuned out.\n\nDonna folded her menu and set it down, looking at me and only me. \"So Ralph, what's going on with you?\"\n\nI told her everything. Good grades in high school, great job, and moving into the apartment. I also told her that things were still a bit rough on the girlfriend front. \"How about you?\"\n\nThe answer was as convoluted and strange as she could be at times. All I really heard was \"...no boyfriend.\" That perked me up.\n\n\"Here's your soda sweetie,\" said Peg as she dropped a plastic cup on the table and moved along.\n\n\"Thanks.\" Snort. \"So what are you going to have?\"\n\n\"I'm not all that sure I'm going to get a chance to order,\" I said, watching Big Peg move around the room.\n\n\"Don't worry, I'll make sure you get your order in,\" Donna replied while tapping on the tabletop.\n\nFrom across the room Peg shouted, \"One cow patty extra burnt...\" and then paused as she filled her lungs and bellowed, \"...ALL THE WAY!\"\n\nThe guy behind the counter shouted, \"All the way!\"\n\nThe guy cutting the onions yelled, \"All the way!\"\n\nThe cook in the bathroom hollered, \"All the way!\"\n\n\"I hope he washes his hands,\" I said to Donna, as she started cracking up and soda bubbled out of her nose. I pulled the napkin dispenser over for her, but she'd already wiped her nose with her sleeve. \"Well, you may not remember the last time we were here, but I do and I sure hope Peg doesn't.\"\n\n\"Oh! Right! I remember now,\" she said and started laughing all over again.\n\n-\n\nThat night, Donna and some friends of ours ate at the \"All the Way House\". As the evening ended, Donna talked the others into leaving one by one until the only one left was me. When I realized they weren't coming back I knew I was in trouble. The bill was $26.00 and all I had on me was $10.00. $26.00 is a large amount of money for someone making $1.80 an hour. What I remember the most about that evening was trying to sneak out myself and getting caught by Big Peg. It wasn't my finest moment.\n\n-\n\n\"I doubt she remembers that,\" said Donna as she smiled toward Peg and flapped at her.\n\n\"One foot long at table 3...ALL THE WAY!\"\n\n\"All the way!\"\n\n\"All the way!\"\n\n\"All the way!\" (Flush)\n\n\"You paid her that night, didn't you?\" Donna asked, sipping her cola.\n\n\"All I had was ten bucks but the bill was twenty six. She made me clean the urinals in the men's room until midnight with my underwear.\"\n\n\"That wasn't so bad,\" stated Donna as she waved at Peg to let her know we were ready.\n\n\"Yeah well, she kept coming in and pulling up her skirt and pissing all over the walls and the urinals,\" I said, shuddering at the vision still crystal clear in my mind. \"She has this huge clit that looks like a small...\"\n\n\"No, she didn't,\" said Donna, shaking her head as Peg arrived at the table.\n\n\"What would you like, sweetie?\" she asked Donna.\n\n\"Let Ralph go first,\" she said, nodding in my direction.\n\nBig Peg turned towards me facing the back wall and in a quick but unseen motion other than to me, pulled her skirt up. Her large clit was even bigger than I remembered it. \"You better have brought an extra pair of 'Fruit of the Looms' if you can't pay the bill tonight, Dickhead,\" and let the skirt drop.\n\nShe remembered me. She seemed just as warm and sociable as before.\n\nI cleared my throat and opened my mouth, but nothing managed to come out.\n\nBig Peg turned toward Donna and asked, \"What can I get you?\"\n\nDonna pointed back to me.\n\n\"What do you want?\" Big Peg huffed at me.\n\n\"I want a burger with lettuce and tomato and a side of fries,\" I finally got out.\n\n\"How do you want that burger?\" she asked.\n\nThey only used ground sirloin at the 'House' so you could have it done the way you liked it. \"Medium rare,\" I replied, feeling a little more in control. Being able to decide how one's burger is done helps one in regaining one's control.\n\n\"Uh-huh.\" She turned toward Donna. \"What would you like, honey?\"\n\n\"I'd like a 'Kibbles and Bits' and a side order of 'Fire Fries'.\"\n\n\"Oh shit,\" I whispered to myself.\n\n-\n\nOne thing you need to understand about the secret sauce is that it is a bit on the hot side. Actually it was hot, bitter, hot, sweet, hot, pungent, hot, with a little hot left over. Very few people actually developed a taste for that sauce. To use the phrase 'grew accustomed to it' really isn't correct. You never grew accustomed to it. You just killed more taste buds each time.\n\nA dog or a burger served with that sauce on top (All the Way) was deadly enough. But a 'Kibbles and Bits' sandwich was kind of like a 'Sloppy Joe' only made with the sauce instead. A person eating that was receiving four times the amount of that vile mixture than an 'All the Way' sandwich. The fire fries were a bit less intense in as they used less sauce but added Texas Firehouse chili as well.\n\nVery few people ordered either, let alone both except for the brave... and the assholes.\n\nDonna was a ditz but she was no asshole.\n\n-\n\n\"Whew, honey are you sure?\" asked Peg, breaking a sweat just thinking about it.\n\n\"Yep, yep, yep,\" replied Donna, wringing her hands together.\n\n\"Well honey, I hope you're not going anywhere tonight 'cause you're gonna be turning the air blue! Whew!\" said Big Peg turning back to the kitchen.\n\n\"One Kibbles and Bits! At table ten!\"\n\nA siren wailed and a red light on the ceiling started blinking.\n\n\"Kibbles and Bits!\"\n\n\"Kibbles and Bits!\"\n\n\"Kibbles and Bits!\"\n\n\"One Fire Fry!\"\n\nA blue blinking light came on as a gong sounded.\n\n\"Fire Fry!\"\n\n\"Fire Fry!\"\n\n\"Fire Fry!\"",
        "\"And Deadbeat wants a pink one with jockey marks!\"\n\nThe siren died, the red and blue lights switched off, and the gong stopped in mid gong. The counter guy, onion chopper and the cook each appeared at our booth carrying their choice of club. The cook's was a nine iron.\n\n\"Deadbeat.\"\n\n\"Deadbeat.\"\n\n\"Deadbeat.\"\n\n\"Don't worry, I'm paying,\" snorted Donna.\n\n\"Donna!\"\n\n\"Donna!\"\n\n\"Donna!\"\n\n\"Hi guys,\" she replied, flapping at them. The trio departed giving me one last dirty look. Big Peg just grinned at me. \"Ralphie, would you mind if I stay at your place for the next few days?\" asked Donna.\n\nI was stunned. \"Yeah!\" Here was the girl that made my day; the one I was beginning to believe was THE ONE, and she wanted to know if it was okay to stay with me. \"No problem at all.\" I'm sure the grin on my face was obvious.\n\n\"It's just that I don't have any other place to go,\" she explained.\n\n\"How did you bump into Jim?\" I asked.\n\n\"Well, I had stopped by the old school to see if anyone knew where you lived. You said in your letters that you still helped out with the band. I bumped into Jim waiting for his girl.\"\n\n\"You mean Jim is in my apartment with a minor?\" I said, jumping up from my seat.\n\nBig Peg eyed me up like I was ready to skip the bill.\n\n\"No, she's some flunky. She's our age but still trying to get the diploma.\"\n\nI sat back down and chuckled. \"I don't know where he finds them.\"\n\nA kid appeared with a tray to serve us. I got my burger and basket of fries. Donna received a plate with the sandwich and fries with gold sparklers stuck in both. The kid held out a cassette player and turned it on. The theme from the movie M*A*S*H came on and the kid started to sing. When he hit the refrain, the counter guy, the onion chopper, and the cook joined in...\n\n\"...That suicide is painless. It brings on many changes. And I can take or leave it if I please...\"\n\n\"Thanks, we get the idea,\" I said, waving him off.\n\nI could smell the sauce sitting across from her. It had a metallic twang to it and I thought my nose was going to bleed just from the vapors.\n\n\"It's on me, so enjoy,\" she said, picking up her fork and knife. I watched as she forked a fry loaded with the sauce and chili. It made its way to her mouth and I watched, almost in a sadistic way. Her eyes closed as the first fire ignited in her head. Then she began to chew like it was the first home cooked meal she ever had in her life. \"God, this is so good. I almost forgot.\"\n\nHer breath nearly knocked me unconscious.\n\nShe then cut a piece of the sandwich and shoved it in. I closed my eyes expecting her to start gagging. I heard her inhale and then snort. \"Thank you for coming here, Ralph. I love this place so much.\" She leaned across the table and gave me a quick kiss on the lips.\n\nBesides being stunned from the fact that 'My Girl' just gave me a kiss, my lips started burning like I had flicked a Bic and was resting the flames against them. I ran my fingers across them, not to wipe away the sauce, but to be certain that they weren't bleeding. Then I did have to wipe away the sauce as it began searing into my skin.\n\n\"How can you eat that?\"\n\nShe rolled her eyes and said, \"This is so good,\" under her breath to me.\n\nAs we ate, I could tell she was enjoying herself and Big Peg made sure she was stationed between us and the exit. After a few extra colas for Donna we were ready to go. Peg brought the check and handed it to Donna. It was $7.50. She checked her pockets and then shrugged her shoulders. \"I think I need to see the manager.\"\n\n\"Sure sweetie, anything for you,\" cooed Big Peg, and then hoisted her skirt again for my benefit.\n\n\"You're all mine if she can't work something out, Deadbeat,\" she whispered to me.\n\nI shuddered in my seat. \"I thought you were paying,\" I said to Donna, as Peg got out of earshot.\n\n\"I am,\" she replied, flapping her sleeves at me.\n\nA fortyish balding man appeared at our table with half-moon black rimmed glasses seated low on his nose and several stains on his white dress shirt. \"Is there a problem here?\"\n\n\"Well, there seems to be a bit of a mix up. I was supposed to pay for dinner, but I forgot to bring money. Is there a way we could work this out?\" asked Donna, batting her eyelashes at him.\n\nThe man looked back at me sizing me up. \"We don't let people work off their food tabs here. If you can't pay, we'll have to call the police,\" looking as tough as he could and then licked at a fresh stain on his sleeve.\n\n\"Oh, I'm sure there's a way to fix this problem,\" said Donna, running a hand up and down the poor man's leg.\n\nI rolled my eyes and looked at the ceiling.\n\n\"No there isn't,\" he said, sounding a little less assertive.\n\n\"Oh come on, it's just seven dollars and fifty cents,\" cooed Donna, running her hand closer and closer to the man's crotch.\n\n\"Donna, don't...\"\n\n\"Shhh...\"\n\n\"Um, maybe if I talked to you in private,\" he said, as he started to move his body a bit to help her hand reach his fortyish manhood.\n\n\"Sounds good to me, show me the way,\" she said standing up.\n\n\"Donna...\" I pleaded with her.\n\nShe shot me a 'Be Quiet' look and then smiled back at the manager. \"Wait for me outside, I'll be there in a few minutes,\" she said out of the corner of her mouth and then winked.\n\nI watched as she grabbed the last fry off her plate and followed the man behind the counter and disappeared down a hall. As I stood Big Peg had her eye on me. We stared each other down for a minute and then I moseyed my way toward the door. 'Her Hugeness' lumbered over and blocked the exit.\n\n\"Hey! Donna's taking care of the bill with the boss,\" I said, puffing my chest out with bravado.\n\n\"You don't leave until he tells me you can, Deadbeat,\" she grunted back, puffing out her chest and knocking me back a foot.\n\nTaking a deep breath, I leaned into her face and said...\n\nAn ear piercing scream came from the back of the building. Big Peg took off in the direction of the wounded and I booked out to the parking lot. I got about twenty paces out of the place when I heard another scream burst into the lot as the door flew open and Donna came running out with her sleeves flapping around as her arms turned like the blades of a windmill. \"Look for a Chevy!\" she shouted, holding an arm up long enough for me to see a set of keys.\n\n'Oh God.' I looked around franticly, but there were at least six of them there. \"What are we looking for?\"\n\n\"Something with stains on the seat!\" Donna said, running to the first two she reached. Then she reached a Nova and spotted some paperwork sitting in the back seat. \"Here it is!\" She stuck the key in the door.\n\nIt worked.\n\nShe jumped in and opened the passenger door. \"Get in!\" she shouted, but I was forty feet away. As I turned toward her there was another scream that emanated from the eatery. It wasn't the same as before. This one was fierce and guttural. The glass door shattered as 'Her Hugeness' flung it open and rumbled out only as a four hundred and fifty pound woman could. She was carrying the cook's nine iron.\n\nI knew I had to reach the car before I had a permanent divot in my head.\n\n\"Deadbeat! Dickhead!\" shouted Peg.\n\nI ran to the open door and slammed it shut behind me. \"Let's go!\"\n\nDonna held up a broken key head in my face.\n\n\"What happened?\" I asked, turning to see Peg getting awfully big in the window.\n\n\"It wouldn't turn and it broke!\" shouted Donna.\n\n\"You have to push that button over here,\" I said, feeling around the steering column. I looked out the window and Peg was about twenty feet away, but had stopped to take a breather.\n\n\"Fat bitch,\" I mumbled as I slid under the dash. A few wires here and then the car started. \"Okay, press the button to release the wheel.\" As I sat up, the nine iron crashed through the passenger window and nearly sent my IQ down to the drooling stage.\n\n\"Deadbeat!\"\n\nThe manager appeared in the doorway with his pants still down but his boxers back up.\n\n\"Someone call the police!\" He pulled out the elastic waistband and looked down. \"Someone call an ambulance! It's blistering!\"\n\nThe huge woman actually stopped a moment. She looked over her shoulder at the man that signed her checks and said, \"Who cares?\" Then her head slowly turned back to me with the club held high over her head. A wicked grin formed on her face. \"Fuck you Deadbeat,\" she growled.\n\nThe club swung down again.\n\nDonna threw it into gear and hit the gas. The club missed and caught on a piece of loose chrome.\n\n\"Fuck you, you piece of fat shit! Burn in hell! Eat me, hippo woman! You reek of fat smelly funk you piece of ugly fat, ugly fat, ugly...\" I realized Peg was still standing next to the passenger's window instead of becoming a shrinking image in the rear view mirror.\n\nThe nine iron worked itself loose and came down again.\n\n\"Donna?\" I asked urgently.\n\n\"It stalled!\"\n\n'Oh man!' I slid under the dash and again hit the wires. As Donna urged the car out of the lot, Peg managed to take few more swings and I got it on my upper legs. Her last swing caught the lever for the seat and hooked itself. She could have let go, but not her. As we headed out to the street, Peg was dragged a good fifty feet, screaming 'Deadbeat' the whole way.\n\n* * *\n\nHoly shit! Mom blew a guy for a Sloppy Joe...\n\n* * *\n\nDonna turned onto the main road and asked if I was okay. I was, but I doubted Big Peg was feeling too well as I watched her roll a few times onto the shoulder of the road in the side mirror.\n\n\"What happened back there?\" I asked, as the car raced down Front Street.\n\n\"I had this guy pegged the moment he walked up to the table,\" she said.\n\n\"What do you mean?\"\n\n\"I made him an offer that he was more than happy to accept.\"\n\n\"He wanted you to burn him?\"\n\n\"No, I offered him a blow job,\" she said turning her head toward me, allowing her breath to nearly render me unconscious.\n\nI hung my head and then stared out the broken window, hurt that 'My Girl' had done such a thing with that guy.\n\n\"What's wrong?\" she asked.\n\nI didn't answer.\n\n\"What? You don't think I blew him do you?\"\n\nI turned to look at her. \"I don't know what to think.\"\n\n\"Shit Ralph. All I did was spit on him a few times,\" she said, snorting as she chuckled.\n\nI felt myself going from feeling hurt to being thrilled. Donna used her head only as Ditzy Donna could.\n\n\"It took a few seconds for the guy to realize what was happening,\" she snorted. \"I could have paid him. I really do have money, I just couldn't help myself, so I started spitting away.\"\n\nMy own wee-willy shrunk at the thought. \"Donna, we have to get out of this car.\"\n\n\"No problem, here we go,\" she said, as we pulled into the mall parking lot.\n\n\"What are we doing here?\"\n\n\"There's a bus that takes us back to your street. Let's go,\" she said, and then kissed me on the cheek.\n\nIt burned. I didn't care.\n\nThe bus came along about ten minutes later and soon we were standing outside my apartment door pleading for Jim to let us in. The door opened a crack and we entered. Jim was on the other side of the door in my robe, blocking our path to the living room.\n\n\"Move,\" I said, as 'Lord of the Castle'.\n\nJim chuckled a bit. \"I just want you to know that the police were here for only a few minutes. Things got a little out of hand and...\" Jim shook his head a moment. \"She's a pistol in the sack.\"\n\n\"Move,\" I repeated, sure that the second command would be the charm. \"Wait a minute. What police?\"\n\n\"As the evening progressed, the bedroom antics moved from the bedroom to the living room.\"\n\nI pushed Jim aside and entered a disaster area. The couch was turned over, the black & white was on the floor busted, and my hanging plants were grounded. A man was standing outside looking in my newly shade-less window. Now that I was a few feet away from Donna, my sense of smell was coming back and it told me that something had been burned while I was out. I headed toward the kitchen.\n\n\"Oh yeah, I had a problem with some Jiffy Pop.\"\n\nI looked at the scorched cabinets above and the emptied CO2 extinguisher sitting below on the floor next to the stove.\n\n\"Did you know you have to shake those things while they cook?\" Jim asked, like it was the discovery of the century.\n\n\"Where is she?\" I asked, ready to pop him one.\n\n\"She left when the police did. I was waiting for you. Now that you're here, I'll be leaving,\" he said, as he took off the robe revealing his normal garb.\n\n\"Wait a minute,\" I said, \"What were the police here for in the first place?\"\n\n\"With all the screaming coming from Kelly, and man she is wild, the neighbors thought you were trying to fuck a cat.\"\n\nDonna turned to look at Jim. \"What? Where would they get an idea like that?\"\n\nJim cleared his throat a few times, not sure how much he should embarrass me. He settled on the max.\n\n\"Well, it seems that the neighbors know that Ralphie boy here hasn't had a girl in his apartment for himself other than his mom. When they heard all the screaming, hissing, and shrieking, they naturally assumed that Ralph was practicing feline fornication in here,\" he said, tossing me my robe and handing me a yellow folded piece of paper as he headed toward the door.\n\n\"What's this?\" I asked, opening it up.\n\n\"Oh, that's a citation for disturbing the peace,\" he replied as he opened the door.\n\nThe fine was fifty bucks, payable in three days. I handed it back to Jim but he wouldn't take it.\n\n\"You need this to pay it,\" I said waving it at him.\n\n\"I'm not paying anything.\"\n\n\"What do you mean? You're the one that caused...\"\n\nMy name was on the citation.\n\n\"You told them you were me? How did you get away with that? They must have asked for ID.\"\n\nJim pulled my wallet out of his pocket and tossed it to me. \"Don't leave home without it,\" he said as he walked out the door.\n\nIt took several minutes for me to get my emotions together. Behind me I could hear Donna setting the furniture upright and hanging the plants. All I could do was stare at my now empty wallet (Jim helped himself to my $20.00 gas and spending money) and that stupid citation.\n\n\"Ralphie?\"\n\nI dropped my arms to my side and hung my head.\n\n\"Ralph?\"\n\nI think I was ready to cry.\n\n\"Ralph!\"\n\n\"What?\" I asked turning to look at her.\n\nShe was bent over and walking around jerking her head at the ground like a chicken. Her arms were stretched back holding the rabbit ears from my black and white on her ass. As she pecked like a chicken, she fanned the two antennas vertical to horizontal over and over again.\n\n\"What am I?\" she asked, pecking away.\n\nI bit my lip. It was funny as shit, but all I wanted to do was dwell on the horrible evening.\n\n\"What am I?\" she asked again, fanning the antenna back and forth and pecking away.\n\nI coughed out a small chuckle. \"I don't know. What are you?\" \n\nShe started warbling some jingle and said, \"The following presentation is brought to you in living color...on NBC!\" and fell on her face laughing.\n\nSnort!\n\nOnly Ditzy Donna could have come up with that at that moment. She got up with a little rug burn on her chin, walked right up to me and gave me a hug.\n\nIt's the best hug I've ever had in my life.\n\n\"Ralphie, I'm sorry about tonight, but everything will be okay,\" she whispered in my ear. I'd never heard her so serious. \"Are you sure it's okay for me to stay here?\"\n\n\"Of course it is.\" I answered and then decided to get bold. \"I've missed you Donna.\"\n\nShe squeezed me hard. I felt that little jiggle I'd felt earlier and waited for the snort.\n\nThere wasn't any.\n\nI felt a drop on my neck and it didn't burn.\n\nShe was crying.\n\nI'd never thought it was possible.\n\nShe started to shake and sob. \"My Mom and Dad broke up. I had to leave school. I can't even go home. They sold everything. I knew there was only one possible place to go, and it was back here to you.\"\n\nAs she spoke she slobbered on my neck. It burned and would probably blister, but I forgot about my unbelievably horrendous day.\n\nI loved her, plain and simple.\n\nDitzy Donna.\n\nI'd loved her since the first time she laughed at lunch and milk came out of her nose. I loved her when she mooned the milk lady, gave the principle the finger, and when she told the biology teacher she couldn't participate in lab because she had her 'time of the month' and couldn't touch samples.\n\n*'I Loved Her! God Almighty I Loved Her!'*\n\nI pulled back a bit to look at her. Her hair was just as wild as ever, her eyes were watery, nose was running, and her breath was still deadly.\n\n\"You're welcome to stay as long as you need to,\" I said evenly, trying to hide what I was feeling for her.\n\nShe pulled back and headed toward the bathroom, stopping at the door. \"I think I need a shower Ralph.\" She wiped her eyes with her sleeves and then there was the slightest hint of a smile. \"You wouldn't happen to have a spare pair of pajamas around would you?\"\n\n*'Donna's gonna be in my shower! NAKED!!'*\n\n\"No, but I'll find something for you,\" I replied, trying not to have my voice give me away.\n\n\"Okay,\" she said, trusting my judgment. She closed the door and before I could get past the door to the bedroom, it opened and a pile of clothes and her sneakers were hurled out into the hallway. She closed the door and hollered, \"Leave them there. I'll take them down to the laundry room later.\"\n\nOn top of the pile was a bra. I picked it up and read the label; 'JC Penny, All Cotton, 38-DD, wash warm, tumble dry'.\n\n'DD? Donna was a DD?' I'd never have known if I wasn't seeing it in black and white. She always wore bulky clothes to hide them. Of course, the driver tonight got a great look at them, but not me.\n\nStranger one, me zero.\n\nHe got to cop a feel too.\n\nStranger two, me zip.\n\nShe said he drove away happy.\n\nStranger three, possibly four, me squat.\n\nThe sound of the water running in the shower woke me from my mental score keeping and I headed to the bedroom to straighten it, change the sheets and find something for Donna to wear. After fixing the bed, I realized that I didn't really have anything that would fit her other than a pair of jockeys and a tee shirt. I grabbed an oversized dress shirt in case she wanted to wear it on top. I had a robe but Jim had worn that and there was the smell of the Jiffy Pop incident on it. I changed into a tee and a pair of shorts.\n\n\"Ralph!\" I heard her call through the door.\n\n\"Yes?\" I answered, leaning against the door to hear.\n\n\"Do you have any towels? I didn't notice any on the holder,\" she shouted as the water continued to run.\n\nShe was right, I had washed them all last night and they were still in the hall closet. I grabbed two and knocked. \"I have them. Do you want me to leave them outside the door?\"\n\n\"No, bring them in,\" she said.\n\n*'Oh my God. Donna is going to be two feet away from me naked!'*\n\n* * *\n\nI felt a closeness to Pop I'd never felt before. He was reacting pretty much the same way I would have. I closed the book wondering if I really needed to read any more. I had a feeling things were going to get a bit smutty and I wasn't sure I was comfortable with that. I know I saw the word 'boobs' further in the story when I was flipping the pages. Well, if my Pop felt it was important enough to write it down and keep it, and I do like boobs...\n\n* * *\n\n\"Okay, I'm bringing them in,\" I said, wanting her to be ready.\n\nThe first thing I noticed as I opened the door was that Donna didn't have the shower curtain inside the tub. The second was that there was water all over the floor. The last thing I noticed was that the ceiling needed to be painted as my feet went out from under me and the back of my head slammed against the floor.\n\n---\n\n*'The next thing I remembered was that an Angel was above me. A naked Angel.'*\n\n\"Ralph, wake up!\"\n\n*'She has straddled me, her face is close to mine and she is gently tapping my face. Her breasts are brushing my chest.'*",
        "\"Ralph, please! Wake up!\"\n\n*'Her hands are cradling my face. Her breasts are pressing on me and her lips are close to mine. Her blue eyes are beautiful. She opens her mouth to speak, and her breath, her breath...'*\n\nMy head jerked up from the sinus assault and hit Donna square in the forehead.\n\n\"Oww!\" she said, as she grabbed her head and sat up straight, still straddling me.\n\nAs my eyes focused, the first thing I saw was the reason why Donna wore a 'JC Penny All Cotton 38DD' bra.\n\nHer skin was smooth and pure, free of blemishes and freckles. Her neck was slender and attached to a broad but truly feminine torso. Her stomach was flat and she had an innie, not an outtie. The blonde triangle of hair of her womanhood was sparse and delicate. Her hips were full and her waist small. At that moment, the center of my attention was the most perfect pair of breasts I'd ever seen in any Playboy or Penthouse magazine. They swelled with her breath. They swayed as she held her head and moaned. She hadn't caught me looking.\n\nI raised my hand to my eyes and moaned as if my head hurt. It wasn't much of a stretch since I had a splitting headache.\n\n\"Ralph, are you alright?\" she managed to say with pain still stinging her head.\n\nStill holding my hand over my eyes, I answered, \"Yeah, I think. What happened?\"\n\n\"I'm sorry, Ralphie, I left the shower curtain outside the tub. You slipped and fell bringing in the towels.\"\n\nI felt her lift off me and stand. She dropped the towels on the floor and she moved them around with her feet to absorb the water. Then she slipped her arms under mine from behind and using strength that I didn't know that she possessed, she pulled me to my feet. I wobbled a bit and she held on to me, pressing her breasts into my back.\n\n\"Come on, let's get you into your room,\" she said guiding me out into the hall. \"We're both still kind of wet Ralph, do you have any more towels?\"\n\nI grunted in the direction of the hall closet.\n\nShe leaned me against the wall and let go, watching to make sure I wasn't going to keel over. To me the hall was spinning but I wasn't. She made it back just in time as my legs gave out.\n\n\"Whoa Ralphie, take it easy,\" she said, putting an arm around me to hold me up.\n\nAs stunned and headachy as I was, the fact that Donna was still naked and pressing her breasts into my side wasn't lost on me. Neither was the irony that because I was stunned and headachy, wee-willy was fast asleep.\n\nShe led me into my room and pulled my water soaked tee shirt off.\n\n\"Hold still,\" she said, and then from behind me, she pulled down my jockeys, tapping each foot she wanted me to lift to get them off of me. She took a towel and patted me dry and then she took a look at the back of my head. Her fingers were delicate as she probed looking for blood. \"No cuts Ralphie, but you've got a big lump back here. Are you still dizzy?\"\n\nThe room wasn't spinning nearly a fast as before, but it was still on the move. \"Yeah,\" I answered, more like a moan than a word.\n\n\"I think you may have a concussion. If that's the case, I can't let you go to sleep. Now, before I call an ambulance, you're going to have to convince me that this is a minor injury. If you start puking, I'm making the call. Got it?\" she asked all business like from behind me.\n\n\"Okay,\" I mumbled.\n\n\"Close your eyes,\" she commanded. I did. She let go of me and waited to see if I could stand by myself. I wobbled but managed to stay on my feet. \"Okay, still not real steady,\" she said, grabbing my upper arm to support me.\n\n\"Open your eyes.\" I did. \"How many fingers do you see?\" She was flipping me the bird.\n\n\"Two,\" I honestly replied, \"But I'm sure there's only supposed to be one.\" I guess she was getting worried, because she repeated the exercise several times before I finally saw the correct number of fingers.\n\n\"Ralph, I'm going to let go of you a minute to comb my hair, okay?\"\n\n\"Okay,\" I replied. I physically felt better but emotionally not great knowing at this moment Donna was in the bathroom drying herself and more than likely seconds away from putting on the clothes I laid out for her. I closed my eyes and thought of her as she sat on me minutes ago. I heard the water run in the bathroom, then the sound of her gargling (thank God) and then a moment later her hand was back on my upper arm.\n\n* * *\n\nI chuckled a bit. Tough luck, Pop, at least you got to see them. That's further than I've ever gotten with a girl. I was suddenly a bit envious...\n\n* * *\n\n\"I'm still not convinced you can stay here tonight instead of the hospital. Either way, you're not going to get any sleep for a while. Got your eyes closed I see. Good, we're going to play another game.\" She let go of my arm and said, \"Okay, open your eyes.\"\n\nShe was standing in front of me still naked.\n\n*'She's in front of me naked!'*\n\n\"I want you to look me in the eyes and point to any part of my body I tell you to. That way I'll know if your hand and eye coordination is okay.\"\n\n*'She's in front of me naked!'*\n\nShe leaned closer to me looking me in the eyes. \"Are you okay with this, Ralph?\" She tapped me on the forehead. \"Ralph?\"\n\n\"Yes, I'm fine.\"\n\nShe pointed from my eyes to hers reminding me to look at her and said, \"The first body part I want you to point to is...\"\n\n*'Boobs! Say Boobs!'*\n\n\"...my nose.\"\n\nI pointed.\n\n\"Okay, good. On the next body part, I want you to use two hands. Now, point to my...\"\n\n*'Boobs! Oh sweet Jesus Donna, SAY BOOBS!'*\n\n\"...my ears.\"\n\nI pointed, but I think I whimpered in my disappointment.\n\n\"Are you sure you're okay, Ralph?\" she asked.\n\n\"Yeah, yeah, yeah,\" I lied.\n\n\"Okay, two hands again. This time I want you to reach out and grab these body parts. Ready? Okay place your hands on my...\"\n\n*'BOOBS!'*\n\n\"...shoulders.\"\n\n*'Who are you kidding, she's never going to tell you to feel here boobs. She's your friend idiot, not your girlfriend. She's just doing this naked to keep you awake.'*\n\nI reluctantly reached out and placed my hands on her smooth skin.\n\nThere was a long awkward silence between the two of us as we stared at each other. She eached her arms out and placed them on my shoulders.\n\n\"It's to keep you steady. I don't want you to faint on me.\"\n\n\"Why would I faint?\"\n\n\"Because, now I want you to...\" she stopped as she pushed my hands from her shoulders to her breasts, never taking her eyes from mine.\n\n*'I'm never going to wash these hands again.'*\n\nA grin started to form on her face as she sensed a change in me. She broke eye contact just long enough to look down and see the awakening and then locked her baby blues on me again.\n\n\"Are you having fun?\" she asked and then snorted.\n\nHer breasts were large and soft, yet didn't hang down. They seemed to defy gravity.\n\n\"I don't want you to get the wrong idea here. We're not going to jump in bed and play bedroom Olympics. I need to keep you awake, not tire you out.\" She reached down brushed me with her fingers. \"You're pretty excited Ralph for having a big bump on the noggin. Haven't you ever played with a girl's boobs before?\"\n\n\"Of course,\" I lied.\n\nShe frowned at me. \"You can't lie to me, Ralph. This thing's ready to explode,\" she said, tapping at mini-me.\n\n*'A few more taps and she's going to be proven right.'*\n\nIt pained me but I had to back away from her tapping. I let go of her breasts and took a few steps backward. \"I've had a few girlfriends. Of course I've gotten to second base.\"\n\n* * *\n\nPop, what the hell are you doing? Don't be a dope, get back there...\n\n* * *\n\n\"Ever been naked with a girl before this?\" she asked, watching mini-me bounce with my heartbeat.\n\n\"Well, I don't like to brag,\" I said, sounding sincerely coy.\n\n\"If that's the case, then that should go away in a few minutes with me over here and you over there,\" she said, flopping down on my bed making her boobs jump and jiggle. I looked away a moment and when I looked back, she was caressing herself. \"If it doesn't go away soon, I'm going to know you're full of it.\"\n\nHer hands slid from her neck, past her breasts, down to crotch. She spread her legs and slid her hand...\n\n\"Alright, this is the first time,\" I said, realizing that my condition wasn't going to change with this peepshow going on.\n\n\"There's always a first time for everything...\" she said, as two fingers disappeared inside of her. \"...Ralph,\" she grunted.\n\n* * *\n\nOh my God. My Mother is going to...\n\n* * *\n\nFor the next few minutes, Donna worked on herself with abandon. I wanted to give her privacy, but then again she initiated it in front of me. Her hand started moving faster and her fingers soon became a blur as a series of guttural grunts came from her. Her hand slowed and she was soon breathing normally again. With her free hand she pulled her wild locks from her eyes and looked at me. \"I bet that was a first for you too,\" she said with a chuckle and snort.\n\n\"Ah,\" I started to say as she went to the bathroom. Shortly she immerged combing her hair and pulling it back into a short pony tail.\n\n\"There, I won't have to deal with that for the rest of the night,\" she said as she walked past me tapping me again. \"It's still there. I thought you were going to take care of it while I was taking care of myself.\"\n\n\"Donna, have you slept with anyone yet?\"\n\n\"What? You're asking me if I'm still a virgin?\"\n\n\"I guess,\" I said.\n\nShe looked at me and I think she was finally getting the picture about the way I felt about her. \"It's pretty obvious you are,\" she said. A silence grew between us. She turned her back to me and said, \"Don't ask questions you don't want the answers to, Ralphie, because I won't lie to you.\" She turned back to face me.\n\nI had my answer. I knew it was stupid to think she would still have the same virginal infliction that I had, but it bothered me. It bothered me enough that things were shutting down below. Donna noticed.\n\n\"Look, you should be thrilled. I just gave you a show that guys would have paid good money for. Just so you know I've never done that for anyone else. Now, do you want to continue the concussion watch naked or should we get dressed and play chess?\"\n\n*'She did it just for me'.*\n\n\"Naked!\"\n\n\"That's what I thought. Okay, how about we play a little game?\" she asked, sitting on the bed.\n\nIt's difficult to question a naked woman on your bed, but with Donna it's better to be sure. \"What are we going to play?\"\n\n\"It's called 'Take It'.\"\n\n\"'Take it?' How do you play?\"\n\n\"Wait, I'm thinking,\" she said, and then snorted. \"Okay, come over here and put your hands behind your back. Yeah that's it, right there. Now clasp your hands behind you. Now you can't release your hands or try to use them in any way or you lose.\"\n\n\"What is this game all about?\" I asked, knowing she was making it up as she went along.\n\n\"Well, we're going to find out just how long you can 'take it',\" she said, turning my electric alarm clock toward her. \"When the second hand reaches the top we'll start.\"\n\nI was more curious than alarmed. I knew she wouldn't do anything to hurt me, but I had a feeling a tickling contest was coming up.\n\nBoy was I wrong.\n\nThe second hand reached the top and Donna immediately leaned over and started blowing on my cock. The effect was instantaneous. Without touching me she had me as hard as a rock within seconds. She looked up at me. \"That was fast. When was the last time you,\" she made fist with her hand and jerked it a few times.\n\nI had to think about that. I couldn't remember. \"I'm not sure. It must be at least three weeks,\" I replied.\n\n* * *\n\n\"Bullshit,\" I said aloud looking at my jumbo supply of hand cream on the dresser....\n\n* * *\n\nDonna stopped blowing and gave me a stupid look.\n\n\"I'm serious. I just don't have the time, usually,\" I replied, shrugging my shoulders. \"Are there any rules in this game?\"\n\n\"Yep, I make them up as we go. New rule, no more talking on your part.\"\n\nI nodded and watched as she went back to blowing on me. When the second hand reached the top again, she started tapping the head with her index finger, as she blew on it. I wasn't as sensitive as I had been before, but it still felt good.\n\n\"Personally, I don't give you five minutes, but then again, you're not feeling me up this time,\" she said as the tapping continued.\n\nThe second hand reached the top and she began running her index fingers up and down me. That got my attention. I gasped and she laughed.\n\n\"No way. You're not making five minutes,\" she said, snorting away.\n\nNow I was into the game, if only to show her that I could 'take it'. I closed my eyes and thought about taking out the trash and naming the Presidents. I thought about her breath earlier and Big Peg's clit.\n\n\"New rule. You have to watch,\" she said, figuring out what I was doing.\n\nThe second hand reached the top and I was into my fourth minute. Donna placed one hand on the base of my cock and held it as she circled me with the other and started drawing her hand up the shaft, letting go and repeating the upward movement, over and over. There was no way in hell my virginal nineteen year old cock and balls (that were three weeks overdue from their last spunkfest) were going to outlast the onslaught of stimulation that Donna fingers were producing on them. Then I noticed that she was real close to me down there. I knew that when I came I usually made quite a mess with some force behind the spasms. I didn't think she was expecting what was going to happen. Maybe the other guys she'd been with were dribblers. I don't know. All I knew was that I either had to warn her or stop this before it happened. She stopped.\n\n\"Five minutes, you win. You can 'Take It'.\"\n\n*'All that thinking spared me from losing, but did I win?'*\n\n\"Wait a minute,\" I said.\n\n\"No, no, you can 'Take It',\" she said, waving me off.\n\n\"It's just taking longer because my head hurts,\" I said, hoping she would understand.\n\nShe started laughing. \"Do you really think I'd leave you hanging like that?\" she said, grabbing mini-me and pulling me close to her. She leaned over and kissed it.\n\n*'She kissed it!'*\n\nShe started yanking in earnest.\n\n\"Donna, I've got to tell you something,\" I said, feeling the alarm bells going off again.\n\n\"What?\" she asked, slowing down a bit.\n\n\"I wouldn't sit that close to me when the time comes.\"\n\n\"What are you talking about?\"\n\n\"I tend to make a mess,\" I said, as the time was getting close at hand.\n\nShe looked down. \"So, it's your rug,\" she snorted. \"It's a neutral color, it'll probably blend right in when it's dry.\"\n\n\"No, I mean, you're probably going to get it right in the face.\"\n\nShe stopped and removed her hands from me. \"You mean you can shoot?\"\n\n\"What?\"\n\n\"You know, when you cum does your sperm shoot far?\"\n\n\"Uh,\"\n\n\"How far?\"\n\n\"I never really measured it,\" I said, unsure.\n\n* * *\n\n'That's were I got that from', I thought, as I looked at the stains on the wall from some of my own spunk projectiles...\n\n* * *\n\n\"Oh man, I heard from my girlfriends about this but I never believed them. You're not messing with me are you?\" she asked, turning a suspicious eye on me.\n\n\"Ah, no. Of course, now that I've told you, nothing will happen.\"\n\n\"Sure it will, because I'm not going to stop until I see it,\" she said, stroking me again. \"To avoid more laundry, I'll point you at me. I can always wash it off,\" she said, snorting at me.\n\nI closed my eyes, but it wasn't working. Something was bothering me and I figured out what it was. I reached down and stopped her.\n\n\"What?\" she asked concerned.\n\nI pulled her up off the bed and pulled her toward me. She wrapped her arms around me and asked, \"Don't you want me to do it?\"\n\n\"Yes,\" I replied, \"But I want this first.\"\n\nI turned her head and kissed her. I used all the mental empathy I could muster to show her how I felt. I don't know how long we stood there kissing, but when we finally came up for air, mini-me was asleep and Donna had a glazed look about her. She held her arms around my neck and looked deep into my eyes.\n\n\"I've never been kissed like that Ralph.\"\n\n\"That's because I never... I never... kissed a girl that I've loved before.\"\n\n\"Don't just say that because I was pulling your pole tonight. I've dated a lot of guys Ralph and most of them just want to get into my pants. To them I'm a joke and a conquest. They all talk about love and stuff, but in the end, all it is to them is that they got a shot at trying to fuck Ditzy Donna. Yeah, that's right. I know what everybody calls me. So please, don't bring love into this,\" she said, staring into my green eyes.\n\n\"You're wrong Donna.\"\n\n\"No, I'm right. Everything that went wrong tonight was because of me. 'Ditzy Donna has done it again' is what everyone will be saying when you tell people about tonight.\"\n\nI leaned my head in gently until out foreheads were touching. \"Donna, I don't understand. You came back east to see me. You said so. That must mean you have some feelings toward me. I must be more than a friend to you. When I kissed you, you didn't pull away. I'm not the other guys, Donna. I do love you.\" I kissed her again. Donna placed a hand behind my head to pull me closer.\n\n\"Oww!\"\n\n\"I'm sorry,\" she said, gingerly touching the lump back there. \"I think we're going to have to put your love talk on hold because I'm not sure if it's you talking or the concussion,\" she said, looking deep into my eyes.\n\nWell, I'd told her and she was still here and she was still naked in my arms. Not bad even though it had cost me a burnt kitchen, a citation, and my spending money. The lump on the back of my head would go away, the other stuff wouldn't. Of course, the stolen car might come back to haunt us, but that only depended if Big Peg knew who I was. Then it hit me. She was deflecting the conversation.\n\n\"Do you have any feelings toward me, Donna?\"\n\nShe sighed and pulled away from me. \"Do I need to get the rabbit ears?\" she asked.\n\n\"No, just tell me. You don't have a concussion.\"\n\nShe sat on the bed, and looked up at me. \"You want to hear the whole thing?\"\n\n\"Yeah,\" I answered.\n\nShe nodded her head and spoke. \"You are the only person that ever treated me as a person instead of a ditz. I could talk to you about anything, but at the time, I wasn't ready to date. I knew you were, but I just wasn't ready. Instead, I used our friendship to keep us close. Oh, everybody liked me. I was fun to have around and made everyone laugh, but I was never really close to anyone except you. When my parents up and moved, I was devastated. In the new town we were in no one wanted to have anything to do with me. I tried to date, but I've already told you what the guys thought. When my parents split up and sold everything, there wasn't a person in that town that wanted me around. I took a chance that you weren't hooked up with a girl or married or something like that and came back East to find you.\"\n\nShe stood and headed for the living room.\n\n\"Where are you going?\"\n\n\"To find the rabbit ears, because I need them right now.\"\n\nI watched as she disappeared into the living room and came back with the useless things in her hands. She raised them and placed them on her head. She turned from side to side and moved the antennas round.\n\n\"What are you doing?\" I asked chuckling.\n\n\"Getting in focus, because I'm going to tell you something that you may not believe coming from me.\"\n\nI waited as she finally came to a halt.\n\n\"You asked me earlier if I was a virgin. I told you that you might not like the answer. Well, here it is. Yes, guys have seen and played with my boobs, but that's it. Tonight, when the manager pulled down his pants and I spit on him that was the first time I'd seen the male sex organ. Yours is the first I've ever touched and the reason I did is because I do care about you. If it's love, I don't know. I always let guys think that I'm not a virgin. Most guys want to take that status away from girls so much that if they think otherwise, their not as full of the idea of getting into my pants. Without lying to you, I let you assume otherwise. When we were playing the game, it was from memory of what my girlfriends told me they did to their guys to drive them nuts. So, yes Ralph, I'm just as much a virgin as you are.\" She set the antenna down.",
        "\"It's a good game,\" I said, and winked at her.\n\nShe giggled, snorted and then there were a whole lot of teeth and gums showing. \"You know, it's been long enough that if you were still woozy I'd know you had a concussion. I guess you don't. Too bad you don't have a condom here.\"\n\nMy pride was hurt. \"What makes you think I don't have a condom?\"\n\nShe tilted her head and looked at me. \"Do you have one?\"\n\n\"Well, no.\"\n\n\"That's okay. It's too late now, but we can always get one tomorrow. Kiss me again Ralph.\"\n\n* * *\n\nNo wonder he gave me that box of Trojans...\n\n* * *\n\nAs I kissed her, she slid her hand down and found mini-me sleeping again. With very little coaxing, he was soon wide awake and ready to go.\n\n\"You know, I think you're full of crap,\" she said, squeezing away.\n\n\"What do you mean?\"\n\n\"I think you were just trying to impress me about being able to shoot,\" she said, and then snorted.\n\n\"No, I'm telling the truth,\" I replied, not as confident as before. The last thing I wanted to do was make a boast that for some reason I couldn't back up.\n\n\"Alright, Ralphie, I want to see this. Now, how do you want to do it?\"\n\n\"Well...\"\n\n\"I want to see it and I've changed my mind. I want to see how far it will go, so my boobs are out.\"\n\n\"What if I don't meet your expectations?\" I asked, feeling the effects of her squeezing below.\n\n\"You'll have to wait a while to use that condom.\"\n\n* * *\n\nCome on Pop, you can do it!\n\n* * *\n\nAs I started to adjust myself with her our feet tangled and down we went to the carpet.\n\n\"You didn't hit your head did you?\"\n\n\"No, not this time,\" I replied.\n\n\"Good,\" she said, as she adjusted herself down to place her mouth over me.\n\nShe didn't know what she was doing, but it felt great. She licked and slurped. There were a few snorts as she caught me watching. She pulled off me and told me to warn her way ahead of time, and then started again. I was already pretty far gone, so I told her to look out. She pulled her head away and slid her hand up and down me in a quick motion.\n\nI felt it start like a fuse burning its way to a stick of TNT. She was oblivious to what she was doing to me as her gaze was on her hand and mini-me, waiting for it to shoot. I was flat on my back but I too wanted to see myself how far it was going to go, so I rolled on my side. Donna didn't miss a moment as from behind me, her hand continued to slide up and down. My stomach tightened, my toes curled, and my balls convulsed.\n\nThe first pulse was embarrassingly short, maybe an inch or two. The second produced a gasp from her as it sailed three feet through the air. Thanks to the way she was holding me at the moment of the third spunk missile, it rose through the air a few feet and landed at the edge of the wall, six feet away. Donna started laughing at that Olympian eruption and the remaining ropes of spunk fell to the neutral colored rug, harmless.\n\n\"I don't believe that! That was so cool,\" she said hugging me. She noticed I was looking at the mess I made on the rug and rubbed her hand over the spunk she could reach, spreading it out on the rug. \"No one will ever notice,\" she said, as she kissed me hard.\n\nWe slept right there on the rug that night.\n\n* * *\n\nI never thought of my Pop as my hero before, but he reached that plateau at that very moment...\n\n* * *\n\nI woke the next morning alone. I went to the kitchen and found a note from Donna telling me she was downstairs in the laundry room washing her clothes. That made sense, so I started the Mr. Coffee and checked the fridge for breakfast food.\n\nAs I was cooking some bacon, Donna came in. \"I hope you didn't mind that I used some of your clothes to go down there,\" she asked, wearing my old gym clothes.\n\nShe looked great in them. \"No, I'm glad you could use them,\" I replied. \"Breakfast?\"\n\n\"Yes,\" she said, slipping into a kitchen chair and inhaling the odor of the bacon.\n\nI poured her a mug of coffee and set the sugar and milk in front of her. She sipped the coffee black, just like me. She had taken off the hair band and her hair was now as wild as I've ever seen it. Somewhere underneath of it she said, \"I've got to get my little cousin a gift for his birthday. Can we do that when we go out for a condom today?\"\n\nI hoped she wasn't kidding last night. \"Sure,\" I answered, trying to sound nonchalant. \"Where does he live?\"\n\n\"Out west, but I'll ship it to him,\" she said, sitting at the table with a fork and knife in her hands.\n\nI finished the bacon, fried some eggs and put them on her plate. She looked around the table and then the kitchen counter. \"Do you have any Tabasco sauce?\"\n\nI reached into the cupboard and handed her a bottle. She nearly emptied it on the eggs and started shoveling in the food.\n\n* * *\n\nMom still eats the same way...\n\n* * *\n\nShe looked up a few times between shovels and said that it was good. Something told me that Donna didn't get home meals all that often. When she was done she leaned back, belched, farted, and then snorted. \"That was really good, Ralph.\"\n\n\"Thanks, Donna. Look about last night...\"\n\n\"What?\" she asked, looking at me like I was speaking Russian.\n\n\"I just want to...\"\n\n\"What about last night?\" she asked. \"Is there something you didn't say last night or regret saying?\"\n\nShe was being very abrupt and straight forward. I went on the defensive.\n\n\"No, I just wanted to say that I...\"\n\n\"...You love me, yes I know, and I'm thinking about it. Now we're going out to buy condoms and a present for my nephew,\" she said, reaching into a pocket and pulling out a roll out party favor. She blew on it and it rolled out but only a weak honk came out of it. She looked at it and said, \"I need a new one of these.\"\n\n\"I'll buy you a dozen,\" I replied.\n\nSnort.\n\nIn the late morning we went into town to get the condoms and her nephew's gift. We shopped a few stores and then she settled on a state of the art water pistol from Woolworths that looked exactly like an Uzi. I also bought a few noise makers for Donna as well as a pair of Groucho Marx glasses. Then we picked up a pack of condoms at the local Sun Ray Drugs which was kind enough to give us a box big enough to ship the present. It was Saturday so we hurried to the Post Office before it closed at noon. Old man Johnson, the local Postmaster, insisted on being there even though he didn't have to be. Most Post Offices only sold stamps on Saturday but not Old Man Johnson. He insisted on full service, until noon that is.\n\nAs we hurried before it closed, Donna opened the joke glasses and put them on. She mugged for everyone we passed. Stopping just outside the office Donna looked at her reflection in the window and snorted at her appearance. \"Here,\" she said, taking them off and putting them on me. She giggled as I put them on. I checked myself out and thought I looked just like Groucho. A nineteen-year-old Groucho. \"I'll wait out here. The address is on the box,\" Donna said as she shoved me in the door.\n\nThe place was deserted other than Mr. Johnson. I put the box up on the counter and held up the water gun.\n\n\"Hi Mr. Johnson, I need you to...\"\n\n\"Take it...\" replied Johnson with his hands in the air.\n\n\"No, I need you to...\"\n\n\"There,\" he said, placing his register till up on the counter.\n\n\"What are you doing? Mr. Johnson, I need you to...\"\n\n\"Will you please go? I'm giving you the money!\"\n\nI took off the Groucho glasses and said, \"Mr. Johnson, it's me, Ralph.\"\n\nHe became more terrified than before. \"Don't show me your face. Felons always kill the people that can recognize them.\"\n\n\"What?\"\n\nThere was the sound of sirens and then the front door burst open. \"Drop it asshole!\"\n\n\"What?\"\n\n\"Last chance funny man, drop the weapon!\"\n\n\"What are you talking...?\"\n\n\"Aim to kill!\"\n\nThe sound of several rifles having their safeties switched off and rounds loaded convinced me that I should drop the squirt gun. It hit the ground and shattered.\n\n\"Take him down!\" shouted the squad leader.\n\nI was tackled, hog tied, dragged out and tossed into the back of a paddy wagon. Donna was nowhere to be seen. The van lurched ahead and a small slit opened between me and the drivers.\n\n\"Hey asshole, did you really think you were going to getaway with it with a water gun?\" asked some Harry Hairshirt type.\n\n\"I wasn't...\"\n\n\"Okay, shut up. You have the right to remain silent...\"\n\n* * *\n\nPop's a jailbird! I hope he wasn't the bitch in the lockup...\n\n* * *\n\nSix hours later I was being arraigned for the felony of attempted armed robbery of a post office.\n\nMy public defender, Potter, wasn't as sympathetic as he could be.\n\n\"You sick shit. What did you think you were doing? Mr. Johnson has known you since you were in diapers. What were you thinking when you went in there and nearly gave him a heart attack?\" he asked with tons of sympathy.\n\n\"Look, I was trying to send my girlfriend's nephew a water gun for his birthday. Just look at the evidence. The box that I wanted to send it in must still be at the post office. The gun still had the receipt on it!\"\n\n\"Like you're a real model citizen. The DA handed me some stuff on you,\" he said, holding up rap sheet. \"You skipped a check on a place called the 'All the Way House' a few years ago and it's been reported that you did it again last night and added assault this time to a waitress named 'Big Peg.\"\n\n\"Whoa, wait a minute,\" I started to protest.\n\n\"Oh, and just for fun, you were handed a citation last night for fornicating with a cat in your apartment. Yeah, you're a real class act,\" he said, tossing the sheet on the table in front of us. \"Your only hope is to plead guilty and hope the sentencing judge is having a real good day and not a cat lover.\"\n\n\"I didn't fuck a cat last night and I didn't assault anyone let alone...\"\n\n\"All rise! Judge Charles Chapman is taking the stand,\" commanded the bailiff. A short balding man in black robe and horned rimmed glasses took the stand and sat. \"This case 41189-74, attempted armed robbery of a post office.\"\n\n\"Let's make this quick, I need a smoke. Class \"A\" felony,\" mumbled the judge as he skimmed the arrest warrant. Then he looked up over his glasses at me. \"Young man, you tried to rob old man Johnson with a water gun? What were you thinking? You might go to jail for the rest of your life.\"\n\n\"Your honor I didn't...\"\n\n\"Silence your client, Potter,\" ordered the judge.\n\n\"Will you just shut up until I say otherwise,\" Potter hissed at me and then flashed the judge a wicked grin.\n\n\"What is your client's plea, Potter?\"\n\n\"Guilty, Your Honor.\"\n\n\"No! I'm innocent.\" I cleared my throat and said, \"My plea is not guilty, Your Honor, Sir.\"\n\n\"So, Potter, what is your client's plea?\" asked the judge, wringing his hands, badly in need of a smoke.\n\n\"Guilty,\" replied Potter.\n\n\"What are you doing?\" I hissed at him.\n\n\"You're going down, so you might as well just throw yourself at the mercy of the court,\" he replied, loud enough for the court guards fifty feet behind us to hear.\n\n\"You're fired,\" I said to Potter and turned back to the judge. \"Your Honor, I plead not guilty.\"\n\n\"Okay, what does the DA's office want on bail?\" asked the judge, clearly fidgeting.\n\n\"We ask that Ralph Helpers be held without bail, Your Honor,\" asked a young district attorney that looked familiar to me.\n\n\"Isn't that a little severe considering this is this mans first offense and the hold up was with a water gun? Clearly he meant no harm to Mr. Johnson,\" asked the judge, sounding as if he was on my side somewhat.\n\n\"Well there's a report here that says that Mr. Helpers committed a theft and assault at a public restaurant last evening and stole the manager's car,\" said the DA as he handed the judge the report.\n\nJudge Chapman glanced at the report and looked up.\n\n\"Is the restaurant and the manager pressing charges?\" he asked, tapping his feet in need of a nicotine fix.\n\n\"No, Your Honor, but you might want to read what he did afterward,\" the DA said.\n\nThe judge read further and then took his glasses off and looked directly in my eyes. \"You fucked a cat last night?\"\n\n\"No! That was my friend and his girlfriend.\"\n\n\"You allowed your friend and girlfriend to desecrate a poor kitty cat in your presence last night?\" asked the judge, nearly jumping out of his chair.\n\n\"No! That never happened!\" I said, nearly in tears.\n\nThere was a commotion in the back of the court and then a giggle and snort.\n\n\"Order in the court,\" shouted Judge Chapman as he looked to see what the commotion was about. Then he noticed someone coming toward the visitors railing. I looked and a huge smile formed on my face.\n\n\"Donna!\" shouted the Bailiff.\n\n\"Donna!\" shouted the DA.\n\n\"Donna!\" shouted Judge Chapman.\n\n\"Hi guys,\" she said, flapping her sleeves at them. Behind her was Mr. Johnson.\n\n\"Donna, why have you come to my courtroom?\" asked Chapman, forgetting he needed a smoke.\n\n\"I had to, Ralph didn't do anything wrong. Can I talk to the DA a minute?\" she said, waving at the guy that looked familiar.\n\n\"This is unusual, but go ahead,\" he said, smiling at 'My Girl'.\n\nDonna motioned for the DA to come over to her. Mr. Johnson and she had a very animated conversation with him and then the DA nodded and came back to his table.\n\n\"Your Honor, it seems there's been a misunderstanding with Mr. Helpers here and we wish to drop the charges.\"\n\n\"Sounds good to me,\" said the judge, as he held his hand out to his bailiff who handed him a pack of cigarettes and a lighter. \"If anybody needs me, I'll be outside. Oh, by the way, nice to see you, Donna,\" he said as he booked out the side door.\n\nThe bailiff took off the handcuffs and I made my way to Donna. The DA was trying to get her phone number.\n\n\"I told you Norm, Ralph is my boyfriend.\"\n\nNorman! Of course! As a senior he had a thing for Donna while we were still in ninth grade. I always thought it was a bit sick for an eighteen year old wanting something to do with a fourteen year old. It didn't explain the Judge and bailiff.\n\n\"Take a hike, Norm,\" I said, pushing him away.\n\n\"Think about it?\" he asked hopefully. Donna waved at him as he moved away.\n\n\"I'm sorry Mr. Johnson, I didn't mean to scare you,\" I said to the old man.\n\n\"Ralph, when I realized it was you I wasn't scared, I just couldn't believe you were doing that to me. Donna explained it all, that's why I'm here.\" He gave me a wink and said, \"Good luck with her, she's one in a million.\"\n\nDonna hugged me and snorted. \"I'm so sorry, Ralph. I didn't know what happened to you.\"\n\n\"Where did you go?\" I asked, relieved and peeved.\n\n\"When you went in to the Post Office, I noticed that the mission was open so I went in to cheer up the kids in there. I was well into my repertoire when I heard there was a robbery. I thought you were already done and looking for me when I realized it was you that robbed the Post.\"\n\n\"I didn't...\"\n\nShe put her clean and sweet dryer fresh sweater sleeve over my mouth. \"I know you didn't. That's why I talked to Mr. Johnson and brought him down here.\"\n\nI put my arms around her. \"Donna, I don't know how to thank you.\"\n\n\"I got you into it. If I wasn't so ditzy it wouldn't have happened,\" she said softly into my ear.\n\n\"Don't worry about it, it's over now. By the way, how do you know the judge?\"\n\nShe looked around and said, \"I'll tell you when we're outside.\" She led me out of the courtroom where it was now evening. She talked as we walked to my car that she used to get to court. \"The judge and the bailiff are...an item, if you get my drift.\"\n\nMy eyebrows went up several inches.\n\n\"Yeah, I figured that out when I used to go around collecting cans for the mission from house to house before I moved. At the judge's place, the bailiff answered the door every time. They actually are very discreet.\"\n\n\"Their secret is safe with me,\" I said as she walked me to my car.\n\n* * *\n\nWhat the hell is 'an item' and what's the secret?\n\n* * *\n\nLater in my apartment, Donna fixed us a few sandwiches and we sat talking. There wasn't any attempt to be funny or do a stupid stunt. She was as subdued for Donna as I'd ever seen her. I asked her if she feeling okay and she assured me she was.\n\n\"What's wrong then?\" I asked.\n\n\"Nothing at all, except I don't know what I did with them,\" she replied.\n\nWith all that had happen in the last twenty four hours I wasn't sure what she talking about. Then it hit me. \"The party favors?\"\n\n\"No,\" she said, unenthusiastically.\n\nI didn't know what she was talking about. \"What, Donna?\"\n\nShe finished her sandwich and gave me a sad look. \"The condoms.\"\n\nI walked into my room and came out with the package she was fretting about. \"These?\"\n\n\"Where were they?\" she asked, perking up.\n\n\"In my pocket. The cops let me keep them in case I needed them in the lockup.\"\n\nDonna snorted. \"You didn't, did you?\"\n\n\"Nope.\"\n\n* * *\n\nI'm not sure if I really want to read anymore of this. Pop, please give me a sign whether or not you're going to give all the dirty details...\n\n* * *\n\nWhat follows are all the dirty details.\n\n* * *\n\nThanks Pop...Aw screw it, I'll read it anyway...\n\n* * *\n\nFor the next few minutes, Donna and I read the instructions and acted out the proper deployment of the condom on a banana. We didn't want to make any mistakes because we only had two left.\n\n\"I think I've got the idea, Ralph,\" she snorted. \"So, do you want to just jump in the sack and say goodbye to virginity or do you have a plan?\"\n\nLike most guys, I hadn't really worked the whole thing out. I was too worried about making it happen to care how it happened. I walked into the kitchen to get a soda and when I returned, Donna had the condom stretched over the top of her head and was trying to pull it down.\n\n\"What are you doing?\"\n\nShe got up and went to the bathroom and started laughing. By the time she returned, she had it worked down to her nose. \"I wanted to see what a dickhead looked like, or in this case a condomhead.\"\n\nI realized from the way she was shaking that she was nervous and so was I. Both of us had to calm down or this was going to be a horrible attempt at first time sex.\n\nI got an idea.\n\n\"You know, I think I need shower after being in that lockup.\" I walked up to her took a sniff. \"You could use one too.\"\n\n\"I do?\" she said stunned and sniffed her armpits. \"No I don't...oh, I get it. You want to do it together. Well, do you want to do it with me or with condomhead?\" she asked, pointing to the rubber still halfway down her head.\n\n\"You.\"\n\n\"Good,\" she said, pulling the thing off her head. \"I was starting to sweat in there.\"\n\nWe undressed each other until all that was left was Donna's JC Pennys All Cotton 38 DD bra. I had a feeling that Donna was a bit bigger than the bra boasted as it was straining to hold her in. She saw me gawking and asked if I wanted to take it off or did I \"want to watch?\"\n\n\"I'm waiting for the midnight matinee,\" I replied, noting the time.\n\nShe moved into the open area of the living room between the sofa and coffee table and the broken TV, and crooked her finger for me to come to her. I followed and she began to dance to some tune.\n\n\"Dum, dum, dum, bub, bub, ba ,\" she hummed, as she made exaggerated moves shaking her shoulders causing her breasts to strain and jiggle in their confinement. Several times she turned her back and unclasped the bra and clasped it as she gyrated around. At one point she turned her chest to me and pushed the squished pair into my face.\n\n\"Dum, dum, dum, bub, bub, ba ,\" She hummed as he ground herself into my happy face. She switched gears and turned her back to me with the clasps unhooked. As she attempted to hook them back, she accidentally let go and the metal clamp hit me in the eye and nose and down I went. Donna stopped humming at the sound of the thud as I hit the floor.",
        "\"Ralph!\"\n\nI held my hand over my eye as she again straddled me and cradled my face with her hands.\n\n\"Ralph, let me see, please, let me see if you're okay,\" she said, her voice breaking.\n\nIt stung like a son of a bitch, but I relaxed my hand enough to let her take a look at me. I felt a tear hit me as her trembling fingers touched my cheek, nose, and eyebrow.\n\n\"I'm so sorry, Ralph,\" she said, and started crying in earnest.\n\nI opened the stricken eye and found that I could see, but it was blurry. It still stung. \"It's okay Donna, I can see.\"\n\nA few more tears hit my face. \"I think I gave you a black eye,\" she moaned as she stared down at me.\n\n\"I can't think of a better way to get one,\" I told her as a small smile appeared on her face. As she looked at me, a slow change came over her smile.\n\nWhile her concern for me in her mind had negated the fact that she was straddling me, it hadn't been lost on mine and there was a small reaction happening below. Well, maybe not so small. I reached up to the coffee table for one of the condoms and held it in front of her face. She started to giggle and snort and her breasts jiggled and swayed.\n\n\"Ralph, if this was your plan...\"\n\n\"Right down to the last detail,\" I interjected, waving the condom in her face.\n\n\"Okay,\" she said, as she plucked the pack out of my hand and opened it. She held it up for me to see and then applied it like the dry run we had performed on the banana earlier. She looked at me and asked, \"Right here?\" pointing at the floor.\n\n\"I'm not sure I should be moved after two head injuries in twenty four hours,\" I replied, deadpanned.\n\nShe got up, went to the bedroom and returned with something in her hand. She straddled me again just in front of my protected self below. \"If you're ready, I'm ready.\"\n\n\"Okay, I guess,\" I said, trying to figure out what she had in her hand.\n\n\"Okay, here we go,\" she said, while placing the Groucho glasses on and then put a party favor in her mouth. Without any more warning, she positioned herself on me and plunged herself down. The party favor rolled out and squeaked as Donna became motionless.\n\n* * *\n\nOoww, that had to hurt...\n\n* * *\n\nSeveral seconds went by while her nostrils flared with heavy breathing. Slowly her hand went to her mouth and she removed the favor. She looked down at me through her Groucho disguise and started flicking at the favor like it was a cigar. \"Say the secret word and win fifty dollars.\"\n\nI guess that was her way of telling me that she was okay, because she started moving in earnest. I tried to get into the act a bit, but Donna seemed to know what she was doing, or at least, what she liked. All I wound up doing was watching her boobs bounce and sway as she wiggled and humped me. Noises and snorts came from her as she shifted her weight from time to time. I knew her knees had to be taking a beating because my ass was getting a bad case of rug burn.\n\nHer pace increased and she started shrieking. I was on the brink and felt that the momentous occasion deserved to be noted.\n\n\"Donna, I'm going to cum...\"\n\nShe shrieked one last time, blew on the party favor and collapsed on me, pressing her breasts onto my chest. I felt her muscles spasm as my own explosion was imprisoned in the condom. Breathing heavy in my ear she whispered, \"That was the secret word,\" and blew on the favor.\n\nI held her tight because I knew I was in love with someone very special.\n\nSomeone started pounding on the door. \"Police department, open the door!\"\n\n\"Oh shit,\" said Donna as she jumped up and looked for something to put on quickly.\n\nThere was another round of pounding. \"Sir, put the cat down and open the door!\"\n\nDonna grabbed my robe and I pulled on my underwear.\n\nThe pounding got heavier. \"You better hope that cat is unharmed you sick fuck, now open the door!\"\n\nI opened it and the guy tackled me. \"Where's the cat, freak?\"\n\nFrom behind us, we heard the sound of the party favor. The cop looked up and saw Donna still in disguise with my robe on and waved to him.\n\n\"Donna!\"\n\n\"Hi Tom,\" she replied and blew on the favor again. \"Ralph, this is Tom, Tom, Ralph,\" she said nodding at both of us.\n\nWith his hands still on my neck, Tom played twenty questions with Donna. Yes, that was her making the noise, and there was no cat in the apartment.\n\nTom let me get up.\n\n\"Sorry about that, but after the call last night, well, we wanted to catch him in the act,\" Tom said to Donna.\n\nDonna explained what really happened the night before and I handed him the citation.\n\n\"So you see, it wasn't even me,\" I explained.\n\n\"I'll take care of this,\" he said, putting it in his wallet. \"Nice seeing you again, Donna,\" he said and then nodded at me as he left.\n\n\"Okay, how do you know him?\"\n\n\"I used to baby sit for him.\" She blew on the party favor and asked, \"Now, where's the last condom?\"\n\nWe used it and I even guessed the secret word again. This time the cops didn't show.\n\nDonna says that she thinks we were made for each other. I don't think it, I know it.\n\nWell, this is the end of the story. She'll be back soon, she went out for condoms and party favors.\n\n* * *\n\nThat's all that was written.\n\nThe rest of the pages were blank. Closing the book, I wondered if Looney Louise was in the same predicament as Mom was. She did just move into the area last year and I knew how people treated her. Maybe Pop's right. I should give her a call.\n\nThe sound of a car door cleared my head as I realized that I had a book I wasn't supposed to know existed. \"Junior?\" Mom called from downstairs.\n\nI dropped the book on the bed and went to the top of the steps looking down at her. She still had her clown costume on from the afternoon gig. \"Where's your Dad?\" she asked.\n\n\"I don't know. He went out while I was getting a shower. How did the gig go?\"\n\n\"Oh, great. I had them old folks rolling in the aisles.\"\n\nThe sound of another car door spoke of Pop's return.\n\n\"Hi, how did it go?\" Pop asked Mom.\n\n\"Good,\" she replied and then gave him a peck on the cheek.\n\n\"Look what I got,\" he said, holding out a bag to her.\n\nShe reached in and pulled out a pair of Groucho glasses and a bag of party favors.\n\nOh shit. All these years I've seen him give her those things and I had always assumed they were for her clown act she did for parties. Come to think of it, that must be the weird noise I hear coming from their room. I always thought one of them kept stepping on the dog's chew toys.\n\n\"Thanks, Ralph,\" she said and hugged him.\n\nMy Pop started climbing the steps and I ducked in the bathroom to use it before he or Mom decided to take a shower. When I headed back to my room, Pop was sitting on my bed holding the book. I almost fainted.\n\n\"Where did you find this?\" he asked, as he flipped through the pages.\n\n\"I found it today while I was cleaning the garage.\"\n\n\"Have you read it?\"\n\nI didn't give him an answer.\n\n\"Maybe I should put it away before your Mother sees it,\" he said, heading to his room. The sound of the shower coming on told me where my mother was. \"Junior, why not give that girl a call?\"\n\nI wasn't sure, but something told me Pop left that book out for me to find.\n\n\"You know, if your mother had found someone out west that cared for her, you might not be here today.\" He paused a moment to let that sink in. \"Your Mother and I are going across town for dinner tonight. You can come along if you want and you can bring Louise too. It might help break the ice. There's no need to dress up, it's just dinner. It's up to you,\" he said and headed in his room.\n\nAfter a few minutes of thought, I decided that if I was going to become the biggest loser in the school, I might as well jump in with both feet. I called Louise, asked her to the prom and then out to dinner with my folks. I had to assure her it wasn't a crank call before she agreed to both. When she asked where we were going I told her I had no clue, but not to dress up.\n\nBoth my parents were thrilled that I had invited her. I tried to apologize ahead of time for whatever buffoonery was going to take place but they waved me off as a worry wart.\n\nWhen we reached her house, I went to the door to get her. She came out in an outfit that yet again set a new standard in unseen combinations and her hair was perpendicular to the ground. As we got close to the car I heard my Mother remark, \"I like the girl already.\"\n\nThe whole drive, Louise talked about everything she could think of. All any one could get in was a grunt or snort because this girl didn't come up for air. One thing that I noticed as she moved from subject to subject, she actually was quite interesting. I didn't even notice we reached our destination until the doors started opening.\n\n\"What's this place?\" I asked. I'd missed the sign at the entrance.\n\nLouise recognized it and said, \"Oh, Ralph, this place is so great!\"\n\nShe and I walked in and looked around for a second. It looked like an old tavern with booths and tables and it was packed. I heard the door close behind us as my parents came in.\n\n\"Donna!\"\n\n\"Donna!\"\n\n\"Donna!\"\n\n\"Deadbeat!\"\n\n\"Oh shit,\" Pop and I said. "
    ],
    "authorname": "Kirk482002",
    "tags": [
        "secret word",
        "rug burn",
        "all the way",
        "armed robbery",
        "boobs"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/ditzy-donna"
}