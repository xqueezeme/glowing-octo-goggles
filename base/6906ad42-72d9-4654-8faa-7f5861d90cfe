{
    "title": "She is Beautiful Pt. 04",
    "pages": [
        "I awoke with a start. I must have passed out momentarily from the intensity of my orgasm if only for a moment. I looked over and the girls were still kissing though slowly, sensuously, seriously. I reached over and grabbed another bottle of water and drank it down watching these two amazing beauties making out.\n\nSam's hand was in between them now, stroking Lilly's cock back to full mast. Lilly had a finger sliding in and out of Sam's beautiful asshole - but it was all slow, sensuous and thoughtful.\n\nI leaned it and started to kiss them both as I felt a hand, must have been Lilly's free one, reach down and grab my dick. I was rising again and ready for so much more and it seemed that everyone wanted to just keep it all going.\n\nSam started to shift and shimmy up Lilly's body. I could tell she needed cock now and badly. I scooted down and grasped Lilly's big hard dick, raising it upwards as Samantha reached her destination with her cunt hovering just above that big cock. Slowly Sam lowered herself onto Lilly's cock, up and down a little more each time, until she was full to the root of that big cock. \n\nLilly looked up at her lover and pulled Sam down so that she could start sucking on Sam's big tits as Sam started to gyrate - spinning that cock deep inside her womb as Lilly nursed on each nipple, back and forth in turn.\n\nI had always wanted to see Sam stuffed with multiple cocks and while I had double fucked her with a dildo in her cunt while I fucked her ass on a few occasions, we had never had the opportunity to have her stuffed with two real cocks at the same time - until now. I was not going to let this slip away... \n\nI reached into the bag of sex toys that had been carelessly tossed on the bed and emptied the contents onto the bed. Lilly looked over the toys and smiled. Harness, Check. Multiple sized strap-ons, feeldoe's and vibrating dildos. Check. Anal wands. Check. Cock rings. Check. Lubes and oils. Check. Lilly reached for a medium sized purple cock and stuck it in her mouth, winking at me as she reached up and continued to play with Sam's tits.\n\nSam was smiling and hazy-eyed as she slowly rolled her hips around, enjoying the big hot cock inside her juicy pussy. I grabbed the bottle of lube, leaned in and kissed Sam and whispered - \"now you're really going to be full of cock - real, hot, live, throbbing cumming cock - in both holes baby!\" She sighed and kissed me back hard and reached for my cock lovingly. \"Go slow baby - make it good and make it last...\" she said as her eyes gleamed mistily.\n\nI got behind my beautiful wife and crouched down, watching Lilly's big cock slipping, sliding and slurping slowly in, out and around Sam's beautiful pussy. I reached up and took a cheek in each hand, massaging those heavenly globes as I pulled them apart and pushed them together. Sam's tiny puckered star was winking at me every time I spread her cheeks so I leaned in, holding her still for a moment and started to flick my tongue all around her back door. Sam groaned loudly as I bathed her anus, circling all around and then pushing the tip of my tongue up inside her asshole.\n\n\"Oooh yesssss you nasty boy ... tongue fuck my ass ... mmmm... just like that\" she groaned loudly. I moved a little lower and began nibbling and tonguing Lilly's cock just where it met Sam's cunt lips, causing Lilly to lurch upwards - eliciting a big moan from both Lilly and Sam as that big cock obviously collided with her cervix. I couldn't resist so I leaned further down and licked Lilly's glistening shaft every time Sam lifted herself up, while I opened the top of the lube and squirted a generous amount into my palm. Moving back up to tickle my lover's asshole I coated a couple of fingers with the lube.\n\nI leaned back admiring the control of these two lovers, still grinding slowly away at each other. I brought my slippery digits up and placed them right on Samantha's puckered asshole, slowly circling and gently dipping in just a little, over and over again until I took my middle finger and slowly slid it into Sam's ass to the first knuckle. This brought a heavenly moan from Sam and I could feel the hardness of Lilly's cock through the thin separating membrane.\n\nI stroked in and out as Sam rolled her hips and thrust backwards just enough to tell me she wanted more. Ever so slowly I buried my finger all the way inside her slick molten vice. I withdrew my finger but not all the way, then slid it back in faster. Within a few moments I was finger fucking my wife's ass steadily with both fingers as she rode both fingers and cock with her crotch.\n\n\"Yeah ... That's it ... Fuck my holes my beautiful lovers ... Fuck them good ... \" she panted. Her head was thrown back, her gorgeous auburn locks flowing down her back and swaying side to side with her movements.\n\nI took my other hand, still heavily pooled with lube and started to stroke my raging hard-on while pouring a few more dabs down Sam's crack. I tossed the lube onto the bed and massaged the slippery juice all over her asshole, grabbing Lilly's cock a few times in the process.\n\nThe I lined myself up, sliding my cock up and down Sam's crack. I reached around her and pulled her back to me a little, whispering loudly \"You ready to be stuffed full of real cock baby?\"\n\n\"Yesssssssssssss\" was all she replied as I very slowly eased just the tip of my cock into her ass. Sam looked so slutty, so beautifully slutty like this that I took a moment to catch my breath as I admired the glorious view before me.\n\nBack and forth, in and out just a centimeter at a time, slowly I eased Sam's muscles open until after about thirty strokes my pelvis was nestled snugly against Sam's supple round cheeks. I could feel Lilly's big cock buried deep in Sam's cunt and she could definitely feel mine in Sam's ass. Sam was breathing slowly, deeply, not moving and I could feel her muscles relaxing as she adjusted to the double penetration. \n\nAs if on the same brainwave, Lilly and I very slowly started to fuck her with the same rhythm. I used my hold on Sam to shift her forward and backwards as we skewered her simultaneously. I found that this is not as easy as it sounds - for those of you who have never done this - because someone is always trying for more. More friction, more depth, more rhythm, more fucking! But we kept it pretty much synched as Lilly flattened her legs and I held on tight to Samantha. After a little while of going slow and getting a nice rhythm going, I felt Sam start to shift around, trying to get more.\n\nShe was nicely loose and open now. Sam cums and cums hard when she's getting a good ass-fucking, when all the time has been spent to open her up and the initial pain has faded. Nothing left but pleasure sliding in and out of her ass makes her cum hard and this was well beyond that. Well beyond the clumsy times when I've double stuffed her with a dildo and cock too.\n\nShe started chanting loud enough for anyone in the hallway or room next door, or on the next block to hear... \"yessssss... Oh yessss ... that's it my lovely fuckers ... Fuck my cuuuuunt. ... Fuck my asssssss ... Oh god yes ... So good ... sooooooooo good ... Soooo much cock, SO GOOD ... AHHHHHH FUCK MEEEEEEEEE FUCK MEEEEEEEEEEE\" she screamed as we thrust deeply with long hard strokes in and out of my wife's sexy receptive body. Sam was now cumming constantly, overloaded from all the intense intercourse, her body on overload as one orgasm swept into another, her pussy and ass muscles clenching uncontrollably around our cocks.\n\nIt was too much for Lilly and I too as the sensations were overwhelming. The pressure and pleasure coursing through my dick was amazing, the thought of double fucking Sam, overwhelming.\n\nLilly let go first screaming our names and twitching as she unleashed a torrent of sperm deeply inside Sam. I could feel Lilly's cock expanding, twitching and spurting its release which made me shoot what seemed like a dozen volleys of cum deep into my beautiful Sam's clenching ass. My head was spinning in rapture I felt so good and as we slowed, I lovingly caressed Sam's sweat-soaked back, reaching around to cup her big tits only to find Lilly's hands already there gently rubbing Sam's hard swollen nipples.\n\nVery gently I rolled us onto our sides as my penis, now spent for a while, slipped softly out of my wife. I could hear a loud slurp as Lilly's deflated cock eased from Sam's cunt. Sam was in another world but was jolted by Lilly's hand cupping her crotch, rubbing the loads of seeping cum all around Samantha's lower body.\n\nTo be continued in Part 5 if there's enough interest -please send feedback if you're enjoying this story."
    ],
    "authorname": "PierceAaron61",
    "tags": [
        "bisexual",
        "fetish",
        "bi",
        "shemale",
        "group",
        "group sex"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/she-is-beautiful-pt-04"
}