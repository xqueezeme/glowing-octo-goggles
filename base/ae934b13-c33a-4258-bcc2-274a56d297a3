{
    "title": "It was in the Cards Pt. 06",
    "pages": [
        "Day 4\n\nWaking up was starting to be my favorite part of the day.\n\nThough as I cracked my eyes open, it was still dark. A fact that I promptly ignored, in favor of focusing on the very intense sensation of my sister's tongue swirling around my glans, that was currently inside her warm wet mouth.\n\nShe was on her belly between my legs, so I had a perfect view of her face lit only by moonlight seeping through the window. Her eyes were closed and she seemed completely absorbed by playing with my cock in her mouth.\n\nI couldn't help but moan slightly in pleasure, as she hit a particularly good spot.\n\nNoticing that I was awake, she paused for a moment with my dick on her lips.\n\nSmiling up at me, her eyes sparkling.\n\n\"Good morning, sleepy head.\" She chirped at me cheerfully.\n\n\"A good morning indeed. Except it's not morning yet. Not complaining though, as long as you keep doing that.\"\n\n\"Well, you did say I should wake you if I woke up before you. You never did say to wait until morning. And well... I woke up, and your cock was right there, already hard for me. It would almost be rude not to suck it.\"\n\n\"That's all true, I did say that. And I most definitely won't fault you for your impeccable manners. Please continue at your leisure.\" I agreed, falling for the temptation to tease her just a little bit.\n\n\"At my leisure... Next thing I know, you will be wearing a fedora and calling me m'lady. Who even talks like that?\" Kaitlyn commented, but dutifully resumed her interrupted blowjob.\n\nSoon her head was bobbing up and down gently, changing it up once in a while by licking up and down the shaft like it was the most delicious sodapop she had ever had.\n\nWatching her losing herself in playing with my cock was competing with the actual physical sensations for the spot of being the most erotic thing ever.\n\nWhile it felt a lot more intense when she had me inside her mouth, sucking and sliding her tongue against my sensitive glans, it was amazing to watch how completely absorbed she was as she licked my cock, like it was for her pleasure as much as for mine.\n\nFor a moment I felt somewhat torn.\n\nOn the one hand, what she was doing felt absolutely awesome, and looked even better, but on the other hand, I felt kinda selfish.\n\nShe was giving me so much pleasure, and I was just lying there like a potato, not doing anything to please her in return.\n\nI almost interrupted her to suggest we do something else, so she could get off too, but in the end I could not bring myself to break her trance.\n\nLeaving her to worship my solid cock, that had never felt more erect in my entire life, I soon found myself being pushed closer and closer to the edge of orgasm.\n\nWanting to make it last, I tried to focus my willpower on not cumming,\n\nEither my willpower is nothing special, or my sister was already getting very good at this.\n\nTrying to postpone my orgasm, and failing, I came suddenly, and I came hard!\n\n\"Oooh shiiit!\" I half yelled, half moaned, as orgasm struck me like a meteor.\n\nAs soon as the first rope of thick white cum shot into Kaitlyn's eagerly sucking mouth, her face shot forward, ramming me to the back of her mouth, letting me shoot my cum directly into her throat.\n\nI felt her fight her gag reflex, pushing down with considerable force, squeezing me into her constricting throat, even as she kept gagging a little.\n\nWhile it was somewhat painful to feel her throat gagging around me, the very thought of her taking me so deeply, was more than enough to compensate, sending my orgasm to new heights.\n\nAgain and again I shot my cum into her throat, all the while she kept pushing her face closer and closer to my stomach, until finally, as I shot my last few drops down into her belly, her nose just barely touched me.\n\nShe remained there for a handful of heartbeats, then withdrew completely, gasping for air as my cock left her mouth.\n\nBreathing heavily, she swallowed a few times, trying to both catch her breath and get her gag reflex under control.\n\nI was still in the throes of my orgasm, pleasure still rolling through me in wave after wave, the few last drops of cum spilling on my stomach.\n\n\"That was so awesome! I did not know I could do that, but I have always wanted to try!\" Kaitlyn gushed, as she finally got her throat and breathing under control.\n\n\"Did you see that I managed to get all of you in my mouth?\"\n\n\"I am pretty sure some of my cock went into your throat, but yeah that was amazing!\"\n\n\"And fun. I never knew sucking cock would be so much fun. It seems kinda gross when you think about it, but then when you are doing it, it's the best thing in the world. Being able to feel you twitch when I do something right. I think you better get used to the idea of getting lots of blowjobs, Kiddo.\"\n\n\"I am pretty sure I can get used to that, but maybe you shouldn't call me Kiddo when we have just had sex. Seems kinda weird.\"\n\n\"I guess. I will try to come up with something more suitable. Will Perv work for you?\" She teased, but as she leaned in to lick up the drops of cum on my stomach, I instantly forgave her.\n\nShe remained there for a while, studying my softening cock, caressing it gently with her chill fingers, then gave it a few licks as if to make sure it was all nice and clean.\n\nApparently satisfied that everything was just so, she came up beside me, snuggling herself against me, her face against mine, her breasts against my side, and one leg draped over mine.\n\nI turned my head and met her lips with mine.\n\nWe lay there for a while, gently making out, her soft warm lips sliding against mine in sensuous ways, the tip of her tongue darting briefly to brush against mine.\n\nAs if by some unspoken signal, we both drew back, and just lay there, content to be wrapped in each other's limbs.\n\n\"Maybe we should get some more sleep, then pick this back up in the morning?\" Kaitlyn suggested.\n\n\"If you promise not to move until I fall asleep, I can agree to that!\"\n\nIt felt wonderful to have her draped across me like that, and if I had been able, I would have loved nothing more than to just lay there enjoying the sensation of her hot perfect naked body against mine.\n\nBut it was still in the middle of the night, as far as I could tell, and the recent orgasm had made me so very relaxed, that I could feel I was having to fight against just falling asleep without as much as a good night.\n\n\"I will try.\" Kaitlyn muttered against my cheek, then snuggled even closer, and pulled the covers back across our bodies.\n\nI think I did manage to mutter a soft \"Good night\" before sleep claimed me, but I am honestly not sure.\n\nWhen I woke up, we had pretty much switched positions.\n\nI was lying with my leg draped across her thigh, with my arm across her body, and my hand resting on her breast. It was the most perfect hand rest I could imagine, a soft yet firm mound of my sister's warm flesh, just the right size to fill my hand.\n\nWith my face in her hair, I could enjoy her feminine scent with every breath I took and the sound of the tiniest of snores she would make once in a while.\n\nI had never felt so happy in my life, and I realized that I had well and truly fallen in love with my sister. I had always loved her, of course. But as a sister. This was more, and it felt perfect.\n\nFor a while I just enjoyed being the happiest I had ever been, enjoying the closeness of my sister, the warmth of her body against mine.\n\nThen temptation fueled by my morning wood against her thigh had me squeeze her wonderful breast in my hand. Gently I teased her nipple with a finger, marveling at the sight of it and the areola tightening up in response.\n\nSoon her pink nipple stood out like a hard little eraser, and I could hear my sister sighing in pleasure, even though she still seemed to be sleeping.\n\nScooting down slightly, carefully so as to not wake her up, I managed to get my lips and tongue down on the perfect nipple of one breast, as my fingers kept teasing the other.\n\nAs I lay there playing with my sister's wonderful breasts, thoroughly enjoying myself, I felt her stirring slightly.\n\nShe sighed with what I took as pleasure, and I felt her moving a little, adjusting herself to let me more comfortably mouth her now tight little nipple.\n\n\"Mmmm that's nice, please keep going.\" she mumbled sleepily.\n\nNot one to turn her down, I did just that. No longer needing to care about waking her up, even if I didn't exactly do a great job of that earlier, I lost myself in playing with her wonderful breasts, kneading and tweaking one breast with my hand, sucking and nibbling at the other with my mouth.\n\nI heard her moaning in pleasure, one hands fingers entwined in my hair, urging me to continue.\n\nHer other hand was responsible for the wet squelching sounds that came from between her legs.\n\nGlancing down, I could see her fingers dancing around her clit, her pussy glistening with her passion.\n\nSeeing her play with herself as I delighted myself with her breasts instantly made me even harder than I already was, and once again I felt the need, the hunger, to fill that last part of her with my aching hard-on.\n\nI would have to make my best effort to win all of her tonight.\n\nI did not yet have a plan, I was not sure she would once again agree to play blackjack, as she had yet to have any real luck with that.\n\nMomentarily distracted by my thoughts, I was brought back to the present by the sound of her moaning as her abdomen started to contract with the first signs of her impending orgasm.\n\nSoon, her adept fingers completed their spell, and her entire body shuddered and thrashed around, as she came. Watching her orgasm by her own hand was such a vision of pure joy.\n\nWhile she had clearly liked what I was doing with her breasts, the orgasm was all her own work, and I felt privileged to have been allowed to be a part of it.\n\nI didn't own her hands or her pussy, so her sharing this experience with me was like a loving gift from her, that I felt very honored to receive. A gift of love and trust.\n\nAs she came down from her orgasm, she turned her face to mine, her eyes sparkling blue and green, a smile on her face.\n\n\"Good morning Sis, nice orgasm?\"\n\n\"Mmmm it was very nice. I like it when you suck on my boobs.\"\n\n\"That's perfect, 'cause I have discovered I quite like sucking on them.\" I replied, kissing her nipple just to illustrate my point.\n\n\"Mmm I can tell.\" Kaitlyn sighed, as her cool fingers, still slick with her juices, wrapped around my shaft.\n\n\"Get over here.\" She added, pulling my dick gently towards her.\n\n\"Aight.\" I said, shifting my weight, sliding on top of her, letting her guide me with her grip.\n\nAs I went on top of her, she opened her legs wide, then I felt her rubbing my glans up and down her sopping wet slit. I was not sure what she had planned, but for now I was entirely happy to let her be in charge.\n\nI felt her hands take turns going to her soaking pussy, then sliding up and down my shaft until finally she seemed satisfied.\n\nThen I felt her tugging me a little forward, until my glans pushed against what was undoubtedly her tight little sphincter.\n\n\"I think you are slick enough now, but be gentle.\" Kaitlyn informed me, as she urged me forward with a hand on my buttock.\n\n\"I will.\" I told her, pushing against her tight opening with just enough force to slowly force it to yield.\n\nFeeling the ring of her sphincter slowly yielding and sliding down my glans was exquisite, so even if I did have the urge as always to just plunge into her, and ram myself into her depths again and again as fast as I could, until I sent my seed flooding into her, I would take my time.\n\nI wanted to savor the moment, feel every detail, every nuance, as she slowly accepted me inside of her.\n\nCarefully I observed her face, again taking in every detail. Her face was a vision of concentration and pleasure, with a little twinge of pain as the fat cock head slipped past her outer rim.\n\nThe lubrication of her juices were only barely enough to let me slide in, and I could tell I would have to take it slow. Yet it also made me even more aware of her every fold, her every contraction, and the heat of her core felt so intense.\n\nGently and slowly I fucked her, sliding only a couple of inches back and forth, more adjusting the angle with each thrust, to poke against slightly different spots every time.\n\nIt was my way to try and emulate what she had done, when she had moved her ass in figure eights with me inside it.\n\nIt had felt wonderful, and this was getting pretty close, as far as I could tell from the effect it was having on myself, and from the way Kaitlyn soon began to whimper and shake, pulling me against her with both hands on my ass, grinding her hips against mine to meet my thrusts.\n\nI took my time. Pausing when I could feel the edge of my orgasm coming closer. I wanted to stay in this perfect moment, being inside my sister, seeing her blue green eyes looking up at me with love and lust in equal measure.\n\n\"Stop teasing me, I want your cum inside me!\" Kaitlyn complained, as she crossed her ankles behind my hips, pulling me into her more forcefully.\n\n\"Not teasing. I'm taking my time to enjoy every little detail.\" I explained.\n\n\"Don't care. Just fuck my tight little ass, fill me with your cum.\" she instructed.\n\n\"That also sounds pretty good!\" I agreed amicably, and increased my pace, starting to push into her with longer more powerful strokes.\n\nI could feel her muscles tensing up around me inside her, her sphincter closing around the base of my cock like a fist, milking me in time with her contractions, that became faster and faster, as she got closer and closer to the edge of orgasm.\n\nWanting her to cum first, I tried pacing myself, tried postponing my own orgasm through sheer force of will, but as her tightening core and her contractions heightened my pleasure significantly, I soon found myself unable to turn back.\n\nFeeling myself slip past the point of no return, I discarded any idea of holding back, and was soon fucking her furiously.\n\nIn response her moans of pleasure turned into a wordless keening and her hips bucked wildly against me, slamming herself on to my cock, driving it as deeply inside of her as she possibly could.\n\nIn the end, I could not tell which of us reached our orgasm first. Whoever it was, it immediately triggered the other to follow suit.\n\nAs one, we roared our orgasms out, our bodies thrashing and thrusting, the electric bolt of pleasure from our orgasms rendering us momentarily unable to handle fine motor skills.\n\nClutching her against me, I rammed myself into her with each furious blast of cum, splashing my hot seed deep into her bowels.\n\nFinally, as every drop of cum my balls could muster had been shot into the depths of my gorgeous wonderful sister, I pushed myself as deep inside of her as I could, and just ground my hips against her, while waves of orgasmic contractions still had her body trying to milk more cum from my already spent cock. Trying with the last flares of orgasm to coerce just one more thick rope of cum into her core.\n\nAs our orgasms faded, I collapsed on top of her, the intensity of my orgasm having left me weak, sweaty, and panting for breath.\n\nFor a while I lay there, just enjoying the sensation of my slowly deflating cock inside of my sister's hot rectum, until I caught my breath and found the strength to lift myself up on my elbows.\n\nHer eyes sparkled, more green than blue, a brilliant smile lighting her face.\n\n\"This is where you kiss me.\" She informed me.\n\nI did not disagree.\n\nI brought my lips to hers, and for a while we gently made out. Not desperately, but affectionately, lovingly, taking a pause here and there to gaze into each other's eyes.\n\n\"I hope I wasn't too rough there at the end, I kinda got caught up in the moment.\" I spoke softly, in between kisses.\n\nI felt her tighten her core around my soft cock, that was still inside of her. It felt good to be inside of her, even if we weren't actively fucking. So instead of just pulling out and getting off of her, I found I preferred to remain where I was, until I shrunk to the point where I would slide out no matter what.\n\n\"A bit rough, but it felt really good. You felt so huge inside me. And when you came, I swear I could feel it splashing against my insides. So not too rough. Just the right amount of rough.\" Kaitlyn mused.\n\n\"That's good. I just can't get enough of you, so I better make sure I don't accidentally break you in half or something.\"\n\n\"Don't worry, I think I am fine, even if I do think we should maybe make sure to have some lube nearby at all times. I think one fucking like that a day is the limit. Speaking of limits, I really gotta pee, so unless you want the bed soaked in different ways than it is already, you better let me go soon.\"\n\nWith a groan of regret, I slowly pulled my soft little soldier from my sisters clutching sphincter, and rolled off of her.\n\n\"Yeah, no rubber sheets, so I guess you get your freedom for now.\"\n\nI lay there for a while, basking in the afterglow of our love making, until I shook my head at the whole crazy situation.\n\nIf I could go back in time and make different choices, I was going to try and make every single one exactly the same, as I would not have things be different in any way.\n\nSure, I could see that there might be a few complications in our future, but I was confident we could handle it.\n\nWhen I got out of the shower, Kaitlyn was already busy making us pancakes for breakfast.\n\nNot the most usual choice for breakfast, especially for her, as she always focused on being healthy and fit.\n\nBut I agreed with her choice. It fit nicely with the last few days feeling more and more like we were newlyweds on their honeymoon.\n\nEspecially if we had any strawberries to go with the pancakes, but due to the circumstances, the best we could do was syrup and some raspberry jam.\n\n\"I saw that there is an eighties movies cavalcade today. There's the Labyrinth and Groundhog Day, among others.\" Kaitlyn informed me between syrup soaked bites.\n\n\"Sounds like fun! Let's just skip chores today, and cuddle up in front of the TV.\"\n\n\"Sounds like a plan!\"\n\nWe cuddled up under a single blanket with a large bowl of popcorn each, both of us naked as the day we were born.\n\nWith only a few random breaks for making out, we mostly managed to focus on the movies, though I did miss a large part of groundhog day, because Kaitlyn decided to wrap her delicate hand around my cock, and slowly stroke me. Not really to make me cum, which I didn't, but simply because it felt nice.\n\nI took my revenge later, during the Labyrinth, where I spent some time letting my fingers caress her thighs and belly, carefully not touching the pussy, even if I did get right against the border quite often.\n\nThe poor couch was getting rather soaked once more, getting to the point where we would have to accidentally spill a whole bottle of wine on it to cover up the stains.\n\nOr maybe just accidentally light it on fire, after accidentally carrying it outside.\n\nIt was fun getting her hot and bothered like that, hearing how her breathing changed when I got real close to her pussy.\n\nFinally, she couldn't take it any more, and her fingers slid between her folds, caressing her most sensitive parts, where I still longed to go.\n\nShe came quietly, shuddering with pleasure as David Bowie did his song and dance on screen.\n\nI guess millions of women have gone there before Kaitlyn, so he probably wouldn't take offense, if he knew.\n\nIt was the most pleasant way to spend the day I could think of. My arms wrapped around my sister's warm flesh, her body molded against mine.\n\n\"I was thinking maybe we could play our game in my room tonight?\" Kaitlyn asked me as the movie cavalcade was coming to an end.\n\n\"Uh, sure, I don't see why not.\" I agreed.",
        "\"So, if you fix us dinner, I can get things ready in my room.\"\n\n\"Okay. I can do that.\" I agreed once more, though I didn't see what it would take to get her room ready. It was always so neat. Still, she was a woman, a fact I had recently become very aware of, and sometimes women have things they need to do, so I just let it go with that.\n\nBesides, I liked cooking just fine, and the sooner we had dinner, the sooner I could have my dessert.\n\nWhen I was almost done making the lasagne we had most of the ingredients for, Kaitlyn joined me in the kitchen.\n\nShe was wearing a sheer white slip, that did nothing to hide the very sexy white underwear she was wearing.\n\nHer hair was done up, and she had just enough make-up on to make her eyes really stand out.\n\n\"Wow Sis, you look amazing!\" I commented.\n\n\"Good enough to eat?\" She teased me, adding a wink.\n\n\"Oh you know it!\"\n\n\"I wanted to look my best for dinner tonight. And for after.\"\n\n\"You sure do! Now I feel like I should go dress up a bit myself.\"\n\n\"I don't know, you look pretty nice just wearing an apron. But sure, I can watch the lasagna while you go and make yourself pretty for me. Maybe I will even open a bottle of wine, which it seems you have completely forgotten.\"\n\nRight. The wine. I had completely forgotten that. Oh well, we were not exactly the most knowledgeable of wine drinkers, so as long as it was a notch above vinegar, we would probably be fine.\n\n\"I'll open some wine, then get cleaned up.\"\n\nWith a smile and a quick kiss that turned into a few more, I was off.\n\nTaking a quick shower, making sure I was as smoothly shaved as possible, putting on my best cologne. Then I was kinda stumped.\n\nWomen have all kinds of sexy underwear.\n\nWhat do we men have?\n\nThere was not much I could do, except go for the male stripper look, wearing my black silky boxers and a matching black bow tie.\n\nSatisfied that it was as good as it was going to get, I took a minute to calm the butterflies that had respawned in my stomach.\n\nTonight was a very important night.\n\nI was hopefully going to achieve my dreams, and finally win all of my sister. She would be mine completely, in every sense.\n\nLosing was not an option I would allow myself.\n\nLosing this, what we had, what we had become in the last few days. It was unacceptable.\n\nIt was too late to come up with a plan to distract Kaitlyn, I would just have to do my best.\n\nWhen I got back down, I was rewarded with Kaitlyn's brilliant smile and an affectionate kiss that had me pulling her close, filling me with a sudden need to ravish her then and there.\n\n\"Not now, Silly, dinner first, THEN dessert.\" Kaitlyn reproached me teasingly.\n\nWhile I was gone, she had set the table, and everything looked very nice. Not as nice as my sister, of course, but I suddenly realized that I was rather famished.\n\nMan can't live on just popcorn and love, it would seem.\n\nDinner was pretty good. The lasagna-like meal I had concocted was nice enough, and the salad Kaitlyn had whipped up made it seem like a pretty classy meal, all things considered.\n\nNeither of us drank a lot of wine, though I considered trying to get Kaitlyn to drink some more to get an advantage, but in the end, we were both too impatient to linger after finishing our meal.\n\nAs soon as I polished off the last bite, and put my cutlery down, Kaitlyn's eager voice rang out.\n\n\"If you are all done, how about we go to my room?\" she asked me, a second before I would have suggested pretty much the same thing.\n\n\"Yes please, I would very much love to. I'll bring the wine, if you get the glasses.\"\n\n\"No need, I have something in my room.\"\n\nOkay, that sounded interesting.\n\nNodding my head in agreement, I let her lead me to her room by the hand. Her small hand fit so nicely in mine.\n\nEntering her room, I could tell that she really wanted tonight to be special.\n\nShe had dimmed the lights, lit a few candles, soft music playing quietly, and next to the bed was a tray of snacks and a bucket of ice, with a bottle of champagne resting.\n\nOn her night table was the deck of cards, waiting for our game.\n\nBoth of us got comfy on her bed, Kaitlyn still holding my hand in hers.\n\n\"Before we play our game tonight, there is something I want to say.\" Kaitlyn said, her voice all serious.\n\nI nodded my head, signaling her to go on, and gave her hand an encouraging little squeeze.\n\n\"These last few days have been quite a journey for me. For us. If you asked me a week ago, I would never have thought we would be where we are today.\"\n\n\"Yeah it's been a crazy few days.\" I agreed.\n\n\"Crazy, but good. I love the way you make me feel. I know that after our game, there is a chance that you will own all of me. The thought alone makes me so wet, I can't think straight.\n\nBut the thing is... I am still a virgin. And I want my first time to be where I give myself to someone special of my own free will.\" Kaitlyn steeled herself for a moment.\n\n\"That someone special is you. Before our game tonight, I want you to make love to me. Very specifically I want you to take my virginity. Well, my final virginity, I guess.\"\n\n\"Daniel, will you be my first?\" she asked me quietly, her eyes large sparkling emerald, focused entirely on mine, as if trying desperately to read my mind.\n\nMy sister a virgin? I was so sure she had turned in her V card years ago. She was gorgeous and popular and half the boys in school would have sold both their kidneys to have a chance with her. Momentarily stunned, I was at a loss for words.\n\nUncertainty started to show on Kaitlyn's face, as her eyes sought mine for a clue.\n\nSwallowing, I managed to form words once again.\n\n\"Kaitlyn, there is nothing in this world I would rather do.\"\n\nOur faces met in a fierce kiss as if pulled by powerful magnets. I could feel her heart beating rapidly, my hand on her chest, seeking a way under her sheer slip.\n\nAlmost without breaking the kiss, my sister pulled the slip over her head in a fraction of a second, tossing it aside to drape itself across the waiting champagne.\n\nIt seemed fitting. I appreciated the gesture of her wearing the sexiest things for me, but both they and the champagne held very little interest for me right now.\n\nI would much rather enjoy the intoxicating touch of my sister, trying to resist the impulse to rip her lingerie off of her and rid the both of us of the last vestiges of virginity.\n\nI wanted this to last, to be the most memorable and wonderful experience I could manage.\n\nImpatient, Kaitlyn got rid of my butterfly, and tugged on my boxers, signaling me to move a bit so she could pull them off of me.\n\nFeeling her urgency combining with my own, I reached behind her and with a little bit of fumbling, I managed to get her bra to snap open, releasing her perfect breasts from their captivity once more.\n\nAs much as I liked the look of her lingerie on her, I still love her naked body far more.\n\nI pushed her torso back, urging her to lean back, and as she did, I kissed my way down her chest and flat stomach.\n\nAll the way down to her thighs, where I kissed around the area covered by white lace.\n\nTeasing her for a few moments like this, I hooked my thumbs in her waistband.\n\nI could see that she was already soaking wet, a rather obvious wet spot having formed on the bottom of her panties.\n\nWith my face so close to her previously forbidden flower, the scent of her, and the knowledge that very soon she would be mine, made my arousal reach a whole new level. If not for the frequent sex of the last few days, I would surely have cum then and there.\n\nKaitlyn lifted her ass slightly, signaling me to pull her lacy panties down.\n\n\"Please be gentle with me.\" She whispered.\n\n\"I will. I want this to last!\" I replied with bated breath, as I began to slowly slide her panties down.\n\nWhile I had seen her pussy plenty of times recently, and had even watched her masturbate herself, this time felt special.\n\nThe knowledge that this time she would allow me to touch her, of her own free will, that she wanted me to touch her, to make love to her, made it so very special, that it felt like I saw her for the very first time.\n\nSliding down her panties, her glistening folds were inches from my face.\n\nWhile my cock was achingly hard and shouted at me with every instinct it could muster, that I must shove it inside of her NOW, I told it would have to wait.\n\nThere was something else that I needed to do first.\n\nSlowly, as to not break the enchantment, I leaned in for the briefest of kisses. Kissing her glistening nether lips, right on the little nub of her clit.\n\n\"Oh god!\" I heard Kaitlyn whisper.\n\nEncouraged, I leaned in and kissed her soaking wet pussy greedily, letting my tongue find its way between her folds, finally letting me taste her delicious essence straight from the source.\n\nPure bliss filled me, and from the way Kaitlyn's body shuddered I knew that I was not the only one enjoying myself.\n\nHer soft thighs cradled my head, her fingers entwined themselves in my hair, and she pulled me gently against her, urging me to explore her with my tongue.\n\nThe act of licking her tasty juices from her pink petals sent shivers of pleasure through me, and I knew that I could happily enjoy her like this for hours.\n\nStill, I wanted to do more than just satisfy my own craving.\n\nSliding my tongue up her thoroughly soaked slit, I found her delicate little clitoris, and ever so gently I slid my tongue around it, then across it in soft figure eights, paying attention to every sound and movement my sister made, eager to learn how to best please her.\n\nIn a minute or two, I felt I was getting the hang of it. It seemed to send small contractions through her abdomen and sphincter, every time i slid my tongue across the very top and sides of er clitoris, so even though I kept changing it up, I did that more and more, until I was certain of the signs that I had learned over these last few days.\n\nMy sister was close to cumming.\n\nIf I kept this up, she would cum with my face and tongue buried in her perfect pussy.\n\nTo me that sounded like the best plan ever, so just to make sure, I found her tight sphincter with a couple of fingers, and started to tease her sensitive flesh, adding further stimulus to tip her over the edge.\n\nI felt the familiar slipperiness of lube on her tight little star, so without issue, I slid two fingers inside her, as I started to fuck her ass gently with my fingers, I was rewarded with the sweet sounds of my sisters moaning. Her fingers tightened in my hair, and she pulled me against her pussy.\n\nShe started to push herself against my fingers, fucking herself on my hand while she ground her pussy against my face.\n\nAll the while I was desperately licking and teasing her clitoris, until suddenly I felt it happening.\n\nHer sphincter clenched around my fingers, and my sister's moans got louder, her pussy got significantly wetter, and she lost all control, thrashing against me as her orgasm ripped through her.\n\n\"OH GOD! I'm cumming! I'm cumming! Fuck me Daniel, please take me now!\" Kaitlyn implored me, pulling me up by her hair.\n\nFrantically our lips met, the taste of her own juices on my tongue seemed to only cause her to want to kiss me deeper. Eagerly her tongue mashed itself against mine, even as her hand between our bodies found my cock.\n\nShe guided me right up against her completely drenched opening, and I could feel how the muscles in her entrance was still pulsating with every wave of orgasmic pleasure that ran through her.\n\nI held myself there.\n\nLooking down at my beautiful sister, meeting her crystal green gaze.\n\n\"Are you sure?\" I asked, even if it might seem silly to have any last minute doubts considering what we had done before. But this time I knew it was something special. I knew she was consciously choosing me to be her first.\n\n\"Please,\" She said, placing her hands on my butt, \"I want you inside me!\"\n\nAs she said that, she started to pull me against her. Not with much force, just enough to let me know that she wanted me to push into her.\n\nSo I did.\n\nEver so slowly, I pushed my cockhead forward, feeling her nether lips part and spread, slowly engulfing my hard probing flesh in her steaming hot core. I felt her muscles work, contracting.\n\nIt was very different from her ass.\n\nWhere I would have to push against the resistance of her sphincter to persuade it to let me in, her pussy opened itself in an entirely different manner, almost sucking me inside, urging me to thrust deeply and strongly.\n\nAbout an inch into her, there suddenly was some resistance, and I hesitated, unsure on how to proceed.\n\nI could easily guess it was probably my sister's maidenhead, the last vestige of her virtue, as some might say, that I was about to breach.\n\nAs I hesitated, Kaitlyn took the matter into her own hands.\n\nWith considerable strength, she pulled on my butt, forcing me into her, until she let out a little grunt, and suddenly I felt something give, and with a surge of pleasure, I slid all the way into my sisters pussy, deep enough that I had to push a bit harder to bury myself to the hilt inside of her.\n\nUnlike my sister's ass that seemed to have the capacity to take all my length without complaint, it would seem that I could fill her pussy completely.\n\nFor a little while, I just lay there, watching her, feeling her around my throbbing member, feeling the way her muscles quivered and worked around the unaccustomed intrusion.\n\n\"That's it Kaitlyn, we are now officially virgins no more.\" I whispered.\n\n\"Good. I was starting to worry about vampires. Now will you fuck me?\" she teased, her lips meeting mine, as she lifted her head up for a kiss.\n\nObeying her wish, I started to slowly work my length in and out of her, slowly at first, both to let her get used to it, but also to keep from shooting my load inside of her already.\n\nFor a while we made love like this. Slowly, gently, sensuously, trying to make the moment last. Every time I could feel my orgasm starting to build up, I would stay still for a minute, kissing her, caressing her body, enjoying every detail.\n\nUntil Kaitlyn started thrusting against me just as I was getting right to the edge. Pushing me just over the point of no return, I knew there was no way to hold back anymore. I was going to cum soon.\n\nNo doubt sensing I was getting close, Kaitlyn started to thrust against me more forcefully, driving me into her to the hilt with every one of our combined thrusts.\n\n\"I'm going to cum!\" I informed her inanely.\n\n\"Cum inside me! Fill me up!\" She demanded, wrapping her legs around my hips, pulling me into her, slamming me into her, and as I started moaning incoherently in orgasmic pleasure, she joined me, moaning her own pleasure loudly right into my mouth as our lips met in a frantic, desperate kiss.\n\nClutching each other, grinding our bodies together, we came. I came first, bolts of pleasure lighting my nerves on fire, my every muscle contracting, and for the first time, at long last, I painted my sister's womb with cascades of my sticky white cum.\n\nAs my cum started to surge into her very core, Kaitlyn's moan turned to screams of pure ecstasy, her pussy contracting so powerfully around me with every surge of orgasmic pleasure, that it was almost painful.\n\nOnly almost, as I was too caught up in my own orgasm to really register the pain, rather her contractions added to my own pleasure, urging my body to send rope after rope of my cum into her.\n\nThe orgasm blended with the intense satisfaction I felt from finally having had all of my sister. From knowing she had wanted me inside of her like this, of her own volition, and not just because I had won another part of her.\n\nThat she had willingly given her virginity to me, her brother and lover.\n\nWe lay there, locked together in pleasure, until the last aftershocks had left us, and finally Kaitlyn's legs released their deathgrip on me, allowing me to move once more, should I really feel the need.\n\nI didn't feel any pressing need to move, but did adjust myself slightly, to ensure a better angle for my softening member, wanting to remain inside of her for as long as possible.\n\n\"That was AMAZING!\" Kaitlyn sighed, grinding her pelvis against mine, clearly also happy to keep me inside for as long as possible.\n\n\"Amazing? Perfect. I would say it was perfect! It feels so good to be inside you like this. I wish I could just stay like this forever.\" I told her.\n\n\"Well, I don't think you can stay, but I sure hope you will visit often.\" she replied with a little wink.\n\n\"Anyway, I think I am ready for our game now.\" She added.\n\n\"Uh, maybe we don't need the game anymore? I mean, this was all us, no game required, right?\" I asked, not quite certain where this was going.\n\n\"One last game. Shuffle the deck, and hit me.\" she demanded.\n\nReluctantly I started to pull out.\n\n\"No. Bad. Stay where you are. Just get the cards.\" Kaitlyn instructed me, pulling me back against her, trapping my soft cock inside the comfortable heat of her wonderful pussy.\n\nPuzzled, I reached over and barely managed to get the cards, shuffled them awkwardly, and paused.\n\n\"What's the stakes?\"\n\n\"All in.\" she said without hesitation.\n\n\"All in?\" I asked, not quite certain what she meant.\n\n\"It's agreed then. Hit me.\" She told me, before I could inquire further.\n\nI felt as if the world shifted around me, a weight settled somehow.\n\nI watched myself flip the top card.\n\n\"Eight of hearts.\" I mumbled.\n\n\"Hit me.\"\n\n\"Five of hearts. Thirteen total.\"\n\n\"Hit me.\"\n\n\"Seven of hearts. Twenty total.\"\n\nI felt my heart breaking a little. Twenty was going to be almost impossible to beat.\n\nAbout to flip my first card with a sinking heart, I heard her call out once more.\n\n\"Hit me.\"\n\n\"Kaitlyn, you have twenty, that's almost impossible to beat. You should stand.\" I told her quietly, scared what would happen if I lost.\n\n\"I know. Hit me.\"\n\nAgain, unable to restrain myself, I flipped the top card.\n\n\"Queen of hearts. Thirty total. Bust.\" I said with disbelief in my voice.\n\nPeals of thunder roared outside, a streak of lightning visible through her window.\n\n\"Finally!\" Kaitlyn sighed.\n\n\"I am all yours, as I was always meant to be!\" she smiled at me.\n\n\"I love you Daniel!\"\n\nSuddenly I felt immense gratitude to have such a wonderful sister, I felt the pure love I felt for her, my need, my hunger that only she could satisfy.\n\n\"I love you too Kaitlyn!\"\n\nUnbelievably, I could feel myself begin to harden inside of her.\n\nThis moment was pure perfection, and yet it was only the beginning.\n\nThe End?"
    ],
    "authorname": "RDJohnson",
    "tags": [
        "sister",
        "brother",
        "cunnilingus",
        "blowjob",
        "creampie",
        "taboo",
        "mind control",
        "throatpie",
        "virgin"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/it-was-in-the-cards-pt-06"
}