{
    "title": "Eros Spa Ch. 02",
    "pages": [
        "Several weeks had passed since Anna had received a trip to the Eros Spa from her aunt. The experience she had with their \"sexual therapy\" had quite literally changed her whole outlook on sexual encounters; she had never really had an orgasm until she tried their amazing machine. The little flutters she had thought were orgasms she now realized were just the small waves before the storm of her orgasm.\n\nAgain Anna was looking at her attractive body in the mirror; however instead of just standing and looking she was seated. Her hands roamed over her breasts feeling their resilient give as she pinched and pulled at her hardening pink nipples. Her eyes narrowed to slits as she tried to remember to stay in the frame of the camera on a tripod next to her. She could hear the buzzing whir of the present she got from her visit to the spa, a smaller version of the amazing machine she had experienced there.  The odd toy could be strapped around her waist and between her legs, once in place a pump in it would pressurize a rubber \"cock\" pushing it into her. \n\nThe small version was much less capable than the big unit at the spa. This machine's cock could expand into her and withdraw, as well as swirl in a circular motion inside her. \n\nAs the small machine proceeded to do just that, seeming to push against every wall of her vagina as it slid over her special spot, her eyes closed in pleasure. Finally a purring buzz came from the machine as its vibrator, positioned on her clit, turned on. A small pleasurable wave washed over Anna as she felt herself contract around the rubber cock. Her hands pulled on her tight hard nipples as the orgasm continued. She triggered the shutter of the camera with her foot, using the small part of her brain left out of the orgasmic bliss.\n\nAll of this was a part of a series of photographs for her class. Her art had gone from \"missing something\" in her professor's words to \"earthy and sensual\". She had to admit that her photos of her face, breasts, and many other of the various curves of her body as they were tightened in the midst of an orgasm looked very good in black and white. She had even sold a few of them so she had a good deal more money than she had had in a very long time. Of course most of this went to pay off her loans from college, all except for the price of a dress she had bought to spoil herself, and what she needed to eat.\n\nThe dress had been bought in the hopes that she could go out to one of the several nightspots in her college town and find someone to share her newly awakened sexual drive with. This plan was a huge failure, she admitted to herself as she cleaned up and shrugged into a pair of overalls, taking the film from the camera to go with her on her trip to the dark room. Not that she had trouble finding willing males but they never seemed to get her as worked up as even her small portable toy did. After she had had sex with them she would often take the small unit to the bathroom to finish what they started. It wasn't that she didn't enjoy the feeling of a man in her, they just never seemed to bring her over the hump to the realm of her true orgasm the way the machine did.\n\nAs she busied herself in the familiar routine of developing her prints she realized that even the small toy just wasn't giving her the kind of orgasm she had at the Eros Spa. What was more she admitted, as she looked at her photos her prints were becoming colder and more formal the longer she extended the series. She also recognized that the day she had at the spa was taking up more and more of her thoughts, replaying every moment of it, even waking up at night after dreaming of it with a dampness between her thighs. The only problem was that Anna didn't have enough money to go to a regular spa let alone a highly exclusive one like Eros Spa. She had seen how much her aunt had spent on her present and she was shocked.\n\nDays later Anna was becoming so distracted thinking about the spa that she was having trouble keeping her mind on her work. She was getting frantic;  was she addicted to that machine? Would her life always be missing something if she didn't get back to that machine? Could she have a real orgasm without the machine? Finally gathering her courage, she made the decision to take her portfolio with her and go see if she could trade some of her photographs for another session on the machine.\n\nIt was late afternoon when she finally climbed the steps to the spa.  Rachel was in the waiting room wearing the white lab coat that seemed to be her uniform. Rachel's rich brown hair was pulled back in a thick braid.  Anna found herself wondering if she was wearing anything under her coat;  she hadn't been the last time when Anna watched that amazing demonstration of the machine.\n\nRachel turned as Anna entered \"Anna! I wasn't expecting to see you again.  It's great you came back, but I am afraid I was just tidying up before we closed. We can make you an appointment if you would like?\"\n\n\"I ...um that's not quite it... I just kinda... I was wondering if I could trade some pictures for another session with that machine?\" Anna stammered, feeling her eyes tear up, \"or maybe I could help you clean... or something\"\n\n\"Oh my,\" Rachel exclaimed, wrapping her arms around the younger woman.\n\nAnna promptly dissolved into tears, sobbing on Rachel's shoulder. Rachel held her making soothing noises.\n\n\"Shhh... there, there, what's wrong, why are you crying? I am sure your pictures are wonderful I would be happy to have some new art in my house, I think I can find a place for them.\"\n\n\"It's not the pictures... it's ... it's ...I think I am addicted to your machine...\" Anna finally worked past her lips before sobbing once again \"I can't even have an orgasm any more\"\n\n\"Hmmm... usually our clients return to their sex lives reinvigorated, more pleased with their partners than they were before. Is your partner satisfying you?a question Maybe you need some counseling hon?\" \"I don't have a partner, just a bunch of guys I picked up at bars, and they didn't do anything for me,\" Anna was beginning to pull herself back together.\n\n\"Well if you want my very non-professional opinion, the problem is just that none of those flings really touched you on an emotional level, and they probably weren't too interested in making sure you were satisfied during your encounter with them right?\"\n\nShe continued after Anna's nod, \"Here although there is no emotion. It is all about pleasuring you; I think when you find a man you really care about or one who puts your pleasure first you will find yourself very pleasantly surprised... sound about right to you?\"\n\n\"I guess so... but it doesn't solve my obsession with this place, or my lack of money to pay you for your services,\" Anna replied as she separated herself from Rachel, suddenly feeling very odd in the arms of a woman she had only met once, and who only wore a thin lab coat.\n\n\"As for that, let me have a look at your portfolio. I have another idea too, but I am terribly curious to see your work.\"\n\nAnna shyly handed over the slim large folder containing all her photos of herself taken during the moment of orgasm. None of them were particularly explicit, but she found them very sexy and watched covertly to see if Rachel's reaction. She was pleased to note a slight flush come to Rachel's cheeks, then the tops of her breasts. Those breasts, the little she could see of them began to rise and fall more quickly too.\n\nAs Rachel flipped to the last picture she let out a little gasp, \"I must have this last one, it is amazing\"\n\nShe flipped the photo over and it was Anna's turn to blush. It was a picture of her face, lips parted in orgasmic bliss, her head tilted back and eyes closed. In the very corner her very hard nipple was just visible.  She had meant to keep that picture to herself, it was too personal for her to consider selling, or she thought it was. The amount Rachel offered for it was more than she would ever have asked for all the rest combined. Then Rachel offered the same amount for the remaining pictures as a group and Anna thought she had to be dreaming. Fifty Five hundred dollars woulld pay her rent for the year, with a tidy sum left over!\n\nAs Anna tried to recover from her shock Rachel chuckled, \"I take it from your gaping mouth that that is a yes on my offer for the pictures. Now with that much money I am sure you could afford quite a few sessions here at the spa, but I have another idea to solve your problem. We have been looking for another person to help out around here and one of the benefits of the job would be use of our machines after the last client has left.\"\n\n\"Well I have been looking for a part time job, and it wouldn't be the first time I have swept floors for extra money,\" Anna sighed in resignation.\n\nRachel giggled at Anna's tone, \"I think we can work something a little less menial; actually what I was thinking was that we needed another person to help control the machines for our clients, as well as having another person to test out new designs. I always like to have at least a couple of other opinions before I introduce something new to our clients.\"\n\nAnna's surprise was evident, \"I didn't know that you made your own machines.\"\n\n\"Well there isn't much demand for giant masturbation machines, at least not like ours. No one could afford them, assuming we would sell them, which we don't. But all of that aside are you interested in the job?\"\n\n\"Of course, when do I start?\" Anna shook Rachel's hand to seal the deal.\n\n\"Well I think you can start collecting the benefits right now. I had reserved a machine for myself but I think you are more in need, since it brought you all the way over. As for the rest, how does this weekend sound, we can give you some training then.\"\n\nAs they walked down the hall Rachel filled her in on more of the history of the spa. Anna was amazed to find that Rachel had started this business with her husband who was a robotics engineer and designed the machines while she took care of the clients. Anna couldn't decide which was more odd, that a man designed the machines or that Rachel was married. She must have been mistaken when she thought she saw a flicker of lust cross Rachel's face when she was looking at the pictures. Certainly a woman who was happily married wouldn't lust after her young new employee.\n\nWhen they arrived at the room they were headed towards Anna realized that it was different than the one she had used last time. She now knew that there were three rooms with machines in the spa. Aside from being a mirror image of the room she was in the last time it was very similar; redwood paneling, humid air, and an odd table much like a massage table with a cylinder where it would fit between the legs of someone lying on it. This machine had dark purple padding on it however, last time it had been beige.\n\nAnna felt nervous all over again, fretting if it would be as good as the last time and if it would continue her dependence on these machines, in spite of Rachel's reassurance.\n\nRachel interrupted her mental wanderings, \"This is a different machine than the one you used last time, it was reserved for me and I like things a little more ... let's say intense than you experienced. Still interested?\"\n\nThinking about the last time sent shivers racing up and down Anna's spine and caused butterflies to dance in her tummy.\n\nShe gulped, \"Yep, still interested.\"\n\n\"Ok, maybe you should take your clothes off then,\" Rachel said with a wink.\n\nSuddenly shy Anna turned her back and slipped out of the sundress she was wearing. In spite of her shyness her body was becoming aroused. Looking down shyly she had an perfect view of her pink nipples puckering and tightening as they became hard. A growing warmth between her legs let her know what was happening down there.\n\nRachel snapped her out of her observations of her own body, \"Damn, I wish I still looked like that! Of course my breasts were never as big as yours but still, you are amazing looking.\"\n\nAnna blushed then surprised herself by blurting out, \"I seem to remember you didn't look to bad yourself. I believe I was thinking about how I hoped I still had muscle tone like yours in ten or fifteen years during your... demonstration.\"\n\nRemembering Rachel writhing on the table trying to keep up her conversation caused a surge of heat to race up from between Anna's legs. With it her anxiety lessened; this woman had already shared in the most intense experience of Anna's life.\n\n\"Well you going to stand there all day? Mount up!\"\n\nBoth Anna and Rachel giggled as Anna hopped up on to the table. The laughter melted the last of Anna's body shyness; replacing it was anticipation as she pushed the pink folds of her pussy to the machine.\n\nRachel made some adjustments then said, \"This time we are going to have to calibrate the machine before we get it going. I am going to inflate its cock into you, then it is going to slowly push deeper into you. What I want you to do is to let me know when it gets to uncomfortable.  Understand?\"\n\nAnna nodded then gasped savoring the feeling of the very warm large cock growing inside her. She let out a long sigh and smiled as she felt the familiar feeling of it filling her. Unlike the last time it did not move once it had filled her, it was the first time that the machine had felt at all unnatural. Even when it had been doing things that no cock could it had felt almost alive the last time, now it didn't seem any better than her small gift toy they had given her.\n\nSlowly the phallus pushed deeper and deeper into her. When she could no longer handle the pressure against her cervix she signaled to Rachel to stop, and the pressure backed off just enough to make it no longer painful.\n\n\"Great almost ready for action, now it's going to get thicker, same as last time let me know when to stop.\"\n\nThe already large phallus that felt to be impaling Anna began to grow, not smoothly but in little surges. Anna quickly began to grunt with each surge. She felt it first filling her even more full, then stretching her slightly. Finally it felt like it was splitting her open. Amazingly Anna found she was extremely turned on by this; she could feel herself leaking around what seemed to be a telephone pole jammed into her.\n\nShe held out a moment longer then cried, \"EEEEnough!\" as her body shook with a tingling mixture of pain and pleasure.\n\nThe pressure immediately backed off.\n\n\"Feel bearable now?\" Rachel asked in a caring tone.\n\nAnna let out the last of the breath she didn't know she was holding, \"Yes, it's still fucking huge, but not painful. I was afraid I might have done permanent damage to myself by not stopping you soon enough.\"\n\nRachel laughed as Anna reached down and ran her hand over her stretched pussy lips, her eyes widened as she felt how very big the machine inside her had gotten. Then she stared at her hand as if she was expecting blood on it.\n\n\"What are you laughing at?\" Anna asked a little grumpily.\n\n\"The look... on your face... was priceless, and I have never heard you say even the mildest swear word until now,\" Rachel was now wiping tears away from her face.\n\nRegaining her composure Rachel asked if Anna was ready, informing her the machine was all set to go.\n\n\"I'm ready but... could you hold my hand again, I mean if you don't mind, I mean I would understand if you don't want to I know it seems weird I don't know I just...\" the last of her response came out in a rush, and Anna felt herself going red all over.\n\n\"Sure, no problem. The same three squeeze signal as last time?\"\n\nAnna nodded wondering why she felt to relived to have Rachel's hand to hold.\n\n\"Yes? Great,\" Rachel took Anna's hand as she said the last and pushed a button to activate the machine.\n\nThe cock in Anna, and now that it was active it felt a good deal more real, surging, warm, and pulsing slightly, had returned to more human like proportions. It felt even better than Anna had remembered it. She closed her eyes as it curled up to rub against the roof of her pussy, squeezing Rachel's hand.\n\nIt began to slide in and out of her forming soft waves along the shaft that opened Anna's lips as they past, or gently dragged them into her as it pushed in. Anna moaned softly with each stroke.\n\nA warm glowing feeling seemed to creep over Anna as she began to lose herself into her pleasure. First slowly rocking her hips so that the gentle thrusts of the machine would rub where she wanted them to, then pushing herself against the machine as her moans became louder. She could hear the squishing noise that the machine made as it pushed and slithered inside her, audible conformation of how very wet and turned on she was, it sounded very naughty to her. That turned her on even more.\n\nAnna's orgasm was building like a huge wave about to crash and turn her into a quivering mass of pleasure as the cock began to spiral deep in her.  Just as she hovered on the brink the machine stopped, still pulsing slightly but not enough to drive her over the edge. Anna sobbed with frustration, writhing madly trying to get the orgasm she so desperately needed.\n\nSuddenly her eyes shot open, the cock inside her had quickly gotten very cold, \"What...?\" but before she could get any more out, it became almost painfully hot.\n\nAnna teetered on the brink of orgasm as wave after wave of hot and cold washed over her. The machine moved just enough to keep her frantic in need of climax but unable to attain it. Her free hand grabbed at the table as she writhed and flopped, gasped and moaned. She was amazed at the sensations flooding her system but frustrated in getting herself off.\n\n\"Ungh... Damn, machine just fuck me!\"\n\nShe heard a button click.\n\nThe cock, now hot, surged deeper into her, she could feel drive as deep into her as it had before, but now it vibrated as if straining to get deeper, and the vibration seemed to travel straight to Anna's brain, making her cry out.\n\nThe machine began to saw in and out of her far faster than any human ever could. Her low moans became a high pitched squeal. Then became nothing but short gasps of air as her body spasmed, starting from her pulsing, quivering pussy spreading throughout her body.\n\nSlowing down the machine let Anna claw her way back down from the heights she had obtained.\n\n\"Wow ... that was...great, much better than last time!\"\n\n\"Oh but you aren't done yet!\" Rachel replied.\n\n\"What do you... Oh my GOD! Oh my...\"\n\nAnna had forgotten that the machine could make the cock swell, which it was now doing. What really set her off was the buzzing purr of the vibrator she had not realized was there before, touching her clit. The tingle of the buzz rapidly brought her level of arousal to nearly where it had been earlier. Again the machine was making ridges along the shaft as it slowly pulled out of her, but now they were much steeper and felt huge. The combination of the intense tingle of her clit and her pussy stretching wide to let each ridge pass as her muscles tried to clench and resist left Anna panting. She could feel a flood of her own juices following each ridge of the cock as it left her.\n\nJust as she was about to cum again the vibrator stopped and the cock began to thrust into her, this time at a much more likely pace for a real person.  However, now it was swelling at the end of each stroke, slim as it slammed into the back of Anna's pussy then growing along its length as it pulled out.\n\nAnna again lost herself in the sensations, eyes closed she pulled Rachel's hand to her chest clinging to it as a lifeline to reality as she had during her last session. Unlike the last time that hand slid out of hers and began to kneed her breast. Anna's back arched.\n\n\"Oh Fuck... YES!\" she screamed.\n\nAnna's other hand came up to pull, twist, and pinch her other nipple as Rachel did the same. This extra stimulation was too much and Anna's orgasm exploded through her body. The world dissolved into splashes of color, her ears full of her own animalistic grunts.",
        "As the world began to return to focus for Anna she heard Rachel whisper, \"That's it baby, cum for me... mmm yess.\"\n\nRachel then pulled hard on Anna's nipple, rolling it between her fingers as the vibrator again buzzed on her clit. This sent Anna into her third climax of the day. As she shot the bucking rapids of her bliss she heard Rachel's cries join her own.\n\nAnna and Rachel sat panting for several long minutes before Anna propped herself up on her elbow.\n\nWiping tears of joy out of her eyes she said to a disheveled Rachel her lab coat wide open, \"I think I am going to like working here.\"\n\n--Many thanks to my editors --Please vote, I love to hear feedback/ideas for the story to continue. "
    ],
    "authorname": "spyro1123",
    "tags": [
        "eros spa",
        "giggled anna",
        "rachel offered",
        "unlike time",
        "anna orgasm",
        "orgasm machine",
        "heard rachel",
        "anna found",
        "left anna",
        "rachel giggled"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/eros-spa-ch-02"
}