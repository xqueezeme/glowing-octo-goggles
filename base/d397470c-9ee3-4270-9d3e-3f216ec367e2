{
    "title": "The Sophomore Jinx",
    "pages": [
        "\"The Sophomore Jinx\" is Part Two of the sexual story of my life. \"The Rookie,\" which was posted on 9/24, is Part One. I am purging my soul. Telling of my past \"sins\" is part of my repentance.\n\nI was celibate for over a year after \"The Rookie\" and then I started a string of loser boyfriends in my sophomore year of college. The sophomore jinx I guess. Fraternity brother types and they all gave me mostly the same kind of immature lovin' but lots of laughs, and I always got the last laugh. And yeow those parties! Made \"Animal House\" look like kindergarten.\n\nThe fraternity brothers had these awesome parties with the sorority sisters and anybody else who would pay $5 to get in. They had kegs and kegs of beer and all the food you could eat. If you could call that crap food. I wouldn't feed it to my dogs. The menu was always the same. Huge quantities of hot dogs and sauerkraut and a big vat of chili.\n\nThe \"Las Vegas\" parties were simply the best. The sorority sisters would do a little show. You know, show a little T & A. The brothers would do their comedy routines and Chippendale bit. Very funny stuff. The parties always turned to gambling for more excitement. The most memorable party ever was on the eve of Thanksgiving break in my sophomore year. It was also the last of the super parties because somehow the dean got wind of the goings on. You wouldn't believe what I had to do to keep from being suspended when he called me into his office.\n\nWhat really pissed me off about the gambling was the cheating. I don't mind taking it off, but how about a fair chance? The sorority sisters were losing big time. Mostly boob city all around. Not only did you have to remove an article of clothing, you had to down a shot of this 151 rot gut rum. And then guess who figures this game out. So I tell the leader of the pack I want to talk to him in the kitchen. I'm not about to start a ruckus. The last time I did I ended up going and getting my money to bail people out of jail.\n\nI'm padding around the kitchen in bare feet and a T-shirt. I took off my panties instead because I wasn't wearing a bra and the T-shirt was long enough to cover, well, you know. I'm only pointing that out because people tend to pay more attention to me when I am not naked. So the leader of the pack, his name was Oscar, sits down in the kitchen on a chair next to the stove awaiting my lecture. I said, \"You fuck faces are cheating\" and I picked up that huge vat of chili off the stove and I dumped the whole thing right over his head. It wasn't that hot, so it wasn't like I scalded him or anything. The chili just dripped down over his head and all over the rest of him.\n\nSo Oscar just sits there and starts crying. Not mad crying or sad crying. Just crying almost laughing like I can't believe you did that. I dragged him into the living room where the others were. He is like limp and keeps up this crying jag and I pulled off all his clothes. The other guys are looking at me like I don't even think I am going to mess with this chick tonight. And then I screamed at the rest of them, \"Get your fucking clothes off, you cheating motherfuckers!\" And they did. And then we played Twister.\n\nWe invented our own version of Twister. The objective, for guys, was to get yourself in some sort of position to get your cock sucked. For girls, well, you know. It was more difficult for us because we had to get within a tongue's length rather than a dick's length. I've always been the best at these kinds of sex games. I got all the right attributes like a deep throat. I was especially adept at Twister because I am double jointed and I can do some really weird things with my body.\n\nI was really feeling bad about what I did to Oscar with the chili. So I maneuvered in his direction. After the first two rounds, I'm right where I want to be. I said to him, \"eat me.\" Afterwards I asked him where he learned those incredible techniques. He said he was the only male in his family. No dad. Just mom and his four sisters. A very skinny kid so he claimed. Mostly he ate pussy.\n\nI was straddling his face the other way. You know, my fat ass on his forehead. Actually, I definitely did not have a fat ass back then. I was a skinny long-legged stick. Now I'm voluptuous so I've been told. Next decade I'll be matronly. Shit happens.\n\nAnyway, so I'm in my favorite position and I like to see if guys can figure this thing out from a different perspective. I mean, I can suck cock from any position. On my knees, on my back or whatever. If I can find a way to get it in my mouth, well, you know. Oscar stuck his nose right in my vagina and he licked me from below, keeping his tongue very flat. You know, just lapping it up. I hate it when guys do that pointed tongue thing like they are trying to find just the right spot. Girls can usually do this so much better but this guy was very, very good. Kudos to his mom and sisters for providing the proper training.\n\nHe went up and down and side to side very slowly. Soft, slow licks. I put my hands on the sides of his head. Yuk! That chili. But nice big ears he had. He teased my clit incessantly with his gentle licking. I was getting a little numb and I lifted up off his mouth for a moment. But he was close enough to blow on it. What, girls can get a blow job? I knew I was close and I told him to lick a little harder and suck my clit. I was getting rather frenzied and started yelling some crazy stuff. Yeow I came good, yelling and swearing all the while. Well, I couldn't help it. I'm not responsible for what I say under duress. You know, temporary insanity. \n\nI kind of rolled off and laid my head real close to Oscar's cock. I stroked it with my hand for a couple minutes while I tried to regain my composure. But I didn't want this party to get old so I knew I had to keep the momentum going. I started sucking his cock very slowly and nibbling and licking the head.\n\nI was kind of bent over Oscar's cock with my butt kind of up in the air. This brother named Rodney had been hitting on me all night. First he tells me he has a big fat cock, 8 or 9 inches long. What, he don't know? A little later he is telling me he has a big fat cock, 10 inches long. The proverbial fish story. Oh yeah, speaking of fish, first he tells me he don't eat pussy unless he has to. The story later changes to he loves it. Anyway, when everybody got naked I couldn't help but notice that Rodney was absolutely huge. His one eyed monster actually frightened me a little.\n\nSo I'm sucking Oscar's cock and all of a sudden I feel Rodney's hands on my ass. I'm still very wet. And he slips that big cock right up inside me. Thank you Lord not up my ass. His cock is so big he can't even get it all inside me. And he starts fucking me real hard. The harder Rodney fucked me, the harder and faster I sucked Oscar's cock. Well, it didn't take Oscar long. He gave it up and I swallowed every bit of it, leaving him screaming and writhing in ecstasy.\n\nThen I slipped right away from Rodney when he said, \"I'm going to fuck the shit out of you!\" No way because I thought I just might fuck the shit out of him. I pushed him on his back, got on top him and slipped that big cock right back inside me.\n\nI got to admit I fucked Rodney silly. He was mumbling some religious jive about God was sending an angel to visit him this very night. Hey, I practiced my Kegel exercises. I kept contracting, clenching and squeezing on that big cock, keeping Rodney from cumming but getting off twice myself. Finally I couldn't stand it any longer and I pulled myself off and went right down on that monster with my mouth. Obviously I couldn't get it all in my mouth. Half maybe. But I didn't hear Rodney complaining. Just moaning. He came like a gusher and just kept throbbing and throbbing. I never thought the cum was going to stop shooting out of that thing. I mean, it was shooting all over the place. And two of my sorority sisters even helped me out, trying to swallow and lick up as much as we could.\n\nEverybody else soon joined in the action. Oscar and Rodney were not the only ones who had their cock or tongue inside me that night. And afterwards, I was so damn hungry I even ate some of that chili they scraped off the floor and put back in the vat. Even though that was the last of the super parties, I wasn't too disappointed. My GPA soon improved dramatically. The dean made me his special project and called me into his office frequently for educational counseling. Even though I was a language major, I never got to talk much in his office. And the worn spots on my jeans were not on my buns.\n\nIt was also in my sophomore year that I invented ZIPPER.\n\nI invented ZIPPER during spring, on one fine April 1st. It all started as an April Fool's joke. Girls just wanna have fun! My sorority sisters and I were hanging out in a bar. With squirt guns. We sat at a large table. It was very crowded in the place. So when a cute guy walked by, we would shoot him in the crotch. Big wet spot on the front of his pants. And at first he doesn't have clue. But of course we do it again until he figures it out. Some guys really got pissed! They were excluded from ZIPPER, round two. I mean, why should a guy get a free blow job if he doesn't even have a sense of humor. As if!!!\n\nWe were real wild and crazy. Much sexual repression at those Catholic institutions but we did our best to obliterate it. The sisters and I are feeling guilty, you know, about making April fools out of these dudes we squirted. So we start brainstorming. What could we do to make up for our indiscretions we wondered. At the same time, we wanted to have a little more fun with this.\n\nThe objective of ZIPPER, in case you haven't figured it out by now, was to make the dude shoot fast. The sisters, of course, timed the events and we gave away awards. One at a time. The sisters who were last usually had a slight advantage though because the last few guys were usually very ready after seeing the other dudes sucked off and screaming. \n\nThe week of final exams of my sophomore year the sorority sisters were studying like crazy. Right, in a bar. The bar was far away from campus and a place where we knew older guys hung out. Hung out is right!\n\nWe each picked out a partner for ZIPPER. I chose mine very carefully and I seen him before. Every Tuesday and Thursday morning at 9:00. His name was Jonathan. The sorority sisters and our guests went in the back room where the pool tables were. Nobody else was there and we closed the doors.\n\nSo we started the game (and the clock) ............\n\n\"Can I do anything I want to you as long as I promise you'll like it?\"\n\nI didn't wait for an answer. Down on my knees I went and ZZIIPPPPPPPPPP.\n\nI reached in and felt him start to stiffen as I pulled him out. I guess he was starting to get the idea about what was coming next.\n\nI stroked him with my hand and said, \"Baby, I want to suck you, would you like that?\"\n\nSince he was rather speechless, I didn't wait for a reply. I unfastened his belt and dropped his pants and shorts. Oh my, he was wearing boxer shorts with little hearts on them.\n\nI licked the tip of his cock, put him in my mouth halfway and bit. Just a little teeth.\n\nI pulled him out and said, \"Tastes great.\" I made him disappear down my throat and bit him a little harder. I pulled him out and asked, \"Less filling?\" I said \"Let's find out\" and I went back down on him. My left hand was circling the base of his cock and my right hand was following my mouth up and down on him.\n\nI started doing him no hands. Slowing at first. My hands are playing in and around his cute butt and balls. He put his left hand behind my head and with his right hand he unbuttoned my blouse. I wasn't wearing a bra. He started toying with my breasts and he could see that ZIPPER was also turning me on too because the tips of my nipples were becoming very erect.\n\nInstead of taking him down my throat, I took him to the side of my face, in my cheek. He put his hand on my cheek and the feel of his cock in my face was driving him crazy. Then I started to go down on him hard and fast. Every time I went down on him all the way I squeezed his butt and pulled him towards me.\n\nHe got incredibly hard and he started going right back at me, fucking my face. Then he started screaming in some foreign language, like \"Ooohhhh,eeeeee, aaaaaahhhhhh,ooowwwhhh.\"\n\n\"Is this Hebrew?\" I asked.\n\nHe started yelling at me, \"God (I can't talk, but I'm thinking, I'm not God dude, just one of the chosen few, the Divine Feminine) suck me, suck me! Harder, harder! Faster! Please, please SUCK ME!\"\n\nAnd then he seemed to relax just for a moment. I'm not sure at first but of course when he started throbbing wildly and pulsating and then I feel and taste, well you know. This was sort of like a hose when you first turn the nozzle on. Spurt, spurt and then a rather steady flow. And all that while he is talking more Hebrew, \"Aaaaaaaaaaaahhhhhhhhhhhh.\"\n\nI had to pull him out quickly, too much to swallow, and gulp for air. But I put him right back in my mouth and kept swallowing until he stopped cumming.\n\nI kept him in my mouth, all of him, until the swelling went down. As he started to soften up just a bit, I unbuttoned my jeans and slipped my hand to my very smooth pussy. I was very, very wet. I brought myself to orgasm in what seemed like seconds.\n\nJonathan's friend William was going crazy watching this. I had seen him before, on Tuesday and Thursday afternoons at 3:00.\n\nWilliam grabbed me and jerked me up off my knees and said, \"You are a bad girl. Why aren't you studying bad girl? I'm going to punish you.\"\n\nHe sat on a chair, put me over his lap and pulled my unbuttoned jeans down past my knees. William spanked me softly at first. Too softly. I think he was intrigued by the feel of my 100% cotton panties. Then he put his hand down the back of my panties and stuck his finger up my bum. I think he was testing the waters. Then he pulled my panties down and resumed the spanking. He smacked my ass harder and harder until I cried out each time he whacked me. But I didn't say stop. I knew he would stop before I begged him to because he was becoming very aroused.\n\nFinally he stopped and said quite emphatically, \"Get your ass up on that pool table bitch and start squealing like a pig!\" I knew what he wanted and I decided to play along. Well, I couldn't help it! All that spanking had made me very wet again. \n\nI got up on the pool table. Face down, resting on my elbows with my butt up in the air. He had a big cock and he wasted no time sticking it in me. I think I saw Jesus. I mean, he was just humping my ass to death. I distracted myself as best I could. I laid my head on my left arm and reached underneath with my right and put my finger on my clit. I came before he did.\n\nHe grabbed my arms and pinned them behind me. My head was lying on the table. I felt like a rag doll and he is sticking that big cock further and further up my bum. And it hurts!\n\nI knew I had to put an end to this soon so I started squealing like a pig. This really turned him on and he kept pounding and pounding up my ass. Finally! I thought he was having an epileptic seizure when he finally came and then he collapsed right on top of me.\n\nI wiggled out from under him, straightened myself up and ran out the door. I turned and yelled over my shoulder, \"See you guys tomorrow! By the way, did I tell you the dean is my good friend?\" You see, Jonathan and William were professors; my professors.\n\nThe next day was final exams. Never did get to study because I was too tired when I got back to the sorority house and just crashed. I did, however, get an \"A\" in both classes.\n\nI learned important lessons in life my sophomore year of college. Call it the golden rules. Rules like give head and you'll ahead and it doesn't hurt (long) to take it up the ass once in awhile."
    ],
    "authorname": "Deborah",
    "tags": [
        "leader pack",
        "final exams",
        "sophomore year",
        "oscar cock",
        "mom sisters",
        "sorority sisters",
        "unbuttoned jeans",
        "tuesday thursday",
        "started yelling",
        "stroked hand"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-sophomore-jinx"
}