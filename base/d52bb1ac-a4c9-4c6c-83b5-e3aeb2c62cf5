{
    "title": "There and Back Again Ch. 023-024",
    "pages": [
        "Chapter Twenty-Three: Murphy's Law \n\nI woke up back in the ICU, sandwiched between beds of patients with every tube imaginable in them. When I did my personal inventory this time, I found a few more tubes than I normally had to contend with. I had an IV, but it exited from just below my collarbone, instead of from a hand or arm as usual. I couldn't see it, but there were a lot more attachments on it too. I sat up carefully and noticed a catheter - the bag was empty - and another IV in my opposite hand. I also had a tube going up my nose, which constantly made me feel like I needed a Kleenex, and seemed also to be making my throat tickle. As I looked around I realised I had a gaggle of monitors, most of which were portable on individual wheeled stands, and very few of which I could comprehend. I was almost afraid to know what had been going on with my body while I was away. \n\nA nurse bustling by gave a high pitched squeak when she saw me sitting upright, pulling angrily on the tube in my nose. She pushed my hands away, but it was too late - the stupid thing was out, and after a moment of coughing and gagging I felt much better. She confirmed I had been unconscious again for a couple of weeks, but was deliberately vague on any other details. She was definitely antsy, and finally ran off to get the doctor without telling me anything. \n\nI was contemplating trying to change into my own clothes again, wondering what to do with the tube near my collar bone, when the doctor arrived. He looked ten years older than he had the last time I'd seen him. His smile when he saw me was entirely fake, and it occurred to me that he might be feeling responsible for whatever strangeness my body had been going through the past two weeks. \n\nHe confirmed for me that I'd been out for two weeks, which seemed about right although I'd forgotten to keep track exactly in Ferelden. Apparently I'd been causing some problems, and had managed to destroy a variety of hospital equipment twice since the last time I'd been awake. He didn't phrase it like that, citing electrical surges and power outages, but it had now happened three times, in various parts of the hospital, always to equipment near me. Unfortunately, I'd never been hooked up to an EEG monitor when it happened - I wondered what the pattern would have looked like. The hospital, unable to figure out what was happening, had put me in an isolation ward, where I stayed until the day before. \n\nI ended up back in the ICU because, out of the blue, the day before I woke up, blood had started fountaining randomly out of my arm. Apparently my blood pressure had dropped, and I lost more than a litre of blood onto the floor, but when they finally got to examining me, could find no source for the bleeding. Worried that it would happen again, they put me back in the ICU with all the monitors and the new IV - apparently called a 'central line'. The line could allow someone to monitor my blood pressure at the same time as giving medications or fluid or whatever, and could stay in place for a long time, instead of needing to be changed every few days like the one in my hand. \n\nThe tube in my nose was apparently a source of contention. Some other doctor who'd been called in to help out when I started bleeding everywhere found out that I'd been in a 'coma' for two weeks without being fed and had a fit, forcing the issue and getting hospital administration involved, until finally the tube was inserted to provide me with food until I woke. My doctor felt it was unnecessary, because like before, I had lost only a tiny amount of weight, hadn't needed to pee, and wasn't showing any sign of malnourishment. Even after all the bleeding, the lab could find nothing abnormal in my blood. I wondered why I was still hungry in Ferelden while I was being fed at home. Maybe healing means I needed more food than usual? \n\nI showed him the new scar on my forearm, explaining that I had been injured in my dream. I didn't tell him about the templar thing, but implied that I was aware the monitor outages were probably my fault, claiming a long-standing \"anti-technology\" issue that broke computers and watches all the time. Knowing I might not have long before blacking out again, we decided quickly for me to do the paperwork refusing tube feeds and other procedures unless my lab work said that I was becoming malnourished, or otherwise ill. I asked about removing the central line, but he convinced me to leave it, and just detach all the tubes feeding into it, so that I wouldn't need another if the problem happened again. I also signed paperwork refusing a catheter. Worst case scenario, they'd have to deal with me in adult diapers, but I was getting sick of tubes going into and coming out of my bladder. I told him I thought he should keep me out of the ICU unless I was actually dying. He agreed, though wasn't sure how enforceable that would be if I started spewing blood everywhere again. \n\nOnce that was done, I begged leave to take a shower, and he agreed to ask the nurses to arrange that once I'd been transferred to a different room, yet again. He encouraged me to see the lawyer as soon as possible assuming I stayed awake long enough, and was getting ready to leave as the world swam and I collapsed down onto the bed. \n\n\"No! Not dressed like this!\" My last view was of my nearly naked body, wearing only a tiny hospital gown, and the kind doctor's face, frowning in consternation. \n\n******** \n\nI woke up in Thedas, somewhere. I was barefoot, and wearing a skimpy, short hospital gown. My ass was hanging out in the breeze. Wonderful. It occurred to me, for possibly the first time, that there was no guarantee I'd be somewhere useful. I'd been lucky so far, always ending up close to where I wanted to be, but I could be anywhere, really. In a hospital gown. Good God. I was surrounded by fields of mostly thick grasses, no signs of habitation anywhere. I couldn't decide if that made me more or less likely to be raped until I found some clothes and figured out where I was. \n\nI tied the gown at the back as best as I was able, then tried to decide what to do. There were some larger trees a few hundred yards away, and I decided to head towards them - maybe I could find myself a stick as a weapon, and at least find some cover so I'd be less likely to be discovered by anyone. I picked my way across the field, very conscious of my lack of shoes. I couldn't afford a foot injury, so being careful meant it took me a lot longer to reach the trees. It was a small stand of trees, not a forest, but I found a decent branch that I thought would work as a walking stick and a basic staff if necessary. Still not seeing anything else useful, my next thought was to climb a tree and see if I could figure out where I was from a higher elevation. One of the trees near me was a huge, old, gnarled thing, and was tall enough to be useful. It had several smaller trees leaning against it or standing near it, which gave me additional hand and footholds. \n\nAt home, I'd always been overweight, no matter how hard I tried, but despite that I was quite adept at tree climbing as a child. In this body, it was a simple matter to haul myself up into the lower branches and scramble up the massive trunk. When I was maybe twenty feet up, I cleared the tops of most of the other trees around, and was able to get a bit of a look - more fields, more trees. I went a little higher, and suddenly realised that in the distance, there was a rather regular break in the monotony that continued as far as I could see in both directions. A roadway? The closest point to me was maybe a couple of kilometres, far enough to be annoying but near enough to walk. Lacking any other noticeable landmarks, I looked down to choose trees to help me navigate once I hit the ground. \n\nUnfortunately, while climbing the tree enabled me to look around, apparently it had also highlighted me as well. While searching for ways to know which direction to head, I noticed movement off towards the road. Over a few moments it came closer until it became obvious that it was a group of people, headed in my direction. They weren't anyone I knew, and they were coming fast. I debated climbing down to retrieve my stick, but decided that staying in the tree gave me better protection in case those approaching didn't have my best interests at heart. \n\nMy hopes for a dashing rescue came crashing down as I got a close up view of those that had surrounded the base of the tree. There were perhaps ten of them, all men, most looking decidedly unsavoury. They were all armoured, though their gear appeared to be piecemeal, none of it matching. They approached the base of the tree I clung to. \n\n\"What have we here, boys? Looks like we treed ourselves some entertainment for later. A gift, if you will, and look - we barely even need to unwrap it!\" The group of them laughed, and I sighed. Nice going, Sierra, jinx yourself by wondering about being raped. \n\n\"Come on down, missy! We won't hurt you none. We was just wanting to get to know you a little!\" There was a general chorus of agreement, mixed in with a variety of catcalls. Apparently chauvinist pigs say the same things in any world. I wondered how long I had before one or more tried coming up after me. \n\n\"I think I'll just stay up here, if it's all the same to you.\" There were some jeers, and I could see the atmosphere of the men below get nastier. They pulled into a circle, whispering amongst themselves, clearly trying to come up with a plan. \n\nI started looking up, evaluating the branches above my head. There were some...an idea started to form. I climbed a little ways down, holding on above myself, which put me into a fairly provocative pose. I ignored the flush of embarrassment, and lifted one leg, dropping it back down onto the branch I stood on. From below, I heard some more catcalls, as one or two of the men noticed and somehow seemed to think I was giving them a show. I was fine with that interpretation as long as it kept them down there a while longer. I stomped down again, heard a soft crack, and felt my weight shift subtly. I used my arms and swung up onto the next highest branch, giving the rabble below a glimpse of forbidden territory. I repeated the same 'dance', until that branch also started to crack. Again and again I did the same thing, climbing higher with each step, until I was a good fifteen feet higher than where I'd started. The show was losing its appeal due to repetition, but as yet none of them had caught on to my true intent. \n\nFinally dissatisfied, and having no luck convincing me to come down, the group elected one of their members to try to come up. He was a balding, ugly, mean looking man, but he appeared to be in good shape and I didn't think he'd have any more trouble climbing than I did. Fortunately for me, he looked a great deal taller and generally larger than I was, and I just had to hope I'd done enough. I shimmied a little further up the tree, now clinging to the trunk and distributing my weight across multiple smaller branches. I watched Baldy's progress with trepidation as he reached the lowest branches that I had 'danced' on. \n\nHe reached up to grab the branch, and it broke off in his hand, like I'd hoped. He swore, swinging wildly, and almost fell. Finally righting himself, he inched around the tree to try again. The next branch held as he grabbed it, but when he tried to shift his entire weight onto it, it also released, breaking off right at the join to the trunk. He became more cautious after his second near-miss, and found each branch he could reach similarly weakened. I actually grinned in relief that my plan had worked, and he caught the expression. He started swearing at me, then called down to his friends. \n\n\"This bitch weakened the branches! I can't climb any further.\" He tried a couple more times to scale the trunk directly, but had no luck. Finally he climbed back down to regroup. I stayed put, although I did break off one nearby long branch, which wasn't strong enough to hold me, but I hoped would work as a club if a needed it. I waited. \n\nThey elected another guy to try to climb, and I saw that he had some sort of rope over his shoulder as he came. I didn't think he'd be capable of throwing the rope over a reliable branch, but readied my makeshift club just in case. As he slowly climbed, I looked out over the horizon again, hoping for something I could use, someone who might aid me. That was when I noticed a small bird, circling high overhead. It seemed like too much to ask, but I had to try. \n\n\"Morrigan!\" I screamed as loud as I could managed, startling the men below. \"Morrigan, is that you? Help!\" I was rewarded by seeing the distant creature circle lower towards me. I cried out in relief as a familiar black bird finally landed in a tree nearby. \"Hey, any way you could help? I'm sort of stuck up here now that I've broken the branches. I don't suppose you have a bigger form that flies, like Flemeth? Carry me out of here?\" The bird chattered, and tilted its head curiously. \"I'll take that as a no. Where are the others? Could you get them?\" The bird made another noise and took off. \n\nMy conversation was noted by the men below, but if anything they seemed to find it funny. Personally, understanding Ferelden even as poorly as I did, I would have been wary of someone talking to an unnaturally large bird. I'd guess no one ever accused these guys of being the sharpest knives in the drawer. I returned my attention to the man who had finally reached the bare portion of the tree, where the branches had broken. My assumption that he would attempt to use the rope to throw over a branch was apparently misplaced, and instead he passed it around the trunk of the tree, grasping both ends while pushing against the tree with his booted feet. Crap, he's seen Mulan? Damn you Disney! \n\nHe was able to slowly creep up the bare tree trunk, having to pause every couple of steps to jerk the rope up. I prayed for a while that the rope would fray or break, but it didn't seem likely. His progress was very, very slow, but there was no mistaking that it was progress. I realised that I was going to have to resort to actively trying to knock the guy out of the tree, a fall that would likely kill him if I was successful. The thought of actually killing a person made me queasy - it was one thing to kill darkspawn and demons and abominations, entirely another to murder a human. I tried convincing myself that self-defense wasn't murder, but I didn't totally believe myself. Kill or be killed was not the culture I was raised in! \n\nI decided to try to deter him instead. I carefully slid down a couple of branches, and then using my club, reached down further to bonk him on the head, firmly but not viciously. \n\n\"I don't want to hurt you, but I will if you make me. I have friends on the way who won't take kindly to this, and they have no such qualms about killing would-be rapists. Why don't you just climb back down, take your friends, and go?\" \n\n\"Stupid bitch. If you had friends coming, we'd know about it. There's nobody around for miles. You might as well give it up - we will have our fun, one way or t'other, and if you stop fighting, you'll probably survive.\" \n\nPissed off, and worried by his certainty that no one was near, I bashed him with my stick again. Unfortunately for him, his face was tilted up to look at me, and so I got him square in the nose. He swore again as blood poured down his face, and I heard more angry grumbles from below. I wasn't sure I could stomach purposefully hitting him in the face anymore, so I switched to attacking his hands, hoping if I harried him enough he'd give up. I reached down, swatting at his hands, the rough broken end of the stick scratching and cutting his exposed skin, and he swore some more. \n\n\"What, did you really expect me to just give up? You're not that smooth a talker, friend.\" \n\nI continued to jab at his hands, and at one point managed to snag the rope, dropping him a sudden couple of feet before he regained his grip. Stubbornly trying again, he climbed back into reach. Seeing that the superficial injuries I was able to inflict on his hands weren't enough, I switched back to attacking his head. He was smarter this time and didn't look up, but I got a good couple of smacks in that must have left him reeling. \n\nJust then I heard shouting, and looked down to see the men below pointing. They all started grabbing for weapons, when finally I saw movement through the copse of trees. I was blinded by sunlight glinting off a shield, heard a familiar battle cry, and suddenly Alistair was charging at the group of men. Aedan might have tried to talk them down, but Alistair got there first. He rammed into the front line, shield first, literally bashing a couple of men across the clearing to crumple on the ground. They didn't get up. The rest of my friends entered the fray, and it took mere seconds before all of my would-be attackers threw down their weapons begging for mercy. \n\nThe man halfway up the tree watched in dismay at this turn of events, but was distracted suddenly by a large, black bird diving at his face. With his hands occupied, Morrigan got in a couple of good pecks as he screamed. Losing his ability to reason entirely, he finally let go of the rope to protect his face. I shrieked as he fell, looking away before he hit the ground. The squishy sounding thud as he landed was something I thought would stay with me for a long time. Trying not to cry, I clung to the tree and scrunched my eyes shut. Morrigan landed nearby, chirping at me curiously. \n\n\"Sierra? Are you okay?\" Aedan called up from below. \n\n\"Uh, yeah. I suppose I am. I think I'm probably stuck up here, though.\" \n\nAedan's voice sounded vaguely amused. \"Andraste's Ass, girl, what are you wearing? And why in the Maker's name are you in a tree?\" \n\nI sighed. \"Look. If you could all just turn away, and perhaps Morrigan could bring me up a length of rope? I'll climb down and tell you everything.\" \n\nLooking down, I saw most of my friends looking up at me with concern, with the exception of Alistair who had his back to me. His neck was purple, and I guessed his face would be too; I wondered how much he'd seen before he looked away, and then I was blushing more too. \n\n\"Uh...the rope is back in the cart. Hang on, let's see if these louts have got any they'd like to donate as a sign of good faith.\" \n\nThere was some cursing, and Alistair punched someone, but shortly another nice long bit of rope was found. Aedan shrugged off his cloak to leave on the ground at the foot of the tree, and then they herded the captives away from the tree and across the clearing, forcing them to look away at the point of a blade. Satisfied that I wasn't going to be spied upon, I asked Morrigan politely to bring me up the rope, and she flew down, grabbed one end in her claws, and dropped it into my waiting hand. I quickly tied it around myself, improvising a rough harness, then looped it over a couple of sturdy branches. Grabbing the other end, I slowly belayed myself down the bare section of tree trunk, then climbed down the rest of the way once I reached branches again. \n\nResolutely avoiding looking at the broken body that had fallen from the tree, I wrapped Aedan's cloak around myself and then called to the others. Morrigan changed shape, and stood beside me; I pulled her into a fierce hug. Thanking her profusely, I blinked away the tears that threatened to spill. Aedan, Alistair, Wynne, and Leliana walked up, leaving Sten guarding the captives. I wanted to hug each of them, but was mortified at my state of undress and so I refrained. \n\nAedan quirked an eyebrow at me, glancing at where his cloak covered my near-nakedness. \n\n\"Yeah, yeah. I will explain. At home...well, I've told you they're keeping my body in a building where the doc...healers can look after it? This is what they make people wear in those places, so that the clothing isn't in the way if they need to heal something, and so they don't ruin anyone's clothes by getting blood or whatever on them.\" ",
        "\"So why have you never worn it here before?\" \n\n\"Well, I bring over whatever I'm wearing when I pass out. Usually I have time to get changed into clothes, but I was gone such a short time this time that I didn't.\" I left out about the problems they were having with me randomly bleeding and such. They already thought I was feeble, I didn't want to enhance that opinion. \n\n\"That still doesn't explain what you were doing in that tree.\" \n\n\"Well, I popped in way over there,\" I pointed in the direction I'd come, \"and I had no idea where in Thedas I was. I hoped I'd be near you all but couldn't be sure, and didn't know which way to go. So I climbed the tree to try to get a look around, and that's when they found me. And then, with a bunch of would-be rapists on the ground, I figured I was safer up there. I can't tell you how glad I am that Morrigan found me though! Even if I'd been able to keep them away, I wouldn't have been able to get out of that tree.\" \n\n\"Clever trick, by the way, destroying the branches.\" \n\n\"I decided stranded but alive was better than raped and murdered on the ground. Now...where are my clothes?\" \n\n\"On the cart. Back on the road. We will have to walk there, sorry. When Morrigan came to get us, we didn't exactly think we'd find you naked!\" \n\n\"Oh, dammit, now I don't have any boots either.\" \n\nAedan took my hand and let me over to the captives. \"Shoes off, all of you.\" \n\nHe grinned at me and I laughed, having some idea what he was about. Nine men stripped their footwear off. They were all passed over to me, and I picked through, finding one sturdy pair of boots close enough to my size for now. Aedan gathered the rest of the boots into a pile, and then turned to Morrigan. \"If you would, my lady?\" \n\nThe fireball she threw could have lit the night sky, had it been dark out. Which was the point - it scared the pants off the nine captives standing there. \n\n\"We don't have time to deal with you, nor the inclination. My only recourse to you trying to rape Lady Sierra would be to execute you, but the lady has a soft heart and has chosen to spare you. You all owe her your lives. Instead, you will be left without weapons or shoes, to find your own way back home. And if I ever hear of you all resuming banditry or trying to rape someone else, next time I'll ask my friend here to incinerate you with the fireball instead of your boots. Is that clear?\" \n\nHe had them all lie face down in the dirt, telling them to count to a hundred, slowly, before standing up. He made sure they saw Morrigan change shape again so they knew they could be watched, and then we all walked away. I carried the boots, not wanting to put my feet in them without socks, and was again carefully picking my way across the fields. Alistair put up with that for all of ten minutes before taking off his own cloak, wrapping it around me like a blanket, and scooping me up again. I shrieked. \n\n\"Put me down!\" \n\n\"And let you hurt your feet? No.\" \n\n\"I'm quite capable of walking barefoot, thanks.\" \n\n\"If we feel like waiting all day, I'm sure you are.\" \n\n\"Alistair, so help me, put me down right now!\" \n\n\"Would you rather I let Sten carry you over his shoulder? Because I will, Sierra. Don't tempt me.\" \n\n\"Shut up. Bastard.\" \n\nAedan piped up. \"At least you finally used the word correctly.\" \n\nI sulked, completely aggravated. If I'd had something to throw, I would have thrown it at Aedan. Instead, I settled down, refusing to look at either of the men, secretly enjoying feeling safe in Alistair's arms. Maybe being feeble has an upside, because it's the closest I'm going to come to...inappropriate, Sierra! \n\nWe made it back to the road, Alistair carrying me for an hour or so. He seemed unbothered by it, not even rubbing his arms as he put me down, and his pace had increased, if anything, while carrying me. Ridiculous. I swear he's made of harder stone than Shale. \n\nChapter Twenty-Four: My Favourite Assassin \n\nUpon reaching Bodahn, I quickly changed into my armour, and once I put on socks, slipped my feet into the boots we had ...liberated. Then, as usual, we walked. Everyone had apparently explained to Shale who I was, and she seemed completely disinterested. She wasn't much for fast running, so she'd stayed with Bodahn when the rest came to my rescue. She barely acknowledged me once we'd returned, and it pissed me off - I thought she'd be at least curious, and I seemed to be taking it personally for some reason. Resolving to try to befriend her one more time, I decided to walk with her, whether she wished it or not, and tell her about Caridin. \n\nI stepped in beside her, and we walked quietly for a few minutes. I tried to figure out what to say, but was having trouble. I decided to just jump in. \n\n\"Shale?\" \n\n\"Does the feeble human want something from me? Perhaps it wishes a ride?\" \n\n\"I would never! That wasn't my idea. I would never expect you to give me a ride, Shale.\" \n\n\"It does not seem to object when the whiny Grey Warden gives it a ride.\" I had to think about that for a moment, and choked out an embarrassed laugh at the unintended dirty mental image she conjured. \n\n\"Al...Alistair? That's, uh...that wasn't my idea either. He offered. It's different if someone offers.\" \n\n\"So you would not ask? But you would accept if I offered?\" \n\n\"Only if there was a reason. Like when we needed to keep moving and I wasn't able. Or when I had no shoes.\" \n\n\"I see. Perhaps it should try to be less feeble, if it prefers not to be carried?\" \n\n\"I'm trying, believe me. I just was never trained like all of them were. Before I came here the most exercise I ever got was running away and hiding from bullies. And foster-parents. And even that was years ago. I'm getting better - when I first came and had to walk, I was exhausted after a few miles.\" \n\n\"Does it expect a medal for that?\" \n\n\"...No. Um, can I talk to you about something else?\" \n\n\"Must it?\" \n\n\"Okay, listen. You're trying to be unpleasant, and I'm trying not to care. I'm just going to come out and tell you something anyway, and then I won't bother you anymore. I just thought you might want to know where you came from. I know you don't remember much before being in Honnleath.\" \n\n\"It claims to know my past?\" \n\n\"Not all of it, no. But pieces. You don't even know how golems are made. Do you want to?\" \n\n\"I am listening.\" \n\n\"Golems were made by the dwarf Paragon named Caridin. Several hundred years ago, in the Deep Roads, in a place called Bownammar. They...were made from dwarves. Volunteers, at first, and then conscripts, who Caridin was able to turn into golems using the Anvil of the Void. You were one of the volunteers.\" \n\nShale scoffed. \"It must have been misinformed.\" \n\n\"No, Shale. I've seen it. Been there when you spoke to Caridin. Seen your name on the monument. You were once a dwarf. A woman. Shayle, of House Cadash.\" \n\n\"If it is going to persist in these sick fantasies, it should at least try to come up with something believable. I suppose it believes that if it knows all these facts, it becomes more important? Perhaps it thinks this will compensate for its feebleness?\" \n\n\"You know what? Fine. Just fine. I suppose it was inevitable that someone didn't believe me. But you know what? I didn't ask to be here. I don't want to be important. I'm trying to make the best out of a ridiculous situation, and if you won't do the same, then sod off.\" \n\nI was vaguely proud of myself for using Fereldan curse words, and at the same time completely furious with Shale. I supposed I should have expected that I wouldn't get immediate acceptance from everyone, but Shale was never the one I had worried about, given the knowledge I could provide her with. It never occurred to me that she'd just assume I was making it up. I decided to ignore her from then on, and so I skipped ahead, walking next to Leliana for the rest of the day. I taught her some songs as we walked, love songs from my teenage years, mostly. I was still self-conscious about my voice, but she was never anything but encouraging, and finally convinced me. She was enchanted by Vonda Shepard's simple ballad, 'I Know Him By Heart'. I listened to her sing it sweetly over the campfire later, wishing that someday I could see a duet with her and Vonda. That would be awesome. I couldn't help blushing, remembering listening to that song and thinking about Alistair while playing the game. \n\nI resumed my templar practice with Alistair that night. I was getting better at focusing faster, and so he started trying to distract me. He would throw small rocks, make loud noises, or bump me. The first few times he did it I was completely startled, but came to expect it and managed to keep my concentration better. I went to my bedroll, in the tent I shared with Leliana, self-satisfied. And exhausted, not that I'd admit that out loud - at least where Shale could hear me. \n\nWe walked for two more days uneventfully while I taught Leliana more Vonda Shepard songs, finally figuring that we were roughly a week from Haven - four more days on the highway, then three more, assuming the roads were okay. On the third day after my dramatic re-entry, we finally found the ambush I'd been waiting for. As we wandered along the road, a hysterical woman ran up from a side path begging for aid, and then ran off again. We all exchanged glances, and I nodded. Alistair, Shale, and Sten continued walking forward on the road, weapons at the ready. Aedan and Leliana faded into the undergrowth and disappeared, and Morrigan shifted into spider form to approach through the woods as well. Wynne and I followed, a few dozen steps behind our warriors, hoping that not seeing Aedan immediately would delay the tree getting dropped onto our escape route. \n\nAs predicted, the warriors triggered the fight, but what the ambushers did not count on was Leliana putting an arrow into the neck of the mage, and Aedan sneaking up on a couple of the crossbowmen and putting them down before they even got off a shot. Morrigan got one of the other crossbowmen, Alistair bashed Zevran in the face with his shield, and Shale and Sten took out the other fighters around Zevran. Before I could even blink, the elf was unconscious, his 'friends' dead, and the road remained unblocked. God I love foresight. \n\nAedan quickly tied Zevran up, and everyone else looted corpses. I stayed well back from any blood or gore, concentrating on not throwing up. The battle hadn't been as loud as I expected, but the scent of blood was making me nauseous, my heart was pounding, and my knees felt like they might give out. I wondered if I would ever get over my aversion to violence against humans. I sort-of hoped not. Seeing me looking pale, Aedan herded me away from the corpses and then had Zevran dragged back over to the road while we all waited for him to wake. \n\nI stared at the elf curiously. Like Alistair, he was far better looking in person than in the game, even with a swelling cheek and what looked to be the start of an impressive black eye. In the game I'd tried the romance options with Zevran, and knew he was sweet at heart once you got under all of the bluster, but really there was no contest for me. Given the choice between the often crude Antivan elf and the sweet, self-deprecating templar, the templar won every time. Besides, my type had always been tall men. I was guessing, but by appearances, Zevran and I were the same height. I might even be taller than him. I kept forgetting how little elves were in this universe! I did hope Zevran and I could be friends, however. He was hilarious. \n\nHe finally woke up. I stayed out of the conversation as he defended, rather calmly, why he felt Aedan shouldn't execute him on the spot. I nearly laughed out loud when he offered his services for massage and bed-warming. I had seriously thought the game-makers must have been exaggerating. At the end of the conversation, Aedan was convinced, I could tell, but Alistair definitely was not. He shot me a piercing look, which I interpreted to mean 'are you serious?' I nodded firmly, and he finally shrugged and spoke. \n\n\"You are lucky, elf. I myself am not so forgiving, but our lady has decreed that you shall live. I strongly encourage you to thank the Maker that she is here, otherwise you would be little more than a stain on this lovely green grass.\" \n\nAedan glanced at me again to see me hiding my grin at Alistair's intimidation attempt before offering Zevran the four daggers he'd confiscated. It was useless anyway; knowing Zev, he had six more hidden somewhere Aedan didn't find them. Wynne offered to heal his face, which he accepted with grace, and only a mild comment on her kindness. I half-expected him to start spewing prose about her magical bosom on the spot. \n\nAedan offered him a hand to help him up, and just like that we had an assassin on our side. Go team! I wondered if Alistair would ever believe that he was actually a good guy. Watching him glower, I doubted it. Everyone else seemed only slightly uneasy, except for Leliana who, as always, approved of giving someone a second chance. She really was that sweet. I couldn't help but be impressed. When I played the game, I made the decisions about things like that pragmatically - more help was always better, and I doubted BioWare would offer me a companion who would murder me in my sleep. In real life the stakes were a little different, I had to admit. I thanked whoever - God, the Maker - had given me my unusual foresight. Again. \n\nWith my assurances, everyone seemed to accept Zevran's change of allegiance reasonably well, with the obvious exception of Alistair. The templar watched the assassin uneasily, muttering about not allowing him near the food, and how he wasn't going to be sitting watch alone, ever. It didn't surprise me, but it was kind of amusing. \n\nWe followed the road back to the wagon, and continued on towards Haven. I spent my time listening with amusement as Shale aggravated 'the elder mage', 'the sister', and 'the whiny Warden' in turn, thankful it wasn't just me she rubbed the wrong way. She and Sten still got along famously. I think she almost had him convinced we should be actively slaying every bird we came across. I kept hoping Morrigan would poop on her. \n\nAedan spent most of the day with Zevran, explaining where we were going and what our mission was. I could see Zev's surprise that Aedan would tell him so much, and wondered if I should interfere before he decided not to respect our fearless leader. Instead I just wandered closer, hoping my presence would trigger a discussion about why Aedan trusted him. I was apprehensive but pleased when Zevran drew me into their conversation. \n\n\"So, my Lady, I have yet to thank you for the gift of my life.\" Zevran bowed slightly, looking up at me with his eyebrows raised, in what I assume he thought of as an attractive pose. I decided to jump right in. \n\n\"Given why you chose to bid for this contract, Zev, I am surprised that you would thank me for something you were trying to throw away.\" His eyebrows rose higher, and I had to fight to keep a straight face. I couldn't look at Aedan or I knew I'd laugh. \n\n\"I...you have me at a disadvantage, my lady. I don't know of what you speak.\" \n\n\"Oh, Zevran, I know all your secrets, 'amico mio'. Do not play coy with me. You bid on a contract that no other would touch, because you wished to die. Do you want me to tell everyone why? About your last contract with the Crows?\" \n\nZevran stared at me, mouth open, his face paler than I would have believed possible. Apparently in Ferelden all natural blonds aren't pasty. I still don't understand that. Maybe it's an elf thing? I allowed myself a smirk, which appeared to unnerve him further. \n\n\"I would rather you didn't, my lady.\" The humble tone was so odd for the Antivan. \"I suppose, in answer to your question, all I can say is that when my death was upon me, I discovered that perhaps I enjoy my life more than I might have expected.\" \n\nI nodded. \"Good. Then all you need to do is keep in mind that your continued enjoyment is dependent on keeping these people,\" I gestured to our little group, \"alive. Because we both know that this group is the only one who can keep you out of the Crows' hands. As you will discover when we end up in Denerim and run into your friend Taliesen. 'Capiche'?\" \n\nI didn't wait for his reply before stalking off to talk to Leliana. I knew Aedan would be able to capitalise on what I'd started, and keep Zevran just off balance enough to gain the proper respect required. Aedan followed me for a moment, leaning in to whisper before returning to Zev's side. \n\n\"You're sleeping in my tent from now on, sister dear.\" I laughed and agreed. \n\nOn joining Leliana, she started the conversation. \n\n\"So...Zevran.\" \n\n\"Hey Leli. Yes, Zevran. Ask away, I know you're dying to.\" \n\n\"He's rather...different.\" I was expecting a question on my intentions with him, like she'd asked me about Duncan and Aedan. \n\n\"Yep. But good with his hands.\" I snickered at her shocked expression, and pulled out my own dagger to demonstrate. \"With knives, Leli. You're so easy!\" I howled, and her laughter pealed out too. \n\n\"The reason I wanted to talk to you, though was...would you mind, terribly much, sharing a tent with Wynne for a while?\" \n\n\"You don't wish to share with me anymore?\" I could see a pout forming. I knew her too well to believe that for a minute. \n\n\"Nice try, drama queen. It's got nothing to do with that. It's just that we don't have an extra tent for Zevran. And I really don't think anyone should be sharing with him, shameless flirt that he is. But if you shared with Wynne, I could bunk with Aedan, and Wynne's tent could become Zevran's. Just until we can buy another tent.\" \n\nI could see her considering other arrangements and discarding them. I knew in this case I was right. I wasn't a business consultant for nothing - I could see the pairings, and this was the only one that would work, even without Aedan's demand. Finally she nodded. \"I'll go talk to Wynne.\" \n\nAt camp that night, Alistair took over setting up the tents, and I asked Aedan if he would spend a bit of time sparring with me before dinner. He agreed, and we both grabbed ourselves a couple of stout sticks to use as daggers. We circled each other, and I was able to keep away from his initial attacks, but it was obvious my counters were clumsy. I reminded myself to try to loosen up, grateful that at least I didn't need to dedicate as much of my attention to the ground beneath my feet as I used to. I managed to surprise him with a throw once, but he changed his tactics and I could never get a grip on him after that. \n\nSeveral of our companions stepped up, watching, and between the laughing and the catcalls, tried to offer me advice as Aedan handed me my ass, repetitively. I chuckled even as I lost the rounds, over and over. \n\n\"Yes, Leli. I am trying to move faster, shouting that won't actually make it more likely to happen. Thank you Alistair, I know I should have ducked. You all are not actually helping, you know that right?\" By the time supper was ready, I was panting, sweaty, and thoroughly humiliated. No matter how much I learned about fighting, it wasn't enough. I ate, rushed off to clean up in the little stream nearby, and then joined Alistair for my usual templar training. This time he surprised me - he allowed me to get my focus, but instead of trying to distract me himself, he had obviously arranged for others to do it. Shale stamped the ground, an earthquake rattling under me. Sten let out an obnoxiously loud battle roar in Qunari. Leliana insisted on braiding my hair. I found myself wondering who would be bothering me next, rather than concentrating, and ended up humiliated yet again. \n\nFinally admitting defeat, I raised my hands. \"I cry uncle.\" ",
        "Alistair looked at me, puzzled. \"Uncle?\" \n\nI laughed. \"A saying from home. If you were losing a game, or say got pinned while wrestling, the other person would make you 'cry uncle' before accepting your surrender.\" \n\n\"Is that like 'not the face'?\" I chortled, never expecting to hear those words from Alistair's lips. \n\n\"Not exactly. But, uh, yeah. I surrender. I'm far too useless this evening for any more training. Can we try again tomorrow?\" \n\n\"Of course.\" His smile turned into a frown mixed with a glower, and I suddenly knew who had approached me from behind while we talked. I tried to give him a reassuring smile, and was rewarded with a skeptical snort. Zevran hovered, so I gave Alistair a 'be nice' look, and turned my attention to the assassin standing beside me. \n\n\"May we talk?\" I nodded at Alistair, who grimaced again and slowly walked away. \n\n\"What can I do for you, Zevran?\" \n\n\"Our Grey Warden has explained to me how you know so much about me. This...performance? ...of yours. I find myself intrigued. He tells me that you knew about the ambush I set up. And it would seem you know some things about me, as well.\" \n\nI nodded. \"In the performance...eventually, you befriended Aedan and told him the truth.\" \n\nZevran scoffed. \"I do not have friends.\" \n\nI smiled softly. \"Never? What about Taliesen? Rinna? You cannot claim never to have cared about anyone. Your life has been terrible, Zev, and not even those few you've cared about have been really good friends, but...you are capable of respect. Trust. Love, even. I know it, even if you don't. You wear sex and assassination as a mask, trying to protect what's inside. It won't be easy for you to believe, on day one, but you will come to care for these people, and they for you. And you will learn who you really are, not who the Crows forced you to be.\" \n\nZevran stared at me for a few minutes, looking truly disconcerted. That was an expression I'm sure no one else had ever seen on that handsome face. In the game, he was unruffle-able. He was all calm pragmatism and mercenary decision-making. Messing with him was going to be kind of fun, I decided, although I thought I might wait until he was a little bit more comfortable. I was fairly certain his sex jokes weren't going to exasperate me the way they did everyone else - they were actually pretty tame in my world, even more so after being raised in foster care. I wondered how he would take to someone who could give as well as she got. \n\nI took pity on him, finally. \"It's okay, Zev. You don't have to believe me right now. Just carry on and let things happen as they will. But I know a little bit about being raised without the ability to trust. If you need someone to talk to, I'm here.\" I stood up, patted him on the shoulder, and walked away to find Aedan's tent. I pointed to Wynne's old one, letting Zevran know that he could sleep there, and then found my goal. I tried to ignore the looks I got from Wynne, Alistair, and Zevran as I crawled in to finally go to sleep."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-23-24"
}