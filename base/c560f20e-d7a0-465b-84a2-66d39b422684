{
    "title": "The Next Door Wolf Ch. 07",
    "pages": [
        "Candles where lit everywhere in the basement giving the place a serene look. Almost could have been romantic especially being that in the center of the room Foxy was sitting cross-legged and naked. Unfortunately for me, I knew she didn't sit there for romance. A pit rose in my stomach making me feel the need to squirm. See, she was about to do a miracle and for a Kitsune that meant sacrificing a tail. I didn't know what the details where, but I knew that before the attack earlier in the day that Foxy had five tails. Now she had two, three used up to keep herself alive. The fourth sacrificed so that I could talk to my mate Dana through our telepathic link. \n\nMy name is Vance. An eighteen year-old boy who's hot neighbor revealed herself as a werewolf. She had also decided to turn me so much better. Even kept a bunch of secrets that came out when the Alpha werewolf of another pack found her. Now it was just me, Foxy and Aysel together. Dana, Remi and Kristen were in the clutches of my rival alpha. Though her probably didn't see me as an alpha. With a much bigger pack, it was probably gonna be a short contest for the guy to tear me limb from limb. Abandoning my mate meant having her to a worse than death. \n\nFoxy's tails twitched and I looked at them. Great white tails the two of them. Bushy and tall. The fur looked soft and I wanted to embrace one. \n\n\"How long is this going to take?\" I asked. \n\nThe Kitsune said nothing as she sat. I could barely see her chest move or hear her breath as she sat in her close-eyed trance. It was unnerving me. Especially because my impatience coupled with the audible footfalls of Aysel above as she paced. \n\nI sighed. \n\n\"Hush pup,\" Foxy said, the first words after she explained the price she would have to pay for me. For the pack. And man the guilt was heavy. Too afraid to move now in fear of continual disturbance, I stood there heart pounding in my ears as I had little mythological knowledge of a Kitsune. What I did know is that a Kitsune's power directly related to the number of tails. Reduced to one, what would Foxy be? \n\n\"I'm ready for you.\"\n\nI looked over to Foxy. She was now staring at me, her eyes glowing an ethereal blue. \n\n\"What should I do?\" I asked.\n\n\"Come here,\" she said with a sigh. There was an annoyance in it and I wanted to yell at her about the lack of information. Instead, I did as she bid. \n\nI walked over and sat down in front of her. Even though she hadn't said anything about sitting, I assumed we would have sit at eye level for whatever needed to happen. \n\n\"Give me your hands,\"she said with seriousness written all over her face. \n\nI present them to her and she grasped them. \n\n\"What's going to happen?\" I asked. \n\n\"A miracle.\"\n\nThe candles all went out at the same time, plunging the room into darkness for a second. Foxy's body became covered in an ethereal blue and that blue light began to grow brighter as seconds passed. \n\n\"By the old rules, I offer up for sacrifice, my tail to fulfill this charges wish,\" she said. \"Grant to him, the ability to use telepathy to its fullest to talk to his mate.\"\n\nAnd like that the spell went off. \n\nI watched as her glow quickly dimmed. That was my first sign that the spell was working. The second is that I watched as one of her tails just blinked out of existence. The third was the physical change that washed over Foxy. \n\nFoxy was a woman who flowed with curves and oozing a sexiness that could almost rival my mate, Dana. Now, I watched as he body shrank and curves disappeared. She went from looking like a woman to a nubile girl right out of high school. Her features regressed in age and where she once oozed confidence, and I could tell how afraid she was now. \n\nShe threw my hands away and scurried away from me into the shadows. I reached out but words stuck in my mouth. I sat back in defeat. \n\nThen something else gathered my attention. It was a prayer coupled with an apology. Even though I knew the speed was being used to help the telepathic link between me and Dana, it took me a second to realize that it was Dana. \n\n\"Dana?\"\n\n\"Vance?\" She said. I could hear the hurt in her voice.\n\n\"Yeah, it's me.\"\n\nWhat else was I going to say?\n\n\"For sure?\"\n\n\"You have this mole on your right butt cheek.\"\n\nIt was like I could feel the blush on her cheeks. Whatever the spell had done, it had really pushed this link to whatever it could fully be. \n\n\"How?\"\n\n\"Foxy performed a miracle for me so I can find you guys.\"\n\n\"Vance, don't.\"\n\nEven if her request was grantable, it fell on deaf ears. I had already moved out the basement and through Dana's house. There was an instinct I couldn't hold back. Something driving me now to claim back what was mine, and also punish the rival alpha. An alpha who possessed the audacity to come into my territory to take my pack. A growl resonated in my throat, but standing on the front porch, I was surprised that an audience stood before us. Standing before more were four wolves. All of them looked surprised to see me. \n\n\"Must be the ones hunting Aysel.\"\n\nWe stood there for a second. Enough for me to sense that Myself had stepped up behind me. She was in her wolf form, something I just knew by her aura. \n\n\"Vance, you can't win,\" Dana said.\n\n\"You should have more faith,\" I said in the link. Outside of that though, I roared at the group of wolves. \n\nThey growled in response.\n\nLike that, the switch flipped. Never thought I would be dumb enough to run headlong into a group of werewolves in human form. The four of them attacked me all at once. It became a blur to me all the dodging and jumping. I am sure I look like some sort of madman but hey, when my change started I didn't even register it. I just know blood filled the air and I knew it wasn't mine. What was four soon became three and then two. I knew Myself had taken one-off me, but I had disemboweled the other. It was on the lawn and during one of my dodges from another attack, I land near it. It may have lashed out, but soon I was holding its head in my hands and flinging the body part at one of the others. \n\nThere was some sort of scream of horror from the one I threw the head out, but it was enough of a distraction for me to grab the other. In a flash, that one lay lifeless on the ground. Somehow it too had lost its head in the scramble. For good measure, I threw it at my other opponent. Again it screamed. \n\nApparently, it had never found itself in a situation where odd wasn't in its favor. I overwhelmed it and killing it proved easy. Damn thing tried to struggle and get away, but I proved to fast. Locked between talon and jaw, removing its head Did I mention the blood? Just like a shower of it. Sure, I had smelt it in the air, but now I noticed that blood covered me head to toe. And it was making me horny. Quickly I tore off whatever ruined clothes I had left. \n\nSniffing the air, I barely managed to pick up the smell of Aysel. I followed it into the woods across from my house. There, it was only a matter of time before I found her in her human form. She was licking blood off her hands when I came out from the brush. \n\nThere was something said between us. Not something I understood, but something that told her that we were gonna rut. Yeah, rut. Sounds like the better word. She immediately turned around and presented herself to me. \n\nI looked at her rump. For a woman, Aysel was surprisingly gorgeous. Of course, she wasn't as hot as Dana, but the pink slit called to me. And like a month to a flame, I moved towards her. \n\n\"Whoa there tiger,\" Aysel said holding a hand back at me. \"You're gonna have to lube that thing up before you ram it home.\"\n\nI growled in impatience, but agreement. I reached down and found that I was already dripping copious amounts of precum. Rubbing that around for a second, I decided in a second that forget her opinion of the situation. It was mine to take and so I did. \n\nAysel screamed with my sudden entry. To my astonishment, it wasn't out of pain, but of pleasure. I hadn't even begun moving before she was rocking herself off my cock. With a growl of pleasure, I grasped her hips. She may have made me feel good, but I had a need, a blood lust as it were to satisfy. \n\nBeing a werewolf meant having sex wasn't too different from being human. The biggest difference I would have to say is that there existed that bestial surge of power. Being a werewolf also meant that for whatever reason, the physical feelings of sex were exponentially intensified. For example, in my human form, there felt like a wight existed on my body like a condom. In my werewolf form that weight didn't exist.\n\nFeel like my cock was sliding into velvety heaven bare. Velvety and tight as it massages my probing my cock. I sat there for a moment buried deep in her, relishing the feeling. \n\n\"Aren't you going to continue?\" Aysel said with a growl.\n\nHer words broke the serenity I had. Not that I could complain. Who wants to just be joined in sex. \n\n\"Well,\" I began. \"You asked for it.\" \n\nI grunted as I slammed myself into her. She screamed out over and over with a barrage of different words. I didn't really hear what she was saying often, but man the verbiage from her would have put a porn star in a hard-core film to shame. Speaking of that, it gave me an idea. \n\nThe strength of a werewolf isn't apparently matched very well. Sure earlier at the library, I had many books, but some info I read stated as fact that there were few rivals. As such, I put that strength to good use by doing something I had always fantasized about. \n\nWith much more exertion than I anticipated, I lifted Aysel up until I was standing. I held her legs up so that her feet were up near my head and had her completely impaled on my cock. Like that, I began thrusting into her violently. \n\n\"Jesus Christ Vance, by the moon,\" she moaned out while her body bucked against mine. At least I could hear her better now, and she was much tight than before. Might have something to do with how deep I was, but jeez did it feel like I was doing nothing wrong for myself. \n\nSo I fucked her like that. Bouncing her up and down and enjoying the workout. Eventually, I leaned up against a tree to help myself out and once there, I was able to thrust into her even harder, which was amazing for me is that I wanted to cum so badly. No matter what I was doing, nothing was getting me there. Whatever haze was clouding me handicapped my cock from what felt like would be a glorious end. After a few minutes, I began to tire from the exertion. \n\n\"Slide it up my ass,\" Aysel said suddenly. \n\nNot being one to be told twice, I lifted her up. She helped guide me in, which with a sloppy wolf cock, was especially harder to do that it should have been. Her swearing in frustration and my shaking in impatience clued me into that fact. So when I finally slid past that proverbial barrier of muscles, we both sighed in relief.Didn't take either of long to begin moaning again. Hers as screams, mine as growls. \n\nThe tightness of her ass was just what I needed. As I leveraged myself from the tree and used her legs as handlebars, I drove myself into a fury. \n\nMan the sun starting setting too. I could tell because, for some odd reason, it felt darker. Not that it mattered, but to me, it just meant that we had rutted nonstop for a while now. How could I be doing this while I needed to rescue my pack? Guilt washed over me and I was about to pull Aysel off when suddenly I felt her grab my chest hair. \n\n\"Dammit cum you bastard,\" she said with a growl throwing her head back. I could see her ears pointed and that her teeth were sharp. Pain laced through me as she yanked out my hair and that's what it took to send me over the edge that I had been desperately searching for. With a final grunt, I filled her up. So much so that I collapsed to my knees as my mind went completely blank. Sure my tongue was hanging out with a delighted look. \n\nAysel slid off my and landed roughly on the ground. I looked at both her gaping cunt and ass and smiled to myself in delightful triumph. Shoot, looking at her anus wink open and shut as it leaked cum out was a sight to behold. \n\n\"I thought you were coming to save us,\" Dana said suddenly interrupting my thoughts. Fear went through me as I realized then exactly what I had done. \n\n\"Relax pup,\" she said tenderly. \"I'm not mad, but man do you have me worked up now.\"\n\n\"Sorry,\" I said. \"I don't know what came over me.\"\n\n\"Bloodlust. It happens to the best of us and with your inexperience of control, you succumbed rather well to it.\"\n\n\"Her?\"\n\n\"Well, considering you are the alpha, women will tend to open up to you.\"\n\n\"Oh,\" I said. I started willing myself to transform back. Naked in the night, I left Myself on the ground sure that now she would be safe. \n\n\"You're just scared to wake her.\"\n\nThat was true too. Looking at the feral woman, she was a mess but soundly sleeping. I knew the red-head had a temper and waking her from a well-deserved peaceful nap didn't seem like a course of action I should take. \n\n\"I need to check on Foxy,\" I said with determination.\n\n\"Listening to you trying to be all responsible is turning me on, Vance.\"\n\n\"Hey now, aren't you a prisoner. Keep it up, I'm gonna think they have you strapped down for in some sort of pleasure dungeon.\"\n\nI laughed when I thought of the word fungeon. \n\n\"You're a dork,\" Dana said to me.\n\n\"Shouldn't you be more worried?\"\n\n\"Well, my hero is about to come save me, so my spirits are up.\"\n\nI began walking through the woods, which in human form was harder in the dark than I liked. I did make it back to a road eventually.\n\n\"So where are you?\" I asked. \n\n\"Know where the diner was?\" \n\nI replied yes and even told the street. \n\n\"If you get there and see going past it, the road you are on will eventually go to a small patch of woods. The pack resides in there in a small community that has a few cabins.\"\n\n\"How many wolves?\"\n\n\"Honestly I have no idea. You killed. Few I take it?\"\n\nI tried to do a mental count of how many I killed. I decided on nine. \n\n\"Around nine.\"\n\n\"No wonder he hasn't come around yet.\"\n\n\"What do you mean?\"\n\nAnd cue the history lesson. Dana told me how an Alpha's power derived directly from the not only the size of the pack but the strength of its members. Not only that, the mental fortitude of the pack leader was important as that meant how big a pack an alpha could handle. Most Alphas could manage around a dozen people without side effects. More than that, and often the alpha was weaker. Her last point was being that I had killed at least nine, that now, the alpha that had taken her was probably suffering from a major drop in power. \n\n\"That means I stand a chance?\" I asked.\n\n\"Vance, he would probably run.\"\n\nWell, score one for my ego. Too bad the flirting wouldn't win the war. \n\n\"So why wouldn't he just make new werewolves?\" I asked. That seemed like a direction I would go. \n\n\"He could but all new wolves like that, he might accidentally create another Alpha and then things would get hairy.\"\n\nI laughed. \n\n\"What's so funny?\" Dana asked. \n\n\"Nothing,\" I said, but she said hairy. I like puns.\n\nBy now I had reached the house and went back in. Foxy greeted me but I only recognized her by scent. The woman was no longer well a curvy stacked one. She had completely reverted back to a nubile body. I couldn't think of a reason she should still be naked, but her bushy single tail was whacking behind her. \n\n\"Damn,\" I said impressed with how youthful she looked. Could have passed now for a college student as before her looks had a more milfy quality. \n\n\"Silent,\" Foxy said. \n\n\"Sorry, you look great,\" I said. \n\n\"I'm weak now though.\"\n\n\"Can you get more tails?\"\n\n\"Not yet, but soon.\"\n\n\"Foxy,\" I said hesitating a bit. Even though we were standing in the main hallway, Foxy wasn't facing me. She had hung up one of the paintings of landscaped that I had seen before. It had a slash in it, but from my angle, the slash went through the river under orange-leaved trees so it wasn't really bad. Still, though, I wondered why she was reaching out to stroke over the uneven paint. I knew nothing about paintings or even art, but I knew the winter one stirred a longing in me for a freedom I never knew I wanted. But her, with a soft hand, caressed the torn canvas with light fingers.\n\n\"You miss something?\"\n\n\"I was born over two hundred years ago in a small village in the mountains of what is now Germany. My tribe of Kitsune were immigrants that had bred themselves into the local populace. The fall was something to behold, but once winter set in, everything became so beautiful under the blanket of snow.\"\n\n\"The picture reminds you of it?\"\n\n\"A bit. You can't imagine what you can forget over time.\" \n\n\"How long will it take to get more tails?\"\n\n\"I think it took me fifty years to get my second tail.\"\n\nAnd cue in the full brunt of the guilt once more. \n\n\"Is there anything I can do to help?\"\n\n\"Maybe,\" she said still not even looking at me. \"I know I joined your pack to get my next one.\"\n\nShe walked off disappearing into the house. I felt really bad. As such, I decided to go back home and prepare for my rescue attempt as a distraction from the pain I had caused. Closing Dana's front door with a sigh I walked back over to my home. \n\n\"Vance, you shouldn't worry,\" Dana said to me. \n\n\"Just feel bad.\"\n\n\"Don't, Foxy knew what she was doing and she has you now.\"\n\nI didn't answer but went inside my house. Up to my room, I got dressed, grabbed my wallet and my phone. Cue another problem as the phone began to ring. \n\n\"Hello?\"\n\n\"Vance, come over.\"\n\nFuck. It was Katie. My former babysitter and sexual teacher infected by yours truly Vance the Werewolf.\n\n\"You're home?\" I asked. She was breathing heavily almost like she was in the throes of being in pain. Fear went through me. \n\n\"Dana?\"\n\n\"You need to get her out of the house. If she is changing it'll be bad.\"\n\n\"Katie, why don't we meet somewhere instead.\"\n\nThere was silence for a moment. A deadening silence that made me worry that she had hung up the phone. Heck, I even checked mine to see if she had. \n\n\"Katie?\"\n\n\"Yeah, how about the community center in ten.\"\n\nI agreed, but as soon as the phone clicked a sense of guilt washed over me. \n\n\"Dana?\"\n\n\"You need to go Vance.\"\n\n\"But what about you guys?\" I asked. My concern genuine that if I waited, harm could come to the three of them. \n\n\"We will be fine,\" Dana said. \"But that young woman won't. If she changes fully without you there, the consequences will be disastrous.\"\n\n\"If you're harmed the consequences will be disastrous,\" I said in some sort of defiance. I truly wanted to blow off Katie to rescue Dana. Some sort of desperation to have her had overcome me. Plus the amount of guilt piling up on me about the sex with Aysel earlier and the delay. \n\n\"Vance, if she turns and kills people it will expose the pack.\"\n\nPack. That's all I needed to focus on the task at hand. I had to protect the pack. Getting redressed, I made my way through the house. \n\nAs I passed my mom's room, I stopped and listened. I heard her snoring and moved on to go downstairs. There, I wrote a note for her and left it on the counter. The last hurdle to pass for me involved working up the nerve to take the car without permission. \n\n\"I find it funny you worry about that,\" Dana said. \n\n\"Why?\" I replied. I had stopped originally to look at the keys on the kitchen counter. There they were though. My mother's car keys. With the faded grocery discount card hooked up on a ring where brass now showed through rubbed off silver. Some of the keys sported that same look, a testament to their age and use. The biggest feature on it was a cross, which looking at, it had never occurred me to ask about. It never dawned on me that my mother was remotely religious. ",
        "\"You fucked your neighbor and are pretty debaucherous towards others.\"\n\n\"Only after my neighbor gave me the ultimatum of fucking her or dying.\"\n\n\"What are you trying to say?\"\n\n\"Maybe you raped a boy,\" I chided with a smile on my face. \n\n\"Worth it,\" she replied. \"But no to rush you but you're gonna be late.\"\n\n\"Am I?\"\n\n\"Yes,\" Dana said.\n\nI smirked and headed out. The guilt is gone now, but the feeling of impending doom permeated the air. With a sigh, I left in the car and drove to the meeting place. \n\nKatie's car sat parked in a spot so I pulled up next to it. Getting out and looking into her car revealed that it was empty. With a sigh, I began to walk to the community center. \n\nWhen construction began on the first cold de sac, one of the first buildings completed had been the main office. For fun one day I had researched the area I lived in. Once construction completed and all the homes sold, that office found itself converted into a community center.\n\nThe building itself sported only a few rooms. One of which was a movie theater, another a gym, a kitchen and a lastly a dining room complete with rentable china. The whole thing tied together by manicured lawns and trimmed shrubs. Behind the building sat a wooden gazebo, a playground reminiscent of two castles, two tennis Cours, and a basketball court. All in all, a lot of money went into the center and boy it got used. A great meeting place for people meeting up. \n\nI walked around the building first to go look at the playground. On the swing of the place, I found Katie. Swinging back and forth, Katie looked asleep as her gaze was on the sheds of wooden turf. \n\n\"Katie?\" I called with concern in my voice. Her head shot up and I shuddered at how yellow her eyes were. \n\n\"What is happening to me?\" She said. Drool and tears fell from her face. Her face wasn't the pretty one that I had known all my life. The one where a smile broke easily out on. Now facial muscles looked contorted as the beginning of the transformation took place. \n\n\"You're changing,\" I said. \n\n\"Why did you do this to me?\"\n\nMan, that accusation hit home on how messed up the situation was for her. I'm not gonna lie, Katie hadn't ever looked worse before. Then again, I also felt little emotion with her accusation lodged at me. I may have gotten the offer to change, but I didn't do this to her on purpose. \n\n\"I didn't mean too,\" I said but my voice was low. \n\n\"Look at me,\" she yelled at me. My eyes returned to hers. \"Why?\"\n\n\"My neighbor turned me and I didn't know,\" I offered in my defense. \n\n\"You got laid and gave me the equivalent to an STD,\" she shouted at me. \n\n\"Calm,\" I replied. I can't explain the coldness that washed over me or even the look of surprise on her face when relaxed. \"The first time is painful but after that it's easy.\"\n\n\"Will I be okay?\"\n\n\"Yes.\"\n\nA sudden grace of pain laced across her face. \n\n\"It's been like this for a week,\" she said but her voice was deeper now. More feral in the way it sounded. It unnerved me a bit. \n\n\"Dana?\"\n\n\"Yeah?\"\n\n\"What do I do?\"\n\n\"Help her change?\"\n\n\"How?\" I asked her, but there was no reply. Getting my teeth, I studied Katie. Her features had begun reverting to being more human once more. \n\n\"Why Vance?\" Katie asked. She held her hands out to me. I reached out and pulled her up. I embraced her, my heart-felt with a tenderness I didn't understand. \n\n\"There isn't really a why. We were horny teens and well, it happened.\"\n\nHer body was warm and she smelt great. Bad time for stirring of the sexual kind. She pulled back from me and I looked down at her. The kiss couldn't have been cheesier happening than in a romance novel. Sheesh, it was tender and full of emotion. \n\nArms wrapped around my neck and I growled in appreciation. That growl made her break the kiss. \n\n\"That sounds so beastly,\" she said. \n\n\"Just wait, it gets worse,\" I said. I felt her shudder and that wasn't from the dropping temperature brought on by the sinking sun. \n\n\"It does?\"\n\n\"Yeah, you grow hair everywhere.\"\n\nKatie smiled. \n\n\"You're a dork?\"\n\n\"And you feel better,\" I said. Elation went through me about that. \n\n\"I don't know why, but just being in your presence made the pain go away,\" she said nuzzling against my chest. \"What's it like?\"\n\n\"Different, but worth it.\"\n\n\"How can I get through the first change?\"\n\nThe of idea sex popped into my head. At a time where my focus needs to be on rescue, the idea of sex brought heat to my cheeks. It's what Dana and Aysel had used to complete my transformation. \n\n\"I will help you through it,\" I said. I bet it sounded commanding and strong. \n\n\"It not with this is it?\" Katie grasped my cock in m pants. \n\n\"Easiest way I know,\" I replied with a grin. \n\nI know that it should have been a given that she accepted everything way to fast to me. At the moment, every fiber of my being told me to go ahead and get laid. Much to my surprise, ate unzipped my pants and pulled my dick out. \n\n\"Its kind of public,\" I said. \n\n\"Mmhmm,\" Katie replied. \n\n\"What are you doing?\" I asked. I felt he hands wandering around my cock. \n\n\"It's different,\" she said. \"Will mine be too?\"\n\n\"Your dick?\"\n\n\"No, my pussy?\"\n\n\"You'll get more breasts.\"\n\n\"Like bigger or more of them?\"\n\n\"Both,\" I replied with a smirk. She returned it.\n\nShe moaned suddenly taking my length down her throat. Katie had many talents besides sex, but I will say one thing, the woman practiced a lot on me. And I can't emphasize how much a lot meant. Katie would never admit it but she did show the signs of a girl who could be classified as a nymphomaniac. At least to me she did. I know she watched me a lot and boy did she take advantage. \n\nA long slurp brought me out of memory lane. I looked down at Katie who had a look of admiration on her face whilst the saliva dribbled from he lips. Heck, there was even a string that went from her mouth to my cock.\n\n\"Good?\" I asked.\n\n\"I need it,\" she said plainly. With a blink, her eyes were yellow again. She stood up and went over to the swing. Pants off she sat in and lifted her legs up. Man her pussy looked so hot and inviting. The night lights showed how wet she had become. My nose told me how sweet it smelled. \"Come get it Vance this pie is hot and ripe just for you.\"\n\nI smiled. The memories of her referring to her ninny parts as pie flooded into me. Then I jotted over to her and laughed as she lost her balance. She had fallen back and I reached through the chains and pulled her back up. She met me with a passionate kiss.\n\n\"You're gonna have to hold my legs,\" she said breaking the kiss. My eyes caught a glimpse of her hands as the held the chains of the swing. Each finger had lengthened and at the ends, tipped with black obsidian claws. Suddenly her legs were against my sides. \n\n\"Its gonna be rough,\" I said. \n\n\"Promise?\"\n\nI grasped her ankles and pulled her closer. \n\n\"Only if you guide me in.\"\n\nA mischievous grin spread across her face. Balance was an issue as she swung a bit, but eventually, she managed to guide me into her wanting snatch. \n\n\"Oh god, you are bigger,\" she exclaimed. \n\n\"And you tighter,\" I replied. \n\n\"What a perk,\" she commented. I went to move. \"Hold on, I'm still adjusting.\"\n\nI growled in frustration and her hand removed itself from my chest. The first slide in and out became a test for me. She moaned in either pain or pleasure, but instinct had taken over for me. Too much then did I test using the swing as leverage. First I just plowed her, en joying how she bounced back after each thrust. \n\n\"Damn Vance,\" she growled. Her voice was becoming more feral now. Heck, I enjoyed watching how her visibly sharp teeth ground together. The view of her lips being spread by my cock was nice too. \n\n\"You like?\" I asked. \n\n\"This has to be the kinkiest thing I have ever done,\" she said.\n\n\"Not that time in the tool shed while your parents did yard work?\"\n\n\"Oh that was a good time,\" she said with a moan. By now she had leaned back and all I saw of her body was her waist and pussy. A pussy that gurgled out her arousal in strings of beautiful ooze. \n\n\"And there was the time,\" I began but she cut me off. \n\n\"Shut up and fuck me, Vance,\" she said with a gruff growl. I heard her abs snap and fell before I saw them. She had sat up and I almost jumped back. Her face twisted into a grimace of pain and up her abdomen, rows of nipples had sprouted. The sudden shift in weight on the swing, well, swung her hard so that our bodies net with force. \n\n\"Damn,\" she grunted and gave me an idea. I stopped moving my hips and started to pull on the chains to the swing. The action caused me to use the real swing as a fulcrum to fuck her.\n\nMy arms burned with the effort, and eventually, I succumbed to throwing my hips into. No matter what though, her contorted face began bothering me and taking the joy out of the sex. \n\n\"I need you to turn over,\" I said. He grunted at me. \"Give me better leverage to hit it harder.\"\n\nThe excuse worked and she didn't say anything when we parted. Just a whimper while she turned around. As soon as that as presented itself, I slid myself back into her want. \n\nThe growl that responded from me in her heat did not last long on its own. She joined me but her growl went from a low hum into a full-on howl. Then a tail sprang out above her pale ass and her cheeks became covered in a chocolate fur. I watched as he ears grew long. A sick as it is, all the contorting of her body squeezed me into an explosive end. \n\nMy orgasm was long and powerful. Enough to bring about the start of my change. I gritted my teeth and resisted the call of the moon with all my might. The success of my attempt meant that I was violently kicked away. \n\n\"Hey,\" I said angrily and Katie whirled around in the glory of her wolf form. Jaws snapped closed near my face, but thankfully a certain swing kept her from wrapping those powerful jars around my face. \n\n\"Calm.\"\n\nI don't know why I said that exact word, but I know it had an immediate effect on Katie. The animal in her eyes receded the fierce yellow of her eyes softened to a lighter glow. \n\n\"You need to change back,\" I said. \n\nHer head tilted. A look of concentration furled her snout and then in a blink, her wolf began to fade away. The snout shrunk, fur melted off and bones cracked. Before I knew it, Katie the human lay before me in the swing. \n\n\"That was amazing,\" Katie said after catching her breath. \"I shouldn't have been worried at all.\"\n\n\"Nope,\" I replied before getting up. Not gonna lie, she scared me a bit with the snapping of those teeth. Could have been that she caught me off guard or the issue that I almost died with my dick out. That would have been a great thing for the cops to find of me. A headless corpse, but still has a dick. Poor Vance what did he get into before he died?\n\n\"So what now?\" Katie asked. \n\n\"We need to get you new clothes,\" I said. \n\nAnd we did need too. Ripped clothing clung to her in almost ribbons. Pert nipples showed and one breast lively displayed itself in its perky fashion. There were no pants anymore, the jeans ripped completely apart from the seams. Panties, which on her were always a thong if worn, hung by one leg and skewed on the hip. \n\n\"Kinda like the Hulk huh?\" She said looking at herself. \"I have more nipples.\"\n\n\"Yeah comes with being a she-wolf,\" I said while fixing my nudity. I turned to leave. \n\n\"What does this all mean Vance?\"\n\n\"It means,\" I said with some annoyance. \"That you are apart of my pack now.\"\n\n\"Okay. As long as the sex continues like it has.\"\n\nThe two of us left the community center together. We actually got into my car and I drove us back to home. While we were in the car, Katie moved around anxiously. I focused on the street lights burning bright as they fought the night back. \n\n\"What's wrong?\" I asked. \n\n\"I'm a werewolf now. What about school and my family?\"\n\n\"No problem. Just don't eat anyone without permission.\"\n\n\"I'm serious Vance,\" Katie said. \n\n\"So was I,\" I said, but I knew the depth of the question. I didn't have an answer. Heck, no answer existed now about what action needed to happen to get Dana and the rest of my pack back. Other than showing up and winging the answer. \"I honestly don't know Katie.\"\n\n\"Everything not figured out huh?\"\n\n\"Not my fault,\" I said. \"I was thrown into this mess by accident.\"\n\nKatie sighed. \n\n\"I'm gonna drop you off with Foxy and Aysel. I want you to help them clean up the house and relax until I get back.\"\n\nKatie said nothing, which to me meant that because of the authority I had in the pack as its leader, my word was the last one. I did look over and watched just briefly as she ran her hands over her stomach and chest.\n\n\"You okay?\"\n\n\"I have more nipples,\" she commented plainly. Then she looked over at me and smile. \"This is awesome.\"\n\nI smirked and looked back to the road. When we pulled up the drive to Dana's house, Foxy and Aysel were on the porch. \n\n\"Let's go,\" I said. \n\n\"Jesus Vance another?\" Aysel said as we walked up. \n\n\"Yeah accident,\" I said. \n\n\"Hey I'm Katie,\" Katie said suddenly interrupting the sudden stand-off. She even extended a hand towards Aysel. Foxy looked downtrodden and a feeling of guilt hit me once more. Aysel growled. \n\n\"Hey,\" I said. Katie had coward back behind me. \n\n\"We don't need another Vance.\"\n\n\"Let him be,\" Foxy said meekly. \"We need the strength.\"\n\n\"But he is out getting laid and recruiting when he should be getting the rest of us.\"\n\nThe truth in her words stung more than any slap. Somehow Foxy came to my rescue. \n\n\"Yes, but he needs the power to get them back. An extra won't hurt us.\"\n\n\"But if he isn't powerful enough to have us,\" Aysel countered. \n\nThere was something in the wild woman's words. A hint of rebellion and challenge. This doubt from the woman who I had just saved a few hours ago, fought with and fucked. There's gratitude for ya. \n\n\"Vance,\" Dana said suddenly in our telepathic link. \n\n\"Yeah?\" I replied. \n\n\"You need to forget this problem and rule. Something is going on here.\"\n\n\"Like what?\"\n\n\"I don't know, but you need to get here as soon as possible.\"\n\nI felt her fear and it sprung me to action. \n\n\"Hey, Aysel, hold down the fort. I need to go,\" I said to her. She growled at me. \n\nMy transformation surprised me. All I heard was the sound of ripping clothing and before the trio of women, I stood as an angry wolf. Aysel had a look of horror on her face and ran towards me. \n\nAysel threw herself to the ground before me in what might have looked comical hadn't I shifted into an angry wolf. \n\n\"I'm sorry Vance, don't punish me,\" Aysel cried. The prostration took me aback as I listened to her sob. A growl came from my chest, a warning to her and I moved on to the woods. \n\nAnger made me see red. Nothing looked alright and none of the woods normal excitement held any appeal to me. Instead, I ran through trees and mentally went through the notes in my head as to where the rest of my pack resided. \n\nRunning took a long time. I had no idea for how long, but the night didn't feel late yet. In fact, traffic still wove through city streets. I kept to shadows, stopping to trot in alleys to catch my breath. Thankfully, I didn't come across anyone. \n\nStill, the nightlife enticed me. Scents of pleasant food assaulted me. Past that, the scent of people. Most of them stank but mixed in with the sweat, dirt, and grime was perfumes, arousal, and sex. Such an interesting place to traverse as a wolf it seemed to me, but I understood why now Dana had been apprehensive to come into the city a few days ago. \n\nThe city provided way too many hazards. Already as I ducked in and out of the alleys, I found crossing streets difficult. Lights and cars, the dangers of people walking, there were even issues with making headway in parks. Dogs were everywhere barking and alerting the night to me. Eventually, I moved to rooftops to pick up speed to some success. That is until I landed on something while I ran. \n\n\"What the hell,\" a male voice said. \"Oh my god.\"\n\nI reacted before I knew what happened. Teeth sank into flesh and a scream of terror mixed with pain. Anger flared through me and then the taste of blood hit my mouth. My gag reflex hit immediately and I began throwing up on the arm in my mouth. Releasing the human, I continued to vomit. \n\n\"Please,\" I heard the human beg. Words that brought me out of my retched stage. A growl resounded in me as I turned to the human. A homeless man no doubt, but not someone I could leave alive. Killing another werewolf or even wild animal never bothered me. But as I stared down my snout at the pitiful creature before me, that troubled me. \n\nA line needing crossing here. One that made me hesitate. It would make me a killer, a monster. The bite would infect him, cause him to become a wolf in the city. One I could not control or keep track of. Something told me that and while he sobbed, I gave him the mercy of a quick death. A yank and pull and bones in the neck snapped. He dropped like a sack and I continued on. No remorse just jumped to the next roof and continued on. \n\nIt took me what felt like an hour to get to the diner that Foxy owned. Much to my surprise, it no longer stood as a building, but now as a smoldering ruin. Things had changed in a day it seemed and police tape and barricades kept the ruins confined. Never even met the bastard and his path of destruction weaved against me included things that he shouldn't target. Poor Foxy only liked Dana and she suffered the most out of this. \n\nRenewed with vigor, I set off once more through the cityscape and headed in the direction Dana had told me to go. Over to the woods on the other side from mine. \n\n\"Dana,\" I thought in the link as I ran. \n\n\"Yeah?\"\n\n\"Are you okay?\"\n\nI went through a yard with dirt and steel, kicking up dirt as I went. \n\n\"For now,\" she replied. \n\n\"I think I'm close to the woods.\"\n\n\"Alone?\"\n\n\"Yep,\" I said. I am sure if anyone managed to snap a picture of me, they would have captured black gums peeling back in a makeshift grin. \n\n\"Vance you should never do things alone,\" she said. \n\n\"I'm not,\" I replied. \"I have you.\"\n\n\"You know, I can't wait to have you again,\" Dana said. I got the hint of lust in her words. \"Way you handled yourself.\"\n\n\"What happened to being worried?\"\n\n\"Masturbating helps.\"\n\nYeah, my mind applied the mental brakes. \n\n\"Where are you that you can do that?\"\n\n\"In a cage with big thick bars.\"\n\n\"And you choose to self-pleasure in that?\"\n\n\"Look you don't know how wet and slick my pussy is Vance. My fingers are sliding through my slit with such ease that I could take you with no effort.\"\n\nI pictured her description. Her bare womanhood being spread by powerful fingers. Dana had a goddess like womanhood. To be in its presence meant a granted grace smiled upon thee. \n\n\"Stop it, Vance,\" Dana said. \"You're making me blush.\"\n\nI didn't answer as my journey to the woods in which my pack remained captive had ended. My arrival fizzled out in a series of gasps as my breath and heart made me feel like death visited. Vision even blurred and tongue lulled out in a Gene Simmons like fashion. \n\n\"That one-eightied fast,\" Dana commented. \n\n\"Yeah,\" I replied. \"Trying to rescue me, girl, here.\"\n\n\"Oh pup,\" Dana said in continuance. I am sure I heard a measure of amusement in her voice. \"Do hurry.\""
    ],
    "authorname": "destodes777",
    "tags": [
        "werwolf",
        "shewolf",
        "pack",
        "erotic horror"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-next-door-wolf-ch-07"
}