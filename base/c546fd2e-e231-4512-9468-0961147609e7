{
    "title": "Razor Ch. 10",
    "pages": [
        "After a miserable week, in a long line of miserable weeks, I pulled my tired body and aching head towards my foster-mom's house for our monthly family dinner. I hadn't gone there for our last family gathering, because I hadn't felt up to it, and I'd contemplated \"calling in sick\" again, but I'd had calls from several of my brothers over the past week, some just calmly reminding me of the date and time, some blatantly telling me I had to come. I felt pretty crappy about it when I realized that they'd been worrying about me, when I hadn't thought about them one bit, all because I'd been stuck inside my own head. Stuck inside my own head and my own heart, if I was to be real honest.\n\nIt had been weeks and she was still firmly lodged under my skin, and I just couldn't understand it. We had only met three times and we'd only spent one night together, that was all. It should have been easy to just shake it off and move on, and god knows I had tried, but she was like the worst kind of drug; it only took one try and then you were either hooked for life or spent weeks with the worst kind of withdrawal symptoms. \n\nYes, we'd only met three times, but every one of those meetings had been pretty memorable, hadn't they? And the night even more so, in several unexpected ways. I suppose it was those damned movies that had made me expect more aggression and domination from her side, but except for that first time in the hallway, most of it had been soft, gentle, almost loving in its nature. I wondered if she had been as surprised as I was. I didn't do gentle, I didn't do loving and I never stayed the night. And perhaps that was the key to my problems. Holding, kissing, touching and fucking someone was one thing, but sleeping together was something completely different. She had fallen asleep in my arms and I had fallen asleep in hers and it had been good. It had been fucking great.\n\nThe day after that one night I'd been walking around with a silly smile on my face, probably pretty similar to the one I'd seen on Sean's, when I'd been called to a one-vehicle accident in the middle of the city. And when I saw her in that car my heart damned near stopped, I couldn't breathe, I wanted to puke, because she was sitting there, pale, blood smeared across her cheek. It was almost as if her pain was my pain and at the same time as I wanted to pull her out of the car and just hold her I kept wishing that it was me sitting there instead of her. And that's when I realized that she was important, so fucking important, to me.\n\nBut that was all before I knew that she loved someone else and I realized that what had been an eye-opening, heart-expanding experience for me probably hadn't meant shit to her. That also meant that the feelings I was fighting were as absurd as they were unwanted. The scene at the hospital kept repeating in my mind, day in and day out. The way that bubbly feeling of love in the pit of my stomach had been so instantly replaced by a churning feeling of dark despair, suspicion and anger. How could you love someone and hate her at the same time?\n\n\"Fuck it! Fuck her!\" I muttered as I walked up the stairs to mom's house.\n\n\"Who are we fucking?\" the cheerful voice of Eric asked from right behind me, another sign of my preoccupation, I hadn't even noticed him.\n\nI turned around prepared to say something to him about minding his own business, when I realized he had company. It was that singer-songwriter guy, whatever his name was. The singer who was Mary's friend. Oh great, fucking awesome, a real-life, living reminder of the woman that I really, really didn't need or want any reminders about.\n\n\"Hey there,\" I said with a fake smile on my face that I hoped looked sincere \"good to see you both!\"\n\n\"I'm glad you're here,\" Eric said with a much happier smile on his face \"then Mike will have someone he's met at least once to lean on, if the going gets rough.\"\n\n\"Don't worry,\" I said to Mike, smile still in place \"just keep away from the dark corners, make sure you keep an eye on the ones with the sharp teeth and you'll do just fine!\"\n\n\"Simoooon,\" Eric whined \"be nice!\"\n\n\"Sugar and spice!\" I muttered before I opened the door and walked into the house.\n\nMy \"honey I'm home\" shout was interrupted by two dark-clad shapes with capes who tackled me and almost sent me to the floor. I'd forgotten about the twins, and they made sure I knew about it as they told me they'd missed me and tried to trip and tickle me at the same time. I hadn't been to see them in weeks and I cursed my mindless heart and heartless mind once more. I grabbed the two boys around the waists and carried them with me into the kitchen, where I found mom occupied with cooking the massive amounts of food needed to satisfy twenty or more hungry mouths of all ages.\n\n\"Haven't you found a way to extract, bottle and sell some of this excess energy yet?\" I asked her as I leaned in and kissed her cheek.\n\n\"Well, then I should have started with you, shouldn't I?\" she asked with a laugh before she turned to take a proper look at me.\n\nHer laughing, golden brown and far too knowing eyes started scanning me, the way they always did, extracting information better than any lie detector in the world. At first it had made me afraid of her and more angry and determined to leave her house, but now I knew she only did it because she wanted to know and because she cared about me, so I let her see it all, the pain and chaos inside of me.\n\n\"But you're running pretty low on energy now dear Simon, aren't you?\" she said with a low but concerned voice.\n\nThankfully the boys stepped up their attempts to try to get out of my hold so I turned around and carried the two seven-year-olds out of the kitchen. I didn't want to talk about it, because I realized how stupid it all was; a love that had lasted for mere days, not counting the last miserable weeks, shouldn't hurt this much.\n\nJust before I left the kitchen I heard Eric introduce Mike as his \"special friend\" and with a laugh I remembered mom's silly use of the term \"special lady friend\", which of course made me think about Mary again, because even though it would have been hard to call her a lady, she really had been special. With a silent groan I let go of the twins and decided to never think about her again.\n\nI actually managed to stay away from any thoughts of women, love and heartache for a good half hour whilst wrestling, tickling and chasing the boys in the big garden. But then it was time for dinner and I was placed next to Mike, who already seemed to blend in well with the rest of the family, and I just couldn't stop myself from thinking about her, the way she had looked when she sat on that stage, when she closed her eyes and just became the music. I really was totally and royally screwed.\n\nI tried to keep up with the happy bantering that was as much a part of our monthly dinners as mom's wonderful homemade food, but I saw that a few of my brothers threw worried looks my way and I knew there would be questions, questions I didn't want to answer. What was I supposed to say? I met a girl, fell in love with her and then I found out she loved someone else, that's all. And the answers would be your standard \"you lose one, there's hundreds more out there waiting for you\" message, or other similar versions used to cheer me up. \n\nI was pulled out of my bitter thoughts by Eric's happy voice telling us all how he'd met Mike. I looked up and tried to signal to him to shut up by shaking my head as discreetly as possible, but he was too caught up in his story and he kept his big, blue eyes focused on Mike, so I guessed even a red flag and trumpets wouldn't have been enough to get his attention.\n\n\"... and when the show ended I couldn't stop myself,\" Eric said, his words almost too fast \"I just had to meet him, and I stood in line to tell him I'd been deeply moved by his story, but when it was my turn, one of the crew members walked up to him and whispered something and he walked away and I just followed, and that's when I saw Simon...\" \n\n\"... talking to my friend Mary,\" Mike interrupted \"and Mary and Simon introduced us, and that's really all that happened. We ended up exchanging phone numbers, and here we are.\"\n\nI gave Mike a grateful smile and a nod. I really didn't want to explain the make-out session to anyone, in addition to explaining why I was not my own at least moderately happy self. I threw a look across the table and met mom's hawk eyes again. Shit, she'd probably seen all of that, hadn't she. I hoped she would just let it be, but when I saw her worried look change into a very well-known stubborn one I knew she wouldn't. I exhaled slowly and decided to try to sneak off early, before she could pull me to the side and have one or her talks.\n\nI helped clear the table and fill the dishwasher and then quietly walked out of the kitchen. I almost made all the way to the door when mom's \"Simon\" stopped my steps. I turned around and looked at her and she smiled at my probably very grumpy-looking face before she walked up to me and put a cool and smooth hand on my face.\n\n\"Simon,\" she said \"let's just talk about it, ok? I'll feel better at least, and perhaps it will help you too, you never know.\"\n\nI nodded, perhaps it would help to talk about it, but I really didn't think so. I'd tried to think it all away a couple of thousand times already and talking about it would just more of the same, but out in the open, with someone else listening in too. I walked with heavy steps and followed her to her small office at the back of the house. She sat down, I sat down and there we were, sitting, staring at each other, none of us saying even one word.\n\n\"So, Mary, tell me about her?\" mom said after a short moment of silence, putting her finger straight in the open wound, like she usually did.\n\n\"I really don't want to.\" I answered in a whisper.\n\n\"I really wish you would.\" she whispered back \"Because I haven't seen you this way since just before that last time when I found you shitfaced in the gutters. We've had ten good years since then, and I'd been kind of hoping that I wouldn't have to worry about you in that way anymore. So talk!\"\n\nI'd been sent to mom's house when I was eleven as a last resort after getting thrown out of a long line of foster care homes and it hadn't taken me long to figure out that she was different. She never forced me to sit still, she never complained when I talked to much, she never told me to stop thinking and dreaming. Instead of getting annoyed with all of it she asked me questions, gave me problems or puzzles to solve, paper to write on, building material of every possible kind and a great big garden to roam, sit, lie, dream or build things in. By the time I was sixteen, everything was pretty great, until I found out the truth about me, the truth about my mother. Learning that you're the unfortunate and unwanted child of a prostitute would probably be enough to send anyone spinning.\n\n\"It's not really that bad.\" I answered with a heavy sigh.\n\n\"But bad enough,\" she said with lifted eyebrows \"so do you want to tell me or should I start guessing?\"\n\n\"None of the above?\" I answered with a small smile, even though I knew she wouldn't let it rest.\n\n\"You met a girl called Mary, and...\" she said, gently coaxing me to continue.\n\n\"I met a woman called Mary,\" I corrected her \"and I only met her a couple of times, and I still can't stop thinking about her.\"\n\n\"Smells like love to me,\" she answered with a wide smile \"so what's the problem? What's got you down? Is she married? Into girls? Dead?\"\n\n\"She loves someone else.\" I answered, almost choking on my own words.\n\n\"Did she tell you she loves someone else?\" she asked with lifted eyebrows.\n\n\"No,\" I admitted \"I read it on a piece of paper, okay? It doesn't get more real than that, does it?\"\n\n\"Who the hell uses pieces of paper to communicate nowadays?\" she asked, her eyebrows going even further north.\n\n\"She didn't really communicate with me,\" I said in a whisper \"the note was for someone else.\"\n\n\"So, she didn't really tell you that she didn't love you then?\" mom said softly and looked at me, now with just one lifted eyebrow \"You just assumed that she didn't.\"\n\n\"Yeah...\" I gave her my grumbling answer.\n\n\"I seem to remember telling you about assumptions and drawing conclusions based on too little or bad evidence at some point?\" she said and stared at me \"And I really thought that they'd teach you all about that in the police academy, at least that would have made up for the surprise you gave me a few years ago when you decided to become a police officer.\"\n\n\"But she...\" I tried to tell her but was interrupted.\n\n\"No buts, big or small, shaken or wiggled. You really don't know for sure until you've heard her say it herself.\" she said with a shake of her head \"Brightest boy I've ever met, decides to become a police officer and gets his brains turned to porridge, that's all I'm saying...\"\n\nI laughed softly and shook my head, perhaps my head had become a little soft and mushy. We both stood up and she gave me one of those big, long, warm hugs that always seemed to solve all sorts of problems in the past. It didn't solve grownup problems quite as well, but at least she'd been able to shake me out of the cage of thoughts I'd been walking around in for too long.\n\n\"I love you mom.\" I told her and it actually felt like breathing was a bit easier than before our talk.\n\n\"I love you too Simon.\" she answered softly \"Don't let the frustrations of life get to you. If you're ever stuck in a thinking-loop, look for a different way to find the answers or solve the puzzles. And if you want to talk about it, about anything, you know where I live, ok?\"\n\n\"Ok.\" I answered in a soft whisper.\n\nI walked back out into the kitchen after deciding that I had to learn if Mary had been released from the hospital. It had been weeks, so she was probably recuperating at home, but still, I thought I'd ask Mike about it. Unfortunately, he and Eric had already left, apparently deliriously happy and holding hands, according to the biggest cynic of our big family, Juan. Despite living for years in the loving and accepting environment that mom provided us all with, Juan didn't really believe in love, and especially not that it could come in all shapes and forms. I guessed I wasn't much better, but in a slightly more self-centered way; love was something for other people, normal people, it would never happen to me, I was too damaged, inside and out. And still, there I was, struck to the heart with no one but myself to blame.\n\nAfter staying for another hour, talking to the rest of my many brothers of all ages, sizes and shapes, I walked home, my steps a bit lighter. I had a plan. I would go to her apartment, knock on her door and ask if she was alright. And if I felt really courageous, I'd ask her about that list of songs.\n\n* * * * *\n\nI woke up in that hateful bed, with the very fitting number 666 glued to the sidebar, a few weeks after the start of the chemotherapy, sick as a dog. The chemo had not been to play with, and the team of doctors had gone all in to \"destroy what needed to be destroyed\", and me with it, as I had grumpily told them. \n\nThe doctors hadn't laughed at that statement or any of my other attempts at dark humor and that was a sobering notion; fighting cancer obviously wasn't a laughing matter. I just wished there was at least one not so very stone faced person around whom I could vent my thoughts to, because I really, really needed it.\n\nI was worried, no absolutely frightened, about the bone marrow transplantation. Not about the procedure in itself, but about having someone else's stuff put in my body. I realized it was completely illogical, but I was as frightened of the transplantation procedure as I'd been when I was tied up in that room all those years ago. I guessed it was the feeling of not being in control, but knowing what it was that sent my pulse running too fast and my body tense up until my muscles hurt really didn't help calm me down.\n\nI still hadn't been told who was the secret donor, and that frightened me too. There really weren't that many options, and all of them were completely inappropriate, for several different reasons. \n\n\"Alright,\" the cheerful voice of the old nurse told me as she walked in the room \"today's the day. Are you ready to start feeling a whole lot better?\"\n\nI wanted to yell at her to tone her chirpiness down a whole damn lot, but I didn't. There was no need to get her down just because I felt like I'd been chewed up and shat out. I could handle jokes about death and despair, but happy cheerfulness really got me down.\n\nI got transported through a couple of \"safe corridors\" that was supposed to be clean enough for a zero immune system patient to travel through, and I spent a minute calculating the odds for them actually being clean enough, the result wasn't all that great. I was then placed in a room that didn't quite look like the surgery I'd expected and I tried to figure out what they were up to, it was supposed to be a quick procedure, but as far as I knew it still had to be performed by a surgeon of some sort?\n\nMy thoughts were interrupted by the door opening and another bed getting pushed into the room. What the hell were they doing and what was this, the grand central station? I kept my mouth shut and my eyes open, because the nurse was smiling a bit too widely. Time for another cheer-me-up session perhaps?\n\n\"Your friend wanted to talk to you before we started the procedure,\" the nurse said, still with that too cheerful voice, and pushed the second bed closer to mine \"and you have about 30 minutes before we're good to go. So talk, get it all off your chests and ring me if you need anything!\"\n\n\"Oh for the love of something,\" a very well-known voice said from the other bed after the nurse had left the room \"she couldn't have possibly placed us so we could actually see each other, could she?\"\n\n\"Susan,\" I whispered \"is that you? Why? And how?\"\n\n\"Of course it's me,\" she said \"how many sisters do you have?\"\n\n\"I really and honestly can't answer that question,\" I answered, exhaling slowly to let go of some of my worries \"one sister and one brother as far as I know.\"\n\n\"I've got a brother too?\" Susan said, obviously surprised by what she was hearing.\n\n\"Yeah, if you'd have talked to your mother,\" I answered \"you'd have known as much as I do.\"\n\n\"Well,\" Susan answered \"I did talk to her and she told me everything, from her stupid mistress-gone-pregnant-pushing-for-more mistake to the painful experience of giving birth and the even more horrible experience of having to care for a baby. Everything except who our dad is. She told me she wasn't allowed to tell anyone. And what's up with the whole secrecy thing anyways?\"\n\n\"Sometimes when certain people tell you to be quiet, you're better off shutting up,\" I whispered \"and I understand why your mother is afraid to tell you.\"\n\n\"That means you know who it is, doesn't it?\" Susan said \"That settles it, I've got to see your face.\"\n\nShe sat up, turned around and I could see that she was shocked by my appearance when she got the first good look of me she'd had in weeks. I had avoided looking at my own reflection in mirrors, windows and any number of polished surfaces, but I saw it all clearly reflected in her eyes and facial expressions before she gave me a wobbly smile.\n\n\"That bad, huh?\" I asked with a crooked smile.\n\n\"Worse,\" she answered \"didn't you like use to have hair or something?\"\n\n\"Yeah,\" I said \"but I asked them to cut it off before we started the chemo. By now some poor girl or boy is running around with a Mary-wig, because I donated it to one of the children with cancer organizations. It seemed appropriate.\"\n\n\"Did you cry?\" Susan asked \"I think I would have cried. So silly really, but the hair, you know?\"\n\n\"Yeah,\" I answered \"I cried. And yes, it's silly, but I never realized how much of your personality and your sense of self is connected to your hair. I never cared that much about it before, and now I almost can't stop thinking about it. But as they keep telling me, 'it'll grow back'.\"",
        "I gave Susan a happy smile, that probably looked more like an angry scream on my thin face. But it seemed that she understood what I meant.\n\n\"So, that nurse,\" she said with a laugh \"she's been driving you mad with her cheerfulness, hasn't she?\"\n\n\"Pretty much, yeah.\" I answered.\n\nI looked at Susan and it suddenly hit me that she was at the hospital and she wasn't panicking, at all. \n\n\"Hey,\" I said and looked at her thoroughly \"why aren't you in full panic, trying to run away from here?\"\n\n\"Yeah,\" she said with a small giggle \"they gave me these wonderful pills, you see. They're not long-lasting they said, but long enough to get me in here and get it done, apparently.\"\n\n\"You know,\" I said with a laugh \"I'm going to plan a proper shower for Sarah. If I get some of those pills, I bet you I'll have you dancing on tables in no time.\"\n\n\"Should I worry about that actually sounding like a really good idea?\" Susan said with another giggle.\n\nI just laughed and pictured it in my mind. My skinny skinhead ass sitting there in a bar, Susan dancing on the table, Sarah sipping on her non-alcoholic drink, giggling until she spilled half of it on her new, blue dress, and Rose finally laughing, that real laughter that I longed to hear again. They said you had to have a goal, something to look forward to, to be able to fight to the bitter end, and that would be my goal. I would sit in the bar with my friends again. I would laugh with my friends again. I would see at least one of my friends happily married. And then I would be pretty happy too. As far as goals went, it was a mere nothing, but to me it meant the world.\n\n\"Where'd you go?\" Susan asked softly and I realized I'd been quiet for longer than I thought.\n\n\"I think I just decided to survive!\" I answered with a trembling smile.\n\n\"Well, good!\" she answered with a wide smile \"But just so you know, we already decided that for you. And now, please tell me about my father. If something goes wrong in there, the least you can do is tell me about him before I die!\"\n\n\"No one's dying today!\" I said \"And I'll tell you but you won't like it. Have you and Sarah talked to Rose about what she's been through?\"\n\n\"Yes, what a fucking dickhead, and his family not much better,\" Susan answered \"but what does that have to do with the provider of half of our genes?\"\n\n\"Well, it's good if you can think of it all that way, because the truth is that Rose's husband is our brother and Rose's father in law is our dear old dad.\" I said exhaling slowly, fighting nausea as it tried to overwhelm me.\n\n\"No,\" Susan whispered in shock \"no, it can't be, he can't be?\"\n\n\"Sorry,\" I said softly \"I told you that you wouldn't like it.\"\n\n\"My mom actually had sex with that monster?\" Susan whispered \"Wait, does that mean I'm a monster too?\"\n\n\"Well,\" I answered \"have you been feeling like raping a lot of people, leaving your own brand burnt into those people's skin or something like that lately?\"\n\n\"No,\" Susan whispered \"but I'm feeling a whole lot like puking right now.\"\n\n\"Better not,\" I answered \"it might mess with their tight schedule you know.\"\n\n\"Doesn't it make you sick to your stomach?\" Susan asked, her words muffled by the hand she held in front of her mouth.\n\n\"Yes, it makes me sick. But I've known about my heritage for fourteen years.\" I answered with a soft and surprisingly calm voice \"It was the final secret that my mother revealed before she died. I'd always been told that I was the devil's own child, I just didn't know how true it was until she showed me the brand on her body and revealed the terrible truths about my conception.\"\n\n\"No,\" Susan answered \"no, she wasn't; no you aren't?\"\n\n\"Yes and yes,\" I whispered \"but, as the song goes 'I decided long ago, never to walk in anyone's shadow' and I concentrated my mind and my will on good things, instead of bad. I suppose I can thank the monster genes for taking me as far as I have managed to go, but I still like to think that I did it for the greater good.\"\n\n\"Yeah,\" Susan said softly \"I've read your financial statements, you know. And Rose and Sean can't stop talking about your charity work. Have you slept even one hour these past few years?\"\n\n\"A few,\" I answered with a soft laugh \"I've gotten plenty of sleep since I got locked up in here, that's for sure.\"\n\n\"You make it sound like a prison?\" Susan asked lifting her eyebrows slightly.\n\n\"I have to stay in my room, with no visitors and they won't even let me get my hands on a computer. What do you think? Pretty close to a prison I'd say, solitary confinement at that!\" I answered, my general sense of annoyance coloring my words.\n\nSusan laughed and shook her head. Her face told me she thought I was beyond salvation, and perhaps I was, but I really did miss getting my daily dose of vitamin C. And yes, that was C as in computer. Susan climbed back down into her bed and we both settled down to wait. After a moment of silence, I decided that her idea, to share our secrets just in case something happened, was a sound one.\n\n\"Susan,\" I said softly \"I should probably tell you then, since we're talking about genes and stuff, that you're an aunt as well.\"\n\n\"Oh, that I already knew,\" Susan answered with a sigh \"William figured it out, you see. It seems he woke up in the middle of the night in some sort of vision. He met us the next morning and talked a lot of nonsense about his dead sister telling him that you were the mother of his daughters. And at the same time as we checked my blood compatibility we also ran a test on the twins, and yes, congratulations, you're a mother.\"\n\n\"So, everybody knows then?\" I whispered \"About all of it?\"\n\n\"Everything you wrote about in the letters and the locked files, and about the twins.\" she answered slowly \"And now I know about our father as well. Is there more?\"\n\n\"Not really, just bits and pieces here and there.\" I answered \"No more connections, not in that way at least.\"\n\nI hesitated for a while but decided that I really wanted to know what their reactions had been, because they all knew about me now. Did they hate me after the things I had done and the person I had been?\n\n\"Are they... are you all, angry with me? Upset? Sad?\" I asked slowly and hesitantly.\n\n\"We were surprised by what you had done to help us find love and upset when William told us you were dying, and then we were all completely devastated when we read about your life, and shocked again, in a good way, when we learnt what you had managed to accomplish in less than 10 years.\" she answered just as slowly but without hesitation \"And we all love you, just as much as we did before. Some of us even more. Do you have any idea how much I've always wanted a sister?\"\n\n\"Especially a pesky kid sister, huh?\" I answered with a wide smile that she couldn't see but hopefully hear \"Because you're four months older than I am, remember?\"\n\n\"Finally,\" she whispered in pretend awe \"a kid sister I can play with and dress up in tiny princess dresses.\"\n\n\"Seriously...\" I answered, mocking her choice of sisterly dress-ups \"princesses, that is so lame.\"\n\nWhen the door opened we both turned our heads towards the happily smiling nurse but before she could approach us Susan muttered one last thing.\n\n\"After this, if I want princess dresses, you're damned well giving me princess dresses.\"\n\nAnd she was right, I'd gladly give her my left arm and my right too if I survived the upcoming weeks and months.\n\n\"I love you sis!\" I told her as they separated us and I managed to hear her \"...you too\" before I was pushed into a new room where I was handed over to the surgeon. I so wished they had given me some of the pills that had managed to calm Susan's fears, because there was nothing I feared quite as much as a man skilled at handling his knives. \n\nI closed my eyes and started listing the numbers of the Fibonacci series in my mind, and I hoped it would be enough to keep me calm. I couldn't quite find the energy to think about sex and other pleasant physical activities, but there was one thing that kept popping up in my mind that might be able to help. I would think about the strangely safe and relaxing feeling of falling asleep in a man's arms. I would think about Simon.\n\n* * * * *\n\nShe hadn't been home on any of the three occasions I had walked by her apartment, and my determination had been replaced by a new round of frustration. If I couldn't find her, I couldn't very well hear her tell me that she loved another man, and that meant I only had the choice of living in that mad kind of limbo, or to get signed up for a free lobotomy somewhere. 'She drives me crazy' really had a new meaning, that was for sure.\n\nI didn't really feel up to my monthly meeting with my biological mother, but I did it anyway, because it would keep everyone happy, and that would make life a whole lot easier. Another round of heavy steps led me to the diner where we usually met. Bio-mom had a couple of friends that worked there and I couldn't help wondering if they had been like my mom, if they were all in fact recovering drug addicts and former prostitutes. I shook my head at my own dark thoughts, did it really matter what they had once been or done? They always smiled widely at me and led me the way to Sally, who was always waiting for me with an equally wide smile. They were nice, hardworking people, and that was all I needed to know.\n\nThere was something wrong with the mood at the diner that evening. The smiles were not as wide, the friendly banter was not as loud or vivid and my mother wasn't smiling when I walked up to her. It was as if my mood had been replicated and amplified in the big outer room of the diner. I felt shivers run down my spine when I sat down and looked at the suddenly old-looking woman in front of me.\n\n\"Hey, Sally, mom?\" I said and looked at the woman whose main contribution to my life had been to give birth to me.\n\n\"Hello Simon dear.\" Sally answered and looked at me, her mind clearly somewhere else.\n\n\"What's wrong?\" I asked, wondering what had happened to the usually smiling and laughing mother I knew and reluctantly loved.\n\n\"Oh, it's nothing dear,\" she answered with a shadow of a smile \"it's my employer that I told you about. A few weeks ago she was in a car crash, and then a few days after that we were told that she was dying from cancer.\"\n\nI was listening with half an ear to what she was saying. Her employer was dying, and she was sad about it. That meant she probably had a pretty decent boss. She'd told me the name of her boss a few weeks back. It was something with an M, wasn't it? And that was as far as my thoughts managed to take me before I suddenly realized several things at the same time. Her boss' name was Mary, her boss had been in a car crash, her boss was dying from some sort or cancer, and her Mary probably was my Mary.\n\n\"What does she look like?\" I whispered in question.\n\n\"Mary? She's something between a blonde and a redhead, she's got big, laughing green eyes and a wicked sense of humor.\" she answered and stared at me when my ability to breathe left me again \"What? Do you know her?\"\n\n\"Yeah, I know her.\" I whispered back \"What kind of a cancer does she have?\"\n\n\"It's leukemia dear,\" she answered with a sad smile \"the doctors are doing everything they can, and all we can do is hope, and beg the universe to spare her.\"\n\n\"Hope, huh?\" I whispered and I could feel a heavy pressure in my throat and the stinging feeling of tears collecting in my eyes.\n\n\"I'm sure some of her friends are praying to some God or another, but that's not really our thing, is it?\" she answered slowly.\n\n\"No!\" I answered and I didn't know if I was saying no to her question or to the whole situation. No, Mary couldn't be dying. No, I didn't want her to die. No. Just, fucking no!\n\n\"No,\" my mother echoed \"it's what I keep thinking and saying. It's not fair that a person like her would have to die when she's that young. I know that my mother always said something about young people being called to heaven because God loved them so much. But I say that we, all the living people that she has rescued in one way or the other, love her more. Look around you, Simon. Every single person in this diner have been saved by her or by one of her organizations. She saved me not just once, but twice. She managed to save me from being gangbanged by a group of drunkards when she was really young and then years later she managed to dig me out of the sewers and clean me up. She calls me and my coworkers her angels, but now I know it's a fucking lie. She's the angel, no, she's a fucking goddess in my eyes.\"\n\nI looked at my mother in surprise. She never showed deep feelings like that, but always carried a wide smile and seemed unconcerned with all the bad things that happened around her. And now tears were running down her face in an almost uncontrollable way. I reached for her hand at first, but it didn't seem quite enough, so I pulled her out her chair and into my arms and held her as she cried. I spent half a second thinking how strange it was to comfort your own crying mother before her tears became mine.\n\nWe didn't have dinner, but I took her home in a cab that agreed to wait for me as we said our good-byes. I had the strange feeling that I had finally come to terms with the fact that Sally was my mother and I told her so in a messy and emotional speech before I left her on her doorstep. She gave me a final warm hug and told me she'd call me in the morning.\n\nI ran down to the cab, threw myself into it and told the driver where we were headed. My old plan had been replaced by a new one. Instead of knocking on her apartment door, I had to knock on a few doors at the hospital; fuck, I would tear them down if I had to. \n\nI talked and talked, for hours it seemed, but there was no way for me to get in to see her. Stupid hospital visiting and privacy rules, stupid hospital personnel, stupid me for thinking there was a way in! I walked out of there, my mind chaotic, my emotions explosive. I sat down on a stone bench just outside the main entrance and covered my face with my hands. I had to think, I had to come up with another plan, preferable one that didn't require climbing the outer walls of the hospital, nor one with guns and explosives.\n\n\"Hey,\" a soft voice said \"Simon, right?\"\n\nI looked up to a familiar face, but it still took me a few seconds to understand where I had met her before. It was the nurse that had let me in to see Mary the last time, perhaps she could...?\n\n\"No,\" she answered with a soft laugh \"I can't let you in to see her, but it's not because I don't want to. You see, she can't really meet anyone right now. And I can't tell you more than that.\"\n\n\"Can you tell me if she's doing alright?\" I asked \"I just heard about her illness from my mother, and it just... why didn't she tell me?\"\n\n\"She's doing as well as can be expected,\" she answered with a sad smile \"and I know that isn't the best of answers. But at least she's decided to fight it now, and we're all really happy about that. As for her not telling you about it, I can't tell you why, but she didn't tell any of us. She decided to keep it a secret, along with a few hundred other things.\"\n\n\"You're her friend then?\" I asked \"Not just a nurse, I mean?\"\n\n\"I'm her friend, yes.\" she answered and looked at me for a long while before she added \"I think, perhaps you should come meet the others.\"\n\nI nodded, but my head was still a mess. Meet the others? The nurse told me her name was Elena and that she was meeting a few of Mary's friends in a nearby diner and then, because I wasn't reacting to what she was telling me she just took my hand, walked me to her car and drove me to where we were going. And the night repeated itself, because I was back at the same diner I had left in a cab not long ago, and the mood there was still calmer and darker than it usually was. Elena kept talking to me and dragging me by my hand to where we were going. When she threw me a worried look, I realized I still wasn't responding to what she was saying, I had reached a strange human robot state. A strong and heavy hand on my shoulder started to snap me out of it.\n\n\"Simon, what the hell?\" Sean's angry voice said \"Elena, what's Simon doing here?\"\n\n\"Simon is one of Mary's friends too,\" Elena said calmly \"he just found out about her disease, and as you can probably tell, he's pretty upset and possibly in a state of shock. So I couldn't well leave him where I found him, could I?\"\n\n\"I told you to stay away from her,\" Sean growled and looked at me \"didn't I?\"\n\n\"Luckily,\" I answered calmly with a hint of aggression \"I'm not a puppet and you're not my master.\"\n\n\"Boys,\" a warm voice I didn't recognize interrupted something that could have become a very satisfying and well-needed brawl \"need I remind you that you're not six years old? And that you don't have to fight about this particular toy? Sean, I seem to remember that you already have a favorite red car, over there in the corner, I think her name is Rose?\"\n\nSean pulled away and stalked off muttering something about not being six years old, disproving his own statement when he stuck his tongue out, showing his displeasure in a very mature way. I turned around with a smirk and met the warm eyes of a short and round but very lovely brunette.\n\n\"Hello,\" she said with a wide smile \"I'm Sarah, one of Mary's oldest friends. I'll introduce you to the rest of them.\"\n\nAnd that was the beginning of an evening that tossed me from smiles and laughs to shock and anger and back to laughter again. I'd known she was special, now I knew that her friends were special too, and I realized that Mary also had a family like mine, a strange mix of people who respected and loved each other, despite all their differences.\n\nI walked away with my thoughts whirling, now in a slightly different direction. Instead of asking her about her note I would tell her what I was feeling. Life really was too short to worry about little things like having your love rejected. I knew I had to wait to tell her, until she was well enough to see people again, but I would wait, and I would stop worrying about it until I got a chance to see her. Now I just had to worry about her surviving the hell she was going through. And hope! I would wish and I would hope, and if that didn't work, I might just try that praying business too.\n\n* * * * *\n\nI woke up, feeling infinitely better than I had just a few weeks ago. And happier, I was feeling a lot happier too. I'd been told the day before that my body was responding well to the treatment, and I could almost feel it too. I'd also been told I could expect my first visitor that very day. \n\nI was silently hoping that Samuel would come to see me first, carrying a high quality computer and instructions on how to connect to the fastest possible network from my bed, because that last puzzle piece was still chafing at the back of my mind. When it was William that opened the door and stepped into my prison cell instead of Samuel, I wasn't exactly disappointed, especially not when I remembered the discussions we had had online just a few months ago.\n\n\"How are you?\" he asked with his soft, calm voice \"Really?\"\n\n\"Well,\" I answered \"I've been better and I've been worse. And compared to a week ago I'm feeling pretty great actually.\"\n\n\"That's great,\" he said with a big smile \"I'm so happy for you!\"\n\n\"So,\" I said when the silence in the room grew uncomfortable \"what's been happening in the world lately?\"\n\n\"Oh,\" he answered his smile growing even wider \"you're just missing the greatest scandal of this century now that Rose's husband is on trial for several murders.\"\n\n\"How's Rose holding up?\" I asked, worried about her, worried about them all.\n\n\"She's alright,\" he answered \"she's got a lot of support from all of us, the full team.\"\n\n\"All of you?\" I asked and lifted my eyebrows slightly \"What does that mean?\"",
        "\"All of your friends,\" he answered and started counting on his fingers \"Sarah, John, Susan, Ben, Jerry, Sean, Elena, Samuel, Mike, Sally and most recently a nice young man called Simon.\"\n\nI almost whispered Simon when I heard his name in the list of my friends. I wondered how he had become a member of the \"team\" as William had said, but I didn't dare ask. I hadn't quite come to terms with my feelings for either William or Simon. I didn't lust for William as I did for Simon, but I knew I loved the parts of William I had gotten to know when we talked to each other online. I would have to think about it, now when my mind was starting to function as it should again. Was it possible to love two men at the same time? I knew Susan did, but could I, really? William thankfully interrupted my thoughts.\n\n\"Is there anything I can get you?\" he said with his calm voice \"Chocolate, flowers, warm socks?\"\n\n\"A computer would be nice, and then if you could...\" I answered with a smile but was quickly interrupted again.\n\n\"I don't know anything about computers, sorry!\" he said with a short laugh.\n\n\"You don't know anything about computers?\" I asked and my mind started running in circles. \"What about encryption algorithms? Battery capacity optimization?\"\n\n\"Whatta-you-call-it?\" William answered.\n\nIf he didn't know what I was talking about, then there was no way he was the person I'd been discussing my ideas with. There was no way that he was the person that had questioned my reasoning, found all those weak points in my constructions and suggested improvements.\n\n\"Soooo,\" I said, slowly \"that means you haven't been writing on a site for innovative thinking then?\"\n\n\"I know Zelena was active on some sort of think tank site thing,\" he answered just as slowly \"before I realized she was staying up too late at night and I shut her down. Me, I'm useless around computers.\"\n\nI laughed then, a deep belly laughter, and I had to wrap my arms around myself to keep still. I had to be careful with some of my too tight stiches and my ribs that were still slightly painful it seemed. It was absolutely hilarious that I had fallen in love, or whatever you would call it, in a miniature version of myself, a little mini-me. It was one more mind-blowing notion, that I'd never being able to love myself, but that I could easily see myself loving someone else with at least nearly the same general makeup, as far as I'd been able to tell.\n\nBut then, if it wasn't William I'd fallen in love with during our late night discussions about problems and solutions, what did that mean? Did that mean that I had no emotional connection to him at all? I looked at him and felt the same kind of peacefulness and quiet calm that I always did when he was around. Where everything else in life sent me spinning, whirling and running, he, with his mere presence, calmed me. \n\nSo, he calmed me, his daughter focused me... and in a sense I probably loved them both. But it wasn't a heart-storming, soul-warming kind of love. I wasn't consumed by passion, and William, the real life version of him, that I now knew was the only version of him, didn't spin me round like a record, round, round. I started giggling, forgetting the stitches and ribs once more.\n\n\"Fuck...\" I grumbled and kept my arms wrapped around ribs.\n\n\"Are you ok?\" William asked and looked at me with surprise and worry clearly written on his face and in his eyes; he obviously wasn't shielding as much as he usually did.\n\n\"I'm fine,\" I answered with a smile \"and I should tell you that I've been talking, or really writing, to your daughter a whole lot. She's pretty bright you know.\"\n\n\"I do know,\" William answered \"both of them are pretty special, in their own ways. You should meet them and see for yourself.\"\n\n\"I might just do that someday,\" I answered \"when I feel a little more like myself perhaps?\"\n\n\"That sounds like a plan.\" William said and stood up \"I'll let you rest now.\"\n\n\"No rest for the wicked... remember?\" I answered with a wide smile.\n\n\"I suppose I could say something about badmouthing the mother of my children?\" he answered, smiling back at me.\n\nI looked at him and tried to read his feelings about it all. He didn't seem upset about my unfortunate connection to his daughters and that really surprised me.\n\n\"That was a secret I would have rather it was kept hidden you know.\" I answered softly \"It's a heavy burden to carry, knowing who your parent is, if that parent is inherently bad.\"\n\n\"But you see,\" William said with a small smile \"I don't believe it's the genes that decide your destiny. It's the choices you make that define who you are. It took me a while to process it all, but in the end, I've come to the conclusion that you're anything but bad.\"\n\n\"But,\" I started saying.\n\n\"Nope,\" he answered as he walked away \"I'm sorry if it spoils your rock star image, you know, bad to the bones and all. Face it, you're like one of those cute kitten films on that thing they call the internet, absolutely harmless and perfectly adorable.\"\n\nHe laughed at his own joke as he walked out of the room and I just stared after him and at the door as it slowly closed. The man was so completely different from what he had been when we first met. He was open, showed his emotions, made jokes and talked about his children. Who was he and what had he done to the real William?\n\n* * * * *\n\nI had decided to wait to talk to her until she was back in her apartment, but I had been given many opportunities to regret that decision. All of Mary's friends had been to see her and for every week that passed, despite the fact that they all reported good progress, I longed to see her myself, to make sure she really was okay. It was a long wait, but talking to her friends and to my foster-mom helped keep me sane and on track.\n\nWhen the day finally came that Mary was allowed to go home I wanted to run there straight away, but I kept myself occupied with work and work-outs and let her settle in back home, one day, two days, but on the third day I couldn't wait any longer.\n\nI was nervous but decided when I walked up the stairs to her apartment. When I knocked on her door I realized that my hand was shaking. Ok, I thought to myself, perhaps eighty percent nervous and twenty decided, but still I was finally there, ready to hand my heart over to her on a silver plate, pretty prepared to get both silver platter and heart thrown back in my face. Mom had taught me that knowing was always better than not knowing, and I guessed I would know within minutes if that was true or not. The door opened and I looked up and saw her for the first time in weeks. She was pale, really thin and her hair was short, but her eyes were still the same and her smile when she saw me was happy and inviting. I exhaled slowly and silently, alright, she wasn't upset that I came to see her at least. \n\n\"Hello there golden boy,\" she said \"what brings you to my evil lair?\"\n\nAnd with that short sentence she interrupted all of my thoughts and plans on how to proceed.\n\n\"Golden boy?\" I asked as my mind tried to think why she'd ever consider me golden.\n\n\"Come on in,\" she said \"and I'll tell you why.\"\n\nShe walked with catlike steps into the kitchen where she started mixing something in a big saucepan on the stove.\n\n\"Do you like hot chocolate?\" she asked over the shoulder and I nodded.\n\nIt didn't take her long to heat the hot coco, pour it in two big cups and sit down beside me. She looked at the warm liquid in her cup and seemed as occupied with her thoughts and her memories as I was with mine.\n\n\"That day when we first me,\" she said \"Sean had asked me to find out who'd been scaring off the women. He hadn't noticed anything in particular but he had a feeling, just a feeling, that something was wrong. He doesn't always believe in his instincts, that famous \"gut feeling\", but I do, and when he told me about it and asked me to help him, I came prepared for war. When I found out that there were two guys and that they were working in the nastiest sort of team it was the final drop in a cup that was already filled to the brim and more, I decided then and there to give up on mankind as a species.\"\n\n\"I had a weak moment a few years ago,\" I said when she grew silent \"when I began to think that being human wasn't such a great thing. But I couldn't very well change what I was, could I? In that sense I truly am what I am. I figured that in becoming a police officer I would have a chance to make a change, that I would be a part of the good team, fighting for the good cause. And I hate it every time when I'm proven wrong.\" \n\n\"The trick is that you have to measure the good things against the bad, or really, to make sure you notice the good things at all, which really isn't my specialty.\" she said with a crooked smile \"But on that day, in that gym, when I saw you talking to the women, trying to build them up after having been pulled down by those bastards, you were a golden light in a very dark tunnel. I could see that there was still hope in the world, hope for us humans. And that's when you became 'the golden boy'.\"\n\n\"Golden, huh?\" I answered with a small smile \"But gold is such a soft material, couldn't I be like Iron Man, titanium alloy or something like that?\"\n\n\"So you'd rather be a superhero than a pretty jewelry?\" she said with a wide smile \"Function before form?\"\n\n\"Well, I am a man after all...\" I answered with a provocative smile.\n\n\"You should know better than to try to bait me with that!\" she said and smiled back at me \"Besides, I've known a lot of male forms without any discernible function.\"\n\n\"Even in those cases, I can think of at least one primary function that should be enough for a pleasant half-hour or so?\" I said and laughed \"At least that's been my experience.\"\n\nShe started laughing and I just sat and looked at her and listened to her. She held her arms around her waist and just let it all out, with hiccups and snorts that all ended in a silly giggle and a whispered \"Pleasant half-hour? More like four-second races towards the finish-line.\"\n\nI shook my head and took a sip of the chocolate and then another sip. There was something strange about it, some extra flavor I didn't really recognize. It didn't taste bad; just not as the hot coco I remembered from when I was young.\n\n\"What?\" I managed to say before she laughed and answered.\n\n\"It's cardamom,\" she answered \"because I really love the taste of it. Sorry, I should have asked you before I used it, it might be something of an acquired taste.\"\n\n\"No, it's good,\" I answered \"just different. I could get used to it.\"\n\nI silently cursed the last sentence. \"I could get used to it\" as in, please, please let me come back for more. But then I realized that was really what I was there for, to ask her to please let me come back, to please let me in, to please let me love her and to please love me back. \n\n\"Mary\" I said in a whisper at the same time as she looked up and whispered \"Simon\".\n\nShe smiled and nodded for me to continue and I tried to reorganize my thoughts to get back on track, to follow my plan. It was simple. Tell her you love her and see what her reactions are.\n\n\"Mary,\" I tried once more, blurting out the first thing that came to my mind \"I want to sleep with you.\"\n\nHer eyes grew wider, but she seemed a whole lot less surprised by what I had said than I was. What the fuck? What happened to the speech I had prepared?\n\n\"Well,\" she answered slowly \"I'm not quite up to that yet, I'm afraid. It's not that I'm not interested, but perhaps I could ask for a rain check?\"\n\n\"No,\" I answered hearing a growing note of desperation in my own voice \"I meant that I like you and I want to be with you and...\"\n\n\"I like you too, Simon.\" she answered \"But the 'being' part has to be postponed until later, because drinking hot coco is about as much excitement as I can manage right now.\"\n\n\"No, you're not listening,\" I whispered in one last desperate attempt \"I want to sleep with you, as in hold you in my arms when we're sleeping. I want to lie naked in your arms, my skin pressed tightly against yours until it feels like your body is a part of mine and my body is a part of yours. When you're having those awful nightmares of yours I want to be able to reach you, to touch you, to calm you. I want to wake up next to you and whisper 'good morning' and 'I love you' to you, just so I get the chance to see you wake up with a smile on your face.\"\n\nHer smile turned into a surprised \"ohh\"-expression before her face crumbled, with her lips trembling and her eyes growing impossibly big, dark and blank. Before I knew it she was in my arms, sobbing and laughing and hanging on to my t-shirt as her body shook. And I just held her as I'd been wanting to do for so long.\n\nWhen the storm had passed she pulled away from me slightly, put her hands on my cheeks and looked me in the eyes shortly before she leaned in and kissed me softly on my mouth. She then looked at me again and gave me a wobbly smile.\n\n\"Simon,\" she whispered \"I want to sleep-sleep with you too. But I feel I have to warn you that when I'm up to it, I really, really want to fuck-sleep with you as well.\"\n\n\"That's completely okay by me,\" I answered with a wicked smile \"but then I feel I have to warn you that us golden boys are made of a rare and delicate metal that dents easily, so, be kind?\"\n\nShe laughed out loud again and it was the most beautiful sound I'd ever heard. It was a sound full of happiness, life and passion and it made my heart grow bigger and stronger. I pulled her into my arms again, held her and decided I would never let her go.\n\nWe slept in each other's arms that night, and it felt as right as I remembered. I knew I'd be walking around with that silly smile on my lips again when the morning came, and I decided that it wasn't silly; it wasn't silly at all. To quote a movie I'd been forced by two stubborn seven-year-olds to see far too many times - everything was awesome!\n\n* * * * *\n\nWe woke up late and I laughed as Simon jumped out of bed and got dressed just as fast as he could. He muttered that he had never been late in his whole life, and he wasn't going to be that day either. He ran out, but turned back and gave me a long kiss before he ran out again. And I lay back in bed and just swam in the happiness he had brought. I realized that what I felt right there and then was the feeling of absolute contentment. This time it wasn't the artificial feeling that you got when you'd managed to check all the boxes on one of your lists. This time it really was for real.\n\nI heard the door opening again and wondered if he'd forgotten anything.\n\n\"Simon?\" I shouted with a smile on my face \"did you forget something?\"\n\n\"Probably something unimportant,\" a harsh voice answered as a dark shape entered my bedroom \"like locking the door.\"\n\n\"You!\" I answered and swallowed the bitter taste of instant panic \"What do you want?\"\n\n\"I want a lot of things,\" he answered with a sharp laugh and waved a gun around as he spoke \"my life, my family, my reputation. But since I can't have that then all that I really want is the money you've stolen from me. And your death in the very near future.\"\n\n\"The money is gone,\" I answered and tried to sneak my hand up to one of the secret compartments in the bedframe.\n\n\"Well, if I can't have my money, then I'll gladly take yours. Be a good girl now and give your daddy all the money you've got.\" he answered in a disgustingly sweet purr.\n\n\"You should have done your homework a little bit better,\" I answered and tried to keep my voice as calm as I could \"then you would have known that all of my assets are tied up in all sorts of business ventures. And that none of them are easy to liquidate. I did have a car, but someone cut the brake wires on that one. Let me guess, your handiwork? Just like all of the rest of the car-related 'accidents' over the last twenty years or so?\"\n\n\"That's right, baby girl, and I have to say it was really bright of you to figure that out. What wasn't too bright was all those traces you left when you went looking for me. Sloppy work. The key is to never leave a trace.\" he answered and walked up to my bed, sat down beside me and pushed his gun to my forehead \"I need that money now, and you're getting it for me, I don't care what it takes!\"\n\n\"No,\" I answered \"there is no money. And you just thought you didn't leave traces. This time you can't hide from the truth. There is enough evidence to send you away for a very long time along with your son. Like father, like son.\"\n\n\"And you my dear daughter?\" he answered with a dark, insane-looking smile on his face \"Doesn't that mean that you're just like the rest of us?\"\n\n\"A very wise man recently told me that genes had nothing to do with anything.\" I said slowly and clearly \"I'm lucky that I didn't have to live in your shadow, listen to your words and follow your instructions.\"\n\n\"It's not too late, you know...\" he whispered \"I can still teach you a few more things, about pain and death at least. Don't you remember those lovely weeks we spent together? I remember how sweetly you cried and begged for your life then. And your lovely pale skin as it was painted red again and again. Did I ever tell you? Your blood has such a wonderful color...\"\n\n\"No,\" I answered with what seemed like the very last of my breaths \"no!\"\n\n\"Oh yes,\" he said roughly \"yes, my dear daughter, you are my most beautiful creation. There's just two tiny little problems. You've stolen my money and you're still alive. You say you can't help me with the first one, but you can't very well stop me from fixing the second one.\"\n\n\"No,\" a rough voice from just a few steps away said \"but I can! Step away from the bed and let go of the gun.\"\n\n\"Simon,\" I whispered \"don't!\"\n\n\"Yes Simon,\" the devil said with a mocking tone \"listen to your little whore. You wouldn't want to kill her father, would you?\"\n\nThe man from my nightmares turned towards Simon but kept holding his gun against my head. The hidden knife I'd been trying to get to was almost within my reach, but my body was frozen and my fingers were numb. Stupid memories, stupid fear, stupid shock, stupid brain, stupid automatic reactions, stupid weak body. I needed anger and ruthlessness, not useless whimpering.\n\n\"It's an interesting word that - father.\" Simon answered with a cold, dry voice \"I've never actually had one of those, but, I've always thought it's a particularly interesting subject, and I've read a lot about it. I think you would be classed as something closer to a 'sperm donor' than a 'father' actually, because of the total lack of involvement in the child's upbringing, financially and socially. In the case of children, you see, evidence shows that absence actually makes hearts grow less fond. And a heart that is less fond is, and I'm sure you can relate to this, always going to be a little bit colder. So tell me dear sperm donor, was it your father's absence that turned you into the man you are today or was it his presence?\"\n\nAnd that's when I finally understood what Simon was doing, pushing on several buttons at the same time, both mine and my father's. When my father turned the gun towards Simon I grabbed the knife and dug it into the closest part of the monster, his thigh. Just seconds later it was over, the gun was tossed in a corner of the room and dear old dad was on his stomach, Simon holding his arms and softly asking for something to tie him up with. When I opened one of the big drawers of the bed and dug out an assortment of restraints, Simon smiled a wide smile with a wicked tint and quickly decided on handcuffs, the standard police issue pair.\n\nAfter a few quick calls my apartment was soon filled with police officers and private security personnel. A couple of hours passed by in a blur until I could barely keep awake, and I was thankfully carried by Simon to my guestroom before I fell apart completely. I did sleep, even though I'd been sure that I would never be able to do so again. Perhaps it was the fact that I had seen the bogeyman get caught that kept the nightmares away, perhaps it was just plain exhaustion.",
        "A few hours of rest and a simple meal of soup and toast later we were sitting in the kitchen again, side by side, my shoulder softly brushing his arm.\n\n\"Why did you come back?\" I whispered and looked at him as he pushed his hands through his hair, clearly either nervous or frustrated.\n\n\"You're going to think I'm mad, but you've been sort of stuck inside of me for a while now... and to tell you the truth I could feel it, in here.\" he said softly and pointed to his chest and then to his head \"You were afraid, in danger. And I turned back, running, fast.\"\n\nI didn't know what to say. Another strange mental or spiritual connection, another close save. \n\n\"Thank you!\" I whispered to him and to whatever or whoever more was out there, who kept sending people to save me and who tried to teach me lessons about life and myself, some of which I was reluctantly beginning to understand. \n\nHe stood up, pulled me into his arms and held me, that new fragile me, close. And I breathed him in and slowly realized that he was also, as he had said it, inside of me. He looked, smelled, sounded and felt just right. He didn't calm me, but I was no longer sure I needed calming. He got me thinking in new paths by gently nudging me with a soft word here and there, gently enough that I almost didn't notice. Somehow it seemed like he got me, that he could follow the roads my thoughts travelled.\n\n\"I've got a song for you, you know.\" he said in a whisper and pulled me with him into the living room and down into the big, hardly ever used sofa. He made sure I landed in his lap where he cradled me close again and then he started singing.\n\n\"I will never let you fall\n\nI'll stand up with you forever\n\nI'll be there for you through it all\n\nEven if saving you sends me to heaven\"\n\n\"My guardian angel\" I whispered when he ended with a last sigh against my short hair. \n\nI pushed myself up and turned around so I could look him in the eyes properly, finally ending up straddling him. I put my hands on his shoulders and slowly took him in, my every sense concentrated on his being. He was tired but filled with energy; soft, golden energy. Perhaps I would tell him someday that he really was a golden boy. \n\n\"I've got a song for you too.\" I whispered before I started singing, my eyes fully focused on his face and his eyes.\n\n\"When I was younger I saw my daddy cry\n\nAnd curse at the wind.\n\nHe broke his own heart and I watched\n\nAs he tried to reassemble it.\n\nAnd my momma swore\n\nThat she would never let herself forget.\n\nAnd that was the day that I promised\n\nI'd never sing of love if it does not exist.\n\nBut darling,\n\nYou are the only exception.\n\nYou are the only exception.\n\nYou are the only exception.\n\nYou are the only exception.\"\n\nI whispered the last sentence and then I leaned in and kissed him, softly, gently and lovingly. The heat that spread in my body seemed to originate from my heart this time and I knew that my words were true. He was the exception. He was what dreams were made of. He was my lust, my love and my life.\n\n\"I love you, Simon.\" I whispered softly in his ear.\n\nIt seemed that the world shook then, as if my words started a shift in some delicate universal balance, but I realized it was my rock, my heart, my Simon that shook from the feelings he held inside.\n\n\"I love you too Mary,\" he whispered \"more than you will ever know.\"\n\nMy mind spent a couple of seconds analyzing the possibility of creating a formula to calculate the amount of love a person held for another person and then I heard Simon laugh softly. \n\n\"Don't overthink it.\" he whispered \"Just feel it, breathe it, live it!\"\n\nAnd then he kissed me until there were no thoughts left in my mind except one. Love lifts us up where we belong."
    ],
    "authorname": "SomeSayLove",
    "tags": [
        "love",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/razor-ch-10"
}