{
    "title": "Amazing Grace Ch. 17-18",
    "pages": [
        "CHAPTER SEVENTEEN\nHesitant\n\n\"I'd like to put a collar on you until you leave for work Monday morning.  Will you consent to that?\"\n\nMy forehead wrinkled in confusion.  \"You've put a collar on me before without asking.\"\n\n\"That was to serve a purpose for a short period of time.  To restrain you.  Asking for your consent wouldn't have been appropriate then.  This is a bit different.  I'm asking you to submit to me until Monday morning.\"\n\nThe thoughts in my mind raced around in meaningless circles.  If he would've just done it, I would've gone along with it.  But making a fuss over it like he was, I couldn't help but feel that I was agreeing to do something I might regret.  I froze and held my breath.\n\n\"Ask me questions if you're not sure.\"\n\nI released the air I was holding in my lungs.  \"What are you going to do to me?\"\n\nEthan glanced around the interior of the car and out the window into his garage.  It was clear that he wasn't going to answer my question directly.  \"You don't really want me to tell you.  You're not the kind of person who reads the last chapter of a good suspense novel first just to find out how it ends.  You like to immerse yourself in the story one chapter at a time and ride each wave without knowing exactly how it's going to fall.  Ask me another question.\"\n\nA couple of questions came to mind.  I wanted to ask if he was going to hurt me, but decided that there were a dozen ways he could answer that question that would leave me with no more clues as to what he had planned.  Anyway, we'd sort of covered that topic.  Several times.  \n\nMy mind just kept going back to one thing.  I couldn't figure out what the importance of collaring me was to him.\n\n\"How is this different than last weekend?  Or any other time that we've played.\"\n\nEthan smiled.  \"How is being engaged different than being married?\"\n\nIt's not, really ... except ...\"You can't just walk away from marriage.\"\n\n\"Right.\"\n\n\"By doing this I'm agreeing to ... what?  To do whatever you want until Monday morning?\"\n\n\"Yes.  Most definitely.\"\n\nI got the impression there was more than just that.  \"What else?\"\n\n\"You won't be able to leave the house.  There will be rules.  Consequences.  Rewards.  It'll be a scene that goes on for so long you're convinced it's real.\"\n\n\"But only until Monday morning?\"\n\n\"That's correct.  Monday morning I remove the collar and you go to work as usual.\"\n\nThe tiny smile on his lips made me suspicious.  I had a feeling that there would be nothing usual about it.  I squirmed to still the escalating throbbing between my thighs.  There was no way my body would let me refuse his proposal.  I nodded my assent.\n\n\"Good.  You remember how respectful Mimi was to John when they started their scene?\"  I nodded.  \"That's how I want you to be.  You don't need to call me Sir or anything like that.  I just want you to be respectful at all times.\"\n\nI nodded.  \"Okay.\"\n\n\"For the duration of this scene, there will be no questions unless I specify otherwise.  I'd really like for us to feel our way through the next two days and see how it goes.  We've already spent a lot of time talking.  I don't think we're going to get any closer to trusting each other at this point without just taking the plunge and doing it.  \n\n\"That doesn't mean silence, though.  I want to have conversations, just not about the scene, itself or the lifestyle.  And you should tell me when you're uncomfortable.  Hell, you can protest doing something if you do it nice enough.  I probably won't change my mind, but hey, you can give it a shot.  In the end, though what I really want you to do at all times is try.\"\n\nI waited for him to finish the sentence.  After a few seconds of silence I had to ask.  \"Try what?\"\n\n\"To complete every task I ask of you.  To give it your best effort even if you're not sure.  And most of all, try to let go of all those inner fears you have.  While you're wearing that collar, all choices are mine.  Just go with it.  You're a natural.\"\n\n\"I'll try, Ethan.  I promise.\"\n\n\"Do you want me to call you Kimber?\"\n\nI shook my head.  \"Not unless you want to call me that.\"\n\n\"That's a very pleasing answer, Grace.  That's the sort of behavior I'm looking for.  Do you have any questions for me?\"\n\n\"I'm not sure what I'm supposed to do.\"\n\n\"Whenever you're not sure, just sit or stand quietly near me.  But I doubt once we get started that there'll be a time when you don't know exactly what I expect of you.  Right now I'm going into the house.  I expect you to take off all your clothes and leave them here.  Come find me and wait.  I'll most likely be in the bedroom.\"\n\nEthan didn't pause to ask me if I understood or to check my reaction to his startling request.  Without hesitation, he reached for the door handle and slid out of the car.  He had disappeared into the house before I had moved a muscle.\n\nI knew that after being at John and Melissa's house and watching the other couples play that he would want to come home and engage in some sort of BDSM play.  The serious conversation we had on our ride home had gotten my mind off it, though, so I hadn't really thought about what we might do.  I didn't have any expectations, I didn't think.  If I did, they were nothing like this.\n\nI was still confused about what he was expecting from me.  Or maybe it's not that I don't know what he expects of me, it's that I don't know what he expects to accomplish.  Is this just play?  Or is he trying to test the waters with me?  It was a fair question.\n\nI pulled the door handle and pressed my shoulder against the car door until it started to swing open.  I slipped my shoes off before swinging my feet to the cold concrete floor.  I winced when they touched.  It was not only cold, but dirty.\n\nI removed my blouse and bra before standing up, then quickly slipped my skirt and panties down to my calves and stepped out of them.  I tossed them onto the passenger seat and closed the car door.  \n\nThe garage was dark and quiet.  The only light was coming through the side window from the street lamp the next block over.  It was almost eerie.  Everything about being naked in his garage felt strange.  And the fact that I was headed into his house to serve him felt even weirder.  What in the hell am I doing?\n\nBut my feet ignored the voice in my head and carried me over the threshold and right to the doorway of his bedroom.\n\nEthan's back was to me but he must've heard me approach because he simply pointed to the bed.  \"Sit here.\"\n\nI padded to the bed and lowered my bare bottom onto the comforter.  A tiny chill went through me as if I were sitting on ice rather than the cool fabric.  Ethan didn't notice.  He was rifling through the drawer, seemingly looking for something in particular.  To the best of my knowledge, he hadn't even so much as glanced at me.\n\nI felt uncomfortable.  I shifted in place trying to find a suitable position for my hands and feet.  I was naked.  In every sense of the word.  Utterly vulnerable and filled with uncertainty.  I struggled to contain the mounting anxiety.  It was urging me to run.\n\n\"Ethan?\"\n\n\"Yes, Grace?\"\n\n\"I'm scared.\"\n\nEthan turned toward me and smiled.  He lifted the collar off the pillow and then tilted my chin up so he could gently kiss me on the lips.  \"This will make you feel better.  Lift your hair up off your neck for me.\"\n\nI scooped my hair up with trembling fingers and moist palms and held the pile atop my crown as he encased my neck in leather.  There was no ceremony to it but I couldn't help but feel that it was a symbol of something.  \n\nI relaxed my shoulders and elongated my neck, lengthening my spine in a purely feminine gesture as he was buckling the collar in place.  I could feel myself starting to slip into the role of submissive even before he finished.  It was amazing how one simple prop could do that to me.  \n\n\"Mmm...beautiful.\"  Ethan palmed my breast for a brief moment before reaching for the wrist cuffs.  \n\nA huff escaped my lips before I could stop it.  His praise and his touch were like beacons guiding me through the sea of uncertainty.  I can't describe how incredibly comforting they were.\n\nHe attached both wrist and ankle cuffs on me and I completed my mental transformation to the role I was to take for the next two days.  Or so I thought, anyway.\n\n\"Is that better?\"\n\nI nodded.  I knew he was only asking to make a point.  He was too observant to miss the change in me.  \n\n\"I'm hungry.\"  \n\nEthan turned on his heel toward the bedroom doorway.  He didn't pull me with a leash or give me instructions, but I could feel the pull as strongly as if he did.  I followed him to the kitchen.\n\nEthan pulled a bag of Doritos from the cupboard, dropped it onto the counter and muscled the container open in a chorus of squeaks and crinkles that split the quiet kitchen in two.  He offered the open bag to me and I politely refused.  Without hesitation he shoved his hand into the sack and emerged with a handful, tossing the bag back onto the countertop.  He swiveled to lean against the counter as he plucked one chip at a time from the stash he held in his palm.  We stood there for several long moments with only the sound of his crunching between us.  \n\nI relaxed and leaned over to rest my elbows on the countertop.  Ethan's crunching noises lulled me into a mindless stupor.  I fiddled with my wrist cuffs, twirling the silver hoops around and around in their bindings with no single lucid thought in my conscious brain until out of nowhere a question popped into my head.\n\n\"Do all D/s or M/s relationships include whipping?\"\n\n\"No questions about the lifestyle right now.\"\n\nI straightened upright with wide eyes.  I realized that I'd broken the only rule he'd given me.  \"I forgot.  I'm sorry.\"\n\nEthan grinned and slid another chip between his lips.  A little deviousness lifted the corners of his eyes as he openly studied my appearance.  It was the first time he'd really looked at me since he'd placed the collar and cuffs on me.  I glanced down to his jeans at the unmistakable evidence of his arousal.  There was no question that even though he hadn't been looking at my nakedness, touching me, or talking about sex, he'd been obviously thinking about it.  A heated flush crawled over my skin and warmed me.  \n\nEthan's grin widened to a smile.  He stepped toward me, holding a chip up toward my mouth.  \n\n\"Open.\"  \n\nMy lips parted the instant he spoke, accepting the gift he offered me.  He paused with it partly in my mouth and I bit down to break it in pieces.  He then fed me the remainder of the triangular chip.\n\n\"One more.\"\n\nMy jaw dropped, opening my mouth like a little bird waiting to be fed.  Ethan inserted a partial chip and intently watched as I chewed and worked it over my tongue until it was ready to swallow.  He leaned toward me and held my chin steady as he licked the crumbs from the corners of my mouth.\n\nIt was such a simple thing, and yet so erotic.  My lips parted, inviting his tongue inside but he declined my offer.  It didn't feel like a refusal, more like that it just wasn't what he had planned at the moment.  Ethan smiled and caressed my bottom lip with his thumb.  My own tongue slithered out to tease the tip of it and was treated with the salty remnants there.  \n\nEthan's eyebrow raised.  He slipped his thumb between my lips and I swirled my tongue around it, licking off any remaining trace of nacho saltiness.  Then Ethan pushed it as far as he could inside my mouth.  My lips instinctively closed around the base of his thumb and my tongue pressed his digit against the roof of my mouth to gently suck on it.  With a gentle rhythm, Ethan eased his thumb out and back into my mouth repeatedly.\n\n\"I love the way this mouth feels.\"  \n\nEthan's tone and expression revealed his amusement.  He made it almost sound as if the mouth he was fucking with his thumb wasn't attached to a person; It was a separate thing. \n\n\"I could fuck it for hours and never grow tired of it.\"  \n\nJust then he removed his thumb and took a step backward.  He grasped my upper arms and positioned my back to the counter.  \n\n\"Can you lift yourself up onto the counter?\"\n\nI nodded and gripped the edge of the countertop to hoist my butt up onto it.  It was less than graceful but Ethan didn't seem to notice.  His pupils were dilated to black and he was licking his lips like a ravenous dog.  His focus was on something else entirely.  \n\nEthan brushed my hands off of my thighs.  \"Lean back and prop your elbows up onto that bar behind you.\"  He parted my thighs to move closer.  \"Keep your hands out of the way or I'll restrain them.\"\n\nI could feel his whole demeanor changing.  He moved and spoke with a single-minded purpose.  I had half a mind to use my safeword just to see if it worked to snap him out of the zone he appeared to have entered, but I quickly dismissed that idea.  I was fairly certain he would change his course and I also thought it would knock us back a few steps in the amount of trust that we'd built between us.  Not taking the use of a safeword seriously wasn't in my best interest.  \n\nEthan's palms smoothed the skin of my upper thighs as he raked over my nude body with his eyes.  That single act created gooseflesh across every inch of my skin.  I could feel my nipples hardening and my nether lips swelling and parting between my splayed thighs.  \n\n\"Are you horny, baby?\"\n\nI nodded and gulped for air.  I hadn't even realized that I'd been holding my breath.  \n\n\"I'm hungry for cunt.  I plan to eat your pussy until I've had my fill.\"\n\nHis gruff voice sent a fresh wave of shivers down my spine.  My entire body began to tremble in anticipation.  In that moment, in that tone of voice, he could've told me he was going to do something vile to me and it would've excited me.  There was just something so arousing about seeing him like that.  \n\nEthan's hands slid beneath my thighs, gripping the flesh just above the crook of my knee.  In a single swift motion he lifted my legs and wrenched my thighs open wide.  I gripped the bar behind me to steady my upper torso.  \n\nBefore I could even begin to worry about what was coming next, his mouth was on my sex.  His tongue delved forcefully through my folds and deep inside.  Ethan's entire face was buried in my flesh in a way that made me wonder how he was able to breathe.  But I wasn't able to hold that thought for long.  Or any thought, for that matter.  \n\nI let my head drop backward as my eyelids sealed shut.  Every ounce of my focus was on his lips and tongue.  After his initial ravenous assault, he slowed his movements to a languorous dance that worked its way from the bottom of my slit very methodically up to my clitoral hood.  Circling.  Lapping.  \n\nOccasionally he'd suck and nip at my flesh making a lewd slurping sound that just emphasized how wet I'd become.  Surprisingly, I didn't care.  I had no control over it and besides, it was what he wanted.  He reminded me of that with every grunt and groan he made as he sucked my juices down his throat.\n\nHis languid tongue grew stiffer and his activity became more vigorous.  He began focusing his attention on the area around my clitoris.  I held my breath as his tongue and lips worried my center mercilessly.  The sensation was amazing, like riding over the crest of a hill just as the roller coaster is about to fall out from beneath you.  Exquisite.  \n\nEthan suspended me there for what felt like eternity.  Just as my breathing would hitch in expectation of release, he'd change what he was doing.  Once.  Twice.  It got so I could envision my climax coming to greet me and then backing up just as I was reaching for it, much like a dream.  \n\nAfter this happened a few times I opened my eyes and looked down at him.  I expected to see a tired and frustrated face.  One look at his eyes revealed the truth.  He was playing me; keeping me on the edge of release for his own amusement.  \n\nI heaved a sigh that was mixed with a deep, frustrating moan.  \"Oh, please Ethan.  Please.\"\n\nI should've known that a couple of words wouldn't be enough to change his course.  It became clear to me what he wanted.  \n\n\"Please make me come.  Please, Ethan.  I'm begging you.\"\n\nThe glimmer in his eye told me I'd done the right thing.  His lips closed around my clitoral hood as he sucked the bundle of nerves into his mouth.  His tongue flicked forcefully over the sensitive tip in a steady rhythm that lifted me to an unbelievable crescendo.  My pelvis rocked in time with his ministrations.  I could feel myself unraveling a moment before the final explosion between my thighs.  I clawed the bar top and called out as all the sensations converged on that tiny spot at once.  \n\nI was spewing nonsensical iterations.  A series of monosyllabic words that were still hanging in the air moments after my orgasm was over.  It tickled me for some reason.  Or something did, I'm not sure what it was.  I suddenly found myself unable to stifle a giggle.  \n\nEthan lifted his head in curiosity.  He had every right to be alarmed and this fact just made me laugh harder.  Until tears were actually streaming down my face.\n\n\"I'm glad you find this amusing.\"\n\nI shook my head and waved my hand but was unable to say a word through the sudden fit of laughter.  I had no explanation for my behavior, but I knew I wasn't laughing at him.  Because what had just happened was nothing short of mind-blowing.  \n\nAs I peered down at his quizzical face through joyful tears, another feeling swept over me.  I love this man.  In that moment, as he patiently waited for me to gather my composure, I realized that I was completely and totally in love with Ethan.  Everything about him; the good and the bad.  Because they all made up this perfect, controlling, patient, stubborn man that at that very moment surely thought I'd lost my mind.\n\nIn a heartbeat, my behavior changed from laughter to weeping.\n\nEthan pulled my head to his shoulder and wrapped his arms around me.  It only lasted for a few seconds, leaving me panting with my cheek pressed firmly against his shoulder.  \n\n\"Are you finished?\"\n\nI nodded and sniffled, then lifted my finger to the tip of my nose to catch the droplet that was about to fall on his shoulder.  \n\nEthan reached over and yanked a paper towel from the roll.  I tried to take it from him but he swiftly tugged it from my reach.  Instead he held my wrist and dried my fingertip and then my cheeks and nose.  \n\n\"That was quite an outburst.\"\n\n\"I'm sorry...\"\n\n\"Stop.\"  My eyes widened at his interruption.  \"I don't want you to apologize to me for that.  It was spontaneous and unguarded.  Two things that I'd love to see more of from you.  I hate that you feel the need to apologize for the very thing I love most about you.\"\n\nI could feel the tears threatening to come again.  He almost said it.  God, if he could just love me back...  \n\nI sighed, delivering a tiny whimper with it.  Ethan searched my eyes for a sign of what was wrong.  First one, then the other; his eyes darting back and forth between mine.  He sucked in a breath to say something and then changed his mind.  My body began to tremble.  I couldn't tell if it was because I was cold, or because I was afraid of the intimacy we were sharing.  \n\n\"Wrap your legs around my back.  I'm going to get you warm.\"\n\nEthan carried me to his bed and placed me on my back, staying firmly on top of me.  He yanked the comforter over his back.  Before it came fully to rest on my lower legs which were still firmly clasped behind his back, his lips were on mine.  \n\nMy own tangy scent and flavor assaulted my senses.  Something about it awoke my passion.  Or maybe it was the way his tongue was dancing with mine, or the general way he smelled.  It could have been his rough jeans grinding against my bare sex, or the cotton fabric of his shirt as it brushed against my hard nipples.  ",
        "His hand slid from beneath me to cup my breast.  I released my ankles to give him better access.  Ethan pulled his lips from mine and smiled at me as his hand then slithered down my tummy and over my sex.  His finger slipped inside for a brief moment and then it was at my lips, invading my mouth before I realized what he was doing.  \n\nThe tanginess of it caught me by surprise.  I'd only just experienced a mild taste of it on his tongue.  This was stronger.  \n\nI was surprised by how much I didn't mind the flavor.  It didn't taste like anything else I'd ever tried.  I could see why he'd chosen the peach-flavored, buttered potato the previous week.  It was to demonstrate that it was a unique combination of sweet and tart.  \n\nI suckled his finger until there was nothing left of my juices on it.  He rewarded me with a sweet kiss after removing his finger.  \n\nAt some point during our exchange, my body warmed to a normal temperature and I stopped shivering.  Ethan tossed the covers off his back.  It was only then that I noticed that his forehead was beaded with sweat.  He'd been suffering beneath that blanket without a word or a single complaint.  And as he lifted himself up onto his knees, I realized the extent of his suffering.  The crotch of his pant was painfully tight due to his swollen cock.\n\nI licked my lips and reached out toward the button of his jeans.  Ethan shook his head.\n\n\"It's not how I want to get off.\"\n\nI swallowed hard.  I didn't know exactly what he was referring to, but I knew that whatever he had in mind, it wasn't going to be something we'd already done.  And we'd had sex in just about every way I could imagine, except maybe one.  \n\nEthan slid off the bed and lifted two leather straps from the end table.  I'd seen them lying there but had no idea what they were.  He slid the end of one of them beneath my thigh and buckled it tight around my leg.  There were silver rings dangling off two points of the leather strap.\n\n\"Thigh cuffs.\"\n\nHe attached the other side and stood to admire them for a few moments before clipping my wrist cuffs to the outer rings on each side.  \n\nEthan stood up and assisted me to a sitting position as he swung my legs over the side of the bed.  He then helped me stand.\n\n\"I like thigh cuffs because they allow the arms to be restrained in a comfortable position for long periods of time.  You better go to the bathroom now.\"\n\nThe reference to the timeframe he intended to restrain me didn't go unnoticed.  My knees wobbled as I took my first step toward the restroom.  \n\nI was about to kick the door shut behind me when something told me I'd better see if I could open it again.  I attempted to turn the doorknob but couldn't find a way to make it work.  I lifted my leg and could touch it, but my wrist was at the wrong angle to allow me to grasp and turn it.  He didn't say anything about not shutting doors.  My scalp prickled the way it does when I'm about to take a risk I know I shouldn't.  Just leave the door open and get it over with before he gets back.  I could hear him in the kitchen.  Hurry!\n\nI waddled to the toilet and squatted down to relieve my bladder.  The room was dimly lit from the lamp in the bedroom.  I kept a watchful eye on the doorway until the last sprinkle of urine hit the water.  Then I realized my next dilemma.  \n\nI tugged to try to get the thigh cuff to slide so I could use my hand to wipe.  It was no use.  I also quickly realized that the toilet paper was well out of reach.  I'd make a mess trying to get it.\n\n\"Need some help?\"\n\nMy head jerked upward.  He was standing in the doorway.  I swallowed hard.  My entire body broke out in a sweat.\n\nEthan flipped on the light and approached me.  He smoothed my hair out of my face, gently tucking the errant strands behind my ears.  I was still too embarrassed to look up at him.  Then his hands moved to the button of his jeans and proceeded to work it open, along with his zipper.  \n\nHis cock was a deep crimson color.  The smooth head of it gleamed in the stark florescent lighting of the bathroom.  I briefly glanced up at him, mostly to question his decision in timing.  I'd be glad to do this in the bedroom...  \n\nMy own thoughts were interrupted by his hand fisting my hair and twisting my neck so that my mouth was at just the right angle for him to shove his cock into it.  I gagged at the surprise intrusion.  My eyes instantly watered.  Ethan retreated for a moment but then repeated the same motion.  I was better prepared for it, but still sputtered.  He didn't seem to notice.  He continued to pump his hips at my mouth as he held my face still.  \n\nSeveral long strokes.  Deep into my mouth and partially down my throat.  I concentrated on my breathing, making sure to suck breath in through my nose each time he withdrew from my throat.  I started a mantra in my head.  Relax.  Breathe.  Relax.  Breathe.  \n\nEach stroke took longer.  He would remain in the back of my throat until I thought I couldn't stand it another second, then he would release.  Each time he lingered there a few seconds longer than the time before.  Each time the panic subsided just a bit.  Until finally there was no more panic.  No more resistance.  \n\nJust as suddenly as he'd invaded, he withdrew.  He swiftly tucked his still swollen cock into his jeans and carefully raised the zipper.  \n\nMy mind still numb from the rudimentary chant, I sat frozen in place as Ethan leaned over me to grasp a palmful of tissue.  My thighs parted for his hand as he reached between my legs to wipe me dry.  He then flushed the toilet and hooked his finger in the loop of my collar to direct me to stand and lead me from the bathroom.  It all happened without the least bit of resistance or hesitancy on my part.  \n\n\n\n\nCHAPTER EIGHTEEN\nChoices\n\nA cold bottle of water was sitting on the nightstand.  That was obviously what he'd been doing in the kitchen while I was debating on how to best handle my uncomfortable situation.  It wasn't the only thing that was different, though.  There was also a foam wedge in the middle of the bed.\n\n\"Climb up and lay face down.\"\n\nEthan helped me up onto the mattress.  It would've been difficult, if not impossible to do with my wrists attached to my thighs the way they were.  Bending over the cushion was equally challenging without freedom of hand movement, but Ethan also aided me there.  It was clear to me that he was experienced at handling a restrained individual.  The thought sent a sharp pang right to my heart, so I tried not to think about it.\n\nThe wedge wasn't exactly made of a soft foam, like I'd thought.  It was a bit firmer, but nonetheless amazingly comfortable.  When I settled down onto it and Ethan situated a pillow beneath my head, I immediately wanted to drift off to sleep.  I hadn't made note of the time, but I was certain it was at least 1:30am, if not later.\n\n\"Spread your knees so all your weight is resting on the wedge.\"\n\nI did as he asked and my arms came to rest on the mattress as I melt around the device.  I felt some tugging at my wrists and sleepily glanced down to notice that he was binding my wrists and thighs to straps that were coming from beneath the wedge.  My ankles were drawn wide and tight and held there by ropes that seemed to appear from the corners of the foot of the mattress.  \n\nI smiled weakly as I recalled thinking that his bed was so ordinary when I first saw it.  \n\n\"Are you comfortable, Grace?\"\n\nI nodded.  \"Yes.  I think I could sleep like this.\"\n\nEthan snickered.  \"If you fall asleep while my dick is still hard, I can't guarantee you'll like how you're woken up.\"\n\nIt suddenly occurred to me that he had me bound in a perfect position for anal sex.  My eyes popped open and I squirmed to get up.  It was then that I realized I could hardly move.  \n\n\"Don't panic, Grace.  I'm not going to leave your side.\"\n\nThat's not what I'm worried about.  \"Ethan, I'm not ready for that.\"\n\n\"Well then I guess you'd better stay awake.\"\n\nI nodded and swallowed.  All desire to sleep had suddenly vanished.\n\nEthan climbed over my leg so he was kneeling behind me.  I strained to look at him for a couple of seconds before giving up.  I could see that he was still wearing his jeans, but that was about it.  I started to see stars every time I twisted my neck toward his face.  I suspect the thick leather collar had something to do with that.\n\nEthan palmed both of my bare butt cheeks at the same time, kneading and squeezing them with a fair amount of force.  \n\n\"Your skin is so fucking white next to mine.  It makes me want to do bad things to it.\"\n\n\"Like what?\"\n\nA jarring slap across my buttocks made me cry out.  \"That wasn't very respectful.  Ask nicer.\"\n\n\"What sort of bad things do you want to do to me?  Sir.\"  I'd never thought I'd use that term, but when your ass is on the line, you'll say just about anything to protect it.\n\n\"Was that so hard?\"\n\n\"No.  No, sir.\"\n\nI felt his finger suddenly enter my vagina.  I heaved the air from my lungs in shock.  He continued to drill me with it for several silent moments before speaking again.  \"Your cunt is still very wet.  Are you hoping I'll fuck it?\"\n\nI nodded and whimpered.  \"Yes.\"\n\n\"I might do that.\"  Ethan removed his finger and then wiggled it against my anus.  \"What about here?\"\n\nI shook my head and shut my eyes tight.  I could feel his finger slipping inside.  \"Please, Ethan.\"\n\n\"Oh, don't be such a baby.  My finger has been here before.\"  \n\nHe pressed his digit past my anal ring and held it firmly inside me.  I found myself panting through the discomfort.  \n\n\"I have two objects hidden under the covers next to me.  I intend to use both on you, but only one of them tonight.  I think they're about equal in terms of difficulty.  For you, anyway.  Would you like to choose which one we'll play with tonight?\"\n\nI nodded.  Is this a trick?  Of course I want to pick.\n\nEthan removed his finger from my anus.  \"There's a catch.\"\n\nUh-oh.\n\n\"Whichever one you choose, you're going to have to beg for it.  And mean it.  If you don't, we'll just move onto the activity you didn't choose.  And then we'll do the one you did choose.  I'm not going to lie to you, this would be a challenge.  Especially given how tired you already are.  Do you still want to pick?\"\n\nI considered the choice before me.  I could let him do whichever thing he wanted to do without having to beg for it and running the risk of coming across as insincere.  I was pretty certain that one of my choices was going to be anal intercourse which was out of the question.  I just wasn't mentally prepared for it.  I wasn't sure of the other choice.  Anything is better, right?\n\n\"I ... I want to choose.\"\n\n\"You understand that I want to hear some serious, heartfelt pleading, right?\"\n\n\"I understand.\"\n\n\"Okay.  What I have next to me is a tube of lubricant and a riding crop.  Which one would you like to experiment with tonight?\"\n\nI don't know why I thought the choice was going to be easy.  I guess I thought he'd start me off with a gentler implement than a crop.  A flogger, maybe.  I was ready to beg for a flogger.  But, a crop?  The sound of it cutting through the air and the sharp crack as it landed on Mimi's behind was still fresh in my memory.  \n\nEthan's finger came to rest again on my puckered hole.  He applied gentle pressure.\n\n\"I've decided.  I'd like the crop, please.\"  Ethan's finger retreated from my hole and I released the breath I was holding.  \n\n\"You didn't even ask how many strokes.  You must have some serious hang-ups with anal.\"\n\nI silently recalled the last botched attempt with Robert.  It had been almost as painful as it was humiliating.  Ethan isn't Robert.  I knew it would probably be very different with Ethan, but I just wasn't in the right frame of mind at that moment.\n\n\"We'll talk more about it later.  I want to know what's behind this.\"\n\n\"Are you disappointed?\"\n\n\"Not at all, baby.\"\n\nI strained to get a look at his face.  I only caught a glimpse before I succumbed to the ache.  I needed to see his eyes and feel the reassurance.  I was sure he would know that, but if he did, he didn't accommodate my silent wish.  \n\nEthan set a black riding crop on the mattress next to me where I could see it.  The tip of it was a wide leather triangle, much like the first crop that John used on Mimi.  I stared at it and tried to summon up the courage to begin my begging.  Words completely evaded me.\n\nHe lifted the crop from the mattress and pulled back the tip of it with his free hand until the wand bent, then released it.  He repeated this action a couple of times so I could see it.  Then he swung the device over my arm and did it again.  This time the end landed against my skin.  \n\nI flinched and blinked a couple of times.  It startled me more than anything.  He repeated it again with no more force than the first one.  Again.  Again.  In the same spot.  \n\nI finally stopped flinching.  It didn't hurt in the least.  It made an alarming sound, but other than that, was hardly more unpleasant than if I were swatting a mosquito.  \n\nEthan moved to my back and repeated the same procedure.  Then to my opposite shoulder, my calves, my upper thighs, and the bottom of each foot.  The feet were more difficult to take because that area is more sensitive in general to me, but it still wasn't painful.  \n\nHe began to move around to random spots all over my body.  Each time flicking the end of the crop against my skin to create a loud noise with almost no bite.  He started caressing my skin with the instrument between swats.  When he reached my inner thighs I found myself arching my back just a bit.  He'd woken every nerve ending in my body, it seemed, and I couldn't help myself.  \n\nHe tapped my exposed sex with the end and I wanted to crawl out of my own skin.  I turned my face into the pillow and moaned.  The throbbing that ensued was positively unbearable.  I rocked my pelvis to try and stimulate myself to climax.  I was too horny to even ask myself how the hell I got there so fast.  \n\nEthan caressed my pussy with the end of the crop.  \"Don't you have something to say?\"\n\nI turned my head back to the side and gasped for air as I nodded.  \"Please, Ethan.  Sir.  Please whip me.  Harder.  Please.  Sir.\"\n\nI couldn't think of anything else to say.  My mind was now a blur from being so close to orgasm, and his teasing wasn't helping.  He made no indication whether or not that was acceptable.\n\n\"Please, sir.  Please whip me.  I beg you.  I want you to do it, I swear I do.\"\n\n\"I actually think you do.\"\n\n\"I do, I swear.\"\n\nWithout warning, Ethan lifted the crop and came down hard across my buttocks.  My toes curled and every muscle in my body tensed.  I clenched my jaw to keep from outright screaming.  It hurt like hell.  \n\nA few moments passed before I huffed the breath from my lungs and tentatively relaxed my muscles.  I panted hard, keeping my eyes shut.  \n\nAnother blow came unannounced.  I don't know why I was expecting him to warn me.  I didn't hold back the cuss word this time.  \"Fuck!\"  It spewed out between pants.  I heard Ethan chuckling behind me.  \n\nThe next swing stung probably just as much, but was easier for me to take.  I don't know if that was because I knew what to expect, or because my own endorphins were coming to the rescue.\n\nHe delivered two more swats.  I openly cursed through both of them and generally stopped caring about how much I was groaning in between.  \n\nEthan caressed my burning flesh with the crop and I bit my lip to keep from making any noise.  It stung almost as much as the blows.  Then he tossed the crop onto the mattress somewhere near my knee.  I could hear the rustling of material for a moment, then felt his fingers sliding along my slit.  \n\n\"You're even wetter than before.  You have any idea at all how fucking gorgeous your ass is right now?  How much it turns me on to mark you like that?\"\n\nThe head of Ethan's cock pressed against my opening and eased inside in one motion.  \n\n\"So.  Fucking.  Wet.\"\n\nHis fingers caressed up my back and hooked around my collar.  His face was in view for the first time since we started.  \n\n\"You are mine.\"  Ethan gave the collar a shake to emphasize the point and then thrust his hips forcefully into my backside.  \n\nI gulped and nodded.  His cock felt huge inside me.  The throbbing started up again and my entire body began trembling.  There was something so arousing about him staking his claim on me like that.  \n\n\"Fuck.\"  Ethan's eyes fell shut.  \"Your cunt is better at begging than you are, my slut.\"  \n\nEthan rocked his hips, still gripping the collar as if the bindings weren't enough to keep me in place.  His face contorted and he looked almost angry as he growled through a couple of strokes before stopping.  I realized when he stopped that he was fighting to keep from coming.  \n\nThe self control he was exhibiting, probably just to allow me time to climax, was enough to do it.  \"Ethan ...\"  My mouth opened wide but nothing came out.  I couldn't even tell him that I was about to come.\n\n\"That's it.  Yes.  Oh, fuck.\"\n\nEthan started slamming his hips into me, drilling me with his steel rod until I thought it might split me in two.  My own orgasm blossomed and held there in suspended bliss as he unloaded.  Wave after wave of release.  He'd held on for so long and this was his reward.  \n\nI found myself celebrating his release more than mine.  So thankful that I'd made it through the whipping and could do this for him.  My orgasm wouldn't have been possible without his.  Or maybe it would have been possible, but not nearly as sweet. \n\nThat's the last thing I remember before falling asleep."
    ],
    "authorname": "D_Lynn",
    "tags": [
        "collar",
        "role play",
        "cuffs",
        "thigh cuffs",
        "bondage",
        "crop",
        "whipping"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/amazing-grace-ch-17-18"
}