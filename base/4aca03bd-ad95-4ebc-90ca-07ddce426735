{
    "title": "UCLA to Big D Ch. 04",
    "pages": [
        "This story is posted on the Literotica website and the author does not give permission for it to be reposted or reprinted anywhere else without consent. There are 18 chapters to this saga and I strongly encourage you to read them continuously (at least the first time around). I think you will find it fun and funny at times, but don't be misled; this is not a warm and fuzzy romance novel. This story contains nefarious characters whose sole purpose is to get laid, regardless of whom they hurt in the process. The themes of non-consent, reluctance, and betrayal are woven throughout the varying topics of interracial sex, lesbian sex, and wife thieving. If these things appeal to you, I expect you will enjoy it very much, if they don't, you should read a different story. My hope is you enjoy reading it as much as I did writing it. I encourage you to stay with it all the way through the epilogue as just about everyone gets what is coming to them in the end... \n\n***** \n\nJenna was the first to wake, she looked over at the clock; it read 11:55 a.m. She couldn't believe it was that late as she carefully slid out from between the girls and tiptoed her way to the bathroom. She looked back and saw both Andrea and Kristen sleeping naked on top of the covers, Kristen's tight little ass and Andrea's shaved pussy and clit loop ring stared back at her. Jenna herself was nude as she entered the bathroom and closed the door, her big tits jiggled as she moved forward and looked apprehensively in the mirror. Little bags existed under her eyes and her wavy hair was a mess. The beautiful blonde still had her make-up on from the night before and dried wax and messy dessert residue was splattered on her tits and stomach. As she started to break away the wax from her tits, her jaw nearly hit her chest, she stared in shock at the number of hickeys on and around her areola. \n\nJenna felt uneasy as she turned on the water and climbed into the hot shower. The steaming water felt great on her sex fatigued body, but her mind was jumbled with concern and confusion as she contemplated how she would tell Ryan about her lesbian tryst with Andrea and Kristen. \n\nWhen she finished the shower, she dried, wrapped herself in a towel and went into her bedroom. Andrea and Kristen had arisen and were both in the kitchen making coffee. Tears flowed down Jenna's cheeks as the gravity of the situation sank in. She loved Ryan more than anything in the world and the thought of losing him was more than she could fathom. She cried for several minutes before Andrea knocked on her door and asked if she could come in. As her roommate entered her room, she suspected what was going through Jenna's mind as she moved quickly in her direction and squeezed her tightly. The pretty brunette said, \"I know you are worried about what Ryan is going to say, but I have an idea that you might want to consider.\" \n\nJenna leaned back and said, \"What could I possibly say to him to justify what I've done?\" \n\nAndrea responded, \"Jenna you are a very young and passionate girl. I'm sure that is a big part of what makes Ryan love you so much...'in addition to your big fucking incredible boobs',\" Andrea thought to herself before she continued, \"but you are also at a point where you should have the opportunity to experience things that won't necessarily be available to you later in life. Making love to other women is something that many college girls try in an attempt to validate their sexuality before moving onto other important steps in life.\" \n\nShe went on, \"You know you love boys, but what if you had never experienced what you did last night? You would probably go through life always wondering, what If? But what I'm really getting at, you might be a little surprised at his reaction when you tell him what happened.\" \n\n\"Are you kidding, he is going to hate me!\" Jenna cried. \n\n\"There is the possibility that will be the case, but most guys have a weird attraction to girl/girl sex and I'm betting that after he gets over the shock, he will want to actually learn more about your experience. Jenna, he knows you are not a full-on lesbian so he might be aroused to hear how you made love to two women!\" \n\nJenna listened incredulously. \"There she goes calling it 'making love' again...it was fucking...plain and simple!\" \n\nAndrea continued, \"Please listen to what I'm about to say with an open mind and don't hate me for suggesting it, but the best card you may still have to play is offering him to join you in having sex with me and/or Kristen!\" \n\n\"What?\" Jenna cried. \n\n\"If Ryan is into girl/girl sex like most guys, the only thing he would prefer to watching would be to participate in the action,\" Andrea explained excitedly. \n\n\"But what if he likes having sex with you guys more than me?\" Jenna questioned. \n\n\"Are you fucking kidding me? You are one of the sexiest, most passionate people I have ever met; there is no way he is going to want to leave you for one of us,\" exclaimed Andrea, \"besides, I am moving back to France in a month and Kristen is more interested in girls than boys anyway.\" \n\n\"What about Paulo?\" Jenna asked, not really caring about him, but more about Andrea. \n\n\"I don't think he would prefer Paulo over you either Jenna...just kidding. Did I not tell you? Paulo left this past Wednesday to spend the rest of the summer in Spain. He and I will undoubtedly hook up when I get back to France, but he's just a fuck buddy anyway.\" \n\nJenna felt relieved that Andrea's feelings for her cheating \"boyfriend\" were only superficial. \"So let me get this straight, you are suggesting that I tell Ryan that I had an affair with you and Kristen and while I'm sorry for doing it behind his back, I'm now wondering if he would be interested in joining-in for the next month before you leave for France and we move back to campus?\" Jenna asked. \n\n\"Yes, that's basically it,\" Andrea smiled, \"obviously we could set up ground rules that you and/or Ryan could stipulate, like neither of you could fuck me without the other one around. Although personally I hope you don't put that one in place,\" she joked. \n\nJenna got a small closed lip smile on her face before the concerned look returned, \"But what if he is totally opposed and hates me for even suggesting it?\" \n\n\"Something tells me that won't be the case, but even if it is, what other options do you have?\" \n\nJenna thought about it for a good long minute, \"What if he does agree to do it, then what?\" \n\n\"I'm not sure, but I would suggest lots of alcohol and a hot tub!\" Andrea laughed at her own joke and even Jenna giggled a little. Jenna knew Andrea was right, but there was just so much to contemplate. \"How would she even begin the conversation? Where should she go to tell him?\" Regardless, she had to decide quickly as she was to pick him up in a couple of hours. \n\nAfter some deep reflective thought, she made up her mind. \n\n***** \n\nJenna picked Ryan up at campus at 5:30 p.m. They hugged and kissed passionately as he lifted her off the ground. \"Damn you are a sight for sore eyes,\" Ryan exclaimed as he squeezed and kissed her. They drove and talked for the 30 minute ride back home. Ryan told her all about camp and his expectation he'd be moving up the depth chart this summer. As they talked, Ryan sensed that something was on Jenna's mind, but she was doing her best to hide it. When they got back to the house, Jenna asked if they could go for a walk on the beach. Ryan got a pit in his stomach. \n\nAs they walked barefoot on the beach Jenna got tears in her eyes. Ryan said, \"Jenna what's wrong?\" She began to sob uncontrollably. \"Jenna you are scaring me, what's wrong?\" \n\n\"Ryan...I've been unfaithful to you!\" \n\n\"What did you say? He shouted. He felt like a dagger had been thrust into his heart. \n\n\"I'm so sorry, it...it...just happened...\" she cried. \n\n\"What do you mean it just happened? Who is he, do I know him?\" \n\nJenna got very quiet before burying her face in her hands. \n\n\"Tell me Jenna!\" He yelled. \"Now!\" \n\n\"Ryan, I love you so much and never planned for this to happen...\" \n\nHe cut her off, \"Jenna who the fuck was it, tell me!\" \n\n\"...it...it wasn't a guy.\" She quietly admitted. \n\n\"What? What do you mean...if it wasn't a guy...you had sex with...a girl?\" \n\n\"Andrea...and Kristen.\" \n\n\"Huh? You had sex with both of them? ...But you're not gay Jenna. What the fuck?\" Ryan questioned shockingly. \n\n\"It just happened Ryan; I didn't mean for it to, but it did,\" she said quietly with more tears in her eyes. \n\n\"How long has this been going on Jenna? Have you been fucking her...I mean them...the whole time we've been living here?\" \n\n\"No, it just happened last night.\" His gorgeous girlfriend replied between sobs. \n\n\"Did those lesbos force you to do it?\" \n\n\"No, it happened before I really knew what was going on...but I didn't resist. It's no one's fault but mine.\" \n\nRyan walked towards the crashing waves as he tried to process what he'd just heard. He was dumbfounded. He never believed he'd be having a conversation with her about infidelity...and certainly not about her having sex with a girl, let alone two. Until today, he was sure this was the woman he would marry one day. Now he stood numbly, processing her admission of a lesbian affair...with two women no less. Two very hot women... \n\nThis was not news that most guys would ever be 'forced' to contemplate. Ryan now had so many thoughts racing through his mind. On one hand he was furious that she would do this behind his back; on the other, he found himself strangely aroused that she did. As he pictured the scene he found himself very turned-on. \n\nJenna walked up and put her hand on his shoulder. \"Jenna, I'm devastated that you would do something like this behind my back and I'm questioning whether I'll ever be able to trust you again!\" He turned and she immediately noticed the tent in his gym shorts. He noticed her staring at his crotch, \"But I have to admit, I am aroused by the admission that you did it Jenna. I know it sounds wrong, but I guess I'm not much different than most guys; the thought of my beautiful girlfriend having sex with two other sexy women is a real turn-on.\" Ryan admitted sheepishly. \n\nJenna's spirits rose, \"Andrea said you might respond that way Ryan. I didn't expect it, but I guess I could see why you feel that way,\" she said quietly but with a bit more hope in her tone. \"I want you to know that I was never attracted to girls before this week, but as I said before, it just happened. That said, I don't want to lose you and if you want us to move out of Santa Monica today, I will do whatever you want to do!\" She pleaded. \n\nHe thought about it some more and said, \"I want you to tell me how it happened and I want all the details. Afterwards I'll decide what I want to do.\" \n\nThey found a spot down by the water and sat down. \n\nJenna decided she would tell him the Reader's Digest version and hope she could avoid spilling all the spicy details. Jenna took a deep breath before she told him that after acing her test on Thursday she went home and was in a mood to celebrate. She made herself a drink and was looking for a movie to watch when she happened upon the adult video drawer. She lied and said she picked out a porn DVD but wasn't aware it contained a girl/girl scene, until it came on. \n\nJenna told him she had been very horny all week with him gone and admitted that she was masturbating to the guy/girl scenes with her vibrator just prior to Kristen knocking on the door. \n\nRyan's eyebrow raised as he eyed her with a suspicious, yet aroused glean regarding this surprising revelation. \"I didn't know she masturbated to porn when I wasn't around...\" \n\nJenna continued. She told him the video had just changed to a girl/girl scene when Kristen barged in and caught her watching it. \"I guess she naturally assumed I liked lesbian sex and came onto me. The circumstances led to us making out and eventually having sex on the couch.\" \n\nRyan was now hard as a rock. \n\n\"Then suddenly, Andrea walked in and caught us uh...making love. She and Kristen proceeded to seduce me and before I knew it, the three of us were fucking on the couch.\" Jenna opted not to tell him about the marathon fuckfest that lasted well into the morning. \n\nRyan wanted to hear more details but figured he could probe for more information later, \"So Jenna where do we go from here?\" He asked. \n\n\"That's up to you honey, I will do whatever you want, I just hope you can forgive me. I Love You So Much Ryan!\" She gushed. \n\n\"Are you now addicted to pussy?\" Her boyfriend asked mean-spiritedly. \n\nShe started to cry. \"No, I...I...don't know what to say, but I only care about my feelings for you!\" She stammered. \n\n\"You didn't really answer the question Jenna! Did you like it?\" \n\n\"Yes...I did enjoy making love to them, but not like I do with y...\" \n\nHe cut her off, \"Then you want to fuck them again?\" \n\n\"I wish you would stop talking like that Ryan, I don't want to do anything you don't want me to,\" she pleaded. \n\n\"What if I want you to have sex with them while I watch...or better yet, participate?\" He demanded. \n\n\"...If that's what you want,\" she responded in a demure tone. \n\nHe looked at her in amazement, \"What about Andrea's boyfriend Pablo or whatever his name is? Is he going to stand idly by and no care if his French slut girlfriend fucks another blonde chick?\" \n\n\"Paulo moved back to Spain last week, Andrea has no obligations.\" \n\n\"So the two of you talked about this already?\" \n\n\"She told me this morning that you might react this way. She said if this is what you and I want, she would do it.\" \n\n\"I bet the lesbians would look forward to another roll in the hay with you Jenna!\" He said sarcastically. \n\n\"Andrea thinks you are very handsome Ryan. I told her I didn't want her or Kristen to steal you away from me,\" Jenna smiled, \"she promised they wouldn't do that.\" \n\nRyan had to admit that the idea of consensual group sex with the three of them was not something he could possibly turn down. He turned to Jenna smiled and said, \"I think I'd be up for giving this a shot!\" \n\nJenna's eyes flashed and she beamed excitedly before throwing her arms around his shoulders, \"Let's go back to the house and I'll give you that surprise I promised!\" \n\nAndrea wasn't home when they got back to the house. Just as they got in the door, Jenna dropped to her knees and pulled down his shorts. Jenna slutily sucked his cock into her waiting mouth and slobbered and licked around the head before engulfing it to his balls. She didn't care whether Andrea walked in or not, she was on a mission to please him at this very moment. Jenna licked and sucked his balls and continued massaging them as she brought her mouth back up and swallowed him deeply. He hadn't had sex in a week and before long he was ready to pop. \n\n\"Ryan, I missed your cock so much, I can't wait for you to cum in my mouth!\" She pleaded. \n\n\"Fuck Jenna that feels so good, you're going to make me cum soon!\" \n\nShe kept sucking his dick and stroking the shaft faster and faster. She pulled her mouth away and asked, \"Is this what you want Andrea to do to you while I lick her horny pussy?\" \n\n\"Oh shit...yes Jenna I can't wait for that! But right now I can't hold out any longer! Here it comes...oh fuck...yeah...fuck!\" He blasted several spurts down her throat; she swallowed his entire load and hungrily cleaned off his dick with her swirling tongue. She rose to her feet and they hugged as she kissed along his neck, cheeks, and ears. \n\n\"Jenna, imagining you eating out Andrea is such a turn-on! I can't wait to see it.\" \n\n\"You shouldn't have to wait long; she should be home in a little while baby!\" Jenna said as she licked and breathed sexily into his ear. \"But right now let's go into the bedroom so I can give you your surprise!\" \n\n\"You mean I haven't gotten it already?\" He smiled in amazement. \n\nRyan grabbed a beer from the fridge before they hurried into the bedroom. Jenna said, \"Wait here, I'll be right back!\" She went into the bathroom where the new lingerie was already hanging behind the door. Jenna stripped naked and slipped on the hot little outfit before spraying perfume on her tits and down near her pussy. \n\nShe exited the bathroom just as Andrea walked in, her roommate approached her in the hallway, \"OMG, you look fucking hot!\" Andrea whispered. \"Does this mean he forgives you?\" She asked as she checked out Jenna's boobs hanging out of the sexy lingerie. \n\n\"Yes, you were right; he was turned on that I had sex with you and Kristen.\" Jenna whispered back. \n\n\"I knew it! Does he want to do a three or four-way?\" \n\n\"Yes he can't wait! Let's meet in the hot tub in about an hour or so.\" \n\n\"Hell yes, now I can't wait!\" Andrea exclaimed. As Jenna started to turn away, Andrea grabbed her shoulders and pulled her lips close and kissed her deeply on the mouth. She said, \"Don't fuck all the cum out of him, save some for me!\" \n\nJenna looked at her naughtily, \"You know I can't promise that!\" \n\nAndrea couldn't get over how fucking hot Jenna looked at the moment, \"Hey have I told you how sexy your fucking boobs are lately?\" \n\n\"Yeah, but it's been about 9 hours!\" Jenna replied playfully. They both giggled quietly. As Jenna turned away and reached for the door handle, Andrea grabbed her incredible ass. The busty blonde looked over her shoulder and seductively winked back, she then wiggled her tongue like she was eating pussy. \n\nAndrea's panties got wet instantly. \n\nAs Jenna entered the room, Ryan's eyes nearly bugged out of his head, his girlfriend looked hot as hell in the little pink negligee as her phenomenal tits were pushed together creating a look that defied comprehension. He loved lingerie on her and this was one of the best he'd seen, the silk stockings and garters accentuated the package and the little g-string barely covered her pussy mound. \n\nJenna put on erotic music and danced seductively for him, she turned and wiggled her ass as she erotically slid her middle finger along the crack. She turned again, slipped her fingers down the front of her panties and teasingly played with her pussy. Jenna pulled her slippery fingers out and brought them to his nose, Ryan excitedly inhaled the sweet scent of her heavenly pussy. Jenna's boyfriend hadn't tasted her in nearly a week and couldn't wait to bury his face between her legs. \n\nJenna climbed up on top and dry-humped his rock-hard dick as she purred in a sexy voice, \"Do you want me to tell you all the details of my unforgettable fuck with Andrea and Kristen?\" \n\n\"Yes, every kinky detail Jenna!\" He exclaimed with wide eyes. \n\n\"Are you sure you can handle it stud? It was intense; don't judge me if it's hard to hear.\" \n\n\"The only thing that's gonna be hard is my cock while you tell it!\" He replied anxiously. \n\nShe laughed before she told him Andrea would meet them in the hot tub in an hour, so he had to do his best not to pop before then. Ryan said he couldn't make any promises; that outcome was more up to her than him. She looked at him mischievously and said \"I'll try!\" She pulled his shorts down and licked slowly along his stone-hard shaft. \n\nRyan didn't see himself lasting ten minutes, let alone an hour... \n\nJenna began telling the story as she erotically stroked his shaft and wetly sucked the head in and out of her mouth, \"When Kristen barged in the door; I had thrown on only a long tee-shirt and was naked underneath. After she saw that I was watching the girl porn, she came up, peeled off my tee and rubbed my ass and boobs as we kissed. It was so erotic Ryan, I couldn't stop.\" \n\n\"You let her do it that easily?\" \n\n\"At first I tried to resist, but I was horny from the movie and she was very persistent. When she kissed me the first time it sent a chill up my spine and I couldn't hold out anymore.\" Jenna looked into his eyes as she stroked his wet dick. ",
        "\"Fuck Jenna, I can't believe it really happened. Envisioning the scene is killing me!\" \n\n\"It gets better baby. Kristen pushed me down on the couch, took off her clothes and played with herself in front of me. Ryan, you wouldn't believe how hot she looked! She then brought her pussy flavored fingers up and slipped them in my mouth.\" \n\n\"Oh shit Jenna, what'd you think? Did you lick em off?\" \n\n\"You know I've tasted mine lots of times, but she tasted so good...now I know why you like it so much Ryan! Anyway, by the time she climbed between my legs and started eating me out, I already knew I wanted to do the same to her!\" \n\nRyan was doing his best not to explode as his gorgeous lingerie-clad girlfriend conveyed the unbelievable story while stroking his saliva covered cock. \n\nJenna fluttered her tongue on the tip of his dick before continuing, \"Kristen's tongue felt so good! That little bitch teased me and kept bringing me close but wouldn't let me cum. Finally when I was almost ready to climax again, Andrea walked in. She returned a day earlier than anticipated and caught Kristen and I in the act.\" Jenna said with a naughty smile, \"I thought she would be mad, but instead they teamed up and fucked me together. \n\nRyan closed his eyes and tried to picture the scene. Jenna let a big saliva ball ooze through her lips onto the engorged head of his cock, she stroked her slippery spit around the head before continuing, \"They laid me on the couch; Andrea went down on me while Kristen sucked my tits. It felt so good Ryan; both of their mouths were so warm and wet, kind of like this!\" Jenna purred before taking his cock back between her lips and letting it slide down her throat. \n\n\"Jenna, slow down, I can't take much more of this. The vision of you and both of them is so fucking good!\" \n\nHis girlfriend's nose remained buried in his pubes for at least 30 seconds before she pulled her wet lips off of his cock and released her tits from the bustier. Ryan's jaw nearly dropped, he was stunned at the number of hickeys on her amazing tits. \"Holy shit Jenna, they attacked you!\" \n\n\"Kristen did most of those. But you were right; they both said they were looking at my boobs since that first day on the beach. I think they really liked them, Ryan you wouldn't believe how long they kissed and sucked on them.\" Jenna admitted sheepishly. \n\n\"I told you they were both checking out your amazing rack in that red bikini.\" Ryan said as if he'd been vindicated. \n\nJenna continued on with the story, \"Kristen kept sucking them, but Andrea's amazing tongue ring on my clit was too much for me to take and within minutes she made me climax very hard all over her face. I had one of those squirting ones...you know the one's you like. Andrea liked it too! She didn't stop and she and Kristen made me orgasm again within...like a minute. There was something about having both of them pleasure me at once...it was incredible Ryan!\" Jenna admitted as she stroked his wet cock while taking turns popping his nuts from between her sexy lips. \n\n\"Fuck Jenna, I'm so turned on. But I still can't believe you got all those hickeys in that short time!\" \n\n\"The night was just getting started baby,\" Jenna purred as she flicked her tongue on the tip of his dick, \"they fucked me in the shower and then I went down on Kristen. I made her cum in the hot tub!\" \n\n\"Jenna, I'm so fucking horny thinking about you eating pussy, what'd you think?\" \n\n\"Ryan, I can understand why you like it so much, there was something about the scent and the wetness that drove me kind of wild. I realized quickly that I really liked doing it! When Kristen came that first time, I had an orgasm of my own.\" \n\nHe was beside himself as she stroked his cock in long slow strokes. \n\nJenna went on, \"Then Kristen and I both went down on Andrea on one of the lounge chairs. She taste wonderful too, and she especially loved it when I rubbed my big hard nipples across her clit!\" \n\n\"Jenna please stop stroking me for a minute, I'm right on the edge!\" Ryan pleaded. \n\nJenna stood and sexily stripped off everything but her stockings. Ryan watched as she massaged her tits and ran her fingers through her patch. His beautiful girlfriend then straddled his chest with her pussy only inches from his face. He could smell her sex as she slowly rubbed her swollen lips and went on with the story, \"We got really drunk at dinner, and then for 'dessert' as they called it, they blindfolded and handcuffed me spread eagle to the posts on Jenna's bed.\" \n\nRyan stared at her in disbelief as she rubbed her clit in front of his face. He tried to imagine the incredible scene as he inhaled deeply and breathed in her scent. \n\n\"Those bitches then sprayed whip cream and chocolate sauce on my boobs and pussy and ate it off with strawberries. They even fed some of them to me.\" She smiled naughtily yet again. \n\n\"Holy shit!\" He cried. \n\n\"They weren't done yet Ryan; they poured hot wax onto my tits and then rubbed ice-cubes all over my body. Andrea pushed one inside my pussy and ate me out while Kristen mounted my face and we climaxed together! By then I knew what she liked; I licked her little pussy so good she begged me not to stop!\" \n\nRyan had a look of shear amazement on his face before Jenna slid forward and offered her pussy to him; he pressed his head forward, stuck out his tongue and got a little taste before she pulled away to his dismay. His nearly naked girlfriend moved back and slipped her sopping pussy lips on his rock-hard dick. \n\n\"Jenna, your pussy feels great, but you better not move or I'm going to explode!\" He urged between short breaths. \n\nAs she slowly fucked him from above, she rubbed her tits and went on with the story, \"When they finished eating me for dessert, they inserted a fucking remote control egg vibrator in my pussy, you know like the one I have, and made me watch a porn movie while they fucked in the other room.\" \n\n\"Shit Jenna, this just keeps getting better; you were like their personal fuck toy!\" \n\nJenna started humping up and down on his dick as her big tits bounced rhythmically. He reached for her mounds, \"When they came back into the room Ryan, Kristen sucked my tits while Andrea fucked me with a strap-on dildo!\" \n\n\"Oh fuck Jenna, this is such a turn-on, I can't take much more,\" he cried, \"she actually fucked you with a strap-on?\" \n\n\"Uh-huh!\" His girlfriend picked-up her rhythm and now fucked him at a frenzied pace as she finished telling him the story, \"They switched places and Kristen banged me doggy style with the strap-on while Andrea and I licked each other's pussy's in a sixty-nine. Kristen put these things called 'anal beads' in my butt, it felt so good when she pulled on them and fucked me at the same time. I loved it Ryan, finally both Andrea and I climaxed all over each other's faces!\" \n\n\"Oh my God Jenna...I can't take anymore...I'm going to blow!\" He clenched his teeth and lifted his hips as the biggest load he could remember erupted into her hot pussy. She leaned forward and rubbed her heaving soft mounds around his chest as he worked hard to catch his breath. He looked at her incredulously, \"Fuck Jenna, that was like a script from a porn movie. You didn't just dip your toe in the water, you did a fucking cannonball!\" \n\n\"You said you wouldn't be judgmental.\" \n\n\"I'm not judging you Jenna; it's just so much for me to process all at once. But that was such a turn-on to hear you tell it. I want to witness it for myself!\" \n\n\"Well, Andrea will be out to the hot tub in a little bit, you can get your first taste...literally.\" She giggled. \n\nThey kissed for several minutes before grabbing their towels and going out to the tub. They were fooling around nakedly in the tub when Andrea came out the door wrapped in her towel. As she neared the tub, Jenna said, \"Ryan and I have one rule in the tub...No Clothes Allowed!\" \n\n\"Whoever made up that rule is a genius,\" Andrea bragged before she confidently dropped her towel and looked down at them completely nude. She seductively slipped down into the dark water and rested on the other side. Jenna watched Ryan's reaction as he checked out Andrea's sexy body. \n\n\"Hi Ryan, things have changed a little since we last talked.\" Andrea said teasingly. \n\n\"Oh are you referring to my formerly faithful girlfriend having her first lesbian experience? Yeah that was a bit of a surprise,\" he said with a smile on his face. \n\n\"I hope you aren't mad at her, I will take full responsibility.\" \n\n\"Don't go there Andrea, I didn't object and as I've told him, I really liked it. And besides, Ryan loved hearing all the details while I fucked him in our room for the last hour,\" Jenna cooed as she made her way over to Andrea's side of the tub. \n\n\"By the looks of her tits, it seems like you and Kristen enjoyed yourselves as well,\" Ryan half-joked. \n\n\"Your girlfriend is one hot piece of ass Ryan and I can't wait to fuck her again...and you!\" Andrea said seductively as she and Jenna came face to face. Their lips came together and tongues extended as they kissed passionately in front of him. And though Ryan had already blasted two loads in the last couple of hours, seeing his beautiful 20-year-old girlfriend making out with a hot 25-year-old bi-sexual vixen had him like steel in seconds. \n\nJenna pulled away and said to Andrea loud enough for Ryan to hear, \"I've already milked two loads out of him, why don't you and I have a little fun and get him nice and horny again!\" \n\nThey continued swapping spit as Ryan stared in rapt fascination. \n\nAndrea spun Jenna around on her lap until they both faced Ryan, \"Your girlfriend has the nicest tits I've ever seen; I'm massaging them under the water as we speak. To answer your earlier question, Kristen and I did spend lots of time sucking, licking, and biting them last night,\" the bi-roommate bragged as she moved her mouth up and bit at Jenna's earlobe. Ryan could see Jenna's hands under the water holding Andrea's as they squeezed her submerged tits. \n\n\"Yeah, I'm kind of into them myself!\" Ryan retorted and they all laughed. \"Jenna told me all the kinky details; it sounds like I missed quite a night.\" \n\n\"We wish you could have been there, but you are here now and I'm looking forward to showing you all the things we did to her; I also can't wait to make up some new ones with you too!\" Andrea purred. \"Oh and by the way, this girl has some God-given pussy-licking talent; neither of us could believe it was her first time. Kristen and I are a couple of discerning snib-seasoned veterans; this hot little thing had us both begging for more!\" \n\nRyan looked at Jenna incredulously. Jenna returned his gaze and bit her lower lip cutely before she suddenly moaned out loud. \n\nAndrea had lowered one of her hands and was now rubbing circles around her clit. \"Right now I'm playing with your girlfriend's horny pussy. I can't wait to bury my tongue between her legs and make her squirt again!\" Andrea teased as Jenna turned her head and their tongues tangled outside of their mouths for Ryan to see. He was now beside himself, he couldn't remember his dick ever being harder than it was at the moment. \n\nJenna pulled away and looked over at him, \"Honey, are you getting aroused yet?\" \n\n\"Like steel!\" \n\nJenna moved away from Andrea and waded over to Ryan. She stroked his cock and kissed him wetly. She whispered in his ear, \"I want to see you and Andrea together.\" She reached back and grabbed Andrea's hand and pulled her to them. She kissed her again and said, \"I want you and my boyfriend to fuck!\" \n\nAndrea didn't need to be asked twice as she moved up and straddled Ryan's lap with both her legs bent at the knees and her feet on the bench seat. Jenna's muscular boyfriend pulled her close and their mouths met in an intense kiss as Andrea thrust her horny pussy up against his rock-hard cock. She flicked her tongue ring around in his mouth. \n\nJenna came up behind Andrea, reached around and massaged her perky C-cups. The blonde squeezed her roommates taught nipples and kissed along the back of her neck. Jenna could feel Andrea's hips thrusting against Ryan's dick as she lowered one of her hands and slid it along Andrea's asshole. The two new lovers ground hornily against each other and Jenna couldn't believe how turned-on she was to watch them. She rubbed her middle finger on and around Andrea's hole as her roommate kept thrusting her hips forward. Jenna put her full hand on Andrea's butt with her fingers still on her asshole and pushed Andrea's ass against Ryan's cock. Andrea moaned out loud before Jenna then moved her hand lower and massaged her boyfriend's balls. \n\n\"Isn't she a good kisser Ryan? I love her tongue ring, don't you?\" \n\nRyan kept making out with Andrea as he reached up and played with her tits. \"Uh-huh,\" was all Jenna heard in response. \n\nAndrea pulled away, \"Oh Ryan you're good at that, I should have known you would be as you have the best set to practice on, why don't we take this in the house, I have so much I want to do with both of you!\" \n\nThey quickly exited the tub and dried each other off before going into the house. Once inside Andrea's room, the girls dropped to their knees and took turns sucking Ryan off. He loved the sensation of being blown by two women for the first time in his life. Andrea's style was different than Jenna's and her tongue ring added to his sensation as she flicked it across the tip of his cock and the soft fleshy sensitive skin under the head. Andrea and Jenna paused occasionally to make out which only added to Ryan's burning arousal. \n\n\"He's already cum a couple of times, let's have a little fun while he watches,\" Jenna suggested teasingly to Andrea. Jenna slowly pushed the French girl down on the bed, climbed on top and straddled her stomach. The horny blonde reached down and massaged Andrea's sweet boobs before leaning forward and taking her hard nipples between her lips. She lightly bit them which elicited a satisfied moan from the older girl. \n\nRyan leaned back and watched the action while slowly stroking his cock; seeing his beautiful girlfriend seduce the hot 25-year-old drove him wild. Jenna scooted forward until her pussy mound was only inches from Andrea's lips, \"Do you want to eat me with your hot mouth you French bitch?\" \n\n\"Slide forward and give me that sweet cunt and I'll show your boyfriend how you like your pussy licked by a girl!\" Andrea confidently purred. \n\nJenna looked over tantalizingly at her boyfriend as she moved her hips forward while Andrea extended her long tongue and maneuvered it up and down Jenna's sweet slit in slow wet licks. Jenna moaned and purred to Ryan, \"She has a really nice tongue baby; I love the way she licks and sucks it!\" \n\nHe watched in awe as Jenna moaned again and reached up and played with her own rock-hard nipples as the bi-sexual vixen tongue fucked his stunning girlfriend. Ryan kept stroking his cock as Jenna's moans became more pronounced. Andrea licked her clit with her experienced tongue as Jenna slid her hips slowly forward and back across her face. \n\n\"Oh Andrea, I could never get tired of you eating my pussy, how did you learn how to do that so well...umph?\" \n\nAndrea's muffled response, \"Lots of practice baby, unlike you I wasn't a natural from day one!\" \n\nRyan couldn't take being on the sidelines any longer. The tall towheaded boyfriend stood on the bed and fed his hard cock to his girlfriend; she slobbered over the head and sucked it into her beautiful waiting mouth. Her sweet lips and tongue had Ryan groaning within minutes. Andrea reached up and played with Ryan's dangling balls from below before she moved her hand and fingered his asshole, \"Yeah girls, I could get used to this!\" He panted with a big grin on his face. \n\nJenna was now humping Andrea's face at a frenzied pace. She pulled Ryan's wet cock from her mouth and stroked it frantically as she begged, \"Andrea, please keep doing it just like that...it feels so good!\" Ryan could tell his girlfriend was lost in the throes of an approaching climax as she stroked and licked his cock with a look of ecstasy on her gorgeous face; suddenly she grunted, thrust her hips forward and exploded on her roommate's pretty face. Jenna hungrily took Ryan's dick back in her mouth and sucked him absently as she breathlessly came down from her orgasm. \n\nMoments later she pulled it out from between her lips and said, \"I want to watch the two of you fuck!\" Jenna got up and pulled Andrea to her knees. She brought her lips to Andrea's and kissed her enthusiastically as she sucked her juices from Andrea's tongue. Jenna then turned and shoved her tongue in Ryan's mouth and swirled it around. \n\n\"Fuck Jenna, I can taste your hot pussy on your tongue!\" \n\nShe pulled away and moved behind Andrea. Jenna reached up and rubbed Andrea's beautiful tits from behind and said to Ryan, \"Come fuck this sexy woman Ryan!\" Ryan moved forward as he and Andrea kissed deeply. They made out as Jenna played with Andrea's nipples from behind. \n\nSuddenly Andrea announced, \"I want you to fuck me doggy stud!\" She got down on all fours, put her head down and waved her sweet ass in his direction. Jenna moved off to the side so she could watch her boyfriend fuck her horny roommate. He positioned himself behind her and rubbed his cock up and down her dripping slit for a long minute before she screamed, \"Don't make me beg...put it in my hole now!\" \n\nJenna secretly wondered if Ryan would satisfy her after Paulo. \n\nRyan brought the head to her wet opening and shoved it in. The head popped inside and Andrea gasped. \"Stuff the rest in there and fuck the shit out of me!\" He did exactly that and buried himself to his balls on the 2nd thrust. She wasn't nearly as tight as Jenna, but Ryan loved the feeling of having his cock in an unfamiliar pussy. \n\nJenna watched as they fucked enthusiastically for several minutes, she could tell Ryan was really enjoying this, as was Andrea. Ryan had learned how to please a woman from all the fucking they had done and he soon had Andrea moaning and pushing back into his thrusts. Ryan was so aroused and wasn't experiencing any of the sexual shortcomings that he had in the hot tub the previous week. \n\nJenna lowered her hand and played with her roommate's dripping clit as she breathlessly watched the sex show in front of her. Andrea looked over and said, \"Jenna your boyfriend is fucking me so good...do you mind if he sticks his cock in my ass!\" Jenna was completely unprepared for that question and stared back at her roommate with a blank look on her face. Jenna looked up at Ryan who had a big grin on his, he nodded at her like, \"Please say you don't mind!\" \n\nJenna practically shouted, \"Go for it!\" \n\nAndrea instructed Jenna to get the lubrication jelly from the bathroom; she ran in and grabbed it. \"Come over here and rub some on my asshole and on your boyfriend's nice cock!\" Andrea directed. Jenna complied and watched with fascination as Ryan rubbed his jell-covered head on her puckered asshole. Her boyfriend spread Andrea's cheeks and pushed hard until the head popped inside. Andrea moaned in approval, \"That a boy, shove in my butt!\" Ryan proceeded to work inch after inch inside until he was buried to his balls, he was in fucking heaven. \n\nJenna watched mesmerized as she witnessed Ryan work his rock-hard cock in and out of her roommate's butt. She looked down at Andrea and asked, \"Doesn't it hurt?\" \n\n\"Are you kidding me Jenna, it feels so good, haven't you done it before?\" \n\n\"No, I've always been too scared.\" \n\n\"You have to try it, I guarantee you will love it...but not right now, your stud boyfriend has to ass-fuck me first!\" Ryan couldn't believe the tightness as he pounded away at Andrea's ass. \n\n\"How does it feel Ryan?\" Jenna asked as she stood on the bed behind him with her big soft tits pressing against both sides of his neck and watched from over his shoulder. ",
        "\"It feels fucking tight Jenna...so fucking good...uhn!\" \n\nRyan butt-fucked Andrea for several minutes as Jenna looked on excitedly. Ryan reached down and played with Andrea's clit as he pounded her from behind. Andrea groaned and said, \"Yeah Ryan that feels fucking great...fuck me in the ass stud...you are going to make me cum!\" \n\n\"Yes baby give it to her, make her cum!\" Jenna whispered in his ear. That was all the encouragement he needed as he increased his pace and within minutes they both came together in a moaning grunting climax of anal sex. \n\nJenna was dripping wet herself as she watched Ryan pull his dick out of Andrea's ass and his cum trickle out of her puckered purple hole. Ryan collapsed on the bed with a big smile on his face. Andrea crawled over to Jenna and pulled her down until her head rested back on the pillows. The still horny French girl climbed on top of the big-titted blonde and started sucking and licking her swollen breasts. \"What did you think about your boyfriend fucking me in the ass? It felt so good; I can't believe you haven't tried it!\" Andrea asked excitedly between licks of Jenna's rigid nipples. \n\n\"It was amazingly erotic but I'm still very nervous to try it. I still can't believe it doesn't hurt!\" Jenna replied excitedly as she moved her fingers through her roommate's hair. \n\n\"I've seen how those beads, a tongue and a finger in your ass get you off. I guarantee his cock will feel 10 times better than those!\" Andrea smiled. \"But before he gets a chance to fuck you in the ass, I want to eat that sweet horny pussy of yours again.\" \n\nAndrea brought Jenna's incredible tits together with her hands and sucked on her sensitive nipples before kissing and licking her way down Jenna's stomach to her pussy mound. She tangled her fingers in Jenna's little pubic patch as she licked around Jenna's pussy before Jenna begged her to \"Please lick and suck my clit Andrea!\" \n\nRyan watched intently as Andrea teased his beautiful girlfriend, his cock was getting hard yet again. \n\nAndrea aggressively shifted around and pushed her pussy into Jenna's face, she now had her hot roommate in a sixty-nine. She quickly rolled Jenna on top of her and buried her tongue ring in Jenna's slit as the busty blonde moaned out loud before lowering her own lips down to suck on Andrea's pussy. Ryan watched in awe as he watched Jenna confidently dip her tongue in pussy for the first time. He couldn't believe how naturally she took to it as her tongue darted and dipped expertly...\"Wow Andrea wasn't kidding, that's fucking textbook!\" \n\nThe girls mouth-fucked each other before Andrea pulled away and shouted, \"Stud it's time to fuck your hot girlfriend's virgin ass.\" \n\nJenna moaned from the pleasure Andrea was giving her and said, \"I'm ready Ryan, but we have to go slow.\" \n\nJenna's beautiful ass looked so inviting, her boyfriend couldn't wait to finally fuck her in it. Ryan coated his hard cock with KY and rubbed a couple of finger-full's on Jenna's asshole. Ryan inserted the first digit in her butt and wiggled it around, she moaned loudly. He thrust it in and out of her asshole repeatedly as she pulled her wet face from between Andrea's legs and told him again she was ready. Her horny boyfriend pulled his gooey finger out and brought his purple cock-head to her virgin asshole and rubbed it around before he pushed firmly and the head popped inside. Jenna screamed and cried, \"I thought I asked you to go slow.\" \n\n\"That's only the head Jenna; I promise I'll go slowly the rest of the way.\" Ryan breathed heavily with a satisfied smile plastered on his face. \n\nJenna was in a strange place. The unbelievable pleasure she was experiencing from Andrea's tongue on her clit was being offset by the discomfort she felt in her ass. But Ryan was extremely gentle and moved very slowly as he knew this might be the only chance he would have to convince her that anal sex could be great for her. Her thankful boyfriend eventually worked all 6+ inches of his cock into her heavenly tight asshole. \n\nRyan remained still to let her get used to it as Andrea worked her magic on Jenna's clit. Ryan very slowly started moving his cock in and out and was instantly amazed that her backside hole felt significantly tighter than her virgin pussy had a couple of years earlier. Andrea could sense that Jenna was very slowly starting to respond to Ryan's cock in her butt. Her roommate's breath began to quicken and small moans escaped from her lips between licks of Andrea's dripping pussy. \n\nRyan continued to slowly slide his dick into her beautiful ass; he reached down and massaged her tight round cheeks. Jenna moaned and began moving her pelvis back into him as she attempted to maximize the pleasure Andrea was giving her as well as the unique sensation that Ryan's cock was creating in her butt. \"Ryan, it feels so different than when you fuck my pussy, but I'm starting to feel what Andrea was talking about...I'm starting to uh...like it...umph!\" \n\nRyan couldn't have been happier to hear those words spewing from his beautiful girlfriend's mouth, he wasn't sure he'd ever been more sexually aroused than at this moment. Here he was having three-way sex with two beautiful women, but more importantly he was fucking his sexy girlfriend's ass for the first time and she was enjoying it. Ryan was hopeful this day would come as Jenna had always clearly liked having her hole licked and having a finger in there, but she'd never consented to his cock...until this wonderful moment! He also rationalized quickly that it certainly wasn't hurting his cause that their pussy-eating nympho roommate was munching on his girlfriend's clit as he butt-fucked her for the first time. \n\nAndrea reached up and pulled Ryan's dick out of Jenna's butt and proceeded to suck it slutishly into her mouth. \"Jenna, your ass tastes so good on your boyfriends cock!\" She shouted before she re-positioned it back near Jenna's hole and Ryan shoved it in more aggressively this time. Jenna shrieked, but within seconds was moaning and moving her hips around to meet Ryan's quickening thrusts again. \n\nAndrea stopped eating Jenna's pussy and watched as Ryan's balls bounced off of her puffy lips. Andrea wanted to see if Jenna would orgasm from only Ryan's ass-fucking. The French girl raised her head and licked Ryan's balls as they swung back and forth and bounced off Jenna's pussy lips. Ryan quickly whimpered, \"Andrea that feels fucking great, but if you don't stop I'm going to cum too fast!\" \n\nAndrea, herself was nearing climax as Jenna's tongue was doing a number on her swollen clit. \"Fuck Jenna, in two days I'm already addicted to your wet lips and hot little tongue...don't stop, you're going to make me cum!\" \n\nJenna took control of the situation and screamed, \"No one stop...I'm cumming too!\" She clamped her lips back around Andrea's clit and sucked and licked her hard bud. As if in a choreographed porn flick, the three of them climaxed together in a moaning, gasping mass of dirty wild sex. A deluge of juice squirted from Jenna's pussy as Ryan shot his load into her virgin butt. Andrea took the brunt of Jenna's cum shower, but she didn't mind as her own juice flowed down her butt crack as her hips twitched and shook from the pleasure bestowed by her new sexy girl lover. \n\nThey collapsed together on the bed. Ryan lay in the middle in the big wet spot as both girls nuzzled up close on opposite sides. \n\nAndrea lightened the mood. \"I'm sure glad you talked me into renting that room to you that first day Jenna!\" They all laughed. \"Actually I have to admit Jenna, I wanted to get in your pants from day 1, I was going to rent you the room unless Ryan had been an axe-murderer! And even then, I might have thought twice once I saw your incredible boobs.\" They all laughed again. She went on, \"It was an added bonus that your boyfriend was really cute too!\" She beamed as she rubbed his chest and looked over at Jenna. \n\n\"So, what'd you think?\" Andrea quizzically asked her beautiful roommate. \n\n\"About what, oh you mean about anal sex?\" Jenna asked cutely. \n\n\"No, about the temperature of the hot tub...of course I meant about anal sex you goofball!\" \n\n\"Do you want the truth?\" \n\nRyan got a pit in his stomach as he was suddenly nervous she hadn't liked it as much as he assumed. \n\n\"It was FUCKING AWESOME! It hurt a little bit, but it was such a different sensation...but I uh...really liked it! I can't believe I hadn't tried it before now as I've always been curious, but scared. But you both know I get pretty turned on when you touch my butt...I guess it's not a big surprise that I really liked it. The pleasure I got from those anal bead things with you and Kristen last night encouraged me to try it, thanks to both of you for convincing me to finally do it tonight. She looked at Andrea and said, \"I certainly didn't mind having your incredible tongue on my clit as I tried it for the first time.\" \n\n\"I won't mind if you want me to have my tongue on your clit for times 2, 3, &amp; 4 either!\" Andrea joked again. \n\n\"Deal,\" Jenna giggled and they all laughed again. \n\n\"Okay Ryan, now that we've crossed this bridge, I guess it's time we made some ground rules for sex with our roommate!\" Jenna said playfully as she lightly tugged on one of his nipples. \n\nAndrea interrupted and offered, \"Can I make one suggestion...how about often and a lot!\" \n\n\"That's two suggestions!\" Jenna joked. \n\n\"Then let me make two fucking suggestions bitch!\" Andrea kidded and they all laughed again. \n\n\"What do you want Jenna?\" Ryan asked. \n\n\"I'm the one who was unfaithful to you with Andrea and Kristen; I don't want to be the one to say what we should do. I want this to be your decision.\" She urged. \n\n\"Well we know we have only a month and it's pretty clear we both enjoy sex with Andrea so I don't think we should put any restrictions on it! I know I personally enjoy fucking both of you at the same time, so I vote we do lots of that!\" He said with a smile. \n\n\"Duh, that's big of you!\" Jenna mocked and kissed him on the lips. \n\n\"Okay, I made the first rule; you get to make the next one.\" \n\n\"No secrets, we tell each other everything. I am okay with you having sex with Andrea when I'm not home, but I want you to tell me all the details!\" She said. \"Are you okay if I have sex with her when you aren't home?\" \n\nAndrea secretly crossed her fingers behind her back. \n\n\"Yeah I am, as long as we keep the 'no secrets' rule in effect.\" Ryan knew he would be away from the house more than Jenna as he had weight training at campus each day in addition to his summer school work, but in spite of her unfaithfulness from his previous time away, he trusted her and believed that Jenna would honestly share the details. \n\nHe probably should have been more skeptical... \n\nAndrea felt her pussy moisten. \n\n\"What about Kristen?\" Jenna asked. \n\n\"Is it my turn to make a rule?\" Ryan replied with a grin. \"I have to admit that I think she is pretty hot and I vote strongly that we fuck her as much as possible!\" \n\nJenna giggled and playfully slapped his chest. \"You always like the little ones and redheads don't you stud!\" \n\nAndrea finally spoke up, \"Sorry to disappoint you big boy, but she's a little more into girls than boys. She would suck your dick or let you eat her pussy, but it would probably take an orgy for her to fuck you.\" \n\n\"Then we should have an orgy soon!\" \n\n\"Pervert!\" Jenna exclaimed with a smile. \n\nThey all felt a strong sense of excitement about what the next month would bring. But after the previous night's marathon sex and tonight's threesome, Jenna and Andrea were exhausted. Ryan was as well from a long week of practice. They all went into Jenna and Ryan's bed to escape the wet sheets, the three of them fell asleep quickly wrapped in each other's arms. \n\n***** \n\nThe following morning they enjoyed a Saturday morning three-way before going down to the beach. \n\nThat night they invited Kristen over for a barbecue and sex party. They all got fucked up drinking margaritas and shots. There was lots of touching and kissing as they listened to music, danced, and watched porn flicks. \n\nRyan couldn't believe his good fortune. \"What did I do to deserve group sex with these three?\" He was having trouble containing his excitement about what the next month would bring. As he watched Jenna flirt, kiss, and touch the other girls, he was again reminded how lucky he was to have her. \n\nA little while later as Ryan stood outside at the barbecue, Kristen wandered out to see him. She walked up close and said, \"Rumor has it you want to fuck me.\" \n\nHe stammered as he struggled to come up with the proper response. \n\n\"Well the feeling is mutual!\" The hot little blonde reached out and grabbed his cock through his shorts as she pushed her chest into his stomach. He was nearly a foot taller than her and could feel her rock-hard nipples poking into his stomach. Kristen looked up at him with a horny look on her face and said, \"How about we get to know each other better by me sucking your cock!\" \n\nRyan Nielsen couldn't believe this was happening. This 24-year-old spinner wanted to suck his dick and his beautiful girlfriend was right inside. He knew the ground rules gave him the carte blanche to agree, but he was still feeling a little guilty as he pictured Jenna walking outside and catching them in the act. \n\n\"Would it make you feel any less guilty if I told you your girlfriend has her face buried between Andrea's legs on the couch at this very moment?\" Kristen asked naughtily. \n\n\"Are you fucking kidding me? Well in that case...\" He reached down, grabbed Kristen's ass cheeks with both hands and pulled her tight against his now-hard dick. Ryan bent down and kissed her hard on the lips as she stood on her toes, reached around his shoulders and thrust her pussy against his cock. The horny little blonde dry-humped him as she aggressively kissed him back. \n\nAfter a couple of minutes she pulled away, grabbed his hand and led him over to one of the outdoor chairs. Before he sat, she kneeled down, unbuttoned his shorts and pulled them and his boxers down to his ankles. She pushed him back down on the chair and grabbed his cock with her little hand; the former cheerleader jacked him off as she brought her mouth up and wetly sucked on the head. Kristen slobbered all over his cock and used her hand to stroke the slippery shaft, \"You have a nice cock Ryan; don't let Andrea make you think I don't like sex with guys, I think she tells people that so she can keep me for herself. But she does know how much I like it with girls, and I have to admit, I can't wait to do it again with your smokin' girlfriend!\" \n\nMeanwhile inside on the couch Andrea's legs were propped over that smokin' girlfriend's shoulders. The 25-year-old was whimpering and moaning as her younger roommate hornily ate her pussy. \"Jenna, I can't believe how good you are with your tongue in only a couple of days...umph...it feels so fucking good!\" Andrea's hips lifted off the couch as she grinded her pussy against Jenna's dripping face, \"God that feels fucking good...oh...yeah just like that...umph!\" \n\nJenna was now beside herself with arousal, she was quickly learning that she really liked sex with girls. More specifically she really liked giving them head as the smell and taste of pussy was like an aphrodisiac...the more she did it the more she wanted to do more of it. The big-titted blonde knew what felt great when she was on the receiving end and she was quickly learning how to give that same pleasure to Andrea and Kristen. \n\n\"Oh Jenna you are a fucking natural, flick my ring with your tongue, yeah just like that...oh my God that feels good! Don't stop bitch, yeah right there...that's it, you got it baby...yes umph...lick it...suck it! Oh fuck, you're going to make me cum!\" Andrea's hips shook violently against Jenna's face as she climaxed. \n\nJenna kissed her way back up to Andrea's face, they kissed as Andrea recovered. \"Jenna that was one of the best climaxes I've ever had from oral sex, I wasn't kidding when I said you were a natural. I can't believe you haven't done it before; it took me a long time to learn what you have in a couple of days. Kristen's going to be in for quite a month when we both fuck her!\" \n\nThey were nuzzling on the couch when Kristen and Ryan walked into the house. Ryan carried a tray of blackened hamburgers. \"We might need to order Chinese, I got sidetracked outside and the burgers got a little burned!\" \n\n\"Sidetracked?\" Andrea asked laughingly. \n\n\"Okay, I was getting a phenomenal blow job and I didn't give a shit about the burgers!\" He admitted with a big smile. They all laughed. \n\n\"That's fine by me honey, I already got to eat a tasty treat!\" Jenna said as she kissed Andrea again on the lips. \n\n\"So I heard!\" He replied as he threw the burgers in the trash. \n\nJenna and Andrea put their clothes back on and they all walked down to the Chinese joint on the corner. When they got back, Andrea pulled out a bottle of Don Julio and they all did a couple of chilled shots. The French hottie looked over at Kristen and said, \"What'd ya say we pick teams?\" \n\nKristen got an excited smile on her face and replied, \"We haven't done that for awhile, I'm certainly up for it!\" \n\nAndrea suggested that for this night, they pick names out a hat to see who would go in each bedroom with whom. \"We'll have our foursome nights in the next month, but this will be fun as we learn what each other likes more intimately! Obviously for tonight, Jenna and Ryan, you guys have to be in separate rooms. Are you guys up for it?\" Jenna looked at Ryan and they both nodded simultaneously. \n\nAndrea put Jenna and Ryan's names in a cup on folded paper. Andrea gave Kristen the honors. Neither girl had anything against Ryan, but secretly both were hoping to draw Jenna's name. \n\nKristen pulled the first piece of paper from the cup and opened it. She got a big smile on her face; she quickly walked over, grabbed Jenna by the hand and grinned, \"We'll see you guys in the morning!\" Jenna looked at Ryan, shrugged her shoulders and smiled as Kristen quickly led her back to Jenna and Ryan's room and closed the door. \n\nRyan smiled and said, \"I guess she wasn't too upset with the name she drew!\" \n\n\"Don't take it personally stud, as I told you before she is more into girls than boys.\" She then lied to him to salvage his self-esteem, \"I wrote Jenna's name on both pieces of paper so Kristen would draw her name, that girl doesn't appreciate a good ass-fucking like I do!\" Andrea gripped his hand and led him to her bedroom. \n\nInside the other room, Kristen pushed Jenna down on the bed and declared, \"Tonight we get to finish what we started on Thursday! Take off your shirt; I want those sexy tits all for myself!\" \n\nAbout an hour and a half later as Andrea and Ryan were snuggling on the bed following their second anal session, Kristen opened the door, peeked her head in and said, \"I hope you don't mind if I come in, I need to get some stuff.\" \n\n\"Sure come on in, don't mind us,\" Andrea replied sarcastically, \"I'm sure you would have if I'd objected anyway!\" \n\nKristen slipped into the candlelit room. The hot little blonde was naked and her long hair was a mess. Kristen was covered in sweat and had two big hickeys on her neck, her nipples were hard. \n\nRyan checked out her gorgeous body. \n\n\"Ryan your girlfriend is one horny little nymph! She's already gotten me off three times. Now it's my turn to return the favor, she wants the anal beads and the strap-on.\" \n\nKristen reached into Andrea's dresser and grabbed both before also taking two sets of handcuffs. \"I have her tied up with your bathrobe tie right now Ryan, but the cuffs are more reliable. I'm going to tease, torture and make your girlfriend beg! I hope you don't have big plans tomorrow, I don't know how much sleep she is going to get tonight. Sorry to interrupt you guys, enjoy the rest of your night!\" Kristen said cutely as she hurriedly walked out the door and pulled it closed behind her. ",
        "Ryan and Andrea looked at each other and laughed. They fucked one more time and passed out. \n\nAbout two hours later Ryan got up to take a piss. As he quietly exited Andrea's room, he heard sounds coming from him and Jenna's room. He quietly put his ear to the door and listened. Inside he heard the sound of a vibrator in addition to Jenna's unmistakable whimpering and whining. \"Kristen please let me cum, I want it so bad...please don't tease me like that again, I promise I won't be a bad girl anymore!\" \n\nRyan was very tempted to open the door and join them, but he had agreed to a bedroom separation and didn't want to change the rules on the first night. He took a piss and reluctantly returned to Andrea's bed. \n\nHad he gone in, Ryan would have seen his girlfriend lying naked face down with her hands bound above her head with handcuffs. Her narrow hips were propped up by pillows with her knees spread wide as a string with two anal beads exposed, was protruding from and resting on her perfect ass as the rest of the beads remained buried inside. Jenna's ass cheeks were rosy red from numerous spankings. \n\nKristen lay on her back with her head up against the pillows underneath Jenna's hips. Her face was directly under Jenna's dripping pussy as she softly teased her clit with her own vibrator. \"You were a bad girl and got the bed all messy when I was fucking you before, do you promise not to squirt if I fuck you again?\" Kristen asked authoritatively. \n\n\"I will try my best Kristen, but you've got me so horny again; I feel like I'm going to explode again when you do.\" Jenna responded submissively. \"But I can't take anymore of the teasing, please fuck me.\" \n\nKristen turned off the vibrator and climbed up on her knees behind Jenna. She coated Jenna's cheeks with oil and squeezed and massaged her sexy ass. She pulled on the anal string but not hard enough to dislodge any of the buried beads. Jenna moaned. Kristen coated the strap-on with jell and rubbed it along Jenna's ass crack and pussy lips. The little blonde brought the tip to Jenna's pussy slit and pushed the fat head inside. \n\nJenna gasped. \"Do you want the rest slut?\" Kristen taunted. \n\n\"Yes, please Kristen, I want it so bad.\" \n\n\"Beg me for it, you little horny bitch!\" \n\n\"Please Kristen; I need that big cock deep in my pussy! I'll do anything for it; I'll eat your pussy again if you want!\" \n\n\"Oh you'll be eating my pussy anyway. Why should I give you this big cock?\" \n\n\"Please Kristen, I want to cum so bad and I really want you to fuck me again with that thing!\" \n\nKristen shoved in several more inches. \"Oh it feels so big Kristen, I love it!\" After having sucked Ryan's modest cock earlier, Kristen knew the big dildo must feel especially stimulating to Jenna. Having more length and thickness seemed to be driving her wild. Kristen initially worked it in and out in long slow strokes before she grabbed Jenna's ass and roughly plunged the thick 8\" dildo deeply in her dripping pussy. Jenna gasped out loud. Kristen reached up and grasped the anal bead string and began pulling on it in short little tugs. Eventually she pulled hard enough and a couple more beads popped from Jenna's hot little ass. \n\nThe busty blonde went wild as she loved the dual sensation. The Elisha Cuthbert look-alike loved the control she held over her, but she craved Jenna's luscious breasts. To Jenna's dismay, Kristen let the big dildo slip out of her pussy. \"Why did you take it out?\" Jenna whined. \"It felt so good, please put it back in!\" \n\n\"I want to suck your tits while I fuck you, come bounce on this big cock and feed them to me!\" Kristen commanded. The little blonde removed the pillows from under Jenna's hips and helped her up to her knees. Kristen pushed the pillows against the headboard and sat up against them as Jenna scooted forward on her knees and climbed up on top. Kristen reached around and grabbed her ass, pulled her forward and guided the dildo to Jenna's gaped lips. \n\nJenna ran her bound hands through Kristen's hair above her head as she pushed down and impaled herself on the fake cock as Kristen held it in place. The former cheerleader leaned in and devoured Jenna's fabulous tits. Jenna let out a loud gasp at the multiple pleasures being applied to her tits, cunt and asshole, \"Fuck that feels good Kristen!\" \n\n\"Ride that cock while I suck these big tits bitch!\" Kristen demanded. Kristen squeezed her breasts and took turns licking, sucking and biting Jenna's hard nipples. Kristen had a thing for tits and Jenna's were the best she'd ever had, she couldn't get enough as she motor-boated her pretty face between them. \n\nKristen finally tore herself from Jenna's chest and kissed her passionately on the lips. Their tongues intertwined; Jenna hornily sucked Kristen's into her mouth, they both loved the way the other kissed, \"Fuck you have a nice tongue Kristen, I love the way you kiss me,\" Jenna urged between pecks, \"and I love your big cock too!\" \n\nJenna bounced up and down on Kristen's lap at a frenzied pace as she neared her climax. Kristen squeezed her left tit with one hand and slurped it between her lips as she reached around to grasp the anal string with the other. The four exposed beads bounced in conjunction with Jenna's thrusts which made the string difficult to secure, but Kristen finally gripped it and tugged as Jenna screamed and climaxed on the big rubber dildo. Pussy juice erupted around the edges of the faux cock and soaked Kristen's loins and the sheets below. \n\n\"Oh there you go again with the squirting pussy juice...I'm going to have to punish you for that!\" Kristen smiled before kissing Jenna passionately. \"Jenna, I want to come over and fuck you every day! I love Andrea and she's great in the sack, but no one has ever turned me on like you.\" After they both calmed down, Kristen unlocked the cuffs before they lay a blanket down on the wet sheets and fell fast asleep in each other's arms. \n\nThe four of them had an orgy the following night and Ryan got his wish to finally fuck Kristen as Jenna and Andrea took turns eating each other out. Ryan ass-fucked all three women before depositing the last of his three loads in Jenna's tight little ass. \n\nThe next month was filled with enough incredible sex to fill a book of porn stories. Jenna perfected her cunnilingus craft and Ryan enjoyed lots of anal sex with Jenna and Andrea. Andrea persuaded Jenna to get a clit ring when their month was over. The older girl convinced her that the sensations were indescribable but suggested she wait until their time in Santa Monica came to an end. The French roommate knew Jenna's recovery from the procedure would take some time and selfishly didn't want to miss out on the next four weeks of fucking her sexy roommate's brains out. \n\nAndrea and Jenna had sex every day after Ryan left for weight training. Jenna didn't have class on Mondays or Wednesdays, on those days Kristen would come over and the three of them would fuck for hours. Andrea would tell Ryan about their trysts, but she downplayed the frequency and glossed over the details. The fact was, she and Andrea fucked every chance they got and she didn't want to admit she was addicted to pussy. \n\nThe fact was she was. \n\nBy the end of the month, Kristen couldn't decide whose skilled mouth she preferred. Up until this summer, no one had ever given her better head than Andrea. But Jenna's prowess had gotten to the point that Kristen could no longer choose one over the other...the little blonde was the beneficiary as she experienced the best month of her life. And it wasn't just that Jenna had gotten really good at eating pussy, she absolutely loved doing it and she herself wondered how she would exist without lesbian sex when their time in Santa Monica came to an end. \n\nEventually it did. The last night the four of them spent together was an epic orgy that none of them would ever forget. With great sadness they parted ways the following day but promised they would get together again at some point. \n\nJenna and Ryan hooked up with Kristen a couple more times the following year, but sadly they never saw Andrea again. \n\n****** \n\nJenna got the clit piercing a few weeks after she and Ryan moved out of Andrea's place. She never forgot the French girl for being the one to recommend it as the little piece of vaginal jewelry added a special stimulation to her sex life from that day forward. Jenna was already a very sensual person prior to the ring, but she became almost insatiable afterwards. \n\nShe and Ryan decided that the UCLA campus was too small a place for them to engage in three-way sex with other college girls, but Ryan was well aware of Jenna's desire for it. His girlfriend had developed a special taste for pussy and would never be completely satisfied without it in her life. But in spite of that, they agreed they would abstain from it in college related situations and see what other opportunities came along in life. \n\nAnd come along they would... \n\nIt wasn't uncommon however, for them to talk about hot girls on campus or beautiful actresses on TV or in the movies. Ryan would talk dirty to her about other hot women when they made love. Jenna loved it and it always got her off when he did. \n\nDuring the summer of their junior year, a friend invited them out to Dallas for a Longhorn-Bruins game. They stayed in a nice hotel which happened to be a few blocks from one of Dallas' most renowned strip clubs. Ryan did his homework ahead of the trip and learned that in addition to totally nude dancers, extracurricular activity was allowed in special rooms on the upper floor. On Saturday night after the game, they said goodbye to their friends and headed back to the hotel in a cab. Ryan had worked it out with the driver and surprised Jenna when the cabbie pulled up and dropped them at the club. His large breasted girlfriend had never been to one of these places, she beamed with excitement when she realized where they were going. \n\nInside the impressive venue, beautiful women were everywhere. Many of them approached and flirted with both of Ryan and Jenna immediately. Ryan enjoyed watching Jenna checking out all the gorgeous women on display, he had been to several strip clubs, but had never been to a place like this. \n\nRyan excused himself to the bathroom. He was actually on a mission to find sex for his horny girlfriend. The UCLA QB was directed to a large dude in a Cowboy hat named Bubba, he asked the brawny Texan if there were particular women at the club who were into providing sexual favors for other women. Ryan pointed out Jenna and said that he wanted to surprise her with some \"private time\" with one of the club's hottest girls. \n\nBubba laughed loudly and replied in a heavy southern drawl, \"You came to the right place Hoss! Your pretty little lady is going to leave with a smile on her face tonight! What kind of filly does she like?\" \n\nRyan thought about it for a second, \"She doesn't have a specific type, but I would say any cute one with a talented tongue and nice natural boobs!\" \n\nBubba laughed again, \"Yeah that's what most horny women who come in here are looking for! The butches like the same stuff.\" He pointed out several possibilities, but then finally suggested, \"But for a girl as pretty as yours, my top recommendation would be Darla.\" Bubba raised one of big paws and pointed to a gorgeous 20-year-old brunette wearing only a cowboy hat and chaps. Her splendid naked ass looked like a target framed in the leatherwear and her natural C-cup tits reminded Ryan of a slightly smaller version of Jenna's. \"I've personally watched her turn straight fillies into lesbos!\" Bubba bragged. \n\n\"She's the one!\" Ryan shouted excitedly in the loud place. \n\n\"I'll send her your way in a few minutes Hoss.\" Bubba said as he slapped Ryan on the back. \n\nJenna's boyfriend took a quick leak and made his way back to her. She had a big smile on her face when she saw him approach and shouted above the loud music, \"I almost sent a search party, I thought you found your own private room somewhere!\" \n\n\"Sorry, I got distracted.\" He shrugged his shoulders and answered with a big smile on his face. \n\n\"That's easy to do in this place Ryan, I'm so glad you brought me here!\" Jenna responded excitedly. \"I've had several girls ask if I wanted a lap dance.\" \n\n\"Did you get one?\" \n\n\"No, I told them I was waiting for my boyfriend to come back, but I did order drinks,\" Jenna said distractedly. Ryan watched as she checked out a hot Mexican chick with gorgeous legs and a sweet ass. \n\nMoments later a pretty blonde server arrived with their cocktails, \"Here you go Jenna.\" She bent at the waist to place the drinks on the table and to give Jenna a close up of her fantastic cleavage. Ryan watched as Jenna checked out her rack before slipping a tip inside her top. \n\n\"We aren't supposed to let the customers do that Jenna! But I'll make a special exception for you.\" \n\nJenna turned to Ryan as her eyes flashed and she mouthed \"Nice Boobs!\" Ryan and Jenna toasted their friends who had given them the excuse to come to Texas. A few minutes later, a young brunette wearing a Cowboy hat and chaps came up and asked Jenna if she wanted a lap dance. Jenna nervously looked at Ryan with a hopeful grin on her face and then bit her lower lip and ogled the sexy Texan. Ryan said that his girlfriend would like that very much but asked if there was a more secluded place they could go and \"have a little privacy\"? \n\nJenna looked over at Ryan with wide eyes and a surprised smile. \n\nThe stripper introduced herself as Darla. She checked-out Jenna and purred in a sexy southern drawl, \"Y'all came to the right place honey!\" Jenna and Ryan admired her stunning ass as she took Jenna by the hand and led them up the stairs to a private room. On the way, Jenna excused herself to use the restroom. \n\nRyan told Darla that he wanted this to be all about his girlfriend. Darla got a gleam in her eye and said, \"It isn't too often I get to dance for a little lady as pretty as her!\" \n\nRyan said, \"I want you to do more than dance for her. She likes having fun with girls. Make her happy tonight!\" \n\nDarla got a big smile on her face and said, \"Honey, y'all can call it FUCKING...cuz that's what me and your girlfriend are gonna do! Is there anything in particular that gets her off?\" \n\n\"Her nipples are very sensitive and she likes having her asshole touched and licked. She has a clit ring and likes having it played with! Oh...and one more thing, she can be a squirter!\" \n\n\"Ooh how exhilarating!\" Darla responded with another Texas-sized smile. \n\n\"Darla, it's been a year since she's had sex with a girl, so I suspect she'll be a little nervous, but she'll also be very excited!\" \n\nJenna came back into the private room. Darla checked her out from head to toe and thought to herself, \"I actually get paid to do this job!\" The stripper took her by the hand and sat her on the large leather couch next to Ryan. \"Honey, your boyfriend tells me you like girls...well I do too! I want you to relax and enjoy while I make you feel really good. You're as pretty as a Georgia peach and I can't wait to taste your sweet nectar!\" \n\nJenna bit her lip and looked over at Ryan. \n\nDarla took her time removing Jenna's clothes, all the while complementing her beautiful body. When she teasingly unhooked Jenna's bra, she gasped, \"Holy shit girl...you could get rich dancin' and squeezin' these babies in a place like this! Every Cowboy from here to Houston would stand in line to see em!\" \n\nJenna smiled and thanked her for the complement. \"Yours aren't so bad either!\" \n\nDarla spent the next several minutes kissing, licking and sucking Jenna's tits. She softly bit her nipples and trailed her tongue across the valley between them. She looked up at Ryan and said, \"You're a lucky man Mr. Ryan, if I had these sweet titties waiting at home, I might never leave the house!\" \n\nEventually Darla kissed and licked her way down Jenna's body, the sexy stripper nuzzled around her belly button and along her upper thighs. She then erotically trailed her lips and tongue along the outside of Jenna's panties. \n\nJenna trembled with excitement. With her fingers tangled in her hair Jenna mewed, \"Darla your tongue feels so good and wet.\" \n\n\"You ain't felt nothin' yet honey!\" Darla replied as she brushed her fingers across the damp garment and blew on Jenna's pussy mound. Finally, Darla used her teeth to tantalizingly peel Jenna's soaked panties over her hips and down her gorgeous legs. The stripper kissed her way back up along her tender thighs and cooed, \"Damn sweetie that's one pretty pussy you got there!\" \n\nDarla ran her fingers through Jenna's little blonde muff and licked around her pussy lips. Jenna was going wild and begging her to \"Kiss and lick it.\" \n\nDarla didn't tease her any longer; she softly buried her flicking tongue in Jenna's heavenly cunt. The gorgeous brunette hungrily sucked on her ripe button and Jenna exploded in a squirting cum. Darla's eyes got wide as her chin and neck took the brunt, \"Wow honey...I always thought I had a talented tongue, but I can't take credit for that, you are one horny little filly!\" \n\n\"It's been awhile since I was with a girl and you're so pretty, I guess I was a little excited!\" Jenna replied embarrassingly. \n\n\"Please don't be embarrassed honey, I nearly came myself. You're the hottest thing I've eaten in a long time, I can assure you I'm just getting started, I'm bettin' there's a lot more where that came from!\" Darla said excitedly as she rubbed Jenna's huge tits. \n\nRyan stroked his cock as Darla settled back between Jenna's thighs. He watched in amazement as the sexy stripper pleasured his gorgeous girlfriend more aggressively; before long Jenna was moaning and lifting her hips to meet Darla's experienced tongue. Ryan hadn't noticed it initially but Darla had a tongue ring that she flicked tantalizingly across Jenna's swollen clit. His insatiable girlfriend was going absolutely wild. \n\nRyan fed Jenna his dick as Darla continued to eat her out. \n\nJenna sucked him deep before moaning incessantly. \"Oh Darla...you got it...yeah right there...you're going to make me cum again!\" She screamed and more juice shot from her pussy and soaked Darla's heaving tits. \n\n\"Yeah girl...that was hot!\" Darla cheered. \"Y'all got yourself one squirtin' little pussy sweetheart! You taste really good honey...I'm fixin' to get you off again!\" \n\n\"You don't get to do all the pleasuring around here sister,\" Jenna shouted as she surprised Darla and swung around into a sixty-nine on top of the southern hottie. \n\n\"Ooh, y'all don't have to do that honey. It's my job...\" \n\n\"Are you kidding me baby, I WANT TO!\" Jenna blurted out before burying her face between the stripper's chaps-lined legs. Ryan wasn't surprised at all; he knew Jenna wouldn't be able to resist having a taste of Darla. Nevertheless, actually seeing it couldn't have been more exciting to him. \n\nWithin minutes the stripper moaned out loud, \"I'm happier than a TORNADO IN A TRAILER PARK, you eat some amazing pussy baby!\" Darla buried her face back between Jenna's legs and they brought each other to several intense climaxes before Ryan finally stuck his dick in Jenna's hungry pussy and blew his wad in minutes. \n\nDarla kissed Jenna and made her promise to come back if they were ever in Dallas again. Ryan paid the sexy stripper from the special fund he'd earned working at his dad's firm during the summer. Darla and Jenna enjoyed one last long kiss before the stripper left them in the room to get dressed. Jenna and Ryan ogled her perfect ass as she exited. \n\nIronically, one of them would meet Darla again several years later under totally different circumstances. \n\nOn the way back to their hotel, Jenna hugged, kissed and thanked Ryan for surprising her with the trip to the strip club. \"God that girl was hot, I was so fucking horny honey! I've missed sex with girls since Andrea and Kristen. I hope we can do that again.\" ",
        "\"Yes I could tell! I love to watch you with girls Jenna.\" Jenna loved that he liked her having lesbian sex and promised to make it worth his while when they got back to the hotel room. \n\nThe rest of the summer went by in a blur. \n\n***** \n\nBefore they knew it, it was their senior year and Ryan was playing his final game as a college athlete. He had climbed his way to #2 on the depth chart but he had never actually started a game as a quarterback during his career at UCLA. As luck would have it, the starter Paul Washington got hurt in practice leading up to the final game against USC. Ryan got the start and led the Bruins to a 42-31 victory over the arch rival Trojans in his final college game. \n\nIn the showers after the game, UCLA's All-American linebacker Cole Steele came up to Ryan, congratulated him and told him he was proud to have him as a teammate. Cole and Ryan had arrived as freshmen together but their paths had been very different. While Ryan had struggled as a backup quarterback, Cole Steele had been a 3-year starter, a 2-year team captain, and a two-time All-American. He had recently won the Butkus Award as the nation's top linebacker and was slated to be a top-5 pick in the next NFL draft. \n\nRyan appreciated being acknowledged by someone of Cole's stature. Every guy on the team looked up to Cole on and off the field. As they talked in the shower, Ryan couldn't believe one guy could be blessed with so many God-given attributes. He was obviously a great football player and had worked extremely hard to achieve success. But Cole was also one of the best looking guys on the team, he had a naturally huge physique, he could run like a deer, and he had the biggest black cock anyone on the team had ever seen. \n\nThe guys all joked that if Cole failed as a football player, he could have a great career as a porn star. \n\nBut that was not the life for Cole Steele. His entire college focus was one thing, becoming the best football player he could be. He never dated girls, he never drank or did drugs; in fact none of the guys had ever heard him swear. He truly was an All-American. \n\nThe two of them shook hands and Cole wished him the best of luck in whatever he did after college and said, \"You'll have to come to my draft party next spring.\" \n\nRyan told him he wouldn't miss it. \n\nJenna waited for Ryan outside the locker room after the game. His large-breasted girlfriend gave him a huge hug and kissed him deeply before telling him how proud she was of him. They went to a post-game party and Ryan couldn't remember ever being so happy in his life. He was the toast of the party; Jenna just beamed as she shared his special night. \n\nCole stopped by the party and was making his rounds with a Gatorade in hand. He approached the two of them and high-fived Ryan before giving Jenna a hug, \"Nice to see you again Jenna.\" \n\n\"Nice to see you again too Cole, great game today,\" she replied cheerily. \n\n\"We wouldn't be here without your boyfriend!\" Cole gleamed. He then said he had to get going as he congratulated Ryan once again and said goodbye to them both. \n\nAs he walked away, Jenna said, \"He is such a nice guy for being the star of the team.\" \n\n\"I know, he really is a good dude; his whole world revolves around football.\" \n\n\"He doesn't even date?\" She asked. \n\n\"Not that any of us are aware of, there have actually been a few rumors that he is gay, but I don't really know what to think. It's too bad for the girls at UCLA that he doesn't date because he has the biggest cock any of us have ever seen!\" Ryan exclaimed. \n\nThey both laughed, but Jenna got wet in the panties. Later that night, Jenna fucked Ryan's brains out. The senior quarterback thought it was because of his big achievement that day, but in reality his gorgeous blonde girlfriend couldn't get the image of Cole Steele's big black cock out of her mind. \n\nA few weeks later at Christmas time, Ryan asked Jenna to marry him and she readily accepted. The rest of their senior year went by quickly and they got married the following fall."
    ],
    "authorname": "FifthEstate",
    "tags": [
        "ucla",
        "santa monica",
        "jenna",
        "hot tub",
        "cheerleader",
        "football",
        "beach house",
        "dallas",
        "stripper",
        "three-way"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/ucla-to-big-d-ch-04"
}