{
    "title": "Falling Down",
    "pages": [
        "Chapter 1\n\nKarly and I laid together in the bed. I was on my back, her lovely body pressed against mine. Comfort and relaxation poured from her and into me. Something about her always made me feel at peace. Safe, and warm and comfortable.\n\nHer head was pillowed on my chest, her hair pressed to my face, bathing me in the sweet vanilla scent that I now always associated with her and only her. Her hair tickled my nose, but I didn't care...\n\nWell, I didn't care too much, at least not even close to enough to move her.\n\nI was in that magical place, not quite asleep, but just starting to nudge over the edge.\n\n\"I'm sorry.\" She murmured at me.\n\nHer voice shocked me awake, pulling me away from that relaxing place where we all lost ourselves to oblivion at least for a small time.\n\nI jerked, in that way we all do when wakened from the edge of sleep, like a small slap on the back of the head.\n\n\"Did I wake you?\" She whispered.\n\nI put my hand on her head and pulled her closer to me. \"Just a little baby girl.\"\n\nHer hand tangled in my shirt, right above my heart. \"I'm sorry. Go back to sleep.\"\n\nI kissed the top of her head. \"Stop apologizing. I can never be mad at you for long.\"\n\nShe moved away from me suddenly, sitting up on her stomach and looking at me.\n\nShe was beautiful, as always, but a cloud of worry was laid bare over her face.\n\nConcern pounded through me and I put my hand to her face, my fingers resting over her elven ear. \"What's wrong baby girl?\"\n\nShe just shook her head and laid back down on my chest. She clung to me tighter.\n\nI considered pressing her on it. Pushing her to tell me what was wrong. I decided that it would be better for her to come around to it on her own. To work her way around to telling me. We all have secrets, and worries. Some we want to share, some we feel like we owe sharing and some we dare not let see the light of day.\n\nI put my face back to her head, \"It's okay. You can tell me, or you can keep it to yourself. It's up to you. All you have to know is that I'm here if you want to talk.\"\n\nI could feel her shake her head on my chest.\n\nFinally, she broke the silence. \"I'm sorry we can't have sex.\"\n\nThe comment was so stupid I couldn't help but laugh. \"Don't make a big deal out of it.\" I kissed her head again. \"I'm not worried about it.\"\n\nI expected the comment to calm her, to allay her fears. Instead she only curled up more...\n\nI put my hand to her face, \"Hey. What's wrong?\"\n\nShe shook her head. \"I just don't want you to be mad at me.\"\n\nThe curling of her body had caused her to start to stray away from where I could properly wrap my arms around her. I decided that I didn't want that, and it also wasn't good for her, so I wrapped my arms around her and pulled her up higher.\n\nKissing her head, I assured her, \"I'm not mad at you.\"\n\nI sighed. I didn't understand. This wasn't that big of a deal. At least to me it wasn't, to her though, there seemed to be something deeper here that I didn't understand, something that I knew was desperately important.\n\nI finally decided she was the only one that knew the answer to that question...\n\n\"Okay. I don't get it. This isn't that big of a deal. It's going to happen. I mean I'm not an expert on women's physiology but from what I understand you all shut down for repairs monthly. Something I better get used to, I figure, considering I plan on being with you a good long time.\"\n\nShe shook her head again. \"It's just...\"\n\nShe hid her face from he, burying it against my chest. \"It's nothing. I shouldn't have said anything.\"\n\nI pulled her face up so I could see her wonderful eyes. They were portraits of pure sorrow.\n\nIt was my turn to shake my head. \"You can always talk to me baby girl. I don't understand, but I want to. What's going on in that pretty, stupid head of yours?\"\n\nMy small cutting comment made her smile, a brief slash of happiness in her unhappy face, like a lightning bolt splitting the dark night, there for a moment and then gone.\n\nI figured I wanted to see that bolt again, so I quickly ducked in and kissed her nose.\n\nShe giggled and this time her smile was more lasting.\n\nHer hand came up to my face, tracing her fingertips from my forehead down to my lips. Sighing, she looked to have come to a conclusion. \"If you don't want to hear about this, just tell me to stop. I'll understand.\"\n\nWorrying a bit, I forced myself to smile at her, \"You have my word.\"\n\nShe laid her head back down on my chest. \"Mike used to get really pissed at me when I was on that time of the month and we couldn't...\"\n\nShe seemed to be trying to figure out where the line was in being graphic with her descriptions of her time with Mike. Hell, I was trying to figure out where that line was...\n\nI gave her a few seconds to work it out. \"have sex?\"\n\nSomething about her tone, and her lack of confidence and the weird line of conversation hit me as funny and I started laughing again.\n\nShe sat up and smacked me on the chest. \"What's so funny?!\"\n\nI pulled her in and kissed her. I figured it was the easiest way to make her forget she was mad at me...\n\nShe was intoxicating against my lips. Heaven given form. As my lips touched hers I could feel the blood rush through my body, my breath catch in my chest. Just being able to kiss her made me feel weightless...\n\nI finally forced myself to stop and look into her emerald eyes, \"You don't have to be a prude about it.\"\n\nFeeling a stab of jealousy jolt through me, I forced myself to say, \"I know you were with Mike before me, and while I can't say I love the thought of you with anyone but me, I know the nuts and bolts of what went on.\"\n\nI shook my head at her, finally bringing my hand up and laying it back on her face. \"Tell me what you think is important. Leave out what you want, but talk about the things you need to. Be as descriptive as you need to.\"\n\nI kissed her again. \"I want to know everything about you. Every inch of your beautiful mind, and I know there are going to be some dark corners. I'm okay with that. In fact, knowing about those dark corners only makes me love you more.\"\n\nShe smiled and put her head back on my chest. \"Anyway, he used to get really pissed at me. He'd say things like, 'You have two other holes don't you?', he'd get pissed, he'd ditch me and refuse to hang out with me. He'd flirt with my friends...\"\n\nI shook my head. How could a person be so fucking stupid? How could they be so selfish?\n\nI wanted to feel angry at him. I wanted to feel as if I should have wanted to go find the piece of trash and rearrange his face. Instead I just felt sad.\n\nI felt a little sad for him, at being that person, at losing out on such a great opportunity for happiness with Karly...\n\nMostly I felt sad for Karly.\n\nShe was perfection. She should have never have had to deal with that bullshit. Never have had someone treat her that way.\n\nDon't you ever be that person... my mind warned me. You may get frustrated, but don't you ever treat her that way.\n\n\"I always felt like that was his way of reminding me I was replaceable.\" She finally continued.\n\nI put my face against the top of her head and murmured into it, \"That's stupid. You're not replaceable. Not by anyone.\"\n\nShe let out a sarcastic chuckle. \"I know I'm replaceable Gabby. Sweet as it is for you to say I'm not.\"\n\nThat made me angry, and I forced her face up. She needed to understand the truth here. I looked into her eyes to make her understand the words came from the bottom of my heart and were not some empty platitude. \"You are not replaceable. Never. Nobody could be you, and you are perfect for me.\"\n\nShe pulled her face away from me and laid back on my chest, squeezing me tighter. \"If you got rid of my today Jacky could easily be laying here within the hour.\"\n\nI pulled her tighter to me and put my hand on her head, rubbing my thumb in lazy circles on her temple. \"Jacky isn't you. You aren't her.\"\n\nIt pained me to admit it. I had hurt Jacky. I had created a debt there that I could never repay, that I could never make right. I had wanted Karly, and I had hurt Jacky in the process. That would never go away. It would never get any better. Looking back now I could see how I had made excuses. How I had called her stupid, or immature. Even wanting to take responsibility I had made excuses that it was her. The reality was it is never them. It's always you.\n\nThe thought made me realize that every person is special. Every person deserves to be loved in their own way. In a perfect world, we would all find that person that could love us just the way we needed to be loved. That person that didn't need to change themselves, that you didn't need to change yourself for. That would grow in exactly the same direction as you. Most of us will never find them, but we all deserved to.\n\nI kissed Karly's head. \"Neither of you is replaceable.\" I felt her tense a little bit at that.\n\n\"My Karly is perfect for me. Hopefully Jacky finds the person that is perfect for her, but neither of you is replaceable. We can all lie to ourselves and pretend that all we care about is sex, or money, or whatever other stupid fucking reason we get together with someone else, but the truth is I think as humans we are born without a piece of ourselves, and we spend a long time trying to find that piece and put it back right where it goes.\" I pulled her tight into me. \"Mine is a Karly shaped piece. There is no other piece out there that fits exactly the same, so there's no way to replace it.\"\n\nShe shook her head against me. \"I don't think that's true. I think you could push me out the door right now, and have her here, and she'd be so happy to have you back in her life she'd do anything you wanted her to.\"\n\nI sighed at her. She wasn't getting it. I wasn't explaining it well enough to her. \"I could put someone right where you are, that's true. That doesn't mean that you're replaceable.\"\n\nShe sniffled, and I knew it meant that she was weeping. That tore my heart apart, but I knew that saying something wouldn't make her tears stop, they would just be driven beneath the surface.\n\n\"Mike found a way to replace me. As soon as he couldn't have sex with me he found something else Karly shaped.\"\n\nI shook my head at her stupidity.\n\nThe thought hit me then. \"So, you could replace me, just like that?\"\n\nHer head snapped up, her eyes locking on mine. \"No. Don't you ever say something like that!\"\n\nI smiled at her as I saw the thought dawn on her. The realization of what she was saying.\n\nI gave her a smartass turn of my head, \"See? That's what you are to me. I have to total package here in my arms. Do I want to make love to you? Fuck yeah. Can I refrain a bit because you can't?\" I ran my thumb over her cheek. \"I'll do anything in the world to make sure you keep remembering that I'm just as irreplaceable as you are.\"\n\nShe smiled and crawled up so she was sitting on me, her hips on mine, her chest pressed against mine. She wrapped my head in her delicate hands and shook her head at me. \"I love this big ol' stupid teddy bear. I may have found him beat up and discarded...\" She shook her head and tears dropped from her eyes. \"But he's all I ever wanted.\"\n\nI felt a stab of pain and love course through me. She was so perfect and what she said made me somehow found a deeper love for her right there in that moment...\n\n\n\nChapter 2\n\n\n\nWe were making dinner together. She had picked up supplies on her way over and was showing me how to make something she called pinwheels. They were a mix of meat, cheese, olives, jalape\u00f1os, and cream cheese inside a tortilla. They were delicious. After dinner, we sat at the table and worked on homework together. Being in the same classes made the process so much easier...\n\nWe were working on the Calculus equations. Well, she was working on the Calculus equations. I had finished them up about twenty minutes ago. I was really just quietly staring at the book, letting my mind wander. I didn't want her to feel self-conscious about how long it was taking her to get done...\n\nShe looked up, \"What did you get for number 5?\"\n\nThat was about midway through the assignment and I had to flip back a couple of pages to find it.\n\nShe stopped me, \"Let me see that.\"\n\nI handed her my spiral notebook and she paged back through it, shaking her head. \"You're done?\"\n\nI was embarrassed. I looked at the table and nodded my head. \"I think they're right. They look right. I mean, they look right in the way that school math always seems to look right. You get all these crazy inputs and you do all the miracle math and the answer comes out as five... it's always five and never like, four-point-zero-seven-six-three-four... you get the point...\" I trailed off.\n\nShe set the notebook down beside her own work and started to compare our answers. She hissed in frustration and took an eraser to her own work.\n\nPanic surged through me, and I started to reach over and stop her pencil, \"Don't do that. I went too fast, I'm probably wrong.\"\n\nShe looked through her eyelashes at me. \"You're not. I can see the mistake I made.\"\n\nI hated my brain. People saw me do things, thinking things and they always looked scared. People expected it out of some skinny kid with horn-rimmed glasses. Seeing out of one of the biggest kids in school seemed to intimidate them more, like I had no right to be smart and strong at the same time...\n\nI didn't want Karly to see me like that. I nibbled at my lip and refused to meet her gaze.\n\nShe stood and came to me, spreading her legs over me and sitting in my lap.\n\nI wrapped my arms around her more from a sense of obligation than anything else.\n\nShe smiled at me, a twinkle in her eyes as she ran her hands up my body, starting at my stomach...\n\nThey ran up my chest, on to my neck. It felt so good... my trepidation forgotten.\n\nMy eyes drifted closed as her fingers found my face, her nails prickling over my skin. Finally, she flattened her hands out and ran them over my short, stubbly hair.\n\nI opened my eyes and looked at her, nibbling at my lip, nervous once again...\n\nShe shook her head at me, smiling on one side her of mouth.\n\n\"Your mind...\" She started to say.\n\nI reached up and grabbed her hands, pulling them away from my head. \"I feel like a freak.\"\n\nI was still holding her hands so she darted in and kissed me on the forehead.\n\n\"You are a freak, freakboy.\" She smiled and took the sting out of the words.\n\nThen her lips were on mine, and I forgot all about my worries. I let her arms go and wrapped my arms around her once more. There was no obligation about this hug, I simply needed to feel her beneath my arms. She wrapped her arms around me once again, pulling me tight to her. When she finally broke from our kiss, she looked at me, a sense of wonder in her eyes. \"I love the way your mind works.\"\n\nI sighed and let my head drop back. \"I don't. Most of the time it won't shut up. I worry all the time, and it just seems to run and run. People look at me like I'm a freak, and I hate that, because I know it's true.\"\n\nShe kissed me on the end of the nose. It was still sore from the breaking it endured down in Reno. She knew that so she was gentle.\n\nThen she nodded, \"It is a little freaky. It scares me some times.\"\n\nHer hands came up and rubbed once again into my hair. \"I get the sense if you wanted to be a bad person, between that beautiful mind...\"\n\nHer hands ran down and settled on my shoulders, \"And this body, you would be a really scary person.\"\n\nI chuckled at her. \"Most people think I'm pretty scary.\"\n\nShe smiled that electric smile and lit up my world. \"Only until they get to know you, the really real you.\"\n\nShe kissed my nose again, \"Then they figure out you're a big ol' teddy bear.\" She smiled at me. \"I love that about you.\"\n\nI let my head drop. I really wanted to be a good person. I wanted to be the person she saw when she looked at me.\n\nShe pulled me in tight. \"I wouldn't change anything about you.\"\n\nFinally, she slid back, \"Now get your freak brain over here and help me figure this shit out.\"\n\n\n\nChapter 3\n\n\n\nKarly took me to practice the next day on her way home. She had stayed the night with me. It was nice to have her in my arms all night long, even if I couldn't make love to her. Practice was long and hard. It was still enjoyable, however.\n\nI rode the bus home after practice. Joe offered to take me. I was kind to him about it, but I declined all the same. I was done being a drain on people, and I was especially done with people pitying me.\n\nBustling about my house I made myself busy cleaning. I put on some music and cranked it loud to entertain myself. The knock on my door came as a surprise.\n\nKarly had plans with her mom through the afternoon, and plans with Tish in the evening. She wasn't due back today. Maybe things had changed...\n\nI opened the door and was shocked to see Jeremy standing there. He wasn't on the team, and I hadn't talked to him since my \"friends\" had ditched me. I was sure he was in on it. I had specifically called him and his phone had gone straight to voicemail.\n\nMy eyes narrowed and I started to close the door.\n\n\"Wait!\" he put his hand on the door and stopped me.\n\nMy jaw set and I had the very strong impulse to slam it in his face.\n\n\"I had nothing to do with what happened the other night!\" He shouted.\n\nThat brought me up short. I stopped trying to close the door in his face.\n\nHe smiled at me, a nervous, anxious smile. \"I was out with my parents. They made me go to dinner and a movie with them. I had nothing to do with them ditching you.\"\n\nI wanted to hope... it just hurt too much to though...\n\nI shook my head, and a thought occurred to me. \"So, you're saying you would have, what, talked them out of it? Gone against the group and insisted?\"\n\nJeremy was a decent enough guy, but he was not a leader. He wasn't one of those guys that was going to go out and stand on his own. He was usually right there in Sep's shadow. Sep told him to jump and he was in the air before he asked how high. There was no way he was going to go against what the group wanted.\n\nJeremy took his hand off the door and shook his head. \"I really want to say that I would have spoken up... I really do.\" He looked me in the eye and I found a new respect for him. \"I probably wouldn't have.\"\n\nHe sighed and looked at the floor. I had hurt him and while I wanted to think I was a good enough person to feel bad for that, a part of me was thrilled.\n\nHe looked at me. \"But I didn't.\"\n\nHis jaw set, and he nodded at me. \"And I'm here now. And I'm telling you, I won't ever do that to you.\"\n\nFinally, he smiled at me.\n\nI wanted to close the door in his face. I didn't want to let anyone into my circle. If they never came in, they couldn't hurt me. Let no one stand behind you, and you never have to worry about a knife in the back.\n\nI stood there for a second, trying to work out what I wanted.\n\nHe sighed, \"I get it. I wouldn't want to be around me either.\" He shrugged, \"I just figured you might want someone to talk to.\"\n\nHe started to turn and I shook my head at how stupid I was being. \"Get your ass in here.\" I finally said.\n\nHe turned to me and smiled. \"Thanks man.\"\n\nWe went into my bedroom and sat down. I gave him my big old comfy chair and sat on my bed, cross-legged.\n\nI scratched my nose while I tried to think. I really didn't know what to say. He looked every bit as uncomfortable.\n\nHis eyes roamed the room, as if he were trying to think of something to say.\n\nI chewed on my lip while I decided how much to tell him, how far into my defenses I wanted to let him slip...\n\nI finally decided that if I was going to make this work, I just needed to be honest. \"Look, man.\"\n\nI shook my head, trying to will myself to speak. I scratched my nose again.\n",
        "\"So, here's the deal. I know all of this seems really grade school. It seems like I'm just throwing a fit.\" I looked at him, watching him sit there patiently, listening. \"Anyway. I'm going through a bit of a rough time. You know a lot about what happened with me and my dad.\" I stopped, shaking my head, \"Actually, I want to say that you know a lot about what happened with me and my dad but the truth of the matter is, I've hidden most of even that from everyone...\"\n\nHe shook his head, and I could see pity come into his eyes. It hurt to have someone that I cared about pity me...\n\n\"Things are a lot worse than I let on.\" I looked him in the eyes and decided right there that I would just trust him. \"If you share what I'm about to tell you, with anyone, you and I are going to have real trouble. Do you understand me?\"\n\nHe didn't make any false promises to me. He just met my eyes and nodded, very solemnly, nodded.\n\nI sighed. \"My dad was always really freaking hard on me. I guess people would call it emotionally abusive. When it got to be physical I decided I wasn't going to take it anymore and I bailed. Before him, my mom was even worse. I was terrified pretty much all my life. Starved, abused. Worse of all, was the isolation. The loneliness. I was alone all the time.\"\n\nI ground my teeth. This wasn't going to be easy for him to hear. \"After this latest dustup, I started to realize that I was never a part of our group. I was left out all the time. I had to cling on and attach myself constantly. I'm not like the rest of you. I'm not normal. None of you really wanted me to be around. All of you made sure that without me pushing my way in constantly I wouldn't be welcome. I'm sure I brought that on myself, but it was still something that was really hard for me to realize.\"\n\nI could see him arguing with me in his own mind. He really was a pretty decent person, and I could see he wanted to argue with me. I could also see that he knew he would be lying to both of us if he did.\n\nI gave him a wry smile. \"See how much it hurts to realize? Now imagine you've been the one pushing at that for as long as I have. Imagine the shame you would feel having had that realization about yourself.\"\n\nHe shook his head at me. \"Look, this is going to sound hollow, but that really isn't something you should blame yourself for.\"\n\nI started to argue and he pulled me up short, \"No. Stop and listen. You're not a bad guy. Yeah, you needed rides, and you were always less well off than all of us.\" He shook his head at me, \"What all of us should have realized though was, we are not well off. Our parents are. It isn't your fault that your parents aren't well enough off to give you the things we've been given, and frankly it was an asshole move on our part to look down on you.\"\n\nHe shook his head and looked at the floor. \"I have to own my part in this.\"\n\nHis eyes snapped up and looked at me. \"I'm not very proud of the person I was until I decided to come over here today. I just did what people told me to do. If I had been there that night when they ditched you, I would have joined in. I wouldn't have argued, I wouldn't have stood up for you. I would have just went with the flow, all so I didn't have to think for myself. I'm done with that.\"\n\nI smiled at him, shaking my head. \"Look man, I appreciate you coming over and trying to make things right, but right now, I'm not going to be a very good friend to you.\"\n\nHis face scrunched up, \"What do mean?\"\n\n\"I'm kind of freaking out.\"\n\nHe raised an eyebrow. \"Over us being assholes?\"\n\nI chuckled. \"No. Look. I let a lot of stuff stack up, and then things kind of boiled over. I'm having trouble keeping everything under control.\"\n\nHe shook his head, \"Look, I'm not that smart. Maybe you could explain this all to me. Use little words, and I'll try to understand.\"\n\nI again chuckled. Jeremy wasn't stupid, far from it in fact, he just saw the world different than the rest of us...\n\n\"Putting it plainly. I'm having panic attacks. Depressive episodes.\" This one stung to admit...\n\n\"If it wasn't for Karly, I'd probably be thinking about hurting myself...\"\n\nThere. I said it.\n\n\"What happened the other night left me really isolated and alone. If it hadn't been for her... things might have turned out really badly.\"\n\nHe was white as a ghost.\n\nI sighed and slapped my knees, \"None of that is any fault of any of the guys. They made a choice. It just happened to come at a time that could have been really bad for me.\"\n\nI shrugged, \"If I just patch some plaster over that hole and pretend me and the guys are okay it doesn't make the problem go away. It will happen again, and maybe next time Karly won't be there to pull me back from the edge.\"\n\nI met his eyes, \"I can't afford that to happen. It's easier to be on my own than it is to count on people that aren't going to be there for me.\"\n\nHis eyes roamed the room, \"We're not going to hug now are we?\"\n\nIt made me laugh.\n\nHe shook his head at me. \"Maybe you should tell the guys what you just told me?\"\n\nMy face went still. \"I don't want people to be around me because they pity me. The only reason I told you is because you reached out to me, and I took that as a sign of you genuinely wanting to be around me. If that happens you need to understand what's going on with me. I'm not going to be an easy person to be around. That means I need to depend on the kindness of others. If I expect that kindness, I need to be open.\"\n\nMy eyes narrowed at him, \"And I was serious. If you share this with anyone... I'm going to be pissed.\"\n\nHe laughed and raised his hands. \"Don't need to be told twice. I get it.\"\n\nHe paused a second and thought about it. \"So, I'm going to assume you don't want to hang out with the other guys?\"\n\nI shook my head at him. \"I can't afford to.\"\n\nHe nodded. \"I get it now.\"\n\nI suddenly felt really bad for him. I had laid all of this on him, and then put him in the spot where he essentially had to pick between them and me. It was a really unfair thing to do...\n\n\"Look, I get it.\" I told him, \"I'm not asking you to choose between them and me. Frankly, where I am right now, you should choose them. I won't be a good friend to you, not right now. I won't hold it against you. I can get through this on my own.\"\n\nHe laughed and shook his head. \"This is a no contest issue for me.\"\n\nI didn't get what he was talking about, so I shook my head at him. \"I don't understand.\"\n\nI smiled. \"It's going to sound stupid, but how many times in your life do you get to really be there for someone? I mean when it really matters?\" He paused for a second. \"Also, I'm tired of being treated like the family dog.\"\n\nHis eyes met mine, and I saw a fierceness there. \"Look man, I'm treated like a joke. People look down on me, and I end up being the clown to keep them entertained. I'm tired of that shit. I'm tired of feeling like I'm tolerated. You want to know why I'm sitting here right now?\"\n\nI shook my head at him. \"I really don't.\"\n\n\"Because you never treated me that way.\" His look took on a fierceness I had never seen from him before. \"You never tolerated me. When I got on your nerves you told me to knock it off. You always treated me with respect, and I always knew that the way you treated me was exactly where I stood with you.\" His eyes narrowed. \"I also realized that if they can do that to you. Sooner or later they'll do it to me.\"\n\nI chuckled.\n\nHe sighed, \"You know my mom tried to kill herself last summer?\"\n\nI was horrified. \"What? I mean, no, I didn't know that.\"\n\nHe looked out in to the distance, his eyes going out of focus. \"I didn't tell anyone because I was ashamed.\"\n\nI shook my head at him, \"Why?\"\n\nHe looked at the ground and sighed. \"My dad is a real piece of work. He just gets under your skin... makes you feel like you're less than human. I feel it too sometimes...\"\n\nI suddenly felt very selfish. How had I not known this about him? How had I not sensed it?\n\nIt made me feel like I wasn't a very good friend...\n\nHe smiled at me. \"I get where you're at... because most of the time, I'm right there with you...\"\n\nThen he shrugged, \"So how about we try being alone, together?\"\n\n\n\nChapter 4\n\n\n\nKarly was laying in my arms...\n\nI kissed her, laying my kisses over her face, her neck... down her chest.\n\nShe giggled and shivered. \"You make me feel so good when you do that.\"\n\nI reluctantly let her skin fall away from my lips, brushing a stray strand of hair away from her face, so I could see her eyes. I shook my head at her...\n\n\"You are so perfect.\" I told her for the thousandth time.\n\nHer hand came up and pulled my head into hers, her lips meeting mine, her tongue sliding into my mouth. When she came up for air, her eyes met mine. \"Back to school tomorrow. You ready?\"\n\nI smiled at her. \"Yep, I'm ready.\"\n\nHer eyebrows shot up, \"Did you do all your homework?\"\n\nI laughed. \"Yes mother.\"\n\nShe smiled at me. \"Don't take that tone with me mister.\"\n\nI chuckled and shook my head at her. \"I love you.\"\n\nShe preened like a peacock in my arms. \"I know.\"\n\nGiggling I wrapped her in my arms and pulled her over on top of me. \"Goofball.\"\n\nShe leaned in and kissed me, \"So, when am I picking you up tomorrow morning?\"\n\nI pulled my face away from hers. \"You're not.\"\n\nShe raised her eyebrows at me. \"What do you mean I'm not?\"\n\nI put my hand on her face. \"You are not getting up early and driving across town to pick me up. I'm riding the bus in the morning, like I always do.\"\n\nShe looked crushed at first, then, really, really angry.\n\nI gritted my teeth at her. \"I need to stop being that person that depends on other people for everything. I want to do this for me. My pride couldn't take it if I knew that every morning I was making you get up early to drive all the way across town and pick me up because I couldn't provide for myself.\"\n\nShe shook her head at me. \"That's stupid. And you need to know it's making me angry.\"\n\nI took a deep breath. \"Baby girl, let's be honest. You don't want me on that bus in the morning because Jacky is going to be on it.\"\n\nShe stopped dead.\n\n\"You don't want me on that bus because you don't trust me to make the smart choice and avoid her.\"\n\nI saw panic steep into her eyes. \"It's not that I don't trust you...\"\n\nI raised my eyebrows at her. \"So, what, you think she's going to throw me down and rape me?\"\n\nShe looked desperate. \"I know you. I know you well enough to know that you'll be nice to her. She's going to take that as her still having a chance with you.\" She paused and looked down. \"I just don't want her worming her way back into your life.\"\n\nI sighed at her. I had this coming. I had left Jacky for Karly, Karly had to expect the same behavior out of me with her.\n\n\"Look, I get it. I have no right to demand that you trust me...\"\n\nSorrow clouded her face, \"It isn't that.\"\n\nI smiled at her, \"I know it is. It's not that big of a deal. I'm going to show you.\" I put my hand on her face, \"You can trust me, because there is no way I'm messing up something as perfect as what I have with you.\"\n\nHer eyes narrowed and she growled at me...\n\nHer face came in close to mine, and I reached for her to kiss her. Her mouth landed on mine, hot and full of life. Her hands went into my shirt, her nails raking down my flesh...\n\nHer hips ground on mine and I found myself very excited by her...\n\nFor the first time, I was suddenly very frustrated with the thought of not being able to have her...\n\nI felt her hands on the button of my shorts...\n\nMy hand caught hers... \"No, no...\"\n\nMy breath came in ragged gasps. I licked my lips... \"No way I can handle you digging around in there right now...\"\n\nHer tongue nipped out and she actually licked the tip of my nose...\n\n\"I just figured that you'd like to unwrap your present...\" She told me playfully.\n\nMy breath sped up...\n\n\"You mean...?\" I asked her.\n\nShe raised her eyebrows and nodded her head... \"Yep...\"\n\nI grabbed her and pulled her to me, kissing her hard and doing my best to take her breath away...\n\nHer hands were back into my shirt and I could feel her breath speeding up, keeping pace with mine. It felt delicious to feel her want me as much as I wanted her...\n\nShe made a frustrated sound, \"Off please. Take it off.\"\n\nI laughed and pulled my shirt off.\n\nHer mouth found its way to my neck and the sensation rolling through my body was so intense it was all I could do to keep from rolling her over and taking her right there.\n\nIt was weird though... I wanted her to drive. I wanted to see her in action.\n\nHer hands rolled and roamed over my chest, working their way up to my shoulders. Her lips traced their way down my neck and onto my chest. My eyes rolled back in my head it felt so good...\n\nHer hands were back onto the button of my shorts...\n\nI didn't stop her this time.\n\nHer mouth was hot upon mine... She had her hands in my pants. I kissed her neck, breathlessly whispering into her ear, \"Shirt off please.\"\n\nShe smiled and pulled her shirt off. The bra was next.\n\nMy hands found her breasts, massaging and tweaking her most sensitive spots. She covered my hands with hers, her head lolling back.\n\nShe was panting with desire, and it was driving me insane.\n\nShe raked her nails across my chest, once again heading down my pants.\n\nI shook my head at her, \"Lose the pants. I need you right now.\"\n\nShe smiled wickedly at me, \"Patience is a virtue.\" She panted as she pulled my shorts down.\n\nI had to kick my shoes away quickly to help her get my shorts off.\n\nAnd then her mouth was on me.\n\nI had to use every ounce of my willpower not to pull her down on me. \"Or that works too...\"\n\nHer head lolled on me, driving an insane amount of pleasure into my body.\n\nI could feel her working her pants off while she was down there. I very much wanted her right then... \"You. I want you.\" I hissed at her.\n\nShe looked up at me, her smile flashing bright. She crawled up my body, her skin rasping against mine. Her mouth found mine as she pressed her body down on me. She was so warm and inviting...\n\n\"Oh god...\" I moaned as she pushed me into her.\n\n\n\nChapter 5\n\n\n\nThat first day on the bus seeing Jacky was the hardest. She got on the bus about five stops after me. She was obviously extremely pissed. She walked straight to her seat and dropped into it, glaring at me the entire time. While a part of me wanted very much to keep her mad at me, a part of me knew that I had wronged her, and that in turn kept me civil. I let her get off before me, and I kept a good distance from her. I wanted to apologize for being a dick, but I also wanted to keep my distance from her. Sometimes the best thing you can do to make up for hurting someone is to help them remember that you should be forgotten...\n\nI tried to not look. I kept my headphones on, and a book in my lap. I kept my focus on those things. I went out to lunch with Karly that day. She was not having it...\n\n\"How'd this morning go?\" She tried to keep it casual, like she didn't really care. I knew that was bullshit. In her mind, she probably saw Jacky rush onto the bus with me and dive straight into my lap...\n\nI looked up from my sandwich. \"Tensely. Is that a word? It doesn't sound like a word. Did I just make that word up?\"\n\nShe narrowed her eyes at me. \"How are you in AP English? Yes, tensely is a word.\" She snapped her fingers at me. \"Now stop trying to change the subject.\"\n\nShe was kind of pissing me off...\n\nI gave her a dark look. \"There's nothing to talk about. She hates me. I don't intend to disabuse her of that notion. Problem solved.\"\n\n\"Look, I just want to know.\" She told me defensively.\n\nI pushed my anger at her down. I loved her, but she was making it tough... \"Please stop.\"\n\nHer eyes locked with mine. I could tell she was looking for something to say. I could tell a part of her wanted to argue with me, a part wanted to apologize, a part wanted to smack me in the head.\n\nI didn't wait for Karly roulette to land on a number. \"I didn't cheat on you, so stop treating me like I did. I get it, but please, knock it off. I love you, but you're pissing me off right now.\"\n\nRage flashed across her face. She managed to push it down before she opened her mouth...\n\nI was really proud of her for that.\n\nShe ground her teeth and shook her head. \"It isn't you, it's her. I just.\" She shook her head and sighed heavily.\n\nI cut her off before she could start talking again. \"Don't lie to me, and certainly don't lie to yourself. You don't trust me. I can't say I blame you, but I can tell you right now, asking me is fine. When I tell you and you keep pushing it starts to feel a hell of a lot like you're calling me a liar.\" My eyes narrowed at her. \"That's going to get real old for me, real fast.\"\n\nShe sighed and nodded. \"I get it. I'm sorry.\"\n\nI reached across the table and took her hand. \"Don't be sorry. Nothing to be sorry for. I just need you to know where the line is.\"\n\nShe scooted from her chair across mine to the one next to me. She put her head against mine. \"I'm sorry. I don't want to be neurotic girlfriend... I just can't help it.\"\n\nI gave her all too close lips a quick peck, \"It's okay. We'll work through this together.\"\n\nThe next day, still the silent treatment.\n\nThe same the day after.\n\nOn Friday, she sat in front of me. Midway to school she turned around and said something to me. The headphones Karly had bought me for Christmas were really nice noise canceling ones, so I didn't catch what she had said. I looked up, pulled them out and asked, \"What?\"\n\nShe shook her head angrily and turned back to face the front of the bus. \"Fuck you.\"\n\nI just shook my head, sighed and put my headphones back in.\n\nPart of me wanted to say something. The smarter part of me realized that she was trying to provoke me. To get me to say something stupid. The entire thing seemed so petty. I really wasn't interested in getting involved. This entire thing seemed so fucking pointless. I realized the best thing I could do was just ignore her. She would work herself up to the point that she finally started hating me and that would be the end of it. She would get her closure, I would get peace, and Karly wouldn't have to worry anymore.\n\nAfter about two weeks she turned and started talking to me again...\n\nI was really hoping she would just let it go...\n\nI sighed and took my headphones out. For a split second, I considered talking to her. Trying to explain it to her. Trying to figure out a way to make her understand that she wasn't a bad person. That it wasn't something she did, or something she wasn't. That it was just a matter of Karly being a better fit for me.\n\nI looked into her pixie face and felt very sorry for her. \"Look. I'm sorry about what happened. I shouldn't have done that to you, but I did. I can't help it. I can't make it change, and if I could the only change I would make would be to break it off with you before I got together with Karly.\"\n\nShe started to talk and I held my hand up to her, shaking my head. \"Just stop. All you are doing is rubbing salt in your own wounds. Just stop doing that to yourself. You win. I'm a lousy person and you get to walk out of this whole thing realizing that you did absolutely nothing wrong.\"\n\nTears started to well in her eyes. \"I just wanted to be friends again...\"\n\nI sighed. It hurt to hear her say that. I felt bad for her. I knew her home life was shit, I had seen that first hand, and for the briefest of moments I considered working out some way we could make that happen.\n\nMy common sense kicked in though...\n\nI shook my head. \"I think that would be a mistake for both of us. You need to move on. I need to make sure...\"\n\nI didn't want to say I need to make sure I stay loyal...\n\nBut I did want to make sure I stayed loyal. It wasn't that I felt that there was any chance of Jacky tempting me away from Karly, but I figured closing that door and not testing the theory was probably the smartest way to ensure that I never stepped over the line. There was also Karly's feelings to be considered.",
        "While a part of me railed against the idea of Karly picking who I spent time with and who I didn't, a very strong part of me realized that in this case being friends with Jacky would hurt Karly and no friendship was worth that.\n\n\"I need to make sure that I take care of Karly better than I took care of you.\" I finally settled.\n\nShe shook her head at me, something like panic seeping into her features, \"We can be friends. Just friends. I can move on with us just as friends. I just get so lonely...\"\n\nI sighed. \"I'm sorry. We can't be friends.\"\n\nThe look of sorrow on her face turned to one of despair, leaving me feeling like a monster. Leaving me feeling like I was the one turning my back on someone. I realized then, in that moment that there were times when you had to turn your back on someone, even when you didn't want to, even when you knew it was the absolute wrong thing to do...\n\nWith that, I put my headphones back in and went back to my book, I felt like a total asshole...\n\n\n\nChapter 6\n\n\n\nI found myself sitting on the floor in the team hotel room the night before the State tournament started. Karly sat in front of me, my arms wrapped around her. Coach stood in front of the biggest group he had ever taken to the State tournament. Pride beamed across his face, but I could tell he was tense. The team had never won a State championship, and I could tell, in his mind he had already decided that with the raw number of guys he had in the tournament this was the best chance he ever had.\n\nHe was nervous, and under a great deal of stress.\n\nHe looked at all of us with intensity, his eyes landing on Karly in front of me. I could see those eyes narrow just a bit. He let it go, but I could tell he was not happy with it.\n\nI decided that he could deal with it. I had been good. Karly was my girlfriend, and she had not been a distraction. She, if anything had kept me functional. I had had several panic attacks in the weeks leading up to the State tournament and she was the only thing that was keeping my mind straight. Coach didn't know about that, and I decided that he didn't need to know.\n\nHis eyes moved away from us and started ranging over the group again. \"All of you have earned your spot here. Look around you. Each of you deserves this.\"\n\nHe put his beefy hands on his hips. \"I won't lie to you. This is the biggest group that we have ever taken to the State tournament. It is the best chance we have ever had at walking away with a State Championship. Wrestling is an individual sport, and I know each of you is interested in placing the best you can for yourselves, but I also want you to all know that I'm counting on all of you to represent the team and do your best for your school.\"\n\nHe met each set of eyes in turn. \"Some of you,\" his eyes landed on mine, \"are ranked extremely highly in this tournament. I want to remind you, this isn't a regular tournament. There will be no easy matches. Your first match out of the gate is with either a District Champion, or with a runner up. I need you to remember that there is no coasting here. Every guy that you wrestle in the next two days will be your equal. Does everyone understand that?\"\n\nI looked around the room and saw a lot of heads nod. Sep was there. Joe had won his own district championship. Nick had come in second and had gotten a place at the table. The one that made me proudest was that Shawn, the other heavyweight on the team had come in second... he was sitting beside me. Our weeks of wrestling had put a shine on him. I had watched with pride as he used one of the moves I had shown him to put away a kid that had beaten him every time they had wrestled.\n\nHe looked at me and I smiled at him. He elbowed me. We had struck up something of a friendship over the past few weeks. One that I was extremely proud of. He was a good kid, and had worked really hard. I was proud to have him at my side.\n\n\"Let's go over some rules while we're here. All of you will be there for the entire tournament. I expect you to stay in our team's section.\" He looked over at the four parents that had agreed to come as chaperones. There were more parents that were traveling to watch their kids, but these four were the official team chaperones. We knew, their word was just as strong as coach's. Karly's mom and dad were there, as well as one of the other kids on the team, Todd. \"I want to thank Karly's parents, Mister and Missus Kay, and Todd's parents, Doctor and Missus Benjamin for helping out. There are enough of you here this year that the coaches will have a hard time keeping up with matches. They are going to be watching out for you during our off time. What they say goes.\"\n\nHis eyes narrowed, \"And remember, while practices may be over for those of you who are seniors... I still control your Varsity letter.\"\n\nI laughed. Some of the guys could get a little rowdy on normal trips, so a trip at the end of the season, with no consequences... that could be a quick nightmare.\n\n\"So, if one of you kicks a hole in the wall, and finds the need to replace it with say... toothpaste...? You'll be hearing from me.\"\n\nI eyed Joe and Sep as they nervously laughed...\n\nThey had kicked a hole in the wall of the hotel room at the Reno tournament this year and had hastily patched it with toothpaste. Apparently, coach had heard something about it...\n\nCoach put his hands back on his hips. \"All I can say is that was not a fun phone call, and we are all lucky the hotel couldn't prove the wall wasn't like that before we got there...\"\n\nCoach gave me a stern look and I shook my head at him. \"We won't have a repeat performance. Am I clear?\"\n\nThere was a raucous, \"Yes coach!\" that ran through the room.\n\nWe all got to bed early that night...\n\nEmotions were high. People were nervous.\n\nI ended up sharing a bed with Shawn... not my preferred sleeping partner, but Karly had her own room down the hall...\n\nI considered asking coach if I could sleep with her.\n\nI don't think he'd have thought the joke was funny.\n\nWe woke in the morning, had breakfast with the team, and headed over to the tournament. Coach caught me as I got off the bus. \"You have a number one seed. You get that doesn't mean much once that whistle blows, right?\"\n\nI smiled at him. \"I know coach. Doesn't matter where you start the tournament. Only matters where you finish.\"\n\nHe smiled at me, \"Good boy.\"\n\nI destroyed the first kid I faced. As the number one seed I faced the last placed seed in the tournament. It was unfortunate for him. I took him over in an arm throw in the first thirty seconds of the match and pinned him in under forty-five seconds.\n\nI thought my second match was going to be exactly as much of a joke. The kid was aggressive, but clumsy. As soon as the whistle blew, he charged me like an enraged bull. He had weight on me, but no control. I could tell he was strong, and used to using that strength to beat on guys he wrestled. I was his match in strength, knew I had technical skill on him, and was much faster than he was.\n\nI had this match in the bag.\n\nHis first charge pushed us both out of bounds. The ref brought us back to the center, reset us and blew the whistle again. He charged me hard, and I ducked underneath his attempt to lock up with me. My arms circled around him in a bear hug. As soon as I had him set I knew the match was over.\n\nApparently, nobody sent him a copy of the memo. I don't know what he was thinking, but he almost instantly tried to hit me with a head and arm throw, only he really only got hold of my head...\n\nIt didn't stop him from throwing both of us hard to the side. Not a big deal. Just hold on to the bear hug, and once we hit the mat, readjust and pin him.\n\nAs we hit I felt my right wrist pop...\n\nIt stung a bit, but my hand popped right open. He squirmed and like that he was free. He didn't press it. He knew I had him and it caused him to back off fast.\n\nCoached screamed at me for letting him go. I cussed myself for letting him loose. I had him goddamn it!\n\nI stood with him, shaking my hand as the pain started to bleed in.\n\nMust have given me a stinger when he landed on me. I thought, trying to get the burning in my hand and wrist to go down. Just roll with it. Give it a chance to calm down.\n\nWe circled. My hand started to really hurt. I tried to buy some time, circling around him and testing how good his shoot defense was. He charged me a few times and I started to realize that the best way for me to put him out of my misery was going to be to go back to the bear hug. It was obvious from his first reaction that he had no defense to it, so if I could just get it locked in I knew he was doomed.\n\nHe charged hard again and like textbook, I wrapped him in a bear hug. I could tell for some reason he was thinking he was in a good position. He thought he had me in a double underhook. What he was too stupid to understand was that with my hands locked around his back he had zero leverage.\n\nI was more conservative this time. This time, I wasn't going to try to take him over hard. I was going to pick him up, squeeze the life out of him and then put him straight on his back.\n\nMy hands tightened and my right hand screamed in agony...\n\nI forced myself to ignore the pain and lifted him off the ground.\n\nOnce again, my wrist popped and this time the pain was so intense my knees went weak, and my grip turned to water. He felt my grip slip and like that he threw another head and arm. This one was far more successful than the last. Instinct was the only thing that kept me from getting pinned. I felt him shift and threw myself into the roll.\n\nHad I reacted a blink faster I would have taken him over the top of me and ended up on top. A blink slower and I would have ended up on my back, fighting to keep myself from getting pinned.\n\nMy reaction was just good enough to put us both in a shitty stalemate. My right hand was useless, so I used my left to attempt to get loose. He continued to try to pull me in, not realizing that there was no way he was going to get enough leverage to get me into a takedown, much less a pinning position. We lay on the mat for the last thirty seconds of the round. Too tied up to get loose, but both in too awkward of a position to leverage for something better.\n\nThe whistle blew, signaling the end of the round.\n\nI would have been disappointed had the pain in my hand not been blinding. I tried to put my weight on it to get up and it was like I was trying to cut my own hand off...\n\nFinally, using a centering technique my dad had shown me I managed to get my mind calmed and got to my feet. The hand hurt, but I could do it. I could gut through it. This guy was a loser. He was overzealous, he was clumsy. I just needed to wrestle better than him. I needed to be clever and use my speed. A little rest between matches, maybe get coach to tape my wrist to make it a little more stable and I'd be fine.\n\nI looked over at coach and he was screaming at me to get my act together. He seemed really pissed...\n\nI worked my way over to the center while the ref flipped the coin. It came up red. I was green...\n\nPlease don't take top. Please don't take top. I pleaded inwardly...\n\n\"Top.\"\n\nFuck!\n\nHaving to go down meant I had to go to all fours, hands and knees. Worst of all, that meant I had to put my hands flat on the mat, and that meant that I had to support not only my own weight, but my opponent's as well.\n\nWell, this is going to fucking hurt... I told myself as I cradled my wrist to my body and dropped down, both knees and my left hand to the mat. Be tough. It's only for a second. Once the whistle blows, pull your weight off of it and get the hell out of there.\n\nI put my right hand on the mat and agony screamed up my arm. I meant to put it all the way down flat, as you were required to do, but all I could manage was a curled hand. It wasn't legal... I wasn't where I was supposed to be.\n\nMy opponent wrapped his arms around me. I thanked god himself he set himself on my left side...\n\nI prayed for the fucking whistle...\n\nBe tough. It's coming. I promised myself.\n\nInstead of the one short whistle that would have signaled the start of the round there was one long whistle. My opponent twitched anyway, sending a shiver of the most grinding pain I had ever felt driving through my body...\n\n\"Warning, green, false start.\"\n\nFuck! Wait, what? I'm fucking green!\"\n\nI looked at the ref, agony in my face, trying to convey my confusion...\n\n\"Green. You have to put your hand flat on the mat. Your right hand is cupped.\"\n\nFuckfuckfuck!\n\nCoach was screaming at me for not paying attention. I just ignored him...\n\nI reset myself. Laying my right hand as flat as I could I felt the pain shoot up my arm. I had to do this. I had to. Another false start and I'd lose a point. Eventually I'd get dq'd. I had two choices. Get my hand down flat or give the match.\n\n\"Green, set!\"\n\nI forced my hand flat on the match. The pain was agony. I had never felt anything like it in my entire life...\n\nMy jaw clenched and my teeth chattered.\n\nI forced my mind into a calm place...\n\nI can do this... I promised myself.\n\nMy opponent got himself on top of me.\n\nI swore to myself that if the ref called me again I would quit... I couldn't take this again.\n\n\"Top set?\" I could feel my opponent shake his head.\n\n\"Bottom set?\"\n\nJust blow the fucking whistle you fucking cunt! My brain screamed.\n\nI shortened it to just nodding my head.\n\nThe whistle blew and I was out of there like a fucking meteor. I hipped out to my right side, curling my right arm back, flipping my left leg beneath me and sliding out from beneath him like a shot. I was way too fast for him to hold on to me and I could tell once again he had no chance against me.\n\nAs I spun from his grasp I lashed out with my left hand and palm struck my opponent out away from me.\n\nEscape! That puts me up by a point!\n\nI couldn't rest on that though. My chances of pinning this guy without being able to use my right hand were slim to none. That meant I had to go a full six minutes with him. Someone was going to have to go down in the third round, and after having done that, and escaping from it I promised myself that there was no way in fucking hell that someone was going to be me. I needed some points so I could start stalling. It was a shitty plan, but I needed to buy myself some time to get my wrist to stop hurting so badly, and I needed to win this match if I wanted to stay in the winner's bracket...\n\nI lashed out with an open palm strike any time he got close to me. I knew I was telegraphing that I was hurt, but I couldn't help but keep my right hand curled up defensively against my chest.\n\nI remembered all of the times I had practices a left-handed stance...\n\nI had started it as a goof, like I was doing something clever. As I went on I started to realize being able to offset my body was sometimes handy...\n\nConsidering I had to use a left-handed stance in order to fend off this charging bull while I bought myself some time to think I was really glad for that practice...\n\nI needed a takedown I didn't have to use my right hand for...\n\nMy double leg depended on my grabbing both the guys knees.\n\nMy single depended on me being able to lock up.\n\nFireman's carry would work, but was one of my worst take downs...\n\nAs I worked through and discarded moves I realized that I really had only two choices. An overhook throw, and a high crotch. The overhook had two benefits. The first, and most appealing, was it took my opponent straight to their back. The second was that I threw all my overhook throws to my left side and I didn't have to use my right hand at all to pull it off.\n\nProblem was, I had to pull his weight over my body, and that meant taking an impact on my right hand. I also needed to be able to close the throw out and pin him, which meant I'd have to flip and put my right hand beneath his head...\n\nThe throw was the kind of takedown that was either a home run, or a sacrifice fly... it either ended in a pin, or nothing at all. I would not be able to convert it to a takedown if I flubbed the pin...\n\nHigh crotch it is...\n\nThe high crotch was going to be tough. I needed to put all my weight beneath my opponent, thread my right hand through his legs, grab my right forearm with my left hand and lift my opponent bodily off the mat...\n\nFuck it. I thought as I palm struck him in the forehead again.\n\nIt was the sixth palm strike I had thrown at him. He was used to it and must have figured the next one was a great opportunity to charge me again. His hands went out to grab me and I just wasn't there anymore...\n\nI felt my knee kiss mat, my shoulder strike him in the waist, my left hand wrapped around my right forearm...\n\nThe pain was still intense. Not as intense had I tried to lock my hands but still very bad. I had intended to lift him bodily off the mat. Use the pressure on his groin to knock him off balance but the pain broke my concentration for a split second. I settled for driving him on his ass. I made doubly sure to get my hands out from beneath him prior to him hitting. Had he landed on my hand I would have blacked out from the pain, I was sure of it...\n\nHe went to his ass and like a fool he tried to wrap his arms around me and muscle his way out of it...\n\nHis coach was screaming at him to get to his stomach.\n\nHe banged my hand a little bit as he flipped over and I nearly screamed from the pain...\n\nI ended up on top.\n\nThree points up! That means two full stalling penalties ahead... room to breathe! My brain screamed.\n\nI considered my options. With only one hand there was no chance I would be able to roll him over. I had zero moves that did not use my dominant hand from the top. At least not with him flat on his stomach. If I let him get to all fours I could leg in. That put me at risk of him getting lose on my again, and if he got to his feet I would lose some of my precious lead...\n\nI settled with using aggression to substitute for movement. I slid up his body and have him a right forearm shiver to the back of the head. Normally I'd have used it to unsettle my opponent. This time I was just making it look like I was taking a moment to settle on a move. Pain shot up my arm, but it was manageable. I came across his face with my left arm, trying to make it look like I was going for a double under.\n\nIn reality; I was stalling my ass off.\n\nHe surged up to all fours and I did the one thing that was available to me. I legged in.\n\nHe went down like a sack of bricks...\n\nIt was both a win and a loss for me. On the plus side, there was no way he could get away from me...\n\nOn the negative side, I had so much control over him that there was no way he could get out. That put the onerous on me to progress the match...\n\nI was going to get called for stalling very quickly. With only my left hand, and a leg in, I had a chance of pinning him... had I practiced closing out pins with my left arm...\n\nI hadn't put that practice in though...\n\nSo, I did something crazy. I let him sit out. In order to block it I would have needed to lean my weight back on my right hand, no way I could do it...\n\nI let the leg in go and laid a body scissor him. It was a jack move. There was no way I was getting a pin out of it, not against a wrestler of his class. One thing it did however...\n\nIt made it look like I was trying to get a pin.\n\nI never got back points. I never got him close to a pin. It sure looked like I was trying though...\n\nI stalled out the rest of the match. I drew my warning, and then he got his point... I managed to hold out.\n\nI made the ref raise my left hand.\n\nCoach caught me as I went to the side and started to grab my warm ups. \"What the hell was that? You had that kid outclassed by a mile.\"",
        "I was in so much pain I could barely move, much less speak. \"Hurt my hand coach...\" I finally managed to croak out.\n\nHe put his hands on his hips, \"Don't make excuses. You should have put that kid away in the first round with a pin. Not embarrassed yourself with a stall out victory.\"\n\nHis words stung me as bad as the pain in my wrist and hand...\n\nI had let him down...\n\nI had let myself down...\n\nKarly was there then, I could feel her hand on my back as I leaned down and tried to pick up my stuff. My right hand was a blaze of agony and I kept it cradled in tight to my body. I picked everything up with my left. \"What's wrong? What hurts?\" She asked me, her voice nearly in panic.\n\nI couldn't even bring myself to look at her I was so ashamed...\n\n\"My right hand. I hurt it.\" I managed through gritted teeth and tear-filled eyes.\n\nCoach continued to rail at me. I didn't think he could be so cruel...\n\nI was wrong.\n\nKarly finally had enough. \"Coach, stop. I think he's hurt.\"\n\n\"He's not hurt. He's making excuses for going out there and acting like he could just coast through that match!\"\n\nI looked at him and saw he was red faced with anger. I had never seen him that angry before...\n\n\"I'm sorry coach. I'll do better next time.\" I pleaded with him. I could feel panic rising in me. It was like it was with my dad, when I had pushed him too far, when the pushes, and the slaps and the choking was about to start...\n\n\"I'll do better...\" I squeaked...\n\nHe took a step forward and my she-wolf fell on him like a wounded deer. \"You stay away from him! I can't fucking believe you! You care more about this stupid tournament than you do about him!\"\n\nCoach rounded on her red faced and I felt my panic slam down into a deep cellar. Anger came rushing out.\n\n\"What did you say...\" He started, but she cut him off.\n\n\"I said you care more about this stupid tournament than you do about him! How dare you! He trusts you!\" She screamed.\n\nThen Joshua was there...\n\nHe held his daughter back and stepped between her and coach. \"Coach, take a step back. I'll handle this.\"\n\nCoach pointed a finger at Karly, \"It's your fault he's distracted! He would have never have wrestled that badly if you hadn't have been here!\"\n\nJoshua's voice was like a whip, \"Coach! Shut your fucking mouth!\"\n\nCoach stopped like he had been slapped, his mouth working like a fish out of water.\n\nJoshua was seriously pissed. \"Now walk away, I'll handle this.\"\n\nCoach had murder in his eyes...\n\nHe walked away though...\n\nMy hand hurt so much I could barely breathe...\n\nThe instant coach walked away Karly was there again. I was still bent over, curled around my pain. \"I'm sorry baby... what hurts?\"\n\nI rocked a little, trying to will the pain away. \"My hand. He landed on it when I went for that bear hug. I felt something pop in it. It really hurts now...\" I mumbled.\n\n\"Dad. He's hurt. Can you look at it?\" She pleaded.\n\nJoshua came to me with concern in his eyes. \"Let me see son.\" He commanded.\n\nI really didn't want to show him. I didn't want to do anything but keep my hand against my body, to curl around it and ensure that nobody else touched it.\n\nHe reached in and pulled at my arm, careful not to touch my hand. Reluctantly, I let my hand away from my body.\n\nWe looked at it together. There was a lump forming on the back of my hand, a big one...\n\nJoshua looked at me. \"I know it hurts bud.\" He turned my hand this way and that.\n\n\"Is it broken?\" Karly asked. I could hear the panic in her voice.\n\nJoshua looked at her, obviously trying to calm his daughter. \"Hon. Gabby's tough, but I don't think he could have finished wrestling that match with a broken hand.\"\n\nHis eyes returned to me. \"Can you move your fingers?\"\n\nI tried. I gritted my teeth and pain raked through me. It felt like someone was sawing my hand off, but I managed to move all five of my fingers. \"Yes sir.\"\n\nHe put his hand on the back of my neck and pulled me in for a rough hug. He whispered into my ear. \"I know it hurts son...\"\n\nI felt a new stab of pain as I remembered the horrible things coach had said to me. He was right. I was a loser. I had let myself down. I had let the team down...\n\nI had let him down.\n\nJoshua's arms were around me. \"I'm proud of you Gabby. I can see how much pain you're in, and you kept fighting. You did good.\"\n\nI tried to nod. I tried to keep from crying....\n\nI felt so weak.\n\nI had my warm ups curled in my left arm and I was just standing there standing like an asshole...\n\nJoshua patted me on the back. \"Don't listen to what anyone says if they say differently. You did good son.\"\n\nI shook my head vigorously. I knew he was lying to me...\n\n\"Karly, get him back up into the stands. Get him some ice for his hand and go to your mom and get him some ibuprofen. He needs to get the swelling down before the next match.\"\n\nI stayed curled up on myself, my eyes glued to the floor as Karly put her arm around me and started to walk me away. I felt like shit. I was shit.\n\n\"Karly?\" I heard Joshua say. I felt her turn back and look at her dad. \"Keep coach away from him too. Okay?\"\n\nI felt her nod.\n\nWe stopped by the stairs leading up off the main floor so I could put my pants on. I could barely move my right hand, and Karly had to help me in pulling them up.\n\nShe laughed nervously. \"First time I'm helping you to put clothes on... feels a little weird.\"\n\nMy eyes met hers. She smiled at me.\n\nShe was trying so hard. She was trying to get my brain out of the fog.\n\n\"I love you.\" I finally managed.\n\nShe pulled me in for a full hug. \"I love you more baby boy.\"\n\nI wanted to cry.\n\nI hurt so fucking much. The pain was so much worse now than it had been during the match...\n\nI wrapped my top around my arm, for some reason the extra pressure made it feel a little better.\n\nWe made our way up to the stands and Karly made me unwrap it and show it to her as she knelt in front of me. Joe rushed in... \"What's wrong?\"\n\nShe looked at him. I could tell she wanted to lash out at him, but she must have seen something in his face that made her forget how angry she was at him for how he had treated me. \"He hurt his hand. Go find the trainer now.\"\n\nThe look she gave him brooked no argument, and he leapt over the row of chairs we were seated in in his haste to go for help. She poked at my hand and I nearly screamed.\n\nThrough gritted teeth I told her. \"Please don't do that again...\"\n\nShe put her hands on each side of my face. \"I'm going to go get you some ice and some ibuprofen. Just sit here and rest okay?\"\n\nI gave her a pained smile and nodded, thankful just to be left alone for a second...\n\nKarly made it back before Joe got back with the trainer. She put a Ziploc baggy full of ice on my hand, and wrapped it with my warm up. I sat in my chair and rocked, trying, unsuccessfully to will the pain away.\n\nIn about five minutes the trainer arrived. One of the other coaches was also the team trainer. He was a stern, slim man. \"Coach told me you got a stinger...\" he announced as he arrived. \"He isn't too thrilled with you pulling me away from the match.\"\n\nI shook my head. \"He's right. You should go back, I'll be fine.\"\n\nKarly looked at him, pleading with her eyes. \"Just look at his hand coach. He's in a lot of pain, and he can barely move it.\"\n\nCoach sighed and shook his head. \"Okay, let's see.\"\n\nI was ashamed that she was making such a big deal out of it. It hurt. It hurt worse than any injury I had ever had, but I could handle it. Hell, I didn't have much choice but to handle it.\n\nI unwrapped it and held my hand out to coach. He took my hand between his and put both his thumbs on either side of the lump on my hand. He moved his fingers back and forth and I could feel something grinding in my hand.\n\nThe pain was blinding. So, painfully blinding I had to close my eyes and send my mind to the quiet place...\n\nNext, he put his fingers in my hand. \"Squeeze.\"\n\nI squeezed for everything I was worth.\n\nMy grip was pitiful. The pain made me want to pass out, and I could feel I had little more than a child's grip.\n\n\"Is his hand broken?\" Karly asked, her voice full of concern.\n\nCoach shook his head. \"I don't think so. He wouldn't have been able to finish the match if it was broken.\" He put the ice pack back on my wrist. \"Keep the ice on it. When you get called for your next match I'll meet you by the check in area and I'll tape your wrist. Okay?\"\n\nI met his eyes, swallowed my pain and nodded, not trusting my voice not to squeak if I answered him.\n\nCoach left and Karly fussed over me. My mind started to go to a dark place...\n\nShe suddenly pulled my arm around her and lay her head against my chest.\n\nI rocked myself against the pain. My brain spiraled lower. \"You should go. You're supposed to be keeping stats on the matches.\" I heard myself say.\n\nI knew she shouldn't go. I knew where my brain wanted me to go and I knew it would find dark alleys to walk if she left. Most of me didn't want her to leave, but a part of me felt so bad for letting coach down, that I felt like punishing myself...\n\n\"I'm staying right here. You need me right now.\" She whispered.\n\n\"Coach will be mad.\"\n\n\"Coach can eat my cunt on a warm slice of bread.\" She hissed.\n\nI found that immensely funny...\n\nMy hand hurt as I threw my head back and giggled my head off. She had pulled me away from it...\n\nI wrapped my left hand around the back of her head and pulled her in close. I didn't kiss her during tournaments, but I would rub the hell out of her nose...\n\n\"I love you baby boy.\" She whispered to me.\n\nI nodded. \"I'm really tired all of a sudden...\"\n\nShe nodded against my head. \"Okay, get some sleep. I'll wake you up a when they call you. Then we'll look at your hand again.\"\n\nMy hand still hurt badly, but I had developed a habit of taking a nap between matches at a big tournament and it looked like my body was in full expectation that this was going to continue to happen. Normally, tournaments were held at schools, and that made the process of dropping off pretty easy. We all sat in the bleachers around the basketball court and it was easy to just lay out between the benches and drift off. Here, in the bigger venue there were actual seats and a concrete floor. That meant in order to take a nap I either had to try to sit upright in the seat and sleep, or crawl down in the much more limited space in the aisle to make room for myself.\n\nI laid my sleeping bag out, thankful for the extra padding it provided on the concrete floor, grabbed my pillow and laid down. I kept the ice on my hand, with my warmup wrapped around the whole affair.\n\nKarly said, \"Maybe you should take the ice off your hand before you fall asleep. I don't want you to get frostbitten.\"\n\nI was so tired. I just wanted to go to sleep and make the pain stop...\n\n\"I'll be fine. I need the swelling to go down so I can use my hand.\"\n\nShe looked at me, the concern and love on her face apparent.\n\n\"I'll be okay baby girl. I love you.\"\n\nShe nodded her head. \"I love you too. Go to sleep.\"\n\nSleep took me quickly...\n\n\n\nChapter 7\n\n\n\n\"Baby boy, wake up.\" Karly was shaking my foot.\n\nI jerked awake and banged my hand against the seat in front of me...\n\nThe pain was like nothing I had ever felt before. My breathing stopped entirely and I lay there paralyzed by it as the sensation rocked and tore up and down my arm. It was like a live animal was chewing on my arm. Something strong, like maybe a bear...\n\nI sat up, curling my arm into my body protectively.\n\n\"Shit!\" I heard Karly cry. \"Todd, go get your dad please. I need him to look at Gabby's hand.\"\n\nI shook my head. \"I'll be fine.\"\n\nKarly was kneeling on the cement in front of me. \"Todd's dad is a doctor. It won't hurt to have him look at your hand.\"\n\nI looked at her with misery on my face. \"It matters. I can't quit. I have to keep wrestling.\"\n\nI could see the pain on her face, mirroring my own. \"Baby boy, if you're hurt you can't keep going.\"\n\nTrying to control my breathing and focusing past the pain I looked into her perfect eyes. \"Hon, this is the State Tournament. It's the only tournament that really matters... my scholarships will be riding on this...\"\n\nAnd there was the crux of the matter given voice. I didn't want to keep going. I wanted so much to quit and walk away. To go and crawl into a deep, dark hole and pull it in after me. I wanted so much for the pain to stop.\n\nI expected Karly to understand.\n\nI was smart, and in the top classes in my school, but my grades were shit. The only hope I had to get into a school that Karly could afford was an athletic scholarship. If I couldn't get into one...\n\nI would lose her. I couldn't lose her.\n\nTears started to well in her eyes as she looked at me. She shook her head. \"You stupid man.\" She muttered. \"We'll figure this out. We'll make it work, okay?\"\n\nI shook my head at her. She didn't understand. She was a little rich girl. I loved her for it, but it made her na\u00efve about the world. People didn't care about you. People didn't do nice things out of the kindness of their hearts. People treated you good as long as you had something to give me. It was the only reason they were decent to each other. Once they had what they wanted from you, once they had used you up, you were worthless to them. Worthless things are normally discarded.\n\nMaking myself get up, I used my left-hand steady myself on the chair in front of me and pushed myself to my feet. My hand screamed in agony and I did everything in my power to will it away. I had made pain worse than this go away, I would make this pain go away too.\n\n\"Sit, sit, sit.\" Karly ordered me.\n\nI shook my head. \"No. I have to get ready.\"\n\n\"Sit.\" The authority in her voice was like chains grating. \"I woke you up a weight class early so we could look at your hand. We've got time.\"\n\nShe reached out tenderly and started unwrapping my warm up. I noticed with dismay it was wet from the ice. That was going to look great... I was going to look like a slob out there, wearing a wet warm up...\n\nKarly got down to the ice and pulled it off my hand. It was like someone took a branding iron to my skin it hurt so bad.\n\nShe tilted her head back and forth, inspecting my injury.\n\nI looked at it with her. \"See the redness has gone down. It will be fine.\"\n\nThe look in her eyes was pure murder. \"You've had ice on it for a solid hour dipshit. Of course, the redness went down. Your hand is white as snow. The swelling hasn't gone down at all though.\"\n\nShaking my head at her, I muttered, \"I can't. I have to keep going.\"\n\nShe set her jaw and I could tell I wasn't going to win this argument. \"Todd's dad is a doctor. There's no harm in him looking at it. If he says it's just a stinger I'll turn my clingy girlfriend mode off and you can go beat your head against the wall, okay?\"\n\nIt was the best compromise I was going to get, so I pulled my arm defensively back into myself and nodded.\n\nTodd got back in a minute or two, babbling to his dad the entire time. Todd was one of the smaller kids, and a really nice guy. He was a little on the dorky side, the kind of kid that never really fit in, but he still had a good heart. He wasn't like me, he didn't let his status as an outsider get him down, and he never seemed to be anything but perky.\n\nTodd's dad was a slight man, older, balding, but he seemed a genuinely jolly fellow. He always had a smile on his face, and he always seemed like he was ready to help out.\n\nI felt bad having a doctor look at my hand. I knew his time was valuable, and I knew I couldn't pay him...\n\n\"Let's see there, buddy.\" He announced as he arrived.\n\nI stood and walked over to him. I didn't want to show him. I didn't want this slight man to end my dreams...\n\nHolding my hand out to him he hissed. \"Oh, yeah. That's broken.\"\n\nI felt like the air had been let out of the room.\n\n\"No. It can't be broken.\" I argued. \"I can move my fingers!\" I forced my hand to close. The pain was blinding.\n\n\"Stop that!\" he ordered. \"You're just grinding the bones on themselves.\"\n\nHe took my hand and held it gently. With his left hand, he patted me on the shoulder. \"That's an old wives' tale. You can move with a broken bone. Most people just aren't tough enough, or stupid enough, to order their body to do it.\"\n\nHe looked into my eyes and I could tell he knew he was shattering my life. He shook his head at me. \"It's going to be okay.\"\n\nKarly's arms wrapped around me from the backside. \"We'll figure it out.\"\n\nTodd's dad, patted me on the shoulder. \"Keep your arm elevated. It will make it hurt less. Let's go find your coach.\"\n\nI felt the breakers in my mind kicking one by one. Unnecessary systems shutting off.\n\nI looked at him and nodded dumbly. This was something I didn't want to feel. I didn't want to think about this, so in my mind I just started shutting things off...\n\nOn the plus side, my hand didn't hurt so much anymore.\n\n\n\nChapter 8\n\n\n\nWe walked down onto the wrestling floor. Me, Karly, Dr. Benjamin, Joshua and Marsha. Karly had insisted that I bring her dad along as we went to talk to coach. In some part of my mind I knew it was because of how coach had acted earlier. How he had lashed out at me.\n\nI really didn't want Dr. Benjamin or Joshua there. This was my last chance, I needed to talk coach into letting me wrestle...\n\nI should have never let the doc look at my hand.\n\nWe met coach as he transitioned between matches and as soon as he saw me there was pure murder in his eyes...\n\nSee. As soon as someone has what they want from you, you become worthless to them. And worthless things get discarded. I told myself.\n\nAs much as coach claimed he looked out for me, it was just an act. He needed to keep me focused and winning matches for him. Everything he had said was a lie to keep me aimed at that purpose. As soon as he had what he needed from me, he turned on me. The same thing had happened with my head football coach. He was supportive, and helpful and seemed like he looked out for me. As soon as my senior's year football program ended, he started to treat me like something he scraped off the bottom of his shoe. My place was taken by the younger guys, and that was that.\n\nI had asked him to put together a demo tape from team film after the season ended. He told me he would and never did it. I asked him to let me borrow the film so I could do it myself, and he told me that he couldn't get them to me because they were locked up in storage.\n\nCoach was just like everyone else.\n\nHe turned his back on me.\n\nThe final breaker in my mind shut down.\n\nI couldn't handle it. I couldn't take this kind of rejection from another person that I loved and respected.\n\nCoach's face changed when he saw all the people around me. \"What's wrong?\" He asked, looking directly at me.\n\nI looked at the floor and shook my head. I couldn't look in his eyes. I couldn't stand to see another person just flip that switch in their mind and watch me become dead to them.\n\nKarly spoke up. \"His hand is broken. He needs to go to the hospital.\"\n\nCoach's voice was sharp. \"What? The trainer said he just had a stinger.\"\n\nSomething broke in me. This was my last chance. I needed to wrestle. I needed to prove myself to the colleges out there. I needed that scholarship. I needed Karly.\n\n\"I'll be fine coach. Tell them I'll be fine. I can wrestle. I beat the last guy with one hand.\"\n\nI couldn't look up. Tears burned from my eyes. I didn't want coach to see me cry. I couldn't show him how weak I was.\n\nCoach's arms wrapped around me, like a big bear taking their cub into its arms. \"Shhh... it's okay kiddo. Doc, you sure it's broken?\"\n\nI was still wrapped up in coach's bear hug, so I couldn't see Dr. Benjamin, \"I'd need an X-ray to be sure, but I'm pretty certain its broken. He can't wrestle though. If he does he could end up crippling himself. He needs to go to the hospital.\"",
        "I latched onto the small hope that maybe it wasn't broken. If I walked away from this match, I'd be dq'd. If I went to the hospital and it turned out it wasn't broken I couldn't come back to the tournament.\n\nI pushed away from coach, looking him in the face, hoping to get his selfishness involved. He wanted to win this tournament. That meant he needed wrestlers on the mat. All I had to do was convince him I still had value, that I still had something to offer him and he would relent...\n\n\"If I go to the hospital I'll be disqualified. If I'm not hurt than I can't come back to the tournament. We both lose that way. Let me wrestle this match, I'll roll over quick and right after it's done I'll burn over to the hospital and get checked out. That way if it's just a stinger I can come back.\" I could see the horror on his face and knew I wasn't selling it well enough... the pot wasn't sweet enough for him.\n\n\"I know I can't take first that way, but I'll come back and through wrestlebacks maybe I can get second!\"\n\nJoshua's voice took all the air out of my argument. \"Coach, you put him on that mat and he's not just gonna roll over. He's going to fight tooth and nail, hurt or not, and he's going to end up crippling himself. Dear god, he broke his goddamn hand in the first round of the last match and he kept going and found a way to win for god's sake.\"\n\nCoach's response was the final nail in the coffin, \"Josh, no way in hell was I even considering putting him out there.\"\n\nNononononono!\n\nTears started to stream out of my eyes, \"Coach! No! I can do this! I need those scholarships! I won't get them if I don't wrestle!\"\n\nI could see pain and misery smash into his face. He pulled me into him tight and hugged me harder than I had ever been hugged in my entire life. I could feel him shaking his head at me. \"Kiddo. Goddamn it kiddo. I'm so sorry. You're done.\"\n\nI pushed away from him, tears falling freely from my eyes. \"No! I can do it coach. I'm still worth something!\"\n\nTears filled his eyes as he grabbed my head. He pulled me in close to him where only he and I could hear what he had to say. \"Don't you ever think that Gabby! You'll always be worth something!\" He shook his head against mine. \"I'm sorry kiddo. I fucked this up so badly.\"\n\nMy nose started to run. \"I need that scholarship coach. Please.\"\n\nHe pushed my head away and looked deep into my eyes. \"We will figure this out together. We'll get this fixed, okay?\"\n\nI pushed every ounce of the misery clawing through me at him. \"Please don't do this to me.\"\n\nHe pulled me in tight once again. \"We'll figure this out kiddo.\"\n\nMy world ended...\n\n\n\nChapter 9\n\n\n\nThe Kays, as my default family, took me to the hospital. Once again, I needed to mooch off of someone else's generosity. Once again, I was a burden to someone...\n\nI sat in their car on the passenger side, in the back seat. Pressed as close to the door as I could, my head pressed to the window. Karly pressed herself to my left side, her arms wrapped around me. She felt like maggots clinging to my skin. I didn't want to be touched right then...\n\nI was alone again. Maybe not right now. But soon.\n\nShe would go off to college, and without a scholarship there was no way that I could afford whatever school she could get into. We would try to make it work long distance. It would fail. I wasn't good enough. Without me there to fool her, she would realize that I had no worth, and she would move on.\n\nA part of me wanted her to. I knew I wasn't good enough for her, and whoever she found to replace me would be better for her than I ever could be.\n\nThe larger part of me wanted so desperately to deny that. To fight tooth and nail to ensure she was mine forever.\n\nI knew that wasn't going to happen though. I should have known that from the start. God gives to me, so that he can then take away. Sometimes it felt like He lifted me up, just so he could throw me down just that much harder.\n\nThe hospital was like every other hospital. Long waits, lots of paperwork. They made sure they knew how to send you the bill first and foremost, and then they started to worry about your health.\n\nI was right handed so I couldn't even fill out the paperwork for myself. Karly had to fill it out for me. Once again, I needed to be a burden.\n\nThey took X-rays. A doctor took two minutes to tell me that my hand was indeed broken. He told me it was a bad break. It might require surgery to fix.\n\nI looked at him with dead eyes. I think I nodded when it was appropriate. I'm not sure. I was out of fucks to give.\n\nThey wrapped my hand with a brace and bandages. The doctor told me that I needed to go see a specialist in a few days to get an evaluation, see if I needed surgery, and get a cast. Karly asked why they didn't put a cast on me now and the doctor told her that on a fresh break they always liked to wait a few days to let the swelling go down. Putting a cast on me now could cut off circulation.\n\nI didn't care.\n\nIt didn't matter.\n\nI went back to the hotel with a bottle of pills to help with the pain, a brace on my wrist, and no future...\n\n\n\nChapter 10\n\n\n\nWe rode the elevator up to our floor. Karly stood really close to me. I didn't want her to. I wanted this to break off. I wanted the pain to stop and the sooner I realized my life with her was over the better off I was going to be.\n\nI needed to realize and accept that I was alone. I was always alone, and I was always going to be alone.\n\nThe elevator came to a stop and the doors opened. Coach and the trainer were standing there.\n\nCoach smiled at me, a beaming smile. \"How did it go kiddo?\"\n\nI held the brace up dumbly. \"It's broken.\"\n\nI could see something like guilt scratch at his guts. He shook his head. \"I'm sorry kiddo.\"\n\nI stepped off the elevator and started for the room me and the guys shared. \"Doesn't matter.\"\n\n\"Hey, we were heading to dinner. The guys are already off to dinner, how about you guys join us?\" Coach beamed.\n\nMarsha dove all over the chance to change the subject, \"That sounds like a good idea! Gabby, come on!\"\n\nI looked at her, a small beam of hope cresting in my mind. Then I realized that everything here was a lie. Every one of them was going to be gone from my life eventually. The storm clouds roared in and smothered me.\n\nI shook my head. \"I'm not hungry. I'm tired. I'm just gonna go to the room and try to get some rest.\"\n\nI didn't see their reactions. I kept my eyes on the floor the entire time.\n\nKarly wrapped herself around my left arm. Leaning into me and pulling me close. She turned to the others, \"I'm taking him to my room.\" Her tone brooked no argument.\n\nI argued anyway. \"No. I'll go to the team room. It will be fine there.\"\n\nShe put one nailed finger beneath my chin and forced my eyes up to hers. \"No. I am taking you back to my room. You need to get some rest, and you need it to be quiet. Understood?\"\n\nI looked at the others and saw a smug smile on Joshua's face, a beaming grin on Marsha's. Coach just looked at the two parents with an 'are you okay with this look?'.\n\nJoshua looked at coach. \"I think Karly's right. He probably doesn't need to be around a bunch of roughhousing teenagers right now. He needs some peace and quiet.\" He raised an eyebrow. \"You okay with that coach?\"\n\nCoach put his hands on his hips and nodded. \"Yeah, I'm okay with that, in fact I was considering going down and seeing if I couldn't get another room for him so he could get some rest.\"\n\nJoshua clapped his hands, \"Settled then.\"\n\nMarsha leaned in and put her hand on Karly's arm. \"We'll send some dinner from the hotel restaurant up for you two, okay?\"\n\nKarly nodded, \"Thanks mom.\"\n\nI interrupted the moment, \"Nothing for me. I'm not hungry.\"\n\nThe truth was I was starving, but I had already burdened these people enough, and I refused to ask for anything more...\n\nMarsha leaned in, wrapped her arms around me and kissed me on the forehead. \"I know things look rough right now kiddo, but they'll work out. You'll see.\"\n\nI closed my eyes and accepted the hug and the kiss. I didn't want them, but I needed them. I really didn't want, didn't like the fact, that I needed them.\n\nTears burned at my eyes and all I could say was, \"Thanks Mrs. Kay.\"\n\nShe smiled at my faux pau. She usually got mad at me when I called her Mrs. Kay. She put her hand on my cheek. \"I love you Gabby. You're a good kid.\"\n\nI closed my eyes to keep the tears in, shaking my head. My face started to crumple. \"No, I'm not.\" I forced my eyes open and tears shot down my face. \"It's nice of you to say though.\"\n\nShe gave me a disapproving momma bear face.\n\nKarly pulled me towards her room. \"Come on big guy. Let's get you into a bed and get you some rest.\"\n\nShe turned to her family, \"Send up a bunch of food, okay? I'm sure he's starving.\"\n\nMarsha nodded, \"We're on it.\"\n\nOnce again... I was a burden...\n\nKarly let me into her room and made me go over and lay on her bed. I laid on my side, curled up on the edge of her bed.\n\nShe crouched down in front of me, her lips hot and warm on mine. She was extremely careful of my hand. \"I love you, teddy bear.\" She whispered.\n\nI felt my love for her surge up and threated to pull me under. I loved her so much!\n\nAnd I was going to lose her.\n\nAll because of a stupid broken bone.\n\nTears pressed to my eyes and I could contain them no more...\n\nShe wrapped her arms around me and all I could do was sob. A darkness descended on my mind that I had experienced only a few times in my entire life. My world was crashing to an end, and all I could do was sit in this wonderful woman's arms and cry about it...\n\nShe pushed me back on the bed and climbed up with me, pulling my head in to her lap as I sobbed like a child. I was going to lose her and all I could do about it was cling to her like a piece of flotsam in the ocean. She wrapped her arms round me and rocked me, making soothing sounds. \"It's okay baby boy.\"\n\nI clung to her tighter. \"No, it's not. I'm going to lose you now. You're going to go away and I won't be able to follow you.\"\n\n\"What?!\" She said in surprise.\n\nShe leaned over and turned on the lamp on the stand beside us, forcing my head around to look at her.\n\nShe looked really pissed...\n\n\"Is that what's going through that stupid head of yours?\" she asked.\n\nI looked at her, tears in my eyes and nodded my head. \"I needed those scholarships, so we could pick a school together. So, we could start a life together.\"\n\nShe forced me to move and slid in next to me. Her mouth pressed to mine, hot and wet. He tongue slipped into my mouth as she pressed the length of my body to hers.\n\nI wanted so much to be sad then, but the feel of her body against mine was so intoxicating I could do nothing but pull her to me and kiss her for everything I was worth. She was laying across my outstretched right arm, pulled tight into my body so as to avoid my right hand. There was pain there, but nothing close to the pleasure I felt with her pressed so close to me. I was in heaven...\n\nShe was panting, I was panting. Her hands found their way beneath my sweatshirt...\n\nI wrapped my right arm around her and pulled her deeper into our kiss. My hand screamed in pain but I didn't care. She felt too good and too right for me to notice something as trivial as pain right then.\n\nHer hand ran up my flank and she pulled out of our kiss. \"If you think I'm letting you get away from me you're fucking stupid.\" She panted into my mouth between kisses. \"You are mine. We'll find a school together we can both afford.\"\n\nI pulled her to me and kissed her for all I was worth. She was the beginning and ending of my world right then. I needed her, not sexually, I just needed her in my arms.\n\n\"Or we'll stay here. I can move into your little apartment.\" More kisses.\n\n\"I can go to the local college.\" Her hand slid down the front of my body.\n\nI ran my clumsy left hand over her ass and settled it on the button of her jeans, fumbling with it as she kissed me harder and harder.\n\n\"You can work for my dad if you have to.\" I had gotten the button free and was immensely proud of myself for it.\n\n\"You and I will have a life together...\" She whispered as her hand dipped beneath my singlet and into my sweats, wrapping firmly around me as she began to stroke me.\n\nMy heart pounded and with each beat a spike of pain drove through my traitorous hand. The pleasure of her hand was far more powerful however...\n\n\"I love you so much baby girl.\" I panted as she stroked me. \"I need you right now.\"\n\nI was trying to fumble with her pants with my left hand, and while I had managed to pull them down a bit I hadn't gotten very far.\n\nShe turned feral. She kicked her shoes off and breaking from our kiss pulled her pants away.\n\nLike that, I was on my back. She pulled my sweats down far enough for me to spring free and like that she was on me.\n\nI entered her in one smooth stroke. Her mouth was on mine like a thing possessed. My world was filled with a white light full of pleasure so intense I was reduced to base instinct. We communicated through movement of bodies, two things possessed, entwined and joined.\n\nShe moved faster and faster on me, never once breaking from our kiss as she moaned, filled with animal need at our coupling.\n\nIn that moment, I forgot about my hand. I forgot about the pain. I forgot about everything but my Karly.\n\nI loved this woman, and I was going to let nothing stand in the way of us being together. Nothing.\n\n\n\nChapter 11\n\n\n\nWe lay tangled together afterwards. She was pillowed on my left side. She usually laid on my right. It felt weird, but I was glad to have her in my arms. It made things feel somehow all right again. Like the world had been put back on its axis. Sleep pulled at me.\n\nShe laid a kiss on my jaw. \"I love you so much you big ol' teddy bear.\"\n\nI closed my eyes and pushed my face into hers. Everything felt okay with her so near. I knew they weren't okay though. Wheels had been put into motion. The world spun on and we had plans to make.\n\n\"I love you too kiddo.\" I murmured to her.\n\nShe rolled on my chest and pulled me close. \"Better now?\" she asked.\n\nI nuzzled her again, sighing. \"Better. Still not fixed though.\"\n\nShe ran her nose up the side of my face. \"Want me to make you forget again?\"\n\nI chuckled and kissed her nose.\n\nThe food her parents sent up chose that inopportune moment to arrive...\n\nShe jumped out of the bed, sending a wave of pain through my hand. I hissed and she apologized.\n\nThere was another knock at the door and she yelled, \"Just a second!\"\n\nI used my worthless left hand to pull my pants up as she grabbed her pants and threw them on hurriedly.\n\nShe went to the door and they wheeled in one of those honest to god carts full of food...\n\nIt was enough to feed the entire team!\n\nKarly signed the slip of paper they gave her and sent the guy who had brought the food on his way. She grabbed food, made me sit up in the bed and started trying to ply me with treats. I was starving, but once again, I was having to mooch off of people. I was getting really tired of not being able to pay my own way in the world...\n\nShe looked up at me midbite. \"What's going through that dumbass head of yours now?\"\n\nI smiled at her. It was uncanny how many times she saw straight through to the heart of me. I held up a fry. \"Tired of feeling like a freeloader.\"\n\nShe shook her head and crawled closer to me. She ended up next to me on the bed, her leg against mine, her side to me. She laid her head on my shoulder. \"I love you. Even if you are a bit slow sometimes.\"\n\nI put the fry in my mouth and chewed. The food was delicious, but somehow it was like paste in my mouth. I looked at her with sad eyes.\n\nShe smiled at me. \"You're not a freeloader. My parents are good to you because they love you.\"\n\nI shook my head at her. \"Your parents are good to me because they love you.\"\n\nI thought about that for a minute and decided that I was happy with that. I would give anything for her to be happy, and I was glad that she had those two, perfect people in her life to watch out for her.\n\nShe stole a fry off of my plate, \"Well, yeah. They love me too...\" She kissed my lips. \"But they also love you.\"\n\nI shrugged. It didn't matter.\n\nShe hit me in the face with a chicken strip.\n\n\"Stop feeling sorry for yourself.\" She warned me.\n\nI couldn't help but laugh. I shook my head at her.\n\nShe took a bite out of the chicken, looking at me as she chewed. \"You want to be happy?\"\n\nI looked at her, waiting for her moment of insight.\n\n\"Stop thinking so much.\"\n\nI raised my eyebrows at her. \"Really?\"\n\nShe took another bite. \"Yep. Every once in a while, live in the moment.\"\n\nI gave her an 'are you kidding me' look. She laughed and held her chicken strip up menacingly again.\n\n\"Not all the time. Just every once in a while.\" She gestured to the food. \"Look at what's in front of you and stop thinking about what you don't have, or what something is going to cost.\" She held the chicken strip out to me, offering me a bite.\n\n\"Sometimes, you just have to sit back and enjoy the chicken strip.\"\n\nI laughed at her goofy mind...\n\nSometimes you just have to sit back and enjoy the chicken strip...\n\nI nodded at her. \"Sounds pretty smart, all wise one.\"\n\nShe sat up straight, preening. \"Thus, sayeth Karly the wise.\"\n\nI smiled at her. \"More like Karly the wise-ass!\" I screamed as I snatched the chicken strip from her hand and stuffed it into my mouth.\n\nShe feigned outrage as she dove at me. \"You son of a bitch! That was my life changing chicken strip!\"\n\nWe landed and I did what came naturally, I tried to use my hand to break my fall. My right hand...\n\nPain lanced through me. I screamed like a little girl.\n\nKarly grabbed me and pulled me close to her, laughing while she tried to sooth me. \"I'm sorry baby.\" She muttered as she pulled me close and started to smother my face with play kisses.\n\n\"Too rough!\" I trumpeted. \"You're like a big stupid puppy with a toy!\"\n\nShe giggled as she pulled me close and kissed my neck. She barked like a small dog...\n\nI love this girl...\n\n\n\nChapter 12\n\n\n\nThe next day found me sitting in the bleachers, trying to work up the good nature to cheer my team mates on. I was in a lousy mood. The pain in my arm was killing me, and I was seriously down at not being in the tournament anymore. I made Karly get off her ass and go take stats. That was why she was here, and I wanted her to do her part for the team.\n\nThat left me to sit and stew. I was freaked out about my future. I know Karly didn't want me to worry, but I still did.\n\nDuring one of the match breaks Karly found me sitting in the bleachers, trying to use my left hand to fill out my Varsity Letter form. Coach had this process everyone had to use to get their Varsity Letter. You had to fill out this form, tabulate how many wins you had, how many losses, how many practices you had missed. At the end, each thing was given a point value and if you got more than a certain number of points you got a letter. If you didn't get that number of points, or if you didn't turn your form in, you didn't get your letter.\n\nIt was incredibly awkward to try to write with my left hand...\n\nI didn't know why. I was pretty ambidextrous in most things. I could wrestle with either a left hand or right-hand stance. I could come out of either a left or a right football stance. Hell, I could even box with a left handers stance.\n\nWriting was not one of those things that came naturally to me left handed...\n\nI kept dropping the pencil, and my writing looked like a first grader. It was embarrassing.\n\nI hissed as I dropped the pencil again and Karly leaned over and checked out what I was doing. \"Do you want me to help?\"\n\nI looked at her and shook my head. Finally, I decided her cheek needed a good kissing and leaned over and nipped her on the cheek. She giggled and leaned into me playfully.",
        "I hissed in pain and the look on her face told me she was not impressed with me. \"Did you take one of the pain pills the doctor gave you this morning?\"\n\nI looked her in the eye and told her, \"Karly. I'm not going to lie to you...\"\n\nAnd then I nodded and went back to filling out my form.\n\n\"You mule headed, stubborn jackass.\" She growled.\n\nI looked at her and gave her the biggest shit eating grin I could come up with. \"I love you too.\"\n\nShe sighed. \"Okay. Make me understand.\"\n\nI raised my eyebrows at her, \"Understand what?\"\n\nHer eyes narrowed and I realized I was starting to come very close to the pinching or tickling of a lifetime...\n\n\"Why you won't take the pills. I know that hurts like a motherfucker. So, make me understand so I don't have to kick your ass up between your shoulder blades.\"\n\nI sighed and set my pencil down. \"They make me nauseous for one.\"\n\nShe gave me an 'are you kidding me?' look.\n\nI looked back at my form. \"You want to know the one thing that my dad did that was perfect?\"\n\nShe raised an eyebrow at me, \"Is that you trying to change the subject?\"\n\nI shook my head. \"Nope.\"\n\nSighing I collected my thoughts. \"I have done three sports all through High School. Until this year, my dad never missed a single game I was in. Even if I was just standing on the sidelines. He was always there. He would travel and watch me wrestle at every tournament. He would travel and watch me throw in track. He stayed each and every time, until I had finished my events and then he would drive himself home while I rode the bus. No matter how busy he was, or how poor we were, he would go to each and every game.\"\n\nShe tilted her head, \"That's nice and all, but what does that have to do with you not taking your pain pills?\"\n\n\"Be patient. When I was a freshman, my mom never came to a single game. I made the Varsity squad my freshman year. I suited up at every game, and played a few quarters here and there. I wasn't a starter, but I was still really good. I was named Defensive Player of the Year in the Freshman squad for our District.\"\n\nShe leaned in and kissed me. \"I know. I used to go and watch you play. You ass looked great in football pants.\"\n\nI chuckled, and then I sighed. \"Last game of the season my dad called my mom and got pissed at her for not showing up to any of the games. She promised she would come. My dad told me, and I remember being so excited. So proud.\"\n\nKarly's face went grave. \"I'm not going to like what I'm about to hear am I?\"\n\nI sighed again. \"She showed up all right. Very drunk. I guess she did what she thought parents did at those events. She screamed and she cheered. She made a total ass of herself. I was so embarrassed.\" I shook my head. \"She ended up getting escorted out.\"\n\nKarly laid her head against me, shaking it sadly. \"You know, I don't know your family very well, but I sure as hell don't like them very much.\"\n\nI shrugged, \"Doesn't matter. They are who they are. I am who I am.\"\n\nShe turned her head and looked through her eyelashes at me. \"So, you're scared you'll end up like her?\"\n\n\"That shit runs in families. I figure if I never let it sink its hooks in, I can never pull me under.\"\n\nShe bumped me playfully. \"I get it now. You know best. Just promise me you won't suffer if it gets to be too much for you, okay?\"\n\nI laid my head on hers, \"Deal.\"\n\nShe moved quickly and kissed me on the cheek. \"Now, give me that form so we can finish getting you your Varsity Letter!\"\n\nI held the form away from her. \"I got this.\"\n\nHer eyes narrowed dangerously again. \"Let. Me. Help.\"\n\nI kissed her on the lips this time. \"Baby girl. Think about how much homework we have to do every day. I need to practice this. For eight weeks, I'm not going to be able to write with my right hand. This is going to be super tough. I'm used to being able to do my homework lightning fast. Now, I'm going to be struggling to write my name.\"\n\nShe kissed my forehead. \"You are smart sometimes.\"\n\nI smiled, laid my head against hers and continued filling my form out.\n\nCoach wandered in and handed me a bottle of Gatorade. \"Hey lovebirds.\"\n\nI took the bottle with a smile and a raise of my eyebrows. I held the bottle up to him. \"Coach, don't sweat it. You got stressed and said something stupid. I'm not mad at you. You don't need to try to make it up to me.\"\n\nHe smiled at me. \"You're a good kid Gabby. I screwed up. A bottle of Gatorade is a pretty simple way to try to say sorry.\"\n\nI popped it open and took a big drink. \"Gift accepted.\"\n\nHe looked down at my Varsity form. I was shocked when he took it from me, crumpled it up and threw it over his shoulder.\n\n\"Coach! I had to fill that out with my left hand!\" I screamed.\n\nHe laughed and shook his head. \"You don't need to fill it out. You lettered. Case closed.\"\n\nI looked at him deadpan. \"Coach. I don't want to be treated differently.\"\n\nHe raised his eyebrows at me. \"New rule. Anyone that breaks a bone on the mat and finishes the match automatically letters.\"\n\nKarly laughed her ass off.\n\nI bumped her, \"What are you laughing your ass off about over there hyena girl?\"\n\nShe pointed at me, \"You kept wrestling with a broken wrist like a dumb ass.\"\n\nI reached over and mussed her hair up. She hated that...\n\n\n\nChapter 13\n\n\n\nIt had been a week since the State wrestling tournament. I was sitting in my place after school, trying to shake off the boredom and loneliness that came along with me sitting here alone. I decided it sucked.\n\nNormally, after school sports kept me busy. Football dovetailed into wrestling, wrestling dovetailed into track. This was my first break between sports where I was living on my own. Winter break I was with Karly most of the time. Now, without some sport keeping me busy I got home at a decent time and instead of rushing to put some food in me, get my homework done and get off to sleep I was stuck with all this time to sit and stare at the walls.\n\nThe one upside was that I got to ride home with Karly. She drove me home each night. Sometimes she came in and kept me company...\n\nTonight though, I was alone.\n\nIt wasn't terrible. I wasn't falling into a funk, but it still sucked.\n\nI sat there for another fifteen minutes or so and decided that I wanted to talk to someone. I could feel the pressure building, and I didn't want to fall into a serious spiral.\n\nI called Karly. She picked up on the second ring.\n\n\"Are you okay?\" She asked. I could hear the panic in her voice.\n\nIt shamed me. She thought so little of me...\n\n\"I'm okay. I was just sitting here and staring at the walls and thought I'd like to hear a friendly voice.\"\n\n\"Well... okay... are you sure you're okay?\"\n\nThis was weird. \"Yeah, I'm fine. Am I bothering you?\"\n\n\"No. No not at all. I mean I'm happy you called. I was just thinking of you. It's just weird for you to call and just... you know... talk.\"\n\nI thought about it for a minute. I realized with more than a little shame that she was right. Man, I was slipping. Karly deserved better than that.\n\n\"Baby girl, I'm so sorry.\" I shook my head at myself. \"I'm dropping the ball here.\"\n\n\"No. No, don't think like that. I see you all the time. I get plenty of Gabby time. I'm not stressing about it.\" She assured me.\n\nI shook my head at my own stupidity. \"No. It's not all right. You deserve a boyfriend that can't wait to hear your voice all the time. I'll do better.\"\n\nShe sighed at me, \"Don't be stupid. Normally, you'd be at practice right now. It's weird to have you off. Honestly, I wasn't even missing it...\" She paused for a second. \"Okay, that sounded really mean.\"\n\nI laughed at her. \"Don't sweat it.\"\n\nWe sat there quietly. This was awkward.\n\n\"You suck at this phone thing.\" She said to me suddenly, laughing.\n\nI shook my head. \"You're right. I do suck at this phone thing.\"\n\n\"So why did you call? What brought it on?\"\n\nI sighed, shrugged and decided to tell her. \"I was just sitting there and staring at the walls and decided that I wanted to hear a friendly voice.\" I paused for a second. \"You're kind of the only person I have to talk to...\"\n\n\"Me, and Jeremy.\" She reminded me.\n\nI nodded my head. I had been spending more time with Jeremy lately. He had even come over and had dinner with me the other night. She was right. I shouldn't be feeling sorry for myself. I should be reaching out to the people that had made me a priority in their life...\n\n\"And Joe.\" She added.\n\nThat put my hackles up.\n\n\"Not Joe.\" I corrected her.\n\nShe sighed loudly. \"I know you're mad at him, but he is still your friend. He's giving you space right now because he knows he screwed up, but you should still realize that he cares about you. I know he'd never make the same mistake with you that he made the last time. You should think about forgiving him.\"\n\nI shook my head. \"I want to forgive him, but I also don't want to get slammed again.\"\n\n\"You can't always do everything alone. You need people to talk to.\"\n\n\"I have you.\" I told her.\n\nShe was quiet for a while. In fact, she was quiet so long that I started to worry that she might have something to tell me... something I wasn't going to like.\n\n\"You need more than me. What about when you get frustrated with me? Who do you talk to about that?\"\n\n\"You. Shouldn't I talk to you about being frustrated with you?\"\n\nShe sighed, \"Okay, yes, that's right. Stupid question. I just...\" she paused for a moment to think. \"I just want to make sure you have people watching out for you, okay?\"\n\nI chuckled, my worries gone. She was just mother-hening me. \"I'm okay.\"\n\n\n\nChapter 14\n\n\n\nThe next day was Saturday, and I spent my morning sleeping in and generally being lazy.\n\nNormally, my Saturdays were spent rushing around for one sport thing or another. During football season, there was a meeting and a post-game workout. During wrestling and track, I normally had tournaments to participate in.\n\nIt was actually really refreshing to have some time off. To have an opportunity to just take it easy and relax.\n\nI put a movie on to have some sound in the house, and took to cleaning. Karly was going to come over and we were going to spend the day together and I always liked things to be nice and tidy when she came over. I realized on some level that she really didn't seem to care, but I always liked making her nest nice and cozy...\n\nShe was supposed to be over at eleven, and eleven came and went.\n\nI figured that she was just running late.\n\nBy noon, I was getting worried and I was just about to call her when I heard the door at the bottom of the stairs open and her familiar pounding up the stairs. She opened the door and bounced into my arms, kissing me fiercely. I hugged her, keeping my cast well and safe away from her. She was a gentle creature, but she really was like a puppy with a new toy sometimes, and she could get a little rowdy...\n\nShe broke from my kiss, her eyes closed. Her face glowed. \"I will never get used to how good that feels...\" She purred.\n\nI pulled her close and kissed her again, \"Promise?\"\n\nShe smiled and my world lit up. \"I promise.\"\n\nShe bit her lip, the way she did when she was nervous.\n\n\"Uh-oh.\" I said aloud.\n\nShe smiled at me and curled into herself, pushing me backward towards my big comfy chair. I fell into it, again, being careful of my hand. She dropped into my lap and kissed me again.\n\n\"Yep, I'm definitely in trouble now...\" I told her.\n\nShe smiled and tried her best 'I'm innocent' look on me.\n\n\"What did you do?\" I asked her.\n\nShe preened up a bit and wrapped her arms around me. \"You remember that you love me, right?\"\n\nI pulled her in and kissed her to remind her how much I loved her.\n\nShe broke, her eyes fluttering. \"Okay. Check. You definitely love me.\"\n\n\"I say again, what did you do?\" This time I put a little more steel into my voice.\n\nShe paused a second. I got the feeling I wasn't going to like this...\n\n\"I got you a present.\" She finally settled. \"But. You have to promise not to get mad at me. Deal?\"\n\nI gave her a dark look. \"No deal. I know you. You're crazy as a shit house rat. There's no telling what you did.\"\n\n\"I just got you something silly.\" She put on her best little girl act. When she hugged me I knew I was definitely screwed.\n\n\"It's in the car. I have to run and get it. Okay?\"\n\nI narrowed my eyes at her. \"Why don't I help you go get it? Then we can leave it in the car when I decide there is no way I'm accepting whatever crazy generous thing you've gotten me...\"\n\nShe paused a second. \"No. That won't work. This is one of those things that you can't just leave in the car.\"\n\nI narrowed my eyes at her.\n\nShe put her finger on my chest. \"Since you won't promise to not be mad, you have to promise to stay right here in Mr. Chair, okay?\"\n\nI growled at her. \"You better come back into this apartment naked...\"\n\nShe paused a second. \"I could do that.\"\n\nI threw my head back and she kissed me, laughing. \"Let me get your present, then we'll discuss naked time.\"\n\nI pulled her into me and kissed her. I suddenly wanted her very much. \"Let's discuss naked time right now... then we'll talk about the present.\"\n\nShe pushed away from me and I could see the desire in her eyes. \"No. Down boy. Present first. Then naked time.\"\n\nI growled.\n\nShe jumped up and bounced her way out of the room. I knew this was going to be trouble...\n\nWithin a minute, she was bounding up the stairs again. I couldn't see the front door from my chair, but I could hear her sneak back in.\n\n\"Cover your eyes!\" She called out.\n\n\"I'm not covering my eyes. Knowing your crazy ass, you'll throw a snake on me or something else equally insane.\"\n\n\"You don't like snakes?\" She asked. \"Good to know!\"\n\nI covered my eyes just to make her happy. \"For the record, I don't mind snakes.\"\n\n\"Sure, sure, throw snakes... whatever.\"\n\n\"If you throw a snake on me, remember payback is a bitch.\"\n\nShe giggled. \"Noted. Now are your eyes covered?\"\n\nI rolled my eyes beneath my hand. \"Yes, oh crazy goddess. They are closed.\"\n\nI could hear her move into the room with me. \"No peeking.\"\n\nI was starting to get really interested in what she had come up with. I knew it would be insane. I knew I would probably have to come up with a way to politely refuse her...\n\nKarly had way too much money, and way too little impulse control. She was also completely smitten with me and she loved to shower me with things I couldn't afford. It was something I really needed to talk with her about. I was starting to get concerned that she would start to worry that I was only with her because of what she bought me. I needed to figure out a way to make her understand that I really didn't care about what she bought me, or what she gave me. I was happy with her, and she was all I needed...\n\n\"You better be naked when I take my hand away!\" I joked with her.\n\n\"That might be awkward.\" I could hear the excitement in her voice. She was practically giddy. \"Okay! You can look now!\"\n\nI took my hand away from my eyes...\n\nKarly was standing there... a look on her face like she had just gotten busted with her hand in the cookie jar. In her arms was a squirming mass of yellow fur.\n\nShe thrust it out to arm's length, holding it beneath its front legs. \"Puppy!\"\n\nOh. My. God.\n\nShe's insane. She finally snapped a belt and went off the rails.\n\nThe puppy she held was small, just a little bigger than a handful. I knew my puppies. This one was maybe six weeks. Just barely old enough to be separated from its mother...\n\nIt was some sort of Labrador cross. Yellowish, bordering on white.\n\nIt was the cutest thing I had ever seen.\n\nMy eyes went from the puppy to her elated face. Puppy. Beaming smile. Puppy. Beaming smile.\n\nI really fucking wanted that puppy.\n\n\"No.\"\n\nShe pulled the puppy into her arms and came over to me. \"Now, you haven't heard my plan.\"\n\nI shook my head at her. \"I don't need to hear your insane plan. I can't have that puppy, no matter how much I want it.\"\n\nShe held a finger up to me. \"No. I've got it figured out, just hold her while I lay it out.\"\n\nI crossed my arms. \"I don't want to hold the puppy.\"\n\nShe smiled at me. She knew she had me...\n\nShe nodded, \"You want to hold the puppy.\"\n\nI really wanted to hold that fucking puppy.\n\nShe held her out to me and I took her from Karly gently. She was soft, and warm, with those amazingly sharp little claws and teeth every puppy seemed to have.\n\nI leaned back in my chair and put her on my chest. She looked up at me with beautiful caramel brown eyes.\n\nI wrinkled my nose at her and moved my nose in to touch hers. \"Hello there.\"\n\nThen I remembered that I couldn't have a puppy. It didn't matter how much I wanted the puppy, I couldn't take care of it.\n\nI looked at Karly. \"Karly.\"\n\nShe put her hands out. \"I've got it worked out. You keep the puppy. The puppy makes you happy. Problem solved.\"\n\nI narrowed my eyes at her. I knew now what she was doing...\n\nKarly pounded on. \"You need someone to keep you company. Boom, puppy. Problem solved. You need somebody to watch your house. Boom, puppy. Problem solved. You need someone to talk to when you get lonely. Boom, puppy. Problem solved.\"\n\nMy heart melted a little bit more for her. When I called her last night the thought that went into her head was that I was sitting here all alone. She thought of all of the times I had talked to her about past dogs I had owned, and all the times that a dog had helped to hold my sanity together...\n\nSo, she got me a dog.\n\nI sighed. I really wanted a dog. It was something I had thought about so many times... hell, I had even considered getting a fucking cat... and I fucking hate cats.\n\nI looked at Karly, sighing. \"Baby girl. I really want her.\" I shook my head. \"But I can't keep her. I can't take care of her. I'm barely home. I was just thinking this morning how weird it was to have a Saturday morning to myself. I'll never be here for her.\"\n\nKarly knelt in front of me. She reached out and fingered my cast. \"Babe. You're going to have a lot more Saturdays free. With this, you're going to be on the shelf for a while. At least what? Seven more weeks?\"\n\nMy heart fell. I knew she was right.\n\n\"I know track starts next week, but you can't even practice with this on.\" Her eyes were filled with sorrow. She knew how hard that was going to be for me. \"You throw discus. Now unless you somehow learn to do that in the next couple weeks left handed you're not going to be working out with the team. That means every night, you're going to be home. Alone. Now I can be here sometimes, but not all the time. You cut your friends out of your life. So, I can't even count on them to help me pick up the slack.\" I started to argue and she held her finger up. \"I know why, but it doesn't change the facts. You're alone too much, and right now you don't need to be spending all that time alone.\"\n\nHer face melted. \"I need to know someone is here looking out for you.\"\n\nI felt tears start to sting my eyes. She was right.\n\n\"I can see you spiraling down. You're putting a brave face on it, and not talking to me, but I can see you getting more and more depressed. The fact that you're not talking to me about it is actually really freaking me out. You're isolating yourself and I can't pull you out of it.\" She laid her hand on the puppy and started to rub her ears. Then she looked down and I saw tears start to streak down her face. \"I know she can pull you out of it.\"\n\nTears ran down my face.\n\nI felt so weak. I knew she was right. I was lonely. I needed someone that I could talk to. I couldn't afford to keep staring at the walls and try to keep them from closing in on me. I was spiraling badly.\n\nI wanted this so badly, hell, I even knew it was good for me, but it didn't change reality. I had no way to take care of myself, I had no right to put another life in that situation with me."
    ],
    "authorname": "LukasGrey",
    "tags": [
        "romance",
        "love story",
        "novel"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/falling-down-3"
}