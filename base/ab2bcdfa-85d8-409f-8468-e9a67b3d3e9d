{
    "title": "His Daddy's Car",
    "pages": [
        "Chapter One - Tuesday\n\nWatching the semi-truck driving away down the street, Bobby apologized on his cell phone to his sister Francis about being late. \"I'm locking the house and leaving right now,\" he told her as he looked at the clock. \"How long do you think it will take me to get there, and what's the best route? I don't want to just trust the GPS.\"\n\nIt had taken the movers from Florida longer than expected to arrive at his new rental in Leon Valley, a suburb enclosed within the city of San Antonio, Texas and then unload the semi containing his furniture and the Corvair. Bobby was once again relieved that he had decided to bring all of his boxed possessions with him in the back of his pick-up truck. He was able to unpack all his dishes, linens, and clothes while waiting for the heavy stuff to arrive.\n\nFrancis said, \"We have to leave shortly for Joey's baseball practice. Jason just got home and we're almost out the door. Why don't you meet us at the practice and you can follow us home from there?\"\n\nShe gave him directions that seemed pretty simple to follow and said, \"Think of the I-410 loop as the face of a clock. Right now you're at approximately ten o'clock. Just take the loop around until you get to a little past three o'clock and then jump onto US 87 south. You'll know you're heading the right way if a Doobie Brothers song pops into your head.\"\n\nBobby asked, \"Any particular song?\"\n\nFrancis told him, \"You'll know it when you see it. Anyway, once you cross over into Wilson County you'll go about five more miles until you reach La Vernia. It's not a big town, and the signs for the park are pretty easy to follow. That's where we'll be.\"\n\n\"I'm on my way,\" said Bobby as he ended the call.\n\nAfter locking up his house, Bobby stepped off his front porch and made a quick decision. His 2010 Dodge Ram was sitting in his drive, but he hadn't cleaned all the fast food cups and wrappers out of it since his drive from Florida. His bright red 1965 Chevrolet Corvair Monza convertible was sitting along the curb in front of his house where the movers had off-loaded it. It was a no-brainer for Bobby as he trotted out to the Corvair and proceeded to lower the convertible top. He would need to stop and get some gas real soon, but he had seen several gas stations between his new rental house and the freeway entrance he would need to take.\n\nBobby pulled into a Valero station along Bandera Road that he thought would be the easiest to get in and out of, and keep him pointed in the right direction. As he began pumping gas into the tank, he thought back to the first time he had put gas in this car...\n\nBobby had grown up in Cypress, California playing little league, hanging with friends at the beach, Disneyland, Knott's Berry Farm and other local attractions when they weren't in school. When he got older, Bobby took up surfing, but he never got enough opportunities to ride the waves because of baseball, school, and work. He worked part time at a local electronics shop -- first disassembling items that required repair, and then eventually he did the troubleshooting and repairs entirely.\n\nFrom the time Bobby realized that his 16<sup>th</sup> birthday meant he would be able to get a driver's license, he wanted his own car. However, like everything else in his life, his father wanted him to earn it himself. With this philosophy of life in mind, his father surprised Bobby on his sixteenth birthday when he presented him with a beat up old 1965 Corvair Monza convertible. The engine and drive train were in great condition and the car had less than 50,000 miles on the odometer, but it had sat basically abandoned alongside a house in the high desert for several years. As a result, the convertible rag top, upholstery, and most of the interior were deteriorated from exposure to the elements, the paint was oxidized beyond belief, the tires were rotted, and the body needed some TLC.\n\nHis father intended for the restoration of the car to be the price Bobby had to pay in order to earn the right to drive it. His father felt that the sweat and time that Bobby would put into the restoration of the car would give him a level of appreciation that would foster a more responsible attitude towards the car and his time behind the wheel of it. The summer between his sophomore and junior year of high school Bobby sacrificed time with his friends at the beach so that he could work the mornings at the electronics shop, and then be home to work on his car by the time his father got off work to help him. Every cent that Bobby earned went into his car.\n\nThe day before Bobby was supposed to start his junior year of high school, he handed his father a one hundred dollar bill and said, \"Thanks dad for adding me to your insurance. Here's my portion of the premium. I really appreciate you helping me get insured before school starts.\"\n\nBobby's father folded the bill and placed it into his shirt pocket as he said, \"You earned a break Bobby. I hope you're as proud of that car as I am of you. How are you fixed for gas money? Now that you're clear to drive it, can you feed it?\"\n\nBobby smiled as he replied, \"I have five dollars set aside for that very purpose. Plus, I get paid on Wednesday, so I should be set. If it's okay with you, I'd like to go get some gas tonight so I won't have to rush on the way to school in the morning.\"\n\nHis dad squeezed Bobby's shoulder, took his wallet out of his pocket and handed Bobby a credit card. \"First fill-up's on me and your mom,\" he said. \"Drive safe.\"\n\nBobby hugged his dad and said, \"Always. Thanks dad.\"\n\nThe memory of sliding his dad's credit card into the pump on that warm Southern California evening never failed to bring a smile to Bobby's face. Hidden between pages of the owner's manual in the glove box was another reminder of his dad's generosity and love. The very same hundred dollar bill that Bobby had handed his father that night was presented to Bobby on the day he left for the Air Force Academy, along with a savings account passbook showing a balance of more than $2,000. His parents had paid his insurance all through high school and banked his contributions without him knowing. Even though Bobby knew his car too well to ever need to reference the owner's manual, he opened it frequently just to see the reminder of his father's love.\n\nReplacing the cap on his tank and returning the hose to the pump, Bobby thought briefly of hopping into the driver's seat without opening the door. The thought of how he used to do that dredged up other memories. Memories that took the smile from his face and sent him down a melancholy road he had traveled for the past ten years.\n\nBobby lived far enough from his high school that he was on one of the bus routes, but he always chose to walk rather than ride the bus. It meant he had to leave a little earlier each day, but that all changed once he was allowed to drive his own car. Driving to school the first day of his junior year, Bobby did allow himself a little extra time. He knew that he would have to park in the visitor's lot until he went to the office and obtained a permit that would allow him to park in the student lot. On the first day of school, the visitor lot, as well as the office, was likely to be crowded, so he wanted to get there early. As he suspected, he was lucky to find one open spot in the visitor lot. He quickly took it, grabbed his vehicle registration, and headed to the office.\n\nThe office was busy, but most of the activity was at the counter for Attendance issues. Bobby headed to the counter for the school cashier and found himself the only one in line. He quickly completed the application for the parking permit and allowed the secretary to make a copy of his registration and student ID card. When she handed them back to Bobby, they were accompanied by a blue and white parking permit sticker. Bobby thanked her and started out of the office to return to his car.\n\nAs he was opening the door to exit, someone on the outside was pulling it trying to come in. Their joint \"push-pull\" efforts had Bobby lurching forward and the other person stumbling backwards. Bobby stopped his motion and the momentum of the other person's pulling allowed the door to swing open. Bobby finally caught sight of the other person, but it wasn't anyone he recognized. She had maintained her balance, but was standing in an awkward pose, still holding onto the door for support. As she straightened up, Bobby spoke to her, \"I'm sorry. They really should put windows in these doors so we can see if someone is on the other side.\"\n\nThe girl looked up at him and smiled when she said, \"But that would make too much sense, so I doubt it will happen. Right?\"\n\n\"What amazing eyes!\" Bobby thought. Sure, the ice blue color was unique, but there was something else there as well. Before he could ponder it further, someone behind him said, \"Excuse me\", and he realized he was blocking the door.\n\nBobby smiled back and said, \"Right. See ya.\" Bobby stepped around her and headed for HIS car.\n\nWhile he drove around the school to get to the student lot, he considered the parking sticker. The instructions were that it was supposed to be placed either on the rear bumper, or the rear window. Bobby was not thrilled about either option.\n\nSince he was still relatively early, he stopped to speak with the guard at the student lot entrance and asked him, \"Good morning Rick, can I ask you something about the placement of the parking permit stickers?\"\n\n\"Sure,\" the guard replied. All the students knew the name of the guard because every student who didn't ride the busses had to pass by his post coming or going, even if they walked to school.\n\nBobby said, \"I just picked my sticker up and wondered if it could be placed somewhere other than the locations on the instructions. I would prefer not to have the glue on either my bumper or my window.\"\n\nRick told him, \"Since I'm the one that monitors them, as long as you place it somewhere visible and give me a heads-up, you will be okay.\"\n\n\"Great,\" said Bobby. \"I'm going to stick it to some clear Mylar and hang it from my rear-view mirror. Are you okay with that?\"\n\nRick replied, \"Works fine for me while it's parked, but make sure that you don't obstruct your vision with anything hanging from your mirror or you're likely to get a ticket from the cops.\"\n\n\"Understood,\" said Bobby. \"Thanks Rick.\"\n\nBobby had been scoping out the student parking lot since he first got his car. Even though he couldn't drive it yet, he knew that he would one day, so he started imagining where the best places would be to park it when the day finally came. Now that the day was here, Bobby knew exactly the spot he wanted. The last parallel parking spot along the fence between the school and the neighborhood houses was his destination. Since the majority of the spaces were angled parking, and most students hated trying to parallel park, the spot would usually be available to him. During the afterschool rush, while everyone else was trying to back out of their spaces with other students driving behind them, being able to just pull out into the flow would also be an advantage. The final feature of this spot was that for almost the entire school year, the shade from a large Sycamore tree fell right over this very parking spot for most of the afternoon. When Bobby restored the convertible rag top he had chosen to go with the black rather than the white. He thought it looked better with the red body color, but knew that the solar gain would be something he would have to deal with occasionally. While he put the top up after parking, he was glad his choice of parking space had considered this.\n\nBobby had been in accelerated learning classes his entire life. In grade school it was referred to as \"Gifted and Talented Education\", or GATE, and in high school it was called \"Advanced Placement\", or AP. His schedule for this year was heavy on core requirements, with only one elective and PE as any kind of academic respite. Walking to his first class, he was joined by a few friends and they started comparing schedules and teachers. Most of Bobby's friends were kids that he had grown up with since Kindergarten or played baseball with through his years in little league. He seldom had classes with any of his friends, which usually left him on his own where school projects or studying were concerned.\n\nStill running ahead of schedule, Bobby entered his first class of the day two or three minutes before the first passing period bell rang. AP Biology was sought after by any of the kids who envisioned a career in medicine, but it was tough to maintain the overall grades that would qualify them for this particular class. Bobby had requested the class solely due to his interest in the subject, and completing it in his junior year would free him to take AP chemistry during his senior year.\n\nThe room was used for various science classes during the day, so it was arranged accordingly. The teacher's desk was at the front of the room, with three rows of six lab tables, each of which sat two students. The tops of the lab tables each had a small sink with a faucet located along the back center, and locked drawers and cabinets all around the base. Depending upon the science discipline being taught, students would retrieve the necessary equipment from below their tables during each class, and then return them at the end of class.\n\nBobby selected a seat at a table in the row closest to the door, three back from the front. He placed his backpack on the floor, took a seat on his stool, and watched the other students as they started to arrive.\n\nBobby knew most of the other students in the class by name. They had shared dozens of classes over the years. As people passed, he would greet them warmly and share a few words, but no one wanted to get into an involved conversation right before the start of class.\n\n\"Is this seat taken?\"\n\nBobby was surprised that someone had spoken to him from the inside aisle because most people were walking up the outside aisles, and he thought he had noticed everyone enter the room. He turned to the girl who had spoken and recognized her from the door at the office. \"No. Please sit down.\"\n\nShe smiled, placed her backpack on the floor next to his and took her seat.\n\n\"Smallville\"... Bobby thought. \"What made me think of that TV show?\" he wondered. As the girl turned to introduce herself, he knew why.\n\n\"Hi,\" she said. \"I'm Patty Harper\".\n\n\"No you're not, your Kristen Kruek with ice blue eyes,\" thought Bobby. While Patty Harper, at about five foot eight inches was taller than the actress, and of course her eyes were that amazing color of blue, there was a wholesome beauty, athletic grace, and a full-body smile that reminded Bobby of the effect that Lana Lane always had on the \"Boy of Steel\".\n\n\"Hi Patty, I'm Bobby Brandt\".\n\nEven if he wasn't naturally a confident person, his being raised with three older sisters would have made Bobby much less intimidated by the opposite sex than a lot of other teen age boys. Bobby had never had a problem talking to girls, dated several on a casual basis, and knew how to show all girls the respect they deserved.\n\n\"Pleased to meet you... again,\" she chuckled.\n\n\"Yeah you too,\" Bobby said.\n\nWhen the next passing period bell rang, Bobby turned to Patty and said, \"Well, it was nice meeting you Patty. I guess I'll see you tomorrow.\"\n\nPatty smiled and said, \"If not sooner. Bye.\"\n\nBobby followed her out the door and started for his next class. He noticed Patty reviewing her printed schedule and looking around at the room numbers. \"Where are you headed?\" asked Bobby.\n\nPatty looked at her schedule again, \"AP English. Room 36\".\n\n\"Then you're with me,\" Bobby said. \"Come on and I'll show you. This is apparently your first day here. Where are you from?\"\n\n\"My mom took over a realty office in Cypress in July and we moved down from the San Fernando Valley so she wouldn't have to commute.\" Patty reviewed the paper in her hand again and said. \"I never thought my records would arrive to this school in time for me to get the right classes, but so far everything on my schedule seems right.\"\n\nIt turned out that Bobby and Patty shared all their AP classes, and didn't go their separate ways until lunch time. After lunch Bobby had his one elective class, which this semester was Keyboarding, and then since Bobby was on the baseball team, his last period class was always PE, even when it wasn't baseball season.\n\nAs school ended, Bobby almost forgot to go to the parking lot because he was so used to walking home. When he had put the top down and was preparing to leave the parking lot, he congratulated himself on his choice of spaces. He was able to get into the flow of cars exiting and out of the lot within two minutes. He saw Patty Harper walking along the sidewalk and was going to ask her if she wanted a ride, but he was in the left lane with no opportunity to change before he would be too far past her. It was probably just as well, since he had to go directly to work and he didn't know if offering her a ride home would have taken him out of his way or not.\n\nThe next morning, Bobby left his house at a more leisurely time. He still wanted to get to school at least fifteen minutes before first bell, but he didn't have to be there as early as he did yesterday. He was planning on trying a different route this morning. He wanted to experiment with the multiple options he had in case road construction or something else ever came up on one of them.\n\nWhile stopped at a traffic light, Bobby thought he recognized Patty Harper walking down the sidewalk ahead of him. Once again he was in the left lane, but this time he would have a chance to get to the right before he reached her. As the light turned green, Bobby adjusted his speed to allow him to merge into the right lane between two other cars in plenty of time to pull to the curb alongside Patty.\n\n\"Hi Patty,\" said Bobby. \"Would you like a ride to school?\"\n\nPatty stopped walking and looked to see who had spoken to her. When she recognized Bobby she smiled and replied, \"Didn't you get enough of me yesterday?\"\n\n\"Is that a 'no'?\" asked Bobby with his own smile back at her.\n\n\"No, it's not a 'no',\" giggled Patty as she opened the door and climbed into his car. As she placed her backpack at her feet and settled into her seat she said, \"This is a firm seat. It almost feels brand new.\"\n\n\"You know,\" Bobby said with a contemplative look on his face, \"Now that you mention it, you are the first person to sit in that seat. All the seats were replaced this summer as part of the restoration, and no one has ridden shotgun until now.\"\n\n\"I'm very honored sir,\" Patty said as she turned to Bobby.\n\nAs he looked into her eyes, he saw genuine affection, almost like he was reading her feelings through those beautiful ice blue eyes. He liked what he saw, but had to turn away to check traffic before pulling back on the road. Patty chatted animatedly all the way to school, asking about Bobby's car and what he had done to restore it to its current condition.\n\nAt the parking lot, Patty asked, \"Why are you passing up so many good parking spaces?\"\n\nBobby replied, \"Let me park, and then I'll explain my logic to you. It's always nice to start the day with a laugh.\"\n\nBobby asked Patty to sit and wait for him to open her door for her, and she said, \"What a gentleman.\" Bobby chuckled and said, \"Well, kinda sorta.\"",
        "Bobby's real reason was that when he had selected this parking spot, he hadn't considered having a passenger with him. In order to fit into the space properly, there was only about 20 inches of clearance on the passenger side for the door to open. He didn't want the paint on the door damaged by hitting the cinder block wall right next to it.\n\nHe opened the door for Patty, and realized that she had plenty of room to get out of the car, so unless she carelessly just threw the door open, it shouldn't hit the wall. On the other hand, Bobby was enjoying himself as he took her hand and helped her out of the car. She bent to retrieve her backpack and stood looking at Bobby.\n\nHe said, \"If you give me a minute to get the top up and secured, I'll walk with you to class. If you want to go ahead without me that would be okay too.\"\n\nPatty made a fake pout, \"I'm new here and might get lost between your car and the class. I would feel better waiting for you to show me the way.\"\n\nBobby chuckled, \"I am honored to be your guide.\"\n\nFrom that morning on, Bobby was hooked. After school that second day he drove Patty home, which allowed him to know where she lived. He met her parents and heard her called by her full name 'Patricia Kathryn' as well as her nickname \"PattyKat\" for the first time.\n\nThey made arrangements for him to pick her up at her house rather than along the side of some road. On the third day of school, they started eating lunch together, usually discussing class assignments and homework, but Bobby was amazed at how her eyes seemed to burn right into him. He sometimes felt like she was communicating with him through her eyes alone, and all he had to do was translate this new foreign language in order to unlock all the mysteries of life.\n\nBobby and Patty had become lab partners in Biology and sat next to each other in every other class that they shared, so naturally Bobby went to her house a few times to study or work on class projects together. From the first time he met her, Bobby was more comfortable around Patty than anyone else in his life, and while he sensed she felt the same about him, they hadn't discussed it.\n\nWhen baseball wasn't in season, Bobby tried to work at the electronics store three evenings each week, usually Monday, Wednesday and Friday, plus Saturday mornings and Sunday afternoons. Even though he didn't play football in high school, Bobby enjoyed going to the games and cheering for his school, unfortunately his work schedule frequently made that impossible.\n\nDuring lunch with Patty one day, he asked, \"Have you been to any football games since you came here?\"\n\nShe gave him a questioning look, \"Not yet. Why?\"\n\n\"More curious than anything,\" Bobby said. \"I don't even know if you like football.\"\n\nPatty smiled, \"I always enjoyed the atmosphere much more than the game on the field. Of course that may have been influenced by going to a school that NEVER won a single game,\" she laughed. \"I'm anxiously waiting for baseball season though so I can watch you play. I'm going to be your biggest fan. What about you? Do you get to many football games?\"\n\nBobby confessed, \"So far all the home games this year have been on Friday nights, and I'm scheduled to work. So no, I haven't been to any games yet this year. However, the game this week is on Thursday night because it's Homecoming, so I could probably make that one.\"\n\n\"That's nice,\" said Patty.\n\n\"Those eyes!\" thought Bobby. \"What did they just tell me?\" Bobby gazed into Patty's eyes with more focus, and then he knew.\n\n\"Patty, if you're not doing anything Thursday night, would you like to go to the Homecoming game with me?\"\n\n\"Bobby I would be so honored,\" she said as she smiled glowingly at him, but it was what he saw in her eyes that told him he had read them correctly.\n\nFrom the Homecoming game onward, every night that Bobby wasn't working, he and Patty were together, and on nights he worked, he called her when he got home. There were not a lot of 'dates', but they combined their studying with activities that real couples would do. Rather than reading in the library, they would sit under a tree at a park to read, often with one or the other lying with their head on the lap of the other. They would hold hands between classes on occasion, but when they were in his car, Patty's left hand was always in Bobby's right, or it was on his arm or shoulder. She was steadfast in maintaining a physical connection to him, and he welcomed her efforts. Their kisses were quick, infrequent, and reserved, but they could both sense a passion growing each time their lips met. It became common knowledge around the school that Bobby and Patty were exclusive, though neither of them had ever acknowledged it themselves.\n\nDuring the Christmas break, Bobby and Patty became even more inseparable. Bobby always considered their first \"real\" kiss to be the one they shared under the mistletoe at his house on Christmas Eve.\n\nBobby's parents had left to spend the evening with their daughter Lindi's family in Corona before driving to Ontario Airport to pick up his sister Franc who was flying from school in Texas for Christmas. Patty's mom was holding a Christmas Eve party at her house for some close friends and work associates.\n\nBobby and Patty knew that they each would be expected to spend Christmas day with their own families, so they had planned to get together on Christmas Eve to exchange presents with each other.\n\nBobby picked Patty up from her house and took her to an early dinner at a restaurant along Pacific Coast Highway with a window view of the decorated boats in Newport Harbor. After dinner they went to his house to exchange gifts. All night Patty's eyes had been radiating her feelings for Bobby, and he reveled in what they told him. While they sat cross-legged, facing each other in front of the Christmas tree, Bobby handed Patty a wrapped package.\n\nShe smiled across at him as she unwrapped the box. It contained a complete pastel art set, including sketch pad. Tears came to her eyes as she leaned over, pecked Bobby on the lips and said, \"I love it. Thank you. Now I just need some inspiration for my first masterpiece...\"\n\n\"I actually thought about that, and have the perfect model for you,\" as he handed her another wrapped package.\n\n\"Two gifts?\" she asked.\n\nBobby grinned and said, \"I wish there could be more.\"\n\nPatty pecked him on the lips again as she tore the paper off. This present brought a tear to her eyes as she squealed with delight, \"Oh Thank you Bobby! This is perfect in so many ways! I'll cherish it always.\" Then she brought the framed photograph of Bobby's Corvair to her lips and kissed it. His car had been the constant in their relationship. It was shared only by them, and it was the one place where they were free to express themselves to each other in relative privacy, even with the top down.\n\n\"Ready for your gift?\" she asked as she stood and pulled Bobby to his feet.\n\n\"Okay,\" Bobby chuckled as he let her lead him. Patty reached into her purse and removed a small wrapped present and handed it to Bobby.\n\n\"I sure hope you like it,\" she whispered as he opened her present.\n\n\"Wait!\" she said. \"You'll need more light.\" She quickly pulled him over towards the doorway that led to the kitchen so that the light from the fluorescent bulbs in the ceiling would shine down on them. Bobby finished removing the paper, and then opened the small box to reveal a key chain fob.\n\nAs he examined it, the Chevrolet Corvair Monza emblem was very prominent on one side, and there appeared to be something engraved on the other side. He angled the fob so the light would hit it better, then he silently read, \"To Bobby with all my love. PattyKat.\"\n\nBobby was at a loss for his own words because of the words Patty had written. Looking into her eyes left him no doubt that the words were true, and now he had to let her know that he felt the same.\n\nWhen Bobby motioned with his head for Patty to look up, she noticed for the first time that there was a sprig of mistletoe taped to the top of the doorway they were standing under. Bobby pulled her into his arms, smiled and while looking into her eyes, tried to beam to her the same feelings that her eyes showed him.\n\nTo make sure she got his message, he whispered, \"I Love you PattyKat\", and then he kissed her. He kissed her the way he had wanted to kiss her for months, with his lips, his tongue, his hands, arms, and whole body, and she met him point for point.\n\n\"Cute,\" Bobby thought as he realized Francis' reference to a Doobie Brothers song. \"Now I'm going to have that damned song in my head for hours... \"\n\n\"When the sun comes up on a sleepy little town\n\nDown around San Antone\n\nAnd the folks are risin' for another day 'round about their homes.\n\nThe people of the town are strange\n\nAnd they're proud of where they came.\n\nWell, you're talkin' 'bout China Grove, wo, oh, oh,\n\nOh, China Grove.\"\n\n\"Well,\" he thought, \"at least I know I'm on the right road.\" Bobby tapped his fingers against his key fob to the beat of the song but his mind soon lost the rhythm...\n\nBobby remembered getting tickets to the Rose Parade, so on New Year's Eve, he and Patty drove to Pasadena to spend the night along the parade route. Bobby didn't tell their parents that he had actually paid for reserved grandstand seats, so there was no need for them to spend the night on the parade route, but Patty knew.\n\nBobby packed a couple of sleeping bags into the trunk of the Corvair, and since the temperature was a bit on the cool side, he left the top up for the drive. They arrived in Pasadena by 9 p.m. and found a place to park that was close enough to the port-a-potties should they need them, but far enough away where they wouldn't have people walking past them all night.\n\nBobby retrieved the sleeping bags and handed one to Patty.\n\n\"Top or bottom?\" she asked. Bobby looked at her quizzically.\n\nShe smiled and said. \"We are going to zip the two sleeping bags together silly and cuddle up together to stay warm. One bag will be the top and one will be the bottom. Do you care which is which?\"\n\nBobby grinned, \"Since you seem to have a plan already, I'll defer to your judgment on the matter.\"\n\n\"Good answer,\" she giggled.\n\nThey zipped the bottom of the two bags together and then positioned them in the backseat of the car. Once they had both crawled in and gotten themselves situated inside the bags, they each pulled the zipper closed on their respective side, and then snuggled against each other to wait for the New Year.\n\nJust minutes before midnight, Bobby turned to Patty and said, \"I want to start this year, and every year to come with you Patty.\"\n\nHe slid his class ring off his finger and said, \"I hope you'll accept this ring as the first of many I have planned for you PattyKat. Will you go steady with me?\"\n\nBobby's only regret was that it was too dark to clearly see Patty's eyes as tears flowed.\n\nBetween her sobs, Patty whispered, \"Now and forever Bobby\". They fell asleep still kissing.\n\nWhen Bobby arrived at the park and practice fields, his California license plates were immediately noticed by U.S. Marshal Kirby Wallace.\n\nKirby had been with the Marshall Service for a little over two years after transferring from the Secret Service so he could take a job that would allow him to move to San Antonio. His fianc\u00e9e at the time had transferred from Walter Reed Hospital to Brooke Army Medical Center, and Kirby had sought a position that would allow him to relocate with her. The relationship ended when she began an illicit affair with a female doctor, but by then, Kirby was established in his current role, and decided to stick around the area.\n\nWhile he didn't attend every practice, Wallace did make a habit of keeping an eye on JR's practices on a regular basis from a discrete viewing spot across the street from the practice field. Kirby observed the stranger just sitting in his car as he watched the practice, and then saw him meet and receive a hug from one of the other parents watching the practice. The apparent familiarity with one of the Reids was somewhat comforting, but Kirby was still suspicious. He called for backup and kept a closer eye on the stranger in case he tried anything with JR.\n\nAs the practice came to an end, Jason Reid noticed his wife Francis chatting with her brother. He rounded up Joey and his friend JR since he would be riding home with them today, and then headed over to join his wife.\n\n\"I see that Francis didn't get you lost with her directions,\" Jason said as he walks up to Bobby.\n\nBobby shook Jason's hand, smiled and said, \"The directions were spot-on. That darn song being stuck in my head has me considering an alternate route in the future though.\"\n\nJason and Francis both laughed and Jason says, \"You're telling me!\"\n\nFrancis called one of the boys over and said, \"Bobby, I am pleased to introduce your nephew Joey. Joey, this is your Uncle Bobby.\"\n\nBobby saw almost equal parts of his sister and Jason in the features of his nephew, and thought how lucky the boy was to have such visible indications of who both of his parents were.\n\nJoey shook Bobby's hand and introduced his friend JR.\n\nContinuing to watch from across the street, Kirby tensed momentarily as JR shook hands with the stranger, but then he relaxed slightly as the group started moving towards the parking lot.\n\nBobby veered off towards his car to follow Jason and Francis back to their house when Joey noticed the Corvair for the first time.\n\nJoey's eyes grew wide as he nudged JR and said, \"JR, that looks just like your Dad's car!\"\n\nJR agreed and the two boys approached Bobby's car to examine it closer.\n\nBobby looked down at JR. \"Does your Dad have a Corvair?\"\n\nJR looked up at Bobby, \"I don't know what kind of car it is. I've only seen pictures of it that my mom keeps.\"\n\nAs the boys walked around the car, Joey asked, \"What does the license plate mean?\"\n\nBobby sought an explanation they would understand and then told them, \"You probably know that boats are often named in honor of ladies, so in the same tradition, I named this car after a special girl in my life, hence the license plate that reads \"PATTYKAT\".\n\nFrancis walked over and told the boys that they could talk more about the car when they got home since Bobby will be following them, so they left Bobby to get in his car and they headed to their SUV for him to follow.\n\nThe backup that Kirby Wallace requested hadn't arrived by the time that the practice ended. When he saw the stranger in the convertible pull out and start to follow the Reid family with JR in their vehicle, he began tailing them as well.\n\nIt took less than half a mile for Bobby to realize that he was being followed. There weren't a lot of through roads in this semi-rural area, and the black Suburban didn't appear to be doing anything other than traveling in the same direction as them, so Bobby just kept an eye on it as they drove to his sister's house.\n\nWhen Jason pulled their SUV into the drive of their home, Bobby pulled his Corvair along the side of the road in front. The black Suburban continued past and Bobby watched it as it went around a curve down the dead end road. As Jason, Francis and the boys piled out of their car, Bobby was already walking towards them.\n\nBobby heard thunder in the distance and looked to the sky. There were storm clouds off to the north that looked like they would pass by, but he yelled to the group, \"I'm going to go ahead and put a cover over the car rather than put the convertible top up.\"\n\nJoey and JR both asked if they could help Bobby, but Francis said, \"Joey you need to help us unload our own car, but if JR wants to help Bobby that would be fine.\"\n\nWhen Joey didn't object to this JR trotted the few feet to Bobby, and then they walked together back to the Corvair. JR headed to the back of the car expecting Bobby to keep the cover in the trunk.\n\nBobby saw this and then he smiled and asked, \"JR do you know anything about a Corvair?\"\n\nJR shook his head as he said, \"I've only seen the pictures that my mom has.\"\n\nBobby told him, \"Come up front with me\".\n\nBobby opened the trunk compartment and JR's eyes almost popped out of their sockets, \"Where's the motor?\"\n\nBobby then took JR to the back of the car and opened the engine compartment.\n\n\"The Corvair was the only production version of a rear-engine car ever manufactured in the United States,\" said Bobby.\n\n\"You mean this isn't a foreign car?\" asked JR.\n\nBobby shook his head, \"Nope, built right here in America.\"\n\nBobby closed the hood and led JR back to the front of the car where he removed the cover he had folded in there.\n\nAs he removed it, JR noticed a baseball glove on the floor of the trunk and asked, \"Is that your glove?\"\n\n\"I forgot that was in there!\" said Bobby. \"Yeah it's my old glove.\"\n\n\"Do you play baseball,\" JR asked.\n\n\"I played third base in little league, three years in high school, and then four more years in college,\" replied Bobby.\n\nJR said, \"I play third base on our team. Joey and his dad usually play catch for a while after supper. Do you want to play catch with me if they do?\"\n\n\"Well, I'll pull it out now in case we get the chance, but no promises.\" Bobby pulled out the glove and tossed it onto the road in front of the car, closed the hood, and then started unfolding the cover over the car.\n\nJR went around to the other side and tried to help unfold and position the cover, following the actions that Bobby was taking on his side.\n\n\"Do you think you could take me for a ride in your car sometime, Bobby?\"\n\nLooking at the boy, Bobby thought how he reminded him of himself at that age. The similar hair and eye color aside, JR exuded a confidence that allowed him to ask for what he wanted and, Bobby expected, the strength to accept not always having his desires fulfilled.\n\nBobby smiled at him, \"JR, I never make promises I can't keep. Whether I can take you for a ride will depend on things outside of my control.\"\n\n\"Like what?\" asked JR.\n\n\"I cannot take you for a ride unless your parents say it's okay for you to ride with me. You'll need them to give me their permission.\"\n\n\"Both parents?\" asked JR.\n\n\"Is that a problem?\" responded Bobby.\n\n\"I only have a mom,\" said JR. \"I mean I have a dad, but I've never met him.\"\n\n\"I'm sorry,\" Bobby said. \"I thought that when you and Joey said this car looked like his that...\"\n\n\"I don't know anything about him other than the pictures of his car. Mom says that she will tell me about him someday,\" JR says. \"I think she may tell me soon because she doesn't cry as much anymore when I ask her about him.\"\n\n\"So you've only seen a picture of a car and she told you it was your dad's?\"\n\nJR told him, \"I've seen lots of pictures of the car. There's a new one each year.\"\n\n\"So your dad sends her new pictures each year? That means he must still be around somewhere.\"\n\n\"No,\" JR replied. \"Mom paints the pictures herself from her memory. She frames a new one each year on Easter Sunday. As far as I know, we never hear from my dad.\"\n\nThe thought of someone else holding a special memory of Easters past brought tightness to Bobby's throat. He stifled it and finished covering the car, showing JR how to secure the spring clips around the bumpers and wheel wells.\n\nBobby retrieved his glove from the road, and he and JR returned to join the others on the back deck of the house.",
        "Bobby went into the house for a tour by his sister Franc, and then joined Jason at the barbeque where he was preparing it for the burgers they would be grilling for dinner. JR went into the house to wash his hands and help Joey with his chores, which consisted mainly of feeding his fish and the family dog.\n\nBobby looked around their lot, which were actually two 3-acre lots combined. While they fenced the lots as one, they never joined the deeds and built and landscaped only one of them. They retained the second lot as a buffer from their neighbors, and in the hopes that someday in the future, Joey may want to build his own home on that lot. They had landscaped the front yard of their lot with grass and a few flower beds, but the back yard had seen considerably more effort in the form of an expansive wooden deck that led down to the in-ground swimming pool with adjacent hot tub. All of the new-growth trees evident on other lots had been removed, and only about a half dozen mature live oaks remained to shade the beautiful St. Augustine turf covering the rest of the lot. It looked better than virtually any city park that Bobby had seen in his travels.\n\nBobby accepted a beer from Jason and leaned against the deck railing, \"How's the team this year, coach?\"\n\nJason replied, \"Good kids needing to learn the fundamentals. Problem I have is that almost every kid on the team has parents -- in particular fathers -- who commute to San Antonio for work. In most cases the drives take less than an hour, but it makes it hard for any of them to commit to assisting with the team. When I have a case that I'm assigned, my schedule isn't as flexible, and we end up cancelling a lot of practices during the week, which really impacts the games on Saturdays. We only have one game left this season though, next Saturday. It's really not fair to the kids, but Francis keeps telling me that \"a little is better than none\", and I guess she's right to some extent.\"\n\nFrancis brought a platter of burgers out and Jason started putting them on the grill. Francis returned to the house, leaving Jason and Bobby to continue their conversation.\n\n\"So Joey seems pretty tight with JR,\" said Bobby. \"How does he know him, besides the team of course?\"\n\nJason said, \"JR is one of the Freemans from that huge house at the end of the cul-de-sac.\"\n\n\"I haven't seen the house, so I'll take your word for its size. So it's a family and not just JR and a single mom?\" Bobby asked?\n\n\"Katie -- JR's mom -- and him live there with her parents,\" said Jason. \"They were the first family to build here when the sub-division opened, so I guess they've been here about 9 years now. Nice folks, good neighbors. The parents aren't that old, but they are both currently in a nursing home in San Antonio for different medical reasons, and that's why we have JR here until his mom gets back from her daily visit to them. She should be joining us pretty soon. Her and Francis have become very close friends.\"\n\n***\n\nAs Katie drove towards her house, she noticed something on the side of the road where she normally parked when visiting the Reids or picking up JR. When she pulled in behind it, she saw a relatively small car under a canvas cover. Obvious from the shape, it was a convertible, but not much else was identifiable about the make or model.\n\nShe then remembered that Francis had mentioned her brother had recently relocated to the area, and would be visiting them, but didn't remember if that was supposed to be today. While Katie knew that JR and Joey were friends, and the Reids were always genuine in their willingness to have JR at their home, she hated to impose on them as much as she had lately. Now it appears, she and her son were intruding on Francis' reunion with her brother, and Katie felt really bad about that. She would pick up JR and they would leave the Reids to their own family gathering.\n\nKatie walked to the front door and rang the bell. JR answered and greeted his mom with a yell, \"Mom, you're here!\", and a warm hug. Francis hollered for Katie to join her in the kitchen, so she separated herself from JR and they walked through the house together.\n\nWhen Katie entered the kitchen, she began to apologize to Francis about forgetting the visit from her brother, and that she and JR would leave them alone for their reunion.\n\nFrancis frowned, \"Katie, you and JR are like family, so unless you want to be disowned immediately, you'll knock that nonsense off. I knew Bobby was coming today and if I didn't want you here, I would have told you so. So there!\"\n\nKatie's expression changed just for an instant, but Francis noticed it. \"Is something else wrong? How are your parents?\" she asked.\n\nKatie replied, \"They're improving, in fact Dad could probably leave and come home at any time, but he won't leave Mom there while she is still having the physical therapy sessions. Your brother's name is 'Bobby'?\"\n\n\"Yeah,\" Francis said. \"He's the baby of the family, but he and I were always the closest. While my older siblings were both girls, they came first and had already paired up by the time I was born. So, even though he was a boy, Bobby and I always were paired together. His work has kept us apart, but we talk on the phone more than Jason and I do. I am so glad he has moved close by so Joey can get to know him as well. This is the first time they have met.\"\n\nKatie was getting some strange intuitive feelings starting to rise from foggy memories trying to push themselves to the surface of her mind, and she tried to ignore them.\n\nFrancis interrupted Katie's thoughts when she said, \"Come on, grab that tray of condiments and follow me. I'll introduce you to my baby brother.\"\n\nWith increasing trepidation that she couldn't understand, Katie took the tray and followed Francis out onto the back deck where Jason and Bobby were discussing little league baseball.\n\nBobby noticed the back door open and watched Francis coming towards them with a plate of corn on the cob and buns for the burgers. She paused to yell for Joey and JR to come out for dinner, and then continued towards Jason at the barbeque.\n\nFrancis was followed out of the door by a relatively tall woman that Bobby assumed was JR's mom. She had the same blonde hair, and even behind the stylish glasses that she wore, Bobby could see that her eyes were the same green-hazel color as her son's.\n\nShe was looking down to watch the slight step down as she exited the door, but as soon as she cleared the screen door and it swung closed, she raised her eyes and immediately found Bobby's looking back at her.\n\nIt was almost like a cartoon or movie special effects to watch the color drain from her face -- literally from the top of her forehead and then down her face, neck, and arms -- as she turned ghostly white. Her eyes rolled up into her head as she collapsed to the deck just as JR and Joey were coming out the door.\n\nThe tray of condiments dropped, with jars and bottles rolling in every direction. Bobby was first to her, but Francis yelled at him not to move Katie as she dropped her load onto the table and rushed over to her friend.\n\nJR hollered, \"Mom!\" and knelt down beside her asking what was wrong.\n\nFrancis told Jason to get the first aid kit out of the kitchen and he was back within seconds. By this time another man had appeared beside JR and put his hand on his shoulder.\n\nJR looked up, \"Something's wrong with Mom, Uncle Kirby.\"\n\nKirby Wallace patted JR's shoulder and said, \"I think everyone should stand back and let Francis check Katie out.\"\n\nWhile he said this to the crowd in general, his eyes never left Bobby's when he spoke the words. Bobby, Jason, and Joey all moved back to give Francis space, while Kirby pulled JR back with him in the opposite direction from everyone else.\n\nOver Kirby's shoulder, Bobby could see another man, positioned almost as if he was covering his partner with a weapon still concealed, but readily available.\n\nAfter quickly assessing Katie for neck or head injuries, and seeing no other open wounds or injuries evident, Francis removed some smelling salts from the first aid kit, cracked the vial beneath Katie's nose and waved it briefly. Katie recovered rather quickly, but it took her a second or two before where she was and what had happened reached her consciousness.\n\nWith the help of Francis, Katie sat up and looked around.\n\nKirby spoke to Katie, \"I'm here to take you and JR home as soon as you're ready.\"\n\nFrancis told Kirby that she wanted Katie to recover for at least half an hour so that she could further assess her condition and why she may have fainted. Francis asked Katie if she thought she could walk, and when Katie nodded, Francis helped her to her feet and led her into the house.\n\nFrancis directed Katie to the downstairs guest room and had her lie on the bed while she went to get a cool rag to place on her forehead. When Francis returned with the rag and placed it on Katie's head, she then sat down on the bed beside her and started asking questions.\n\nThe first were standard, \"Do you know where you are? Do you know what day it is?\" et cetera.\n\nThe next question made Katie gasp, \"Is it possible that you might be pregnant?\" Francis asked.\n\nKatie didn't know why she answered as she did, but it must have been the recent shock of seeing Bobby that started her down that path.\n\n\"You may not believe this Francis, but I haven't had sex since JR was conceived. When I had to unexpectedly desert his father, and the love of my life, I took a vow of celibacy as my penance for the pain in my heart, and I'm sure in his as well. He has no idea why I disappeared, where I am, or even that he has a son. While I can't change that, I can honor the love we had by remaining forever true to him.\"\n\nFrancis was stunned. Not only by Katie's confession, but also by the similarities to the ordeal that her brother had been through with that Patty girl he was dating in high school.\n\nIn all the time that Patty and Bobby had been together, she had met every immediate member of his family except the youngest sister, Francis -- or \"Franc\" as Bobby called her. When Patty and Bobby first met, Francis had just finished high school and was on a youth tour of Europe with her church group. Immediately after that year-long tour, she had gone off to college here in San Antonio. Fate would have it that every time Francis came home for a visit, Patty was previously committed to some event with her family and they just never actually met.\n\nFrancis told Katie, \"Katie, I'm so sorry for you. I have no first-hand experience with a love loss such as yours, but I spent years trying to bring Bobby out of his funk when a girl he loved just disappeared. He never has gotten over her and continues looking for her to this day. I think that he could move on if he ever understood why she had left, and if she was okay. He's never really had closure to what happened.\"\n\nFrancis looked closely at Katie, \"How this related to you fainting as you walked out onto the deck a few minutes ago.\"\n\nKatie said, \"Please close and lock the door to the room.\"\n\nOnce Francis did, she turned back to return beside Katie on the bed.\n\n\"Not one word of what I tell you can leave this room,\" Katie began. \"The safety of mine and your families depends on that. Are you okay with keeping my secret, Francis?\"\n\nFrancis saw the fear in Katie's face and readily agreed.\n\nKatie took Franc's hand. Katie had tears in her eyes as she said, \"Bobby's lucky to have you, Franc. I wish you and I would have met years ago.\"\n\n\"What did you call me?\" asked Francis.\n\nKatie said, \"Franc, did you ever wonder what \"JR\" stood for?\"\n\nFrancis told her, \"Joey has mentioned that it stood for 'Junior'.\"\n\nKatie said, \"Well that's only part of the meaning. While he is named after his father, and he is a \"junior\", they are also his initials. His name is James Robert Brandt, Jr. Bobby is his father.\"\n\n\"Oh my God!\" whispered Francis, and now she felt like she was about to faint.\n\nKatie scooted over and let Francis lie beside her on the bed before she could fall to the floor. Lying on her back, Francis turned to Katie and said, \"You're Patty?\"\n\n\"I was Patty,\" said Katie.\n\n\"What happened?\" asked Francis.\n\n\"I can't get into it all right now because Kirby is sure to be freaking out and I better let him get me and JR home before he goes nuclear.\"\n\n\"So what do you want to do?\" asked Francis.\n\n\"Don't let anyone know what I have told you. I doubt that Bobby recognized me because my appearance is quite different than when we were together. If we can keep things as they are for a little while longer, the need for secrecy will be over and I should be able to tell Bobby everything. You can help me to keep Bobby in mine and JR's lives, even if it is only by seeing him here for barbeques or at baseball games. However, we must not let Kirby know or suspect that any of us have a history.\"\n\n\"JR is my nephew... he's Joey's cousin,\" moaned Franc. \"Alright Katie, let's work together and we'll be a secret family for now.\"\n\nAs Jason, Bobby and Joey scurried around picking up the condiments that dropped when Katie fainted, Kirby kept his hand on JR's shoulder a safe distance away from the others.\n\nWhen Bobby had picked up the last mustard bottle and placed it on the table with the rest, he approached Kirby extended his hand and said, \"We haven't been introduced. I'm Francis' brother Bobby\".\n\nKirby shook his hand and replied, \"Kirby Wallace\". Kirby turned to the man waiting behind him and nodded. The man abruptly turned and returned to the black Suburban that Bobby had seen earlier.\n\nJason walked over and shook Kirby's hand, \"I never know when to expect you to drop by Kirby. Care to join us?\"\n\n\"I think it would be better if I got Katie and JR home and take a rain check on the barbeque,\" said Kirby.\n\n\"Oh Uncle Kirby, can't we stay if mom says it's okay?\" asked JR.\n\n\"No,\" was the only response from Kirby, but he was looking directly into Bobby's eyes as he said it.\n\nJason said, \"Well, I better go check on Francis and Katie to see how things are going and if they need anything. Keep an eye on the burgers, will you Bobby?\" then he walked into the house.\n\nBobby headed over to the barbeque and checked the burgers. Not knowing how everyone wanted theirs cooked, he decided to try for medium and he could adjust from there if needed.\n\nJason and Francis came out of the house after a minute and then were followed shortly by JR's mom.\n\nFrancis took Bobby's hand and led him over to where Katie was now standing beside JR and Kirby, and then said, \"Katie Freeman, I would like to introduce my baby brother Bobby. Bobby recently relocated to the San Antonio area, so we hope to see him around here on a VERY regular basis.\"\n\nShe wouldn't meet his eyes, but Bobby took Katie's hand to shake it and he could actually feel his heart skip several beats and his mouth instantly went dry. Based upon the look on her face, Bobby sensed that Katie had a similar reaction to his touch, but he couldn't understand the cause.\n\nSimply saying the four words, \"Pleased to meet you\" took more effort than Bobby would have ever imagined possible.\n\nKatie simply nodded and smiled shyly. Once their hands separated, Katie seemed to recover her voice and while looking down, apologized for disrupting their family reunion. She agreed with Kirby that it might be best if her and JR went home now, but offered to have everyone over to her house after the game on Saturday.\n\nBobby couldn't understand the disappointment he felt as both Katie and JR left with Kirby. He hadn't been interested in or affected by any woman since he lost Patty, and knowing the intensity of the flame that still burned within him for Patty, he had resigned himself to a life alone unless he could finally find some answers to what had happened.\n\nKatie's presence to him seemed unworldly, spiritual or at the very least strongly familiar, but Bobby couldn't put a finger on why that would be. Other than looking into her eyes and the brief touch of her hand, he had had very little sensory input from their meeting. He hadn't seen much of her movements or mannerisms, he hadn't heard much of her voice, and he didn't recognize anything particular about her smell. Then what was it that made him sense that there was more to this woman?\n\nBobby returned to the table to help Francis getting everything setup as Jason finished the burgers. After they sat down to eat and had the plates prepared, Bobby asked Jason, \"What's the deal with Kirby Wallace and his back-up?\"\n\nJason finished the bite he was chewing and replied, \"I don't know all the details of the relationship, but Wallace is some sort of family friend or something. He showed up about a couple of years ago and keeps a pretty close watch on Katie and JR. He often has another guy with him, but Kirby is the only one that ever seems to hang out with Katie and JR directly. The others are always in the background somewhat.\"\n\n\"What does Katie and/or her parents do for a living?\" asked Bobby.\n\nSince Jason was working on another bite of his burger, Francis said, \"Katie's parents apparently won a large lottery several years back, and that's when they decided to move here and build their home. As one of the first families here, her mom worked to establish the homeowners association, helped draft the covenants, conditions, and restrictions for the association, and headed the architectural control committee until recently. Her father got real involved in helping to establish the local volunteer fire department, helping to raise funds and so on, but he was never actually part of the department due to his age. Katie finished her art degree and now has her own commercial art company, doing things like artist renderings of buildings being proposed by architects... that sort of thing.\n\nBobby asked, \"What about JR's dad?\"\n\nFrancis kept her focus on the corn she was eating, praying that Jason would field that question before Bobby saw her panicked expression.\n\nJason jumped in, \"No one knows. JR was born right before the Freemans moved into the house and there has never been any man obvious in Katie's life, except Kirby Wallace.\"\n\n\"So Uncle Kirby and Katie are an item?\" asked Bobby.\n\n\"Not really,\" said Jason. \"Katie has never shown any interest in Wallace other than as someone who looks out for her and JR. He helps with shuttling JR to school or practice if Katie is tied up... things like that. I've never even seen them touch each other, intimately or otherwise. JR calls him Uncle Kirby, and I guess he is more like a big brother to Katie than anything else.\"\n\n\"What kind of work does Kirby do?\" asked Bobby.\n\n\"Have no clue,\" said Jason.\n\nWell, Bobby decided that he might just try to find out.\n\n***\n\nKirby was of a very similar mindset as he left Katie and JR at their front door and returned to his Suburban. He had requested information on the owner of the red Corvair as soon as he saw the California vanity plates, and he was frustrated that it was taking so long to get a response.\n\nAs he drove to his office he called in to check on his request and got even more frustrated with the wall he had just run into. The vehicle had a valid registration, but details on the owner were not available through the normal channels. Kirby would need to file a special request through the Department of Homeland Security and wait for review of his 'need to know' before the information would be released to him.\n\nKirby was astounded. Never before in his capacity as a U.S. Marshal working for the witness protection program had his request for details on any individual been denied. Who was this guy?\n\nWell, there is more than one way to skin a cat, he thought. If Bobby was really the brother of Francis Reid, then getting a complete background on her would likely provide some details he could use to get around the vehicle registration roadblock.",
        "Kirby phoned in his instructions for a background and profile report to be put together on Francis Reid, and that he wanted it on his desk by the time he arrived in his office. Forty-five minutes later, Kirby was sitting at his desk reviewing the report.\n\nFrancis Reid married Jason Reid ten years ago, but her maiden name was redacted in the report. She had received her nursing degree from the University of Texas at San Antonio, but once again, her maiden name on all of her school records was redacted out, as was any information on her history prior to starting college.\n\n\"What the hell!\" Kirby thought as he picked up his phone.\n\n\"Why is this report censored?\" screamed Kirby into the phone.\n\n\"All the records in the State of Texas Vital Records department related to Francis Reid, as well as those at UTSA have been classified secret for purposes of national security,\" he was told. \"The same is true with the IRS and every other database we have queried. We're trying to find out the reason and who authorized it, but it will take a day or two at least.\"\n\n\"I don't like the feeling of this,\" said Kirby as he hung up the phone.\n\nHe picked up another phone and gave a pre-arranged and clearly understood command, \"Tighten up on the Freemans.\"\n\n***\n\nBobby was just saying his goodbyes to Francis and Jason when his cell phone vibrated and gave off a single tone. He glanced at the screen and noticed the icon indicating that there was a Wi-Fi network available was blinking. This was a surprise, because not only were there no wireless networks in the immediate area -- including Francis and Jason's house -- but the flashing icon combined with the particular tone indicated something much more interesting.\n\nSomeone was looking for him through one or more government databases and he had just received notice that he was on somebody's radar.\n\n\"Look, it's only Tuesday and I have some more settling in to do before I have to start instructing next week. Can you use some help with the practices, Jason?\" asked Bobby.\n\n\"Oh man, that would be a great help. Even if I can make it to all of them without work getting in the way, having you to help would allow us to give more attention to the boys and maybe make up for some of the fundamentals they need to get caught up on before the last game. If you can be at the field by 3PM, then count on dinner here afterwards. Okay?\"\n\n\"Count on it,\" Bobby said as he finished folding the car cover and placing it into his trunk.\n\n\"Do me a favor and grab my glove and bring it with you for tomorrow. I left it on the coffee table in the living room.\"\n\n\"You've got it,\" Jason said. \"I'll throw it into the SUV tonight so that if I don't make it to practice, Joey or Francis can give it to you.\"\n\nJason and Bobby shook hands and Francis gave her little brother a passionate hug, whispering in his ear, \"You don't know what you being here today meant to me.\"\n\nBobby has a puzzled look on his face as she released him, and upon seeing his expression, she playfully slapped his arm and told him to drive safely.\n\nAs Jason and Francis walked back to their house, Bobby started the Corvair and headed up the road to the cul-de-sac to turn around rather than using one of the neighbors' driveways. He wanted to see the rest of the houses, but in particular the house where the Freemans lived.\n\nAs he reached the cul-de-sac, Bobby noticed a different black Suburban positioned across the gated driveway to the Freeman's house with the driver watching him, and there were at least two men visibly patrolling the perimeter of the house itself.\n\nBobby completed his turn without slowing any further and proceeded back to the highway and the return trip to his rental house.\n\nSince driving with the convertible top down, especially at highway speeds made talking on his cell phone challenging due to the noise, Bobby waited until he got home to start his own inquiries. He did however send an e-mail to the person who signed his checks informing him of his plans.\n\nHis vehicle registration request on the license number for Kirby Wallace's Suburban, as well as the one he saw blocking the driveway at the Freeman house hit some initial roadblocks, but the authorization level of his contacts within the Department of Homeland Security quickly overcame these.\n\nHe learned almost immediately that the vehicles were registered to a shell corporation based in Boise, Idaho, and it took only a few minutes more to determine that the ruse of the shell corporation was there to protect the identity of federal government vehicles, usually for undercover law enforcement activities.\n\nNow that he could assume that Kirby Wallace was a federal government employee, his next inquiry focused on determining which agency he worked for. Within the hour Bobby had learned that Kirby Wallace was not only a Deputy United States Marshal, but also that it was Kirby Wallace who had initiated the inquiries into Bobby which had tripped the alert he had received.\n\nSo, Katie and JR were obviously being protected by the U.S. Marshals, but why? It appears that Jason wasn't aware of the reason, which meant it likely wasn't due to anything local to the area where they now lived.\n\nHow long had they been under protection? Jason had mentioned Wallace showing up a couple of years ago, but is that when the protection started, or was he just a more recent addition to the team already in place? Did this have anything to do with what happened to JR's father? Bobby had no idea, and this was all a mostly pointless exercise.\n\nBobby had found out who was researching him, and now that he knew it was a U.S. Marshal, it made some degree of sense that a stranger showing up in close proximity to someone they were protecting would trigger them wanting to find out something about him, even as a mere precaution.\n\nBobby also knew that the inquiries would reveal little or nothing about him, and he would probably have to deal with the questions that THIS would raise, but if the questioning got too intrusive, he had mechanisms that could put an end to them real quick.\n\nBobby knew that he could initiate an inquiry into Katie Freeman and her parents, but while he would definitely be able to gain access to everything that existed, it would freak out the Justice Department and the U.S. Marshals for what appeared to be no good reason right now.\n\nBobby decided to let the matter drop for the time being and set about unpacking linens to make his bed for the night. He'd focus on the rest of his unpacking tomorrow, so he could draft his report tonight.\n\n***\n\nKirby Wallace had left Katie and JR on their driveway. He had asked Katie if she knew what had caused her to faint and she had told him that her ears had been feeling clogged lately and now she was wondering if she may have an ear infection. She said she would get them checked while in San Antonio tomorrow visiting her parents.\n\nKirby left them standing on the drive of their home and didn't push the issue further.\n\nKatie made grill cheese sandwiches for JR, realizing these were a poor substitute for him having to leave the barbeque early, but this was his favorite sandwich, and allowing him to have chocolate milk for dinner further pacified him.\n\nAfter dinner, JR asked his mom to show him the pictures of his dad's car again. For some reason, Katie wasn't surprised by this request.\n\nAs she brought JR into her bedroom where the 10 watercolor paintings and one photograph of a 1965 red Corvair Monza convertible were hung on the wall, JR took her hand and looked at them with her. For ten years she had used the single photo that she had of Bobby's car to add to her collection. Each painting showed the car in a different pose and in a different setting.\n\nShe vividly remembered sitting on a bench across from the Alamo, using her pastels to capture the beauty of the building in the afternoon light. She then used that drawing to paint the first watercolor of Bobby's car sitting proudly in front of a building it had never actually been to. Subsequent years had her painting the car against different backdrops and inserting different props which were symbolic of some event that had occurred that year. JR's baby bottle sitting on the hood of the car while it was parked on the old bridge spanning Cibilo Creek was the second year. There was an easel sitting next to the car with an unfinished painting of a red Corvair obvious on it that she had painted the year she had graduated from Art School. Each painting told a story -- stories she longed to share with Bobby someday.\n\n\"Did you know that the engine is in the back and the trunk is in the front?\" JR asked her.\n\n\"Yes I do know that, JR. How do you know that?\"\n\n\"Bobby has a car that looks almost just like this, and he showed me.\"\n\n\"Oh, is that the car that was under the cover along the street at Joey's house?\" Katie asked,\n\n\"Yep, and I helped Bobby put the cover on it in case it rained.\"\n\nJR then stepped closer to the pictures and studied them more closely. \"These look almost the same as Bobby's car, except for the name.\"\n\n\"What do you mean by the name? The car is a Chevrolet Corvair Monza, which is what these pictures have on them as well. See the emblem and the name along the front?\" Katie was proud of the detail that she had brought to each of these paintings.\n\nJR studied the paintings again and said, \"Bobby's car has another name that is on his license plates. The cars in the painting don't have that.\"\n\n\"What name is on Bobby's car that is different from these?\" Katie asked her son.\n\nJR looked up at her and explained what Bobby had told her, \"Just like boats are named after women, Bobby named his car after a special girl. His car is named \"PattyKat\".\n\nKatie's legs almost gave way as she gasped. She had to sit down on the edge of her bed to keep from falling to the floor. JR looked concerned and asked her if she was alright. She assured him that she was just a little dizzy, but she was fine.\n\n\"Go take your shower and get ready for bed now,\" she told him. \"I'll be in to kiss you good night in a few minutes.\"\n\nJR quietly complied, looking over his shoulder at his mom as he left her room. He had noticed that she hadn't cried, but then realized that he really hadn't brought up the subject of his dad, just the paintings of the cars. Maybe the cars made her feel better about his dad, and that thought gave him an idea.\n\nKatie absentmindedly played with Bobby's class ring on the chain around her neck and she continued to stare at the pictures while she listened to JR in his bathroom.\n\nWhen had Bobby named his car after her?\n\nGod how she had loved being in that car with him. Whether they were parked in the high school parking lot, driving along the 405 freeway, or cruising down PCH -- she was so proud to be in HIS car, to be HIS girl, to share HIS life. She thought back to the day they had met...\n\nPatty had never changed schools before. From the time she started Kindergarten, she had attended the local public schools with her friends from the same neighborhood. Sure there were new schools as she progressed from elementary to junior high, and then high school. But she had made these transitions with the same kids she had grown up with, so it never seemed really like a change.\n\nAs she approached the office of this new school, she was apprehensive, but committed to making the best of the situation for the benefit of her parents. They knew what moving away from her friends had cost Patty. From a social perspective she was now a non-entity. While she had been on a few dates, Patty hadn't ever had a boyfriend per se, but at least the boys knew who she was. Now she was a nobody in the truest sense of the word.\n\nShe positioned herself to pull the office door open just as someone on the inside decided to push. Stumbling back with the momentum of the door, she avoided falling down, but her legs got twisted and she had to keep her hand on the door knob in order to maintain her balance. The boy on the other side spoke to her, and he was so genuine. That's the first impression Patty had of Bobby Brandt, even though she didn't yet know his name, it was that he was REAL. He was a little over six feet, and had a very appealing athletic build that was as natural as the rest of him. Her quick glimpse into his green-hazel eyes made her think that she wanted to know him better.\n\nAfter Patty was given a printed copy of her new schedule, she began the search for her first class. She found the room and squeezed around some big guy standing in the doorway and scooted around a few other people to find herself almost in the middle of the room.\n\nLooking around for a place to sit, she saw him. He was sitting alone at one of the tables, pleasantly greeting other students as they came up to him. He didn't seek others out, or ignore anyone who spoke with him. He was friendly without demanding attention for being so.\n\nJust like every other girl in the room, Patty was drawn to him, so she approached him and asked, \"Is this seat taken?\" With the other girls, he had been polite and friendly, but at the same time dismissive. She was elated when he welcomed HER.\n\nThat turned out to be the first of four classes that she shared with Bobby that semester. When he offered her a ride to school in his car the next day, Patty sensed that she was already falling for this boy. He was not \"popular\" by any stretch of the imagination, but everyone seemed to know him. More than that, Patty saw very quickly that everyone honestly respected Bobby Brandt. Patty knew that popularity came and went in high school, but it was really rare for someone to be respected by so many different groups and individuals at a single school. Bobby was one of the smartest kids in school, yet he wasn't considered a 'nerd' or 'geek'. He had been the captain and starting third baseman on the varsity baseball team since he was a sophomore, but he wasn't considered a 'jock'.\n\nShe remembered when at lunch the week after they had met, Bobby saw some bullies harassing a younger student. Bobby excused himself from their table, walked up to the younger student and put his arm around his shoulder. The bullies immediately turned and walked away. Bobby spoke to the boy for a while and then returned to the table and finished his lunch.\n\nDuring her PE class later that day, Patty had mentioned the event to another girl.\n\n\"That sounds just like Bobby,\" she had said\n\n\"But why would the bullies just back down? Bobby didn't say a thing to them,\" replied Patty.\n\n\"You may be new here, but anyone who has been here for a month knows that you don't mess with Bobby Brandt.\"\n\n\"Is he a tough fighter?\" asked Patty.\n\n\"I don't know anyone who has ever seen him fight,\" said the girl. \"It's just known. Kinda like you know the sun will rise in the east and set in the west. Everyone just seems to know that messing with Bobby Brandt would not be a good idea.\"\n\nBobby was very cute, but he was comfortable with himself and confident enough not to worry about whether he was constantly 'spit shined and polished'. He had wavy blonde hair that touched his collar, and other than when he dressed in the morning or after he showered in PE, his fingers were his only comb. Bobby smiled generously, laughed heartily and willing bestowed his positive attitude on anyone around him. Bobby worked hard at everything he did, and tried to never disappoint anyone. Patty was always so proud of him, proud to be seen with him, but especially proud to be loved by him. Patty also loved that everyone else recognized Bobby's devotion to her and assigned 'couple' status to them months before they acknowledged it themselves.\n\nWhat drew Patty to Bobby more than anything else was the way he could get inside her. Almost from the very first time they spoke, Patty sensed that Bobby knew her better than she knew herself. He knew her like he knew he had to breathe. As they started dating, then becoming boyfriend and girlfriend, and then finally lovers, Patty came to cherish the safety and security that came from Bobby always being there for her. Spiritually, physically, and emotionally... Bobby fulfilled her every need.\n\nAnd then there was his beautiful, wonderful, magical car. THEIR car.\n\nShe had loved him so much that even though she had to leave so many mementoes of their times together behind, the absence of material items only seemed to strengthen her mental memories of what they shared.\n\nHaving JR was the icing on the cake. He had Bobby's blonde hair and green-hazel eyes. After JR was born, when prompted to change her appearance, the decision was easy for Katie, she would get contact lenses that matched the color of Bobby's eyes and bleach her hair blonde. This would provide the appearance that their son took after her side of the family rather than the father he had never known.\n\nWhen Katie went into JR's room to kiss him good night, he said, \"Mom, Bobby said he would take me for a ride in his car sometime if my parents gave permission. I told him that I didn't know where my dad was and he said your permission would be good enough. Can I mom? Maybe Bobby would take you for a ride with us too if I asked him. Please mom!\"\n\nKatie fought back her tears as she told him, \"I think it would be wonderful for you to get a chance to ride in his car. Please don't ask him to invite me, however. If he invites me on his own, I'll consider it, but it would be rude for you to ask him to. Understand?\"\n\n\"Yes mom,\" JR said. \"Thanks.\"\n\n\"Good night JR.\"\n\n\"Good night mom. I hope you feel better tomorrow.\"\n\n<br> \n\nBobby chose a different route to get to the baseball practice the next day. Avoiding the chance of getting that song into his mind again was one reason; trying to avoid the trip down memory lane that started yesterday was another. He needn't have worried about the song - other thoughts distracted him.\n\nOther than singular events like baseball practice or work, Bobby couldn't remember having, or even wanting an individual identity once he had met Patty. Everything that mattered to him was centered on \"Us\"; being the two of them together, usually in his car..\n\nBobby remembered how the remainder of their junior year, he and Patty grew as a couple. Their combined studies resulted in them being the top two students in their class, with Patty edging Bobby by a fraction of a percentage in their GPA because she got an A+ in her elective, Choir, and he only got an A in Keyboarding.\n\nBobby taught Patty how to drive in his car. When Patty was ready to get her driver's license, she asked Bobby to take her to the DMV. When she returned to the lot after the driving test with a beaming smile on her face, Bobby walked around to the passenger seat to join her. Patty was aghast, and screamed before Bobby could even open the door, \"Don't you dare!\"\n\nBobby froze in his tracks and just stared at her. He said, \"You passed didn't you? I thought you would like to drive us home now that you're legal.\" He handed her the spare key that he had made as a reward for getting her license.\n\nPatty said, \"Bobby, I love that you trust me to drive your car. If I ever need to borrow it, I would have no reservations about asking you to let me use it. That being said, I will only drive this car if you are not in it. If you are in it, then you will be driving, and I will be sitting happily in my seat beside you. That is the only place I want to be when you and I are in this car together.\"\n\nBobby nodded, walked around to the driver's door, opened it and held his hand out for Patty. \"In that case, please allow me to escort you to your seat, PattyKat.\"",
        "As she rose from the car, she moved into his arms and kissed him. \"You're the best, Bobby. I love you with all my heart.\"\n\nBobby never had any qualms about sharing his car with Patty. She treasured having her own key to the car. During the summer, he would pick her up each morning that he worked. She would ride with him to the electronics shop, and then take the car until it was time for him to get off work. God, how he loved seeing her sitting on the hood (trunk) when he came out to the parking lot. She would usually be wearing a bright summer dress that Bobby knew was being worn over a bikini that she would tease him with.\n\nThey both loved to tease the other, especially physically. Neither had any experience with sex, and they seem to instinctively know that they were exploring limits and physical stimulations that they didn't want to ignore in order to rush things too fast.\n\nFor both Bobby and Patty, their senior year was a cake walk from an academic perspective. They only had two AP classes together, and then the rest were electives. They weren't concerned about having more classes together because their lives were so intertwined in all other respects.\n\nAround the middle of March in their senior year, Bobby's older sister Terri and her husband had to fly to Pennsylvania because her husband's father had had a stroke. Terri and her husband didn't have any kids and lived in a beautiful condominium in Irvine. Terri asked Bobby if he would agree to water her plants and take in the mail while she and her husband were away. Bobby was happy to help out in any way he could, and told Terri so.\n\nBobby would schedule his visits to Terri's condo on the days when he didn't have to work, and of course that meant that Patty was always with him. Together the two of them would make short work of watering the plants, and if there wasn't anything else going on, they would put on swim suits and spend some time in the hot tub on Terri's patio.\n\nOn those occasions, the teasing seemed to continue escalating, but Bobby and Patty were always able to know each other's limits and never exceeded them. They had talked about going all the way, and each knew that they wanted the other to be their first -- and only lover. They didn't want to 'plan' anything, but to just trust each other to know when the time was right for both of them.\n\nSpring break was the week before Easter and Bobby and Patty found themselves at Terri's condo every day. They had come to enjoy the privacy that they had there, and the little bit of 'playing house' that they got to share as well. They would stop at a grocery store on the way to shop, holding hands and deciding on their purchases almost like a married couple would do. One time Bobby would make lunch for them and Patty would make dinner, and then the next day they would trade. The intimacy that they felt on these days made them more committed to each other than they were before, if that was possible.\n\nThe school choir, of which Patty was a member, was invited to perform at an Easter Sunrise service. Many of the girls in the choir had planned on a slumber party on Easter Eve. Since the choir had to be at the service so early, it was expected that the girls would just stay up all night partying and then sleep on Easter.\n\nWhen Patty mentioned the slumber party to Bobby, he said, \"We should have our own slumber party.\"\n\n\"You're reading my mind again.\"\n\n\"Will your parents have any objections to you spending the night somewhere?\" Bobby asked.\n\n\"I'll tell them so they don't worry, but since I'm 18, they won't object. What about your parents?\"\n\nBobby chuckled, \"You know my parents. After three daughters, they are pretty much accepting of anything I do as long as it isn't illegal, and since we're both 18, that won't be an issue.\"\n\n\"Okay, let's start planning our party. What would you like for drinks...\"\n\nBesides the menu, the only other planning involved which movies they would rent, and those were a waste of money.\n\nAs always, Bobby seemed to know what Patty was feeling before she knew it herself. Once they had arrived at the condo and put away the few groceries they had picked up on the way, Bobby asked Patty, \"Would you like to join me in the hot tub?\"\n\nPatty bit her lip and said, \"Sure, just let me get changed.\"\n\nWhile Patty used Terri's bedroom to change, Bobby used the spare bathroom to put on his swim suit.\n\nThey met on the enclosed patio, and Bobby turned on the jets to get the water nice and bubbling. Bobby climbed up the steps and entered the hot tub. He turned and held his hand out for Patty to help her in next to him.\n\nThey stood facing each other, the water bubbling at their waists.\n\n\"I love you PattyKat\"\n\n\"I love you Bobby\".\n\nThey held each other like their lives depended on it. Finally, Bobby eased himself down on the sitting ledge, pulling Patty onto his lap as they settled.\n\nTheir shoulders and heads were the only parts of their bodies above the bubbling surface of the water, and Bobby just knew that this was what Patty needed. As he gazed into her eyes, once again hoping that he was communicating his love to her with his look, he slowly reached up and released the bikini tie at the back of Patty's neck. Her top may have shifted slightly, but her breasts remained covered under the water. Focusing on her eyes, both to show his love, but to also read her's, Bobby slowly untied the other strap across her back holding Patty's bikini top in place.\n\nWith no further effort on either's part, Patty's top started to slowly float away from her body. It snagged momentarily on the chain around Patty's neck that held Bobby's class ring. Never breaking her gaze into Bobby's eyes, Patty seemed to sense the instant that the fabric had vacated the space between her and Bobby, and she pressed her bare breasts against his chest for the first time as she brought her lips to his.\n\nAs they broke their kiss, Patty moaned into Bobby's ear, \"I am always amazed how you know exactly what I need. How you can think for me, act for me. How did you know? How do you do it?\"\n\nBobby held her tight and said, \"PattyKat, it's 'US' I sense, not just you. When I'm with you, and especially when I can look into your eyes, there is a feeling of unity that seems bigger than just my or your feelings alone. I don't want to dismiss what you feel or what you need as not being my concern, they are and always will be, but there's more. It's almost like your desires are mixed with my desires in some ethereal cauldron, and then presented to me to act upon.\"\n\n\"Whatever it is, and however you do it, just promise me you will never, never ever stop doing it. And if you could ever find a way to teach me how to do it, I would love you even more than I do right now. No, that's not a promise I can make, because I can't imagine any way that I could love you more than I do right now.\"\n\nThey sat together, with Patty straddling Bobby's lap with her nipples being stimulated by the hairs on Bobby's chest as the bubbles gave them momentum. Patty continued to sigh as Bobby kissed her cheek. After a few minutes, Bobby felt Patty starting to move on his lap. It was subtle, and Bobby was convinced that it was involuntary, but the affect was the same regardless.\n\nAs Bobby rose to stand, Patty slid off his lap and stood before him. Her naked breasts were still below the surface of the water, but Bobby didn't need to see them in order for his hands to find their destination. Bobby had felt Patty's breast before, but only through her clothes. He cupped one in each hand, and Patty gasped at the contact.\n\nBobby saw a look in Patty's eyes that was new, but he recognized it as one he wanted to see frequently, and for the rest of his life. As he stroked her nipples, the look continued to grow more intense. Patty brought her hands up to Bobby's and gently squeezed them around her breasts, moaning as she did so.\n\nPatty removed her hands from Bobby's and reached for the waistband of his bathing suit. She untied the knot and started lowering the suit down his thighs. Once the waistband was half way down his thighs, Patty gently pushed Bobby back, forcing him to once again sit down in the hot tub. She then proceeded to pull his suit off his legs, over his feet, finally bringing it to the surface of the water before tossing it over the edge of the hot tub.\n\nThere was no smile on her face, but the intensity of her stare showed her elation. \"Your turn,\" she said, as she turned around in front of Bobby.\n\nBobby only hesitated a second before he reached down and ran his hands from the back of Patty's knees, along the outside of her thighs, and up her hips until he reached the top of her bikini bottom. Snagging the top under his thumbs, his hands then began their retreat, pulling the bottom of her bikini with them. When the bikini had reached her knees, Bobby pulled Patty back to once again sit on his lap, only this time she had her back to him. As she settled onto his lap, his erection was nestled in her crack, and Patty moaned louder than Bobby had ever heard before.\n\nBobby continued to remove Patty's bikini bottom from her feet, and then tossed it over the edge to join his suit. He then wrapped his arms around Patty and pulled her back against his chest and whispered into her ear, \"Is it what you expected?\" he asked.\n\n\"Oh, so much better,\" she sighed. \"And it's getting better all the time. God I love you.\"\n\nBobby put his hands on Patty's waist, lifted her, and sat her down beside him.\n\n\"Oh pooh!\"\n\n\"Don't give me that,\" Bobby said with a chuckle. \"You want to explore and be explored, and you can't tell me otherwise. The bubbles will ease your modesty, as you have already discovered, but we'll turn into prunes if we stay in here too long. We have all night, just not all night in the hot tub.\"\n\nHe leaned over and gave her a kiss with just enough tongue to get her interested.\n\n\"I do want to explore,\" Patty admitted with a giggle as she started running her fingers down his chest to his stomach, and then lower...\n\nPatty's modesty had abandoned her by the time they got out of the hot tub. She stepped out casually and wrapped a towel around her to dry off rather than to cover up. Bobby did the same, and after they retrieved their bathing suits, they went back into the condo. With the towel wrapped around her, Patty toured the condo to insure that all the blinds were completely closed, and then she dropped the towel and didn't cover up again until they were under the covers of Terri's bed.\n\nThey continued their exploration of each other on dry land, finally making actual love a few minutes after midnight. They were both virgins, but there was no awkward stumbling, bumbling or guessing to be found. If Bobby touched someplace on Patty with his fingers and noted a positive response, he would naturally then try the same location with his lips and tongue. Patty would do the same.\n\nBy the time they left for the Easter service, they were excitedly discussing the different things they had done, and contemplating what new things they wanted to try together.\n\nTerri and her husband remained out of town for two more weeks, during which time Bobby and Patty would share Terri's bed, continue their sexual education, and plan for the prom they would never have.\n\nBobby made the practice just as Jason was pulling up with Joey and JR. He was introduced to the rest of the players as they arrived, and after retrieving his glove from Joey, he headed to the outfield to take over fundamentals on catching fly balls while Jason worked with infielders on how to handle grounders. The kids enjoyed the increased attention that having a second coach brought to their practice and paid better attention to instructions than Bobby had seen on a lot of high school teams.\n\nWhen Jason called the team into the dugout, he had everyone split up for base running/base coverage practice. Once everyone had an opportunity to practice both roles, he began batting practice. Bobby just hung out in the outfield retrieving any balls that happened to be hit that far, and there weren't many.\n\nAs practice was ending, Jason reminded Bobby that Francis was expecting him to come by the house for dinner, and Bobby assured him he would head right there. JR ran up to Bobby and told him that his mom had given him permission to ride in his car and asked if he could ride with him back to Joey's house.\n\n\"JR, I'm glad you asked your mom, but I'll need to get the permission directly from her.\" Bobby told him.\n\nPlus, as he looked across the street at the black Suburban he said, \"I think I'm going to have to make a detour before heading over to Joey's house, so why don't you ride with Joey and his dad today as originally planned and you and I will take our ride some other time.\"\n\nJR looked dejected, but he recovered and ran over to jump into Jason's SUV without another word in protest.\n\nAs Jason and the rest of the parents pulled out of the lot, Bobby remained leaning against his Corvair waiting for the inevitable. No sooner had the last car left the lot when Kirby Wallace pulled behind Bobby's car blocking his exit. Kirby got out of the Suburban.\n\nAs Kirby walked around the front of his Suburban, Bobby took out his wallet and removed one of his business cards.\n\nKirby approached but remained approximately six feet away as he said, \"I need to know who you are.\"\n\nGlad that he had sent his report and set the stage for what was to come Bobby handed Kirby his card.\n\nKirby looked at it confused, \"I'm afraid I'll need a little bit more substantial identification than a business card can provide.\"\n\nBobby told him, \"Call the duty officer at the U.S.Marshal's headquarters in DC and read the phone number on that card to them in reverse order, then come back to me.\"\n\nKirby scowled, \"Why don't I just arrest you and then use your finger prints to ID who you are?\"\n\n\"I'll wait right here,\" Bobby said. \"Make the call and if you still want to arrest me, I'll go quietly.\"\n\nIt suddenly dawned on Wallace that this guy seemed to know he was a U.S. Marshal. \"What the hell?\" he thought, and then he went back to the other side of the Suburban and made the call. He kept his eyes on Bobby as he made the connection and then glanced down at the card to read the phone number in reverse order. His eyes snapped back to Bobby, only now they were much wider and showed obvious confusion.\n\nWallace disconnected the call and headed back to Bobby. As he approached, he handed the business card back to Bobby, but Bobby said, \"Keep it. Want to talk now?\"\n\nKirby said, \"I was told I am not authorized to talk to you.\"\n\n\"You're probably not, but I was more concerned with you knowing that you weren't authorized to arrest me. If the AC is still running in your Suburban, let's talk there.\"\n\nWithout waiting, Bobby walked over to the passenger side of the Suburban and waited for Kirby to unlock the door. When the lock clicked, Bobby climbed up and smiled over at Kirby as he took his seat behind the wheel.\n\nBobby started, \"If you haven't figured out yet that you and I are in totally different leagues, you should know that I was alerted to your inquiries on me about 20 seconds after you initiated them.\"\n\n\"Why are you telling me this?\" asked Kirby.\n\n\"Because I understand why you did it, I respect your position, and I want to make your job as easy as possible\" said Bobby. He continued, \"I know that you are protecting the Freeman family, and while I could easily find out the circumstances behind the need for protection, it really doesn't concern me.\n\nYou won't be able to determine this any other way, so trust me when I tell you that Francis Reid really is my older sister. I actually have two other sisters, but I protect their privacy as diligently as I do my own, that of Francis, and of course my parents. That will be a dead end road that for the sake of your career, you don't want to go down. That leaves you with a virtual stranger in frequent close proximity to someone you are assigned to protect, and I can imagine how I would feel if the shoe was on the other foot. So, I'm offering to talk with you here, off the record to try and alleviate your concerns about me. Fair enough?\"\n\nKirby asked, \"Do you work for the U.S. Government?\"\n\n\"Not directly. Now change the subject.\"\n\n\"Where are your from originally?\"\n\n\"Irrelevant. Move on.\"\n\n\"Why are you in the San Antonio area?\"\n\n\"Work,\" is all that Bobby said.\n\n\"So it is a total coincidence that James Bond, or whoever you are suddenly shows up around a federally protected witness family?\"\n\n\"That about sums it up. I didn't get to pick the neighborhood where my sister and her family built their home, and I'm sorry if my visits with them caused you any angst relative to your duties. I'm trying to help you out here, but I'm not going away and any further inquiries into either mine or my family's background would not be in your interest.\n\nIf it makes you feel any better, having my sister living close by your protectees could have side benefits for you should you ever need them. For example, how long would it take for you to have a recon satellite positioned over the Freeman's property? My sister's house could be covered within 30 minutes with one phone call from me. It would be easy to expand the view from the satellite to cover the Freeman property as well. Now, you can \"untighten\" up around the Freemans where I am concerned, or not. That's your choice. Is there anything else I can answer for you Marshal Wallace?\"\n\n\"Yeah, one last thing,\" Kirby said. \"Why did Katie Freeman faint as soon as she saw you?\"\n\nBobby chuckled, \"You noticed that huh? Never seems to happen to James Bond, but maybe it's just the effect I have on women and explains why I'm still single.\"\n\n\"Nice try, but there's more to it than that,\" said Kirby \"I've never seen anyone react like that at the sight of another person. The way her color immediately drained and her eyes rolled into her head. Jeezus, I thought she had seen a ghost or something. Are you sure you two have never met?\"\n\nBobby's smile had disappeared at Kirby's words. \"I'll be honest with you Marshal, there was something familiar about Katie Freeman, not so much her appearance as other things about her. I've been pondering it since yesterday and haven't been able to figure out what exactly it is, but there was definitely something. As soon as I figure it out, I'll let you know. Deal?\"\n\nKirby looked across at Bobby, \"Well, I obviously don't have the authority to run you off, and I could never get approval for another relocation of the Freeman family based upon any threat assessment involving you, so I guess I have to accept.\"\n\n\"Thanks, and just to keep you in the loop, in addition to the Corvair over there, I also own a white Dodge Ram pickup. You won't get anything off those plates either, but I wanted you be aware of it in case you see it in the neighborhood sometime.\"\n\n\"I appreciate the heads-up.\"\n\nBobby got out of the Suburban and Kirby drove away. Bobby got in his car and headed to his sister's house for dinner.\n\nBobby parked along the side of the road once again, but with the clear skies without a cloud in sight, he chose to forego the cover. He had just reached the walkway to the back deck when Katie Freeman's car pulled in behind his Corvair. He stood out of sight and watched as she walked to the front of her car and stared at his Corvair.\n\nHe saw her bring her hand to her mouth and stifle an obvious sob as she walked completely around his car. As she return to the back, He saw her wipe a tear from her cheek as she smiled, obviously reading the license plate.",
        "Based upon JR's description of the pictures she kept, his car obviously brought back emotions related to JR's father, and now Bobby wished that he had covered the car like yesterday in order to spare her any pain.\n\nAs Katie turned to resume her walk to the house, Bobby quickly headed for the deck where Jason was relaxing and watching JR and Joey play in the pool.\n\n\"So what did Mr. Wallace have to say?\" asked Jason as Bobby sat down beside him.\n\nBobby huffed, \"You neglected to mention that our Mr. Wallace is U.S. Marshall Kirby Wallace.\"\n\nJason almost choked on the drink of beer he had just taken, \"What did you say?\" he asked. He continued, \"I had no idea, and I definitely know that there is no knowledge of him within the department. How did you find out?\"\n\n\"He made inquiries that triggered some alarms and I was notified. Jason, you know I do some sensitive work for the government, so when someone starts checking me out, it gets noticed real quick.\"\n\n\"So what happened at the practice field lot after we left?\" asked Jason.\n\nBobby told him about handing Kirby his business card and about the call he needed to make.\n\n\"He was told that he wasn't even authorized to talk to you?\" Jason asked with an amused smile.\n\n\"Yeah, but I took things off the record and tried to alleviate his concerns. Otherwise the poor guy would be digging his own career grave and likely impacting the situation concerning the Freemans in the long term.\"\n\n\"So what exactly is the situation with the Freemans?\"\n\n\"I'm not sure,\" said Bobby. \"They are obviously under some degree of protection from the Department of Justice, but the reasons are none of my business, so I decided not to inquire further. I also insist, Jason, that you do not make any inquires as well. My queries would outrank the Justice Department; SAPD inquires won't. All you'll do is make matters very complicated for everyone. If you have legitimate concerns and need to know something, run it through me. Okay?\"\n\n\"No problem,\" said Jason as he saw Francis and Katie coming out to join them and dropped the subject.\n\nFrancis took the seat on the left of Jason, which left the seat on the right of Bobby as the only one available for Katie.\n\n\"Hi,\" Bobby said as she approached. \"Would you like me to move the chair over to the other side so you can sit next to Franc...? I mean Francis. Sorry.\" He said as he gave his sister an apologetic grin.\n\n\"That's okay, Bobby. You're the only one that calls me Franc anymore.\"\n\nJason said, \"You'll never hear me call her that. I don't want people thinking I'm married to a guy.\"\n\n\"So is Bobby the one who gave you the nickname 'Franc',\" asked Katie, although she remembered the story from years before.\n\n\"No, it was my Dad. My oldest sister was named Theresa, but he called her 'Terri', my next sister was Linda, but my dad called her 'Lindi'. After three girls and no boys, I guess he had enough, so while my name is Francis, he immediately started calling me 'Franc'. My mom said he wouldn't let me wear hand-me-down clothes from my sisters because he didn't want me in pink. Greens and yellows were okay, but he wanted at least the illusion of having a boy even if it wasn't a reality until Bobby was born three years later. I'm convinced that if Bobby hadn't been born, I never would have owned a dress.\"\n\nEveryone chuckled at Francis' recollection as Katie settled down in the seat next to Bobby.\n\nHer movements as she sat down triggered something in Bobby's mind, but it was still like a fog that he couldn't see through. As Katie leaned over to position the chair facing the others, something fell out of her blouse hanging from a chain. She quickly grabbed it and pushed it back under her blouse as she sat down. What was it?\n\n\"How was your first practice coach Bobby?\" asked Francis.\n\n\"Good,\" Bobby said.\n\n\"I gave JR permission to ride in your car,\" said Katie.\n\nBobby turned to her and said, \"What did you say?\"\n\n\"I said that I gave permission for JR to ride in your car. He said you wouldn't allow him unless I said it was okay.\"\n\nBobby now felt like he was going to faint sitting down. He just stared at Katie as everything clicked. It was her eyes. It was her voice. He now knew, and he also knew that she had realized the same truth yesterday. He stared at her until a concerned expression from her over his silence brought him back into focus.\n\nHe then smiled at her and said, \"Hello PattyKat\".\n\nFrancis heard Bobby and gasped. Jason turned to her and said, \"Huh?\"\n\nKatie broke into uncontrollable sobs crying, \"Hi Bobby\".\n\nWithout saying anything else, Katie ran into the house. Francis jumped up and chased Katie into the house as Jason and Bobby just stared at each other.\n\n\"What the hell was that all about?\" asked Jason.\n\nBobby shrugged his shoulders and suddenly had another revelation. He turned to see the two boys in the pool, got up and approached JR where he sat on the steps as Joey dove for coins on the bottom.\n\n\"Hey JR, how's the water?\" asked Bobby.\n\n\"Great,\" JR said, \"You should come in and join us.\"\n\n\"Maybe later. So I've been meaning to ask you what JR stood for\"\n\nJR replied, \"Two things\"\n\n\"What are those?\"\n\n\"Well, because I am named after my father, the JR can stand for 'junior', but those are also the initials of my first and middle names, James Robert.\"\n\n\"Looks like going by JR has all the bases covered for you then doesn't it,\" said Bobby. \"Enjoy your swim and I'll catch you later.\"\n\nThen Bobby returned to sit next to Jason. \"I'll be a son of a bitch,\" Bobby said as he sat down. Jason was more confused than ever.\n\nAs Francis entered the kitchen, she saw Katie standing at the kitchen sink watching Bobby talk to JR at the pool.\n\n\"He was always so perceptive of me,\" said Katie as Francis came to stand beside her.\n\nKatie continued, \"I assumed the change in my appearance would fool him indefinitely, but I should have remembered how he always knew me so well. He knew my feelings better than I did. He sensed my emotions before I felt them. Changing my eye color could not disguise my love from showing through to him. Trying to speak with an accent could not hide my feelings from his ears.\"\n\nKatie turned to Francis, \"Now he knows about JR as well. I can't delay explanations any longer. Franc, can you watch JR for the night?\"\n\n\"Of course. We'll get him and Joey to school tomorrow and wait to hear from you on what else you may need from us.\"\n\n\"Thank you,\" Katie said as she hugged Franc and headed back outside.\n\nKatie walked out to the pool and stooped to speak with JR.\n\n\"JR, you're going to spend the night with Joey and go to school with him in the morning. Bobby is going to take me for a ride in his car for a while, so be good and here's your good night kiss a little bit early.\"\n\nShe bent down, kissed him, and quickly walked up to Bobby where he sat next to Jason. His gaze hadn't left her since she had come out of the house, and as he focused on her approach, he concentrated on her eyes. The color had changed, but they remained his window to her, and it was wide open and beckoning to him.\n\nAs she stepped beside him, she looked down and simply said, \"Get your keys and let's go.\"\n\nAs Bobby rose, Katie took his hand and led him out to his Corvair. Bobby opened the door for her and she quickly slid into the seat that she had always known as hers. As Bobby climbed in behind the wheel, he reached over and opened the glove compartment. He reached in and pulled out a red \"scrunchie\" for Katie's hair that matched the color of his car exactly. Katie smiled, and as she had always done, she kissed his hand as she took the scrunchie and tied her hair back into a ponytail.\n\n\"Where to?\" asked Bobby.\n\n\"Your place,\" replied Katie, and Bobby needed no further direction. He knew that talking could wait. All urgency in his life had vanished.\n\nAs they drove, Bobby took his sunglasses from the visor and put them on, amazed at how bright the world had become in just a few minutes. Katie kept her left hand on his right as he drove, never taking her eyes off his face, yet she didn't say anything until they were exiting the I-410 loop at Bandera Road.\n\nKatie noticed an HEB supermarket along the frontage road and asked Bobby to stop there. After they parked in the lot, Katie tugged on Bobby's hand and said, \"I just need to pick up something real quick, but I don't want to be away from you. Will you come with me?\"\n\nBobby jumped out of the car without opening his door -- something he hadn't done for over 10 years- and hurried around to open Katie's door for her. They held hands as they walked into the store, where Katie made quick work of locating what she wanted and then directing them to the self-checkout lanes. She paid using her debit card and they were back to the Corvair within 5 minutes.\n\nThe store was convenient to Bobby's rental house, and they were able to get to it after just a few turns off the same frontage road. Bobby pulled into the driveway behind his white Dodge Ram pickup and turned off the car. Katie continued just to smile at him as he led her from the car and through the front door of the house.\n\nBobby was certain that she wouldn't be able to retrace the route they had taken to get to his house, the name of the store they had just been to, or be able to describe the exterior of his house. Her eyes had been on him the whole time. Even now, as they stood in the entry of the house, she was obviously looking without seeing -- everything except Bobby. Bobby she saw clearly. Her eyes not only pulled him into her consciousness, but they also pushed her into his.\n\nGazing down at her, Bobby instinctively led her down the hall to the master bedroom. Katie acknowledged his destination with a squeeze of his hand. Once in the room, Bobby simply indicated the door to the bathroom, sensing again that Katie would be interested in knowing. Katie turned to face him and slowly pushed him to the edge of the bed, encouraging him to sit.\n\nShe set her purse on the dresser and took her store purchase into the bathroom and closed the door. Without being told, Bobby knew what Katie expected and he began getting undressed. By the time the bathroom door opened just a few minutes later, Bobby was naked in the bed under a single sheet. Katie had disrobed while in the bathroom.\n\nAs beautiful as she was, Bobby's eyes were immediately drawn to hers. The ice blue eyes he had longed to see again in his life had returned. The contacts that hid them were now sitting in solution on the bathroom counter. He didn't know or care where the glasses were. Katie knew that Bobby wasn't focused on the sight of her body as she hurried to join him in the bed. She knew -- as he knew about her -- that the feel of their bodies together was what they both craved.\n\nBobby pulled her to him as Katie climbed under the sheet and held her facing him, both on their sides. He played with the chain holding his class ring between her breasts. For what seemed like hours, they just held each other and breathed. Breathed for the first time in 10 years.\n\n\"They lied to me Bobby,\" was the first statement that Katie made. She had her head snuggled against his chest as he held her. Bobby didn't respond, sensing that this was her story to be told at her pace and she just needed him to hear it.\n\nAfter a few minutes, Katie continued, \"After we spoke on the morning of the prom, I walked to the store to buy some shampoo. My dad was supposed to bring some home on Friday night, but he got stuck in some late meeting and forgot. In fact, it wasn't until later that I learned he hadn't come home at all Friday night. My mom was off showing a house to someone, and it was hours before you were supposed to pick me up, so I thought a trip to the store would kill some time.\n\nWhen I was walking through the parking lot to the store, a big SUV pulled beside me. The windows were tinted and I started moving as far from it as I could. Then the back window on the driver's side came down and my mom called to me from the back seat. There were two men in the front seat, but they didn't look at me. I walked over and my mom urged me to quickly get in. I could tell from the look on her face that she was upset, so I did as she asked.\n\nOnce in the SUV, the window rolled back up and we immediately started moving. I was focused on my mom, so I didn't pay much attention to where we were headed. My mom told me that my dad needed us, and that the men in front were U.S. Marshals. She said that was all she could tell me until we met up with my dad.\n\nWe drove for about an hour, heading towards Riverside. We finally arrived at some air force base and passed through a guarded gate. Once on the base we were taken to one of the buildings and led into an office where my dad and two other men waited for us. My dad hugged my mom and me, and then introduced us to the other men.\n\nOne was another U.S. Marshal named Michaelson, and seemed to be the leader of the ones who had brought mom and me there. The other man was a federal prosecutor named 'Alexander'. I don't remember his first name. Mr. Alexander apologized for surprising me and my mom, and explained that it was for our own protection. He went on to explain that in the course of my dad's business, he had inadvertently stumbled upon some criminal activity by one of his clients.\n\nMy dad tried to report what he had learned anonymously through a tip hotline, but once his information was investigated, it was determined that the situation was much more serious than anyone had expected, because it identified a major organized crime operation insinuating itself into the local pornography industry through drugs, prostitution, extortion, money laundering, and bribing of local politicians.\n\nObviously the anonymous tip wasn't really anonymous, so my dad was contacted and asked to work with the Department of Justice to help them build their case and break up the criminal operations. My dad had been secretly gathering more information, including names of individuals and their roles in the organization.\n\nMr. Alexander said that indictments were currently being prepared and several arrests were expected on Sunday. He further explained that due to my dad's cooperation with the case, there would likely be some attempt by these criminals to prevent him from testifying against them. Mr. Alexander then asked U.S. Marshal Michaelson to explain his plans for our protection.\n\nWe were told that we had been approved for the federal witness protection program and would receive round-the-clock protection from the U.S. Marshal Service until any risk associated with these cases was over. He implied that once my dad had testified that the threat against us would go away.\n\nMy mom asked how long it would take before the cases all came to trial and Mr. Alexander told her that the indictments were being expedited, and if they were able to get some of the people involved to take plea bargains and also testify against others, things should move very quickly. He anticipated just a couple of months.\n\nMy mom then asked Marshal Michaelson when we would start into the witness protection program, and he told her that we already were in it. He explained that we would not be returning to our house, and in fact, we would be leaving in about 30 minutes on a flight to a new location.\n\nWhile my mom and dad seemed to accept this, I went ballistic. I said I had a prom to go to that night, I had graduation in a couple of weeks, and I had to let you know what was going on.\n\nMarshal Michaelson apologized and said that we had to start now or we risked someone finding out about our participation on the program and compromising not only our relocation, but our new identities as well.\n\nI screamed that I was 18, an adult, and would not agree to just disappear. My mom said that she wouldn't go without me, and my dad said that he wouldn't testify unless my mom and I were protected.\n\nMarshals Michaelson and Mr. Alexander talked quietly amongst themselves for a few minutes, and then Marshal Michaelson told us to make a list of any personal items we wanted from our house and they would have someone sneak in tonight and get them for us. He said that photos that had identifiable faces, whether ours or someone who could be tied to us would not be permitted. He also said that clothes would be provided, so we should not ask for any of those.\n\nThen he looked at me and said that he really was sorry about my prom, but he would make sure that you were told what was going on. While I probably would not be able to attend my graduation, that was just a ceremonial formality he said, and I had already earned the grades required for the diploma.\n\nI raised my hand and counted on my fingers to them all; \"One, we hide for no more than six months. Two, Bobby is immediately informed of why I am going away and kept informed of when I will be able to return. Three, there is only one thing I demand to have from our house, and that is a framed picture of Bobby's red Corvair from next to my bed. Agree to these and I'll go. Otherwise, no deal.\"\n\nMr. Alexander and Marshal Michaelson agreed, but as we both now know, they only kept one of their promises. JR has told you about the picture.\n\nWe were put on a small Air Force plane and flown directly from that base to Randolph Air Force Base here in San Antonio. We were placed in a house on the base and provided all the necessities we had left behind.\n\nAbout two weeks after arriving, I realized that my period hadn't come. At first I suspected the stress of being basically kidnapped by our government was the cause, but after a couple more weeks passed, I knew that wasn't the case. I talked to my mom about my suspicions, and she immediately went to the base commissary to get a home pregnancy test. Once that indicated positive, she arranged for me to see one of the doctors on the base. Well, it was a certainty after that. I was pregnant with your baby.\n\nWhen I insisted that the Marshals get word to you about my pregnancy is when I learned that they had never told you anything about why I had disappeared. The Marshals had to physically restrain me to keep me from leaving the base right then. I was livid and verbally lashed out at anyone around me. I felt betrayed by my parents when they wouldn't support my need to let you know, I was incensed when they asked me to consider having an abortion, and I was frustrated with myself for trusting any of them.\n\nWe didn't have a phone, computer or any other means of contacting anyone off the base. I wrote you letters and tried to get some of the airmen on the base to mail them for me, but the Marshals were always able to circumvent my plans.\n\nThen something happened that changed my attitude completely. You probably remember meeting my best friend Keri the time you drove me to her birthday party in Van Nuys? She and I were closer than sisters, and I felt almost as bad about her being in the dark about my disappearance as I did about you.\n\nOne day Marshall Michaelson came to see us, and we could tell by his expression that something was wrong. He asked all of us if we knew a family named \"Gordon\", and of course we all nodded. He went on to tell us that the Gordon family was discovered in their home yesterday, and that there was clear evidence that they were killed to send a message. He asked again if we had tried to contact anyone since we entered the program, and we told him that other than my attempts to contact you -- which were all unsuccessful - we hadn't.\n\nThat's when it dawned on me that Keri and her family were killed simply because they knew us. What would happen if the criminals knew about you and me? Would they try to come after you and your family like they had the Gordons? I couldn't take that chance, so I accepted the reality of you not knowing anything about what had happened to me as the best way to keep you safe.",
        "After six months the original indictments were a mess. Several of the people involved that the prosecutors hoped to make deals with started turning up dead. The continuing investigations by the FBI found a more complex criminal organization than originally thought, and now included definitive evidence of Russian mob influence stretching all the way to Moscow and Odessa.\n\nWe had also learned of two other families that my parent knew who had been killed. It was becoming obvious that our need for protection was going to go on indefinitely. The Marshals started coaching us on what the future held in store, with new identities, changes to our appearance, and so on. I was only a couple of months from delivering our baby, so I asked if I could wait on trying to change my appearance until after the baby was born. The concept of mother and child having as many physical traits in common as possible made sense to the Marshals as long as it allowed my own appearance to be changed enough to fool a casual acquaintance from my past.\n\nAre you hungry?\"\n\nBobby chuckled, \"I could eat. What would you like to have?\"\n\nKatie kissed his nose, \"A Double-Double with cheese.\"\n\nBobby kissed her nose back, \"When was the last time you had one of those?\"\n\n\"The Sunday before I left, when you took me to the In-N-Out Burger on 19<sup>th</sup> Street in Costa Mesa and then we went to the Newport Pier to watch the dolphins playing.\"\n\n\"That was my last time too. It's one of the many things that felt too painful to do after you left. Getting away from all the memories that haunted me wherever I went in Orange County is the only thing that allowed me to function. But anyway, since there aren't any Double-Doubles within 300 miles of us, would you settle for a steak and baked potato?\"\n\n\"There's an In-N-Out within 300 miles and you want me to settle for steak? Okay, but you should be darn glad I love you buster.\"\n\nBobby leaned over and began to kiss her nose again when he changed direction. He knew that they had both been avoiding a real kiss because of what it would stir inside each of them, and they had so much that needed to be discussed first.\n\nBobby thought that a simple, brief kiss on her lips would be manageable, but oh how wrong he was. As always, Katie sensed Bobby's actions, and eagerly brought her lips to his. If they had both had their hands tied behind their backs and their legs shackled to the bedframe, a simple kiss may have been possible, but Bobby doubted it.\n\nThe instant their lips met their bodies and limbs went into autopilot; melting together into the form-fitting entity that was their physical love for each other. Together they existed in a singular world that knew nothing except their passion for each other. While both had changed to some degree physically, the changes in each were obviously complimentary to the other because they fit together now as they had 10 years ago.\n\nAs Bobby entered Katie, there was no urgency, no need for movement. They had accomplished their objective of being as physically connected as a man a woman could be. They lay joined for several minutes before either moved, and then it was simultaneous. As Bobby entangled his fingers into Katie's hair, she brought her hand up and lightly caressed his face as they stared into each other's eyes. As he held her tight, Katie pulled Bobby fully on top of her body and wrapped her legs around his thighs, pulling him as closely as she could. Bobby allowed Katie to position them so that her desires were met, and continued to not only respond, but to preemptively meet her needs before she even realized they existed. Neither lasted long before achieving their mutual orgasms, but there were no regrets. They had found each other again.\n\nBobby didn't want to use the barbeque outside because he didn't want to leave Katie in the house for a minute, and she should not go outside without her glasses and contacts. He turned on the oven broiler to allow it to heat up as he took two Rib Eye steaks out of the refrigerator and set them on the counter. He was wearing a t-shirt and a pair of gym shorts and Katie had commandeered his terry cloth bathrobe.\n\nShe asked him where he kept the potatoes, and he pointed to a pantry door across the kitchen. Katie selected a couple of medium sized potatoes, cleaned them in the sink and prepared them for the microwave.\n\nAs Bobby was placing the steaks into the broiler, Katie started the microwave.\n\n\"Do you want a salad or anything else?\" asked Bobby.\n\n\"Meat and potatoes are fine for me tonight, unless you want something more.\"\n\n\"I would like to keep it as quick and simple as possible so that we can get back to more important matters than food.\"\n\n\"My thoughts exactly,\" Katie said as she walked over and put her arms around his waist.\n\n\"Do you want to continue your story?\" Bobby asked her.\n\n\"I need to\"\n\nThen she continued, \"The next major confrontation between me and the Marshals occurred when they started working on our new identities and cover stories. I could accept them giving me a new identity to match those of my parents, but I was adamant that my baby would carry your name and the birth certificate would reflect you as the father. We argued over this for more than a month before someone high up in the Department of Justice conceded to my demands.\n\nOnce JR was born and it was obvious that he had your eyes and blonde hair, I was able to start working on changing my appearance. The Marshals provided cosmetic contact lenses that matched JR's eye color; I bleached and colored my hair to get close to his, and started wearing non-corrective glasses. My mom and dad could then try to bring their new appearances in-line with mine and JR's so we would more closely resemble a genetic family.\n\nAlmost a year to the day from when we entered the program, we were moved to our new house where we have lived since then. The place may look somewhat rustic, but it is a virtual fortress. Of course you can see the ten-foot wall that surrounds the entire five acres, but what you can't see are all the cameras, sensors, alarms and even traps that also exist.\n\nThe house itself is almost like a maximum security prison with some of the features the Marshals have installed. Any door in the house can be electronically opened, closed, and sealed tight from the Marshal's remote monitoring station here in San Antonio. The house was built with fireproof materials and the additional suppression systems would quickly extinguish any fire that did occur inside or outside the house. There are four separate panic rooms, and each one has an escape tunnel routed out of the complex.\"\n\nThe microwave timer sounded and Katie asked, \"How are the steaks coming?\"\n\nBobby turned the steaks and said, \"Just a few more minutes.\"\n\nKatie wrapped the potatoes in Aluminum foil to allow them to continue cooking while waiting for the steaks. \"Which cupboard has your plates?\" she asked.\n\n\"I'll get them. Why don't you get some silverware from that last drawer over there? What would you like to drink?\"\n\n\"Do you have any iced tea?\"\n\n\"One of the first things I did when I unpacked the kitchen was to make a jar of sun tea. Do you still take it unsweetened?\"\n\n\"Yes,\" she said, \"Thanks for remembering.\"\n\nBobby winked at her and they smiled at each other as he poured her a glass.\n\nWhile Katie set places at the table for them, she continued her story, \"Dad started having problems with his circulation a few months ago, mostly concern over blood clots, and then about the same time, mom had a mild stroke. They both ended up in a skilled nursing home here in San Antonio to make it easier for the Marshals. As long as they can receive the needed treatments and therapies there, it eliminates the problems associated with transporting them all the way from the house. We expect that they'll both be able to come home sometime next week.\"\n\n\"That about brings us up-to-date,\" Katie said.\n\n\"Not quite,\" said Bobby. \"You haven't told me anything about you and what you have been doing.\"\n\nHe pulled the broiler pan from the oven, put a steak on a plate for each of them and handed one to Katie. They each stood at the counter and prepared their potato before sitting down at the table.\n\nThey had been eating silently for several minutes when Katie set her fork down. After chewing her last bite of the steak and nodding her approval to Bobby and said, \"Once JR was born my initial focus was on raising him. When he no longer needed breast feeding, and the Marshals felt it was safe to venture into San Antonio, I started looking for classes I could take. San Antonio has some great art schools, and while they tend to have a very Hispanic culture influenced approach to their programs, the watercolor techniques they teach easily transfer into other areas. After completing every program I could find related to watercolor or pastels, I then looked for programs related to commercial art. Combining watercolors and commercial art is a natural, and is very popular for presenting design concepts in architecture.\n\nOne of my instructors introduced me to some local designers and architects, and I was soon in business on my own. I still like to paint on my own, doing mostly landscapes of the local area.\"\n\n\"And the occasional car from what I understand,\" said Bobby.\n\nKatie's eyes grew wide with surprise as she looked at Bobby.\n\nHe smiled at her and said, \"JR mentioned that a new picture of a car that looks just like mine appears every year on Easter Sunday.\"\n\n\"Not exactly like yours I've learned,\" said Katie with a mock pout. \"My paintings didn't include the personalized license plates according to JR. When did those come about?\"\n\n\"They were my prom night present to you,\" Bobby told her. \"I picked them up from the DMV on Friday and put them on right before going to your house to pick you up.\n\nTears sprang to Katie's eyes as she ran around the table and crawled into Bobby's lap. \"I have never stopped loving you Bobby,\" she cried. \"I'll tell you the same thing I told Franc\" she said.\n\n\"Wait, Franc knows who you are?\"\n\nKatie wiped her tears and said, \"My fainting at the sight of you kind of made her curious...\" Katie giggled.\n\n\"Franc was asking questions trying to figure out what caused me to faint, and when she asked if I might be pregnant, I assured her it wasn't possible. I told her that I hadn't had sex since JR was conceived and had taken a self-imposed vow of celibacy as penance for the pain I felt and for breaking the heart of my one true love. When I told her how I had just disappeared out of the life of the boy who loved me, she saw the similarities to what you went through, so I confessed that I was the girl that you had lost and seeing you is what made me faint. Franc knows that she has to keep my secret for the safety of all our families. By the way, when did you figure it out?\"\n\n\"It was a gradual process,\" said Bobby. \"The change in your appearance was good but I sensed a familiarity about you. Others seemed to sense it too. When we shook hands and I felt your touch, I guess that was the first unexpected sign. Then today, as you moved to sit down in the chair next to me, the way you did it caused another tumbler to click in my mind. The clincher though was watching and hearing you speak. Your voice isn't exactly the same...there is some Texas 'twang' evident, and I don't know if that is purposeful or simply a result of where you have been living. Even with the slight difference in your voice, I still recognized it as you. I may be the only person who would hear the love in every word you ever spoke to me, and that's what I heard today. You had also been avoiding my eyes, which now I understand why. You could make the color of your eyes pea-green purple and that would never disguise the love I see in them when you look at me. I hope you see the same in mine now that I know who you are.\"\n\nKatie kissed Bobby and said, \"The love appeared in your eyes right before you said \"Hello PattyKat\", and hasn't left them since. If you're done with your dinner, could I talk you into getting more comfortable with me again? I'll do your dishes for you tomorrow after I cook you breakfast.\"\n\nBobby rose from his chair with Katie in his arms and carried her back to bed. She threw off the robe and waited for him to join her under the sheet. Propping some pillows against the headboard, Bobby leaned back and Katie snuggled into his chest.\n\n\"Now it's your turn,\" she said as she played with the hair on his chest.\n\n\"Well,\" Bobby said \"I know now that you understand how terrified I was when I arrived at your house to take you to the prom and no one was there. I sat in front of your house until Sunday afternoon, leaving my car only when I saw one of your neighbors so I could ask if they knew where you and your family were. I finally went home and told my dad what had happened and he returned to your house with me. We walked around the outside trying to see if anything was amiss, but we didn't see anything.\n\nMy dad finally called to police and they sent a patrol car to your house to take a report and talk to us. After that we went home and I tried to remember all I could about any other friends or relatives you had mentioned to me that might know where you were. Keri Gordon was the only friend I could think of, and since I didn't have a number for her, I took off school on Monday and drove to her house in Van Nuys.\n\nShe was in school when I got there, so I waited for her to get home that afternoon. She was surprised to see me and even more surprised and very concerned about you and your family disappearing. She thought that she might have names of some of your parent's friends and agreed to contact them to see if they had any information. I headed back home and by the time I got there, Keri had called to report that she had had no luck with anybody knowing where you were.\n\nI didn't return to school until graduation. Up until the day I had to leave to start the Air Force Academy, I just spent my time working at the shop or sitting at the beach thinking about you and trying to figure out what to do to find you. I threw myself into the academy routine as an escape from my constant fear that I would never see you again.\n\nYou had mentioned that you thought you had broken my heart, and I don't know if that is an accurate description. If you had purposely left me, I'm sure a broken heart would have been the result. I wasn't convinced that you had left ME, but always just felt that you were gone against your will, and I guess that belief is what left me with what I can only describe as an unfulfilled love. The love was inside me, bursting to get out, and without you, I had no release. Do you understand that?\"\n\nKatie raised up and touched the tip of her nose to his, \"Wow Bobby, you have described exactly the way I was feeling. Even once JR was born and I had the love for him I could express all the time, just like you, I was unfulfilled by having to keep my love for you contained rather than releasing it on you. Please go on.\"\n\nWhen Katie returned to her spot on his chest, Bobby continued, \"I graduated top in my class from the Academy and then I was assigned to Eglin Air Force base in Florida. I completed some additional training there and then bounced around the world doing things that I am not at liberty to discuss.\n\nI left the Air Force a few years back at the rank of Captain. I now have my own business contracting with the government in various capacities, which is what brought me here to San Antonio. I am contracted to do some training in my specialty at Lackland.\"\n\n\"Can you tell me what your 'specialty' is?\" asked Katie.\n\nBobby reached under her chin with his finger and raised her head so he could look into her eyes. \"Shock and awe,\" he said. \"Shock and awe.\"\n\n<br> \n\nBobby and Katie made love again before falling asleep in each other's arms. They awoke the next morning still embraced. It didn't appear to either of them that they had moved an inch during the night.\n\nKatie untangled herself from Bobby and headed to the bathroom. On this trip, Bobby definitely focused on the sight of her body, largely due to the fact that she was walking away from him and her eyes weren't visible to distract him.\n\nWhile she used the master bath, Bobby went down the hall to the spare bathroom and took care of his own morning needs. Bobby then detoured to his office to check his e-mail and update his client on his status. They met in the kitchen and functioned like a couple who had shared a kitchen for years as they efficiently teamed up to get coffee started, the dinner dishes washed, and breakfast on the table.\n\nThe synergies of their actions were not lost of either of them as they frequently stopped to hug, kiss, or caress each other. Once they were both done with their breakfast and had refills on their coffee, Bobby started things off, \"Now for the fun part.\"\n\nHe wasn't smiling and Katie understood the meaning. \"We need to keep secret Bobby,\" she said.\n\n\"Unacceptable for any long period of time. Losing you for 10 years is bad enough, but there's also JR to consider.\"\n\n\"I know, but the risk is still too high if mine or my parents' true identities were known. While most of the court cases have been completed, there are still several key figures who haven't been indicted yet. Even if they had no fear of my father testifying against them, there are still too many people -- very bad people -- who might want revenge for what has already occurred. The risk migrates to anyone who knows who we are, which now puts you and your family in greater risk than ever.\"\n\n\"Okay,\" Bobby said. \"I can understand the short-term benefit of keeping our past history secret, but how about starting out new in the eyes of everyone else? As far as anyone other than Francis knows, you and I just met. What would be suspicious about you and me starting to date and having a relationship?\"\n\n\"As soon as you and I are seen together, the Marshals will run a background check on you. Once they see where you grew up and then discover that you knew Patty Harper, our history would be known.\"\n\n\"Kirby Wallace already ran into that brick wall,\" Bobby grinned. \"It was not a very pleasant experience for him.\"\n\nKatie gasped, \"What do you mean? Kirby has checked you out?\"\n\n\"He tried to check out me and Franc. When he didn't get what he expected, he stopped me at the practice field lot yesterday.\"\n\nKatie's hand shot to her mouth, \"What happened?\" she asked.\n\n\"I handed him my business card and gave him some simple instructions to call his headquarters in DC and to read the phone number on my card in reverse order. I told him I would wait by my car for him.\"\n\n\"What was the phone call about?\"\n\n\"I can't go into details on most of what I do, or even what my role is relative to the government. Suffice it to say that Marshal Wallace learned that I am not someone he has to worry about where his assignment to protect you and your family is concerned. He placed the call originally to verify that he had the authority to arrest me...\"\n\n\"Why would he want to arrest you?\" gasped Katie.\n\n\"Because his background inquiries on me resulted in denials of access due to national security. His inquiries into Franc produced reports that were so censored that he was lucky to see who she was married to. When he made the call, he was informed that he not only didn't have the authority to arrest me, he didn't even have the authority to talk to me.\"\n\nKatie snickered, \"I bet that went over real well.\"\n\n\"It could have been worse,\" Bobby told her.\n\n\"What did you tell him?\"\n\n\"Essentially, I told him I respected his position and tried to put his mind at ease about having some stranger show up near you and your family that he was helpless to identify to his satisfaction. I will remain an enigma to him, but I think he understands that we're on the same side. So, to address your concern about our past being discovered through me, that isn't going to be possible.\""
    ],
    "authorname": "BobbyBrandt",
    "tags": [
        "lost love",
        "romance",
        "thriller",
        "mystery"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/his-daddys-car"
}