{
    "title": "What Feats He Did That Day Pt. 05",
    "pages": [
        "CHAPTER THIRTEEN\n\n\"Hep ya there, young fella?\" Fuzzy asked.\n\nI reached into my pocket first this time. I already knew that there were some coins there; I had felt them as I pushed through the doors. But I was deathly afraid that Wizen had done something stupid, like giving me an Eisenhower silver dollar. To my relief, the coin I pulled out was era-appropriate. I tossed it onto the bar. The saloonkeeper put a bottle of whiskey onto the table. \"Join me, Deputy?\" I asked.\n\nHe didn't mind if he did. None of this \"on duty\" nonsense for Fuzzy Q. Jones.\n\n\"So what brings you to town, stranger?\" Fuzzy asked, downing his first glass.\n\nI was about to explain when we were interrupted by a voice booming across the room.\n\n\"So you're what passes for the law in these parts?\"\n\nWe looked over to see two men standing in the doorway. They were obviously up to no good. It wasn't their black hats, not in a Lash LaRue movie. Lash always wore black. No, it was the evil sneers on their faces. That, and the way they drew their guns as they approached in that bow-legged swagger that suggested they'd spent too much time on horseback.\n\nFuzzy started to visibly tremble, not a sign that inspired confidence in a deputy. It was perfectly appropriate for the character of Fuzzy though. The man was the quintessential comic Western sidekick. \n\n\"You got the badge, friend,\" one of the men said. \"That makes you the law.\"\n\n\"What are you smilin' at?\" the other asked me.\n\n\"Boys.\" \n\nI acknowledged them with a tip of my hat. It was only a matter of time now. Fuzzy looked down, apparently startled to find a badge on the vest he was wearing over his checked shirt. He looked back at his accusers with eyes like saucers.\n\n\"Boys, somethin' ain't right here,\" Fuzzy said, swaying slightly against the counter. He grabbed drunkenly for the bottle of whiskey. \"I was just -- I was just havin' a -- hic -- drink here with my pal and --\"\n\nAnd the whip came in right on cue. I didn't see it, of course, but I heard the crack. We were all transfixed by the sight of the gun flying out of the hand of the guy nearest me and across the bar. All of us except Fuzzy, who grabbed the bottle in his fist by the neck and broke it over the head of the other one.\n\n\"Problem, gentlemen?\" Lash LaRue asked as he let the doors swing closed behind him.\n\nHe had drawn his gun as well, and had it trained on me and the disarmed man he apparently assumed was my companion. The other fellow had dropped like a stone.\n\nI looked at Fuzzy with eyes that asked for assistance. He grinned at me and turned to Lash.\n\n\"Nothin' too difficult, Lash. This here's my new friend, er, . . .\"\n\n\"Rick. Rick Handley.\"\n\n\"Nice to meet you, Mr. Handley. You new in town?\"\n\n\"That's right,\" Fuzzy said, holding up the neck of the broken bottle. \"I treated to the first bottle here, but we were unable to finish.\"\n\n\"Guess that make's it your turn, Mr. Handley,\" Lash said. \"Set us up here, Sam.\"\n\nSo much for the other coin. But buying drinks for Fuzzy and Lash, it turned out, was enough to establish myself as one of the good guys. And under prompting from Lash, the saloonkeeper finally fessed up that I had also paid enough to entitle me to room and board.\n\nMy training began that afternoon. In many ways, the whip was harder to master than the sword. At least I had never cut my own cheek with the sword. When we finally quit for the day, I had improved considerably. By the end of Sunday evening's training, I was even better. It would be awhile before I would approach Lash's requirement that I be able to knock a tin can off a fence. But I was the terror of broad sides of barns across the West.\n\n**********\n\nShawn and I both attended Monday morning's press briefing. Pete Simpson announced that despite the diligent efforts of the Governor's staff and his family, no record could be found to substantiate the Governor's clear recollection of reimbursing Amalgamated Coal Company for his travel on the company's plane in each of the last five years. He passed out an accounting of the amounts that the Governor was nevertheless sure he had paid. And he announced that in order to avoid any further distractions from the important work of state governance, the Governor had dispatched a cashier's check to Amalgamated. When they located proof of the earlier reimbursements, Amalgamated would refund the amount of the cashier's check minus the cost of the most recent trip. \n\nThe line about distractions was straight out of the press spokesman handbook, but Pete was clearly pleased with his delivery. He was also surprised that I raised my hand.\n\n\"So according to this accounting, the amount paid for the current year was about equal to the amount for the year before, and the year before that?\"\n\n\"Yes, of course,\" he answered, annoyance creeping into his voice. \"Depending on his pro rated share of the airplane's costs, of course. Is there a problem?\"\n\nI tried to keep the smile off of my face.\n\n\"Without intending any disrespect, Pete, he went on the last four trips by himself, right?\"\n\n\"Yes.\"\n\n\"And this year he went with you?\"\n\nHe started to nod and then realized where I had led him.\n\n\"Who's paying for the costs of your trip?\"\n\nThe silence that followed was intense. Pete clearly had no idea how to answer that one. The press corps clearly had no idea of asking another question until that one was answered. Pete and I locked eyes. Then he blinked.\n\n\"My costs are more difficult to calculate, of course, because I returned early to deal with this whole non-issue of yours, Mr. Handley. You will be provided with that accounting by the end of the day.\"\n\nHe left immediately thereafter.\n\nA reporter from Beckley leaned back in his chair and gave Shawn and me a smile.\n\n\"I don't believe I've ever seen him turn quite that color red. You know, young man, if you're going to ask him a question that causes his head to explode, you should probably take my place in the front row.\"\n\nWe shared a laugh and then Shawn and I went back to the Messenger and began pounding out the story. Shawn drove over to the statehouse in the late afternoon to pick up Pete's accounting so that we could include that as well. Then we sat down and finished. \n\nIt was a hard night of work. It was nine o'clock by the time we were done and both of us were exhausted. Shawn's test results still hadn't come back yet, so it's not like I had really missed anything. We had some cheesecake and coffee at a late-night deli down the street and then called it a night. \n\n**********\n\n\"So you and Shawn actually wrote a story together?\" Alison asked the next day at lunch. \n\n\"Yeah,\" I said. \"I think it turned out pretty well. Don't you?\"\n\n\"Full page headline. What's not to like? Still, it was your story. Now you're sharing it with her.\"\n\nI shrugged.\n\n\"We shared the last one,\" I pointed out.\n\n\"Just the credit,\" Allie said. \"Not the writing.\"\n\n Alison studied me for twenty uncomfortable seconds.\n\n\"Something wrong?\" I asked.\n\n\"What else are you sharing with her?\"\n\n\"Nothing. I have no idea what you're --\"\n\n\"Oh, bullshit, Rick. I saw the way you looked at her yesterday. Tell me you're not sleeping with her.\"\n\n\"I'm not sleeping with her.\"\n\n\"Thank God.\"\n\n\"Not yet.\"\n\n\"Rick! Come on. You know you can do so much --\"\n\n\"Allie.\" I interrupted her. \"Don't. Please. Just don't.\"\n\nShe didn't. She looked down and twirled her fork in her salad. \n\n\"Friends?\" she asked.\n\n\"Friends,\" I agreed with a sigh.\n\n\"She's very pretty,\" Allie agreed. \"And smart.\"\n\n\"And she hasn't always been the nicest person.\" I conceded that Alison had a point as well. \"Give it a chance, okay?\"\n\n\"For you?\" Allie said. \"You bet. Say what ever happened to the other part of the story?\"\n\n\"The sex?\" I asked. \"Funny you should bring that up. My source called me last night after I got home. She asked the same thing. I told her that unless I got confirmation from somebody else or she let me use her name, there was no story.\"\n\n\"Yeah. Rachel would never let that into print. What does Shawn think?\"\n\nI studied my potato chips for a while and looked up at Allie.\n\n\"I, um, haven't shared that part with her yet.\" \n\nAllie started giggling.\n\n\"It's different,\" I said.\n\n\"Sure.\" Allie was still giggling. \"One's just sex. The other's journalism.\"\n\n\"And sex,\" I pointed out. \"But I promised the woman I wouldn't give out her name. Can't go back on a promise in this business.\"\n\n\"Pussy or no.\"\n\n\"Allie!\"\n\n\"What? She has one, right? Oh yeah. You don't know that yet, do you?\"\n\n\"Bitch.\"\n\n\"Jerk.\"\n\n\"Are you gonna eat that roll or not?\"\n\n**********\n\nThe sex angle sputtered back to life the very next morning. I arrived at work as early as I always did and found an e-mail waiting for me. The return address was a Yahoo account that I didn't recognize. I skimmed it more than I actually read it. Then I printed it out, tore it off the printer, and raced over to the statehouse.\n\nShawn was happy to see me and quickly made room at her desk. We listened to Pete explain some exciting new regulatory clean water initiative that appeared to relieve the mining industry in particular of any responsibility to keep its tailing piles away from potable water. He quite happily explained in answer to questioning that the program represented a careful balance between the needs of industry and those of consumers. After taking a few more bored questions about it, he recognized me.\n\n\"Mr. Handley?\"\n\n\"Mr. Simpson, I asked you a few weeks back if there were any women on the plane to Texas\"\n\n\"Oh for Chrissakes,\" Pete barked. \"Who are you, Johnny one-note?\"\n\n\"Maybe,\" I said. \"Can I actually ask the question?\"\n\n\"Certainly,\" he agreed with sarcastic politeness. \"Whatever you like.\"\n\n\"You avoided the question, sir. You told me there was a flight attendant. So I'll ask it again. Were there any women passengers?\"\n\n\"No, there were not.\"\n\n\"No sex on the plane? No bondage? No, um, sado-masochism?\"\n\nPete Simpson was glaring at me with triumphant malice. I was aware of grumbling behind me. \n\n\"What the fuck are you doing?\" Shawn whispered.\n\n\"Mr. Handley, this is an incredibly insulting line of questioning. The answer is no. I'll answer one more question, Mr. Handley.\"\n\nI could feel the weight of my colleagues' doubts. I decided to skip the sex entirely and take one last shot.\n\n\"During the trip, after he learned about the Messenger's article, did the Governor at any time say, 'Who the fuck is Rick Handley?'\"\n\n\"I'm sure he did,\" Pete answered with a harsh laugh. Several of my colleagues laughed as well.\n\n\"And did he then identify me as 'That cripple that does the obituaries?'\"\n\nThe press spokesman handbook called for a sneer and a lightning fast denial. I got a red face and an open-mouthed stare. The laughing and grumbling stopped.\n\n\"Who told you that?\" Pete demanded.\n\nThe room had gone completely silent, the silence speaking more eloquently than anything that I could say. It was Shawn who spoke first.\n\n\"So you don't deny it?\"\n\nHe finally blurted out that he couldn't imagine the Governor saying such a thing. He turned on his heel and his aides followed him out of the room like dust behind a whirlwind.\n\n\"So what the fuck was that?\" Shawn asked after we exchanged the noisy pressroom for a quiet table at Lin Fong's, the only decent Chinese restaurant in Charleston.\n\n\"I got this e-mail this morning,\" I said. I handed it across the table.\n\n\"'Friday night,'\" she read. \"'BDSM! Starting on the plane! Yeah, baby!'\n\n\"What is this?\" she asked in a quiet voice.\n\n\"I don't know for sure. My guess is it's a little personal diary that somebody keeps on his PDA. Somebody who was on the trip, though. The dates correspond perfectly. And this. 'Four days here, still no doves.' And see this one here? He writes, 'Gov infored of Mess. article. \"Who the fuck is Rick Handley? The cripple who write the obits?\"'\"\n\n\"Who sent it to you?\"\n\n\"I haven't any idea of that either,\" I said. \n\n\"So where'd all the sex stuff come from?\"\n\n\"Well, there's this part. 'Swapped with Bill. Dee-lightful.' And here. After 'still no doves,' he writes 'plenty of chicks though.'\"\n\n\"It could be a forgery.\"\n\n\"Sure,\" I said. \"That's why I decided to spring it on Pete like that. See how much of it was true. But it also fits with what got me into this story. Somebody on the inside told me that this whole trip was an industry sponsored orgy.\n\n\"I fucked up starting with the bondage stuff, though. I looked up this BDSM thing on the 'net and it stands for Bondage, Domination and Sado-Masochism. But those questions didn't even make him flinch.\"\n\n\"So who's your source?\" Shawn asked in a hurt tone.\n\n\"Yeah, I know. I should have told you before. I'm sorry, Shawn. Really. But I can't give you the name. I promised.\"\n\n\"How does he contact you?\"\n\n\"Cell phone,\" I said. \"I got a call on Monday, actually. Wondering what the fuck was happening with the story. Weird, huh?\"\n\n\"So maybe she sent you this?\"\n\n\"Maybe,\" I agreed. \"I don't think so, though.\"\n\nShawn's use of \"he\" and \"she\" was an old reporter's trick, designed to make a reluctant source slip and allow the reporter to at least rule out one gender. I was a reporter too, though. \n\nShawn leaned forward and smiled.\n\n\"So I'm supposed to get my test results back today. Sorry for the delay. Dinner tonight?\n\n\"How about tomorrow?\" I asked. \"This press conference is gonna make the local news tonight. If I don't crank out an article, Rachel will have my butt.\"\n\n\"Tomorrow I've got book club,\" she said. \"Friday?\"\n\nI nodded.\n\n\"Promise?\"\n\nShe reached across the table and took my hand in hers.\n\n\"I promise,\" I said softly. Like that was necessary.\n\n**********\n\nThat night I didn't wake up in the middle of another bullwhip lesson from Lash. I was disappointed because I had actually done quite well so far. I could knock the can off the fence three times out of five and was gradually increasing the distance at which I was effective. Even using just the tip of the whip I was batting around .300. \n\nInstead, I woke up in Wizen's lab. Both he and Francesca were there.\n\n\"Is something wrong?\" I asked, bolting upright in bed. \"Is Ken okay?\"\n\n\"He's fine,\" Wizen said. \"Now that you are at least familiar enough with the whip, I wanted you to start sitting in on his training occasionally. Maybe doing a little of your own work with the light whip.\"\n\n\"Here's your chair,\" Francesca said. She started to push it over. I almost took control myself and \"drove\" it the rest of the way. But she was so eager to please that I couldn't do it. I let her push it next to the bed and then I climbed into it.\n\nShe accompanied us down the bezombied corridors until her father informed her that she was permitted to come no further.\n\n\"It's fine with me,\" I said.\n\n\"It is the Council,\" Wizen explained. \"Council would be displeased to learn she knows of your existence, let alone that of the Morlings and the battleground.\"\n\n\"It's okay, Rick,\" Francesca said. She gave my hand a squeeze. \"I understand.\"\n\n\"That makes one of us,\" I said, glowering at Wizen as his daughter took two steps backward before turning and striding quickly away from us.\n\n\"You know, I don't mind the idea of fighting this Morling for Francesca, or even for you. But I gotta tell you, the idea of doing it for this precious Council of yours doesn't really thrill me. Not that they're bad necessarily. I just hate secrecy. Particularly on stuff like, 'oh, yeah, your world's about to be invaded.' There are too many government people in my time who insist that things will be fine as long as we sit back and trust them.\"\n\nHis eyes widened in alarm.\n\n\"Richard, we are approaching the battleground. I must ask you to keep your heresies to yourself.\"\n\n\"Whatever.\"\n\nThe battleground turned out to be an outdoor stadium with a sand-covered floor. We emerged into the sunlight, the first I had seen it in all my visits with Wizen. Ken was already inside, warming up for his morning practice. He greeted me like an old friend.\n\n\"Rick!\"\n\n\"Hey, Ken,\" I answered. \"How's it going?\"\n\n\"Pretty fair, buddy. Can't complain. Wizen, right? Nice to see you again. You recognize this place, Rick?\"\n\nI looked around before finally shaking my head.\n\n\"It's the Rose Bowl!\" he said with a laugh. \"Preserved like it was the Roman Coliseum. Who'd have guessed that the world government would be in Pasadena? Pretty funny, huh?\"\n\n\"Yeah. So what's this?\" I gestured at what looked like an obstacle course. Two pathways led from a wooden platform at one end. The course's most prominent feature was a series of balloons, some of them atop small poles and others atop larger ones. There were balloons tucked between walls and balloons hidden behind jumps. Each of them was numbered.\n\n\"Like it?\" Ken asked. \"I designed it myself, to teach me to react quickly and use the light whip accurately. Have a look.\n\n\"Let's do the odd numbers, Slick!\" he yelled out to his sponsor.\n\n\"Slick?\" I asked.\n\n\"Slick, Slisken,\" Ken said with a big grin. \"This place could use a few more nicknames.\"\n\n\"Tell me about it,\" I said. \"It's like Night of the Living Dead.\"\n\nKen gave me a puzzled look. I was always forgetting that he hadn't lived during the last quarter of the twentieth century.\n\nHe jumped down onto the dirt floor and strode to one end.\n\n\"Ready?\" Slisken yelled.\n\n\"Ready!\" Ken acknowledged.\n\n\"To the right, go!\"\n\nKen headed down the path on the right at a jog, his eyes constantly scanning from side to side. The light whip trailed behind the cylinder he held in his right hand. He had evidently activated it while he was approaching the platform.\n\n\"Five!\" Slisken yelled.\n\nKen spotted balloon number five at the same time I did. He tucked into a roll, gauged the distance, and struck. The tip of the whip exploded the balloon.\n\n\"Seven!\"\n\nBalloon number seven was atop a large pole. The light whip was already growing longer. He stopped and performed a ritualized dance that involved backing up and doing a shoulder roll to his left.\n\n\"What's he doing?\" I asked Wizen out of the corner of my mouth.\n\n\"Simulating the Morling's attack on him. He must avoid his opponent's lash while his own whip lengthens.\"\n\nI nodded, staring in awe as Ken leapt to his feet and jumped to the side. His whip, now twenty feet in length, snaked out toward the balloon and popped it.\n\n\"Three!\"\n\nThe third balloon was behind him, tied to the ground behind a low wall. It was much too close for a twenty-foot whip. He turned it off, letting the light rope fall to the ground. As he ran toward number three at an oblique angle, he thumbed the control to max, quickly growing the whip once again. As he flew by the wall, the whip flicked out once again. The third balloon burst apart.\n\nHe missed number one after that, but redeemed himself on the thirteen, eleven, and five balloons. I simply stood there and applauded after he finished.\n\n\"Holy shit!\" I said. \"That was incredible.\"\n\n\"Missed number one again,\" he said with disgust. \"I always have trouble with that one.\"\n\n\"You got six!\" I pointed out. \"Out of seven!\"\n\n\"It only takes one to get killed,\" he said. \"Here. Give it a shot.\"\n\nHe tossed me the cylinder.\n\n\"I can't do that!\" I exclaimed.\n\n\"Nobody expects much, kid,\" he said. \"But you gotta be prepared. And you gotta start sometime. Take the evens. Slick will call out the balloons.\"\n\nIt was a disaster. I missed the first two, managed to hit the third, and had to fly in circles while the whip grew after I accidentally turned it off approaching the fourth. It was another one of those tall poles.\n\nFinally I flicked the whip toward the balloon. In the midst of my follow-through, I realized that the whip was still not going to be long enough to reach the balloon. I hastily opened the thumb control, but instead of creating a rope just long enough to bring the tip in contact, I played out far too much line. The whip's momentum was spent as it flew by the balloon. Instead, it gently wrapped itself around the pole two or three times. The coil of light slowly slid down the pole and came to rest on a band of steel halfway down the pole to which the two guy wires were attached.",
        "Lash would be ashamed of me.\n\nKen, on the other hand, thought it was hysterical. \n\n\"Don't worry, kid,\" he said between whoops of laughter. \"You'll get better.\"\n\nDisgusted at my own performance, I flicked my wrist to try to free the whip from the pole. It had exactly the opposite effect. The whip tightened around the pole, neatly slicing through the wood just above the steel. As we watched, the pole flipped end over end and dropped to the ground. The balloon burst with a loud pop.\n\nI turned off the whip and blew on the end of the cylinder before I slid it into my belt. I smiled at Wizen and then at Ken and Slisken. They were all rolling their eyes and shaking their heads. Still, it was better than being laughed at.\n\nCHAPTER FOURTEEN\n\nShawn and I finally had our second date on Friday night. I was stunned to find Shawn more nervous than I was. The idea of any woman being more nervous than me was odd enough. The idea of Shawn Michaels being nervous at all was astonishing. \n\nMaybe I was just being oversensitive. Maybe Shawn Michaels had the same insecurities and fears as everyone else. Although the look on the face of Sam Weathers as he sat in his taxi and watched us exit Shawn's apartment building suggested otherwise. His jaw dropped as soon as he saw us. Then he actually got out of the taxi and opened the door for her.\n\n\"Thank you, sir,\" she said, drawing her long legs into the interior so he could close the door.\n\n\"You've never helped me in, Sam\" I grumbled as we both moved to the driver's side of the taxi.\n\n\"You ain't ever showed up in anything like that,\" he explained. \n\nShawn was wearing a black dress that had caused my jaw to drop as well when she first answered the door. \n\n\"I show up in a wheelchair!\" \n\nI opened the door and lifted myself into the seat behind Sam's.\n\n\"And I always take care of your chair, don't I?\" he asked, taking it to the back of his van and storing it there. \"You don't want me opening the door for you, Rick. You like your independence.\"\n\n\"Shawn likes her independence too,\" I said. \n\n\"Shawn likes to have doors opened,\" Shawn said sweetly. \"Thank you again, Sam.\"\n\n\"My pleasure, miss. Where may I take you two fine people?\"\n\n\"Antolini's,\" I said.\n\n\"Italian,\" Shawn said, grabbing my arm and pressing herself against me. \"The food of love.\"\n\n\"Um, yes.\"\n\nShawn giggled all the way to the restaurant. When the wine arrived, she offered a toast.\n\n\"To Rick Handley, the scourge of Charleston!\"\n\n\"To Shawn Michaels,\" I said. \"The co-scourge.\"\n\nOur article was set to appear in Monday morning's paper. Rachel had killed the story I had written on Wednesday night. She had just smiled when I reminded her that every other paper in the state was going to have the story after the morning's press conference.\"\n\n\"They have his failure to deny your questions. And that's it. They don't have your e-mail, do they?\"\n\n\"As far as I know they don't,\" I said. \"They didn't get it from me.\"\n\n\"So they have no idea what your questions even meant. I bet that if you show Simpson the whole thing in private, you might be able to get him to admit that they did bring women on the trip. Just to limit the damage from this. Then you'll have a story. We can print the whole of the message as a sidebar. Okay?\"\n\n\"Okay!\" \n\nI was pumped. Partly it was the upcoming article. But the delay also meant that I now had the rest of Wednesday night free. I eagerly picked up the phone to arrange a late dinner with Shawn. I got the machine. I called again half an hour later and got the machine again. Damn and damn again. \n\nShawn showed up late at the next day's press conference. Pete was just about finished with his formal statement when she slid into the seat beside me. She gave me a squeeze of my hand and a smile that said she was happy to see me.\n\nWhen he asked for questions, Shawn was the first to raise her hand. Pete smiled as he called on her.\n\n\"One question, Pete.\" Shawn said. \"How did you do with your hunting?\"\n\n\"My hunting?\" he asked.\n\n\"The doves,\" Shawn said with a smile. \"How'd you do?\"\n\n\"I'm West Virginia born and bred, Shawn. I don't have blank days hunting. Who's next?\"\n\nShawn sat back in her chair and turned to me.\n\n\"At least now we know the diary wasn't his,\" she whispered to me.\n\n\"True.\"\n\n\"What happened to your article, anyway?\"\n\n\"I'll tell you later.\"\n\nAfter the press conference had ended, we talked over coffee at the Java Cava. \n\n\"Rachel really shocked me,\" I explained. \"She thinks that the diary is credible enough to run with it. She suggested I give Pete a chance to comment on the whole thing this afternoon and then spend tomorrow writing a real analysis.\"\n\n\"So what are you doing with the, um, sex thing?\" \n\n I shrugged.\n\n\"Rachel wants to print what's in the e-mail,\" I said. \"Other than that, it depends on what Pete has to say.\"\n\n\"And if he says the whole thing is a fake?\"\n\nI smiled at her.\n\n\"First of all, he had his chance to deny the cripple remark yesterday and again today, after everyone else's article came out. So we know that's true. And second, he's not really in that good a position to call anything a forgery, you know?\"\n\nShe gave me a half-hearted smile and I invited her to come with me when I met with Pete that afternoon.\n\nPete was unusually calm when we arrived. When I handed over the e-mail, without the address of course, his face registered surprise but not shock. He read it slowly and sighed before he addressed us.\n\n\"All right. Were there women on the plane and on the trip? Yes, there were. Will I tell you which of the Amalgamated executives brought female friends? No. Will I tell you any of the names of those executives? No. Did the Governor bring a companion? No, of course not. Did I? No.\"\n\n\"So this is a diary of the trip?\" I asked.\n\n\"I think we both know the answer to that,\" he answered.\n\nShawn and I both waited him out.\n\n\"All right. Yes. I'm sure it is a diary kept by someone who accompanied us on the trip.\"\n\n\"It ends the same day you returned,\" Shawn observed.\n\n\"So it does,\" Pete said softly. \"I imagine the party was pretty much over after everyone learned of your article. But as you note, Shawn, I wasn't there.\"\n\n\"And the BDSM?\" I asked.\n\n\"Neither the Governor nor I have any recollection of any unusual behavior on the plane,\" he said. \"But it was a fair-sized aircraft.\"\n\n\"So it's possible?\"\n\nHe gave me a rueful look.\n\n\"Anything is possible.\"\n\n**********\n\n\"Did you save room for dessert?\" the waitress asked us when we had finished our meals. \"Some tiramisu, perhaps?\"\n\n\"Some what?\" I asked her.\n\n\"Tiramisu,\" she said more slowly. \"Lady fingers in cream.\"\n\n\"Mmmm, that's just what I had in mind.\" Shawn said. She was looking directly at me, her eyes sparkling.\n\nThe waitress probably thought Shawn was interested in ordering something more. I knew better.\n\n\"Just the check, please.\" I said.\n\n\"No dessert?\"\n\nShawn gave her a look that spoke volumes.\n\n\"I'll get the check,\" the waitress said.\n\n\"I'll call Sam,\" I said.\n\n\"This is what I like,\" Shawn said as she sat back with a smile. \"Service.\"\n\nWe started kissing in the taxi on the way back from the restaurant. Sam had asked whether we wanted him to wait after we stopped at the Prince Arms to drop Shawn off. Shawn had simply suggested that if he took that stop out of his itinerary, he could call it a night. Sam got it before I did. Of course, he didn't have Shawn Michaels' lips distracting him.\n\nShe sat on my lap and we kissed on the elevator. We kissed in the hallway. We kept kissing all the way to the bedroom.\n\n\"I want to make love,\" Shawn moaned into my ear.\n\n\"Me too,\" I said.\n\n\"Take off those clothes and get in bed, Rick,\" she said, climbing off the chair. \"I'll be right back.\"\n\nI pulled myself into bed and undressed down to my shorts as she walked into the living room. I heard the door to the refrigerator close and then heard her walking back. She appeared in the doorway and leaned against the doorjamb, inviting me to study the outfit that she had chosen for our date. Her little black dress was an updated version of the classic. The straps riding on her upper arms rather than her shoulders revealed a beautiful expanse of her tanned torso. The fabric hugged her generously curved figure, exposing a sexy six inches of her thigh when it ended. The effect, particularly with her carefully styled blonde hair and devastating smile, was overwhelming.\n\n\"Somebody likes,\" she said, nodding at the obvious bulge in my crotch.\n\nI managed a greedy smile.\n\n\"Excellent,\" Shawn purred. \n\nShe had hidden one hand behind her back, and she pulled it out to reveal an odd sort of prop, a plastic cup with the WV logo of the \"U\" on it that I had bought at the one football game I had attended. Her choice made more sense when she reached inside it and pulled out an ice cube, holding it between her pursed lips and gently sucking.\n\n\"Hot in here, isn't it?\" she asked. She had taken the ice cube out and was rubbing it slowly across her cheek, down her neck, and back across her chest. I stared as little drops of water tricked down her skin and disappeared beneath the dress's low neckline.\n\n\"I'm afraid that's still not enough,\" she said, dropping her voice even lower. She put the nearly melted ice back in the cup and reached behind her back. I could hear the zipper opening. She returned her hands to her sides and stepped toward me. With a little shimmy of her shoulders the dress dropped to the floor.\n\nShe took another step forward. She was probably stepping out of the dress, but my eyes were much higher up. They were flicking between the black lace demi-cups that held Shawn's breasts and the thin black thong that matched her garter belt and stockings.\n\n\"Much better,\" she purred.\n\nBut still not good enough, apparently. She took another ice cube out and began sliding it down her left breast. The ice cube and her fingers disappeared inside the lace cup and her heavily lidded eyes and rounded mouth suggested that she had applied it to her nipple. She gave her right nipple the same treatment and then took yet another ice cube and held it against the skin just below the little white rosette in the center of her bra. \n\nShe stood there, breathing deeply, her breasts rising and falling. A rivulet of water trickled down her belly to her navel. She followed it with the ice cube, sliding it down, circling her navel, and then guided it into her thong. I followed her fingers beneath the thin fabric and found myself holding my breath as they went deeper and deeper.\n\nHer fingers were empty when she pulled them back out. She raised them to her mouth and slowly licked them off one at a time. \n\n\"Think you can find it before it melts?\" she asked me.\n\nI opened my mouth and heard myself say nothing by \"uh\" for five seconds before I finally added \"no.\"\n\n\"But I'd be happy to try,\" I added eagerly.\n\nShe gave me a brilliant smile and reached behind to unfasten her bra. She joined me on the bed and we began to make slow, delicious love. Shawn was far more skilled than Angie -- and far more practiced. But she shared the younger girl's delight and enthusiasm. She appeared to enjoy my technique and gladly shared with me a few techniques of her own. When we lay together later, her head resting on my shoulder as she snuggled under my arm, I think we were both sated.\n\nIt was not the time I would have picked for another lesson with Lash LaRue but I had never had any choice in the matter. It was a disheartening lesson and when I awoke afterwards in Wizen's room my dissatisfaction apparently showed on my face.\n\n\"You had a problem?\" Francesca asked. She was sitting in Wizen's place at the end of the bed.\n\n\"No,\" I said. \"Well, yeah. I seem to have plateaued. Where's Wizen?\"\n\n\"He was summoned to Council after he brought you here. He asked me to monitor you. I sensed something was wrong so I ended your training early. Perhaps your heart wasn't in it.\"\n\n\"Perhaps,\" I said with a smile. My heart, after all, was lying next to Shawn. It was only my head that was wandering around the time-space continuum.\n\n\"It is much to ask of you.\"\n\nFrancesca got up and turned away but not before I caught a brief glimpse of that ineffable sadness that I had sensed when I had first met her.\n\n\"Not at all,\" I said as gallantly as I could. \n\nShe turned back and gave me a half-smile.\n\n\"We ask you to train for a battle you may not fight. We may ask you to fight a battle that matters not at all to the world in which you live. It is selfish.\"\n\n\"You did agree to give me the drug in return,\" I pointed out. \"True,\" she acknowledged. \"But it is a very small price. I would have given it to you regardless.\"\n\n\"I know. Shall we have another picnic?\"\n\nHer face brightened considerably.\n\n\"That would be delightful,\" she said. She moved to the food console and asked me what I would like.\n\n\"Fried chicken?\" I said tentatively. \"With some potato salad and lemonade.\"\n\n\"I will ask.\"\n\nShe said it as if she didn't expect it to work. But in a few seconds the room was filled with the unmistakable smell that can only be fried chicken. She turned to me with an expression of amazement and showed me the tray. Then she waved her hand and we were back in the park. She handed me some chicken and a bowl of potato salad and then poured two glasses of lemonade from a pitcher. \n\nI looked around at the trees and the birds and the butterflies.\n\n\"I'm surprised you don't spend all your time here,\" I said. \"You don't, do you?\"\n\nShe smiled and shook her head.\n\n\"Helping father requires far too much time.\"\n\n\"Maybe that's why I see so few people in the corridors. They're all hanging out in parks like this.\n\nI watched Francesca take a bite of fried chicken. She chewed it slowly, savoring the unfamiliar taste.\n\n\"Seriously, why do I see so few people in the corridors?\" I asked.\n\n\"This is amazing,\" she said before turning her attention to my question. \"There are few needs that cannot be met inside peoples' dwellings.\"\n\n\"That's kinda sad, you know.\"\n\n\"Sad? They are all content. Council provides.\"\n\n\"Maybe. I'm not sure I could just do 'content.' And your Council kind of freaks me out.\"\n\n\"I beg your pardon?\"\n\n\"Like the fact that nobody knows about the Morling crap. I mean, if my world could be wiped out at the end of next week, I'd like to know that.\"\n\n\"What could you possibly do?\" Francesca asked.\n\n\"Just know it,\" I said. \"Be scared. Be hopeful. Be worried about what would happen if Ken can't fight and some schmuck in a flychair has to take his place. I'm not saying your Council is bad, understand. Just way, way too secretive. For me. Would you rather not know about the Morling?\"\n\nShe thought for a long time.\n\n\"No,\" she finally said, staring off into space. \"I do prefer knowing. That would be father returning.\"\n\nShe waved her hand and the illusion dissolved. We looked up to see an oddly pale Wizen walk through the door.\n\n\"Father?\"\n\nFrancesca jumped to her feet.\n\n\"Is something wrong?\"\n\nHe looked at her and then at me.\n\n\"Ken was hurt today. They have reattached his right arm.\"\n\n\"What happened?\" I asked.\n\n\"It was a freak accident,\" Wizen said. \"We were unaware that it could even occur.\"\n\n\"What?\" I demanded.\n\n\"He missed one of his targets and the whip slammed into the sand. It turned it to glass.\"\n\n\"Oh, my God.\"\n\n\"Yes. Glass with sufficient reflectivity to send the whip back upward. It snapped back and severed his arm.\"\n\n\"But you can fix it, right?\" I asked.\n\n\"Certainly.\" Wizen waved his hand as if it were nothing. \"He will have full use of the arm.\"\n\n\"Good,\" I said.\n\n\"In a month. We cannot accelerate the rehabilitation of his muscles. Any more than we could speed the effect of the drug on your legs.\"\n\nI stared at him, my mouth hanging open.\n\n\"You begin training with the light whip tomorrow, Richard. Next week you will be our champion.\"\n\nIt was dark again. I could feel my heart slamming against my ribcage as if I had just awakened from a nightmare. Shawn was sleeping peacefully at my side, her breaths regular and deep. And we were not alone. I could hear someone in the living room. After a moment, I could make out a small penlight, its beam shining through the door to the bedroom.\n\nCHAPTER FIFTEEN\n\nI shut my eyes as the light played across the floor toward the bed. It lingered on us for a moment and then flicked away. I heard the intruder walk toward the dresser and then toward the bed. He was uninterested in us, though. He stopped beside us and reached down. I could hear the change in my pants jingle as he picked them up.\n\nIf he wanted my wallet, I thought, he was more than welcome to it. I had maybe thirty-three dollars in there along with the usual credit cards. It was hardly enough to make it worth his while to commit robbery. When he found that that's all he was getting he was going to be royally pissed. He was willing to take that chance, though. I heard him drop the pants and then make his way back out to the living room. He opened the door to the hallway and left.\n\n\"Shawn,\" I whispered.\n\n\"Mmmmm,\" she murmured.\n\n\"Shawn. Wake up.\"\n\n\"Why, lover?\"\n\n\"Cause I've just been robbed.\"\n\nThat did the trick.\n\n\"You what?\"\n\n\"There was a guy,\" I said. \"I think he stole my wallet.\"\n\n\"Why didn't you yell?\" she asked.\n\n\"And then what? Most people aren't afraid of guys with wheelchairs,\" I pointed out. \"Or of naked women. Come on. I've gotta call the police.\"\n\nBy the time the officers arrived, we were both dressed. Shawn had opted for a pair of my jeans and an old shirt, but she still looked hot enough that both policemen gave her long looks of appraisal. Then they both gave me long looks of amazement. One of them took our statements -- my statement, since Shawn had slept through the whole thing -- while the other looked around the apartment.\n\n\"No sign of a break-in,\" he reported back after his survey. \"He must have picked the lock.\"\n\n\"That wouldn't get him through the deadbolt and the chain,\" I pointed out.\n\nThe policemen traded glances.\n\n\"There's nowhere else for him to get in, sir,\" the first one said. \"Perhaps you neglected to fasten them.\"\n\n\"I always fasten them,\" I said.\n\nMaybe you were a little, um . . .\"\n\n\"Distracted,\" his partner added.\n\n\"Yeah. Maybe you were a little distracted tonight. Did you notice him throwing the deadbolt and the chain, ma'am?\"\n\nI could tell from Shawn's expression that she was not pleased. I thought she probably resented being ogled like that. It turned out, though, that she was more upset at the officers' treatment of me.\n\n\"No, officer,\" she said, her voice breathy. \"I was far too distracted myself by his sensuous lips and soft caresses.\" \n\nThey both frowned. They finished up within 15 minutes and promised to send me a copy of their report.\n\n\"Are you okay?\" Shawn asked after they had left and I had locked us in.\n\n\"Sure. Although it's going to be a while 'til I can sleep. Would you like some tea?\"\n\nWe were interrupted by a knock at the door. It was one of the policemen. Standard procedure required them to look through the trash cans on their way out of the building and there, on the first floor, they had found my wallet.\n\n\"Was there anything else in your pants, sir?\" he asked.\n\nI thought for a moment and then quickly wheeled myself into the bedroom. My cell phone was missing. The officer suggested that I notify my carrier and told me that, in light of his discovery, it was unlikely that the \"case\" would be investigated much further.\n\nWe thanked him for his hard work and I finished making tea. It was only two-thirty and we decided to try to return to sleep. Or at least to bed. Once we were settled, though, I sat bolt upright in bed.\n\n\"Shit!\"\n\n\"What now?\" Shawn asked.\n\n\"My cell phone. It's got her number in it.\"\n\n\"Whose number?\"\n\n\"My source. I gotta call her.\"",
        "\"Your source? For the dove-hunting stuff?\"\n\n\"Yeah.\"\n\n\"Can't you just call her tomorrow?\"\n\n\"No.\" \n\nI flicked on the light and pulled myself into my chair one more time. I rummaged through my desk and found the phone book.\n\n\"Hello?\"\n\n\"Suzanne, this is Rick Handley.\"\n\n\"Who?\"\n\n\"The reporter. From the Messenger. Remember?\"\n\n\"What time is it? Fuck! It's not even three.\"\n\n\"Suzanne.\" I made my voice as hard and cutting as I could. \"You need to listen. Someone just broke into my house for and stole my cell phone. I think they took it because it has the number of your cell phone in it. I know it's not your cell phone, but these people won't take long tracking it down to you.\"\n\nThe line was silent when I stopped talking.\n\n\"Are you still there?\"\n\n\"Yes,\" she said, her voice small and weak. \"Oh, God. What should I do?\"\n\n\"I'm going to call you a taxi. He'll call you and get your address. When he gets there, he'll bring you here. I'm going to give you my credit card and a calling card. I want you to go somewhere -- don't tell me where. Wait a week. Then call me at the paper. Leave a number where I can reach you on my voicemail.\"\n\n\"I can't just --\"\n\n\"You can. Just call in sick. Suzanne, I'm sorry. These people mean business. You know that better than I do, right?\"\n\nI hug up and called Sam Weathers. He was equally sleepy but he finally agreed to comply. An hour later his taxi pulled up outside my house with Suzanne and a small boy inside of it. I handed Sam the thirty-three dollars from my wallet and told him I'd give him whatever else it cost later. I assured Suzanne that everything would be fine.\n\nBy then it was almost four o'clock. Shawn had retreated to bed shortly after the phone call. I crawled in next to her and was rewarded with a sleepy kiss on the shoulder. I didn't sleep at all, of course.\n\n**********\n\nMy first session of light whip training on Sunday night was an unmitigated disaster. The hardest part was controlling the growth of the whip. If you didn't let it grow, it would fall off. Use it or lose it, so to speak. But that meant that your whip was constantly changing. You had to make constant adjustments in order to effectively use it. And I still hadn't mastered the regular whip. \n\nFortunately, the first part of the day was great. It wasn't that Shawn and I spent the whole day making love. In fact, she left after we had a leisurely Sunday breakfast. But I did spend the day in that post-coital bliss that lets you find the hidden pleasures in everything else you do, from reading the paper to cooking dinner. At one point while I was watching the ballgame on Sunday evening, I found myself laughing aloud for no reason whatsoever.\n\nWhen Shawn slipped into her seat next to me at Monday morning's press conference, I slid my hand underneath the desk and gave her hand a squeeze. She rewarded me with a brilliant smile and together we got ready to listen to Pete Simpson. The media was angry. Today's story demonstrated that Pete had lied to us before, in this very room. We were used to being misled; that was part of the job, both his and ours. But lying crossed a line. We were out for blood.\n\nAnd we were denied. Krissy Mackley appearance in Pete's place sucked all the anger out of the room. Her announcement that Pete had delivered his resignation to the Governor on Thursday evening sucked all the air right after it. The resignation, effective Friday, had allowed Pete to accept a position with Amalgamated Coal. The Governor had appointed Krissy to take his place.\n\nAs her first matter of official business as the new press secretary, Krissy apologized to the media for the statements that had been issued by the Governor's press office. Then she turned to me and delivered a personal apology on behalf of the Governor for any derogatory terms that he may have uttered in his misguided effort to protect the reputations of any women who may have accompanied Amalgamated's executives on his recent trip to Texas.\n\nThen she changed the subject. Joe DiBianci would be taking over as the Governor's personnel director on an interim basis while Elizabeth Day was on medical leave. It was imperative that the legislature pass the Governor's transportation initiative this week. The Department of Natural Resources was investigating the water quality of the New River.\n\n\"Are there any questions?\" she asked.\n\nOf course there weren't. We were all still stunned.\n\n\"Bullshit,\" I muttered as the press conference came to an end.\n\n\"What?\" Shawn asked.\n\n\"'Personal apology.' 'May have uttered.' 'Misguided effort,' my ass.\"\n\n\"Hey, pal,\" she said, rubbing my arm. \"You won.\"\n\n\"You never win in the newspaper business,\" I said. \"Only the politicians win. Even when you catch the bastards lying, it only means you managed a stalemate this time. Because they'll just try to do it again and again. There's always another chance for us to lose and them to win. \n\n\"Aren't you the cynic?\" she said with a bright laugh.\n\n\"I'm sorry,\" I said. \"You're right. We did good, didn't we?\"\n\n\"We did great!\"\n\n\"Yeah. How about a late breakfast?\"\n\n\"Mmm,\" she purred. \"I love having breakfast with you.\"\n\nHer eyes were sparkling.\n\n\"I was thinking about the deli,\" I confessed. \"Since we are being paid to work.\"\n\n\"Spoilsport.\"\n\n**********\n\nMy light whip lessons continued each night. My progress was slow and fitful. Ken showed up to help me out but his experience with working legs was completely different from mine in the flychair. \n\n**********\n\n\"You did it, didn't you?\"\n\nAllie and I were at our usual Tuesday lunch.\n\n\"How can you tell?\" I ask.\n\n\"That smirk on your face,\" she said. \"The one that says I got laid by a beautiful blonde over the weekend.\"\n\nI shrugged.\n\n\"I'm not one to kiss and tell.\"\n\n\"Up until now there hasn't been anything to tell,\" she teased me. \"You haven't been one to kiss.\"\n\n\"Very funny, Coles.\"\n\n\"It is,\" she insisted. \"You all suave and nonchalant. It's very cute.\"\n\n\"Shut up.\"\n\nShe just laughed and then dropped her voice.\n\n\"So it was good, right?\"\n\nI gave her a dirty look and she laughed again.\n\n\"It was good for her too,\" I said.\n\n\"Ooh, I'll bet it was, tiger. Rick Handley the stud.\"\n\nI rolled my eyes and she changed the topic.\n\n**********\n\nI spent Tuesday afternoon and all of Wednesday writing obituaries. It wasn't until Thursday morning that I had to pay any attention to the Governor's office. And that was only because Rachel called at 7:30 in the morning.\n\nI wheeled myself over to the statehouse where I found the Morgantown Observer's Charlie Beckett waiting to talk with me. \n\n\"Did you get a chance to talk to Shawn?\"\n\n\"Today?\" I asked. \"All I got today was a call from my editor telling me to get my ass over here this morning. Why?\"\n\n\"I just wondered what you thought about Betsy Day. So you didn't talk to her yesterday either?\"\n\n\"Shawn? I haven't seen her since Tuesday. Who's Betsy Day?\"\n\n\"The Governor's personnel director.\"\n\nIt took me a while to remember where I had heard the name before.\n\n\"The one on medical leave?\" I asked. \"Am I missing something?\"\n\n\"I got hold of the police report. Apparently somebody tried to kill her.\"\n\n\"No shit.\"\n\n\"No.\"\n\n\"Wow.\"\n\nCharlie was looking at me like he was trying to gauge my reaction and I finally told him that I still didn't understand why Shawn or I would be interested in this.\n\nHe shrugged.\n\n\"I told Shawn yesterday,\" he said. \"Police say that Betsy was looking at your article on Saturday on your paper's website and made two calls to the Governor's personal residence on Saturday evening. Whoever drugged her on Sunday tried to erase that record from her computer. Then they tried to make it look like a suicide. Fortunately, she was able to call 9-1-1 before she passed out.\"\n\n\"Holy shit,\" I said calmly. \"What do you think it means?\"\n\n\"I got no idea,\" he said. \"I was hoping Shawn was going to tell me. Now I'm hoping you can tell me.\"\n\nIt was my turn to shrug.\n\n\"I got no idea.\"\n\nHe smiled.\n\n\"Will you let me know when you do?\" he asked.\n\n\"Yours will be the second newspaper I talk to, Charlie.\"\n\n\"Asshole,\" he said, still smiling.\n\n\"Journalist,\" I reminded him.\n\n\"Same thing,\" we said in unison.\n\nThe wheel back to the office produced no answers. It wasn't until Rachel called me into a meeting with Bill McIntyre after lunch that lightning struck.\n\n\"Did something happen between you and Shawn?\" she asked.\n\n\"Something?\"\n\n\"I'm trying to figure out this e-mail I got at 11:00 last night. The one I read at seven o'clock, just before I called you.\"\n\n\"Rachel, I don't know anything about an e-mail.\"\n\nI swallowed hard and decided that Rachel needed to know the truth.\n\n\"Shawn and I have been dating,\" I explained. \"For about two weeks. She was in my house last Saturday night when I was robbed.\"\n\n\"And you argued?\"\n\n\"No.\"\n\n\"Why do you think she resigned then?\"\n\n\"Resigned?\"\n\nShe passed me the e-mail. It was short and blunt.\n\nEffective immediately, I resign my position with the Charleston Messenger. Shawn\n\nI felt like my heart had stopped. I looked up at Rachel and Bill.\n\n\"Why?\" \n\n\"I was hoping Shawn was going to tell me,\" Rachel said. \"Now I'm hoping you can tell me.\"\n\nI stared at her for what seemed an eternity. The words she had just spoken were exactly the same as those Charlie Beckett had used that morning when he was talking about Betsy Day.\n\nIt was the final piece in the puzzle. I gasped for air.\n\n\"Are you okay?\" Bill asked. \"Rick?\"\n\n\"A minute,\" I said. \"Give me a minute.\"\n\n\"I'll get some water,\" Rachel said. She dashed out and returned with a glass that I downed in a long swallow.\n\n\"BDSM,\" I finally said. \"Betsy Day, the Governor's personnel director. B.D.\"\n\nRachel got it first.\n\n\"And Shawn is . . .?\"\n\nI nodded.\n\n\"S.M. It all fits.\"\n\n\"But she worked on the story with you,\" Bill objected.\n\nI was still having a little trouble breathing. It took me another thirty seconds before I could answer him.\n\n\"She was working for them. Trying to control the damage. To keep me focused on the money. And off the sex.\" \n\nI swallowed and continued.\n\n\"The break-in. I told you somebody must have overheard me telling Shawn that the source's number was on my cell phone. But they didn't need to have somebody overhear me. Shawn was there. I told her myself.\"\n\nI gave a small, harsh laugh.\n\n\"I always lock the door of my apartment. And I did on Saturday night. Shawn got up and unlocked it.\"\n\nAnd I had just lain there on the bed, waiting for her to return with her glass of ice. Waiting for her to entertain me.\n\n\"Oh, Rick,\" Rachel said. \"I'm so sorry.\"\n\n\"Me, too,\" I said. I could feel a tear running down my right cheek. \"Me, too.\"\n\nCHAPTER SIXTEEN\n\nRachel and Bill had both suggested I take Friday off. I had declined. What would I do in my apartment? Besides, I had a story to write. \n\nAlison listened to my story on Friday morning in stunned silence and -- bless her -- resisted the temptation to tell me that she had told me so. Instead, she began contacting her sources in the Police Department to get a copy of the report that Charlie Beckett had told me about. \n\nShe did Charlie one better. She was friendly with one of the first policewomen to reach the scene. Her friend added a few details, including the story of a clumsy attempt by the State Police to muscle their city colleagues off the case. Curious, Alison made a phone call to a source in State Police Headquarters seeking confirmation. That woman produced a damning e-mail from the Governor's chief of staff demanding that state forces assume jurisdiction.\n\nAlison also learned the police had discovered that Betsy Day had left an e-mail trail of her own. After being unable to reach the Governor by phone, Ms. Day had fired off a note telling him that she had no intention of falling on her sword like Pete Simpson. If she got even one question about \"BDSM,\" she wrote -- initials that must have blazed like a neon sign to her -- she was going to tell everything she knew.\n\nI was keeping busy as well. Around ten, I trekked out to the airport to renew my acquaintance with the men who worked for Jerry's Charter Service with photographs of Pete, Shawn, and Betsy. The guy who had reported seeing the \"suit\" with the two \"babes\" boarding the Amalgamated plane couldn't identify the suit to save his life. But babes were another matter. Gentlemen like this always found babes easier to remember. BDSM.\n\nUpon my return, I started going through the corporate directory on the Amalgamated Coal website, looking for \"Bill,\" the man with whom my diarist claimed to have swapped. The only \"Bill\" senior enough to have been invited on a trip like this was William H. Conde. I picked up the phone and punched the numbers.\n\nIt turned out that Conde was a fairly new executive with the company, one who didn't know enough to hang up on me after I managed to talk my way past his secretary. I told him that we had information that he had been on the company's dove-hunting trip to Texas, and that he had brought a companion with him. \n\n\"You can't print that,\" he whispered.\n\n\"Tell me why, Mr. Conde.\"\n\n\"My wife,\" he said. \"My family.\"\n\n\"That is a problem,\" I agreed. \"I'll tell you my problem, Mr. Conde. I don't care who from Amalgamated Coal is screwing who. Until they start screwing the citizens of West Virginia. If all I have is a name at Amalgamated, that's where this article will start and end. If I get more, it won't even start there. Okay?\"\n\nThere was a long silence.\n\n\"Mr. Conde?\"\n\n\"Yes,\" he said finally. \"Go ahead.\"\n\n\"Was Governor Platte on the trip?\"\n\n\"Yes.\"\n\n\"Did he bring a companion?\"\n\n\"Yes?\"\n\n\"Do you know her name?\"\n\n\"Betsy something,\" he said. \"Nobody used last names.\"\n\n\"Did his press secretary, Pete Simpson, go on the trip?\"\n\n\"Yes.\"\n\n\"And his companion?\"\n\n\"Shawn,\" he answered. \"Again, I never knew her last name.\"\n\nEven now, I could hear the arousal in his quavering voice. It seemed obvious to me that Bill and I had something in common. We had both slept with Shawn Michaels. But I had to ask.\n\n\"Did you and Pete Simpson engage in anything that could be termed 'swapping'?\"\n\n\"We, um . . .\" he began. \"We had sex with each other's, um, companions.\"\n\n\"Did you swap with anyone else?\"\n\n\"No.\"\n\n\"Was there anyone else on the trip named Bill?\"\n\n\"No. Why are you asking me these questions?\"\n\n\"I take it you haven't seen the paper this week?\"\n\n\"I only read the Wall Street Journal,\" he said.\n\n\"Pity,\" I said. \"You miss a lot that way. I hope your wife doesn't take the paper. Now let's talk some more about Governor Platte.\"\n\nBy the time I was finished I had all the information I needed. He didn't know any of the financial details of the trip, but I wasn't really interested in those at this point. He knew plenty about the rest of it. \n\nAllie and I were still hard at work when the newsroom began to empty out for the weekend. Finally, she pulled her chair over to my cubicle.\n\n\"How are you?\" she asked.\n\nI looked down at the notes I had finished taking after another series of phone calls.\n\n\"Shawn Michaels and Elizabeth Day were on a flight from Houston, Texas to Miami, Florida on the same day that Pete got back here,\" I told her. \"They both flew from Miami to Charleston the following Saturday, when their vacations supposedly ended.\"\n\n\"I'm sorry,\" she said. \"Guess that kind of seals it, huh?\"\n\n\"Yeah. You know, sometimes it really sucks being a reporter. I'm not sure I really want to know everything.\"\n\n\"She didn't love you, Rick.\"\n\n\"You know, I think she did, just a little. I could hear it in her voice sometimes. Then I blew it out of all proportion, of course.\"\n\n\"Maybe you should turn this over to somebody else.\"\n\nShe laughed when she saw me stiffen in response to her suggestion.\n\n\"I'm a reporter,\" I protested. \n\n\"Can't let our feelings get in the way, can we?\" she asked with a smile.\n\n\"Nope. Not even a little.\"\n\n\"Public's right to know . . .\"\n\n\". . . and all that,\" I finished.\n\n\"You're a damn good reporter, Rick Handley,\" she said. \"And a damn good guy. You going to be all right this weekend?\"\n\n\"Yeah. Thanks, Al. I'm going to be writing.\"\n\n\"Charleston calling Mr. Pulitzer. Phone call for Mr. Pulitzer.\" \n\n\"From the Charleston Messenger?\" I asked. \"I don't think he accepts collect calls.\"\n\nAllie threw back her head and laughed. We both knew I had as much chance of winning a Pulitzer Prize as I did of dating one of the Olsen twins. We both knew that it didn't matter. I had a story to write.\n\nAnd a whip to master. But I had been practicing journalism for far longer. It was no wonder that I was better at that. \n\nKen did his best not to show it, but he was as concerned as I was. \n\n\"You need a day off,\" he said.\n\n\"Now?\" I asked. \"The fight's a week from fucking tonight!\"\n\nIt had been a frustrating session even before he shared the \"results.\" Ken had designed an algorithm for measuring success. Or so he claimed. I wouldn't have known an algorithm from an African drum rhythm. What I did know was that my effectiveness with the light whip had plateaued just like my skill with the regular whip had. Now I had a number for it: 43 percent. Up from 38 the day before. Down from 45 the day before that. \n\nI didn't even have half a chance to win this fight. \n\n\"I know, buddy,\" Ken said. \"You're trying too hard.\" \n\nEasy for him to say. Ken had made steady progress. He had been at 84 percent before his injury. \n\n\"Why were you doing it?\" I asked.\n\n\"Doing what?\"\n\n\"Fighting the Morling. Why did you agree?\"\n\nHe gave me an odd look.\n\n\"It's my job.\"\n\n\"Fighting aliens?\"\n\n\"Fighting enemies,\" he said. \n\n\"Enemies of the United States,\" I pointed out. \"Which doesn't exist.\"\n\n\"It's still my planet.\" \n\nHe spoke as if that should settle the issue. Maybe for him it did. He turned to Wizen.\n\n\"I don't want to see him here tomorrow, sir,\" he said. \"Sunday night is soon enough.\"\n\n**********\n\n\"I want to talk to your Council,\" I told Wizen on Sunday evening. I had propped myself on my elbows as I lay on his bed.\n\nHe looked alarmed.\n\n\"Council?\" he asked. \"I doubt very much that --\" \n\n\"I'm the one putting his life on the line for them, aren't I?\"\n\n\"Yes,\" he agreed. \"For which we have agreed to give you the drug.\"\n\n\"Yeah. How soon can I meet them?\"\n\n\"Three days?\" He pulled a number out of thin air.\n\n\"Okay. Just summon me when they're ready. I'll just be sitting in my apartment, waiting for you.\"\n\n\"But your training,\" he sputtered. \"Ken is waiting for us.\"\n\n\"That's true. Tell him it's up to your Council. I wouldn't wait too long if I were them, though. You know better than anyone that I need the practice.\"\n\nI lay back on the bed and closed my eyes. I opened them again after a few seconds.\n\n\"Not going to send me home?\" I asked.\n\n\"I must consult with Council,\" he announced. \"Francesca!\"\n\nFrancesca and I had another lovely picnic until Wizen returned. The Council, it appeared, had reluctantly agreed to expedite my appearance.\n\nKarsk, the only councilman I had already met, occupied the center chair of the nine that towered above me behind the shiny steel table. His colleagues were equally colorless, capable of little more than a scowl.\n\n\"You wanted to see us,\" Karsk stated.\n\n\"I want to bargain.\"\n\n\"Bargain?\"\n\n\"The contest is in less than a week. You have no time to find and train a new champion.\"\n\n\"You seek to extort us?\" the man on the far right asked.\n\n\"I seek to bargain,\" I repeated. \"I fight your champion, you --\"\n\n\"We give you a drug that allows you to use your legs,\" another man said, his voice dripping with disdain.\n\n\"A reward that doesn't cost you a thing,\" I countered.\"\n\nCouncil exploded into rancor. Karsk hushed them up and asked me what I would prefer.\n\n\"My fifteen minutes of fame.\"",
        "\"I don't understand.\"\n\n\"An artist of my era said that one day everyone would be entitled to fifteen minutes of fame. I want mine. Fifteen minutes on your comm channel to talk to your people. To explain why I'm doing this. To let them know who I am.\"\n\nI was aware that it was an extraordinary request. At our picnic, I had asked Francesca if it were possible to communicate with all of the people on the planet. She had explained the existence of the comm channel, although she had never seen it used.\n\nCouncil excused me while they discussed it. I had them over a barrel, though. And it wasn't a request in which they could discern any immediate harm. They would activate the comm channel the following evening.\n\nI thanked them and joined Wizen, who had waited in the antechamber.\n\n\"What did you receive?\" he asked.\n\n\"Home field advantage,\" I answered.\n\nWe proceeded to the arena. Balloons trembled at the approach of my flychair. I reached 68 percent.\n\n**********\n\n\"So, get any?\" Allie asked me on Monday morning.\n\nI leaned back and laughed.\n\n\"How quickly do you imagine I work?\" I asked.\n\n\"The old Rick?\" she answered. \"The old Rick would still be pining over Shawn Michaels. This Rick? I wouldn't be surprised if you had a threesome over the weekend.\"\n\n\"In my dreams,\" I said with a laugh. Actually, I had had a threesome in one of my dreams. But that had been several weeks ago now.\n\n\"No,\" I continued. \"I just wrote. Take a look.\"\n\nI tossed the story to her. \n\n\"Rick you don't have to do this,\" she said, gesturing at the byline. By Rick Handley and Alison Coles.\n\n\"Read the rest,\" I said. \"Maybe you won't want it there.\"\n\nWe both knew that wasn't true. She grew more and more excited as she read the story. Rachel and Bill came in half an hour later and the two of us joined them in a conference room.\n\n\"This is great, Rick,\" Bill said after he had read it. \"Don't you have somewhere you're supposed to be in fifteen minutes?\"\n\n\"I don't think so.\"\n\nBill looked at Rachel and raised an eyebrow.\n\n\"Shit,\" Rachel said. \"You're officially the new statehouse reporter. I forgot to tell you.\"\n\nI stared at her.\n\n\"Sorry,\" she smiled.\n\n\"Bitch,\" I muttered. \"I can't make that briefing on time.\" \n\nThey both laughed.\n\n\"As long as you make tomorrow's,\" Rachel said. \"You can call up a buddy about today's. Now let's get back to work. It may eventually be a great article, but the middle part is too weak. Back to work, people.\"\n\nIt took until Monday afternoon to get it finished to the satisfaction of everyone in the chain of command. That left my Monday night free to do some writing of my own.\n\n**********\n\n\"People of Earth!\"\n\nIt had sounded a lot more impressive when I had practiced it in front of the mirror. Now it sounded hokey. I decided to press on.\n\n\"My name is Rick. Uh, Rick Handley.\"\n\nPerhaps a public speaking course in college would have been a good idea.\n\n\"This coming Friday I am going to do battle on your behalf against a creature called a Morling. The Morlings are from another star system and -- Jesus Christ! Is that a Morling? That thing is twenty fucking feet tall!\"\n\nKarsk had put me on a split-screen and flashed a picture of a horrible creature on the other half. It had green, scaly skin and a vaguely humanoid face with a wide mouth stretched in a sneer between two upward tusks. What would correspond to thighs on my body were easily as big as my torso. And it had four arms, an upper set that came from its shoulders and a lower set that grew from somewhere out of its back.\n\n\"You are a fucking son of a bitch,\" I muttered.\n\n\"You wanted them to have the truth,\" he said with a sneer of his own.\n\nI turned back to the camera.\n\n\"That's very true. I did want you to have the truth. Your Council believes that you would be better off never knowing about this fight taking place. If I win, life goes on as usual. If I lose, you all wake one morning to find yourselves living under alien rule, never knowing what your Council did, or could have done, to stop it.\n\n\"Where I come from we refuse to let our government tell us what was best for us. Freedom of the press, the freedom to find out what our government was doing and let everyone know about it -- is the single most important of our liberties. And as Benjamin Franklin, one of the founders my country, once said, 'They who would give up an essential liberty for temporary security deserve neither liberty nor security.' Thomas Jefferson, another founder, said, 'The press is the best instrument for enlightening the mind of man, and improving him as a rational, moral and social being.' I am a member of that press, and it is my job to tell the people what the government wants us to tell them and also what it does not.\"\n\nI glanced over at Karsk, who was clearly upset at the tenor of my little presentation. It was time to back off. For a little bit.\n\n\"But I'm not here to tell you how to run your society. I'm only here to help you try to keep it. And to do that I need you. The fight will take place this Friday in the former Rose Bowl. What I need is your hopes and prayers for my success. I need to know that you're pulling for me. If you can come and cheer me on, that would be even better. I'll fight better knowing that the people of Earth are behind me.\"\n\nThe rest of my little talk went pretty much along the same lines. A paragraph devoted to my handicap. Then a paragraph devoted to the need to study history. A section on the wonderful work done by Wizen to get me her to fight the Morling. Then a section on journalism.\n\nDuring the last part, the comm channel that I was using to monitor the broadcast went dark.\n\n\"You cut it off,\" I protested.\n\n\"Your fifteen minutes was up,\" Karsk said. \"Are you happy with your bargain, my friend? Giving up the use of your legs? Was your little speech worth it?\"\n\nIt wasn't a great speech. But I was still happy with my choice. I smiled at him as enigmatically as I could. I left the room, picked up Wizen, and headed back to the arena for another session of training.\n\nWe didn't speak along the way. But we did pass a man and his son. Their eyes remained on the ground until we got closer. But then the boy lifted his eyes to mine. He smiled. I winked at him. \n\nThat evening I scored eighty-one percent.\n\n\"Not too shabby,\" Ken said.\n\n\"Nope,\" I agreed.\n\n\"I was thinking about something. You know how I got injured?\"\n\n\"Something to do with glass and mirrors?\" \n\n\"I was wondering whether we could turn that to our advantage. If you were to throw your whip at the ground . . .\"\n\n\"Disarm myself?\" I asked.\n\n\"May I?\" he asked.\n\nHe reached for the whip and took it in his left hand. He thumbed it open and waited until he had a ten-foot rope. He turned suddenly and slapped it toward the ground. I cringed, waiting for it to snap back again and slice off his left arm. Instead, he thumbed it closed. As his earlier accident, it took but a single stroke to both glassify the sand and reflect the rope on its chosen path. This time, the free strand of rope flew upward, bursting one of the balloons directly in front of us.\n\n\"That's not too shabby either,\" I admitted. \n\n**********\n\nMy article appeared on Tuesday morning.\n\nOn Wednesday the Governor of West Virginia submitted his resignation to the Secretary of State. Lieutenant Governor Melissa Stewart was sworn in to take his place.\n\nOn Thursday, I was up to 93 percent efficiency with the laser whip. I decided to try Ken's trick. It worked well the first time. But I didn't quite thumb the control closed fast enough on my second attempt. I managed to duck quickly enough to avoid any injury to my arm. But I did feel my cheek sliced open. Blood trickled down my cheek. I turned back to Karsk and Slisken.\n\n\"I don't suppose either of you fellows has a Band-Aid?\" I asked.\n\n**********\n\nThe day of the fight was boring, at least in real life. The excitement of getting a new governor had settled down. She had appeared at Thursday's press conference herself, answering questions about her plans for the next two hours. She had impressed all of us with her knowledge and determination. But Friday morning she had given the podium back to Krissy. And Krissy, newly installed as press secretary, had transformed herself into the very model of an efficient, informed spokesperson. She screwed up only one tiny thing. She must have studied the manual overnight. This was going to be no fun at all.\n\nI spent Friday afternoon finishing the last of the obituaries that I had been assigned. On Monday morning, I would be the full-time statehouse correspondent of the Charleston Messenger.\n\n\"Well, I'm off to spend the weekend with Eric's parents. How about you? Headed for a bar to pick up babes?\" \n\n\"Right,\" I said with a laugh. \"Based on my byline in the paper?\"\n\n\"No.\" She shook her finger at me. \"Based on the fact that you've gotten so damn sexy in the last few weeks. Even today you look different.\"\n\n\"Lack of sleep,\" I said.\n\n\"That's not it. I mean, I can see that in your eyes. But there's something else. Something sexy.\"\n\n\"Thanks,\" I said with a smile. \"You're nice to say so, Allie. Maybe it's this unshaven look.\"\n\nI passed my hand over the stubble on my chin. I had been so focused on the fight when I woke up that shaving had completely slipped my mind.\n\n\"Or maybe it's that scar,\" she said. She waggled her eyebrows at me.\n\n\"What scar?\"\n\nMy fingers went right to it, though, even as I asked the question. Right to the scar on the right-hand side of my chin. The one that Wizen had said would always be there after he had healed it with some sort of electric gadget. I absent-mindedly fingered it as I stared off into space.\n\n\"So what are you doing this weekend?\" Alison asked.\n\nI felt a surge of energy coursing through me as I turned to answer her. I could see the change reflected in Alison's expression. Her eyes suddenly widened and she pulled back, as if I had suddenly grown larger. \n\nMy voice was firm and confident. I was conscious of a smile playing across my lips and a twinkling in my eyes. \n\n\"I'm saving the planet.\"\n\nCHAPTER SEVENTEEN\n\nRick Handley, time traveler. The warrior of the future. God, this was cool.\n\nRachel and Bill stopped by after Alison had left and invited me to go out for a drink to celebrate my new assignment this week. I declined. I didn't think it was a good idea for my long-term future at the paper to have my supervisors watch me grining like an idiot and touching my jaw all evening as if I had some sort of obsessive-compulsive order.\n\nThere had been hints all along that the whole thing wasn't a dream. For one thing, Wizen had explicitly told me that. As I had told Andy, however, that was exactly what I would expect a character in my dream to say. My teachers had always told me that I had an excellent imagination. I could have dreamed it up; that was well within the realm of possibility. Unlike the alternative -- the idea that the whole thing wasn't a dream: now there was something outside the realm.\n\nAs I ate dinner and watched a ball game on Friday, the realization that the fight would be real, with real consequences for both me and my descendants, slowly began to terrify me. The result was that when I finally did crawl into bed, I was much too excited to sleep. Halfway through my second sleepless hour of the night, I was suddenly struck with panic. What would happen if I didn't go to sleep at all? Would the Earth perish? Would my descendants be enslaved? I shut my eyes tightly, determined to keep them closed until I nodded off.\n\nThen I remembered that evening with Alison's friend Parker. Wizen had snatched me when I wasn't even asleep, when we were in the middle of foreplay. I didn't need to be asleep for that son-of-a-bitch Wizen to work his magic. \n\n\"Is something wrong, Richard?\"\n\nI blinked my eyes open. Wizen and Francesca stood side-by-side at the foot of the bed. \n\n\"Wrong?\" I asked.\n\n\"You seemed quite angry when you appeared,\" Francesca said. \"Perhaps he was just steeling himself for battle, Father.\"\n\n\"Right,\" I said. \"That must have been it. I see you guys are going formal, huh? You look great.\"\n\nBoth had exchanged their normal robes for more colorful attire. Wizen's robe was white, and decorated at all the edges with embroidered vines of a color green that I had never seen before. Francesca's robe was an exquisite pale blue with a velvet border on the collar and cuffs that most closely resembled fresh cream.\n\nThe robes stood in contrast to their somber expressions.\n\n\"You two look like you're going to a funeral,\" I cracked. It wasn't until I saw their eyes drop to the ground that I realized what I had said.\n\n\"Sorry,\" I mumbled. \"Poor choice of words. Any last-minute details, Mr. Wizard?\"\n\nCouncil had been in negotiations with the Morling fleet for the past day.\n\n\"Your chair has been slowed to that of a normal human run,\" Wizen said. \"And you will not be able to fly higher than the Morling's head.\"\n\n\"So nowhere near as high as one of its arms, huh?\"\n\nWizen's face took on an anguished look. \n\n\"Hey, it's no problem,\" I assured him. \"I get nauseous flying that high and that fast, anyway. Well, we'd best get this show on the road, huh?\"\n\n\"What would you like for your attire?\" Francesca asked.\n\nI looked down. I was in the plain tan robe that they usually dressed me in when I arrived.\n\n\"How about a pair of jeans?\" I asked.\n\n\"Jeans?\" Wizen said. \"What are jeans?\"\n\nHe turned to Francesca.\n\n\"Do you know anything about jeans?\" he asked her.\n\nHer blush was exceptionally becoming. Evidently \"jeans\" were in fashion only among the younger set. She waved her arm and my robe was gone, replaced with a nice, tight pair of Levis. \n\n\"And on top?\" she asked, gesturing at my naked chest.\n\n\"I think we'll just leave it like this,\" I said. I was as proud of my pecs as I was of my arms. Rambo had nothing on me. Other than functional legs of course.\n\nI brought the flychair over and climbed in. Together we proceeded down the corridors. I could tell that something had changed immediately. We passed another boy, this one walking with his mother.\n\n\"Good luck, Rick!\" he called out. \n\nHis mother quickly hushed him but gave me a shy smile as we passed. \n\nI knew exactly where Francesca turned away every time she escorted me to the arena. When we passed it this time, still three abreast, I stopped in mid-flight and turned to her.\n\n\"Your cheering section may be small,\" she said before I could speak. \"But we will do our best to be loud.\"\n\nBut it would not be small either. Even from underneath the Rose Bowl, in the tunnel where I was to make my final preparations for the fight, I could feel the crowd in the seats above me. It was not that they were noisy -- these people were not experienced spectators -- but that their hopes and fears were nearly palpable.\n\nKarsk, Slisken, and Ken awaited me in the room that led to the floor of the arena. They were standing with another flychair.\n\n\"We have prepared this one for you,\" Karsk said as I approached.\n\n\"He prepared it,\" Ken said with disgust. \"I had nothing to do with it.\"\n\n\"Because?\" I asked Karsk.\n\n\"The bottom is mirrored,\" he answered with a sly smile. \n\n\"And it responds to my brain, like this one?\" I asked.\n\n\"Yes,\" Slisken said.\n\nThe chair rose and dropped in response to my commands. And then it flew toward the wall, slammed into it at full speed, and dropped to the floor, utterly useless.\n\n\"I like this one,\" I said. \"But thanks.\"\n\nKen offered me his hand.\n\n\"Good luck,\" he said.\n\n\"Thanks, pal.\"\n\nSlisken and Wizen bowed toward me and wished me well. Francesca stepped forward and kissed me on the cheek.\n\n\"Thank you, Rick,\" she whispered.\n\nOnly Karsk stood between me and the door.\n\n\"On behalf of Council . . .\" he began formally.\n\n\"Oh, tell Council to fuck off,\" I said. I turned and winked at my friends and then flew around Karsk to open the door.\n\nI flew into the arena. The cheer from the crowd deafened me. The sunlight blinded me. And then just as quickly the crowd went silent. I knew the reason why. The Morling had entered from the other side. As my vision cleared, I saw him lumber toward the center, his mouth curled in its perpetual sneer. He played his light whip from side to side, as if to ensure me of his mastery.\n\nI did the same as I flew to meet him. I wanted to let him know that he was in for a fight. I reached the center first, of course. The only advantage that we humans appeared to have over Morlings was our speed. That probably went along with our flight reflex, which was doing its best to overcome my training and courage.\n\n\"The chair has been explained to you?\" I yelled as he closed to within twenty feet.\n\n\"Yes.\" His voice was a hoarse bass. Green saliva dripped from his tusk-filled mouth as he spoke. \"It runs away at the same speed as Earthers. It will not help you, Earther.\"\n\n\"Perhaps not,\" I said with a smile. \n\nI sent the chair into a flip to the right at the precise instant that his lower right arm came forward -- the one he had held behind his back, and to which he transferred the whip in one smooth motion.\n\nIt was a standard Morling trick. Right out of the Morling whip-fighting handbook, so to speak. It was not until after my broadcast that it had occurred to either Ken or I that Council would have film of the earlier Morling fights. It had not occurred to Council that it might be important. They didn't have Ken's experience with fighting, however. They also didn't have my unshakeable faith in the infallibility of video replay.\n\nThe first fight was of little use to me beyond exposing the Morling's opening move. He whipped out his lower right arm and the whip neatly cut his opponent in half just below the torso. \n\nThe second fighter had at least been prepared for that move. He had ducked and rolled. He had struck out with his own whip. And a surprised Morling had not moved fast enough to avoid the lash. But the wound was not close to mortal. A few thigh scales fell to the floor of the arena. And then the Morling had begun to hunt.\n\nHe had stalked his opponent across the floor, forcing him into a corner where he could easily cut off the human's escape. The human had retreated, completely negating his speed. Instead, the fight had become a matter of the Morling's far longer reach. The human could grow his whip, but the longer it got, the harder it was to control. The Morling's victory had taken considerably longer this time -- seven minutes -- but was just as certain. In the end, the ugly thing had stood over his second victim and beat his chest in triumph.\n\nAs I rolled away in anticipation of the Morling's first strike, I heard his whip whistle by my face, something which my training had never simulated. I lashed out with my own whip and watched it miss by a good five feet.\n\nThe fight was on.\n\nKen and I had decided that I needed to take advantage of the one benefit that the flychair conferred on me: unlimited stamina. Unlike a legged human, I could move constantly, darting in to strike and then moving out to present a smaller target. We had learned, as the Morlings no doubt had known for centuries, that the whips had a break-even point. That was the setting at which the production of new light almost matched the disappearance of the light at the tip. So there was always an optimal distance at which to use the whip. Because of the difference in the length of our arms, that distance was closer for me than it was for the Morling. \n\nNow all I had to do was actually hit him with the whip.\n\nThat was proving harder than I would have imagined. The Morling was almost a stationary target. It was way bigger than any of the balloons I'd been destroying. But I had to spend so much time playing defense that my offense suffered. I decided to retreat for a moment to settle my nerves.",
        "My flying backward emboldened the Morling. His mouth widened into what his fellow Morlings probably took to be a smile. To me it just looked like a way for him to drool more.\n\nHis whip lashed out again but I was just out of range. He took a plodding step after me and struck at me again. As I ducked to the right, I realized that he was fighting the last fight he had had against a human. The human retreated, the Morling followed, and victory was his.\n\nNot this time, Charlie. I retreated a little more and he chased me. Then I suddenly sent the chair forward at its highest speed, aiming just to the left of his chest. Before he could react, I had passed flown his upper and lower arms. I turned as I flew by, judged the distance, and snapped my light whip. I heard his bellow and the roar of the crowd before I noticed his lower right arm lying on the ground. I had severed it at the equivalent of the elbow.\n\nIt hadn't been a bellow of pain, though, but one of rage. Evidently these Morlings didn't injure easily. That would be a problem. Another problem would be the ease with which he retrieved his whip. He reached down with his lower left hand and grabbed the cylinder that had fallen to the ground. The fucker was ambidextrous.\n\nI was stunned to learn that, so stunned that his next attack caught me unprepared. He cracked his whip as he turned around. I rolled to the side but not anywhere near in time. The tip of the whip grazed my upper left arm, tearing open a piece of the skin. \n\nThe crowd gasped and I was could see, out of the corner of my eyes, that they had leapt to their feat. The pain was nearly unbearable and I was sure that when I looked down I would find the arm bloody and mangled. But the cut was neat and virtually bloodless. The whip had apparently cauterized all of the blood vessels that it had severed.\n\nThe Morling completed his turn and opened his remaining three arms wide as he roared at me. I decided that it was time to implement our plan. I retreated again as I circled the whip around my head. When I judged the distance right, I brought it straight down toward the ground.\n\nMy timing was perfect. I clicked off the light flow at the precise instant needed to send the rope hurtling toward the Morling. My aim was perfect. It flew straight toward his face, a 10-foot snake of writhing light.\n\nBut my luck had run out. The Morling had taken another step toward me and had stumbled over his own arm lying on the floor of the arena. He nearly went down to his knees; it was low enough, at any rate, to allow the light rope to sail harmlessly over his head. He staggered forward and once again I learned that I had been too slow to react. As the whip rushed toward me from overhead, I turned a somersault to the right. \n\nThis time, he had taken that into account. I heard a sickening scream of metal as the whip sliced through the bottom of my chair. I lost power immediately and began tumbling toward the ground. The crowd gasped again. And as I saw the ground rising to meet me, I held out my hands in a futile attempt to brace my fall. The last thing I remember thinking was that a mirror on the bottom of the chair would have been a very handy thing to have.\n\nCHAPTER EIGHTEEN\n\nI was probably unconscious for no more than a minute. It was long enough for the Morling to move astride me, standing there and beating his chest as if he had just slain a dragon. I was aware that my left arm was broken. It had evidently taken all my weight along with that of the flychair. The flychair now pinned me to the ground. My right arm, which still gripped the still functioning light whip, appeared to be undamaged. \n\nI pushed the thumb control forward as the Morling began his usual victory oration. His head was directly above my own, so that as he spoke, he showered me with his hideous spittle.\n\n\"Finally,\" he said, \"a worthy foe. I congratulate you, Earthers, for finally selecting a true competitor. I honor this human.\"\n\nHe paused, evidently looking around the arena to share his triumph.\n\n\"He has lasted longer against a Morling than any being in known space.\"\n\nThat was small consolation, in my view. I tested my left arm. It hurt like hell, but the fracture wasn't compound. Blinking through the agony, I felt myself lifting the chair up off me. I was never going to be able to push it off all the way; my hope was to simply gain enough room to let me roll over.\n\n\"The story of his death will be told on planets across the galaxy.\"\n\nAlso very kind of him. I turned my body to the right, hoping to roll onto my back. At the same time, I could feel the closeness of his hand. He entwined what passed for fingers in my hair. He pulled me even closer to him. Perfect, I thought. Just let him hold me up for another second or two.\n\n\"I shall mount his head upon my wall of honor.\"\n\nThe hell you will. I whipped my right hand, along with the whip, beneath my body. The whip followed. As I twisted myself in his grip, I sent the whip toward his head, my one last chance to snatch victory from the hideous tusked jaws of planetary defeat.\n\nI had miscalculated. As usual. The whip was far too long to pick up any speed. It was far too long to do any damage. He made no effort to get out of its way. He just stood there, his head no more than ten feet above mine, his greenish saliva dripping into my face and eyes, and let the light rope coil around his neck -- once, twice, and then a third time.\n\nThe Morling caught me in his gaze and raised his light whip above his head to deliver my death blow. He sneered at me. I smiled at him. Then I flicked my wrist to try to free the whip from his neck. I felt it tighten around his neck more than I saw it. What I did see, quite clearly, was his head separate from his body and fall toward me. Followed, very quickly, by the rest of his body.\n\n**********\n\nI woke up in a room that I had never seen before. I was lying in an extraordinarily comfortable bed. That alone suggested I was no longer in the future. Wizen's bed had been cold and metallic. This was soft and plush. The rest of the room was equally plush. The walls were a painted a rich red. The floor was carpeted -- carpeted! -- with what appeared to be a thick blue pile. There were two ornate oak doors, one at each end of the room.\n\nFor a minute I entertained the idea that perhaps I had died, and that heaven was actually a bordello. Sweet. But then I glanced to the corner and saw my flychair. I hadn't died after all. I summoned the flychair and was quite surprised to find myself completely free of pain. My left arm felt weak but moved freely. Even the tear on my shoulder had been repaired.\n\nAs I climbed into the chair, one of the doors opened. She walked in with a radiant smile that I had also never seen before\n\n\"Francesca!\" \n\n\"Rick,\" she said. \"The physicians tell me your recovery is complete.\"\n\n\"The arm?\" I asked. I waved it in the air. \n\n\"It will take a while for the muscles to recover,\" she said. Then she grew serious. \"We tried to repair your legs but the atrophy was far too great. Apparently our drugs only work on a more recent injury. I am sorry, Rick.\"\n\n\"I'd already bargained that away, Francesca. Apparently I'm an even better negotiator than I knew.\"\n\n\"But the rest is fine, \"she continued. \"The broken jaw, the shattered cheekbones, the broken femur, the ruptured spleen.\"\n\n\"Shit,\" I said. \"I thought I'd done pretty well.\"\n\n\"You did most wonderfully well, Rick Handley.\" Francesca practically glowed with happiness. \"The Morlings have kept their word and departed. You are healed and well enough to joke with us. Please accept my humblest thanks for the service that you have done us.\"\n\n\"Eh,\" I said, waving a hand at her. \"It was nothing, ma'am.\"\n\n\"It was very much indeed, Rick. It has been decided that when you were healed, you would be greeted by twenty-six virgins.\"\n\nShe clapped her hands and a parade of girls, each more beautiful than the next, began to stream out of the door she had left open when she entered. I met Alessa, Branay, and Caskie. I met Karrsten, Lessar, and Minkala. I met Weslin, Xandra, and Yassmin. They filed past me. The first three shyly shook my hand. The next girl, Dmeter, was slightly braver and kissed my cheek. After Natal, they turned into full mouth kisses. By the time Trenya pushed her tongue between my closed lips, I was completely unaware of anything else. When I was finally able to look up, I was a little surprised to see Francesca ushering Zarras back out of the room through the other door.\n\n\"That was it?\" I said. \"Just a greeting?\"\n\n\"You expected more?\" Francesca asked, once again filling the room with that musical laugh. \"You are a greedy man, Rick Handley.\"\n\n\"I am,\" I admitted. \"Plus I was shorted.\"\n\n\"Shorted?\" she asked.\n\n\"There were only twenty-five,\" I said. I looked toward the open door, waiting for the final virgin.\n\n\"You counted?\" She laughed again.\n\n\"Well, no,\" I answered, still looking toward the door. \"They showed up in groups of five. Five groups, five each, all alphabetical.\"\n\n\"And which letter did you miss?\" she asked.\n\nIt took me a minute to figure it out.\n\n\"F,\" I said slowly. \n\nI turned to look just in time to see Francesca drop her gown to the floor behind her. She stood there, her blonde hair framing a face that I could not believe I ever thought unattractive. She was beautiful. Her body was perfect, from the smallish cherry-tipped breasts to the long, exquisitely muscled legs.\n\nThere was only one thing lacking: confidence. There was a look on her face that I was used to seeing only in a mirror. The last three women whom I had \"dated\" -- Parker, Angie, and Shawn -- had confidence in abundance. They knew exactly what effect they had on men.\n\nFrancesca simply had no idea. As I paused to drink in her beauty, I became aware of a doubt flashing across her face. And I still couldn't bring myself to speak.\n\n\"No?\" she whispered. A tear formed in the corner of one of her eyes.\n\nI held out my arms to her.\n\n\"Most definitely yes,\" I said.\n\nShe ran across the room to me.\n\n\"Are you sure,\" I asked as she came to a halt in front of me, \"that you don't want to save this for a man you --\" \n\nShe quieted me with a finger across my lips.\n\n\"I have saved it for a man I will love forever,\" she said.\n\nI looked up at her and opened my mouth. I slowly sucked her finger between my lips and watched in awe as she closed her eyes and trembled.\n\nI put my arms around her waist and pulled her to me. She tumbled into my lap and began to kiss me with passionate hunger. I kissed her back, with the profound gratitude I felt for the gift she was giving me, and with the sheer raw joy I felt to still be alive.\n\nWe were an odd couple: a virgin in her late twenties who had no clue what to do; and a paraplegic whose only sexual technique involved the use of an arm that didn't quite function properly. We spent the night laughing, crying, teasing, touching, and ultimately loving. By the end of the evening, we fit together perfectly. It was the most special night of my life. Our parting the next morning was far more bitter than it was sweet.\n\n**********\n\n\"So how'd that saving the planet thing go?\" Alison asked when she arrived at work on Monday morning. Her tone was just what I needed to bring me down to Earth.\n\n\"Just fine,\" I said with a shrug. I rapped my hand on the desk of my cubicle. \"Knock on simulated wood veneer nothing else happens while I'm gone. How were the prospective in-laws?\"\n\n\"Not quite as far away as I'd like them,\" she answered. \"I suppose it's normal to have doubts about getting married, isn't it?\"\n\n\"Sure,\" I said. It occurred to me that they didn't usually follow this closely behind the engagement but it wasn't my place to say that. Allie was smart. Smart enough to trust her heart.\n\nWe chatted about this and that for another half hour before I had to leave for the week's first press conference. As everyone had expected, Betsy Day would not be returning to her job. Krissy introduced her replacement and invited me to ask the first question, wholly unaware of the irony of her suggestion.\n\n\"I'm sure you'll do an excellent job, Ms. Dalrymple,\" I said in lieu of a real question.\n\n\"Please, Mr. Handley. Call me Suzanne.\"\n\nA mocking \"oooh\" drifted forward from the back of the room.\n\n\"Don't mind them, Suzanne,\" I said, raising my voice above the din. \"They're a very jealous bunch.\"\n\n\"I'll keep that in mind,\" Suzanne said. Her eyes were dancing. \"Does anybody have any actual questions?\"\n\nThere were a few questions. There would always be a few questions. They were innocuous. They produced innocuous answers. It would be that way for the next year. \n\nIn fact, the next year turned out to be an incredibly boring time to be on the statehouse beat. Our new governor was almost too good to be true: ethical, competent, inspirational, empathetic. And on and on. We spent a few months trying to prove that it wasn't true, but in the end we all gave up. The state had gotten very lucky.\n\nI won a couple of newspaper awards, although the Pulitzer eluded me. I tried to turn the ones I did get into jobs with bigger newspapers in Pittsburgh and Cleveland. I made it to the interview stage both times. \n\nI did date during the year. I even dated Suzanne, but we had too much history together. \n\nI made love a few times. I even had a \"relationship.\" She dumped me in the spring. She said she needed more adventure in her life. It wasn't me, of course; it was her.\n\nSo I didn't have a date for Alison and Eric's wedding. I was one of Eric's groomsmen -- a bargain for making Eric's sister one of Allie's bridesmaids. Allie had gone back and forth with her doubts. In the end, though, she had decided that she loved Eric and that she wanted nothing more than to be his wife. I supported her as best I could. \n\nThe wedding was lovely. Aren't they always. Angie was her sister's maid of honor. She brought a boyfriend who wasn't Brad Pitt but who was pretty damn close. Still, she did me the honor of a turn on the dance floor while she sat in my lap on the wheelchair. I danced with Alison. I danced with Rachel. Rachel even invited me out afterward for a drink. I declined. Rachel was a beautiful woman, but I had come to realize over the past year that none of the women I had met were \"it.\" Maybe that was why I had only had the one relationship.\n\nSam was waiting to pick me up when the wedding ended. He drove me back to my apartment. I wheeled myself over to the couch and just sat there in my tuxedo and bow tie.\n\n\"Bring me back, Mr. Wizard,\" I murmured. \"Back to the future.\"\n\nI closed my eyes and smiled. Another movie. I really had to start reading more books.\n\nI felt a change in the air and blinked my eyes open. I was lying on Wizen's bed again. The room was quiet, except for the hum of the machinery that Wizen had built to transport me through time. Neither he nor Francesca was around. But there in the corner was my flychair. It came when I summoned it as if it had only been a day since I had left and not a year.\n\nAfter I found nobody at home, I flew into the corridor. I met a man almost immediately. He was wearing a particularly fine robe of pale blue. His friendly brown eyes found mine almost immediately. \n\n\"Rick Handley,\" he said in an astonished tone. He thrust his hand toward me. \"I am Petrous. It is an honor to meet you.\"\n\n\"Hi,\" I muttered. I was equally astonished. No one had even been honored to meet me. No one had ever offered to shake my hand in this era. It felt strange.\n\n\"You are puzzled by the handshake,\" he said.\n\n\"Yes,\" I answered. I nearly jerked my hand back. A mind reader?\n\n\"Ever since your speech I have devoted myself to the study of history. It is fascinating. I have done my best to revive this custom. Thank you so much.\"\n\n\"Uh, sure,\" I said. \"No problem.\"\n\n\"It was a year ago today, was it not? Your victory over the Morling?\"\n\nI thought for a moment. It was indeed exactly a year.\n\n\"You have come for the ceremony, I do not doubt,\" he continued. \"They will be pleased.\"\n\nI followed him down the corridors to a large room. He found a seat and I hovered at the back.\n\nI found a hard lump in my throat when I finally realized what it was. Francesca stood at the front in a robe of pure white. Wizen stood next to her and next to him was a kindly looking man with his arm raised as if in blessing. On his other side were three people: two men and a woman.\n\nFrancesca held something in her arms. I heard a cry and she lowered her head to look and whisper. It was a baby. This was a christening. One of the men must be her husband. Perhaps the beautiful young man with whom she would have been licensed to have two children waited for her all this time. That would make the other couple the child's godparents. I found myself trembling but it was too late to leave now.\n\n\"And the name?\" the man in the middle, now quite obviously the priest, asked Francesca.\n\n\"Rick,\" she said. \"Rick Handley.\"\n\nThere was a murmur of approval. The priest smiled. I couldn't help but smile myself. Naming their son Rick Handley Whatever was a very nice thing to do.\n\n\"Then I name thee --\" He paused. \"No middle name? Petrous tells us that the custom was to have three names.\"\n\nFrancesca turned to her father with a look of despair.\n\n\"I don't know,\" she said. \"Father, I don't know his middle name.\"\n\nWith a start, I realized that she was talking about me. She wanted to know my middle name. Handley wasn't going to be his middle name. It was going to be his last name. I found myself unable to breathe. This was my son.\n\nFrom deep within me, I summoned the strength to command the wheelchair to rise. I cleared my throat and spoke.\n\n\"My middle name is Fort,\" I said. \n\nThe entire gathering turned, their faces stunned.\n\n\"It's a family name,\" I explained. \"But I would be honored if he could have Wizen as his middle name.\"\n\n\"Rick!\"\n\nAs carefully as she could, Francesca thrust the child into her stunned father's arms and took at a dead run toward me. Only the anti-gravity device in the chair prevented us from both from tumbling backward as she jumped into my lap and began kissing me. I kissed her back, although perhaps without the same passion.\n\n\"Is something wrong?\" she finally asked.\n\n\"Not at all,\" I said with a smile. \"May I meet your husband?\"\n\n\"My what?\"\n\n\"Your husband. The beautiful young man you married.\"\n\nI gestured toward the front of the room. She looked and then burst out laughing. \n\n\"Rick Handley,\" she said. \"Did I not say I would love you forever?\"\n\n\"Well, yes.\"\n\n\"Those are my friends. Our child's two godfathers. We thought it best since his real . . .\"\n\nShe began to cry.\n\n\"Since his real father was lost in the past.\"\n\n\"Why didn't you tell me?\" I asked. \"Why didn't your father summon me?\"\n\n\"My father has never summoned you, Rick. He merely created the channel by which you came. It has always been your choice.\"\n\nBy then Wizen had joined us in the back of the room. He cradled our son in his arms.\n\n\"We left the channel open after you returned home,\" he said. \"In case you wanted to visit.\"\n\n\"But the power,\" I said. \"You said it took an enormous amount of power.\"\n\n\"We persuaded Council to adopt our suggestion. We -- what is the expression? -- petitioned them for the redress of our grievances.\"\n\nI smiled and buried my head for a moment in my darling's shoulder. It was another minute before I could speak again.\n\n\"Forever?\" I asked softly.\n\n\"For all time,\" Wizen said. \"So you may come and go as you please.\"\n\n\"Thank you, my friend.\"\n\nWizen accepted an old-fashioned handshake. Then he handed me my son.\n\n\"You will stay?\" Francesca asked. \"For a while?\"\n\n\"I will stay,\" I said. \"Take my place at the christening. Play with my son. Probably fall in love.\"\n\nI raised an eyebrow at Francesca to see the tears rimming her eyes and the smile on her face grow even larger.",
        "I looked over at Wizen.\n\n\"After that?\" I said, playing with Ricky's chubby little finger as I pondered the question. \"I'm thinking of starting a newspaper.\"\n\n*\n\nMy thanks go out, first and foremost, to my editor, Hermit, without whom this would be a far poorer, and far more poorly written, story. My thanks also to those of you who have read the whole story, and particularly those who have sent me e-mails encouraging me, e-mails gently pointing out errors, both typographical and substantive, and even e-mails disagreeing with my choice of words or plot. I have read them all. Now that this story is finished -- the first multi-chapter \"saga\" I have finished in the past year -- I would love to hear from even more of you. Please let me know what you thought. Thank you. Marsh "
    ],
    "authorname": "MarshAlien",
    "tags": [],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/what-feats-he-did-that-day-pt-05"
}