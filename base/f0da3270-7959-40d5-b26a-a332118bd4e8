{
    "title": "Trust Ch. 04",
    "pages": [
        "The tension between Russ and Iona was subtle and hardly detectable by others. To dwell on what had occurred was advantageous to no one. Of course, there was nothing that escaped the eyes of Brenna. She saw the looks and noticed the new formality between the two. The first moment of opportunity found Brenna scolding Long Sword.\n\n\"I hope that you are satisfied with your betrayal, to both Iona and to the brother you love. Must you complicate matters further?\" Brenna said to him.\n\n\"I need no comment from you to define my errors,\" Long Sword replied, turning his back to her. \"Kieren may seek your advice; I need none from you.\"\n\n\"Your actions prove differently and...\"\n\nHe had spun around as soon as the words left her lips.\n\n\"Then do not concern yourself with my actions.\"\n\nThe look in his blue eyes was cold, but it did not hide pain. \n\nBrenna placed one hand on the man's forearm. \"Your disrespect disheartens me Russ.\"\n\nRuss looked down at the old warn hand and then into the woman's eyes.\n\n\"That is and has always been a choice that is yours to make.\"\n\nBrenna flinched. Within the hollows of her heart, she felt concern for this man on the cusp of greatness. His words cut deep. His knife was sharp. \n\nIona had no knowledge of what she had said in the height of her gratification. However, guilt did lay its claim. But, the one she pined for had no use for her. She belonged to no one and owed no man her loyalty. Russ had given her something she had never known. For the first time, Iona had experienced a man whose goal was to please. His pleasure came from giving her pleasure. Her body had never felt so alive. That in itself was a gift. \n\nRuss continued to attend to her, but he was careful never to be completely alone with her or too intimate. He vowed to never let what happened between them happen again. He knew now that Iona could never truly belong to another. Her inner self, the one that laughs at both the mind and body belonged to Kieren. He had only touched her body and teased her mind, but he would never have her heart. She truly was in love with his brother. \n\nToo, Russ felt that he had done no wrong and the result of his actions hurt no one but himself. The relationship he shared with his brother could not easily be put into words. It encompassed every corner of his life. Resentment could never spread root between them. Iona's reaction only fed his devotion to Kieren and assured Russ of what he had discerned long ago. His brother was a man unrivaled. \n\nOne day Iona was left to entertain herself. There were things that often required Russ' attention in Kieren's absence\u2014more so now. He never discussed them with her. Iona was more than aware that men often shared things with one another that were not suitable for the ears of women. Some things were better left unsaid and unseen. \n\nStill, on those days he was missed and Iona was left to her own boredom.\n\nShe knew that a guardian for her was somewhere. Russ still refused to leave her completely alone. He simply chose his replacements well. A frustrated Iona could never pick them from the crowd. \n\nAfter completing her chores, she wandered around the market. Changes in the weather brought changes all around her. As her feelings of freedom expanded, she grew increasingly curious. \n\nThe warmer weather brought an influx of new and interesting faces. The village was a center of trade. Everything was available. Iona liked to walk around and discover. Beautiful yards of colored cloth and glittering baubles interested her most. She loved the way they showed against her golden skin.\n\nHowever, her search ran deeper than just vanity. She hoped to one day find the cloth that her life was exchanged for. She would never forget the shade of it or the sheen of its surface. A promise had been made. If there was a way to purchase such cloth, she would. Iona knew that it would only be a symbol; but, she would have all of it and not just a portion. Iona would rub it across her cheek to feel its fine quality. She would smell the colorings. She would remember. Then, with great satisfaction, Iona would watch it burn. The scent of its destruction would fill her nostrils. Just like the rising smoke, Iona's hurt would float away. She would forget. She would truly be free. She would become a master of self.\n\nAt least, that is what she hoped for.\n\nAlong the perimeter of the market was an unusual stand. The market was ruthless when it came to unspoken assigned territory. This stand was obviously unwelcomed. They had not completely packed up, most likely hoping to attract customers as the others closed. Russ usually paid for her purchases in the market square. Iona had never thought of obtaining her own currency or creating crafts to trade. Sometimes she accompanied Brenna. Brenna had no time for what she found unnecessary. Gunner was impossible to shop with. To him, the glistening of tempered steel was the only beauty to be found in this world. \n\nThe owner of the stand was immediately happy to receive her and smiled as she fingered some items. To be given kindness from a merchant that was unfamiliar with her situation was a rarity. Generally they were drenched in their superstitions. Some thought her to be dishonest and without the means to purchase. Others believed her to be the sign of bad luck. But this graying old man let her look freely and turned away from his packing to show her special items.\n\nSuddenly from behind the thick cloth that acted as a backdrop for the stand, a man emerged. Iona dropped what was in her hands. \n\nThis man was as tall as Kieren but not as muscular. His clothing was unusually draped across him. Kieren chose to be close shaven; this man wore no hair at all. The sun reflected off the curve of his bare head. He wore markings on his face and he was the deepest shade of darkness Iona had ever seen. \n\nThe sight of him made her catch her breath and bring her hand to her chest. She had run into two or three that could possibly be of her kind. Each had been so unique that she felt no connection. Iona was pale compared to this man and found his darkness remarkable. \n\nHe bent low in recognition and smiled as he rose. His teeth were blinding against the darkness of his skin. He then moved towards Iona. \n\nWrong move.\n\nHe almost stepped into the tip of Long Sword's blade, the point of which stood at the dark one's throat and was more than ready to fulfill its purpose. The two men stood eye to eye, with Iona safely placed behind Long Sword. \n\nLong Sword was smooth and swift with his movements; Iona had barely blinked an eye and found herself facing Long Sword's broad back.\n\n\"Careful Moor...\" Long Sword said in a voice so threatening it made Iona shiver. \n\nIona placed her hand against his back to keep her balance. Long Sword was perfectly still, his body tight and ready to spring. If his expression was anything like the sound of his voice, the man of darkness had much to fear.\n\n\"Your value means nothing to me Bl\u00e5menn. To kill you would require little effort and give me great satisfaction.\"\n\n\"He is mine,\" the shop keeper nervously intervened. \"He means no harm to the girl. He is gentle of nature and merely curious.\"\n\n\"Must I repeat myself to you peddler?\" Long Sword challenged, revealing a dagger in his other hand. \"Your value means little to me as well. On this day you too could easily lose your life.\"\n\nGazing at Long Sword without fear, the man of darkness stepped back and bent slightly as an act of submission.\n\n\"Please,\" the shopkeeper begged, \"what must I do to make amends for this offense? Maybe this most valued slave desires something that I offer? Anything is hers. She has only to point it out.\"\n\nLong Sword put one of his well-aimed weapons away. The other stayed steadily aimed at the so-called Moor. \n\nIona had always known that Long Sword hid his armaments as did his brother, but had never seen them aimed to kill\u2014maim maybe but not kill.\n\n\"There is nothing you can trade for her discomfort,\" Long Sword growled. \"And, she is no one's slave. There are no slaves here and your pet is held responsible for his own actions.\"\n\nIona tried to peek around Long Sword, but the way he positioned himself made it impossible to see the dark one. But, from her position she could clearly see the shopkeeper's fear.\n\n\"Forgive both of our transgressions,\" the shopkeeper pleaded.\n\n\"I'll spare you and this poorly trained companion only once. If he so much as looks upon her face, you will leave this place alone and your body marked to hold the memory. You will forever thank me for each breath you take. Is this fully understood?\"\n\n\"Yes, Yes,\" the shopkeeper said. \"I thank you for your compassion.\"\n\n\"There is no compassion here old man. I keep to my word.\" \n\nThen to the Moor he warned, \"It is her I wish not to frighten with your blood. She will not save you if there is a next time.\"\n\n\"Then I owe the one that is not your slave great gratitude,\" the dark one spoke with a voice that rumbled.\n\nThe sound of the man's voice addressing Long Sword directly brought a new feel to Russ' body. Iona rubbed it soothingly to let him know that she was still there.\n\n\"Fuck your gratitude,\" Long Sword spit out.\n\nLong Sword did not like the way the Moor returned his stare or how he dared to speak to him directly. He felt in his gut that he would eventually end this man's life. He would do so gladly. It was true when he stated that Iona was the only reason the man lived for now. He would have pushed his sword through the man's neck and gutted him without hesitation if it were not for her. \n\nRuss was a man of few prejudices. The color of one's skin held no significance to him. There was good and there was bad to be found in all. However, he recognized the markings of this Moor's people. They were well trained mercenaries, slaves to no one. Russ had fought them successfully. However, they were formidable enemies and not to be trusted. Their idea of honor was no honor at all. It was important that Iona understood that this Moor was not of her kind.\n\nIona had not heard or felt a few of Kieren's men gathering behind her. They were as unified on land as they were at sea. Although not positioned like Long Sword, they were equally ready and equipped to inflict great pain. One grabbed her to pull her closer to safety. Iona jerked her arm away from him. She would not be treated like a helpless child. \n\n\"Iona,\" Long Sword demanded. His voice steadied her and she move between the two men that stood closely behind Russ.\n\nThe men fell in step only after Long Sword safely removed himself and Iona. He held on to Iona's arm tightly, practically dragging her along as he moved with speed. His threatening disposition did not fade as he made his way to the Longhouse. Stragglers moved swiftly out of his way without complaint. Everyone watched. Iona briefly saw bitter jealousy cross the face of Astrid\u2014who seemed to always pop up to witness any kind of humiliation thrown Iona's way. In others she saw fear. She could feel the effort she had put into fitting in disappearing with every step. \n\nOnce home, Long Sword swung her around so that she faced him. \n\n\"What possessed you to wander off?\" he asked her, his voice having changed considerably. \"You wear no head covering and your shift is too thin.\"\n\n\"The day was warm and I finished my duties early. I only wished to look upon the dry goods,\" Iona explained.\n\nIona reached up and placed her hand on the side of Russ' face to be sure that the man that now stood before her was indeed the man she held dear. \n\nThe shift in Longsword's mood was palpable. Once again he was the man she recognized. He placed his hand on top of hers and their eyes locked. \n\nIt was Gunner's dogged entrance that broke the trance.\n\n\"She should wear Kieren's mark so that she is easily identified,\" he roared.\n\n\"There is no one here that does not know that she is Kieren's,\" Russ calmly replied.\n\n\"The mark is for those who dare not know.\"\n\nEach one of Kieren's men wore a raised mark on their arm, just below the curve of the shoulder. Some men wore two, one on each arm. Gunner, Russ and a few others wore three. The third was over the heart. Iona knew so because she watched the men practice their art from time to time or while shirtless and playing their violent games. \n\nRuss found her interest in such things distasteful and discouraged her voyeuristic tendencies, answering no questions when it came to the matter.\n\n\"And where shall we put such a mark. She could never withstand the ceremony of a warrior,\" Russ said in a sad, low voice\u2014his eyes never left hers. \"She would simply find it to be a mark of ownership.\"\n\n\"Then we will have something made to clearly identify her as a member of Kieren's household. And, she must never remove it.\"\n\n\"She is entrusted to us,\" Gunner then roared once more.\n\n\"We protect what is ours,\" Russ said in a softer tone. \n\n\"Off with you,\" Gunner told her. \"Your growth on my ass grows bigger.\"\n\n\"The roundness of mine remains,\" she added, leaving.\n\nThis caused Gunner to forget his anger and laugh heartedly.\n\nRuss watched her go in the direction of her own quarters.\n\n\"Why did you not kill him,\" Gunner demanded.\n\n\"She was too close; she would have worn his blood. I could not have that. There is innocence in her.\" Long Sword returned coldly.\n\n\"She has seen men die before.\"\n\n\"Not because of her and not while wearing their blood.\"\n\n\"You'll only kill him later. I see that in you.\"\n\n\"I know. My senses demand it and my sword weeps for his blood.\"\n\n********************\n\nAs Iona lay in her night shift, Brenna began to speak to her in a hushed voice.\n\n\"Long Sword would have easily shed blood for you today. All of them would. The displeasure of Kieren hangs heavily over their heads. It is their honor they protect. Never forget that these men are Kieren's for a reason. One of them would be like ten belonging to another, especially the ones responsible for you. They are trained to endure much. They are willing to sacrifice much.\"\n\n\"Do not misinterpret the nature of Long Sword. Act wisely,\" she continued. \"Men and men like him are designed for the fight. They grow restless by the day, hungry for it.\" \n\nIona's eyes widened.\n\n\"You hold lives in your hand and your carelessness alarms me. There have been no limits placed on your curiosity. Place them yourself. You are no child, nor are you a fool. A woman must always think beyond herself.\"\n\nBrenna hoped that her words were absorbed fully. If the uniqueness of the Moor drew the girl's wonderment, lives could be lost. \n\nIona was deep in sleep when Russ came to stand over her. \n\n\"You've fulfilled your duty and she is fine,\" Brenna whispered, standing at the door.\n\n\"I just wanted to see for myself.\"\n\n\"What are you doing Russ?\" It was more of a warning than a question. \"This is not the first time you have come in the earliest part of the morning to watch over her.\"\n\n\"What is it to you Brenna? She is crafty. I am a man and she is under my care.\" \n\n\"You are first a warrior sworn in service to your brother. I think the warrior in you becomes forgetful as the man in you cares too much.\"\n\n\"I am one in my intentions. I think you should mind your own damn business.\"\n\n\"Your attitude tells me all I need to know. You have many women that welcome your special care. She is beautiful; she is more beautiful on the inside than most. She also belongs to someone else. Do not let her become an issue of trepidation between you and your brother. You will lose on both accounts.\" \n\nShe left him at Iona's bedside shaking her head. Brenna had seen the contentment on Russ' face when he sat between Iona's legs and let her place braids in his hair. She had seen the countenance of his face fall when Iona mentioned the beauty of Kieren's hair. \n\nHow can two men be of one mind at sea, Brenna thought, and two heads constantly colliding on land?\n\nRuss wanted to just lie beside Iona, to hold her as she slept. A taste of her had not been enough. But he knew now more than ever, Iona belonged to Kieren. There was no break in that.\n\n****************\n\nRuss monitored Iona more closely, as if that was possible. \n\n\"Must you sneak off to witness everything,\" he had said to her one day as she watched the men practicing hand combat. \n\nThey were ruthless with one another. Iona could only imagine their fierceness in battle. What she knew of them was quite tame compared to what she saw now. \n\nIona had of course not heard him come up behind her, but was not shocked at the closeness of his presence.\n\n\"As a slave,\" she told him, \"it is advisable to watch and study closely what is seen and not seen. Life can depend on such information. I do not expect you to understand such a thing.\"\n\n\"Why would I not?\" he asked.\n\nIona turned to him in curiosity. \n\n\"You are a free man. What would make you think of such things?\"\n\nRuss filled his lungs and then exhaled. Iona felt that his next words would carry much weight.\n\n\"I was given a way at an early age. I am a child claimed but amounting to nothing in the household of my father. I am the bastard child with only a portion of blood to prove my existence. I am the unwanted child with no purpose, not a servant yet not far from one. Given no choice I had to learn the art of seeing and not being seen, knowing but expected not to know.\"\n\n\"Were you not raised in the same house with your brother?\"\n\n\"Yes, I was.\"\n\n\"Was he not your reprieve?\"\n\n\"Yes my brother was, as you say, my reprieve. But, he too was young and his power limited.\n\n\"There are so many things about you that I do not know.\" Iona watched him and could see the curtain fall over his expression.\n\nIt was obvious that she would not learn more today. She now knew that there was more depth to this man than fun, games and sex. She had seen those sides of him. She had also witnessed the warrior in him and now the boy. The warrior in him was much stronger.\n\nAs they walked through the market square, Iona noticed that the peddler and his companion had disappeared. Another vender stood in its place. She dared not ask why. She had hoped that they were still alive. \n\nA few days later, Iona was relieved when she found the eyes of the Moor. They seemed to call out for her. He stood hidden at the perimeter of the market. The acknowledgement between them was barely a blink of the eye. Then he vanished. Iona made no motion. There was comfort in the knowledge that he still breathed. There was also fear. If he was seen by another, his life would be snatched away. The blood of a fellow slave would be on her hands.\n\nRuss was not able to follow her eyes but felt the brief tension in her body. It made him touch the arm that rested between his. He then welcomed the brightness of her smile.\n\n****************\n\nThe next issue would be Astrid, of course. While shopping for fresh fruits, Iona was accosted for the last time. \n\n\"Where is your precious guard today?\" She bumped herself into Iona's arm.\n\nWithout taking her eyes off of Astrid, Iona picked up her fallen fruits and placed them back in her basket. The vendor immediately offered to replace them. \n\nIona declined. \n\n\"This blackened whore is not so special that you should care about her,\" Astrid scolded the vendor. \"Women of her kind are used to what drops to the ground from the table of mine. She is the kind that sweeps our floors. The Gods have blessed her, but we all know their blessings are brief for the underserving.\"\n\n\"Watch yourself,\" Iona warned softly, walking away.\n\n\"For what do I have to fear in you?\" Astrid called out.\n\nIona turned to face her. \"Simply waving my hand would result in your removal. My request would guarantee the permanency of it. That is the way of my kind. You hold no upper hand here.\"\n\nThe look of anger that flushed Astrid's face was priceless. Iona turned to walk away.",
        "\"You forget who he comes to for true comfort you bed whore,\" Astrid yelled out for everyone to hear.\n\nAfter calmly placing her basket on the ground, Iona turned and took the steps that separated the two women. There was no fear on her face or in her voice. She did not lower her tone. This was something all should hear as well.\n\n\"Since you speak for your kind, do not forget who begs on her knees in the secret of shadows only to be fucked in the mouth without care. You will always be on your knees before him. That is where you belong. In the warmth of his bed is where you will always find me. My bosom will be where he comes to rest his head. He asks for the joy of my touch. I am his true comfort and the only one that can sooth him. I stand beside him. I have never dropped to my knees in front of him. I have never begged and I have never had the need. I am where my kind belongs. Who is the whore here?\"\n\nThe woman's attack was fast, but Iona's reaction was faster. She had more experience defending herself than anyone her age should. She bested the girl quickly, aiming for the face. She wanted the woman's beating to be worn as a warning. \n\nWhen Iona was a slave, she had not responded to the inequities of her position. She was no longer anyone's slave. Years of anger sprung forward. Curses she had not used in quite some time fell from her lips easily.\n\nHaving been knocked to the ground, Astrid attempted to protect herself. Iona was about to go down on her when she felt a strong arm latch around her waist and pull her away. Her arms kept swinging and she continued to throw words of insult. \n\n\"Today my guard guards you,\" she yelled out. \"He is the only reason you live. Say something to me again and I will pull your teeth from your repulsive face. Your Gods will no longer recognize you or save you from my fury. There are no warnings left for you.\"\n\n\"We pull out teeth now do we?\" The owner of the voice was unmistakable. \"That is a definite step up from requesting that your ass be kissed.\"\n\nDespite the surprise, it took a while for Iona to calm down. \n\n\"Place me on my feet now,\" she demanded.\n\n\"Why?\" the voice teased. \"Is it blood you wish to draw?\"\n\n\"Hers,\" Iona spit out.\n\n\"Then you have accomplished what you have set out to do. Your viciousness even scares my guards.\"\n\n\"And you?\" Her voice was calm now and her body draped over his arm.\n\n\"You scare me as well, but this is not unexpected.\" \n\n\"Place me on my feet,\" Iona asked, now feeling the effects of Kieren's closeness and her own shame.\n\n\"Only if you promise to behave.\"\n\n\"Do not tease me now in this position.\"\n\nWith that Kieren let her stand, but he did not remove his arm from around her waist.\n\n\"Kieren,\" now on her feet Astrid demanded, \"you need to remind your foreign slave girl of her place. Like the animal she is, she viciously attacked me without constraint. I thought she might bite me like a rabid bitch. Your guards should be punished for failure.\"\n\nKieren's attention turned to Astrid while once again lifting Iona from her feet. Iona wished to finish her attack. This made him proud. \n\n\"Control your tongue woman or I will set controls in place for it.\" He left no room for doubt in his words. \"You wrongly assume a situation that does not exist. There is nothing established for you in my household. It is she I protect. Any punishment that takes place will be in connection to that. I establish Iona's place among you. You have proven yourself to be the rabid dog here as well as the one in heat. Do not concern yourself with what is mine or what is not. This woman I hold is slave to no master neither is she foreign to me.\"\n\nBefore Kieren turned to walk off with her still under his arm. Iona watched Astrid's swollen lips gap open in disbelief \n\n\"You are the one that should be warned Gulbrandson Kieren. It is you demeaned here.\"\n\nKieren turned immediately and stepped forward so that there was little room between the two of them. \n\nIona wanted to take advantage of the proximity and reached out for Astrid, but the girl backed up in fear. It was not fear of Iona, but fear of Kieren.\n\nKieren now had the tone that Iona remembered well. He had used it to set matters straight with her. It was deadlier when spoken for all to hear. \n\n\"It is you,\" he said, \"that have forgotten your place in position to mine. Make no further mistake. I am a man that stands on solid ground\u2014not upon the shoulders of any. You and your family can easily feel the effects of how solid the ground beneath me is.\"\n\nAstrid put more space between them and no one dared come to her aid.\n\nAs Kieren turned, he easily placed Iona over his shoulder and a few of his men fell in step behind him. Iona began to struggle.\n\n\"Settle down girl,\" he laughed. His mood had shifted quickly.\n\n\"I am no girl,\" she told him between gritted teeth. \"I am a woman. I am a free woman not to be treated like a bag of potatoes.\"\n\n\"This is true,\" he laughed. \"But, you are my potatoes and I do what I please with what is mine.\"\n\n\"She is slave to no man,\" Iona childishly mimicked.\n\n\"Your words are the ones to be questioned here,\" Kieren informed her.\n\nIona stiffened.\n\n\"I speak many words in anger.\"\n\n\"Yes,\" he said. \"I am aware of that. And, you speak them in the middle of the market nonetheless.\"\n\n\"I embarrass you and your household. For that, I am sorry.\"\n\n\"Woman, do not lie to me,\" he laughed. \"If another chance was given, I would still have to pull you from a cat fight.\"\n\n\"She is no cat,\" Iona spit out, \"She is a rodent.\"\n\nOnce inside his home, Kieren positioned her in a way that allowed her to slide down his body, but not all the way. The transition was smoothly done. He spread his hands across her backside and easily supported her weight. Without choice and fear of falling, Iona wrapped her legs and arms around him. They were now eye to eye.\n\nHis eyes were so deep with the color of the sky. She swore that she could see clouds moving behind them. They were hypnotizing. It was too much for her to take. She looked away.\n\n\"Now I'll have you put me down please.\"\n\n\"Today is full of surprises.\" Kieren gave her the most beautiful of smiles. \"She learns a new word in my absence Brenna. This word is please.\"\n\n\"This girl you forcefully put upon me has quite the vocabulary as well as attitude.\" Brenna spoke with the pretense of anger. She smiled ear to ear. They were her children, for them to have each other held meaning to her. \n\n\"Have you now. I wish to hear all your words Iona.\" His voice grew silky.\n\n\"My words only seem to result in my punishment,\" Iona whispered in shame.\n\nKieren considered her for a moment and searched her dark eyes. His smile slowly vanished. He released her and she slid down the rest of his body. \n\nIona could feel the graze of his need as she slid to her feet. Her legs felt weak and her own need had long since established itself. If he were to slip his fingers between her thighs Kieren would find her exceedingly ready for more.\n\nHe bowed his head, smiling once more and left toward his private area. The men that were observing suddenly pretended to be disinterested. \n\nA bewildered Iona watched his broad back turn down a passage way. She knew what she had felt against her. It was undoubtedly want. Something like that on him was impossible for any breathing woman to ignore. But, maybe that was a general reaction when it came to women. Maybe he and Russ shared more than just blood and beauty. The site and feel of any woman made blood rush to their organ.\n\nConfused, Iona looked to Brenna. Brenna just humped up her shoulders and turned to fulfill her purpose. Once turned, she had to stop herself from laughing out loud. \n\n\"That damn Kieren,\" she said shaking her head.\n\nIona did not know what to do. Brenna would only escort her out of the kitchen claiming it was still a danger for the girl and anyone that crossed the girl's path. There was no sign of Russ or Gunner to distract her with their inane games. Sitting alone would be too awkward, not to mention humiliating. Going for a walk was not wise at the moment. Astrid was most likely stationed in a strategic position, waiting to shoot Iona in the heart with a poisoned arrow. \n\nWithout any other choice, she went to her room and sat on her bed with her hands clasped. She sat there for quite some time thinking. \n\nWhat was she expecting? There was not anything truly experienced on the Long Ship to solidify a personal relationship between the two\u2014especially not sexually. His only actual physical contact with her body included a harsh spanking and harsher... She really did not want to recreate that image in her mind. His intention had been to punish not please. Then with the coldest of warnings, he had separated himself. He had fulfilled his original words by having her delivered to safety. Iona reasoned that she was free; freedom was all that he promised. It was his only true commitment. Her imagination had created everything else. It was a girl's imagination, nothing more.\n\nThese things had long since occurred to her. She recalled her oath to be a woman that accepted reality. The part that she had given to him had to be excised. There was little reason for her to keep penalizing herself. He had demonstrated that she meant little to him as a woman. \n\nHad he not asked her to always remember his parting words aboard his Long Ship? \"Never forget what I say to you today, for I shall not.\"\n\nIf not anything else, Kieren's words were truth. Had not Gunner informed her of that when she tried to take her own life?\n\nIona washed, slipped on her night shift and attempted to sleep. Sleep teased her but never came. Like the night of his last return, she was restless. This time it was beyond compare. Remembering what happened last time made her fear finding her way to the kitchen for warmed goat's milk.\n\nIt does not matter, she reasoned. Finding him fucking another on a table meant for eating would only strengthen her resolve. \n\n\"Cut it away,\" she said aloud. \n\nThere were a few men living within the Long House and not in the other house designed to house many. She had not considered that her covering was inappropriate until she was already on her way to the kitchen. Then she thought better of it and made her way back to her room. As she found her way through the main hall, Iona paused and stared.\n\nIf she had to explain the reason, Iona could not. The passage way to his private area called out to her. Memories flooded her mind. There was the way he had looked at her sometimes. Kieren showed no shame or pretense when watching her bathing or dressing. Sometimes he focused on particular parts of her anatomy than others. The knowledge had always hardened her nipples and they would become humiliatingly obvious. Even when her back was toward him, Iona could feel his eyes upon her. And when the furs that covered him no longer covered his nakedness, he sat boldly in front of her. Iona had to turn away, angry with her body's betrayal.\n\nKieren was always comfortable with his nakedness on the Long Ship. Why not, Iona knew the small cabin to be his personal space? He did not adjust his habits to accommodate her. His body was perfect in every way, all of it. Even his scars seemed beautiful. Often she had dreamed of how he would feel under her hands, the feel of his skin stretched over muscle. His hair was always wet after he washed. He would raise his arms to dry it with a cloth. Iona liked the look of his arms. He could handle her so well with the strength of those arms. The way his appendage hung made Iona ache to touch it, to verify its beauty. When hard and erect it needed no verification. It made her ache in another way. Iona did not think of it as an appendage at that point. Her thoughts were immoral, she wanted his cock. \n\nNo man had ever stirred anything inside of her. When circumstances required the sacrifice of her body there was a division within her. The part that mattered would blind itself and become unfeeling. She became motionless and void of emotion. Iona was a slave, no matter how well treated. For Kieren, Iona felt a deep sense of need. He awakened her body in ways no man had ever done. This was without even a touch from him. She longed for his touch.\n\nIona felt that she must have her questions answered. Had she imagined what she saw in his eyes? Could he truly see no use for her? Only he could answer her questions. Only he could decide if he should be cut away. That way, she could be certain of any conclusion drawn on her part. There would be no assumptions nurturing fantasies. \n\nShe moved quietly down his passage way. The opening to his area was closed for privacy. Iona's thoughts became conflicted. But, she realized that her decision was already made when she came toward his door. Iona had come too far to turn back. Besides if her knowledge of him was correct, Kieren already knew that she was at his door. The man missed nothing. She must now prove herself to be a woman and not a child frightened of confrontation. Her boldness was firm in other aspects of her life, why not here? Why not now?\n\nIona opened the door, closed her eyes and stepped in. She expected a knife to be placed at her neck or to be restrained in some way. But when she felt nothing, she opened her eyes. Kieren was standing directly before her with his arms crossed. The darkness of night could not hide his nakedness.\n\n\"What do you want Iona,\" he calmly demanded.\n\nIona cleared her throat.\n\n\"I need to acquire you,\" she stumbled. \"I mean acquire of you. No, inquire of you. I...uhm...have questions.\"\n\n\"An Iona that fails to form words correctly is a rare thing.\"\n\nIona did not get the feeling that he was teasing. It sounded like he was irritated. She turned to make her escape with apologies. \n\nWhile attempting to open the door, Kieren's hand pressed firmly against it. Although he was not touching her, Iona could feel his body behind her. \n\n\"You have awakened me from a sound sleep.\" Even and smooth, his voice was not far from her ear. \"What is your query?\"\n\n\"I wanted to make an apology for my words today; I mean yesterday.\" She tried not to sound nervous.\n\n\"And, your query is?\"\n\n\"I apologize for not clearly establishing my purpose to...uhm...apologize from the start.\"\n\n\"You wish to apologize for your words. You said so many. To which are you referring?\"\n\n\"Well, my behavior was inexcusable.\"\n\nThis time his lips were closer. \n\n\"What words?\" he probed in a lower more intimate tone.\n\n\"Well...see...\" Iona desperately wanted the entire situation to disappear. How stupid could she be, disturbing his privacy in such a way?\n\n\"You are not a child,\" his voice became as silky as earlier, \"yet you play a child's game. Children should be in bed at this time of night.\"\n\n\"Remove your hand and I shall return to my bed.\" Iona attempted to have better control of her voice. \"But, it is not because I am a child. I simply do not wish to impose.\"\n\n\"To come to my room with little on has already been done. The imposition is that you come with poor justification.\"\n\n\"I had questions but your tone and behavior leaves me feeling threatened. I can no longer recall their significance.\" Iona tried to sound indignant. \"I will leave you with my apologies and return to my designated area.\"\n\n\"Face me when you address me.\"\n\nInfluenced by the strong pull of his command, Iona slowly turned with her head dropped. He was unnervingly close and she dared not raise her head. When he placed his curved finger under her chin and lifted it, unbearable warmth flooded her body.\n\n\"In the cover of darkness you come into my room without invitation, knowing at the center of things I am a man. First you say you have an inquiry. Then you apologize for your previous actions and words unknown. Finally, you accuse me of threatening you and you desire to flee to safety. Am I correct?\"\n\nSilence. \n\n\"Answer me.\"\n\nThe harshness in his voice, no matter how slight, brought the feel of approaching tears. Her weakness shamed her.\n\nIona's voice began to waiver. \"Well...see...I...\" she said before it failed her.\n\nKieren dropped his finger from her chin.\n\n\"Not only are you a child that plays at being a woman but you tease as well.\"\n\nKieren waited for a response.\n\n\"Must I remind you that I am a woman not a child? My intentions are honorable,\" Iona finally responded, pulling from her inner strength.\n\nWith the same finger that had held her chin, Kieren flicked a hardened, extended nipple. Iona caught her breath and her legs weakened.\n\n\"In the middle of the night my intentions are not.\"\n\n\"I am quite aware of that.\"\n\nIona observed the shadows of his face.\n\n\"What do you want Iona?\" He raised his voice.\n\nSilence.\n\n\"Since you insist that you are a woman, do not waste time. Speak.\"\n\n\"I came to make myself available for your use,\" she blurted out.\n\n\"Available? What does that exactly mean?\" Kieren moved closer to her. \n\nHer breasts with their pebbled nipples pressed into him with every intake of air. She knew he felt them. \n\n\"To use me,\" she said hurriedly. \"To fuck me how you please. I owe you as much.\"\n\n\"You owe me nothing,\" he said removing his hand from the door. Kieren was angry now. \"I have no desire to use you as you say.\"\n\nHe stepped back.\n\n\"You offer yourself to me like a child forced to share a toy. Must I remind you that I am a man not an animal that molests girls? With that offense, take your leave.\"\n\nHe crossed his arms.\n\nOnce again her words brought her punishment. This time he would not touch her at all. She was not worth even a physical demonstration of his anger. She had been warned before of his contempt for her. \n\nTears began to roll down her face.\n\n\"Why do you not want me? Am I not as pleasing as the others? Is it because I am a slave, the color of my skin?\" she said, surrendering to her emotions. \"I've seen the need that you have for women. I can be solely for your consumption as well.\"\n\n\"I am sorry that I abused you in such a way that night and failed to show you any care. You are no man's slave, not mine or any others. Yet you come to me as a slave available for a fucking you do not desire. You offer yourself as payment. I have no desire for a slave. I have no desire for payment.\"\n\nKieren ran his hand through his hair in frustration. \"Leave. Rest assured that our obligations to one another are complete.\"\n\nIona lowered her head once more. She turned and opened the door. Her lungs tightened and her chest began to ache. She moved slowly in hopes that he would stop her.\n\nHe did not. \n\nIn her room she cried into her hands while sitting at the edge of her bed. There was the familiar, a light knock at her door. Relief filled her. Brenna would help her get through this. Brenna would tell her how to do what was impossible; she would help Iona cut him away. Her wisdom would lead Iona once more and help her to become the woman she should be. Iona needed the older woman to restore her strength. Brenna cared about her. She was the only one that truly did. Iona rushed to open the door.\n\n\"Oh Brenna...\" she began on the verge of new tears.\n\nHis movements were quick. Kieren placed one hand around her waist and drew her lips to his. This was what he ached for and he made the most of it. When he attempted to pull his lips away to consider her response, Iona threw her arms around him and her lips followed his with hunger. This was all he needed to know. He wrapped his arms fully around her, raised her from the floor while kicking the door completely open.\n\nThe feel of his lips upon hers was beyond any imagined. Her entire body relaxed into his form and the firmness of his hands across her back. When Kieren lifted her up, Iona's legs eagerly clasped around his waist. Her arms held on to him for dear life. She could not hold him close enough. Iona was finally home and stepping beyond any fantasy. She was at the threshold of an unknown reality.",
        "As Kieren moved to her bed, he was lost in the exploration of her lips and the desperateness of their tongues. The thought of exploring her body over took him. His need for her and its denial had created an enormous sense of desire within him. His want had become physically painful. He had to remind himself to be gentle and how precious she truly was to him. \n\nBut, there were things she must know and he needed to tell. He broke from their kiss and whispered in her ear.\n\n\"You have only witnessed my coldness, for that I am sorry. I desire to show my true self. I am gentle with that I care greatly for. I want you as a man wants a woman with no obligations. I only desire the dedication of your heart?\"\n\n\"Let us not insult each other or waste this moment with endearments,\" she whispered into his ear and tasted it with the tip of her tongue--her craving for him relieving her of self-control and filling her with the boldness of lust. \"You and I are of the same cut. I was made for you alone; your needs are my needs. I have only my heart to give and you have always carried that. Let your claim be complete. Take what is yours.\"\n\nHer words shot through his body like lightning, strengthening and weakening him. It was time for him to have what he needed most. It was time for him to fill Iona with the awareness of such.\n\nTo be continued... "
    ],
    "authorname": "avrgblkgrl",
    "tags": [
        "straight sex",
        "wm/bf",
        "interracial romance",
        "white male",
        "viking",
        "black female",
        "love",
        "historical",
        "novella",
        "slave"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/trust-ch-04-2"
}