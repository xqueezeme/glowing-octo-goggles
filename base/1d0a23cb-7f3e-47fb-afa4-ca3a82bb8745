{
    "title": "Lady in Red Pt. 03 Ch. 06",
    "pages": [
        "Chancellor Inga Braun was at the Berlin Tegel Airport to greet Gwen and Steve upon their arrival, and did so with great warmth. The two women hugged and were soon chatting like old friends. Gwen invited Chancellor Braun to ride in the motorcade with her to the American embassy, which would allow them more time to discuss issues of mutual concern. For her part, Braun was delighted with the suggestion and quickly accepted.\n\n\"Mom, would you keep an eye on Saint and Vickie?\" asked Gwen of Paula. \"The Chancellor and I will be discussing all sorts of boring things. I think the kids will be happier riding with Grandma and Pop. We'll be right in front of you in the motorcade.\"\n\nFor the most part, Steve refrained from interrupting the two world leaders as they were soon immersed in one of the more pressing issues facing the two countries. He listened closely to the conversation while attempting to appear disinterested. An observer would think he was simply watching the sights of the city pass by his window. When the limousine slowed down to make a hard left turn, Steve saw a flatbed truck suddenly roar out of an adjacent alley. He reflexively threw his body in front of Gwen, pinning her to her seat as he braced for the certain impact.\n\nThe truck smashed into the right front of the Mercedes and pushed it across the street and firmly into a street light, effectively pinning it to the pole. Steve flung his door open as the limo came to rest. \"Lock the door!\" was all he had time to say as he quickly slammed it shut and stepped quickly over to the left side of the truck a few feet away.\n\nThe driver of the truck flung his door open and jumped to the street waving a handgun. No sooner had his feet hit the pavement than Steve grabbed the barrel of the gun and twisted it violently, which caused the man's finger to press the trigger hard enough to discharge the weapon. Unfortunately for the driver, by that time it was pointed directly at his heart. \n\nSteve pocketed the gun, shoved the dead man to the side and jumped into the truck. He had seen bags of fertilizer on the bed of the truck along with other items that he knew would be materials for making a bomb. Since the truck had not exploded on impact and the driver had been so intent on getting away from it, Steve guessed there was probably a timer set to detonate the explosives. There was precious little time to remove the threat from Gwen and the others.\n\nWithout bothering to pull the door closed, he slammed the shift lever into reverse and stomped on the accelerator. He guided the truck back into the alley while keeping the pedal to the floor. The open door caught on the wall of a block building and was torn from the vehicle as it careened wildly back into the alley. Steve was concentrating on speed, not accuracy.\n\nGwen and Chancellor Braun had been stunned at the speed and ferocity of the collision. The Chancellor had been thrown forward onto the floor upon impact, and Gwen had barely managed to assist her back to her seat and lock Steve's door when she heard the shot. She immediately looked out the right window, just in time to see her husband leap into the truck and back it across the street into the nearby alley. It had barely disappeared from sight when a tremendous explosion rocked the area! Once again, Chancellor Braun found herself thrown to the floor of the limo, and this time Gwen tumbled right beside her.\n\nShe struggled back up to her seat and immediately looked for Steve. A huge fireball was shooting upward from where she had last seen the truck! Thick, black smoke now billowed from the alley and crept across the street toward her limo. Before the dire reality of the situation could fully set in, it suddenly got worse as two white vans suddenly pulled onto the sidewalk across the street near the alley and armed men piled out!\n\nGunfire erupted as German police and her own Secret Service detail began exchanging fire with the terrorists. Gwen grabbed her companion and ducked back down, protectively shielding Chancellor Braun with her back when she heard a bullet bounce off the window. The gunmen were using their vans for cover as they maintained a steady barrage of fire at her car, as well as toward the security detail risking all to protect her and the German Chancellor. \n\nAfter what seemed a long time but was actually less than a minute, the shooting became more sporadic as both sides began searching for targets rather than simply shooting in the general direction of their foes. Gwen hazarded another look out her window. As the breeze changed direction, the black smoke began receding down the street, and like an apparition, Steve slowly came into view!\n\nBecause he was less than fifty feet away, Gwen clearly saw the blood splattered on his face and neck. It was also seeping from his shirt and pants legs as he raised a handgun and began firing. The assailants suddenly found themselves in an extremely bad position since Steve was behind them and off to the side. Those that weren't immediately killed by the hail of bullets Steve was sending their way tried to move around the vans to avoid his onslaught. Their change of position allowed security forces the opportunity to kill or disable those that Steve had flushed from their relative safety behind the van. \n\nSuddenly the shooting ended and an eerie silence fell across the street. An occasional moan and the crackling of the fire in what was left of the exploded truck were the only sounds to be heard. Steve stood his ground, searching for more threats. Thankfully all the good guys knew who he was! He watched the Secret Service agents begin to move into the open, so he took a step in Gwen's direction. He managed only one faltering stride before he fell unconscious to the pavement!\n\nGwen moved to open the door, but a burly Secret Service agent blocked her. \"Madam President! The situation is still way too unstable for you to leave the vehicle. Please remain inside until we've checked everything out.\"\n\nGwen looked past the agent and saw Saint rush over to his father and kneel down next to him. \"Would you stay in this damn car if your wife and child were out in the street like my family is?\" demanded Gwen. \"I'm a doctor and my husband needs immediate medical attention!\"\n\nThe agent looked back to see Saint holding his father's hand. \"Okay, Madam President, but it'll probably cost me my job,\" as he stepped back from the door and radioed the other agents.\n\n\"President Hammer is leaving her car. Get over here to help shield her from any possible danger!\"\n\nBy the time Gwen reached Saint and Steve, agents had circled around her facing outward with guns drawn, looking nervously in every direction for threats. They soon parted to enable Chancellor Braun and Ted Anderson to reach Gwen's side as she examined Steve. \n\n\"I don't know how he survived the explosion, but he's badly bruised and has some shrapnel lodged in his face, chest, torso, and legs. He's had a serious blow to the head and it looks like a bullet grazed his left arm,\" explained Gwen more calmly than she felt. \"He needs to get to a hospital as soon as possible.\"\n\nTraffic was jammed to a standstill, making it very difficult for emergency vehicles to access the scene. Chancellor Braun grabbed a radio from one of her policemen and began issuing orders in German. In less than two minutes, a helicopter landed in the street. Paramedics jumped out and rushed over to immobilize, backboard, and affix an oxygen mask to Steve as Gwen oversaw every movement they made. As they lifted him and headed for the helicopter, Gwen spoke to Ted and Chancellor Braun.\n\n\"I'm going with Steve. Would you and Mom please take care of the kids, Dad? Chancellor, I don't know what the rules are, but I'm getting into that helicopter and going with my husband.\"\n\n\"Of course,\" agreed Braun. \"I knew it could be no other way. We'll make our way to the hospital as quickly as we can. I'm so sorry this happened!\"\n\nIt took almost an hour for Chancellor Braun, Ted, Paula, and the kids to reach the hospital to which Steve had been flown. They waited in a private area for another hour before Gwen appeared in bloodstained scrubs to speak to them. \n\n\"Your dad's going to be fine!\" was the first thing she said as Saint rushed to hug his mother. \"He has a mild concussion, a slight bullet wound, and we had to remove numerous pieces of shrapnel from all over him. He spoke to me and he remembers everything. The first thing he asked was if you and your sister were okay. He says it's very important for you to know that your Daddy loves you.\"\n\nGwen had to stop speaking to wipe her eyes and collect her emotions. \"He's in pain, but should be able to leave the hospital as soon as they determine he's recovering properly from the concussion and there are no lingering effects. I promised to bring you and Vickie in to see him. Would the rest of you please wait for us? We'll only be a few minutes.\"\n\nJust five minutes later, Gwen returned with her two kids. \"Steve was delighted to see the kids, but we couldn't stay too long. He's exhausted and the medication is making him drowsy. I'm going to spend the night here in case he needs me. Mom and Dad, please take care of the kids. If things go okay tonight, we'll be joining you sometime tomorrow.\n\n\"Chancellor, I'm afraid we may have to postpone tomorrow's state dinner for a day or two, depending on how quickly Steve recovers. I'm sorry to do that, but Steve's health is my primary concern here.\"\n\n\"My dear, I totally understand,\" assured Chancellor Braun. \"Your husband was incredible this afternoon! I have never seen anything like it in my life. I have been told that the truck bomb would have ripped our limousine to pieces and killed all of us in it. Steve's nerve and his dedication to you saved us all. \n\n\"The hospital is locked down. No one can enter or leave without a thorough search and proper identification. My security people tell me that one of the surviving terrorists was a fountain of information. I'll have a preliminary report delivered to you wherever you may be as soon as it's completed. German police are rounding up accomplices even as we speak. They'll soon wish that they never tried to harm the good friends of Germany.\"\n\n\"Thank you, Chancellor. I'm sure you'll handle the situation appropriately. I'll be looking for that report and discussing it with Steve when he feels better. I want you to know that neither Steve nor I blame you or your government for today's attack. We hold Germany in the highest regard.\n\n\"Mom, have you spoken to Kate or Lisa? They must be worried sick,\" asked Gwen of her mother.\n\n\"I told them what I knew as we were being driven to the hospital,\" replied Paula. \"They said that everyone back home is extremely worried about Steve, and mad as hell that terrorists would attack you like they did. There were dozens of reporters outside the hospital when we arrived. They're desperate for news on Steve's condition.\n\nGwen nodded her head and then turned to Chancellor Braun. \"Inga, would you care to join me in an impromptu press conference? Americans will want to know how Steve is doing, and I'm sure the reporters will have lots of questions for you.\"\n\nTen minutes later, President Gwen Hammer and Chancellor Inga Braun stood shoulder to shoulder, facing the international press. Chancellor Braun began with a statement condemning the terrorist attack and pledging that Germany would bring those guilty of perpetrating it to justice. She named two German police officers that were shot and killed, as well as the three that were wounded, and she praised their actions. Then she stepped aside to allow Gwen to address the reporters.\n\n\"I'm sure you're all wondering about Steve. He has a concussion, a minor bullet wound on his upper left arm, and numerous bruises, cuts, and contusions from being slammed against a masonry building by the bomb blast. He was also struck by flying debris and shrapnel when the bomb detonated. That said, he was awake and alert half an hour ago and enjoyed a brief visit with our children. I expect he'll be able to leave the hospital sometime tomorrow, but will be taking antibiotics until we're certain that he's free from infection. My amazing husband should make a full recovery!\n\n\"In addition to the brave German policemen my friend Inga named, please keep the two American Secret Service Agents that were wounded in today's attack in your thoughts and prayers. I'd love to honor them by sharing their names with you, but I won't, for their own safety. Their injuries are not considered life threatening, and for that I'm very grateful. All of these agents put everything on the line to protect me and my family, and I want to use this time to thank them all for their dedicated service. I'm not the easiest person to keep safe because I interact with the public far more than my predecessors customarily did.\" \n\n\"Madam President, everyone will be very glad to hear that your husband is doing so well and will recover,\" began Amber Stahl. \"Can you tell us how he gained control of that truck and managed to remove it, thereby saving your life, as well as Chancellor Braun's and so many others?\"\n\n\"It all happened very fast. The truck came out of an alley and struck our car. Steve held me tightly to the seat during the impact to protect me, but when he let go of me to leave the car, I accompanied Chancellor Braun in tumbling to the floor. As we regained our seats, I heard a shot and saw Steve climb into the truck and immediately race it backwards into the alley. He had deduced it was a bomb and risked his life to protect me, our family, Chancellor Braun and many of those assigned to our security. \n\n\"The speed with which he made his decision and acted on it is still difficult for me to comprehend. Then those two vans of terrorists arrived across the street and they began shooting at us. They were quite obviously trying to kill the Chancellor and myself. I'm sure the plan had been for the truck bomb to destroy all or most of the vehicles in the motorcade. Their backup vehicles were intended to kill those of us who might have survived the blast. The breeze changed direction and Steve appeared, walking through the dissipating smoke. He was behind the terrorists and to the side. When he began shooting, the cowards tried to flee, but were then engaged by the German police and my Secret Service agents and were brought down. Once the immediate danger had passed, Steve crumpled to the pavement. I don't know how he did what he did, especially after being so badly injured by the bomb blast. Somehow, he always finds the knowledge and ability to respond to any situation.\"\n\n\"Has anyone claimed responsibility for today's attack, Madam Chancellor?\" asked a German reporter.\n\n\"Not to my knowledge,\" replied Braun before adding, \"but we do have some leads and it's only a matter of time before we bring these terrorists to justice.\"\n\n\"President Hammer, what will the United States do if these terrorists have ties that can be traced to other countries? Will you order sanctions or trade restrictions?\" asked Heather Jensen.\n\n\"I am not a proponent of punishing the people of a nation because some citizens, or even the leaders of the country have perpetrated some kind of horrible crime,\" responded Gwen, choosing her words carefully. \"I do believe in justice, and reaping what you sow. The United States will determine its course when the evidence is in and we've weighed our options. Terrorism has no place in this world, nor do those that practice it.\"\n\nGwen excused herself a short time later to return to Steve's side. The morning sun was coming through the room's only window when Gwen awoke from an uncomfortable nap in a hard chair next to Steve's bed. She immediately sat forward to check his condition. She found his eyes watching her as he sported a crooked smile. \n\n\"How do you feel, Sweetheart?\" asked Gwen softly before gently kissing her husband's lips. \n\nSteve's right hand slid behind her head as he pulled Gwen back down for a longer, passion filled kiss. \"You seem to be doing pretty well! I'm so glad to see you smiling and looking more like yourself. I was pretty scared yesterday,\" admitted Gwen.\n\n\"So was I,\" revealed Steve. \"I didn't know how long it would take for that bomb to detonate, but I knew the results would have been catastrophic for you and the kids if I didn't get it away from the motorcade.\"\n\n\"You risked your life and were almost killed saving us,\" replied Gwen as she once again kissed her husband soundly. \"You're the best husband and father in the world.\"\n\n\"That's pretty much what I'm reading in the papers,\" cracked Charlotte from the corner of the room. \"Don't mind me. I just came in to check on you guys and you were both sleeping, so I sat down and waited half an hour or so for you to wake up. Someone was recording a video of the motorcade when the truck bomb rammed your car, and it showed the whole episode. Steve was out of the limo in the blink of an eye. He toasted the crazy bastard driving the truck and raced it backwards out of the area just in time. Television and internet sites can't show it often enough, and it's all anyone is talking about. I spoke to Kate last night and she said that it's crazy back home. Americans are totally pissed that anyone would try to kill our President and Queen. Steve's quick thinking and actions are being compared to his battle with The Butcher all those years ago. The word Warrior is used more than Steve's name on the internet. They're synonymous now, but Warrior seems to be preferred at the moment.\n\n\"A few higher up intelligence people have been waiting for you to wake up so they can speak to you,\" revealed Charlotte. \"They didn't want to wake you, but they'd like to see you as soon as possible. I promised to let them know when you were ready to see them.\" \n\n\"I'd better meet with them right now. They may have some intelligence about the attack,\" decided Gwen. \"Charlotte, would you do me a favor and ask them to come in? I know you're not my secretary, but I hate to leave Steve.\"\n\n\"Madam President, I'm so damn glad that you're both okay I'll do just about anything for you. I'll have them come right in,\" promised Charlotte as she hugged Gwen and gave Steve a quick kiss on his forehead before rushing out.\n\nA few minutes later, four men in suits entered Steve's private hospital room. They represented various intelligence agencies and carried file folders and a laptop. After they introduced themselves and showed Gwen their credentials since she didn't know them personally, they explained what had been learned about the terrorists. \n\nHalf an hour later, Gwen asked the question Steve had hoped for, but hadn't asked since he didn't want to usurp Gwen's authority in front of the others. \"Do we have the ability to take this training facility out totally, but with few or no civilian casualties?\"\n\n\"Madam President, that would require Special Forces and would be an extremely dangerous operation. We've calculated that you can direct a drone to drop two smart missiles on the compound and eliminate most, if not all of the enemy combatants.\" \n\n\"Would that not necessitate civilian casualties?\" questioned Gwen.\n\n\"We calculate that as many as twenty civilians could be killed or injured, but no American lives would be at risk,\" replied the CIA representative. \"Remember this is foreign soil. We can probably get way with a drone over the area, but putting boots on the ground for even a short time would be considered an act of war by Iran. We have to tread lightly here.\"\n\n\"I'll take your recommendations under consideration, gentlemen,\" replied Gwen calmly. \"Please allow me to discuss this in private with Steve. I'll let you know if I need anything else.\"\n\nAs soon as the men left, Gwen turned to Steve. \"What do we do? I can't deliberately allow innocent civilians to be killed. If we send in Special Forces, we're putting them at risk, as well as risking a confrontation with Iran. If we do nothing we'll look weak and almost certainly encourage future attacks.\"",
        "\"Let's get cleaned up and get out of here,\" replied Steve calmly. \"You need to talk with some people, but first we need some breakfast.\"\n\n\"If you're willing, I want to go out the front and let the press see that you're doing well, or at least as well as can be expected,\" requested Gwen. \"Your face is all bruised, and as colorful as the Painted Desert, but that's okay. People need to see what you endured to protect your family. They need to be reminded just how tough you are. I want your reputation to grow, and I want those cowardly terrorist bastards to fear you even more than they already do.\" \n\nIt was nine AM when Gwen and Steve stepped out the front doors of the hospital. Security had already cleared the area, and members of the press were bunched in the parking lot, waiting for the opportunity to speak with the First Couple.\n\nSteve was smiling as he and Gwen strolled over to entertain questions from the press corps. He couldn't help but notice the shock on the faces of the reporters, all staring at his badly bruised face, but was still surprised when Heather broke down in sobs as he drew near. Instinctively, he reached out to her with a crooked grin. Heather flew into his arms and wept helplessly into his chest.\n\n\"I guess that pretty well answers my question about how I look,\" joked Steve as he held the crying woman in his arms. \"Does anyone have any questions for me?\"\n\nThe other reporters quickly overcame their surprise and began asking Steve questions, even as Heather continued sobbing softly against his chest. \n\n\"Steve, were you in that truck when it exploded, and if so, how did you avoid being blown to pieces?\" asked Amber Stahl, using the back of her hand to wipe her cheeks.\n\n\"As I was backing up the truck, I saw a recessed doorway in the masonry wall, and I dove into it. I was trying to get to my feet when the bomb went off. The force of the explosion slammed me against a wall, and pieces of the truck embedded themselves into my legs and upper body. As you can see, a few also managed to hit my face, but luckily my eyes weren't injured in any way.\" \n\nThe video of that news conference would be played around the world. President Hammer's husband, badly bruised and battered, holding a sobbing, beautiful young blonde reporter as he responded to questions from the rest of the press pool. After a few minutes, Heather began to compose herself and realized how inappropriate her behavior was. She lifted her head from Steve's chest and looked to Gwen.\n\nWithout a word spoken, Gwen offered her arms and the young woman moved to embrace her. \"I'm so sorry, Gwen. I'm way too emotional. It's just that Steve was almost killed, and he looks so battered. I was so scared. I still am!\"\n\nSteve had been watching Amber Stahl as she asked him her question. Her eyes were moist, and she was sniffling as she was obviously struggling to concentrate on his response, but her eyes continually scanned what she perceived as the tragedy of his face. When Heather moved away to embrace Gwen, Steve stepped closer to Amber and held out his arms welcomingly. The veteran newswoman let out a sob, quickly stepped into them and hugged him tightly.\n\n\"Steve, I was so worried! Look how you've been hurt, but you saved so many people, including Gwen and Chancellor Braun,\" managed Amber as she clutched Steve tightly. \n\n\"Listen, everyone. I know I look like hell, but I'm doing just fine, and the doctors tell me that I'll make a full recovery. Please report that,\" requested Steve as he held the crying Amber Stahl to his chest. \"Heather and Amber have been friends of ours for years, and they're a bit emotional. It's okay. Reporters are people, too. Are there any more questions?\"\n\n\"Where did you get the handgun, and how many men did you shoot?\" asked a cable news reporter.\n\n\"I took it from the truck driver as he jumped from the truck. I will not tell you how many people I had to shoot. Sir, I'm disappointed that a professional journalist would ask such an insensitive question.\"\n\n\"Will you have any scars or permanent marks from this event?\" asked a female reporter from a German station.\n\n\"It's a bit early to tell, but Gwen says my scars just give me character,\" joked Steve. \n\n\"Did you know the truck contained a bomb when you got into it?\" asked another reporter.\n\n\"Yes, it was pretty obvious to me. There were bags of fertilizer showing beneath some tarps. I knew the truck driver wasn't doing any farming, so it had to be a bomb. The fact that the driver obviously wanted to flee the area indicated that he wasn't a suicide bomber, so I jumped into the truck and backed it away from the President and Chancellor,\" recounted Steve.\n\n\"How did you know that you'd have time to back it up and get out of it before it exploded?\" asked reporter from a Berlin newspaper.\n\n\"I didn't,\" replied Steve succinctly.\n\n\"Madam President, if this attack is associated with a foreign nation, will you be issuing sanctions and trade restrictions as a result?\" questioned a cable news reporter. \n\n\"We'll cross that bridge when we come to it, but make no mistake: The United States will never bow to the threats or demands of terrorists, or the nations that support them. We will always do whatever is necessary to ensure the safety of our citizens,\" promised Gwen. \"Personally, I do not believe in punishing the citizens of a country for the sins of other citizens, or even their government. I dislike sanctions. They create far too much collateral suffering.\"\n\n\"Will you give your concert in two days and if you do, will your husband be able to participate?\" asked a network reporter.\n\n\"Unless Chancellor Braun indicates that she doesn't wish us to perform, we'll not only give a concert, but we'll rock this town like it's never been rocked before!\" declared Gwen passionately. \"Steve and I, as well as our friends, will not be intimidated by cowardly acts of violence. We were invited here to give a concert, and that's what we intend to do.\"\n\n\"What about the rescheduled state dinner tomorrow?\" asked a rotund man in the back of the press corps. \"Will you and your husband attend?\"\n\n\"That dinner is being held in our honor. Of course we'll attend. Steve appears to be feeling better already,\" quipped Gwen as she smiled toward Steve as Amber withdrew from his embrace and kissed his cheek before walking away. \"He wasn't hurt so badly that he can't comfort a beautiful woman or two. \n\n\"In case there's any question about this, unlike some former presidents we don't consider members of press to be our adversaries. We respect the work you do and appreciate your professionalism. Steve and I have known Amber almost from the day we met, and Heather for the past six or seven years. We consider them to be good friends. Watching an unconscious Steve loaded and taken away in a helicopter, and now seeing how battered he is, has understandably upset them,\" explained Gwen as Amber joined Heather at Gwen's side, placing an affectionate arm around Gwen's waist, a gesture which Gwen returned, including Heather in the embrace with her other arm. Photos of that moment soon appeared on the front pages of newspapers all across North America accompanied by headlines such as President Embraces the Press. \n\n\"Thanks for your time. Steve and I are way behind schedule now and have to get moving,\" closed Gwen as she gave Heather and Amber quick hugs before reaching for Steve's hand and leading him to their fresh, undamaged limousine. Secret Service agents continuously scanned the area as they closely surrounded the First Couple. \n\nPatrons of a small diner on a Berlin side street fell to sudden silence as they watched several men in dark suits stride into the restaurant and move to the sides of the room as President and Steve Hammer followed them inside. The diners knew of the attack the previous day and were very surprised that Steve Hammer was out of the hospital, although it was readily apparent that he was badly bruised.\n\nThe couple smiled and greeted people as a stunned hostess escorted them to a table in the center of the room. Gwen knew Steve well enough to know that he had to be extremely hungry. His last meal had been lunch the previous day, so she had directed her driver to make an unscheduled stop at the local diner.\n\nThe couple ate a hearty meal comprised of traditional German dishes. Once they finished dining, they worked the room, shaking hands with patrons and staff. They posed for pictures and signed napkins, menus, and even receipts for the happy diners. Gwen made a point of stopping by the kitchen and thanking those inside for an excellent meal. Before leaving the establishment, Steve pulled out his credit card and covered the meals of all the customers as well as a large tip for the staff. \n\n\"It looked like you really enjoyed your schnitzel,\" observed Gwen as the couple resumed their journey. \"I wanted people to see that even though you're banged up, you have a good appetite and you're feeling pretty good. We can't show fear or those terrorists will have won, so all the glad-handing we did in there was just the ticket. You can bet most of the staff and patrons will have posted pictures and accounts of our lunch all over social media. It'll be obvious to anyone that we haven't been intimidated by those wannabe assassins.\"\n\n\"Speaking of terrorists, I made a few calls this morning. There are some people that I want you to meet,\" announced Steve. \"Charlotte has scheduled us to meet them in a secure room in our embassy later this afternoon.\"\n\n\"You're being deliberately vague,\" replied Gwen. \"I know I could get you to tell me what you've got in mind, but I'll wait. I don't want to spoil your surprise.\"\n\nThat afternoon, Steve escorted Gwen into a private meeting room in the US Embassy in Berlin. Gwen quickly guessed that there were about twenty uniformed men in two rows on either side of a central impromptu aisle, standing at rigid attention as she entered. She slowly walked the length of the room and back, carefully examining the face of each man as she passed him. Each one's expression bore a remarkable resemblance to Steve at his military best.\n\n\"Okay Gentlemen, please stand at ease; no, better yet, stand easy,\" directed Gwen as she turned her attention to Steve. \"Special Forces?\"\n\nSteve nodded to Gwen before addressing the group. \"Men, my wife finds herself in a bit of a dilemma. We've traced the terrorist cell that attacked her motorcade yesterday to a small town in Northern Iran. She's reluctant to order drones in to bomb the training facility because as usual, women and children are living in close proximity to these terrorists, forced to serve as human shields. She's concerned about asking Special Forces to undertake the task of neutralizing these jackals because of the possibility of injury, death, or the capture of one or more of you men.\"\n\n\"Madam President, you're concerned about our safety?\" asked a ramrod straight young man who appeared too young to be a member of such an elite team. \"With all due respect, Ma'am, it's our duty to keep America safe. The scum that attacked you and your family were attacking the United States and everything that we stand for. It would be an honor to put an end to their miserable existence.\"\n\n\"But I'd be asking all of you to risk your lives,\" worried Gwen. \"You're all such fine looking, healthy men, full of life, with friends and relatives that love you. How can I ask you to risk all of that?\"\n\n\"Ma'am, I seem to remember some stories about your husband fighting in Columbia and Iraq, not to mention a pretty epic battle with a guy calling himself The Butcher on a ship in the Indian Ocean. He was fighting to keep others safe. We do the same only better, since we're Army,\" added the same young man with a grin as he finished speaking.\n\n\"Would some of you volunteer for this mission, knowing it's extremely dangerous, and your role in it may never be known by most Americans?\" Gwen wanted to know.\n\n\"Madam President, I know you don't intend to insult us, but you're coming very close. We're a team. If one goes in, we all go in,\" insisted a man on Gwen's left. \"I'd strongly urge that you never ask your soldiers if they want to go to war. We rely on you to determine what needs to be done for the good of our country. When called upon, we'll do our damnedest to make sure that your orders are carried out. Your husband understands this. I'm surprised he hasn't explained it to you.\" \n\n\"Actually he has, many times, and I always thought I understood it. But then it became my decision that would send you fine soldiers into harm's way,\" admitted Gwen. \n\n\"Madam President, your husband is the poster boy for undertaking dangerous missions. As his wife, or his girlfriend at the time, were you proud of Mr. Hammer's courage and dedication to family and country?\" asked another young soldier.\n\n\"Of course I was!\" declared Gwen. \"His actions saved dozens of innocent lives.\"\n\n\"Then you need to grant us the same opportunity,\" replied the young man. \"If these terrorists are allowed to carry on, many more people will be maimed or killed. With your authorization, we can prevent that from happening. It's what we do.\"\n\n\"I can see why Steve wanted me to meet you gentlemen,\" replied Gwen as she flashed her perfect smile. \"Please let me invite all of you to one of our concerts in the not too distant future. We're able to save some room near the stage for close friends. Would you gentlemen please attend as my personal guests?\"\n\n\"It would have to be backstage,\" cautioned Steve. \"These guys don't want their faces flashed all over the internet. Anonymity is important for their continued safety.\"\n\n\"You're right, of course,\" conceded Gwen. \"However, there's always room backstage for a couple dozen people, and you'd be able to see almost everything from the wings. Would you please come to one our shows? We'll make sure that you won't appear on any cameras.\"\n\n\"Would the fact that we're being invited to this show indicate that we'll be making a trip to Persia in the not-too-distant future?\" asked yet another ramrod straight soldier that had remained silent up to that point. \n\n\"That's a real possibility, if my military advisors can make it work. Your safety will always be our primary concern, so no promises until Steve and I see some details. Thank you gentlemen, and please allow your President to give each of you a hug before I leave you to make the necessary plans. I realize that I may be letting the cat out of the bag, by telling you this, but meeting you has allowed me to make this decision with a clear conscience. Gentlemen, you are the best of the best, and I'm very grateful for your patriotism, courage, and skill!\" \n\nAfter ending her visit with the Special Forces but before leaving the American embassy, Gwen took advantage of secure phone lines to speak with the Joint Chiefs. As soon as she finished that conversation, she used a secure line for a conference call with Naomi, Kate, Lisa, Vince Rosen, and Jason. \n\nGwen turned to Steve when she completed her phone calls. \"As you probably gathered from my conversations, our intelligence indicates, with no room for doubt, that the terrorist cell training in Iran was responsible for yesterday's attack on the President of the United States and the Chancellor of Germany. They cautioned me that Iran will be seriously pissed if we send troops within their borders. I replied that I'm already pissed. Iran really needs to be more concerned about how its actions are received in other nations, especially the United States.\"\n\n\"I know that wasn't an easy decision for you, but it was the right one,\" assured Steve. \"Everyone has seen how sympathetic you are to the pain and suffering of others. The world now needs to know that there's another side to their Queen. You will not tolerate senseless acts of violence from terrorists, regardless of who encourages or shelters them.\"\n\n\"I know you're right, Steve, but I've just ordered the deaths of these terrorists, and that's a difficult responsibility to carry. I just hope no innocents are hurt and our soldiers return unharmed,\" replied Gwen.\n\n  \n\nGwen and Steve finally made their way to their hotel for an emotional reunion with their family and friends. This was the first time since their arrival in Germany that they'd even seen it! Steve spent some time answering questions from Saint and his cousins concerning his bruises, stitches, and bandages. Once the kids were assured that Steve was fine, they drifted back into an impromptu game room to play. \n\nTheir departure allowed Paula to drape her arms around Steve and gently hug him. \"Son-in-law, you're an amazing man. There's no doubt that you saved Gwen and the Chancellor and probably Saint, Vicky, Ted and me, along with a lot of security and law enforcement people.\"\n\nSteve soon found himself closely surrounded by a group of grateful family and friends when Paula released him. \"Family back in Washington has been worried sick. It was all we could do to keep them from flying back over here and skipping their hearings, which are scheduled to resume tomorrow. The attack on the President and her husband put things in Washington on hold for a couple of days.\"\n\n\"I was speaking with Lisa just before you came in,\" revealed Stephanie. \"She was telling me that a lot of people are upset that terrorists would stage an attempt on our President's life. They're pretty angry, but proud as hell that Steve turned the tables on them so effectively. A lot of the reports in print and on the internet are simply referring to you two as the Queen and her Warrior.\n\n\"Lisa couldn't get over the way the nation reacted to Heather and Amber hugging Steve and crying on his strong shoulders. It always used to be that members of the press should remain impartial and impersonal when dealing with people. Obviously, Heather and Amber had stepped way over that line.\"\n\n\"Did they get into trouble for that?\" asked Gwen. \"I wondered how the public would perceive reporters showing so much emotion.\"\n\n\"Trouble? Hardly!\" laughed Stephanie. \"Their networks are constantly replaying the scenes of their star reporters in the arms of America's badly battered, but very heroic Warrior. And that photo of you arm in arm with Amber and Heather has gone viral. It's considered a good thing for them that they're both personal friends of yours. The line between news and entertainment has been blurring for years, but this is far beyond anything that's ever occurred before.\n\n\"Amber gave a special report a couple of hours ago. It was live on her network's morning news back in the States,\" added Stephanie. \"She stated flatly that Steve had saved her life in that helicopter crash years ago and she was forever indebted to him. Then she went on to tell the world that Steve Hammer is about the best thing since sliced bread. He's pretty much everything a man should be: loyal, protective, kind, strong, intelligent, and fearless. She told the world that he was a great role model for every male on the planet. She'd had the good fortune to observe and report from the very beginning on the rise of the Queen and her Warrior. It was her opinion that you have far surpassed the traditional role of President of the United States. You and Steve now belong to the entire world. Your power and influence are unparalleled, and constantly increasing.\"\n\n\"Amber said all of that?\" asked a very surprised Gwen. \"She might be a little off kilter after all that's happened on this trip. I hope she doesn't lose her job or get reprimanded for broadcasting such a subjective point of view.\" \n\n\"Don't worry about Amber,\" chuckled Jordan. \"As far as CBC is concerned, she's golden. I've been reading about this online. Viewers loved her observations this morning. As far as a good portion of the country is concerned, their President is their Queen. They're proud as hell that her Warrior husband kicks ass and takes names. You guys are in uncharted territory.\"",
        "\"It'll probably all die down in a day or two,\" mused Gwen. \"It sounds strange, but the nicer the things the press says about us, the more I worry about the Senate approving my appointments. Those career politicians will resent any good press we garner. Many members of Congress view us as adversaries rather than teammates working toward the same goals, and considering some of their self-serving goals, perhaps we are the enemy.\"\n\n\"The hearings will resume tomorrow,\" pointed out Ashley. \"It'll be interesting to hear what questions are asked, as well as the responses given by our candidates. \n\nSteve and Gwen finally managed to get a restful night's sleep. The next morning found them, in a local hospital visiting the two Secret Service agents who had been injured in the gun battle with the terrorists. Both men were improving and were no longer listed as critical.\n\n\"Steve and I want to thank you for your service to your country and to us,\" began Gwen. \"You both showed exceptional skill and courage. We appreciate everything you and your fellow agents do to keep me and my family safe.\"\n\n\"Madam President, we both feel kind of bad that your husband had to pull our butts out of the fire, so to speak. He reacted faster than any of the rest of us. The only reason there weren't more casualties is because of your husband's skill and instincts,\" replied the older of the two men.\n\n\"Steve was pretty incredible, but he's been trained for that sort of thing since he was a teenager. Don't try to compare your skill set to his: there's only one Steve Hammer. You both willingly engaged those terrorists intent on killing the Chancellor and me. You demonstrated your courage and training in a very dire situation. My family is in your debt. Thank you both.\"\n\nLater, as Steve and Gwen were preparing for the state dinner, their friends in Washington were resuming their testimony before the various Senate committees. Jason's day was by far the least contentious. The senators questioning him displayed a sincere interest in the structure of the Lady in Red Disaster Relief Plan that he had developed almost single-handedly. Jason took great pride in explaining how the plan had developed and evolved over the years, and he was obviously well-grounded in all the details and how they fit together.\n\nKate was in a far different situation. Senator Peters of New Hampshire was now asking her questions. While not as adversarial as Lancer, it was readily apparent that he was unimpressed with Kate's credentials.\n\n\"Mrs. Martin, allow me to offer that I am very relieved that the recent attack on President Hammer's motorcade was, for the most part thwarted, and that Chancellor Braun and President Hammer were unharmed. The event does however, leave me with some questions.\n\n\"Do you feel that the government's efforts regarding terrorism are adequate? Should we be more cautious about whom we allow into this country? Would you support better screening of immigrants entering the United States?\"\n\n\"Senator, I don't think any family in America has been the target of more terrorist efforts than mine. We consider the safety of our friends and family, as well as every citizen of the world, to be extremely important. I think you'll agree with me when I say that far more needs to be done to prevent terrorists from entering the country and to identify, locate, and remove those that have already entered. But with that said, President Hammer's administration will not support any efforts to indiscriminately ban any particular religion, culture, or nationality from entering the United States,\" replied Kate thoughtfully.\n\n\"We will support very thorough screenings of every person entering our borders, and delay or refuse entrance to anyone with questionable credentials or background, regardless of their country of origin or avowed reason for entering the United States.\n\n\"So the simple answer to your question is no, I don't feel that the efforts of the United States are adequate. There are individuals and groups within this country and without, that want to do us grievous harm. We need to apply serious and thoughtful effort to better identify and neutralize those parties,\" stated Kate. \n\nThe rest of the day progressed in much the same manner for Kate. Other Senators had the opportunity to ask questions, and by and large Kate was pleased and even somewhat surprised at the civility of the questions. It seemed that the committee had backed away from offering aggressive and insulting observations and questions.\n\nNaomi found things more difficult. The recent attack on the Presidential entourage had hit a nerve. It was soon obvious to Naomi that the Senators expected her to spell out some sort of diplomatic retaliation against nations supporting terrorism.\n\nSenator Gillow of West Virginia pressed Naomi as soon as the hearing began. \"Does the Hammer administration plan on initiating new sanctions against any nations found to be supporting the terrorists that conducted the recent attack on President Hammer?\"\n\n\"No, sir. President Hammer feels that sanctions harm too many innocent people while producing minimal results,\" responded Naomi.\n\n\"So the United States is going to sit back and allow nations to train and arm these deranged individuals? Then allow them to travel to other nations to kill and maim innocent people?\" demanded Senator Gillow. \n\n\"Sir, President Hammer is studying her options and will respond appropriately to the events in Berlin. Be assured that she will determine a measured response and initiate it,\" replied Naomi calmly. \n\n\"Let me guess. She'll build a new charity hospital in Tehran and maybe give a concert, expecting the Iranian government to realize the error of its ways and reform. They sure won't let her perform in the outfits she's been flaunting all over the world on her tour!\" snapped the Senator with surprising venom.\n\nWhen Naomi remained calmly silent, the Senator became more agitated and barked, \"Well? Are you going to respond or not? What are President Hammer's plans regarding Iran?\"\n\n\"Senator Gillow, I find your outburst insulting and beneath the dignity of this chamber,\" answered Naomi with a poker face. \"I, like my President, do not respond to rude or foolish comments. President Hammer will outline her intentions concerning Iran at the appropriate time, which is certainly not here and not now. In addition, the thrust of your inflammatory comments are beyond the scope of the Office this body is considering me for. The Secretary of State oversees the implementation of U.S. diplomatic policies. He or she does not decide what those policies should be.\"\n\nIt was a long day for Naomi as the Senators continued to ask questions about the evolving relationships with almost every nation Gwen had toured. Senator Bentley of New Mexico demanded to know more about Russia.\n\n\"Does President Hammer feel that Russia is no longer an enemy? Does she feel that the United States can trust Russia to end its aggressive posture in Europe and around the world?\"\n\n\"President Hammer expects to be able to discuss issues of mutual concern with President Kozlov before they escalate into international disputes. She expects to treat President Kozlov with respect, which will encourage him to respond in the same manner. Our President has greatly improved our relations with numerous nations around the globe. Her practical approach to diplomacy strengthens the United States and reduces the likelihood of the world returning to the brink of war.\"\n\n\"Were there any deals or promises made between President Hammer and President Kozlov? Are there any secret agreements that won't stand the light of day?\" asked Senator Bentley with obvious suspicion.\n\n\"Not secret ones, no. The two Presidents did make mutual promises to maintain an open dialogue and to discuss with each other any issues that might place a lasting peace at risk,\" answered Naomi. \n\n\"You're telling us that President Hammer believes that she and Kozlov can simply discuss the many areas of contention between the US and Russia and resolve them? Isn't that extremely na\u00efve?\" demanded Senator Bentley. \"These problems have been building for decades. It'll take more than a song and dance to maintain the peace.\"\n\n\"Sir, the United States is being led by the most articulate, respected couple imaginable,\" responded Naomi with some heat. \"What you belittle by terming song and dance is actually communication and diplomacy. Blustering and posturing is not only old school, but totally ineffective, as evidenced by President Hammer's predecessor's diplomatic failures. The President of the United States, along with her husband, has earned the respect of the world. It seems that they are admired everywhere but here in Washington. I have to wonder why that is.\" \n\n\"We are elected leaders of the nation, Young Lady! I might remind you that President Hammer was not elected. She was appointed by Congress, and it's our responsibility to be certain she adheres to the laws and customs of the United States!\" hotly retorted the Senator from New Mexico.\n\n\"That is where we disagree, Senator,\" declared Naomi. \"Nowhere in the constitution are members of Congress termed leaders. You are no more than elected representatives of the citizens of this great nation, although even that is a huge responsibility and trust. President Hammer leads the United States. She, along with all members of Congress, serves at the will of the American people. I will state this next without any fear of exaggerating: President Hammer has the support of the vast majority of citizens of the United States and much of the world. Congress does not.\"\n\n\"It seems to me that President Hammer, along with her clique of friends and relatives, believes that they are above the law of the land, including the Constitution,\" rejoined Senator Bentley. \"It's the solemn duty of Congress to prevent the destruction or corruption of the Constitution of the United States. Sound bites and photo opportunities may fool the average man in the street, but members of Congress are too well informed and sophisticated to fall for the so-called sizzle over substance.\"\n\n\"Thank you, Senator, for voicing your beliefs so succinctly,\" smiled Naomi. \"I doubt that the American public will appreciate your characterization of them. The lack of respect so many elected officials display for the intelligence of the hard working, taxpaying citizens of this nation is appalling.\"\n\n\"Mrs. Wilson-White, your conduct before this committee has been contentious and disrespectful. I will not only vote against this committee approving your nomination for Secretary of State, but I'll strongly urge my fellow Senators to do the same,\" promised the very irate Senator. \"There's a price to be paid for pride and arrogance.\"\n\n\"I welcome the opportunity to have my nomination voted on by the full Senate. I've seen firsthand the tremendous respect and appreciation the people of the United States and the world have for President Hammer. She and her husband support me unequivocally. That's an honor beyond anything you might imagine,\" stated Naomi with obvious pride. \n\n\"You're in for a serious disappointment if you believe that the United States Senate will bow to the desires of a woman using her Office to promote her and friends' businesses,\" predicted Senator Bentley. \"We place the welfare of the country above personal wealth and power.\" \n\n\"Who are you trying to convince, Senator? Me, your constituents, or yourself?\" mused Naomi. \"President Hammer always has the best interests of the nation at heart. It shows in everything she says and does. You can do your damnedest, Senator Bentley, but I feel I should caution you. Gwen is loved and respected around the country and around the world. She's known worldwide as the Queen. It's not an official title, but a heartfelt one applied to her by people who now number in the billions. Her husband is loved by most, and feared by some. He's known simply as the Warrior. It will not go well for anyone who insults or maligns our Queen.\"\n\n\"Now you're trying to threaten me with this warrior and queen malarkey?\" marveled the lawmaker. \"Believing and repeating that hogwash points out just how unfit you are for any official position. It's simply another strike against your chances of becoming Secretary of State.\"\n\nGwen and Steve were attending the State Dinner in Berlin as their friends testified before the Senate. Steve still had small bandages over several stitched cuts in his face. He also had yellowish discoloration surrounding several bruises on his forehead and cheeks. It had been suggested that he disguise his disfigurements with makeup, but Gwen insisted that he display them without any camouflage at all, as badges of honor, and Steve agreed with her. Without exception, each person to whom he was introduced stared at him in amazement at the obvious effects of the truck bomb. There was no doubt that he had narrowly avoided death. \n\nThe ovation had been loud and long when Gwen and Steve had been introduced as they entered the room. The determination and fearlessness of the couple inspired everyone in attendance. Gwen was incredibly beautiful in a fairly modest red gown, while Steve's banged up face seemed to make him appear even more powerful and desirable to the ladies present.\n\nChancellor Braun was effusive in her praise of the American couple. She spoke at length of the wisdom and fortitude they had shown in the steps taken to end the potentially deadly international stalemate that had existed the day Gwen assumed the presidency. When she described the events surrounding the recent terrorist attack, her voice cracked several times, making her emotions evident.\n\nFor her part, Gwen thanked Germany for its hospitality and assured those listening that she and Steve did not harbor any ill feelings toward the German Republic for the unfortunate events the day of their arrival. She praised the Bundestag and Bundesrat for their support of Chancellor Braun's decision to back the United States in both word and deed in their mutual efforts to reduce international tensions, assuring everyone that Germany's decision to join the United States in withdrawing their forces was the deciding factor for many other nations to follow suit. Her remarks were very well received by the legislators in attendance.\n\nSteve and Gwen didn't attempt to conceal their strong friendship with Hans and his beautiful wife, Nadiya. As expected, everyone noticed how close the two couples were, and how much they seemed to enjoy their time together. Some Germans had been critical of Hans taking a wife with so much influence in a foreign government. He was recognized as one of Braun's most trusted advisors, so predictably, his loyalties were questioned by some. People wishing to fill his shoes were eager to question whether he could represent Germany while being married to a beautiful foreigner destined to assume a leadership position in Ukraine. The fact that Gwen and Steve obviously held Hans and Nadiya in such high regard went quite a way towards defusing that concern.\n\nShortly before the dinner ended, Gwen and Chancellor Braun were summoned from the room and they left quietly. Upon their return, the Chancellor asked for the crowd's attention. She announced that the United States and Germany had sent a combined commando force into Iran to eliminate the cell that had trained the terrorists that had so recently attacked their motorcade! Reporters scrambled to get closer to record the event, and hopefully to ask questions.\n\nChancellor Braun turned the microphone over to Gwen as the room became eerily silent. Everyone was aware of the significance of this announcement, and the probable ripple effects of such a dramatic action. Gwen studied her notes for a moment, then looked into the cameras.\n\n\"As you all know, the United States and Germany were both attacked during our recent motorcade. It was an act of War carried out by terrorists financed and trained in Iran. We have convincing evidence that the Iranian government was aware of the existence and the plans of a specific terrorist cell within its borders, and that this is the cell that executed the attack. It did nothing to prevent its criminal efforts, and may have even given its support. Let it be known from this moment forward that terrorism is considered an Act of War by civilized nations and will never be tolerated,\" stated Gwen emphatically.\n\n\"At midnight Tehran time, members of the U.S.10th Special Forces Group, some of the finest soldiers in the world, in close cooperation with a unit of the highly trained German Kommando Spezialkr\u00e4fte, were deployed in northern Iran to put a permanent end to this cell. The mission was successful in attaining its goals of neutralizing these terrorists, while limiting injuries to innocent civilians in their midst. Thirty two terrorists were killed. No prisoners were taken. Several noncombatants did suffer non-life-threatening injuries, which we regret. Three American Special Forces members were injured, but are expected to recover. Two KSK soldiers also received gunshot wounds, but are also expected to make full recoveries.\" \n\n\"Madam President! Are you concerned that Iran will consider this incursion an act of war?\" asked Amber Stahl once Gwen nodded to her.\n\n\"You really should be asking Iran if they are concerned that the United States absolutely does consider aiding and abetting terrorists in their efforts to kill the President of the United States and her family to be an Act of War!\" replied Gwen with passion. \"Unfriendly governments must realize that they can no longer deny knowledge of acts of terrorism originating within their borders, when in fact they are very well aware of these cells. Germany and the United States were jointly attacked, and we jointly responded. Tehran needs to consider its position long and hard. I am prepared to discuss our differences, but I am also prepared to meet any violent action from Iran in kind. America will never turn a blind eye to terrorism, regardless of its origin.\"\n\nA German reporter then questioned Chancellor Braun about her decision to send KSK forces into Iran. Her response was very similar to Gwen's. Germany and the United States stood shoulder to shoulder on this issue, and were prepared to defend their national interests as well as their citizens by any means necessary, be they diplomatic or military. \n\nBack in the United States, the Senate hearings had ended for the day, and Gwen's group was gathered together in the Roosevelt Room of the White House watching Gwen on television. It was prime time in Washington, and talking heads began debating Gwen's actions as soon as she and Chancellor Braun had left the banquet hall after their announcement.\n\n\"I can't believe Sis sent Special Forces into Iran!\" worried Kate. \"This could turn ugly pretty fast.\"\n\n\"You heard how the Senators were grilling Naomi today about Iran. They gave a strong impression that they thought Gwen would be soft on Iran,\" observed Vince Rosen. \"My hearings begin tomorrow and you can bet they'll be all over me about this situation, and they certainly won't be able to take the same approach as they did with Naomi!\"\n\n\"What will you tell them, Vince?\" asked Cindy Quick.\n\n\"I'll tell them that I agree with and fully support President Hammer's decision. They tried to kill our President and her family! What could they possibly expect we'd do? Gwen responded appropriately to the situation,\" concluded Vince Rosen.\n\n\"How do you think Iran will react to the raid?\" asked a concerned Naomi.\n\n\"I have no idea, but I'm certain that our military won't be caught napping, and is prepared for any and all eventualities. This raid was planned very quickly, but I know from my own term as President that all possible consequences will have been considered from the start,\" asserted Rosen. \"If the United States had not acted as we did on this intelligence about the terrorist attack, it would have been correctly construed as encouraging further terroristic acts.\"",
        "Gwen and Steve were conferring with family and friends after the state dinner. \"The raid on Iranian soil is huge news,\" began Ashley. \"Iran has already denounced the actions of the United States and Germany. It's demanding that the world community condemn both nations for their acts of war, as Iran phrased it. It's also demanding an emergency meeting of the United Nations Security Council.\"\n\n\"Lots of luck with the United Nations,\" replied Gwen. \"I spoke with both Kozlov and Li just prior to the raid, and explained exactly where the United States stood on this. Kozlov said he could see Steve's hand in the United States' response and wasn't surprised about our reaction. While Russia is on friendly terms with Iran, terrorism is a common enemy of all nations. He referenced the Chechen attack on Vlad's wedding party, and how Steve and I responded to help our Russian friends. Iran has placed its traditional ally, Russia in a difficult position by supporting, or at the very least, encouraging terrorism.\n\n\"Officially, both Russia and China will complain about the United States crossing into Iran, but they'll temper their positions with strongly worded condemnations of terrorism. Steve's plan to build relationships with these countries is already paying off. Iran will have to go it alone if it decides to flex any military muscle.\"\n\n\"Speaking of Steve, was it my imagination or was he even more popular than usual tonight?\" wondered Paula. \"I thought some of the ladies were going to swoon when Steve asked them to dance.\"\n\n\"Yeah, it seems that all of those cuts and bruises simply made him even more desirable,\" lamented Gwen. \"Women have always been drawn to him, but tonight they were having small orgasms just by being near him.\"\n\n\"I don't think that is at all accurate,\" contested Nadiya as she squeezed her husband's hand and smiled. \"My orgasms were not small. I am still weak in the knees!\" \n\nLaughter erupted as everyone caught Nadiya's humor. \"I have to agree,\" added a laughing Ashley. \"I think mine may have registered on the Richter Scale. You do Steve a disservice by suggesting the ladies near him were having small orgasms.\" \n\n\"It seems like Steve's been causing orgasms just by standing near women and being his charming self. You should have kept your observations to yourself, Mom; the answer to your query has let a very undiplomatic cat out of the bag,\" chided Gwen, maintaining a straight face.\n\n\"I'm sorry, Dear, I didn't catch what you just said. Steve just stepped a little too close and I lost my concentration,\" replied a grinning Paula. \"I have to go sit down now.\"\n\n\"We were discussing the raid by United States and German military on foreign soil,\" reminded Steve. \"How did that degenerate into the intensity and frequency of female orgasms? Remember that Gwen has ordered all meetings videoed.\"\n\n\"Not informal family and friends' discussions,\" corrected Gwen. \"I appreciate how everyone collaborates to prevent me from over thinking my responses. It really helps just to be a member of a nice group of people having a good time. And speaking of good times, Steve needs his beauty rest, so please excuse us. We'll see everyone at breakfast.\"\n\nThe next morning found the ramifications of the raid on the terrorist cell in Iran at the forefront of international news. Many members of Congress were upset that they hadn't been consulted prior to the raid and were only filled in hours after the fact. Iran was demanding that the world unite in condemning the actions of Germany and the United States.\n\nOnce Gwen and Steve had finished a relaxing breakfast, they agreed to meet with the press. At noon Berlin time, Gwen stepped into the press room.\n\nAs was often the case, Gwen greeted everyone with a smile before nodding to Amber Stahl to begin. \"Madam President, the President of Iran spoke to his nation earlier today. He declared that America had created an international incident. He referred to you and your husband as the Dogs of War. He suggested that if the United States didn't apologize and the world communities condemn your actions in the strongest terms, Iran may be forced to rely on its military supremacy to seek justice. How do you respond to that?\"\n\n\"I saw that rant,\" replied Gwen, giving Steve a lingering look. \"If he currently thinks of Steve and me as the Dogs of War, he'll be soon be thinking of us as the Hounds of Hell if the Iranian military retaliates in any manner whatsoever. Every ship, every aircraft, every piece of military equipment Iran owns is under constant satellite observation. We will not tolerate any threatening actions. The United States is prepared to defend its interests.\"\n\n\"Are you surprised by the subdued tone Russia and China have adopted regarding the incursion into Iran?\" asked another reporter. \"Did you expect more vitriol from those two Superpowers?\"\n\n\"I informed the heads of both Russia and China of our intentions immediately prior to the raid, as well as our reasons for them. All nations need to refute terrorism. Any rational government will recognize terrorism as a challenge to its very existence. Rest assured that Russia and China understand the necessity of our actions,\" replied Gwen calmly.\n\n\"Was it difficult for you as President of the United States, as well as a medical doctor, to issue orders to terminate the members of this cell?\" questioned a newspaper reporter. \n\n\"It was a decision I didn't make lightly, but in the end it was the only one I could make,\" replied Gwen thoughtfully. \"I'll never knowingly allow murderers and psychopaths the opportunity to commit barbaric acts. It's my belief that eliminating this terrorist cell will result in saving many lives, and that's very compatible with my core values.\"\n\n\"Many observers feel that this raid into Iran has your husband's fingerprints all over it,\" began Heather Jensen. \"Is this something he recommended? Was the raid Steve's response to this attack on Chancellor Braun and your family?\"\n\n\"Steve is known as the Warrior, and with good reason. He's my most trusted advisor. I've said before that when it comes to terrorists, he's hell on wheels. But make no mistake, the buck stops with me, and this decision was mine to make. Please don't try to separate Steve's contributions from my administration. His fingerprints, as you put it, will be on everything my administration decides to do. We discuss strategy and form policy together; that's no secret. We went over the options and determined our course. I took Steve's and other people's thoughts into consideration, but the final decision was mine to make,\" concluded Gwen. \n\n\"Why didn't you consult Congress before sending troops into Iran?\" quizzed Amber Stahl. \"Isn't that standard procedure?\"\n\n\"I'm not required to consult, placate, or pamper the legislative branch of government. We had a narrow window of opportunity and I decided to take advantage of it. Congress received my briefing in a timely manner,\" dismissed Gwen.\n\n\"Madam President, that response is not likely to sit well with many members of Congress,\" insisted another cable news reporter. \"They're already expressing their displeasure. Senator Lancer stated, and I quote, 'her impetuous reaction to the attack on herself and Chancellor Braun was driven by Ms. Hammer's and her husband's personal anger that the terrorists had tried to kill her and her family.'\"\n\n\"Really? Did Senator Lancer include an argument that he wouldn't take it personally if someone tried to kill him and his family?\" demanded Gwen, obviously irked. \"Let me tell you something. I took it very personally! \n\n\"The American people took it personally! There was an attempt by terrorists to kill the President of the United States and her family. They would have succeeded if I hadn't been with Steve Hammer. If Senator Lancer had been riding with me instead of Steve, Chancellor Braun and I would both be dead right now, along with Senator Lancer, and his family would have to determine whether they took it personally. \n\n\"Terrorism is very personal. They're trying to spread literal Terror by indiscriminately killing random women, children, families, people who are unable to defend themselves. This assassination attempt had specific targets, but their plan was to create as much widespread mayhem and Terror as possible. Perhaps Senator Lancer can remain detached as deranged terrorists ram his car with a truck packed with explosives and try to kill him and his loved ones and everyone else in the vicinity, but that's not me, and we all know it's certainly not Steve. \n\n\"Senator Lancer makes no secret of the fact that he hopes to be the next President of the United States. If he's successful in his bid, he just might survive because of the action I took in Iran. When you try to kill the President of the United States, it becomes very personal to millions of Americans, regardless of their political party or ideology. When you try to harm those near and dear to my Warrior husband, you've just signed your own death warrant!\" proclaimed Gwen emphatically.\n\n\"Then it was Steve's urging that tipped the scales in favor of wiping out the terrorist cell in Iran?\" asked Heather.\n\n\"I didn't say that,\" clarified Gwen quickly. \"Steve made his thoughts known, as did several other trusted advisors, as did German Chancellor Braun. What tipped the scales for me was a firm belief that my Warrior would not have rested until those killers were neutralized. Steve and I have been on the world stage for half of our lives. Have any of you any reason to think that Steve would knowingly allow terrorists intent on harming his family to survive?\"\n\n\"Are you telling us that if you hadn't acted as you did, your husband would have sought revenge on his own, independently of the government?\" asked a stunned cable news reporter.\n\n\"No, I'm not saying that, either. For one thing, revenge is not a goal that drives Steve. Keeping his family safe by eliminating barbaric murderers is not revenge. It is, however, sound logic,\" reasoned Gwen. \"When that terrorist cell began making plans to harm me and my family, they became dead men walking. There was no place on earth where they could've hidden; no hole or tunnel deep enough to save them. Frankly, I'm surprised that I have to explain this to you, or to anyone else for that matter.\" \n\n\"I think I'm finally getting it,\" admitted Heather, looking at Steve. \"Madam President, you're telling us that we should all know by now that the Warrior will defend his Queen and his family against all dangers and all odds. I think that America is proud as hell that we have a First Couple with the strength and courage to face danger and eliminate it so effectively. Is it your expectation that your swift and deadly response will cause terrorists to reconsider their plans?\"\n\n\"Realistically? No, I'm sorry to say I don't,\" replied Gwen. \"These people are zealots. Their hatred is stronger than their fear. Terrorism will not end until people let their hatred go and decide to live peacefully. Part of the problem is that we Americans are hated for all manner of things: for our manner of dress, our respect for women, for our freedom of speech, our freedom of religion, our basic culture. \n\n\"Many of these terrorists will not only forever refuse to accept our freedom, they'll try to end it because if they don't, it'll eventually spread to every corner of the planet. Freedom and equality are fundamental rights. They can be delayed for periods of time, but the innate human desire to be free will never be squelched. That is the ultimate truth that all terrorists will either have to accept at some point or to die, struggling against an inexorable universe.\"\n\n\"Are you actually encouraging people to address your husband as The Warrior and yourself as The Queen? Isn't that more than a little melodramatic and tremendously self-serving?\" asked a reporter from a major New York newspaper.\n\n\"I make no claims about being The Queen, or a queen of any kind,\" answered Gwen thoughtfully. \"People who address me so are being very kind and respectful, but aren't doing so because I ask it of them. But I have been giving a great deal of thought to my husband's position lately. I realize how this may sound strange, but I'm convinced that Steve Hammer is something very special. In ancient Greece he might've been considered a God, or at the very least, the son of a God, much like Achilles. In many ways he's become the most powerful man in the world. I've seen the respect leaders around the globe show to him. I've seen firsthand how he instinctively reacts to danger and achieves the impossible to save lives, as well as to end the lives of murderers and psychopaths.\"\n\nAs Gwen spoke, the reporters turned their attention to Steve as he stood behind her and off to the side. He was unable to conceal his obvious surprise at his wife's words. He quickly moved to her side and placed his arm over her shoulders.\n\n\"My wife is my biggest supporter,\" Steve grinned disarmingly as he hugged Gwen. \"Like most wives, she thinks that her husband is pretty special and I'm pleased that she does. I know that I firmly believe that Gwen is the best person I've ever met and I love her beyond anything I ever thought was possible. We're much like other married couples in that regard.\" Steve then pulled Gwen into his arms for a passion-filled kiss before leading her out of the room, effectively ending his own, and Gwen's, participation in the discussion. \n\nClips of Gwen's news conference played throughout the morning on every news program in America. The group of friends scheduled to appear before Congress once again met in the White House to watch it before heading to Capitol Hill.\n\n\"Wow!\" exclaimed Lisa. \"Gwen just told the world that she thinks Steve is some kind of God, or at least far more than a mortal man. You all know that it'll be the first thing you'll be asked about today. Any ideas how to respond? What was Gwen thinking?\"\n\n\"I think Steve handled that as well as he could have,\" observed Vince Rosen. \"Her remarks were those of a woman very much in love with her husband, who just happens to be the extraordinary Steve Hammer. He's very special to her, but he's still only human. That's how I suggest we handle it.\"\n\n\"Not me. When they ask me about it I'm going to tell them the truth,\" disagreed Naomi as she looked around the table at her friends. \"Gwen's right. How much more proof do we need?\"\n\n\"You're going to tell the Senate and the world that Steve's a paranormal superhero like Captain America?\" joked Kate. \"But seriously, I know Sis was beyond amazed at Steve's quick response to the attack the other day, and looking back, this feeling of hers has been building ever since she met him. She's convinced that he's extraordinary in every way that matters, and I don't see how we can argue that point when it's so obviously true.\"\n\n\"Naomi and Kate are right!\" decided Lisa. \"We can't go out there and dispute what Gwen said, or disagree with her. If we don't support her fully, how can we expect anyone else to do so?\"\n\n\"Okay, I think I see where this is going,\" moderated Vince Rosen. \"I think my first idea was good as far as it went, but it won't satisfy the press, or Congress. I doubt if any explanation will. We simply need to refer to Steve's accomplishments over the years. Gwen was simply pointing out the obvious. The guy is uniquely special.\"\n\nIn Berlin, Gwen was having a late lunch before her scheduled concert. Paula was the first to bring up Gwen's departure from her standard responses to questions about Steve's influence. \"Gwen, do you think you may have gone a little too far in your praise of Steve? Stating that he could be the son of a mythological being is pushing the envelope a little, don't you think?\"\n\nEveryone went quiet as they waited for Gwen's response. \"No, I don't, Mom. Crazed psychopaths recently attacked my family with the intention of killing all of us. That truck bomb was supposed to kill Steve, Saint, Vickie, and me. In the destruction following the blast, those men in the vans were going to shoot any survivors in the area. Obviously the first few vehicles in the motorcade would have been damaged if not destroyed by the bomb, leaving them vulnerable to small arms fire.\n\n\"The terrorists had no way of knowing that I'd have the kids riding with you, and Chancellor Braun with me: that was a spur of the moment thing. They wanted me and my family dead because I'm President of the United States. As you know, it's only because Steve is who he is that we're all alive right now. It's likely that you, Dad, Vickie, and Saint would have been killed as well,\" reasoned Gwen as Paula turned pale.\n\n\"Is this job worth the lives of my loved ones? Not to me! When the dust settled and I saw how banged up Steve was and how close my entire family had come to death, I had a moment of clarity. I knew that I'd make certain those bastards would never have the opportunity to make another attempt. I also had to admit to myself and to the world that Steve's beyond special. \n\n\"It's okay if you don't agree. I don't care if any one agrees. I'll even be fine if I'm removed from office, but I'll never be okay if anything ever happens to Vickie, Saint, or Steve! I realize I may sound like I'm suffering from PTSD, but that's how I feel, and I doubt that'll ever change.\"\n\n\"As a doctor and a friend, I'd say that you're holding up extremely well,\" offered Charlotte. \"I don't see any signs of PTSD, but I do see the undeniable signs of a wife, mother, daughter and friend concerned about her loved ones. Go with your heart, Gwen. If you want to sing Steve's praises from the hilltops, it's okay. You certainly have good reason to feel as you do. \n\n\"I know that you never aspired to be President of the United States and that titles really don't mean that much to you. I also know that you're probably the best president we've ever had, probably because it's not something you ever wanted, and you have no desire to even serve a second term.\n\n\"You've grown beyond anything I ever imagined when we first met in third grade. You've truly become the Queen of Peace. Steve is your Warrior. I don't think anyone could ever dispute that,\" concluded Charlotte.\n\n\"I've been thinking about what Gwen said about Steve, and I've come to the conclusion that she's hit the nail on the head,\" joined in Billy Marsh. \"In this day and age, we dismiss the feats of ancient Gods as myth. I guess that's why they call it mythology.\n\n\"Suppose Steve, or someone very like him, existed in ancient Sparta and accomplished the things that Steve has managed. Isn't it likely that the rest of the community would begin thinking of him as a God, or at least the son of a God? It isn't so much that modern society considers him nothing more than above average, but that in ancient Greece, anyone that did what Steve's done would indeed be hailed as a God.\"\n\nEveryone turned their attention to Steve as he stared at Billy before finally speaking. \"I can see my wife getting a little carried away with her opinion of me, but you're starting to worry me, Billy. Maybe your dress is bunched up in the back and it's affecting your brain.\"\n\n\"Billy, don't worry; you just embarrassed Steve with your comment,\" laughed Gwen. \"He doesn't see himself the way we do. Joking is his way of responding when he's embarrassed.\"\n\n\"Hey, everyone, the Senate confirmation hearings have started back in Washington,\" interrupted Ashley. \"You might want to hear what Naomi said when she was asked about Gwen's statements on Steve and Iran. You can watch in on these laptops.\" \n\n\"Ms. Wilson-White,\" began Senator Kelley of North Dakota once Naomi had taken her seat. \"I'm sure that you heard the incredible comments made by President Hammer earlier today. Let me simply ask you this. Is it your belief that President Hammer's husband is better than other men, a man worthy of being considered a God from ancient Greece?\"",
        "\"Senator, it's my belief that Steve Hammer is the embodiment of what a man, a husband, and a father should be,\" responded Naomi. \"When Gwen first made her observations about Steve, I was as surprised as anyone. But then I began thinking about her statement. Consider his history: Why is he called the Warrior? Who in Washington, or anywhere else can compare with him in any meaningful way? Gwen wasn't boasting. She's a brilliant woman. She's a very good physician. She's been with Steve for seventeen years. She's seen him do things no one else could ever do. I'd think twice before disagreeing with her.\"\n\n\"Did you have any firsthand knowledge that President Hammer's husband would even consider mounting some sort of raid into Iran?\" asked the politician irately. \n\n\"I have to admit that I did not, nor did that possibility ever occur to me. But then I'm not Steve Hammer. I realize now that I should have considered that very scenario. What does a true warrior do when a person or a group tries to kill his family? He does whatever is necessary to protect his loved ones. If the United States hadn't taken out that terrorist cell, it still would have met an untimely end, sooner rather than later.\" \n\n\"Are you telling this committee that you believe that President Hammer's husband would have terminated this cell on his own if the United States hadn't? Do you also believe that Steve Hammer is some kind of deity?\" demanded the incredulous Senator.\n\n\"What I'm trying to tell you is this,\" replied Naomi. \"That terrorist cell became destined for elimination the moment it attacked the Warrior's family. I realize now that there could be no other outcome. Do I feel that Steve is a deity? That's more difficult to answer. Everything he's accomplished since high school points to one obvious conclusion. Simply put, he's incredible. I defy you to name one other person that could have possibly done what he's done over the years and survived. This country was founded on the belief that all men are created equal, and Steve truly subscribes to that belief. That said, Steve has no true equals, and that's what President Hammer was telling us.\"\n\n\"You're saying this with your husband sitting right behind you?\" asked Senator Kelley. \"Such a statement indicates that you believe Steve Hammer is a better man than your husband. That must be a bitter pill for him to swallow.\"\n\n\"You're trying to tangle me up with my husband?\" gasped Naomi with an incredulous chuckle. \"Senator, in the vernacular, that just ain't gonna happen. Jared is an alpha male, secure in his position and secure in my love for him. Jared feels the same as I do; he agrees that Gwen is accurate in her assessment. In our group, most of the men are alphas. They're extremely intelligent, powerful men, devoted spouses, and wonderful fathers, accustomed to making bold decisions and sticking to their guns. Even in such a crowd, Steve stands out. Steve's an alpha who draws other alphas to him. He's an alpha to other alphas. I don't know if this is an accepted term, but I once heard him referred to as an alpha prime. \n\n\"He and Jared are beyond friends. They're closer than brothers. They share a bond that only true alphas can experience, and their trust in each other is absolute. You won't ever hear Jared disparage Steve for any reason. There's no jealousy in our marriage, nor in our relationships with others. I might add that if Steve had deemed it necessary to take a personal trip into Iran late some night, Jared would have gone proudly by his side. My husband is the guy who once deliberately placed himself in the way of bullets intended for a high school student, Steve's girlfriend at the time, who has now become the President of the United States. None of us has ever forgotten that he saved Gwen's life, and I've only disclosed the tip of an iceberg here, so if you're attempting to sow dissention between any of President Hammer's closest friends, I suggest you give it up as a bad job.\" \n\nIn the face of that total response, Senator Kelley yielded the floor to Senator Williams of Arizona to take up the questioning. \n\n\"The United States knowingly violated Iran's airspace and put boots on Iran's sovereign soil. Do you see how this may be construed as an act of war, Ms. Wilson-White?\"\n\n\"Senator, the administration sees Iran's support of a terrorist cell intent on killing the President of the United States as an Act of War all by itself. You can use whatever terms you want, but the fact remains that President Hammer moved to protect herself, her family, and many other innocents. She's very interested in Iran's response. That will determine her next step. There will be no apology and no equivocation. The actions of Iran were solely responsible for our measured response. The Hammer administration will allow Iran to posture and bluster, but any direct military action it takes will be met with deadly force,\" promised Naomi.\n\nAt the same time, Kate was facing questions from the Senate Judiciary Committee. This time it was Oregon's Senator Ridd. \"Ms. Martin, I'm sure that you are aware of the rather bizarre statement your sister, President Hammer made this morning in regard to her husband. Would you care to clarify or comment on it?\"\n\n\"I apologize, Senator Ridd. I did watch her news conference, but I recall no bizarre statements. I'm afraid I can't help you there.\"\n\n\"So you intend to support your sister, even at the risk of not receiving the endorsement of this committee?\" glared the Senator. \n\n\"It really should come as no surprise to you or anyone else that I'll support my sister to the gates of hell and beyond,\" quipped Kate. \n\n\"So it's your position that President Hammer's husband is more than human, perhaps the son of a Greek God? You've been nominated to be the next Attorney General, and yet you hold such foolish ideas? How are we supposed to take you seriously?\" \n\n\"In ancient Greece, a man such as Steve would have been considered the son of a God at the very least, whether that was his true ancestry or not,\" replied Kate. \"I'm certain that most politicians are more concerned about this because it's true than because they think it's a ridiculous claim. I only recently left President Hammer's tour so I could take part in this hearing. For seventeen years I've seen that man do incredible, and at times, unbelievable things. Steve Hammer is far more than an average man. To deny that fact is to deny recent history.\"\n\n\"This attitude is not helping your chances of being approved by this committee,\" countered Senator Ridd. \"I'd advise that you consider your words carefully.\" \n\n\"Senator, you appear to be advising me to deny the obvious. Instead, allow me to state what my sister Gwen is too modest to tell the press,\" responded Kate with passion. \"Gwen is first and foremost the Queen of Peace, next the Lady in Red, and lastly the President of the United States. She told everyone that Steve is the most powerful man in the world, but she failed to mention that she's the most powerful woman on the planet, and will continue to be exactly that long after she leaves the presidency. That power comes directly from the love and support of an overwhelming majority of the citizens of the world. It's beyond anything Congress has ever seen, or that you can control, which is the part that drives you control freaks nuts. Together, the First Couple have no limits. You can defeat my nomination, but your pathetic political machinations will have no effect whatsoever on my sister and her husband, nor on what they will achieve. You have no idea what you're dealing with.\"\n\n\"Did you hear what Kate just told the committee?\" marveled Stephanie. \"She doesn't leave any room for doubt about how much she supports you, Gwen. Your sisters are your biggest supporters, although Naomi was right up there with her.\"\n\n\"It's very humbling, but I'm afraid they're getting even more carried away than I did when I compared Steve to the ancient Greek Gods. When I listened to Kate and Naomi try to defend me, I realize how far out I must have sounded,\" admitted Gwen. \"I may have just ruined any chance they ever had to be approved by the Senate. On the plus side though, this is a difficult, thankless job that I really don't need and would be better off without, especially if it places Vickie and Saint in danger.\n\n\"But right now I need to concentrate on giving Berlin the best show they've ever seen. Steve and I are going to take a short nap before we have to go to the concert site. These shows are really quite tiring,\" admitted Gwen.\n\n\"You make sure Gwen manages some sleep,\" admonished Paula to Steve. \"I know what she really means when she talks about taking a nap with you. Both of you have been pushing extremely hard on this trip. Please get some rest. You're going to need it. I've heard that they're expecting a huge crowd tonight at Potsdamer Platz and everyplace close.\"\n\nLater that afternoon in Washington, as Kate, Naomi, Jason, and Vince Rosen were wrapping up their testimonies, Gwen and Steve were making their way onto the temporary stage. Potsdam Plaza was packed with adoring fans eager for the music to begin. Steve and Gwen spent a moment taking in the incredible sights surrounding them.\n\n\"This stage was erected where the Berlin Wall was located all those years ago,\" pointed out Gwen to the entire band. \"This is an historic plaza in a very historic city. We need to give these fans our best, since they've been brave enough to show up after all the terrorist activity in Berlin recently.\" \n\n\"Personally, I think you and Steve are demonstrating some major nerve by showing up tonight,\" insisted Jordan. \"You guys came that close to being blown up by that truck bomber. Steve still looks like hell, no offense.\"\n\nA few minutes later, Gwen strode to the front of the stage to greet hundreds of thousands of adoring fans. Before the massive crowd could react to her appearance, Gwen dropped to one knee and bowed to the fans. Within seconds, every member of the huge audience was on one knee, all while cheering and applauding Gwen's homage even as they returned it. Smiling, Gwen stood and motioned for the audience to do the same. The din increased as people yelled and whistled their approval. Flashing her trademark smile, Gwen strode back to the band, grabbed Steve's hand, and pulled him to the front of the stage where he stood alongside her.\n\nThe huge screens placed around the plaza filled with the faces of America's First Couple as they waved to the crowd. Steve's face still sported many hues of black, blue and yellow. Several small bandages still covered places on his face that had received stitches. Knowing what Steve had risked while receiving the bruises, cuts, and contusions he displayed, the crowd yelled and screamed in support. Steve waved again before pulling Gwen close and sharing a smoldering kiss as the audience yelled its approval. \n\nAs the din began to abate, Charlie signaled the band to begin its opening number. Gwen was stoked by Steve's passionate kiss in front of the huge audience, as well as the extremely warm reception the fans were still giving her. Once again flashing her best smile, she began strutting across the stage as she sang We Will Rock You and invited the crowd to join in. \n\nThe rest of the evening was a prolonged blur as every musician performed at their highest level for over five hours. The crowd somehow grew larger and the enthusiasm seemed to increase steadily. When Gwen was joined by Jordan and Kathy Perrine as they danced and sang across the stage, the huge crowd went into a frenzy. Three of the sexiest, most beautiful women in the world performing right in front of them in sexy, tight leather outfits was almost more than they could endure. By concert's end, the audience was as exhausted as the performers. Five hours of standing, dancing, cheering, applauding, and whistling had taken its toll.\n\nOnce the final song had ended and the stage was in relative darkness, everyone in the band looked to Charlie for his expert assessment. He looked around at the assembled musicians and broke into a huge grin. \n\n\"That may have been our best show yet. Gwen really brought her A-game, but Jordan and Kathy turned their performances up a notch or two and the fans loved it. Some of those moves you ladies made had to cause some serious discomfort in the jeans of every straight male watching, including band members. It wasn't just great music, but it was incredible entertainment. We're giving complete performances now, and it's amazing to see and hear,\" proclaimed Charlie proudly.\n\nGwen and Steve slept a little later than usual the next morning. The terrorist attack and the following days had been extremely stressful on the couple, and the extra sleep was well deserved and much needed. They were scheduled to depart for Paris in the early afternoon, so Gwen and Steve dutifully appeared in the press room in the hotel before heading for the airport.\n\nGwen nodded to Heather for the first question. \"My Queen, your nominees for Secretary of State and Attorney General possibly lost whatever committee support they may have had yesterday when they demonstrated unwavering support for you and your warriorWarrior. How did you feel about their testimony yesterday?\"\n\nGwen studied Heather's face for several seconds as she mulled over Heather's salutation before breaking into a smile. \"Thank you, Heather. It was humbling to listen to one of my best friends and my younger sister voice such strong support for Steve and me. I would think that such loyalty and honesty should advance their chances for committee approval. They are remarkable women. \n\n\"I need to be honest, however. Kate and Naomi will be at my side and helping me every day, in every step of my presidency, regardless of the actions of the Senate. I am not going to spend any effort or waste any time twisting arms, cajoling, or pleading with Congress. My oath was to protect and defend the Constitution and the people of our great nation.\n\n\"The United States has been saddled with party politics and personal agendas in Congress for far too long. The American people deserve better. We all know that. The plain truth is that they will not be getting anything better until they take a more active role in their own government. They need to make their desires known to their elected representatives, and to replace the ones that don't reflect their ideals. Americans have to stop blaming Congress for its poor performance and accept responsibility. Demand better. Let them know what you require if they're to remain in office. Don't accept mediocrity and cronyism.\" \n\n\"Madam President, can you effectively function as President of the United States without the support and cooperation of Congress?\" questioned a newspaper reporter.\n\n\"You probably have a better grasp of that than I,\" replied Gwen calmly. \"It appears that we'll be finding that out, doesn't it?\"\n\n\"My Queen, do you care to respond your sister's statement that in terms of importance and power, your titles of Queen of Peace and Lady in Red surpass even the position of President of the United States?\" asked Amber Stahl.\n\nOnce again, Gwen looked at her questioner slightly longer than usual before smiling. \"Thank you, Amber. The Queen of Peace title is very real to a great many people around the world. I would never disrespect them by making light of it. I treasure the fact that so many people feel I have earned such a title. It simply demonstrates the respect some people have for me as well as the respect that I reciprocate.\n\n\"Lady in Red is the company that Steve, Jordan, Charlie, Kate, Lisa, and I have nurtured and developed into an extremely successful business. That business has spent billions of dollars in service to less fortunate people around the world. When I attended that first dance with Steve dressed in the red dress I'd borrowed from Lisa, I became known as the Lady in Red. I'm the face of the company. Other than my personal relationships with family and friends, my children, and my marriage, it's the single accomplishment in my life that I am most proud of and least willing to let go. Lady in Red does far too much for far too many people for me to ever allow it to fail in any way. \n\n\"President of the United States is the most prestigious title a person could ever have, in my opinion, but it isn't the most important position a person can ever attain. An extraordinary chain of events catapulted me into this office. I'm extremely proud to be your president, but I'll be quite satisfied when I no longer am. I'll do my best to fulfill my duties to the American people so long as I hold my Office. You can be sure of that, but it doesn't mean so much to me that I'll surrender my principles to retain the office, or to convince Congress to do the job the American voters should expect of them.\" \n\n\"Madam President, you were just addressed as 'My Queen' by two reporters. You smiled and expressed your thanks. Are you now encouraging reporters and others to refer to you as our Queen?\" demanded a cable news reporter. \n\n\"I simply thanked them for the obvious respect they were showing me. You may feel free to address me in almost any polite fashion, and I'll be happy to return the respect to you,\" responded Gwen.\n\n\"Warrior, sir? May I ask you a question?\" asked a middle aged reporter for an American West Coast paper.\n\nSteve gave the woman a big smile and nodded to her. \"Would you have attempted to neutralize that terrorist cell in Iran if the United States hadn't?\"\n\n\"I don't deal in speculation,\" replied Steve. \"That mission was handled extremely well by Special Forces from both nations. I will state only that anyone who tries to harm my wife or my family should know that I will not rest until the threat they represent has been eliminated.\" \n\n\"Madam President, have you been surprised by the apparent lack of retaliation by Iran?\" questioned a silver haired reporter from a Canadian station.\n\n\"Not really,\" admitted Gwen. \"There really isn't much they can do, other than release more terrorists into civilized society. They've recently seen how serious we are about putting an end to terrorist training cells, and they can expect far worse if they send out killers to commit crimes in other nations either openly or clandestinely. The United States takes these aggressive acts very seriously and will respond accordingly. Now that Germany and we have broken the ice so to speak, I suspect other countries will decide to follow our lead if they are similarly attacked.\n\n\"We have to prepare to catch our flight, now. Thank you for your questions. We'll do this again in Paris,\" promised Gwen with a bright smile. \"Have a great day!\"\n\nA few hours later in New York City, Tyler and Sybil were attending a press conference with the NFL commissioner. Its purpose was to announce the transfer of ownership of the Washington Redskins to Lady in Red. As COO of the company, Tyler was there to represent the otherwise preoccupied owners.\n\nOnce the Commissioner finished his comments, the questions began. \"Mr. Smith, are you going to keep the same coaching staff? What about general manager? What are the plans going forward for the team?\"\n\n\"That's pretty simple to answer,\" replied Tyler. \"The new owners of the team have decided to place all decisions in the capable hands of Jared White. He'll serve as director of football operations and will have complete control of all aspects of the team concerning personnel, coaches, administration, schedule, and so on.\n\n\"Jared has been very close friends with the owners of Lady in Red ever since high school. He was in the same graduating class as Jordan, Gwen and Steve, along with myself. He played alongside Steve in high school, and again since they first entered the league together to play for Washington. We've promised Jared he won't be second guessed from above, and he won't have to worry about keeping his job,\" chuckled Tyler. \"He's a close friend with an astute football mind. In the eyes of Lady in Red, he's golden.\"",
        "\"Has Jared given up his hopes of playing another year or two since he's going to run the team?\" asked a sports reporter from a Washington paper. \n\n\"You'll have to direct that question to Jared, although speaking as a fan, I hope he does play another year or two,\" replied Tyler.\n\n\"What about Steve Hammer? Will he play another year now that he owns the team?\" asked the same reporter. \n\n\"Again, you'll need to discuss that with Jared. I'd imagine that he'll try to persuade his old friend to play another year or two, but that's entirely up to him. Right now, Steve Hammer has some pressing issues on his plate on national and international levels, so that may not be something he's even considering at this point,\" reasoned Tyler. \n\n\"Won't it be a public relations issue for President Hammer to own a team sporting a name that many Americans feel is racist?\" questioned a female reporter with ESPN.\n\n\"Not at all,\" replied Tyler confidently. \"A logo's already been designed for the team and its new name. Lady in Red has decided to rename the team the D. C. Spartans. You can guess where the Spartan name came from. Sybil will now unveil the new logo so everyone can see it.\"\n\nWith that, Sybil walked to a wall and tugged a string, allowing a cloth cover to drop to the floor, revealing a poster in an ornate frame. The new logo was a darkened silhouette of two well- muscled men, each holding a red, white, and blue shield to one side with their other arm over each other's shoulders. On the shield to the left of course was a D, and on the other a C. Each man was wearing a Spartan-like battle helmet, also in red, white, and blue. Between the silhouette of goalposts above and behind the players was the colorful name SPARTANS.\n\n\"In case you haven't figured it out yet, Jared and Steve posed for the artist that created the logo,\" revealed Tyler, \"and the team colors are red, white, and blue. We believe the fans will be very receptive to the new owners, the new name, and the new logo. The NFL has already approved of the name change and logo design.\" \n\nThe new name, ownership and management of the local NFL team quickly became big news in the nation's capital. Some fans complained bitterly about the team's name change, but for the most part everyone was quite approving of it. Two days later of course, any news about the football team was relegated to the back page. \n\nThree Senate committees reported to the Senate favorably for Jason Hunter, Senator Meredith Chatham, and Jeff Wilson. Both houses of Congress appeared to be headed toward approval of Vince Rosen as Vice President of the United States.\n\nBoth the Judiciary Committee and the Senate Foreign Relations Committee reported unfavorably to the senate. Kate and Naomi had not secured the approvals of the committees reviewing their qualifications. \n\nGwen and Steve were attending the State Dinner in Paris when the news of the Senate committees' rejections of Kate and Naomi reached them. Steve led Gwen onto the dance floor so he could speak to her somewhat privately. \"The full Senate still has to vote. My sources tell me that pressure from voters is really building in the Senate. If the votes were taken right now, Kate and Naomi wouldn't quite make it. By next week, when the vote is actually held, things may be a little different.\"\n\n++++++\n\nI thank Tex Beethoven for making this a better read!"
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "senate",
        "terrorists",
        "nominations",
        "military",
        "football team",
        "vice president"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-03-ch-06"
}