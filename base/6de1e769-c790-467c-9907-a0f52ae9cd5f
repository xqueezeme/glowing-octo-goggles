{
    "title": "Road Trip Pt. 02",
    "pages": [
        "<center>Chapter 8\n\nTennessee</center>\n\n\n\nIn another few months, all hell would break loose in the Arkansas wildlife refuge I camped at overnight: the various hunting seasons would begin. Rabbits, squirrel, ducks, geese, deer, and even chipmunks beware! The hunters are coming! The hunters are coming!\n\nIn absolute stillness, I stood with a small empty envelope in my hand, alone on the banks of the White River in Arkansas, as I watched my late wife's ashes drift slowly away from me on the surface of the water carried by hidden eddies. I thought of the symbolism: ashes instead of life, drifting away instead of increasing intimacy; eddies representing the unpredictable events in our lives that change us forever, and the river personifying our continuing existence and flow through life. \n\nI shook my head, still in disbelief that Karen had departed this life. I believed that her spirit carried on, and could even become part of another being who returned to this realm to continue their spiritual evolution and growth, maybe even to interact with me in some way. Maybe we were still soul mates. I completed my small ceremony and walked back to the Harley. I'd packed up most of my campsite, so I only needed a few more minutes before getting back on the road.\n\nI'd ridden my motorcycle to this campsite the day before from El Dorado, Arkansas, leaving behind a beautiful woman named Pat that I easily could have spent more time with, but instead I chose to continue my meandering path through my grief and self examination, and through the remainder of the lower forty-eight states. I wondered if I were maudlin or ghoulish by continuing to dwell on Karen's death and by spreading her ashes in every state I visited. I wondered if I'd finish my healing by the end of my trip \u2013 so young, so beautiful, so loving, so exciting, and so dead \u2013 and even now, mysterious, as I continued to discover things about her from her sister Lauren \u2013 things she chose to hide from me.\n\nI crossed over an impressive and aging metal bridge that spanned the Mississippi River and by ten o'clock I'd started rolling through the southern suburbs of Memphis.\n\nMemphis was another exception on my journey. I had chosen to side step most of the large cities along my route. I was of a mind that if you'd seen one large city, you'd seen them all; further, I'd had to travel heavily the past ten years in my technology work, and I had seen so many of them they all started to look alike. Thus, I'd skipped such interesting places as New York, Washington, Philadelphia, Atlanta, and even New Orleans. I'd also chosen to avoid the Interstate highways when I could; I wanted to see the America away from the heavily traveled paths, see what had happened to small town life, and open myself to new adventures that I believed lay off high speed routes. Somehow, I knew my destiny lay on these back roads, and not on some Interstate.\n\nAs I got near Memphis, I cut east until I found Elvis Presley Boulevard. A short ride north and I found Graceland \u2013 home of the King of Rock and Roll for two decades starting in the mid-1950s. Sometimes a sucker for 'schmaltz,' I stopped to tour the attractions at Elvis' house and the surrounding buildings. I walked through the small mansion staying behind the velvet cordons, enjoying views of the white living room, the green carpeted and famous Jungle Room, and even the King's grave. I got a look within his custom jet named after his daughter Lisa Marie, the large collection of his clothing, awards and memorabilia, and some of his cars \u2013the famous pink Cadillac and even his Harley Davidson motorcycles. I had a late lunch at the Rock and Roll Caf\u00e9, and later concluded that everything within at least three miles of Graceland was named 'Elvis Presley\" something.\n\nI had always been a fan of Elvis. I admired how he transformed music, almost single handedly launching the rock and roll craze, as well as the era that persists today where the lead singer has to be at least slightly outrageous. My love of music brought me to Memphis and would take me to Nashville; it also reminded me of how much I'd missed in the past few months as I grieved. I missed the music; I missed the happiness the music brought me. I resolved to get both back soon.\n\nIt started to rain about an hour out of Memphis. I changed my plans and ended the day at the Natchez Trace State Park an hour later. I set up the tarp and tent in the rain, not a pleasant task. As I did, I had a transistor radio playing through my headset; the weatherman assuring his listeners that the weather front would be gone by morning. \n\nAfter I got under the cover of the tent and tarp, I unpacked my laptop computer and spent the rest of the afternoon composing emails to my sister Anna, my sister-in-law Lauren, Kim, and a couple of other friends. I told Anna and Lauren about my week in El Dorado as a counterman in a diner, and how I'd helped the police apprehend the man that looked like me and rode a similar bike \u2013 the similarities that had resulted in my spending a night in jail before I could prove my innocence.\n\nSomewhat cavalierly, I told Anna and Lauren about my assignation with Pat, the daughter of the owner of the diner and mayor of El Dorado. I made brief mention of my civic medal in connection with apprehending the man doing the chain of robberies. This was the first time I'd sent Anna an email containing mention of my 'love life,' although I omitted the lurid details that I did share with Lauren \u2013 how Pat and I made love our first night together all over the diner: on counters, tables, kitchen work surfaces, stools, and the bar; and how we flirted outrageously at work. Lauren, my kinky sister-in-law, would chastise me if I didn't send her an explicit email \u2013 something that would titillate her fantasies and provide her masturbatory material. When I got near a Wi-Fi connection the next day, I'd send the emails.\n\nI also wrote in my journal, pasting into the document file both of the emails, and then adding more details about what I thought about Pat, my mother-daughter experience in Louisiana, the current state of my rapidly healing wounds from the Alabama shooting, and my most recent thoughts about Karen and her passing. I could tell by how I wrote and my selection of words that I'd started my transformation back to being a whole person \u2013 someone not constantly saddled by loss and grief.\n\nI managed to start a small fire, even in the rain, and fixed dinner from my small collection of nearly-ready-to-serve meals. I read while there was still light, and when I found myself squinting to see the words on the page, I put things away so they'd stay dry and went to sleep.\n\n<center>* * * * *</center>\n\nThe weatherman was partially correct. I awoke not to rain, but to deep penetrating fog that wafted through the forest and gave everything an almost eerie appearance. I did some exercises for the first time since the shooting, taking care not to stress my lower left side. I did enough to work up a sweat that necessitated a swim in the river. I packed up the wet tent, tarp, clothes, and camp gear; got everything stowed in place on the motorcycle; and left the campsite. I took time on my way out of the preserve to walk part of the trace or trail, feeling in the ghostly fog the presence of the thousands of famous explorers, settlers, and Native Americans that had used the trail since the beginning of time.\n\nMight I be on a similar exploration as my forefathers that walked the trail? Was my road trip the equivalent journey? They had no idea where they would end up, or even if they would survive. Did I feel the same? I thought so.\n\nThe Trace felt so significant to me after those thoughts; I left another spread of Karen's ashes in a pretty place beside the main path. I thought of how I'd parsed some of Karen's remains into the small envelopes originally meant for saving rare coins. I thought back to the various places I'd left a piece of Karen \u2013 and a piece of me. Could we ever reclaim the parts of us we leave behind? I also thought about myself and worried about my self-centeredness.\n\nAs I started my slow ride east, I realized how I'd compartmentalized my life since Karen died. There were my memories of Karen and our life together for eight years. I had been trying to separate those from the reality of my current life \u2013 to put those memories behind me because her death had made each memory painful and bittersweet. In another compartment were my travels on this road trip, including the people I'd met and loved since Karen's death. In still another, my sister Anna and Lauren, and my questions about what my future might be with them.\n\nI'd left my career behind, closing off that compartment \u2013 my 'Geek Years,' Karen had called them. Since she died I'd gone into a 'brain-dead' time period when I didn't want to think \u2013 or remember \u2013 or work. I wasn't motivated to do anything except renovate the motorcycle. I still wasn't ready to contemplate what I would do after my road trip. I had learned that life could be unexpectedly short so I wanted to be sure that my next job would be something that I really enjoyed doing. What that would be, I had no idea. Hopefully by the end of my trip, I would have figured something out.\n\nDuring the trip I had opened up a long closed compartment of my Army years. I had sought out some of my old buddies and had a few more of them to visit in the days ahead. It was good to connect with the guys who were my life and death companions. It was also good to be physically fit once again after years of my neglect. My gunshot wound had temporarily stopped my morning runs and heavy exercise, but I had replaced them with lots of sexual exercise \u2013 the best kind, I thought as a smile crept across my face.. \n\nI gave myself some points in the Life Compartment I named Spiritual Growth because of my gratitude, thoughtfulness, communion with Nature when camping, and my service to others \u2013 rescuing a farmer, saving some kids floating out to sea, stopping a rape, helping out at the diner, and helping to catch a felon, plus how I felt about the people I met. I'd found loving and willing sexual partners along my travels; they had stimulated my creativity in lovemaking, and Kim had taught me how to add a spiritual component to my lovemaking. However, I felt something was still missing, and I was just skimming the surface in a superficial way.\n\nEach of these areas of my life was a compartment, disconnected from the others, and sometimes, not scoring very high in terms of my performance. I didn't feel whole. I didn't feel integrated. I knew that I needed to become a cohesive whole if I were to ever feel truly happy. It all seemed a daunting task because I was still in healing mode. However, I was glad that I now had a way to look at my life and see what I needed to work on.\n\nI treated myself to breakfast at the Waffle House in Dickson, sent the emails I'd composed the night before over their Wi-Fi, and plotted a route to Nashville. I wanted to make an exception for this medium size city and visit because I loved music, especially country music. So much of country music dealt with lost love in some way; I could remind myself about Karen but sure didn't need help to do that. Since her death I'd avoided listening to country music, but now I felt I could back into it. I'd see how I felt after Nashville. The Country Music Hall of Fame and Museum was on my list, along with attending a couple of matinees and evening performances by some country singers. Since Graceland had been so interesting to me, I thought I'd take the four-hour 'Nashville Homes of the Stars' tour too. \n\nI figured I'd establish a campsite near Nashville and use that as a base of operations, so I spent some extra time using the restaurant's Wi-Fi 'hot spot' while I could. The first two camping places I researched were a not-my-kind-of-place or didn't allow overnight camping. A few more were far on the other side of the city. I decided to camp at Radnor Lake, a nature preserve that also didn't allow overnight camping, but I figured I could use the motorcycle to go 'off trail' and away from the parking and patrol areas, find a place, store my camping gear, and then go into the city for the entertainment. When I came back, I wouldn't build any fires, and I'd keep a low profile until well after the park had opened each morning.\n\nI left Dickson and took one of the few roads that would lead me directly to Radnor Lake. I'd crossed under Interstate 40 on an old, unkempt, and untraveled two lane macadam road, when in the middle of nowhere I came upon a large expensive looking Prevost bus \u2013 the kind that are about forty-five feet long, beige, and cost about a million bucks because they have been so extensively outfitted. The engine compartment of the bus was open, and steam was pouring out of the opening \u2013 not a good sign. A half-dozen people stood near the uniformed driver looking at the engine. I slowed to a crawl, intending to stop and offer assistance. There was no other traffic on the road and probably hadn't been for days.\n\n<center>* * * * *</center>\n\nStanding by the bus as I came along side was a sexy young woman in her late twenties in daisy duke shorts, a red checked shirt, a ratty looking cowboy hat, big sunglasses, and a pair of western boots. She waved wildly for me to stop \u2013 and I did, right next to her; I shut off the engine. I noticed that everyone else watched her, so I figured she was the Queen Bee of the bus. \n\nShe jumped up and down with glee when I stopped; \"Hi \u2013 no one stops for someone in trouble any more \u2013 if they even drive on this road; I'm so grateful that you stopped. We shouldn't have come this way, and now we're broken down \u2013 as you can tell \u2013 and there's no cell phone coverage out here. We've been here almost an hour, and no one has come by.\"\n\nAs several others walked up to me on the motorcycle, I smiled broadly at her; \"I'd be glad to help anyway I can. Do you want me to send someone, or give one of you a lift to civilization? I can drive them back here too.\"\n\nThe pert young woman said eagerly, \"I'm hoping you can give me a ride into Nashville; I'm late for a recording session, and I'd be ever so grateful. You can even come and watch if you want; many people think they're fun to attend. \n\nJust then, one of the men standing in the group politely but sternly intervened: \"Miss Lee, you shouldn't go riding off with a stranger. You don't know who he is or anything else about this man.\" I ignored the slight figuring I'd tell any female friend of mine the same thing before she rode off with some stranger on a motorcycle.\n\nShe turned back to me and said, \"Let me introduce myself; my name's Crystal Lee, but I guess you already know that?\" She had a vivacious style about her.\n\nI took her cue and responded, \"And, I'm Jim \u2013 Jim Mellon. I'm from Massachusetts taking the long way to San Diego, and I'd be delighted to give you a ride into Nashville \u2013 maybe you can aim me at a good place to camp out along the way.\" We shook hands; I also offered to shake hands with the heavyset guy that had admonished her not to go with me; he ignored my hand.\n\nI made one further statement that amused everyone standing around. I told Crystal Lee, \"Sorry, and I hate to admit it to you, Crystal, but I don't recognize your name. I've been out of touch for a while \u2013 a long story. You must be in music if you're late for a recording session.\" \n\nCrystal smiled and said, \"Yes, I'm in country music.\" Proudly and in a way that showed she was surprised at her own accomplishment, she went on, \"I have the number one country music hit in the country right now \u2013 'Flirty, Flirty Cowgirl' ... and if I don't get some new tracks laid down real soon I may become the shortest one hit wonder in decades.\" I thought I'd heard her song on the radio a few times without paying attention to the artist.\n\nCrystal went on, \"There's a band, backup singers, a whole recording studio, and my agent waiting. We're all returning from a public appearance south of here, and the band left in their bus before we did. These folks are part of my entourage \u2013 my helpers and groupies, and I love them all.\" She attempted some introductions, but the names went by quickly.\n\nCrystal said, \"Let me get my purse; I'll be right back.\" She turned and ran back into the tour bus. I'd started to realize that this was a country music star of some kind on her way to some important business.\n\nThe heavyset man spoke with me as soon as she was gone in a voice that was both polite and intimidating, \"I'm responsible for Miss Lee's security, so humor me. May I please see your driver's license?\" I pulled my wallet out and flipped it open to my Massachusetts photo license. He studied it and me \u2013 comparing the photo to my face. He pulled a paper from his pocket and wrote down some salient information from the license along with my motorcycle registration number. As he wrote, I gave a thumbnail description of my trip and why I happened to be traveling by on the road. He conceded that not another vehicle had appeared the whole time they'd been broken down. I conceded that he was paid to be suspicious of anyone interacting with his charge.\n\nHe said to me, \"Miss Lee is headstrong, and trusts too easily. I hope you realize the burden you assume by transporting her \u2013 on a motorcycle too.\" I nodded at his assertion.\n\nThe bus driver came up and joined the bodyguard and me. He thrust a business card in my hand and asked that I call the phone number on the card as soon as I could, and explain about the breakdown and where they were. I promised I would send help back soon.\n\nCrystal came up to us with her oversize purse over her shoulder. Brad, her bodyguard, again tried to discourage her from going with me. She refused his advice, and I could see he couldn't do anything other than counsel her.\n\nShe turned to me and said, \"Jim, let's go. I'm really late, and I hate to be late.\" The others from the bus had gathered around to watch her departure.\n\nI explained to Crystal that she had to wear a helmet and not the cowboy hat; I put that in the side compartment as she tucked her long brunette hair beneath the helmet I'd bought weeks earlier for Kim and buckled the chinstrap as though she knew what she was doing.\n\nI got Crystal situated on the seat, apologizing that she'd have to hug me because of all the camping gear on the back of the bike. As I mounted in front of her, I thought to ask, \"Do you know where we're going?\" She nodded; I started the bike and off we went to Nashville. \n\nCrystal would yell in my ear when we got near a turn. As she directed, I got on Interstate 40. A few miles closer to Nashville we stopped at a rest area, and I telephoned the bus company. They promised to send a van for the remaining passengers and a repair truck. \n\nBefore we started off again, Crystal asked me, \"Did you ever see the movie 'The Princess Diaries?'\"\n\nI allowed as how I hadn't, however, I had a hazy idea of the plot.\n\nCrystal told me as she remounted the motorcycle, \"Well, that's me. I was this 'Plain Jane,' and then one day about nine months ago I found myself in the spotlight ... with groupies, a bodyguard, an agent, all sorts of others around me, public appearances, and people always wanting a piece of me.\" She paused and added, \"Jim, you are a breath of fresh air, particularly for not fawning all over the place when you learned about me. You're like the guy in the story that rescues the princess and shows her the real world.\"\n\nI didn't know how to respond to all that so I just shrugged and gave my silly grin. We got back on Interstate 40 east, and then took Interstate 65 north a few exits. \n\n<center>* * * * *</center>\n\nA few more turns off the Interstate exit brought us to a two-lane road where after a mile she had me turn off between two ornate gates into a long straight driveway.",
        "At the end of the drive were several buildings and about twenty cars. From the largest structure, I could hear the muffled sounds of a country band playing. A couple of photographers stood near the parked cars. They showed unusual interest in us as we rode up. As I stopped and parked the bike, each of them started taking pictures of the two of us. At Crystal's whispered suggestion, neither of us said a word or responded to the dozen or so questions hurled at us by the two reporters.\n\nInside, Crystal said, \"I'll explain later about the paparazzi, but for now just come with me. I think you'll enjoy yourself. Of course, if you get bored you can leave; I'll find a ride home from one of the band or my agent.\" \n\nI followed her down a short hallway, and we entered a room with the largest mixing board I'd ever seen. In front of it sat two men in casual dress, nudging various slide controls to manage the audio they'd already recorded. In front of them, on the other side of glass wall, nine musicians stood listening to the playback in a large recording studio. Two backup singers \u2013 a man and a woman \u2013 also sat on tall stools in the studio listening to the playback. Each instrument and singer had their own microphone, and there was space for several more singers or instruments.\n\nEveryone in the control room greeted Crystal with smiles and hugs. Her tardiness was not mentioned. Crystal introduced me to Terry Ross \u2013 her agent, Dan \u2013 her publicist; Ben and Wayne, the control panel gurus; Dave \u2013 her producer; and Eric, the agent from the music company she'd signed with. She waved enthusiastically to the band and singers on the other side of the plate glass, and they all waved back with smiles. I could tell Crystal was well liked.\n\nDave and Crystal went into a huddle right next to me. He explained about the songs he wanted to 'lay down,' and how far along the band had gotten with the music tracks. I listened to a whole new vocabulary about music and recording that I'd never been privy to before. I found it fascinating, yet I had a lot of questions about what was going on.\n\nAfter a few minutes, Crystal picked up some sheet music and went into the studio. The band members filed out for what I assumed was a cigarette break. Ben announced he was starting the instrumental track for 'Country Playgirl,' and I figured out from his comments that they'd worked on the song a few days before.\n\nCrystal laid out the sheet music on a stand in front of her, and put on a large, oversize pair of headphones. Ben hit a button on the panel, and we could all hear the music of the song without the lead singer over speakers in the control room. Crystal mouthed the words throughout the song and did some dance steps here and there. She had a serious and intent look on her face. I could tell that she was a professional about her singing and took this work seriously.\n\nAt the end of the song, Crystal's voice came over the speakers: \"OK, I think I'm ready to try this again when you are.\"\n\nBen said, \"We are ... and we're starting the music in five, four, three, two, and ...\" He made a gesture to the studio with his hand to indicate the recording had started.\n\nThe music started playing and four bars in Crystal's clear voice came through the speakers. I stood in awe at the quality of her voice and how well she sang the song. I never heard a missed word or a skipped beat throughout the rendition. Her voice had a slight edge to it that separated her from the 'wanna-be' country singers; this girl had 'it.' She had as distinctive a voice as Reba McEntire or Dolly Parton, a characteristic that would serve her well and ensure a long career. As far as I could tell, the song was perfect too.\n\nI guess the others around me also thought her singing got an A+, because about ten seconds after she ended the track, everyone applauded. Ben's voice broke through the applause, \"Wow, darling that was perfect. You nailed that. Does anybody think we need a retake?\" The silence in response to his question proved the answer.\n\nCrystal came back in the control room with the sheet music. Dave congratulated her on a job well done and handed her another song; she studied the notes and words on the pages. I could see the name of the song on top of the first page: 'Texas Dawn.' As they looked over the music line by line, she'd ask him a question about what mood he wanted, or the edginess, tempo, slurs, timbre, color, crispness of a word, where accents belonged, reverb, and so on \u2013 new vocabulary. Dave had all the answers; he seemed to be the 'go to' guy for this session.\n\nI listened in, soaking up the recording scene; this was an intimate look at Nashville I hadn't expected, and I was enjoying every second like a kid in a candy store with a fifty-dollar bill. To my surprise, everyone accepted my presence without question; they were so friendly and inclusive. Sometimes, one of the professionals even asked for my opinion about the music in some way.\n\nCrystal listened to the instrumental part of the new song when she was back in the studio. As she did, a few of the band members filtered back into the control room to watch her recording. Don introduced me to the band. Terry took snapshots with a high-end camera using only the ambient light. I even got included in some.\n\nAfter the playback Crystal said, \"Let's make a run at this one, OK?\" She sat up on a tall stool and adjusted the microphone to her height. I thought she looked so sexy, and wondered how she could fend off all these males around her, yet everyone acted professional.\n\nBen nodded and counted down again. I listened, and this time I could hear some slurred words, a hiccup when her tempo fell behind the instrumental track, and flatness in her voice. At the end of the song, she said, \"Let's do it again, but only the first verse and coda.\"\n\nBen counted, music started, she sang \u2013 this time with more animation and zeal. I liked it, but still something was missing. They tried it a couple of more times until Dave called a break.\n\nJust as the break started, some of the people who had been on the stranded bus arrived \u2013 three women and two men, including Brad the Bodyguard. I nodded to him, and he looked pleased that I hadn't kidnapped his ward.\n\nCrystal came into the control room and stood beside me as she talked to Dave, \"I can't put my finger on it, but something is keeping me from making this song come alive.\"\n\nI said in a low voice, \"I know. I figured it out after your last try.\"\n\nDave, Crystal, Ben, Wayne, Terry, and everyone else in the control room looked at me. I said, \"This song should be a duet \u2013 oh, it should emphasize Crystal, it's her song \u2013 but you need a male voice at the start of each stanza, and for the last line of the song \u2013 maybe for a few others. This is an unbalanced duet.\"\n\nThere was silence in the room. I felt like a teenager who had loudly farted in church.\n\nAfter the silence felt too heavy, Dave said excitedly, \"That's it. That's it.\" He looked around the room, \"Crystal, whom do you want to do the duet with you? \" Crystal gave it some thought, and I could see her considering her backup singers or the members of the band as she looked around the studio. After a few seconds, she turned to me and said with a saucy smile, \"Will you give it a try? It's your idea. You can sing, can't you?\"\n\nMy face must have reflected my shock and horror at the request because everyone around us laughed. I bumbled out that I'd never sung professionally, and while I felt I did reasonably well singing along with music on the radio or in the shower, I wasn't sure my voice would help the song at all. Everyone ignored my protestations and urged me to give it a try. Crystal led me into the studio, and as we walked, she told me I'd be fine and that half the country singers couldn't carry a tune anyway. She said sarcastically, \"Think of Bob Dylan or Willie Nelson \u2013 they can't sing for shit, but they're big stars.\" She made me laugh, and I relaxed a little.\n\nWe stood at the mic and rehearsed the words of the song in low voices. Crystal coached me here and there, and I pointed out the parts where I thought I should lead or join in. I took a colored pencil to the sheet music and marked where I'd come in and exit. We tried a few lines here and there throughout the song. As we did, I found my voice limbering up and my ability to carry the melody improving. Crystal was supportive and lavish in her praise when I got something right. She was so easy to work with.\n\nWe had the instrumental played and mouthed the words in time to the music; Crystal used one finger like a conductor with a baton to get me in sync with both the music and her. Next, Wayne came in and set up another microphone next to Crystal's mic, but in a way so we could both see the same pages of sheet music and see each other. \n\nDave said he wanted to try it, 'just for kicks.' Ben counted down from the control booth, the instrumental started, and I took my cue to sing. In my husky, twangy, country music voice that I usually used when working around the house, I sang the opening line of the poem that had been turned into the song: \"Texas dawns comes early when you've been awake all night.\" Crystal joined in with her lines, her crisp and distinctive voice carrying the song forward, we shared a line or two, and then she took off with the main part of the song. I'd join in on the refrains, and then the two of us sang the ending together: \"So Darlin' let me wake with you for all your Texas dawns; I promise that I'll love you ... forever.\" The love song actually had some teeth to it, as well as tenderness. I thought it did have potential as a hit \u2013 as a duet, but that was only my humble opinion. I wondered who they'd get to really sing with her, someone famous no doubt.\n\nAfter the ten seconds of silence, the sound from the control room got piped into the studio: applause \u2013 everyone in the control room applauded. Crystal and I gave each other high five, and then she hugged me and told me how proud she was of my singing: \"Jim, you're a natural. You can sing on my recordings anytime.\" I was stunned and considered her words a high compliment.\n\nDave was jumping around the control room with joy, and so was Terry. They had us do the song or parts of it about two-dozen more times that afternoon, varying all sorts of things for each recording. I thought it got better and better with each tweak any of us made.\n\nDuring the many variations of the song, my voice adjusted to singing aloud, and I got used to being recorded. Everyone lauded praise on me for joining in with Crystal, and for making the song a real hit. We tried two other songs 'just for kicks' after Dave and Eric said they were satisfied with at least today's rendition of 'Texas Dawn;' those also went well. Crystal and I were having fun singing together.\n\nWhen we broke, Terry pulled Dave, Eric, and Crystal aside, and I could see they were having a serious talk. Next I knew; Terry gestured for me to join them. \"Jim, if you're willing I'd like to sign you up \u2013 officially \u2013 not only for this song, but for a couple of others on the album Crystal is making. She wants you in on this too. We think you're a real addition to the music we're making.\" Crystal nodded enthusiastically as he talked. She grabbed ahold of my arm and hugged me to her to encourage me to accept the offer.\n\nI was still in a daze and didn't really believe that this was happening. A few hours ago I had just been an ordinary guy about to tour Nashville. Now, I was being offered a record contract? Then my thoughts went back to what I had been thinking as I rode out of Memphis \u2013 I had concluded that I needed to focus on being more creative and more social, and even on the look out for a job that I could enjoy. Could it all have been waiting for me just around the corner by the bus? Should I take a chance and see where this leads me? I quickly decided to accept Terry's offer with the caveat that he realized this was a totally new venture for me, and I'd probably stumble around a lot trying to get used to singing and recording. I explained that I'd need a lot of practice and someone to aim me in the right direction. I wanted to be sure I was a help and not a hindrance to their productivity. \n\nCrystal kissed my cheek and told me how happy she was that I'd signed on. She promised to be my guide until I learned the ropes. The two of us also talked about 'synchronicity' \u2013 my coming along that road at just the right time, and then turning out to have the perfect voice to complement her singing.\n\nAs people started to pack up and leave for the evening, Crystal cued me in about the paparazzi \u2013 the few photographers that we'd find outside, and how to respond or not respond to their questions. \"Because you're with me, there'll be some buzz about our relationship. They try to build mountains out of mole hills.\" She laughed and went on, \"You can say anything you like \u2013 the more outrageous the better. It'll help me sell records and keep my name out there, and that's part of this whole game \u2013 name recognition.\" She thought for a moment and added, \"Hey, it'll get your name out there too \u2013 that'll be good for the album we're making together.\"\n\nAs Ben and Wayne started to work editing some of the tracks we'd done to try to create a 'perfect' version of 'Texas Dawn,' Terry took me aside and we arranged to get together the next day to work out the details of my contract. I wanted to let Terry know that I still had my road trip to finish before I committed myself to many more recordings. Then Terry and some of the band members left, followed by Crystal and me. \n\nSure enough, as soon as I came out of the building behind Crystal, I experienced momentary blindness from the flashes of a dozen different cameras. Crystal pulled up next to me, and we put our arms around each other and posed in a natural way; more pictures were taken. She then turned to me and said, \"Let's kiss.\" I was willing, and so we smooched for the photographers; a million flashes went off as photos were taken.\n\nNext, a dozen questions came at us simultaneously \u2013 many to me alone. \"What's your name? What's your relationship with Crystal? Are you in music? Where are you from? Do you always ride that motorcycle? The bike has Massachusetts plates on it; is that your home?\" On and on, the questions came without allowing us to answer.\n\nCrystal nudged me to talk. I held up one hand; \"The motorcycle is a 1988 Harley Davidson Heritage Softail, and I rebuilt it about three months ago \u2013 from the ground up. Yes, originally I am from Mass \u2013 I grew up there, in Dillon.\"\n\nCrystal chimed in, \"This is Jim Mellon \u2013 M-e-l-l-o-n \u2013 and he is a great country singer you're going to be hearing a lot about soon. We're working together on my next album that'll be titled 'Texas Dawn' \u2013 we were working on the title song and a couple of others today. The album may not come out for a few months \u2013 you'll have to ask Eric Bennett about that; I do know that we'll start using some of the songs in our concerts soon.\"\n\nOne of the paparazzi yelled, \"Are you two an item?\"\n\nAs I handed Crystal the motorcycle helmet, she grinned and whispered to me in a low voice, \"You answer that one.\"\n\nI turned to the reporter and said with a high degree of flippancy, \"Of course, we're an item. Why do you think she invited me to be on her album? I love 'everything' about her \u2013 and I mean everything!\" With that, I gave a broad wave to the dozen reporters, and mounted the bike in front of Crystal. Crystal hugged me tightly to the photographers' delight. The Harley roared into life when I hit the ignition switch, more camera shots were taken, and we rolled down the driveway amid more flash photos being taken.\n\n<center>* * * * *</center>\n\nAfter we got back on the main road, I yelled over my shoulder, \"I don't know where I'm going.\" Crystal started giving me directions to the Grasslands part of Nashville \u2013 a very pleasant upscale part of the city with some huge houses. Eventually, she had me turn into the driveway of a mansion. She punched in a code on a box beside the gate, and two large iron gates slowly opened to allow us access to the property. The house stood hidden from the street by lush landscaping. I drove up and around the circular driveway and parked the bike in front of the house. \n\nDespite the encouraging words at the recording session, I expected this was the end of my relation with Crystal. She hopped off and handed me the helmet, and I rummaged in a saddlebag for her hat. \n\nShe said, \"Well, come on, come in. You won't disappear on me now, will you?\" She laughed and said, \"After all, we're an 'item,' and you love 'everything' about me. That was perfect, by the way \u2013 what you told the press. They'll chew on that for weeks. You're a huge mystery to all of them, so they will speculate and prevaricate. I think it's all a game. I can't wait to see what the tabloids come up with this weekend.\"\n\nCrystal led me into her home, explaining that she'd just bought the place. In the living room, a pleasant older woman met us. Crystal introduced her as Emma, and I discerned that she was the housekeeper. Crystal suggested that she bring us some wine by the pool after my house tour. Emma recommended some beef stroganoff that she'd prepared, and we both accepted her dinner offer. I realized singing and the hour had made me very hungry.\n\nSitting by the pool a few minutes later, Emma brought a bottle of wine and two glasses. An older gentleman, whom I learned was Walter, Emma's husband and a caretaker for the property, brought a tray, and laid out our dinners for us on a patio table. A large swimming pool dazzled the foreground of the backyard.\n\nCrystal and I sat and ate, and started to learn about each other. She told me briefly about her life \u2013 that she'd begun singing when she was ten years old, even doing some demo tapes and trying to break into the industry as she got into her teens. She had been singing at weddings and in bars to make money, just barely getting by, when she tried her hand at writing a few songs. One of the songs was 'Flirty, Flirty Cowgirl,' and someone in the music industry heard it when she was singing at a county fair. She described the month after that as leaping headfirst into a blender going a thousand miles an hour. \n\nShe said, \"That was only nine months ago. Terry became my agent, and he connected me with Dave, the producer for the record company. We cranked out an album in record time to go with 'Flirty Cowgirl.' When that came out the song slowly inched its way into the top spot on the country charts \u2013 the album too. And, presto, I became star!\"\n\nI asked whether she had a boyfriend.\n\nCrystal laughed and shook her head. \"I got married at seventeen and divorced at twenty \u2013 three years I wouldn't wish on anyone. I've been skittish of a serious relationship ever since, although now almost nine years has passed since we separated. I haven't seen him for the past seven; I don't even know whether he still lives in the state.\"\n\nIn a serious mood, Crystal said, \"I used to have friends I'd just hang out with. We were all in the same boat, trying to squeak by. When I 'made it,' they all became scared of me in some way \u2013 distant, obsequious. I see them, but it's not the same. Being famous is lonely in some ways; I'm surrounded with an entourage, but have few real friends. It's very hard to make real friends from where I am now: how do I know when I meet someone if they're not just cuddling up to me because I'm a star making a lot of money or because I have contacts that could help them become a star?\"\n\nWhile I would have been happy to have her dominate the conversation and tell me more about her rise to fame, she seemed to want to know about me. I only know how to be candid and open, so I told her about growing up, my Army years, Karen and her death, rebuilding the motorcycle, and my trip across the states. For some reason, I also mentioned that I'd been shot in Alabama stopping a rape; Crystal thought all that was exciting, particularly when I pulled my shirt up and showed her the bandages over my bullet holes.",
        "Probing further, Crystal got me to talk about catching the felon in Arkansas, rescuing the farmer in Pennsylvania and the two kids in South Carolina. The more she probed; the more interesting I seemed to sound to her. \n\nWalter and Emma came and cleared the table. Crystal dismissed them for the night. After they'd left, she explained that the couple had an apartment at the front of the house over the garage.\n\nThe evening dusk turned to darkness as we'd sat eating and sharing the wine. I realized for the first time, how much darkness produces a new intimacy between couples; I could tell Crystal felt it too. We had a couple of candles on the table, and that only added some mystique to the scene.\n\nCrystal asked me, \"Would you like to swim. I love this pool. There's a spa too \u2013 over there.\"\n\nTen minutes later I'd retrieved my running shorts that doubled as swim trunks from my bike, and changed into them in a guest bathroom. I knew I'd have to change my dressings later, but a swim might do me good. Crystal met me at the door to the patio wearing a bikini that would be banned in most states. I apparently gawked at her apparently, because she laughed and said, \"I'd been hoping to get that reaction from you. Do you think it's sexy?\"\n\nI told her quite bluntly but sincerely, \"Crystal Lee, I think everything about you is sexy. You are desirable in every way anyone could think of.\" I paused and added in a teasing manner, \"And, that's another reason why I'm glad we're an 'item' and that I love 'everything' about you.\"\n\nShe smiled at me as she came up to me to kiss. I expected a peck on the cheek, but instead she gave me a deep, soul-touching, romantic, mind-blowing kiss. As she pulled away, I said with a touch of humor and sarcasm, \"Wow! You really are a heavenly dream \u2013 an angel, because no human could possible kiss the way an angel does.\" As I intended, we both laughed over my schmaltzy compliment. Crystal pulled me to the edge of the pool, and we jumped in together. \n\nMeanwhile, my brain had shifted into high gear trying to figure out why this beautiful Nashville star had kissed me that way.\n\nWe swam around for a short time. Crystal said to me, \"Jim, would you do me a favor?\" I nodded. \"Would you be sure to always treat me like a normal girl, and not as some piece of porcelain that you put on shelf and only look at?\" She drew close to me. \"I like you. I'm attracted to you \u2013 a lot, and in many ways. The last thing I want is to be put on a pedestal and left untouched.\"\n\nShe kissed me again, and I took her at her word and kissed back with everything I had. We French kissed, and Crystal exploded into a passionate woman who wanted to be loved. Her words and the way she erupted showed me that she had a huge pile of unfulfilled needs, and I guessed she saw I could help her with some of them. I hoped I could before I moved on down the road.\n\nAfter many kisses, and as we looked in each other's eyes, I carefully reached for the tie behind her neck that held her bikini bra up. I paused so she knew exactly what I was thinking. I studied her face for permission or rejection. \n\nCrystal nodded her head and smiled invitingly.\n\nI pulled the string, and the fabric fell down her body exposing two perfect breasts \u2013 each a hand full with a little left over. I reached around to her back and pulled the other tie; the brassiere floated away from between us. I tossed it up on the patio.\n\nAs we kissed, we crushed into each other; her breasts flattened against me. I could feel her erect nipples against my chest, and it raised my temperature past that of the sun. Our hips ground together. This relationship had turned a corner \u2013 it had become a runaway train with a single destination. \n\nI toyed with her breasts, until, with her full awareness, I reached to one of Crystal's hips and pulled the tie holding the small and colorful bottom part of the bikini to her body. I did the same on the other side, and then pulled the flimsy piece of material through her legs and away from her. I tossed it to the patio as well.\n\nCrystal pushed my nylon shorts off my hips. So she didn't have to duck under water again, I kicked them off, retrieved them, and tossed them away too. We came together again, this time she moaned in pleasure as my inflating shaft rubbed against her; she caught it between her legs and held me tight against her labia. We both groaned into another passionate kiss.\n\nI made love to Crystal's breasts as we stood there. I used everything I had ever learned about how to love a woman's nipples, areolas, and honey mounds. I stroked her neck, blew warm air into her ears in a passionate way, and kissed my way to each breast with my tongue oscillating wildly to please her. Everything I did escalated the sexual desire in each of us.\n\nIn the back of my mind, I could see Kim smiling at me, urging me forward and reminding me of my partner's pleasure.\n\nI picked up Crystal, and she put her arms around my neck. I walked up the stairs out of the pool and placed her gently on a poolside chaise. I tossed a pillow down, knelt on it, adjusted her position, and allowed my mouth \u2013 my tongue \u2013 to dive into her pussy. I reveled in her taste. She responded, and soon we were awash in her lubricating fluids that I lapped up as fast as she could generate them. \n\nCrystal came, grinding her cunt into my face as she held me tightly to her groin. She said, \"Let's go inside. I want you to make love to me ... all night long.\"\n\nI answered firmly: \"No! Here. Now.\" \n\nCrystal nodded assent. I rose over her on my arms and buried my cock in her pussy. As I slid in, I felt that wonderful rush of happiness and joy, and knew she did too. This act of joining carried us each to a new level. Purrs and moans confirmed our happiness with what we were doing. Crystal became my single point of focus in the universe; I wanted to bring her happiness.\n\nI didn't prolong our union the way I could have. We came. I timed my climax to hers. Our orgasms ripped through our bodies like lightning bolts from a towering thunderhead. We were as one; each of us felt every sensation the other felt in addition to our own. We crested in an explosion of light that started deep within each of us, and raced out through every pore of our bodies. As the climaxes subsided, I lay down next to Crystal. She rolled to me so we could kiss and be face to face. She had tears on her cheeks. We kissed tenderly. She was speechless, but I could tell she was trying to form words and sentences. \n\nEventually, she spoke as I cradled her in my arms: \"Jim, these moments ... I don't know how to say it ... Thank you ... I'll never forget this. You are amazing. You made 'us' amazing.\"\n\nI kissed the tip of her nose. Crystal said in a serious tone, \"I hate to admit it, and I've had sex with more than a few men \u2013 I don't think I'm promiscuous or a slut or anything like that, but I have enjoyed the act often.\" She sighed and took a deep breath, before going on; \"And, I have never ... never even come close to anything like what we just did \u2013 what you did to me.\" She choked up a little as her last words came out.\n\nI said softly, \"We did it to each other. We were both open to not only the lust, but also to the spiritual act of joining two people together in love. We just allowed our energies to merge in an open and exceptional way.\" As she apparently did, I too found my feelings for her had moved beyond a quick fuck.\n\n\"Oh, God, I think I really want to be with you forever,\" Crystal crooned as she hugged me with all her might. \"Come inside and let's do this again.\" \n\nWe did.\n\n<center>* * * * *</center>\n\nThe ringing telephone awoke Crystal and me about nine o'clock in the morning. She answered it, sitting in her nudity next to me, a crumpled sheet around her legs. She mostly listened with a smile on her face. She kept saying \"OK\" or \"Wow!\" until she hung up. She turned to me and said with an excited tone to her voice, \"That was my publicist. We're on the entertainment news, and we're an 'item' \u2013 just as you said.\" She flipped on the television, and then nestled into me. I allowed the hand of the enfolding arm to land squarely on her breast. As we watched, I kneaded and coaxed her nipple to erectness and beyond until Crystal moaned and held my hand still against her. To tease her, I brought my other hand into play on her other breast.\n\nSure enough, when NEN \u2013 the Nashville Entertainment Network \u2013 segued out of the weather and into the entertainment news, Crystal and I were at the top of news. \"Crystal Lee, Nashville's new darling, finally has a boyfriend. He's Jim Mellon from Dillon, Massachusetts. Mellon, who's in his mid-thirties, is also a country singer and has teamed up with Crystal on her next album that should be available in fewer than three months \u2013 'Texas Dawn.' Jim and Crystal can be seen around Nashville riding his hopped up Harley \u2013 a bike he rebuilt as a hobby. Jim confessed he's madly in love with Crystal, and she confirmed that she feels the same way thanks to the nod and coy smile to your NEN reporter while Jim told us how he felt about her. Does this mean that one of Nashville's most beautiful divas is off the eligible market? Is there a new and hunky male singer that all you young ladies should all be pining after? Stay tuned.\" \n\nOn the screen as the announcer talked the station ran a grainy picture of the two of us arriving at the recording studio yesterday, probably taken on a cell phone; Crystal's brief kiss as we were leaving; a still photo of the two of us; and then video of our riding away down the studio's long driveway. Several cropped close-up shots of me also added to the broadcast; I had to admit, with the PhotoShop work that had been done, I did look pretty 'hunky.'\n\nCrystal rolled out from under my enfolding arm and flipped around to face me. I found her as sexually stimulating and attractive in the morning as in the past evening. She pleaded, \"Are you really madly in love with me?\"\n\nI grinned and said, \"Yes, but you should know two things about me: I'm a horn dog, according some women that love me \u2013 like my sister and sister-in-law, and I may fall in love too easily.\" After a pause I reminded her, \"Oh, and I do want to finish my road trip through the lower forty-eight states.\" We'd talked about my trip over dinner.\n\n\"Well then, Mr. Horn Dog, you'd better get busy and make love to me again. I've got a lot to store up before you go.\" She jumped over me so she could straddle my midsection and my rising interest in her nudity. I got a whiff of the delightful and residual sexual odors we'd created the night before. The sensory combination turned me on more than ever.\n\nAs an afterthought she added, \"And we're supposed to be back at the recording studio at one o'clock; that leaves time for two lovemaking sessions, with breakfast between.\" I thought I'd be embarrassed when we came downstairs for breakfast; Emma waited on us, but the whole situation seemed natural and expected. Walter was not to be seen.\n\n<center>* * * * *</center>\n\nThis time when we arrived at the recording studio, cars lined the driveway. About twenty-five reporters, including two I recognized from the nationally syndicated entertainment shows, had been assembled in a cluster behind three saw horses to one side of the front walk to the building. To one side, Brad, Crystal's bodyguard, was riding herd on them. I could hear the whirr of video cameras and the staccato of a thousand camera shutter snaps and synchronized flashes after I shut down the Harley's engine. Crystal gave me a special hug I doubted anyone could discern.\n\nI helped Crystal off the bike, and we both waved at the cameras as we walked to the entrance. Several reporters said almost in unison, \"Is it true that you're both in love?\"\n\nThis time, as I smiled coyly at the reporters, Crystal gave a huge smile and said rhetorically, \"More today than yesterday, but not as much as tomorrow!\" She gave them another Crystal smile, and we went in the door to peace and quiet. Just inside the door, she threw herself into my arms and we kissed. I was sure some of the paparazzi caught the impulsive kiss on film.\n\nWe spent the following five days recording duets. We redid  'Texas Dawn' a few times, and I think we sounded better than the first day we tried it. Terry next had us do a cover of the Whitney Houston hit,  'I Will Always Love You' from the movie  'The Bodyguard.'  We did a few others too, including:  'To Get Me to You,' 'How Do I Live Without You,' 'Whiskey Lullaby,' 'This Kiss,' 'One Boy, One Girl,'  and some others I'd never heard before but knew by the end of each evening. \n\nThe rest of the week we worked from ten in the morning until eight at night. Our diet consisted of pizza, Chinese takeout, and deli sandwiches, eaten any time of day. When we were through, Crystal and I had laid down twenty tracks that Terry and the others judged hit quality. She was ecstatic at our progress, and thanked me repeatedly for being her muse, even in the songs I didn't participate in.\n\nIn the midst of our recording, Terry talked to me about a contract, and I signed with him after reading all the fine print. He was fair, and I really liked him. I could work as much or as little as I wanted, and he'd represent me. He asked for ten percent of the 'action,' as he called it; I told him I wanted him to take fifteen percent and be willing to tolerate my inaction for long periods of time, particularly while I finished my cross-country ride. He agreed. In many ways, he reminded me of Jerry Maguire from the movie with the same name. I even played the line on him, 'Show me the money,' and got a good laugh out of him. So far, we hadn't made a cent.\n\nCrystal explained how it used to take six months to a year or more to bring a record to market. CDs had cut that time in half. Now, because of online music services such as iTunes, a recording could be brought to market in only a few weeks and probably days. Terry explained how the digital age had hammered the music industry, first with Napster, and then iTunes. He said, \"The industry is still in flux, and we don't have a new business model that works well yet. Some big labels have gone out of business, and at the retail end too \u2013 like Tower Records \u2013 they're gone, and they used to employ 3,000 people.\"\n\nThe realities of the industry didn't seem to faze Crystal. She loved to sing, and right now the industry gave her the opportunity to do what she liked to do best. And, like her, I found the singing to be a lot of fun, as well as a creative outlet.\n\nAs we talked Terry also mentioned something about concerts and public appearances. Crystal was standing behind him making a lewd gesture that indicated she wanted to fuck again. My attention wandered in the direction any horn dog would go. So I didn't take in that Terry was expecting me to perform at upcoming concerts. If I had, I would have been scared down to my boots.\n\nA couple of mornings, Crystal showed me around Nashville. On a long lunch hour, after we promised to work late, the two of us even found time to take the tour that went by some of the homes of the 'stars,' including 'the magnificent home of Crystal Lee' who sat on the bus with me wearing her large sunglasses and snapping photos of her own house with a small camera. Like many homes, lush foliage shielded the main buildings from the public's prying eyes.\n\nEach day, the tabloid television shows speculated about our relationship and its permanence. I heard things I never knew about myself \u2013 things that were outright lies. I heard that I'd had love affairs or illicit relationships with Reba McEntire, Dolly Parton, Faith Hill, and Sara Evans. In my ignorance, I had to ask Crystal who Sara Evans was, and whether she was worth having an illicit relationship with. She was.\n\nOther speculations were that Crystal and I had eloped to Mexico, Guatemala, Las Vegas, or the Seychelles Islands. Another set of rumors had us on the verge of a break up because of (a) my philandering, or (b) her philandering \u2013 take your pick, depending on the tabloid. There were often lists of the substances and fluids that we abused: drugs and alcohol, when, in fact, neither of us indulged in more than a glass of wine or two around dinner, or maybe a can of beer at lunch.\n\nThursday, much to our great surprise, Crystal and I appeared on the cover of People magazine with headline  'Newest Country Wonders. Romance in the Wind.'  Terry and Dave had intentionally 'leaked' an advance audio of the song  'Texas Dawn' to a friend he had at People. Terry sent some of his candid shots from the recording sessions too. I was touted as the 'hottest' country commodity since Crystal, and it was only natural that the two of us paired up to do the  'Texas Dawn' album, and further that we fell in love.\n\nI called Anna and explained about my sudden fame. I told her that it would be rather fleeting, since I intended to move on with more of my trip pretty soon, and then I'd be forgotten. Meanwhile, she should be ready for an onslaught of paparazzi at her doorstep once they figured out our relationship. Anna seemed ecstatic about my fame, and urged me to stick with the music for a while. I think she liked the fact that I'd found something to divert my thinking from Karen's death.\n\nI also telephoned Lauren to set her expectations. Of course, during the telephone conversation I had to talk her through two orgasms as she jilled off. I shared many of the antics that Crystal and I were into. Lauren liked that kind of stuff, and so did I. I think she thought I was telling her a made up story, because later I got an email from her in which she confessed initial disbelief at what I'd told her until she had seen the People magazine issue.\n\nAt Crystal's house at night, we were insatiable sex maniacs. I labeled her a nymphomaniac and she called me a sexual pervert of the best kind. I described the phone call with Lauren, and talked about how she could also share the nymphomaniac label. Crystal and I fucked everywhere \u2013 in every room, on my motorcycle, in the yard, beside the pool, and mostly in bed. We were cautious enough not to embarrass either ourselves or Walter and Emma with our antics.\n\nOver dinner one night, Crystal went back to her conclusion that my coming along the road to her broken down bus as I did and our getting together had not been an accident. Someone could say it was a coincidence, but another interpretation was that our spiritual beings set the physical beings on tracks to intersect. Our falling in love was a result, as well as the recordings that might bring joy to so many people. I liked her thinking.\n\nSince I'd had strong feelings for a list of women I'd met on the trip, I tested my feelings about Crystal on an hourly basis. I did feel in love with her. She had an incredible energy and love of life, and I felt genuine warmth for me. She blended so well with me in each little thing we did together. She was obviously affectionate, and I had a feeling pretty liberal in her thinking. We shared many of the same values and priorities. I found it hard to think of her in an abusive marriage or scraping by to earn a living. She obviously was now in her happy and soul-fulfilling grove. She was a delight to be around and made me laugh as I hadn't laughed since Karen's death. How could I not love this wonderful woman?\n\nOver dinner one night, I bravely told Crystal about my trip so far, telling her about my intimate relations with each of the women I'd met from my sister-in-law to Pat Peyton in Arkansas, a couple of days before I met Crystal. I wasn't certain how she would react, but these adventures were part of me so I wanted to share them with her.\n\nMuch to my surprise, instead of displaying signs of jealousy or anger, Crystal displayed joy and happiness that I'd had such great experiences and met such wonderful women, particularly after the tragic situation of the winter with Karen. Crystal wanted to also be on my 'explicit email' list along with Lauren. I still wasn't sure about sending anything really sexual to my sister.",
        "<center>* * * * *</center>\n\nMid-week, I explained to Crystal that I was restless about getting on the road for my cross-country journey. Crystal was thoughtful, but not sad about my departure. We'd been up front with each other about our mutual affection for each other, as well as not creating any permanent relationship right now. She knew I wanted to travel \u2013 needed to travel, and I knew she wanted to devote herself to her music and adoring public. We admitted we were falling in love \u2013 having very tender and emotional feelings about each other \u2013 and our love felt like the kind that would last.\n\nThe next day as Crystal and I were taking a break and planning the next songs to record, Terry came into the meeting room and talked to Crystal about the two concerts she was giving over the weekend: one outside Louisville, Kentucky, and the other near Indianapolis, Indiana. I was going over some sheet music and not paying attention. Suddenly, she shouted, \"THAT'S GREAT!\" She looked at me proudly, as though she'd just solved a major problem. \n\nI didn't get the connection, so I looked puzzled and said, \"Huh?\"\n\nCrystal said with joy, \"I'm giving concerts in these two places tomorrow and Sunday nights.\" She paused to see my reaction; I continued to look puzzled. She went on, \"You haven't been to these states yet, and they're nearby. We can be together for a couple of nights more before you continue on your trip. My tour bus \u2013 now fixed by the way \u2013 will travel there ahead of us, so we have a place to sleep. I might even have a surprise or two for you along the way.\" So Terry couldn't see, she turned her back and gave me an evil grin that insinuated something sexual would take place.\n\n\"What would I do while I'm there \u2013 besides listen to you sing, something I always enjoy I might add?\"\n\nShe bopped me in the middle of my forehead. \"DUH! I want you to sing on stage with me, at least some of the numbers. We've done them in the studio \u2013 it's just like that only there are a few thousand people listening.\"\n\nI spewed my drink across the room: \"A few thousand!\"  I exclaimed as I sat up straight continuing to choke on my drink.\n\nCrystal ignored the near death experience I was having, \"Think about it. You can pretend it's just like singing to the studio control booth. And, yes, I know I had the luxury of starting with very small audiences and building up to the big ones as my career grew ... and that you'll be jumping in with both feet, but I know you can do it.\" Terry agreed I should give it a try, and then went to one of the offices down the hall to make some telephone calls, leaving us alone in the rehearsal room we'd been using.\n\nI rolled my tongue around in my mouth for a bit as I thought about the offer she made. I told her I wanted to be with her, but I wasn't too sure about the concert 'thingy.' Crystal came over and massaged my neck ... and blew in my ear ... and whispered to me that I could fuck the daylights out of her when she wasn't on stage ... and promised me a sexual surprise that few men in the western world could even conceive of ... and maybe even one beyond that!\n\nIn the process, she pulled up her t-shirt \u2013 she wasn't wearing a bra. The next thing I knew, I felt her generous tits brushing against the back of my neck and across my shoulders. I could tell the nipples were erect.\n\nConsequently, I promised I'd appear on stage with her \u2013 telling her she might have to stop my knees from knocking together, and push me off stage after I'd frozen in position with stage fright. She looked vindicated in her approach. She said, \"See, sex sells. I'll have to remember that about you.\" She laughed and then went down the hall to tell Terry that I'd go on stage with her; when she came back, she told me he was a happy guy too. They both might be happy, but I was terrified at the thought of going on stage. I decided that I could always back out at the last moment and hop on my bike for a quick escape.\n\nSaturday morning, we loaded up my motorcycle with my travel gear and a small bag for her. I used extra bungee cords so I could put more luggage on the front of the bike \u2013 in front of the handlebars. Crystal traveled light since she'd connect with her wardrobe at the bus in Louisville. I wondered what I'd wear if I ever got up the courage to even go on stage.\n\nI got her on the bike. She wore her western boots, cutoff shorts, and her bikini bra, and the red helmet; she looked sexy as hell. I almost jumped her in the driveway. The weather was hot and humid; a true July day. \n\nCrystal Lee wrapped her arms around me, and we rode down her driveway. About thirty paparazzi were waiting to take our picture or film us as we rode by on my Harley motorcycle. We both waved and gave them big smiles, then I cranked the accelerator and we sped away.\n\n\n\n\n\n<center>Chapter 9\n\nRoad Trip \u2013 Kentucky</center>\n\n\n\nOur motorcycle trip Saturday morning took us to the Kentucky State Fair Grounds in Louisville, Kentucky. Terry had booked Crystal there as the headliner for the evening's show. We stayed on back roads on the way to Louisville and all the way to the fair grounds. At one of our pit stops along the route, Crystal showed me a text message on her phone from Terry: the concert was a sell out \u2013 18,000 people would be attending. Crystal had the celebrity power to draw a sell-out crowd.\n\nFear pulsed through me, and I felt my body go cold. I would have to stand on stage \u2013 to sing on stage \u2013 in front of 18,000 people! Most people fear public presentations more than mad dogs, heights, deep water, flying, and even death. I knew what they felt like. I must have turned pale, because Crystal pushed her lithe body against me and gave me a kiss. She bit my ear and whispered, \"Jim, you'll do great. I'll be there with you, and I wouldn't put you through anything bad \u2013 I love you!\"\n\nI felt better \u2013 temporarily. I studied Crystal as we got back on the bike to continue our trip: late-twenties, perfect figure and model quality face, full breasts, cowboy boots, long lanky legs, cutoffs, flat tummy, bikini bra that barely did the cover-up job, and long light brunette hair. About thirty magazines and other media had rated her the most talented country singer of the year, and she had the number one hit still riding the charts after being there weeks and weeks:  'Flirty, Flirty Cowgirl.' \n\nThe People magazine article had a lot of information about me that neither Crystal nor I told the paparazzi. The article talked about the 'tragic death of Jim's wife in February from an autoimmune disease,' how I'd rebuilt the Harley Davidson motorcycle that had been my father's as self-imposed therapy, how I'd set out from Dillon, Massachusetts, on a cross-country ride through the forty-eight contiguous states to Anna's home in San Diego, California. The article even talked about my history as a Green Beret, my job as a computer 'executive' \u2013 an inflated statement for what I actually did, and how I'd done several heroic deeds along my trip so far: rescuing a farmer from a burning barn in Pennsylvania, saving two children floating out to sea in South Carolina, stopping a rape and getting shot for my troubles in Alabama, and helping police apprehend a dangerous felon in Arkansas. The amazing thing about the article was its thoroughness \u2013 I hadn't told anyone in Tennessee the details in the story that had been unearthed about me except Crystal, and I knew she hadn't told anybody because she'd been with me constantly, plus when I'd told her it was the night before People hit the newsstands.\n\nI chuckled at some of the inaccuracies the story contained: that I held a black belt in several exotic martial arts disciplines, spoke six languages, and had made millions off the Internet before the crash of 2001. I don't know where these 'facts' came from, and I wished they were true. Such glaring lies reminded me to never believe what I read in the tabloid press.\n\nCrystal and I stopped near a small community college for ice cream, and sat outside. I thought about Crystal, and I thought about Karen. I'd told Crystal about my ceremony of leaving a trace of Karen's ashes at some picturesque spot along my route. This small town felt 'right' to me, and so I let a small envelope of Karen's ashes fly in the summer breeze in a park across the street from the ice cream place. I stood and said a small prayer of connection. Without saying anything, Crystal came up and quietly and lovingly hugged me from the back, until I was ready to move along to Louisville. I appreciated her compassion and felt such love from her.\n\nAfter we were underway, I wondered what Karen would have thought about my singing and doing concerts in front of thousands of people. I could almost hear her laughter at my nervousness and angst over the whole change of scenery. I know she liked to do or say things that would rattle my cage a little, and put me off my game. I briefly wondered about the supernatural powers of the dead; could they orchestrate something like the dramatic changes in my life? Was all this Karen playing with me? I pushed the thoughts and questions away.\n\nI was amazed at how many horse farms we passed on the way into Louisville. I wondered if some founding father had drawn a circle on the map around the area and reserved the area only for horse lovers.\n\nWe found the fairgrounds and after asking directions found Crystal's tour bus in a guarded and secure parking area behind the arena. The driver was just locking up, and he looked glad to see us. He told us he'd return first thing in the morning to drive the forty-five-foot tour bus to Indiana for the next night's concert. He verified that Crystal knew how to get into the bus when he wasn't there; a keypad sat behind a panel by the main door. We told him we'd ride the motorcycle to Indiana if the weather held. I noticed the band's bus and truck about a hundred feet away.\n\nThe inside of Crystal's bus could only be described as posh. We went in and locked up behind us to keep the curious at bay. The tinted windows allowed us to see out, but no one could see in \u2013 at least in the daytime.\n\nCrystal immediately turned to me and pulled off her bikini bra and pushed her chest at me. \"Feel me,\" she commanded with a naughty smile. \"I've waited four hours to jump your bones. That motorcycle made my tight little pussy all tingly and needy, and only you can fix it.\" She started to pull off her cutoffs.\n\nI fixed it. Crystal was happy. She still had on her cowboy boots while we fucked. I thought that was kinky and liked it. I was happy. \n\nI had to sing in front of 18,000 people. I was unhappy.\n\n<center>* * * * *</center>\n\nAfter we cleaned up and donned our clothes again, Crystal and I roamed the fairgrounds for an hour or so, but only after trying to not look like the two singers on the cover of People. We both had sunglasses, hats, and were a bit grungy looking. We ate a highly unbalanced meal as we walked, although I had the jitters and didn't eat much. As we walked and much to my surprise, a dozen different people still asked for our autographs \u2013several on our picture on the cover of People magazine. We both signed but Crystal told me that if I didn't want to do autographs, I could just to just turn them down and shake their hand or allow a quick photo. I'd never had anyone ever ask for my autograph.\n\nAbout two o'clock, we went to Freedom Hall where we were going to perform that night and gained admittance after explaining to a guard who we were. I think he wanted to frisk Crystal. I already had. \n\nThe place was enormous. The stage had a huge banner above it proclaiming Crystal's fame. There were posters advancing the coming album I would join her on:  'Texas Dawn.'  Much to my surprise, my name and photo even appeared on a few of the  'Texas Dawn' banners announcing the future album, and that decision was only less than a week old.\n\nAt least forty men were setting up equipment, moving speakers around, and testing electrical connections. Crystal's band was there setting up their gear, and we greeted each other. They verified a seven o'clock concert start, and told us a little about the opening band \u2013 The Hobo Palace \u2013 that would get the audience cranked up before we came on for two hours shortly after seven-thirty. Billy, the bandleader, said we should try to meet their lead singer, Cindy Wonder, before things started.\n\nWe went over the order of the songs Crystal would do, talked about how we'd do multiple choruses of each one to lengthen the songs from the three or four minute recording we'd done in the studio to a live entertainment number of up to ten minutes. The 'song order' information would be written in clear large letters on poster board that would sit behind one of the speakers where we could see it, but the audience couldn't. A teleprompter sat to one side of the stage.\n\nTerry arrived with an entourage of five aides around him. I explained to him my worries about forgetting the words and things. He told me he'd fix that problem and not to worry. Why did everyone think I'd do so well at this, and I felt as though I would be sucked up into an alien spacecraft and whisked away to another planet to be dissected?\n\nEllen, one of the young aides, came up and got very close to me \u2013 inside my personal space; she smelled like lavender \u2013 really nice. She touched my arm and flirted with me a little as she explained, \"We've got your costume for tonight,\" and pointed to six large shopping bags and some boxes piled near the stage. I hadn't thought much beyond wearing some of the stuff I normally carried on the motorcycle \u2013 blue jeans, a t-shirt, and my motorcycle boots. In the boxes, she had three pairs of western boots with all sorts of silver studs on them. The bags contained designer blue jeans \u2013 the expensive kind, several western hats of various sizes, and a variety of western shirts to choose from. \n\nEllen said, \"I guessed at the sizes. I only saw you once when you stopped to rescue us at the stalled bus, but you seemed about the same size as one of my old boyfriends. I bracketed what he wore. There's still time for me to replace any of the items that don't fit or you don't like.\" She looked eager, and so I thanked her effusively for her help. She beamed at my attention and thanks.\n\nEllen led me to a dressing room off the side of the stage, and I tried on some of the outfits and found a successful ensemble. I wore it out of the men's dressing room for Crystal, Terry, Ellen, and the others to see. Terry spoke first, \"Now, that's what I call an entertainer! You're great. You'll do fine tonight. They'll love you.\" \n\nTerry paused and added, \"By the way, I arranged for a teleprompter off to the right of the stage as you look out at the audience. Ellen is putting all the words to the songs you'll be singing up on it \u2013 just remember to sing and not read them.\" Well that solved one of my major angst problems. I liked Terry and the way he thought. Now, I had only 18,000 others.\n\nCrystal liked my outfit too. While I'd been changing, she'd also changed into her onstage clothes she brought in from the bus: really fancy boots that hugged her lower calves and accentuated her curvy legs, a tight skirt that came to mid-thigh and revealed lots of leg, her favorite hat that kept getting crushed in my motorcycle saddlebag, and a tailored top that proved she wore a push-up bra and had significant cleavage to boot. I stared at her; she came up with her evil grin and whispered to me, \"If you look at me like that on stage, we'll end up putting on the longest and best sex show Louisville has ever seen on stage ... and, yes, I am wearing underwear \u2013 although you tempt me not to.\" I felt a really strong twinge in my lower regions.\n\nBilly, the keyboard player and bandleader, Crystal, and I went into a side room where he'd set up a portable keyboard: rehearsal time had arrived. Ellen followed us with a laptop computer and a pile of sheet music. Crystal and Ellen exchanged some significant looks, but I had no idea why. I was too nervous to give much thought to anything except surviving my personal appearance on stage. We'd agreed that Crystal would do eight songs before I joined her onstage. Crystal quickly ran through her eight songs, sometimes only mouthing the words to save her voice. They'd talk here and there too, about how to segue between parts of the songs or blend from one part to another. Pretty soon, I caught onto some of the differences between the recording sessions we'd done, and what would happen onstage at the concerts.\n\nWhen the time to practice our duets came, I joined in. My voice cracked and squeaked throughout the session so much, I asked Crystal if she were sure she wanted me onstage with her. She affirmed that she did, and assured me that this was nerves and I'd be fine once I got in front of the audience. Not likely, I thought.\n\nEllen disappeared for a while, and reappeared with two small steak dinners. She explained, \"This will give you some protein and carbs and keep your tummy from squawking onstage where everyone could hear it.\" She watched me pick at it, and commanded me to eat. Ellen sat close to me, again inside my personal space and even putting an arm around me to rub my back, talking in a friendly way and trying to get me to relax. Crystal seemed to have a nice connection with Ellen, and didn't seem jealous in the least that she'd sidled up to me.\n\nAfter the light dinner, we rehearsed a couple of more songs, particularly one song where I had a long solo verse. My voice was doing slightly better. Steak is my 'go-to' comfort food.\n\nI hadn't been that aware of the passage of time until I heard the muffled voice of an announcer and then the opening band start playing. Suddenly, I became aware of the roar of the crowd in the auditorium.\n\nCrystal grabbed me by the hand and led me down a long corridor, out a side door, and into the parking lot where her tour bus was parked. She punched in the access code to the door, opened it, pushed me inside, shut the door, and then yanked down the zipper on my pants. \n\nWith a smile she announced, \"You are going to get a 'first-class Crystal Lee guaranteed to please' blowjob, mister.\"\n\nAnd the next I knew she was on her knees in front of me with her head bobbing back and forth. I took a minute to get past my nervousness into the sex act, but when I did I resolved this would be a short one. Consequently, three minutes later I warned her of my impending climax. \n\nCrystal pulled off me long enough to say, \"In here, stud.\" She pointed at her mouth.\n\nI blasted several shots of man juice into her mouth. When I'd finished, Crystal made a show of opening her mouth to show me my jizz and then swallowing the milky fluid. She then licked me clean, pushed my now-deflating cock back into the new blue jeans, helped me buckle up and zip up, and checked me to be sure I looked normal.\n\nThe simple sex act had not only caught me off-guard; it had reduced my tension and anxiety tremendously. I told Crystal, and then kissed her, swirling my tongue into her mouth in a French kiss. She looked pleased and nodded her head knowingly.\n\nShe did have another idea; she said, \"One more thing before we leave the bus. I want you to finger my pussy right now. If you get nervous onstage, I want you to scratch your nose with that finger, smell my aroma, and remember how much fun we'll have fucking and loving each other after the show \u2013 and remember, whatever happens, you're all right, I'll still love you, and I'm still planning on jumping your bones.\"\n\nShe hoisted up her short skirt and pulled her black panties aside to show she was serious. I dipped the middle finger of my right hand deep into her vagina. She was not just moist, she was wet \u2013 so wet I worried it'd saturate her panties and run down her leg. She closed her eyes as I penetrated her. I sniffed my finger to be sure it smelled of Crystal. It did. Looking into my eyes, she said longingly, \"Oh, if we only had another ten more minutes.\" ",
        "Crystal adjusted her under garment, skirt, checked herself in a full-length mirror, and led me back to the green room. Terry gave us both an 'I-know-what-you-were-doing' glance. We all sat in near silence listening to an increasingly raucous band and crowd. I started to feel some of the crowd's energy. The band was good, and Cindy Wonder had a sound sort of like a country Stevie Nicks of Fleetwood Mac. \n\nAfter what seemed like a long time, Ellen came into the ready room and gave us a five-minute warning. She handed Crystal and me earpieces so we could hear ourselves sing over the sound of the band and the noise of the crowd. The band members stood up and did some brief limbering exercises. Crystal closed her eyes; I could tell she'd entered a short meditation. That seemed like a good idea, and so I started to meditate as well \u2013 gradually, sliding away from the tension and stress I'd been feeling, and clearing my mind of everything but the hum of one of the air conditioning units.\n\nNext we knew, Ellen opened the door again and said in a loud voice, \"NOW!\" She led all of us to the side stage as the opening band finished their last number. Amid a round of applause for the first band, the lights dimmed and went dark. The ten band members walked onto the stage to their opening positions, some carrying their musical instruments. The pallets with the other band's drums and electronics were rolled off the other side of the stage from where we stood, as some of our electronics and instruments from our band rolled in from the back of the stage. The whole transition of bands took about two minutes.\n\n<center>* * * * *</center>\n\nCrystal stood where I could hold her hand, and waited for some invisible cue to tell her when to go onstage. She gave my hand a squeeze and said, \"See you in a few minutes, handsome.\" She kissed me, and I kissed back. \n\nEllen handed her a wireless mic, and Crystal strode onto the stage as the lights came up and the band loudly launched into the opening bars of  'Flirty, Flirty Cowgirl.'  The audience jumped to their feet and went wild in delight that she opened with her big hit.\n\nEllen stood beside me as we watched the performance from the side of the stage. I detected a pride in her in being on Crystal's team that seemed special in some way. As the seventh song started, one that was supposed to take five minutes, she leaned over to me and said in a straight voice, \"Crystal said to check whether you needed another blow job before you went on stage. I'm ready when you are.\"\n\nMy mouth dropped open, and I looked at her in shock. Ellen doubled over with laughter, and said, \"I'm kidding. I'm kidding.\" The moment of comic relief did relax me, and even forced me to smile. She said, \"Keep smiling when you're out there; you look more handsome when you do.\" She handed me a wireless mic and told me to keep it within six inches of my mouth when singing. She showed me the off/on switch too. I probably nodded; numbness had started to set in. She whispered some other encouraging words to me as Crystal went into her eighth song of the night. I certainly felt that everyone was on my side, now all I had to do was not screw up. \n\nAt that point, Ellen stood on her toes and gave me a lovely kiss on my cheek. She whispered words of encouragement one more time. Wow! Where had that kiss come from? It seemed special in so many ways. She gave me a really loving look too.\n\nThe song ended, and Crystal started to introduce the first song that we were going to sing together:  'I Will Always Love You.'  She told the audience she needed a hunky male to help her sing this romantic song, and she knew just the guy \u2013 Jim Mellon. She laid on a few more accolades, mentioned that I was a proven hero in many ways, alluded to the People magazine article, and gestured to where I stood; Ellen gave me a push.\n\nI walked out into the spotlight and waved deferentially to the politely applauding crowd as the band started playing the lead in, and the lights dimmed. I had an opening solo for the song, and ... I nailed it. Much to my surprise, my voice didn't crack or creak; it had just the tone, timbre, and color that I'd had in rehearsal only I could hear the reverberation around the huge hall on some notes. I actually sounded good.\n\nCrystal and I looked endearingly at one another, also as we'd rehearsed. She flashed me a smile to tell me she knew I was 'on.' I caught her wink reminding me of our recent time on the bus. As we got into the song, the audience started to also sing more loudly and started to do the slow wave in the darkness with their cell phones and lighters. Crystal and I faced each other more, looking deep into each other's eyes. We were beautifully in sync. At one point, I became aware that several TV cameras were being used to project our image on a huge screen over our heads \u2013 everyone could see every little detail. Momentarily, I thought, \"Oh shit!\" When I looked again, I realized how in love we looked, particularly singing this song.\n\nWhen we finished the first duet the crowd roared in delight, the lights came up on the stage, and the band immediately segued into a lively version of  'See the Embers, Feel the Flame' \u2013 a song the group Alabama had made a hit thirty years earlier. Crystal and I launched into that upbeat song with zeal. At this point, I actually snuck a look at the audience \u2013 18,000 people. I felt my knees knock a couple of times, and I went inside my head and said to myself, \"Oh, no, you don't.\" \n\nWe hit a spot in the song where the band would do a couple of instrumental solos \u2013 lead guitar and bass. I turned to Crystal and said, \"Dance?\" She gave me a big smile, and we started a two-step around our part of the stage. Many people in the audience applauded although my dancing wasn't very good. We did a couple of more short songs, and with Crystal's lead I started to get more animated and move around the stage more, even moving over and singing part of a solo I had with the backup singers.\n\nWe sang another long song, and I realized how important the teleprompter was. I forgot the words to the second verse at one point and there, twenty feet away, they sat in space \u2013 clearly illuminated so those of us onstage could see them, but invisible to the audience except for a box on a post. I didn't embarrass myself. Thank you, Ellen.\n\nWe took a planned ten-minute intermission that really took twenty minutes. Crystal jumped into my arms as we came off stage. She jumped up and shouted; \"You did it. You did it. You were great!\" Terry and some of the band members verified her remarks with his slaps on my back, as did Ellen \u2013 with another kiss. I congratulated them too on the great job they were doing.\n\nAfter the initial congratulations, I caucused with Crystal, Terry, Ellen, Billy, and Hank \u2013 the violinist. I made a suggestion about the encore at the end. Crystal had told me she had been using a reprise of  'Flirty Cowgirl' for an encore, and I suggested that she do that, but that we also add another song \u2013 something the audience could participate in. Ellen nodded excitedly at my suggestion, and said, \"I can do that; I can put all the words on the teleprompter.\"\n\nWe opened the second half with our version of  'Gone Country.'  I got bold with my lines and started to get the audience to sing along \u2013 something they clearly liked to do to the songs they knew. At one point, I made my way to the front of the stage and walked along as I sang shaking the hands of the mostly female crowd clustered there. I got a few imitation 'swoons' and cheers along the way. Was I really a heartthrob to this crowd \u2013 to these women I'd never seen before?\n\nThe longer I was on stage the more relaxed I got; Crystal could see it too. She encouraged me too with an aside between songs. I felt as though there were two of me: one carefully and slowly observing the other, making corrections ahead of time and planning things the audience and Crystal would like, for instance, in one of our love songs I put my arms around her \u2013 it made the song more romantic and looked great on the large screens above us.\n\nI faded to the side for a couple of numbers Crystal did alone, and then we did some more duets. Between some of the songs we did a little conversational banter; Crystal started it with me tentatively, not sure how I'd react, and then we got deeper into it. She even had me talking about my motorcycle and my cross-country trip at one point. The last song before we let the audience coax us back on stage was 'Texas Dawn.' Crystal introduced it, and I even chimed in on how much I liked the beautiful the poem that made up this love song. We made the song ten minutes long, clearly our crescendo.\n\nThe lights went dark, and we made as though we'd left the stage for good. The audience cheered and shouted, \"More! More!\" The band members mulled around on stage acting as if they were packing up. After two minutes of acclamation, the lights rose, the band members took their positions again, and Crystal and I walked back on stage, took another bow, and then conversed about what to sing. She turned to Billy, and the band started  'Flirty, Flirty Cowgirl.'  The crowd cheered. I faded to the side of the stage. \n\nAt the end of the song, another huge round of applause and cheering exploded from the audience \u2013 and with 18,000 people, that's a lot of noise.\n\nCrystal gestured me forward. She yelled to me over the din, \"You introduce this one. It's your idea.\" She gave me an encouraging smile and nod.\n\nAs the applause died down, I spoke into my wireless microphone, \"Ladies and gentlemen, I love your state. Kentucky truly is one of the most beautiful parts of this great country.\" Lots of applause rippled through the audience. I went on, my voice reverberating around the auditorium, \"So, I hope you'll all stand and join us in a tribute to Kentucky that Stephen Foster wrote over a hundred and fifty years ago; I'm sure you all know the words.\"\n\nThere was a rustling din as 18,000 people rose to their feet. The band started playing, and I gave the opening lines to  'My Old Kentucky Home'as Crystal joined in, her distinctive voice resonating across the huge arena along with mine. We held hands up on the stage and started swaying \u2013 so did the whole audience. Only a few words in, the rest of the audience sang as well. Cellphones, flashlights, and lighters were immediately raised on high as the audience swayed to and fro. The background singers joined us too, and then Cindy Wonder and several members of the opening band that had been enjoying the concert backstage came out to sing too. The moment brought tears to many eyes; there's something about so many people singing a tribute to their homeland. However, I confess, I had to sneak a look at the teleprompter a couple of times.\n\nAt the end of the song, we bowed to thunderous applause, and ran off stage and back to the green room. The acclaim continued long after we'd disappeared, and the sound carried all the way outside the arena to the soundproof rehearsal rooms behind the building. Terry raced up just after Crystal and I had finished hugging and kissing off the edge of the stage. He shouted over the noise, \"Whoa! Hey, you guys were magnificent ... stupendous ... I mean ... let me tell you, I went to a Garth Brooks concert a couple of years back, and I thought that'd be hard to top. You guys did it. You really did it \u2013 both of you were magnificent.\" He started to dance around in his glee. Others filtered into the green room. Ellen came in and gave Crystal and me hugs and a kiss. A few of the band members came too; we all had happy but tired expressions on our faces. For the first time in my life I appreciated the tension and stress that concert performers and bands go through.\n\nSomeone produced some champagne, and we all toasted each other \u2013 Crystal, the great band, and even me \u2013 the newbie. We were all tired, and contrary to what many people believe we did not stay up all night drinking and smoking dope. The band worked another hour or so, helping the roadies pack up their gear and getting it on the truck that would drive to Indianapolis overnight so it could be set up and ready by ten o'clock the next morning. After that, they went to their motel and went to bed. Some of the guys had their wives with them.\n\nTerry and our publicist went off to talk about publicity and how to capitalize on the evening's success. So, Crystal and I bid everyone goodnight, and slipped out to the secure area and into the tour bus to play and sleep.\n\n<center>* * * * *</center>\n\nCrystal's tour bus had four major areas inside it. Up front was the 'cockpit' where the driver sat, and where a couple of others could be nearby. A 'pop out' living room comprised the next area; each side of the bus could pop out about three feet making a larger room. The third area comprised a kitchen, plus a bathroom that could be closed off from the rest of the bus so it became an en suite addition to the fourth area, a windowless master bedroom with a king-size bed.\n\nCrystal and I initially flopped down in the living room. I got us both some wine; I remained cranked up to 'full volume' mentally \u2013 I wondered if I'd ever come down from the high of participating in the concert with Crystal Lee. The wine helped me slowly unwind. I told her about my wishes for a new career and to embrace music again in my life in some way. We both laughed at how modest those goals had been when compared with what actually happened over the past couple of weeks. All this happened so fast; I still felt like some great power had tossed me into a wonderful maelstrom of country music.\n\nI held Crystal, and we started to neck. She suggested we move to part of the bus where we couldn't be seen if someone put his head right up to the glass. We turned out the lights up front and went back to the master bedroom. \n\nCrystal's body was a joy to see as I slowly unwrapped it from her concert outfit, her shirt, and short skirt falling in a pile beside the bed. Her bra and the black panties joined them too. As far as I could see her body was flawless. I leaned over her and inhaled the nipple area of one breast into my mouth and sucked hard. Crystal's head went back, and she pulled me to her body with a deliberate move that told me this was what she wanted. As I sucked, her hips started gyrated slowly into my groin. She pushed her pussy against my leg and started to hump in pace with my moves.\n\nAs I toyed with her pussy with my right hand, fingering her lips and clitoris, Crystal worked at undressing me. She told me, \"No fair that I'm the only one naked here; get out of this stuff.\" She seemed impatient, yet soon I was as nude as she was. \n\nI penetrated her with a couple of fingers. I found a sensitive place because she moaned, so I put some focus there as I sucked on her other breast. As I did I reminded her that she'd had me finger her before the concert; \"Crystal, at least once every song we did out there, I had to smell my finger \u2013 your aroma is an aphrodisiac to me.\"\n\n\"Come over me,\" Crystal whispered. \"Do me. Make love to me again.\"\n\nI repositioned between her legs, holding my very erect penis in my hand as I lowered my body into hers. I rubbed some of her juices from her folds onto my cock and then let her reach down and take over. She positioned me at her opening and thrust up into me as I pushed down into her. \n\nI sank deep into her on the first stroke; she was sopping wet. She gasped. \"Oh, wow. Oh wow. Ohhhhhhh. God, I have wanted to fuck you since I had you finger me. I almost jumped you onstage a couple of times.\"\n\nWe stroked in unison, and I went deeper yet. On the third stroke our pubic bones pressed against one another; I think the end of my cock was up against her cervix near her A-spot. We were both in ecstasy. \n\nWe were responsive lovers to one another. Her ups complemented my downs as we banged into each other slowly at first and then with an increased urgency to complete. Other than our moans, hums of encouragement, and gasps of pleasure, we went many minutes without saying a word; the only sound was the unmistakable sound of our bodies pulsing into one another.\n\nMy lover Kim in North Carolina had taught me the basics of Tantric sex, including the indefinite extension of lovemaking, and coming to an orgasm without ejaculating. I'd done well on the first lesson, and still needed to work on the second. For me, sex had always been a great relaxer; as keyed up as I was, I knew this would allow me a peaceful sleep when we were through. At that instant; however, I did not want to do anything other than prolong the experience and bring infinite pleasure to the two of us.\n\nWe played at sex for a long time \u2013 the longest Crystal and I had taken since we met. I had one dry orgasm, and brought her to many, some lasting several minutes as she crested and didn't come down. We toyed with many different positions, some making generous use of the many pillows that had been on the bed before we stripped it back to the fitted sheet. Eventually, I warned her of my intent to have a wet climax; I said, \"In thirty seconds something really great will happen for me. Where are you?\"\n\n\"I'm about where you are,\" Crystal gasped.\n\nI ratcheted up our speed, thrusting deep into her body. She wrapped her legs further and more tightly around my back and yanked me into her depths with more force. A wave of pleasure washed over me as my climax arrived. My back arched as I made the last several thrusts into Crystal's heavenly body. She arched off the bed too \u2013 shoulders and buttocks in solid contact with the bed, and her chest thrust up into me. \n\nCrystal moaned, \"Oh God, Oh fuck, Oh shit, Oh wow, Oh, Oh, Ohhhh,\" gasping for air and then repeating the chant as orgasm after orgasm rifled through her body.\n\nI ejected my love present for her just as she let loose a surprise jet of her own ejaculate along with a long moan of ecstasy. We clung to one another and collapsed, rolling to our sides so we could lavish more kisses on each other through our panting as well as smooth each other's bodies. We were both slightly sweaty from our exertions, and I felt as though I'd migrated to some planet where exquisite pleasure was the norm.\n\nAlthough our bodies returned to some semblance of normal breathing, we remained joined, my cock locked in Crystal's warmth by our desire to remain together and be as close together forever as we could get.\n\nI kissed her eyelids and ran my tongue around her neck. She was equally oral, French kissing me as often as our lips came near each other and sensually tonguing my ears and neck. Slowly, we parachuted down from the sexual high we had just given each other. Our ardor temporarily cooled. We shut our eyes and drifted into a transcendental state between consciousness and sleep. \n\n<center>* * * * *</center>\n\nIn my metaphysical state of sexual bliss, I became aware of another person crawling onto the bed. I felt no threat so I checked my response. A warm and naked female body molded to mine, full breasts and erect nipples touching my shoulder blades, and wiry pubic hair in contact with my butt. A trim leg wrapped over mine in a sexy gesture.\n\nCrystal reached past me and stroked an arm of our new lover as she embraced me, clearly welcoming her to our love nest. Crystal kissed me, and then nudged me to roll slightly so I could embrace and kiss The Other.\n\nThe Other was Ellen. I registered surprise, but I suspect the only parts of me that displayed the emotion were my wide eyes. Ellen leaned in and kissed me very passionately, her taut breasts rubbing against my muscular arm. We ran our tongues together while Crystal stroked my back in a sensuous manner. I got one arm around Ellen and started to toy with a nipple.\n\nEllen said softly, \"I've been here a while \u2013 watching.\"",
        "Crystal said softly, \"Jim, Ellen is my younger sister. I ... well, we ...\"\n\nI interrupted and said in a hushed voice, \"I should have guessed.\" I kissed Ellen and then Crystal, and then changed the kisses for each woman to French kisses \u2013 deep soul kisses that stirred the spirit and the hormones for all three of us. Thinking back, I realized I'd made many assumptions and leaps of faith about what each woman would tolerate about a threesome; none of my presumptions were wrong.\n\nWhile the sudden appearance of another woman in a love tryst might have startled me a month earlier, several situations had softened me to accept this situation. There had been Lacie and Lindy \u2013 mother and daughter lovers; then there were June and Kim \u2013 sisters, although several states apart; and further in the past even Lauren and Karen \u2013 sisters playing together, even while Karen and I had been married, but without my knowledge. I smiled at the thought, 'What would Karen do?' Now, I knew enough about my late wife to know she would have probably been a willing participant in this m\u00e9nage-a-trois.\n\nSuddenly, I felt a jolt as my own incestuous feelings for Anna resurfaced in this close and loving atmosphere. The question I posed in my mind changed, 'What would Anna do?' How would I react if Anna slipped into my bed to be loved \u2013 to share a passionate and sex-filled night with? Oh, God, I wanted her; I knew without doubt that I did, but ... she was my sister. I pushed these thoughts aside, knowing I'd come back to them again and again before I decided, and before I saw her again.\n\nAfter kissing Crystal and Ellen, I said with a touch of humor, \"I take it I passed some 'Sister Test'?\"\n\nEllen said in a dreamy voice, \"I watched the two of you make love for a long time. I've never known a man to last so long. I want to see what it's like too. I masturbated as I watched, but it's not the same ... you know.\" Crystal and I nodded, and then Crystal nudged me to Ellen's pussy.\n\nI maneuvered between Ellen's legs, and she scrambled to welcome me with a look of excitement and lust on her face. As I lowered my tongue to Ellen's quim, I started using my fingers to carefully explore Crystal again, not concerned that I could feel our combined juices leaking from inside her. Ellen tasted as good as her sister \u2013 different and delightful. I buried my head in her pussy, licking, and sucking the folds of skin surrounding her opening. Ellen's body immediately started to jerk and writhe around my tongue and fingers.\n\nI thought how wonderful the taste sensations that emanated from a woman's nether region were. A musky and highly scented taste that invited \u2013 no, demanded \u2013 the follow through to the sex act. I'd read somewhere years earlier about how some researchers believed that a human male could sense the female pussy's scent from yards away. This aroma alone could induce the start of a relationship where male and female copulated. In that instant, I realized the master bedroom in the large tour bus wreaked of sexual odors \u2013 Crystal's, Ellen's, and mine. We filled the entire bus with the aura of sex. \n\nEllen bucked, groaned, moaned, and twisted as I ministered to her. Crystal turned part way to the two of us and raised one leg to ensure availability to my explorations of her nether region.\n\nI added some fingers from my other hand to my oral assault on Ellen's pussy. That was all it took to bring her to climax. Ellen announced her arrival at heaven's doorstep with a long feminine groan and a plea to never stop. She then slowly arched her back as I continued thrusting my fingers and tongue into her body at a rapid rate, attacking her clitoris whenever it was near, and trying to grind the orgasm from her by rapid siege on her internal G-spot. Ellen gave a long shudder and high-pitched squeal of delight from her; she collapsed and pulled her legs up to her chest. I backed off so she could enjoy the afterglow of her orgasm. Eventually, Ellen whispered, \"Do Crystal again,\" she implored. \"I want to watch \u2013 close up.\"\n\nI looked up and noticed that Crystal had been kissing her sister, and rubbing and sucking on Ellen's breasts to add to the stimulation I'd been delivering to her pussy. I felt an electric charge surge through my groin at the sight of the two sisters interacting with such passion and lust. The sapphic act triggered memory of Kim's description of erotic play that I should consider adding to my repertoire of acceptance. Now, here it was right in front of me, and I loved it and found their behavior hyper stimulating.\n\nI pushed Crystal back and put her legs over my shoulders. My tongue went right to her clitoris; she jerked so much at that touch that she almost threw us off the bed. I inserted fingers and searched for her G-spot, tongued her clit, and with my other hand joined Ellen in massaging and tweaking Crystal's breasts and nipples. I watched as Ellen leaned in, and French kissed her sister.\n\nCrystal started groaning almost immediately. She moaned out, \"I don't think I've come down from earlier tonight. Oh God, I'm so sensitive to your touch. Oh God, I'm going to cum.\"\n\nAnd cum she did less than a minute after Ellen and I started to sexually assail her sexual senses. I continued to tongue and thrust into Crystal with my hand, riding out her orgasm with her. A gush of girl juice flooded the area adding to the taste and the mingling scents in the room. Crystal shrieked, arched and fell back with a huge shudder and gasp. \"Oh wow ... you've got to stop ... no ... never stop ... I could have orgasms like that forever. That was more exciting than this morning. You just keep getting better and better.\" She was panting.\n\n<center>* * * * *</center>\n\nAs I was figuring out what to do next, I felt Ellen inhale my sodden rod into her mouth. She gave a few very wet sucks then deep throated me: I about shot through the roof of the RV. She pulled off me, and Crystal maneuvered so she could repeat the wonderful and lewd act. \n\nEllen said in a low melodic voice, \"You taste so nice \u2013 the combination of your cum and my sister's juices, but it's missing a touch of me; I love it though.\"\n\nThey alternated a few times in their dual blowjob, and then I stopped them. \"I want to be inside someone when I cum.\"\n\n\"Do Ellen,\" Crystal whispered; \"I want her to experience you the way I have.\" Crystal kissed the end of my cock. \"I really want to watch \u2013 to see what we look like.\"\n\nI moved up over Ellen who lay back and spread herself wide to welcome me to her depths. I toyed with my initial entrance to her just the way I had with Crystal when we first met, sinking in a fraction of an inch and then withdrawing, then sinking a little deeper and withdrawing, then doing it again and again. For well over a minute, I worked up to full penetration of her pussy. By then she had her legs wrapped around me and was a full participant in our thrusts into each other, trying to maximize the depth of our union.\n\nI had to moderate my thrusts into her lest I cum immediately and lose my opportunity for a full-fledged and long-lasting session. I'd cycle several times then pause and lavish attention by sucking on her breasts and kissing her neck and face. We created some new ways to French kiss that involved all three of us too.\n\nCrystal laid along side us with her hands and mouth busy adding to the erotic sensations we were creating for Ellen. Unquestionably, the sisters had been intimate before. I found the thought exciting and erotic. After experimenting with several positions, I sensed that I could hold off no longer. \"Ellen, I'm going to cum in a few seconds,\" I announced. \n\n\"Cum deep in me ... fill me you wonderful man.\"\n\nWe picked up the pace and in less than a minute that sensational feeling swept through my body \u2013 starting in my groin and radiating outward to my toes, my heart, my head; then came the surging of my liquid juice through my body and finally up and out my cock and deep into Ellen as the paroxysm of my own orgasm overtook my complete body with the spasms of pleasure.\n\nI filled Ellen. We were arched into each other pressing our loins with maximum pressure. Her legs pulled me tightly into her. There was no doubt about her desire to couple \u2013 to accept all I could give her. The eroticism of loving a second woman in concert with Crystal proved a colossal turn on; I came in buckets.\n\nWe collapsed. I reached out and pulled Crystal into our combined embrace. We both kissed Ellen and made love to her as she floated down from her high. As our afterglows waned, I said, \"I have a lot of questions.\"\n\n\"Ask away,\" they both said almost in unison.\n\n\"Are you 'bi' or lesbians or what?\"\n\n\"We're bisexual, I guess,\" Crystal answered, \"But only with each other. We've always wanted a man in our lives \u2013 either apart or like this; however, we never found someone we both liked enough to share like this ... until you. We did Crystal's husband a couple of times, and he was awful; but since then no one measured up the way you have.\" \n\nI expressed my thanks for their thoughts with true modesty.\n\nI asked, \"Have you done this with other women?\"\n\nEllen said, \"No. Just you. I guess we're open to that idea, but again, the circumstances just haven't been right. Who knows, maybe sometime soon \u2013 real soon?\" She grinned at me.\n\n\"How did you both know that I was the guy to do this with?\"\n\nCrystal responded, \"Well, every now and then, as you know, I'd talk to Ellen on my cell. I told her all about you \u2013 no detail too small to leave out.\" She grinned at me; I was gently stroking her breast and nipple with the arm I had around her.\n\nEllen added, \"Just based on how caring and sharing you were and how naturally friendly with everyone, I could tell you were different from the other guys we've known or dated. You don't have a big ego that has to prove something. You're a horn dog, but also a gentleman.\" \n\nEllen paused, \"We know you're worried about getting real involved because of your trip, the loss of your wife, and the worry about rebounding. Don't worry; we know you have things to do that won't involve us ... and 'miles to go before you sleep.' Anyway, I asked Crystal if I could join you here, like this, and we'd see how things went. I'd told her I wanted to go for it. I like you \u2013 lots \u2013 and so does Crystal.\" Ellen leaned in gave me one of those toe-curling kisses.\n\nCrystal asked in a serious tone, \"Are you OK making love to the two of us tonight? Would you be more comfortable loving each of us individually? Together?\"\n\nI chuckled, \"It's a little late to ask, isn't it?\" I added more thoughtfully, \"Oh, loving two beautiful women together is no problem. You are both beautiful in looks, spirit, and your thinking. I could stay here with you both forever. My concern right now is about jealousy between the two of you. I don't want to be reason for any rift between the two of you.\"\n\nEllen responded seriously, \"We worry about that too. We've tested our thinking about jealousy a lot. I don't think we're jealous of each other. We got past that when we were teenagers and started having sex together. Although we're both independent, we care about each other's needs and wants. Sharing you this evening was a good test of how we feel; I didn't feel anything other than a real desire to share and participate. Did you Crystal?\"\n\nCrystal said, \"No, I just wanted you to have your turn with Jim \u2013 with this wonderful man.\" She ogled my flaccid cock with a lecherous grin. She added, \"I've been filled by that repeatedly over the past week, and I love it ... I love him ... and because I also love my sister I wanted to share this with her ... share you with her. I'll have him later tonight too, if he's willing and able.\" I was nodding eagerly.\n\nCrystal paused, \"It's not just about the sex \u2013 although that's fabulous. It's the man you are \u2013 that's what I really wanted her to feel ... the same sense of love I have for you.\" Crystal leaned to me with a romantic kiss.\n\n\"This will be a big experiment,\" I said. \"We need to agree that we will each be very open in our communications about how we're feeling, and what our needs are. If things aren't working, we should talk about it and figure out how to change things. I talk about this three-way relationship as though I know what I was talking about; I don't, but let's try it.\"\n\nThe girls both chortled. Crystal moved around and sucked my cock into her mouth again. She raised her head and added, \"I love the taste of you and my sister and me all on one stick. Wonderful. Like a popsicle only it's a sexsicle.\" She went back to sucking me to life.\n\nWhen I inflated sufficiently for intercourse, Crystal pushed me on my back and Ellen came over me and slowly sank down on my body as we stared into each other's eyes. The two women kissed and put on a bit of a show for me pawing at each other. The more they performed, the harder I became, and the harder I thrust into Ellen.\n\nCrystal started twiddling Ellen's clitoris too and then sucked on her breasts and nipples. Then, she started talking dirty to the two of us, telling us how much she liked my cock in her pussy and the sight my cock sinking to her sister, and the feel of her sister's lips on her pussy, and how her sister's pussy tasted.\n\nEllen and I both came together. I didn't try to prolong anything. We were learning each other's messages and signals around lovemaking. My climax was as wonderful as it had been earlier with each woman. Ellen and I remained joined for a while. Crystal set the alarm clock and then snuggled up with us. We said goodnight. In a languorous tone, Ellen reminded us that we needed to be in Indianapolis by noon later in the day. The three of us then drifted off to sleep with smiles on our faces, and our arms wrapped around each other.\n\nI had a brief dream shortly after I went to sleep. Karen had been the third woman in the loving sexual romp I'd just shared with Crystal and Ellen. We'd all made love to her, and she had been a full and active partner in loving each of us \u2013 even Crystal and Ellen. There was no jealousy, and Karen appeared so happy with all the things we did to and for each other. And then the dream dissolved, and I fell into a deeper dreamless sleep.\n\n\n\n\n\n<center>Chapter 10\n\nIndiana</center>\n\n\n\n\n\nEllen opted to ride the bus to Indianapolis since she had a couple of dozen telephone calls to make to be sure arrangements were ready for the concert Crystal and I were going to give that night. Her primary work for her sister was to coordinate with Terry, Dave, and Dan, and to be sure the public appearances and concerts went smoothly. The more I watched what she did; the more I saw how valuable she was to Crystal ... and now me.\n\nAs Crystal and I got ready to ride the motorcycle up to Indianapolis, I said to her, \"So, Ellen was your surprise for me this weekend?\" I presumed the answer was 'yes,' since it's not every day that your lover orchestrates a threesome involving her sister.\n\nCrystal smiled coyly at me and said, \"We'll see; maybe there are still more surprises to come.\" She laughed at her secretiveness, and pulled the motorcycle helmet over her gorgeous light brunette locks, this time allowing much of it to stick out the back in a makeshift ponytail.\n\nI wondered what other surprises she might have in store; I knew there were no more sisters in the Lee family. \n\nI'd also discovered that she liked to create surprise moments for everyone around her, even if it took money. Recently, I learned Crystal had paid for the daughter of one of the backup singers to get orthodontic braces, a significant expense and one that was out of reach for the singer without Crystal's help. She'd also paid off a major medical bill for one of the regular band members. Her generosity felt good, and made me love her that much more.\n\nWe followed my ethos of avoiding the Interstate highways to get up to Indianapolis. Just after we crossed into Indiana, I did my ritual of leaving some of Karen's ashes in a significant place, in the Ohio River. The site was not serene, even on Sunday morning. People and boats were all about on the river, everyone having gales of fun. Crystal came and hugged me after I'd let Karen's ashes float away atop the water and finished my short meditation. Karen had been fun loving too.\n\nWe pulled into the Indianapolis Fair Grounds at noon. The bus had just arrived, and we connected with Ellen, Terry, and the rest of the entourage. We all had lunch together at one of the concessions.\n\nEric, our guy from our record label with 'connections,' asked me, \"Jim, how would you feel if we released the single of  'Texas Dawn' early, before the rest of the album is ready to come out?\"\n\nI put the ball back in his court, \"I think that's your decision. You're in business and know how to optimize profits with or without an early release. Personally, and just having jumped into this business with both feet; I'd love it \u2013 it'd be more like instant gratification. I think it would give Crystal's current album a boost, generate two boosts to the single \u2013 now and when the album is issued, and lastly it'd pave the way and create some hype for the new album. We're using the song in these two concerts anyway; at least a few people have heard the song now \u2013 it seemed very well received in Louisville.\"\n\nEric nodded. In his eyes, I could see he'd been evaluating my business acumen and that I'd passed some test he'd put out there for me. He smiled and walked away.\n\nA few minutes later, Terry put some pressure on me, \"Jim, you wouldn't consider a break in your travels to do some more concerts? Crystal has some more bookings coming up \u2013 Oklahoma and Texas.\"\n\nI shook my head; \"I need to do this trip I'm on for all sorts of reasons. There are things I have to get through, some things I need to learn about myself and even prove to myself. If I don't do this now, I'll never do it, and I'll never become the whole and integrated person I'm striving for. I'll work with you then, if you still want me.\"\n\nTerry shrugged; he could tell from my emphasis that it'd be a hard sell to get me to change my mind. Neither Crystal nor I were motivated by money. Crystal had watched me and listened to my answer intently over Terry's shoulder. When I finished, she winked her approval at me. I thought how supportive she was.\n\nI thought a moment and then held the door open slightly, \"Terry, if one of your concerts is close to where I am, I'll be glad to do it.\"\n\nWe connected with Billy, the bandleader, after lunch, and with a couple of other band members spent a few hours finalizing the details of the evening's concert and rehearsing. I was amazed at how relaxed I felt relative to how I felt at last night's concert. We added a couple of 'Indiana' songs for color, including  'Indiana Wants Me.'  We listened to several versions of the song on iTunes and YouTube, and then rehearsed it a couple of times in our own style, breaking up the song so Crystal and I had individual parts to sing. Ellen promised the words would be on the teleprompter.\n\nWe finished about five, and had two hours before the concert started with  'The Hobo Palace' band to get the crowd hyped up before we appeared. Crystal, Ellen, and I all looked at each other with knowing glances. I whispered to Crystal in a lascivious tone, \"Aren't you going to do something about my pre-concert anxiety?\" She burst out laughing.\n\nThe three of us drifted back to Crystal's tour bus by different paths, and locked ourselves inside. We allotted thirty minutes for 'wild sexual activity' before we had to get serious about the concert. We cavorted around the bedroom, and I used my steely shaft to plug one hole after another. By the end of the half-hour, we'd each had at least one orgasm and a real mellow mood settled on the three of us.\n\n<center>* * * * *</center>\n\nEllen dressed and scurried away to attend to concert details and the teleprompter. After cleaning up, Crystal and I dressed in our onstage western country outfits that Terry and the studio guys wanted us to wear. As she'd done in Louisville, Crystal had me finger her cunt 'So I had something to remember her by' if I got nervous during the performance. When we connected with Terry, he proudly announced that the gate had sold about 16,000 tickets to our concert. Unlike the Louisville concert, this would be outdoors, again with large projection screens to show details and close-ups of us onstage to the more distant people in the crowd."
    ],
    "authorname": "TLCgiver",
    "tags": [
        "romance",
        "incest",
        "group",
        "threesome",
        "polyamory",
        "love",
        "motorcycle trip",
        "harley",
        "cross-country",
        "hero"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/road-trip-pt-02"
}