{
    "title": "There and Back Again Ch. 119-120",
    "pages": [
        "Chapter One Hundred Nineteen: Goodbyes \n\nThe Landsmeet convened four days later; we'd all gotten over any hangovers we'd been left with - Anders had looked like death until he healed himself the next day - and Aedan had sent most of our group on to Amaranthine to wait for us. The Landsmeet was the last thing we needed to do before we followed them, and Riordan, Loghain, and Dougal would be leaving for Nevarra with Anora by boat from Denerim. \n\nI was surprised to discover, as I entered the Landsmeet chamber, that I had an assigned place to stand. It was up on one of the daises, near Fergus but thankfully not right beside. Based on the few nobles I recognised and where they were standing, my rank was somewhere roughly equivalent to an Arl, and I saw more than a few scowls and speculative glances directed my way by the nobility who stood below. No one spoke to me, and everyone nearby left a small but obvious space around me. I had to admit to being slightly offended, but didn't care enough to try and breach the gap with small talk. \n\nI wore black trousers and a long jacket that hung below my rear end, similar in style to what Sereda had been wearing in Orzammar; Leliana, my personal fashion miracle worker, had found a tailor and had several similar outfits made for me before the Landsmeet. I had a thin, expensive chain shirt on under the jacket as protection, and the trousers were lined with some fabric she'd found that was almost as protective as leather. The style was distinctly feminine without being overly girly, and I noticed some of the looks I got from the noblewomen in attendance were more directed at my clothing than my station. I wonder if I've started a new trend, or just made myself the target of the court gossips. Not that I cared, but it could be amusing.  \n\nCailan had the Wardens near the front in a place of honour, and I exchanged nods and winks with my husband and brother as they stood impassively in full armour. They weren't the only ones, I noticed; Teyrn Wulff and Arl Bryland, among a few others, were also wearing plate mail. Even the nobles in fancy clothes, which was most of them, had swords sheathed at their sides, and the women had daggers tucked under belts and kirtles if you knew where to look. I saw the glint of metal under more than one shirt. But their demeanors weren't aggressive towards each other, and it felt more like preparation against assassins or an attack from the outside than fear of fighting within the Landsmeet. \n\nRiordan, Zevran, Wulf, Sten, and Dougal stood behind Aedan and Alistair, with Loghain half-hidden behind them. I was somewhat surprised to see him there, but supposed that Cailan could benefit by his tacit support. None of the nobility had openly declared opposition to Cailan's rule, but it wasn't too far a stretch to imagine that some of them might rally behind Loghain or Anora given any encouragement. \n\nThe Grand Cleric was conspicuously absent, as the Landsmeet began; there was an older woman in Chantry robes, a Revered Mother I assumed, standing quietly where she normally would have sat, and as Cailan welcomed everyone, I speculated on whether she'd be Elemena's replacement. Anyone would be better than that old bat, but I hope at least Elemena doesn't get to pick her own successor. \n\nThe initial part of the Landsmeet was interesting to me only in speculating which aging, overweight nobleman was going to expire of a heart attack as Cailan described the fire and rebuilding in the Alienage. Apparently half of the nobility weren't even aware of what had happened - Maker forbid one of them look over the wall or speak to an elf! - and some of them were having complete fits over the expense. Cailan justified it, given the basically free labour - between the elves and the army - and the stonemasons, who'd already been paid. \n\nThe outrage increased even more when Cailan announced that he had revoked the law prohibiting elves from being armed. Now they were allowed to carry weapons within the Alienage, as well as join the city guard. Sergeant Kylon was called, and he strongly supported the measure, giving testimony that the elves he'd accepted were some of the hardest working and most effective of his guardsmen. \n\nAll of that was forgotten, however, when Cailan introduced Kallian as the Bann of the Alienage. Evidently Valendrian had been allowed to choose who would speak for the elves, and he and the other elders had unanimously chosen Kallian. She came in and stepped down onto the floor with several other Banns and lower nobility, purposefully placing herself at the bottom of the hierarchy, I noticed. There was a lot of muttering and staring; the nobles left enough room around her to avoid spreading a plague, but Kallian merely stood straight, looking directly ahead at Cailan, the very image of grace under pressure. After a few awkward moments, Alfstanna stepped forward, nodding at the petite elf and standing by her side, arms crossed imposingly. Cailan shot the young Bann a grateful look, but she didn't look like she felt the need for his approval. The muttering stopped, people obviously not wanting to offend Bann Alfstanna, and the Landsmeet moved on. \n\nThe treaties Cailan had signed - with Sereda and Lanaya, as well as with Aedan and Alistair - were put on record, and I thought I saw a hint of surprised approval from many of the nobles present. He'd done a remarkable job to get the agreements, and was clever enough to word them in such a way that they were not only mutual non-aggression pacts, but required aid from both elves and dwarves if Ferelden were ever invaded - whether by darkspawn or Orlesians. And all he'd had to give up was some Blighted land near Ostagar, and recognise Orzammar's sovereignty - which had never been up for debate, as far as I knew. We'd have to protect those new allies from invasion as well, but given their locations, if they were under attack, so was Ferelden. The treaties between Orzammar, the Dalish, and the Grey Wardens were mentioned only in passing - Warden matters, not Landsmeet, I supposed. \n\nAfter a brief break for lunch - food was brought in by a small army of servants, and the nobles were served fresh bread, cheese, chilled meat, and watered wine - the Landsmeet approved a small increase in taxes from the lands unaffected by the Blight to help those with damaged lands rebuild, as well as support the Grey Wardens. Cailan spent some time explaining trade deals he'd worked out with various cities in the Free Marches, Nevarra, Orzammar, and Orlais to aid in the recovery. He announced the separation of our Grey Wardens from Weisshaupt, explaining we had requested a mutual-aid treaty in the case of another Blight. I wondered if Weisshaupt would accept; time would tell. \n\nI was shocked when Cailan put Eamon's name forward as the new Arl of Denerim. Given the degree of acrimony between the two men, I was amazed Cailan would want his uncle so close by, but I had to admit, Eamon had done surprisingly well working on the rebuilding of the Alienage, and Kallian was the first to throw her support in for the appointment. It was approved on a temporary basis, given his lack of eligible heirs; I wondered if he and Isolde would try again and end up with a little girl who was also a mage. Redcliffe was transferred to Teagan, who managed to look pleased and shocked, though I doubted anyone was actually surprised. Word of Teagan's defense of Redcliffe and his leading a battalion against the darkspawn had spread among the nobility, and he was suddenly exceptionally popular with the young ladies. \n\nI wondered how disappointed they'd all be when he married Kaitlyn. \n\nThe last order of business was the fate of Anora. To Cailan's credit, his ex-wife was brought in for the discussion, and he told the Landsmeet she would be allowed to voice an opinion on the options available. He didn't mention she'd already made her choice. He proceeded to explain the choices he'd approved: \n\nShe would be allowed to dedicate herself as a Chantry initiate, staying in Ferelden at an isolated Monastery on the eastern shore beyond the Brecilian Forest. She would have to give her oath not to become involved in Fereldan politics in any way, and not to leave the monastery for the rest of her life. \n\nShe would be allowed to join the Weisshaupt Grey Wardens, if they would take her, with the understanding that she would be kept out of Orlais and away from Ferelden. \n\nThe third option would be to travel to Nevarra, which was what I knew had been decided. Cailan explained the favourable marriage contract with an older nobleman, a duke named Rethnar Anaxas from Hunter's Fell, in northern Nevarra. If he succeeded in his political bid, and she helped him, she'd be well set up in Nevarra when he died and his children inherited. He had the equivalent of an Arling, with several vassals, that she would administer while he was in Nevarra City, not to mention joining him there if he was successful. \n\nEveryone seemed surprised to see Cailan had gone to so much effort to give her options that weren't awful; he'd seemed so angry, before the prior Landsmeet, but all I could see in his eyes when he looked at her was regret. I was proud of him for not trying to make himself feel better by punishing her. Her expression was still somewhat startled, and I wondered if she had expected he'd change his mind and have her executed for treason. \n\nThe other nobles seemed to be waiting to see what Anora would say; she traded glances with her father, then examined Cailan's impassive face for a moment before speaking. \n\n\"For one who has been put aside and all but charged with treason, I am gratified to be allowed the opportunity to have input on my own fate. I would apologise for my actions before and during the Blight if I thought those sentiments would be accepted, but I know they will not. \n\n\"While I respect the Chantry and the Grey Wardens, I have no wish to join them. I am neither sufficiently devout, nor do I have the martial prowess for either of those options to make sense. I will accept my exile to Nevarra, and my marriage to Duke Anaxas, if his Majesty will allow it, with gratitude.\" \n\nThe look that passed between Cailan and Anora was heartbreaking, but also hopeful somehow. Perhaps it was the reality of their annulment setting in, but it seemed they both regretted how things had fallen apart between them, but also accepted that they were better off separate, not together; they had hope for their futures. Maybe they really just brought out the worst in each other. Had things been different... I was struck by a sobering thought, and I sought out Alistair on the floor near Cailan. He glanced at me at the same time, eyes drawn to mine, and he smiled - the type of smile that crinkled his eyes and lit up his face. No, that will never be us. I blew him a kiss, and he reddened slightly, rubbing at his neck with a silly grin. \n\nThe court approved Anora's choice, and Cailan declared that Anora, escorted by the Orlesian Wardens and Loghain, would depart for Nevarra on the morning tide. With that settled, the Landsmeet was over - one of the fastest in recent history, according to a nobleman I overheard talking to Fergus. \n\n\"And that's as it should be,\" he declared, a bored-looking Fergus nodding. \"We have enough problems waiting for all of us at home; it's a waste of time for every noble in the country to be tied up here in meetings when we should be attending to the harvest and rebuilding.\" \n\nI hoped the rest of the nobility felt the same way, and would go home and work hard to ensure the entire country didn't starve over the winter. \n\nThe remaining Wardens - except Loghain - and Cailan, Kallian, Teagan, Eamon, Fergus, Alfstanna Eremon, Leonas Bryland, and Gallagher Wulff, among a small number of other nobles, went to the Gnawed Noble for supper. I was famished; the lunch in the Landsmeet had been fine, but the portion was suitable for a normal skinny human girl, not the Grey Warden appetite I had. I ate as much as I could without being obvious, and Alistair promised to sneak into the palace kitchens when we got back for a snack. \n\nIt was a nice celebration, more personal and real than the massive gathering we'd been so visible at a few days prior. Kallian was accepted without question, to her apparent surprise, and was soon chatting with Bann Alfstanna and Teyrn Wulff about ways to improve the lives of the elves living in their Alienages. Cailan and the other nobles acted like normal people, much to the confusion of the wait staff who had to be convinced to stop bowing or curtseying every second minute and calling everyone by pretentious titles. It was amusing to watch them initially fall all over themselves, but they finally got back to normal, serving us without fuss. \n\nBy unspoken agreement, we didn't discuss the Blight or the Landsmeet, the rebuilding, the darkspawn, or anything else awful or contentious. I got to know several of the nobles better, and felt like they were the sort of people who'd support the changes I hoped to see in Ferelden since Cailan's reinstatement. None of them seemed racist, classist, sexist, or homophobic, and all of them avoided discussing the Chantry in a way that led me to believe they'd fix those problems too, given half a chance. And it was nice having a chance to talk to a female noble; there weren't many that held titles, despite there being no rule against it, and Alfstanna was refreshingly direct about holding her own in a man's world. \n\n\"You'll be alright,\" she asserted. \"Don't let them get away with anything, stand up for what's right, and don't let it matter what you have under your armour. \n\n\"I like that outfit, though - feminine without being...frilly. I've been accused of being too masculine, never taking off my armour. Can I have the name of your tailor?\" \n\nI had no idea, of course; I promised to find out from Leliana and send word. \n\nTeagan admitted he had chickened out and had yet to propose; he promised he would be asking Kaitlyn to marry him on his return to Redcliffe, and was teased good-naturedly for a while about working on an heir. He avoided turning it back on Cailan, Fergus, Alfstanna, or Eamon, all currently without heirs of their own - for various reasons, many of them tragic - and I was grateful. \n\nFergus bowed out early, not that I was surprised; we were all trying to be happy, and he was still coming to terms with his losses. I held Aedan's arm when he got up to chase after him; it was clear Fergus wanted to be alone. \"In the morning,\" I assured Aedan, and my brother sighed and nodded sadly. \n\nWe settled the bill between us and went back to the palace; I was almost dizzy with relief that the Landsmeet was over and no one had died. My Prince made love to me, as relieved as I to be done with the politics for a good long time. \n\nThe ship to Nevarra was set to sail on the mid-day tide; we found ourselves on the dock an hour before, trying to figure out how to say goodbye to someone we knew wouldn't survive to see us again. I let Aedan and Alistair talk to Riordan and Dougal one last time, standing off to the side alone, while Cailan had words with the captain. Anora approached me while I was busy watching Cailan, clearing her throat to get my attention. \n\n\"I was doomed from the start, wasn't I? You played the game well.\" She sniffed, her superior attitude coming off as sour grapes, and I suppressed a smile. \n\n\"That's the thing. I wasn't playing a game. I mean, we lied, obviously, but none of us did anything to you, Anora. He'd have been prepared to forgive you, I think, to let you stay his queen - but you destroyed any chance of that when you betrayed us in the Landsmeet. Something you don't truly understand about your former husband, I think, is his sense of justice.\" \n\n\"Oh, and you know him so much better than I?\" \n\nI sighed, saddened by her pathetic insinuation. \"Not carnally, if that's what you're asking.\" I rolled my eyes. \"But when was the last time you actually talked to him? Not telling him what to do, or blowing him off, not trying to shoo him out from underfoot...but actually had a conversation? Asked him what he thought about something? I'd wager I do know your husband better than you, to be honest. Cailan is many things, sheltered being one, and he's had a lot of growing up to do over the past year, thanks not only to you and your father, but also to Maric...but he cares a lot about things being fair. And I don't think you know the meaning of the word.\" \n\n\"You could have been queen, you know. I've seen the way he looks at you. You chose the wrong brother. Too late now, of course; the Landsmeet would never accept you now, having been married to someone else.\" \n\n\"That's the difference between you and me, Anora. I don't want to be queen; I never did. I chose my husband for love, not power or influence. I wouldn't have cared if he was a peasant from the poorest farm in all of Ferelden, I'd still have married Alistair. As for Cailan, that look you mentioned is disbelief, not interest. He doesn't know quite what to do with someone who tells him the truth, without hiding or sugar-coating it, and who isn't helplessly waiting to fall into his bed. Was jealousy really what was driving you, all these years? That's just...sad. I think I pity you, actually.\" \n\nHer eyes flashed, barely concealed rage on her face, but we were interrupted by the captain, who approached Anora with his hand out. \"My Lady, may I escort you on board?\" \n\n\"I wish you luck, Anora. I hope Nevarra agrees with you.\" \n\nShe huffed indignantly, refusing to make eye contact, and stormed on board, not saying goodbye to Cailan or even making eye contact; not even waiting for the captain, who watched her go with an amused smirk. \"This is going to be a long trip, isn't it?\" \n\nI hummed an agreement, and after bowing politely to me, he turned and walked up the ramp, leaving me to approach the Grey Wardens with Cailan. Riordan turned to me with a subdued smile. \n\nI had no words, so just stepped up and pulled the Orlesian into a hug. He patted my hair, reminding me of Duncan, and I turned away to hide my tear-filled eyes as the rest of the group said goodbye as well. Cailan and his guards left; it was just Wardens left on the docks as the sailors got ready to go. \n\nI turned to Loghain, crossing my arms and bowing as Wardens seemed to like to do. \"Good luck, Warden.\" He searched my face, probably for some sign of irony or mocking, but I was truly sincere. Just because I'm happy you're leaving doesn't mean I'm hoping for you to be miserable. Not entirely, anyway. \n\nHe finally nodded, one corner of his lips turning up in an almost-smile. \"Thank you, your Highness.\" \n\nI winced, rolling my eyes as he smirked. \"Dare I ask - what for?\" \n\n\"I know you were part of the reason I was recruited, and Anora was kept safe. Duncan told me, before... Anyway, thank you. And good luck.\" \n\n\"Try not to kill any Orlesians when they call you a 'dog lord', alright?\" \n\nHe chuckled, his gravelly voice tight as he looked around at Denerim one last time. He bowed to the rest of the group, took a last deep breath, and walked up the plank without looking back. \n\nDougal offered hugs all around, the stocky older man somewhat teary himself, and I took the opportunity to tease him into smiling. \"Don't worry,\" I whispered. \"Wynne's going to travel, I just know it. Show her a good time, would you?\" \n\nHe ruffled my hair, making me squawk in annoyance, and after finishing his goodbyes, he hoisted his bag and carried it carefully on board. \n\nWe all stood and saluted as the boat bearing three of the heroes of the Blight pulled away from the docks; Dougal and Riordan stood at the rails, and I waved until I couldn't see them anymore in the afternoon glare. I pulled my husband, my brother, and my Antivan friend into a group hug with a strangled sob when they were gone, grateful beyond my ability to express it for the three of them. ",
        "\"I love you guys. You know that, right?\" \n\nAedan kissed my forehead, Zevran squeezed my hand, and Alistair wrapped his arm around my waist, holding me close as we turned to head back to the palace. \n\nThe following day, Fergus left again for Highever, and those of us remaining, including seven Wardens, Leliana, Prince and me, packed ourselves up to leave for Amaranthine at first light the day after that. Saying goodbye to Cailan was harder than I expected, for both Alistair and I; we knew we were leaving him with few supporters, fewer friends, and a lot of disgruntled Loghain cronies to deal with, not to mention the nightmare of trying to recover from the Blight. \n\nI managed to wait until I was alone to shed a few tears; in such a short time, we'd lost so much - Duncan, Riordan, Dougal, Sten...even those who hadn't died, we would likely never see again. And now walking away, leaving Cailan alone...it didn't feel right. But I worried Alistair would misunderstand my sorrow, or feel insecure if he thought I would miss Cailan, so I held it in until I got the chance to slip back into our room alone to finish packing. \n\nI shouldn't have bothered - Alistair followed me within five minutes, scooping me up from the bed where I sat sniffling, holding me in his lap as he rested against the headboard. \n\n\"Duncan?\" he asked. \n\nI nodded, wiping my nose. \"And Riordan. Even Cailan and Anora, Loghain...there's been so much upheaval. I know it's for the best, but...I miss them, and I worry about Cailan.\" \n\n\"I know. Me too. But he has us now, and we'll be back here often, I suspect. As weird as it is, we're family now.\" \n\n\"I'm so lucky,\" I whispered. \"I never dreamed I'd have any of this - a husband, brothers, in-laws, friends. But it's inevitable that I'm going to lose some of them, and I never imagined that could hurt this much, either. I love you, Alistair.\" I sniffled again as the tears started anew. \n\n\"I'm not going anywhere. I promise.\" He kissed my forehead, settling back on the pillows, cradling me against his chest. His heartbeat, that constant, soft susurration that, to me, meant 'home', soothed me to sleep as the tears - mixed grief and gratitude, now - finally stopped falling. \n\nWhen we woke, it was after supper; we snuck into the dining room, hoping the staff hadn't quite cleared the table yet, only to find Cailan, Kallian, Teagan, and the rest of the Wardens laughing and chatting over an open keg of ale, the table still covered in dishes of food. My irrational fit of melancholy behind me, I climbed into an open space between Kallian and Wynne, served myself an enormous helping of pheasant, potatoes, some unknown green vegetable that reminded me of asparagus, and dug in. Alistair sat between my brother and his, immediately engulfed in conversation. \n\nWe made it an early night, and my parting with dear Wynne, Kallian, Teagan, and Cailan was much more cheerful than I expected. Not having to see Eamon helped, though I'd softened towards him a fair bit since the Alienage rebuild. Having my cry early let me move past the grief and enjoy my last night. \n\nI felt like it was likely I wouldn't see Wynne again often; between her plans for a clinic in Denerim, her promise to help Caridin and Shale, and the politics I knew would eventually draw her to Cumberland and Val Royeaux, I felt like I was losing her. At the same time, as she pulled me in for a last, warm hug, I felt a little bit like a child moving away from her parents for the first time. Wynne had been my surrogate mother for a year, but perhaps I didn't need a mother anymore. I'd miss her, but somehow I knew it would be okay. \n\nI gave her a sealed envelope telling her everything I could remember about her son, the spirit boy, Cole, Evangeline the templar, and events at the White Spire that would lead to her death. I wasn't sure she'd read them, but she'd have the option without having to track me down. I kissed her cheek and slipped out into the doorway to let her say goodbye to everyone else. \n\nWatching Kallian bid Wulf goodbye brought a lump to my throat; I'd somehow assumed, given their apparent relationship, that she'd be staying in his room, though I suppose after what she'd been through, it shouldn't have shocked me that things hadn't progressed that far. But when I accidentally wandered out in the hallway to see their foreheads pressed together tenderly, his fingers stroking her cheek as she clenched both hands in the long hair at his nape, it was obvious they were in love, even if they hadn't figured out how to get over the hurdle her abuse presented. I slipped back inside the dining room, undetected by either desolate elf in the hallway, blocking the door and making awkward small talk until I was certain they'd be done. \n\nWulf was gone when I finally caved to the strange looks my odd behaviour garnered and opened the door; Kallian wiped her cheeks surreptitiously as everyone spilled through, offering her goodbyes. The men, never sure how nervous they made her, shuffled past with a wave, but Leliana and I pulled the poor girl into a hug. \n\n\"Don't worry. He'll be back,\" I promised, whispering. \"I'm going to talk Aedan into assigning him to Denerim, once the Thaw is over.\" \n\nShe nodded, voice raw. \"Just keep him safe.\" \n\nWith one final, reassuring squeeze, I bid her farewell, and went back to my room to make love to my husband before our early morning march. \n\nTomorrow, everything will be different. \n\nChapter One Hundred Twenty: *Vigilance \n\nIt was five, miserable days of walking through the early fall rain to reach Amaranthine, and by the time we did, every single thing I owned was soaked. The Vigil was as ugly as I remembered from Awakenings, and worse than I'd imagined it. The walls around it sort of...sagged, obviously in major need of maintenance, and the gate couldn't even be closed, never mind barred, the wood warped and cracking. I didn't care at that moment, however; the main building was more-or-less waterproof, I assumed somewhere inside there would be a bathtub I could use and a bed to collapse into. \n\nI'd never been so happy to see a dilapidated stone monstrosity in my entire life. \n\nI was thrilled to learn that Nathaniel had warned the staff we were coming; there were torches lit, and a massive brazier in the entry hall took the chill and dampness out of the air as we all shrugged off wet cloaks and dropped our sodden backpacks. We'd rated a couple of pack animals for the trip, given to us by Cailan; most of our gear was with them, and we carried only personal items. Most of us weren't skilled enough horsemen to justify giving us horses. As we filtered into the main hall of the keep from the foyer, a bevy of servants swarmed the entry way, taking our things and disappearing down a side hallway. \n\nAn older, distinguished-looking man I recognised easily from Awakenings awaited us by the roaring hearth at one end of the room, and I had to stop myself from rushing forward to greet him. Nathaniel shook his hand, and then turned to us. \n\n\"This is-\" \n\n\"Seneschal Varel,\" I breathed, interrupting Nathaniel and earning myself a grin from the normally taciturn nobleman, and a confused frown from poor Varel. \n\n\"As ever, the lady is correct. Varel, these are the Wardens and their companions I mentioned.\" \n\nHe introduced each of us in turn, and we all exchanged brief Warden greetings or handshakes - except for Alistair and me. Varel dropped to one knee in front of us, calling both of us 'your Highness' despite Nate's introduction of us as Warden-Commander and Lady Theirin. Alistair stiffened, his expression dismayed; I just sighed. I've been getting this so much I'm almost used to it. How sick is that? \n\nI stepped forward, taking Varel's hand and pulling him to his feet. \"Please, don't. We don't stand much on ceremony. I'm just Sierra, he's Alistair. Definitely not 'your Highness', and preferably not 'my Lady'. If you need a title for him,\" I gesture over my shoulder at Alistair, \"go for Commander, but I'm still just Sierra. Please?\" \n\nI was babbling, and the Seneschal blinked at me in bemusement. \"So, if I have this straight, you're trying to have me arrested?\" \n\nI stared at him for a moment with my mouth open, until finally Nathaniel laughed. \"Varel, don't give the Lady a hard time.\" He turned to me and stage-whispered, \"Some people say I'm the one with the dry sense of humour, but I learned it from him.\" \n\nI glanced back at Varel, and saw a hint of a smirk playing around his lips. Oh, he's kidding. I'm an idiot. Aedan chuckled, and then I was giggling as I shook Varel's hand. \n\n\"Sorry, your Highness.\" \n\n\"Sierra,\" I said firmly, insistently making eye contact. \n\n\"My Lady,\" he tried, but I shook my head. He sighed. \"Lady Sierra?\" \n\nI guessed that this was the most I could reasonably expect. I rolled my eyes, and finally nodded. \n\n\"I have quarters prepared for you all. I imagine you'd all like to get dry. Please follow me.\" \n\nNathaniel followed behind as we all trooped after Varel, soggy and cold, up a couple flights of stairs and down a long hallway. There was a large sitting area at one end, holding a handful of servants and most of the group's gear. Varel gestured to either side as he walked. \n\n\"These are your rooms. Wardens Conrad, Rolan, Bel, and Oghren,\" he grimaced at the last entry in his list, and I giggled, \"have already chosen rooms. The open doors are available, please choose whichever room you'd like.\" \n\nI glanced through one open door to see a small, plain room, with an armour stand, a large chest, a small wardrobe, and an oversized single bed. Nice, but plain. Perfect, actually - though I hope there's a room with a bigger bed. I flushed, and Alistair looked at me with a smirk, apparently having the same thought. I slapped his shoulder, and he chuckled. \n\n\"There are two double-occupancy rooms around that corner, if you wish. Bathing rooms are down the hall - the first baths have been drawn, and the servants will help you settle in and draw the next baths when you're ready. The dining room is off the main hall - a late supper will be served there in approximately one hour. The other Wardens will meet you there.\" I had to admit to being surprised that Conrad and the others weren't waiting for us when we arrived. \n\nHe turned to look at me, before letting his gaze travel to Alistair and Aedan. \"Commanders, Lady Sierra, your quarters are this way.\" \n\nOh, the double-occupancy rooms aren't for us? Aedan put his hand on Zevran's shoulder, pushing him to keep walking; Nathaniel tucked Leliana's hand shyly under his arm, and I saw her beam him an ecstatic smile as he followed Varel further down the hall. I looked back, as Alistair led me forward, to see Solona and Anders disappearing around the corner, heading towards the larger rooms, and I smiled. They had begun sleeping together again sometime around the battle with the Archdemon - how Solona held out that long, I've no idea - but had tried to keep it a secret until we'd left Denerim, for some reason. Largely unsuccessfully; they aren't used to rogues in the Tower, I think. I was pleased they'd finally decided to be together openly. \n\nI was thoroughly lost by the time Varel paused in a long, dim hallway; between gawping around like a fish, and woolgathering about Solona and Anders, I hadn't paid any attention to our route. I hoped Alistair had some idea how to get back to the main hall, or we were both going to be embarrassed - and hungry - before long. \n\nVarel pointed at a closed door, and turned to Alistair and me. \"This one is yours, Commander and Lady Sierra. The one opposite is for you.\" He pointed at Aedan. He didn't seem fazed by Zevran's presence, and I smiled gratefully. \n\nWe opened the doors and peeked inside; I gasped when I found a beautifully furnished room larger than the one at the Palace in Denerim I'd shared with Alistair. There was an enormous bed, a four-poster with a canopy, a couch in front of the merrily burning hearth, a little nook to the side with what looked to be a makeup counter complete with a large mirror on a stand, and I assumed the curtained door off to the right led to a private bathroom. The rug and walls were deep brown, the fabric of the drapes, canopy, and couch a royal blue, and a large, beautiful painting of a beach and the ocean tied it together nicely. Aedan's room was similar, though slightly smaller and decorated in shades of green, with no makeup nook. \n\nI giggled. \"I think you've got the rooms reversed, Seneschal. I have no idea what to do with that area, but I'm certain someone else could use it.\" I winked at Zevran, and he growled good-naturedly at me; Varel's ears reddened as he rubbed a hand over his face, trying to hide his smile. Aedan just laughed. \n\n\"Well, I'm certain you'll find some use for the desk, Sierra.\" Nathaniel's tone was wry, and he smirked at me. \"Anyway, my room's there. Now, if you'll excuse us...\" \n\nHe took Leliana's hand and led her through the doorway; three servants came bustling around the corner, each loaded down with soggy bags, and they dropped our things on the floor inside each of our rooms. \n\n\"Put all wet items, laundry, or armour to be cleaned in the hamper, and someone will see to them in the morning,\" Varel instructed. \"The servants should be here momentarily with hot water for the baths.\" \n\n\"We won't need any,\" I volunteered, pointing at Alistair and me, flushing when Varel raised his eyebrow at me. \"Queen Sereda gave me a dwarven water rune.\" \n\n\"Very well. See you in the dining hall in an hour.\" He nodded at us. \"Commanders, Lady Sierra, Warden.\" He followed the servants away, leaving us standing in the hallway. \n\nI turned to Aedan. \"We are in the family rooms, I'm assuming? I feel like that's just...that's not right.\" \n\nAedan frowned at me. \"Sort of, but not really. Pretty much every Keep, and every decent-sized estate for that matter, has rooms for honoured guests, near the family quarters. But I'm guessing the actual family rooms are being renovated - these aren't where Nate lived when he was little, I'd bet. Knowing his father, the family rooms are probably in severe need of redecorating. I'd bet that's technically a guest room too.\" He pointed at Nate's door. \"The bigger issue is where any actual guests will sleep if we're occupying the guest rooms. Guess we better hope Cailan and Fergus don't come to visit over the next few months. You're in their room.\" \n\n\"We are? How can you tell?\" \n\nAedan took a few steps into the room I was to share with Alistair and pointed at the curtained doorway. \"That's how.\" \n\nI shot him a confused look, and headed through the curtain, Alistair on my heels. There was a large bathroom, with two basins sunk into a large cabinet, a bathtub that could easily accommodate the four of us, and an unusual chamber pot, but what drew my attention was another doorway, also blocked by a curtain. Behind that door, there was a small corridor with three more doors. One led to a second, somewhat smaller bedroom that was still lavishly furnished and had a hearth of its own, also lit; one led back to the hallway; and the third to a tiny room holding bunkbeds. I turned back to Aedan, puzzled. \n\n\"Married quarters for a king or someone of status,\" he said, as though that explained anything. I raised an eyebrow, and he chuckled. \"Most married couples don't sleep together, at least in arranged marriages. You don't think Cailan and Anora shared a room, do you? This is the husband's private chamber. He would...uh, 'visit' his wife in her room when they wanted to, uh...\" \n\nWe all blushed, except Zevran, who cackled while we all avoided eye-contact awkwardly. My brother may approve of my husband, but he hasn't gotten over his abject fear of talking about sex with me. I snorted. \"Right. Got it.\" \n\nAedan pointed at the other room and cleared his throat. \"And that's where your lady's maid and manservant would stay.\" \n\nI sighed. \"I'm not having servants. This is ridiculous. That space could be useful for something, but I guess it can just stay empty for now. We won't be here forever, I suppose.\" I looked into the bedroom again. \"Maybe I can shove the bed against the wall and use this room as an office.\" \n\n\"Anyhow,\" Aedan muttered, and Zevran chuckled again. \"We'll just leave you...\" \n\nHe and Zevran trooped out and across the hall; Zevran closed the door behind himself with a lascivious wink in my direction. I rolled my eyes. Once they were gone, I turned to find Alistair rifling through one of his bags, looking for something - my shower head, I hoped. I eyed him thoughtfully. \n\nHe glanced up at me self-consciously. \"What?\" \n\nI bit my lip. \"Do you...I mean, should I not turn that room into an office?\" \n\nHe frowned and stood up, reaching out to cup my cheek. \"I have no intention of sleeping in a bed you aren't in, if that's what you're asking. Might as well save myself the walk when we want to 'visit',\" he joked, smirking. \n\nI laughed and slapped his chest lightly with the flat of my hand. He grabbed the hand and brought it to his lips, kissing my palm softly. Looking down at me, his grin slowly faded, and he cocked his head slightly. \"Unless...do you want me to sleep in there?\" \n\n\"Maker, no! If you're sleeping in there, so am I.\" I stepped closer, pressing myself up against his chest despite his clunky armour. \"Married couples are mostly expected to share a bed, where I come from.\" I smiled softly up at him. \"I just don't want to, you know, coerce you into something unnatural to you, or anything.\" \n\n\"Unnatural?\" He chuckled. \"I never thought I'd be with anyone, Sierra. I never predicted I'd be married, so it's not as though I spent hours imagining my married life. I was certainly never a noble son who expected an arranged marriage. I married you because I love you, and I want nothing more than to share a bed with you for the rest of my life. The only unnatural thing would be lying alone in a bed down the hall from you, instead of curled up with you.\" \n\nI reached up to put my hand on his shoulder, unbuckling the strap I knew rested there. \"Speaking of... We have an hour. I think I'd like to show you just how much I enjoy your 'visits'. Did you find my shower head yet?\" \n\nHe held up his hand, the little shower head gripped in his palm, and I reached for the buckles of my own armour, flicking them open and dropping pieces behind me as I turned to head back into the bathroom. \n\n\"Coming?\" I asked my husband, who was watching me with a rapidly darkening gaze. \n\nHe snorted and began the process of removing his armour; by the time he made it to the bathroom, I was naked and had done my business with the chamber pot. The unusual feature I hadn't initially understood about the necessary piece of furniture was that, contrary to most of the chamber pots I'd seen since coming to Thedas, this one was actually anchored down to the floor, sort of the way toilets were on Earth. I'd inspected it briefly to discover that, surprisingly, the Vigil had been built with at least rudimentary plumbing. Instead of an actual pot, there was a tube, lined with what had to be thin sheets of metal, leading down into the floor, and underneath the sink there was a large bucket of cold, not entirely clean-looking water. I realised the water must be used to flush the makeshift toilet, and was probably used bathwater or something similar - to save a servant having to bring up buckets of extra water every day. \n\nThe tub also had a drain in the bottom, and another tube led underneath the stone floor. I grinned at Alistair as he came in. \"I may not love living in Rendon Howe's former home, but I won't complain about the accommodations.\" I showed him the plumbing, and he whistled, impressed. \n\n\"I'm so happy for you,\" he murmured, wrapping his big hands around my waist and pulling me in to kiss my forehead. ",
        "\"For me?\" I cocked my head to the side, confused. \n\n\"I know how you feel about daily showers.\" He grinned. \"Not that I'm complaining - you in the shower is one of my favourite things.\" \n\n\"Show me,\" I whispered, reaching up to wrap my arms around his neck, raising my lips for a proper kiss. \n\nHe indulged me, deepening the kiss and invading my mouth with his tongue; I gasped as he reached down, tightened his grip, and lifted me like a child into the tub. We separated long enough to get clean, using the luxurious soaps and shampoo sitting on a little table next to the tub; Alistair finished first, his short hair taking less effort than my long curls, and he took the opportunity to run his soapy hands down my back, then over my shoulders while I lathered my hair. I hummed happily as he pressed his thumbs into a knot in my neck. \n\nHe stepped closer, his chest pressed to my back, and his hands wandered down my front to cup my breasts. One soapy thumb teased my nipple, the other held my shower head, playing the water across my breasts and down my front. His teeth found my neck, and I could feel his erection pressing against my lower back as I leaned into his embrace. \n\nI moaned and pressed my ass back more firmly against him, hair forgotten as I reached out blindly for the wall in front of me, needing something to brace myself against. One of Alistair's arms wrapped around my waist, tilting my pelvis, and I felt his length between my legs, searching for entrance. I spread my legs further and gasped as he entered me, stretching me deliciously and hilting himself in one swift plunge. \n\nAnd then it was all sensation - his hands, one still teasing my hard nipple, the other now aiming my shower head at the apex of my thighs, the water tickling at my clit; his length inside me, filling me, just this side of too much; his lips and teeth on my neck and shoulder; the slickness of the wall my fingers scrabbled against for purchase. The little bathroom was starting to steam up, and my breath came in frantic bursts as I tried to hold back, keep myself in one piece as the feeling of him overwhelmed me. \n\nI was vaguely aware that Alistair was probably less than comfortable, crouched as he was to accommodate my shorter legs, and that the water from my shower head was spraying across the room as he lost control of his aim; I was aware, but I didn't care. Only we mattered, only that he didn't stop, only that he held me as I shrieked into orgasm in his arms, shuddering and writhing as all thought fled. \n\nWhen I came back to myself, we were kneeling in the half-full tub, water running down the walls and dripping from the ceiling; I was perched in Alistair's lap, while his length softened inside me and he panted, his forehead pressed against my shoulder. I groaned softly as he slipped out of me, and he readjusted us so that he sat in the tub and held me sideways across his lap. His big hands stroked my arm and back soothingly, and I twisted to meld my mouth to his once I'd finally caught my breath. \n\n\"Andraste's panties, that was...\" He shook his head, apparently at a loss for words. \n\n\"Mmhmm,\" I agreed, settling my head against his shoulder sleepily. \"I love you, Alistair Theirin.\" \n\n\"Oh, Sierra.\" He tilted my head back and kissed me again. \"I don't think I'll ever get enough of hearing you say that. Or of you, just in general,\" he finished with an endearingly shy smile. \n\nSuddenly he twitched, muscles jumping beneath my bottom. \"Maker! We're going to be late for dinner.\" \n\nA little bit over an hour after Varel had left us, clean and more-or-less dry, I followed Alistair back through the winding corridors of the Vigil towards the dining room. I was certain we couldn't be going the quickest way - or else the place really was designed by a mad man - but we hadn't had time to explore and find a shortcut. The other Wardens' rooms were empty when we went past, and Alistair and I both blushed when we realised we were going to be probably conspicuously late. \n\nOnce we reached the main floor, we were able to follow our noses to the dining room. The noise echoing down the hallway as we approached was incredible; I could hear Oghren's drunken laugh - heh heh heh - over the sounds of talking, laughter, and eating, and Alistair and I exchanged smiles before racing through the swinging door to see everyone. \n\nThere were multiple tables in the hall, currently set up in a large square configuration so everyone could see everyone else; food was piled atop more tables around the periphery, and servants circulated through with wine and ale. There were a lot more people present than I expected; our group had apparently been joined by a large number of dwarves, who were sitting along the far side of the square, eating and drinking while quietly watching the proceedings. I was distracted from figuring out who they were, however, when a strong pair of arms ripped me out of Alistair's grasp and swung me in a circle. \n\nI looked up to see Conrad grinning down at me; his green eyes sparkled, and his usually flawlessly coiffed ginger hair was a mess. He looked content, and I guessed he was happy to see me, if the smile was any indication. When he finally deposited me back on the ground, breathless and giggling, I almost fell as I was thumped enthusiastically on the back by another ginger - this one a dwarf. \n\n\"Toots!\" Oghren roared, and I rolled my eyes and stuck my tongue out at the obviously inebriated dwarf. \"Thought you'd never get here. You two spend any more time playing hide the sausage, and you'd have missed the grub altogether!\" \n\nAlistair smacked Oghren good-naturedly upside the head while I groaned and hid my face in my hands; finally Leliana rescued me and drew me into a conversation with Bel, whose stutter had continued to improve until it was barely noticeable now. I grasped his forearm warmly, and then tilted my head to the dozen or more unfamiliar dwarves across the room as I prepared myself a plate from the generous dishes on the sideboard. \n\n\"Who're our guests?\" I asked, as a servant delivered me a glass of wine, and I settled into a seat between Bel and Leli. Aedan and Alistair had been called to sit alongside Nathaniel and Varel, and the rest of the Wardens filled out the other two sides of the square. I noticed Rolan sitting at the end nearest the dwarves, eating quietly, alone. He hadn't even glanced at the mages, as far as I could tell, and I wondered what Conrad had said to him over the past few months. Maybe he won't be as big an ass as you think...yeah, right. \n\n\"Legion of the D-dead!\" Bel's enthused answer pulled me out of my daze. \"Not Kardol's, but one of the other companies. We hired local hunters to find the Deep Roads tunnel collapse you warned us about, and found an entire company of the Legion being attacked by darkspawn. Rescued them, and - with the help of Dworkin - killed a handful of broodmothers. Figured you'd want to m-meet them, so we dragged them back with us.\" \n\nI blinked as I processed that information. Kal'Hirol, already cleared? The Legion of the Dead - alive? I looked at the dwarves more closely, and there, in the middle, found a familiar face - Sigrun. She was talking to another dwarf, a broad smile on her pretty face, her hands gesturing animatedly as she spoke, while the recipient of her enthusiastic chatter grunted and avoided eye contact. I chuckled. Seems even her comrades can't get used to her overwhelming cheerfulness. I remembered Sigrun from the game - at the end, going back into the Deep Roads to die, full of survivor's guilt - and wondered when the unexpected consequences of my presence in Thedas would stop surprising me. \n\nSomething else struck me. \"Wait - Dworkin? He's here?\" \n\nBel nodded. \"He's mad as a...actually, I don't even know, but he's here. Collapsed h-half of that Thaig on the broodmothers with some Lyrium bomb. Trevian was so angry! But we killed a lot of 'spawn, and none of them were the talking kind.\" \n\n\"Is Dworkin's brother here too?\" \n\n\"Voldrik. Yeah, somewhere. They're n-not very sociable, those two. Dworkin's too crazy, and Voldrik's too gloomy.\" \n\nI smiled, relaxing. Not that I hadn't trusted the stone masons Sereda had 'loaned' us, but I knew Voldrik was capable of fixing up the Vigil to withstand everything the Mother could throw at it. If they worked together, who knew what would happen! I'd just have to convince Nathaniel and Aedan to fund him - and find him some stone to work with. \n\n\"What about Wade and Herren?\" \n\n\"Yes, they're here too.\" \n\n\"The basement?\" \n\n\"Some of the tunnels have been collapsed for years - Varel's had crews d-digging them out. They may be passable, but they aren't safe. Lost a soldier in a collapse the first time we tried to get through. Found an Avvar tomb - left it alone. Figured Arl Howe can decide what to do with that. When the digging is done, we can clear out the t-tunnels and have Voldrik fix up the Dwarven door. He confirmed he knows how.\" \n\nI smiled broadly. \"I'm so happy! Maybe this won't be the unmitigated disaster it could have been.\" I thought about all the things that could change, as things stood - Sigrun's Legion company surviving was just the beginning. I imagined thwarting the major attack on the Vigil that gave the Architect more Warden Blood, preventing the Mother's forces from destroying the city... \n\nThedas without Justice. Without Vengeance. \n\nWhat would that even look like? Kristoff hadn't come to Ferelden, so there would be no body for the spirit to inhabit, and no reason for the Wardens to go poking around in...what was that place called again? I spent a few distracted moments searching my brain for the name of the zone where Justice joined the Wardens in game, and drew a complete blank. But the Wardens would never go there, so we'd never have to see Anders being possessed, Kirkwall being blown up... \n\nWhat would that mean for the mage-templar war? I couldn't even start to wonder, but just had to hope that it could only be an improvement. Surely there was some other way to handle Meredith. Maybe my warning to Greagoir would make a difference... \n\nIt certainly couldn't get any worse. \n\nRight?"
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-119-120"
}