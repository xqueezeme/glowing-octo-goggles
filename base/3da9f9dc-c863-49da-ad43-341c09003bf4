{
    "title": "Taken by the Viking Ch. 09",
    "pages": [
        "After Trish woke up and found herself alone, she started watching the vidscreen again, although she avoided the internal channel. As she watched, laying on her side, she couldn't help but reach back and brush her fingers over the sore, slightly swollen wrinkles of her anus. Just to see how it felt. The skin there was very sensitive, but otherwise felt totally normal, which was a relief. \n\nWhen Jordan came in with dinner, she wasn't sure how she felt. \n\nPart of her was relieved she wouldn't have to face Alex and Bella or anyone else in the compound. Another part of her was nervous over being alone with Jordan for a meal. There was something intimate about eating alone together, especially since there was a visceral choice between talking with her captor or sitting in silence. And Jordan seemed to want her to talk.\n\nNot that he was conversing with her exactly. Just asking her questions about her life on the Moon and at school. Asking if there was anything she missed. Other than her classes, Trish realized there wasn't much, which was a depressing thought in and of it self. Was that really the sum total of meaning in her life? Her classes? Because they were interesting?\n\nMaybe that was why the thought of escaping was coming up in her head less and less often - what did she really have to escape back to?\n\nLoneliness?\n\nIsolation?\n\nBeing shunted to the side by people who thought she was unimportant and beneath them?\n\nJust talking about her past was starting to make her depressed, so she decided to try and turn the tables. After all, he'd never been mad when she asked questions and he usually answered them, even if she'd never asked about HIM specifically before.\n\n\"What about you?\" she asking daringly. Jordan looked up at her, raising one blond eyebrow, but he didn't scold her for asking the question, it seemed more like he was trying to ascertain exactly what she was asking. \"Did you go to a university?\"\n\n\"No.\" He didn't seem bothered by the question or his answer and Trish took a bit of reassurance from that, emboldening her further.\n\n\"Did you want to?\" \n\nJordan shrugged, uncaring. \"It wasn't an option, so it didn't matter.\"\n\n\"Why wasn't it an option?\" Although his answers didn't offer up much information, she didn't feel like he was purposefully holding back. After all, she'd already noticed he wasn't exactly talkative, ever, with anyone. The fact he was answering her questions at all, considering they were far more personal than she'd ever attempted, surprised her. \n\n\"No money.\"\n\nShe didn't bother to try and hide her surprise. His lips twitched, suppressing a smile. \n\n\"You have money now.\"\n\nThe expression on his face was almost one of exasperation at being forced to use so many words, but he seemed to understand she truly wanted to know. Trish was still trying to figure out exactly what made him tick, what caused him to be the way he was... she didn't understand how he could be so brutal but so caring, be so protective of her and yet still rape her. If she could understand him better, maybe she could convince him to let her go. At this point, it was as good of an escape plan as any. \n\n\"I made money when the Wolf took over for the old boss,\" he explained with that touch of resigned exasperation. \"I was the Wolf's second from the beginning. I didn't need anything else after that.\"\n\nBecause, being by the Wolf's side when the Wolf took over, he had everything he needed. A position, a livelihood... but it was a little scary to know that he'd been by the Wolf's side from the very beginning. The rise of the crime lords and war lords on earth after the rich and powerful had moved to the Moon had been bloody and brutal before things had finally settled down, although the Moon didn't bother to go into details while educating its citizens about the Earth's recent history. Trish had learned far more about what Earth had gone through during that time period while living on it than she had during any classes on the Moon. The teachers there, and even at the university, only spoke about it in the most general terms, until they came to the Wolf, his unique status and the Moon's obsession with him. \n\n\"How did you meet the Wolf?\"\n\n\"No more questions, baby girl,\" Jordan said, a glint in his blue eyes that Trish recognized immediately. She wanted to crawl away as he lifted the tray with the remains of their dinner on it off the mattress and took it to the door, placing it outside for someone to come pick up. Trish curled in on herself, tucking her skirt around her legs, for what little protection it would provide. \n\nWhen Jordan turned back around, she could see the growing bulge at the front of his pants, and she almost whimpered, her anus spasming as if remembering the earlier assault on its channel, even as she could feel her nipples harden and her pussy start to tingle. It was like her body knew what was coming and was already preparing itself, which just made her want to scream in frustration because she knew it was wrong... and yet she felt almost a little different. Like some part of her had emotionally responded to his willingness to answer some questions. Like she'd let down some of her walls while he'd been asking about her life and then told her a little bit about his, exchanging those small insights into each other. \n\nIt hadn't occurred to her that such simple conversation might be dangerous to her overall emotional state of being. \n\nWalking up to the bed, Jordan cupped her face in his hands, his eyes sliding over her face and down to her lips. \n\n\"You're so beautiful, baby,\" he murmured, before leaning down to kiss her. \n\nGently.\n\nAlmost tenderly.\n\nTrish wanted to whimper. She much preferred it when he was rougher, harsher... it made it easier to hold it against him. \n\nSo when he tried to press her down onto the bed, his hands and lips touching her almost tenderly, she lashed out without thinking about it, sudden rage surging through her.\n\nCRACK!\n\nThe sound of her palm slapping against his face was so loud it almost echoed through the room. \n\nImmediately her heart started beating like a frantic bird inside of her chest and she froze, too terrified to move. The expression on his face was unreadable as he pulled back and looked at her for a long moment.\n\n\"Five minutes.\"\n\nThat was all he said before Trish found herself hauled across his lap as he sat on the edge of the bed, her bottom high in the air. \n\nSMACK! SMACK! SMACK! SMACK!\n\n\"Ow! I'm sorry! Please!\" The words fell out of her, a chanting, begging, plea as his hard hand came down on her bottom again and again. The skirt to her dress was hiked up around her hips, leaving her completely bare and exposed, without even the slightest bit of protection against his paddle-like hand. \n\nSMACK! SMACK! SMACK!\n\nHe ignored her pleas, spanking her hard and fast, covering as much of her bottom as he could, changing the angle and placement of each swat while she squirmed and kicked as tears sprang to her eyes. The burning sting of each slap left her gasping. Even though he wasn't increasing the intensity of the spanking, the fact that her bottom was becoming more sensitive and more painful with each swat meant she felt it more anyway. \n\n\"Please! I'm sorry!! I won't do it again!!\" She squealed and kicked as he swatted her sit-spot, searing the sensitive skin between her bottom and upper thighs. \n\nSilently he kept spanking her, not even keeping count, and she let out a sob as she realized he truly meant to sit here and spank her for five minutes.\n\nThis is what she got for letting her emotions overcome her logic and thoughts. \n\nOnce the tears started they cascaded like a waterfall down her cheeks, leaving her gasping at the ache inside of her chest. Strangely, her mind was less on regretting her impulsive action and more on her current situation... her anger and frustration at the Moon for allowing the situation on Earth to disintegrate to the point where criminals were running the show, her fury at herself for being caught by Jordan in the first place, her shame and humiliation for enjoying some of the things he did to her, her confusion and self-disgust at wanting to reach out and find companionship with some of the others in the Wolf's compound...\n\nNow that she was started, it was like she couldn't stop. Something today - maybe the loss of her last virginity, maybe the strangely normal dinner conversation, maybe just the length of time she'd been here - had stirred up her emotions and the spanking was causing her to lose control and they were all spilling out. \n\nShe hated Jordan's control over her.\n\nShe shamefully savored being so protected and cossetted. \n\nShe hated her body's sexual response to him.\n\nShe hated him for using that response.\n\nShe hated herself because she wanted what he offered...\n\nShe hated him because it had been offered in a manner she couldn't accept.\n\nTrish wanted community. She wanted people who understood her. She wanted a life where she felt cared for and loved and wanted by the people in it. She didn't want to be part of the Moon's shallow, self-obsessed citizenry with their narrow focus and their ridiculous feelings of superiority. If she'd met Jordan in another way, or someone like him, and been taken into the community of people around him, and had had a choice in the matter... \n\nBut she hadn't.\n\nAnd thinking \"what if?\" was driving her crazy.\n\nFeeling the craving, having part of her brain wanting to ignore the manner in which she'd arrived at this place, made her disgusted with herself. \n\nWhich was why she couldn't handle Jordan's tender gentleness. Couldn't handle the way he'd touched her like he was making love to her. Pleasure that was forced on her was so much less threatening to her peace of mind than any real intimacy.\n\nShe hadn't even realized how much he'd started worming his way past her walls, past her indignation and anger, until this moment. It was wrong, it was all so, so wrong, but she actually had some semblance of feelings for him.\n\nAnd she really didn't want to.\n\nSlowly she became aware of Jordan's hand stroking her swollen, reddened bottom, making soothing shushing sounds as he rubbed the taut, seared skin of her backside. There was a low hum in his voice that was almost comforting. Her lower body was throbbing. Not in an entirely bad way either. She still didn't know if her response was something he'd somehow instilled in her because of the way their sexual relationship had been since the beginning or if there was just something in her psyche that actually enjoyed being turned over a man's knee and spanked. She felt both aroused and soothed, even though she shouldn't feel either.\n\nBut she was too exhausted to fight it. \n\nSo she let him comfort her. Pick her up and cuddle her. Sit her on his lap and hold a glass of water for her to drink. Reveal the special dessert he'd gotten for her - a small, chocolate cake - and feed it to her with his fingers. \n\nWhen he gently bound her wrists and placed her back on the bed, she felt relief slide through her. Being bound gave her permission to let herself go... there was freedom from guilt when she was tied up and choiceless. She didn't have to feel shame when he tenderly, gently, trailed kisses over her entire body, stirring her arousal with his lips and tongue, with his soft caresses, like he was worshiping every inch of her... She didn't have to feel humiliation when his lips finally reached her pussy and he licked her to a shattering climax, the ecstasy a blissful counterpoint to the throbbing burn of her bottom...\n\nAnd she didn't have to feel anything but pleasure as he slid between her thighs in the wake of her orgasm, his cock sliding between her swollen folds, his hands lifting her thighs so that she didn't have too much weight pressing on her sore ass. \n\nThe binding of her hands gave her the release she needed to just let him have her as he wanted... and her drained emotions would deal with the aftermath later. \n\nShe fell asleep curled against his body, his heavy arm draped possessively over her, her head tucked into the nook of his shoulder. If she just let her mind empty out, if she didn't think at all, she could feel just like any other woman falling asleep in the protective clasp of her lover. \n\nEventually she knew reality would trickle back in, but for right now... it was easier to just pretend.\n\n******\n\nTrish didn't actually enjoy swimming. She liked the water, but she hated the way her muscles ached all over, she didn't float very well, and her lungs burned for air no matter how often she turned her head to take in a breath... it was never enough.\n\nHowever, swimming was better than spending the morning with Jordan again.\n\nShe just didn't know how to feel about him.\n\nThat wasn't entirely true. \n\nShe didn't like how she felt about him.\n\nIt had to be brain washing, right? \n\nBut she was becoming so tired of constantly reminding herself of that. She was lonely. She'd always been lonely, but now, for the first time, she had people reaching out to her. People who seemed to want to get to know her. It might only be because she was Jordan's 'girl'... but she thought some of them actually genuinely liked her as well. They definitely didn't HAVE to talk to her. Laura in particular had been sincerely friendly. \n\nAnd her body... \n\nShe couldn't help her physical responses. She couldn't help that certain things aroused her. There were plenty of people on the Moon who played games like this... but they were just that: games. This was real. So far inescapable. But Jordan always managed to make her feel cared about, desired, and aroused... as long as she didn't think about how she'd gotten here. \n\nBut it wasn't really like she could forget that, could she?\n\nTrish pounded her way through the water, frustration driving her. She barely even noticed when Bella and Alex finally arrived and entered the pool. Not that it mattered they were there.\n\nTheir situation was so far removed from hers they might as well have been on a different planet. \n\n******\n\n\"Everyone's so busy,\" Trish said, looking out the window.\n\nRather than taking her with him, Jordan had brought Trish to Laura and Marek's rooms. They had real rooms, not just the single room and bathroom that Jordan had. They had a living room, a kitchen, a bathroom, a study, and a bedroom. Marek was currently in the study while Laura entertained Trish in the living room. They were sitting on a couch in front of the vid screen and coloring. Trish couldn't ever remember coloring in her entire life, but there was something incredibly relaxing and mind-numbing about filling in the blank spaces between the lines with varying hues. \n\n\"Mmm, there's some big trade happening and Cora's coming,\" Laura said, still focused on what she was doing. \n\n\"Who's Cora?\" \n\n\"She's like the Wolf, but her territory is further West,\" Laura said, putting down the orange pen she'd been using and looking over the options in front of her before picking up a blue one. \"She's pretty scary.\"\n\nTrish blinked in surprise. While she knew there were other leaders on Earth like the Wolf, it wasn't like the media ever talked about them, but Laura talked as though Cora was well known.\n\n\"Do you know why she's coming?\"\n\nLaura shrugged, and gave Trish a small smile. \"She and the Wolf team up a lot when something big goes down around here. Plus, she always likes to play with his toys.\"\n\nA sick feeling curdled in Trish's stomach. \"You mean Bella and Alex?\"\n\n\"Yeah, but she's actually rougher if you can believe it.\" Unlike some of the people in the compound, Laura didn't sound like she got any joy from that fact, but she definitely didn't seem bothered by it either. Glancing up the at the vid screen, Laura grabbed for the remote and turned up the volume. \"Oh hey, look, they're finally reporting on her!\"\n\nTrish looked up at the screen to see the blank stare of Abby, the Wolf's previous captive. Her family surrounded her protectively, insisting on no comment, ushering her away. It wasn't until she blinked that she realized tears were clinging to her eyelashes. \n\nIf - when - Trish was returned to the Moon, there would be no one to protect her from the media like that. They'd hound her, not caring what trauma she'd been through, only caring about the story. She'd only be important to them because they'd want to know about the Wolf. \n\n\"I wonder why they never talk,\" Laura said, musing almost to herself as she continued to color, keeping one eye on the vid screen. \n\n\"Would you want to talk to them?\" Trish asked, gesturing at the screen as she shuddered. That sounded like her worst nightmare.\n\n\"I mean, not to those vultures, but you'd think eventually someone would want to do an interview.\" The way she said it was almost sarcastic, as if she thought one of the Wolf's long-term victims would want another fifteen minutes of fame. \n\nTrish constantly wondering how someone who seemed as warm and caring as Laura could be so callous against feeling anything for the Wolf's captives. Maybe it was because they were alone, maybe it was because she was finally reaching the end of her rope - as evidenced by slapping Jordan last night - but Trish couldn't stay silent any longer.\n\n\"Doesn't it bother you?\"\n\n\"What?\" Laura looked up at her, seemingly surprised at the vehemence in Trish's voice.\n\n\"That.\" Trish gestured at the screen. \"Her. Alex and Bella. The others.\" She couldn't quite bring herself to ask about herself because she didn't know if she could handle hearing Laura's answer.\n\nLaura looked at the screen. Shrugged. \"So a few Moonies get a taste of what life down here is like, why should that bother me?\"\n\n\"But life isn't all like that down here,\" Trish argued. \"No one else is going through what Alex and Bella are.\"\n\n\"Not as much anymore,\" Laura agreed, but a slightly bitter smile twisted her lips. \"The Wolf and Cora and others like them put a stop to most of the worst excesses when they took over, but it wasn't always like this.\"\n\n\"What was it like?\" Her mouth felt dry but she had to ask. Had to know. Had to understand. \n\nPutting down her pen, Laura stared off into the distance, her expression blank, like she was looking at something far, far away. \"I don't know what they teach you up there, but it was awful when the Earth and Moon separated. My mother was old enough to remember what it was like before, and she always seemed sad. I mean, nothing was perfect, but when the Moonies first up and left they didn't care about what they were leaving behind. The people left in charge were the worst of the worst. Corrupt. Greedy. My mom's sister was taken off the street by some official who saw her and decided he wanted her, and we never saw her again. I was just a kid, but I remember my mom crying for days. I still don't know what happened to her.\"\n\n\"I'm sorry,\" Trish said gently, her heart clenching in her chest. \n\nLaura continued as if she hadn't heard Trish speak. \"So people started to revolt. Might made right, whether it was against the officials the Moonies left behind or your neighbor. Everyone was forming up into little groups and you had to hope your group was strong enough or had enough allies to defend itself against other groups. People were dying, being raped on the street, beaten up and left for dead, killed for food, killed for sport... and the officials the Moon had left behind just gave up and left. By that time a lot of the little groups had gotten larger and the territories were being carved out. My mom and I ended up in this territory, working in the kitchen under the old warlord. He wasn't interested in my mom, thankfully, or me because I was too young at the time. Then mom died during the pox plague and I just kept my head down and stayed quiet. The old lord had started calling himself a lord by then and he was building his harem. I didn't want to be a part of it, so I just stayed hidden as best I could.\"",
        "\"He would have forced you to join? No one would have done anything?\" Trish whispered, almost rapt with attention. A cold horror had gripped her at the life Laura was describing. The Moon never talked about any of this. She hadn't realized how much brutality, how much corruption, how much violence they'd glossed over in their little, pat explanation of what happened on Earth after the citizens of the Moon left. \"There was violence and things were unsettled until the crime lords took power\" just didn't cover it. Which wasn't surprising, but it did sicken her.\n\nFinally Laura looked at Trish, but she just snorted. \"Even if my mom had still been alive, I doubt she would have been able to protect me if I hadn't kept to myself. The world was finally returning to some semblance of order. The lord wanting a small group of women to service him was a small sacrifice to pay for that. He was violent, but his violence had purpose. People stopped looting in this territory. They stopped indiscriminately raping and killing. His bully boys were out, protecting people, and even though we had to pay for it, at least it was mostly safe to walk down the street at night. At least most people could start to rebuild their lives. Then when he and the other original leaders all started to become older, crueler, and talking about attacking the Moon and starting war, bad shit started happening again. Plagues, more violence, \"peacekeepers\" that the Moon would send down who didn't care who they hurt... that's when the Wolf and the others ended up taking over from the old lords. We didn't have the technology to face the Moon and win, and the lords were just getting more people killed.\"\n\n\"Huh.\" Trish didn't really know what to say to that, even though she felt like she should say something. \n\n'Sorry' didn't seem to cut it. \n\nLaura went back to coloring. \"Anyway, if a few Moonies get a taste of our lives, what do I care? I'd rather them than any of us. Some of the other leaders still take their harem from their own populations. At least the Wolf leaves the people he leads alone. He doesn't split up established couples or pick out people's children. And the Moonies go back home unharmed, which is more than my aunt could say, if she's even still alive somewhere. Which I doubt she is. That guy had a reputation, but at least he's smart enough to never come back to Earth.\"\n\nThe bitter hatred in Laura's voice made her feelings on the matter crystal clear. The Moon was protecting some corrupt official, but if Laura ever got her hands on him... \n\nIf everyone had a story like Laura's, she supposed it wasn't too surprising that people didn't care about the Wolf capturing and tormenting some of the visiting Moon citizens. Why should they? The Moon looked down on the Earth and the Earth looked down on the Moon, for vastly different reasons. \n\nShe didn't want their conversation to end on such a negative note though, or leave Laura dwelling on the pain of her past. \n\n\"So how did you meet Marek?\" she asked. That had to be a happier story, right? The couple obviously doted on each other. In some ways, Marek reminded her of Jordan. Except that Laura was obviously happier than Trish was.\n\nImmediately the expression on Laura's face changed, her dark countenance lightening as a smile spread across her lips. \n\n\"When the Wolf took over, I went out on the streets,\" Laura said. \"I was afraid he might be worse than the devil we knew and I wanted to take some time to watch him, see how he would treat the people who had worked for the old lord. Not everyone hid like I did, not everyone could, but other than making a couple of examples of some real assholes who had started abusing their positions under the old lord, the Wolf didn't do anything to punish anyone. We all saw how he liked to treat his lovers, but they liked it, so no one complained. He was a hell of a lot better than the old lord. Of course, once Earth started being safer for the Moonies to visit, they started coming. Causing trouble, treating us like shit... then the Wolf took a few of them and things changed again. Now they come and they stay apart from us, they don't cause trouble, and they're the ones always on their guard. But when they first started coming back, a group of them cornered me in an alley.\"\n\nA shiver went up Trish's spine at the way Laura's voice went flat. \n\n\"They thought they could just do whatever they wanted to me, because I didn't matter. When I kicked one of them, to get him away from me, they attacked me. That's when Marek came along. He and his friends kicked their asses and rescued me. He took me back to the Wolf's compound, healed me, and kept me.\"\n\n\"Kept you?\" Trish echoed. \n\n\"Well, I didn't want to stay at first,\" Laura said, although there was a small smile on her face. \"I was still scared of the Wolf, and Marek's a pretty intimidating guy.\"\n\n\"So he forced you to stay?\"\n\n\"Tied me to his bed,\" Laura said, still smiling. \n\n\"How does that make him different from the people who attacked you?\" Trish asked, horrified. \n\n\"He's never beaten me. No matter what I said to him, no matter what I did to him... I might get a spanking now and then, but he'd never hurt me. And if I truly didn't want him, after a while, he would have let me go, But first he showed that he could keep me, and also protect me and keep me safe\" Laura said, matter-of-factly. \"And during that time he showed me that he could make me happy.\"\n\nTrish put her head in her hands. \"I don't understand any of this,\" she muttered.\n\n\"I guess it's different on the Moon,\" Laura said. \"Although, from the news vids, it never seems like any of them are very happy with the partners they end up with. Alex and Bella's partners are real little shits. You can tell from the interviews.\"\n\nThere was a lot of political maneuvering when it came to real relationships on the Moon. Sexual relationships... well, those didn't matter as much. People did what they wanted with who they wanted... although, even then, Trish hadn't been of real interest to anyone because they didn't think she had anything to offer but her body. Real partnerships, the marriages, happened when people wanted alliances on the Moon. Everyone knew some of those alliances were forced. That had been one upside to being the child of the Moon's support staff; no one was going to force her into a partnership for power. It occurred to her that - whether on the Moon or on Earth - she'd apparently been part of a very small group of citizens who could actually choose who they wanted to have a relationship with.\n\n\"So here, men just take who they want -\"\n\n\"Not just men, women too,\" Laura said. \"Whoever's in the better position.\" A bigger smile curved her lips. \"You should have seen the fight Chevie put up when Trix first brought him here.\"\n\n\"Trix brought Chevie here?\" Trish asked, distracted from the myriad of questions spinning around her brain. Somehow she'd gotten the impression Trix answered to Chevie, not the other way around - if anyone was answering to the other in that relationship. \n\n\"Oh yeah. Literally dragged him in one day, bound hand and foot, while he was cursing and threatening her left and right. Everyone laughed at her because they thought there was no way she could keep him, but she did, and he ended up staying with her.\"\n\nBefore Trish could ask anymore questions, the door to Marek's study opened and he came out, his presence making her quiet again. While she liked Laura - and was thrilled to finally have some answers even if those answers just caused more questions to arise - she was definitely intimidated by Marek. While he wasn't as big or as muscular as Jordan, there was something darkly imposing about him. He didn't seem the type to tolerate being peppered with questions.\n\nAs soon as she saw him, Laura's face brightened and his own expression softened just slightly when he looked back at her. They really did care about each other, which completely blew Trish's mind. She didn't quite know how to reconcile that with Laura's story about how they came together. \n\nOr maybe she just didn't want to because she was afraid Jordan was trying to 'keep' her... and she was starting to waver on whether or not she wanted him to succeed. The sense there was something wrong with her was somehow lessened under the impact of Laura's story... after all, Laura had done something similar. Perhaps Trish wasn't as different as the other civilians in the Wolf's compound as she'd thought. \n\n\"Are you girls having a good time?\" Marek asked, his eyes flicking over both of them. \n\nLaura's smile back at him was brilliant. \"Yes, Marek.\" Trish echoed her, a little more quietly.\n\n\"Good,\" Marek said, moving into the kitchen and getting himself a glass of water. \"Jordan just contacted me, he'll be here soon. Laura, would you and Trish like to help me prepare dinner?\"\n\nFollowing Laura into the kitchen, Trish hung back a little. She'd never really had the opportunity to learn how to cook, but that didn't seem to matter. Marek handled making the meal, although he gave Laura and Trish each small tasks to complete. Trish cut up potatoes while Laura did the same with other vegetables, and Marek handled the rest. When Jordan finally arrived, he stayed in the kitchen with Marek to talk, while Trish and Laura went back to coloring. \n\nMarek and Jordan were talking in low tones that Trish couldn't quite hear, which (of course) just made her want to know more. She leaned back against the couch, but it was of no use. Sighing, she went back to coloring, while Laura gave her an amused look.\n\nDinner was... confusing. As most of her interactions with the Wolf's people were. Marek, for all his intimidating demeanor, included Trish in the conversation easily. He was solicitous of Laura in a manner that was strongly similar to Jordan's manner with Trish, And they all talked freely, as if she was one of them. Most of the conversation centered around Cora's arrival, and Trish learned that both Jordan and Marek though Cora was a bit of a loose cannon but also a brilliant tactician and leader. The Wolf apparently concentrated quite a bit on sciences and technology while Cora focused more on her military. The two of them had been allies for a long time and, while the Wolf had his own forces, when specialized services or a larger force was needed, he went to Cora. \n\nAfter the meal, dishes were put in the sink to soak and the four of them returned to the living room. Something had changed in the air, setting Trish on edge as Jordan sat down on one of the sofas and pulled her into his lap. Marek and Laura sat on the other sofa, her on his lap as well, and they'd barely sat down before Marek was pulling Laura's lips down to his for a kiss. Not just a quick peck either, a kiss that went on and on... and Trish blushed when she realized she was staring, and quickly looked away. \n\nThat left her facing Jordan, who was also watching Marek and Laura, his eyes alight with interest. Seeing her movement, he lifted his gaze to hers, looking over her pink cheeks, which turned even pinker as Laura made a whimpering noise. Jordan chuckled, his hands gliding up Trish's waist to cup her breasts.\n\nShe squirmed back, trying to escape his firm grip, as her nipples puckered and heat stirred between her thighs.\n\n\"You said you wouldn't in public,\" she whispered to him, blushing furiously.\n\n\"This isn't public,\" he pointed out. \"It's just Marek and Laura.\"\n\nLaura moaned, a little louder, and Trish glanced over to see that Marek had tipped her back against the arm of the couch and undone the front of her dress. Her breasts were completely exposed, one stiff pink nipple pointing towards the ceiling while Marek sucked on the other one. With her hands in his hair, lips and eyes half-lidded in pleasure, it was an incredibly erotic tableau. As Trish watched, Marek caressed Laura's side, bringing his hand up to her breast and squeezing the soft mound, the creamy flesh overflowing from his fingers. \n\nA pulsing need went through Trish. Like with Alex and Bella, she found herself aroused... only even more so because there was no guilt to watching Marek and Laura. She might find the circumstances of their relationship to be confusing, but it was obvious Laura wanted what Marek was doing to her. Even more obvious that they didn't mind being watched, as Laura's head lolled towards Trish and Jordan and a smile curved her lips.\n\nBeing noticed made Trish feel incredibly embarrassed though, and she turned away again, closing her eyes. Jordan chuckled and kissed the side of her neck, sucking slightly, as he squeezed her breasts. \n\nWas he going to strip her down too? Let Marek and Laura watch? Unwanted heat coiled in her core, and she bit her lip against a moan. \n\n\"It's okay, baby girl,\" he murmured into her ear. \"You can watch them or I can touch you. Your choice.\" His fingers slid into her dress and he pinched her nipples, hard enough to make her gasp as the sweet pain lanced through her, the sensation going straight to her pussy. \n\n'You can stop him!' a little voice in the back of her mind insisted. All she had to do was watch the other couple, and Jordan wouldn't continue. It didn't even occur to Trish not to trust he would keep his word. She was too distracted by the part of her that wanted to let him keep touching her... and Marek and Laura watch.\n\nAs soon a she realized what she was considering, her head snapped back around and she opened her eyes to see that Marek had switched which breast he was attending to and Laura's skirt was now pushed up to her hips, with Marek's hand between her legs. Laura's thighs were spread wide, allowing Trish to see her plump pussy lips, glistening with wetness, and Marek's fingers thrusting between them, his thumb circling her clit, and she was moaning continuously in pleasure. Trish's own pussy throbbed in response. While Jordan still had his hands on her breasts, he'd kept his word and had stopped caressing and squeezing them... his palms kept her flesh warm but nothing else. Her skin tingled, wanting the stimulation, and she had to fight to keep herself from squirming against him in need.\n\nPulling away from Laura, Marek left her nipple glistening with wetness, and she whimpered as his hand slid away from between her thighs too, so that he could pull her dress off over her head. As he did so, he put her in a position where she was straddling his thighs; the wide spread of her legs and the position of her back to Trish, allowed Trish to see the base of a blue plug nestled between Laura's cheeks. Trish found that she couldn't look away as he opened the front of his pants, his heavy cock springing out. It was shorter but thicker than Jordan's, with a darker flesh tone along the shaft with a fat purplish head that was already slick with pre-cum. \n\nTrish couldn't stop herself from squirming against Jordan's hands as Marek lowered Laura onto his cock. Laura cried out, her head tilting back, as her pussy lips stretched around the thick shaft she was slowly impaling herself on. Seeing it so up close, knowing they were enjoying being watched, enjoying what they were doing to each other, completely freed Trish to enjoy watching... even if she didn't want to. Because enjoying watching meant her own arousal growing as Laura's thighs flexed and she started to move up and down on Marek's lap, riding him. His cock, slick with Laura's juices, pierced her again and again, as Laura moaned and gyrated on top of him. Marek leaned back against the couch, playing with her breasts, his eyes occasionally flicking to where Trish and Jordan were sitting.\n\nEven though Trish could feel Jordan's hard cock pressing into her bottom, could sense his interest and pleasure in watching Laura and Marek, his hands didn't move even the tiniest bit on her breasts. And she was burning up with need that was becoming harder and harder to deny. She squirmed, arched, pressing her breasts against his hands, but it still wasn't enough as Laura moaned, rose, and sank down onto Marek's cock. Trish pussy was burning with envy, spasming every time Laura lowered herself onto Marek, and feeling so, so empty...\n\nShe didn't even realize she'd closed her eyes, out of sheer envy and the need to halt the visual stimulation when she wasn't receiving any physical, until Jordan's hands suddenly came alive on her breasts again, squeezing and kneading. His teeth nibbled the sensitive skin between her shoulder and throat as he pinched her nipples, twisting them and sending darts of fierce pleasure through her. \n\nThat little voice in the back of her head shouted for her to open her eyes, to fight against him and her urges... but her body was blossoming under his touch. Laura's moans filled her ears, the sexy sound of bodies coming together an erotic counterpoint, and Trish just couldn't bring herself to open her eyes quite yet. Especially when one of Jordan's hands slid away from her breasts, down her front, and dipped under her skirt. \n\nHer thighs quivered as he traced his fingertips over the sensitive inner skin, her body arching, yearning to soothe the needy ache that had awoken inside her. At first, his fingers swirled, teased, as she squirmed on his lap against his cock. Her head was resting on his shoulder, her legs spread over his thighs, her arms lying limply down and giving him full access to her body. Kisses down the side of her neck countered the sensation of his fingers moving up her thigh, and when he finally slid his fingers between her sopping pussy lips, she couldn't help but moan in pleasure.\n\nThe sound of her moan was matched by a small cry of pleasure from Laura, and Trish couldn't help but open her eyes to see why it sounded different than before. \n\nJordan's fingers still, parallel with her slit, dipping between them but not inside of her, his hand stalling on her breast, as Trish panted for breath, watching as Marek drove into Laura's pussy. He'd flipped Laura onto her back on the couch; her arms were entwined around Marek's neck, but her focus was on Trish and Jordan. Unlike Trish, Laura was completely unembarrassed by being watched; she stared back at Trish with eyes full of lust. Her breasts jiggled and rocked with every rough thrust of Marek's cock into her body. Marek was no longer watching; his entire focus was on Laura, his head bent over and suckling at her breast as he fucked her with long, hard strokes.\n\n\"Do you want more, baby girl?\" Jordan's voice slid through the fog of need swamping her. \"Do you want me to fuck you while we watch them?\"\n\nShe hesitated... and shook her head. Felt his sigh of disappointment. Actually felt guilty for a second about it. Her body burned, as though punishing her... because she did need to get off so, so badly. \n\nTrish closed her eyes again. \n\nMoaned as Jordan's fingers slid into her, pumping... teasing... \n\nMarek and Laura orgasmed long before Trish did. Picking Trish up in his arms, Jordan literally just said \"Goodbye\" and left Marek and Laura nuzzling each other on the couch. They barely looked up to respond.\n\nFortunately, Jordan's room wasn't far away. \n\nHe tied Trish down to the bed and proceeded to torture her. With her wrists and ankles bound and spread wide apart, there was nothing she could do to stop him from bringing her to the brink of pleasure over and over again. Jordan put tight clamps on her nipples, making the tender buds throb as they jiggled on her chest while she squirmed, his tongue lapping at her pussy, fingers pushing a plug in and out of her ass. \n\nEvery time she thought she was going to cum, he would move away from her clit. Twist the plug in her ass. Spank her inner thighs. Remove the clamps from her nipples so the nubs came back to life with painful, stinging tingles. \n\nFor the first time, Trish couldn't stop herself. \n\n\"Please,\" she finally whispered, tears sliding down her cheeks from the need to orgasm. Her pussy was swollen, throbbing painfully with denied need, the tension in her body making her feel like she was about to crack in half.",
        "As soon as she said the word, Jordan was on top of her, sliding his cock into her pussy and making her scream as she was filled so completely and suddenly. Her orgasm exploded through her on the very first thrust. \n\nHe took her hard and fast, seeking his own pleasure, because he didn't need to do anything extra to provide her with hers. Trish was pulling at her bonds, sobbing at the intensity of the pleasure drowning her; she came so hard she saw stars and yet she couldn't stop the waves of ecstasy that took her breath away. Jordan was all around her, inside of her, giving her all the rough stimulation she needed and more. \n\nBy the time he came, she was limp beneath him, quivering from the nonstop pleasure, her orgasms coming as physical spasms that were painful to her overwrought nerves. She whimpered as she felt him throbbing inside of her, filling her pussy with his cum.  \n\nTwice that night she awoke to Jordan's wandering hands. He took her pussy a second time, sliding into her from behind, his arms trapping her against his body in a hot embrace. The long, slow, almost gentle strokes left her shuddering and crying out, surprised that her body could even produce more pleasure after the quivering wreck he'd reduced her to earlier. The second time he woke her up, it was sometime early in the morning, and - as if realizing her pussy would be too sore to take him again - Jordan sank into her ass instead. She was half asleep and incredibly relaxed as Jordan draped her over a mound of pillows and slowly worked his way into her rear entry, stretching her tiny hole and sending little sparks of pain through her. Once he was fully seated, he took his time with a long, slow ass fuck that had her floating on a wave of bliss... she didn't orgasm exactly, it was more like being on a muzzy, sensual high. By the end of it, he was pounding into her, and all she did was shiver and moan at the hot sensation of his cock throbbing and spilling inside of her.\n\nJust before she fell asleep again, she felt him spreading the healing cream into her pussy and ass... she breathed out a sigh of relief, knowing it would help with the soreness and sensitivity of both areas."
    ],
    "authorname": "Goldeniangel",
    "tags": [
        "non-consent",
        "anal play",
        "voyeur",
        "exhibitionism",
        "rough sex",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/taken-by-the-viking-ch-09"
}