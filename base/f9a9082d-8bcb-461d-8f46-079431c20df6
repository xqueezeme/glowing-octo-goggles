{
    "title": "Yogabot Pt. 06",
    "pages": [
        "I had fully intended to stay in bed when I reached over to turn off my alarm the next morning. I was naked, as instructed. I was exhausted. And I was still hanging on to the small bit of afterglow left.\n\nBut, my hair was matted. My body smelled like I slept in a locker room. And the inside of my thighs were sticky and coated with what I used to call \"liquid sex\". As for my ass? Well, it was obvious I would be washing the sheets later.\n\nSo my desire for a shower won out over my desire to stay in bed.\n\nI replayed the night in my head as I cleaned up, slipping into some clean underwear to get a bite to eat. I pulled my phone off the charger to call in sick to work, sure I was going to spend the day on the sofa, watching the video Mark had left me from the night before.\n\nBut as I started to call, I remembered that I had taken the previous afternoon off. And had been entirely unproductive in the morning. With a smile, I remembered my date Saturday. It occurred to me that if I didn't go in and at least organized the work, I would be stressed about it over the weekend. And the last thing I wanted was to be stressed for my date with Mark. So, I negotiated with myself that I would go in for a half day, work until lunch to sort things out and set up a plan for Monday, then spend the rest of the day with my laptop, the video, and my panties around my ankles.\n\nI laughed at myself as I walked into the office. This was stupid. I would never be able to concentrate. Hell, I couldn't even walk straight with my ass aching the way it was. It hurt and made me smile at the same time, as it brought back the memory of the night before.\n\nConvinced I was going to be unproductive, I proved myself wrong. I was strangely focused. While I was going through emails and proposals, I completely forgot about hypnosis and being a sex-craved slut. I met with my co-workers a few times and our meetings were good. I smiled often and eluded a quiet sense of confident peace that sometimes escaped me. I am sure I had the glow of a teenager on her first crush. And everything seemed right with the world.\n\nI deferred going to lunch with my colleges so I could finish up some paperwork that I had been avoiding. When they got back, it reminded me that I had thought to leave at lunch time but since they were kind enough to bring me carryout on the way back, I felt like I needed to at least stay long enough to eat it.\n\nAbout half-way through the afternoon, my newfound productivity started to pique my curiosity. After a bit of thought amid a very fuzzy memory, I realized that Mark was responsible. Not only was I exceptionally happy because I thought I had found a new boyfriend. Not only was I more patient because of the afterglow of the most amazing orgasm -- most amazing series of orgasms -- I had ever had. But I was reasonably sure that he had increased my focus and productivity while I was under hypnosis. He was the reason I went to work today, when I wanted to slack off and stay home. It made me smile to think of it. It was cute the way he looked after me. And, it was probably a good thing.\n\nIt must have been driven by another post-hypnotic suggestion, but I had no problem leaving when my work was wrapped up and it was time to go. I smiled and said good bye to my team with a bounce in my step that had been missing for a while.\n\nWhen I got home, there was a package outside my door. I stretched my brain trying to remember if I had an online order I was expecting, but could not think of any. I glanced at the shipping label. It said simply:\n\n\"Ship to: K\n\nFrom: M\"\n\nI put it on the kitchen island to open and inside there was a small insulated bag. A note clung to the bag: \"Thought this may help recover from your workout last night, the way it helped recover from your workouts on the track\".\n\nI laughed. It was so \"Mark\" to try to seduce a girl with food, rather than flowers or candy.\n\nOpening the bag, I found a glass bowl with a salad. I instantly knew it was just the way I liked them. It actually made me tremble a little. I started to cry.\n\nThe salad was a reproduction of the salads I would eat while training for Track and Field. The grilled chicken added protein. The mushrooms were anti-inflammatory. The greens were power greens -- spinach for iron, kale for the vitamins and potassium. The pecans, blueberries and raspberries added sweetness and also antioxidant properties. And, nessled in the salad was a smaller container that I was sure contained some kind of balsamic vinaigrette.\n\nLiterally no one else on earth would have remembered that. Or thought to send it. No one had ever treated me like this. Some boyfriends had given me gifts. But they were random things -- nice, to be sure -- but not an indication that they really knew me or paid attention to me. Perhaps my reaction was surprising, but it was probably the single most touching thing anyone ever had done for me.\n\nAfter cleaning up, I sent him a selfie with me eating the salad, smiling as much as I could. He responded with a selfie of a whiteboard with several people standing at a meeting he was attending. I joked that I got the better part of the last three evenings.\n\nme: \"when did you drop the salad off?\"\n\nhim: \"we took a break for dinner.\"\n\nme: \"you had all this in your fridge?\"\n\nhim: \"picked it up last night after I left\"\n\nme; \"your r crazy. Amazing. But crazy\"\n\nhim: \"Amazingly crazy. I like that\"\n\nI had already made it clear to my friends that I was staying in tonight. So after eating, I locked the door, took off my bra, slipped on a t-shirt and flopped on my sofa in a t-shirt and underwear. I propped up the laptop and thought I knew full well where this was going. I was already horny. So, I was convinced that in a few minutes I'd be leaning back and blissfully rubbing myself through my panties. My arousal was more of a \"slow burn,\" so I assumed I would not orgasm, but just stay there lost in some nice, quiet jilling off.\n\nMy expectations were not accurate.\n\nI had stopped the video the night before, prior to going to sleep. My orgasm-clouded brain somehow managed to remember. But I had been in no state to watch it.\n\nWhen I started it up, I saw myself slouching on the sofa, looking like I was blissfully asleep. Knowing that I was hypnotized in this part of the video was a significant turn on for me, but I had expected that. My fingers slowly made their way down to my yellow, cotton panties and started to tease my sensitive parts gently.\n\nIn the video, Mark was clearly adjusting the laptop so the camera would get what he wanted, and the microphone would pick up the sounds. So I was left to watch myself, completely at his mercy. Knowing that I had been totally blank and suggestible for this raised my arousal noticeably as my hands kept teasing my labia through the cotton of my panties.\n\nWhen he started to speak, it was to deepen my trance.\n\n\"Focus on your breathing now. As you inhale,hold it for a count of 3. Then when you exhale, exhale completely for a count of 4.\n\nIn... 1.... 2.... 3\n\nOut... 1...2...3... 4\n\nImagine, as you keep doing that, that you are inhaling relaxation-- for 3. Then exhaling all your worries, and tension, and even your thoughts --- for 4.\"\n\nHis voice was having an effect on me. I found myself breathing according to his instructions, drifting away with each breath. I was a little surprised to see how well conditioned I was, already trained to obey his instructions, without being entranced. In fact, without even being in the same room with him.\n\nI thought about the hypnosis videos I had watched before and how they had no effect on me. And how, now, I was watching a video where he did not even directly try to hypnotize me, but I was already falling, without even trying.\n\nI did not completely lose my grip on reality, as I had in the video. It was more like a warm, erotic buzz. My fingers still casually stroked my pussy. My breathing was slow (in for 3, out for 4) as instructed. But I was aware of what was happening.\n\nAfter a while of suggesting that I go deeper for him, he lead me down an imaginary stairway, each step making me more relaxed and taking me deeper into the movement.\n\nThe video me was already so far gone that it seemed to make very little difference. He suggested that I could reach the bottom of the stairs whenever I felt that I had gone as deep as I wanted to. And all I had to do was slide my hand from my tummy to the sofa when I had gotten there, then I could stay as long as I like.\n\nThere was a very long pause. And, if anything, my slouching had gotten more slouch to it. It seemed I had been trying hard to go as far as I could, as if I were already underground, but trying to go to the sub-basement.\n\nHe kept talking occasionally reassuring me that I was warm, safe and could relax completely. And that it was easy to sink deeper, but only if I wanted it.\n\nFinally, my video-me's hand slid to the sofa.\n\nHe continued telling me how deep I was and how easy it was to surrender like this. He told me that my mind would remember this place and this feeling and easily come back. And that when he woke me, I could come up as quickly as I wanted but could return even faster next time, since i knew where I was going.\n\nI was impressed by how often he kept telling me that I could do what I wanted, and only what I wanted. It was clear from the video that I was driving the hypnosis, not him -- even though he was clearly the guide and the coach. It did, in fact, remind me of my sports days. The coach guides, directs, corrects and trains. But the athlete does the actual event. I had gone down the stairs in my mind. I had decided how many there were. And I had decided how to get there. He simply told me how to start.\n\nHe reinforced the trigger -- \"when you see me snap, like I did before, you will continue to drop quickly back to this place. Only you will find that it will get even deeper each time. Every time you know you are to drop, you will drop very, very quickly without thought. But, if you feel unsafe, if you instinctively know that dropping for me would be dangerous, then it will wash over you like a wave without effect and leave no mark. Just like a wave washes back from the sea shore with no record of its passing.\"\n\nI remember he had told me he put in the safety valve like this. And when I heard it, it just boosted my confidence.\n\nHe brought me back up a few minutes later, counting me up to alertness. It was not on the video, but he implied that he had counted backwards to deepen my trance.\n\nWhen he reached 5 and told me to open my eyes. I watched myself take a deep breath and seem to come alert, meanwhile I did the same while watching on the sofa. I had never faded completely out, but my mind remembered how peaceful and relaxed I felt. I had started to fade a little -- the way I would in a boring lecture or while doing something routine -- and when he said \"5 your eyes open when they want to..\" I opened them wider and took a deep breath.\n\nI felt that same zoned out sense of peace. And I realized that my arousal had certainly risen, even though I had stopped touching myself without noticing. I stretched and smiled peacefully -- sort of a cigarette-after-sex smile.\n\nAnd that's when the trouble started.\n\nI felt fine and aware and not tranced at all. But it still felt good and relaxing. Except for the warm arousal, I felt like I had just gotten a nice, relaxing massage at a day spa.\n\nSo I was moving slowly and had not yet paused the video when I looked up and saw him and then heard his *SNAP*.\n\nThe next thing I heard was \"5\".\n\nI was disoriented. It took me a moment to realize that I was laying on my sofa. By the time I got my bearings, I heard my voice \"do it again\"... *SNAP*\n\nThen.. \"5\"... where was I? Oh, I think I am home. On my sofa, maybe?\n\n*SNAP*... \"open your eyes NOW\"\n\nThey snapped open without my thinking about it.\n\nI had no brain left. I barely could remember not to drool.\n\nThe only reason I did not stay in that loop all night was that I heard his voice say \"Drink some water\" and the snapping stopped.\n\nI heard our voices talking. But it gave me time to remember my name and where I was. I pushed myself to move and it felt like a sloth moving through water. I finally made it to the laptop just as he was about to snap me into oblivion. Somehow, I managed to pause just in time.\n\nI took a deep breath and stood up slowly. Walking to the kitchen I got some water and thought about the experience. I realized that I had just reinforced everything he had done. If I had even a small chance of resisting him before, it was gone now. When I thought that, my pussy responded with a gentle contraction, as if to say: \"About damn time too!\"\n\nI realized that I needed to wait until after he snapped or else I would never remember what he was saying to me while I was out. So I returned to my comfy spot, this time sitting in front of the laptop, and fast forwarded until I saw that I was out. Then I unmuted and sat back.\n\n\"So from now on,\" he was saying, \"whenever I, and only I say this phrase to you, you will respond. If anyone else says it, it will be meaningless. But when you hear my voice say it, it will take you over. That phrase is: YOGABOT ACTIVATE.\"\n\nI felt the change instantly. I almost had a moment to recognize my mistake as I saw the mental image of a mouse pointer clicking an app in my brain called \"Yogabot\". Then the app opened. The girl who used to be me was just an operating system, intent on making sure the app ran correctly. The girl/Operating system heard its voice say \"Yogabot active\".\n\nThere was a voice on the video giving instructions. The girl behind the app was unaware of them. The app took them in, assimilating them. It was a robot app, capable only of following instructions without thought, after all.\n\nSeveral times, its toneless voice said \"Instruction accepted.\" But the instruction required no thought or movement. So it just buried itself deeply in core memory.\n\n\"And whenever I say the name of a pose,\" the voice said, \" for example, Mountain Pose...\"\n\n\"Instruction accepted,\" the bot said, as the girl/Operating system forced the unit to its feet and provided the direction to raise arms.\n\nThe voice outside the bot continued: \"...You will learn new poses like Sukhasana pose, which is done by...\"\n\n\"Instruction accepted.\" The unit slid onto the floor, with its ankles under the opposite knee and hands resting on the knees. The voice continued to describe the pose, and it just reinforced the bot's need to adjust according to the instructions -- spine straighter, arms bent more.\n\nA thought broke through. \"My God, what if I can't get out of this. What if it keeps me---\" Thought killed by the Operating System.\n\nThe voice kept speaking. \"And when I say something specific like Warrior pose, left side...\"\n\n\"Instruction accepted...\"\n\nAnd the bot stood as straight as possible and leaned into its left knee with its arms extended.\n\nAnother thought crept in: \"I am not having as many stray thoughts as last night and am not as aware of the voices, I wonder if this means it is being deepened in my --\" -- thought killed.\n\nFinally the voice said \"whenever I say Yogabot Terminate, the process will...\"\n\n\"Instruction Accepted... Process termination begun... Quit Yogabot.\"\n\nAnd I was back.\n\nI dropped my arms out of warrior posed and blinked. The Yogabot command was incredible the night before. This time it was even stronger. I had almost complete loss of thought. And, as a result, no real way to resist, even if I wanted to. I was sure I couldn't even have put together enough thoughts to resist before I zapped those thoughts out.\n\nI should have felt scared about this, or at least conflicted. What I felt was horny. I kept having this image of him yoga-botting me into downward dog pose, then fucking me so hard from behind it would leave me raw. And me, aware of it, but focused only on whatever instructions he gave to the bot. The bot would be maintaining the right position, and completely unable to interrupt him. And I wondered if he commanded the bot to cum, would she? Probably. In a very robotic, monotone way. \"oh... ba-BY.. I.. am cumm-ING.\"\n\nI laughed a little a the thought.\n\nMy pussy did not.\n\nShe was convinced it would be the best use for her that she had ever known. My newly-submissive mind agreed. It was appropriate for me to be a robot sex toy for my owner.\n\nI realized that this trancing and triggering was not only arousing me but putting me back into a submissive state. And I had not even gotten to the part of the video where he implanted the subspace trigger yet.\n\nI was lost in thought. Then realized with a start: \"Shit, the video is still running! any moment he will---\"\n\nThen I heard it: \"Yogabot, activate\"\n\nIt happened even faster this time. The mouse pointer, the app, the words: \"Yogabot active\".\n\nI went through the 3 poses he had commanded me to again. I was vaguely aware of the girl, but she was becoming more and more an operating system and less and less a person when she was in this state. As for the bot, she was just a bot -- no feelings, no thoughts, just routines to be executed.\n\n\"Yogabot terminate.\"\n\n\"Instruction Accepted... Process termination begun... Quit Yogabot\"\n\nI blinked. I was back. I was even more horny. My pussy and the Yogabot got along beautifully.\n\nI stumbled back to the sofa. The images in my mind played out strongly. It was like waking from a dream, only an amazing one. Fortunately, the video had switched to talking. I heard my humiliated voice explain that leaving the dildo out was an accident.\n\nBefore anything else could happen, I paused the video.\n\nI walked to the kitchen again, but rather than getting water, I poured myself some wine. The experience so far had left me unsettled, but not in a bad way. It was as if you realize that the person you have been living inside of is just a shell. The real you is deeper, and waiting to come out. The real me wanted to be a robot. Or at least to have times when I would be. The real me dropped into trance from a video, just because it was Mark who told me to. As much as I had learned to expect that, it still surprised me how deep it went. It was raw sexuality. But it was so much more. It was as if the facade had cracked and I stepped out.\n\nI knew I would watch the rest of the video, but I two opposing thoughts. I wanted to see what he actually said to me while I was out. I knew that I could trust him. Seeing it and hearing it, though, would not only satisfy my curiosity, but deepen my trust.\n\nAt the same time, I wanted to just go back and put the trances on a loop and stay there, knowing this would deepen my reaction to him. I wanted it deepened, just in case there was some small crack that my insecure self might try to slip away through. I wanted to close that gap. I wanted to be locked in so that I could never get away. I was afraid of going back to being just a facade.\n\nI had ruined relationships in the past. Sure, the guys I dated had not always acted well, but I was sure it was my fault somehow. If my boyfriend dumped me before the prom, it must have been because I had been pushing him away. I did not want the chance to do that with Mark. I wanted him to lock me in and throw away the key. I wanted to close all the exit hatches where I might flee to my place of safety and deny the person I was.\n\nI wondered if that is why I found this so arousing. Perhaps my subconscious mind said \"enough, you will not screw this one up, bitch! And just to make sure, here is some impossibly intense arousal to get your attention.\"\n\nI laughed at the thought, poured another glass of wine and headed back to the sofa.\n\nI took a deep breath. I really wanted to hear the next part -- not me embarrassing myself about the dildo -- but the part where he implanted the subspace trigger. I was desperate to know how deep it went. Was it something that was always in me and he just brought it out? Or was he really a secret evil scientist mind controller who put in something that changed me. OK, so maybe I knew the answer to that. But I really wanted to know how he did it. Did he put any loopholes in that I could exploit? Did he put some safety measures in? And if he did, did I just ignore them?",
        "In spite of myself, I was nervous. I was scared of what it might tell me about myself. I was nervous that I may have been too aggressively submissive (it that a thing?) and maybe drove him to retreat.\n\nOn a more practical level, I was nervous that I would get the timing of the video wrong and drop like a rock into trance every time, never knowing what he told me. Part of me wanted that. That part wanted to reinforce it until I lost myself completely. That made me even more worried.\n\nI muted the video until I saw him snap. I didn't even hear it and I started to drop from just seeing it. But it was not as intense and I was able to resist the urge to drop completely.\n\nWhen I unmuted, he was deepening the trance. Again, I had to keep shaking my head hard to not find myself going back down the stairway into the darkness. Somehow I managed.\n\nWhat followed was more conversational. He told me that I would have no problem answering without waking -- as if I were talking in my sleep and was lost in a wonderful dream -- and that I would answer honestly, without even thinking about my replies. The replies, he said, would come from deep inside me, below the level of conscious thought, and simply be instinct.\n\nI heard myself on video answer simply and without emotion, as if I were drugged or perhaps just completely dreamy.\n\n\"When you told me about last night, you said you slid to your knees. Do you remember that feeling?\"\n\n\"Yes.\"\n\n\"At that moment, you were feeling very, very submissive, weren't you?\"\n\n\"Yes.\"\n\n\"You can return to that moment, to that feeling, anytime you like. And I can help you, if you want. I can give you a phrase that I can say that will take you right back. Would you like that?\"\n\n\"Yes.\"\n\n\"You would really like that, even knowing that I could use it any time I wanted to make you feel completely submissive and surrender yourself to me?\"\n\n\"Yes.\"\n\n\"Even though you know that you could not resist it?\"\n\n\"Yes.\"\n\n\"And when you were in that state, the only thing that would matter would be obedience. And it would define you, wouldn't it?\"\n\n\"Yes.\"\n\n\"You know that you can respond even more intensely. What you felt last night, when you were feeling so very submissive, is really just a small shadow of what you can feel and will feel in the future, when I bring you back to that state. It will be many times more intense and many times more complete. But being in that place may feel wonderful to you. Yet, some people would be nervous about giving that power to another. Are you?\"\n\n\"No.\"\n\n\"And do you want to give me, and only me, the ability to take you back there whenever I want?\"\n\n\"Yes.\"\n\n\"And when I say it, you will let it go deep inside you. You will not only surrender as a submissive. But you will surrender anything but submission. When I say this phrase, you will return to the submissive place -- the subspace -- and in that place you will be free from any inhibitions blocking your natural desires regarding submission. That is really what this phrase will do. It will not make you submissive or even more submissive. It will just remove the blocks that keep you from expressing it. In a way, this subspace will free you. It will allow you to let your inner desires out without worry about social convention or whatever other limits you place on yourself. In a way, you have been needing this subspace, haven't you?\"\n\n\"Yes.\"\n\nThe video held my attention completely. I was enthralled by my reactions and his words. My brain stretched to absorb what he had said. This time, it was not a hypnosis or submissive attention. However, it was just as compelling. My jaw actually dropped when I realized that he had never commanded me to obey him in subspace. He had simply gotten me to agree to drop my reservations and be what I wanted to be all along.\n\nIt explained everything. This was always what I had craved. Instinctively, I had known it all along. He did not make me do this. He simply released me from my own hesitation.\n\nA dam of emotions burst inside me as I realized this, releasing a flood of thoughts in my brain. In spite of this, I did not feel confused, but felt a strange sense of peace. This was not only about unbelievable arousal or intense orgasms. It was not even only about Mark, although he was the key to the lock that had held this in place for so long. Really, it was about me. It was about the need to feel safe giving myself completely, without the constraints I had carefully erected to keep myself safe. It was about becoming the person I already was, but had not yet to embrace.\n\nIt explained why I had known all this even before watching the video. Mark had released my subconscious desires, but the desires were always mine.\n\nAs the thoughts flew like lightning in my mind, connecting various parts of my life that had seemed unconnected, so many things made sense. I had, indeed, been looking for this in every dating relationship I had entered, only to be disappointed by the responses of my lovers. And now, here was Mark, taking, but not demanding, opening the door, without breaking in.\n\nI was wondering why I had never noticed this before when I heard Mark's voice on the video resume.\n\n\"I know. It came out last night. And it will come out again when I say Subspace now, Kendra --\".\n\nI felt the effect immediately even though I knew he was not in the room.\n\n\"-- and when only I say Subspace now, Kendra --\"\n\nBy the time I heard this I was already on my knees, head bowed, hands behind my back. I was completely aware of everything going on around me, and felt completely in control of myself. I knew he was not in the room. I knew he couldn't see me. It made no difference. I wanted to be on my knees. I wanted to be his completely.\n\nNow, I understood this better. Being this way was like a release. It was as if I could take off a mask and show what was underneath for the first time in my life. What made it even sweeter was that my Owner supported me in this, He gave me permission. He pulled me out of my shell.\n\nI heard his voice speaking on the audio. I paid close attention to each word. I was not entranced, as I was when he had recorded this. Instead, I felt the need to consciously devote myself to each and every instruction, as if I could finally find myself if I could flawlessly follow all his guidance.\n\nThen, a strange thing happened. He was explaining how I could return to the state I was in outside of subspace if I wanted when he said \"Return to me, Kendra\".\n\nWhen I heard the \"return\" trigger, I expected to feel the submissive feelings drain for me and to be more aware of other priorities. It did not happen. I had no desire to get off my knees. I kept my head bowed. I kept my intense focus on his words. My arms stayed clasped behind my back.\n\nI realized that his words were the key: I could return, if I wanted. I did not want. I was content to be here, even though he was not even in the room. I smiled gently while I was listening.\n\nHe had restated the trigger effects a few times and encouraged me to deepen them. I listened intently.\n\nThen I nearly fell over when he introduced the \"good girl\" phrase, it would be a sign that I had done well and pleased him. And that this would drive my feelings out, making my body and my emotions respond in whatever way I felt was correct -- whatever way my subconscious instincts told me I should respond.\n\nHe repeated it a few times during the session.\n\n\"Good girl.\"\n\n\"Good girl.\"\n\n\"Good girl.\"\n\nAnd each time I felt the throb of the near orgasm combined with a deep sense of contentment and pride. Even though I knew he was not directly saying it to me, since it was a video, I also knew that I was in the right place. Had he been here, I was convinced he would have been pleased.\n\nHe brought me out of trance in the video.. \"1....2... 3... 4... 5...\" and I hesitantly paused the playback.\n\nI wanted to continue. I knew what was next. He would trigger me into subspace and I would strip topless and touch myself for him. I wanted that, even though I knew he was not here to release me and grant me orgasm. So I would be frustrated and aroused all night.\n\nBut my fiendish mind had concocted another diabolical plan to remove any resistance I may have had left.\n\nWhen I was in college, some of our friends had started a band. Since I have the musical ability of a doorknob, I found another way to help. Being a bit savvy with technical skills, I offered to edit some audio and video for them to put online as advertisement. The band fell apart before even playing its initial concert, but I kept the software I used and the memory of how to use it.\n\nPulling the laptop over to my kneeling space, I stayed on the floor -- it seemed somehow the right place to be -- and adjusted so that I could decrease the stress on my injured knee. And I started to work at editing the video from the prior night.\n\nI tried hard to avoid getting accidentally tranced by the triggers, and failed several times. But with a bit of work and another glass of wine, I was able to export an audio consisting of almost all the suggestions he had given me under trance. At the beginning of the file and several times later, I added the trance triggers he had used, both his finger snaps and his verbal trigger (\"Drop for me Kendra\"). And scattered throughout, I put the suggestions. On a whim, I removed all the times he woke me from the trance, so that, hypothetically, I would remain in this state forever after listening. I had done enough reading on my quick, deep dive into hypnosis research to know that I would eventually wake from the trance at some point, but had no real idea about how long that would take.\n\nI have always played mental games with myself. I told myself I wasn't really going to listen to this. And I told myself it would likely not work anyway. Then I told myself maybe I would only listen once, so I would likely be out for a few minutes after it ended but wake naturally then, if it even worked. \"Just for fun\", I told myself, \"I will put it on my phone. I won't use it, but knowing it is there is kind of a mental turn on.\"\n\nIt was late, since I had spend all evening zapped out, either in trance or in subspace. I texted Mark as I was getting ready for bed and told him he was welcome to stop by and stay as long as he'd like. He replied with a picture of a group of his coworkers at a restaurant, saying that it was the obligatory post-project bonding time. But he was looking forward to our date Saturday at six PM. I thought it was cute that he specifically reminded me of the time, and my submissive side made a mental note to be ready exactly then and not a moment later. I thought about texting him a selfie with just my bra-less white t-shirt an underwear covering me, but decided against it.\n\nInstead, I crawled into bed and slowly started to masturbate thinking of my experiences of the last few days and of the audio file now on my phone, ready to take me back there. I teased that I would only listen once before I slept, but I knew that was not true.\n\nI was already aroused. I pulled my fingers out of my panties to my lips and sucked them, the way I had done the night before while I had stared him in the eye. Tasting my own juices had never been a special turn on for me, but with him, everything was different. I knew it would turn him on. I remembered seeing the bulge in his jeans and knowing I had affected him.\n\nI started to get lost in the arousal as my higher faculties shut down. I pulled my fingers back out of my dripping pussy to reach my nightstand and slide my earbuds in. Then started to finger myself again, while I imaging what would happen if I started that file. I knew it would take me down again.\n\nAnd I knew, from my feverish reading a few days ago, that the more I repeated the trances and instructions, the deeper and stronger they would be. Repetition would hammer them into my subconscious, driving out any left-over resistance. In truth, I suspected there was no left-over resistance. But the idea of listening over and over again, making them lock into my brain like iron, brought me almost to the edge of orgasm. Perhaps, if I did listen a couple more times before our date, I would be truly broken, any shards of the old Kendra gone completely. I told myself that I had no plans of doing that, but \"just for fun\" I told myself, I would take my phone and queue it up and lay it next to me. It would, I lied to myself, make the orgasm better.\n\nI glanced at my phone. On a whim, after telling myself I was not going to really listen anyway, I tapped repeat with one hand, while my other rubbed my clit.\n\nI laid the phone down on the bed next to me, as I started to crest the wave of a slow, gentle orgasm, imagining what a complete, mindless slut I would become if my hands slipped and I started the playback accidentally. After hours of conditioning, repeating over and over, speaking directly to my core, I would be his puppet. I would likely lose myself completely. I felt like I was walking the edge of danger as I was walking the edge of climax. Even convincing myself that I would not actually start the audio, the sense of risk was somehow arousing.\n\nI felt the orgasm rising. I was teasing it. If I just kept up what I was doing for a few more seconds, I would cum.\n\nI glanced over at the phone.\n\nI tapped \"play\".\n\nI was gone."
    ],
    "authorname": "justCal",
    "tags": [
        "consenual",
        "mc",
        "ds",
        "slowmoving",
        "romantic",
        "bdsm",
        "romance"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/yogabot-pt-06"
}