{
    "title": "Marriage of the Fae Ch. 05",
    "pages": [
        "Note to Readers: Thank you so, so much for all your support\u2014comments, emails, votes. You guys keep me in touch with my writing bug. It's so fun to see people invested in the characters that bounce around in my head. \n\nAs always, all characters are 21 years or older. Keep in mind that the narrative switches perspectives between our main characters. Enjoy! \n\nChapter 5 \n\nNoelle \n\nRhys and I have breakfast in a small sunroom-type area contained within his suite. The surreal feeling of the whole thing isn't lost on me\u2014less than a week ago, I was sitting on the laminate countertop of my apartment's six-by-six-foot kitchen, eating corn flakes straight out of the box before work. Less than a week ago I was at the office, staring down a whiteboard list of project goals for our fall software release, trying not to notice Manager Corey staring down my ass. Less than a week ago I was adding a thrill to my day by stopping by the local market after work to pick up granola bars. Now I'm in someone's suite, no, my husband's suite, no, my husband who is a mythical creature's suite, nibbling on an array of fruits and cheeses while a few servants drift in and out of the room. Jesus Christ. \n\nApparently I've been spacing out for too long, because said husband's hand brushes over mine and squeezes gently. I can't help but tense. \"What's on your mind, little bird?\" \n\nFor the two hours or so since we made our little vows to each other, he's managed to keep up his end of the bargain. Gentle touches only, if any, and pants remaining on. I have a thing or two to say about the pet names, but one step at a time. \n\n\"Nothing,\" I mutter. \"Just...it's so different here, than...than back home. I was distracted thinking about it, is all.\" \n\nHis next words surprise me. \"Tell me about back home.\" \n\nDoes he really want to know? Is this part of his new promise? It doesn't have to be\u2014I would be perfectly happy with silence on both our ends. \"Um,\" I begin. \"I live in a little apartment outside the city. I ride my bike a lot, there are a lot of good trails there. I work at a tech company. I'm good at programming. My family lives a few hours away. They're...they're probably wondering why they haven't heard from me in a few days.\" My voice drops off at the last bit. I grab a slice of pale orange cheese and take a harsher bite than necessary. \n\nAnother squeeze to my hand, which I hadn't realized was still under his until now. \"I shouldn't have asked. It upsets you to talk about your old life.\" \n\nIt's not my old life, I want to snap at him, but who am I kidding, really? Even Siobhan, my one true ally here, can't even speak about the possibility of my return to the human world. Maybe it's time to start past-tensing the All About Me spiel. \n\n\"It's fine,\" is all I say. Something comes to mind as I consider Siobhan and my home. \"Rhys, I have a question.\" \n\n\"Oh?\" \n\n\"Do you know much about using portals?\" \n\nI catch his frown as I look up at him. \"I know the theory,\" he says. \"You're not thinking you could try to use one, are you?\" \n\n\"Siobhan mentioned that whitegrass could be used across one,\" I say quietly. \n\n\"Technically, yes. Though if you're thinking about trying to communicate with your family with one, it would be nearly impossible. You have no magic, to begin with, and for your message to be conveyed exactly where you wanted it, your intent would have to be incredibly strong. Priest-level, really.\" \n\n\"You don't have that level of magic?\" I ask. \n\nHe smirks. \"You give me too much credit. As a prince, I am a figurehead and a diplomat for the clan. My magical abilities are on the same level as any other very talented Fae. Think about it this way\u2014your human leaders are given social power and great amounts of information, correct? But are they significantly better-versed in the practical ways of Earth science than, say, your top scholars?\" \n\nHuh. \"No, they're not,\" I agree. My voice betrays my disappointment. Rhys slides closer to me. \n\n\"I'm sorry I can't provide you with more,\" he says. He sounds sincere. \"Right now, what I can offer you are the means to learning your place here. Allow me to do that for you, and we'll at least be closer to being in better favor with the Council.\" \n\n\"I will,\" I say. \"I meet with Siobhan again tomorrow night, right? I'll ask her to start going over the Elixir. Maybe once I understand that better...\" \n\n\"You will be well on your way,\" he finishes for me. I don't think it will be that simple, but I don't want to argue, especially with a kind, well-mannered Rhys who's hitting me with an uncharacteristically boyish smile. \"Are you finished eating?\"  \n\nI take one more berry from a glistening wooden bowl and toss it into my mouth. \"Now I am.\" \n\n\"Good.\" He pushes back from the table and stands, holding out a large hand to me. I gingerly place my fingertips in his palm, and he pulls me upright. \"I wish to show you around the grounds today. You have not yet had a chance to see the beauty of this place, except in passing.\" \n\nI stiffen. Last time I saw the grounds \"in passing,\" it was on our way back from the Council meeting, before he brought me into our fancy new bedroom and held me down and hit me and... \n\nI pull my hand out of his grasp, and watch his face harden. \"What? You don't want to see the grounds, Noelle? Is there something else you'd rather do?\" \n\nThe thread between us shudders ever so slightly as I take a step away from him. \"I do. It's fine. Sorry. Lead the way.\" \n\nRhys closes the distance between us again, almost like we're taking part in a very slow, jerky dance. \"Little one, you promised me that you would help me treat you more kindly. That involves being honest with me. Why did you pull away?\" \n\nWell, if he wants honesty, I'll give it to him. \"I was just remembering the last time we walked on the grounds together,\" I say. \"When we got back, you hit me for not wanting to have sex with you, then you raped me anyway. The automatic association isn't a fucking great one.\" \n\nHonesty feels great. I don't think the feeling will last long, though. \n\nColor rises in Rhys' usually pale face, and his violet eyes take on the look that tells me he's gearing up to do something bastardly. \"Is that\u2014\" He cuts himself off suddenly. In the unexpected silence, I realize I'm physically cringing, my fingernails digging into my palms. \n\nRhys' gaze steadies. \"You are right,\" he whispers. \n\nI am? I mean, of course I am, but, what? I don't let down my defensive position. \n\n\"You're right,\" he repeats. \"I was blinded by my anger toward the Council, by the stress of the bond...my behavior after the Council meeting was inexcusable.\" His eyes graze over my tensed position. \"I asked you for honesty, and you gave it, Noelle. I'm not going to hurt you.\" \n\n\"Well that's new,\" I hear myself choke out. \n\nHe winces. \"Yes, it is. Considering our new promises to each other, know that I will not hurt you in that way again. I only want to take you on a walking tour of your new home here. Our return to our suite will not be anything like last time.\" He reaches out again, tugging lightly on my arm where it's folded against my body. \"Relax.\" \n\nI find myself letting a bit of the tension out of the muscles in my arms as he pulls me to him. The bond certainly likes that; I feel loosening of a strain on my breastbone I didn't notice was there. Traitor. \n\nHis fingers twitch around my wrist. \"Noelle, what's this?\" \n\n\"What's what?\" \n\nRhys scoops me suddenly into his arms, making me yelp. I squirm valiantly as he crosses the room, trying to kick at him from the awkward angle where my legs are dangling. New promises my ass, His Rapey Highness can't even keep his\u2014 \n\nRhys drops me into an overstuffed linen chair in a corner of the room and crouches in front of me. As he pulls my hand out to inspect, I finally notice what he's been on about. \n\n\"You made yourself bleed, Noelle,\" Rhys sighs. On the palm of my hand are four gooey red crescent marks where my nails dug in. Flipping over my other hand, I find the same evidence there. \n\nI wrinkle my nose. \"I guess your last almost-tantrum made me more nervous than I thought,\" I tell him. \n\n\"So you hurt yourself?\" \n\n\"Oh, yes, I completely meant to maul my own hands with my fingernails. No, Rhys, it was a fucking accident.\" \n\nHe's staring down at the hand he still has cupped in his grasp. \"You were so frightened of me that you hurt yourself,\" he murmurs. \n\n\"Yeah, I guess I did.\" Does he feel guilty? No, that would require having a soul, and I don't think he's there yet. \n\n\"Gods...you are so fragile.\" His voice is softer than I've ever heard it. \"I'm sorry, Noelle. I've made you afraid of me. You should not have to...\" He trails off, standing up. \"Stay there. I'll be back in a blink.\" \n\nI frown at his slip back into authoritarianism, but remain where I am, my mottled hands falling into my lap. Rhys leaves the room just long enough for the thread to start aching, returning barely a moment later with what looks like two sheets of very thin paper, pressed against each other. A few thick strands of something flat and green are between the sheets. He crouches in front of me again and peels the thin paper apart, exposing the green things to the air. An unrecognizable scent fills my nose; it's slightly earthy, but clean. \n\nI raise an eyebrow. \"Is this some kind of witch doctor stuff? They're just little scrapes, they can heal on their own.\" \n\n\"They shouldn't have to. I'd rather they start healing now.\" Rhys' voice leaves little room for argument, which makes me want to argue more. \n\n\"Really, I've gotten cuts on my hands before. Like, last week even. What are those green things?\" \n\n\"Moonblade grass. It heals minor wounds. Now be quiet, Noelle, and let me help you.\" He gathers my wrists together in one hand and my breath audibly hitches. \"I told you already, I'm not going to hurt you,\" he repeats. \n\nI sit scowling as he takes out one slip of grass, then the next, placing them on the palms of my hands. They sting a bit, kind of like when you put aloe on a sunburn, in a way that tells you it's working. As the grass sits on each line of cuts across my palms, it seems to be losing its color ever so slowly, like it's leaching out into my skin. \n\n\"Is it supposed to be\u2014\" \n\n\"Yes, Noelle, it is supposed to lose its color. The fluids inside the grass filter out into the wound.\" \n\n\"Is it safe for humans?\" I glance up at him, pulling my eyes away from the grass's show. \n\n\"Perfectly.\" Clear violet eyes meet mine, and I'm stalled for a moment by the intensity of his gaze. The thread feels like it's thrumming along with my heartbeat. I curse silently at the thing, toying with my emotions using its sneaky physiological reward system. Making me enjoy our closeness, giving me little zaps of comfort and happiness whenever I'm face-to-face with my otherwise unsavory partner. It's some kind of fucked-up conditioning system. \n\nIt's what keeps me from pulling away when Rhys leans in closer, bending down to rest his forehead on mine. We're close, so close that all I can see are the dark fringes of his eyelashes, long enough to brush against his pale cheeks. The pleasant humming of the bond tells me this is right. \n\nNo, this is wrong. I pull back. \"Is it finished yet?\" \n\nRhys inhales sharply and looks down at my hands. Carefully he peels off the grass, which is now a much lighter shade of green than before, almost translucent. \n\n\"Am I going to wake up green tomorrow?\" \n\nHe chuckles. \"No. Look.\" \n\nI look. Where two minutes ago there were eight bloody half-moons across my palms, now there are only eight pale pinkish crescents, barely-there relics of wounds that could be weeks old. The marks from my nails are all but vanished. \n\n\"Holy shit,\" I remark. \n\n\"Lovely,\" Rhys says. He wraps the grasses back up in their paper and tosses them across the room over his shoulder, where they land perfectly on the table among our breakfast leftovers. \n\n\"How does it\u2014\" \n\n\"I'll get you a book on it. Right now, we're late for our walk, remember?\" \n\nDidn't seem to mind dawdling when his face was inches from mine. I'll leave it alone. I shimmy out of the chair, finding it further off the ground than I expected, and land ungracefully on the floor. \"You should just get me an encyclopedia at this point, with all the weird shit you have here,\" I tell him. \n\nRhys takes my hand again, leading me across the room and out the door of the suite. Hand in hand with him, considering his size, I feel like a child being toted around by an adult. \"I will do my best to find you an encyclopedia regarding as much 'weird shit' as possible, little human,\" he says. Leaving our dishes and the strange grass behind, we walk down the halls of the palace to find a way outside. \n\n************** \n\nSiobhan \n\nI had thought, perhaps, that confessing my betrayal to someone would lighten the load of it on my shoulders, not that I deserve any respite from my guilt. Fortunately for whatever particular god is in charge of my penitence, revealing to Duana my hand in Noelle's torment and the general upheaval of Clan tradition as we knew it did absolutely nothing to ease the burden on my mind. \n\nIt's partly due to the fact that since I told the Fae-witch what I had done, she's said nothing but, \"Oh.\" \n\n\"Oh?\" I said to her this morning as soon as I'd revealed my secret, as she stared impassively at me with those grey eyes. \"I tell you I've committed an offense against Faekind, against the tradition of the Clans and my own honor as a Fae woman, and all you can say is, 'oh'? What do you want from me, old woman?!\" \n\nShe was silent for a long time then. All morning, she's been silent. \n\nFinally, she says, \"Am I supposed to want something from you? You are the one who came to me.\" \n\nI curl my fingers into my hair in frustration. \"You truly have no response for me, after I've told you that I am the one who opened that portal, selfishly hoping to ruin the ceremony?\" \n\n\"Would it make you feel better if I shouted at you?\" \n\nNo, no, it wouldn't, I realize. I don't deserve to feel better anyway. \n\nI don't have to speak for Duana to understand. \"I didn't think so,\" she says. \"That is why I said nothing, Siobhan.\" \n\n\"I'm an affront to our people.\" \n\n\"Perhaps you are. Why did you do it?\" \n\n\"Anything I say at this point would only be a feeble excuse.\" \n\n\"If you tried explaining yourself to the human and to Rhys, yes. I am but an impassive ear to hear your reasoning, if you think that might help you.\" \n\nI'm not sure what could help me. Wretched is too kind a word to describe my current state. In a remorseful pit of my own making, more like it. All of the excuses I've been feeding myself since the very beginning seem even weaker as I mull them over with Duana's stony eyes on me. Why did I do it? \n\nI told myself I couldn't bear to marry him. That it would kill me to be bound to another person. Well done, Siobhan. Now a woman half your size and strength gets to take your place. \n\nI already loved another. And you think that merits stealing the life of another, imbecile? Her future for your wanton desires? \n\nI began the portal building process when I was younger and na\u00efve. When the time came, it was all I could think about. Weak. \n\nI didn't think it would actually work\u2014perhaps just pull a tree or an animal through, if anything. Weak! Weak! Weak! You knew exactly what you were doing. \n\nHumans are\u2014 I can't even go there now. Humans are what, your personal sacrificial lambs? More deserving of what you couldn't handle? \n\nI'm staring at the floor, one hand still tight in my hair, the other braced on my leg as I sit. Duana hasn't said a word since I fell silent; she simply watches as the full weight of what I've done comes crashing down, as all the snippets of anger and guilt I've been too preoccupied to fully appreciate in the days since the Ceremony finally tip the scale. And my excuses are too weak to balance them out. \n\nI feel like my face is sinking in on itself as I raise my head to look at Duana. Her face is like inland mud passed through a flame, utterly unchanging. My voice is barely a whisper. \n\n\"What should I do?\" \n\n\"My dear Siobhan, I will give you the advice that your fellow nobles never had the good sense to heed when I gave it to them: speak the truth.\" \n\n************** \n\nRhys \n\nThere's something almost endearing about these questions of hers. Noelle's endless queries on the names of the trees, the various faunal sounds in the nearby forest, even the nature of the architecture we pass, fill the air of our walk. Will I please show her the grass we use to make the strange paper? Are there always so few people walking about, Rhys, or is this unusual? \n\n\"Is it me?\" she asks solemnly when I tell her it's an unusually quiet day in the area around the palace. It very well may be that everyone is tucked away as of late, whispering about the human who dared take the place of a princess in my marriage bed. Or perhaps about the prince who'd dare to let her. Could this really be the work of the all-powerful Elixir, or have the royals simply lost their minds? I find I'm wondering that last bit myself. \n\n\"Don't concern yourself with it,\" is all I say to her. \n\nShe frowns. \"It is sort of my concern.\" \n\n\"It's not. Concern yourself with honoring the bond, and with your learning. Those things are within our control.\" The girl is worried about the opinions of strangers in a strange world, when she's just barely made an effort to become less strange herself. I can worry about the judgment of others enough for the both of us. \n\n\"Honoring the bond.\" She emphasizes each syllable, like she's testing the idea piece by piece. Truly, she would do well to do so. \n\n\"Not a difficult task,\" I tell her dryly. \n\n\"Yeah, convenient that the bond is so eager for us to fuck,\" she spits back. \n\nGods, I cannot have a moment of peace. I close my eyes for a moment, trying to retain my composure. When I look down to meet her gaze, there's no anger in her dark eyes, only a challenge posed adorably across her face. \n\n\"Recall your side of our deal, little bird. I have no more control over the conditions of the bond than you do. All we can do is make the best of it.\" \n\nShe's about to retort when Jerome trots up from behind a low-standing building the Council uses as an auxiliary meeting place. The man has impeccable timing\u2014arguing over the nuances of our relationship is not the way I wished to spend the afternoon with Noelle. \n\n\"Prince Rhys, just the man I wanted to see!\" The man smiles guilelessly, as if he hasn't most likely been waiting outside the auxiliary Council building for me to pass by. \"Hello, Noelle,\" he adds. \n\nNoelle's eyebrows raise; she's had the kittenish fight knocked out of her by Jerome's arrival. \"Hello,\" she says. \n\nJerome turns back to me, pressing a scroll of paper into my palm. \"Prince, we've just received word from Eila, who is currently at the embassy of the Red Gem Clan. This is her missive.\" \n\nEila? My mother? How long since I last heard that name? \n\n\"My mother?\" I ask stupidly. Noelle shifts beside me, leaning in to look at the paper. I unroll the page, angling it away from her. \n\nTo the Council of the Grass Clan, \n\nWord has reached me of my son's Elixir-bound marriage to a human woman. \n\nI would like to meet this woman, and speak to my son. \n\nI cannot disentangle myself from ambassadorial matters at this time, as I am with Red Gem. Their council also wishes to meet Rhys and his bride. \n\nPlease direct Rhys, our human, and relevant advisors to visit me there. I would also so love to see Siobhan. ",
        "I respectfully ask the Council of the Grass Clan to extend graciousness in this matter. \n\nEila Brigid Stiof\u00e1n. \n\nIt took an illicit interspecies marriage for me to learn of my mother's whereabouts. If that isn't just like her, then I don't think I could tell you what is. \n\nNoelle leans in again. \"What is it? Your mother?\" \n\n\"Hush,\" I tell her. \n\n\"Let her see it, Prince Rhys. It directly concerns her,\" Jerome presses. \n\nI sigh and pass the paper to Noelle. She clutches it tightly in her small hands as she reads. \"Your mother wants to see us?\" \n\n\"I'm sure she's curious about the situation,\" Jerome says. \"It's not anything to be concerned about, though we should leave within the next few days if we want to arrive in a timely manner.\" \n\n\"Ah, yes, time to drop everything and dash to my mother's side at her whim,\" I muse aloud. \"How long has it been since she showed any interest in my affairs, Jerome?\" \n\n\"With all due respect, Prince Rhys, now is not quite the time to be facetious. Are you planning on disregarding your mother's request?\" \n\n\"Of course not. That would be inappropriate.\" I glance down at the knit-browed cause of our shared grief, who's still holding the missive in white-knuckled fingers. \"What of Noelle? The Red Gem Clan is not one into which I would throw a beginner, especially in times like these.\" \n\n\"What's wrong with the Red Gem Clan?\" Noelle's voice is breathy and insistent, like that of someone on the verge of panicking. \n\nI grip her arm in warning. \"Hush, I'm thinking.\" \n\n\"Rhys!\" Jerome's voice takes on an edge. He doesn't often use my name without my title. \"For shame!\" \n\nI glance down. My hand is wrapped tightly around her arm, too tightly, enveloping the circumference of the tiny thing. She's trembling. \n\nMy hand comes open in an instant, like the hinge of an animal trap. She backs away, edging toward Jerome. Jerome places a hand on Noelle's shoulder, a muscle twitching in his jaw, and she seems to relax into it, as if it's a protection. The cursed thread at my breastbone throbs with a certain anger. \n\n\"I will speak with Princess Siobhan to see if she can't give Noelle another lesson tonight. If Noelle is able to pick up a few customs and perhaps meet with the Council before your departure, some of this...anxiety...may fade,\" Jerome says evenly. He emphasizes anxiety as if it's not the first word he would choose. \n\n\"Good,\" I say. Noelle is silent. I find I cannot look at her face. \n\n\"Very well. I have a few matters to attend to, then.\" Jerome looks down at Noelle. \n\n\"I'm okay,\" she tells him. \n\nHe nods slowly before backing away, then finally turning to walk back into the Council building. He leaves us alone, surrounded by the towering trees. \n\n\"Let me take you back to our rooms,\" I say to her. \n\n\"I thought we had an agreement,\" is her reply. \n\n\"We did, and I did not honor it.\" I reach out my hand to her. \"Please, sweetheart. Let's go home.\" \n\nI knew it was the wrong thing to say the moment the words passed my lips. \"That is not my home,\" she says darkly. \n\nWell done, idiot prince. The thread at my chest seems to follow the rising level of tension between us. \"Noelle. Let me make this right.\" \n\nUnder any other circumstances I know she wouldn't hesitate to run from me, dashing off to guard her anger and hurt. Her tense position, the tightness of her shoulders, tell me she'd like nothing more. But she can't. We're both trapped here, tethered to each other, with nothing but confusion and fury and a terrible, wonderful string between us. How did my parents manage it for so many years, the oppressive force of this bond? Even between a pair of Fae, each considerably stronger than a human, there must have been some residual tugging, enough to drive anyone to frustration. Perhaps the strain of it all was what sent my mother running off to foreign lands the moment my father passed. \n\nShe stares up at me with those dark eyes. If I wanted to, I could start walking away, forcing her to follow. I would easily withstand the pain longer than she could. I find I have no desire to do so. \n\n\"Alright,\" she says softly. \"Let's go back. Show me you can do better.\" In the days I've known her, I've heard her voice take on a frightened tone, often an angry one, occasionally one that reflects her curiosity in the world around her. In this moment, it's none of those\u2014the woman's voice is soft and assertive, barely betraying emotion. It's strangely thrilling, this new voice. I want to know the person behind it better. \n\n\"Thank you,\" I find myself saying. \n\n************** \n\nNoelle \n\nWe walk back to the palace in silence, neither of us saying a word as Rhys opens the doors to our suite and ushers me inside. To say he's almost...subdued seems like a long shot, but it's true. The anxious, domineering energy that seems to accompany him and pull at the bond isn't gone, but it's mellowed out in a way that's almost indescribable. \n\nOnce we reach the inner chamber, I sit down on the bed and pull off the simple flat shoes I had on for our walk. Without hesitating, Rhys sits down beside me, resting his hands on either side of himself. He still doesn't say anything, just watches as I let the shoes drop to the floor. His position would be almost childlike if he weren't still towering over me. \n\nFinally, he murmurs, \"I am sorry, Noelle.\" \n\n\"It's not that simple. Sorry doesn't just make things go away.\" \n\n\"I know it doesn't. But I said I'd show you I can do better, and I'd like to start somewhere.\" His arm brushes my shoulder. \"And I want to start with, 'I'm sorry.'\" \n\nOh, this is about what he wants? Of all the smarmy, entitled... \"I said show me, not tell me. For the entire time I've known you, all you've done are things to apologize for. You don't get to just erase all that, Rhys, that's not how it\u2014\" \n\nI'm cut off when his lips come down, feather-like, against mine, one hand pressing to my cheek. I can't speak, I can't move, my brain is shouting at me to smack him for trying to pull this shitty, tired, rom-com bullshit when I'm so righteously angry, but the bond is thrumming wildly, even at that gentle touch, almost hissing, yes, yes, yes... \n\nHe brushes his full lips against mine again. \"I'm sorry.\" Another time, light kisses across my cheekbone leading back down to my mouth. God damn it. \n\n\"I'm sorry, I'm sorry...\" His hands are cupping my face, not tightly; if I wanted to, I could pull away. I don't. He presses his mouth to mine, and when I part my lips, it's like the thread between us is alive, pulsing faster than my heartbeat. \n\n\"I'm sorry...\" Another kiss as his voice grows softer. \n\n\"No,\" I choke out, but I'm already losing it. \n\nHis right hand slips back into my hair, not pulling, only a gentle pressure at the back of my head, his long fingers tangled in the strands. Our bond hums; I tilt my head back as he kisses along my jawline, down the bridge of my nose, over my forehead, chaste little things, each leading back to my mouth, each punctuated by a soft, earnest apology. It's only when his other hand slides down to press at the small of my back that I realize my own hands are on his chest, holding on to his shirt as if it might ground me as the rest of me slips away. \n\nHe pulls me up against him, leaning down over me until I'm half-lying against the mountain of pillows on the bed, his lips not leaving mine. And it's so easy to lose myself, to let the bond take control, the thread that strums outward from my chest with every kiss. I'm almost cradled in his arms like this, one hand still at the back of my head, the other arm wrapped around my torso. \n\n\"Forgive me,\" he murmurs into my mouth. His thumb massages circles against the base of my skull. \n\n\"Rhys, I can't...\" My fingers tighten in the fabric of his shirt, my knuckles pressing into the hard wall of his chest. \n\n\"Shh.\" His mouth trails down my jaw once again, but this time he doesn't stop when he gets to the base of my throat. Rhys finally presses his lips to the center of my sternum, right above the cleft between my breasts, the point at which the imaginary thread of the bond seems to be tied. Little sparks shoot up and down the center of my chest at his touch, and I gasp. \n\n\"How does it feel?\" he whispers. \n\nIt feels like I could melt. \"Fine,\" I breathe. \n\n\"Just fine?\" He trails the tip of his aquiline nose over that same point on my breastbone. \n\n\"J-just fine...Rhys, stop...\" I sound the exact opposite of convincing. \n\n\"Why?\" he whispers. Another kiss as both of his hands slide to my waist, circling it almost entirely. \"You see...I know I can't ever make up for what I've done to you.\" His thumbs draw slow circles just below my ribcage. \"But I thought,\" he presses his forehead to my chest and I arch against him, \"that I could show you there's no need to be afraid of what could be.\" \n\nHis head comes up and I'm left with a split second of disappointment before I'm once again staring into those ridiculous eyes. I glance over his face\u2014the violet of his irises, the dark of his lashes and brows that are such a shock against pale skin. His lips, parted ever so slightly. His hair hangs in loose curls over his shoulders, long enough to curtain us in our closeness. Somewhere along the line the bond took a horseshoe magnet to my moral compass, but every thought I have on him remains sharp and in focus. \n\n\"Let me show you,\" he whispers. \n\n\"All this is because of the bond,\" I manage. \n\n\"And if it is? The bond is part of us now. Let yourself enjoy it.\" \n\nLooking into his beautiful, pleading face, the bond humming between us, almost impatiently now, it's too easy to forget everything else. And so what if I do? \n\nMy arms come up to wind around his neck, pulling him back into me. The thread seems to sing, urging me on, reveling in the low groan he gives as he buries his face in the crook of my shoulder. His lips brush my collarbone, his fingers pushing down the yellow fabric of my dress to kiss the skin of my shoulder. Each new point of contact gives the thread something new to sing about. \n\nHis arms bend back to wrap his hands around my wrists, pulling my arms from around him to stretch them up over my head, carefully avoiding the purple swell of the bruise. I squirm as he presses my arms back into the pillows, forbidding me from touching him, from closing the gap between us and satisfying the bond's tug of my own volition. \n\n\"Doesn't take you long at all to get impatient.\" Rhys chuckles, his cool breath brushing my ear. Pressing his body back down against me, controlling himself so that just enough of his weight is on me to push me into the mattress without taking my breath away, he grazes his teeth over the delicate skin on the inside of my upper arm. When I shudder, he bites down, just hard enough to ache. I curse softly, and I can feel his smile against my skin as he bites again, just above my elbow. His hands leave my wrists and slide down my body, bunching up the skirt of my dress, and I find myself lifting my hips for him as he pulls the dress up, lifting it over my stomach and breasts, finally slipping it off over my arms, lying still over my head where he left them. I can only hear the soft thump of the fabric as it hits the floor, because his face is over mine again, kissing me, pausing only once more to shed his own shirt. \n\nOur skin touching is like a chemical reaction. The thread between us isn't just slack, it seems to be buzzing with joy, filling me with a heady relief I didn't know I needed. I remember this feeling from last time, the absolute rightness of it, making me question why I would ever want to be any further from him than I am now. Rhys looks at me for a moment, and without even speaking it's like we're exchanging an affirmation, sharing in the ecstasy of the bond. Giving each other permission to give in to it. It's just too good not to. \n\nWith that single look, Rhys' hands go back to my body, gripping around my ribcage as his head dips to my chest. His nose skirts over the bond point again before his lips are on my breast, and I moan softly as he kisses the soft skin and brings his mouth around my nipple. Any pretense of chastity gone, he sucks at the stiff bud while his hand cups my other breast, surrounding it, kneading the flesh with his fingers. A twist of my nipple makes me squeal, my hands coming down to fist in his hair, feeling a tingling in my own scalp as I pull. He lets out a sound almost like a growl, biting lightly at my nipple in return for the pain. When he lifts his head, his eyes are wild, glittering, and he smirks at me from between my breasts. \n\n\"Didn't hurt you too badly, did I?\" he quips. \n\n\"Trust me, if you hurt me too badly, you'll know,\" I breathe. \"Stop talking...\" \n\nHe snarls and pinches the side of my breast, leaning back down and dragging his tongue down the center line of my body. His hands grip my thighs, pulling them apart as his mouth rounds the slope of my stomach below my bellybutton, and I barely have a moment to hesitate before his fingers are dipping between my labia, pulling me open to draw his tongue up along the cleft between my legs, stopping when he brushes over my clit. \n\n\"Oh, god...\" The words come out almost as a hiss as I arch my body. He takes it as encouragement, and suddenly his lips are around my clitoris, kissing and suckling more intensely than I thought possible. The wild humming of the bond and the pleasure between my thighs make for an overwhelming combination, and I shriek, pushing my hand against the crown of his dark head. My breathy pleas and begging for a moment of respite only serve to egg him on, and my next cry is punctuated by his long finger sliding inside me, curling up spectacularly to find my g spot. \n\n\"Rhys, Jesus, it's too much, please, give me a minute...\" \n\nHe pulls back to blow a stream of cool air against my pussy, his finger never letting up its assault inside me. \"I thought you said no talking.\" \n\n\"I didn't think...oh, fuck...\" Another finger slides into my dripping pussy. \n\n\"Didn't think what? Didn't think I'd make good on my promise to have you enjoy it?\" His voice is dark and steady. I look up at him to find him looming over me, his gaze unwavering, his impossibly broad shoulders almost completely blocking the light in the room as he braces himself with one hand on the bed by my hip, the other still working between my thighs. It's the most erotic sight I've ever laid eyes on. \n\nHe takes advantage of my moment of stupor to dip his head back between my legs, flicking his tongue out over my clit as his fingers continue to pump in and out of me. I'm getting close now, my hips bucking against his hand as he fucks me on his thick fingers. When he pulls them out of me and raises his head, it's all I can do not to scream. \n\n\"Don't worry little one, we're not finished.\" We better fucking not be. I pant as the bond thrums irritably, wanting him back. I want him back. Rhys rises up on his knees and fumbles with the clasp on his pants, his movements considerably less graceful, less calculated than usual. It occurs to me that this is affecting him just as strongly as it's affecting me, this need, the constant pull when we're apart. As I watch his cock come free of his pants I have a strange moment of clarity\u2014Jesus fucking Christ woman, why are you spreading your legs what the hell is wrong with you\u2014before his hands are on my knees, steadying my legs as he moves forward and pushes himself inside me, and my brain turns to static. \n\nRhys leans over me, pushing my knees toward my shoulders, his lips parting around a groan. His hips grind into my ass. My hands are fisted in the bedspread, doing all I can to brace myself as he pumps into me, little gasps escaping my lips. When he leans down further, it's to press his forehead against mine, nearly doubling me over under his weight. His hair is a curtain around us again, his big hands holding me in place against his thrusts. \n\n\"How does it feel?\" he whispers again. His voice is husky, barely more than a breath against my face. \n\nHe expects me to speak? \"It...I can't...\" \n\nHe pushes his hips up until he bottoms out almost painfully inside me, grinding his pelvis into my clit over and over again. \"Tell me, Noelle.\" \n\nI can barely breathe. Words finally form over my moans as I arch into him. \"God, it...don't stop.\" \n\nIt's barely intelligible, and it's all he needs to hear. Rhys' hands come up around my shoulders to push me down on his cock as he thrusts quickly, deeply, and the sounds that come out of me are barely recognizable, animalistic, mingling with his grunts of exertion. He's ripped his shirt off and my nails rake down his solid arms. My cunt convulses around him as I go higher, and there's a moment where his eyes flash as he feels me, his hands tightening, and then his lips are at my ear. \n\n\"Come, now.\" \n\nHis hips grind into my clit as he thrusts one more time, and I'm over the edge, the center of my chest set aflame as I climax beneath him. He follows, his grip on my shoulders tightening as he releases inside me with a groan, and I feel like I could break into a million pieces around the fantastic fire inside my chest, right where the bond tethers us. \n\nRhys finally collapses on top of me, his full weight knocking the wind out of me for a split second before he rolls off onto his back beside me. My arms and legs fall to the bed again. \n\n\"Jesus,\" I pant. \n\nRhys tips his head to look at me. \"You use that name a lot. I suppose it's the name of one of your gods, but I'd much rather you use mine in the moments after our coupling.\" \n\nHe's smirking. When did he grow a sense of humor? I can't bring myself to think of a retort. As I come down from the high, I'm realizing that everything hurts, and the afterglow only blurs out so much. \n\nRhys picks up one of my hands, rubbing his thumb over the back. \"Ah, damn,\" he breathes. \n\n\"What?\" I lift my hand to my face. Tiny purple crescents are blossoming under my fingernails, evidence of having dug them into his stupidly tough skin until they nearly dislodged from the beds. I grimace. \n\nRhys sighs. \"What did I tell you about scratching me? You almost took your fingernails off.\" \n\nI can barely work up the energy to narrow my eyes at him. \"Sorry, I'll try to behave more logically next time a giant fairy man is on top of me.\" \n\nRhys rolls to his side to face me. \"We could try it out now, if you'd like.\" He shifts closer, grinning, and I'm about to let him know he can gladly go fuck himself if he's still that worked up, but he pauses and frowns. \"Shit.\" \n\n\"What now?\" \n\nHe reaches over and presses his fingertips gently into the meat of my shoulder. Sharp pain shoots down my arm. \"Ow! What the hell, you sadist?\" I shoot up in the bed, scooting out from underneath his hand, and cup my shoulder where the pain started. When I glance down, I notice the large bruise curling around my skin. \n\n\"There's one on the other side, as well.\" Rhys' voice is stiff. \n\nSure enough. On both sides of my body, splotches of purple curve over my shoulders. \"How\u2014\" I stop when I glance at Rhys, who's looking as guilty as any given asshole possibly could. \n\n\"My fault,\" he sighs, reaching for me. \"When I held your shoulders\u2014\" \n\n\"Yeah, maybe don't do that again.\" I ignore his outstretched arms and the pull of the thread and slide off the bed, walking over to the mirror on the far side of the room to survey the damage. The bruising is ugly, but there's no broken skin. It's almost a disappointment; I would have liked to bleed all over his pretty white sheets. Our sheets. Whatever. \n\nRhys comes up behind me, his pants hanging loosely around his narrow hips. He stands close to my back but doesn't make any move to touch me. \"I apologize, Noelle. I'm not used to considering my own strength like this.\" ",
        "I push down on one of the bruises and watch him wince in the mirror. Does he feel it too, through the bond? Considering that, I press in again, harder, frowning at the pain. \n\n\"Noelle?\" Rhys' hand wraps around my wrist. \n\n\"Can you feel that?\" I murmur. \n\n\"The bruise? Vaguely. Stop hurting yourself.\" He tugs lightly. \n\nI pull my hand away, curling my arm against my bare chest. I turn around to him, tipping my head back to look him in the eye. I'm not a particularly short person, but Rhys has got to be six foot ten at the very least, and facing him like this makes me feel like a child. \n\nI stand my ground. Rhys looks back at me silently. \"My half of the deal was that I would help you understand how to treat me,\" I say finally. \"And I can't really do that without being blunt about it.\" \n\nRhys nods. \n\n\"You've shown me that you don't know how to control your own strength.\" That's putting it nicely. \"So if this is going to work, then new rule\u2014if you don't know for certain that you can't touch me without putting new bruises on me, then don't. Fucking. Touch me.\" \n\nFor a split second, Rhys looks like he's about to retort, then stops. \"Understood,\" he says. I let out a soft breath of relief at his acquiescence. \n\n\"Good,\" I say. I have no way of knowing whether this is good at all, or just another lull in the cycle we seem to be stuck in, going around and around between the Rhys who makes sweet, apologetic promises and the fierce, beautiful, terrible Rhys who seems he couldn't care less. \n\nHe doesn't move as I go to the closet. Beside it, the whitegrass notebook still sits atop the dresser, and I run my fingertips over it as I walk past. \n\n\"Do you like it?\" \n\n\"Hm?\" \n\n\"Your paper. You never got the chance to really look at it.\" \n\nI run my hand over a few hanging dresses before settling on a dandelion-colored one that catches my eye. I pull it on over my head and tie the thin ribbon that sits under my breasts. \"It's beautiful paper, but is there really much I can do with it? I don't have any magic.\" \n\n\"Wouldn't hurt to experiment.\" He strides over and picks up the book, and I stare rather stupidly at the light flex of his bicep. \"Want to try it now?\" \n\nA knock comes from outside the door. \n\n************** \n\nJerome \n\nA few moments pass before Prince Rhys opens the door, dressed only in linen pants. Noelle stands behind him, looking tired but not particularly upset. Perhaps they've begun to get along? \n\nThe prince motions for me to enter before he notices Princess Siobhan walking in behind me. His face hardens. \"You're here for Noelle?\" he says. He moves to pull a purple tunic on over his head. \n\n\"I heard tell that Eila wants to see you,\" the princess says. \"Jerome thought it would be best for me to teach Noelle a few things before you leave.\" \n\n\"Of course.\" \n\nI close the door behind us. Princess Siobhan's hands seem to shake as she pulls the vial of trench potion from her hip pocket. \"Whenever you're both ready,\" she says. \"Noelle?\" \n\nThe young woman nods and steps forward to take a drop of the trench potion on her tongue. Her face screws up in revulsion as she swallows. Prince Rhys is next, letting a drop fall into his mouth and grimacing in annoyance. \"That's that,\" he says. \"See you in a blink, Noelle.\" He barely glances at Princess Siobhan before turning to leave, which seems to bother the princess not in the least. I follow him out the door. \n\nI find myself seated on a garden bench beside the prince, staring out at the dark shapes of the scattered trees, each one as tall as thirty Fae men or more. Prince Rhys toys with the ornamental tassels hanging on the low collar of his shirt, taking one between his fingers and batting at the air. It's rare times like these when he acts more a boy than a man, and it's refreshing in a way. His usual sullen ways, quick to anger, can ever so occasionally give way to this bumbling, thoughtful persona. Perhaps he's shown more of this side to Noelle as of late? Has he given her less reason to fear him? \n\n\"Red Gem is going to be shades and shades less forgiving of a human's follies than Grass or Opal,\" the prince says finally. \n\n\"I know, Prince Rhys,\" I say. \n\n\"Siobhan will not be able to change her to a courtier in an evening. They will already meet us with prejudice the moment we step into their province.\" \n\n\"Noelle seems to be a bright young woman. She will learn quickly. Your diplomacy will fill in the gaps.\" \n\nHe twists the tassel so the silken strings bunch up over his fingers. \"We'll need to see if Opal can spare Siobhan for the time. She'll need to be there for Noelle, damn her.\" \n\nI chance a bit of lip. \"She'll do you both good. The Opal Clan princess is the only person who's ever dared to challenge you.\" \n\nTo my surprise, Prince Rhys laughs. \"That may not be true for long.\" \n\nPerhaps I was right. \"Noelle?\" \n\nHe yanks at the tassel between his fingers. \"Is it unwise to bring her to Red Gem?\" \n\n\"Not wise exactly, but not stupid either. And all things considered, do you have a choice?\" \n\n\"My mother doesn't seem to think so. Odds are, the Council and rulers of the Red Gem Clan are quite excited to meet Noelle...or whatever equivalent adjective may apply to those bastards.\" \n\nIf I didn't know better, I'd find his attitude toward Red Gem hypocritical. In truth, as abrasive as the prince is, the harsh nature of Red Gem is one above the rest, even among noble Fae. He is, of course, right to hold some concern. \n\nIn the dark of the evening, Prince Rhys' silhouette is turned out toward the copse of looming trees ahead of us. \"Did Siobhan tell you what she would be teaching Noelle?\" \n\n\"Somewhat.\" I nod. \"Some etiquette here and there, how one greets a Council and Clan rulers. Rules she might not think of. Princess Siobhan mentioned discussing with her how those of other clans might react to a human.\" The judgment Noelle has received from Grass and Opal might as well be welcoming arms and the benefit of the doubt compared to what she'll find in other clans. Outside our neighboring provinces with skin in this particular game, others will have little concern for maintaining cordiality toward Prince Rhys' wife. \n\nI can just see the prince's eyes narrow in the dim light of the low moon. \"Perhaps I'll keep her inside,\" he says. He drops the tassel he's been worrying and presses his fingers into the center of his chest. \"Cursed bond, the potion is wearing off already. I suppose we should make our way back.\" \n\nI accompany Prince Rhys back to the inner rooms of the palace, where we find Noelle and Princess Siobhan waiting just inside the door. The human woman's face visibly relaxes once Rhys is nearby. I can only imagine the discomfort caused them by being apart, exacerbated by the newness of the bond and the weakness of one half of the pair. A Fae couple would find the initial separation discomfort fading by now, the pain only occurring with significant distance. I'm not sure the pain associated with this unorthodox bond will ever fade. It's a frightening thought, for the sake of both of them. \n\nThe prince stares down Princess Siobhan. \"Eila requested your presence when we travel to Red Gem,\" he begins. \n\n\"I am aware,\" she replies. \"I have already spoken to Aodh and the Opal Council about my leaving, they will confer and give me final word by tomorrow morning.\" Never have I heard the two of them so stiff with each other. \n\nNoelle finally cuts into the ensuing silence, her voice small. \"Thank you for the lesson tonight, Princess Siobhan,\" she says. \n\nThe princess's brow knits. \"Of course,\" she says. \"I will see you all soon.\" \n\nWithout another backward glance, she escorts herself from the room. \n\n************** \n\nNoelle \n\n\"Write something.\" Rhys sits in front of me on the bed, his cross-legged stance almost too childish for him. Between us is the whitegrass notebook, open to a page. I hover over it with a pen. \n\n\"Anything?\" \n\nRhys steals a berry from my breakfast plate. \"Something for Jerome,\" he says with mock solemnity. \n\nI smirk and touch the pen to the paper. The sheet feels thin as tissue under the nib. \"Will I tear it?\" I ask. \n\n\"Of course not. You're quite weak, compared to the average Fae who would be using this. Write.\" \n\n\"Right.\" I think for a moment, then scrawl, Hello Jerome. When will we leave for Red Gem? \n\n\"Assuming you, as a human, are not actually able to send whitegrass missives, I can answer that myself: we leave tomorrow, mid-morning,\" Rhys tells me. \"Now pull the paper out. Gently.\" \n\n\"Don't doubt my prowess,\" I tell him, pulling out the paper. It tears easily at the edge, sliding out of the book. \n\nRhys snorts and takes my hands in his, placing them down on both sides of the paper. \"Now, as I told you before, you typically would not need to write anything down. But I thought you might be able to visualize it better if you did.\" He presses down on my hands. \"Push into the paper, and think about what you wrote. Think about the words, and their meaning. Think about putting them into the paper.\" \n\nI press down and think hard. A part of me feels incredibly silly; it goes unsaid that I don't have any sort of magical ability. Another part wonders if Rhys isn't just making fun of me. Part of me is fascinated to try though, like when you pick up an instrument and want to try it out, even though you've never had a music lesson in your life. \n\n\"Well, nothing is happening,\" Rhys says finally. Since we went to bed last night he's been keeping to his side of our agreement. Before I dozed off next to him, he offered to teach me how to use the whitegrass paper in the morning. \n\n\"Not surprising,\" I tell him, pulling my hands away. The paper sits quietly, unchanged. \n\n\"Want me to give it a try?\" Rhys asks. He presses the tips of his fingers into the paper and frowns. A moment later, the words I wrote on the page fade under an identical message, this one appearing shimmery and almost embossed. \"There's the thought.\" Rhys lifts the paper and holds it out in front of him. He pushes it out ever so slightly, and a moment later it's fading into the air, like it's being pushed into an invisible mailbox. I watch with wide eyes. \n\n\"My intent was to send it to Jerome,\" Rhys says. \"Let's see if it takes.\" \n\nA minute later he leans across me to pick up a sheet of paper from the bedside table that wasn't there before. On it is Jerome's message, the time of our departure written in an elegant cursive. \"Amazing,\" I say earnestly. I pull the rest of the notebook toward me, not wanting Rhys to get carried away and use any more of my paper. Inability to use it be damned, I feel a bit possessive of my magic notebook. \n\n\"Don't worry, it's yours,\" Rhys says, as if reading my thoughts. \"Who knows, maybe you'll develop magic if you get enough Fae in you.\" He winks and I try not to smack him, but the thought itself is intriguing. Could I develop magic if I'm bonded to Rhys long enough? If we stay so connected? It sounds like a long shot. Besides, I can't want magic and want to go home at the same time, and lord knows I should be focusing on the latter. Wanting magic means wanting Rhys, and the Fae, and acknowledging that I may be stuck here for at least the foreseeable future, given that this isn't some shitty coma dream. \n\nIf I haven't done all that already."
    ],
    "authorname": "HibouBleuMD",
    "tags": [
        "bond",
        "noelle",
        "rhys",
        "female submissive",
        "size difference",
        "magic",
        "fae",
        "nonconsent",
        "fantasy",
        "siobhan"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/marriage-of-the-fae-ch-05"
}