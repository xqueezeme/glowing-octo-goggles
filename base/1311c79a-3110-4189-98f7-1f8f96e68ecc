{
    "title": "The Journey Ch. 07",
    "pages": [
        "Hello, Friend, and welcome to Chapter Seven of The Journey.\n\nContent warning, this chapter contains discussions of depression, addiction and suicidal thoughts.\n\nThere is no sex in this chapter. If that's not your jam, please feel free to move on and find something more to your liking. I promise I won't be offended.\n\n~~ Day One, Late November ~~\n\n\"Viv? Hey, Viv... Earth to Viv!\"\n\n\"Hmm?\" I'd been staring out the window, lost in my thoughts.\n\n\"Where'd you go? Been talking to you for like ten minutes,\" Diego said, looking over at me, then back out the windshield as I-95 stretched out in front of us.\n\n\"Just thinking about what a pile of bullshit this is.\"\n\n\"If you go into it thinking it's bullshit, you won't get anything out of it.\"\n\n\"Whatever,\" I sighed, \"There's nothing for me to get out of this, other than getting through it.\"\n\nIt had been a tumultuous two weeks since I'd totaled Abuela's car. I'd narrowly avoided being arrested for drunk driving (thanks to some epic dumb-fuckery by the cop handling my accident investigation) and had almost, but not quite, lost my job.\n\nNot to mention my decision to intentionally drive off the woman who'd been the best thing that had ever happened to me.\n\n\"You haven't said ten words all the way down here.\"\n\n\"Nothing to say.\"\n\nThree or four more miles passed, before Diego's cell phone clipped to the dash pinged to let him know it was time to exit the interstate.\n\n\"I read up on the place. Supposed to be nice. They have a gym, a nutritionist. Even a personal trainer on staff.\"\n\n\"Yeah, I ain't gonna be lifting a lot of weights with this busted arm. Anyway... a nice prison is still a prison.\"\n\n\"It's not a prison, Viv.\"\n\n\"Whatever,\" I said again.\n\nWe passed the remainder of the trip in silence. \"Here we are,\" Diego finally said as we turned into a long, tree lined driveway.\n\nThe discreet brass sign on one of the two stone columns that flanked the driveway announced we had arrived at Pinewood Drug and Alcohol Treatment and Recovery Center.\n\n\"It looks nice,\" Diego said, gesturing at the buildings and manicured landscaping.\n\nI sighed again.\n\nDiego drove past what looked like a staff parking lot and into the main circular driveway. There were six or seven buildings I could see. We stopped in front of one that had a sign on the door that read Intake and Reception.\n\nDiego turned off the engine and got out. I didn't move.\n\nI heard him get into the trunk, slam it shut, then come around and open my door, holding my suitcase.\n\n\"C'mon, Viv. Let's go.\"\n\nAnother sigh. \"Fine.\"\n\nI unbuckled my seat belt, struggling to climb out of the car. The cast that held my left arm in a L-shape was strapped around my body to immobilize it, with a foam wedge pinned between my arm and chest to hold my shoulder in the correct position, making maneuvering difficult.\n\nDiego led me inside where a friendly looking woman waited at a desk across the rather large and ornate foyer.\n\nWe stopped just inside the door and Diego set my bag down.\n\nThe silence between us was as awkward as getting out of the car with my cast.\n\n\"I'll come see you next Sunday during visiting hours,\" he finally said, \"Virginia said she'd like to come if it's okay.\"\n\n\"I'd rather she didn't.\"\n\nHe looked hurt.\n\n\"It's not her, Dee. I just don't want anyone to see me here.\"\n\n\"I get it... They really want a family member to come for visiting day if at all possible, though. It's part of the program. I'll come by myself, though. We can talk about the week after, maybe.\"\n\n\"Thanks.\"\n\n\"We got you something,\" he said, reaching into his coat pocket. He handed me a small package. \"They're going to take your phone from you, but the website said patients can have iPods or music players as long as they don't have cell service. This one only has WiFi, but I don't think they have WiFi service here. There's AirPods in the box too.\"\n\nI felt myself soften for the first time that day. \"Aw, man. That was really nice of you. But you guys should have used that money on the down payment for the car for Abuela, not on me.\"\n\n\"Call it an early Christmas present. I logged into your Apple Music account, too, so I could download all your playlists to it since you won't be able to stream here.\"\n\n\"How did you get into my account?\" I asked in surprise.\n\nHe smiled. \"You've used the same password for every computer and online account you've ever had since we were kids.\"\n\n\"I guess that's true.\" I supposed I was a little predictable.\n\n\"I put some audiobooks I thought you might like on there too and synced your photos from your iCloud account. Although, like I said... no WiFi here.\"\n\n\"Thanks, Diego.\" I was feeling both overwhelmed and undeserving.\n\n\"You're welcome.\" We stared at the floor together for a minute. \"I should get headed back.\"\n\n\"Sure. Thanks for driving me.\"\n\n\"Listen, I know you think this is stupid, but maybe just try and get something out of it, okay? Take some time to try and get yourself right.\"\n\nI glanced at the woman at the intake desk, who was very professionally not paying attention to us.\n\n\"I'll try.\"\n\n\"Love you, sis,\" he said, then he gently hugged me around the contraption encasing my shoulder and arm.\n\nI watched him get in the car and drive back up the driveway until I heard the receptionist clear her throat. I looked up and she beckoned me over.\n\n\"Miss Esparza? Let's get you checked in and oriented.\"\n\nA couple hours later, after I'd filled out a metric fuck-ton of paperwork, gotten a basic physical, been shown my room and introduced to my roommate, and had a tour of all the facilities and meeting rooms, I was sitting in a comfortable leather chair in one of the counselor's offices.\n\nCharlie Porter, the friendly man sitting in a matching chair across from me, had explained he would be my counselor for the next twenty-eight days. I'd be meeting with groups, listening to lectures, attending educational seminars, learning nutrition and getting personal training and life skills lessons, but at least once a day I'd have a one-hour one-on-one session with Charlie.\n\n\"So, Vivian, let's start off with you telling me why you're here?\" Charlie asked me.\n\n\"So I can keep my job,\" I said.\n\n\"Tell me about that.\"\n\nI sat, mute, doing my best to burn a hole through the window with my eyes. As cold as it was out, I was surprised how many people were out, walking and talking or sitting on the benches scattered around the square between the buildings, reading or staring into space.\n\nCharlie sat across from me, equally quiet and clearly comfortable waiting for me to reply. Probably in his late fifties, he was black with a shaved head, and a salt and pepper beard. He was dressed casually in khaki pants and a comfortable sweater, and sat with his legs crossed, hands in his lap.\n\nThe silence finally got to me, but I remembered the advice I'd gotten from my Lampedo legal services attorney.\n\n\"I saw on my intake forms that I have doctor-patient confidentiality with you.\"\n\n\"That's right.\"\n\n\"Anything I tell you, you can't tell anyone else.\"\n\n\"As long as you aren't actively planning to commit a crime or to self-harm.\"\n\n\"I won't be doing either of those things.\"\n\nHe smiled at me again. \"That's good. Now that we have that out of the way, go ahead and tell me about keeping your job.\"\n\n\"I'm not an alcoholic,\" I said.\n\n\"Okay,\" he said, \"You're not an alcoholic. Why are you here?\"\n\n\"I drove my car-- sorry, my grandmother's car-- after I'd had a few drinks and got into a wreck. It was just a dumbass decision. The cops didn't charge me with anything, but one of them was pissed off he fucked up the investigation, so he called my supervisor. Told her I was DUI, but they couldn't charge me due to a technicality. But, gee, we thought WMATA would want to know that one of their train drivers drove drunk and flipped her car twice, so maybe they should look into it.\"\n\n\"I bet that pissed you off,\" he said.\n\nI felt myself smile for the first time that day. I'd been monumentally pissed off. \"You could say that.\"\n\n\"So how does that end with you sitting here with me?\"\n\n\"WMATA opened a conduct investigation on me, during which I was administratively suspended. Took a drug test, passed it. Did an interview and tap-danced my way out of that. They wanted to fire me outright, but they couldn't without any evidence. My union rep negotiated a deal where my suspension would be stretched to sixty days, unpaid, but I got to keep my insurance going. Which is fine, I guess, because my arm is going to be in this thing for six more weeks and then I have physical therapy, so I can't drive a train for a while anyway. But one of the conditions was that I have to complete an alcohol treatment program. If I do, I get reinstated with no loss of seniority. If I don't, I'm out on my ass.\"\n\n\"I see.\"\n\nI looked out the window at the fancy grounds again. \"Fortunately for me, union insurance is pretty top notch and my rep found me an advocate who got me in here. I've heard some horror stories about places like this, but you guys seem okay so far.\"\n\nHe smiled again. Seemed to be his default response.\n\n\"But you're not an alcoholic,\" he said.\n\n\"I like to drink. I never drink on the job. I never drink and drive. Or, I hadn't until this time, but that was... a day.\"\n\n\"Oh? Tell me about that day.\"\n\n\"No thanks.\"\n\n\"We don't have to talk about it in our first session.\"\n\n\"I'd prefer not to talk about it at all.\"\n\n\"Then let's talk about how much and in what situations you do drink?\"\n\n\"Shit, I don't know. Usually when I'm out dancing. Or on my bowling night. That's it.\"\n\n\"That's it?\"\n\n\"More or less. Sometimes I'll have a few beers with my roommate when we're watching a game or when I'm at my...\" I felt a stab in my gut. \"When I was at my ex-girlfriend's house.\"\n\n\"Ever drink when you're stressed?\"\n\n\"After a shitty day, I'll have a beer or two. Who doesn't do that?\"\n\n\"Do you drink to help yourself fall asleep at night?\"\n\n\"No.\" The fuck? This guy some kind of mind reader?\n\n\"When did you break up with your girlfriend? Was that recently?\"\n\nI sighed. This is going to be the longest twenty-eight days of my life.\n\n\"Isn't it irritating how friendly Charlie is in session?\" said Rhonda, my roommate, echoing my thoughts an hour later. She was sitting on her bed, watching me unpack. She was a few years younger than me, and was the first person I'd ever met who the word \"waifish\" would accurately describe. Pale skin, red hair and way too thin to be healthy.\n\nI gave a half smirk but didn't say anything as I continued to awkwardly put my clothes in my dresser one-handed. I could already tell she was going to be too much of a talker for my tastes.\n\n\"It gets more irritating, the more you talk to him. But I hear he's the best counselor, though. Some of the others are hard-asses, I hear.\" She paused, but after it was clear I had no comment, she continued. \"So, what are you here for? Oxy? Heroin?\"\n\n\"What? Shit no, I don't do that stuff.\"\n\n\"Cocaine?\"\n\n\"No! Alcohol.\"\n\n\"Huh. I wouldn't have pegged you for an alkie.\"\n\n\"I'm not an alcoholic.\"\n\n\"Sure, you're not. That's why you're at a rehab that costs twenty-k a pop.\"\n\nI turned to look at her, irritated. \"Listen, whatever my fuckin' problems are, they're my problems. I'm not here to make friends, so don't go thinking I'm gonna share my life story with you.\"\n\nShe laughed. \"Oh, are you in for a surprise! You have no idea how the program works, do you?\"\n\n\"Not really,\" I said, turning back to pull a stack of t-shirts out of my suitcase. \"You an expert or something?\"\n\nShe deflated a little, shrinking back into the pillows. \"Yeah, I guess you could say that. This is my third time in a place like this.\"\n\nSmooth move, Esparza. \"Sorry, I didn't know.\"\n\n\"It's cool. I tore up my knee in college. I wasn't an athlete or anything, I was playing sand volleyball at a frat house. I had to have surgery, then they sent me home with a big bottle of OxyContin. Flash forward to my doctors deciding I'd been going through my pills too fast, so they cut me off. Did you know Oxy is like twenty-five bucks a pill on the street? Anyway, turns out heroin is cheaper and easier to get.\"\n\nI stared at her, my mouth open.\n\nShe gave me a wan smile, rubbing her hand up and down the crook of her arm. \"We don't all look like we live on the street. I'm lucky, I guess. My parents keep trying, keep sending me to these places.\" She looked out the window. \"After my last rehab I made it almost six months before I started using again. Managed to hide it from my parents for another five months after that. Until they found me OD'ed in front of the TV in the basement.\"\n\n\"Shit, I'm really sorry I said anything.\"\n\nShe drew in a deep breath and forced a smile. \"Like I said, it's cool. I've gotten pretty good at talking about it. You will too.\"\n\nI snorted. \"Not likely.\"\n\n\"If you want to graduate from the program you will. That's about half of what we do here. Talk. And listen to everyone else talk. But mainly talk.\"\n\nFuck, really? \"We'll see.\"\n\n\"I have group in thirty minutes. When's your session? Maybe you'll be in my group. Wanna go get some coffee from the cafeteria? We can get coffee and snacks any time we want, as long as we don't miss any appointments and it's not after curfew. The snacks are just fruit and granola bars and shit. Nothing to get excited about, but the coffee is pretty good.\"\n\n\"Uh...\" I grabbed the sheet of paper the receptionist had printed for me with my schedule for the day. She told me I'd get one slid under my door by the patient assistants, or P.A.'s every evening with my schedule for the next day. \"I have group at three.\"\n\n\"Oh, you're in the session right after mine then. You've got time for coffee. Wanna go with me?\"\n\n\"Maybe later. I want to get unpacked. But thanks.\"\n\n\"See you going in when I'm coming out, I guess.\" She shrugged into a thick fleece hoodie, stomped into a pair of Ugg's and trudged out of our room, leaving the door open.\n\nI went over and shut the door, finished unpacking, then sat on the bed with the package Diego had given me, fumbling it open with one hand. There was an iPod touch, a white case with Air Pods and a small wireless charging pad that, according to a note from Diego's I found in the box, would charge both the iPod and the Air Pod case at the same time. My eyes welled up with tears.\n\nDiego had to have been so fucking pissed that I'd taken Abuela's car and totaled it. He and Virginia had taken what savings they had and put a down payment on a used car for her. He didn't get an employee discount on used cars at the dealership where he was a mechanic, only new ones. But he'd spent one of his days off combing the used car lot and found a Corolla with sixty thousand miles on it. He'd put it through the wringer, testing everything he could in the shop, making sure they weren't buying her a lemon. The lot manager had cut him a great deal, but they'd still had to borrow eight thousand dollars.\n\nThey should be saving for a house or to have kids. Not buying Abuela a car because of me. And certainly not buying me a gift like this. And I couldn't help with the money at all, at least not until I got reinstated with WMATA.\n\nBut Diego had never shown me a hint of anger. Just concern and worry. He had talked to Abuela and knew how things had gone down between us. He said she'd been too busy with work to visit me in the hospital, which I knew meant he hadn't been able to talk her into coming to see her sinful granddaughter.\n\nI looked around the room and spied a box of tissues on the tiny desk next to my bed and grabbed a handful. I was in the middle of blowing my nose when there was a knock on the door.\n\n\"Yeah?\" I called out.\n\nThe door opened and a woman stuck her head in.\n\n\"Hey, Vivian, I'm Jeri. I'm the P.A. on your floor during the day shift.\"\n\n\"Nice to meet you.\"\n\n\"If they didn't tell you at orientation, it's my job to make sure you get where you need to go, make your appointments on time, that sorta things. You've got group in just over an hour, thought I'd give you a head's up.\"\n\n\"Y-e-e-a-h, I know,\" I drew out the word out in irritation. \"I really need a babysitter to make sure I go to class?\"\n\n\"Just doing my job. We get a lot of people who don't really want to be here.\"\n\nI smiled, mirthlessly. \"I can believe it.\"\n\n\"You know where you're going?\"\n\n\"Yeah, Adams Hall. It's the big one across the square, right?\"\n\n\"Yes ma'am.\"\n\n\"Think I can make it.\"\n\n\"Alright. We'll let you find your way today. If you're late or skip a meeting then I'll start escorting you. Just so you know.\"\n\n\"Fine.\"\n\n\"Also, you're not allowed to have the door to your room closed during the day, okay?\"\n\n\"Seriously?\"\n\n\"Yes ma'am. That's the rule.\"\n\nThis place is fucked up. \"Okay. Leave it open then. Thanks.\"\n\nShe left and I shrugged into my jacket, slipping my iPod into the pocket. They'd confiscated my wallet and phone at intake, but if I wasn't allowed to close the door I'd be damned if I'd leave my new iPod in an unlocked room with a bunch of junkies walking around. Then I noticed for the first time the door didn't even have a lock on it.\n\nRhonda had been unfortunately accurate. I'd found out that the reason I wasn't in her therapy group was that all the patients in mine had been admitted over the last week. Since we were all starting the program more or less together, we were in the same group therapy session.\n\nThere were six men and four women in my group. And good God, did some of them talk. The first hour, some dude named Jeff talked about himself for more than half of the session. The counselor kept trying to steer the conversation to other patients, even trying to get me to talk once. Fortunately for me, Jeff interrupted and I let him. By the time the hour was up, I made it out of there without having said more than my name.\n\nMaybe this'll be easier than I thought.\n\nNext was dinner. Rhonda saved me a seat at her table, introducing me to some of the other patients. The food wasn't bad, if a little on the bland side. I mentioned it and one of the other women said it was because people going through withdrawal could have trouble eating and keeping stuff down. I put a reminder in my iPod calendar to ask Diego to bring me a bottle of hot sauce. Although since he could only visit every Sunday and I wouldn't get to talk to him until he came next week, I'd be halfway through the program before I could get it.\n\nAfter dinner, the entire patient population, about a hundred fifty people, gathered in the small auditorium for a ninety-minute talk from one of the counselors about being \"in recovery\" as they called it.\n\nI took every ounce of willpower I had not to pull out my iPod and see if it had any games on it. Although he did get my attention when he started talking about his own recovery. I was surprised that a counselor was a former addict, but I learned later that almost all of them were.\n\nThat evening I'd stayed in the common area of my dorm, sitting in an overstuffed chair, staring into space and listening to one of the audiobooks Diego gave me until the P.A.'s came through and herded us into our rooms at eight-thirty.\n\n\"Can't believe lights-out is at freakin' nine o'clock,\" I grumbled as I came out of our tiny bathroom.\n\n\"Takes some getting used to,\" Rhonda agreed.\n\n\"Want to play cards or something?\" I asked her, hoping she had a deck. I mentally added a deck of cards to my list of stuff to ask Diego to bring me.\n\n\"Can't. They turn the lights off right at nine.\"\n\n\"Wait, they control the lights?\"\n\n\"Yeah.\"\n\n\"That's some bullshit.\"\n\n\"You'll hate it even more in the morning,\" she said, \"Everyone has to get up at seven for breakfast. If you don't get up and start getting ready before then, they turn all the lights on for us.\"",
        "\"Fuck me. And I thought the no-closed-doors-during-the-day rule was bullshit.\"\n\n\"Well, I sort of agree with that one, after Friday.\"\n\n\"What happened Friday?\"\n\n\"A girl committed suicide. Hung herself in her room. She managed to do it when the P.A. was busy with other patients.\"\n\n\"What? You're shitting me!\"\n\n\"Nope. Three doors down,\" she said, hooking her thumb in the direction of the end of the hall.\n\n\"What the fuck? Why would you come to a place like this then just check out?\"\n\n\"There's a lot of people here who want to get clean, but there's a lot of demons too. I tried to kill myself, when I relapsed after my first stay in rehab. Didn't cut the right way, though. Fortunately, I guess.\" She pulled up her sleeve, showing me an ugly scar going across her wrist. \"The scary part is that now I know to cut the long way. Hopefully I never get to that low again now that I know that.\"\n\nI stared at her, speechless, until the public address system crackled to life, announcing lights-out in five minutes and wishing all patients a good night.\n\n\"You good now?\" It was all I could think to say.\n\n\"I guess. Time will tell.\"\n\nI laid in bed for hours that first night, trying to fall asleep. Rhonda's tossing, turning and snoring was partly to blame for keeping me up, but mostly my brain was busy arguing with itself, like it had been on a nightly basis for the last two weeks.\n\nMan, sleeping in this fucking cast is impossible. Been a side-sleeper my whole life, and now I can't so much as roll over, I thought. I miss having Jane curled up--\n\nI stirred in bed, annoyed at myself, and pain shot through my shoulder.\n\nYou don't get to miss her, Esparza. You drove her away.\n\nBecause she's too nice to cut loose a disaster case like me. She can do better. She'll be happier in the long run.\n\nYou think you did what's best for her? Or what's easiest for you?\n\nLike giving up Jane was easy. She was the best thing that ever happened to me. I wanted to be in love with Addison. I was in love with Jane. I love her. Loved her.\n\nSo you kick the woman you love to the curb to avoid having to explain your fuck up to her and own up to it? So you don't have to face the music for drinking and driving? So you can go back to pretending to Abuela you aren't who you are?\n\nFuck me, that's not what I did. That's not what I want to do. And I'm done pretending to Abuela, even if she won't ever talk to me. I'm not going to pretend to be anything other than I am, ever again.\n\nAnd yet you still haven't talked to Mam\u00e1 since the wreck. When you gonna come out to her?\n\nI sighed loudly. Rhonda rolled over, snuffling in her sleep and I held my breath, not wanting her to wake up and have her want to talk or some shit. I squeezed my eyes shut and tried to will myself to sleep. My shoulder was killing me. I had to turn in all my pain meds when they'd admitted me and I had to get them from the dispensary. I'd had my evening dose after dinner and I knew they wouldn't give me more until morning.\n\nI'm never going to get to sleep at this rate. This place is weird, the mattress sucks, my shoulder is killing me. I could really use a slug of tequila--\n\nI opened my eyes, staring at the ceiling.\n\nJust because I want a drink to make it easier to get to sleep doesn't make me an alcoholic! I just... have a lot on my mind.\n\nHave you had a lot on your mind almost every night you've slept alone for the last three years?\n\nI sighed again.\n\nThis is going to be the longest twenty-eight days of my life.\n\n~~ Day Four ~~\n\n\"Why have you never gone to visit your mother in Mexico?\"\n\nI ground my teeth. I was not really enjoying my one-on-one sessions with Charlie so far.\n\n\"Because I haven't been able to afford it. Also, I'm afraid of getting hassled by immigration when I come back. I've heard enough stories from second generation immigrants going to visit Mexico and having CBP detain them at customs for hours, even when they were born here. I don't trust myself not to punch out some agent if they tried to pull that shit on me. After which, I'd end up in a federal jail cell.\"\n\n\"Have you always been so self-aware of your anger issues?\"\n\n\"I don't have anger issues,\" I snapped reflexively. After Charlie simply smiled at me in return I realized I just proved his point for him. \"So, I have a temper. Can't say that life hasn't given me reasons for it, though.\"\n\nHe made a quick note on his pad. After our first meeting, he'd started each session with a yellow legal pad on his lap to write down... whatever bullshit he got out of me that he was writing on it.\n\n\"How often do you think your choices have given you reasons to get angry as opposed to life giving you reasons?\"\n\n\"What the hell is that supposed to mean?\"\n\n\"You told me in our first session that the officer who wanted to arrest you, but couldn't, so he called your supervisor. And that made you really angry.\"\n\n\"Yeah, it did. Asshole went way out of his way to fuck me over.\"\n\n\"But if you hadn't made the choice to go to the bar and drink, the choice to drive that day, that officer would never have been in the position to do that to you.\"\n\n\"Look...\" I cast about, thinking of some... defense. But there wasn't one. I knew that much. \"Fine. That one's on me.\"\n\n\"Are you ready to talk about your breakup yet? You mentioned yesterday that you and your girlfriend broke up when you were in the hospital.\"\n\nI heaved a sigh and rolled my eyes, looking out the window again. \"No, I don't want to talk about Jane.\"\n\n\"Okay,\" he said, then we sat in silence for a few minutes.\n\nSometimes I could feel Charlie trying to wait me out, not saying anything when I didn't want to talk about a topic, seeing if I'd give in and start running my mouth. I turned back and stared into his eyes, unblinking. I wasn't going to let this guy manipulate me like that. Unfortunately, my head was pounding. I'd been nursing a headache most of the day, and I looked away first, closing my eyes and pinching the bridge of my nose.\n\n\"You okay?\"\n\n\"Just a headache,\" I muttered.\n\n\"Mm-hmm. How are you sleeping?\"\n\n\"Not great. This cast makes it impossible to sleep on my side.\"\n\n\"How do you like the food? Did you enjoy lunch today?\"\n\n\"I didn't eat anything.\"\n\n\"Stomach bothering you? A little nausea?\"\n\n\"You trying to show off your astounding observational skills, Charlie?\"\n\n\"Are you feeling anxious? In addition to your irritability, that is?\"\n\nI dropped my hand from my face. \"What the fuck is this? What are we doing?\"\n\n\"I'm not trying to upset you, Vivian. I'm going down the list of symptoms of alcohol withdrawal. You seem to be having most of them at the moment.\"\n\n\"What?\"\n\n\"This is about the timeframe we'd expect for you to start showing symptoms of withdrawal. I'm going to guess that you tied one on the night before you came here? You're going to be cooped up here for twenty-eight days, might as well have a last hurrah before having to slog through this pointless exercise, right?\"\n\n\"No...\" I said, thinking about how I'd killed the last quarter of the bottle of Cuervo I kept on top of the fridge the night before Diego had picked me up. I mean, no sense in leaving it there for Manny to drink, right? Since I probably wasn't ever going back to that apartment again.\n\n\"So, no party. Did you drink to get to sleep the night before?\"\n\n\"Man, I told you, I'm not an alcoholic!\"\n\n\"Yes or no, Vivian, did you drink the night before you came here?\"\n\nI sat mutely, not willing to answer the question.\n\n\"How about the night before that? Or the one before that. You came here exactly two weeks after your accident. How many of those days did you not drink?\n\n\"I had maybe, maybe, a drink the night before I came here. Maybe two, if that. I can't remember. I didn't drink every night between the hospital and here.\" Only because for the first week you were high on hydrocodone for your shoulder, my brain told me, which I promptly told to fuck off. \"I'm not going through withdrawal! I just have a fucking headache. I get those when I have to talk about myself when I don't want to.\"\n\n\"Vivian--\"\n\n\"I told you, I don't drink at work, I don't drink and drive, except the one time I was a dumb fuck. I don't drink every day!\"\n\nHe sat quietly while I tried to wind myself down.\n\n\"I'm not an alcoholic,\" I said quietly after a minute.\n\n\"Have you ever heard the term functioning alcoholic?\" he asked me, as he set his pad aside and folded his hands in his lap.\n\n\"No.\"\n\n\"Well, that's what you are, Vivian. You don't drink every day, but you do most days. You don't drink on the job, but after work you come home and drink. Whether it's to relax, or to have fun, you get drunk more often than not when you do drink. You drink to help you get to sleep some nights, if not most nights. Your drinking doesn't really mess up your life in significant ways, at least it hadn't until your accident. But it impacts your mental health, your feelings of self-worth, and I'm sure it impacts your relationships.\"\n\n\"What are you, some kind of fucking psychic? Going to pull out a crystal ball next? Maybe a deck of tarot cards?\"\n\nHis smile looked slightly less patient than it had been up until now. \"Vivian, I diagnosed you the second day we met. I know you don't want to admit it, either to me or yourself, but you're a functioning alcoholic.\"\n\nI smiled mirthlessly. \"Yeah, so you say. And you figured that out after less than two hours of talking to me.\"\n\n\"Yes, I did. Because I've been doing this for a long time. Because I've treated hundreds of patients here over the last decade. And because I'm one too.\"\n\n\"What?\"\n\n\"I'm in recovery. Sixteen years next month.\"\n\n\"I... what?\"\n\n\"Before I went to school to be a counselor, I was a manager for a retail chain. I hated my job, and I drank a lot. Every night when I came home. With dinner, watching TV, before I went to bed. I'd drink beer all day, every weekend. I went to work hungover more times than I could count, but I never went to work drunk. Never drove drunk. But I'm an alcoholic. I am addicted to alcohol. I am an addict.\"\n\n\"Huh,\" I grunted thoughtfully. \"What happened?\"\n\n\"I got demoted. Even though I was never drunk at work I was late pretty often. Then I got divorced. Then I finally got help. A lot of people tried to get me to get help before I reached that point. But most people have to hit bottom before they're ready to admit they need help.\" He picked up the pad again.\n\n\"And now you're a counselor here.\"\n\nHe nodded. \"After I went through the program and got clean, I felt I needed a purpose in life, and I was pretty good at listening to people. It seemed a good fit.\"\n\n\"That's great man, I'm happy that worked out for you,\" I said.\n\nHe arched his eyebrow at me. \"Let's hear the 'but' that is so obviously coming after that sentence.\"\n\n\"I'm not an alcoholic. All due respect to your expertise, but I just drink for fun. I'm not an addict.\"\n\n\"Okay,\" he said, with a small smile.\n\n\"I've hit bottom, man. I almost lost my job. Will lose my job if I don't get through this place. I lost my relationship with my grandmother, with my girlfriend. I lost my apartment too. My roommate can't let me stay there rent free for two months while I'm suspended, anyway his daughter wants to move back to D.C. and get a job so it's the perfect time for him to kick me out after I fucked up anyway, so all my shit is in a storage space. I hit bottom.\"\n\n\"But?\"\n\nThe campus clock tower chimed, the bell sounding three times.\n\nI smiled at him for the first time that day. \"Our time is up,\" I said, standing up. \"See you tomorrow, Charlie.\" I stopped at the door. \"And, I'm not an alcoholic.\"\n\n~~ Day Five ~~\n\n\"Hey Vivian, hold up a second,\" Dwayne called out to me as the group session broke up.\n\nI stopped as the rest of the group filtered out of the room. I was getting a little tired of all the crying I was having to sit through in these sessions. I wish people would save their sobbing for when they got back to their rooms. I liked Dwayne, the counselor in charge of my group therapy sessions, though. He seemed like a solid dude. He was younger, a little cooler, less up in my business than Charlie.\n\n\"S'up man?\"\n\n\"You know the point of these group sessions is to actually talk about yourself, right?\"\n\n\"Um... yes?\"\n\n\"You've been here almost a week and you're the only one in the group I know nothing about, except what's on your intake forms.\"\n\n\"Sorry. Not my fault. Doug and Jillian are such chatterboxes.\"\n\n\"It's not, huh? Don't think I don't see how good you are at steering the conversation back to them the minute I try to get you to talk about yourself and your journey that led you here.\"\n\n\"Sorry,\" I said again. \"I just don't have much to say.\"\n\n\"Oh, I doubt that. There's a difference between not having anything to say and not wanting to say anything.\"\n\nI looked at him, irritated. \"You know, having you guys always acting like you can see through me gets pretty old.\"\n\nHe laughed. \"It's part of the job description, Vivian.\"\n\n\"Uh huh. Anyway, great session today, thanks.\"\n\n\"Next week we're going to start doing practice AA meetings, and you'll be expected to stand up and speak to the group you know.\"\n\nMy stomach clenched up. \"Yeah, I know. I read the syllabus.\"\n\n\"You're not going to get much out of these sessions if you just sit like a lump on a log and listen. You should try sharing more.\"\n\n\"I'll definitely keep that in mind.\"\n\n\"What do you have next?\"\n\n\"Health and wellness period,\" I said.\n\n\"Hitting the gym?\"\n\nI patted my cast with my free hand. \"Sure, gonna lift some iron, get swole.\"\n\nHe laughed again. \"Alright. Just so you know, I want you to start off the group tomorrow.\"\n\n\"I thought we didn't have group tomorrow because of Thanksgiving,\" I said flatly.\n\n\"I meant the next session. Friday.\"\n\n\"Fine.\"\n\n\"Have a good holiday, and I'll see you the day after.\"\n\n\"You too.\"\n\nI left Adams Hall, the biggest building on the campus that wasn't a dormitory and trudged across the quad, turning the collar of my coat up against the icy wind. Every day I had to check in at the health center, where they took all my vitals, asked how I was doing, which mainly consisted of asking me about withdrawal symptoms. I was suffering from most of what they asked me about every day, but I always said I was fine. I could deal with most of them, except the headaches. I'd developed a tremor in my left hand too, but I chalked that up to it being in a cast for almost three weeks.\n\nAfter checking in with the nurse, I walked over to the gym. Every patient was supposed to get at least an hour of exercise a day. There were trainers on staff, and they held weightlifting classes (which I'd be into except for my shoulder), yoga sessions (which reminded me of Jane, so fuck that), even tai chi (which just looked goddamn stupid.) Most patients checked in then went for a walk, some of the bigger messes just shuffling around the quad, some of the more adventurous ones hitting the walking path that went around the border of the sixty-acre grounds.\n\nI checked in with the trainer, then headed out into the cold, putting in my Air Pods as I headed towards the walking path. I selected one of my playlists and shoved my free hand in my coat pocket. Walking was about all I could do with my arm, except maybe the stationary bikes in the gym. I tried those the second day, and people kept stopping to fucking talk to me. On the trail, I'd pass other patients, walking alone or in groups of two or three, but with my headphones in I could get away with just a head nod.\n\nWalking was my time of the day to wallow. The rest of the day I had to put up my shell, so the other patients and counselors wouldn't see my cracks and pick at them. I made the mistake of letting myself think about Jane at bedtime on the second night. I'd teared up and Rhonda had badgered me for a half hour after lights out to talk about what was bothering me. I finally told her she wasn't my counselor and to get off my back. Like I needed that shit.\n\nOut here, in the cold, walking alone, I could let myself think about what my fuck-ups had cost me, what I'd lost.\n\nWhat I'd thrown away.\n\nI'd wasted three years being messed up after I drove Addison off, and I knew driving Jane off was going to hurt way worse, probably for longer.\n\nWhen I reached the back part of the property that butted up to the shore of the Chesapeake Bay, NF's Let You Down came on in my ears and my mood went from bad to fucking awful.\n\nAll these voices in my head get loud, I wish that I could shut them out.\n\nI'm sorry that I let you down, let you down.\n\nI let Jane down, just because of the person I was. Who wants to be with someone stupid enough to get drunk and roll their Abuela's car? Someone who had to go to fucking rehab. Someone whose grandmother thought that Jane was a whore who was turning me away from the path of God. It was the right thing to do, letting her go to find someone who was less of a train wreck.\n\nFeels like we're on the edge right now. I wish that I could say I'm proud.\n\nI'm sorry that I let you down, Oh, I let you down.\n\nI stopped on the path, staring across the water, letting the icy wind whip my face. The song ended and I pulled out my iPod, and played it again, then set it to repeat.\n\nGoddamn it, I thought, I'm not an alcoholic, but I could really use a fucking drink right now.\n\n~~ Day Nine ~~\n\n\"Dwayne tells me you've been having trouble in group therapy,\" Charlie said, starting off my therapy session.\n\n\"I don't know what you mean.\"\n\nIt had been a shit week for me, especially in group. We'd been learning how to participate in Alcoholics Anonymous meetings and I really hadn't been into the mood for it. Thanksgiving had sucked. It was the first time I'd ever not been with Diego and Abuela for the holiday. Not that Abuela would have had me this year. To add insult to injury, the cafeteria had provided us all with a nice, traditional Thanksgiving dinner.\n\nTraditional unless your family happened to be Mexican, that is. There was no rice, no tamales, no corn pudding with poblanos, and none of Abuela's pumpkin tres leches cake. It made being away from my family and with a bunch of strangers even more alien to me. I felt lost.\n\nThen, instead of getting a holiday weekend, I had day after monotonous day of therapy, group sessions, seminars and bullshit.\n\nI knew that's what Charlie was referring to. Yesterday afternoon, I'd finally been unable to dodge taking a turn speaking to the group.\n\n\"So... my story... What led to me coming here... I had a really bad day.\"\n\nI'd looked around. Most of my group was staring at me. A couple were staring off into space, like I usually did. I felt wildly uncomfortable, but I'd been dodging this moment since I got here. No more hiding I guess.\n\n\"A really bad day,\" I said, and my voice cracked. I cleared my throat and continued, my voice steadier. \"I... I came out to my grandmother. I'd been putting it off for... well, my entire life. But I finally had a girlfriend that made me finally want to do it. And it went about as well as I'd always imagined it would.\" I reflexively tried to cross my arms over my chest and a flash of pain went through my shoulder. I grimaced, and stuck my free hand in my pocket instead.\n\n\"A-a-a-nd, she flipped out on me. Like I knew she would. I told her-- Well... I don't want to rehash the whole conversation. It was pretty short. She basically told me to stop being a lesbian. Called my girlfriend a whore.\" I stared at the back wall of the room. \"I think it hurt more when she kept calling my girlfriend a whore than if she'd said it to me. I kinda wished she had called me that, instead of Jane. But anyway, I handled that about as well as I handled most stupid shit in my life. Got drunk. Which, I guess wouldn't have been the dumbest thing I ever did, except it was raining, so when I stormed out of my grandmother's house I took her car. Then instead of leaving her car at the bar and taking a cab home, I tried to drive it home. And crashed.\" I tried to hold up my cast, but ended up wincing in pain again.",
        "I looked around, saw sympathy on some faces. Judgment on a few. Dwayne was nodding encouragement at me.\n\n\"So... I fucked up!\" I said in a loud voice. \"I fucked up, crashed my grandmother's car. A-a-and I have to get through this place to not lose my job. So that's my story. Thanks.\"\n\nDwayne frowned as I abruptly ended my sharing session, but fuck him. I shared. It was all he was gonna get.\n\n\"I was supposed to get up and talk about why I was here. I did that.\"\n\n\"Mm-hmm.\"\n\n\"What do you want from me, Charlie?\"\n\n\"Vivian, the first step in the program is to be able to admit to yourself that you are powerless over your addiction. You can't start to address a problem until you admit you have a problem.\"\n\n\"What's my problem?\"\n\n\"That you're an alcoholic.\"\n\nI sighed, angrily. \"I like to drink. Not the same thing. I have a lot of problems, I know that. I make stupid-ass decisions. I've fucked up five ways from Sunday. I fucked up getting drunk and driving! It doesn't mean I'm an alcoholic!\"\n\n\"Why are you shouting, Vivian?\"\n\nI sat back in the chair. I hadn't realized I'd let my voice get that loud. I took in a deep breath, trying to calm down and noticed my knee was bouncing up and down furiously. I made an effort to keep my foot still.\n\n\"I don't like it here. I don't like talking about myself to strangers. I don't like sharing a room with someone. Rhonda's fine, but I want to have my own room again. I hate the food. I'm bored out of my mind. And I'm... fucking jittery all the time. I don't know why. And don't say it's because of withdrawal!\"\n\n\"Why do you think you're jittery, then?\"\n\n\"Because... I...\" I sighed, and thought about it. \"Because I'm lost. I lost my home. I came close to losing my job. I had to drop all my classes half-way through the semester at NOVA community college, and I was doing really well in them! I lost my grandmother, my family. I lost my...\" I took a deep breath, to avoid breaking into tears. \"I lost my girlfriend. And having to be here, a place I don't want to be makes it feel worse!\"\n\n\"If you weren't here, how would you deal with your feelings of loss?\"\n\nGo get a fucking drink, I thought, then caught myself. \"I don't know. Lift weights maybe. Go bowling.\"\n\n\"Mm-hmm.\"\n\nI hated when Charlie mm-hmm'ed me.\n\n\"That's the first time since our second session that you mentioned your girlfriend. Want to talk about what happened with her?\"\n\n\"No.\"\n\nHe set his pad aside and crossed his legs.\n\n\"Vivian, we're never going to make much progress if you aren't willing to open up to me a little more.\"\n\n\"I'm here. I've been sitting here, talking to you, every day since I got here. I haven't missed a single session, appointment or lecture. I'm doing what I'm supposed to do.\"\n\n\"You're doing the minimum of what we're asking, Vivian. But I don't really care if you make it through our program or not.\"\n\n\"That's nice,\" I said acidly. What the fuck?\n\n\"I want to help you. Vivian, you're in a dozen kinds of pain. But if you won't talk to me, I can't help you.\"\n\nI looked out the window.\n\nTalking about all the ways I'm a fuck up isn't going to help me. It's just going to make me feel worse about all my fuck ups.\n\n~~ Day Eleven ~~\n\nThe sky was bright and clear, for the first time since I'd come to Pinewood. I'd begun to think that the weather in Southeastern Virginia defaulted to gray and dreary. Today, the view of the Chesapeake Bay was breathtaking, the sun reflecting almost painfully off the white caps kicked up by the stiff breeze coming ashore.\n\nJane would love this view, I thought reflexively.\n\nThe basic FitBit all patients wore told me that my four laps around the grounds had gotten me eight thousand steps for the day and I'd found myself back at my favorite place at the facility, a bend in the walking path that offered the best view from the shoreline where the property bordered the Chesapeake. I exchanged nods with other patients as they passed, getting in their own exercise for the day, but was otherwise lost in my own thoughts.\n\nI'd developed what I was sure was an unhealthy habit. Every day I'd wind up at this spot, headphones in, listening to a different song. I'd start a playlist for my walk, but by the time I ended up here, I'd usually found one song that let me wallow in my grief about Jane. Sometimes it was a song that reminded me of how happy I'd been when we'd been together. Sometimes it was a song that made me realize how adrift I was without her. Today it was Don't Start Now.\n\nI was on my sixth listen, Dua Lipa's voice a painful reminder of how I was sure Jane was feeling about me now.\n\nDid the heartbreak change me? Maybe, but look at where I ended up.\n\nI'm all good already, so moved on, it's scary, I'm not where you left me at all...\n\nI wondered how long it would take Jane to move on. I had a hard time thinking that she would have gone on date with someone else yet, but she was the most fiercely independent woman I'd ever known. I was sure she'd get over me. Way sooner than I'd get over her. I could imagine her on the dance floor with her friends, joyfully belting out the lyrics, proudly proclaiming she was better than moping around because some idiot like me had broken her heart.\n\nThough it took some time to, survive you, I'm better on the other side.\n\nI'm all good already, so moved on, it's scary, I'm not where you left me at all...\n\nTears were streaming down my cheeks when I heard someone call my name. I turned to see Dwayne jogging up the path towards me. I quickly turned away rubbing my eyes, angry at being caught with my guard down.\n\n\"Vivian, you okay?\" He said, coming to a stop, breathing heavily. I'd seen him out jogging the path a couple times, on his lunch break I guess.\n\n\"I'm fine,\" I said, my voice rough.\n\n\"What's wrong? Talk to me.\"\n\nI lost it.\n\n\"Fuckin' leave me alone, man! God, I hate this place! Talk about my fuckin' feelings in the morning with Charlie! Talk about 'em in group the afternoon with you! Never a free moment to myself! I finally have a second to try and process all the shit you guys are putting me through and my fuckin' counselor runs up and gets in my face. 'Hey Viv! How ya doin, Viv? Wanna talk about your feelings some more, Viv?' I'm homesick, I'm bored, I'm frustrated and you can't even leave me alone for the one fuckin' second in the day I've found for myself!\" I turned to stomp away from him, but he caught my arm.\n\n\"Hey, hey, Vivian, hold up,\"\n\n\"What!?\"\n\n\"Listen, I don't want you to talk about your feelings, okay? Right now, that's the last thing I want. I just want to make sure you're okay.\"\n\n\"I'm not okay, okay?! I just wanna go home. And I don't even have a home to go to anymore!\"\n\n\"Okay, okay, take some deep breaths. I'll leave you alone as soon as I know you're okay.\"\n\nI gulped air, my chest heaving. Dwayne waited patiently, a look of concern on his face.\n\n\"You good?\" he asked when I had calmed down a bit.\n\n\"Not in the least.\"\n\nHe smiled. \"Fair. I told you I don't want you to talk about your feelings, but can you tell me what's going on?\"\n\n\"I dunno man. I just... I'm having a bad day.\"\n\n\"Everyone who comes here has a few of those. Sometimes more often than good days.\"\n\nI sniffed, rubbing the sleeve of my jacket across my nose. \"I can believe it.\"\n\n\"I had a patient last summer who liked to come here when they were having a bad day. One time he had a really bad day, and I wish I'd been out for a run that time.\"\n\n\"Why's that?\" I wiped my nose again.\n\n\"He decided to swim home.\"\n\nI blinked. \"He what?\"\n\nDwayne laughed. \"My reaction exactly. He dropped all his clothes right here where we're standing, walked into the water and just swam out that way.\" He pointed out towards the horizon.\n\n\"Did he live across the bay or something?\"\n\n\"He was from Tennessee, actually. He had just had enough and started swimming. A couple other patients saw him wade into the water and ran to get a P.A.\"\n\n\"Did he die?\"\n\n\"No, but he made it a long way. Some fishermen came across him about a mile out there, right when he was getting exhausted. He decided he didn't really want to drown, so he let them pull him into the boat and they dropped him back off at the shore here.\"\n\n\"That's... kinda hilarious.\" I said.\n\n\"It is. Only because he didn't die. But that was last summer. If he decided to try it now, that water is cold enough it would probably kill you in a few minutes.\"\n\nI turned from the water to look at him. \"I'm having a bad day, man. I'm not going to kill myself.\"\n\n\"I appreciate you saying that, Vivian. Not everyone plans to self-harm, though. Sometimes they just up and do it. You looked like you might be in a crisis, so I stopped to check on you. I don't need you to talk about it to me now.\"\n\n\"Thanks.\"\n\n\"I do need you to start talking about it in group with your fellow patients. And with Charlie too, if you aren't talking to him more then you're talking in my sessions. You're hurting, Vivian. You can't start fixing a problem until you admit you have a problem.\"\n\n\"I thought you weren't going to counsel me right now,\" I said, irritated.\n\nHe held up his hands. \"Fair enough. Alright, I should get going. I have another session in half an hour and I gotta take a shower after my run. No one wants to sit next to the counselor who's got the sweaty running funk going on.\"\n\nI smiled at that. \"Thanks for checking on me, man.\"\n\nHe gave me a fist bump and took off down the path.\n\nI turned back to the water. I was so tired of this place. Couldn't wait to get out of here. I wistfully thought about going to Smitty's with Connie, watching a WBNA game and doing shots and beers until I didn't care about anything anymore. I stopped suddenly.\n\nWhy, every time this place gets to me, do I want to go drink?\n\nI felt my fist clench. \"I'm not an alcoholic,\" I muttered.\n\nThen why have I been dying for tequila every day since I got here? Why is all I can think about is going to Smitty's and getting blasted right now.\n\n\"Because I hate this place. I want to get away from here, but I can't. I'm just thinking of what I can do to escape. That's all.\"\n\nThey've been telling me for almost two weeks, addicts use substances like alcohol to try and escape their problems.\n\n\"I'm not an alcoholic,\" I whispered.\n\nI'm a fuckin' drunk. I'm a dumb, piece of shit, asshole drunk. And every time I have a problem, or feel like I'm out of my league, I go get fuckin' drunk.\n\n\"So, I like to get drunk.\"\n\nA lot.\n\n\"So, what?\"\n\nSo, maybe stop spending so much fucking time telling myself I'm not an alcoholic and start paying attention to what they're trying to tell me.\n\n~~ Day Thirteen ~~\n\n\"...and I was so unsure of where I really stood with Addison. I kept seeing the way she looked at her doctor chick in my mind, I couldn't get that moment out of my head. I was stressing about it so much, I canceled our date at the last second, and then hit the happy hour at The League. I just needed to empty my head, think about what I should do. I was about three margaritas in, when this chick, Astrid, started hitting on me. At first it was just nice to have someone to talk to, someone who wasn't... Anyway, we had another drink and I just let myself forget about Addison. We started talking about sports. She mentioned there was a WBNA game that night, why don't we go get tickets? And by the end of the first quarter, we were pretty much making out. Then I looked up and Addison was standing over me.\"\n\nI looked down at the floor and squirmed my shoulder trying to get my cast more comfortable in the sling. This was the first group session where I'd actually talked about something real. I'd wanted to yesterday, but like half the sessions, Jeff couldn't stop bringing things back to himself.\n\n\"And the look on her face... I knew in a heartbeat I'd fucked up. Didn't matter whether she was still into her doctor chick. I mean, I hadn't decided one way or the other what to do about us, but if there had been any chance for us, I'd tossed it in the garbage.\"\n\n\"I had a breakup sorta like that,\" said Jeff. \"One time I--\"\n\n\"Hang on, Jeff. Let her finish,\" Dwayne said, trying to head off another Jeff derailment.\n\n\"Can I ask you a question?\" Ann said.\n\n\"Sure.\" Inwardly, I cringed. Ann had a gift for asking questions that hit people right between the eyes.\n\n\"The worst day of my life was when I got arrested for possession. I lost my job, my kid's dad has custody now. Everything came from that. But if I hadn't been on that street corner trying to buy heroin, I would have never been arrested. I was on that corner trying to buy, because I was addicted to heroin.\"\n\n\"What's your question?\"\n\n\"If you didn't deal with stress by drinking, would you have even been in the bar? Would you have even met Astrid? Gone to the game with her?\"\n\n\"No,\" I said softly.\n\n\"And whether things were going to ever work out between you and Addison, that wouldn't have been the reason you guys split up, right? Things might have been different, right?\"\n\n\"I suppose so.\" I looked away, trying to hide my emotions. \"If Astrid had come up to me when I got there and hadn't ordered yet, I doubt I'd have started flirting. I was there to clear my head, not get laid. I didn't want to cheat on Addison. I just wanted... things to be different than they were.\"\n\nThe clock tower chimed outside the window.\n\n\"Good session everyone. See you all tomorrow,\" Dwayne said as everyone stirred, ready to leave. \"Vivian, hang on a second.\"\n\nI stood and shrugged on my coat over my sling. \"S'up?\"\n\n\"I just wanted to say thank you for sharing with the group today. I know it was hard for you.\"\n\n\"A lot less hard talking about it than having it happen to me.\"\n\n\"Ah, see that's the thing, isn't it Vivian?\"\n\n\"What's that?\"\n\n\"That didn't happen to you. You did that. To yourself. It's something that wouldn't have happened if you hadn't been drinking. And you made the choice to drink.\"\n\nI huffed out a breath. \"I finally open up and you fucking drop that shit on me for it? What the hell, man?\"\n\n\"Tell me I'm wrong.\"\n\nI looked away. \"You're not wrong.\"\n\n\"The truth will set you free, Vivian. But first it'll piss you off.\"\n\nThat actually got a laugh from me.\n\n~~ Day Fourteen ~~\n\n\"Hey, Virginia! Thank you for giving up your Sunday to come see me.\"\n\n\"You're looking great, Viv! I hope this place is helping you.\" My sister-in-law gave me a careful hug around my sling.\n\n\"Yeah, I think I've lost a few pounds. Part of it is the not drinking, but most of it is that the food is boring.\"\n\n\"We brought you some Cholula, as requested, so maybe that'll help. We have all the things you asked for, actually.\"\n\n\"Sweet! Dee, how was the drive?\"\n\n\"Not bad,\" my brother said, taking his turn giving me a hug. \"The traffic around Quantico sucked, as always. We left early to make sure we'd get here on time. I got those new audio books you wanted. Do you have your iPod with you? I can connect it to my phone's hotspot and download them for you while we're here.\"\n\nI handed him my iPod and he started fussing with the settings while Virginia showed me the little box they'd brought filled with hot sauce, a deck of cards and some toiletries I'd asked for.\n\nSundays were family days at Pinewood. It was the second family day since I'd been here. Diego had come the week before and had convinced me to let Virginia come with him this time. We would have lunch together, then there was a one-hour Al-Anon meeting for the family members about helping loved ones deal with addiction, while I had a group session, then we all met in the auditorium to watch a video about the twelve-steps together. Then I'd get another hour to hang out with them before they left and the daily grind of the program continued.\n\nI'd actually been looking forward to Diego and Virginia coming all week. Partially to break up the monotony by getting to see the family I had left, but also... I'd just been feeling a little more positive this week. I still didn't think I was an alcoholic, like... addicted to alcohol. But I had come around to the idea that I did have a little bit of a problem with my relationship to booze. (A little corner of my brain was keeping track of how many times a day I thought to myself that I really wanted a drink. It was... a little worrisome.)\n\n\"Before we head over to lunch, can we sit down for a minute?\" Diego hooked a thumb towards one of the couches in the lobby of Adams hall where family members met the patients for the day. \"We have something we have to tell you.\"\n\nThe first thing that popped into my head was that Virginia was pregnant, but the looks on their faces told me it wasn't good news.\n\n\"What? What happened? Is it Abuela? Is mom okay?\"\n\n\"It's nothing like that!\" Virginia said quickly.\n\n\"What is it?\" I asked again. I'd made no move to sit down.\n\nDiego and Virginia exchanged glances, then Diego cleared his throat. \"There's no good way to tell you. There was a fire at your self-storage place.\"\n\n\"A fire?\"\n\n\"Apparently someone was growing weed in the space next to yours. They had a grow-light, and it shorted or something and started a fire.\"\n\n\"A fire?\" I said again, dumbly. \"Is all my stuff...?\"\n\n\"It's a total loss. I went down there and dug through it, but there's nothing to save. It's all gone. I'm so sorry, Viv,\" Diego said gently.\n\nI felt numb. \"My laptop? My bowling stuff?\"\n\n\"Yeah, it's--\"\n\n\"Shit, my skates!\" A part of my mind registered that they were making sympathetic noises, Virginia rubbing my arm. Before I'd gotten out of the hospital, Jane had shown up at my apartment. When Manny had answered the door, she'd wordlessly handed him a box with everything I'd left at her apartment, including my skates, then turned and left. And now all I could think of was the fact that my skates, the one thing I had left from Jane, one of my most prized possessions, was now a pile of charred leather, twisted metal and melted polyurethane. I hadn't been sure I'd ever skate again, but I knew I'd never get rid of them. And now they were gone.\n\n\"I've lost all of her now.\"\n\n\"What?\" Virginia said. I hadn't realized I'd whispered it out loud.\n\n\"Nothing. Well... I guess that'll make moving easier. Not that I have anywhere to move to.\"\n\n\"We've been talking about that,\" Diego said, \"When you get out of here we want you to come and stay with us. Until your paychecks kick in again and you find a place to live.\"\n\n\"You have a one-bedroom apartment.\"\n\n\"But a very comfy couch.\"\n\n\"Dude, I'm not going to sleep on your couch for a month.\"\n\n\"We can make it work!\" Virginia said. \"We'll move a dresser into the living room, and--\"\n\n\"Listen, I appreciate it. But I don't want to impose on you guys like that. Plus, I don't think I can sleep on a couch with this cast.\"\n\n\"It's not just that, Viv...\"\n\nI looked at Diego. He looked worried. \"What?\"\n\n\"In the session I sat through last weekend, the guy said that you're going to need a lot of support when you get out of here. You know... to not start drinking again.\"\n\nI rolled my eyes. \"Thanks man, but let's stick a pin in that problem and wait a few weeks, okay?\"\n\n\"But--\"\n\n\"I said I don't want to talk about it now.\"\n\nAnd I didn't.\n\nI couldn't.\n\nBecause all I could think of for the rest of the day was skating around Jane's neighborhood, her holding my hand. In my beautiful, red skates.\n\n~~ Day Sixteen ~~\n\n\"You're quiet today,\" Charlie said.\n\n\"Don't have much to say.\"\n\nWe'd been sitting quietly for at least five minutes, after I'd given one-word answers for the first five minutes",
        "\"What's on your mind?\"\n\n\"Nothing, that's why I don't have much to say.\"\n\nHe set his pad on the side table next to his chair. \"Vivian, do you have the impression that I'm bad at my job? That I don't know when you're upset?\"\n\n\"No.\"\n\n\"Then tell me what's going on?\"\n\nI pinched the bridge of my nose. \"I'm just tired, man. I don't sleep well here. It's not because of booze. You said yourself that alcohol withdrawal only lasts a week.\"\n\n\"Withdrawal symptoms, yes. But you've self-medicated yourself to sleep with alcohol for a long time.\"\n\n\"Whatever. I just can't sleep.\"\n\n\"And you're tired.\" He looked at me skeptically.\n\n\"I'm tired of everything, man. I'm tired of this place. I'm tired of shit happening to me. I lost someone I thought could be the love of my life. Then I found someone who was the love of my life. Then my grandmother told me to quit being a lesbian, so I wrecked her car. Then I lost the love of my life! Then I ended up here, and I fucking hate it here! Then my fucking storage space burned down this week, and I lost everything I had! Every single thing I own in the entire fucking world now is back in my stupid fucking dorm room in a fucking rehab center!\"\n\n\"I'm very sorry to hear that.\"\n\n\"Thanks, that makes it all better,\" I snapped sarcastically.\n\n\"I know it doesn't. But I'm sorry, nonetheless.\"\n\n\"Bad shit keeps happening to me and I'm fucking tired of it. I want to spend a day in bed, and you guys won't let me. Get up at seven, breakfast with the patients! I can't fucking do anything to deal with my shit and I'm tired!\" I was aware I was close to shouting but I didn't really give a shit.\n\n\"Can I ask a question?\"\n\nI sucked in a deep breath, trying to calm myself down. \"Sure.\"\n\n\"How much of your frustration is because you can't go to a bar to blow off steam?\"\n\nI lost it again.\n\n\"Jesus fucking Christ, Charlie!\" I yelled, supremely pissed off. \"Of course, I'm pissed about that! I've lost everything! And yes! I want to go get fucking blasted, okay! I want to go to my bar, and order a beer and a shot and have my bartender bring it to me then slam both and order another round and then another until I can't see straight anymore and all this shit goes away for at least a little while!\"\n\nHe handed me the box of tissues from the coffee table between us. I'd started crying.\n\n\"I've lost my life, Charlie! Even if I manage to get my job back, I lost a semester of school! I lost my apartment, I lost my girlfriend, and now I lost the skates she bought me! The only part of her I was going to get keep! Fuck, I just remembered I've lost the suit she bought me because she thought I'd look hot in it! I've lost every little piece of her! And I can't even get fucked up to forget about it for one day!\"\n\nThe room was silent for a while.\n\n\"I'm sorry you're having a tough time.\"\n\n\"Whatever,\" I sniffed, holding a wad of tissues to my eyes.\n\n\"If you could go get drunk tonight, what would be different tomorrow?\"\n\nI took a deep breath, once again trying to calm down. Instead I got the hiccups.\n\n\"Nothing.\"\n\n\"So, what's in it for you?\"\n\n\"I just... I just need to stop thinking about everything for, like... a minute.\"\n\n\"Vivian, getting drunk to forget your problems won't make them easier to deal with. But it does make you make bad decisions. It's a depressant, so it can make your brain take the worst possible outlook on things.\"\n\n\"I've been listening to you guys for two weeks. I know all this.\"\n\n\"Then why are you fighting so hard to avoid saying it?\"\n\n\"Saying what?\"\n\n\"That you're an alcoholic.\"\n\n\"What do you mean? I've been telling you for a week that I know I've got issues.\"\n\n\"Yes, you keep saying you 'have issues with alcohol', or you 'know you don't have the best relationship with alcohol'. But you won't say that you're an alcoholic.\"\n\n\"Man--\"\n\n\"I'm not splitting hairs, Vivian. This program can work, but only if you want it to work. You're more than halfway through your stay here, and you haven't accepted step one. You haven't admitted you're powerless over your addiction, that it's made your life unmanageable.\"\n\nI felt fresh tears welling up. \"Because I don't want people to know I'm a loser.\"\n\n\"Being an alcoholic doesn't make you a loser, Vivian. It's a disease. A disease that can be overcome, if you are willing to work on it. I'm a recovering alcoholic. Dwayne is a recovering heroin addict. You think that driving drunk and crashing your grandmother's car makes you a loser. You think that cheating on Addison, instead of confronting her with your relationship problems makes you a loser. You think that whatever happened between you and Jane makes you a loser. By the way, we still need to get you to talk about her to me.\"\n\nI tried to snort, but it came out as a half-sob.\n\n\"But those things didn't happen because you're an alcoholic. They happened because you were drinking. You don't have to do one because of the other, but to get there you have to admit you have a problem.\"\n\nI sniffed, then wiped my nose with the wad of tissues in my hand. He was right. I'd been dodging it since I got here. And I knew it. When I'd come out to Abuela, she'd reacted just as I thought she would. And instead of talking to someone, Jane or Diego, or maybe Connie, I sat in a bar by myself and drank enough booze to floor most people. And then I'd gotten behind the wheel.\n\nI looked up, but Charlie was just regarding me patiently. That damn, encouraging smile on his face.\n\nWhen I'd been unsure of my footing with Addison, I'd gone to the bar. Alone, but ended up leaving with Astrid. Hell, even when I didn't have bad shit going on... I'd gotten drunk when I'd gone to The Hideout, met Lacy, and ended up breaking her ex's nose. I could have easily gone to jail that night.\n\nFuck, I'd even gotten drunk the night I met Jane's parents. If they hadn't been able to tell, it was only because I was good at hiding it.\n\nGood at being drunk.\n\nWhat had Charlie called me? A functioning alcoholic? God damn that described me. For that matter, how often had Jane even known I was drunk? I don't think she ever said anything about it, all the time we were together. I couldn't begin to count the number of times I'd gotten myself buzzed while I'd been with her.\n\n\"I...\" I looked up at Charlie again. \"I think I'm an alcoholic.\"\n\n\"You think so?\"\n\n\"I'm an alcoholic.\" I felt a rush of tension leaving my chest. Something I'd been unaware I'd been holding on to. I felt like I could suddenly breathe, for the first time in forever.\n\nI felt tears on my cheeks again, but this time it felt like... relief rather than grief or frustration.\n\n\"I'm an alcoholic.\"\n\n\"That's good, Vivian. Now we can actually work on that problem together.\"\n\n\"Can you do something for me?\"\n\n\"Sure, what do you need?\"\n\n\"Can you call me Viv?\"\n\n~~ Day Seventeen ~~\n\nI'd woken up earlier than usual and snuck out of the dorms just before sunrise. I'm sure the P.A.s would have words for me if they'd caught me, but I imagined they'd be busy trying to get everyone else up for breakfast. The newbies required the most prodding to get them moving. Who really gives a shit about curfew at six in the morning, anyway? I wanted to get my walking in early, so I'd bundled up against the morning frost and hit the trail. After I did my four laps, I headed for my Introspection Spot (copyrighted and trademarked, all rights reserved).\n\nI liked my dance playlists for walking. Most of the songs were the right beats-per-minute to keep a good pace, but invariably, I ended up stuck repeating some song with lyrics that I tortured myself with by the end of my laps. Yesterday's torture song had been Cool, and I'd wallowed in exactly how much that song reflected how Jane had made me feel when we'd been together... Rhonda made fun of me with how much Dua Lipa I played in our room.\n\n\"What's wrong with Dua Lipa?\" I'd asked.\n\n\"Nothing at all. She's the most aggressively bisexual woman on the planet. I can respect that.\"\n\nThat had given me one of the rare good laughs I'd had in this place.\n\nI had noticed that as much music that I was listening to, I'd had exactly zero urge to dance. I didn't so much as nod my head along with the music anymore, and I'd begun to wonder if trying to give up alcohol would also mean I'd never dance again. If everything I'd been through had killed that part of myself.\n\nI hadn't settled on a song to punish myself with when I reached my bend in the path, and Time Of Our Lives came on. The song had always been one of my favorites. Anytime I was in a club and that song came on, if I wasn't on the dance floor, I'd head that way pronto.\n\nI know my rent was gon' be late 'bout a week ago. I worked my ass off, but I still can't pay it though.\n\nI was unmoved, as usual when the song came on, and I stood on the path staring at the Bay.\n\nBut I got just enough, to get up in this club. Have me a good time, before my time is up. Let's get it now!\n\nThe cold wind made me really wish I could zip my coat up, but with my cast it wasn't really an option. Pitbull got his groove on as I looked out over the waves.\n\nThis is the last twenty dollars I got, but I'ma have a good time ballin' tonight!\n\nTell the bartender, line up some shots, 'cause I'ma get l-o-o-o-o-s-e tonight!\n\nI snorted a laugh. I liked Pitbull a lot, but almost all of his songs had to do with hitting a club, doing shots, random hookups. Melancholy settled over me as I realized that if I wanted to beat this addiction, my days of going to clubs might be done. I couldn't imagine hitting La Zona De Baile, dancing my ass off and not being able to have a mojito. Or four or five. The thought of my favorite dance club made me sad, thinking about when I'd taken Jane there for the first time. She'd looked so goddamn good in that black dress. She took such joy in everything. That's what I was going to miss about her the most. That and the kissing. She was so good at kissing.\n\nNot for the first time, the thought crossed my mind that even if I could beat my addiction... did I want to? I'd lost Jane. I lost Abuela. What was the point? Maybe I could get sober and stay sober, but I wasn't at all sure about that. Even with my revelation with Charlie yesterday, my acceptance that I was an alcoholic, that I had that burden, my decision that I wanted to beat it... Holy fuck, did I want to go drink. Even this early in the morning. I wanted tequila. Right at this moment an hour after sunrise, I wanted tequila.\n\nHow was I supposed to go on if it was always going to be like this? I looked out at the icy waters of the Bay, remembering what Dwayne had told me about the guy who'd stripped down, waded into the water and started swimming. How Dwayne had said in the winter, the cold would probably kill you in minutes. Hell, with my broken wing, I'd probably drown before I'd gotten yards anyway.\n\nThe song came to the break towards the end and Pitbull spoke in my ear.\n\nThis is for everybody going through tough times, believe me, been there, done that.\n\nBut every day above ground is a great day, remember that!\n\nA shudder went through my body. Why was I thinking like this?\n\nNe-Yo, chimed in, his voice filled with joy.\n\nO-o-o-o-h, I want the time of my life, yeah! O-o-o-o-h, baby, give me the time of my life!\n\nI felt my toe start tapping in time to the music. I was so surprised that I looked down to make sure I hadn't imagined it. The song ended, and I skipped back to the beginning, set it to repeat. By the time it played through the second time, I could feel my hips shaking the slightest bit.\n\nI could have died. I should have died, I thought, the image of the ugly scar on my side where the tree branch that had shattered my arm, punched through my rib and collapsed my lung swimming into my mind. It could have gone into my heart or spine. I could be dead.\n\nI could feel my shoulders moving, as much as I could with the sling. Most of the stabbing pain was gone, but it still twinged pretty good if I moved it wrong.\n\nI don't want to be dead. Every day above ground is a great day, compared to the alternative, I thought.\n\nI nodded my head in time with the beat and turned up the volume as loud as it would go.\n\nAbuela doesn't want me in her life if I am going to be who I am, be out to her, but that doesn't mean I can't still make sure she's okay. If I can get sober... I can go back to school. Two more semesters and I'll have my associate degree. I doubt WMATA will ever let me in the apprenticeship program after what I've done, but I'll still have tuition reimbursement. If they won't let me in, then fuck 'em. I'll find some school around DC that will let me finish a four-year degree and go be an engineer for real. Jane wanted me to do that for myself anyway. I'll get my bachelor's degree and get a real job, and then I can make sure Diego has what he needs to take care of Abuela, even if I'm not a part of her life.\n\nI spun around, my good arm above my head, grooving to the music. The song started over again, and now I was bouncing up and down like I was on the dance floor. By the fourth time it started over, I was moving like crazy, doing cross-over steps, bouncing back and forth, spinning in time to the music.\n\nI've lost Jane. But she made me want to be better. If I can stay off the booze (fuck, I don't want to go the rest of life without booze) maybe I can stop being such a fuck-up.\n\nI spun in place, my eyes closed, my free arm moving, my feet a blur. My shoulder was starting to ache, the dull throb growing into a sharp pain. The wound in my side was on fire, but I didn't care.\n\nI'll always miss her. I may never get over her. But I want to always remember the good parts. It was almost all good parts with her. She made me happy. Addison made me doubt myself, made me feel like I wasn't worthy. She never loved me, she was all about her doctor chick. Jane made me the best version of myself. Or, the best version I could be while I was drunk, I was still a fuck up. Maybe if I can kick it, I can be an even better version. I don't want to spend my entire life regretting what could have been with Jane. I want to remember how good I had it with her, even if for the short time we were together. I--\n\n\"What the fuck!?\" I screamed.\n\nI'd opened my eyes as I completed another spin and found Dwayne standing on the path, watching me with a grin. I pulled my Air Pods out of my ears.\n\n\"Those were some killer moves, Vivian. I didn't know you were such a great dancer!\"\n\n\"How long have you been standing there!?\" I said, my chest heaving from exertion.\n\n\"Just a few seconds. I could see you getting after it from all the way down the path.\" He hooked his thumb back towards campus.\n\n\"You should really let a girl know when you're sneaking up on her.\"\n\n\"I called out to you twice. Guess you had your volume up a little too loud.\"\n\nMy heart started to slow down from the scare he'd given me. \"I guess so.\"\n\n\"So, what's the occasion? What's got you in the mood for dancing? That's the most positive emotion I've seen from you since you got here.\"\n\n\"Well...\" I said, then considered my answer. \"I guess maybe I turned a corner this week.\"\n\n\"What corner was that?\"\n\nI smiled at him. \"I'm an alcoholic, Dwayne. And I want more than anything to go get a margarita right this second, right now at eight in the morning, but I also know that I want to try not to be that person.\"\n\nDwayne smiled at me and gave me a nod. \"That's great Vivian! Let's talk about that in group today.\"\n\n\"Okay,\" I said, with a smile of my own. \"Call me Viv, though.\"\n\n\"You got it, Viv.\"\n\nHe gave me a pat on my good shoulder and took off to resume his run, and I put my Air Pods back in, pulled my iPod out of my pocket and hit pause. I felt that if I kept playing music, I'd keep dancing and I didn't think that would be very good for my shoulder, which was hurting like a bitch, so I swiped up the app to go to the home screen to switch to the Audible app to start a book.\n\nI stopped in confusion. There were several red notifications on my home screen, showing I had a ton of texts and emails.\n\n\"What the hell?\"\n\nOh, Diego connected this to his phone to put my new books on it yesterday. It must have downloaded all my mail and shit.\n\nI looked around guiltily to make sure I was still alone on the shore. Patients weren't supposed to have contact with the outside world while we were here. I'd heard occasionally a patient would be caught with a smuggled cell phone. Something like that happens once, you get a warning, Twice and you get kicked out.\n\nI'd tell Charlie about it in our session today. I wanted to be honest. But...\n\nI opened the text app. Some from Connie. Just a couple from Diego. He knew I was here. A few from Manny and the other guys on my bowling team. I made myself not read them and closed the app. Then I thumbed open the email app, scrolling through the messages. I told myself I wouldn't read any, unless Abuela had emailed me. Every now and then she'd actually send an email, although usually only when she wanted to send me a shopping list or something. I was scrolling through hundreds of new emails, when I was struck by lightning.\n\nMessage from: Dr. Jane May\n\nSubject: Hello\n\nMy thumb trembled as I opened the message. I was confused and disappointed for a second when the message appeared to be blank, but then I noticed the attachment. A video. I touched the icon and my heart skipped a beat as Jane appeared on my iPod.\n\nI could tell she was sitting on the padded bench built into the front window of her living room, leaning back against the bookcase, her knees drawn up. She didn't look at the camera for several seconds. Finally, she turned and her eyes pierced my soul.\n\n\"Hello...\" Then she paused, seeming to gather herself. Her recorded voice sounded like an angel in my ears. She cleared her throat and continued, her voice steadier. \"Hello, Viv. I hope that you're okay. I've written about six emails to you, but as usual, my writing got dense and didn't do a good job of getting across what I want to say concisely and I kept deleting all the drafts. So...\"\n\nI smiled, but felt my lips quiver. She looked out the window again, gathering her thoughts.\n\n\"Your friend Connie walked into my office at school last week. She... ah... has a forceful personality.\"\n\nI couldn't help but grin the tiniest bit at that completely accurate description of Connie.\n\n\"She told me that she caught you and her friend Mindy kissing in the bathroom, but she confronted Mindy about it after you went into the rehab place. She told me she wanted me to know that Mindy admitted she came onto you but you didn't do anything. Didn't want to do anything.\" She sighed heavily. \"I can't pretend to understand what happened to you. To us. Because you didn't talk to me about it. Instead you lied to me and sent me on my way. I can't understand why you'd drink and drive. Or why you would lie to me about hooking up with Mindy. It's clear you wanted me out of your life.\"\n\nShe looked down, her eyes moist.\n\n\"I don't really get it. But... you made your choice, I suppose. It is what it is.\"\n\nShe looked back to the camera and her face held resolve.\n\n\"I hope you aren't really the person you told me you were at the hospital. I don't want the sadness that would bring to you in your life. I hope you get the help you need. I hope you conquer whatever demons you're fighting. I'm sorry I didn't see that you had a problem. I'm sorry things didn't work out between us. I'm sorry that... Well... about a lot of things. I hope things work out for you. I hope you finish your degree and get into the engineering thing at Metro, and... She heaved a sigh. I didn't get to say goodbye and that's been bothering me. So... Goodbye, Viv. It was fun.\"",
        "When Dwayne came around on his second lap ten minutes later, I was still sitting on the path, crying.\n\n~~ Day Twenty-Seven ~~\n\n\"You okay?\" my roommate Laura asked me as we walked towards the cafeteria.\n\n\"No, I'm jittery as fuck,\" I said, \"Hope getting some coffee in me will help.\"\n\nRhonda had finished her twenty-eight days and left five days ago. Saying goodbye had been bittersweet. I was happy for her, she seemed to be doing well and was hopeful she could stay clean. I'd walked her to her car and met her parents who had driven from Philadelphia to take her home. Rhonda had said some nice things about me to them.\n\nI'd come to really appreciate having her around as someone I could gripe about the food, group sessions, curfew and other bullshit. I felt a... I dunno, a loss, a feeling of being less than settled at having my routine changed by her absence. We'd exchanged email addresses and promised to keep in touch, let each other know how we were doing with our sobriety.\n\nThey'd moved Laura in with me that same afternoon. Apparently, in rehab, they didn't like patients having a room to themselves. I'd found myself in the role Rhonda had played for me, showing Laura around, introducing her to other patients. She was five years older than me, which made the way she so obviously was looking up to me, like a big sister, feel super weird. Charlie said that was all part of the program, the patients who had been here longer being examples for the newbies.\n\n\"You being nervous when you're about to graduate doesn't help my nerves much,\" she said as we walked into the cafeteria and over to the coffee station.\n\n\"You're doing fine. How's your stomach, by the way?\"\n\n\"They changed my anti-nausea medication, doing a little better today.\"\n\nLaura had been going through some pretty bad withdrawal since she got here. I hadn't realized until just this week that the vast majority of patients here were drug addicts, outnumbering us alcoholics three-to-one. Laura had been addicted to Oxy, and had been throwing up a lot. She'd told me the nurse said she could suffer from symptoms for anywhere from one to three weeks.\n\nWe doctored our coffees to our tastes, I grabbed a granola bar and we headed back out of the cafeteria.\n\n\"You got your group next, right?\"\n\n\"Yeah,\" she said sourly. \"I hate it.\"\n\n\"I did too, but my advice is to jump in with both feet, even though you hate it and it sucks.\"\n\n\"Why?\"\n\n\"Because eventually, you'll start appreciating it. It took more than two weeks for me to start feeling it was helping me, but now I feel like I cheated myself out of two weeks of help and I'm getting ready to get kicked out of here.\"\n\n\"Hmm.\"\n\n\"Something to think about. Anyway, I'm headed over to Charlie's office. Catch you at dinner?\"\n\n\"See you then.\"\n\nI made my way to the counselor's wing. Charlie's door was open and I knocked on the door frame.\n\n\"Good morning,\" Charlie greeted me. He was already in his chair and at my appearance he turned off his phone and picked up his pad as I shut the door behind me.\n\n\"Still need that pad? I won't see you after today. I mean, I hope I won't be back here again. What are you going to write down?\"\n\nHe smiled and set the pad aside. \"Force of habit. How are you feeling this morning?\"\n\nI blew out a long breath. In the last ten days I'd gotten really open and honest with Charlie. And with the therapy group. Once I'd let go of my hang up about talking to people about my shit, my shit seemed a lot less daunting to me. But I was still jittery as hell today.\n\n\"I'm nervous as fuck, man.\"\n\n\"Tell me why?\"\n\n\"Because, I check out of here tomorrow. I was given a month to try and get a grip on my problems, and I wasted the first half of that. And now I'm going to some freakin' half-way house, where I'm not going to know anybody. I won't have daily group, I won't have you, and to be honest, I went to bed last night thinking about how much I want a margarita.\"\n\n\"Viv, you may have the urge to drink your entire life. But if you keep working at it, if you stick with the program, you may be able to reduce that urge to background noise.\"\n\nI took a deep breath through my nose, nodding my head. \"I'm just... scared. I've spent my whole life fucking up, and it's going to be so easy to fuck up again. Right now, there's no booze within probably five miles of here and I can't leave anyway.\"\n\n\"It's true, alcohol is available anywhere out there in the world. In some ways, alcoholics have it tougher than drug addicts in that regard. You're always going to be in situations where it's around.\"\n\n\"So, what do I do?\" I asked quietly.\n\n\"Stick with the program. Do the work. The half-way house our social worker got you placed in has a structure. It's looser than here, but stick with it, it'll help. You have ninety days there to transition back into managing your own routines before you'll really be on your own. Don't break their curfew, follow their rules. Even when they piss you off.\"\n\nI smiled a little.\n\n\"It's also a few blocks from a church that has meetings twenty-four hours a day. You know we want you to go to thirty meetings in the first thirty days. If you feel you need more than one meeting a day, go to as many as you feel you need. The most important thing you can do is find a sponsor that you feel like you can trust. Then trust them. Talk to them. Call or text them when you feel like you need to drink.\"\n\nI nodded again.\n\n\"When do you go back to work?\"\n\n\"My suspension ends mid-January, but I don't get my cast and sling off until a week after that, then I have a few weeks of physical therapy. I start back to classes at NOVA the week after New Year's though. Thanks for getting me some phone and computer time to set that up, by the way.\"\n\n\"I'm glad you're jumping back in.\"\n\n\"Yeah. I'm kinda pissed, though. I'm taking all the same classes that I dropped to come here, so I'd already done half the work, but my laptop is a puddle of melted metal and plastic now, so I've lost all that.\"\n\n\"That sucks.\"\n\nI laughed bitterly. \"Yeah, it really does. At least I'll be familiar with all of it.\"\n\n\"What are you going to do about all your stuff?\"\n\n\"The storage place offered me a settlement. I didn't have insurance on my stuff, but their fire suppression systems didn't work as well as they'd promised, I guess, so they gave me seven grand. I can't replace everything, but I'll be able to buy the most important stuff. I'll probably start by getting a laptop.\"\n\nI lapsed into silence, contemplating the dark cloud of the future ahead of me.\n\n\"What are you thinking about?\"\n\nI gave another laugh, this one not so bitter. \"The me that came here a month ago wouldn't believe I'm saying this, but I'm scared to not have you when I'm out there.\"\n\n\"You have that list of therapists in your area. I put a check mark beside the two I know personally. I think you'd like either of them.\"\n\n\"Yeah... but...\"\n\n\"But what?\"\n\n\"I'll be meeting with them once a week, at most. I meet with you every day. I think I need that.\"\n\n\"Daily therapy isn't a luxury most people can afford. I wish it were different.\"\n\nI bit my lip. \"I'm such a fucking mess.\"\n\n\"You are a mess, Viv. But there's two things you need to remember about that. One is that you make choices. Owning your past choices, trying to make better ones, is all part of the process of healing. Not drinking can help you make better ones. Keep your eye on the ball.\"\n\n\"I know,\" I said, nodding. \"I know that.\"\n\n\"The second thing is that while you won't have a session every day, it is vitally important for you to keep going to therapy. You have abandonment issues. Really big ones. Your father died when you were very young. He may not have meant to leave you, but he left you nonetheless.\"\n\nI looked away, clenching my jaw.\n\n\"Your mother was deported. Again, not something she wanted, but she left. Addison emotionally checked out on you while you were in a relationship with her. Your grandmother forced you away, when you needed her the most. These things happened to you. These things caused you a lot of damage. You need to deal with that, in therapy.\"\n\n\"Is this your version of Good Will Hunting? Saying it's not my fault over and over until I cry and we hug?\"\n\nHe let out a soft chuckle. \"No, but I'll give you a hug if you want one.\"\n\n\"Man, if I'd known how many addicts become huggers, I'm not sure I would have come here. Everyone in my group wants a hug after every session now.\"\n\nHe laughed a little louder at that. \"Viv, I am not saying everything that's happened in your life is your fault. But you made decisions that brought you here. You need to own those, and take responsibility for them. There's a reason that step eight is to make amends to the people we've wronged. It's an important step.\n\nMy stomach flipped at the idea of making amends for all my shit. To Abuela. Diego and Virginia. Manny, the other guys on my bowling team. Jeez, would I need to apologize to Bow-head or Astrid? How would I even find them?\n\nJane.\n\n\"The one thing I'll say is that even though you spent the first half of your time here in denial, fighting me, you've turned your attitude around as much in two weeks as many patients do in twenty-eight days. You're doing good work Viv. You just need to keep it up.\"\n\n\"Thanks.\"\n\n\"And if you relapse, don't give up! Go to meetings and talk about your failures. Talk to your sponsor. Some people get out of here and stay sober their entire lives. Most people don't. Most people have weak moments, and give in. The most important point for you to really absorb is that this place, this program, these twenty-eight days, they aren't a cure for you. It's all just been the start of a journey.\"\n\nI nodded, not trusting myself to speak. After I admitted to myself I was an alcoholic, I just wanted to be cured of being an alcoholic. I wanted to get through this program and get on with my life. But everything I'd learned since had told me that this program was just the beginning. It was going to be a long road.\n\n\"You okay?\"\n\n\"Yeah,\" my voice cracked. I cleared my throat and tried again. \"Yeah, I'll be okay.\" I sniffed. \"I think I'd like that hug now.\"\n\n~~ Day Forty-Two, Springfield Virginia ~~\n\n\"My name's Viv, and I'm an alcoholic.\"\n\n\"Hi, Viv,\" the sparse crowd in the basement of the church echoed back to me.\n\n\"It's been one day since my last drink.\" I sighed. \"I relapsed. It was my first since rehab. I don't even...\" I reached under the edge of my cast with my finger, trying to scratch an itch on my wrist. I couldn't wait to get this thing off next week. \"It was like I was watching it happen to somebody else. I was coming home from my first day of classes, and stopped at the grocery. The halfway house's food is absolute shit.\"\n\nA couple laughs and nodding heads from some people who had obviously been through the same system I was in.\n\n\"The whole time in the store, all I could think about was school. I'm in all the same classes I took last year, but I'd had to drop out to go into rehab. I'd gone into this semester thinking I could just redo all the work I'd done before I quit.\" I shook my head. \"Every class but one has a new professor and a totally different syllabus. Just like that, all my plans for the semester, up in smoke. I just let my frustration keep going 'round and 'round in my head. I don't even remember checking out at the grocery, I just remember walking down the strip mall, the weight of plastic bags cutting into my fingers, and then stopping in my tracks in front of the liquor store. Staring at the Cuervo ad in the window.\"\n\nI looked around the room for judgment, for disapproval. I didn't find any.\n\n\"Next thing I know, I'm standing around the side of the building, pounding a pint of tequila. And...\" I felt my bottom lip quiver, but I clamped down on it. I cleared my throat instead. \"I'd never been the kind of drunk who would just drink tequila out of the bottle. I was a club drunk or bar drunk.\"\n\nI thought about it for a hot second, then shook my head.\n\n\"That's not true. I drank tequila straight from the bottle most nights, before I went to bed. But I'd never bought a bottle and slammed it in the parking lot.\" I rubbed my eyes with the back of my hand. \"I had it halfway down when I realized what I was doing. I threw the bottle at the dumpster. Missed, of course. Then shoved my fingers down my throat, and made myself puke. Didn't matter. I still got a buzz off it. My first in over a month.\"\n\nNow I did feel tears coming on. Goddammit.\n\n\"I was so fucking ashamed, for being so fucking weak, that I couldn't even make myself go to a fucking meeting yesterday, couldn't face it. But I called my sponsor this morning and he dragged me here.\"\n\nI looked across the room and got a nod of encouragement from Jack.\n\n\"Which... is the right thing to do. I fucked up.\" I reached into my pocket. \"My one-month chip,\" I said, holding it up. I turned and tossed it towards the trash can next to the door. I missed, and it bounced off the wall and clattered onto the floor.\n\n\"That would have been a lot cooler if I'd hit the can,\" I said, getting a few laughs. \"I fucked up. But I... I have to look at it as a stumble on my journey, not the end of it. I fucked up, but I didn't die, I didn't hurt anyone, I didn't hurt myself. And tomorrow, hopefully, I can come back here and tell you that it's been two days since my last drink. And the day after that I can say it's been three days. Then four. One day at a time.\"\n\nI stood there, awkwardly, thinking.\n\n\"I guess that's all I have to say today.\"\n\nThere was supportive applause as I headed back to my seat. As I sat down, my sponsor put his arm around my shoulder and gave me a careful squeeze.\n\n\"Thanks for making me come, Jack,\" I whispered to him as the next person went up to speak.\n\n\"That's what I'm here for Viv. Next time, if there is a next time, don't wait a day to call me when you slip up. Got it?\"\n\n\"I got it.\"\n\n~~ Day Fifty-Three ~~\n\nI was as nervous as I'd ever been in my life. I felt like I was going to throw up. My feet were about to decide to take off down the street without my brain getting a vote, when I heard her footsteps coming down the wooden stairs.\n\nJane slowed, as she caught sight of me through the big window in her front door, and paused a couple steps from the bottom. I lifted my hand in a half-hearted wave.\n\nThe sight of her took my breath away. She was in the faded, worn out denim overalls she always wore on Sunday mornings when she cleaned her apartment. A pink t-shirt with BLM printed in giant letters on the front and a matching pink head wrap completed her look. The pile of curls over her head was bigger and bushier since I'd last seen her.\n\nI could see her wrestling with herself, but after a heart-stopping moment she grabbed her winter coat off the hook next to the door, shrugged it on and came out on the porch. Which was all I could have hoped for. In no universe had I ever expected her to invite me in.\n\n\"Hi, Jane,\" I said.\n\n\"Hi.\" Her face was unreadable.\n\n\"I know this is... I know you weren't expecting to see me. Like, ever. And, let me say first off that I'm not here to try and get you back or anything.\"\n\n\"That's probably for the best.\"\n\nI nodded. \"Yeah... Yeah...\"\n\nThere was awkward silence. She seemed willing to let me talk, but wasn't interested in giving me anything to work with.\n\nI nodded again. \"Right. So... I'm here because I wanted to tell you that... I'm an alcoholic.\" I took a deep breath. \"I'm in recovery now... Well, sorta. I'm having a tough time with it. But I'm working the program and one of my steps is to atone for the hurt I gave people when I was drinking.\"\n\nHer head tilted a fraction of an inch to the side as she listened to me.\n\n\"I'm really early on this one. I'm still working on the moral inventory of myself. Sorry, that's technical bullshit, but--\"\n\n\"Step four.\"\n\n\"What?\"\n\n\"That's step four, right?\"\n\n\"Uh, yeah.\"\n\n\"Atoning to those you've wronged is step eight. After Connie told me you went into rehab, I went to a couple of Al-anon meetings.\"\n\n\"You did what?\" I blurted.\n\nShe narrowed her eyes. \"Not because we're ever getting back together. I wanted to better understand what you were going through so I'd be able to better understand it myself, so I could move on.\"\n\nIn spite of the stab of pain those words sent through me, I couldn't help but smile a little. Of course, Jane had researched AA. It was the most Jane thing she could have done.\n\n\"Yeah, atonement is step eight. And there's no one I feel worse about how I wronged them than you. I'm doing a little better, but I'm still struggling. So, this is kinda selfish of me, but I thought that if I could at least apologize to you, it might help you. And if I can give you any peace, that would help me. A lot.\"\n\n\"What for?\"\n\n\"What?\"\n\n\"What are you apologizing for, Viv? That's the most important part of an apology.\"\n\nI'd thought about this exact moment. A lot.\n\n\"A month ago, I would have been apologizing for being a fuck up. For hiding most of my drinking from you. For drinking and driving. For lying to you. I did cheat on Addison, by the way. I should have told you that, the day we ran into her. I'm sorry for all of that, but it's not what I'm here to apologize to you for.\"\n\nHer eyebrow arched and I ached. She did that anytime I'd said something she thought was interesting.\n\n\"What are you apologizing for then?\"\n\n\"You and I were in a relationship, probably the best one I've ever been in. But a relationship is a two-way street, and I hid a lot of things from you. How much I was drinking. How much I didn't think you could actually be happy with me in the long run. Because I hated myself and if I hated myself how was it possible you could ever really love me? But I never talked to you about any of that, never trusted you enough to let you in. And then, when I fucked up so bad, instead of talking to you about why it happened, or what I was struggling with, I pushed you away to avoid having to face the music. To avoid owning up to my mistakes.\"\n\nJane was like a statue.\n\n\"I took your decision about us away from you. I'll never know if we'd have worked out. I think I'd have been happy if we had. Fuck, I know I would have. But I couldn't let myself believe that we would. I thought that I'd never be good enough for you. But I didn't let you be a part of that decision. Didn't show you the trust that you deserved, that you'd earned. So... That's what I'm here to apologize for. For taking away your right to make a choice.\"\n\nThe cold January wind whistling down the street was making my cheeks ache. Her face was an emotionless mask.\n\n\"Thank you for listening. All the times in rehab I imagined this moment I thought it was fifty-fifty you'd even open the door for me. I'm really sorry, Jane. About everything. I wish I'd been a better person back then. I'm not really that much of a better person now, but I wanted you to know I'm trying to be.\"\n\n\"I'm... glad you're getting help.\"\n\n\"Me too.\"\n\nWe stood there, staring at each other for what seemed like eternity.\n\n\"Well, I should get going.\"\n\nI forced myself to turn, walk down the steps, head down the street.\n\nDon't look back, Esparza. If you do, you'll come undone.\n\n\"Viv?\" Her voice stopped me in my tracks.\n\nI couldn't help it, I stopped and turned. She was at the edge of the steps, looking down at me, hands shoved into her coat pockets.\n\n\"Don't read too much into this, I... I don't want this to mean more than it does, but... do you want to go get a cup of coffee? Just to... talk for a while?\"\n\nTo Be Continued...\n\nThank you for reading this chapter of The Journey, Friend. I appreciate your votes, but comments are what inspire. Please let me know what you thought of my latest installment.",
        "Special thanks to my beta readers, ArmyGal33, AvidReader223, GinnyPPC and Bramblethorn. As always, extra special thanks to AwkwardMD for her editing skill and story advice. She's the best sounding board an author could ask for.\n\nIf you are struggling with substance abuse, please find help. You can reach out to AA dot org (for alcohol addiction) or SAMHSA dot gov (for narcotic addiction). If a loved one or friend you know is struggling, you can find support and resources for your own self-care at Al-Anon dot org.\n\nThis chapter came much more quickly than any other chapter in this series. (It's a lot easier writing Viv healing that self-destructing.) I really burned through this, because I knew I needed to get this out after leaving you the way I did in Chapter Six. Chapter Eight is in the works, but may not come as quickly. Your patience and understanding are always appreciated."
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "alcoholic",
        "rehab",
        "alcoholism",
        "lesbian romance",
        "gay",
        "gay romance",
        "love story",
        "latina",
        "hispanic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-journey-ch-07-2"
}