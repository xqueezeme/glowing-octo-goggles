{
    "title": "Beth & Michael",
    "pages": [
        "1.\n\nBeth had been the girl of Michael's dreams for about as long as he had been interested in girls.\n\nShe broke into his consciousness in middle school. Beth was coming out of the AP math classroom talking and laughing with a friend, and she plowed right into him. His books scattered. He was scrambling to grab his belongings when he saw them ... her legs. Beth Anderson had the best legs in the whole school -- in the whole world, as far as Michael was concerned. He was so entranced that he momentarily froze just staring at them.\n\nHe was snapped back into reality by Kim Carson's, \"Nice move, Emo!\"\n\nRed-faced, he stood up and found himself eyeball-to-eyeball with the owner of those legs. Beth wrinkled her nose in embarrassment and said, \"Sorry! Maybe I should try actually looking where I'm walking. Do you need some help?\"\n\n\"Uhm ... no ... I'm ... it's okay. It was just an accident.\"\n\nShe gave him a cockeyed smile. \"Yeah. I'm good at that.\" Michael just grinned. He was having a hard enough time keeping his breathing going.\n\n\"Well ...\" she said to break the awkward silence, \"Guess I'll be off to wreck someone else's day.\"\n\n\"Yeah. That'd be good,\" he blurted, so captivated by her beauty that he was paying no attention to her words.\n\nHer gaze turned quizzical, and she just answered with a slow, \"Okay. Well ... off to English.\" Madison King, with whom she had been talking, was on the verge of rupturing an internal organ as she looked at Beth and took in this whole debacle.\n\nThey continued down the hall, and Michael stared after them. He slowly came out of his fog long enough to recall the conversation. \"That's be good!?\" he said to himself in horror. \"Jesus, what an asshole!,\" he remarked as he banged his forehead with his notebook. His classmates were walking past him, laughing and making numerous rude comments.\n\nIt was certainly no surprise to him to discover at the opening football game that Beth was a cheerleader. One look at her leaping on the sidelines, and Michael knew he was never going to miss a game. He always planted himself in a prime Beth viewing area as he cheered on the mighty Hurricanes. He may not have been able to tell anyone the final score, but he could tell intimately describe every freckle, curve, and muscle on those incredible legs.\n\nFor the next couple of years, Michael could only watch her from afar. The only class they managed to have together was biology. When Mr. Patterson, the teacher, began calling out lab partners, Michael actually started a silent prayer. It didn't work. He got Mason Speck with his chronic sniffling and world's largest braces.\n\nThe summer between Michael's freshman and sophomore year in high school was the summer he discovered that God heard his prayers after all. Beth's family was suddenly in need of a bigger house because her grandmother was moving in with them following the death of her grandfather. Of all places, they picked the vacant house right across the street from Michael's family.\n\nSince Beth liked to run and Michael was on the track team, they started going on runs together. They'd talk and laugh. Michael gradually loosened up around her, and they became friends. In fact, their families also got to know each other, and they would frequently get together for barbecues or pizza. Michael's dad was an ex-Marine, and Bill Anderson followed him around like a little kid asking him questions and listening to his stories. Beth's grandmother reminded Michael a lot of his own grandmother, who lived so far away that he rarely got to see her. Michael bonded quickly to Grandma Carrie and vice versa. Beth adored her grandmother and would often just sit in the background and watch Michael talk to Carrie. He was so kind and caring toward her, that Beth was deeply touched. Over that summer, they became best friends.\n\nOnce school started, Beth certainly didn't suffer from a lack of companions. Such was the life of a cheerleader, but none of her girl friends really held a candle to Michael. She learned to trust him, to admire him, and he became the one person with whom she could share any thought or feeling and know he wouldn't judge her.\n\nThey shared friend stories and school stories. They also shared dating stories, but Beth had a lot more stories than Michael. Beth at one time or another had dated Scott, the starting quarterback; Ben, the starting point guard; Kelly, the star pitcher on the baseball team; and a host of other assorted jocks. The top athletes in the major sports were high school male royalty, and the cheerleaders were the female equivalent. Michael was on the tennis team and ran track, but since he wasn't one of the studs in one of the major sports, he always figured Beth was just way out of his league when it came to dating.\n\nMichael's longest-term girlfriend was Katie French. She was cute and funny and a talented actress and musician. She had dreams of working on Broadway some day, and Michael thought she might just have a chance.\n\nThey dated for about a year but just seemed to drift apart over the summer. Michael was a little sad, but, frankly, every girl came up short when compared to Beth anyway. So, he really wasn't all that heartbroken.\n\nStill, Beth invited him over for a night of chocolate chip cookies and movies as soon as she heard about it. She was always there when he needed her.\n\nThe best and worst time for Michael came during summer pool time. His family put in a pool in the spring of Michael's sophomore year. So, his house basically became Beth's house in the summer. They even gave her a key of her own to the gate around the pool. She never used it though. She didn't feel right going swimming without Michael there, but she appreciated the gesture.\n\nBeth had three bikinis and all of them were killers. She would usually come over around noon. The routine was basically the same. They'd lube themselves up with sunscreen, decide on their music for the day, put together some snacks and drinks, and spend the rest of the day sunning and splashing. Michael was truly in heaven, but it wasn't uncommon for him to find the need to dream up some excuse to go inside and secretly \"relieve himself,\" before his package delivered an embarrassing surprise. \"Great. I've become Judge Reinhold,\" he said to himself, in reference to the famous Phoebe Cates scene in \"Fast Times at Ridgemont High.\"\n\nThough Beth's legs would always be Michael's favorite feature, every inch of her was now vividly burned into his memory. She had silky, straight chestnut hair that cascaded down to the bottom of her shoulder blades. It was peppered with highlights of both coffee and honey. She usually kept in a pony tail that often stuck out of the back of a Cardinals baseball cap, which had been her dad's passion since he was a kid. \n\nHer skin was naturally a light peach color, but she always tanned easily. So, in the summer, it turned a deep, golden brown. She had long, dark eyelashes; almond-shaped, milk chocolate eyes; topped with thin, slightly arched eyebrows. When she embarked onto one of her stories, he would get so lost in them she would sometimes have to snap her fingers and announce, \"Earth to Michael,\" which was always followed by a smirk and an eye roll.\n\nShe had an angular face with high cheekbones and a buttery complexion. He couldn't ever remember seeing a single blemish on her. Her nose was pert ... straight and narrow and fit her face perfectly. Her lips were lush and full, carnation-colored, and virtually always in some stage of a smile. Beth was not only funny; she was one of the happiest people he knew. Michael never tired of watching her face explode into a sunrise whenever she laughed.\n\nBeth had a long, feminine neck and a sleek, toned body. In addition to cheering, she had spent a few years studying gymnastics and ran five miles every day. Trim broad shoulders; toned, muscular arms; and a strong back led down to chiseled abs. Her hips sloped into a classic hourglass shape. Her ass was firm and smooth and rounded either a bikini or jeans to equal perfection.\n\nThe hours she spent running, jumping and tumbling were most noticeable in those Beth legs. Her legs weren't just slim; they were the legs of an athlete. She had a prominent delta at the top of her thighs. Her muscles were taut and well-defined. He loved the way arc of her calves led down to sleek ankles and long, slender feet. Even her willowy toes were sexy.\n\nSince Michael's parents both worked, he and Beth always had the house to themselves on weekdays. Beth hated seeing tan lines underneath her clothes, so one day she sprang the idea of topless sunbathing on him. She explained that she felt so completely comfortable around him that she had no fear of him seeing her body ... but ... she would never ever do anything that would make him uncomfortable or would in any way harm their friendship. Michael considered the request while he struggled to keep his head from exploding. He gave an Academy-Award-winning performance in the calm manner way in which he said it would really be no different than seeing his sister without her top. Beth beamed, thanked him, and even gave him a kiss on the cheek for being so understanding.\n\nHe made sure he was sitting when she untied the straps of her top, tossed it on a table and began to apply a liberal coating of sunscreen over her pert mounds. Michael did his best to appear nonchalant, but Beth did notice that he casually draped a towel over his lap and smiled knowingly. Beth's breasts were as firm as the rest of her. They had a slight cone-shape and rose high off her chest. She had small, round, coral areolas that sat on the upper third of her b-cup and had few bumps. Dimpled carnation buds emerged from the center and jutted out for nearly and inch. He had admired those nipples for a long time, because they always seemed to be at attention. Michael had spent many a masturbatory hour fantasizing about how they would feel in his fingers and taste on his tongue.\n\nMichael had also caught glimpses of her lower stairway to heaven. One of her bikini bottom poofed out in the front, and he had been able to get a bird's eye view of the area above her vagina on a few occasions. He learned that she kept her pubic hair pretty much shaved and left just a thin patch of trimmed curls leading down to her sexual port. Though he didn't have a complete view of her loveliness, he had seen enough of the outline of vaginal lips through her wet bikini bottoms to know she was as perfect there as everywhere else. Michael sometimes speculated that it might be just as well that he hadn't sampled her treasure because in doing so it was possible he'd expire on the spot from sheer delight.\n\nOn this particular July day, the sun was an absolute oven. It was 98 degrees and sultry. The pool was their only refuge. Michael made a giant pitcher of iced tea, brought out some fruit, and they quickly assumed their usual positions on the lounges after applying thick coatings of sunscreen.\n\nBeth had been quiet today, like she was lost in thought. She had only recently gone through a messy breakup with her latest boyfriend, who had practically leapt into the open arms (and legs) of Carol Strum. Carol was no saint. She had big boobs, a big mouth, and a reputation for giving it away freely. Beth had been hurt by Steve's abrupt exit the moment Carol's stable became empty. She hadn't realized he was so shallow, or hadn't wanted to admit it.\n\nMichael was half asleep when she blurted out, \"Michael, do you think I'm sexy?\"\n\nHe had to shake his head to make sure this wasn't one of his fantasy dreams. \"Excuse me?\"\n\n\"You heard me. Am I sexy?\" she asked, sitting up and looking straight at him.\n\n\"Beth, half the guys in school dream about being with you, and the other half are gay.\"\n\n\"Come on, Michael. I'm serious. Am I sexy? You can't get out of this by being glib. I want to know what you really think\"\n\nMichael now sat up and looked into her penetrating eyes. She wasn't joking. \"Why are you asking me this?\"\n\n\"Why are you avoiding a simple answer to a direct question?\"\n\n\"Beth, you are ... beautiful. You're one of the most beautiful girls I've ever seen.\"\n\n\"Yeah, yeah, okay, I'm cute. What about sexy? What about the drooling and losing sleep kind of sexy that guys are always looking for?\"\n\n\"Okay, I'm lost here, Beth. What is this about ... that bimbo, Carol?\"\n\nShe threw the sunscreen at him. \"You're a lot of help!\"\n\n\"Wait! Wait!\" He reached out and took her hands in his and turned her toward him. \"Okay, I'm sorry. I've just been caught a little off guard here.\"\n\n\"Yeah, well -,\" she sat back in a huff with her arms folded.\n\nHe reached for one of her hands and pulled her chair toward him.\n\n\"Beth, you're the best friend I've ever had and probably ever will have.\" She rolled her eyes and tried to break free, but he tightened his grip.\n\n\"Listen to me. Stop and just let me finish. You're an amazing person. You're breath-taking and talented. You're smart and funny. You're sensitive and caring. You make GREAT chocolate chip cookies!\" She smirked but kept herself from laughing. \"You are absolutely everything any normal, decent guy could ever hope to have in his wildest dreams. Are you sexy? Are you kidding? God, you are without any doubt the sexiest girl I've ever seen, known, heard of, or dreamt about. You are perfect.\"\n\nShe pulled hard and did break free. Then, she stood and paced as she talked. \"Well, if I'm so damn irresistible, how come guys like Steve toss me aside and grab the first big-boobed, hooker tramp ... like Carol ... they can find?!\"\n\n\"'Cause they're so thick, scientists are gonna have to invent a whole new category of stupid just for them ... and they're way too much in love with themselves to ever love anyone else. You know, every time something good happens to me, you're there to share it and to make it even better. When shitty things happen, you're there to pick me up and to let me know I don't have to deal with it on my own. I don't have to wonder; I know you've got my back. \n\n\"Beth, I know you don't have a clue how gorgeous and amazing you are or we wouldn't even be having this conversation. But, let me tell you, when you look in the mirror and see that perfect body and that dazzling face, you are only seeing about one-millionth of one percent of your total beauty. And, and if guys like stupid Steve Masterson are such dickheads that they can't see that, they don't even deserve to talk to you, much less date you!\" Michael had now gotten himself so worked up he was now marching up and down, waving his arms and shouting.\n\n\"You know, I'm not sure if the people over on Canyon Circle heard you. Maybe you stop being so constrained,\" she said as a way of breaking the tension.\n\n\"Yeah ... well. It just ... I mean, dammit, Beth, I get really pissed off when I see you get hurt by another low-life loser like Steve or Scott or whatever ass-wipe is responsible this week. And, if I wasn't so worried about embarrassing you, I'd happily kick the living shit out of every single one of those douche bags!\" he shouted, still pacing rapidly.\n\nBeth walked over to him and snatched his hands. \"Hey, Rocky Balboa, thanks for offering to beat up all the losers in my life,\" she said with a grin, \"but I think I'd rather have you here than in jail, if that's okay.\" He did smile but he was still furious.\n\nThen, she threw his hands down, put her hands on her hips and said in mock irritation, \"And what about me? I've been having a pretty terrific pity party for myself for the past couple of days, and you, mister, have just ruined the whole thing! I mean, how's a girl supposed to feel crappy about herself with YOU storming around making her me feel like hot stuff!'\"\n\n\"You ARE hot stuff -- and-\"\n\n\"Shhhhhhh. I know. To you, I am hot stuff.\" He started to argue again, and she put her finger to his lips to stop him. \"And, that's good enough for me. Really. I mean that.\" She hugged him tightly. \"Thanks, Rocky.\"\n\n\"For what?\"\n\n\"For listening to me be crazy. For threatening to beat up all the dickheads in my life. For actually making me feel special. For just loving me.\"\n\n\"Well ... you are pretty hard to love.\"\n\n\"I know,\" she said with her cheek still pasted to his chest.\n\nUhh ... I was kidding.\"\n\nShe hugged him tighter. \"I know.\"\n\nThey stayed like that for a long time. Michael always had a way of making her feel safe and exceptional. She hung onto him with all her strength. He rested his cheek on top of her head and held her tightly too. She never ceased to be amazed at what an incredible guy he was. He was certainly going to make some girl very happy.\n\n2.\n\nIt was late in the 4th quarter, and Michael's Hurricanes were down by 10. It didn't look good for the home team this time. At 4th and 13, Scott Larsen found Benny Chamberlain all alone on a fly pattern. He sailed a perfect pass over the defenders and watched Benny stroll into the end zone untouched. There were only 32 seconds left, and everyone knew an onside kick was coming. The kick was perfect. It hit the ground and bounced high into the air about 12 yards downfield -- unfortunately, right into the tall, outstretched hands of 6'10\" Carl Laramie, the part-time football receiver and All-County forward on the Mustangs basketball team. The Hurricane defenders looked like little kids trying to swat something from a grown-up. Game over.\n\nThe crowd was crushed. The loss meant they wouldn't be in the playoffs this year. Beth was also disappointed, but she was more concerned about the pissy mood Scott would be in later. They had started dating again, against her better judgment. Michael watched from afar, as usual. He could never understand why Beth continued to date shit-for-brains morons. Oh, well ... nothing he seemed to be able to do about it.\n\nBeth was supposed to meet Scott at a party that night at Larry Kovacs' house. Most of the team would be going, which meant plenty of beer and plenty of testosterone. She wasn't sure she could handle too much of either tonight. She didn't usually fix people up, but tonight, she arranged for Michael to take Annie Peters to the same party. She figured she could always bum a ride home if things got too weird. Annie was also a cheerleader. She was blonde and cute and one of the few girls on the squad who actually had a working brain. Part of her hoped the two of them would hit it off; part hoped they wouldn't. Michael only agreed to go out with Annie because Beth pleaded with him with those irresistible umber eyes. He consented but knew he was going out with the wrong cheerleader.\n\nMichael and Annie drove Beth to the party. They arrived before most of the team got there, but the drinking had definitely commenced. Mason Jennings was peeing off the front porch and letting out a war cry as they walked up to the house.\n\n\"Classy,\" Annie said as she rolled her eyes. \"You know, they say the burning will go away with penicillin,\" she yelled at Mason as she walked past.\n\n\"Huh?\" he stammered in dumb response, as he turned and peed on his own shoes.\n\nMichael and Beth both cackled. Maybe Annie wouldn't be so bad after all, Michael thought.\n\nUpon entering the house, they surveyed the chaos, and Annie said, \"Didn't I see this party in 'Animal House?'\"\n\n\"Yeah ... in the deleted scenes,\" Michael answered.\n\nJust then a drunk, topless girl ran jiggling past them and was being chased by an even drunker guy with a pirate eye patch, Valentine boxers, and cowboy boots.\n\n\"Was that Aaron Miles?\" Beth shouted to be heard above the din.\n\n\"Yeah. That explains a lot,\" Annie replied. \"If he can't manage to catch a slow-witted naked girl, how's he going to catch passes next week against Brainard? Listen, I'm gonna find a quiet place to vomit, so save me a seat, okay?\" Then, she sauntered off in search of an unoccupied bathroom.\n\n\"So, what do you think?\" Beth eagerly asked Michael.",
        "Michael put his chin in his hand, arched an eyebrow in an academic pose and reported, \"Hmmm ... Cynical, acerbic, excellent orthodontia ... she has some potential, Ms. Anderson.\"\n\nBeth chuckled. \"Thank, God! It's about time you got laid.\"\n\n\"Keeping score, are you?\"\n\n\"Yes,\" she laughed, \"and you're in the bottom of the 8th with no one on base and the pitcher is coming up to bat!\"\n\n\"Thank you. Thanks for that vote of confidence!\" \n\nBeth snorted and punched Michael in the arm. \n\nThe trio had been there for almost two hours before the rest of the team started arriving. It was easy to see they had gotten a head start on the drinking. The offensive line was currently running inebriated formations on the front lawn against the Kovacs' maple trees. Barry Peoples was playing air guitar with one of Mrs. Kovacs' favorite vases on the coffee table. Trey Kelly was offering to whip off his jock for any girl who would flash him her tits. Beth watched all of this with great disdain and was about to ask Michael and Annie for a ride home when Scott scooped her up from behind.\n\n\"Hot damn, Bethy. You look good enough to eat!\" He tried to plant a big sloppy kiss on her, but she turned quickly away from his rancid beer breath.\n\n\"Gross, Scott! You smell like an Annheiser-Busch outhouse.\" She struggled to get away from him and, at least, got her feet back on the floor.\n\n\"Ah, come one, Sweetcakes. Don't be like that. It was not such a good night on the field tonight, so I could use some lovin'.\" \n\n\"You could also use an introduction to hygiene and a cold shower,\" she shot back.\n\nHe pulled her to him again, put his hand in her shirt, and forced a kiss on her.\n\nShe stomped on his foot so he would loosen his grip, and she pushed him away. However, Scott still had her shirt in his hand, and when she pushed away, it ripped down the middle. She was now furious and embarrassed to be standing there in half a shirt and a disheveled bra.\n\n\"You asshole! If you want some good lovin', go fuck yourself!\" She turned to Michael and asked, \"Can we please go?\"\n\n\"Well, we will miss the chamber music recital, but there's always next time.\" She was too irritated to smile and kept heading for the door with Michael and Annie close behind.\n\nOnce they were outside, they heard some commotion behind them and turned to see Scott and a couple of his pals running after her.\n\n\"Hey, baby, don't go! The fun's just beginning!\" \n\n\"let's just keep walking,\" she instructed Michael and Annie. Scott caught up with them, grabbed Beth's arm and spun her around hard.\n\n\"Ow! You're hurting me!\" she cried.\n\n\"Fuck this,\" Michael said to himself, seething. He grabbed the wrist of the hand Scott was using to hold Beth and pinched his pressure points. Scott screamed in pain and immediately let her go. Then, Michael stepped behind Scott, slammed his forearm into Scott's chest, pushed him backwards and swept his left leg out from under him. Scott hit the ground with a heavy thud.\n\nScott hopped up, ready for a fight. \"You fucking faggot. Who the fuck do you think you are?\"\n\n\"I appear to be the faggot who's kicking your ass,\" Michael calmly replied.\n\nScott swung a wild right cross at Michael, but Michael just stepped coolly out of the way. Scott's momentum carried him back to the ground.\n\nAbout that time, one of Scott's teammates tried to grab Michael from behind so that Scott could finally hit him. Michael reached around and grabbed the guy's jacket, rotated his hips, and threw the attacker over his shoulder to the ground. Two more teammates started running from the house to join the fray. Michael turned to face them and got into fighting stance. As Scott tried to sneak up on him from behind, Michael planted a back kick to his groin and used a back fist to whack the bridge of his nose -- all without ever even bothering to turn around.\n\n\"Listen, shitheads. Fun is fun, but I'm starting to get annoyed. No one's gotten hurt so far.\"\n\n\"You son of a bitch! You broke my fucking nose!\" Scott screamed as blood poured onto his hands and shirt.\n\n\"Mostly anyway. But, the next butthead that tries to touch me is gonna limp away with a broken knee, capiche?\"\n\nThe two drunken bruisers stopped and turned to look at each other.\n\n\"I'll get you for this, asshole!\" Scott yelled at Michael, as Michael walked past him. \n\n\"Yeah, well ... chicks dig scars,\" Michael replied in passing. He led Beth and Annie by the hand to his car.\n\n\"Michael, what the fuck just happened?\" Annie asked as soon as they were driving away.\n\n\"Hey, I'm not just a pretty face, you know.\"\n\n\"Where'd you learn to fight like that?\"\n\n\"My dad was in the Marines.\"\n\n\"Yeah,\" answered slowly. \"So, what's that got to do with what I just saw?\"\n\n\"He was a self-defense instructor in the Marines. He's been teaching me for years.\" Beth was very familiar with Michael's training and his dad's skills. In fact, they had taught her some moves too. Actually, she now wished she had used them on Scott herself.\n\n\"Wow, Mr. Barrett, you are just full of surprises,\" she remarked bemusedly.\n\nHe looked in his rearview mirror at Beth. \"How are you doing back there, Lois?\"\n\nBeth was looking a little shell-shocked but glanced up at his reflection and answered, \"I'm doing okay, considering I just had to be rescued by Superman.\" He kept switching his view from the road to Beth for most of the ride. Annie kept going on and on about the evening, and he gave occasional, \"Uh, huhs,\" so she would just keep babbling. He watched Beth turn her head and cry, and he unconsciously started clenching his fists. It was a very good thing that fuck-face Scott wasn't there at the moment.\n\nFinally, Beth regained her composure. \"Looks like I'm single, again, guys. Either of you know of anyone who's in the market for a half-naked cheerleader?\" she asked as she sniffled.\n\n\"Yeah, I think I do,\" Michael said to himself.\n\n3.\n\nIt was Saturday afternoon, a month before graduation, but the heat was already unbearable. Michael and Beth baked by the pool as long as they could stand it. Then, they dove in.\n\n\"Is this global warming?\" Beth asked as she stood in the pool with her head resting on her arms on the pool's side. \"This is worse than August.\"\n\n\"No kidding.\"\n\n\"Where did your parents go again?\"\n\n\"Ohio. I have a cousin getting married, and it had been awhile since they had been back to see family.\"\n\n\"Why didn't you go?\"\n\n\"What? And leave all this?\" he said, referring to the heat.\n\n\"Well, at least you've got me,\" she said as she sucked in her cheeks and struck a fake supermodel pose.\n\n\"Yeah, Cindy Crawford, at least I've got you.\" He inched over to her and draped his arm around his shoulders.\n\nAfter a few minutes, she looked up at Michael and asked, \"Michael, I've been wondering about something. How come you never tried to bang me, or date me, or feel me up, or any of that stuff?\"\n\nHe grabbed the hair at his temples and gave her one of those 1950s horror movie looks and said, \"Oh, no, it's the return of 'why-am-I-not-sexy'?! Run for your lives!!\"\n\nShe gave him a disgusted look and said, \"You can be such a jackass sometimes.\"\n\n\"Seriously, if we have to have another one of those conversations, I'm going to drown myself.\"\n\nShe splashed him in the face. \"No. That's not what I asked or meant. Maybe it's because of graduation, I don't know, but I've been thinking about that a lot lately. How come you never tried anything with me? Have you ever had sexual thoughts about me?\"\n\n\"Have you ever had sexual thoughts about me?\"\n\n\"Huh uh ... you're not pulling that bullshit. I'm serious. I want to know.\"\n\nHoly shit ... In all the years they had known each other, he had managed to avoid discussing the topic that terrified him the most. He was dumbly staring at her while she stared at him with her arms folded across her chest, and eyes drilling into his brain. He started perspiring trying to figure out how to answer that her question without seeming like a total stalker geek.\n\n\"Well, when you flash your boobs at me, a stray thought may have crossed my mind,\" he answered flippantly.\n\n\"No. I'm not letting you worm your way out of this by cracking lame jokes. It's a simple question. All I'm asking for is a simple answer. Have you ever had sexual thoughts about me?\" She wasn't budging.\n\nSo, here it was. His moment of truth. Fuck! What was he going to say? How was he going to tell his best friend that he was madly, hopelessly, desperately in love with her? He stood there, gazing into those unblinking chestnut eyes, sighed very deeply (for, like the tenth time), and just decided it was now or never.\n\n\"You really want to know this?\" he asked solemnly. She answered him by raising her eyebrows and continuing to bore holes into him with her eyes.\n\n\"Okay. Wow! I'm like really uncomfortable talking about this.\" He paused looking to see if there was for a crack in her demeanor. No such luck. So, he searched for a way to begin. \"Do you remember 7th grade math?\" She furrowed her brow and nodded, wondering where this was leading. \"You ran out of the classroom on the first day of school one day and smashed right into me, knocking my books all over the hallway.\"\n\n\"I ...\" he started laughing nervously at what he was about to say. \"I ... was squatting on the ground, of course, and I came face-to-face with your ... legs.\" He laughed again -- anxiously. \"I froze for moment, just staring at your legs ... Your tan, perfect, amazing legs with your gorgeous calves, and that tiny little birthmark on the back of your left knee, and your ... your ... your flawless thighs, and ... I ... I just melted.\"\n\nShe relaxed her posture somewhat, tilted her head slightly to the side, and focused intensely on his face and his words.\n\n\"I stood up, and you smiled at me. And, you apologized. And, I thought, wow. She's drop-dead gorgeous and nice. I thought, 'Wow!' What're the odds of that?\"\n\nBeth was now enthralled by all of this. When she asked him the sexual-thought question, she honestly thought he'd make a series of jokes until she told him to piss off. At the most, she thought he might give her a compliment. But, this was different. This was unexpected. This was words and feelings pouring straight out of his heart, and she was fascinated to find out where this was going to lead.\n\n\"That's the moment I fell in love with you. Okay ... I know what you're gonna say, that that's crazy. I mean, how could I fall in love you? I didn't even know you, right? All I can tell you, Beth, is that loving you is the only real, true thing I have ever known. And, getting to know you better? All it did was just make me fall deeper and harder in total and complete love with you.\n\n\"Since that day in 7th grade, there hasn't been a single day that you haven't been the primary focus of my thoughts. I watched you date all those other guys and felt so jealous sometimes I thought my heart was going to explode. I dated all those girls and they were never more than pale, empty reflections of you. I -,\" he paused and looked up to try and find the right words to express what he was feeling. \"You are ...\"\n\nThen, he looked down at her face for inspiration. He cupped her chin in his trembling hand and started speaking very slowly and deliberately to emphasize each word. \"You are the most beautiful girl on earth as far as I am concerned. Nobody else is even close. You are so kind and generous that I sometimes find myself crying just because I have you as my best friend. You are so smart and funny that you can make laugh even when my world seems to be falling apart.\n\n\"I've thought about you in every imaginable way. I've thought about what it would be like to hold you ... to really hold you, like a boyfriend holds his girlfriend. I've thought about what it would be like to brush your soft hair away from those soulful eyes and to kiss you with long, deep, kisses that last all night. I've thought about what it would be like to say, 'Oh, Beth? She's me girlfriend or my fianc\u00e9 or ... my wife.' I've thought about what it would feel like to touch you and to taste you and to smell you and to see you completely and to hear your sounds when you make love and to know that I was responsible for producing those feelings in you. I ...\" he sighed heavily. \"I have probably just scared the hell out of you and made you want to run back your house screaming, and ... Oh, God ...\" He dropped his head into his hands, not know what to do or say next. She saw a tear fall from beneath his hands and land in the pool.\n\nBeth was speechless. She blinked back her own tears and swallowed, trying to think what to say or do. Then, she hugged him hard and said, \"Michael, I'm still searching for right words to begin, but I want you to know that I will never let anything come between us. You throw that concern right out the window.\" He hugged her so tightly; she was momentarily unable to breathe.\n\nAs his emotions radiated off of him, Beth, too, was so overcome that tears ran down her cheeks.\n\nWhen she finally regained her composure, she sniffed and asked, \"Michael, why haven't you ever told me how you felt or given me any hints?\"\n\nHe had to struggle just to manage to blurt out, \"Survival.\" Then, he added, \"My feelings for you are so strong that I was afraid that if I let even a little of it out, I would totally lose control ... like now.\"\n\n\"Sometimes it's good to get out of control.\"\n\nHe put his hands on her upper arms and looked at her with his swollen, red eyes. \"Then, this must be my lucky day,\" he sniffed.\n\nShe gave him a small, sympathetic smile. \"Come here.\" She took his hand and led him out of the pool to one of the chaise lounges. She sat directly opposite him, with their knees touching and his hands in hers.\n\n\"The thing is, you big knucklehead, I'm in love with you too, and I have been for a long, long time. I can't pinpoint the exact moment like you can with your creepy 'perfect legs' story,\" she teased. \"Tell me, what brand of raincoat do you wear when you stalk innocent women?\" \n\nMichael burst out laughing and said, \"Thanks for completing the image.\"\n\n\"Anytime.\" Then, she added seriously, \"My sweet, darling Michael, I've never met anyone who makes me feel like you do.\"\n\nHe gaped at her with the innocent, bewildered look of a little boy.\n\n\"It's true ... believe it,\" she said in response to the expression on his face.\n\n\"But ...\"\n\nShe interrupted him. \"There are no buts. I ... am ... helplessly and magically in love with you, too.\" She got up and sat beside him. Then, she pulled his mouth to her and kissed him softly. Michael eagerly reciprocated and rotated his body so they would be facing each other. They stayed like that for a long time, never saying a word, just hungrily kissing as if they had to make up for lost time.\n\nBeth finally broke their embrace and stood, taking Michael's hand in hers. She led him through the house, up the stairs, and into his bedroom. She pushed him gingerly onto the bed and peered into his eyes while she began slowly removing her bathing suit. She followed his eyes as they drank in her body and felt her breath quicken as she found herself responding vicariously to the passion she witnessed in him.\n\nShe walked to the bed and grasped the top of his swim trunks and slid them off his body. Then, she sensuously crawled up beside him and grabbed his massively erect penis with both hands. She had seen enough of Michael over the years in wet swimwear to know he had a very nice package, but she was even more aroused at finally seeing him in the flesh.\n\nBeth spent some time just gently stroking him and getting to know this important part of his body. He was about seven inches or so, she guessed and had a thick, even shaft that curved a little toward his belly. His crown was only slightly bigger than his shaft with a brownish pink brim. His meaty balls rested in a sack covered in dark curly hairs. She might have to do something about that later, she told herself.\n\nShe experimented with different ways of rubbing him and licking him. She got the best response from either licking or lightly scratching the upper underside of his cock. Beth then bent down and took him into her warm, wet mouth. Michael closed his eyes tightly and panted in response. She started sucking and kissing his glans initially and gradually started working more and more of his wide shaft into her throat. She bobbed her head up and down and used her tongue to tease the sensitive part of his penis. She increased the pressure and the speed of her sucking and kept adding saliva to keep him moist.\n\nMichael's crest came so quickly that he didn't have time to warn her. Beth was hit with a cannonball of cum in the back of her throat and had to move quickly off of his gyrating piston to keep from being bombarded. She continued to jack him with both hands and watched his seed shoot out until he only trickled onto her hands.\n\nWhile Michael recovered, Beth retrieved a warm washcloth to clean his belly and chest. \"Wow, I didn't expect that,\" he managed to blurt out between breaths. She didn't say a word. She just kissed the top of his dick and then moved to kiss him. He encircled her with his arms, and she lay across him so that his semi-rigid penis was laying against her own sex. They, again, kissed for quite awhile before Michael turned over, with Beth still in his arms, and laid her on her back.\n\nShe looked up at him with a sweet, trusting expression. He surveyed her exquisite body and turned back to her face to kiss her again. In his fantasies, he played this scene out 10,000 times in vivid detail. He was going to take as much time as he needed to pay homage to her body and to bring her as much pleasure as he was capable of providing.\n\nBeth sensed what was in store for her because she relaxed, got herself comfortable, took in a series of long, slow breaths, and closed her eye in anticipation.\n\nMichael started by kissing her eyelids and her nose and her cheeks and her chin. He nibbled on her ear lobes and worked his way down her neck. Beth let out low moans as he caressed her neck with his lips. Michael moved down to her shoulders and to her chest. He repositioned himself so his body did not obstruct any part of her and so his turgid dick stayed in constant contact with her velvety skin.\n\nHe arrived at her breasts and shook his head, muttering, \"Wow,\" to himself. He began spread his fingers and used the soft pads to gently knead her in small circles. The light touch ignited a second set of moans. He moved to her right breast and nimbly kissed her in slow circles edging ever closer to her nipple. Just before he reached her peak, he switched to repeat his actions on her left side.\n\nMichael then returned to her right, placed his flattened tongue against her nipple, and slurped in an upward motion. Then, he used just the hardened tip of his tongue to move in circles around her areola. He tenderly clasped her nipple between his teeth and tugged. Next, he pulled her nipple into his mouth and mimicked nursing movements with his tongue. Beth's body started to writhe and her breathing began growing more desperate. Michael repeated his movement on her left side while massaging her right breast with his hand. From what he could tell, her right breast was more sensitive, and he tucked that information aside for later.\n\nWhen he knew he had her motor running, he moved between her legs and rubbed his rigid shaft along her the top of her heavenly pussy. Beth was definitely moving down the tracks toward orgasm, so Michael shifted his focus to her lower treasures. He slipped his hands under her ass cheeks. Then, he lifted her sex to his face. He spent some time just blowing air on her so he could commit every surface of her vaginal region to memory. He breathed in her aroma to it, so that, too, was committed to memory.\n\nShe was more stunning in person than in any of the images from his imagination. Since this was the one area that had not seen sun, her skin retained its natural pinkish hue. Only her vulva was flushed a deeper shade of rose. She had yawning channels on either side of her labia, which had blushed to a rich rouge in the heat of her passion. The crimson ridgeline of her clitoral hood was distended and the bud of her sex reached out to find a source of relief for her passion. Her lips had parted, and her satin canal was dripping with her nectar.",
        "As he pondered whether to continue his slow pace, Beth beseeched him to please hurry. He obeyed and began licking the channels along her labia before turned his head to the side suck her lips into his mouth. He was careful to avoid contact with her smoldering clit just yet. Michael then gently spread her lips with his thumbs and began assaulting her inner chamber with the curved tip of his rigid tongue. Beth breathing was labored how, and her body began pushing her sex into him. Michael knew she was approaching the edge of amour, so he inserted one, then a second of his fingers into her passageway. After a couple of minutes of stroking her and licking her, he finally descended on her carnal knob. He used rapid strokes with his tongue all around her bud. He reached in further with his fingers and was momentarily taken aback to discover that her virginal barrier was still in place.\n\nHe quickly resumed his assault on her clit and sucked her deeper into his mouth. He reached up to roll and pinch her right nipple between the thumb and forefinger of his other hand. The combination of his oral massage of her clit, his rubbing of her nipple and his scraping of the top wall of her inner sanctum, sent Beth toppling over the edge. Her body began writhing violently and the rippling of her vaginal walls set free a deluge of liquid, which Michael happily drank. All she could managed to say was a breathy, \"Oh, God! Oh, God! Oh, God!\" repeated over and over until her orgasm finally began to wane.\n\nAt the first sign of her relaxation, Michael released the pressure on her clit. He waited until the tension in her body evaporated before he removed his finger from her vagina and freeing her nipple.\n\nHe lay on his side with his head propped in his hand and supported by his elbow, just watching her. She may not have seen it, since her eyes were still closed, but she sensed the love that washed over her from his eyes. In fact, he was so completely focused on giving her pleasure that he even lost his erection. But, now, watching her, smelling the air, and appraising her body, his member eagerly returned to full mast.\n\n\"That ... was ... I don't even have words for what that was,\" she said.\n\nMichael just smiled. \"I'm glad you enjoyed it, but I can guarantee you I enjoyed it more.\"\n\n\"Like fucking hell you did!\" she retorted.\n\n\"Madam,\" he said with mock disdain, \"your language. This is a family establishment.\"\n\n\"Screw that. I don't want to hear any more shit about you having more pleasure than me, and if I have to, I'll just go ahead and let me head explode next time to prove my point.\"\n\n\"Well, I don't want to have to clean up that mess, so, okay ... you win,\" he said laughing.\n\n\"Good. Glad we don't have to debate that.\"\n\n\"I do have a question for you, however.\"\n\nAfter one more deep sigh, she opened her eyes and looked at him and asked, \"What?\"\n\n\"Are you a virgin, my angel?\"\n\nShe shrugged. \"Yep. Surprised, huh?\"\n\n\"You know, I just assumed with all those poon hunters you were dating that that rampart had been breached.\"\n\nShe rose up on one arm and looked at him. \"That was a BIG source of friction. I could never convince myself to allow my first time to be with Scooter Scotty or any of those other jerks. I think that's why I was so hurt when good ol' Steve abandoned ship, like all the others, and headed for Port Carol. I did try ... a little. But, honestly the only person I could ever imagine giving myself to was you.\"\n\nHe snorted and shook his head.\n\n\"What?\" she asked.\n\n\"We are some pair. I kept going through an endless string of goofy affairs with girls I usually didn't even like, much less love because they weren't you. Now, I find out, that you were doing the same thing only with dipshit guys.\"\n\nShe tilted her head. \"Are you saying what I think you're saying? Are you a virgin too?\"\n\n\"Guilty.\"\n\n\"But what about Stacy Moeller? She told everybody in the girls' locker room that you and her were knocking holes in the walls with the headboard. She also bragged about your monster tool, which I'm happy to report is accurate.\"\n\n\"Urban legend. If I couldn't have you, I couldn't bring myself to have anyone else, even for the sake of just a good screw.\"\n\n\"But, what about what you just did to me? You can't possibly be a beginning pussy eater.\"\n\n\"I have done some of that ... with Kim Farmington, by the way, not Stacy. I was afraid Stacy would give me lockjaw.\"\n\nBeth burst out laughing.\n\n\"You have the mighty internet to thank, madam, and a LOT of inspiration this afternoon,\" he said. \"I took an online course: Pussy Eating 101 ... from every porn sight I could find that didn't require a credit card number.\"\n\n\"I am quite impressed.\"\n\n\"Thank you. Here at Sodomy U, we pride ourselves on our dedication to our craft.\"\n\nShe laughed again. \"You're a nut.\"\n\nBeth reached over and took Mr. Johnson in her hands. \"So, what's the next course on this menu?\"\n\nIn a loopy British accent, he said, \"I'd recommend the beef Wellington tonight, Madam. It's served hot with a salty cream sauce.\"\n\n\"Mmmm. Sounds perfect. What's for dessert?\" she asked as he moved over her and put her on her back.\n\n\"You. Just you,\" he said in his normal voice. \"The kitchen staff threatened to quit if we made them try to invent something sweeter than you.\"\n\n\"Wow ... it looks like you charmed the pants right off of me.\"\n\n\"That was the plan, Madam,\" he mumbled as he dove in for another session of kissing.\n\nWhile they kissed, he rubbed his hands over different parts of her body. When he reached her pussy, he used his finger tips to gauge her wetness. Once she felt saturated, he moved between her legs and planted his erection against her slit.\n\n\"Are you sure you're ready for this?\" he asked in a serious voice.\n\n\"It seems like I've been waiting for this moment my whole life.\"\n\nHe spent a few moments looking into her eyes to make sure she wasn't just trying to be brave for his sake. Once he was convinced her feelings were genuine, he said, \"I love you, Beth Anderson.\"\n\nShe ran her hand along his cheek and said, \"I love you, too, Michael Barrett.\" Then she smiled slightly. \"You don't have to worry. I want this as much as you do.\"\n\n\"Obviously, I've never done this before, but I know that slow is better the first time. I'll be watching your face for signs that this is too much, but please tell me how you're feeling and what to do, okay?\"\n\nHer voice caught in her throat a little as she found herself getting choked up because she could tell how much he was worrying about her. \"I will. I promise.\" Only then, did he actually begin maneuvering himself.\n\nMichael rubbed the head of his penis up and down her shaft to coat himself with her juices. Then, he shifted his weight so he wouldn't crush her and began gradually pushing himself into her. His eyes never blinked and never left her face as he watched for any sign of discomfort. He quickly discovered that by moving in and out he could penetrate her easier than with a single thrust.\n\nShe felt her vagina progressively adjust to his size and to its first visitor. Michael was feeling electricity in his loins but he was not going to let anything harm Beth, so he controlled his own natural urges to pump harder and faster.\n\nWhen Michael reached her hymen, he stopped to let her catch her breath and get comfortable with his manhood lodged halfway up her canal. Beth reached up and kissed him and said, \"Okay. I'm ready.\"\n\n\"According to what I read, the best thing to do is to just blow through and get it over in one thrust,\" he stated.\n\n\"Yeah, that's what the girl friends I can trust told me. It'll be okay, Michael. One pop, a little stinging for a few seconds, and then we never have to worry about this again. I am SO glad I waited for you.\"\n\n\"Me too.\" He bent down and gave her a ravenous kiss, grabbed her right nipple between his fingers, pulled his stiff penis out and plunged in. After he had broken through the barrier, he froze his hips. Beth sucked in a big gulp of air and squeezed her eyes for a few seconds. A tear rolled down one of her cheeks, and Michael let go of her mouth to kiss her eye and to lick off the tear. It didn't take long before she relaxed.\n\n\"Whew ... glad that's outa the way,\" she said.\n\n\"How are you doing?\" he asked.\n\n\"Okay. Darian told me it would sting for about 30 seconds and to have the guy do what you did ... just freeze. I already knew that's what you would do. Then, she said to take it slow for a minute or two to allow my pussy to release more juice. That's the point where it all starts to feel pretty fucking good.\"\n\n\"I love you,\" he said.\n\n\"I know,\" she replied.\n\nMichael followed the Darian plan and moved slowly in and out of her, now pushing deeper and deeper with each thrust. By the time he had made it all the way in, Beth was indeed relaxing and her sweet pussy was flooding his cock with moisture.\n\n\"Mmmmmm ... this feels amazing. I can't believe it feels this good to be full of cock,\" she said. She wrapped her legs around Michael so his thrusts would go as deep as possible.\n\nFor the next several minutes, Michael immersed all five of his senses in this moment. He watched her face and her body get caught in the rapture of their lovemaking. He turned to watch his dick slide in and out of her heavenly canal. He observed the muscles of her thighs flex around his body as she held him.\n\nHe knew he would remember her aroma until the day he died. He even grazed a finger along his shaft to scoop up some of her syrup to taste. He luxuriated in her moans and her pants as she began the climb to what he hoped would be a shattering orgasm. He felt the heat coming off of her and the sweat building on her skin as they moved in perfect harmony with each other.\n\nBeth's discomfort was now a distant memory, and her carnal encoding was taking over. She moved her hips and ground her clit into Michael's cock and public bone as often as she could. Michael helped by moving his body up slightly every time he withdrew to meet her clit.\n\nHis cock and his balls were now on fire, and he knew this magical session would reach its peak soon. He started seeing the signs from Beth that he saw earlier with more feral thrashing and a complete abandonment of restraint. She felt his cockhead begin to swell even more inside her, ravishing her vaginal walls with its pounding. Michael felt his balls pull up and knew he was seconds away.\n\nAt that moment, coated his index finger with saliva and reached down to find her flaming clitoris. She immediately started more intense panting, and he bent down to suck her right nipple into his mouth. That sent Beth sailing over the edge, and she began flailing and screaming.\n\nBeth's vaginal walls went into spasm around Michael, and he let loose a guttural, \"Oh, God!!\" His seed careened off her cervix with explosive force. Michael clamped his eyes shut as the waves of pleasure enveloped him. Beth's orgasm was heightened by the blasts of cum igniting inside her, and her orgasm stormed on for what seemed like an eternity. Finally, the assault began to subside as Michael's thrusts grew less feverish, and Beth's taut body began to relax.\n\nWhen Michael finally stopped thrusting, he lay his head down on Beth's shoulder and tears started flooding his eyes. Beth was still trying to recover, and it took her a few minutes to realize that Michael was crying.\n\n\"Sweetheart, what's wrong?\"\n\n\"Wrong? Nothing! Nothing in the whole damn world is wrong! This has just been a very emotional day, and some of that is leaking out of my eyes at the moment.\"\n\nBeth picked up his head. Now it was her turn to kiss away his eyes. \"You sure have been crying a lot today. I don't know what I'm going to do with you.\"\n\nHe snickered. \"I'm out of -- Oh shit!\" He suddenly screamed.\n\n\"What?\" she asked in alarm, searching for the source of his concern.\n\nMichael had realized he was still inside Beth, and he suddenly panicked about dumping a record-setting load of sperm into her. \"With everything that was going on, I completely zoned out on using a condom. God, I'm so fucking stupid!\"\n\n\"That's what this is all about? Jesus, I thought something bad happened,\" she replied calmly.\n\nMichael was confused at her nonchalant attitude. \"I don't know if you realize it, but you are hosting about ten gallons of baby batter at the moment. Doesn't that concern you?\"\n\n\"Calm down. My period just ended day before yesterday, so I'm perfectly safe. Besides, I really don't think I could have had you wear a condom today no matter where I was in my cycle. I really needed to feel everything! I will never forget this day -- ever -- and neither will you. I wanted to feel the sensation of your skin against mine, and I wanted to feel you cum inside me. I wanted to feel all of that, my darling, and I am as happy as a girl can be about the whole affair.\"\n\nMichael calmed down and smiled. \"That was pretty fucking great. Just think; we only have our whole lives to top it.\"\n\nBeth smiled. Then, she got a quizzical look on her face and asked, \"What did you mean by that?\"\n\n\"Just what you thought I meant. I will never be able to love anyone as much as you, and I am never, never, never going to let you go. Did I say never?\"\n\n\"So, what, you just deflower me and then expect me to up and marry you or something,\" she said with a look of mock disbelief.\n\n\"Yep. That's pretty much the plan.\"\n\n\"You seem awfully confident for someone who's a bit of a ... crybaby,\" she teased.\n\n\"Okay ... a guy gets a little emotional when the girl who causes him to masturbate 900 times a day finally ends up in his bed, and she's never going to let him forget it!\"\n\n\"Only 900? What are you a pussy or something?\"\n\nHe cackled and fell over on his back laughing. Beth hopped on top of him and pinned his arms to the mattress. \"So, do you honestly think you can be happy for a lifetime with a crazy broad who constantly asks you if she's sexy?\"\n\n\"If you can spend your life with a supersexy stud who leaps tall buildings with a single bound ... (he starts fake sobbing) ... 'cause that's where the hankies are kept ...\" At that, Beth fell onto the mattress laughing.\n\nHe rose up beside her and asked, \"So, how's your pussy holding up? Ready for another go round?\"\n\n\"If Mr. Johnson is ready, the good ship poon is ready too.\"\n\n\"What do you think your mom and dad will say about all of this?\" she asked.\n\n\"Mom will start crying and Dad will say, 'Jesus, what took you so long.' What about yours?\"\n\n\"Amy will be thrilled. She thinks of you as her big brother anyway. Mom will smile knowingly, like she already knew this would happen. Dad will go crazy! I sometime worry he's going to leave my mom and try to elope with your dad!\"\n\n\"What about Grandma Carrie?\"\n\nBeth got suddenly serious. \"You know what she said to me the other day?\" Michael nodded no. \"She asked me when I was going to stop wasting time on nincompoops, like Steve, and start dating you.\"\n\n\"Really?\"\n\n\"Yeah,\" she paused as she was remembering the conversation. \"I asked her why, and I'll never forget her answer ... 'Because, darling, he looks at you the same way your granddad always looked at me, and your granddad gave me the best 56 years of my life. How could I want anything less for you?'\" Beth's throat started to tighten at the prescience of the memory.\n\n\"She's a smart lady.\"\n\n\"Yes ... she is,\" Beth said as she used a corner of the sheet to wipe her eyes. \"That's what got me started today and caused me to ask you that question.\"\n\nMichael pulled her into his embrace and kissed the top of her head. \"Okay, so let me just reacp. I woke up this morning a single, a loser, and I proceeeded to pour milk over my cereal without looking at the date ... it was nice and chunky! Then, my favorite sandals broke. I stepped outside into this blast furnace of heat and humidity. Finally, something good happened ... my best friend came over to cool off in the pool. However, she then started harassing me about why I hadn't tried to jump her gorgeous bones. I broke down sobbing like 4-year-old whose ice cream cone fell in the dirt, lost my virginity to the woman of my dreams, and we just decided to spend the rest of our lives together. Did I miss anything?\"\n\n\"Just one thing,\" she answered seriously. \"Michael ... do you think I'm sexy?\"\n\n\"That's it,\" he said. He threw the covers over them and started tickling Beth until she begged for mercy. Once she had surrendered, Michael let it be known that Mr. Johnson was again ready and reporting for duty.\n\n\"Is that all you're going to think about now?\"\n\nMichael put his hand to his face and looked up thoughtfully. \"Hmmm. Yeah, that's pretty much it.\"\n\n\"Oh, brother! What am I going to do with you?\"\n\nHe was leaning over her with his hands underneath her back, looking down into her eyes.\n\n\"Love me. Just love me until the universe is nothing but a faint memory in God's mind.\"\n\nShe looked up at him and ran her hand through his wavy brown hair. \"I'm not sure that's long enough, but okay.\"\n\n\"Oh, and by the way,\" Michael added, \"Mr. Johnson said that if you ever bug either one of us again about whether or not you're sexy, he's going to swell up and never go down. THEN ... you'll have to deal with that!!\"\n\n\"As long as I can look at myself through your eyes, I don't think I'll ever have to worry about that again.\"\n\n\"Good,\" he said in a low, satisfied voice. Then, he kissed her deeply and passionately and joyfully. When they broke apart, he said, \"Now ... getting back to the condition of Mr. Johnson!\" as he threw the covers back over their heads.\n\n\"You have GOT to stop thinking about sex 24/7 ... Oh! ... Oooo! ... That's nice,\" she said as he attacked her pussy with his tongue. \"Okay, maybe just this once ..........\"\n\nThe End"
    ],
    "authorname": "LSanders",
    "tags": [
        "oral",
        "high school",
        "first time",
        "18 year old",
        "romance"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/beth-and-michael"
}