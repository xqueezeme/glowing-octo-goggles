{
    "title": "Thorne Ch. 06",
    "pages": [
        "\"Explain to me how you wound up in a family of rapists.\" Barb said loud enough that everyone could hear her including the children.\n\nKevyn was caught off guard by the greeting but recovered quickly. She was wishing that she hadn't changed her mind about going to the condo.\n\n\"I guess we don't have to wonder anymore do we?\" Kevyn mused. \"If you'll let us get settled, we'll tell you anything that you want to know.\"\n\nNot to be deterred, Barb continued.\n\n\"Why? So you can come up with a pretty story? My situation may not be the best, but at least Thorne didn't rape anyone!\"\n\n\"Barb...\" Leon said softly.\n\n\"And you with all your talk about protecting us! You knew and you didn't do anything!\"\n\n\"Barb, we can talk-\"\n\n\"I have nothing to say to you rapist!\" Barb snapped at Patrick who had tried to intervene.\n\n\"Mama?\" Celeste called softly clutching Juliette's hand and staring at Barb with wide eyes.\n\n\"Barb you're scaring the kids.\" Juliette said her tone firm. \"Now shut up a minute and we'll talk about it when the kids are settled.\"\n\n\"You knew too didn't you?\" Barb asked Juliette in an accusing tone.\n\n\"Yes but as I said, this isn't a conversation for children. Now shut the hell up!\"\n\nBarb stopped, looked around and saw that the kids were indeed scared. Without saying another word, she turned and walked away.\n\nNoel stood back and watched the interaction between the siblings. He then looked at the children and felt badly for them. Things were frightening enough without Barb making things worse. As he looked at each child, he saw the same similarities in the eyes of the portrait, but it was stronger in the girls. It confirmed what he already knew- the woman in the picture was somehow related to the Yancy family.\n\nHe watched Barb walk away, started to follow her; but then changed his mind. She had a way of pushing his buttons without trying. Let Thorne deal with her he thought to himself as he went to his room. Because there were going to be so many people around, he warded his room. After the incident with Barb, he didn't trust that he wouldn't hurt anyone.\n\n**\n\nBarb went to her room and slammed the door shut behind her. The only thing that she conceded was that she should have waited until the kids were out of earshot before she said anything. She hadn't planned on approaching Kevyn like that, it just came out. Nevertheless, she wanted an explanation. It occurred to her that she didn't want an explanation because she was concerned, it was because she finally had something that she could hold over their heads. In her heart she knew that she was wrong, but it didn't matter. She finally could say that she was better than they were.\n\n\"You really are a bitch\" a soft voice said from behind her.\n\nBarb turned to see Adrianna standing behind her. \n\n\"Do you ever think about anyone other than yourself?\" Adrianna asked. \"Apparently not\" she said answering her own question. \"I feel sorry for that kid you're carrying\" she added and walked away before Barb could respond.\n\n**\n\nLeon wanted to go talk to Barb but Kevyn stopped him.\n\n\"Let it be for now\" she said. \"She needs time to cool off.\"\n\n\"She was wrong to do what she did\" he said angrily.\n\n\"Yes she was\" Kevyn agreed. \"But confronting her about it when you're both angry isn't going to accomplish anything. Let's get the food and blood put away, the kids settled and then we'll talk to her.\"\n\nLeon was fuming, but he agreed. Before he went help unload the vehicles, he checked on Celeste. Of the three children, she seemed to be the most frightened. Louise was already hugging the little girl and assuring her that there was nothing to be afraid of.\n\n\"Auntie Barb is just upset\" Louise said softly. \"She'll be alright.\"\n\nCeleste didn't look convinced and Leon wasn't convinced either. Wanda and Victor had already recovered. They had seen Barb in action before, but had forgotten how impulsive and rude she could be. Wanda took charge of Celeste and asked where they would be sleeping.\n\nThat was a question for Barb and since no one wanted to deal with her at the moment, they decided to wait until she either came back or Thorne showed up. A sharp toot of the horn told them that more people had arrived.\n\n\"Hello?\" Vanessa called out as she walked in followed by Luc, Rik and Veronica.\n\n\"We're in here!\" Nathan called back.\n\n\"Where are mom, dad and Victoria?\" Veronica asked looking around the room.\n\n\"They should be here shortly\" Patrick replied. \"Thorne is talking to the female hunter trying to see what he can find out.\"\n\n\"What are they going to do with her?\" Vanessa asked.\n\n\"I don't know\" Patrick replied. \"By all rights she should be killed.\"\n\n\"Maybe\" Nathan said. \"But let's think about this. We now know that it was them that Louise and I have been sensing. My question is this, why haven't they killed anyone? They've been here for a little less than a week and we didn't know who they were until one of them was spotted by one of Thorne's guards. From what I know about hunters, they start killing as soon as they arrive and then leave quickly. The girl found at Thorne's club is the first death that we're aware of and she wasn't vampire. There have been no mysterious disappearances or deaths of our kind reported. This isn't usual hunter behavior.\"\n\n\"What are you saying?\" Patrick asked.\n\n\"I don't know if I'm saying anything\" Nathan replied. \"I'm just making an observation. The issue right now is Rufus Saunders. My guess is that he'll be here by morning.\"\n\n\"He's already on the way\" Ethan said as he walked in. \"Hunters have already been spotted which means everyone stays indoors even within the gates. As far as we know they don't know about this house, but to be safe; no one goes outside except for those who can vanish. That's going to be a bit of a challenge for the kids, but it has to be that way. Also, none of the children are to answer the door. If anyone sees or hears anything suspicious, no matter how small; say something. One more thing, make sure that someone always knows where you are even in the house and keep your cell phones on. Thorne will be here shortly and will show us where the escape routes are and to tell us the pass words.\"\n\n\"Nathan and I will take first watch\" Patrick volunteered.\n\n\"Me too\" Leon said. \"This is a big assed house and the more eyes the better.\"\n\n'I'll help too\" Louise said looking at Nathan. \"And before you say that I need to rest, I'll rest when I usually do and that's with you. If I get tired, then I'll lay down. Let's face it; I'm the only one that can see them even if it's only shadows.\"\n\nNathan started to argue, but realized that she was right.\n\n\"Good\" Ethan said. \"Tomorrow night three others will stand watch. Adrianna, Grant and three wolves will stand watch during the day. Thorne and I have security scattered around the property and in the city including his club.\"\n\n\"Those of us who are up during the day can help too\" Katrina said. \"When are Martin and Rachel coming?\"\n\n\"They're on the way\" Ethan replied. \"I'll fill him in when he gets here.\"\n\n\"Do we know the names of Olivia's crew?\" Patrick asked.\n\n\"Yes and we also know the names of the hunters in the area\" Ethan replied. \"They are being taken from their homes as we speak, but there are plenty more arriving to replace them.\"\n\n\"So are we just going to sit here and wait for them to find us?\" Leon asked.\n\n\"No\" Ethan replied. \"Once Thorne gets here we'll talk strategy. The first thing will be to find Rufus Saunders. I have people at the airport watching for him.\"\n\n\"What about the hunter's crew?\" Leon asked.\n\nEthan hesitated. He wanted to wait until Thorne was there so that all of the information could be given at one time, but Leon had asked a direct question.\n\n\"I was going to wait until Thorne got here to tell you this, but it really doesn't matter. Olivia's crew is vampire. Those are the shapes that Louise was seeing. Right now we don't know where they are, but we have their names. They will be hunted just as the hunters are being hunted and will be treated as traitors.\"\n\n\"Does that mean that they'll be killed?\" Juliette asked.\n\n\"Yes\" Ethan replied. \"They won't be tortured if we get to them first, but they will die.\"\n\nJuliette looked at Louise and Kevyn to see what their reaction was. She was dismayed to see that they had barely reacted. Hans had told her how traitors were treated, but on some level she didn't believe it. Hans, sensing her discomfort put an arm around her and led her away.\n\n\"He's joking isn't he?\" she asked. \n\n\"No he isn't\" Hans replied. \"This is the ugly part of our world that I wanted to protect you from, but Julie; it exists and from time to time it rears its ugly head. I had no real way of preparing you for it.\"\n\n\"Will you help kill them?\" she asked.\n\n\"I will do whatever needs to be done in order to keep you and the children safe\" Hans said. \"These people hunt us and as long as they are in existence, you will never be safe. This family will never be safe. So yes, I will kill them.\"\n\n\"Isn't that what they're saying?\" Juliette asked. \"They hunt us because they think that their families aren't safe. They think that until all of us are dead, they will never be safe. Hans, when does this stop? It sounds like this is vicious cycle that both sides are too stubborn to end. I guess to some degree I can understand the need to punish the traitors, but do they really have to die? And what about the captured hunters? What will happen to them?\"\n\n\"Rachel and Martin are here\" someone called out.\n\n\"We'll talk later\" Hans told Juliette hugging her. He knew that she wouldn't understand and was almost certain that she never would. He had no idea of how to make it easier for her. Thorne walked in a few minutes later, nodded at Ethan and went up the stairs.\n\n**\n\nBarb was shopping online when he walked into the bedroom.\n\n\"What are you doing up here?\" he asked. \"Your family is downstairs.\"\n\n\"I'm taking a time out\" Barb said. \"I couldn't stand to be among the rapists.\"\n\nThorne's eyes flashed in anger.\n\n\"This isn't the time to deal with this. The priority at the moment is keeping everyone safe. I don't give a fuck whether you ever speak to them again after this is over, but for now get your ass downstairs. I have information that everyone needs to hear and I don't care to repeat myself.\"\n\nWhen Barb didn't move, he took the laptop from her lap and glanced at it.\n\n\"You're fucking shopping?\" he asked incredulous. \"I don't know why I'm surprised, but let's go. Now.\"\n\n\"You can tell me later...\"\n\n\"Either you walk down those stairs on your own or I'll carry your ass. Now choose\" Thorne said his tone telling her that he would do it.\n\nBarb hesitated a second longer and got off the bed without looking at Thorne. She stopped at the doorway, turned around and looked up at him.\n\n\"Yes?\" he asked his tone cool.\n\n\"Nothing\" She said and walked away.\n\n***\n\nNoel knew the second that Thorne was back and went back downstairs. He caught Leon's eye and nodded at him. He watched with a small amount of jealousy as Leon kissed Nadine on the temple and then made his way over to him.\n\n\"How goes it?\" Leon asked as he shook Noel's hand.\n\n\"It goes\" Noel replied with a small smile. \"Are the children alright? This has to be very frightening for them.\"\n\n\"They'll be alright\" Leon replied. \"Are you still going to move after this is done?\"\n\n\"As soon as possible\" Noel replied. \"Please take no offense, but your sister and I don't see eye to eye and I am more than ready for a little privacy.\"\n\n\"I understand\" Leon said. \"I don't know if you've noticed, but we don't see eye to eye with her either; but she's still family.\"\n\n\"True...Leon may I ask a question?\"\n\n\"Sure\" Leon replied.\n\n\"Do you have other female relatives that aren't here?\"\n\n\"We've got lots of relatives both male and female. Why?\"\n\n\"I was just curious.\" Noel replied. \"Are any of them young women in their twenties or thirties?\"\n\n\"Quite a few of them are in that age range... why are you asking?\"\n\nNoel wasn't sure of how to respond. He wasn't ready to tell anyone else about the portrait of the eyes, but he wanted information. Leon inadvertently gave him a way out.\n\n\"The women in my family are beautiful aren't they?\"\n\n\"Yes they are, and I find that they have the loveliest eyes\" Noel replied.\n\n\"Every Yancy female has some variation of those eyes\" Leon replied. \"My sisters have them in spades. So... are you hoping that one of my female relatives is your mate?\"\n\n\"Who knows what the fates have in store for me?\" Noel said with a shrug and a smile.\n\nJust then, Barb walked in followed by Thorne. Anyone looking at her could see that she was angry. She looked at no one as she walked by and headed for a seat in the corner. Leon watched her and shook his head. \n\n\"I'll talk to you later\" he said to Noel. \"I think the meeting is about to start.\"\n\nRachel, Martin and Joseph walked in just before the meeting started.\n\n\"I'm sorry we're late\" Rachel said. \"I forgot how much work is involved in packing up a baby.\"\n\n\"We're just getting started\" Ethan said. \"Did you happen to notice anything unusual on the way here?\"\n\n\"No, but then we weren't really looking for anything except whether we were being followed or not\" Martin replied.\n\n\"Before we get started,\" Ethan said, \"I would like to thank Thorne and Barb for opening their home up to us at the last minute. I know that there is some bad history between us, but my hope is that our families will become friends again when this is over. I've already gone over some things with those who were already here and I won't repeat them. But I do want to add this, if you are told to move; then do it. There won't be time to argue. I know that it will be difficult for the female mates to leave us; you'll want to stay and help. But believe me when I say that the best way to help us is to do as you're told. We need to be able to concentrate on what's happening and we can't do that if you're in danger. Martin and Joseph, I'll fill you in later. Now, we know that the hunters have been here for about a week and as I told you, the crew with the exception of Olivia is vampire. It was their presence that Louise and Nathan were feeling. Adrianna, one of Thorne's security people spotted the hunter at a department store a couple of days ago. The strange thing is that she was alone which is a breach of their security. The same hunter and her crew was at Thorne's club the night a human woman was killed. We have the hunter in custody and Thorne has been getting information from her. I'll give him the floor so that he can fill us in.\"\n\nAs Thorne listened to Ethan talk, he found that in some ways he did miss the friendship that their families had once shared. It felt good to know that someone had his back. He didn't know if it was possible for them to become friends again especially since the betrayal, but they were allies now. There was no getting around that. Barb and the pregnancy had ensured that. Even if she accepted his proposal, the two families were forever linked no matter what happened between them.\n\nHe stood next to Ethan and looked around the room. His eyes landed on Barb who wasn't looking at him, but was staring at Patrick with undisguised disgust.\n\n\"If I can have your attention please\" he said loudly. \n\nHe waited until all eyes were on him before he began.\n\n\"First, welcome to my home. Consider it your home for as long as you need and want it to be. There is more than enough room for everyone so pick a room. There is a large basement that can be made into a play area for the children, but unfortunately; there are no toys or games. The only thing that I ask is that if there is a locked door; that you don't attempt to enter the room.\"\n\nHe looked at Barb when he said this and then at the rest of the room.\n\n\"As far as I know, there is only one locked room and that room belongs to my brother Noel. Other than that, you have free reign. I know that Ethan went over security issues with you so I won't repeat them but I will reiterate the point that he made about doing as you're told. It only takes one person to put everyone else in danger. After the meeting, I would like to see all of the men. I'll give you the passwords to all of the emergency exits and show you where they are. I'll leave it to you to teach this to your mates and children. Are there any questions?\"\n\nHe waited a moment and then continued.\n\n\"As Ethan said, the hunters have been here for about a week. According to Olivia Saunders, they were here on vacation. That's why there haven't been any of the usual deaths and disappearances associated with the hunters. It was a breach of their security that Olivia was out alone and now we know why. Her crew is vampire. They had two strikes against them. One Adrianna spotted Olivia, and two, they showed up at my club on a night when someone was killed.\"\n\n\"Is it possible that one of them killed the human woman?\" Joseph asked. \"And are we sure that it was a vampire that killed her?\"\n\n\"It's possible that one of Olivia's crew killed her\" Thorne replied. \"But as I told Ethan, there's no proof of that. As far as what killed her, I'm positive that it was a vampire because of the way her neck was broken. What I found odd was that there was no evidence that she had been fed from. That could be for a number of reasons including that whoever did it had already fed and that this was a crime of opportunity.\"\n\n\"What does your gut say?\" Louise asked.\n\n\"My gut as you call it, is telling me that this was a crime of opportunity.\" Thorne replied.\n\n\"One of them did it\" Louise said quietly. \"I felt it when it happened.\"\n\n\"That doesn't add up\" Martin said. \"They were here for a week without killing anyone and then they kill a human?\"\n\n\"I can't explain that\" Louise said. \"I only know that it was one of them, but it does lend credence to the thought that it was a crime of opportunity.\"\n\n\"But it was also impulsive\" Katrina added. \"I would bet my last dollar that the girl's death wasn't planned.\n\n\"Louise, is it possible for you to pinpoint their whereabouts?\" Thorne asked.\n\n\"I don't know. I haven't tried.\" Louise replied. \"Nathan and I have talked about it and decided to wait to see what happens.\"\n\n\"There is an unknown factor in this\" Nathan said. \"We don't know if they can track her. Logic says that if she can reach out to them, they should be able to reach out to her and I'm not ready to put Louise or our child needlessly at risk.\"\n\n\"Understood\" Thorne replied. \"We're grateful for the help that you've given. This is the information that I gleaned from Olivia, the vacation part is true. She was given this crew as a test- she is supposed to take over the hunter organization when Rufus steps down. Needless to say she fu.... Screwed up\" Thorne said correcting his language when he caught sight of Celeste. He paused for a second; there was something vaguely familiar about her eyes. Then he looked at Barb, Juliette, Louise and then Kevyn. He shook his head and then continued.\n\n\"As I was saying, she screwed up and Rufus does not take kindly to failure especially from his off spring. She gave me the names of all of the hunters in the area, but more are on their way. The last thing that she told me was the names of her crew. Believe me when I say that she fought me, but I did get the information without hurting her too much.\"\n\n\"What's going to happen to her?\" Juliette asked.\n\n\"That hasn't been decided\" Ethan said. \"Thorne, what else did you find out?\"\n\n\"She's afraid of her father\" Thorne replied. \"She would rather die than be turned over to him. She has no love of us, but she takes the live and let live stance. That would be something that Rufus would find intolerable which lead me to this conclusion, he knew that she was going to fail. He knows that she doesn't want his position but he can't just take it from her.\"",
        "\"He set her up\" Nathan said.\n\n\"Exactly\" Thorne replied. \"My guess is that he already has a successor picked out and whoever it is, they're going to be as bad if not worse than he is.\"\n\n\"Will he kill her?\" Louise asked oddly concerned about the hunter.\n\n\"Rufus Saunders is an insane son of a bitch\" Thorne replied forgetting about the children until he heard Celeste whisper \"bad word\". \"I'm sorry sweetheart\" Thorne said and then continued. \"He might think about killing her, but he won't. Olivia is a way to continue his line. If nothing else, he'll punish her and make her marry his successor.\"\n\nEthan listened to Thorne as he talked about Olivia and the wheels began to turn. What if??? He turned his attention back to Thorne when he began to talk about Olivia's crew.\n\n\"Here are the names of the vampires in her crew. Albert, Mary, William, Harry and Nell...\"\n\nNadine took a sharp breath and gripped Leon's hand. \n\n\"This can't be!\" She thought to herself. \"Harry is dead! And so is Nell! Papa killed her! They can't be alive!\"\n\nShe looked over at Hans and saw the surprise on his face. He gave her a reassuring nod and turned his attention back to Thorne. Leon however, saw and felt her reaction.\n\n\"Baby do you know these vamps?\"\n\n\"Its vampires and not vamps\" Nadine replied sharper than she intended. \"I'll tell you later.\"\n\n\"They're the ones aren't they?\" Leon asked. \"They're the ones that you told me about.\"\n\n\"Not now\" Nadine whispered urgently.\n\n\"Fine, but we're going to talk\" Leon said his tone firm. \"And when we're done, I'm going to find and kill every last one of them. And I promise you this; they won't be able to come back.\"\n\nNadine flinched at the intensity of his voice. She knew that it would be pointless to try to talk him out of it. It hadn't taken her long to find out that Leon had a stubborn streak a mile wide and that he took the safety of his family seriously. When he told Patrick and Nathan that he would go after them if they hurt his sisters, he meant it. The same went for Thorne. She also knew that he wouldn't rest until Nell and her family was dead. Her one consolation was that Hans and Nathan would go with him. While he was strong and growing stronger by the day, there was no way that he would be able to take on five vampires who were much older than he was.\n\n\"Does anyone have any questions or thoughts?\" Thorne asked as he looked around the room. \n\nHe saw Noel standing back in a corner watching everyone and everything. Later he would be able to relay where everyone sat, what they were wearing and the expression on their faces. It was that gift that made him an exceptional artist. He wondered what Noel was thinking as he watched and listened.\n\nWhen no one said anything, He called all of the men to his side. He noted with amusement that Victor included himself among the men.\n\n\"You,\" he said to Victor, \"What's your name?\"\n\n\"Victor sir\" Victor replied.\n\n\"Since you're the shortest man here, come up front so that you can see and hear.\"\n\nVictor didn't look at Juliette for permission as he moved closer to Thorne. \n\n\"My name is Thorne and it isn't necessary to call me sir\" Thorne said. \"I'm glad that you stepped up. There are places in the house that are too big for adults but perfect for a man of your size. These are the places where you will take the children if the need arises. In other words, Ethan and I are placing you in charge of the children. It will be your responsibility to show them where these places are and to teach them the pass codes. If anything happens and you are separated from the adults, you will take the other children to one of those places.\n\nVictor's chest puffed out with pride. He looked up at Hans who winked at him. By late morning, everyone knew the codes. Victor took the job of teaching the codes to Wanda, Celeste and Victoria seriously. He drilled them until even Celeste could repeat the codes flawlessly and made sure that they all knew where the escape exits were. Then he made sure that each of their cell phones were charged and turned on.\n\n\"We'll all take turns watching Celeste\" He said. \"Who wants to be first?\"\n\nJuliette watched Victor with a lump in her throat. He reminded her so much of his grandfather and Leon. She had no doubt that Victor Yancy was looking down on his only grandson with approval. She also knew that Angel would be proud of his only son.\n\nBarb followed Thorne around the house not speaking unless it was to repeat the codes. When her attention wandered, Thorne snapped at her.\n\n\"Pay attention! The lives of everyone in this house could depend on you knowing these codes.\"\n\nFinally, Barb had the codes memorized. She went to the kitchen where Juliette and the others were making food for everyone before putting the children to bed for much needed naps. The men were still talking and making plans. Unable to help herself, she walked up to Kevyn.\n\n\"So sis, how does it feel to be sleeping with a rapist?\"\n\nThe chatter in the kitchen died down as everyone stopped to see what Kevyn would say.\n\n\"Can you at least wait until the kids are in bed?\" Kevyn asked. \"And it has nothing to do with making up pretty stories. They don't need to hear this. After they're in bed I'll tell you whatever you want to know.\"\n\n\"You know,\" Rachel said from across the counter, \"Kevyn isn't the only one married to a rapist. In fact, we were planning to get together to talk about this and anything else that you all wanted to talk about. So why don't we do this? Let's get the kids settled and we go to an empty room to talk. As Kevyn said, we'll tell you anything that you want to know.\"\n\nBarb nodded and walked away. \n\n*****\n\n\"Well?\" Olivia asked. \"What will it take to get you to kill me?\"\n\nBenita looked at her shocked.\n\n\"Are you that afraid of your father?\"\n\n\"My father... never mind, just kill me.\" Olivia said softly.\n\n\"I can't do that\" Benita replied. \"For all I know, they may want to turn you.\"\n\n\"That would be almost as bad as giving me to my father\" Olivia replied. \"What would be the point? I would kill myself anyway.\"\n\n\"Why do you hate us?\" Benita asked. \n\n\"One of you killed my mother and my brother\" Olivia replied.\n\n\"Was it a random killing?\" Benita asked.\n\n\"What does that matter?\" Olivia retorted. \"The bottom line is that one of you killed them.\"\n\n\"It matters\" Benita replied. \"Answer the question.\"\n\n\"My father said that you people took my mother unprovoked and killed her.\" \n\n\"And your brother, wasn't he on a mission that resulted in his death?\" Benita asked.\n\n\"How do you know that?\" Olivia asked.\n\n\"I was there. Your brother was in the process of beheading a child! A baby who had done him no harm and he was going to snuff out his life as if he was nothing!\"\n\n\"Adam... he wouldn't...\"\n\n\"He and his crew rolled into Riverside late one night. There was a vampire family out for dinner. A mother, a father and a little boy. It was late enough that not many people were out so your brother and his crew of six attacked this family. My mate and I happened to be in the area, but got there too late to do anything for the parents. I killed your brother. How do you like those beans? Your brother was and is a murderer.\"\n\n\"That isn't true! Adam loved children!\"\n\n\"Human ones\" Benita said with a cold smile. \"But let's move on. Let's talk about your mother.\"\n\n\"What happened to the child?\" Olivia asked.\n\n\"I adopted him, but let's continue. What do you know about your mother's death?\"\n\n\"Were you there for that too?\" Olivia whispered still in shock.\n\n\"No, but the story is well known. Let me ask you something, other than the rogues; how many times has a vampire attacked a human?\"\n\n\"I... I don't know\" Olivia confessed.\n\n\"The answer is that it does happen, but let's look at the reasons. Sometimes the vampire is a baby who hasn't been taught how to safely take from a human or they haven't been taught to live as a vampire. In other words, they were turned and then left to survive on their own. Inadvertently, they become one of the rogues. Of course there are those who kill for the sake of killing and choose to become a rogue. The other reason is when your kind comes into town. You immediately start killing and abducting leaving us little choice but to defend ourselves. Sometimes innocent humans get hurt and of course, the hunters take no responsibility for that; but back to your mother.\n\nYour mother was abducted because the daughter of one of our kind was taken by your father and tortured in order to draw him out. In retaliation, the father of the girl took your mother as a bargaining chip. She was never meant to come to any harm. If your father would have given the girl back, your mother would still be alive.\"\n\n\"But one of you killed her!\" Olivia shouted.\n\n\"That's true\" Benita replied. \"But it wasn't one of the vampires that accompanied the girl's father. Your father employs vampires doesn't he? In fact, your entire crew is made up of vampires. How many crews are like that? I mean one human and five vampires?\"\n\n\"What does that have to do with my mother?\" Olivia asked.\n\n\"Did your father tell you who else was at that meeting?\" \n\n\"No... he said that the girl's father showed up with several vampires at a neutral meeting place.\"\n\n\"Did he now?\" Benita asked. \"What else did he tell you?\"\n\n\"Just that they killed mom before the meeting got started.\"\n\n\"And what happened to the girl?\" Benita asked.\n\n\"He said that she died.\"\n\n\"What if I were to tell you that your father had no intentions of releasing that girl? He was going to kill her and her father. What he hadn't planned on was the girl's father bringing a bargaining chip- your mother to the meeting. All he had to do was to give the girl back, but he tried to ambush the girl's father.\"\n\n\"How do you know all of this?\" Olivia asked.\n\n\"Do you think that you're the only ones who use those who take money for betraying their kind? Here's something else for you to think about, not everyone in your organization believes as you and your father does. But anyway, one of your crew killed your mother. And if you think about it, you'll realize that your father is a murdering son of a bitch who wouldn't know the truth if it sucked his cock. Do you realize that you've said very little in his defense? Why is that? In fact, you didn't defend your brother.\"\n\n\"The girl... did she really die?\" Olivia asked not answering the question.\n\n\"Why do you care?\" Benita countered. \"After all, she was nothing but a way to carry on our race.\"\n\n\"I never wanted to hurt children\" Olivia replied. \"I never wanted any of this. I just want to go home to my little house and to be left alone. I don't want to be the leader of anything. Do you know what I was doing the day I was spotted? I snuck out and spent the day pretending that I was someone else. I was Megan with two kids and a husband who was an attorney. I breached security so that I could feel normal. But you didn't answer my question. Did that girl really die?\"\n\n\"No, she still lives, but only because her father turned her. Your father tried to kill her\" Benita replied. \"You might be interested in knowing that it was her that spotted you. You still haven't answered my question, why aren't you defending your family?\"\n\nOlivia started to defend her father and brother, but it was too late. She knew that everything that Bonita said to her was the truth. At this stage of the game, she was already in deep trouble. Admitting to the vampire that she spoke the truth wasn't going to make or break anything. She was shocked at the sense of relief that she felt. She no longer had to pretend that her family wasn't as horrible as they really were. She no longer had to pretend that she wanted to take over for her father.\n\n\"I'm not defending him because I know that you aren't lying\" Olivia replied after several minutes. \"I would still rather die than be turned or to be given back to him. So do me a favor and get it over with.\"\n\n\"I can't do that, but I'll tell Mr. Sinclaire and Mr. Blackwell what you want. Do you need to use the bathroom?\"\n\nOlivia blinked. She hadn't expected to be treated with such humanity. \n\n\"Yes... please.\"\n\nBenita untied her hands and grabbed a hold of her arms.\n\n\"Just so you know,\" Benita said, \"There's no way out of here and there's nothing in the bathroom that you can use to harm yourself.\"\n\nOlivia went to the bathroom, washed her face and stared at her reflection.\n\n\"What's going to happen to me?\" she whispered.\n\n****\n\n\"Where are we going?\" Nell asked for what had to be the tenth time.\n\nIt was becoming clear that Albert really didn't have much of a plan. In fact, William had advised against going on Rufus Saunders' payroll. But Albert hadn't listened. He was seeing the dollar signs and not looking at the big picture. To William's way of thinking, they should have made their getaway long before this. There had been plenty of opportunities, but Albert refused to take them.\n\nOlivia weighed heavily on his mind. He felt guilty for leaving her at the club, but he couldn't afford to be caught. He hoped that they were treating her decently and not hurting her. Finally, he could take the bickering no more.\n\n\"Everyone just shut the fuck up!\" he bellowed. \"This is what's going to happen...\"\n\nAlbert started to say something, but William interrupted him.\n\n\"This is your fault! I tried to tell you that we needed to stay away from Saunders! And where is this grand plan to escape? We should have left a long time ago and then Harry had to kill the man's wife! What do you think Rufus is going to do when he finds out? You are no longer the head of this family, I am! I should have done this a century ago.\"\n\n\"What if I want to be the head of the family?\" Harry challenged. \"Are you going to stop me?\"\n\n\"Sit your ass down\" William said. \"You couldn't lead your way out of a fucking paper bag. You're too... That girl at the club... that was you wasn't it? You're the one who killed her.\"\n\nAll eyes went to Harry waiting for him to answer. \n\n\"Do you know what you've done?\" Mary asked.\n\n\"They don't know it was me\" Harry said.\n\n\"No, but they have Olivia\" Nell said. \"They know about us. That means that not only is Rufus going to be looking for us, so will every vampire security team in the area if not the country. We need to leave now.\"\n\nAs usual, it wasn't until the consequences of his impulsiveness was staring him in the face; did Harry understand.\n\n\"I'm sorry\" he said losing the belligerence in his voice.\n\n\"That's what you've said ever since we took that girl from her family\" William snapped. \"This time you've really done it. Do me a favor and don't speak.\"\n\n\"What are you thinking?\" Mary asked.\n\n\"We have to go\" William said. \"Go north to where we took the girl and I'll meet you there and for god's sake, keep an eye on Harry.\"\n\n\"Where are you going?\" Albert demanded.\n\n\"He's going after that bitch\" Harry said with a sneer. \"You know that she's already given us up.\"\n\nWilliam didn't answer, but gave an order.\n\n\"Go and if I'm not there in three nights, assume the worse and go to the Bahamas or better yet someplace that isn't heavily populated. If I manage to find Olivia, I'll find you. And Harry; no more killings! We're in this shit because of you.\"\n\nA few minutes later, William was sitting alone at the kitchen table. When he heard voices approaching, he vanished.\n\n***\n\nCaleb and Rufus spent the entire flight on the phone. No one had seen where Olivia had been taken or where Albert and his family had gone. The one thing Rufus kept hearing was how empty the streets were. \n\n\"If I didn't know any better, I would swear that the fangers knew that we were here.\"\n\n\"That's impossible!\" Rufus snapped. \"Even if Olivia opened her mouth, there wouldn't be enough time to get the warning out.\"\n\n\"I was just making an observation\" the voice on the other end of the phone said.\n\n\"Then observe something that I can use!\" Rufus yelled into the phone and slammed it shut.\n\n\"You aren't going to like this.\" Caleb said as he hung up his phone. \"Many of the hunters who live in the area are gone.\"\n\n\"Gone? Gone where?\" Rufus demanded.\n\n\"No one knows, but it does give some credibility to the idea that the vampires knew we were in the area.\"\n\n\"And?\" Rufus barked out.\n\n\"The only way that they would know where our people were is if Olivia told them\" Caleb said.\n\n\"She wouldn't dare\" Rufus said firm in his conviction.\n\n\"Rufus, they have her\" Caleb said. \"God only knows what they've done to her. We have to be prepared for the possibility that they've either killed or turned her.\"\n\n\"If they've turned her,\" Rufus said, \"kill her.\"\n\nCaleb blinked in surprise.\n\n\"Rufus, she's your daughter...\"\n\n\"If she's one of those things, then she's no longer my daughter; she's our enemy. She's now nothing more than an incubator to bring more of the bastards into the world, but not only that; she has information that they could use against us. She dies.\"\n\nCaleb nodded his agreement. As far as he was concerned, it was too bad. He genuinely liked Olivia and thought that she would make a good wife and mother. He was fully aware of her politics regarding the vampires and other species, but he really didn't care as long as she kept her views to herself and didn't teach them to their children. He didn't really want to marry her, but if it got him into Rufus's position, he would do it. Suddenly, he hoped that she was either dead or turned. It would make his life so much simpler and he could choose his own wife or not. No one said that he had to be married to hold the position and he sure as hell didn't need to be married in order to have kids.\n\nHe came from a family where most of the babies born were male and he saw no reason as to why he couldn't continue the trend. In his mind he bid Olivia a farewell and turned his mind to the job at hand. As soon as the jet landed, they were off the plane and rushing through the airport. \n\n\"May I hail you a cab?\" a voice called out as they practically ran to the exit\n\nNeither man replied as they ran out of the door. When they were gone Ollie took out his phone and called Ethan.\n\n\"They just landed.\"\n\n****\n\n\"I want the bastards\" Leon told Nathan and Hans. \"I'm going after them whether you come with me or not.\"\n\n\"Leon, we just can't go looking for them.\" Nathan said. \"We need to calm down and think of a plan that assures that we get we want and that we all come back in one piece.\"\n\nLeon took a deep breath and nodded his head. Nathan was right.\n\n\"I suggest that we put the word out that if they're found that we be called\" Nathan said. \"Let the hunters work for us. We'll also make sure to let the other reconnaissance teams know. \"\n\n\"So we just wait?\" Leon said.\n\n\"I know that Thorne and Ethan are setting up reconnaissance teams and that we will be a part of them\" Hans said. \"That would be the time to look for them, but I don't think that we'll find them. They have to know that they're being searched for by both sides. If they're smart, they've left the area.\"\n\n\"Nadine will never be safe until we find them\" Leon said. \"And I won't stop until all of them are dead.\"\n\nHans and Nathan saw by the expression on Leon's face that his mind was made up. \n\n\"We're with you\" Nathan said. \"I'm sure that Ethan and Thorne will help, but we've got to use our heads.\"\n\n\"Thank you\" Leon said. \"I need to go check on Nadine, hearing those names freaked her out. She was so sure that she had killed Harry.\"\n\nLeon found Nadine sitting by a heavily draped window. He sat beside her and hugged her.\n\n\"I'm going to find the bastards\" he said. \"No one will ever hurt you again.\"\n\nNadine pulled away from him, looked at him with tear filled eyes and began to beg him to let it go.\n\n\"Dina, I can't\" Leon said. \"I know that you think that they've forgotten about you, but they haven't. I'm going to end this before they find you. What I need from you is their descriptions.\"",
        "\"Before I tell you, I want you to promise me something.\" \n\n\"What is it?\" Leon asked.\n\n\"Try to make sure that Harry doesn't get away again.\"\n\nThe request surprised him since she had been trying to get him to let it go.\n\n\"You're going to go whether I want you to or not\" Nadine said by way of explanation. \"If you have to kill anyone, it needs to be Harry. The others fed from me, but he was the one who turned, raped me and was going to leave me for dead. You'll know him when you see him. William and Albert are a few inches taller, but Harry doesn't look right. I can't explain it any clearer than that. I also want you to promise that you'll be careful and if it comes to a choice of letting Harry go and you coming home to me, let him go.\"\n\nLeon hesitated and then agreed.\n\n\"I'll agree only because I don't want you to be left alone, but Dina; they're dead. Even if Harry does get away, his days are numbered. I will find him.\"\n\nNadine nodded, kissed Leon on cheek and laid her head on his shoulder.\n\n\"I say that we skip lunch and find our room\" Leon said nuzzling her head.\n\n\"I'm okay\" Nadine said. \"I was just shocked.\"\n\n\"I know that you're alright\" Leon said \"But I still want to go look for a room before the good ones are taken.\"\n\n\"Leon, look at this house\" Nadine said laughing. \"Does it look like there's a bad room anywhere?\"\n\n\"Alright, let me rephrase\" Leon said. \"I want to find a room as far away from everyone else as possible. Do you get my meaning?\"\n\n\"I think I do\" Nadine said as she stood and held out her hand.\n\nThey quickly found a room that they both liked. They were barely inside the room before Leon had Nadine on the bed pinned under him. For just a second, she tensed and then relaxed; but Leon noticed. He hadn't thought about how the revelation of who the vampires were would affect their love life.\n\n\"Baby...\"\n\n\"I'm alright...\"\n\n\"No you're not\" Leon said. \"I felt you tense. Now talk to me.\"\n\n\"I thought that you wanted to make love\" Nadine said wiggling against him as she slipped her hands under his shirt.\n\nLeon moaned when she tweaked his nipples and then ran her fingernails over the hardened tips.\n\n\"We need to talk\" he replied even as he ground against her.\n\n\"What I need is for you to make love with me\" Nadine said. \"Then we'll talk.\"\n\nNormally, Leon liked to take his time and undress Nadine in the human way; but now he felt an urgency that he couldn't explain. In seconds they were both naked. Leon kissed her neck, grazed a fang across the pulse and then bit hard enough to draw blood. He really didn't understand why he did it, only that he needed to. He felt Nadine's legs open wider so that his cock rested between her vaginal lips. He groaned into her neck when she began grinding against him and bit again.\n\n\"You are mine\" he thought to her.\n\nHe slid inside of her, paused to catch his breath and began to slowly pump in and out of her. He maintained control until Nadine rose up and bit just above his left nipple and began to drink from him. Leon moaned loudly as he felt his balls tighten up against him. He crushed her against him as his seed traveled from his sac, up his cock and shot into Nadine. Even so, he kept thrusting until she came not once, but twice.\n\n\"Now talk to me\" He said after they recovered.\n\n***\n\nBarb watched Leon and Nadine with a mixture of emotions. Jealousy, anger and an emotion that she pushed away ran through her. She turned around to go back into the kitchen and saw Celeste watching her.\n\n\"Hey there, I'm sorry if I scared you.\"\n\nCeleste didn't answer her, but turned around and went back to the kitchen.\n\nCeleste's reaction bothered Barb. While it was true that she was never close to the girl, Celeste had always returned her greeting with a shy \"hello\". Barb shrugged it off attributing her reaction to upset over the upheaval and adjusting to a new life.\n\nShe went to the kitchen where Celeste sat at the table with Wanda, Victor and Victoria. None of the children looked at her even though they knew that she was there. A feeling of disquiet filled Barb. Wanda always spoke to her no matter how rude she had been and Victor always gave her a smile that reminded her of her father.\n\n\"Hey guys\" she said deciding to speak first.\n\nCeleste didn't look at her. Wanda gave her a brief glance and spoke to her. Victor gave her a ghost of the smile that she usually got and Victoria glared at her.\n\n\"Are you ready for something to eat?\" Louise asked pulling Barb's attention away from the kids.\n\n\"Have you been badmouthing me or something?\" Barb asked.\n\n\"What? Of course not!\" Louise replied.\n\n\"Then why are they acting like that?\" Barb demanded.\n\n\"Maybe it's because of the way that you're acting\" Louise said. \"They may be children, but they aren't stupid.\"\n\n\"What are you talking about?\" Barb asked. \"I'll concede that I shouldn't have approached Kevyn the way I did, but it's more than that.\"\n\n\"Yes, you're right\" Louise said. \"When we got here did you greet them? Did you do anything to make them feel welcome? No you didn't. You immediately got in Kevyn's face about a matter that they're too young to hear about. And now you wonder why they aren't responding to you as they normally do?\"\n\nLouise stopped talking as her hands flew to her mouth. The urge to vomit hit her so suddenly that it took her breath away. Accompanying the feeling of nausea was a feeling of sadness so intense that it brought tears to her eyes. Nathan quickly walked into the kitchen and wrapped his arms around her. He almost vanished from the kitchen, but at the last moment remembered that Juliette's children were there. They hadn't been told about what Hans and the rest of them were yet.\n\n\"Let's get you to bed\" he said without sparing Barb a glance.\n\n\"What's wrong?\" Kevyn asked as soon as she saw Nathan.\n\n\"I'm ok\" Louise said. \"I just got a little nauseated.\"\n\n\"Are you sure?\" Kevyn asked as she got closer. \"You look a little green around the gills.\"\n\n\"I'm good; can you get me a glass of juice?\"\n\nNathan led her to a chair even though he felt that she needed a bed.\n\n\"Are you sure that you're alright?\" he asked searching her face for any signs of duress.\n\n\"I'm fine\" she assured him. \"And the baby is fine too so don't call Gretchen.\"\n\n\"Louise...\"\n\n\"Don't call her. I'll take a nap after I eat something.\"\n\n\"Do I have your word on that?\" Nathan asked.\n\n\"Yes, now go back to your meeting... oh wait, take some sandwiches with you. I'm sure that Patrick and the others are about to start eating the furniture.\"\n\nBarb watched Louise and Nathan and experienced the same feelings she had when she saw Nadine and Leon together. It was then that she realized that Nadine wasn't in the kitchen. She had a flash of insight, but before she could grasp it; she was distracted by hands on her stomach. She was going to slap them away until she realized who the hands belonged to.\n\nCeleste watched Barb as she talked to Louise. Before she could pull her shields closer around her, a blast of sadness and fear hit her. It took her a few seconds to realize where it was coming from. While everyone's attention was on Louise; Celeste left the table and approached Barb. Her small hands were on Barb's stomach before anyone realized that she was there. When Barb looked down at her, Celeste saw anger in her eyes that was quickly replaced by surprise.\n\n\"Why is your baby so sad and scared?\" she asked. \"Why are you always so sad and mad?\"\n\n****\n\nWilliam stood in the shadows across from the club. It wasn't a good place for him to be, but his hope was that he would find some clue as to where Olivia had been taken. He knew that he should have left along with the others, but he just couldn't leave her. He didn't care that she had probably given them all up. They had been existing on borrowed time anyway. He kicked himself for not realizing that Harry has been the one to kill the girl. To be fair, he hadn't killed in years and then it was because the girl reminded him of Nadine. That was always the reason for why he killed.\n\nComing here for vacation had been a mistake. He tried to warn Olivia, but she had made up her mind. He also knew what her father was doing and wondered why she didn't see it. Maybe she did, he thought to himself. It occurred to him that Olivia was unlike any other hunter that he had ever worked with. She hadn't seemed to enjoy the job and had only done the minimum number of attacks. Even those were half-assed and went against her father's strict directives that no one be spared. She had refused to allow the killing of children or any pregnant females.\n\nAs with Harry, he wondered why he didn't see it sooner. Olivia didn't want this life. She didn't like vampires, but was going through the motions for self-preservation. She didn't want to kill anyone. It surprised him that he was having these sudden flashes of insight about her. Suddenly, he understood something about himself. He had been and was in love with Olivia Saunders.\n\n\"Shit\" he swore under his breath.\n\nHis vision sharpened when he saw two men walking toward the club. He recognized them as hunters that belonged to one of the most sadistic groups that he knew of. They didn't just kill their targets, they tortured them to death. The sex and age didn't matter although he had heard that they were relatively gentle with the children. \n\nThese two hunters had an uncanny way of finding their prey and it was Harry who had figured it out.\n\n\"They're wolves\" He said. \"Think about it. No human would be able to pick out a vampire so easily. And I'll tell you something else; Saunders isn't going to stop with the extermination of the vampire race. He'll have every species he has working under him turn on each other and then he'll finish us off after we've decimated each other.\"\n\nHarry had been right. The hunters were wolves, but not only that; there were entire crews made up of wolves. Even the leaders were wolves. Saunders wasn't stupid. He was giving them a false sense of security. Ever since that conversation, William had been questioning their involvement with Saunders more and more. The questioning had actually started long before that, but had been nothing more than little niggles of a guilty conscience.\n\nHe realized that he was now skating on the edge of what would be considered treason by his family and a breach of contract by Rufus. For the first time he wondered if it was possible to just slip away and never see his family or another hunter again. He also dared to hope that just maybe Olivia cared for him a little. She felt good in his arms-it was as if she belonged there and he had felt no revulsion on her part when they danced. She had been surprised when he warned her about Harry.\n\nThe hunters had stopped and were beginning to look in his direction. William vanished before they fully caught his scent. Instead of going back to the condo in Palm Springs, he vanished from place to place trying to figure out what he was going to do. When dawn approached, he began to look for shelter. It didn't take him long to realize that he needed to go to an area where he knew there were no other vampires. The Hunters wouldn't go there and if they lived there, they would be on the streets looking for his family and Olivia. Just before the sun rose, William was in a home that was under construction in a new residential area.\n\nThe good thing was that it was a weekend so there would be no workers to contend with. Just to be safe, William silently moved through the partially built house looking for anyone who had the same idea he did. Finding no one, he went to the unfinished basement and curled up in a corner to rest. Rest didn't come easily. He wracked his brain to come up with an idea where to begin to look for Olivia. Finding her was just the beginning. He had to think of where he could hide her from both his family and her father. In that moment, he knew that he had chosen Olivia. He was well aware that Olivia, while attracted to him might never be able to get over what she had been taught about his kind. Realizing that he was jumping ahead, he pulled his thoughts back to the issue at hand-finding her.\n\nHe found himself grateful that he was a planner. Financially, he was very well off. He had invested and saved his portion of the money they made working for the hunters under a completely different name and in offshore accounts. Not even his family knew that he was financially set up. He had no idea of where they stood financially and he never asked. Asking meant that he would have to divulge information that he didn't want to share.\n\nThe other thing that his family didn't know about him was that he had a place completely off the grid. It was something that he had encouraged them to do and let the subject drop when they balked at the idea. If push came to shove, he could take Olivia there while they figured out their options. The problem was getting her there and if she would even go with him.\n\n\"Damn you Harry\" he swore under his breath.\n\nIf Harry hadn't killed the human girl, they wouldn't be in the mess that they were in, but then; it was only a matter of time before something happened. He closed his eyes and wondered where he could rent a car that wasn't close to the city. Palm Springs was out of the question, he had to go further away. San Diego was further away but very doable. \n\nHe took out his cell phone and then stopped. Any calls that he made would be traced. In effect, his phone was useless. William held the phone in his fist and crushed it until it was nothing more than small pieces of plastic and the battery dust. He planned to leave as soon as it was dark enough to buy a disposable phone. From there he would go to San Diego, rent a car and drive back. He also needed to find another place to stay. \n\nHe briefly thought about going to the house. It was the first place that would have been searched. But then, he didn't know where Rufus was. With his luck, Rufus would be staying at the house. He wondered how he could make that work for him. Slowly, a plan began to form.\n\n***\n\n\"I'm not mad\" Barb said with a smile that she hoped looked sincere. \"I'm just worried about your mom and aunts.\"\n\nCeleste tipped her head to the side as she always did when she had a question.\n\n\"Celeste honey, why don't you finish your snack\" Juliette said as she put her hands on her shoulders.\n\nCeleste didn't move for several seconds. Her hands still rested on Barb's belly as she looked up at her.\n\n\"He's sad and scared\" she repeated. \"He wants to know why you don't like him.\"\n\nBarb stumbled backwards as if she had been shoved and stared at Celeste. By this time, Kevyn and Louise were standing beside Juliette and Celeste.\n\n\"Celeste baby, put your shields up\" Louise said softly. \"Do it now.\"\n\nTears ran down Celeste's face as she turned around and threw her arms around Juliette's waist. No one spoke as Juliette led Celeste from the kitchen. Wanda, Victor and Victoria followed without being told. As she passed Barb, Victoria gave her a glare that reminded her of the look that Veronica had given her several weeks before.\n\nBarb stared back at her refusing to be intimidated by a child, but Celeste- Celeste had scared her. The little girl had scared her more than anything else that had happened to her. Seeing Celeste's tears triggered the memory that she had of Louise earlier, except that this time; there was no sense of relief.\n\n\"Sweetheart?\" Nathan called telepathically.\n\n\"I'm alright...Is Leon with you?\"\n\n\"He just got here\" Nathan replied.\n\n\"Do me a favor and send him to Celeste, she needs him.\"\n\n\"I'll tell him, but Lou are you sure that you're alright?\" Nathan asked.\n\n\"I'm fine and it's time for a long overdue talk with my sister\" she replied.\n\nShe turned to look at Katrina and Rachel.\n\n\"I'm sorry, but could you please excuse us while we talk with our sister?\"\n\nBarb didn't speak as she listened to Louise make apologies. Her heart pounded as she heard the same thing in Louise's voice as she heard in Thorne's voice- she had had enough.\n\n\"I think that I'd better lay down\" Barb said. \"I guess I'm a little grouchy.\"\n\n\"We talk now\" Louise said. \"This has gone on long enough. If you would like to talk while you lie in bed, I have no problem with that and I'm sure that Kevyn and Juliette won't either.\"\n\n\"There's nothing to talk about!\" Barb snapped. \"And I don't know what Celeste was talking about...\"\n\n\"Yes you do\" Louise said interrupting her. \"Now, where are we going to talk?\"\n\nBarb blinked. This was a Louise that she didn't know. She had seen a hint of it at her engagement party, but this was more than a hint. This was a woman who while still quiet, had confidence in herself. She was looking at a woman who had no regrets and was happy and would have been even if she was still working at the grocery store just as long as Nathan was with her.\n\nBarb looked over at Kevyn who hadn't spoken and realized the same thing was true of her. She suspected the same was true for Juliette and Leon. None of them had been afraid of hard work and worked for everything that they had. In fact, Kevyn was in school and still planned to work as a nurse. Louise was planning to open a restaurant and Leon was learning architecture- a new career for him. She on the other hand was doing nothing other than planning how to spend Thorne's money. When she realized this, she reacted as she always did- with a sharp tongue.\n\n\"I'm not talking to any of you\" she said. \"All you want to do is gloat and I don't want to hear it. When this is...\"\n\n\"Barb... we're going to talk\" Juliette said from behind her. \"I'm sick of this and you know that this isn't what mom and dad wanted. Not only that, now it's affecting the kids.\"\n\n\"Oh and I suppose they would be happy knowing that their daughters married into a family of rapists?\" Barb retorted. \"And kids are supposed to be resilient aren't they?\"\n\n\"Since when have you ever cared about what mom and dad wanted or needed?\" Kevyn asked. \"It's always been about you. Even now you haven't asked about Celeste. I agree with Juliette and Lou, it's time to deal with our issues while we're here together. If at the end of it you don't ever want to talk to or see us again, then fine; but we will talk.\"\n\n\"Oh I see,\" Barb said, \"The three of you ganging up on me, but alright, we'll talk and after we're done- we're done.\"\n\nAdrianna stood outside of the kitchen listening and shook her head in confusion. After her capture and rescue from Rufus Saunders, it had taken months for anyone, and that included her parents to speak to her. She had actually questioned if they still loved her. She would have given anything to have had a family that was willing to accept and forgive her as Barb's family apparently was willing to do so easily. All the bitch had to do was give a little. Her family was willing to fight for her and the stupid bitch wouldn't or couldn't see it. She meant it when she said that she felt sorry for the baby.\n\nShe also felt for Celeste. That the girl was powerful was obvious. Adrianna had no doubt that when Celeste was an adult; she was going to be a force to be reckoned with. She stepped back as Barb, followed by her sisters left the kitchen and went to the library. She knew that there were guards below the window of the library and she took up a post outside of the closed door.\n\nOnce inside the library, Barb sat down and waited. Her mind was already wandering as she had no interests in what her sisters were going to say.\n\n***\n\nOlivia left the bathroom after a few minutes and joined Benita in the small room just outside of it.\n\n\"I had some food brought in for you\" Benita said. \"I don't know what you like to eat so I had a salad and something to drink brought in.\"\n\nOnce again Olivia was surprised at the way in which she was being treated.\n\n\"Not all of us are cruel to our prisoners\" Benita said when she saw Olivia's surprise. \"Can you say the same?\"",
        "\"No\" Olivia confessed. Every story that she had ever heard about the capture of vampires was horror filled. Even the ones where the deaths were supposedly merciful. \"Why are you being so kind to me?\"\n\n\"In my other life,\" Benita said after a brief hesitation, \"I'm an economics college professor. One of the things that I teach is that you treat people in the way that you want to be treated- in other words, customer service. I know that it contradicts what I do on the side, but life is full of contradictions isn't it? You've given me no reason to hurt you, but if you do... Now please, sit down and eat.\"\n\n\"You're really a college professor?\" Olivia asked.\n\n\"Most of us hold human professions\" Benita replied. \"There are those among us who are doctors, lawyers and custodians. The person who serves you when you go through the drive through for a late night snack could be vampire... do you see what I'm saying? Most of us are peaceful. We live by human law even though in our world they really mean nothing. We watch for your kind and when we know that you're around, we issue warnings to steer clear. I don't deny that there are those of us who hate your kind with a passion and will kill you on sight, but those are in the minority. The rest of us just want to be left alone.\"\n\n\"I wanted to be a kindergarten teacher\" Olivia said. \"I never pursued it because my father had other ideas.\"\n\n\"Why didn't you do what millions of people have done?\" Benita asked. \"Why didn't you just leave and make your own way?\"\n\nOlivia laughed.\n\n\"You don't know my father. He would hunt me down and drag me back home before I got one bag unpacked.\"\n\n\"It's obvious that you don't hold to the same beliefs he does or at least not to the same extent\" Benita said. \"But you don't speak up for yourself. Why is that?\"\n\n\"Again, this is my father we're talking about\" Olivia said. \"With him there is no democracy. There's only his way. To question anything he says is considered treason. At the very least its punishable by whipping, at worst, you die.\"\n\nBenita looked at Olivia and felt a little sympathy for her but she was still a hunter no matter how soft hearted she was.\n\n\"Eat and I'll be back later\" Benita said. \"Just remember that there's no way out of here and if you try anything, you will be hurt.\"\n\nAfter Benita left the room, Olivia sat down and tried to eat. She took a few bites of the salad and pushed it away. She wondered where William and the others were and if they had been caught by either side. Of the five of them, William was the only one that she had any real concerns about. She also knew that her father had to be in town already and looking for her. Her stomach dropped at the thought of it. She could already feel his cold gray eyes on her. She could hear his strong tenor as he accused her of treachery and berated her for her failures.\n\nOlivia stood up and began to walk around the room wondering if there was a way out of the mess she was in. If there was, she wasn't seeing it. The only thing that she could think of was to start praying that she would be killed and that it would be quick and merciful.\n\n***\n\nNoel stopped painting and looked at the portrait of the eyes. The owner of them was upset. He could feel the sadness coming from the painting. He laid down his brush and moved closer to the portrait of the eyes.\n\n\"What is upsetting you?\" \n\nSilence.\n\n\"How can I help if you won't talk to me?\" he asked gently. \n\nHe waited for several minutes and when there was no response, he kissed the portrait where the forehead would be and went back to work on his painting. As he painted, he thought about the owner of the eyes. He wondered what she looked like, not that it mattered. She would be beautiful even if she had two heads and had a nose like Pinocchio. He wondered what she did for a living and if she liked the arts and music as he did. He looked at the eyes again and resisted the urge to ask her where she was. For one, he didn't think that she would tell him and two, apparently the fates didn't think that it was time for them to meet. And given what was happening, it was probably for the best.\n\nNoel sighed and looked at the portrait that he was working on. It was a portrait of Ethan and Thorne standing side by side as Steven Sinclaire and his and Noel's father had once done before... \n\nThat was as far as the thought went before a sharp pain that started behind his eyes intervened. Noel wiped the tears away and shook his head to clear it. Whatever it was, he wasn't supposed to remember it; at least not now. He decided that when the time was right, the memory would come and there would be no pain associated with it. The decision felt right to him. Once he accepted it, the pain completely vanished. He picked up his brush and continued working on the portrait of Ethan and Thorne softly humming 'you are my sunshine'.\n\n***\n\n\"I don't like your aunt\" Victoria said as she held Celeste's hand. \"Why is she so mean?\"\n\n\"I don't know\" Wanda replied. \"She's always been kind of mean.\"\n\nWanda sat on the bed next to Celeste who was now sleeping. She had been furious with her aunt for making Celeste cry. After Leon had calmed Celeste down, he had asked Wanda and Victoria to sit with her. Every so often, Celeste would begin to cry in her sleep. Wanda did the one thing that she knew always cheered her little sister up. She began to sing 'You are my sunshine' until Celeste quieted.\n\nWanda had already made a decision. She wasn't going to let Barb hurt Celeste again and if she got punished for being disrespectful, then so be it. Truth be told, when she found out that they were all going to be staying in the same house with Barb, she had to bite her tongue. She loved her aunt, but she didn't like her. She could only hope that whatever was happening was over quickly so that they could go home. She had science projects that needed tending to and she hated missing school.\n\nSeeing that Celeste was finally in a deep sleep, Wanda touched Victoria's hand and pointed to the desk in the corner.\n\n\"I don't want to wake her up\" she murmured to Victoria.\n\n\"I'll help you keep her safe\" Victoria said. \"I won't let anything hurt her.\"\n\nWanda gave Victoria a curious glance and then thanked her. She had the feeling that Victoria wanted to tell her something but wasn't sure if she should. She loved Victoria, but at times found her mysterious; but not in a creepy kind of way. She had a lot of questions for her, but something always stopped her from asking. Now was one of those times.\n\n\"Let's play scrabble\" Victoria suggested as she turned on her laptop. As with her mother and her sisters, it was her favorite game and Wanda gave her a run for her money.\n\nWanda glanced over at Celeste and nodded.\n\n\"Oh and only English words this time\" she added.\n\n****\n\nBarb sat staring at her sisters waiting for one of them to speak. Finally, she broke the silence.\n\n\"What was that thing with Celeste? Why would she say something like that unless you've been talking about me behind my back?\"\n\n\"Celeste is what's known as an empath\" Juliette explained. \"I don't really understand how it works, but she can feel the emotions of other people. That was why she was always so frightened. Apparently, she can feel whatever it is that your baby is feeling.\"\n\n\"An empath... what is this? The twilight zone? And by the way, she's wrong...\"\n\n\"No she isn't\" Louise said. \"I've felt it too but it took me longer to figure out where it was coming from.\"\n\n\"I suppose that you're an empath too?\" Barb asked.\n\n\"Yes among other things\" Louise replied. \"But we can talk about that later. Right now we need to talk about how we can act like what we are-sisters.\"\n\n\"Now you want to act like sisters?\" Barb sneered. \"Where were you when I landed? Oh yes... you had plans that were more important than I was. Why didn't you introduce me to a nice respectable man? Because you didn't want me to have more than you and what happened? I end up with that bastard Thorne Blackwell. Let's face it, you came out here, married into money and had no intention of sharing it.\n\nAnd you Miss Purity... you come out here, meet a man and boom you're pregnant! I wonder what mom and dad would have to say about that! Is that how you got him? You can tell us now; you've got the ring on your finger.\"\n\n\"Now look...\" Kevyn started to say, but Louise shook her head to silence her.\n\n\"And you,\" she spat out at Kevyn, \"You say that no one stuck around to help Louise, but where in the hell were you? You were out here trolling for dollars! You say that you weren't, but I know better. By the way, you said that Clay killed someone? Just for the record, I don't believe it. So how did you get your rapist? Was he raping you and you decided that you liked it? Did you become a willing victim?\"\n\nBarb was out of control and she knew it. But she couldn't seem to stop herself. She continued to rant not censuring herself.\n\n\"And let's not forget Juliette who had every woman's dream for a man and couldn't hold on to him. You were looking for a rich man too and don't deny it. We talked about it. That's why you dumped your kids on Louise and went to the clubs. None of you have made an effort to try to help me! I'm in this position because of you!\"\n\n\"Are you done?\" Kevyn asked quietly. \"If you aren't, then please continue. Tell us how it's our fault that you ended up with Thorne when we tried to get you to leave with us. Explain to me how it's our fault that you went to his club when Patrick tried to warn you away from it. Explain to me how it's our fault that you said that you wanted nothing to do with us. Tell me how any of the choices that you made is our fucking fault!\"\n\n\"Kev...\" Louise said.\n\n\"No!\" Kevyn said. \"I'm tired of this shit! For as long as I can remember it's been about you. You didn't give a damn about mom and dad or anyone else for that matter. The only thing that ever mattered was what you thought you needed. Now you've got it and guess what? You're still the sad, miserable person you always were. You're still blaming other people for your choices and I for one refuse to accept the blame. Oh... remember this, you showed up uninvited. You didn't give us a chance to get settled so that we could invite you. Not only that, you didn't call me, you called Lou thinking that she would be easy to get around. That was you thinking that what you wanted was more important than anything and anyone else. You came out here under the guise of wanting to spend time with us. You lied or tried to...\"\n\n\"Why didn't you tell me about the rapes?\" Barb shot back ignoring the issues that Kevyn brought up.\n\n\"How were we supposed to do that when you wouldn't talk to us?\" Kevyn asked. \"Louise showed up at your door and you threw her out! You changed your cell phone number and specifically told us to leave you alone. You've turned down any and all efforts that we made to reach out to you! So tell me how in the hell were we supposed to tell you anything?\"\n\n\"Barb,\" Juliette said softly, \"We love you; you've got to know that. Yes I admit to wishing for a rich man to take care of me and the kids and yes I admit to looking for one. You're also right about Angel. I was stupid and immature, but that doesn't make how you've been treating your family right. I've seen glimpses of the person that you could be, but every time she makes an appearance; you stop her. Why is that? No one is expecting you to do a complete turn-around. All we want is to do is to find a way that we can function as a family. Is that too much to ask?\"\n\n\"You didn't answer my question\" Barb said to Kevyn ignoring Juliette.\n\n\"No, Patrick didn't rape me\" Kevyn replied.\n\n\"Would you tell me if he did?\" Barb countered.\n\n\"Yes I would tell you\" Kevyn replied, \"but I think that I'm beginning to understand what's happening here. You really don't care. You acted enraged, but you never asked if I had been hurt. That was Leon, Juliette and Lou's first question. The only thing that this means to you is that you think that it makes you better than us. It's something for you to gloat over, but you know what? Go ahead and gloat. What they did is common knowledge. It's also common knowledge that they've owned up to it, faced it and aren't blaming others for their actions. If it makes you feel better to gloat then go for it. I don't care but you need to stop blaming your issues on other people. When your husband left, according you it was his fault. But wasn't it because you made a promise and then reneged on it?\"\n\n\"What do you know about that?\" Barb asked surprised.\n\n\"He told me\" Kevyn replied. \"He didn't want us to think badly of him, but as I said; go ahead and gloat. I just don't care anymore.\"\n\nBarb blinked at the resignation in Kevyn's voice. She really didn't care.\n\n\"I'm going to tell you something else\" Kevyn said. \"You could have had a good mate... you had a good mate but all you could see was that he worked in a hotel. All you had to do was give him a chance and just maybe you could have come to love him. He went to the club that night fully prepared to fight for you and you turned him away. Now you're pissed at Juliette because she saw what a good man Hans is. That he's with her isn't her fault, it's yours. It's a consequence of your actions just like your husband leaving you was, as this pregnancy is and the fact that we're this close to walking away. My question to you is this, when are you going to start facing the fact that we aren't your enemy? When are you going to realize that you are your own enemy and the choices you made were your own?\"\n\n\"She knew that he had money\" Barb said looking at Juliette and ignoring Kevyn's questions.\n\n\"No I didn't\" Juliette replied. \"When I first saw Hans, I saw the same thing that you did; someone who worked at a hotel to pay the bills. But Barb even if he did have to work to pay the bills, I would still be with him. There are more important things than money. I understand why you think that it's so important. We had a hard life. All of us, mom and dad included wanted something more and god only knows how hard dad tried. I know that you think that he didn't try hard enough and I'm not going to try to convince you otherwise. I know that you feel that you were abused, again; I'm not going to try to tell you that you weren't. Those are your beliefs. What I am going to tell you is this, love you or not; we can only take so much of your attitude. I'm tired of being figuratively slapped in the face every time we reach out to you.\n\nYou've got nieces and a nephew who don't like you. They love you, but they don't like you. You're carrying a baby that knows that you don't love him and he's afraid. I know that the circumstances of my pregnancies were different, but Barb; this baby is coming and you need to start thinking about that. You need to decide if you're going to be a mother to that baby or not. We want to help you if you'll let us. We want to help you decorate your nursery and have you help us decorate Louise's. We want to know our nephew. So can we please stop fighting and make our way toward being a family?\"\n\nBarb didn't answer, but looked at Louise.\n\n\"Aren't you going to say anything?\"\n\n\"What do you want me to say?\" Louise asked. \"It's all been said. I agree with Kevyn in that your only interest in the rapes is that it makes you feel that somehow you're better than we are. Maybe you are, but are you any better off? I think that if you stop and think about it, you already know what it is you're missing. Until you can admit that there's nothing else to say. I can only hope that you'll let us be involved with the baby and...\"\n\n\"So damned perfect\" Barb said interrupting Louise. \"So damned perfect with your kisses on the temple and cheeks. Does that spend at the store? Does that make people notice who you are?\"\n\n\"Fuck\" Kevyn swore as she stood up. \"I'm done here. Barb, when and if you're ready to talk and rejoin the family, let me know.\"\n\nBarb's mouth dropped open when Kevyn started to walk out.\n\n\"You're walking out?\" Barb asked.\n\n\"You were right\" Kevyn replied. \"There isn't anything to talk about. You're right and we're wrong. Being loved and loving doesn't count for anything and you can't spend it at the store. Being together as a family doesn't mean anything and your baby.... Barb, whenever you're ready call us. The ball's in your court.\"\n\nJuliette stood up next.\n\n\"I'm with Kevyn\" she said. \"We could go around and around about this all day. No matter what we say or do, you're convinced that we're against you when we're not. I want to add this one last thing, if you and Thorne decide that you don't want your baby, Hans and I will take him. I can't stand the thought that he will be as miserable as you and Thorne are. If you and Thorne work things out, we'll give him back. Just think about it ok? For once think about someone other than yourself. You have my number and I'll be around if you want to talk.\"\n\nFor a moment, Barb couldn't speak. She stared at Juliette flabbergasted and didn't know how to respond. Finally, she spoke.\n\n\"I'll concede to one thing\" she said. \"I shouldn't have jumped you in front of the kids like that. They didn't need to hear that and I really didn't mean to scare them. As to the rest of it...\"\n\n\"As I said, I'm done\" Kevyn said as she slipped out of the door followed by Juliette.\n\nBarb watched them leave feeling much the same way she did when her husband left her. She looked at Louise expecting to see her standing.\n\n\"Aren't you going to say anything?\" Barb asked\n\n\"Barb I don't know what else to say\" Louise said sadly. \"We're trying but you have to give a little. We're planning to meet with Katrina, Rachel and Maryann in a few days. If you're interested in having some guidance in getting along in this crazy world that we married into please come. I also think that you should give some thought to Juliette's offer.\"\n\n\"How do you do it?\" Barb asked softly. \"How are you adjusting so easily to this? How can you be a part of that family? How can you bring a child into this?\"\n\n\"Do you want an honest answer?\" Louise asked.\n\nBarb hesitated. Did she really want to know? She decided that she did.\n\n\"Tell me.\"\n\n\"I'm not spending all of my energy trying to find ways to make myself and other people miserable. I'm trying to learn all I can about this world and what it means for my baby. I know that this is far more than you bargained for, but it's a reality that you have to learn to accept. Meeting with Katrina, Rachel and Maryann will help with that. Talking to us-your sisters will also help. Even though Kevyn is just as new to this as I am, she was still helpful.\"\n\n\"I'm not trying to make everyone miserable!\" Barb said heatedly.\n\n\"Aren't you? That's what it looks like to me\" Louise said. \"And there's the other thing, the thing that you're too afraid to admit that you want and need. You keep thinking that you have to have one or the other when that isn't true. As far as being in this family, one; Nathan didn't rape anyone- you know that. I also believe that anyone and I mean anyone can change if they want to. I'm not saying that it's easy, I'm sure that Ethan and the others can tell you that it wasn't. It's a hard thing to admit to others what you are and to admit that you were wrong. The question is at what point do you stop blaming others and take responsibility for your actions. I could be wrong, but I think that's where change starts. I also agree with Juliette, no one is expecting a personality transformation. We just want to get along as families are supposed to.\n\nYou asked how I could bring a baby into this. Into what? A family that will love and protect her? Barb a baby is a chance to start over. This baby will know what her father's family was and is. She will also know how they struggled to change and how they helped others. But while we're on the subject of babies, you say that Celeste is wrong. But I notice that you refer to the baby as it and not he or she. Why is that? If you're accepting the fact that the baby is coming, and you imply that you care for him; why are you still calling him 'it'?\"",
        "Instead of Louise leaving, Barb did.\n\nLouise watched her leave and sighed. They had done what they could do. It was now up to Barb to decide what she wanted to do.\n\n*****\n\nBy evening, William knew what he had to do. He left the house, went to San Diego and rented a car. Afterwards he went to a Wal-Mart and bought a pre-paid phone, loaded it with minutes and headed back to meet the enemy. He would go to the house first to see if Rufus was there. If not, he would make himself known to one of the hunters who would take him to where Rufus was staying. He had to make sure that it was a hunter who knew him or there would be a problem. He felt the beginning pangs of hunger and knew that he had to feed first. He would need to be totally focused when he went to meet Rufus. He was about to begin a very dangerous game.\n\nHe drove around until he found an area of the city that looked like the red light district. He usually had no preference as to who he fed from just so it wasn't a child. But tonight, he wanted a woman. It had been a long time and unlike some of Harry's women, she would live. The sex would be consensual but the memory of the bite would be erased. The woman would also be well compensated. \n\nIt took him almost thirty minutes to make his selection. She had to be clean and of legal age. She also had to be experienced. He had no desire to take away the innocence of one who had never been touched. He supposed hearing the screams of the girl that they took from her family had something to do with that. As a precaution, he always compelled the woman to tell the truth about her age and experience.\n\nHe saw the woman standing against a wall with her left hip jutted out and a hand on her hip. What drew him to her was that she wasn't dressed as provocatively as the other women walking the street. He pulled up and watched her for a few seconds. She was a pretty woman with short dark hair. She was a little on the thin side; but she had a nice ass. His hands itched to touch it and the rest of her.\n\nThe woman finally looked at him and shyly smiled. William realized that she was new to working the street and wondered what happened to make her choose this profession. He watched as she approached the car a little unsteady on her high heels.\n\n\"Hi honey\" she said as she leaned into the window.\n\n\"Hello\" William replied in a low hypnotic voice. \"How long have you been on the street?\"\n\n\"A... a week\" The woman replied frowning. No one had ever asked her that. In fact, they did what they wanted and more often than not; they didn't pay.\n\n\"Get in\" William said releasing the compulsion. \n\nIf she said no, then he would find someone else. The woman walked around the front of the car, stopped at the passenger door and hesitated before getting in. When she was seated in the car, William asked her to direct him to a hotel.\n\n\"I don't go to hotels\" she said. \"I get left paying the bill.\"\n\n\"Where do you go?\" William asked.\n\n\"We do it in the car or my apartment...\"\n\n\"You take strange men to your apartment?\" William asked shocked. \"That isn't safe... why do you do this? I can tell by looking at you that you're new.\"\n\n\"Why do you care?\" the woman asked sharply.\n\nWilliam looked over at her and shrugged. \n\n\"I am curious, but it isn't my business. Take me to a hotel and I'll pay the bill before we check in. You have my word that I won't slip away without paying you.\"\n\nTen minutes later, they were checked into a dingy hotel room. The woman began to undress before William could say anything. \n\n\"What do you want?\" She asked and then rattled off the charges for a blow job, intercourse and anal sex. \"I'm not into pain so no hitting or anything like that.\"\n\n\"Neither am I,\" William assured her, but my time is short.\"\n\nHe crossed the small room, took the woman into his arms and sighed. He felt his cock swell and strain against the front of his pants as she pressed against him.\n\n\"What is your name?\" he asked as he inhaled the scent of her hair. \"And don't lie. I want to know your real name.\"\n\n\"Leslie.\"\n\n\"Leslie, I am called William. Even though money will exchange hands, I want this to be enjoyable for you. Relax and let me do the work.\"\n\nHe silenced Leslie with a kiss when she tried to object. He felt her tense in his arms, relax and then return the kiss as if she really enjoyed it. As much as he wanted to take his time with her, he had to move things along. He picked her up, carried her to the bed and laid her on it so that her legs hung over the side. He quickly undressed and dropped to his knees. Without hesitation he spread her thin legs as wide as they could go and began to lap at her with a pointed tongue.\n\nLeslie gasped and then moaned as William licked and sucked her clit with varying degrees of pressure until her orgasm began. Her hips bucked when she felt two fingers enter here and a thumb massaging her clit.\n\n\"Oh god!\" she screamed when she felt his lips graze her groin.\n\n\"Thank you for helping me tonight\" William murmured just before he bit.\n\nLeslie froze in shock and then screamed as the most intense orgasm of her life washed over her. William watched her carefully and made sure not to take too much. He licked the wound closed, moved between her legs and slowly slid into her. Leslie wrapped her legs around his back and crossed her legs trying to pull him further into her.\n\nWilliam came with a bellow as he emptied into her and as she came for a second time. Afterwards, he kissed her forehead and gave her a command.\n\n\"You will not remember seeing me\" he said looking into her eyes. \"You will leave this room, go home and not come out until morning. After tonight, you will no longer do this line of work. Use the money that I will leave you to pay your expenses while you find more suitable work.\"\n\nAs an afterthought, William decided to take Leslie home. For a reason that he didn't understand, he felt responsible for her. He knew that she wasn't his mate, but he still felt a sense of responsibility. When they got to her apartment, he reinforced his commands. He didn't pull away until she was safely indoors. It was time to go find Olivia.\n\n*****\n\nRufus walked around the house where Olivia and the others had been staying looking for any clues as to their whereabouts. All of their belongings were still there telling him that they had planned to come back to the house.\n\n\"Anticipate!\" he growled under his breath. \"I told her to always anticipate!\"\n\n\"The only thing that I found was the name of the club written on a piece of paper.\" Caleb said.\n\n\"Do we know who owns the club?\" Rufus asked.\n\n\"No, but I can find out\" Caleb replied.\n\nA few minutes later, Caleb was back with news that he knew would set Rufus off again.\n\n\"Well?\" Rufus demanded.\n\n\"The club belongs to Thorne Blackwell\" Caleb said. \"I made a few phone calls and made contact with one of our informants.\"\n\n\"Thorne Blackwell?\" Rufus asked. \"He's in the area? Why didn't we know this before? Why in the hell do I pay people to keep track of these bastards if I don't have the information?\"\n\n\"Rufus, you know as well as I do that they are adept at not being seen or noticed. But at any rate, it was Blackwell that took Olivia.\"\n\n\"Shit!\" Rufus exclaimed. \"Then she's turned and we have to kill her.\"\n\n\"You don't know that\" Caleb said. \"She could be dead.\"\n\n\"The Blackwell's aren't murderers and I'll tell you something else... call that idiot Masterson and see what other vampire families are out here.\"\n\n\"Are you thinking about someone in particular?\" Caleb asked taking out his phone.\n\nRufus didn't answer, but walked away.\n\n\"I'm going to change clothes; I want an answer by the time I get back.\"\n\nRufus was back ten minutes later dressed in his hunting clothes. The black leather jumpsuit fit his tall lanky form like a glove. The matching leather gloves were tucked neatly into his belt and his weapons waited by the door.\n\n\"What did you find out?\"\n\n\"The other major family in the area is the Sinclaires...\"\n\n\"I knew it!! I fucking knew it! Where there's a Blackwell, a Sinclaire isn't far away.\"\n\n\"I don't understand\" Caleb said.\n\n\"All you need to know is that the Blackwell/Sinclaire connection goes back centuries. It was a Blackwell who killed my ancestor. I don't have time to go into it, but suffice it to say that we're up against two of the most powerful vampire families around. I would say that the only family even more powerful is that of their bitch queen. I would really love to get my hands on her, but it's a suicide mission- at least for now. As of yet we haven't been able to get even remotely close to her.\"\n\n\"So if the Blackwell's and Sinclaires are together...\"\n\n\"We're in for one hell of a fight\" Rufus said. \"I still have a question, why didn't we know that Ethan Sinclaire and Thorne Blackwell were here? Call Masterson back, I want to know why he didn't tell us.\"\n\nCaleb called Masterson back and got his voice mail.\n\n\"He's not answering\" Caleb said. \"I just hung up from talking to him.\"\n\n\"Son of a bitch!\" Rufus cursed as he realized what happened.\n\nHe thought that he had gotten rid of the traitors in his midst. Apparently, he was wrong. If there was one, then there were more. He couldn't worry about that now, it was time to find Olivia and hopefully eliminate one if not both of the families.\n\n\"Let's go\" He said walking over to his weapons.\n\n\"I was hoping to find you here\" A voice that Rufus recognized said from across the room.\n\n****\n\nBarb left the library and went to her room. She had no desire to see or talk to anyone else. After a few minutes, she decided that she needed to at least apologize to the children, Celeste in particular. She shook off her nervousness as she left her room and went to the room where the girls had chosen for their own.\n\nShe stood in front of the door for several minutes before she softly knocked. She almost walked away when the door opened and Victoria stood there staring up at her.\n\n\"Who is it?\" Wanda asked as she came to the door. She stopped when she saw it was Barb. \"Hi Aunt Barb.\"\n\n\"Hi... Wannie... I just wanted to say that I'm sorry for scaring you guys. Is Celeste alright?\"\n\n\"She's sleeping\" Wanda replied coolly.\n\n\"Will you tell her that I was here?\" Barb asked.\n\nWanda looked at Barb undecided and then agreed.\n\n\"But Aunt Barb, she's just a baby and you really do scare her\" Wanda said.\n\n\"Yes... I know\" Barb said. \"Wannie; if I asked you a question, would you tell me the truth?\"\n\n\"Yes.\"\n\n\"Your mom says that you love me but that you don't like me; is that true?\"\n\nWanda hesitated. As much as she disliked her aunt, she didn't want to hurt her feelings.\n\n\"It's ok, you can tell me\" Barb said.\n\n\"I... yes, it's true\" Wanda said softly and looked away.\n\nOf everything that Barb had been told over the past several weeks, it was that simple admission that hit her hard.\n\n\"Can you tell me why you don't like me?\" Barb asked.\n\n\"You aren't nice to people\" Wanda replied. \"You aren't nice to mom, Aunt Kevyn, Aunt Louise and Uncle Leon. And Celeste is right, you're always so mad at everything.\"\n\nBarb swallowed hard and nodded.\n\n\"Thank you for being honest.\"\n\n\"Can I ask a question?\" Wanda asked.\n\n\"Ummm sure\" Barb replied.\n\n\"Why don't you like us? Did we do something wrong?\"\n\nBarb didn't know what to say. So she gave the only response she could think of.\n\n\"It's not that I don't like you... you'll understand when you're older.\"\n\nShe took off before Wanda could ask any more questions. This time when she went to her room, she stayed there for the rest of the night.\n\n****\n\nEthan and Thorne were in Thorne's office when there was a tap on the door.\n\n\"Enter!\" Thorne called out.\n\nLeon stepped inside of the office and greeted them with a curt nod of his head.\n\n\"I want to go when you start looking for the bastards that came with that hunter.\" \n\nThorne and Ethan looked at each other and then back at Leon.\n\n\"Leon...\" Ethan said.\n\n\"I already know what you're going to say\" Leon interrupted. \"I know I'm new to this whole vampire thing and I know that I have a lot to learn, but let me tell you why I want and need to go.\"\n\nThey listened in silence as he explained Nadine's connection to the vampires.\n\n\"So you tell me,\" he said when he was done, \"are you telling me that you wouldn't want a piece of them? The only one that I really want is the one named Harry. He's the one who hurt, turned her and then was going to leave her for dead. Say no and I'll go anyway. Nathan and Hans both said that they'd go with me.\"\n\n\"Alright\" Ethan said. \"We'll put you, Hans and Nathan on a team together. I know that Nathan and Hans have been training with you so I'm confident in your ability to protect yourself and them if need be. Just make sure that Nadine is going to be alright with this.\"\n\n\"We've talked\" Leon replied. \"She understands that I need to do this. If I don't, she'll never be safe.\"\n\n\"We understand\" Thorne said. \"Could you do us a favor and spread the word that there's a meeting in two hours?\"\n\n\"Did you know anything about that?\" Thorne asked after Leon was gone.\n\n\"No\" Ethan replied. \"But I have something else to talk to you about before the meeting.\"\n\n***************\n\nThank you all for your patience! I also want to thank Mostera1, Nyshia 1975 and Donalde for beta reading for me."
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire",
        "drama",
        "hunters",
        "black women",
        "white males"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/thorne-ch-06"
}