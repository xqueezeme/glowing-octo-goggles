{
    "title": "Lost & Found Ch. 06 Pt. 01",
    "pages": [
        "In order for this story to make sense, it is advisable to read at least Part 5, as this is a continuation, set just a few months after the events told there. There isn't a large amount of sex here, and there is a second part coming shortly, so please reserve your judgement until that second part appears. Of course, the more eagle-eyed may be able to deduce who Luna actually is from the clues in Chapter 5, but part 2 will make all clear, I promise you!\n\nMy thanks go to GrandTeton for once more editing, breaking me of my habit of writing long sentences that leave on gasping for air, and advising on the story-line and the continuity. My thanks also to Bonnie for liking this, and Alun S. for not actively hating it!\n\nAs usual, please remember this is not the real world, it's my world, so the things that happen here are possible only because that's how my world works. There's no message, no acrostics or parables, no morality play, it's just a story a lot of people asked me to write; please read and enjoy, I know I did writing this. If you liked it, please vote for it, if you didn't, please tell me why.\n\nbeachbum1958\n\n*****\n\nChapter 1: Weeping may tarry for the night, but joy comes with the morning - Psalm 30:5\n\nThe handful of dry soil rattled on the casket lid, a soft sound suddenly loud in the complete silence. Joey backed away and stood again between Robbie and Casey as, one by one, everyone else gathered around the grave followed suit. His eyes were hooded, distant, as the unreality of the whole situation once again threatened to overwhelm him. \n\nA week ago she'd been shopping in Oakland with Casey, after leaving Joe Junior and young Robbie safely tucked away with Frank and Kat in Morgan Hill, promising to pick up a pizza on her way home. Now this was all that was left of her, a headstone and an open grave, disguised with artificial grass, in Colma, the Bay Area cemetery city. Joey looked over the heads of the gathered mourners, catching sight of the digger parked discreetly out of sight behind some trees, waiting for them to leave so her grave could be filled, underlining the fact of her death, the final act in her tragically short life.\n\nIt had all happened so fast; the guy had been driving well, safely under the limit, no drugs or alcohol in his system; how was he to know the union seal on the brake line had failed, and all his brake fluid had been dripping steadily as he drove, air bubbles forming inside the brake line? He'd not even noticed his brake warning light until too late, and when he'd tried to brake at the crosswalk, his spongy brake pedal hit the floor uselessly, his brakes dead. \n\nHe'd careened straight through, unable to stop, plowing into the knot of pedestrians on the crosswalk, finally crashing into the side of the cement truck crossing the intersection, to die impaled on the steering column. There had been several injuries among the people on the crosswalk, some serious, but only one fatality: Karen. Casey had just stepped onto the sidewalk, and was looking back to say something to her, not two feet away, when the old Dodge Shadow slammed into Karen, killing her instantly.\n\nJoey stood numbly through the rest of the graveside rituals, accepting the murmured condolences without really seeing who was offering them as people slowly drifted away until only family remained: Robbie and Casey, her hands clasped around her swollen abdomen, with Roisian Dolan, theirs and Joey's grandmother; Sarah and Steve with 2-year old Caitlin, Joey's half sister, Sarah outwardly calm and composed, but shrieking with grief inside at the hurt done to her boy. Elio and Angie were also there, friends and family both, with their baby daughter Sally, and of course, Frank, Kat, and both their girls, Moira and Morag, their eyes swollen and red with grief at Joey's loss, and theirs too. \n\nEveryone else withdrew from the graveside, to leave Joey alone to say his last words to his beloved wife, best friend, school-friend, and only-ever girlfriend. The rest of the family waited back at the cars, Casey gently bouncing eight-month old Joe Jr. to try and settle him; even the baby seemed to know that everything had gone wrong in their world, and Casey wasn't having much success in calming him. \n\nJoey finally slipped his sunglasses on against the blazing sunshine and walked slowly back to the family, smiling bleakly at Casey before taking the baby from her. Junior immediately settled down, content to be in his father's arms again, but his eyes still searched the familiar faces for the one face he'd never see again.\n\n\"Just you and me now, little man,\" murmured Joey. \"Mommy had to go away; she didn't want to, but she had to, so it's just you and me now, okay?\"\n\nCasey listened to her eldest brother talk half to himself as he patted the infant, tears rolling down her cheeks for his loss, and for the loss to all of them. Karen had been one of the first people to welcome her into their family circle, and had been her closest friend and confidante, and Casey was still numbly trying to come to terms with her sudden, shocking loss.\n\nThe family congregated at Joey's townhouse on Southgate in Daly City, together with Karen's younger sister and her aunt, the only family she had left, to talk, be together, and stay with their son, brother and nephew for as long as he needed them. \n\nIt was Robbie who first started talking about Karen, reminiscing about their days in school, how she and Joey had seen each other the first day of 8th Grade, when she was newly-arrived in town from San Diego, and how they had been together ever since; he talked about how she'd become like a sister to him, the way she'd adopted him and defended him as fiercely as did Joey. \n\nGradually other family members joined in, sharing their own memories of Karen, remembering her to everyone else, making sure their memories of her remained keen and sharp. Joey held his son and said nothing, preferring to keep his memories to himself.\n\n*\n\nThe following day, Robbie and Casey attended another funeral; that of the innocent man who'd also lost his life that terrible day. They went with Joey and Sarah's full knowledge, to acknowledge that their family didn't blame him for what had happened, that he was also a victim of the same mix of circumstance and fate. The sight of his young wife and two small children was almost too much for Casey, but she still found the strength to lay a single white rose on his casket, letting him know that he'd done no wrong in their eyes, and he wasn't to blame for what had happened.\n\n*\n\nLife gradually levelled-off into a kind of normal for Joey as the weeks passed; GameStx had engaged a live-in house-keeper/childminder to assist him with this new phase of his life as a single-parent, and Mrs. Carrillo did indeed make a huge difference to his life. He'd initially considered requesting that he be placed on a part-time contract to enable him to work and care for Joe Jr, but Steve and Elio Vargas had both vetoed the idea; Joey was family, and too valuable to the company to allow him to drift away from them like that. \n\nInstead, they arranged for childcare round the clock rather than lose him. In addition, Casey and Robbie were only five minutes away, so most of the day little Joe was under Casey's watchful eye along with Robbie Jr. \n\nJoey seemed to be happy with that arrangement. During the day Joe Jr. had Casey as a reasonable substitute mom. Joey played with his son in the evening and gave him his evening bottle, and Mrs. Carrillo took care of the night-time feeding and changing, leaving Joey free to continue to develop and grow with GameStx. \n\nBut it still wasn't the same for him; it never could be. Coming home every evening was a heart-wrenching, soul-numbing experience. Walking in the door of the house he and Karen had fallen in love with, with the tubs of flowers she'd planted and so carefully nurtured, the subtle hint of her perfume on his suit jacket lapels, and the faint lingering traces of her hairspray and her floral body lotion every time he opened a closet door, all these were taking their toll on him.\n\nSarah watched helplessly as Joey grieved in silence, never revealing his pain and loss, his need to scream and rant at the universe for being so unjust, for taking away the one thing in the world he wanted and needed more than anything. His pain was her pain, and yet there was nothing she could do. \n\nAs the weeks passed, he'd gradually stopped seeing Robbie and Casey, the excuses becoming flimsier and flimsier, until he'd stopped even pretending; their happiness was a stark reminder of what he'd lost, and he was avoiding them. Even more troubling, he was becoming more and more disconnected from his little son as his grief intensified and spiralled down into depression. \n\nMrs. Carrillo had children Joey's age, and she watched helplessly as he slowly, relentlessly fragmented, her motherly concerns mounting daily as Joey became ever more distant and disconnected even from his son. Mrs. Carrillo finally decided that Joey's family needed to know what was going on with him, and voiced her concerns to Casey, who had more than a few concerns of her own regarding her oldest brother. \n\nMrs. Carrillo told her how Joey had stopped even pretending to care about Joe Jr; how he came in from the office and went into his room, and that was the last she'd see of him for the evening; in the morning his car would be gone, and where once he'd called every hour or so to check on Joe, that had now ceased altogether, and there would be silence from him, nothing except a murmured 'Good evening, Mrs. Carrillo' as he came in the door before he once again locked himself away in his bedroom. \n\nEven the birth of Casey and Robbie's daughter, Roisian, failed to stir him from his apathy.\n\nEventually, Sarah and Robbie decided this had gone on long enough; Joey needed his family, he needed his mom, he needed to find his way back to everyone who loved him, but most of all, he needed to find his way back to his son. \n\nThe following morning, as he opened the front door to leave for work, Sarah and Steve, his mother and step-father, were waiting for him. He stared listlessly at them, wondering distractedly what they wanted at such an early hour.\n\n\"Joey, we need to talk; we all need to talk. Forget about work right now. This is important.\"\n\nSo saying, Sarah took him gently but firmly by the arm and piloted him back through the house, Joey unresisting as she led him into the living room and sat him down, her arm still linked in his.\n\n\"Baby, this can't go on. Your son needs you, we all need you. I know how you feel; I went through this as well; your father meant the whole world to me, and when I lost him, I honestly thought my world had ended. It hadn't; I still had you. Now you have that little boy asleep in there, and he needs you more than ever; he's nearly a year old, baby, and he needs you to be his world now. I feel so bad for you baby, but truly, if you let it, this too will pass, I promise you.\"\n\nJoey looked into her eyes for the first time.\n\n\"She's gone, Ma, all the plans we made, all the children we were going to have, the life we were going to live, they're all gone as well. How can I live when the only life I ever wanted is gone forever? I dream about her, Ma, and I dream about the kids we'll never have, and the places we'll never go, and I wake up and it's just me and junior alone in an empty house; everyone else we were supposed to have with us, they're all gone, they'll never be here, and we'll always be alone. How is that right, Ma?\" \n\nSarah's heart broke for the loss and pain in her son's voice, in his eyes, in his defeated posture, and she pulled him close, tears on her cheeks as the depth and intensity of his loss and grief hit her again.\n\n\"Let it go, baby, you have to; that little boy needs his daddy!\" she murmured, and felt him stiffen.\n\n\"He needs his mom, and she's gone, and I can't...I can't do this without her...!\" he stuttered, \"Mom, she's gone, and I'm alone, and I need her so bad...!\"\n\nJoey's words ended in a sob as he broke down, all the pain and loss and fear finally breaking out of him. Sarah hugged him tight as he cried silently against her, weeks of bottling it all up inside him finally taking its toll. \n\nSarah rocked him as she had when he was small, comforting her son as best she could, a little frightened at his outpouring of grief, but instinctively recognizing it as the best thing for him right now. \n\n\"You're not alone baby. You have me, you have Robbie and Casey, there's Steve and Elio, but most of all there's that little boy in there, and he still needs his daddy.\"\n\nOut in the hall, there came a light tapping on the front door, and Steve went to open it. Robbie and Casey slipped inside with quick questioning looks at him. Steve bit his lip and gently shook his head, squeezing Casey's hand at the look of alarm on her face. Robbie grimaced, as though psyching himself up for an unpleasant task, then nodded resolutely at Steve. \n\n\"Let me go talk to him, Steve; I know what he needs right now.\"\n\nSteve shrugged and nodded in the direction of the sitting room.\n\n\"At this point I'm ready to try anything, Rob; Joey's a mess and Sarah's really scared; hell, even Caitlin knows something's badly wrong with her brother; if you think you can get through to him...\"\n\nRobbie grinned.\n\n\"'Course I can, he's my brother; I know what makes him tick. Just leave this to me...and keep mom out!\"\n\nAs he went to open the door, Casey put her hand on his arm, concern for her oldest brother plainly written on her face. Robbie looked at her questioningly.\n\n\"Baby, I know what you're going to have to do; just go easy on him, please?\" she murmured, and Robbie smiled back at her worried expression.\n\n\"Always, baby. Don't worry about Joey, I know him, he'll listen to what I have to say.\"\n\nSarah looked up at Robbie as he slipped into the room, her face lined and scared, her eyes two pits of fear and sorrow for her son.\n\n\"Mom, can you leave us alone please?\" he murmured. \n\nSarah glanced at Joey, once again sunk in apathy now that the spasm of grief had passed, and nodded, unable to discern if she'd even gotten through to him. She patted his arm and smoothed his hair away from his forehead, a gesture that had always irritated him, but now he ignored it, staring listlessly ahead.\n\n\"Help him Robbie, do something, please!\" she murmured urgently, \"he needs you more than ever now, help your brother, please!\"\n\nRobbie held her briefly.\n\n\"Don't worry Mom; I think I know what to do; just leave us alone, okay? I've got some things to say that you don't want to hear, and I don't think you want to be here for that!\"\n\nSarah nodded. She knew how much Robbie loved and idolized his big brother; she knew with an iron-clad certainty that he could never hurt him, but she was intrigued nevertheless. \n\n\"I'd like to stay, baby, I promise, not a word!\" as Robbie opened his mouth to object. Robbie shook his head.\n\n\"No, Mom, we've got to do this alone, just Joey and me; just leave us alone for a few minutes, please. I got this, I swear!\"\n\nSarah looked doubtful, but ultimately her trust in Robbie asserted itself.\n\n\"Okay, you do what you have to do for your brother; just don't hurt him, baby, he's been through enough already!\"\n\nRobbie grinned at her.\n\n\"As if I would! Now, please...\" he nodded meaningfully at the door, and waited until she'd slipped out and closed the door behind her before he sat on the couch next to Joey and nudged him.\n\n\"So this is where you spend your time feeling sorry for yourself! I knew you were a fucking meathead, but a cry-baby as well? I ought to drag you outside and beat the man back into you; you're a disgrace, snivelling like a little girl in here. What the fuck is your major malfunction?\"\n\nJoey slowly swivelled to look directly at hm.\n\n\"What the hell did you just say?\" he asked, animation in his voice and expression for the first time in who knew how long.\n\n\"You heard me; I called you a snivelling meathead! What are you going to do about it?\" sneered Robbie, watching Joey's face carefully as the jibe sank in.\n\nJoey looked at him in shock.\n\n\"Rob, what's got into you? You can't talk to me like that!\"\n\nRobbie sneered at him again, a lip-curl of derision.\n\n\"No-one else in here crying like a girl! What the hell would Karen think of you if she saw you right now? I know what she'd say; she'd say you were fucking pathetic, that's what! What's the matter, Joey, cat got your balls?\"\n\nA flush crept up Joey's face as his fists clenched.\n\n\"How fucking dare you say her name! You're not fit to say her name out loud! You better get out before I forget you're my brother and kick your ass!\"\n\nRobbie looked him up and down, and grinned tauntingly at him.\n\n\"How you gonna do that, Joey? Gonna cry at me some more? Gonna blubber about how lonely you are? News Flash; we fucking know, so what? What the fuck makes you think I give a shit for a sorry-ass, cry-baby quitter like you? Act like a man, fuck-tard, or have you forgotten how to be one?\"\n\nWith a low, feral growl Joey launched himself at Robbie, hands reaching for his throat as his face twisted into a mask of rage. This was what Robbie'd been waiting for. As Joey crashed into him, he leaned aside, the two of them landing on the carpet where they rolled back and forth, Joey trying to hit, choke, punch, slap, anything to make Robbie take back those things he'd said. \n\nRobbie easily dodged Joey's rage-blinded attempts to hit him, and so they rolled back and forth on the carpet, Joey trying to gain the upper hand, his fists crashing against Robbie's biceps and forearms as he tried in vain to land one telling punch, something to hurt Robbie and make him pay for what he'd said.\n\nRobbie's solid, powerful arms formed an impenetrable barrier, raising Joey's fury to new heights as he forgot everything he and Robbie had ever been to each other; all he wanted to do was smash that grinning face, to hurt him for saying those things, to pound him senseless for daring to speak to him like that. Robbie's taunting grin ensured Joey kept up his furious attacks, his rage powering his fists as they battered repeatedly against his younger brother, trying to find a way through. \n\nAt last, though, the fires of rage burned out, and Joey slumped forward, too tired to even raise his fists again. He rolled onto his back, lying passively next to Robbie on the floor, his chest heaving and his breath hissing in the sudden silence of the room.\n\nSarah had heard the ruckus inside, and realised that, for the first time in their lives, her boys were fighting; no matter what she'd promised Robbie, she had to put a stop to this. As she tried to open the door, Steve and Casey both pulled her back, Steve blocking her way as she tried to push past him.\n\n\"No Sarah!\" he hissed. \"Leave them be, they've got to work this out themselves; no, leave it!\" \n\nThey listened in silence until the sounds of scuffling died away. Sarah looked at Steve and raised an eyebrow in query. He grinned and took her hand.\n\n\"Give them a few more minutes, babe, then you go on in. I think it's just about over now.\"\n\nBack in the sitting room the two brothers lay silently side by side on the floor, Joey's eyes closed as he fought to regain his breath, his heaving chest finally slowing to something approaching normal. Robbie had been waiting for that, and nudged him as he grinned up at the ceiling.\n\n\"You done now, meathead? You ready to talk?\" he asked, and smiled as Joey nudged him back harder.\n\n\"Just lemme get my breath, and I'll show you who's done, you butthead geek!\" Joey retorted, a faint smile twitching his lips. A shadow fell on them and they both looked up to see Sarah standing over them.\n\n\"I may not know exactly what happened in here, but I know what I heard, and I never want to hear anything like that again! That goes for both of you! Now what the hell just happened in here?\"",
        "Joey grinned up at her.\n\n\"It's okay Ma, we're okay, we just want to lie here a little longer. Robbie and I got stuff to talk about.\"\n\nRobbie also grinned up at her.\n\n\"Mom, this is kind of brother-stuff, we'll be out soon enough, just leave us be, we're alright now. Please, mom?\"\n\nSarah shook her head, but left the room smiling. Somehow, and she wasn't sure how, Robbie had gotten through to Joey; his smile at her had been his old smile, his voice had lost that dull, dead quality, and his eyes had been alive, not listless and disinterested. He was back; his brother had pulled him back from wherever he'd gone; somehow he'd known exactly what to do to snap Joey out of his half-dead state.\n\nBack in the sitting room, both brothers lay on the floor, gazing at the ceiling in silence. Eventually Joey stirred.\n\n\"If you ever speak to me like that again, ever, I WILL kick your ass, that's a goddam promise!\"\n\nRobbie grinned.\n\n\"Yeah, whatever, you're full of shit; tell it to someone who cares!\"\n\nJoey laughed and sat up, then clambered to his feet, extending his hand to Robbie to pull him upright. As he did, he punched him on the arm.\n\n\"Thanks, bro!\" he whispered, then flopped down on the couch.\n\n\"So what next, Rob, what do we do now?\"\n\nRobbie sprawled on the other end of the couch, staring pensively at the ceiling, gathering his thoughts.\n\n\"Okay, Joey, this is what we'll do. You need to get away, you need a break from Daly City, from work, from all...this...\" He waved his hand, conveying in that one gesture all the sadness and gloom that had gathered in the house. Joey grimaced, shaking his head.\n\n\"I can't just...run away, just leave town like that; what about Joe, what about work..?\"\n\nRobbie cut him short.\n\n\"You need to leave this behind for a while; face facts, bro: she's gone, and you moping around here like some lost soul isn't gonna bring her back, and really isn't doing you or that little boy any good. I kind of know how you feel, Joey, really I do; when you lost her, so did I; she was my big sister when I needed one real bad; she was my family, I only had you, and mom, and her, and I loved her as much as you did.\"\n\nHe closed his eyes briefly as he massaged his temples, his voice low and vibrant, loss and anguish clearly discernible just under the surface. \n\n\"I miss her too, Joey, believe it; I miss her every single day, and so does Casey; she was her big sister, and her best friend; she can't bear to watch any of those damned movies anymore, because Karen's not there with her, eating popcorn and crying with her; we've got a big hole in our lives too, but we all have to find a way to let her go.\"\n\nHe leaned back and studied the ceiling again for a moment.\n\n\"You have to get away for a while, a few weeks, a couple of months, long enough to get your head out of your ass and back where it belongs! Don't worry about Junior; he's gonna stay with Casey and me; he's been pretty much part of us for months now, while you've been...wherever the hell you were. Don't worry, you know how Robbie loves him, they'll be good for each other, and Casey loves and cares for him like he's ours, so you know he'll be okay. Gramma Rosie's close by as well, and mom, so you don't need to worry about him; the family's got it covered. Take as much time as you need, a month, three months, six, however long it takes. Get your life back in shape, and come home when you're ready; we'll all be waiting for you.\"\n\nRobbie could see Joey considering the idea, so he let him think it over. After a few seconds, Joey spoke again.\n\n\"It sounds like a good idea; I could do with getting away from here for a spell; y'know, one time I seriously thought about taking the \"Lady Midnight\" out and just sailing away, just letting the tides and currents take me wherever they wanted; perhaps you're right, some time away sounds real good. What about work though? I can't just drop everything...\"\n\nRobbie grinned again.\n\n\"Actually, you can; as of today, you're taking Leave of Absence for an indefinite period, due to family circumstances. Elio's already squared it away with payroll, and thanks to you, your team of marketing geniuses have several months' worth of marketing strategy and proposals to work through, so you can leave with a clear conscience; in fact, you're leaving today. I booked you a flight before I came here, so better get started packing, you have a plane to catch.\"\n\nJoey looked at him in astonishment.\n\n\"Flight? What flight? Where the fuck am I going?\"\n\nRobbie smiled.\n\n\"You're going home, meathead; your old home; you're going back to Springfield, to mom's old house on Bixby. Casey thinks you need to be around familiar places and familiar faces for a while, all the things that were around you when you were growing-up; I happen to agree with her, so you're going. It'll be good, I promise!\"\n\nJoey looked sideways at Robbie.\n\n\"You knew how this was going to play out, didn't you?\"\n\nRobbie grinned.\n\n\"'Course I did. Let's face it, bro; to me, your mind's like an open book; a very small book, with very big print...\"\n\nJoey grinned back and gave him the finger.\n\n\"Fuck you, butthead! I'm gonna go pack. Just try and not lose my kid while I'm gone!\"\n\n*\n\nJoey stepped out of the cab and stared up at the house he'd grown up in. In the nearly three years since he'd last seen it nothing seemed to have changed. The porch looked swept clean, the small front lawn was clipped and neat, and the flower-beds on either side of the porch were well tended and colourful. Sarah had said she'd asked her friend Jonah to keep an eye on the place; obviously people had taken the knowledge that Jonah Hollister was looking after the house to heart and left it scrupulously alone and untouched. \n\nHe walked up the porch and put the key in the door. As he was fumbling with it, the sound of someone clearing their throat meaningfully behind him made him spin around, almost dropping his keys and flight-bag.\n\n\"And just what you think you're doin', boy?\" drawled the tall, hard-faced man standing at the foot of the porch steps, his ageless face smooth and hard as porcelain. As Joey stepped out of the shade, the man grinned, a mere skinning of his teeth, but it suddenly made him look a little less forbidding.\n\n\"Damned if you ain't the spit of Sarah's daddy! You must be Joey; I ain't seen you since you was three or four. Your mama asked me to keep an eye on this place. I guess I can let go fer now. You here for long, young feller?\"\n\nJoey nodded.\n\n\"A few weeks, just until I...\" The man cut him short.\n\n\"Sshhh, your mama told me all about what happened, and I'm real sorry. Sarah tells me she was a good girl; there ain't too many of them these days, and I do grieve for your loss; she was your wife, and that makes her one of us. Sarah's real worried about you, so you need anything you just lemme know. You'll find the gas and electric's back on, I had Southwest Power out here this morning gettin' you all set-up again, and AT&T put your phone back on for you; they also gave you somethin' called 'DSL', and fitted an internet Hub, whatever in hell they are. My niece came in and cleaned up a little for you as well, and there ain't no need fer thanks; Sarah's home folks, and my friend, too, and I reckon she'd do the same fer me if I needed it. Y'all take it easy now, and there ain't no-one gonna trouble you, not 'less they want me explainin' things to them!\"\n\nJoey was touched by his sincerity, remembering how clannish some of the families around here could be, and grinned briefly at the thought that his mom was nearly two thousand miles away, but this man still thought of her as 'home folks'. This must be Jonah Hollister, one of the notorious Hollister triplets, the one family in Springfield you most definitely did not want to piss-off. Jonah ran his hand through his buzz-cut grizzled hair and nodded at the house.\n\n\"Luna stocked you up a little as well. All the essentials are in the pantry or the icebox, and I reckon you know your way 'round town real good, so I won't insult you and tell you where the stores are if'n y'all need anythin'. Your mama's old Riviera's in the garage. I got the charger on it; keep it on fer another couple hours and she should be good to go. If you need me, Luna's got my number; she'll look in on you now and then, she's a good girl, just like her mama. Rest easy boy, your mama told me you was here to try and get over your girl, you just get to it, no-one's gonna disturb you. See you around, son, and remember, you need anythin', anythin' at all, let Luna know.\"\n\nWith that he turned and climbed into the nondescript Ford pickup parked on the street and pulled away.\n\nJoey grinned again and went into the house, looking around in wonder as he did so. Nothing had changed; apart from a couple of pieces of heirloom furniture she'd taken with her to California, it still looked like his mom lived here and had just stepped out for a moment. Most of all, he felt a weight lift off him as he relaxed properly for the first time in what felt like forever. No matter that he lived in California now, this was always going to be his home, and he was back. \n\nJoey dumped his flight bag and laptop on the hall table and walked through the house, soaking in the feel of being at home again, the soft siren song of childhood familiarity calling to him. A picture on the sideboard of him and Karen taken at their prom caught his eye, his heart suddenly turning over and pounding, and his breath catching in his throat as he saw that familiar image again. He stared at it for a long moment, then reached out and slowly, deliberately, turned it face-down. \n\nHe wandered through the house, fingers trailing over the familiar things of his childhood, remembering, grinning at the height marks Sarah had etched in the door-frame, he on one side, Robbie on the other, eventually finding himself in the kitchen. He smiled at the unopened pack of coffee and box of filters stacked next to the coffee maker. He filled the beaker and poured the coffee grounds into the filter top, switched the coffee maker on and went back into the sitting room to sit and wait for the coffee to brew. As he sprawled comfortably on the couch he and Robbie had shared for so many years as they watched first cartoons, then, as they got older, their shared weakness, cop shows, once again he marvelled at how nothing had changed.\n\nFor the first time in a long time, he had nothing to do, and the feeling suddenly hit him; what was he supposed to do now? There was no-one here but him. Was he supposed to languish in grief until it died away naturally, or go out and make new friends, or maybe look up some of his old high school buddies? For so long his decisions outside work had involved Karen; they'd done everything together, and had done since the 8th Grade. How was he supposed to do this alone, how did he even start?\n\nHe went back into the kitchen and poured himself a coffee. As he took his first sip he heard the front door open.\n\n\"Hello the house!\" called out what sounded like a young woman.\n\n\"I'm in the kitchen!\" he called back, and carried his coffee back to the sitting room. As he walked in, a tall, pretty girl with pale skin, long, silky, copper hair and compelling green eyes poked her head in the other door.\n\n\"Hi, you must be Joey. I'm Luna. Jonah said you'd be here. I hope the place is okay. I put some basics in the fridge, milk, juice, bread, that kind of thing, but if you need anything else just leave me a note, I'll pick it up for you. There's no cable hooked-up yet, but the local stations do a great line in farm reports, GOD TV, TBN, and Familyland, oh, and reruns of 'The Lucy Show', 'I dream of Jeannie', and 'Gilligan's Island'! Cable guy said he'll maybe be here tomorrow, but this is Springfield, so don't hold your breath! In the meantime, welcome back to the teeming metropolis that is Springfield!\"\n\nJoey felt breathless listening to her talking nineteen to the dozen, and caught his breath as she stopped talking and smiled at him. He noticed her eyes, so like his Aunt Kat's particularly vivid shade of emerald, and her luxuriant bright red-bronze hair, glowing in the early evening sun, almost red enough to be true Titian, a rich, vibrant shade somewhere between bright chestnut and true copper. Something about her tugged at his memory, but it was fleeting, and disappeared almost immediately.\n\nJoey grinned at her as she wound down.\n\n\"Hello Luna, this...all this, it's very kind of you, but you didn't have to...it's okay, really...\"\n\nLuna smiled, her grin fleetingly reminding him of someone else, but he couldn't pin it down.\n\n\"Aw, it was a pleasure; your mom's my Uncle Jonah's friend, they've been friends since Grade School, he thinks of her as family, so I guess you're family too.\"\n\nHer smile faded.\n\n\"I know why you're here, and I'm sorry, I don't mean to intrude, maybe I should go now...\"\n\nJoey shook his head. This girl made him breathless the way she rattled along, but he found himself enjoying her company; it was refreshing talking to someone other than family, someone who wasn't walking on eggs around him.\n\n\"No, please stay...sit, please, have a coffee, I've got a fresh pot in the kitchen.\"\n\nLuna smiled again, and once more that fleeting ghost memory nagged at him, that feeling her knew her from somewhere, then it was gone just as quickly, before he could pin it down.\n\n\"I'd love one; you sit, I know where everything is, just give me a minute.\"\n\nShe was back a few seconds later with a steaming mug which she set down on a side table as she sat in Sarah's old recliner, one leg curled under her as she sat. They stared appraisingly at one another for a few seconds, strangers thrown together and wondering what to say next. Eventually Luna broke the silence.\n\n\"So you're the famous Joe Anderson; did you know they still have your picture up all over Ellenbrook High School? Three consecutive State Championships; we never managed that ever again. You're quite the legend!\"\n\nJoey grinned, blushing a little as Luna smiled at him. He was beginning to notice how attractive she was, and it threw him; the thought made him feel disloyal to Karen and her memory, but there was no denying it; Luna Hollister was a very attractive girl. She was above average height, but still petite enough to have to look up to look him in the eyes, something she did with disconcerting directness. She was possessed of long, slim legs and a small, neat waist, her lithe, slim, but shapely, figure covered but not concealed under skinny jeans and a tight tank-top. Her skin was pale, the merest hint of freckles dusting her cheeks and the bridge of her small, up-tilted nose, and her large, expressive eyes were a vivid, vibrant green.\n\n\"So you're still in High School?\" he asked, vaguely disappointed that she was so much younger than he was, but Luna shook her head.\n\n\"Hell, no! I graduated three years ago, and I've been looking for a real job ever since. I worked for a while at the Dolanco store downtown when I was still in school, but I didn't like it there; Mr. Dolan kept looking at me real intent whenever he came in, it was just too creepy, so I quit, and then it went bust anyway. In the meantime, I looked after my uncles, although only Jonah lives here now. Uncle Jethro and Uncle Jerry are still in the Marine Corps, so they only come home when they get some leave; in the meantime, I'm on hand to meet and greet new arrivals in town!\"\n\nJoey was oddly relieved that she wasn't impossibly younger than him, just four years, and filed it away for analysis later; he couldn't think why he should feel that way, and it unsettled him more than a little. Luna carried on talking, unaware of his momentary distraction.\n\n\"Did you know my mom was your aunt's friend? Jo Hollister. She and your aunt Caitlin were buddies in High School. Mom used to talk about her, how Kate Moran was the prettiest girl in Laroque County, and about how one day she just split, left town in a big rush, and never a word to anyone. It was a nine-day wonder around here, in Springfield, hotbed of intrigue that it is; it was probably the biggest thing to happen here since the Civil War, and even then nothing happened here!\"\n\nJoey grinned in spite of himself; he knew who Jodie Hollister was alright; his mom had torn a strip off him and Robbie once when they were eleven or so for spying on her undressing in her apartment at the intersection with Bixby and Lewis Street with the little 20-power telescope he'd gotten one Christmas. So this was her daughter; he'd never have known; Jodie Hollister was petite, grey-eyed, with dark hair, so Luna must take after her father's side. \n\nHe could feel himself being drawn to this girl, much as he tried to deny the fact; her sense of humor, her quick smile, her soft contralto voice, and the nagging feeling he knew her from somewhere, all these things added-up to an intriguing package. Of course he didn't know her, he couldn't possibly know her, but still the feeling persisted, and wouldn't go away.\n\nLuna put down her coffee mug and stood up.\n\n\"I'd better be going now, I've got chores to do back home. I'll stop by some time tomorrow, if that's okay with you; I kind of promised Jonah I'd look in on you every day, but I have to go now. If you're hungry, there's stuff in the freezer, pizzas and such; I didn't know what you liked, so it's kind of pot-luck. You have a good night, Joe Anderson!\"\n\nJoey was more than a little reluctant to see her leave, and he couldn't understand why, then it struck him. She felt like Karen, that same air of quiet competence and warm compassion, and her almost supernatural way of relaxing him; he'd not felt so at-ease in company in all the months since Karen's death, and he realised he wanted to keep on feeling that way.\n\nJoey also stood up, grinning at her.\n\n\"You have a good night too, Luna Hollister, and I'll be here when you come by; maybe we can talk some more.\"\n\nLuna flashed him her bright smile.\n\n\"I'd sure like that. See you tomorrow, then!\"\n\nThe house felt even emptier now that she'd gone, so Joey switched on the TV, but was unable to pick up anything except the local station; true enough, farm reports, feed prices, hog auctions, reruns, and some kind of evangelical show seemed to be the choice for the evening. The Fox and NBC affiliate stations in Roseville and Piedmont Heights were unwatchable, the screen constantly dissolving into diagonal interference patterns, and the sound was hopelessly distorted. \n\nJoey gave up trying to make sense out of the fare being offered, and walked out to the garage, remembering that Jonah had told him to unhook the charger from his mom's '85 Riviera. He grinned at the dated, slab-sided car, recalling how proud she was of it, and how he'd scorned it in favour of his pride and joy, a less than reliable '89 Camaro IROC-Z. It was strange to think that this old bus was now regarded as a classic of the future in some circles.\n\nJoey finally raided the freezer, finding a stack of frozen pizzas, and a six-pack of Bud in the fridge, so contented himself with pizza and beer for dinner, while he watched back to back episodes of 'I Dream of Jeannie' and finally retired to sleep in his old room, tired, emotionally worn, but happy to be back in the place that felt most like home.\n\n*\n\nHis sleep was disturbed and fitful; dreams of Robbie and he fighting, long, incomprehensible conversations with his mom and Steve. Finally he drifted into a dream of Karen, of the heady days after their wedding, buying and learning to handle and maintain the refurbished 35' Bavaria Cruiser sailboat he'd christened \"Lady Midnight\" in honor of Karen and her beautiful, jet-black hair. It was their first long trip in her, all the way north along the coast to Puget Sound, then threading their way through the straits and islands to Lakebay, to spend some time with one of their friends from school who'd moved out that way. ",
        "Joey was deeply asleep, dreaming he and Karen were bustling about on the boat, and when he hugged her from behind, he buried his face in her lustrous bronze hair, enjoying the scent and feel of it, his hands roaming over her baby-bump as he basked in his love for her and thoughts of the new life growing inside her. \n\nSuddenly something struck him as very wrong; red hair? Karen had black hair, and she wasn't pregnant when they made the trip to Lakebay. Who was he holding? He spun her around, and it wasn't Karen at all, Karen was gone, and in her place was Luna Hollister, reaching out to him, her face concerned.\n\n\"Joey? Baby, what's wrong?\" Even her voice was wrong; it was Karen's voice, but Karen was gone, and this other girl was here in her place, talking in her voice.\n\n\"No...no, why are you here, ...Karen, Karen, where are you...?\" His voice trailed away as he took Luna by the shoulders, needing to drag answers out of her; what had she done to Karen, where was she, why was Luna here instead of his wife?\n\nJoey came awake with a jolt, most of the dream fading away, but the memory of dream-Karen sharp and vivid, and then she'd gone, and he'd dreamed of a girl he'd only met for a few minutes that day. Joey slumped back miserably; how could he get over his loss when she haunted his dreams and brought their life together back to him again and again, and what was he doing dreaming of Luna Hollister anyway? With tears in his eyes, feeling empty and betrayed by his dreams, Joey set himself for yet another weary, sleepless night as his emotions raged once again, misery, loss and anger churning inside him, compounded by his treasonous dreams about a girl he hardly knew.\n\nMorning found him once more at a loose end. Tired as he was from a night of little sleep and no real rest, he couldn't bring himself to try and sleep again; sleep brought dreams of her, and then he'd wake and find it had all just been a dream, and the hurt would roll back in again. After the vivid, disturbing dream of the night before, he had even less inclination to sleep. \n\nSo it was that Luna found him, quiet, withdrawn, uncommunicative when she dropped in as she said she would. She tried to draw him into conversation, but from the tired look in his eyes and the drawn lines on his face, she guessed he'd had a bad night, so soon made her excuses and left. Joey was uncomfortable with her presence, but with her gone the house seemed even emptier.\n\nEvery morning for the next week, Luna dropped by, checking on him. Joey had developed the routine of emailing Casey to give her a daily update on what he was doing and how he was, and from the tenor of his emails, Casey and Robbie decided that he wasn't making anything like the effort he'd promised to try and put his life back in focus; quite the opposite, in fact. \n\nSomething was going on with him, and it was dragging him back down. They'd shared their misgivings with Sarah, and Sarah in turn had been talking to Jonah. He'd passed some of her worries on to Luna, who then pondered how to bring Joey out of the funk he seemed to be slipping back into. \n\nFinally, ten days after he'd first come home, Luna decided that it was time he stopped brooding alone in that house and found some of the world again, and with Luna, to think was to act.\n\nThat evening, Joey answered a tapping at the door, to find a smiling Luna there, but instead of the usual jeans and tank-top, she was wearing a short-sleeved clingy white top with a low-cut back and a black tight skirt that barely came to the tops of her thighs. Her shining hair had been pulled over one shoulder in a loose twist and she was wearing black platform pumps, emphasising her long slender legs and making her almost the same height as him now.\n\n\"Come on Joe Anderson, tonight Springfield awaits your presence!\" she grinned, her eyes narrowing slightly as Joey shook his head.\n\n\"Luna, I...I can't ...I, I...\" he stuttered, making her purse her lips in exasperation.\n\n\"I said, come on!\" she gritted. \"You've been holed-up in here for over a week now, you don't step outside, you don't talk, you just sit in here and mope; well I've had enough; you're coming with me, whether you like it or not, and I won't take no for an answer! Now get your coat, Joe Anderson, and get in the car!\"\n\nJoey stared in silence at the fire in her eyes and swallowed, his throat suddenly dry. Luna stared at him in silence, one eyebrow slightly raised, a gesture he found hauntingly familiar, her flat expression segueing into a sunny smile as he slowly nodded and picked his leather jacket off the hall stand.\n\n\"There now, that wasn't so difficult, was it?\" she cooed, and Joey had to grin slightly at the note of triumph in her voice.\n\nThey made landfall in a bar on Serramonte, what passed for 'downtown' in Springfield. Joey was intrigued to see the envious looks from the other male patrons, but no-one accosted her when she slipped up to the bar and had a quick, whispered conversation with the bartender. When she rejoined him, her smile lit up the room, and a couple of seconds later, a girl brought over two beers and placed them on the table. Luna picked up her beer and tipped the bottle at Joey.\n\n\"This is nice. Thank you for coming out with me. There's a band coming on later; local boys, but I hear they're good. Maybe later you can show me some of those California dance moves!\"\n\nJoey made to protest, but caught her teasing grin, and smiled back sheepishly.\n\n\"I don't really know how to dance properly; Karen always said she'd teach me, but...\" he trailed off, breaking eye contact and taking a quick swallow of his beer rather than finish the sentence. Luna reached out and touched his arm gently.\n\n\"Then maybe I'll show you some of them ole Springfield moves, Joe Anderson. Why, we practically invented Western Swing, right here in good ole Laroque County!\"\n\nJoey grinned as her accent broadened into a rural twang, Luna grinning back at the first genuine smile she'd seen from him.\n\n\"I've got to go to the little girl's room; you wait here, I'll only be a minute,\" she smiled, patting his hand as she stood up and walked to the ladies' restroom. Joey couldn't help watching her hip-swaying strut as she walked away from him, her walk all the more sexy for being completely unconscious of his scrutiny; she wasn't trying to tempt him or work him up; this was just Luna being herself, and Joey could feel himself responding to her on all sorts of levels; part of him saw her only as the family friend trying to help him over his shattering loss, but another, more primal part, saw her as something else entirely: a beautiful, desirable girl. \n\nHe tried almost in a panic to suppress and deny that thought; he loved Karen, and he always would; he couldn't help it that a small, treacherous voice deep inside him insisted that she was gone, and that life went on, and perhaps it was time he accepted that. Besides, how many guys had a beautiful girl practically dragging him out of his house to take her dancing? \n\n\"Hey, you're Joey Anderson, aren't you?\" said a young female voice, and Joey looked up to see a pretty waitress with a tray of empty glasses.\n\n\"Guilty,\" smiled Joey. \"Do I know you?\"\n\nThe girl grinned in an open, friendly way.\n\n\"Prob'ly not; I was a sophomore when you graduated High School, but I remember you playing real tight with my brother against El Cerrito in the state championship playoffs; he was your defensive tackle.\"\n\nJoey looked closely at her, at her suddenly familiar features.\n\n\"Wait, you're Elvis Hood's little sister? I remember you! How is your brother? I haven't seen or heard from him since the Senior Prom.\"\n\nThe girl grinned.\n\n\"I guess you know about him, how he was, I mean. He came out to Mom and Daddy that night, they had a real big fight, and he left right after. He's living in Long Beach now, he's got a ...y'know, a partner, they run a fitness club together, and I guess he's happy, he says he is when he calls me, and he don't sound like he's lyin'. He told me he'd tried to get with you, and how you turned him down but were good about it, and you didn't say anything to anyone, so thank you for that; I don't think the other guys would have understood.\"\n\nShe smiled again, and leaned closer.\n\n\"I saw you come in with Luna Hollister, so you just be careful; she's nice, real nice, and I do mean that, but just you remember: you touch her anywhere 'tween neck and knee-bones and she don't like it, her uncle Jonah's liable to get real indiscriminate on your ass, and if them other two are around, weelll, I wouldn't give much for your chances! Just a friendly warning, y'understand!\"\n\nJoey nodded gravely.\n\n\"No chance of that; Luna's just a family friend, helping me out while I'm...\"\n\nThe girl cut him short.\n\n\"I know why you're here, most everyone in town does. I'm real sorry for your loss. I remember your wife, she was Head cheerleader, but a real nice girl, never acted like queen of the school or anythin' like that; you just take it easy now.\"\n\nJoey looked puzzled.\n\n\"How do you know...?\"\n\nThe girl grinned.\n\n\"This is a small town, Joey Anderson; everyone knew why you were here the day after you arrived; my mama told me; Lord knows who told her. Don't sweat it, no-one's gonna disturb you; I hear Jonah put the word out about leaving you be, but anytime you wanna talk, come on down; I don't charge for listening, and I guess I owe you at least that much for keepin' shut about my brother.\"\n\nJoey looked up to see Luna threading her way through the tables toward him, smiling at the girl as she took her seat again.\n\n\"Hey Lou, how's your mom?\"\n\nLou grinned at the pair of them as she picked up her tray.\n\n\"She's fine, Luna, and thanks for askin'. I gotta go now, but just nod if you want anythin'. See y'around, Joey Anderson!\"\n\n*\n\nThe evening was as much fun as any Joey could remember; the band was good, a sound somewhere between West Coast country-rock and Chicago urban blues, good dance music, and Luna made him dance with her, Joey shuffling self-consciously as he held her with a chaste space between them until she pulled herself close to him, holding his hips and making him sway with her. \n\nAs he danced, he found himself remembering dancing with Karen this way. Strangely, this time the memory didn't sear him; instead, it left only a gently poignant, warm sadness, but also an appreciation of just how alive and vital the girl he was dancing with really was. Almost against his will, he found himself enjoying her lithe curves and the graceful way she moved as she danced, all the more alluring because she was unconscious of his scrutiny.\n\nLuna eventually announced she was all danced-out, and led Joey back to their table to sit, drink a cold beer, and share Chilli cheeseburgers and fries. For Joey it was the crown of the best time he'd had in what felt like forever. The food was good, the beer was better, and the company was exquisite, and he hadn't felt so alive and relaxed in a long, long time. The healing process had begun, and Luna had helped him get there, he suddenly realized, the thought making him wistful rather than guilty. \n\nLuna took him home, then drove away. As he turned to open the front door, he saw Jonah's Ford pickup also pull away from the side-street opposite, following her home, and grinned at the thought of her uncle making sure she got home safe and unmolested; Lou Hood had been right to tip him the wink about Jonah and his brothers. Still smiling at Jonah's protectiveness, Joey went to bed, and, for the first time in months, his sleep was untroubled and he woke feeling rested and refreshed, ready to face the world.\n\nThat evening, he was unsurprised to hear that familiar tap at the door, Luna there once more, taking him out bowling this time, followed by pizza in Roseville. Thereafter, the pattern was set. Seven o'clock sharp brought that tap on the door, and there would be Luna, a fresh adventure planned; sometimes all they would do was grab a burger in Roseville, or Piedmont Heights, or maybe catch a cult movie in the old grind-house movie theater on Harvey Street. \n\nLuna loved those over-the-top slasher flicks, 1980's horror movies, and ludicrous creature features. Joey enjoyed sitting there in the dark with her while she giggled and gasped and clutched at his arm at the outr\u00e9 antics and bad acting on screen, although most of them made him squirm. Watching movies like 'Re-Animator', 'Basket Case', 'Hollywood Chainsaw Hookers' or 'Hellraiser' was never going to be top of his evening entertainment hot-list, but he endured them because Luna liked them; he just never got why the stupid-ass teen girl always went alone into the cellar/attic/woods/closet and got shredded, eaten, or zombiefied .\n\nAnd so they drifted along. Luna made sure Joey had no time to brood or mope; she kept him busy, and on those evening when she was unable to come over, somehow Jonah would happen to be in the vicinity and would drop by 'in passing', and he and Joey would chat about Sarah, about 'young Frank' and how mad he'd get if anyone called him 'Frankie', about the day he'd accidentally pushed Frank over in the school-yard and Sarah had descended on him like all the furies and 'beat him real good' for hurting her little brother, and how he and Sarah had called a cautious truce, said truce gradually growing into friendship and trust. \n\nJonah also talked about his days in the corps, as a Staff Sergeant with the 2nd Recon Battalion at Camp Lejeune, NC, retiring when Luna was thirteen so he could look after her after her mother had died. Joey learned that both Jeremiah and Jethro were Gunnies, US Marine Corps Gunnery Sergeants, Jethro with 1st Recon at Camp Pendleton in San Diego, and Jeremiah with 3rd Recon, stationed at Camp Schwab, in Okinawa, Japan. Jonah seemed quite smug about the fact he'd made Staff Sergeant long before either of his brothers.\n\nTalking to Jonah (and Joey thought he could detect his mom's hand in Jonah's concern for him), Joey gradually came to understand how things had worked in Springfield. \n\nOn the surface, it had seemed just another small mid-Western town under the thumb of the local robber-baron, but under all that there was a different town entirely, one where respect, kinship, obligation and duty held sway. It was almost with a sense of shock that he realized, because of his connection with Sarah, and through her, the Moran, Hennessy, Donnelly, and Mason families, and even a distant family connection to the Hollisters through their mutual Mason relatives, he was an integral part of that whole other community. \n\nIt had nothing to do with who was a power in the town, and everything to do with who had respect and standing in the eyes of the populace; it was just a little weird to think that, because his mom was held in high regard in the real town, so was he.\n\nJoey knew how the Hollister family felt about the Dolans and their myriad hangers-on, so made no mention of his parentage; talking with Jonah he came to understand that the Dolans walled themselves away because they were not, and had never been, part of the real town; they had no respect in the eyes of the townsfolk. People sang low in their presence, because they had the power to decide whether or not their children ate, but it was precisely because of that power, and the contemptuous ease with which they wielded it, that they had no respect. Not a soul in town had shed a tear or marked in any way the passing of Jerry Dolan or his son, Steve, Joey's real father. \n\nAs the days slowly slipped by, turning to weeks, Joey and Luna began to develop that closeness that only true friends ever do; Joey became used to, and eagerly looked forward to, Luna coming and going as she pleased, or turning up unexpectedly with a picnic lunch or a pizza and cokes, and they spent many an evening sitting companionably on the couch watching TV and commenting on the absurdities of the shows they were watching. \n\nJoey was still addicted to cop shows, and couldn't survive an evening without a fix of NCIS or 'Law & Order', something Luna conceded to him if she could watch Jerry Springer or the gross-out wedding and Prom shows on MTV. As the days progressed, he found it easier and easier to open up to her, telling her about his life with Karen, his son, his extended family (although he never went into the convoluted family relationships; it was too complicated, and still too personal for him to share easily).\n\nAs a side-effect of his blossoming relationship with Luna, and at her gentle prodding, the tone of Joey's calls and emails home changed, letting his mother know he was okay, telling her about his days, and how he'd found a friend in Luna. He began calling Casey on Skype instead of just emailing her, talking to little Joe, letting him hear his father's voice, and smiling at his little boy's peg-toothed smile and almost-words as he tried to touch Joey through the computer screen.\n\nChapter 2: And I will ask the Father, and he will give you another Helper, to be with you forever - John 24:16\n\nGradually, imperceptibly, both Joey and Luna began to realize that being apart from each other made them uncomfortable, and it puzzled them both. Joey found himself waiting for that turn of the door handle every evening, unable to relax properly until Luna was there. Luna was feeling the same thing; her day wasn't complete until she'd seen, sat, and eaten with Joey, and it puzzled her even more. \n\nNeither of them recognized the growing attraction between them, Joey because his feelings and emotions were still blunted by his loss, and Luna because she'd never really been stirred by anyone before. \n\nFinally, one evening, instead of claiming a corner of the couch to watch TV with him, Luna, for reasons she didn't fully understand, plumped down next to Joey, tucking her feet under her as she slipped her arm through his. Joey was surprised at first, but said nothing; it felt good to have someone he liked and trusted cuddled up against him as they watched Maury Povitch and the procession of cuckolds, plastic surgery addicts, and unconvincing sex-change weirdo's trotted out in the name of entertainment. \n\nFinally, Luna yawned and stretched, stating that she'd better get home, Jonah was expecting her and would start worrying. Joey was reluctant to let her go; their evening together was the best and most comfortable he could remember, and he wanted that feeling to continue. Luna also was reluctant to leave, but she had to get home. \n\nJoey compromised by offering to drive her home, and Jonah could drop her back the next day so she could collect her truck. Luna agreed, and so Joey drove her back out to the Hollister place, near the state line, neither of them speaking, but exchanging glances and smiles all the way. It was almost a shock when the house came into view. The twenty mile drive had passed in what felt like an instant, and now he had to face the prospect of the drive home alone.\n\nLuna leaned over, and, to his surprise, kissed him, a short, gentle, 'thank you' kiss, but it was on the lips, and it galvanized him. His eyes widened, as did hers as she pulled back, blushing prettily in confusion, before climbing out of the car and leaning down to once more smile at him. Joey's lips tingled from the slight pressure of her lips, and he watched her go indoors, waiting until she'd closed the door before driving away, the memory of that kiss filling his head as he drove home on auto-pilot.\n\nSleep came hard to him that night. Over and over again, the memory of that kiss, Luna's eyes and her blushing smile replayed in his mind's eye. Joey was at a loss to explain why such a simple thing had had such a profound effect on him, but he realized with something akin to shock that he'd liked it, and would like to do it again, and again. \n\nThat thought rattled him; once again, thoughts of Karen and their life together came flooding back, but now the hurt and loss were tempered with the realization that he was probably ready to move on; while he could never forget or replace Karen, maybe he could start again, and maybe, just maybe, Karen would understand, and, wherever she was, she would maybe be OK with it, and let him finally let her go.",
        "His dreams that night were confused: images of Karen and their life together interspersed with flashes of Luna and her brilliant emerald eyes, her wide, generous smile, the sound of her laughter, her soft voice and distinctive Midwestern drawl, flavored with a soft Southern accent, her hip-swaying walk, and the way she tossed her hair out of her eyes as they talked. \n\nJoey woke refreshed and, for once, with the memories of his dreams intact. He'd spent most of the night dreaming of Luna, of her warmth and companionship, her beauty, her way of making him feel alive and connected again. As he pondered what that meant, it came to him that he might be falling for her.\n\nHe was thunderstruck; it was like a light had suddenly switched on in his head, his own moment of epiphany. He spent the rest of the day in a daze, unable to relax or put his mind to anything, finally admitting to himself he was waiting for the sound of the door handle and her customary \"Hello the house!\", and yet dreading it as well. \n\nUppermost in his mind was the fear that she didn't feel the same way, that she was just being friendly and kind, and that he'd misread her entirely. It was with a mixture of trepidation and anticipation that he heard the front door open and Luna's light tread in the hall.\n\n\"Joey, hello?\" she called out, but her voice seemed different, almost hesitant, apprehensive, even.\n\n\"In here, Luna,\" he called back from the kitchen, waiting for her to poke her head inside and give him her bright smile.\n\nTheir evening was the same as many other evenings: a shared pizza, followed by TV and maybe a couple of beers or sodas as they relaxed on the couch, but this time there was an undercurrent, a definite sense of things unsaid between the two of them. Joey finally got up the courage to say what he'd been feeling all evening.\n\n\"Luna, I think we need to talk...about last night\"\n\nLuna dipped her head down, then looked back up at him, a slow flush spreading across her pale skin.\n\n\"About...y'know...?\" she ventured, and Joey grinned, nodding slightly.\n\n\"I'm sorry Joey, I didn't mean to step over the line or anything, it was just...\"\n\nJoey cut her off.\n\n\"Is that what you think this is about? Luna, you didn't offend me or anything; I...liked it, it was nice, and...I didn't...I mean I wasn't...! Oh Jeez!\" \n\n\"What are you trying to say, Joey?\" she asked softly, and watched as Joey in turn flushed.\n\n\"I guess I was trying to say it...it was nice, it was very nice, and I wanted...I wanted to do it again! I'm sorry if you're offended, I know you didn't mean anything by it, I...!\"\n\nLuna grinned at him.\n\n\"Listen to us, like a pair of kids on a first date! Joey, I don't know why I kissed you, or why it took me so long. I only know I wanted to, and it was nice for me, too. I'll understand if it's too soon for you, but when you're ready, I'll be waiting!\"\n\nJoey was flabbergasted; he'd expected a lingering awkwardness after he apologized, and maybe a few days break from each other, not this; she'd liked it, she liked him, oh boy...\n\nLuna stared speculatively at him for a second, her eyebrow slightly raised, an expression Joey found attractive and still hauntingly familiar. She suddenly reached over and took his hand, Joey not resisting, thinking distractedly how vividly grass-green her eyes looked as she searched his face. Luna smiled and dipped her head down, and when she looked back up into his eyes, her gaze frank and unafraid, her eyes were their original lambent emerald again.\n\n\"Joey, come here; I think I want to kiss you again, and I want to do it properly. Are you gonna let me?\"\n\nJoey grinned at the absurdity of the question, as if a normal guy ever needed to be dragged into kissing a lovely girl! The challenge in her voice also struck a chord deep inside him, and with that came his emotional response; of course he was going to kiss her back, they'd come this far, what kind of a fool would he be to shy away now?\n\nMoving closer together, each seeing the other's need in their eyes, their lips met, slowly, tentatively. Joey wanted to hold her closer, to press his lips harder to hers, to probe her mouth with his tongue, but held back, not sure if she was ready for that. He was caught unawares when her tongue darted between his lips and brushed against his. Their kiss intensified as they tasted each other, their tongues gently fencing as they kissed deeply, finally realizing where their friendship had been leading them. \n\nJoey broke their kiss first, pulling away to look keenly into her eyes. Luna looked back steadily, a flush slowly creeping up into her cheeks.\n\n\"Wow, that was...incredible!\" breathed Joey, \"I've never been kissed like that before!\"\n\nLuna grinned at the compliment, even though she was feeling exactly the same thing; kissing him had felt new, and bright, and wonderful, like a door she'd never known was there had suddenly opened in her head, letting loose a feeling of something so right, so perfect, it was almost predestined in the way it settled into her mind. She knew at that moment that he was the one for her. \n\nJoey was having almost the same experience; his mind was racing as all the pieces began clicking into place at last, along with a certain sense of panic that he was somehow betraying Karen by feeling this way about someone else.\n\n\"Luna, I...never thought I'd be doing this with you, it's all a little...sudden!\" he finally managed to stutter, grinning weakly at the smile slowly curving her lips.\n\n\"Joey, this has been building for days, weeks. I knew it, you knew it, hell, even Jonah knows it!\"\n\nJoey's smile evaporated as he came back to earth with a bump; Jonah knew? Oh Shit!\n\nLuna patted his wrist as she grinned at his expression.\n\n\"It's okay, he's not gonna rip your face off or anything; he told me to go easy with you, he said you were still hurtin' big inside and I wasn't to do anything to make the hurt worse, and we both need to make sure we knew what we wanted. I know what I want, I think I have from the first time I met you. Maybe you need to understand what you want. When you do, I'll be waiting.\"\n\nShe stood up to leave, to sit back down abruptly as Joey grabbed her wrist.\n\n\"Don't go, please! I know what I want, I think I did from the first time I saw you too; I just didn't know that you wanted it too!\"\n\nHe gave her an embarrassed grin.\n\n\"I even dreamed about you, how weird is that? It scared me, it seemed too soon, I didn't want to let Karen go, and it seemed wrong to even be thinking about you, but it doesn't anymore. I don't want you to go; I want you to stay, if that's what you want...\"\n\nLuna cupped his face in her hands,\n\n\"I will, but you need to understand something; this isn't some one-night-stand, or a passing infatuation, or us flirting; this feels real to me, and it's what I want more than anything. If you can't promise to give me what I want to give you, then I'm leaving, now, and you better go back to California, because I don't know if I can stay here with you here, wanting you and knowing you don't really want me!\"\n\nJoey looked into her eyes, seeing the determination there, and the slight quiver of her lip, and suddenly all his feelings for her solidified into a single, unbreakable certainty; he was ready to move on, and this was the girl he wanted. \n\nFor the first time in a very long time, other, more basic urges stirred in him as well; Karen had been gone for almost six months now, and he'd been with no-one in all that time, and now, for the first time, he wondered how Luna would look naked, how she would taste, and smell, and feel as she moved against him, and what she would look like when she woke first thing in the morning, with her blazing hair spread across a pillow, and her marvellous eyes still soft and blurred with sleep.\n\nAll those thoughts flew through his head in an eye blink; he realized she was waiting for a response from him. Joey drew a deep breath, knowing what he said next would be the start of a new life, or the death of something before it had ever had a chance to live. He took her hands in his and looked into her eyes.\n\n\"Luna, you know why I came here, and you know how it's been for me sometimes, and I never really shared anything with you. Before we go anywhere, I have to make sure you're okay with what went on before, how it was for ...for Karen and me; the more you know, the better you'll know me, and when you know me better, perhaps we can take it from there. Are you good with that?\"\n\nLuna nodded, curious to know more about the girl Joey had loved so much and lost so tragically. To date he hadn't opened up about her at all, and she hadn't pried, figuring that when he was ready, he'd tell her. Now it looked like that time was finally here. \n\nJoey began by telling her about how he'd met Karen, that first day in 8th Grade, and how he hadn't been able to take his eyes off her; how they'd become friends, then more, and before he knew it, she was his girl. He spoke about how they'd been the classic High-School pair, he the star quarterback, she the head cheerleader, how they'd gone to college together in Monte Vista, Karen studying Computer Science and he studying for an MBA, and how they'd applied for jobs at the same insurance company in Roseville. When Karen's father had died, her mother had moved back to San Diego with her younger sister, but Karen had gotten a small apartment in Springfield so she and Joey could stay together. \n\nJoey glossed-over his history with Robbie; it didn't seem relevant, but Luna caught the omission, especially as he'd let slip in previous conversations about his 'kid brother', but she chose to say nothing as Joey talked about he and Karen, their life together, their son, their home in the Bay Area...and the accident. \n\nAs he talked, Luna noticed that he now increasingly referred to Karen in the past tense; before, he'd always spoken about her in the present tense, as if she were still around; now at last he seemed to be acknowledging, if unconsciously, that she was really gone.\n\nHe told her how he'd made the decision to come home and try and put some of his life back together, and what had prompted his return. Luna smiled as he changed tack now, talking now about his childhood, and Robbie, how he and Robbie had been inseparable from early days, and how he and Karen had moved to the West Coast at Robbie's instigation, how he had become Vice-President of the company Robbie was now a partner in.\n\nLuna caught the omission again, the change in tone when he mentioned Robbie. \n\n\"Joey, who's Robbie? Is he from around here? What's his family, perhaps I know them?\"\n\nJoey grinned.\n\n\"Robbie is like my kid brother; his name is Robbie Dolan. I guess you must have heard THAT name!\"\n\nLuna looked astonished.\n\n\"That was the boy who disappeared! The whole town was buzzing with it. They still are! Everyone thought his family did something to him, he just disappeared and no-one knew where he was. You mean you knew all along?\"\n\nJoey nodded, his eyes far away, the soft golden brown suddenly hard and unforgiving as polished agates as memory flooded back.\n\n\"Robbie's family didn't give a damn about him. His whole life they just kind of wished he'd never been born; they treated him like he wasn't good enough to be one of them, so they left him out of their family, their lives, everything they ever did. They had no room for him in their family, and so my mom took care of him when his own family wouldn't. He became part of this family; he became my kid brother, and when he needed help, my mom and my uncle Frank did what they could, and now Robbie lives out West, with a new name, a family who loves him, all the things he never had here.\"\n\nLuna nodded slowly. \n\n\"I remember there was a...scandal; something about a scholarship, and a...sister? Yeah, that's right; she had something to do with it. I only transferred-in to Ellenbrook when I was 14, so I wasn't there when all this happened, but I remember the story about her graduation, how she got booed and slow-handclapped off the stage; she was supposed to be some piece of work!\"\n\nJoey cocked his head at her.\n\n\"It's not quite as simple as that; you don't know the whole story yet...\" he rebuked her gently. \"Robbie's sister looked for him, she searched for him for years, she was sorry, really sorry for what she helped do to him, and she really tried to find him so she could make it right with him.\"\n\nLuna backpedalled, realizing she'd just touched a sore spot.\n\n\"I'm sorry, I didn't know; all I really know about what happened is what was going around the school; when it comes to the Dolan family, there's a whole lot of no-talking going on, even now. What happened, did she ever find him?\" \n\nJoey grinned.\n\n\"Oh yes, she found him!\" he said, almost to himself. \"She found him and she made it right. Now she's happy, and Robbie's happy; they're both happy.\"\n\nLuna suddenly realised the reason for Joey telling her so much; he was sharing his life with her, finally letting her know who he was, and the knowledge made her smile, something Joey picked up on right away.\n\n\"What, what did I miss?\" he asked playfully, and Luna reached out to take his hand again, sliding closer to him on the couch so they were almost hip to hip. Her nearness was doing things to him as well.\n\n\"Thank you for sharing, Joey Anderson!\" she grinned, and leaned forward, her lips brushing his. Joey almost recoiled, then leaned in, once again tasting her, revelling in her kiss. Luna moved closer, her arm reaching out to encircle his neck, while his arms went around her waist, holding her close as they kissed, gently at first, then more and more passionately as their feelings took hold. Joey found himself leaning backwards as Luna leaned more of her weight on him, until he was almost prone on the sofa, leaning against the armrest with Luna almost on top of him.\n\nJoey was uncomfortably aware of his erection pressing against the front of his jeans, the kiss stimulating him more than he could have believed; she must have felt it too as it pressed into the soft skin of her flat stomach, but she said nothing, continuing to kiss him as she undulated gently against him. When they broke for air, she grinned down at him once again.\n\n\"So what do we do now, Joey?\" she asked him, her eyes dancing. Joey grinned in reply, keeping the mood light.\n\n\"I dunno, what do you think?\"\n\nLuna tried to look demure as she smiled.\n\n\"Well, I'm sure I don't know either, but you're a grown-up, I'm a grown-up, there's something I've been wanting to do with you for a while now, what say we go somewhere and find out if it's something we both wanna do?\"\n\nJoey raised an eyebrow in mock concern.\n\n\"Miss Hollister, are...are you trying to seduce me?\" he quavered in a fairly accurate impression of Dustin Hoffman in 'The Graduate', making Luna smile.\n\n\"Let me think, now; you just kissed me real convincing, like, your hands are like one inch from grabbing my butt, there's no-one else here kissing you back, what do you think?\"\n\nJoey grinned even wider. \n\n\"Good, I'm so glad, I thought I'd lost it!\" he murmured, sliding his hands down to cup Luna's taut ass as he pulled her closer for a longer, even more satisfying kiss, Luna responding by wriggling and grinding against him, making him gasp.\n\n\"You really need to do something about that!\" she giggled as she broke their kiss, \"and I think I know what works for that; follow me!\"\n\nShe pulled him by the hand as she stood up, Joey a little reluctant to stand to follow her. Luna looked at him quizzically as he blushed.\n\n\"Maybe we should wait...\" he began, and once again her eyebrow lifted in that naggingly familiar way as she smiled faintly.\n\n\"Joe Anderson, we've been dancing around each other for nigh on three months now; I don't know about you, but tonight I'm done waiting for you! Now, are you coming with me or not?\"\n\nJoey nodded, but still seemed reluctant. Luna cupped his chin as she looked up into his eyes.\n\n\"What's wrong, Joey, really? If you don't tell me, I can't help you.\"\n\nJoey looked away in embarrassment. \"Luna, it's been a long time since...since I did anything like this, what if...\"\n\nLuna cut him off smoothly, a knowing smile curving her lips. \n\n\"You'll be fine; it's just like riding a bike, only softer... and a lot more naked!\"\n\nJoey grinned as he followed her upstairs, wondering what he was getting himself into, but eager for the chance to find out. Once in his bedroom, Sarah's old room, with the queen-size bed, Luna took him by the hands and looked into his eyes.\n\n\"Now or never, Joey, this is what it comes down to; we can do this, and I really want to, or you can ask me to leave, and we'll never know. Dealer's choice, Joey.\"\n\nIn answer, Joey pulled her closer and kissed her again, his hands sliding down her back to once more cup and squeeze her firm, shapely ass through her fashionably faded jeans. As he kissed and fondled her, Luna reached up and began unbuttoning his shirt, grinning in the midst of their kiss as he in turn fumbled with the waistband of her jeans. Finally, Joey left off trying to unbutton Luna's jeans to yank off his shirt, while Luna unbuttoned and unzipped her jeans to let him push them down past her hips. Luna smiled and wriggled and shimmied until her jeans dropped to the floor, allowing her to step out of the scrunched-up garment and kick it away. \n\nJoey's kiss intensified as his hands now slid and roamed unimpeded over her panty-clad bottom, finally pushing the waistband of the skimpy panties down to clasp and squeeze her naked buttocks, smoothing the soft, silky cheeks with his hands, lost in the sensual texture of her naked skin.\n\n\"How about you, mister?\" whispered Luna, smiling back at Joey's answering grin. He stepped away to unbutton his jeans and kick them off, then reached up to unbutton Luna's blouse as they resumed their kiss. Luna pulled herself closer to him, grinding her crotch against his, making him groan mid-kiss, the heat of her pussy evident even through the material of his shorts. Joey lost all remaining inhibitions at that point, pulling Luna's blouse off and reaching behind her to unclasp her bra all in one move.\n\nLuna seemed to be in the same place, her lips glued to his as she hooked the waistband of Joey's shorts, pulling them down until his engorged cock fell into her waiting hand. She squeezed it gently, feeling the texture and tenseness of it, enjoying his soft groan as she slowly pumped him, making him even harder.\n\n\"Don't...please...I can't...\" he gasped, but Luna cut him short.\n\n\"No Joey, let me do this, then it'll be better, I promise!\"\n\nJoey leaned back against the wall, his eyes screwed shut as all his need centered in what Luna was doing, her insistent pumping and squeezing of his already sensitive member bringing him on. Luna glanced up at him, at his tight-closed eyes and the pulse beating in his throat, guessing how close he was, and squeezed a little harder as she pumped once more.\n\n\"Oooh GOD! Aaahhh!\" groaned Joey as orgasm rose wild and unstoppable in him, Luna angling him towards herself as long spurts of semen sprayed from him, coating her belly as she held herself close to him. Joey's head rang with the force of his climax, the first since before Karen had died. \n\nOnly the beautiful girl holding herself against him prevented him falling to his knees with the shock of his release. His heart pounded as the sweetly agonising totality of his orgasm rolled through and over him, obliterating all sound and vision, and his body shimmered and trembled like a softly struck bell. \n\nAs the noise in his head gradually subsided, he slowly became aware of her whispering encouragement to him even as her hand continued to pump him, his ejaculation now tamed to a thick trickle that crept down over her clenched fist as she pumped him dry. ",
        "\"Luna, I...I didn't... \" he began, trying to apologise for going off like that, but her finger to his lips silenced him.\n\n\"Ssshh, it's alright, you needed that, we needed that if we're gonna have any more, so don't say anything more. How d'ya feel?\"\n\nFor answer, Joey pulled her closer, heedless of the streaks of sperm criss-crossing her belly as his lips found hers, kissing her with need and without restraint, no longer holding back in the slightest, his feelings for her now fully founded and part of him. Luna kissed him back just as eagerly, feeling the sincerity in his kiss, understanding that they'd just passed a milestone in their relationship. She broke their kiss to grin up at him.\n\n\"Pass me your shirt, Joey; help me get some of this off me!\" she smiled, Joey coloring as he saw the sperm smeared over her belly and his. Luna kissed him once, then took his shirt and swabbed herself off before turning to him and wiping the sticky mess off his stomach as well.\n\n\"Your abs are like iron; you must work out regular,\" she commented. Joey nodded.\n\n\"Robbie and me, every evening after work; we have a small gym at work, so we used to work out together. Lately though...\" he trailed off as Luna, satisfied they were both clean enough, dropped the shirt and pulled his head down for a kiss.\n\n\"Well maybe you can start again; you look good, Joey, you should keep it that way. You ready for Round Two now, baby?\" she smiled, and to his surprise, Joey found he wa; her hands as she wiped him down had been stimulating him even as she cleaned him, and he was once again fully erect. \n\nLuna took his hand and led him to the bed, smiling as she lay down and stretched like a cat. Joey took the opportunity to admire her sleek, lithe form, her long legs with the small tuft of neatly trimmed coppery curls at the apex of her slit, with her shiny, moist labia just beginning to swell and darken with arousal, and her small, perfect breasts, crowned with pink, quarter-sized areolae and stiff, half-inch long nipples. Her skin was pale as milk, a white glimmer in the light of dusk, with not a mark or blemish to sully it. Her hair was a river of darkly molten fire flowing over her flawless white shoulders.\n\nLuna grinned up at him as he stood there, lost in admiration of her.\n\n\"Well come on, City-Boy, are you gonna get down here with me or stand there like a statue?\" she teased, her eyes dancing, and Joey wasted no time in clambering up next to her, eager to hold her close and feel her satin skin against his again. As their lips met, his hands slipped down to again cup and squeeze her ass, savouring the feel of those tight, firm globes as he squeezed and gently massaged them. Luna responded by gently undulating against him, reminding him, as if he needed it, just how much she too was into this. \n\nJoey began to kiss her along her neck and throat, Luna closing her eyes, smiling as he softly kissed her, teasing her with his lips. As he moved down, now kissing the base of her throat, Luna sighed happily, holding him closer as his lips moved ever lower, until finally his probing tongue gently circled and brushed against her stiff nipple, sending a sharp thrill though her. This was further than she'd ever gone before, than she'd ever wanted to go before, and the simple eroticism made her heart thrill even as she gasped in pleasure at the electric shivers radiated through and through her as Joey gently licked and suckled her.\n\nNow he continued, onwards and down, Luna gasping softly as he kissed gently in a line from the valley between her breasts, swirling his tongue for a moment in the dimple of her navel and hearing her soft giggle before kissing and licking her once more, until finally his tongue grazed and parted the soft, fine hairs decorating the apex of her slit. Lana moaned softly as Joey went where no other man had ever been before, her fingers twining in and stroking his hair as he slowly licked and teased the small tuft of red-gold hairs, enjoying the silky, crisp feel of the soft hairs against his tongue, tasting the subtle, feminine tang of her arousal.\n\nLuna wriggled slowly, languidly, lost in a world of sensation as he moved lower, the flat of his tongue lapping against the crease between her labia, feeling the lips swell in arousal as they engorged, heat radiating from them. With that heat, the scent of her arousal arose, stronger, richer, tickling his nose and exciting him, pheromones flooding his system and raising his own arousal to its peak.\n\nJoey lay between her thighs, the skin of her inner thighs soft and smooth, silky and warm against him as he dipped down to lick at the cleft between her swelling labia. Luna gasped and shuddered as Joey inserted the tip of his tongue between those swollen lips, feeling the heat as more and more blood flowed into them, feeling them swell and blossom even further against his insistent, probing tongue.\n\nHer scent rose even richer now, inflaming his brain with the need to possess her, but he suppressed his baser instincts; he wanted to eat her, to savor her succulence and lap her fragrant juices. He slowly, inexorably, licked her with the flat of his tongue, from the soft little pucker of her anus to the stiffly erect, glossy little pearl at the apex of her slit, savouring the rich, sweet, earthy taste of her as her fluids poured from her, soaking his mouth and chin and readying her for what must surely come later. \n\nAs she panted and writhed, her eyes clenched shut as she grabbed at the bedding, Joey touched, teased, tormented, and delighted her with his tongue, feeling the first tremors of orgasm uncurling and surging through her body, feeling it in the tendons of her thighs, now taut as guitar strings, in the pulse-beat beneath his tongue as her pussy trembled and fluttered against him, and in the pulse beating in the hollow of her throat as sweat beaded her brow. \n\nJoey bored in relentlessly, holding her taut, delectable buttocks in his hands as he held her against him, worshipping her with his tongue, feeling the throbbing tension whipping through her, and when he finally sucked her stiff, swollen clitoris between his lips and licked firmly, she came in a screaming welter of hot orgasmic pulses. Wave after wave of hot pleasure surged and pounded through her, electricity sparkling and crackling all through her as her senses shut down in response to her gigantic, soul-shaking orgasm. \n\nA hot spray of her delicate, fragrant, tangy juices coated his lips and chin, filling his mouth with her sweetness as her body wracked and shuddered in the throes of release, wave after wave convulsing her, her body filled with liquid fire as light and energy seemed to blaze and crackle in all her nerve-endings, surrounding her in a white-hot nimbus of pure pleasure.\n\nJoey held her all through her paroxysm of orgasmic release, never relinquishing his hold on her as his talented tongue drove her on and on, until the moment finally passed and sense and sensation flooded back in. Her body felt limp and languid after such a cataclysmic orgasm, but she still had enough strength to hold him and urge him up next to her so she could hold her body against his and wait for the fires burning in her to die back to a slow roar from the thunderclap she'd just weathered.\n\nLuna smiled blurrily, her senses still tingling and shuddering with delight as she leaned over and kissed him softly, tenderly, her lips barely brushing his. Joey returned her kiss more firmly, pulling her to him as their tongues arched and fenced, their lips suddenly glued together as heat once more built between them. Luna gasped as Joey rolled onto his back, taking her with him so she now lay on top of him, her breasts crushed to his chest as his hands once more molded and squeezed her delicious ass, her knees planted on the bed on either side of his waist. \n\n\"What now, Mister Anderson?\" she smiled, feeling his stiff, swollen cock trapped between them, hearing his soft intake of breath with every move of hers as she slowly ground against him.\n\n\"I think you know what you want to do...\" he grinned, pulling her firm cheeks slightly apart in revenge, making her gasp at the sudden sensation. Luna smiled sexily, biting her bottom lip as she lifted up on her knees and slowly, deliberately, ground her hot, wet pussy against the underside of his throbbing cock, making him groan at the sensation. Luna suppressed a gasp herself at how good it felt, instead doing it again, and again, teasing and tormenting him, torturing him with what was so near and yet still not his. \n\nFinally, she took pity on him; doing that to him was making things happen inside her as well and she knew what she wanted from him now. Leaning down to kiss him one more time, Luna lifted herself off him and took hold of him. Joey's eyes snapped open at the sensation of wet heat on the head of his cock as Luna slowly rubbed him between her labia, lubricating him with her juices even as she felt his size. At last, unable to hold herself back more, she slowly sank down on him, her almost inaudible gasps of pain as he slid into her mixed and mingled with Joey's soft groans of pleasure as he finally entered her.\n\nJoey's mind was in a whirl; he'd never done this with anyone except Karen; they each taken the other's virginity, only ever been with each other, and now, to find himself doing this with someone else, all he could think of was Karen; but then a new insight intruded, his sub-conscious self shooting a gleam into his conscious mind; Luna was a lovely, loving girl, she wasn't doing this with him because she wanted to play; no, she was doing this because she'd realized he was the one for her. \n\nWith that understanding came the final revelation for him; he could do this again, with someone else, someone who loved him for him, the way Karen had loved him, and he could love someone else that way as well. It was time to let Karen go now, and he realized, with no hint of guilt or betrayal, just a momentary sadness, that he could; now, at last, he understood; Luna wasn't taking Karen's place; she was the start of something new. \n\nA tear trickled from the corner of his eye, something Luna saw immediately, leaning down to look into his eyes, her own full of concern.\n\n\"Joey, what's the matter baby? If this is too soon...\" she began, but Joey smiled, his heart lifting at the love and concern he saw in her eyes, and reached up to pull her in for a long, heartfelt kiss.\n\n\"Nothing 's wrong, baby, nothing's wrong at all!\" he grinned. \"I think I just managed to do what Robbie told me I had to do months ago; I finally pulled my head out of my ass!\"\n\nLuna smiled again and kissed him softly.\n\n\"Then that's two firsts tonight, one for you, and one for me...\"\n\nLuna grinned at the expression on his face as he realized what she was saying, then squeaked in surprise as he pulled her down for another kiss, this time a long, slow, deeply satisfying kiss; a lover's kiss. When they finally broke apart, Luna stared into his eyes.\n\n\"What was that for, Joey?\" she whispered.\n\nJoey smiled back at her, his eyes clear and untroubled at last, but concern for her apparent in his gaze.\n\n\"Why didn't you say something earlier, baby, I would have...!\"\n\nLuna cut him short, her eyes dancing as a small smile played on her lips.\n\n\"Sshh, I wanted it to be for you, something from me to you, and it was wonderful because it was with you. Now shut up and kiss me again!\"\n\nJoey obliged, finally breaking their kiss to hold her close against him.\n\n\"That was because I love you, Luna Hollister, I love you and I want you to stay with me. Will you?\"\n\nLuna smiled back down at him.\n\n\"Of course I will; I love you too, Joe Anderson, I have probably since I first saw you, I just never thought you'd ever feel about me the way I feel about you!\" she grinned suddenly, a delighted laugh pealing from her lips.\n\n\"Jonah knew! He told me to catch you if I could, and I just laughed it off; but he could see it coming all the time, that sly old...!\"\n\nWith Luna's declaration came a renewed need in Joey to make her know how he felt, to join with her. Luna gasped as his cock, still embedded in her, gave a lurch as he moved under her, pushing up against her. Luna responded instinctively, pushing down against him, her mouth falling open in a silent gasp as new and wonderful sensations raced and surged through her. Joey reached up to hold and cup her breasts, and slowly rub her nipples with his thumbs, Luna gasping as thrills ran through her body and seemed to ground in her pussy as she clasped his cock deep within her. \n\nHer movements became faster, more rhythmic as she ground and gyrated against him, instinctively rubbing her clitoris against the base of his cock as he slid his hands down to cup her taut cheeks, holding her against him as he pounded into her. Luna leaned forward, resting her hands on his chest as her hips ground against him, more and stronger sensations arcing through her, her heart-rate rising as wisps and tendrils of orgasm began to uncurl inside her, driving her on, until she was pumping against him as hard as he was pounding into her, holding her hips as he thrust up into her.\n\nLuna stiffened, sitting bolt-upright as a gigantic orgasm ripped and shrieked through her, closing down all her senses as white light flared inside her. She vaguely heard herself as she screamed in release, but it came from far away, a sound from a different time and place to where she floated between waves of pleasure that surged and battered her, leaving her almost devoid of sense or reason. As she came, her pussy clamped down hard on Joey, the sudden restriction tipping him over the edge, and she dimly heard his deep, inarticulate groan as he too orgasmed, pulse after pulse of white hot flame pouring into her, filling her with heat and pushing her even higher and further into that place she already floated.\n\nFinally, sated and tired almost beyond their ability to describe, the lovers collapsed together in a heap and tangle of limbs, hearts beating fit to burst as they descended from that plateau of pleasure. Their chests rose and fell rapidly as they fought to breathe, until, at last, their hearts slowed and breath returned. Tired limbs were stretched and luxuriated-in as the delicious post-coital afterglow overtook them. \n\nJoey held Luna close as her body twitched and shuddered as aftershocks rolled though her, gradually quietening until their bodies were still. Their breathing slowed to normal, and the heat of their coupling transmuted to a warm, drowsy languor before sleep finally took them both.\n\n*\n\nJoey came awake to see Luna's eyes open, looking into his with that disconcerting frankness of hers. He smiled tentatively, his eyes widening as the remembered rush of what they'd done came flooding in. Luna smiled back at him, and gently rubbed his chin with her pink forefinger.\n\n\"Good morning Joe Anderson!\" she smiled, her face even more beautiful in the early morning sunshine flooding through the big bay window. Joey searched her face, her eyes, looking for any hint or clue that she regretted what had happened the previous night, that she regretted giving herself to him like that, but he found only calm acceptance and warmth, his fears draining away as he realized she had meant everything she'd said and done with him.\n\nJoey wrapped his arms around her and pulled her closer, marvelling again at her eyes, at the depth of brilliance in the emerald coloring he found so familiar, and at the immediate need he felt to press his lips against her full lips, remembering their softness and eagerness to kiss him last night. Along with the memories of her warm silky skin, he took in for the first time the pale whiteness of her shoulders, like new milk, with just a hint of barely visible freckles dusting them, and the deep coppery magnificence of her hair in the morning sun, shining like burnished metal as it spread in a soft net across the pillow. \n\n\"Good morning, Miss Hollister, I trust I find you well this fine morning?\" he intoned gravely, the twinkle in his eye belying the formality of his words. Luna grinned, then schooled her features into lines of mock severity.\n\n\"Fair to middling, good sir; however, I had a sorely disturbed night; someone couldn't keep their hands to themselves, and now I find myself temporarily with neither clothes nor dignity! I trust you will forgive my present condition?\"\n\nJoey grinned and slipped his hands down to squeeze her tight little buttocks and pull her closer.\n\n\"I don't think so; I think I much prefer you this way!\" he grinned, nuzzling her neck, making her squirm and giggle.\n\n\"Why Mr. Anderson, you're such a bad, naughty man, are you planning on doing to me again what you did last night?\"\n\nJoey stiffened, the blood draining from his face as sudden realization coursed through him; last night! How could he have been so careless, what was he thinking?\n\nLuna pulled back as she felt his body stiffen, looking into his eyes and seeing the guilty recall there as he remembered what they'd done together.\n\n\"Joey, what is it, what's wrong?\" she murmured, her eyes widening as she realized what had just struck him.\n\n\"Luna...last night, .I didn't even ask you, I just...!\" he stuttered and stammered as the full awful realization flowed over him; they'd had sex, wild, unprotected sex, and he hadn't even checked, just gone at it; how stupid could he have been! Luna smiled reassuringly, her fingertip on his lips silencing him.\n\n\"Sshhh Joey, it's okay, I'm safe...!\" she began, but Joey didn't hear her as the panic roared through him, heavily laced with guilt and remorse for what he might have done to her life.\n\n\"Oh shit, how could I have been so stupid, I didn't even check with you, I just dragged you into my bed! Oh God, I'm sorry, Luna, I'm so, so sorry!\" A thought seemed to strike him, and his face paled even further. \n\n\"Shit, what about Jonah, what's he gonna say, after all you did for me, both of you? I let you both down, I'm so sorry...!\"\n\nHe stopped for a moment to look her squarely in the eye.\n\n\"Luna, if...if it should come to that, if, if it should happen that you're...that there's...\" He took a deep breath. \"I will do the right thing, I swear; I'll take full responsibility for my child, I would never leave you high and dry! I only hope Jonah gives me a chance to make it right with you...!\"\n\nLuna grinned even wider and pulled his face around to look into his eyes, her fingers pressing into his cheeks, shutting him up as she spoke slowly and deliberately, cutting across his panic.\n\n\"Joey, shut up and listen to me; I AM SAFE, got it? I have protection! Stop worrying! Jonah knows where I am, he's okay with it; I'm a big girl, now, Joey, I'm over twenty-one, remember? I wanted you, he guessed the truth, he told me to catch you if I could; I told you this last night, don't you remember? Calm down, baby, I'm here because I wanted to be here, with you, doing this, okay?\"\n\nJoey pause mid-panic, her calm tones finally cutting across the knee-jerk reaction to the realization he was in bed with Jonah Hollister's niece, both of them naked as jay-birds, with ice-cubes of dread tumbling up and down his spine...\n\n\"What?\" he mumbled, his eyes narrowing at Luna's peal of laughter.\n\n\"Joey, I'm here with you because I want to be; you didn't 'drag' me anywhere, give me some credit at least! My uncles are marines, remember? If I didn't want to, you'd be one sorry piece of road kill by now!\"\n\nShe smiled gently and kissed him lightly on the lips. \n\n\"Honest, Joey, Jonah knows how I feel; he knew this might happen, all he said to me was not to hurt you. I'm a grown woman, Joey, not some half-drunk prom-date, and Jonah accepts that, so he's not waiting outside the door with a rope and a lynch-mob, I promise you! Breathe slow, baby, that's it, keep doing that!\"",
        "Joey relaxed, his momentary panic passed, his thoughts in a whirl as he digested what she'd said. Jonah was the closest thing she had to a father, and Joey knew what he'd do to any man who'd done to his daughter what he'd done with Luna, and Jonah knew so many more inventive ways to inflict pain, if even half the stories about the Hollister brothers were true...\n\nLuna grinned and pushed Joey onto his back, sliding on top of him to lie along his chest with her face resting in the hollow of his neck.\n\n\"Baby, this was my choice, and Jonah respects that; he's got nothing but respect and admiration for your mom, and he likes you too. People around here think he's some kind of psychotic killing machine, and maybe he was, I don't know, but that was then. He was a marine, one of the best, and that's what they did, him and other men like him, and that's why we live free.\"\n\nShe grinned and tapped his chin with a graceful forefinger.\n\n\"But now he's past all that; now he's just the town handyman, my family, and he thinks you and your mom are family too. Did you know he used to babysit you? He told me how, after your daddy died, your mom was living here alone, and he used to look after you if she had to go someplace in a hurry; he's known you since you were a baby, so relax, he'd be glad I finally found you. You're the kind of guy he's always wanted for me, and luckily, I happen to think so too...\"\n\nJoey pulled her closer to him, their lips almost touching as she lay on top of him, smiling down at him.\n\n\"That's good to know. You're really okay with...this, all of this? You know I can't stay here forever, right? I finally found what Robbie told me to go look for. Now I have to go back to my little boy, so I guess I'm asking if you'll come back to California with me...?\"\n\nLuna grinned at him, her forefinger pressed to her chin in an 'I'm thinking...' gesture.\n\n\"Let me think, Joey, in fact, why don't you try asking me nicely?\"\n\nJoey smiled back, and slipped his hands down to gently squeeze her butt-cheeks.\n\n\"Miss Luna Hollister, will you please, please, pretty please with sugar on the top, come back to California with me?\" \n\nLuna pretended to consider his request, then grinned, her eyes dancing.\n\n\"Now why would I want to do something as crazy as that? The very idea! You actually expect me to go running off to the other side of the country with you, City-Boy?\" she teased, then gasped and giggled as Joey squeezed and jiggled her buttocks, pulling them apart.\n\n\"Yes I do, because I love you, and you love me, and because I need you as much as you need me. That good enough for you?\" he replied, nuzzling her neck.\n\nLuna nibbled his earlobe and blew in his ear.\n\n\"That's true, can't deny that. Okay, I will. When were you planning on going back?\"\n\nJoey rolled onto his side, holding Luna tight and taking her with him, so they were now lying facing each other. Luna once more reached up and lightly tapped the end of his nose.\n\n\"Just so you know, I don't plan on being some kind of summer girlfriend; you're not some fling for me while you're here; I think you're the one for me and I have for a while now.\"\n\nShe pulled herself closer to look into his eyes.\n\n\"I'll give up all I have here to go away with you, because you asked me, and because I want to; but I need to know what you want from me, Joe Anderson. I want to hear you say it just this once, and I'll never ask you again; do that for me, and we can go today if you like!\"\n\nJoey stared at her in wonder, astonished and humbled, but also deeply moved and excited at her declaration of the depth of her feelings for him. His hands caressed her as he framed a suitable reply.\n\n\"Luna, the first time I saw you I felt something, it felt like the start of something, and I tried to push it away, because...well, you know why. But it wouldn't go away, and every day I saw you, I felt it more and more. I didn't know how to deal with what I was feeling, because all I wanted was Karen, she was my whole world, and even thinking about you felt wrong, so I tried not to; I tried, but it didn't work. Luna, I don't know how, or why, or what happened, but I know one thing; I never thought I could have that feeling again, I thought you only ever once got it so right, and I'd had my chance, and she was gone.\"\n\nHe paused to smile into the distance, his eyes glittering. Luna reached up and gently rubbed his eyes, blotting the single tear that ran from each eye. Joey looked back down at her and smiled, his eyes clear and direct.\n\n\"But I was wrong, Luna; I found you, and suddenly I found I could feel that way again, that perhaps, maybe, I was getting my second shot, the one I wasn't supposed to have; somehow you found me, and I found you, and I never want to let you go. Come with me, please, be with me, we can have a good life, a family, everything the world has to offer; I have a good job, a nice home, family who love and care about me, and I know they'll love you too. I can give you everything you want, just say you'll come home with me and be with me forever!\"\n\nLuna raised herself up to look down into his eyes, her own eyes glittering as she smiled at him.\n\n\"Yes Joey, I will go home with you, and stay with you forever, and we will have it all, I promise you!\"\n\nJoey smiled up at her, then his expression became serious.\n\n\"There is one more thing; I love my son, he's just over a year old now, and he's the most important part of my family; he comes as part of the package, so will you still take me, knowing that?\"\n\nLuna smiled back at him, her finger gently tracing the outline of his jaw.\n\n\"I knew that Joey, and yes, I will take you both regardless; babies need a momma, and that little boy's no different, so maybe I can be that for him, if you'll let me; besides, looking after little Joe's gonna give me some practice for when some more babies come along, right? I do promise you one thing, though; I will never be anything except his momma, and he will be our son, but he'll always know that Karen was his momma first, and that she loves him too.\"\n\nJoey smiled and pulled her close, Luna responding by showering him with kisses. As she undulated against him, Joey could feel himself hardening. Luna felt it too, and her wriggling and grinding against him intensified as she kissed him even harder. Joey's hands roamed over her body, touching, caressing, fondling and squeezing her lithe, tight body, heating her up even as his internal temperature rose at her nearness.\n\nJoey rolled Luna onto her back as he reared above her, looking down into her eyes. Luna grinned back up at him and nodded, her lip caught between her teeth as he slid into her, her eyes closing tight and her mouth falling open as he slowly filled her, gently stretching her open all over again. Her breath came in a soft \"aaahhh!\" as he slowly pushed his way into her, and her fingers dug reflexively into his back as he buried himself once more in her tight warmth. \n\nAs he slid out of her again, as a prelude to slipping back into her, Luna lifted her hips, meeting him as he plunged back into her, and so they made love, their sexes joining and pulling apart as they pleasured each other, their breathing quickening as the need for release rose wild and unquenchable inside them.\n\nLuna gasped out loud as she peaked first, tightening around him as orgasm blew through her in a blast of heat and excitement, her nerve-endings alight with sensation as pleasure radiated out from her center. Pulse after pulse thrummed through taut nerves and stretched tendons, her entire body humming like a power-line on a quiet day as the pleasure coursed through her, a prairie fire that burned without consuming her, bathing her instead in a glowing heat that warmed her through and filled her with a deep sense of satiation.\n\nJoey gasped at the sudden constriction, the catalyst needed to push him over the edge, and he too gasped, shuddering with pleasure as jet after jet of sperm hosed from him, seemingly endless spurts of hot semen flooding her, splashing against her cervix as he gave way to his feelings and needs, the pleasure heightened for him by the knowledge he was making love with the woman who had promised herself to him.\n\nJoey rolled over to lie silently next to her, his chest heaving as the raging aftermath of orgasm controlled him, his muscles twitching and rippling as the adrenaline from his recent exertions slowly dissipated within him. His blood thundered in his ears, a lessening drum-roll as his racing heart gradually slowed to normal. \n\nHe turned to Luna as she turned to face him, her eyes a brilliant, sparkling green in the bright Midwest morning sun, and once again a memory surfaced briefly, the certainty he'd seen those eyes, that smile, before, but yet again it eluded him.\n\n\"Penny for your thoughts, Mr. Anderson.\" she murmured, her eyes dancing with amusement as Joey slipped his arms around her and pulled her closer.\n\n\"I was thinking I should go and talk to Jonah, then call my mom, then call Robbie. They're all going to be so happy, well, maybe not Jonah, but he's the least of my concerns right now. There was one thing I forgot to ask you, probably the most important thing.\"\n\nLuan looked at him quizzically, again that so familiar lift of her eyebrow, then her eyes widened as she realized what he was talking about. Joey took her hands in his, and looked into her eyes.\n\n\"Luna, I know I already asked you to come home with me, but I don't just want you to live with me; I want more than that, and so do you, I think, so here goes. Luna Hollister, I love you, and I know you love me; will you marry me?\" \n\nLuna stared at him, at his eyes, reading him and seeing nothing but sincerity there, her serious expression slowly softening into a shy smile.\n\n\"Yes I will Joey, I would be honored to marry you and be your wife!\"\n\nJoey smiled, suppressing a sigh of relief; for a moment there he'd thought she was going to say no, that it was a step too far, too soon, but obviously Luna felt the same way he did.\n\n\"And now we tell the folks!\" he grinned. \"Let's go find Jonah, it's too early to go calling the West Coast just yet, and he deserves to know first. Are you okay with that?\"\n\nLuna grinned and nodded, seeing the sense of his words.\n\n\"But first, we need to go downtown,\" he continued, \"there's something I want to buy you...\"\n\nWhile they showered and got dressed, Luna tried to get Joey to divulge what was so important they had to go downtown so early, but Joey just smiled and said nothing, and it wasn't until they stopped outside the town's only jewellery store that understanding dawned.\n\n\"Joey, you don't need to do this, I already said yes, I know we're engaged, that's all that matters to me!\" she announced, but Joey wouldn't hear of it.\n\n\"I want people to know you're not available anymore; a beautiful girl like you is gonna attract plenty of attention in Daly City, believe me. I just want to make sure everyone knows you're taken!\" he grinned, to which she had no answer, so she followed him into the store, to emerge with the most expensive thing she'd ever owned. Luna was almost speechless at how much Joey had paid for her engagement ring.\n\n\"Joey, you have a family, you should be saving your money, not wasting it on me!\" she'd protested. \"If you really needed to give me a ring, any old thing would have done; it's the thought and how we feel about each other, not the price that matters!\" \n\nJoey shook his head.\n\n\"This is the new beginning we promised each other, this is how I mean to go on; you'll never want for anything, I promise, and neither will our children; that ring is my pledge to you, and I mean every word of it.\"\n\nOnce they were out of the store and back on the sidewalk, Luna looked at him, her eyes once more searching his eyes, his face, looking for something, anything he wasn't telling her. Eventually she spoke, her voice low and throbbing with emotion.\n\n\"Joe Anderson, I've waited all my life for this moment, and I think you should know, for me, this means 'forever', no half measures. I want you, all of you, and you're all I want, but if you can't say the same thing, then please, take this back and go get your money back. For me, it's all or nothing, Joey, and I need you to tell me if that's how it is for you too!\"\n\nShe paused to take a shuddering breath, her chest heaving with the intensity of her emotion. \n\n\"I meant every word I said, about loving you, about wanting you, everything, but if you can't tell me the same thing, honestly, before God, then at least I'll know, and I can walk away and not live to regret this; I can't live with the fear always lurking in the background that one day down the line you'll turn around and tell me I trapped you, or it was a mistake; that would kill me, so please be straight with me, right here and now, tell me you're sure, that this is truly what you want, and that everything I'm feeling is what you're feeling too!\"\n\nAs she spoke, two tears ran down her cheeks, with more tears trembling in her sooty eyelashes, sparkling like diamonds in the bright summer sun. \n\nJoey was almost rocked back on his heels by the gust of raw emotion that blew from her as she bared her soul to him, his heart slamming in his chest as he realized just how much he wanted this girl, how much he needed her, and the depth of her feelings for him. \n\nHe pulled her close, cradling her against his chest as he hugged her, trembling with the nearness of her, at the feel of her trembling against him as she cried silently. He led her to a nearby bench on the sidewalk, where he held her again while he waited for her to stop crying, dabbing at her eyes until she had her emotions back under control, then tipped her chin up so he could look directly into her glorious eyes.\n\n\"Luna, I meant every word I said, and more. Every part of me, every least, tiny little piece of me, needs you, and only you. I guess I knew that the first time I saw you; it was like a shock deep inside me, like something I always knew, but I was still so angry and lost after losing Karen so suddenly that I didn't want to even think about you; but I couldn't do that. The first night I was here I dreamed about you, and nights after that, and I couldn't understand why, I wouldn't understand why, because I was still too busy feeling sorry for myself.\"\n\nHe smiled, brushing his fingertip across her quivering lip, bringing a quick smile to her lips.\n\n\"I dreamed of you most nights after that, and gradually I realized I wasn't dreaming about Karen anymore; I was dreaming about you...and me. I'll never forget Karen; how can I when she was everything to me, when I see her every time I look at Joe junior? But people change, things change, so I hope you'll understand that I should never forget her, for Joey's sake, but she's gone, and now I have you, and you have me, all of me, if you still want me. I know I'm asking a lot from you, but I promise you I will never give you cause to mistrust me, or a second's worth of doubt. I love you, Luna Hollister, I want you to be my wife, to be my family, and make a family with me!\"\n\nHe opened the plush ring box and took out the diamond-set platinum engagement ring.\n\n\"Luna Hollister, will you marry me, love me like I love you, and stay with me forever? I promise you all my love and everything you could ever want, just please say yes!\"\n\nLuna smiled at him, her lip still quivering, but it was a genuine smile, no reserve or unasked questions, just acceptance of the fact of Joey's honesty and calm decency. Love for him flooded through her all over again as she finally understood that they were together forever now.\n\n\"Thank you for that, Joey Anderson, and thank you for being you! Yes, I will marry you!\" she whispered, her eyes sparkling as Joey slipped the ring onto her finger, then leaned over to kiss him and seal them together, their kiss developing into a long, drawn-out kiss, heedless of the smiles of the other early-morning passers-by along that stretch of sidewalk.\n\nEventually they surfaced, content and ready for what they had to do next.\n\nJoey was silent on the drive out of town to the old Hollister place to break the news to Jonah, and get his blessing. Joey wasn't scared; he was more nervous than anything; Jonah was the nearest thing Luna had to a father, and it was important to him that Jonah accept him as her husband, not just his old friend's son. \n\nLuna tried to convince him all the way there that he had nothing to worry about, that Jonah was expecting their engagement, but Joey was too keyed-up to let that sink-in, and it was therefore with a certain amount of trepidation that he pulled-up in the front yard of the Hollister farmhouse.\n\nJonah was waiting on the porch, his face set and impassive as Joey and Luna walked up to him hand-in-hand.\n\n\"Missed you las' night, Lu,\" he observed laconically. \"I guessed you was safe so I didn't come looking fer you. Reckon you got somethin' you wanna be telling me, am I right?\"\n\nLuna smiled shyly and nudged Joey forward. Joey swallowed nervously, his mouth suddenly dry as Jonah stared interestedly at him, daring him to speak. He cleared his throat and pulled Luna closer.\n\n\"Jonah...I mean, Sir, earlier today I asked your niece to do me the honor of becoming my wife. I'm happy to say she said \"yes\", and I would therefore like to ask your permission...\"\n\nHe trailed-off as Jonah grinned at him, looking in confusion at Luna, who nodded encouragingly. Jonah stuck out his hand and Joey took it instinctively.\n\n\"Joey, this is the twenty-first century, and I don't think you-all need to go asking anybody's permission 'cept the girl, but I'm glad you at least came up here and took a stab at it; it's good to see livin' in California ain't damaged your good manners none. Why don't we step inside and talk a little?\"\n\nJoey and Luna followed Jonah into the large, meticulously maintained farmhouse and sat on the couch indicated while Jonah sat in the fireside armchair. He picked up his pipe and took his time tamping tobacco into it, then lit it, before sitting back and eyeing Joey.\n\n\"It seems like only yesterday your mama was whaling me for hitting young Frank in the schoolyard, although it was an accident, I swear! Your mama and I been good friends a long time, through what she went through when your daddy passed away, God rest his soul, all that business with Frank and Caitlin, and all the while you were growin' up, so I know your family, and I know you too.\"\n\nHe paused to smile encouragingly at Joey. \n\n\"I know what kind of man you are, I knew from when you was just a baby just what kind of man you was gonna be; there's a lot of your granddaddy Martin in you, and I got to say, I think Luna picked herself a good one. I used to wonder what kind of life she'd have here, all alone, with no-one her age, especially after her mama died; none of the boys around here are worth squat, and I didn't want her wasting her life out here the middle of nowhere. Now, at least, she'll go out there and see some of the world. All I want from you is your word you won't hurt her; Luna ain't my daughter, but she's as close to me, and all I want is the best for her.\"\n\nHe knocked his pipe out on the hearth and stood up, waving them both back to their seats as he poured two glasses of clear liquid and handed one to Joey. \n\n\"To the happy couple!\" he toasted, tossing his drink off in one.\n\nJoey looked sideways at Luna, who mouthed \"be careful!\" and so he took a careful sip of what smelled and tasted like a cross between rubbing alcohol and kerosene. Joey tipped back some of the spirit, his eyes watering as he choked at the sensation of someone shoving a hairbrush down his throat. Jonah grinned at him.\n\n\"Smooth, eh? Best batch I ever made! Wanna refill?\"\n\n\"Uncle Jonah!\" gritted Luna, getting Joey a glass of water from the kitchen. She waited until the coughing stopped, and handed the empty glass to Jonah, glaring daggers at him.",
        "\"Not funny, uncle Jonah, not funny at all!\" she hissed, Joey meanwhile trying desperately to catch his breath as the full effect of the moonshine hit his stomach; for one dreadful moment he thought he was going to throw it up again, but after a rebellious few seconds his stomach settled down again.\n\n\"Baby, I'm sorry, I shouldn't have let him give you that, it's 180 proof, somethin' went wrong with the still and it came out like that; he keeps it to give to Jerry and Jethro when they get out of line, and it's disgustin'!\" apologized Luna, while Jonah nodded admiringly; even his two brothers wouldn't knowingly touch that stuff, and they were marines, notorious for being able to drink anything that poured.\n\nJonah grinned placatingly at Luna, who couldn't help but smile back.\n\n\"Welcome to the family, Joey! You'll make Lu-Lu a fine husband, I know it; I've knowed you all your life, even if you-all don't remember me much, but your mama's fine folk, and so was your daddy, all your people are, and I'm pleased you love my niece. You do love her?\" he asked, his voice suddenly menacing.\n\nJoey nodded.\n\n\"Yes sir, yes I do. I've got a good job, a nice home, a little boy who's gonna to love her like I do, and a family, well, you know mom as well as I do, better, even, so you know she's gonna flip over her, what can I say?\"\n\nJonah stood up, giving his hand to Luna as she stood up, looking apprehensively at him.\n\n\"What about Jethro and Jerry, uncle Jonah? Won't they have something to say?\"\n\nJonah snorted derisively.\n\n\"They didn't do squat about bringin' you up, 'cause they thought being a marine was more important; shit, I thought it was important too, but so's family, and we ain't got so much we can afford to let it go, so you go, live in California, be married, and be happy, and you let me worry about them two! Best you get movin' now, you got packin' to do!\"\n\nLuna hugged her uncle, who looked surprised, then hugged her back fiercely, before letting her go.\n\n\"Go on now, time's short if you wanna catch that six o'clock flight!\"\n\nLuna gaped at him, then smiled her beautiful smile, even as two tears trickled down her cheeks.\n\n\"I'll come back and see you real soon, Uncle Jonah, I promise!\" she whispered, hugging him again, then darting from the room. Joey and Jonah listened as she clattered up the stairs to her room. \n\n\"I'll look after her, I swear!\" murmured Joey, and winced as Jonah squeezed his shoulder.\n\n\"I know you will, son; your mama brought you up right, I know you'll do the right thing by her. Just promise me you'll marry her proper-like, none of this hippy, five-minute, standing-in-a-stream, California, new-age poetry stuff; she wants a proper white wedding, she told me that when she was a little girl, just do that for her, and Joey, don't you ever let her cry; she ain't never had much, and she deserves better than we ever done for her, so you just make sure you make her happy. I got your word on that, right?\"\n\nJoey nodded.\n\n\"I promise you, I will never give her reason to cry; I swear I will make every day a good day for her; if she wants it, I'll find a way to give it to her, don't you worry!\"\n\nJonah grinned. \n\n\"I know you will, and I can't ask better than that; your mama told me a lot about you, I can see she warn't just blowin' smoke, so while you're waitin', call your mama and tell her 'bout you and Lu-Lu, she's gonna want to know, for sure!\"\n\nJoey dialled Sarah's number, remembering too late it was only 7 a.m. in California, but Sarah picked up after only two rings.\n\n\"Ma, it's me, I'm coming home, I'll be there tonight!\" he said, homesickness suddenly leaping large in him at the thought of seeing his son again.\n\nHe could hear the excitement in her voice as she called Steve to the phone.\n\n\"Joey, are you ready for this, are you sure?\" she asked, unable to keep an edge of concern out of her voice.\n\n\"Never more sure, Ma...and I've got something to tell you; that girl I told you about, Luna, well she's coming back with me. Ma, she and I...we...both of us...she's the one, Ma, I'm sure of it. I asked her to marry me, and she said yes!\"\n\nHe could hear the wonder in his mom's voice.\n\n\"Baby, are you sure, really sure about this? This is a big step, and you've got a lot of baggage; does she know what she's taking on?\"\n\nJoey paused.\n\n\"She knows about...about Karen, about Joe, she even knows about Robbie...well, some of it anyway.\"\n\nSarah sounded even more concerned now.\n\n\"So you haven't told her everything yet...about you, Robbie, and Casey, Frank, Caitlin, the whole story? These are things you have to tell her, baby; if she's really the one, then she needs to know what this family's been though, and who we are; it's not fair on her to leave that stuff out!\"\n\nJoey lowered his voice.\n\n\"Ma, I will, but I want her to meet everyone first, then she'll see for herself none of that stuff matters. It'll be fine, Ma, don't worry, she's a great girl, she'll handle it, I promise!\"\n\nIn Novato, Sarah stared blankly at the 'phone, then mechanically hung up, and turned to her husband. Steve held her while she patted his back absently, gathering her thoughts.\n\n\"Penny for your thoughts...\" murmured Steve, and Sarah rested her head on his shoulder.\n\n\"He's fallen in love with Jonah Hollister's niece; he's bringing her back with him, tonight!\"\n\nSteve stroked her hair.\n\n\"That's a good thing, yes? You know this Jonah well, you've told me about him, you think they're good folks, obviously so does Joey. So what's the problem? What's really going-on?\"\n\nSarah sighed as she toyed with his shirt button.\n\n\"He hasn't told her, about Robbie and Casey, about Frank and Caitlin. He's storing up so much trouble and he thinks he can handle it, but this is no way to start out; he should have told her, he should have been completely honest! Supposing she finds out and freaks out? We've only just got him back, what would that do to him? I'm worried, baby, I'm really worried, and I'm scared; I'm scared we'll lose him for good if this all goes bad...\""
    ],
    "authorname": "beachbum1958",
    "tags": [
        "joey",
        "hollister family",
        "sex",
        "love",
        "loss",
        "tragedy",
        "romance",
        "robbie and casey"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/lost-and-found-ch-06-pt-01"
}