{
    "title": "Brad's Road Trip Ch. 01",
    "pages": [
        "If you'd told me I'd have phone sex with the woman of my dreams on the day I met her, I'd have thought you were nuts. \n\nIf you'd told me I'd fall in love with her before even meeting her, I'd have simply laughed at you.\n\nIf you'd told me I'd have sex with more than 20 women in the three weeks between talking to her for the first time and actually meeting her - all with her blessing - well, then I might have been speechless.\n\nThen I would have laughed at you and called you nuts.\n\nI guess that's why we're not usually informed of the unbelievable things that are going to happen to us before they actually occur. They're just that - unbelievable - before they happen.\n\nOddly enough, this whole thing happened because of perhaps the most innocent thing you could ever imagine.\n\n**********\n\nIt was a simple phone call to my mother.\n\nI did this every now and again - call my mom at work in the middle of the day. No Oedipus complex or anything; I'm just very much a momma's boy, and since the Marine Corps had stopped dipping its bucket into my well three days ago, I didn't have a lot to do. I figured giving my mom a call would be as good a way as any to kill five minutes. \n\nAfter all, I was sure she would welcome any break from ensuring that the specialized taco flippers of the world were properly compensated for their single-digit IQ efforts.\n\nOnly, my mom didn't answer the phone at the Taco Bell office building, and neither did Betsy, the middle-aged woman who worked down the hall from her. Instead, someone new answered.\n\n\"Taco Bell offices, this is Kelly, how can I help you?\"\n\nThe voice instantly stunned me. I opened my mouth, closed it, opened it again, croaked out something that didn't even remotely resemble English, and then coughed.\n\n\"Hello?\" the voice said again.\n\nThis time I cleared my throat, so as not to sound like a moron again.\n\n\"Hi. Sorry, didn't expect anyone to answer the phone that fast, and my mouth was full.\" It was a blatant lie, and she probably knew it. This wouldn't be my last conversation with her, but it would be the last lie I told her.\n\nWell, almost.\n\n\"It's okay. What can I do for you?\"\n\nThe voice struck me again, but this time I was prepared for it. I didn't think she was trying to sound sultry, but it was working either way. She could have been an operator on one of those sex lines - yeah, I know, most of those are men using voice changers, but still - because her voice sounded that good. No hint of an accent, so I guessed she was a native.\n\n\"It's Kelly, right?\" I said, hoping to get myself back on solid ground.\n\n\"Yeah. Who is this?\"\n\n\"Hi, Kelly. I'm Brad Carver.\"\n\n\"Related to Linda somehow, I'm guessing?\n\n\"That I am. Is she around?\"\n\nI was a bit surprised someone besides my mom or Betsy answered the phone.\n\n\"Actually, she's in a meeting right now. I can take a message for her, though.\"\n\n\"Are you a new person they just hired over there?\"\n\n\"No, actually I'm an assistant manager at one of the stores. I was just in the office to pick up some things, but the whole staff - Linda, Betsy, Ron, everyone - they all went into a meeting. I'm off today so they asked me to watch the phone.\"\n\n\"Ah. Lucky you,\" I replied. \"Well, I'm Linda's son. Was really just calling to say hi for a few minutes. I'm kind of like you - I'm off today and I'm bored.\"\n\n\"Well, I was going to take a message for her, but you can keep talking to me until they're done. It shouldn't be too long now.\"\n\nNice. A come-on, maybe?\n\n\"Sounds like a plan.\"\n\n\"So, Brad, you know what I do. What do you do to be off today?\"\n\n\"I'm - actually, you're sitting at my mom's desk, right?\"\n\n\"Yeah.\"\n\nEven just one word, a simple \"Yeah,\" was stirring something within me. This woman sounded smoking hot - yes, I know, that meant she was probably hovering around the 400-pound mark and would probably stop a rhino dead in his tracks with a glance, especially if she worked at Taco Bell. Still, there was a chance she looked as good as she sounded, and if she looked even half that good, she'd be gorgeous. So I figured I would see what I could do. After all, I'd be home in a few weeks, and I had nothing immediately lined up as far as.. physical arrangements went.\n\n\"Turn around and look on top of the large bookcase behind the desk.\"\n\nI knew my mom kept a picture of me back there. And not just any picture - the picture from boot camp, when I was wearing Marine Corps Dress Blues. I had yet to meet a woman who saw that picture and didn't start drooling.\n\n\"Wow.\"\n\n\"What?\"\n\n\"Is that you?\"\n\n\"Yeah, that's me in the uniform.\"\n\n\"That's all I can really say. Wow.\"\n\nI was in, at least from a physical standpoint. Good to know.\n\n\"I've gotten a bit bigger since then, in all the right areas, and I've grown a mustache and a goatee as well.\"\n\n\"I thought you couldn't have those in the Marine Corps.\"\n\n\"Mustaches yes, goatees no. But I've been on terminal leave for four days now, and I've decided I'm not shaving around my mouth ever again. I swear, I could get shot in the heart and not lose as much blood as I have from razor cuts over the last four years.\"\n\nThat got a laugh out of her, and I couldn't help but notice how sexy she sounded when she was laughing. Once again, I know - voice and face seldom match.\n\n\"What's this terminal leave you said you were on?\"\n\n\"We get 30 days of paid vacation a year. My contract is up in early July, and before I get out, I have to either take all my unused leave, or they pay me for it. But with all the extra allowances I get for being in my chosen job field, it's better financially to just take the leave. So I've been pretty much out for four days now.\"\n\n\"Are you coming back?\" Was that a hint of hope I heard?\n\n\"Yes, I'll be back in a few weeks. I leave here Thursday morning.\"\n\n\"It takes you that long to drive from.. where are you anyway?\"\n\n\"San Antonio, Texas. And no, it doesn't. I'm making quite a few stops along the way.\"\n\n\"Like where?\" I'd gotten in a few of my destinations before I heard some noise in the background, and I could clearly hear my mom's voice and also Ron, the operational director of the offices.\n\n\"Sounds like they're done,\" I said when I finished telling her about Sumter, South Carolina, and how I was going to visit family there.\n\n\"Yeah, they just let out. Let me get your mom,\" she said, and I tried to get her attention, but the phone dropped before I could get a word out. A few seconds later my mom picked up.\n\n\"Hi, Brad.\"\n\n\"Hey, mom. Sounds like a busy afternoon.\"\n\nWe chatted for a few moments, but I kept tabs on the background voices. I heard Kelly and Ron talking, and then I heard Kelly telling my mom to tell me to have a safe trip. I wasn't quite done with her, though.\n\n\"Mom, can you get Kelly back on the phone for a second?\"\n\n\"Why?\"\n\n\"Well, I was telling her about my trip, and I told her I was going to Pittsburgh. She said she'd been there, and I was going to ask her about some spots to hang out when you guys came out of the meeting.\"\n\nI tried not to lie to my mother, either, but it seemed like a better idea than the truth right then - \"Mom, I'm trying to fuck one of your store managers when I get home, but she gave you the phone before I could close the deal.\" In this case, what she didn't know would definitely not hurt her.\n\n\"Ok.\" She told Kelly I wanted to talk to her, and I heard her say \"Me?\" before picking up the phone.\n\n\"Hello?\"\n\n\"Hi. I heard you telling my mom to tell me something, but there's no reason you can't tell me yourself.\"\n\n\"Well, yeah. I was just telling her to tell you to drive safely and have a nice trip.\"\n\n\"Heh, well, I'd planned on doing that anyway, but I'll definitely try even harder for you.\"\n\nWe shared a chuckle, and then the moment got awkward. I figured she might try to hand me back off to my mom so I went ahead and said my piece.\n\n\"Listen, Kelly. I really liked talking to you, for the five minutes we got. I'd like to meet you when I get back to town. What do you think?\"\n\nI figured, hell, worst-case scenario, she laughs and gives me back to my mom and I never see her again. Best case - at least I thought it was best case at the time - I had a date in a few weeks.\n\nIt just so happened that this was my lucky day, one of the many I would have over the next few weeks.\n\n\"I'd like that,\" she replied, and then she did me one better. \"But I don't want to wait that long.\"\n\nI wasn't sure I wanted to, either, but with a bunch of concert and game tickets purchased and several hotel rooms reserved, I couldn't back out.\n\nBefore I could form something coherent, she read my mind. \"I'm going to give you my cell number,\" she said. \"Give me a call sometime while you're on the road.\"\n\nNice. Didn't even have to ask, although I would have had she not volunteered. \"How 'bout I do even better than that?\" I asked when I finished scribbling her number in my notebook.\n\n\"What do you mean?\" she replied.\n\n\"What are you doing tonight?\"\n\n**********\n\nEven as I sat at the table and listened to Chuck, Jerry, Adrian & Co. murder the latest hard rock hit with their dueling pianos, there was one feeling in particular that crept up on me and threatened to take over.\n\nIt wasn't excitement, though under the circumstances I guess it could have been.\n\nIt wasn't worry, though with an uncertain future and a few financial hurdles left to clear, it probably should have been.\n\nHell, it wasn't even horniness, despite the hot Puerto Rican waitress who had practically been begging Russ, Chad and I to take her home from the moment we walked in.\n\nNo. I was tired.\n\nFive years in the Marines had drained me almost completely, and the few ounces of energy I had left were being diverted to the drawing breath department. It was Wednesday night, and between packing, the moving company and trying to tie up loose ends before I left, I hadn't slept since Sunday, and even then just an hour or two.\n\nI'd spent more time in the gym earlier today than I'd slept in the past week.\n\nYep, the sleep monster was coming, and it wasn't stopping till it rendered me comatose. I wasn't arguing - I had a seven-hour drive tomorrow, and trying it without sleep would be pretty stupid at best. I would have probably passed out on our table if Chuck hadn't picked that moment to tell the whole bar my story.\n\n\"You know,\" the bald, slightly chunky black man said from behind the black baby grand piano, \"we here at Howl At The Moon appreciate everyone who walks through the door. But we especially appreciate our regulars. The guys and gals - and assorted others - that come in here night after night and listen to us and have a good time. We thank all of you for not having lives.\"\n\nThat drew a laugh, even from me, but Chuck was far from finished.\n\n\"But there's one guy here tonight who outdates even me. This man has been coming in here since before any of us up here on stage even worked here. Three and a half years, ladies and gents.\n\n\"But now, after five years of working his ass off for the United States Marines-\"\n\nThat of course, drew cheers. I was silently plotting ways to kill Russ and Chad for selling me out.\n\n\"-this guy is leaving the Alamo City tomorrow morning, and we want to send him out in a way that we reserve for only our most loyal customers. So Brad, you already know what's coming. Get up here.\"\n\nEveryone applauded, but I felt like complete shit. Getting up on stage and singing \"I Touch Myself\" in an octave that would challenge Mariah Carey was not on my to-do list. But I was on the spot now, and I had to come through.\n\nI climbed up on stage and grabbed the mic.\n\n\"All right. Before we start, I'd like to say that I've been through hell in the past week, and I'm not really feeling up to this. But, you know, it is Chuck asking.\"\n\nI turned toward him and continued.\n\n\"And over the past 3-plus years, I've probably tipped 'ol Chuck enough to put at least two of his illegitimate kids through college, if not all three. So, what's one more favor for a friend, right?\"\n\nChuck laughed and began hammering the keys. Despite my oncoming exhaustion, I did as I was told and put on a pretty dang good show. I kept my voice as high as possible and did all the hand movements I thought were necessary. I basically compiled a greatest hits collection from all the guys and girls I'd seen do this over the years. Toward the end of the song, I walked up to where Chuck was playing, cupped my crotch and rubbed the back of my hand against his shoulder right as I hit the final \"I touch myself.\" He laughed it off, while most of the bar patrons shouted and cheered. A couple even tossed $1 bills at the stage.\n\nWhen I got done, everyone cheered. Over the next two hours, I didn't have to pay for a beer - and beer was about all that was keeping me awake. I was in one of those sleep-deprived hazes, where things are just kind of happening around you and you're almost semi-conscious. I'd lost Chad and Russ shortly after my singing performance - I was just sitting at the bar now, letting people come up to me, kiss me on the cheek or shake my hand depending on sexual orientation, and give me beer.\n\nSometime around closing time - I think - either Russ or Chad put a hand on my shoulder and told me it was time to go. I offered no arguments - I had to be on the road around 7 a.m. that morning, or right around five hours from then. I chugged the rest of the beer in front of me, threw a $20 on the bar for a tip, and stumbled out of the bar after them.\n\nThe hot Puerto Rican waitress was hanging all over Chad, and there were two other girls walking with us, too. I knew I would have absolutely no energy to mess around when we got home - one of the other guys was just going to have to double-dip. I was sure neither of them would mind, and I figured it was a safe bet they'd be awake and still going at it when I woke up at six to shower for the first of many, many days of driving.\n\nThe car was designed to seat four, or maybe five if everyone in the back seat was small, but since there were six of us, someone had to sit on my lap on the way home. I didn't even care - as soon as my butt hit the seat, I was out. The girl on my lap could have started giving me head on the freeway and I'm not sure I'd have noticed. Maybe if she was really talented.\n\n**********\n\nWhen I next opened my eyes, the car was stopped in front of what was about to be my old apartment building. The girl was still on my lap, and she grinned when I woke up.\n\n\"Up for a little fun?\" she asked me in perfect English. In reality, it was probably slurred as all hell English, but since I was sloshed as all hell, my translating abilities matched up perfectly with her speaking ones.\n\nThis one was blonde, bubbly, well-built and probably about as dumb as the seat belt I had strapping me in. Such women were usually prime targets for sex, but like I said. Not happening tonight.\n\n\"I'd like to, but I can't,\" I said, and she frowned. \"I'm exhausted, and I gotta drive in the morning. But I enjoyed the ride home, anyway.\"\n\nShe giggled. \"As bad as the roads are around here, I basically just gave you a 20-minute lapdance, and I didn't even get your name.\"\n\n\"Brad Carver,\" I said and offered up a hand that might have been misinterpreted in the Castro District. I was so tired it just kinda hung there.\n\n\"I'm Kelly,\" she said, and I smiled feebly back at her. The name bounced around in my beer-soaked brain for a minute, though, and it finally swam through the Miller Light to the surface.\n\n\"Oh, shit,\" I said. \n\nKelly. \n\nMy mind immediately shifted back to the phone conversation I'd had that afternoon. I remembered how much I was looking forward to another one, and I instantly perked up.\n\n\"What?\" the girl on my lap asked, confused.\n\n\"Nothing,\" I said, and opened the door next to me. No one else was in the car, and I didn't even hear any noises, so I guessed Russ and Chad had left this particular Kelly in the car to wake me up while taking the other two into the apartment.\n\nShe slinked off my lap, grinning toothily at me as she did. She even licked her lips, which I thought was a bit over the top considering I'd told her nothing was going to happen. I slid out of the car and shut the door and immediately headed for the apartment. \n\n\"You're certainly awake now, soldier,\" she said, and I cringed a little. Marines were Marines, Army guys were soldiers. Marines had nothing against the Army folks - for the most part, anyway - but we didn't like being called one.\n\n\"Actually, I'm not, hon,\" I said as I opened the door. Kelly gasped at what we saw - I might have been surprised except A) I'd seen it a handful of times and B) I expected something like this anyway.\n\nChad was on his knees next to the couch with the Puerto Rican chick bent over in front of him. Her skirt was still on, but her white lace panties were around her knees. Her ass could have been made of caramel - it certainly looked good enough to eat. Or at least melt and drizzle over some apples. I didn't know why I had these kinds of thoughts, but they made me laugh out loud. I wouldn't mind getting me a taste if I didn't have other things on my mind.\n\nShe was giggling as Chad buried his face in her pussy, but I knew she'd soon stop laughing and start moaning. Almost on cue, I could see Chad shift his tongue directly onto her clit, and she let out one of those long, low moans that went on for most of a minute.\n\nAcross the room, Russ was sitting on the edge of the dinner table, his pants and boxers just a memory as a redhead knelt in front of him, taking his cock about as far as she could down her throat. Russ wasn't that big - maybe five, six inches at most - but this girl still couldn't deep throat him. I chuckled at what she'd think when she saw Chad's dick or if she saw mine. I couldn't see anything but the redhead's back, but I thought I remembered a pretty hot redhead hanging around us when we first got to the bar. Knowing Russ, she was at least a little attractive - the man had been known to turn down naked women lying in his bed if they didn't meet his standards.\n\nRuss grabbed the redhead's shoulders and started fucking her mouth, making Kelly gasp.\n\n\"Wow,\" she said.\n\n\"Ever done anything like this?\" I asked her.\n\n\"I've never even seen anything like this,\" she replied. Her face was flushed - from the alcohol or just from being turned on, I'm not sure. Probably both. \"Have you?\"\n\n\"Yes.\"\n\n\"You've seen it?\"\n\n\"I've done it.\"\n\nShe just looked at me, almost in awe, or so my drunk ass thought.\n\n\"Five or six times, at least.\"\n\nShe just gasped again and turned her head back to the action. Chad had the waitress bent over the couch now and was quickly pumping two fingers in and out of her pussy as he tongued her asshole. Chad's black fingers repeatedly pounding into the pink pussy surrounded by the mocha-colored skin made me think of dipping a chocolate bar in a cup of coffee. He was spanking her ass cheeks every so often with his left hand. I figured it wouldn't take long before that girl was adding another wet spot to the couch, and I knew it wouldn't be long till Chad was dipping an even longer and thicker chocolate bar in there.\n\nThe redhead had gotten off her knees and was now laying on the dinner table. She'd taken everything but her panties off, and Russ was straddling her chest. I saw now that she was rather well-endowed - a C cup at least, with probably somewhere around a 34 chest size. And she was pretty attractive, or so my beer goggles told me. Russ was slipping his cock in and out of her cleavage, making sure her red hair was lying everywhere as he did so. He grabbed her neck and held her face up so he could hit her lips with his cock every time he pushed forward.\n\nRuss noticed us watching.\n\n\"You guys going to join us?\" he asked without preamble.\n\nI smiled. \"Not me, man. I'm fucking beat.\"",
        "\"Come on, man. Lay the pipe just one last time, for old time's sake.\"\n\n\"I just did old time's sake two days ago, Russ. Then I did her sister yesterday, and a couple of her roommates last night. If I try anymore 'old time's sake,' I'm gonna die in a fiery crash on I-35 tomorrow.\"\n\nHe laughed. Chad jumped in then.\n\n\"Fair enough. What about your friend there?\"\n\nI shrugged and looked at her. She was transfixed, staring at the waitress' ass as it stuck up in the air, and concentrating on Chad's tongue now that he'd gone back to rimming her ass.\n\nShe looked at me with all kinds of questions, but I just didn't have time. I wanted to get to bed, but first, I really wanted to talk to the other Kelly.\n\nI just nodded at the Kelly in front of me.\n\n\"But... how?\" she asked.\n\nI smiled and took her hand.\n\n\"You ever given a blowjob before?\" I asked, and she responded with a 'What am I, stupid?' look. \"Okay, then. Go lay down in front of Chad. Unbuckle his pants, grab his dick and do what comes natural. The rest will work itself out.\"\n\n\"He's kneeling, though,\" she said, and we all laughed. Kelly blushed. \"It'll be hard to get his pants off that way.\"\n\n\"Trust me, dear,\" I said as I headed toward my bedroom on the other side of the living room, getting a pretty nice view of the redhead's panty-clad pussy as I went. \"He won't mind moving to take them off for you.\"\n\nI knocked fists with Russ on the way into my bedroom, and I saw Kelly kneel next to Chad as I shut the door.\n\nMy cock was pretty close to rock hard by now. Just watching Kelly look so innocent about group sex had gotten me started, and it was all I could do not to bring her in here with me and let her take care of it for me. That's how tired I was - I was willingly blowing off sex to sleep, and I didn't even care.\n\nI wasn't going to go to sleep yet, though. I quickly shed my shirt, jeans and socks and laid down on the futon wearing only boxers - I'd borrowed the futon from Chad after the movers took my bed a couple days ago. I grabbed my cell and called the number I'd just entered into it today.\n\n\"Hello?\" the answer came on the fifth ring.\n\n\"Hey,\" I said. \"I was starting to wonder if you were in bed.\"\n\n\"Sorry,\" Kelly replied. \"I was in the middle of doing something, and I almost didn't hear the phone.\" \n\nShe certainly didn't sound sleepy.\n\n\"I'd given up on you calling tonight,\" she said, so I filled her in on what I could remember from the bar, leaving out the details that were still taking place outside my door. I heard a high-pitched squeal and male laughter.\n\n\"I bet that was hot,\" she said, laughing when I told her about my singing performance. \"I bet the place went nuts when you grabbed yourself.\"\n\n\"Yeah, they did,\" I said, sitting up against the wall. \"If I'd left my hand on my crotch any longer, I think it would have officially been masturbating.\"\n\nI expected a laugh, but got nothing but breathing.\n\n\"So,\" I said, \"how was the rest of your day?\"\n\n\"I came home after we talked, took a shower, cooked dinner for myself, the usual,\" she said. \"Nothing too exciting.\"\n\n\"That's a shame,\" I said.\n\n\"What?\"\n\n\"You deserve a little excitement in your life,\" I replied, hoping she might be able to tell I was smiling when I said it.\n\n\"Well, I was excited waiting for you to call,\" she said. \"But I fell asleep around 10.\"\n\n\"I'm sorry. I should have called sooner,\" I said, and I'd barely gotten the words out when one of the girls in the next room - it sounded like the Puerto Rican girl - shouted out \"Oh, shit!\"\n\n\"What was that?\" Kelly asked.\n\nI decided to be cautious. She seemed open-minded, but then again, she did live in Idaho, one of the reddest states in the union. \n\n\"It depends.\"\n\n\"It depends?\" she repeated. \"On what?\"\n\n\"On how much you want me to tell you, I guess. On how far you want me to go.\"\n\nI just heard breathing again. I got no response for about 10 seconds.\n\n\"What... is it?\" came the response.\n\n\"Well,\" I said, and my voice dropped a little in volume. \"Two of my friends are in my living room right now with three girls they brought home from the bar. When I came in here, one of the girls was bent over the couch with my friend Chad's tongue buried between her legs, and another girl was just about to start sucking him off. The other couple was on the dining room table, with her tits wrapped around his dick. Kinda makes me happy that I don't have to eat on that table again.\"\n\nShe laughed, but it wasn't as hearty as I might have expected.\n\n\"Remember, you asked,\" I said.\n\n\"Brad?\" she asked, seemingly ignoring my line.\n\n\"Yeah?\" I responded. I heard one of the girls chanting \"Fuck me! Fuck me!\" in the next room, and I involuntarily reached down and started rubbing my cock through my boxers.\n\n\"Would it totally turn you off if I told you...\" Kelly started, but she didn't finish. I waited about 30 seconds, but she didn't say anything else.\n\n\"Kelly, honestly, right now, you could pick up the fucking phone book and start reading it, and I don't think you could turn me off.\"\n\nShe didn't immediately respond to that, but someone in the living room was responding to something, because I heard something that resembled Mariah Carey again. Not in one long strain, mind you, but in small spurts.\n\n\"Okay, so I guess you wouldn't mind if I told you I was...\" Again, she trailed off.\n\n\"If you told me you were what?\"\n\n\"I'm rubbing my pussy through my shorts right now,\" she said. I sort of expected it, but I was stunned anyway. \n\n\"Yeah, something about that does turn me off,\" I said, grinning.\n\n\"Huh?\" She sounded confused, but it didn't sound like she'd stopped.\n\n\"I'm not thrilled that your shorts are still on, but everything else, I like.\"\n\nMore silence on the other end, but I could hear some movement. A few moments passed.\n\n\"Okay,\" she said.\n\n\"Okay, what?\" I asked. I had a pretty good idea, but I wanted to hear her say it.\n\n\"I'm naked, Brad,\" she said, and I groaned a little bit. Those three words - especially the way she said my name - made my cock lurch in my boxers. \n\n\"Tell me again,\" I said, trying to deepen the mood. I could hear the grunts in my living room, and I knew either Chad or Russ was about to bust a nut. The first of the night, but certainly not the last.\n\n\"I said, I'm naked,\" she repeated, but didn't stop there. \"I pulled my shorts and my panties off, and I took off my shirt just before you called. I'm naked.\"\n\n\"Wow,\" I replied.\n\n\"What?\" she said.\n\nI paused a moment. \"I'm just trying to get a picture of what you look like. I bet you're beautiful.\"\n\nShe purred into the phone a little bit, making me smile. \n\n\"So now what?\"\n\n\"What do you mean?\"\n\nShe paused for effect then asked, \"What would you like me to do now?\"\n\nI smiled from ear to ear, and I slipped my hand into my boxer shorts to put a little direct pressure on my cock.\n\n\"What were you doing when I called you?\"\n\nI expected hesitation; I got none.\n\n\"Remember how I said I took my shirt off before you called?\"\n\n\"I do.\"\n\n\"I was rubbing my breasts.\"\n\n\"Well, don't let me stop you,\" I said.\n\n\"Are you naked?\" she asked me.\n\n\"I could be,\" I answered.\n\n\"But, I'm naked.\"\n\n\"So I've been told,\" I said, chuckling a little.\n\n\"Well, I have this little peculiarity about me,\" she said. \"When I'm naked, the people around me have to be naked too, or I start getting uncomfortable and looking for my clothes.\"\n\nShe didn't have to tell me twice. I raised my hips up off the futon and pulled my boxer shorts down with one hand.\n\n\"Your wish, my command,\" I said.\n\n\"Oooh,\" she started purring again. \"I like that.\"\n\n\"I figured you might.\"\n\nWe were silent for a minute. I was just idly stroking my cock now - the sounds in the next room weren't loud enough to demand my attention, at least not right this minute, and I was kind of waiting for Kelly to say something else. It started to become clear she wasn't going to.\n\n\"So are you?\" I asked her.\n\n\"Am I what?\"\n\n\"You know what I want,\" I said with just enough force that she got what I meant, but not so much that it would come across as mean. She just giggled.\n\n\"What?\" She knew. She just wanted to be told.\n\n\"Put your thumb and index finger in your mouth, lick them, and rub your nipples,\" I said.\n\nShe presumably did as I asked, because she was purring again.\n\n\"To hell with rubbing; pinch them,\" I said, then decided to add another word. \"Hard.\"\n\nHer purrs stepped up an octave or so, I'm guessing right when she pinched them.\n\n\"Does that feel good?\"\n\n\"Mm, hmm,\" she said, \"but I think if you were doing it, it'd feel even better.\"\n\nI'm sure I was grinning.\n\n\"Honey, if I was there, I'd be using my teeth on your nipples by now.\"\n\nThat drew a nice long moan from her lips. I thought for a second she might have cum - that's how long this moan was.\n\n\"Jesus - I don't even know you. How did you know that?\"\n\n\"I didn't. I was just being honest - if I was there, I'd bite your nipples,\" I said. \"First, the left one. I'd lick all around it first, drawing huge circles with my tongue. I'd watch as it got hard, just anticipating me finally closing the circle and getting to it. I'd kiss and bite all over your breasts - who says the nipple is the only part that's worth paying attention to? I'd pay special attention to that little spot right underneath your breast - licking it, sucking it, even just gently caressing it with a finger. Then, when I thought you were ready, I'd take the nipple in my mouth and gently nibble on it with my teeth. I'd suck on it - hard, just like I told you to pinch it - and I'd run my tongue all over it.\"\n\nHer breathing had picked up noticeably, and I hadn't even gotten below her chest yet.\n\n\"And of course, that's just the left breast. There's a whole other side I haven't gotten to yet.\"\n\nAnother groan, and I had to start stroking my dick like I meant it.\n\n\"Your voice is fucking perfect, you know that?\" I said.\n\n\"You... sound pretty hot yourself.\"\n\nAll the sudden I found myself wondering what she looked like. I wanted to know how tall she was, what color her eyes were, how long her hair was. I also wanted to know what color her hair was below the waist, if she even had any.\n\n\"Kelly, you said you were rubbing your pussy through your shorts before.\"\n\n\"Yeah?\"\n\n\"Rub it again,\" I said.\n\n\"Only on one condition,\" she said.\n\n\"What's that?\"\n\n\"You have to jack off while I'm rubbing myself.\"\n\n\"Already there, hon. Your voice just wouldn't let me keep my hands to myself.\"\n\nShe chuckled. \"I'm serious. Jack off, but I don't want you to cum till I'm ready to.\"\n\n\"And I'm serious, too. I'm already jacking off, and if you want me to cum the same time you do, you better get your hand back between your legs.\"\n\n\"I have been,\" she said. \"While you were telling me what you would do to my breasts, I couldn't help it. I was already pretty wet, anyway, and my fingers just kind of floated down there.\"\n\n\"Tell me what you're doing,\" I said.\n\n\"Well...\"\n\n\"Oh, come on. Don't get shy with me now.\"\n\n\"FUCK!\" I heard someone groan in the living room. Either one of the girls was letting one of the guys come in her mouth, or somebody had a really tight pussy. Or some other hole.\n\nKelly laughed.\n\n\"Somebody's having a good time. Why aren't you with them?\"\n\n\"I needed to sleep.\"\n\n\"It doesn't sound like you're sleeping right now.\"\n\n\"Now that I have you, I don't need to.\"\n\n\"Now that you have me what?\" she asked.\n\n\"Uh... on the phone,\" I said. She giggled - obviously, she'd heard my little misstep. She never got a chance to say anything before I got back in charge.\n\n\"Kelly.\" I said her name into the phone, and that got her attention. I heard a small moan slip out at the authority I'd let seep into my tone. \"I'm still waiting to hear what you're doing to yourself.\"\n\n\"But I think you know, Brad,\" she replied. Either she was teasing or she was stalling. I wasn't in the mood for either.\n\n\"I might,\" I said. \"But why don't you be a good little girl and tell me anyway?\"\n\nSome girls have the daddy-daughter fantasy, and although I figured she couldn't be more than two or three years younger than me at most, the \"older man\" fantasy definitely hit the spot.\n\n\"Mmmm,\" she moaned into the phone. I still wasn't stroking for all I was worth, because it wasn't going to take me more than a few seconds to cum once I did. I kept idly rubbing my dick while she continued.\n\n\"I'm pinching my clit in between my middle and ring fingers, and rubbing it with my index finger,\" she said. \"I'm stroking my pussy lips with my other hand.\"\n\nI tried to picture it in my mind, but that was kind of hard since I didn't know what she looked like. I decided to try something different.\n\n\"Keep holding your pussy lips open and rubbing your clit, Kelly,\" I said. \"Imagine that I'm lying in between your legs, staring at your pretty, shaved pussy\" - I didn't know if she was shaved, but we were beyond the point of me asking - \"and licking my lips slowly. Would you like that?\"\n\nI got an affirmative-sounding noise in response.\n\n\"Keep holding your lips open for me.. I want to dip my tongue into your soft wetness, lick your pussy up and down, from your clit to your ass, and back up again.. just imagine what that would feel like.\"\n\nShe was. I could tell, because her moans were getting more and more discernible. Someone shouted from the living room, but because Kelly and I were locked into each other's voices, it barely registered.\n\n\"Brad?\" It was almost a whimper.\n\n\"Yeah, baby?\" I didn't know how she'd react to that, but, like I said - beyond asking or even caring.\n\n\"I'd love to have your tongue inside me, but.. I think I'd really like you to fuck me.\"\n\nI grinned. This was going to be all about her.\n\n\"Next time, honey. And yes, there will be a next time. We're enjoying this too much.\"\n\nShe half-whimpered at my refusal, but half-groaned in anticipation of the aforementioned \"next time.\"\n\n\"Right now, I'm going to make you cum on my tongue.\"\n\nThis wasn't an anticipatory moan. This was a yearning moan. A needing moan. Almost a groan. Kind of like taking candy away from a hungry kid, if that's not a completely inappropriate thought to be having while about to make a woman across the country cum.\n\n\"I'm holding your legs open, diving my tongue as deep into your pussy as it will go. I'm looking up at your face, with your eyes closed.. God, you look so fucking beautiful, baby.\"\n\nI could almost hear her smile. I'm not sure how - I had lots of talents, but seeing six states away wasn't one. But I knew. My smile matched it.\n\nI was stroking myself faster, and I could tell by her voice that she was working up a pretty good pace, too. It'd be any second now.\n\n\"Can you feel my tongue in you, Kelly? Can you feel me getting in deep, ravishing your pussy with my mouth? Can you?\"\n\nAnother moan.\n\n\"So.. deep,\" she said. She was breathing hard.\n\n\"By looking at your face, I can tell you're just about to come, and I want you to come as hard as possible. I want you to flood my face. So, I'll bring my right hand off your leg, slowly slide it under your ass, and gently slide my pinky - so wet with your pussy juices - into your ass.\"\n\nThat did it - she screamed.\n\nShe screamed loud.\n\nShe screamed so loud that I thought people in the living room might have heard her, even over the phone.\n\n\"Oh!\" she managed.\n\n\"I'm still tonguing your pussy, trying to take you even higher, and-\"\n\nMy orgasm hit me, too. I didn't see it coming. My fist was flying up and down my rod, but I was so focused on what I was doing to her - both literally and figuratively - that I had really lost sight of my own orgasm. Her scream had gotten me right to the edge, and the last sound of her voice had done it to me. I groaned into the phone.\n\n\"Cum for me, baby,\" she said, mostly out of breath and still clearly in the middle of her own orgasm. \"Shoot that beautiful cum all over my breasts.\"\n\nIt got as high as my chest, which was good enough for now. Kelly was still moaning, but they were longer, lighter moans - recovery sounds.\n\nI was just trying to control my breathing. The sounds of the living room seeped back into reality, and I heard a deep voice - definitely Chad's - bellow out, \"Holy shit. That's totally fucking hot.\"\n\nI grinned. I agreed with him. For entirely different reasons.\n\n\"Wow,\" she said into the phone. \"That was...\"\n\nShe trailed off, but I was more than happy to finish it off for her.\n\n\"Totally fucking hot?\"\n\n\"And about 70 other adjectives,\" she said.\n\nI just breathed. I was still breathing hard. I'm in damn good shape - Marines have to be - but when you haven't slept in four days, nobody's in good shape. It was taking me a while to get back to normal.\n\n\"I...\" she trailed off. I didn't know what she was going to say. So many phrases start with the word \"I.\" I could only think of one I wasn't quite ready to hear.\n\n\"What?\" I prodded.\n\n\"I don't know what came over me,\" she continued. Maybe that's what it was from the beginning, and maybe that was the amended version. Either way, I was satisfied.\n\n\"An orgasm, I think.\"\n\n\"Three, actually,\" she said, and I just laughed.\n\nWe fell into silence for a little bit - could have been 30 seconds, could have been five minutes, could have been more.\n\n\"Listen, Brad-\" she started, but I cut her off.\n\n\"Kelly, what we just did was totally awesome, okay? But believe me when I say that I've been looking forward to talking to you all day, and the possibility of this never even crept into my mind. Even with everything going on in my living room - it's still going on, and I'm not making that up - when I came into my bedroom to call you, I really was just looking forward to talking to you.\"\n\nSilence. When she was finally sure I was done, she started.\n\n\"Okay,\" she said. \"I was just going to tell you that I've never done that before, and I hoped things were as good for you as they were for me.\"\n\nI laughed. \"No way that was your first time. You knew exactly what to do. You were shy, you teased just enough, you held back just enough.. you know how to do this. You were perfect.\"\n\n\"Really,\" she countered. \"I've never had phone sex before. I was just being me.\"\n\n\"Well, then,\" I started, and sighed. I was going to say something I maybe shouldn't, but the exhaustion was beginning to creep back into the picture now that the adrenaline and testosterone had subsided, and I couldn't bring myself to really care. \"You might be perfect.\"\n\nI was more than happy to let that hang in the air, and she wasn't saying anything.\n\n\"Speak for yourself,\" she finally said a few minutes later.\n\nI was more than happy to let that hang in the air, too, as untrue as I knew it to be. Unfortunately, fatigue was really setting in. I looked at the phone - 2:30 a.m. I had about 3 hours. It was doable, but I needed to get going.\n\n\"Listen, Kelly,\" I said. \"I need to be on the road in four hours, and I haven't slept in four days. I'd love to keep talking to you, but I'm going to be asleep in two minutes, whether we're still talking or not.\"\n\nShe laughed.\n\n\"Not if I didn't want you to be,\" she answered. Somehow, I figured she was probably right.\n\n\"Fair enough. When are you working tomorrow?\"\n\n\"I go in at 10 a.m., work till 8 p.m.\"\n\n\"Ok. I'll call you around 8:30 your time, in the morning. Does that work?\"\n\n\"I can't wait,\" she replied back. I let it be silent for just a minute, to try and enjoy the moment. Thankfully, the guys and gals in the living room stayed quiet and let me.\n\n\"I guess I should let you go to bed, then,\" she said. \"But you'd better call me.\"\n\n\"Trust me,\" I said. \"I'm a very stupid man. But nobody is that stupid.\"\n\nShe didn't even dignify the first statement with a response.\n\n\"Good night, Brad,\" she said.\n\n\"Kelly?\" I asked.\n\nShe waited without an answer.\n\n\"Lick your fingers.\"\n\nShe made a big production out of it, slurping and sucking and audibly savoring the taste.",
        "\"How was it?\"\n\n\"It tastes really, really good.\"\n\n\"I look forward to sampling it for myself,\" I said. She didn't have a quick response to that, and I quickly jumped in before she could come up with something.\n\n\"Good night, baby,\" I said.\n\n\"Talk to you soon.\"\n\n**********\n\n If you enjoyed this, and you want to read more, please drop a line and tell me so. This isn't just a very unsubtle attempt at compliment-fishing either - I'm actually looking for some help on how to proceed. I know how the rest of the story goes - I just don't know the best way to tell it. So, if you'd like to help, message me. Otherwise, enjoy!  "
    ],
    "authorname": "SpotInTheSand",
    "tags": [
        "brad",
        "kelly",
        "masturbation",
        "phone sex"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/brads-road-trip-ch-01"
}