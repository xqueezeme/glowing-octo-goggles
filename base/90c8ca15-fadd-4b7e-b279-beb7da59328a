{
    "title": "Sammy Ch. 05",
    "pages": [
        "Sammy nervously picked up her phone and called Steph. She paused as it rang. Once. Twice. Three times. After the fourth ring it went to Steph's voicemail. Why didn't she answer? Sammy had mixed feelings about having to leave a message. Part of her desperately needed to tell Steph, but the coward in her eventually ruled out. \"Hey Steph. Uhh...it's me. Sammy. Uhh...well, uhh...my parents are going up to northern Wisconsin on a camping trip with their friends. They uhh...they do this every year. God only knows what they're doing up there.\" Sammy laughed nervously. \"Well, yeah...I was wondering if you wanted to come over and spend the weekend with me. If you're not busy or anything. I mean, it's cool if you don't, but I just don't wanna be bored. Or if you just want to stay one day or hang out or something...\" Sammy made an irritated face as she fumbled through the message. \"Yeah, sooo...let me know what you think. I'll talk to you later. Bye.\"\n\nSammy sat on her bed for a moment and then spoke aloud to no one. \"Well that was fucking terrible.\" She shrugged her shoulders, grabbed her remote and turned on the television, flipping to the Discovery Channel. \"Mmm...Man vs. Wild. Bear Grylls is so fucking hot. I love his accent.\" Sammy rolled over on her side and drifted off to sleep.\n\nSteph smiled, her green eyes shining like spring leaves. \"You may now kiss the bride.\" Sammy closed her eyes as Steph leaned in, placing her lips softly on hers, parting them slightly, tongues lightly touching. The roar of applause vaguely filled Sammy's ears as the girls held hands and walked down the aisle and out of the building. They climbed into the back of the limo as the driver sped off, leading them to an unknown destination.\n\nSteph climbed on top of Sammy, straddling her. She grabbed Sammy's arms and pulled them above her head. \"I fucking love you so much Sammy.\" She kissed Sammy's cheeks, her neck, her cleavage. \"I want you out of this dress.\" Steph climbed backwards off of the seat as Sammy grabbed her short white gown, pulling the lace material over her head. She bit her lower lip as she spread her legs wide. Steph stared for a moment, distant traffic making soft noises on the other side of the tinted glass. Sammy was wearing a white lace bra, matching white lace boyshort panties. White stockings went midway up her thighs, attached to garter belts. Little white bows decorated the tops of each stocking.\n\nSteph leaned in and lightly darted her tongue over Sammy's panties, tasting her through the material. She ran her hands up the brunette's thighs, kissing her stomach, slowly up her body, between her breasts. \"You've been saving up haven't you? I know I have. Three days without going and eight glasses of water today. I'm going to explode.\"\n\nSammy grabbed Steph's hair as she breathed a response. \"Two days and six glasses.\" Steph didn't respond, save for the kisses rapidly running up Sammy's neck, over her earlobes. She put her hand between Sammy's legs, rubbing her through her panties.\n\n\"Do it now. Do it for me.\" Sammy squeezed lightly and could feel the piss spurting through her material. Through foggy eyes she looked down, smiling as she saw the liquid flow over Steph's fingers and over the front of the seat. Sammy's soft pants of breath did little to disguise the loud hissing of her fluid, warming her pussy, dripping backwards between her cheeks, pooling in the crack of the seat. She concentrated on the feeling of her piss, the feeling of Steph's fingers holding open her lips, her middle finger up and down over her clit. Sammy could feel her piss slow to a trickle as her love worked her soft cherry lips across her skin.\n\nSteph kissed back down Sammy's body, pushing her panties into her pussy, rubbing up over her clit. Moments after placing a soft kiss just above the waistband of Sammy's panties, Steph climbed up onto the seat, legs wide, straddling her young love. She wrapped her arms around Sammy's neck, kissing her deeply, tongues running over one another. The girls separated their lips, eyes closed, tongues flicking against one another. Steph slowly was grinding her hips back and forth, involuntarily fucking the air. She squirmed and hiked up her white wedding dress above her hips, exposing a white garter set and panties identical to those of Sammy.\n\n\"Hold this for me.\" Steph guided Sammy's hands to her dress, feeling her tremble in anticipation. She put her hand on Sammy's shoulder, her other hand clutching her beautifully curled hair, the cinnamon spirals hanging through her fingers. Slowly she pushed out, feeling a large, hot pile of shit fill her pristine, white, satin panties. Sammy shuddered and buried her face in Steph's tits, kissing her breasts through the material of the gown. Steph moaned softly to herself as she lowered her ass towards Sammy's panties, gently resting her bulge on the girl's soaked crotch. She screamed loudly as she dropped all of her weight down on Sammy's lap, feeling her shit spread up her ass crack and on her pussy.\n\nSammy looked forward and could see the eyes of the limo driver in the rear-view mirror. She met his gaze, staring back at him lustfully as Steph slowly bounced up and down on her lap. The smell of Steph's messy panties filled the air of the limo, wet slapping sounds occurring every time she bounced up and down. Sammy could feel the intense heat and pressure of Steph's load through the thin material of their panties. She took her hands off of Steph's gown, feeling the soft fabric cascade over them.\n\nReaching underneath, Sammy could feel her fingers slide beneath the waistband of Steph's panties. Slowly she sank her fingers into Steph's warm shit, gasping as the soft, hot mud covered her hands. Sammy closed her fists and brought out two small handfuls of poop. She brought them up to her face, inhaling, savoring the scent. Sammy looked deep in Steph's eyes, never once blinking or looking away, and lowered her tongue to the small piece of shit in her right hand. She licked it, running her tongue slowly, lingering, letting the top layer of Steph's chocolate melt in her mouth.\n\nSammy stuck out her tongue at Steph, showing her the thick brown coating. Steph wrapped her lips around Sammy's tongue, sucking hard, tasting herself. Sammy reached up with her shitty hands and grabbed Steph's tits through the wedding dress, squeezing them, leaving nasty light brown handprints. She could feel Steph's hard nipples as she played with her breasts, grabbing them, pinching, trailing her lover's load all over her dress.\n\nBefore Sammy could do anything further, Steph climbed off of her and knelt on the floor. \"Your turn.\" She stared intently with her vivid green eyes, focusing between Sammy's legs. Steph watched as Sammy lifted her ass off of the seat, holding herself up with her arms. She grunted, squeezing as her panties bulged out beneath her. Steph reached out with one hand and ran it lightly over Sammy's panties, sticking her other hand down her own panties. Sammy's bulge was huge now, growing incredibly with each push. She stopped to catch her breath before pushing one last time, feeling another large burst of soft brown shit spread out in her panties.\n\nSammy climbed down onto the floor of the limo with Steph, getting on her hands and knees. The girls leaned over, placing their asses against one another. Steph dropped her dress down over her ass, rocking back and forth. Sammy and Steph's shit filled panties slapped into each other, their bulges flattening out and spreading everywhere. Harder and harder they thrust against each other, moaning loudly, their tits swaying with the movement of their bodies. Sammy could feel herself about to cum, body tensing up, warm, soft shit across her most intimate parts. Both girls could feel the shit creeping up their slits, sliding over their slick lips. Faster and faster, harder and harder! Plop, plop, plop. Hot messy loads spreading up their ass cracks, across their aching cunts...\n\nSammy's cell vibrated softly on her bedside table. She slowly opened her eyes, her hand in her shorts, pussy soaking wet. Sammy grabbed her phone to see that Steph left her a text message. \"Sounds gr8! I work Sun, but Im free Fri and Sat! See ya!\" Sammy kicked her legs in excitement and crashed backwards into her bed. She was so excited, so turned on. This will be the weekend. I'll tell her. I'll tell her that I love her. Sammy's fingers ran little waves over her clit as she relaxed, slowly letting out her steaming golden piss. I love how it smells in the morning...so strong, so sexy.\n\nSammy's breaths became deeper, more pronounced. The morning sun warmed her face as her pee warmed her pussy. It hissed through her panties, soaking her sheets and staining the mattress. I don't care. I don't care how bad I'm being. I need to do this! Sammy lifted her hips off of her bed, feeling herself cumming hard. Her pee ran down over her pussy, down her ass, dripping off of her lower back. Biting her lip, Sammy squeezed her thighs tightly around her hand, legs holding her ass high above the bed, fingers on her hard clit. Her ass fell back to the bed as she smiled broadly, cheeks flushed. Sammy felt better...relaxed. Her pee slowed to a trickle as she giggled. It was a great way to begin the day.\n\nSammy's mother and father finished packing up the car on Friday afternoon. \"You remember the rules? No parties, lock up if you leave, and so on?\" Her mom leaned down to give her a hug as her dad climbed in the car.\n\n\"Yes I remember. Now go on and meet up with your friends. I'm sure you'll have a great time.\" Sammy's mother climbed into the car and waved as they drove on down the street. She walked back in the house and leaned against the door, smiling and pumping her fists. Friday had come! Steph was coming over! It had been a long week, but Sammy had made the most of it.\n\nShe thought of Monday night. She was standing in her room in her work uniform. Sammy was wearing tight khaki pants with a white polo shirt. Underneath she was wearing a white bra with light pink stripes and pink little boy short panties. Her feet were decked out in little black shoes over white socks. Sammy's hand went down her jeans as she pictured herself standing there, legs spread. She could remember the dark stain spreading down her thighs, the bulge growing in the seat of her pants. Sammy unsnapped her jeans and slid them off, kicking them to the side. She was picturing herself pulling her khakis up tight against her ass, spreading her load.\n\nMonday night...damn what a night! Sammy could see the brown load leaking through her khakis. She rubbed her pussy through her panties, imagining how she took off her pants, how she grabbed her panties. Sammy vividly recalled as she ran the panties over her body, over, and over, and over again, covering every inch with her shit. She was wearing brown body paint. Filthy, nasty shit over every part of her. Faster and faster Sammy traced her wet slit through her panties, feeling her body ache, feel it crave the need to cum.\n\nSammy pulled her panties to her knees as she thought of Tuesday night. She was standing alone in her bathroom, wearing only her brand new bikini and a pair of flip flops. The bikini was lime green with yellow trim, with little strings tied on the side holding up the bottoms. Sammy brought her fingers up to her nose and inhaled the scent of her cream, breathing deeply. She started panting a little faster, her fingers moving back to her bald lips. Sammy closed her eyes and envisioned her bikini bottoms as they began to tent out, crackling as the extremely soft brown load grew to immense proportions. Her suit hung loosely now off of her ass as her shit weighed it down, exposing the top of her tan lines and butt crack.\n\nSammy slurped on her fingers, getting them nice and wet before running them deep inside her pussy. She looked so hot on Tuesday, waddling over to the bathtub with her near-liquid shit running down the backs of her legs. Sammy remembered how it felt, how she scooped as much of her shit into her bikini top as possible. In and out Sammy's fingers went, in and out of her dripping pussy. She stroked the spongy top of the inside of her pussy, feeling her legs buckle, her hands start to sweat. Tuesday...her shit running out of her top, between her fingers, leaving brown rivers down her skin.\n\nSammy slid three fingers inside her sopping tunnel and remembered how she looked Wednesday afternoon. Slutty schoolgirl. She was wearing knee-high white socks with black buckle shoes. Her blue and red plaid skirt was two sizes too small, barely covering her light yellow panties. Sammy was wearing a white button-up shirt as well with a blue and red neck tie. Faster she slid her fingers into her pussy, dreaming of how she was dirty talking, how the piss ran down her legs, soaking into her socks. In and out. Faster and faster. Finger-fucking her pussy. She could see herself hiking up her skirt now, looking into the mirror with a grapefruit sized lump in her panties. Sammy could imagine how the hot bulge felt beneath her hand as she squeezed lightly, moving it, feeling it stick like soft clay to her flesh.\n\nIn and out. Sloppy wet noises. Sammy worked her insatiable pussy hard, envisioning how she slid her shitty panties down. She could feel how hot her load was as she pressed it up against her pussy. Sammy started burning everywhere, started to lose focus. Wednesday...forcing the pile between her legs, grinding against it. Sliding her pussy back and fort, feeling her lips separate as her shit slowly worked into her slit. Harder and harder. Finger-fucking...shit fucking...Sammy was in heaven, clumps of poop dropping down, leaving small brown marks on her stockings. Harder and harder...fucking herself...fucking her shit.\n\nShe pulled her panties off all of the way and put them over her face, inhaling her pussy juice. Sammy moved her fingers back to her clit, rubbing quickly. Thursday night she was wearing her old black and red high school cheerleading uniform. Her cheeks were painted with matching black and red hearts, her hair pulled back in duel braided pigtails. Sammy could remember vividly as she set her cell camera to record video, moving back across the room. She grunted and squeezed a soft load into her red spankies, picking up her pompons from the floor. Sammy gyrated her hips and danced, recalling every step of her routine. Every move she made caused her bulge to spread, to shift against her soft body.\n\nSammy fucked herself as she thought of the playback of the video. Her body moving, her skirt riding up, brief teasing glimpses of her red spankies filled with her shit as she shook her ass seductively. Sammy could feel herself rapidly falling over the edge, could feel her pussy ready to scream, her body ready to release every bit of sexual energy. She thought of her favorite part of the video she made. She strolled back across the room, stopping right in front of the camera. \"This is for you Steph.\" Sammy reached behind her, underneath her skirt, underneath her spankies. Her hand came back out, full of soft brown shit. Sammy held it in front of the camera, letting the lens examine her filthy handiwork. \"Do you like my shit Steph? I do it for you.\" She got on her knees and took the load and put it in her mouth.\n\nFuck Thursday's dinner was great. Sammy wiped her hand on the front of her shirt, opening her mouth for the camera to see. Her shit was resting on her tongue, starting to disintegrate slightly, brown rivulets of saliva pooling up. Sammy closed her mouth seductively, breathing through her nose. Her teeth sank into the soft load. Sammy could feel as her molars bit into some crunchy parts, probably nuts she had earlier, before sinking through the pasty mess. Slowly she chewed, savoring, her teeth moving up and down, grinding her bitter shit. Sammy opened her mouth again, the load reduced to a dark brown gooey mess. She manipulated it with her tongue, sliding it back and forth, rubbing it along her teeth. Sammy let some drool off of her chin and drip on her shirt, running down her firm, perky tits. She closed her mouth again and swallowed, letting it all go down, so much smoother than when she first became a little shit eater. Sammy's pussy contracted around her fingers as she screamed, her body reaching orgasm. She rubbed her clit slower now, letting herself recover. Yes, it had been a good week, but the weekend was just about to start.\n\nSammy was lying on her couch watching television, dressed in a blue tank top and white shorts. The sun was still warm in the late evening sky, not at all uncommon for June. Sammy turned her head toward the window as she heard Steph pull into the driveway. She's here! She's here! Yes. Yes. YES! Sammy ran to the door and pulled it open, admiring Steph's long body as she climbed out of the car. Her tan legs disappeared into cutoff jean shorts, her upper body covered with a pink t-shirt. \"Hey there Samantha Leigh! You been excited?\" Steph laughed as she grabbed her bag from the trunk.\n\n\"Oh you have no idea!\" Sammy laughed inwardly at her comment. She really doesn't have any idea! She held the door open as Steph came inside, starting the walk upstairs. \"Yeah go ahead and throw your stuff anywhere up there. I'll be in the kitchen.\" Sammy couldn't help but peek at Steph's tight ass as it swayed up the stairs. The low angle provided the perfect view, her firm cheeks spread tightly in the shorts.\n\n\"So what's for dinner?\" Steph plopped herself down in a chair at the table as Sammy poured herself a glass of water.\n\n\"Well I was thinking hot dogs. I know it sounds lame, but I really don't feel like making a mess...\" Yes I do \"...that I have to clean up later.\" Sammy turned to Steph. \"Will that work?\"\n\n\"Yeah hot dogs are fine.\" Steph started flipping through magazines on the table as Sammy prepared the food. \"So I was thinking. You wanna go out tonight? I mean, not like all night, but go dancing or something?\"\n\nSammy pulled the hot dogs out of the microwave and sat down next to Steph, putting buns and mustard on the table. \"That'll be fun! I don't wanna get back to late, but yeah that would be great. We can go in the hot tub when we get back.\" Sammy ate her food, enjoying every second with Steph.\n\n\"Oh my GOD! The hot tub! Hell yeah!\" The girls giggled as they finished eating, chatting about several different things. Sammy smiled and nodded her head, hanging on Steph's every bubbly word. \"Do you like giving head?\"\n\nSammy snapped out of her daze and looked at Steph strangely. Steph laughed and explained herself. \"I'm sorry. I was talking to my friend Veronica and she really hates giving head, and for some reason I really like it. I mean, I like getting eaten out a lot more, but going down on a guy isn't bad.\"\n\nSammy could feel her skin prick, her pussy moisten. She didn't know why the conversation started drifting down this path, but she was glad that it did. \"Uhh...well yeah, I do. I like eating a girl out a lot more than going down on a guy, but it's alright.\" Steph giggled at Sammy's response.\n\n\"What's that like? ...going down on a girl?\" Sammy searched Steph's eyes for some sort of hint that she was teasing her, that she was going to laugh. All she saw was curiosity, a genuine sense of wonder.\n\n\"Well, uhh...well I don't know if I can really describe it. Basically, I guess I just try to do what I'd want done to me. If that makes any sense. Maybe you should try it.\"\n\nSteph laughed. \"Yeah I doubt that's ever going to happen.\" Sammy felt a genuine twinge of sadness, but didn't let it get her down. I am going to have fun this weekend, no matter what. Sammy started clearing the table before Steph began helping. \"Let's go start to get ready!\"\n\nThe girls gossiped about work, family, and friends as they prepared for their night out on the town. Lightning bugs were floating aimlessly in the warm early summer night as Sammy finished getting ready. \"Well how do I look?\" She stepped back and did a pirouette for Steph, showing off her cute outfit. Sammy was wearing a black cocktail dress, coming down to about mid-thigh. It fit her snugly, accenting her little curves and cute firm tits. Her hair hung in loose curls at the side of her face.",
        "\"You look absolutely ravishing my darling. How about me?\" Sammy admired Steph as she showed off her body. She was wearing tight dark blue jeans and a dark red top. It was cut low in the front, providing ample view of her cleavage.\n\n\"Fantastic, but you already knew that.\" The girls giggled as they grabbed their purses and headed downstairs and out the door. Sammy and Steph sang along loudly to the radio as they drove to the club, waving at every stop to guys they thought were hot. Sammy felt light as air, looking over at Steph in the passenger seat as she sang loudly. She looked so beautiful...so perfect...\n\nThey arrived at the club and made their way inside. It wasn't even nine yet, so there was plenty of room. The girls made their way to the dance floor and started moving to the music. Lights flickered and changed color with every thumping drive of the heavy bass. Steph grabbed Sammy by the waist and danced into her, moving her hips, swaying in rhythm to the melody. Lasers vibrated and twisted across their bodies as they began sweating, moving seductively.\n\nMore and more people began crowding into the club as Sammy and Steph got lost in the music, having so much fun dancing and moving. Several men tried dancing with them, but they were an item tonight, two good friends out enjoying each other's company. \"Hey Steph, you keep dancing. I gotta pee.\" Sammy could feel herself immersed in the music, but she couldn't deny the pain in her bladder.\n\n\"I'll come with you, but after this song.\" Steph lifted her hands up in the air and shimmied her ass, not wanting to leave the dance floor.\n\n\"I really have to go...I don't think I can wait.\" Sammy kept dancing, but began to wiggle a little more, losing rhythm as her hand occasionally went between her legs. \"Yeah I won't make it. I'll be right back.\" Sammy turned to walk to the bathroom but stopped as Steph grabbed her wrist. She spun her around and put her hand playfully on Sammy's ass, pulling her close.\n\n\"Just do it here.\" Steph smiled wickedly as she thrust her hips, back and forth, moving to the music. Sammy could feel her chest get warm, her mind flooding with questions and bewilderment.\n\n\"Wait...what? Here? I can't do it here! No fucking way!\" Sammy looked at Steph incredulously.\n\nSteph laughed at Sammy's horrified reaction. \"Oh come on. What happened to the tough badass Sammy you've been telling me about? I thought this would be easy for you, but I guess I underestimated your wimpiness.\"\n\nSammy looked embarrassed, but her body betrayed her intentions. She wanted to do this. She wanted to impress Steph. \"Fine I'll do it, but you have to do it too.\" Sammy smiled at Steph, knowing that she just upped the dare.\n\n\"Deal. But we have to leave right away when I'm done because I'm wearing jeans. People will notice.\" \n\nThe girls continued dancing, bodies grinding, the music drowning out their private conversation. \"Well, are you going to go?\" Steph looked at Sammy's broad grin.\n\n\"I am going.\" Steph put her hand over her mouth and looked at Sammy in shock. Her hands were on her hips, clutching the material of her black dress tightly. Sammy's legs were slightly spread. Steph stared at the pee running down her right leg, pooling underneath her. Sammy didn't understand why she was doing it, but she knew it felt right. She knew that maybe this meant more for their weekend...that this was just a start.\n\nSammy finished peeing slowly as she started dancing again. \"Did anyone notice?\"\n\nSteph looked around briefly, but didn't seem to notice anybody checking them out suspiciously. \n\n\"Nope. I don't think so.\"\n\n\"Well it's your turn now anyway.\" Sammy was so turned on, so shocked that the evening was heading in this direction. \"Or are you too afraid?\" Please don't chicken out, please don't chicken out.\n\nSteph looked at Sammy strangely, her face slowly moving from concentration to a smile. \"Oh shit I'm doing it.\" Sammy looked intently at the darkening material between Steph's legs. With every flash of a light, she could see the rapidly spreading pattern running down Steph's thighs. \"Is it noticeable?\"\n\n\"A little. Turn around. Yeah the back's really noticeable.\" Steph tried to subtly peek over her shoulder at her ass. Their was a huge wet stain across both of her cheeks and down the back of her thighs. \"We better get going!\"\n\nSteph laughed and agreed wholeheartedly. \"Stand close behind me so nobody can see my wet ass.\" Sammy and Steph sauntered to the door, hopping in Sammy's car. \"I can't believe we just did that!\" Steph burst out laughing, collapsing backwards into the seat. \"I'm sorry if my wet ass is ruining your seat.\"\n\n\"Naw, totally fine.\" Sammy tried to act cool, not wanting to divulge to Steph just yet how hot this truly was to her. How sexy it is to see Steph in piss-soaked jeans. \"It was fun! I told you I'd do it.\"\n\n\"Would you do this?\" Sammy looked over at Steph as the older girl turned to the window and lifted her shirt, exposing her bra-covered tits to the car next to her. Sammy could see the guys inside laughing and giving Steph the thumbs up. The stoplight turned green and both cars pulled away. Steph laughed as she pulled her shirt down, having so much fun teasing the guys.\n\n\"Fuck yes I'd do that. I'll one up you.\" Steph's mouth was agape as she watched Sammy squirm and slide her dress down below her strapless bra. With one hand she reached behind and unsnapped her bra, exposing her perky breasts. She tossed it over to Steph, who was shocked into silence. \n\nSammy giggled. \"Too much for you?\"\n\nSteph looked at her with fake anger. \"Too much? Not enough!\" She slid her shirt over her head and took off her bra. \"Honk the horn!\" Sammy obliged her by blaring on the horn as they approached a group of people standing outside of a bar. The girls all stared at Sammy and Steph with disgust as the guys cheered, whistling and making cat calls as they drove past.\n\nSammy slid her dress off the rest of the way, taking her panties off as well. \"How about this?\" The girls were choking on their laughter as they watched everyone give them odd stares. Steph and Sammy's tits were illuminated with every passing light, clearly visible to anyone who happened to be looking.\n\nThe car slowed to a stop at another red light. Steph looked wickedly at Sammy and told her to be amazed. She slid off her jeans and panties and opened the door, running around to the back of the car. Sammy could clearly see her ass in the rearview mirror as Steph posed for the car behind her. Her hand instinctively went between her legs at the sight of her love's nude body. She could see as Steph started laughing and then began getting back in the car.\n\n\"What happened?!\"\n\n\"He asked me how much for a night!\" The girls burst out laughing again.\n\n\"Well what did you tell him?\"\n\n\"I told him that it was more than he could ever afford!\" Steph crossed her legs and pushed out her chest, playfully looking as sexy as she could. Little did she know how much she was affecting Sammy, how her nearly perfect body was causing Sammy to grow more and more wet between her legs\n\nSammy pulled the car in front of a gas station. There was one person at a pump, not really paying much attention to what was going on around him. \"Watch this!\" Sammy opened the door and squatted next to the car.\n\n\"Holy shit Sammy! What the fuck!?\" Steph was looking around nervously as she heard Sammy start to pee. The stream was splashing on the asphalt, running underneath the car. Steph turned her head and looked back at the man at the pump, who was now staring in their direction. He had a slight smile on his face, quite obviously enjoying the scene. \"Oh shit Sammy hurry before the cops come!\"\n\nSammy looked up at Steph. \n\n\"Hand me my panties, I gotta wipe.\" Steph tossed over Sammy's still-wet panties and watched as she wiped with them. Sammy tossed them back in the car towards Steph, who squealed and moved out of the way.\n\n\"Eww! I don't wanna touch your pee!\" Sammy got back in the car and backed away. Steph looked through the windshield at the huge puddle in the vacant parking space. \"Holy shit that's a lot of piss.\" Sammy was still laughing hard as she waved at the guy at the pump. He waved awkwardly back as the girls drove on down the road.\n\n\"I can't believe we just did that. We could've gotten into so much trouble!\" Sammy turned to Steph, who was making a strange face. \"What's the mat-?\" Her sentence was cut off as the smell of Steph's fart filled her nostrils. Sammy inhaled deeply, trying to absorb as much of the intoxicating gas as she could. It was strong, thick with the aroma of a fresh log of shit needing to come out. Sammy continued sniffing, almost tasting it in the back of her throat, her pussy leaving natural lube on her seat. She snapped to attention, realizing before it was too late that she couldn't be so obvious, couldn't make it so clear that she wanted every bit of her lover, no matter how filthy.\n\n\"I'm sorry I couldn't hold it!\" Steph was giggling, obviously not too upset about her situation. Sammy just looked at her and lifted her ass, squeezing out a loud fart, vibrating her tiny tight asshole as it echoed in the car. The smell was almost immediate, potent and with a strong hint of sulfur. \"Samantha Leigh! You're such a pig!\"\n\nBoth girls were laughing as Sammy pulled to a stop in her driveway. The neighborhood was quiet, glowing lightly in the blue shadows of the moon. The girls gathered up their clothing and went through the side of Sammy's yard and into the back. They tossed their clothes on the hot tub deck as Steph went inside. Sammy prepared the hot tub, taking the cover off and turning on the jets. She slowly dipped her naked body into the warm water, sighing as she sank up to her neck. She looked up when she heard the sliding glass door, admiring Steph as she walked over to where they were. She's so perfect...her thin waist, nice hips...her pink, soft nipples...her strip of strawberry blonde hair fading away between her legs...her sexy glasses...her green eyes...her beautiful green eyes.\n\n\"I got white wine. Is that alright?\" Steph placed down two glasses and two bottles on the deck next to the hot tub.\n\n\"What? Yeah. Oh yeah white wine. That's fine.\"\n\nSteph laughed. \"You OK? You seem a little distracted.\"\n\nDistracted?! Yeah I'm distracted! I want to lick every square inch of your body. I want to bathe you with my tongue, run it over every square inch of you. \"No, I'm fine.\" Sammy giggled. \"Just enjoying the water. Come on in.\"\n\nSteph lowered herself into the hot tub, taking a seat opposite of Sammy. \"Damn this is nice.\" She poured two glasses of wine, handing one over to Sammy. \"Cheers my sweet. To a fun and wonderful and, well, pretty weird beginning to our weekend.\" Both girls laughed and tapped their glasses together, taking long pronounced sips from the glasses.\n\nSammy enjoyed the warm feeling everywhere. In her throat, all over her body...she was in paradise, sitting across from the most beautiful girl in the world.\n\n\"So what are you doing after this summer? I mean, like, college-wise.\"\n\nSammy looked at Steph. \"Honestly, I'm not sure. I'm going to stay at home and work, probably go to community college. I don't know if I want to go away from home yet. What about you?\" Sammy shifted in the tub, lightly running her fingertips underwater against her skin.\n\n\"I think I'm going to Northern. I was accepted there. I did the whole community college thing for two years and now it's time to move up in the world I think. Plus it's not really that far, so I can come home a lot. Which is nice I guess.\" Steph looked down, her eyes concentrating on something far off.\n\n\"You don't sound really happy about that.\" Sammy looked at her, concerned over what was troubling her friend. She finished her glass of wine and topped off Steph's.\n\n\"Hey this may sound really, really, really weird, and feel free to be grossed out and say no, but it would be the most awesome thing ever if you could give me a foot massage. I'll give you one too.\" Sammy's pussy sent a trickle of pleasure to her brain.\n\n\"Uhh yeah that's cool. Fine.\"\n\nSteph slid further down in the water and offered her right foot to Sammy. She reached down and took Sammy's right foot in her hands and started gently rubbing the balls of her feet. \"Well to get back to what we were talking about. Yeah, I dunno, it's kind of like I want to start a new life. To see where I can go. I just...I just want to cut off ties and experience everything new again.\"\n\nSammy rolled her thumbs over Steph's toes, working the pads individually, easing the stress and tension the best she could. I want this to be erotic...but not too obvious...no what the fuck am I doing? Just be a friend Sammy, just a friend...but I want to tell her so bad...I want to tell her how I feel...\"Well what do you mean cut off ties?\"\n\n\"I'm thinking about breaking up with Matt.\" Steph looked up suddenly, her green eyes sharp with sincerity. Her hand continued to work Sammy's feet, fingers gently probing into the soft arches now, pressing gently, slowly increasing the pressure.\n\n\"Whoa...whoa there...why? I thought you guys were happy.\" Sammy downed her glass of wine in one gulp and poured herself another. This is perfect. Perfect! Now's your time Sammy! Now's your time! No, no, no! Don't be stupid. It's so wrong. They're happy. Be a friend Sammy, be a friend.\n\nSteph finished her glass and held it out as Sammy filled it again. \"We are happy. But we've been together for three years and nothing is changing. He works hard, and I appreciate that, but we RARELY see each other, which is just nightmarish. I dunno, does it sound crazy? Am I just going through an early-life crisis?\" She was kneading Sammy's heel between her palms, moving her tendons, relaxing her...\n\n\"No, not crazy. Honestly, as your friend, you have to do what you think is right. Nothing I can tell you is going to make your decision any easier, only more difficult. I'm sorry...I don't really have a whole lot of close girl friends, so I know I suck at advice, but I try...\" Sammy switched to Steph's other foot, feeling her slippery flesh between her hands. She began the same process, manipulating every fiber of Steph's aching feet.\n\n\"I know. I don't expect anyone to give me a right or wrong answer. I'm sorry...damn that feels good.\" Steph was slowly stopping Sammy's foot massage as she leaned her head back and stared off into the stars. \"Damn that feels good.\"\n\nSammy took another long sip from her wine as she watched Steph lean back and enjoy her foot massage. She could see Steph's chest moving up and down, breathing heavily.\n\n\"I'm sorry I'm being so selfish...but could you do my neck and shoulders too? You're just really good at this...sorry I will hit you back sometime.\"\n\nSammy giggled. \"Turn around, it's fine.\" Holy fuck Sammy! What is happening?!? What the fuck is going on?! Her pussy was so warm, so excited about how things were progressing. How all the stars were aligning. Sammy straddled Steph from behind, their slippery flesh rubbing lightly together. Her nipples got hard as she put her hands on Steph's shoulders, rubbing her fingers in, moving her thumbs in circles. \"How's this?\"\n\n\"Perfect.\" Steph crossed her arms and leaned forward, resting her forehead. Sammy's hand moved up and down her neck, squeezing, causing her to lose focus, to relax and forget her troubles...Steph started breathing heavier, could feel herself suddenly start to feel things she knew that she shouldn't. Her skin had goose bumps, her nipples hardened as she felt Sammy's hands on her slippery taught skin.\n\nSammy didn't know what she was doing. She leaned in and kissed Steph lightly on the neck. She pulled away quickly. \"I'm sorry. I'm so sorry. I'm drunk.\"\n\nSteph turned her head to the side and smiled softly. \"It's OK. You don't have to stop.\" She lifted her head and pulled her hair over her shoulder, exposing her long neck. \"I'm drunk too.\"\n\nSammy felt nauseas, felt so turned on that it twisted her stomach in knots. She kissed Steph softly, sucking gently, moving up and down her neck. Her hands reached around the front and cupped Steph's tits, squeezing them, pulling on her nipples. Sammy could feel how she responded, could sense the tiny changes in her breath and motions. What are you doing Sammy? This is crazy. This can't be happening. This is a dream. Just another dream.\n\n\"I've never uhh...never been with a girl. Wow...uhh...so...what do I do?\" Steph looked over her shoulder at Sammy, her skin flushed, eyes sparkling. Sammy grabbed her waist and slowly had her step a few feet out of the hut tub, leaning over at the waist. She got up behind her and spread Steph's ass cheeks, running her tongue over her little puckering hole. \"Ohhh fuck wow.\"\n\nSteph leaned down further, feeling her tits press into the cool wood of the deck surrounding the hot tub and pool. Sammy spit on Steph's asshole, rubbing her finger over the hole before slipping it in. She bent over, running her tongue now over Steph's slit, lapping at her juices as she moaned softly. Sammy slid her finger in and out, pulling it out of Steph's ass and sucking on it obscenely before sliding it back in. She could feel how hot and tight Steph's asshole was, how it sucked her finger in all the way up to her second knuckle. Faster and faster Sammy fucked her asshole, fingering her, watching as her ass cheeks jiggled slightly with each thrust.\n\nSammy grabbed Steph's legs and turned over, having her sit on the edge of the hot tub. Steph grabbed Sammy's head and guided it between her legs, instincts taking over. \"Yessssss...\" Sammy rubbed her lips gently over Steph's labia, inhaling her scent. She kissed softly, planting soft little signatures on Steph's sensitive flesh. Sammy flicked her tongue rapidly on her clit, feeling her shudder at the rapid movement of flesh on flesh. Sammy worked her expert tongue up and down Steph's slit, moving back and forth over her hard button, making her squirm and squeal. Steph leaned back, spreading her legs wide as Sammy pushed her tongue as far up her pussy as it would go, lapping at her moist walls. She could feel herself cumming, losing control as Sammy went down on her.\n\n\"Oh fuck Sammy I'm cumming...don't stop...don't stop...\" Steph went stoic as she gripped Sammy's head tight, holding her against her throbbing pussy. She raised her hips off of the deck, grinding against Sammy's face, humping her mouth. \"Please...oh God...ohhhh...wow...wow...\"\n\nSammy slowly pulled away. Steph's breasts were rising and falling with each deep inhalation. The moon light outlined her curves, drops of water running off of her body. Sammy didn't know what to say. Didn't know how to respond...was it the alcohol? What happened here? Did this mean anything to Steph? Sammy's pussy was on fire, her nipples rock hard, her tongue still tangy with Steph's juice.\n\n\"Umm...wow. I don't know what to say. That was awesome. Awesome. I've never been eaten out like that. Fuck wow. You're good Samantha Leigh!\" Steph giggled and slowly lowered herself into the water again. \"I guess I owe you one, although don't expect anything nearly as amazing.\"\n\nSammy was speechless. She wanted to straddle Steph, to show her just how many orgasms she could give her in one night. She wanted to suck on her tongue, to slowly close her eyes as Steph lowers her ass over her face. I love you Stephanie. I love you so much. \n\n\"Naw it's fine. You don't have to do anything you don't want to.\"\n\n\"Trust me, I don't do anything I don't want to do. Speaking of which, you know how I told you that there's something I want to tell you about. Well, umm...well let me show you I guess.\" Steph climbed out of the hot tub and walked over towards the pile of clothes. \"Hey could you like, light one of these tiki torches or something?\"\n\n\"Sure.\" Sammy climbed out of the hot tub and walked to the outdoor kitchen, grabbing a lighter and igniting a couple of the citronella torches that adorned the deck. She turned around and gasped as she saw Steph standing there, still completely naked except for her panties. They were cotton bikini cut, Kelly green color with gold shamrocks on the front. The firelight flickered over her body, casting dramatic shadows between her tits.",
        "\"So...uhh...well, I'm drunk, and uhh...I told you I'd do it, and, well you know me now better than any of my other girl friends, and well...\" Steph giggled nervously and turned around. She spread her legs slightly. Sammy stopped moving. Stopped breathing. Stopped noticing anything else around her except for what was happening right in front of her very eyes. Even then she didn't believe it. This can't be real. This can't be real. No way. Not in a million years.\n\nSteph pushed, grunting softly as a little bit of poop tented out the bottom of her panties. She took a deep breath and pushed again, exhaling as the bulge grew over four times the original size, stretching out the back of her panties wide. The glowing candles showcased every dimple and crease in Steph's loaded wet panties. \"Yeah...so uhh I tried this at my house...\" Steph looked over her shoulder at Sammy. \"...and I liked it. I know it's fucking weird. I probably shouldn't have told you that. I'm sorry.\"\n\nSammy's heart ached, burning with intense emotional pleasure. Her body wanted to orgasm. It took every once of restraint not to cum with every movement of her legs. She walked over to Steph and wrapped her arms around her, hugging her, holding her tight. Their breasts pressed together, their hearts beating rapidly in unison. \"Sammy, what're you d-\" Sammy looked up at Steph and instinctively kissed her, lips parting, tongues lightly flicking against one another. Sammy grabbed Steph harder, pulling her closer, kissing her madly, like it was her first time. She could smell Steph's shit now, sending a mini orgasm rippling through her veins. Sammy reached for Steph's hands and lowered them to her ass. Instinct took over and Steph squeezed gently, playing with Sammy's cute ass cheeks. The girls broke apart as Sammy leaned down, taking Steph's nipple into her mouth. She nibbled gently, running her teeth carefully over Steph's sensitive flesh.\n\nSammy kissed down Steph's stomach, hands now up on her nipples, tweaking them, tugging, pulling. She reached down and grabbed her panties. They were blue satin bikini cut with black lace trim. Sammy pulled them up her legs and snapped them in place over her ass. She stood up again and put Steph's hands back on her ass. Steph was breathing hard, body slowly moving rhythmically with the warm flood of pleasure. Sammy buried her head in her neck, kissing her hard. Without warning, Steph heard a crackling, a soft popping sound, and felt Sammy's panties stretch underneath her hands. She heard Sammy sigh, felt her hot load beneath her fingers. Steph didn't know what to do. Didn't know what the next step was.\n\nSammy grabbed Steph's bulge again and started squeezing, pulling up on her panties. Steph moaned loudly as she felt her shit flatten, spreading up her ass and down between her legs. She could feel how warm and creamy it was, how nasty she was being. \"Do it like that Steph.\" The girls started kissing again, just as hard as before, tongues down each others' throats. Steph tentatively squeezed Sammy's bulge, gently, delicately. Sammy reached back and grabbed Steph's hand and forcefully pressed, guiding her every step of the way. Steph got the hint and started manipulating her load, pressing it against Sammy's ass, feeling it spread out underneath the thin material of her satin panties. The girls continued kissing, making out, their hands working hard.\n\n\"It's...it's gonna get messy. Is that OK?\" Sammy looked at Steph, watching as the older girl nodded her head in understanding. She squeezed Steph's load hard, manipulating some of the shit out of the leg holes. Sammy worked it with her palms, rubbing the shit over the back of Steph's panties, back and forth, squeezing, smearing. She reached back into Steph's undies, replenishing the load in her hand. Sammy brought it around the front and rubbed between Steph's legs, smearing shit now over the front of her panties. Steph moaned softly, breathing harder and harder, her novice hands still playing with Sammy's loaded panties. Sammy ran her hands all over Steph's lower body, across her thighs, her ass cheeks, over her pussy...shit was smearing everywhere, the aromatic scent wafting over both girls.\n\n\"Get on your hands and knees like before.\" Sammy worked on instinct. She's had plenty of experience with girls, but nothing remotely like this. This was new. This was radical. This was perfect. Everything felt right, as if some pre-determined force was guiding her hand, shaping her every move. Steph was on all fours as Sammy knelt behind her, pulling her panties down to about mid-thigh. Sammy stared at the site before her. Steph was leaning all the way down, her ass arched high in the air. Shit was plastered up her crack and over her cheeks. Sammy could see it down the inside of her thighs, naughty finger paint giving away their filthy deeds. She grabbed Steph's cheeks and spread them, sticky shit making sounds as her beautiful bottom spread open. Sammy spit on Steph's asshole, watching as it tightened up. She lowered her tongue, letting it hang all the way out of her mouth as she took a long, seductive lick from the bottom of Steph's pussy to the top of her crack. She repeated the process, watching as Steph's hand went to her clit.\n\nSammy sucked on Steph's crack, tasting her sweat, her powerful, thick shit...she was in heaven. This was it, eating her lover's shit. It couldn't get better. So perfect. Tonight had been so perfect. Steph squeezed a soft fart out, sighing with pleasure as it bubbled in the slimy, spitty shit covering her asshole. Sammy felt the hot air slide down her throat as she swallowed, tasting Steph's shitty fart. She buried her face as far in Steph's ass as she could go, her tongue snaking it, sliding into Steph's tight asshole. She could sense Steph's sexual tension building, could feel her body preparing to spring forth.\n\nSammy pulled her face out of Steph's ass and pulled her panties back up. \"Let's try this. You'll like it.\" She scooted up towards Steph, both girls on their side. They spread their legs and placed their panty-covered pussies against each other. Both girls could feel the incredible heat emitting from between their legs, the moisture radiating on each other's pussies. \"Piss on me.\" Sammy pressed hard into Steph's pussy, feeling her lips spread slightly. She was sopping wet, slippery cum coating her panties. Sammy started grinding her hips, started fucking Steph's pussy as soon as she felt the hot piss spurting over her bald lips. She started peeing as well, feeling it flow out of her, across both of their pussies, puddling with Steph's piss beneath them. Harder and harder they scissored each other, fucking, grinding. Steph was screaming now, her voice echoing in the woods and backyards surrounding Sammy's home. Sammy pulled her panties to the side, directing her stream directly onto Sammy's pussy, her piss flooding her labia, cleaning it, dripping through the cracks in the deck.\n\nSammy gave one final thrust against Steph as her body exploded. She screamed too, joining in Steph's erotic night chorus. They both collapsed down, unable to catch their breaths, slowly crawling apart. Sammy's legs were trembling, her ears pulsing with blood. It happened. This just really happened. This HAPPENED! She looked over at Steph, whose eyes were closed. Steph tried to say something but mumbled incoherently. She laughed. Not a laugh at anything funny, but one of relief. A sexual barrier had been breached. She felt good. Incredible. Amazing. Acutely aware of her sexual feelings. She felt alive.\n\nSammy slowly started to stand up, holding onto the railing of the deck to maintain balance. \"Well, umm. That was interesting.\" She looked down at Steph, watching as she lazily ran her hand over her pussy, rubbing gently.\n\n\"Yeah...wow. So I take it that's what you wanted to tell me? That you like doing that too? Cuz it's quite obvious you're no rookie at this!\" Steph looked up at Sammy, smiling broadly.\n\nNo Sammy that's not it! Tell her the truth! Tell her that this wasn't just some drunken tryst! Tell her that this wasn't just two horny girls fooling around. This meant something. Tell her you love her! Tell her Sammy! \"Uhh...no...I mean, yeah. Yeah, that's what...that's what I was going to tell you.\" Fuck Sammy! FUCK! This was your chance!\n\nSteph stood up and walked over to Sammy, giggling as she surveyed her friend. Shit was caked across her lips and lower face, down her neck, all over between her legs. Steph kissed her on the forehead. \"You'll have to forgive me for not kissing you just yet.\" She took Sammy's hand in hers and smiled. \"Well, I guess I owe you. And we definitely need to shower...sooo...wanna head inside?\" Sammy nodded her head and walked slowly with Steph. She was as furious at herself as she'd ever been, but she needed this. Tonight had been perfect. The weekend was only just starting."
    ],
    "authorname": "mjmurra",
    "tags": [
        "panty poop",
        "scat",
        "shit",
        "pee",
        "teen",
        "lesbian"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/sammy-ch-05"
}