{
    "title": "Play it Again Sam Pt. 06",
    "pages": [
        "5:03\n\nI'd made it to Saturday.\n\nMy feelings were conflicted. The time loop had been soul-crushing at times, it could make everything seem pointless. It was a lot like purgatory.\n\nBut in some ways, I was quite thankful to have been caught in it. Besides the obvious- averting millions of deaths, I thought I was coming out the other side better for the experience.\n\nI'd never thought twice when I saw a way out, but already I was second guessing myself over things I could have accomplished if I'd stayed in the time loop a little longer. The loop had been an unprecedented opportunity for self-improvement, but I could only truly appreciate the good parts now that I had proof that it wasn't endless.\n\nFor what felt like the millionth time, I contemplated what the time loop actually was, how it worked. I was resigned to never get any real answers. The tie in with the nuclear blast had at first given me the thought that the loop had a scientific explanation. That the awesome power unleashed had somehow warped time.\n\nBut that explanation was unsatisfying, not least because I was the only one affected, and I wasn't even in the blast zone originally. Also, it didn't explain how I had just \"happened\" to acquire a skill set and acquaintances uniquely qualified to deal with the problem.\n\nNo, more than ever I was convinced that there was some sort of intelligence at work here. But who, or what had guided the loop? And just as importantly, why me?\n\nI snapped out of my reverie. There were more immediate problems to deal with.\n\nSung and Julie were already in the Maybach, and I quickly joined them. I wanted us all in the armored vehicle just in case the police stormed the building. No point risking getting caught by friendly fire, especially now that I was sure my death would be permanent.\n\nSo far the police were just surrounding the building, but they wouldn't just sit on their hands forever. I assumed they would be trying to make contact with the terrorists. Later, I found out from Mi-Sook, that the first police had arrived less than ten minutes after I called them. They were greeted by two bodies lying in front of the building with deflated heads. That made them take my reports of armed terrorists with a bomb seriously.\n\nIt had taken them almost an hour to get all their ducks in a row. The street outside was filled with special terrorist response task forces, SWAT, the bomb squad, and hostage negotiators. I don't know what the standard response is to this situation, but I certainly didn't envy them the job. My own dealings with these terrorists had taught me that they would have detonated at the first sign of a cop. Luckily for them, I had taken care of it.\n\nSung, Julie, and I were burning up the air waves on our cell phones.\n\nSung was talking to his sister in the high-rise across the street, telling her to drop any weapons she had taken off the sniper team and get somewhere to wait for the police. Preferably on a different floor, away from the bodies of the men she had killed. We were all expecting a lot of tense reactions from the cops when they walked in to find four civilians and eleven dead bodies (19 if you count the innocents the terrorists had killed when they entered the building).\n\nJulie called her parents, waking them up and directing them towards the emails I had sent them, before hanging up and calling a TV news station. She didn't give them any details, just that there was a terrorist situation at 57<sup>th</sup> and Park. We wanted to make sure the media was aware something was going on, if the police presence hadn't already tipped them off.\n\nAs for myself, my first call was to my dad in Florida. He had always been an early riser, so he was already up.\n\n\"Hey dad. I need you to check your email. I sent you something.\"\n\n\"It's not another cat video is it? I told you to stop sending me those Sam.\"\n\nI'd never sent my father a cat video. He was just busting my balls. It made me smile when I thought of the shock he was going to get when he saw the video I had sent him.\n\n\"What is this? It looks like some extremist propaganda video. I can't understand what they're saying.\"\n\n\"They're speaking Korean. If you watch the whole thing, they switch to English occasionally. I sent you four video files. They all show the same thing from different angles. I'll want you to watch it all eventually, but right now I need you to skip forward to the last few minutes. I'll wait.\"\n\nThere was a pause as he did so. I could faintly hear the video playing over the phone. I heard my dad gasp when the door burst open. There was a pregnant silence after my father watched his son, the Wall Street trader, kill three men.\n\n\"Sam... Son, what did I just watch? Was that real?\"\n\n\"It's real dad. All I can say for now is that they were very bad men. You'll see when you watch the rest of the video. I promise I'll answer all your questions later, but right now I need Jim Watley the feared defense lawyer, not Jim Watley my father.\"\n\nEven though he was now retired, my dad was a mean son of a bitch when it came to defending his clients. I couldn't ask for a better man to have in my corner.\n\n\"Right,\" my Jim said, his lawyer instincts taking over. \"What kind of trouble are we looking at here?\"\n\n\"Hopefully none,\" I replied. \"I'm clearly in the right here, but that metal case in the video is a nuclear bomb. Heads are going to roll, and there is going to be heavy involvement from the government. I need you to make sure that none of the shit that is going to start flying lands on me or my friends.\"\n\n\"Holy shit. Nuclear...\" My father got over his shock quickly and got back down to business. \"What friends? Who else is involved?\"\n\n\"Julie and a couple people you don't know- Sung and Mi-Sook Kenji.\"\n\n\"Listen,\" I said, before he could ask any more questions. \"I'm sitting in the building where that video was shot, waiting for the police to storm in. I don't have time to talk. Right now, I need you to make sure that video is safe, where nobody from the government can take it from us. As long as there is video evidence, I should be safe from any backlash.\"\n\n\"Okay, I'll make some copies and make sure they're secure. I love you son, be safe.\"\n\n\"Love you too Dad. Thanks.\"\n\nMy next call was to the police. We had all turned our phones off before the assault. Police dispatch had been trying to contact me continuously since I had used my phone to call in the terrorist report.\n\nI called and identified myself. I gave the dispatcher a partial explanation, explaining that all the terrorists were dead, the ambassador's family was safe, and we were waiting in the car parked in the lobby. Except for Mi-sook, who was across the street.\n\nThe cops took about ten minutes to verify my story as much as possible. They went and collected MI-Sook, and took a gander at the bodies of the sniper and his spotter. They tried calling various phones in the embassy until the ambassador answered. He confirmed what I was telling dispatch.\n\nTwenty or so men in full military kit rushed into the lobby. The branched off in different directions to clear the building. One guy came over to the car and motioned us to stay put.\n\nWhat followed was several days of intense scrutiny. Sung and Mi-Sook still didn't know that the bomb had been nuclear. Julie and I did know, but hadn't yet volunteered that information.\n\nThe presence of foreign terrorists already had government agencies swarming the site. When the bomb squad got a good look at the bomb... the river of g-men became a flood.\n\nThe intense scrutiny I had been expecting became a reality.\n\nI had managed to talk to my dad again, even though the FBI, who had an agent watching me every second, had strongly objected. They wanted me cut off from the rest of the world until they had wrung every detail from me. But my earlier call had got the ball rolling. My father had been burning up the phone lines, demanding access to me.\n\nThe downside was that lawyering up made the interview process adversarial. Our interviewers went from skeptical to suspicious.\n\nOn the plus side, my dad had contacted a law firm in New York, and all four of us had a lawyer by our side at every interview. And the government couldn't sequester us away and grill us indefinitely, which I suspected they were itching to do. We spent our days in a hotel close to the FBI offices, for easy access.\n\nThey tried to keep us separate, but the lawyers had nixed that. We would cooperate. But we refused to be treated like criminals. So no day long interrogations, and no keeping us closed off from the world.\n\nDespite all my planning, there was no way to frame our assault on the terrorists in a way that didn't draw suspicion. Plus, some of the things I had done to cover my tracks left traces, even if they obscured the real truth.\n\nWhile we had set up a flimsy excuse for how we had come to discover the terror plot, it defied credulity that four civilians would charge in and attack eleven armed terrorists on the spur of the moment. We had turned off the internal security cameras before entering the building, so the only part caught on tape was me storming into the ambassador's office and taking out the final three North Korean's.\n\nOf course, the sudden stop to the video feeds drew massive suspicion. No one believed it was a coincidence that the cameras stopped working when we began our assault. Everything about the security room rang false to them.\n\nWhy would the terrorist there turn the cameras off? He hadn't cared about them prior to that.\n\nHow did I get in there? The door could only be opened with a code.\n\nWhy was the North Korean in there shot and whacked in the head?\n\nMy answers- I don't know... the door was open... I whacked him after I shot him, couldn't tell you why, adrenaline maybe.\n\nThe first question was the one that really bothered them, because I couldn't provide a logical answer. I knew going in that turning off the cameras would draw suspicion. Just not as much suspicion as if the police had been able to actually see what we had done.\n\nThe straw that broke the camel's back was the radio encryption. Why had the terrorists brought expensive encrypted radios with them, only to broadcast over an open channel? Unfortunately, the FBI fingerprinted pretty much everything, including the radios. They didn't find any of our prints, because we had been careful about that. What they did find were suspicious smudges where we had used our shirts to turn the dials, and more importantly, partial prints from the terrorists.\n\nIf the terrorists weren't using the encryption on their radios, why were their fingerprints all over the encryption dials? Combine the prints with clean areas that looked like they'd been wiped...\n\nIf we hadn't had lawyers constantly by our side we might have 'disappeared' for a while.\n\nAlmost all the questions focused on me.\n\nAccording to our story, Julie and Sung stayed in the car the whole time. We had been careful to wipe down anything they had touched outside the vehicle. Julie had made an effort to touch as little as possible in the security suite, and clean up after herself.\n\nSo their stories were very simple. They faced the same questions about the lead up to the assault, but they could deny any knowledge of what happened outside the lobby of the building.\n\nMi-Sook had to describe what she had done in the high rise, but she could tell 99% of that truthfully. The only things she had hide was tampering with the sniper team's radios. She could even admit having advance knowledge of where they had set up- we said we heard them talking about it.\n\nBy prior arrangement, if one of the others was confronted with a question they didn't know how to answer, they referred it to me. I'd had a lot more time to think about this than them. It was my plan. We presented a united front in telling the authorities that I had led the assault.\n\nThere was some skepticism that the Wall Street trader had been the driving force behind a counter-terrorism strike, but there was ample proof of it.\n\nMy fingerprints were all over the steering wheel of the car, which wiped out the lobby guard. Four of the terrorists had been killed with the same gun. Not only were my prints on the gun, but I was the only one other than Mi-Sook who had any gunshot residue on them.\n\nThen of course there was the video.\n\nThe video was my ace, incontrovertible proof that I was on the side of the angels. No one could watch that video and not break into a cold sweat at how close we had come to the death of millions. The North Koreans made it abundantly clear that they were on a suicide mission, that they were there to burn Manhattan down in righteous flame.\n\nThe video also prompted my first threat of jail time. It showed me going over to the terrorists' laptop and stopping the video feed.\n\nThat pissed them off. They immediately raked me over the coals for even touching it. What if tampering with it set off the nuke? Blah, blah, blah.\n\nWhen their techs told them that I had used the laptop to copy and send out those video files... Holy shit!\n\nHomeland Security went ballistic. They immediately demanded access to the cloud account where I had sent it, as well as the email accounts of mine and Julie's parents. They made threats of charging all of us with treason if we didn't turn over all copies. Actually my cloud account \"disappeared\" the next day.\n\nI told them to go pound sand.\n\nIt was a sticky legal question as to whether they could classify material I'd had first. They probably could, in the interest of national security. But it would be a cold day in hell that they could ever convicted me.\n\nIf I made the video public, and I told them I would if they fucked with me, no jury in the country would convict me. There would be riots if they even tried to charge me.\n\nI've made my interactions with the government seem very adversarial. And they were, to a degree. But for every \"bad cop\" who was trying to sweat answers out of me, there were a hundred \"good cops\" who thought I walked on water.\n\nMy father, who had caught the first flight from Florida, along with the local law firm he had brought in, protected our interests. But looking back, I believe we would have been okay. We were surrounded by men and women who worked or lived in Manhattan, and literally owed me their lives. We had earned some serious goodwill. I think every single hardass who grilled us had flown in from Washington.\n\nOur hotel looked like a government convention- FBI, CIA, NSA, Homeland Security, even the ATF. The only non-government employee that I saw was the NYPD chief of police. I believe they only allowed him to hang around as a courtesy. This whole event was classified to hell and back.\n\nBut since almost everyone in our hotel had a high security clearance, most of them had seen all or a portion of the terrorists video.\n\n\"Why do all these people keep offering you bubblegum?\" Julie asked.\n\nI laughed.\n\nThe first day, all the various government agents had been standoffish as they tried to figure out what had happened. After the video had made the rounds, our reception warmed considerably.\n\nWhen a woman from the CIA offered me \"bubblegum,\" I didn't understand right away. That was a strange thing to offer. When I declined, she cringed dramatically, and her partner broke out laughing. Then I was laughing too as I caught on. From then on, I had a steady stream of government agents offering me bubblegum.\n\nI explained to Julie my 'heroic' speech that I had made to the North Koreans- \"I'm here chew bubblegum and kick ass... and I'm all out of bubblegum.\"\n\n\"You really said that? When you knew people would see it? You dork.\"\n\nI just smiled.\n\nSpeaking of my wife...\n\nThe week we spent as guests of the government were eye opening for Julie. She had gone to bed Thursday night with a devoted husband, and woken up with an indifferent stranger. Perhaps it wasn't fair to her, but I'd spent four years putting distance between us, while she had no way to fight it.\n\nI'd told her that I knew about her affairs, but I wasn't acting angry. I didn't really feel that upset about it anymore. It was like the world had slept while I had evolved into a completely different person. I'd spent almost as many years in the loop as I had in my marriage.\n\nTo get angry at Julie, I would have to delve into an emotional pool that had dried up long ago.\n\nThis was all very disconcerting for Julie. I'd discovered her infidelity, read her diaries, gotten some petty revenge, and moved on with my life...all in the space of a day from her perspective.\n\nWe were sharing a room with two queen beds. We existed more as roommates than husband and wife. I was cordial towards her, even friendly. But that was it.\n\nShe dearly wanted to talk about our relationship, but I put her off until we were through with Uncle Sam. Any talk about 'us' would inevitably involve talking about the loop. I was too paranoid about the government listening in somehow, so we had to keep our conversations innocuous.\n\nAfter a week, we'd had enough.\n\nWe communicated through our lawyers that the government could have one more interview, and then we were going home. My dad said they had blustered a bit, but their hands were tied. We had been cooperating thus far, but they couldn't legally hold us unless they were to detain us in the name of national security. I'd made clear that I would release the video if they did that. By this point they had no idea how many copies had been made, or who had them. Even I didn't know where they all were, since I had left that to my dad.\n\nSo I was sitting by myself in a conference room for the final interview.\n\nMy father wasn't with me. The government had requested a one on one meeting. Dad had been reluctant, but I'd accepted. By now I had my story down pat. I wasn't going to reveal anything by accident. I was hoping my cooperation would be remembered when I walked out of the hotel that afternoon.\n\nPlus, they had already given the okay for Julie, Sung, and Mi-Sook to leave. I was curious about what they wanted to ask me specifically, and who would I be talking to. All the interviews to this point had been conducted by 'teams' of agents.\n\nA balding, bespectacled man in his sixties or seventies entered the room.\n\n\"Hello Mr. Watley, I'm General Bradley Pembroke, retired. I'm the President's national security adviser. I've been monitoring you and your companions this week. I wanted a chance to speak to you before you went home.\"\n\n\"It's a pleasure to meet you General. If you've been following this... process for the last week, then I'm not sure what else I can tell you. I feel like I've been wrung dry.\"\n\nPembroke gave me a wry look.\n\n\"I think we both know that's not true. We may have exhausted you with all our questions, but you have been less than forthcoming with your answers.\"\n\nI didn't bother to deny it. He hadn't sounded angry. More like a father whose son had disappointed him. I had to fight the urge to apologize to this stately gentleman. He just had an air of authority that demanded respect.\n\n\"Well,\" he said. \"Be that as it may. I'm not here to try and glean anything new from you. No, I'd like to talk about where we go from here. What are plans Mr. Watley?\"\n\n\"My plans? I'm not sure what you mean.\"\n\n\"Are you going to be able to put this behind you? You've done a great service for the people of this country. By rights, we should be celebrating what you have accomplished. But to do that would expose the country and yourself to fresh danger.\"\n\nMy dad had already brought this up to me, but I wanted to hear it from an authority.\n\n\"How could I and the country be exposed to danger?\" I asked.\n\nPembroke steepled his fingers and looked at me over them.\n\n\"We can never reveal just how close to disaster we came. Never. At least not in any of our lifetimes. Think of the fear that gripped the nation after 9/11. How long it took before people felt safe to fly, or attend large events. How would the nation react if they knew that a terrorist organization managed to smuggle a nuclear weapon into the middle of Manhattan?\"",
        "It was a rhetorical question, but I answered anyway.\n\n\"They would lose their fucking minds.\"\n\nPembroke gave small wince at my profanity, and I felt like an ignorant lout. Damn this guy was good! If I wasn't careful, I would reveal something just because I was trying not to disappoint him. He used his grandfatherly visage like a weapon.\n\n\"Yes,\" he intoned. \"Quite. There would be mass hysteria. Not only that, but the public would demand accountability. We know who is ultimately behind this attack-\"\n\n\"North Korea.\" I jumped in.\n\nHe mimed like he was sealing his lips.\n\n\"As I said, we know where the final responsibility lies. Rest assured that this provocation will not go unanswered. But, if possible, we would like to administer justice tactically, precisely. A disaster has been averted, and so we have the opportunity to avoid an escalation as well. The public would demand open conflict. We very well might become embroiled in a full scale war. Far better to handle this quietly.\"\n\nI believed him. Word that North Korean terrorists had tried to detonate a nuclear bomb on American soil would enrage the country. It was hard to imagine anything less than war satisfying the masses.\n\n\"As for yourself Mr. Watley, if your role in recent events were to become widely disseminated, I'm afraid your personal safety would be compromised.\"\n\n\"How so?\"\n\n\"You would be a grand hero... but also a tempting target. Some of the terrorists come from a nation that is well known for its violent reprisals, and willingness to strike across national boundaries. In addition, terrorist radicals of all stripes would view you as tantalizing prey. The hero who rushed in to stop an act of terrorism... It would be a serious blow to American morale if that man met a grisly end at the hand of yet other extremists. You would have to make a lifelong commitment to personal security.\"\n\nMy father had raised similar points. North Korea had no problem making assassination attempts outside their borders. We hadn't though that I would become a target for other radicals as well, but it made sense. If I were to become famous for killing terrorists, I could end up on the death list of every extremist sect that hated America... which was pretty much all of them.\n\nI looked at Pembroke.\n\n\"I did briefly have aspirations of fame and fortune, but this past week had disabused me of that notion. What is the official story going to be?\"\n\n\"There's no denying that what occurred was a foiled terrorist attack. But the names of yourself and your companions will never be mentioned in connection to it. And anyone who suggests a \"nuclear\" component to this event will be quietly cautioned, then loudly discredited if necessary. Since your call to the police mentioned terrorists with a bomb, that information is now public. All the personnel who entered that building were government employees. The NYPD wasn't allowed in until the scene had been cleared. So we can control the narrative.\"\n\nHe paused a moment.\n\n\"You didn't give your name to the police dispatcher, but you called from your own registered cellphone. That's a problem. As far as we can tell, only a few police officers know your identity. We've done as much as we can to suppress that information. Far better for you, and for the country, if we let the world believe that this attack was foiled by government assets.\"\n\n\"So Uncle Sam is going to ride in after the fact and steal all the glory huh?\" I asked with a touch of bitterness.\n\nPembroke looked a mite sheepish at that.\n\n\"Unfortunately, yes. No offense Mr. Watley, but in the realm of counter-terrorism you are a non-entity. You are a civilian. You performed masterfully, some might even say suspiciously so. But you will never strike fear into the hearts of the world's radical elements. They would put your success down to luck.\"\n\nI found that slightly insulting, but couldn't really come up with a good counter argument.\n\nSo I settled for blowing Pembroke a raspberry. He looked shocked. Then he chuckled.\n\n\"No,\" he said. \"You are definitely not James Bond. And that's who we want everyone to think stopped that bomb. A team of highly skilled government operatives. If North Korea, or anyone else ever found out how close they came...\"\n\nHe paused to let me fill in the blank.\n\n\"They would immediately try again.\"\n\n\"Precisely. We don't know how they got so far this time. This has become the priority for every law enforcement and intelligence agency in the United States. It's also the reason why you, who should be the hero of the hour, have gotten such short shrift. It's obvious that you know more than you are telling. We are trying to prevent a second attempt, maybe here again, maybe somewhere else. Anything you fail to disclose could potentially be the one thing we needed to know to save millions.\"\n\nI cleared my throat.\n\n\"I am one hundred percent sure that I do not know anything that would tell you how they got the nuke into the country. I don't know anything about their movements before they got to the embassy.\"\n\n\"Then how did you know they would be there? Pembroke asked.\n\n\"I didn't. I was just in the right place at the right time.\" I said emphatically. It had been my standard answer whenever the government accused me of having foreknowledge.\"\n\nPembroke opened his mouth to argue, but I cut him off.\n\n\"After this, I'm going home. I can understand why you would be desperate for answers, and I wish you all the luck in the world in tracking the terrorists' movements and preventing any future attacks. I'd like to offer you a hypothetical situation if I may.\"\n\n\"Please, go ahead.\"\n\n\"Let's say, hypothetically, that I was hiding how much I knew, and how I knew it. That I did have advance knowledge. Well, again hypothetically, that advance knowledge would have been hours, not days. Have you watched the entire video General? Have you seen and heard what those North Koreans intended?\"\n\n\"I have.\" He replied.\n\n\"If Seal Team Six had raided that building, what do you think would have happened?\"\n\n\"Are you implying that you are somehow more qualified than the Navy Seals, Mr. Watley?\"\n\n\"No, no,\" I said. \"That's not what I'm getting at. By now you know the way all the terrorists were laid out. Four North Koreans, in two locations, had remote detonators. And they were in radio contact with all the other terrorists who were spread out on different floors, and even different buildings. Could the Seals have taken them all by complete and utter surprise? So swiftly and quietly that none of the North Koreans had an opportunity to detonate that bomb?\"\n\nPembroke looked troubled, but he defended his men.\n\n\"Mr. Watley, if you, a stock trader could do it, I assure you that the U.S. military is more than capable. Especially with the advance knowledge that you appeared to have had.\"\n\n\"Ah, but there's the rub, General Pembroke. Looking back, knowing what you know now... Would you have attempted an assault? With four fanatics who had their fingers on the button, would you have risked going into that building? Remember, we're still speaking hypothetically.\"\n\nThat got his attention. He actually paused to give the question some serious thought.\n\n\"No... No, I don't believe I would order such an action.\"\n\n\"What would you do then? How would you stop them if you couldn't risk a direct attack?\"\n\n\"My first priority would be interceding before they ever reached-\"\n\n\"No.\" I interrupted. \"You may have backtracked their movements. I have no idea where they spent that Friday, though I assume it was somewhere in or around New York. You can't get to them before they reach a populated area. You can't risk a direct attack. What do you do?\"\n\nPembroke harrumphed irritably. He was a smart man. He knew what I was getting at.\n\n\"In hindsight... if we had known how tenuous the situation was... we wouldn't have gone into the building or attempted to make contact. We would have fired several Hellfire missiles into that building, until it was just a pile of rubble and the nuclear device a twisted piece of scrap iron.\"\n\n\"Would there have been much collateral damage with an airstrike like that?\" I asked.\n\n\"No, very little, if any. With today's tactical weapons we could have razed that building down to the foundation without harming the adjacent sites. There would be some flying debris, but as the street in front on the building was almost empty, injuries to bystanders would be minimal.\"\n\n\"And what about the ambassador's family?\"\n\nPembroke paused. \"In this scenario, Mr. Kun's family would be an unfortunate sacrifice to preserve the greater number of lives.\"\n\n\"Well General,\" I said. \"You have an answer, at least in this hypothetical situation. If I could have given you more advance notice, three more innocents would have died. As well as the building being destroyed and an even bigger public relations crisis than you are facing now.\"\n\n\"But what makes you qualified to make that kind of decision Mr. Watley? We only would have used an airstrike if we deemed the risk of detonation too high. If the United States government is not willing to risk the lives of millions of New Yorkers, what gave you the right to risk them?\"\n\nI brought my hands up to rub my face. It was early in the day, but this was a wearying conversation.\n\n\"I don't have a good answer for that General Pembroke. Not one that would make sense to you. I can only say that on that day... I felt like I was in a unique position to do something about it. I did. It's done. There may be a legion of g-men whose job it is to second guess my actions, but personally, I've always found the 'what if' game to be a colossal waste of time.\"\n\nPembroke sighed. \"You are absolutely sure that you have nothing else to say?\"\n\n\"If I knew something that would help prevent another attack I would tell you in a heartbeat. But I don't.\"\n\nI stood up in preparation to leave.\n\n\"So,\" I said. \"Is this it? Do I fade back into obscurity? I'm not going to see a bunch of \"repairmen\" camped out in my neighborhood am I?\"\n\n\"No, Mr. Watley. No surveillance. Off the record, I have to commend you for your quick thinking with that video. Some elements would have tried to hound you indefinitely if not for the threat of you releasing it. Just between you and me, you are correct. Were the video to surface, we would be powerless to prosecute you for it. But I hope you understand that whatever fame you were to achieve would come at a great cost, both to yourself and the nation.\"\n\nI honestly didn't care. I was just happy that time had started moving again. That I could start really living again. But I felt I had to belly-ache a little just for appearance's sake.\n\n\"I understand. I can even see the logic of it. But it's still a kick in the teeth that I can save so many lives with no reward or recognition. It is its own reward, I realize. I feel good about how things have turned out. Still... I get the feeling that the government would be just as happy to see the back of me.\"\n\n\"I'm sorry you feel that way, Mr. Watley.\" Pembroke said, leaning forward. \"Because I assure you that the nation is very grateful for your service. In fact, I've been authorized to tell you that once some time has passed, you and your wife, along with the Kenjis, will be invited to a private audience at the White House.\"\n\nThat took me aback. I let out a low whistle. Under the circumstances it made sense, but I was still star struck at the thought of meeting the President.\n\n\"Also,\" he continued. \"You and your companions are going to receive a gift. For the next five years, you have been granted a moratorium on all taxes. Though if any of you were to leave the state, you would have to pay taxes in your new state. The moratorium only applies to Federal, New York, and New Jersey taxes. If you move, we may be able to work something out.\"\n\n\"Wow.\" I said, stunned. That was a very nice gift. Especially when you consider that I had made over seven million dollars in the stock market before I escaped the time loop. I thought that the feds didn't know about that until...\n\n\"I understand that you recently made quite a windfall. Very recently.\"\n\nI just raised my eyebrows in mock innocence. If the government had subpoenaed my banking information, they had done it in secret, but I wasn't exactly surprised that they found my new wealth. I wondered how it all looked from an outsider's perspective. I went from a white collar schlub, who was in debt up to his eyeballs, on Thursday... to a badass, kung-fu fighting, millionaire, scourge of terrorists on Friday...\n\n\"I am Batman.\" I whispered under my breath.\n\nShit! I'd forgotten where I was. I looked at General Pembroke. He had clearly heard me, from the thinly veiled amusement on his face. I coughed and quickly got us back on track.\n\nI thanked the General for the government's generous gift. No more mention was made of my newfound wealth, though in hindsight I'm sure it only added to the cloud of suspicion around me. We made small talk for a few more minutes. He gave me a card with his number on it in case I felt a need to get in contact.\n\nThen we made a small ceremony of saying goodbye, and I headed home.\n\nIn the end, Uncle Sam's gratitude outweighed his suspicion. I was contacted several times over the coming weeks to clarify some point for them. Sometimes I could be helpful, sometimes not.\n\nMy role in thwarting a terrorist attack never became public knowledge. The video remained unseen by the world at large, though for the rest of my life I would get random people walking up to offer me bubblegum. There was a large intelligence community in New York, and I was treated as a minor celebrity whenever one of them recognized me.\n\nFor the most part, once I walked out of the hotel that day, I put the events at 57<sup>th</sup> and Park Avenue behind me. I was just a regular citizen.\n\n...\n\nNow I had to go home and face my wife.\n\nWell technically, she had waited for me to finish my meeting with the national security adviser, so she was going home with me. But how much longer would it be our home? That was the question.\n\nWe spent an uncomfortable train ride to New Jersey, followed by an awkward drive home. I hadn't thought to worry about my Ford Taurus until we got back to New Jersey. Of course it had been towed, since I left it all week, so we had to get a cab.\n\nOnce we walked in the door, the dam burst.\n\n\"Please talk to me Sam! This silence has been killing me!\"\n\nWe had talked quite a bit over the last week, but I knew what she meant. We hadn't been talking about us.\n\n\"Come on,\" I said. \"Let's sit down and talk this out. I'm sorry I've put this off, but I really didn't want to talk about our marriage while we were guests of the government. I didn't want any distractions from the more important issues.\"\n\n\"They weren't more important to me Sam. Nothing is more important to me than our marriage. I know you don't believe-\"\n\n\"I believe you Julie.\" I interrupted.\n\nShe'd been prepared to try and convince me.\n\n\"You believe me?\"\n\n\"Yes, I believe you. I believe our marriage is the most important thing to you. I believe you love me. I believe if I gave you a second chance you wouldn't stray again.\"\n\nJulie's face showed a mix of confusion and hope.\n\n\"That's not our problem Julie. Feelings have never been our problem. Or more accurately, they have never been your problem. No your problem has been your actions don't match your feelings.\"\n\n\"I know,\" she sniffed. \"What I did was terrible. I never meant to hurt you.\"\n\nI sighed. What do you say to that? It was true, from her perspective. But it was so idiotic.\n\n\"Well... you did. More than I ever believed another person could hurt me. You took the best thing in my life and turned it into a lie. You made me question myself, at the most basic level. It took a long time for me to recover my dignity and prepare to move on.\"\n\n\"Move on?\" Julie asked. \"Does that mean you already have your mind made up? Do I not get a chance to fight for us... to try to make it up to you?\"\n\n\"I've had four years to think about this Julie. It would be pretty sad if I hadn't decided on a course of action in all that time. Maybe from your perspective it's not fair that you were in the dark while I was deciding the fate of our marriage... But in my view, it couldn't be more fair. You kept me in the dark for years, while you made me a fool of me. And you had chances. You had our entire relationship together. If you had ever stopped; if you had ever really put me first... Then there might have been hope for us.\"\n\nJulie had tears running down her cheeks. With over a week to process things, she had gotten over the hysterics that I had encountered every time I confronted her in the loop. But she was still prone to bouts of crying. I think the time spent in the hotel, with me treating her more as roommate than soulmate, had brought home to her how much things had changed.\n\n\"So what are you going to do Sam?\" Julie asked despondently. \"Do you not love me at all any anymore? Can you ever forgive me?\"\n\n\"I still care for you Julie. I don't know that I would call it love exactly. Originally, I had a revenge plan all mapped out for you, but I had a change of heart. I spent a lot more time with you over my last couple months in the time loop, and I remembered some of the things that made me love you in the first place. So... no scorched earth. The only thing you have to prepare yourself for, is I'm going to air the dirty laundry of all my 'supposed' friends.\"\n\nJulie paled.\n\n\"What do you mean?\"\n\n\"Well, in my original plan, I was going to get ahold of you and your sisters' diaries, and make copies for all your friends. Does Samantha know that Emma slept with her husband? Do any of the husbands know what happened at Claire's bachelorette party? I considered letting all that go. For your sake. But that bag full of assholes who used to call themselves my friends never showed me any consideration. And unlike you, they haven't built up any goodwill with me.\n\n\"I may not go to the trouble of providing evidence, but I'm still going to be sending a lot of emails. Let them do their own investigating. All the dirty little secrets, at least the ones you and your sister knew about, are about to be aired. I'm going to provide them with the courtesy they never extended to me. I hope they all choke on it.\"\n\nJulie was silent for a moment, trying to process what that all meant for her. Her circle of friends obviously didn't give a shit about her infidelity, they'd all known about it for years. But they might not be so forgiving when her demons came to haunt them. Then of course there was her sister...\n\n\"Sam, please don't do that to Emma. Please. Steve will leave her. She'll be devastated. She's wasn't like me, she didn't stray often. Please.\"\n\n\"My dear sister-in-law? My favorite member of your family, who told me that I was the brother she always wanted... and who had such a great time dishing with almost everyone she knew about how pathetic her sister's husband was in the sack?\"\n\nJust talking about this was getting me worked up again. Opening a pool of rage that I'd thought I had put behind me.\n\n\"No,\" I said. \"I'm not going to get into all the reasons why you and all your friends and family deserve what's coming. You're all going to get off fucking light. Especially you. Be thankful that I want to put this period in my life behind me. I'm still young. I can rebuild a better life for myself, and there no place in it for people like our old friends. So I'm going to send off my emails, then they cease to exist for me.\"\n\n\"What about me?\" Julie whispered. \"Am I just part of your past now?\"",
        "I took a deep breath.\n\n\"Yes.\"\n\nAs Julie curled into a ball and sobbed, I thought back over my decision. I had given some serious thought to maintaining some kind of relationship with my wife. Not as husband and wife. There was no hope of that. Put simply, I had no sexual desire for her anymore. The thought of going to bed with her made me squirm.\n\nPart of that squeamishness was the specter of all the other men she'd fucked while we were married. But the larger problem was that I could never forget why she had strayed. I would always feel like I had to put on a performance if I slept with her again. She'd killed the romance.\n\nI had considered maintaining some kind of friendship with Julie. She been my best friend for a long time. Personality wise, we were still a great fit, and I was sure that if we could put our marriage completely behind us, we could have a great friendship.\n\nBut I'd concluded that a friendship wasn't really possible. We would always be in the shadow of our failed relationship. And even if I might be ready to bury our marriage, Julie wasn't there yet. It would be exceedingly painful for her if I maintained contact, but withheld the affection she still craved. That sounded like a terrible situation for both of us.\n\nNo, a clean break was best. Julie was young, she'd get over it. And I didn't need to live with the ghost of my past love life.\n\nJulie made a few attempts to sway my decision, but she was playing against a stacked deck. My love for her was gone. I didn't cry, or rage, or waver. She couldn't get any traction when she tried to talk about 'us.'\n\nSo, long before our divorce was final, she resigned herself to losing me.\n\nThe divorce... The divorce was possibly the most amicable I have ever heard of. There were no lawyers involved. I drew up the paperwork myself, and Julie signed off on it. You can get away with that, so long as the husband and wife can agree on everything.\n\nOur divorce was simple. I took my clothes and personal items, and left everything else to Julie. That wouldn't have worked before the time loop, with all the debt we had built up. But I used some of my day trading money to pay off the house and Julie's car. The only debt I left her was her student loans. With only property taxes to pay, she could afford to stay in our McMansion.\n\nIt might seem like I was giving her an extravagant payout for being a cheater, but I think I got off cheap. If we had gone to court, she would have been entitled to another couple million, since I hit it big while we were still married. Julie didn't know exactly how much money I had, but she knew it was a lot, and she could have made a play for it.\n\nPlus, she was involved in saving the lives of millions of New Yorkers... and I never forgot that she took a bullet for me. She deserved something for that. I also gave large cash gifts to Sung and Mi-Sook.\n\nWhen all the paperwork had been filled out and filed, I packed a U-Haul and got ready to leave New Jersey and my past behind.\n\nJulie and I shared a last hug. I'll admit my eyes misted up. For what could have been and for what never was.\n\n\"If you can ever find it in your heart to give me another chance Sam...\"\n\nI just smiled sadly. We both knew this was the end.\n\n...\n\nI settled into my new apartment in downtown Manhattan, bordering Central Park. It cost me 1.5 million. Even after paying off Julie's bills and buying a new home, I still had over four million in the bank. Combined with my tax holiday, I was pretty much set for the foreseeable future. With a conservative investment plan I could live off that money for the rest of my life. And since I'd been working in an investment firm since getting out of college...\n\nBut I was too young to retire. I had gotten my fill of the carefree retirement life during the time loop. I was looking forward to a new challenge.\n\nSpeaking of which, my days at Broadwell &amp; Marx were over.\n\nDuring my stay at Hotel Fed, I had called off work, using the same excuse I did the first day: marriage troubles. To say they were unsympathetic would be an understatement. The company culture was all cut-throat business. There was no place for allowing one's personal life to interfere with the bottom line.\n\nSo I would have been on thin ice if I had decided to return there. Luckily, I never planned on staying. The time loop had killed a lot of my enthusiasm for my profession. I'd spent six years after college reading the financial news like it was a Bible. I was constantly on the hunt for the next big thing, or the opportunity to beat the market, for the company if not myself.\n\nDuring the loop, it was like I was playing a video game with cheat codes. Making money on the stock market became as easy as breathing. I'd turned twenty thousand dollars into seven million, all for myself. I couldn't muster much enthusiasm for finding Ma and Pa Kettle another 0.3 percent on their mutual fund.\n\nI still kept a finger in, doing market research for my own investments, but my days of being a corporate drone were over.\n\nAs it turns out, Broadwell &amp; Marx wasn't too enamored with me either. I went in already planning to resign, but it soon became clear that upper management was perturbed, nay, pissed the fuck off with me.\n\nI believe I have previously mentioned that the head honchos spied on the personal trading accounts of their underlings. Aggressive personal trading was encouraged.\n\nWell, my rise to riches had not gone unnoticed. My supervisor, Ben, clued me into all the frosty looks and snide remarks I was getting.\n\n\"Sam, what the hell did you do? Scratch that. Everyone in the company knows by now what you did. How the hell did you do it? Erickson assigned three guys to dismantle every trade you booked and figure out what formula you used. They've been working on it all week.\"\n\nAhh, now I got it. They weren't mad that I had become a millionaire overnight. They were mad that I hadn't shared. And they had absolutely no idea how I'd done it. Talking to Ben some more I got the full picture.\n\nStock traders were always looking for a mathematical formula that will out-perform the market. The problem is that there is too much human input in the market for a computer to accurately predict stock movements. Humans don't behave predictably, so neither do companies or investors. That doesn't stop math eggheads from trying to create prediction models.\n\nAround Broadwell &amp; Marx there were two theories as to how I became a rainmaker overnight. The first was that I had developed my own formula, but no one really believed that. It was bandied about, but everyone thought the second scenario was much more likely...\n\nThat I cheated somehow, gamed the system.\n\nMy final trading order had 217 individual stock trades over the course of July 15<sup>th</sup>. And not one of them was a loser. I'd progressively made money on every single trade, which was a success rate close enough to impossible to make no difference.\n\nBut all the companies and financial products I traded were much too varied for me to have been using inside information, which is the most common form of investment fraud. I seriously doubted that the SEC would give me a second look. In the larger picture, seven million was chump change on Wall Street, and I knew any investigation would turn up nothing. Because there was nothing to find. As far as I know there is no law against using financial information gleaned from time travel.\n\nOf course I couldn't tell Ben, or anyone else how I had done it. He, along with all the other execs at Broadwell &amp; Marx assumed that I had found something, some way to predict stock movement, probably illegal. They didn't care about the legalities of whatever I had done, they were just burning with greed to get their hands on my method.\n\nWell they were doomed to disappointment, and they knew it. They wouldn't have shared either. Not that I could. This just gave me another reason to quit. I had set myself up for unreasonable expectations and sparked envy in my superiors.\n\nSo I was unemployed.\n\nI settled into my new apartment and looked for work. I took a page out of Sung's book and started working part time as an interpreter. I worked for the New York court system mostly, but I was also hired by corporations to ease negotiations with foreign companies. I found it to be very enjoyable and surprisingly lucrative. It also allowed me to keep in practice with the languages I had learned, and gave me incentive to keep furthering my linguistic studies.\n\nMy interpreter work, along with managing my own portfolio, had my bank balance growing at a steady rate. Enough that I rarely think about money at all these days.\n\n...\n\nMy love life was satisfying, if uneventful.\n\nThe first woman I attempted to pursue was Mi-Sook. She was athletic, sexy, and dangerous. She was the human equivalent of a panther. Unfortunately, her opinion of me ranked right up there with cat shit on the bottom of her shoe.\n\nI'd hoped that our common interests of hapkido, long walks on the beach, and saving New York from terrorists, would serve to draw us together. Combine that with the opportunity to actually get to know each other over time... Uh, no. I was forced to admit that she would never be a friend, let alone a love interest. I never found out what exactly she had against me. Maybe she was just a miserable bitch.\n\nI had identified a number of possible love interests while I'd been in the loop. It took me a while to work through them all, but I found that there wasn't any real spark with any of the women I had set my sights on.\n\nNot that I didn't enjoy the process. I was quite content as a bachelor, and even if I didn't have \"the one\" in my life, I had a healthy dating life. I went out with about a dozen women over the next couple years, with relationships ranging from two weeks to six months.\n\nAs my thirtieth birthday was approaching, I was starting to feel a little unsettled. I'm a romantic at heart, and up until the end I had greatly enjoyed being married.\n\nAbout that time, my building got a new tenant.\n\nThe top floor of the building I lived in had four apartments, all around 2300 square feet. I had the northeast corner, facing Central Park. The unit next to me had been vacant for a couple weeks, since an elderly dentist and his wife left for warmer climes.\n\nI was relaxing on my balcony when I got a call from Fred, the building manager.\n\n\"Mr. Watley, sorry to inconvenience you, but would you be available to do some translating this afternoon?\"\n\n\"Fred, I told you to call me Sam. And sure, I can help. What do you got, another Guatemalan plumber?\"\n\nI'd become the building's go to guy whenever someone ran into a language barrier. I was now fluent in seven languages, with a smattering of four more, with an emphasis on the tongues most commonly heard in the Big AppIe. So I could usually help. I didn't mind, it was a great way to get to know my neighbors.\n\n\"No, Mr. Watley, not a contractor this time. I scheduled a viewing of the unit next to you with Jean Fournier, a real estate broker. Jean helps foreign clients, mostly French and German, find housing in the city. Unfortunately, he's had some kind of family emergency and can't make it today. But his client doesn't want to reschedule. I've got three more buyers scheduled to look this week and they don't want to miss their window.\"\n\n\"So, this client, does he speak French or German?\"\n\n\"She. And she speaks French. Jean says she speaks passable English, but hey, if our resident language expert is right next door... This could be your new next door neighbor, so if you get a crazy cat lady vibe give me the high sign and we'll bum rush her.\"\n\nI laughed. \"Sure thing Fred. Send me a text when she gets here and I'll meet you at the unit.\"\n\nWell, Ivette was not a cat woman, unless you meant in the Michelle Pfeifer sense of the word.\n\nI was basically useless as an interpreter that day because I kept getting tongue tied around her, which was a problem I hadn't had since college. Luckily, her English was more than just \"passable,\" so my services weren't really required.\n\nRather than acting as interpreter, I followed her around the apartment like a love struck puppy. I'm surprised she wasn't freaked out by the creep who lived next door. I must have made a better impression than I thought, because when she left that day, she had an agreement to rent the unit, and a date with me.\n\nThe... \"spark\" that had been missing with all the other women I'd dated, was a roaring inferno with Ivette. We just clicked right from the beginning. She was smart. She was funny. And she was drop dead gorgeous. In fact, objectively, I would have to say that she was out of my league. But apparently she was feeling the same attraction that I was, and for that I thanked my lucky stars.\n\nWe had so much in common it was scary. We were both former white collar professionals who had struck it rich. Me in the stock market, and she in the lottery, which she was semi-embarrassed about. I had no judgements, it's not like I'd achieved my own wealth through hard work. I was more surprised that they had a lottery in France.\n\nWe'd both left our jobs, in finance and marketing respectively, to pursue careers in our hobbies. I'd turned my love of languages into a job as an interpreter, and Ivette was pursuing a career as a classical musician.\n\nShe was even a kick ass martial artist!\n\nWhen she found out I was a regular at Sung's dojo, she invited herself along and put on a show. She shared my background in krav maga, and she also practiced savate, which is basically French kickboxing. If I'm honest, she was better than me, and only my size advantage made us equal sparring partners.\n\nWhen we made love, I felt like I'd only experienced a pale imitation compared to the bliss I found with Ivette.\n\nShe moved in with me six months later when her lease was up, and I was contemplating proposing to her. There was only one thing standing in the way- we were both hiding something.\n\nIn my case, it was obvious: the loop. The time loop was the singular most formative experience in my life. I felt like I couldn't hide it from Ivette if I planned to spend the rest of my life with her. Plus, being unable to tell people about the loop left gaps in my life story. I had a bunch of skills, with little to no backstory. And I had made a killing in the stock market overnight, with no way to explain it.\n\nI had 6-7 year void in my life, since I no longer had any contact with former friends or colleagues. All my current friends were recent additions.\n\nNew home, wealth, friends, job... I was a man of mystery, and Ivette couldn't help but notice that I was hiding something.\n\nLikewise, I could tell that Ivette was holding something back. I'd chatted with her folks back in Paris over Skype a couple times, and there were awkward pauses and things left unsaid. It was remarkably similar to interactions we'd had with my parents.\n\nMy thoughts were that perhaps she had gone through some kind of trauma, an abusive relationship or something of that ilk. So I didn't pry, and Ivette didn't pry into the gaps in my life... But I think we were both itching to open up fully to each other.\n\nFinally, one night as we preparing for bed, Ivette turned to me.\n\n\"Sam, I love you. I think we both want the same things from this relationship-\"\n\n\"Well, not quite.\" I said, and brought both hands up to chest level and made the \"honking\" gesture.\n\nIvette chuckled, but got right back on track.\n\n\"Stop it, you dork. I'm being serious here. I've never felt this way about anyone, including my ex-husband. But for this relationship to last... I can't have secrets from you.\"\n\nIt was kind of her not to say \"we can't have secrets,\" but it was implied. And as it happened, I agreed with her.\n\n\"You're right.\" I sighed. \"I think we've both got something to tell each other. I'll admit I've been putting this off. My story... it's going to sound crazy. I've got some people who could verify it, but...\"\n\n\"Ha! I'll bet after you hear what I have to tell you, you won't be so quick to throw around the word crazy! My story is nuttier than squirrel turds.\"\n\nI burst out laughing. It was always shocking to hear Ivette, in her cultured French accent, use crass southern idioms. I think she looked them up on the internet and threw them into conversation just to get a rise out of me. Well, she had effectively broken the tension.\n\n\"I'll go first.\" She said. \"Before I lose my nerve. Here, it will be easier if you watch something first.\"\n\nIvette had her laptop next to the bed. After we both got comfortable, leaning back against the headboard, she started a video that she queued up.\n\nWhat I saw was a montage of security cam footage. It was taken in a museum, during some kind of hostage situation. Masked men, some with guns, and others with machetes, were standing guard over several civilians sitting in the museums galleries.\n\nAs I watched, I realized I had seen some of this footage before. It was another terrorist attack, this time by Muslim extremists. It had taken place around the same time as my own run in with terrorists.\n\nI remembered it now. Several of the terrorists had been wearing bomb vests. When the police raided the building, they found that several local business people, who were there on their lunch hour, had incapacitated most of the terrorists, including all the ones with bombs.\n\nAs I watched, the woman who had done most of the fighting started mowing down the hostage takers. This woman, in sensible business attire, and frankly, kinda sexy, took out five terrorists. She took the first two down with a flurry of kicks and punches, before using a gun she took off one to dispatch the others. The press had dubbed her Fleur-de-Lis, after the DC comic book heroine. It had been a couple years since last I had seen this footage, but this time I was paying much more rapt attention.\n\nBecause the woman on screen was sitting beside me.\n\nThe playback ended, and there were several moments of silence as I tried to comprehend what I had just seen. This was one fucking gigantic coincidence. And I wasn't sure if I believed in those anymore.\n\n\"Well? Aren't you going to say anything?\"\n\nIvette had been holding my arm while we watched. Her grip had been steadily tightening as my silence got to her. I was stunned, but Ivette couldn't know why. Maybe she had been hurt before by men who were star struck or intimidated.\n\nI put up a hand in a calming gesture.\n\n\"Wait here a moment, baby. I've got to get something, then we can have this conversation.\"\n\nI got up and went to the closet. I pulled away a board in the floor, revealing a small safe that Ivette didn't know about. Inside was some paperwork, a flash drive, and an I-pad. I grabbed the I-pad and took it over to the bed, plugged it in, and turned it on.\n\n\"Here,\" I said. \"There's something that you should see.\"\n\nI sat back down beside her, and played her the last ten minutes of the video the North Koreans had shot, ending with the triumphant entry of yours truly. My part was over in less than two minutes, but the rest was to establish exactly what had been going down.\n\nBy the end, Ivette's hands were gripping my arm so tightly that I was afraid that I was losing circulation in my hand.\n\n\"Sam... when did this happen?\"\n\n\"A few years ago. I didn't make the news like you. The terrorist attack did, but it was downplayed considerably, and my identity was left out entirely.\"\n\n\"You should be thankful for that. I was quite famous for a while, but I started getting death threats immediately. With the number of Middle Eastern refugees streaming into Europe, and my fame in that world... I was tired of not feeling safe, so I changed my name and moved here.\"\n\nI wrapped her up in a hug.",
        "\"I got some good advice on that front, and I've been happy to remain anonymous. I can't believe I didn't recognize you. These two attacks happened around the same time. I remember being very interested in your story, because it mirrored my own in some ways. Hey! You changed your hair! Damn. That red looked good on you.\"\n\n\"Sorry sweety. It was just too noticeable. Maybe I'll let it grow out again. You say you followed my media coverage, so your terrorist attack happened first?\"\n\n\"Uh, I couldn't tell you exactly. The weeks immediately after were pretty hectic. I barely had time to contemplate the holiday.\"\n\n\"Holiday? What holiday?\" Ivette asked.\n\n\"Why, National Tapioca Pudding Day of course. To think that terrorists would attempt to sully that day of days...\" I chuckled.\n\nI looked to Julie to see if she was amused, but she had gone bone white.\n\n\"July 15<sup>th</sup>?\" She rasped. \"Are you telling me that your attack was on July 15<sup>th</sup>?\"\n\nI was confused by her sudden intensity.\n\n\"Yes... How do you know that? I wasn't aware that anybody actually celebrates tapioca pudding day in America, let alone in France.\"\n\n\"I looked it up.\" Ivette said. \"The Louvre attack... it happened on July 15<sup>th</sup>, 2016...\"\n\nNow we were both as pale as ghosts. It couldn't be... Could it? The same day?\n\nIvette turned to me.\n\n\"Sam, have you ever had d\u00e9j\u00e0 vu?\"\n\nBut that's another story...\n\n....\n\nTHE END"
    ],
    "authorname": "kublicon",
    "tags": [
        "betrayal",
        "cheating",
        "consequences",
        "groundhog day",
        "nuclear bomb",
        "time loop"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/play-it-again-sam-pt-06"
}