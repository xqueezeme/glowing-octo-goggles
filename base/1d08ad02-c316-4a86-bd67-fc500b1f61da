{
    "title": "The Big Tits Club Ch. 01-04",
    "pages": [
        "A virgin high school teenager is the \"safe\" guy friend for six beautiful, busty babes. The girls flirt and tease him, but aren't going to ruin their friendships by crossing the line of physical intimacy. But then one day, things start to change.\n\nThe complete story includes lesbianism, anal, threesomes, and group sex. If any of that bothers you, find another story to read. This story and all other stories I've written are owned by me, and publishing them in any form without my express written consent is prohibited. All characters in this fictional story are at least 18 years old.\n\nI hope you enjoy.\n\n****\n\n- PROLOGUE -\n\n****\n\n\"No, I'm not fucking any of them.\"\n\nSome days, it felt like I had to say some variation of that sentence fifty times. Really, it was more like a half-dozen, but that's still a very high frequency for such an uncommon statement. To be honest, though, I couldn't really blame them. Had I been in their shoes, I might've asked the same.\n\n\"No, I'm not gay.\"\n\nOkay, I didn't have to say that sentence FIFTY times. I mean, at least most guys knew better than to ask another guy if he was gay. That's just rude. I wished more people would be mature enough to understand it was indeed possible for a guy to be friends with a group of gorgeous young women without banging any of them. But the follow-up question came quite often, as if it was the only reasonable explanation for why a guy like me would NOT be fucking one of \"The Big Tits Club\" girls.\n\nI really hate that name, by the way. I understand the name, but I still hate it. It's immature. It's objectifying.\n\nBut it is undeniably... accurate.\n\nLet me be clear and state for the record that none of us came up with that nickname. As far as I can tell, it was coined by the Varsity football team during our junior year, and the name spread like wildfire. Nothing we could do about it. As I said, it was... accurate. Belle, Mari, Alice, Sam, Zofi, and Naimh: six hot girls, every single one of them a D-cup or bigger.\n\nOh, and me: the lone male in our clique of best friends. Alice once called us \"The Magnificent Seven\". After \"The Big Tits Club\" nickname took off, Mari tried to rename us \"Sam's Club\" after our de facto leader (it didn't work). Belle tried \"Matty's Angels\" (didn't take, either). Eventually, Sam suggested that the girls just own it - be proud of their curves and take the nickname for a compliment. We were \"The BTC\", even me.\n\nIt wasn't always this way. Well, obviously, the girls had to grow into those figures, and Belle and Zofi didn't get up to the D-cup range until the end of junior year. What I meant was: we hadn't all been friends forever and didn't become a group of seven until just last year. The group grew in bits and pieces organically over time. But at the core of the BTC were me and Belle.\n\nI was the only child of two lawyers who, in my opinion (and theirs), should never have been together. As Mother frequently reminds me, my father only married her because she accidentally got pregnant. My earliest memories are of them fighting. They were always fighting. Not physically or anything like that, but they were both verbose people with enormous lexicons and a deep-rooted conviction that THEY and only they had the correct position on any number of issues.\n\nMy parents bought a big house in the Silicon Valley suburbs planning to live the American dream and raise a big family, but as far as I could tell, they hated the act of raising a baby so much that they never had another kid, and they weren't too fond of each other, either. Instead of filling the extra rooms in the house with siblings, each parent got a home office in which they seemed to spend the majority of their time avoiding each other. That they also isolated themselves from me was just collateral damage. How they managed to NOT get divorced until after my eighth birthday, I'll never know.\n\nAt least they became pretty good friends with the Kramers, our next door neighbors who had a daughter a month older than me. Annabelle's dad was a surgeon and her mom a stay-at-home wife. They were both sweet and loving and would have had more children if not for her mom's medical issues. Little blonde Belle and I played together as toddlers, and my parents were happy to dump me with the Kramers all day every day. Oh, they came to pick me up at night and put me to bed in my own room, but I spent more time at Belle's house than I did my own. I certainly have more fond childhood memories of Belle's mom than I do of Mother.\n\nBelle and I were in junior high when her mom passed away. I was as heartbroken as she was. Belle's dad withdrew into his work after his wife's death. My mother had always been a workaholic, and was partner in a firm that kept her at the office close to eighty hours a week. So that left Belle and me with a lot of time alone. Well, not alone. We had each other, and she was the sister I never had. We walked home from junior high together, and then rode our bikes to high school. The day after I got my license, Belle was strapped in the passenger seat the next morning for our first drive to school. We didn't even need to discuss the matter. It was just assumed she would be there.\n\nWe spent all afternoon at either her house or mine. Belle's dad at least always came home for dinner, so the three of us would spend that time together. But after dinner I would go into my big empty house alone. Maybe two nights out of five during the weekdays, Mother would come home before I fell asleep. She worked a lot of Saturdays as well. Sundays she tried to make an effort to bond with her only child, which usually involved having brunch together and awkwardly talking about school and stuff before disappearing for the rest of the afternoon. But I could tell she was going through the motions to assuage her own guilt and that was it. Didn't matter. I stopped caring once I started high school.\n\nBelle was the sister I never had, but we weren't best friends. At school we lived our own lives. In elementary school I hung out with boys who liked to play soccer and two-hand touch football in the field. I had no idea what Belle did during recess, nor did I have any inclination to find out.\n\nI did know that Belle's best friend since second grade was Mariangel Hernandez. Even if they got assigned to different classrooms, their bond remained and they would seek each other out during lunch or recess. Belle was the confident, outgoing one while Mari was the shy wallflower. Mari would often come home with us to hang out after school, so I got to know her pretty well. She was very nice and could become quite talkative once she got to know you. But she was naturally shy and didn't like getting attention from boys. She dressed to hide her figure, started eating a lot, and got rather chubby (which caused her no shortage of self-esteem issues). And then came Sam.\n\nSam didn't become friends with me or Belle until high school when she adopted Mari. I don't know exactly what started their friendship. Sam was super outgoing, totally magnificent, and a complete attention-whore. Maybe girls like that just like to have shy wallflower friends, y'know? Anyway, Sam had ALWAYS been popular, ever since her family moved to the Bay Area from Australia in seventh grade. She was gorgeous, and she knew it. She strutted around campus like she owned the place, and in some ways she did. Getting from one side of school to the other in-between classes could sometimes be a challenge due to the crowding in the halls, and yet those crowds would magically part like the Red Sea when Sam came walking. Back then, she was still a brunette. She didn't start dying her hair blonde until halfway through freshman year, but once she did, she got even MORE popular, if you can believe it.\n\nAs for me, I started playing Magic: The Gathering in junior high and hung out with a group of like-minded boys and one girl: Ailiseu Choi. Her first name meant \"iris\" in Korean, but she was the total opposite of a pretty flower. Alice had no accent to speak of, was taller than most of the boys, very athletic, and not afraid to tackle someone on the field. She'd started playing soccer and two-hand touch football with the boys back in fourth grade, and while the two of us had never been friends outside of recess back then, we were friendly acquaintances.\n\nEverything changed in junior high. Alice started becoming... well... a GIRL, and all of a sudden guys started treating her differently. Now perhaps because I already spent so much time with Belle and Mari, I knew how to act around a female of the human species and didn't get all weird around her. Alice appreciated that and started spending more and more time with me. It got to the point when the school newspaper's gossip column speculated that we were a new couple. At first, both of us denied we were romantically involved, but after a while it seemed easier to just ignore the rumors and even go along with them a bit. Boys certainly bothered Alice less when they believed she was my girlfriend, and once we realized that, we mutually agreed to just let the rumor mill do its thing.\n\nLooking back, if any one thing was the genesis of the BTC, it was my family's backyard swimming pool. Now Silicon Valley isn't super cold, but it isn't a super-hot climate either. Houses with swimming pools weren't common, but ours had one, even though my parents had never really used it. My parents had always wanted \"the best\". I think they just liked the idea of entertaining guests in their expansively landscaped backyard with a swimming pool.\n\nThe pool was empty for most of the year, but during summer breaks I would ask my mom to have it filled up. Belle and I would swim laps for exercise in the afternoons a few times a week, and Mari joined us pretty often as well. Neither girl was into sun-tanning or anything like that, so the pool was really just a way to cool off on a hot day before we returned indoors. But then Sam and Mari got to being friends, Mari told her I had a pool at the end of freshman year, and all of a sudden I found my shoulders caught in a death-grip by a gorgeous blonde who put her face inches away from mine and gasped, \"You have a POOL?!?\"\n\nSo that's how I found myself one June afternoon before my sophomore year standing in the kitchen overlooking the backyard trying NOT to gawk at the two beautiful teenagers reclined on lounge chairs wearing skimpy bikinis twenty feet away from me. See, Sam was into sun-tanning, as was her best friend Zofi. Dark-haired and blue-eyed Zofia Zelazowska was a classic Eastern European beauty: tall and slender like a high-fashion model. I had long known she was Sam's best friend, but never really interacted with her much, other than to know she was soft-spoken and very sweet.\n\nSam had invited herself over to check out my pool, and I had been too dumbstruck to do anything but agree. I get the impression Sam gets away with that sort of thing a lot. A pretty blonde says what she wants and people just sort of let her have it, and I was no different. I may have been accustomed to hanging out with girls like Belle, Mari, and Alice, but that didn't mean I was blind. I knew full well that my female friends were growing up, even Belle, and while I was careful to not openly gawk at them like so many other teenaged boys, I still paid attention.\n\nI paid a lot of attention Sam. Zofi, too. She was gorgeous. And Mari, too, who was beautiful in her own way. And... Alice. Yeah, I paid attention to Alice. Even though she never wore makeup and made zero attempts to be \"feminine\", she was still obviously female.\n\nBut not Belle. No way. Nuh-uh. Yeah, I understood that we weren't related. But I'd literally grown up sharing cribs and playpens with the girl. Belle was my \"sister\", and I simply didn't feel that way about her. I could let myself fantasize about my buddy Alice every now and again, but not Belle.\n\nThat's not to say she wasn't beautiful. She was quite pretty. Belle was a petite strawberry blonde with piercing green eyes, a delicate face, and became a stacked little hottie at age eighteen despite never getting taller than 5'1\". She was eminently \"fuckable\" as the guys would say, but she was also my \"sister\". I simply couldn't think of her that way. And lest you get too far ahead of yourself in my story, I'll say it loud and clear upfront right now:\n\nNO, this story does NOT end with Belle and me falling in love, getting married, and living happily ever after. It isn't that kind of story.\n\nThinking back, I'm not even sure why Sam got so excited about me having a pool. She and Zofi barely used it that day. If all they wanted to do was lay out in the sun, they could have done so from anyone's backyard. But I suppose that's not really as much fun as laying out near a large body of water.\n\nMari, having been the one to tell Sam about my pool, had been the one to bring Sam and Zofi over to my house in the first place. That meant Belle came over as well, the five of us spending all afternoon hanging out. Belle, Mari, and I did our laps. Sam flirted with me (she flirted with everyone). Zofi seemed surprised to find out I wasn't gay. I ordered pizza for everyone. We all had a REALLY good time, and long story short, Sam and Zofi started coming over to my house more often, especially once they realized my mother was never home.\n\nThat summer was also the first time Alice's family didn't go back to South Korea for summer break. She wanted to play Magic: The Gathering with me, and she happened to come over on a day when all the girls were hanging out at the pool and promptly complained that I'd never invited HER to go swimming. She was a super athlete after all, and could swim like a fish. She got along pretty well with the other girls, especially since Sam and Zofi already thought she was my girlfriend (even though we tried to explain otherwise). Five hot girls started making my house (and pool) a regular hangout joint for the summer, and that was really the start of the BTC.\n\nThe final member of the BTC joined toward the end of junior year. Naimh O'Brien was a classic Irish ginger full of freckles and piercing green eyes. She transferred in early March, brand new to America and quite intimidated by everything. She had two classes with me and the teachers had a hell of a time pronouncing her name (it's \"Neeve\", rhymes with \"Steve\"). Sam invited her to come hang out, and the rest is history. I was admittedly smitten the first time I saw Naimh, the most gorgeous thing I'd ever seen, but once she became part of the club I knew better than to even think about hooking up with her.\n\nThat was actually a rule: \"Nobody dates Matty\".\n\nI mean, I was allowed to date, and I did go out with three different girls during high school - I just wasn't allowed to date any of the BTC. Sam made up that rule halfway through sophomore year when Zofi got it into her head to try kissing me. For such a beautiful girl she could be awfully shy, and she'd never kissed a boy. We were all hanging out at my house, she and I got to talking about boys and dating, and she timidly asked if she could kiss me. I'd never kissed a girl before, and the idea of kissing such a gorgeous creature as Zofi really excited me, so I was quick to agree. It was really nice, Zofi seemed to think so too, and we had two more makeout sessions before Alice caught us and told everyone else.\n\nZofi made clear she had no romantic intentions toward me, and to be honest, I didn't have any romantic intentions toward her either. Everyone realized me hooking up with any one of them would upset the balance of our group friendship, and so Sam made them all swear not to ever try to seduce me. After all, it was my house and my pool that they all kept using, so it wasn't like they could kick me out of the club.\n\nEveryone kept that promise. Nobody tried to seduce me.\n\nWell, not until senior year.\n\n****\n\n- CHAPTER 1: The BTC -\n\n****\n\n\"Hey, Matty?\" Belle called. \"I need you to get me the madeleine pan up there.\"\n\nGlancing over my shoulder, I saw Belle pointing to the top shelf of one of the cabinets. I set down my knife and the carrot I'd been chopping, took three steps to the left, and reached up to grab the pan. It was a regular occurrence for me to grab things on high shelves for Belle. She'd grown as tall as she would ever get by age fourteen and stopped at only 5'1\", slender yet stacked, like a lingerie model at four-fifths scale. Her mom had been a short, busty little woman, too. On the other hand, I hit my growth spurt right when Belle stopped and now stood 6'1\", taller even than Belle's dad.\n\nBelle said thanks and busied herself pouring batter into the molds. Today was the Wednesday after Labor Day. Tomorrow would be the first day of school, and she wanted to bring treats for our friends. Her dad had not yet come home from work, and even though I didn't actually live in this house, I was making dinner for the three of us.\n\nI knew my way around the Kramer kitchen better than my own. I certainly ate more dinners at their house than mine. Belle and I shared the space on autopilot, working in silence without the need to chit-chat. After eighteen years together we were basically family, with no worries about personal space. When she had to use the sink, Belle simply tapped my hip with her forearm and I immediately slid to the side. When I needed to get glasses from the cabinet above her head I simply reached over her head without so much as an \"excuse me\".\n\nThe table was set by 6:17pm, which was about the time Mr. K always got home after sitting in Silicon Valley rush hour traffic. He came in from the garage, took one big sniff, and smiled. \"I can tell Matt is cooking today. It smells so much better than yours, Belle.\"\n\n\"Dad!\" Belle exclaimed, scandalized. But she immediately started chuckling along with him. Mr. K's cholesterol levels had been going up, so Belle had taken it upon herself to start feeding him \"cleaner\" meals. But it was our last day before school started, so I'd made barbecue ribs and French fries (although Belle had talked me into baking the fries). I still made steamed carrots, already knowing Belle would nag her own dad into eating them as payment for each bite of the ribs.\n\nJust like we did most nights, the three of us ate our meals in relative silence. Again, there was no need to fill the space with meaningless conversation, although I did ask Mr. K if he'd heard the latest news about the 49ers. We chatted about football for a couple of minutes before returning to the food. Then Mr. K asked us both if we were excited about going back to school.\n\n\"Not really,\" I admitted. \"It's been nice to just be lazy around the house all day.\"\n\n\"True,\" Belle chimed in. \"But it'll be nice to see some of our friends.\"\n\nI snorted. \"Our friends have been lazy around MY house all summer.\"\n\nBelle shrugged. \"Well, other friends beyond the BTC. Don't get me wrong, I love hanging out with the girls. But there are some people I haven't seen in three months and have no idea what they've been up to.\"\n\n(Before I get too far, let me explain that we were in high school during a period before social media or cell phones. I know, it was practically the Stone Age.)\n\nMr. K nodded, but arched an eyebrow and gave his daughter a curious look. \"Are there any boys in this category of people you're looking forward to seeing?\"\n\n\"Dad!\" Belle exclaimed again before rolling her eyes.\n\nSo Mr. K turned to me. \"Has she talked about any boys she thinks are cute?\"\n\n\"Yes, but that's as far as I'll admit.\" I grinned and mimed zipping my lips shut. \n\n\"Is there one boy in particular?\"\n\n\"Dad!\" Belle screeched.\n\nI stared studiously at my plate, zipping my lips again.\n\n\"Is he a good kid or one of those bad boys?\"\n\n\"Dad!\"\n\nI finally spoke up, saying, \"Relax, he's a good kid. And if he turns out to not be such a nice guy, I'll pound his face in.\"",
        "\"My man.\" Mr. K grinned and raised his hand for a high-five across the table.\n\nBelle rolled her eyes as our palms slapped, and she shot me a look. \"I am never telling you about boys ever again.\"\n\nI shrugged. \"You'll tell Mari, and Mari'll tell me.\"\n\n\"Ugh.\" Belle buried her face in her palms for a moment before glaring at her dad. \"Aren't you gonna ask him if there are any girls he's looking forward to seeing?\"\n\nI snorted. \"Yeah, right.\"\n\nMr. K sat up straight and measured my expression. \"What's wrong? Surely there's some girl out there you think is hot and are looking forward to seeing again tomorrow.\"\n\nI shook my head. \"I got all the hot girls I need hanging out with me all the time.\"\n\nMr. K exchanged a look with Belle. He knew about the \"Nobody dates Matty\" rule, but every now and again he looked like he wanted to check and make sure that The Rule was still in force. She just shrugged.\n\nSo Mr. K looked back to me. \"I meant someone you might actually be able to date.\"\n\nI waved him off. \"I haven't had a girl approach me in more than six months. And even the ones I might be interested in all get scared off by the BTC.\"\n\nBelle frowned. \"We do NOT scare them off.\"\n\nI shot her a look. \"Were you not there when I started talking to Ashley Mitchell and Sam suddenly joined us with a smile full of teeth, thrusting her big power boobs out an extra couple of inches?\"\n\nBelle snorted and choked a little bit. She coughed, thumped her chest twice, and managed to say, \"I forgot about that.\"\n\nMr. K looked at his daughter. \"Doesn't seem very fair.\"\n\nI shook my head. \"I'm not complaining. Seriously, it's fine.\"\n\nMr. K's eyebrows both went up. \"Well, it's a brand-new year. Anything can happen.\"\n\nHe was totally right.\n\n****\n\n\"I hate school, I hate school, I hate school,\" Belle muttered as she slammed the passenger door shut on my minivan.\n\nBack before I'd turned sixteen, Mother offered to buy me a new car. Expensive gifts like that were one way she felt she was still fulfilling her parental responsibilities in lieu of spending quality time with me. She thought I'd go for a fancy sports car, but I'd surprised her with the minivan request. She understood after the first day I drove the entire BTC to the beach.\n\nBelle was still muttering about how she hated school. I didn't respond except to arch an eyebrow and wave to Mari, who stood just outside Belle's window. The curvy Latina crossed her arms underneath her massive rack, not to tease me or anything, but more to hug herself. She gave me an apologetic look and continued through the parking lot toward her own car.\n\n\"What's wrong?\" I asked my 'sister' with genuine concern. \"Or at least, what's happened since lunch? Everything was fine the last time I saw you.\"\n\nBelle scowled and stared out the front window. Several of her strawberry-blonde bangs had come loose from her ponytail and framed her face in way that simultaneously made her look disheveled and quite pretty. Her pale green eyes were daggers, half-narrowed and ready to skewer anyone who stepped into her path. \"Darryl,\" she spat.\n\nI blinked and sat up straight. A minute ago, I had been ready to start the ignition, back out, and drive us home. But I let my hand fall away from the keys and pivoted between our two bucket seats to slide back and sit down on the middle bench seat. Reaching out, I set one hand on her shoulder reassuringly.\n\nThat simple touch broke the dam, and the waterworks started flowing. Belle sobbed, slipped out of her chair, and I helped her climb semi-sideways into my lap as the tears streamed down her cheeks. Our height difference made our heads more or less at the same elevation, and I kissed her cheek before trapping it against the side of mine while I continued to squeeze her tight.\n\nEventually, the tears began to subside. I waited her out, stroking the side of her arm and shoulder.\n\n\"Talk to me,\" I encouraged.\n\n\"Darryl's an asshole,\" she muttered, wiping her eyes.\n\n\"I figured. What did he do?\" Darryl was the boy Belle didn't want me talking about to her dad. Last weekend, we'd been at the mall so Belle and Mari could shop for back-to-school clothes. As usual, I was their fashion consultant to give them a male opinion for how hot they looked in their outfits. We ran into Darryl and two of his buddies, and although we'd never been friends, there had been some flirting and Darryl had expressed interest in seeing Belle at school. With our academic calendar starting on a Thursday, Belle had been pent up with excitement all week looking forward to seeing him again, although their reunion had apparently not gone well.\n\nBelle pouted while I cuddled her close and nuzzled her neck with my nose. I continued rubbing her arms until she calmed down a little more, and eventually she turned her head to look at me with tear-streaked eyes. \"Why do boys have to all be sex-obsessed bastards?\"\n\n\"They're called hormones. Come with puberty,\" I quipped. \"C'mon, I thought you took AP Bio last year.\"\n\nBelle snorted and promptly choked on a booger. I kept a pack of tissues in the pocket behind the passenger seat, and she reached out to grab a couple and blow her nose.\n\nWhen she re-settled on my lap, I hugged her close and asked quietly, \"Did he do anything that requires me to kick his ass? I did promise your dad I'd pound his face in.\" My blood ran cold for a moment. \"Did he touch you?\"\n\nBelle felt the tenseness in my arms and quickly turned to face me again. \"No, nothing like that.\"\n\nI unclenched my jaw and relaxed a little.\n\nShe sighed and sagged back against my chest. \"He just...\" Her voice trailed off. She glanced up at the roof, gathered her thoughts, and let out a long exhalation. \"Matty...\" she began quietly.\n\nI waited her out, just holding her close.\n\n\"Does it... bother you... when we all tease you?\" she asked softly.\n\n\"What do you mean?\"\n\n\"You know what I mean.\"\n\nI did. As the only guy in the group, I'd always gotten teased pretty mercilessly. Five teenage girls (six after Neevie joined) wanted to push their boundaries and test out their feminine wiles on the males of society, and there was no practice dummy better than me. If one of the girls wanted to figure out the optimal angle for tossing her hair, batting her eyelashes, and flashing a coquettish look over her shoulder, she'd try it out a few times on me to perfect her technique before bringing it to school and using it on a guy they'd actually date. Wanted to check out a guy's reaction to her new bikini before wearing it to the beach? Bring it over to Matty's house, sashay across the pool deck a few times to make sure he got a good look at some T&A, and see if he popped a woody. I constantly had cleavage pushed up into my face. The girls kept bending over at the waist to pick up something off the floor. I got touched... a LOT... My chest, my shoulders, my arms. My legs got rubbed underneath the table just sitting in a booth at McDonald's.\n\nBut no matter how much the girls teased me, I NEVER took advantage of them. Not once had I ever grabbed a juicy ass uninvited. Not once had I pawed at a boob, even when it was within easy reach. You know: the kinds of things that would get guys slapped. Okay, in fairness I may have gotten a bit of side-boob with my fingertips giving one of the girls a back massage, and I HAD gotten in some serious groping when the girls grabbed my hands and put them on their goodies from outside their clothing. But the cardinal rule was that I NEVER initiated, only accepted whatever they felt comfortable giving. This was the reason the girls all trusted me. I was Matty, the \"safe\" guy. So all of them continued to tease me, even Belle.\n\nTaking a deep breath, I exhaled and told her seriously, \"You know I don't mind. I love it.\"\n\n\"But don't you ever wish we would let you do more?\" Belle gave me a skeptical look and turned a little more sideways in my lap. I became consciously aware that her cute plaid blouse was unbuttoned to her navel, exposing a white tank top scooped low enough to give me a great downward view into her 32D cleavage. And noting my gaze, she thrust her chest forward a little, making damn sure I was looking.\n\nI frowned, not sure yet where this was going or what it had to do with Darryl. Instinctively, I started to make up a dismissive comment about how we were all friends and that I respected the girls too much to think of them that way, but this was Belle asking me and she knew the truth anyway. She just wanted me to say it out loud. Although I'd briefly glanced down at Belle's tits, I focused on her pretty face and answered, \"Of course I do. You're a bunch of super-hot girls and I'm just as much of a sex-obsessed bastard as Darryl is.\"\n\n\"No you're not. How many times have I sat in your lap just like this?\"\n\n\"Uh, more times than I can count.\"\n\n\"And how many times have you ever grabbed my ass?\"\n\n\"Never.\" My eyes narrowed. \"Did Darryl grab-\"\n\n\"No, no,\" she cut me off. \"I already told you he didn't touch me.\"\n\nI settled down and exhaled slowly.\n\nBelle reached a hand up, caressing my cheek and turning my face to hers so that we were only inches apart. Again, the height difference was such that we were basically eye-to-eye. \"Do you wish you could grab my ass?\"\n\n\"Yes.\"\n\n\"Do you wish you could grab my tits?\"\n\n\"Yes.\"\n\n\"Do you wish you could throw me down across my bed, sliding your aching dick deep into my pussy, and fuck the shit out of me?\"\n\n\"Jeezus, Belle.\" My eyes popped open wide and I leaned back a bit.\n\n\"Do you?\"\n\n\"You're like my sister, B.\"\n\n\"But do you?\"\n\n\"No! I don't!\"\n\nBelle frowned, and now she was leaning back away from me. She looked hurt. \"You don't?\"\n\n\"Like I said: I think of you as a sister.\"\n\n\"We're not related, Matty.\"\n\n\"I know that.\"\n\n\"And you said you wish you could grab my ass and my tits. THAT'S not very brotherly.\"\n\n\"You've got an amazing ass. And tits. And I'm a sex-obsessed bastard.\"\n\n\"But you don't want to fuck me?\"\n\nI sighed. \"You're... You're my Annabelle. That's a line I can't cross. Not you.\"\n\n\"Not me.\" She blinked. \"But you fantasize about the others, don't you? Sam, Neevie, Zofi.\"\n\n\"Yes, yes, yes.\"\n\n\"Alice, Mari.\"\n\n\"Yes, alright?\"\n\n\"But not me?\"\n\n\"Belle, please.\"\n\n\"You can put your hand inside my shirt right now. I wouldn't stop you.\"\n\n\"Belle.\"\n\n\"Okay, okay.\" She raised her hands defensively, glanced away, and gave me an unsure look. \"It's because I'm a little shorty, isn't it?\"\n\nI barked a laugh and shook my head. \"No, you're beautiful and sexy, B. I just... I won't... I can't let myself think of you that way. You're my Annabelle.\"\n\n\"But if I was a total stranger you'd never met before?\"\n\n\"I'd wanna throw you onto my bed and fuck your brains out, sure.\"\n\nLooking a little mollified, she wrapped her arm around the back of my neck and gave me a quick peck on the lips, similar to the hundreds she'd given me this year already.\n\n\"What does all this have to do with Darryl?\"\n\nBelle sighed, her frown returning. She glanced at the roof again for a moment before giving me a weary look and shaking her head. \"After our last meeting went so well, I sort of assumed he'd come ask me out on a date today.\"\n\n\"But he didn't?\"\n\nShe shook her head. \"At the mall, he was totally into me. Today, nothing. I finally went looking for him after school. But when I popped up and said hi, he pulled me into a quiet corner and...\"\n\nHer voice trailed off, her shoulders sagged, and I instinctively hugged her closely once more. She had assured me he didn't touch her, so I relaxed on that front. And I waited patiently for her to gather herself.\n\n\"He said he thought I was super-cute, but that he was looking for a 'mature' relationship. His words. I asked him what that meant, and although he blushed and looked embarrassed for a bit, in the end he said he'd asked around and the other guys told him I was a girl who wouldn't put out.\"\n\nMy jaw dropped. \"You serious?\"\n\n\"I told him I was waiting for the right guy and was hoping it might turn out to be him. But he shook his head and admitted he just wanted to get laid. He said everybody knew the BTC was a bunch of prick-teases, and he didn't want to deal with all the teasing if it wasn't going to go anywhere.\"\n\n\"Belle...\" I sighed, held her just behind her ears, and pressed her forehead to mine. \"I'm sorry.\"\n\nShe sniffled but took a deep breath and mumbled, \"He probably did me a favor. Better I know now he's just another dumb jock looking to pop my cherry before moving on to his next conquest.\"\n\n\"That IS true,\" I agreed. \"And a very mature response, if I may say so.\"\n\n\"Then why do I feel like shit?\"\n\n\"Rejection is never easy.\"\n\n\"You seem to deal with it just fine every day.\"\n\nI pulled back to look into her eyes. \"Wait, what?\"\n\n\"Isn't that what it feels like when one of the girls lets you get oh-so-close to starting something but won't give you that final inch? Like when Sam shoves her big tits into your face and starts peeling back the edge of her bikini top right next to your lips but doesn't quite let you suck on her nipple? Rejection?\"\n\nI frowned. \"No, not at all.\"\n\n\"Then what DOES it feel like?\"\n\nI smiled and brushed her loose bangs back from her eyes, tucking the strands behind her ears. And after giving her a quick peck on the nose, I explained, \"It feels like a beautiful woman, in the flower of her youth, wants to explore her own sexuality and feels comfortable enough to do that with me. She trusts me. And I would never do anything to betray that trust.\"\n\n\"I do trust you, Matty.\"\n\nI grinned. \"I know.\"\n\nTaking a deep breath, Belle managed a smile, and she wrapped both arms around my midsection while setting her head down on my shoulder. I hugged her tight, stroked her spine, and held her close. Finally, she seemed to be at peace.\n\nAfter a minute, I stroked her hair and said, \"Look, it's the first day of school. Nobody's assigned us any homework and the whole gang will be over at my house within thirty minutes. Let's get home, get changed, and you can commiserate with your friends.\" \n\nBelle stayed in my hug for a long time, pushing her nose into the side of my neck. She got her breathing under control, looked up at me, and puckered up. I gave her another quick brotherly peck, patted her head, and released my grip.\n\nShe got off my lap and maneuvered back into the passenger seat. After buckling her seatbelt, Belle glanced over at me and muttered, \"Why can't guys be more like you?\"\n\nI shrugged and flashed a smirk. \"Sorry. I'm one of a kind.\" I climbed back into the driver's seat, put the van in reverse, and we headed home.\n\n****\n\nThe whole BTC had already planned to come over to my house after this first day of school. The weather was hot, the pool was waiting, and I was planning to grill up dinner. So after driving us home, I parked in my garage, Belle walked over to her house to drop off her backpack and change, and I headed inside to prepare for the girls' arrival.\n\nI should make clear that lots had changed since sophomore year. We'd all grown up, grown closer, and as a result were a lot more comfortable around each other. In a word, things had seriously escalated.\n\nI've already said that the girls always teased me. I was their crash test dummy for flirting, for showing a little extra skin, and all the other things girls did to get attention from a guy.\n\nTwo years ago, teasing meant opening an extra button of a blouse and bending over to see if developing boobs attracted my eyes like gravity. They often did, and I would just as often avert my gaze and blush trying to pretend I hadn't looked. Two years ago, teasing meant snuggling up to my side on the couch and setting her head down on my shoulder while watching a movie so that I'd wrap my arm around her and then rubbing my leg getting closer and closer until I started tenting my shorts and would awkwardly try to cover it up by crossing my legs or something. Two years ago, teasing meant asking me to turn around while changing shirts and then taking their sweet time to see if I'd start to turn back around or sneak a peek.\n\nTwo years ago I was too busy trying to be a gentleman. \n\nIt wasn't two years ago anymore.\n\nNowadays I was still a gentleman in the sense that I never initiated anything and I would never touch one of the girls unless they'd touched me first, but that was the extent of my restraint. Bend over to show me your cleavage? I'll happily stare away and file the view away in my spank bank for later usage. Cuddle up to me on the couch and start rubbing my leg? I'll hug you close and rub your leg, too. Flaunt your amazing body in an itty-bitty bikini by the pool and keep posing yourself for my viewing pleasure until I pop a woody? I'll sit back, enjoy the view, and even get a little harder watching you watch the tent in my swim trunks. I'd long since stopped being embarrassed by my erections. All six girls knew I got them, and they were happy to see them, so why should I hide them?\n\nThe \"Nobody dates Matty\" rule was still in effect, but beyond that the girls also used The Rule as a sort of moving target of limitations on their physical activities with me. Girls liked to sit in my lap grinding themselves against my bulge (but I always had my shorts or trunks on). I'd gotten flashed quite a few times (look, but don't touch). And I very much enjoyed the rare occasions when one of them let me hold her very nice breasts in my hands (strictly outside of her clothing). None of them had crossed the line of putting bare skin on someone's private parts, although we'd gotten pretty close.\n\nThe most gorgeous thing I'd ever seen was the first to arrive. Naimh came straight through the side garden gate into the backyard and met me by the grill with a peck on the cheek. It was too early to actually start making dinner, but I was cleaning the grates and checking the propane levels. She carried a gym bag containing her suit and towel and headed inside to change. Less than three minutes later she emerged back outside, a brilliant smile on her face.\n\nThere was one particular lounge chair which was known by all as \"Matty's Chair\". It was shielded from the afternoon sun but more importantly, I'd specifically angled it to have a good view of both the pool and the sliding door. When Naimh went inside to change, I quickly popped open a beer and settled onto the lounger in eager anticipation of her return. And when the sound of Naimh sliding the patio door open reached my ears, I was quick to set down my beer and turn my attention in that direction.\n\nNo matter how many times I saw one of the girls emerge from the house in a swimsuit, I always enjoyed it. They seemed to appreciate it, too. Naimh wore a cobalt blue bikini that really accentuated the color of her red hair and pale skin. She was a fairly tall girl at 5'8\", second in height only to Zofi's model-esque 5'10\", while the rest of the girls spread across the average height range except for Belle's petite 5'1\". Naimh's 34DD tits were firm and fantastic, held up and squished together for my viewing pleasure by the halter-top that actually covered up the majority of her skin but was sheer enough to make the dents of her nipples quite obvious. The bottoms weren't quite a thong in the back, but pretty damn close, giving me an unobstructed view of her perfect peach of an ass. Overall, it was very easy for me to imagine exactly what the gorgeous teen hottie looked like naked, and I had imagined her naked quite a few times over the last several months.\n\nNaimh's bright green eyes shone as she sashayed across the patio and over to my chair. And with an impish giggle, she settled herself sideways in my lap while wrapping both arms around the back of my neck.\n\n\"I'm so glad I got here first,\" she said in that delightful Irish lilt. It had taken a couple of months to get used to her accent, but by now I could understand pretty much everything she said as if it were completely 'American'. She continued, giggling, \"It's not often I get to have you to myself.\"",
        "\"Likewise,\" I replied warmly, letting my left arm scoop around behind her so that my hand rested on the bare skin of her thigh just past her juicy buttcheek. My right arm stroked her leg out to the knee where it extended off the chair before returning in a gentle, massaging motion. I was oh-so-conscious of her big breasts just beneath my chin, and snuck a peek before returning my gaze to those electric green eyes boring into mine from only inches away.\n\nShe noticed the glance, of course. She sat up a little straighter so that the upper slopes of her cleavage actually hit me in the chin, and I felt my heart speed up a little more than usual.\n\n\"See something you like?\" she asked quietly, a world of innuendo in her voice.\n\n\"I see two things I like,\" I replied before smiling broadly. \"Your eyes are amazing. I've always been a sucker for green eyes.\"\n\nNaimh's brilliant green eyes narrowed slightly. \"That's because Belle has green eyes... AND reddish hair.\"\n\nI thought about that for a moment. \"True, but they're different shades. Your hair is a LOT more red, and your eyes have more of an emerald color.\"\n\n\"Is that an Irish joke?\"\n\nI laughed and nuzzled her nose. \"Not intentionally so. And just because Belle has green eyes doesn't make me appreciate yours any less.\"\n\n\"Perhaps. But I still think it's these you're trying to get a closer look at. Let me help you.\" And with that, she actually pulled my head down into her cleavage for a few seconds.\n\nNaimh wasn't the first girl to shove her tits into my face (or in this case, shove my face into her tits). All of the BTC did so every so often, even Belle - it was part of the teasing. But there had always been something a little... different... about the way Naimh teased me compared to the others. For one thing, I'd watched the other five slowly escalate their teases over the past two-and-a-half years. We'd played this cat-and-mouse game of attack and retreat, attack and retreat long enough for everybody to get comfortable with the game and understand that the rules would always be obeyed. Both sides always knew it was just that, a tease, and nothing more. So whether it was Sam, Zofi, Alice, Mari, or Belle, I always knew in the back of my head any and all flirtations would stop short of actually doing something.\n\nBut I'd only met Naimh five months ago. True, she caught on quick after joining the BTC that \"messing with Matty\" was not only fair game, but encouraged. But there had always been a little bit of an edge in the way she flirted with me that made me wonder... Could this be going somewhere? I mean, she knew about and agreed to the \"Nobody dates Matty\" rule. And yet, we'd never gone through those first exploratory flirtations when the girls first made clear they were using me as a practice dummy and not actually intending to follow through on anything.\n\nNaimh didn't need a practice dummy, you see. She already knew how to bait a man.\n\nSo on an afternoon like today, when the gorgeous redhead set her forehead against mine, rubbed her perfect ass against the bulge growing beneath her, and sighed with mixed sexual heat and resignation, I wondered (not for the first time) how different things might've been had Sam NOT grabbed the new Irish transfer student, given her the nickname \"Neevie\", and immediately brought her into the BTC.\n\n\"So how was school?\" I asked, breaking the silent tension between us as I reclined my head to rest it against the lounger's backrest.\n\nNaimh shrugged and also sat up straighter, extending her arms until her elbows were locked and there were a couple of feet of space between us. \"Same ol' shite, different day.\"\n\n\"You're picking up American idioms quickly. Still, that's a bit jaded for only the first day of school. Gonna be a long road ahead if you're starting out this cynical.\"\n\n\"High school is different in the States. In Ireland we'd all be freaking out about the Leaving Cert, which kind of makes or breaks your entire career before it's even gotten started. Here, Americans need to study for SATs and AP Exams, but it's not the end of the world if you do well or not. How you do at university is what really matters.\"\n\n\"I suppose. Just don't count on this year being all fun and games. What happens in the next few months will determine which university we get into, you included.\"\n\n\"Can I say I'll be happy with any university, as long as you're there with me?\" She gave me a pixie wink and rubbed her butt against my bulge again.\n\nThe comment got an eyebrow raise out of me. I wasn't sure if she actually meant it or was just teasing. Probably teasing. But the uncertainty did get my heart racing a little bit again. I was still thinking of a witty response when the bell attached to the garden gate went off, drawing our attention.\n\n\"Hey guys,\" Alice greeted as she walked over to my lounge chair and held her hand out for our usual fist bump. My pretty but tomboyish Korean best friend glanced around. \"Anybody else here yet?\"\n\nI shook my head. \"Not yet.\"\n\nAs if on cue, a moment later the sound of a big truck engine revved from the other side of the house. It was Sam's usual way of announcing her presence in advance. A minute later, the busty platinum blonde came in through the gate, followed closely behind by her best friend Zofi, the tall and svelte brunette. Sam thrust her hands into the air, cheering, \"Let's get this party started!\"\n\n****\n\nThirty minutes later, I sat upright straddling Matty's Chair while casually observing the seven hot girls in bikinis frolicking around my backyard. One of the seven currently sat directly in front of me with her head pitched forward, moaning erotically while I gave her pleasure with my strong hands and fingers.\n\n\"Fuuuuck, yeahhh...\" Holly Thompson groaned, her supple flesh yielding to my rhythmic motions.\n\nOh, have I not introduced Holly yet? Yeah, I wasn't expecting her, either, but the BTC had never been that cliquish and other friends and acquaintances would occasionally come and hang out with us. Belle and Mari had started off pretty nerdy, and still had their nerd friends. Sam and Zofi had always been popular and still had their popular friends. Every now and again someone would join us for a few days and the group would sort of suss out how well they fit the dynamic. Cup size wasn't even a requirement. But until Naimh, none of them had lasted more than a month.\n\nHolly was one of the girls who sort of popped in every three or four months. She had been good friends with Sam ever since the latter had arrived from Australia in seventh grade, and remained so even when Sam split off to start hanging out with the BTC early sophomore year. Holly was extremely popular at school, quick-witted and outgoing, the type who could bring life to any room she was in. It helped that she was gorgeous, with naturally dirty-blonde hair that she dyed in all sorts of colors that seemed to change every month, not to mention a pair of 34D tits she was always showing off. If she ever wanted to maintain membership in the BTC, her rack certainly qualified. But she was also a social butterfly, flitting from one clique to the next, super-friendly with everyone but never settling down for long.\n\nIt wasn't a huge surprise when Holly came through the gate just after Sam and Zofi. Her hair was bright blue now, like neon blue all over. She came over to me, gave me a pixie kiss on the cheek, and greeted me with a \"Long time no see, Matty\" in a tone that suggested it actually pained her to have been separated from me for the past three months. Five minutes later, the three new arrivals emerged from the house wearing skimpy bikinis that drew my attention away from the backrub I had been giving Naimh. Alice had arrived already wearing her swimsuit under her clothes and had called \"next\" while the other three were still in the house. So Holly had been quick to make her reservation for a Matt-issued backrub before either Zofi or Sam could speak up.\n\nTwo minutes into her backrub, Holly moaned orgasmically that I was worth the wait.\n\nFrom the lounge chair to my left, Mari raised her sunglasses up onto her forehead for a moment, evaluated the ecstatic pleasure on Holly's face, and announced, \"I call 'next'!\"\n\n\"Get in line, bitch!\" Zofi playfully rebuked from the patio door as she walked toward us, holding three cold beer bottles straight from the fridge. She set one down on the ground next to Holly's feet and glanced over at Mari. \"You can go after me and Sam.\"\n\nSeated on the edge of the pool, her feet in the water, Sam extended her hand and accepted the beer Zofi gave her. The blonde also glanced over at Mari and said, \"It's what you get for getting here late.\"\n\nMari shrugged like it was no big deal and returned to her conversation with Belle. The pair of them had indeed arrived only minutes ago, an unusually late arrival given that I'd dropped off Belle before I'd gotten home. Either Mari had been delayed and Belle was waiting for her, or more likely, Mari had gone straight to her best friend's house and they'd been talking about the \"Darryl\" incident. They weren't talking about him anymore, discussing something about the Physics syllabus instead, so I tuned them out and focused on turning Holly into a puddle of jello beneath my hands.\n\nBy now I was actually wrapping up the end of the massage. I gave so many backrubs I had developed a routine and was winding down to the end. Completing the final set of firm moves, I let up on the pressure and gave pretty much every square inch of Holly's bare-naked back a gentle caress. I trailed my fingertips downward, ever so gently ticklish to make her quiver. And I finished up by bending over and giving her a teasing kiss on the back of her neck, precisely on the small tattoo of some kind of weird, vaguely Egyptian hieroglyph she had there.\n\nThe blue-haired beauty shivered and moaned at that last bit, unexpected as it was for her; the other girls knew I liked to kiss their necks at the end. She remained hunched over, eyes closed and breathing deeply as if in a trance. I waited patiently, giving her space. This wasn't the first time one of my backrubs had sent a girl off to a higher plane of existence, and I knew it sometimes took a while for her to come back down to earth.\n\nA minute doesn't sound like a long time, but when you actually tick off the seconds one-by-one it can stretch out for an eternity. I was still straddling Matty's Chair, with Holly's bikini-clad ass pressed back against the half-hard chubby in my trunks. I reclined against the lounger's backrest and stretched my arms, working out the kinks in my hands and fingers.\n\nIt took more than a hundred and twenty ticks for Holly to return from Dreamland. She abruptly inhaled, raising her head and opened her eyes for just a moment before slamming them shut against the sudden brightness of the afternoon sunlight. She blinked rapidly on the second attempt and took a deep breath, momentarily disoriented by the unfamiliar surroundings before glancing back at me as if to confirm she truly was where she thought she was.\n\n\"Holy shit, Matt,\" Holly breathed, irises aflame.\n\nI smirked, pleased by her response.\n\n\"If you can do THAT to me with just a backrub, how good are you at fucking?\"\n\nI blinked in surprise, not sure how to react to that. But then suddenly my eyes got even BIGGER in surprise as Holly launched herself at me, wrapping her arms around my neck and mashing her lips onto mine. A second after that, her tongue penetrated my mouth, seeking out mine while she moaned in obvious heat.\n\nI was supremely aware that Holly's big beautiful breasts were currently pressed against my chest. As part of the backrub, I had unhooked the clasp of her bikini top and slid the straps off her shoulders while she trapped the cups against her own tits for modesty. But both modesty and the bikini top had been forgotten when she'd whirled around to kiss me, and I reveled in the idea of having my arms full of horny, topless female while I let myself kiss Holly back with every ounce of fervor she was giving me. \n\n\"Hey, hey, hey! Party foul!\" Sam howled from somewhere by the pool. I loved the way her Aussie twang made the phrase sound like \"pahtty foww\".\n\nThe sound of her voice brought me to my senses, and I abruptly broke the kiss. Holly kept going though, gnawing on my neck and then jaw trying to reconnect her lips to mine, finally succeeding a few seconds later.\n\n\"HOLLY!\" Sam screamed shrilly.\n\nOnly then did the gorgeous girl in my arms pull her head back, eyes wild as she stared into mine. Panting heavily, she gawked at me with a mixture of lust and confusion, horny as hell but not quite in her right mind. Two seconds later, she jerked away to sit back on her knees atop the lounger between my spread legs.\n\nMy eyes immediately dropped to her naked chest. Those big jugs swelled and heaved as Holly caught her breath. She felt my gaze and abruptly covered her tits with both arms, but the sight of her round melons with hard, erect nipples had already been committed to memory for the spank bank.\n\n\"I'm sorry,\" she wheezed, still out of breath. \"I don't know what came over me.\"\n\nI smiled at her chest before bringing my eyes back up to hers. \"You don't need to apologize to me.\"\n\nShe frowned, blinked twice, and shook her head. \"No, I need to apologize to them.\" She swept her gaze around first to Mari and Belle on the lounge chairs to my left, and then whipped the other way to take in Sam, Zofi, Alice, and Naimh. Everyone was gawking at us.\n\n\"Don't worry about it,\" Sam offered reassuringly. \"It's happened to all of us at one time or another.\"\n\n\"At least you just kissed him,\" Naimh added in her Irish lilt. \"The first time he did that to me, I nearly yanked down his shorts and gave him a blowjob.\"\n\nHolly's eyes immediately dropped to the tent in my swim trunks, my erection big enough that it threatened to peek out above my waistband. Her tongue came out and trailed across her upper lip.\n\nMari reached out and tapped Holly's arm, drawing away the blue-haired girl's attention. \"Here,\" she offered, holding up Holly's discarded bikini top.\n\n\"Oh, right.\" Holly quickly put the top back on, exposing her nipples again for a few precious seconds before getting her girls tucked away. She gave me an apologetic look but managed a shy smile.\n\nI popped my eyebrows, gave her a reassuring smile of my own, and brought both feet up onto the lounger in-between us. Pivoting and standing up, I jerked a thumb over to the house, I said, \"I think I'm gonna get another beer. Anybody else want one?\"\n\n\"Me!\" Alice called from the edge of the pool.\n\n\"Me, too,\" Naimh chimed in.\n\nOnce again, Mari tapped Holly on the arm, this time holding up the beer Zofi had previously set down at the foot of the chair. Holly accepted it gratefully and immediately took a big swig. She looked like she wanted to say something, blinked twice, and then almost bashfully turned away while covering her lips with three fingers.\n\nI shrugged and went into the house to fetch the beers.\n\n****\n\n\"Look, nobody's saying you can't date him,\" Sam said quietly. \"He's our friend, not our boyfriend. And it wouldn't be fair for us to keep him from going out and-\"\n\n\"Ah-hmm.\" Zofi had noticed my approach, looked up at me, and cleared her throat rather obviously. Sam's voice abruptly cut off and she and Holly both turned around to follow Zofi's gaze.\n\n\"Didn't mean to interrupt,\" I said apologetically and jerked a thumb back toward the grill. \"I was just coming to let you know the food's ready.\"\n\nSam gave me a weak smile and mumbled, \"Uh, thanks.\" She looked more worried about whatever I'd overheard than interested in the food. Holly remained silent but looked at me curiously. It was more than a little weird to see two such extroverted chatterboxes be so taciturn.\n\nI gave them a weak smile of my own and beat a hasty retreat. Alice had been hanging out with me, chatting while I'd been cooking. I'd already told Belle, Mari, and Naimh, and the three of them were by the grill filling their plates.\n\nSam, Zofi, and Holly didn't get up from their spot by the loungers for another five minutes. By then, the rest of us were assembled around the outdoor dining table beneath the covered patio. Conversation was light and there wasn't much teasing going on, with everyone busy eating. The table was meant for six, so fitting seven people wasn't a big deal, but squeezing in eight chairs made things just a little bit crowded.\n\nI was at the head of the table, as always, with Belle on my left and Mari next to her. Alice was usually on my right with Naimh and Zofi along that side, and then Sam at the other end of the table. Sam and Zofi brought their plates to their usual spots, but to my surprise, Holly set her plate down between me and Belle and asked Belle softly, \"Mind if I squeeze in here?\"\n\nBelle arched an eyebrow before muttering, \"Uh, not at all.\" She got Mari to scoot her chair down a bit more towards Sam, and once I moved my own chair to the right a bit, Holly was able to get our last chair into the gap, a little bit around the corner.\n\nEveryone smiled, we continued the group conversation, and we resumed our meals.\n\nAnd then I felt a hand on my thigh.\n\nI froze for a moment, but just a moment. I was used to all of the BTC girls teasing me from time to time after all, so it wasn't the first time I'd felt a pretty girl's hand on my leg. Even around this very table, both Belle and Alice would occasionally let their fingers trail across my thighs. I snuck a glance to my left, but Holly acted like nothing was going on. Revealingly, the normally right-handed girl was poking at her sliced chicken pieces with a fork in her left hand, but she otherwise kept up her typically effervescent chit-chat with the girls. I've already said she was an excellent conversationalist who could light up a room.\n\nNothing else happened during dinner, and Holly's hand didn't wander toward my crotch or anything like that. After dinner, the air temperature started dropping rapidly and we all moved inside to the family room. We had a very new flat screen Plasma TV, and the girls put in a DVD of some stupid rom-com. My family room furniture consisted of a 3-cushion couch, a 2-cushion loveseat, and a single-cushion armchair, all part of a matched set that included the coffee table. I always wound up in the middle of the 3-cushion couch that directly faced the TV, so that at least two girls could cuddle up alongside me. Tonight that turned out to be Naimh on my right and Holly on my left. Neither of them came as a big surprise.\n\nWhat WAS a bit of a surprise was that Sam and Belle ended up together on the loveseat. While the two of them had become pretty good friends, they weren't the closest pair in the club. Popular blonde Sam and model-pretty Zofi were besties. My baby Belle and cuddly Mari were besties. Gamer girl Alice was my best friend, although I wouldn't term us \"besties\".\n\nNewcomer Naimh was the wildcard, although Alice had been quite welcoming to her and the two of them hung out pretty often. If Alice was with me, Naimh would usually then go join Sam and Zofi. And of course, Belle and I were really close and spent a lot of time together outside of the club.\n\nThe point is: I felt like I could count on one hand the number of times Sam and Belle had been alone together. But even after the movie started, I could see them putting their heads together in conversation, ignoring whatever was happening on the screen.\n\nAlice wound up sitting on Naimh's right side, squishing the four of us onto the couch. It made for a snug fit, not that I minded having two beautiful girls' bodies pressed up against mine. I wrapped an arm around each of them, resting comfortably across each shoulder. Alice even reached up to rub my right hand a few times before leaving it alone.\n\nHolly, on the other hand, gently tugged my hand downward about twenty minutes into the movie, placed my palm directly over her left breast, and then added a little pressure so that my fingers molded around the curvature of her underboob.",
        "It wasn't the first time I'd held a girl's breast outside her clothing. While I would never be so bold as to cop a feel uninvited, all of the BTC girls at one point had done something similar to what Holly just did, making clear my touch was acceptable. But this was certainly the first time I'd ever touched Hollyin such a way, and although most of the girls had simply thrown their clothes on over the tops of their bikinis before dinner, I quickly realized that Holly had neither her bikini top nor a bra on underneath her shirt. And as I felt her nipple hardening beneath my palm, I felt my penis start to harden as well.\n\nTen minutes later, Holly snuggled a little closer into the crook of my arm and asked, \"Do you have any blankets here? It's starting to get cold.\"\n\n\"Uh, well...\" I removed both arms from around Holly's and Naimh's shoulders and leaned forward.\n\n\"Don't get up,\" Belle said as she stood up from the loveseat to my left. \"I know where they are.\"\n\nHolly was quick to pull my arm back around her shoulder, with Naimh following suit a few seconds later. She left my hand on her upper arm though, at least until Belle returned with three blankets. She tossed one to where Mari and Zofi didn't quite fit together in the armchair, with Zofi opting to sit up on the armrest. She handed the second to us on the big couch, and draped the third over Sam and herself.\n\nBelle had given us a fairly big blanket, long enough to cover the length of the couch, although Alice waved it off so that it only covered Naimh, Holly, and me. Holly pulled her end of the blanket so that it draped over her left shoulder, effectively obscuring her entire body. And once we were appropriately shielded from view, she pulled my hand down over her breast again...\n\n... inside the shirt.\n\nI couldn't help but inhale as bare female flesh filled my hand. This WAS the first time I'd ever felt a girl's naked boob before, and my heart started thumping in my chest. Naimh felt the sudden tension in my arm and shot me a glance, but I kept my eyes on the TV screen and fought to control my breathing. A moment later, though, she slid her hand up from my leg and over my crotch, feeling the massive bulge there.\n\nIt wasn't the first time a girl had handled my package. If seeing the tent in my shorts was exciting, rubbing my dick through my shorts really gave them a thrill. The first time Alice sort of rolled my shaft around like a ball of Play-doh while we were alone in my bedroom, she got super-duper excited, exclaiming how happy she was to know she could have that effect on me. She'd made up her mind that every time she saw me hard it was because I'd been staring at Sam's or Mari's tits or something.\n\nIt was getting hard to control my breathing with Holly guiding my hand into massaging her left breast and Naimh stroking her palm back and forth along my shaft. I closed my eyes for a moment and concentrated on being in the moment, on enjoying the feelings for as long as they lasted, because everything always stopped in the end.\n\nThis was the game.\n\nThis was the tease.\n\nThe girls would manipulate me only as far as they were willing to go, always stopping short of actually doing something sexual.\n\nBut I was okay with that. I'd gotten used to that. Belle had worried I was suffering from constant rejection, but I'd been truthful when I said I was happy to accept whatever they'd let me have and not complain about not getting the rest. Did I want to lose my virginity and get laid someday? Sure. But being patient and trustworthy had gotten me this far, and I loved every girl in the BTC too much to risk upsetting them.\n\nAnd hey, I now had a girl's naked boob in my hand! Progress!\n\nThat's when Holly stopped guiding my manipulation of her breast with her right hand, and instead moved it to fondle my package. Or at least, she tried. Her hand slid up my thigh and bumped into Naimh's, causing both of them to startle in surprise. Naimh jerked her fingers back first as if caught red-handed. Holly leaned forward to look past my chest and over to the Irish redhead. Naimh gazed back, a sheepish expression on her face. But then Holly gave Naimh a little grin, rubbed my erection a few times, and pulled her hand away.\n\nHolly then slid her hand inside my gym shorts.\n\nI couldn't help but inhale as bare male cock-flesh filled Holly's hand. This WAS the first time I'd ever felt a girl's skin directly on my naked dick before, and if my heart had been thumping in my chest earlier, it was POUNDING now. Naimh felt the sudden tension in my arm and shot me a glance, and this time I couldn't help but turn to look back at her with an expression of wide-eyed terror. Not that I was scared or anything, but I was shocked beyond belief that this was happening. A moment later, Naimh slid her hand back up from my leg and over my crotch, feeling the massive bulge of Holly's hand inside my shorts and the way it pumped back and forth in an obviously jacking motion. And when she did so, those emerald green eyes darted straight to mine.\n\nSilently, Naimh mouthed, \"Oh my gawd!\"\n\nMy eyes just remained wide, but I didn't otherwise respond. Moments later, Naimh flashed a naughty grin and lifted the blanket to cover her shoulder. She then reached up to grab my right hand and pulled it down inside her shirt, inside her bra as well, and I suddenly had BOTH hands full of bare-naked titflesh.\n\nMy hips surged involuntarily as if attempting to thrust inside some phantom pussy that wasn't actually in my lap. Holly felt the jerk and giggled, speeding up her hand pumps while I closed my eyes and let my head loll backward. She probably had no idea that Naimh had my hand on her tit, and Naimh might very well have no idea that Holly had my hand on hers. No matter, Holly literally took things into her own hands, bringing up her left hand to turn my cheek so that I was facing her. I looked down into her twinkling hazel eyes, saw the little smile on her face, and watched the way her lips puckered up as she closed the gap between us.\n\nHolly's kiss was sweet, almost tender in stark contrast to the way my hand clamped down on her boob while she continued giving me a handjob. I parted my lips to let her tongue in, sparred with it a little, and then pressed back so that my tongue entered her mouth instead. We made out quietly, ignoring the outside world as if it had ceased to exist.\n\nAnd then the outside world announced its presence. With a grunt, Sam abruptly stood up from the loveseat and not so quietly stomped out of the room. Holly and I broke our kiss and stared after her, as did everyone else. I pulled my hands out of both girls' shirts and sat up straight. Holly yanked her hand out of my shorts, and as we all turned to look, the blanket dropped off the girls' shoulders and down into our laps.\n\nZofi got up first, going after her best friend with a look of concern on her face. A moment later, Belle got up and followed as well. And then three seconds after that, Alice went after them too.\n\nFinally, Holly gave me an apologetic look, as if all this were her fault, and she got up to join the others.\n\nWe didn't finish the movie.\n\n****\n\n- CHAPTER 2: Holly -\n\n****\n\nWhile the five of them were gone, Mari paused the movie and the three of us sat around in semi-uncomfortable silence. Mari was oblivious, asking, \"What happened?\" Neither Naimh nor I could give her an answer, and rather than endure the ensuing awkward silence, I excused myself to go to the kitchen for a drink of water.\n\nI actually did get a glass of water, and was in the middle of drinking it when Naimh arrived in the kitchen as well. I offered her a drink but she declined. She instead looked around to make sure the coast was clear before leaning into my body while I braced myself against the counter. She nuzzled her nose against mine for a moment before puckering up and giving me a quick kiss, slipping her tongue into my mouth for just a moment. That was about as far as we'd ever gone, and she didn't continue. But she did ask, \"Was that the first time a girl's ever given you a handjob?\"\n\nI blushed and nodded.\n\nHer tongue flicked across her upper lip for a moment and a twinkle came into her emerald green eyes. \"I would've given you one a long time ago if it wasn't for The Rule.\"\n\n\"Last I checked, The Rule was that none of you can date me. There's no rule that says 'Nobody gives Matty a handjob'.\"\n\nShe giggled and nodded slowly. \"That's a good point. Of course, I was told what started The Rule in the first place was Zofi giving you kissing lessons or something.\"\n\n\"True.\" I nodded and sighed. \"While the letter of the law spells out 'dating', I'm pretty sure the spirit of the law has more to do with not doing anything that would disrupt the balance of the BTC.\"\n\n\"Well if we ALL start giving you handjobs, the BTC would remain in balance, wouldn't you say so?\"\n\nI grinned. \"I like the way you think.\"\n\nNaimh looked regretful. \"If only...\" She stood up straight and took a step back.\n\nI sighed and nodded reluctantly. We both knew it would never happen like that, but it was nice to dream.\n\nWith a frown, Naimh gave me a sad look, clasping her hands together down by her left thigh and twisting slowly. \"Sometimes I wonder if I should leave the BTC. Then I could be an outsider like Holly and give you all the handjobs I want. Or more.\" She then leaned forward into my body again, and I automatically wrapped my arms around her.\n\nDamn she smelled good. I stroked her spine and stared deep into her eyes. They were inviting, beckoning me, so I bent over and kissed her quickly, with just a little bit of tongue. But I didn't linger and pulled away before things got out of hand.\n\n\"Mmm...\" Naimh sighed. \"You have no idea how much I wanna take your virginity.\"\n\nYes, I was a virgin. Most of us were. Unless something had happened without one of the girls telling me, Belle, Mari, Alice, and Zofi all still had their cherries. Sam had slept with a football jock twice during the fall of junior year, and had a drunken one-night stand in the spring with a college guy at some party. The way she described it, all three encounters had left her unfulfilled and feeling used, and she'd been far more careful about how much alcohol she drank ever since the drunken one-night stand. There was her Junior Prom date, though - that one I wasn't a hundred percent sure about. And Naimh had told everyone she'd slept pretty regularly with her boyfriend back in Ireland, but since arriving in America five months ago and joining the BTC, there hadn't been any boys worth pursuing.\n\nIn a way it was true what Darryl had said about the BTC being a bunch of prick-teases. Six girls with amazing racks hung out together and liked to flirt, but none of them were putting out. Alice and Mari had never even gone out on a single date, nor had Naimh since her arrival. And while Sam, Zofi, and Belle had all dated a little bit, at the moment none of them were currently seeing anybody.\n\n\"You can have me, you know,\" Naimh said quietly, her lips inches away from mine. \"I'd fuck you in a heartbeat if it wasn't for The Rule.\"\n\n\"Neevie...\" I mumbled quietly, a bit of a plea in my tone for her to not tease me right now.\n\n\"I'm serious.\"\n\n\"I know you are. That's what scares me.\" Damn I wanted her, I really did. Sam and her massive mammaries had been my most frequent fapping fantasy for years, but ever since Naimh's arrival she'd taken over the top spot. I really had been smitten the first time I laid eyes on her, the most gorgeous thing I'd ever seen, and the feeling seemed to be mutual. But as much as I masturbated to thoughts of pinning the busty redhead beneath my heaving body and having my way with her, I valued the collective BTC too much to risk ruining it all by actually having sex with one of them. I muttered quietly, \"Think of the others. Think of your friends.\"\n\nWith a sigh, Naimh closed her eyes and pushed her hands off the countertop, propelling herself away from me. Without another word, she turned and walked out of the kitchen, heading back into the family room.\n\nI stayed in the kitchen until I'd drained every last drop from my glass of water. By then, my erection had deflated most of the way so that even in my gym shorts it wouldn't grab so much attention. Only then did I finally return.\n\n****\n\nTwenty minutes after they'd left, Sam, Zofi, Belle, Alice, and Holly returned to the family room. They collectively brushed aside the whole incident as no big deal, and while Sam made half-hearted suggestions that we should just forget the whole thing happened and finish the movie, the others figured the mood had passed and it was time to go home. It wasn't like this would be the last time the BTC would all be together, and we could always finish the movie another night.\n\nOne-by-one the girls came to hug me goodbye. Three of them pecked me on the cheek and then three pecked me on the lips. Alice just gave me a fist bump and a little smirk. Sam, Zofi, and Holly were the first to drive off. Naimh was next. Belle and Mari walked over to Belle's place. And once again I was all alone in my big empty house. I had no idea where Mother was, nor did I worry about it. She usually came home quite late, even on a Friday night.\n\nI headed upstairs to shower and change. It was only 7:30pm, far too early for an 18-year-old guy to go to sleep. The first day of school had been little more than orientation and going over the syllabus, so we didn't have any actual homework yet. I figured this would be as good a time as any to settle into bed, make sure the box of tissues was nearby, and start recalling some fond memories from the spank bank. I especially had fresh memories of palming the first naked breasts of my entire life. Plus, I could still vividly remember the way Holly had been holding my dick in her hand, jacking it slowly underneath the blanket. So wrapping my fingers around my fresh erection, I closed my eyes and started stroking myself with the same rhythm.\n\nThat's when the doorbell rang. I frowned and opened my eyes, my hand still on my dick, not quite sure I'd heard what I thought I heard. But after a minute of silence, the doorbell rang again. So after pulling up my pajama pants and throwing on a tee shirt, I hopped out of bed, went back downstairs, and peered through the front door's peephole.\n\nA blue-haired pretty girl stood outside, looking a little nervous as she hugged herself. I opened the door quickly, greeting, \"Holly! Hey! What's up?\"\n\nShe gave me a coy smile, squeezed her arms beneath her boobs enough to press her cleavage together a little more in her V-neck shirt, and asked cutely, \"Can I come in?\"\n\n\"Yeah, sure, of course.\"\n\nI stepped aside and waved her in before closing the door behind her. But as soon as the door latched, I found myself spun around and slammed against it as Holly launched herself at me, wrapping her arms around my neck and mashing her lips onto mine. A second after that, her tongue penetrated my mouth, seeking out mine while she moaned in obvious heat.\n\nBut two seconds after that, I came to my senses and broke the kiss, muttering, \"Whoa, whoa, whoa. Holly!\"\n\n\"It's alright,\" she whimpered, reaching for the hem of her shirt and whipping it over her head. She'd put on a bra at some point, but just when I realized that, she reached behind herself to slip the catch and started pulling that off as well. \"The girls said it was okay.\"\n\nI blinked twice. \"They did?\"\n\n\"Well, Sam, Zofi, Belle, and Alice did. They agreed I'm allowed to fuck you.\"\n\nMy eyes went WIDE. \"Umm, what?\"\n\n\"They feel bad for constantly teasing you but never letting you get any farther. They know none of them can upset the balance of the BTC by messing around with you, but since I'm not in the BTC, they said it's okay.\" While saying all this, Holly left her shirt and bra in the foyer and tugged me by the hands, slowly backing up into the living room. Her big 34D boobs wobbled enticingly, calling me like mythical sirens to a sailor, and I followed after them.\n\n\"I'm not going to take you from them,\" she continued. \"I don't actually want to date you or anything, to take up your time or otherwise prevent you from hanging out with your friends. I'm not really the settle-down-with-a-steady-boyfriend type. But oh my GAWD what you did to me with that backrub lit a fire in my pussy that's not gonna get quenched until I feel every inch of your big dick plugging me fucking FULL.\"\n\n\"Uhhh...\" I muttered stupidly, a little too much happening at once for my brain to process.\n\nBy now, Holly got me right in front of a couch. I'd gone a little soft coming down the stairs after my aborted masturbation session, but had stiffened right back up from Holly's kiss and the sight of her bare naked breasts. Telling me she wanted to feel every inch of my big dick in her pussy was just icing on the cake, and I was pitching a pretty big tent in my pajama pants.\n\nOr at least, I had been. Holly yanked both my pants and boxers to my ankles before pushing me down into a seated position. And then she knelt on the rug, jacked my shaft a couple of times, and before I realized what was happening, she shoved the first four inches of my dick into her mouth.\n\nOh. My. GAWD.\n\nI was getting a blowjob.\n\nI was getting an actual blowjob.\n\nHoly crap, I was getting a fucking BLOWJOB.\n\nNeon blue hair bobbed up and down in my lap, rapidly revealing the majority of my big cock before abruptly making it disappear once again. She looked up at me with those twinkling hazel eyes, observing the rapturous expressions crossing my face. The girls had always raved about how much they loved my backrubs and how I made them feel so amazing inside, and yet I couldn't really understand exactly how that felt.\n\nBut if it felt anything like the feelings Holly was giving me right now, well, let's just say it suddenly made a lot more sense why the girls constantly asked me to give them all backrubs.\n\n\"Oh my gawd, Holly. Oh, fuck. Oh, fuck!\" I groaned, unable to process the overwhelming sensations. Her blowjob was soooo much better than masturbation, and I couldn't get a grip on what was happening to me. I tried to put my hand on top of her head but my arm wouldn't work right. I just sort of melted into the couch, throwing my head back and letting it loll left and right while I tried to get my vision to stop swimming. And all too soon, I felt my balls beginning to coil.\n\n\"Shit-shit-shit-shit-shit,\" I stuttered, completely at wit's end. But I had just enough presence of mind to exclaim, \"I'm gonna cum! You're gonna make me cum!\"\n\nHolly popped off my prick for a few precious seconds, jacking my shaft in her right hand while grinning up at me. \"How do you want to blow? You want me to swallow it? You wanna cum all over my face? Maybe blast all over these big tits you keep staring at?\"\n\n\"Yes! Yes! Yes!\" I howled, every one of those options sounding absolutely amazing.\n\nHolly laughed and went back to sucking me, gnawing on the knob while continuing to stroke the shaft. And in the end, I did all three.\n\n\"I'm gonna... I'm gonna... Eeeyarrrghhh!!\" I screamed as my dick erupted. The first two shots, the blue-haired beauty took straight into her mouth. After that, she pulled back and ducked down so that my next two shots hit her forehead before gravity started pulling the creamy ribbons downward. And finally she sat up straight, milking out the rest of my sticky sperm all over the upper slopes of her big breasts.\n\nI watched all this happen, scarcely believing it was real. As of this afternoon I had never even touched a girl's bare nipple nor had my dick handled by anyone but myself. Tonight I'd watched myself cum in a hot girl's mouth and all over her pretty face. And then suddenly it was all over, and my head dropped over the backrest as my chest heaved in a desperate plea for oxygen.",
        "\"Holy shit, Matt,\" Holly chuckled. \"You came buckets. Was that your first ever blowjob? You held out longer than I would have thought.\"\n\nI managed to nod wearily, eventually summoning the strength to pick my head up and look down at her again. Even though I'd just cum thirty seconds ago, I felt myself starting to get hard again at the sight of such a pretty girl scooping my jizz off her face and tits and popping her cream-coated fingers into her mouth, sucking on them with relish.\n\n\"Mmm, I love the taste of cum,\" she said with a giggle. \"I'd give more blowjobs, but I don't want to get a reputation as a slut. You're not the type of guy who'd blab to his friends though, right? Well, actually, who am I kidding? The whole BTC is gonna know about this soon enough. But you're not gonna tell any guys about this, right?\"\n\nI shook my head fervently. If my silence was the price to pay for such incredible feelings, I would happily pay it.\n\n\"Good to know. Then we can probably do this again a bunch more times.\" She flashed me a pixie wink while suckling on her index finger. There was a tissue box on the corner table, and she grabbed a few to finish wiping herself off. \"But first, I think it's time you showed me your bedroom.\"\n\nI looked at her stupidly for a second, pointing off toward the stairs before I realized I needed to stand up and actually take her there. After all, I would need to be present for what she had next in mind. I pulled up my pants and stood, gesturing, \"Uh, this way.\"\n\nStill smiling, the topless girl followed after me while I led her back to the foyer and then up the stairs, pausing to collect her shirt and bra. I could only imagine what would have happened had Mother come home while those articles were still on the floor. Hell, I could only imagine what might happen if Mother came home while Holly was still here. But I pushed those thoughts from my mind. It wasn't even 8:30 yet and Mother rarely arrived before 10.\n\nThe Master Suite was right at the top of the stairs, with two bedrooms and a bathroom further down the hall. My mom's office and a guest bedroom were downstairs on the main floor, and it was that guest room where the girls often went to have private conversations. Very rarely had anyone other than Belle come up into my bedroom. Whenever one of the BTC came over to study, there was plenty of room elsewhere in the house.\n\n\"Umm, pardon the mess,\" I muttered as I led Holly inside. \"I wasn't exactly expecting company.\"\n\n\"Don't worry about it. The only thing I'm looking at is you.\" Taking hold of my hand, Holly spun me around and pulled my head down to hers for a kiss.\n\nThere was about a seven-inch height difference between us, so I would've needed to stoop a little to kiss her. Instead, I simply picked her up in my arms so that she could wrap her legs around my waist, crooning happily into my mouth as our tongues battled. And we made out like... well... a pair of horny teenagers until she started tugging at my shirt, eager to get to the next part.\n\nWhen she pulled her lips off mine, I gasped, \"I wanna eat you. I've never done that before.\"\n\nGiggling mirthfully, Holly brushed neon blue bangs back from her face and nodded. \"Works for me.\"\n\n\"You might have to tell me what to do.\"\n\nHer hazel eyes sparkled. \"Happy to teach.\"\n\nWith that, I turned and laid her down across my bed. Then after whipping my shirt over my head, I tossed it in the vague direction of my laundry basket and knelt on the floor in front of her. Holly kicked off her shoes and was already tugging down her leggings. And a few seconds later, I had a completely naked girl in my bed for the very first time.\n\nThe blue-haired beauty parked her feet on the edge of my mattress, raising her knees up into the air while spreading her thighs out wide. A pretty pink pussy with puffy lips already flowering open in arousal greeted me, her mons shaved completely bare.\n\nI chuckled. \"I was half-expecting you to have a neon blue landing patch.\"\n\nHolly giggled. \"That's a good idea, actually.\"\n\n\"I like the tattoo though,\" I added, pointing to the small image of a pair of red cherries joined together by a green leaf tattooed within her bikini area.\n\nHolly giggled again. \"Only a select few ever get to see THAT one.\"\n\nI leaned forward, inhaling her sweet musky scent. I'd smelled the aroma of aroused girl before, but never from quite so close, and the flavor called to me like honey to a bee. My mouth was on her clit in an instant, finding that little pea-sized ball and nibbling it gently. Holly's legs slammed shut around my ears, her feet losing their grip on the mattress to start drumming her heels against my back. And then we were off to the races.\n\nDespite her offer to teach, Holly didn't really say anything coherent for the next fifteen minutes. She screamed and she screeched. She wound her fingers through my hair and tugged on the follicles none-too-gently. And the pretty teenage girl pinned beneath my face thrashed her way through at least three orgasms as far as I could tell.\n\nThe entire time, I simply tried to read Holly's reactions. At first, flicking her clit with my tongue over and over again seemed to really get her going, but after a while she got used to the sensation and didn't react quite so much. I switched to more of a sucking motion, almost as if I were giving a blowjob to a tiny, female cock, and she really got into that for a while. But again, once she got adjusted to the feelings, she settled down.\n\nThere were a lot of different things she liked, but I had to keep changing it up. I'd read about licking the alphabet, which worked fine for stimulating her into squeals and sighs but not so much for pushing her over the edge into orgasm. I tried to stray away from her clit for a while, but she just sort of squirmed and shifted her hips trying to get me back, so I quickly figured I should simply stay focused on that little nub, at least for my first time. If we had repeat encounters in the future I could try experimenting a little more, but for now I really wanted to make her happy. And from the sounds she was making and the way she kept flooding my face with girlcum, I seemed to be doing a pretty good job.\n\nBy the time Holly started ramping up to her third climax, I'd started to develop a routine not unlike the way I figured out the best order for giving massages. I pushed and I prodded. I licked and I swirled. I nibbled down gently, and even not so gently when appropriate. And I held on for dear life when she squeezed her thighs around my head, threatening to suffocate me while her hands pulled my hair and her heels hammered my back.\n\nAt last, she pushed me away from her crotch and rolled over onto her side, curling into a fetal position. \"That's it, that's it. No more,\" she gasped, visibly trembling. Holly suddenly looked smaller, less the larger-than-life Miss Popular she always seemed to be at school, and more just another teenage girl in a little bit over her head, the same as the BTC members I'd come to adore.\n\nI reacted the same way I had when Belle had started crying in my minivan. I quickly slid up onto the bed, spooned myself behind the blue-haired beauty, and hugged her close. For a moment I forgot about Holly's nudity, but only for a moment. After that I was supremely conscious of the fact that my left forearm across her midsection was pressed against the bare undersides of her breasts while my right forearm was pressed against the upper slopes of her breasts at the same time. And that didn't even mention the way my second erection was pressed against her ass, although I still had my pajama pants on in-between us. If it hadn't been for that, this close to a wet and waiting pussy I would have been sorely tempted to push myself inside.\n\nBut I did have pajama pants, and despite her nudity I was worried about Holly's state of mind right now. \"You alright?\" I asked with genuine concern once she seemed to calm down, squeezing her tightly.\n\n\"Alright?\" she whispered with a bit of a laugh. \"I feel amazing. You're a natural.\"\n\n\"Oh.\" I relaxed my grip. \"For a second there I thought you were crying.\"\n\n\"Well... I guess I was.\" Holly spun around in my grasp, wiping moisture from her eyes, although her expression was the same flirtatious mirth she showed around school. She grinned broadly and quickly moved in to kiss me. And when she pulled back, that sparkle was back in her hazel eyes. \"You overwhelmed me. That's a good thing.\"\n\n\"Oh.\"\n\nGiggling, she kissed me again. This one was a nice, long kiss with plenty of tongue, and by the end of it her hand was on my package, rubbing my erection from outside my pants.\n\n\"Time to get this bad boy inside me,\" she husked, full of need, and then kissed me again.\n\n\"I still can't believe the girls said it would be okay,\" I murmured. Our mouths then met once more.\n\n\"Mmm... Sam took some convincing.\" Her tongue played inside my mouth for a few seconds. \"She didn't want to let me at first.\"\n\n\"Wait, what?\" I dodged her next kiss, furrowed my eyebrows, and gave Holly a serious look. \"Sam didn't?\"\n\nHolly shrugged like it was no big deal. \"Not at first. It was kinda weird, actually. Back at the pool, when I first asked if they'd be okay with me seducing you, Sam was all for it. She said she always felt guilty about how much the BTC teased you without it ever going anywhere. So when I... well... asked permission... she was all, 'Go right ahead!'\"\n\n\"But then when we started messing around on the couch during the movie,\" I began.\n\n\"And Sam got up and walked out in a huff,\" Holly finished for me. \"I get it. Girls are territorial. She'd thought she would be okay with it, but when you and I started doing stuff right in front of her face, she was all, 'Nuh-uh. Not MY man.'\"\n\nI frowned. \"You say that like it's from personal experience.\"\n\nHolly blushed and looked embarrassed. \"Another friend of mine; won't name names. I thought her boyfriend was hot, and she wanted to spice up their relationship, so she invited me to join them for a threesome. Things started off great, but when I started going down on him and he started moaning my name, she got upset and stopped everything right then and there.\"\n\nI winced. \"Ouch.\"\n\n\"It's alright. We're still friends, but I'm not allowed to flirt with him anymore. No big deal. Lots more yummy guys to sample. Like YOU.\"\n\n\"How'd you change her mind?\"\n\n\"I didn't; Alice did. Well, Belle and Zofi too, but mostly Alice. She was all, 'Matty's not our boyfriend. We can't stop him from being with other girls.' And Sam was all, 'Yes, we can! He's ours! He belongs to the BTC!' So then I'm all, 'Well what if I join the BTC?' And then all four of them were all, 'Well if you're in the BTC then you can't fuck him. None of us can!' So then me joining the BTC was off the table and it was back to whether or not Sam would let me... or let anybody have sex with you. And Alice started calling out Sam on the unfairness of all that. I mean, it's not like YOU would stop Sam from hooking up with some other guy, would you?\"\n\nI snorted. \"Of course not. She already HAS hooked up with other guys. Sam's not my girlfriend.\"\n\n\"Exactly. And you're not their boyfriend. So once Sam wrapped her head around that idea, it was no longer a question of whether she had a problem letting you have sex with another girl, but whether she specifically had a problem with ME. And she insisted she didn't have a problem with me. In fact, she said she'd rather it be someone like me who wouldn't try to make you a steady boyfriend and take you away from them.\"\n\nIt took me an extra couple of seconds to process all that, but I finally nodded and said, \"Makes sense, I guess.\"\n\nShe took one look at my furrowed eyebrows and thoughtful expression and said, \"This conversation isn't exactly the most arousing thing we could be talking about. My fault. I'm sorry. We should get back to the good stuff.\" She started rubbing my package again.\n\n\"No, don't apologize. I'm glad we talked about it. I don't think I could've gone through with it without being sure the girls are okay with it.\" I frowned. \"That said, the other girls don't know about this, do they?\"\n\n\"What do you mean?\"\n\n\"Naimh and Mari: they weren't part of the conversation.\"\n\n\"You're not their boyfriend, either.\" Holly slid her hand into my pajamas, wrapping her hand around my still-hard erection. Whether or not this had been the most arousing conversation, I was still an 18-year-old boy in bed with a gorgeous, naked girl.\n\n\"Still...\"\n\n\"C'mon, Matt. You're handsome, tall, and really fucking good with your hands and tongue. You're considerate and patient, superhumanly patient to put up with all the teasing you go through. You should've gotten laid a hundred times by now, but you're surrounded by six big-titted cockblockers that scare off all your prospects. Don't you think it's time you finally lost your virginity?\"\n\n\"Nngh,\" I grunted, my eyelids fluttering at the pleasure Holly's hand was giving me.\n\nShe rolled me onto my back and pulled my waistband down to mid-thigh, exposing my dick and elevating it to a near-vertical angle. She pumped it a little faster and a little harder before ducking her head and taking a long lick along my shaft from balls to tip. \"I'm soooo wet for you. I'm fucking soaked, actually, after that tongue-lashing you gave me. And I can't wait to feel you deep inside me.\"\n\n\"Ohhh, Holly...\" I groaned, draping my right forearm over my eyes.\n\nAfter swirling her tongue around my crown, she bobbed her blue-haired head up and down a few times, fucking her own face with my cock. I was as hard as I would ever get, and after yanking my pajama pants down to my ankles, Holly got up on her knees, swung one to the other side of my hips, and jacked my rod with her right hand while aiming it at her descending cunt.\n\n\"Oh, Holly,\" I moaned again. \"Holly, Holly, wait!... Wait-wait-wait.\"\n\nHolly froze just as my mushroom head touched her pussy lips.\n\n\"I... I...\"\n\n\"It's okay. You can do this,\" she urged gently and started lowering herself. I felt my battering ram begin to part her folds.\n\n\"Wait-wait-wait!\" I screeched again. This time, I twisted my hips and rolled away from her. She had to shift her balance to her left knee to avoid being toppled over.\n\n\"Maaatt...\" she whimpered, her voice full of need.\n\n\"I'm sorry!\" I sputtered. \"I'm sorry! I'm sorry! I just... I can't do this. I can't do this to them.\"\n\n\"Why NOT?\"\n\n\"Because!\"\n\n\"The girls said it was okay!\"\n\n\"That's not the point!\"\n\n\"Then what IS the point?\"\n\n\"I don't know!\" I lay flat on my back, both palms covering my eyes. Holly said nothing, although from the shift of the mattress I could tell she was still on the bed with me. She waited me out while I caught my breath and tried to gather my thoughts. But the more I tried to get a hold of them, the more they slipped through my grasp.\n\nFinally, I just opened my eyes and looked at her. Even if I couldn't figure out what was going on with my own emotions, the chivalrous part of me wanted to be considerate of hers. \"Holly, I'm sorry.\"\n\nShe sat upright, knees to her chest, with her arms wrapped around them. She didn't look angry or anything, just confused and a little... contemplative.\n\n\"I'm sorry,\" I repeated. \"I never meant to tease you. Believe me, I know exactly what it's like to be brought right up the bitter edge of doing something only to be stopped at the last fucking moment.\"\n\nHolly snorted and gave me an amused look. \"Yeah, I suppose you would know. Sam's told me stories of some of the things the girls have done in the name of teasing you. There was this one day when she sat in your lap wearing the skimpiest of bikinis. She parked those massive hooters on your face, blinding you with her boobs, really, and actually dry-humped herself to an orgasm on your throbbing erection.\"\n\nI rubbed my forehead. \"She's done that twice, actually. I wanted so desperately to slide her bikini top over just half an inch and pop her nipple into my mouth. I did enjoy grabbing her ass and helping her grind herself on my dick though. I nearly came in my swim trunks.\"\n\n\"But you didn't. She's never let you cum, has she?\"\n\nI shrugged and started to sit up, like her with my arms around my upright knees. \"It's part of the game.\"\n\n\"This part of the game sucks though. I don't think anyone's ever teased ME and not gone through with it before. I don't like this feeling. It sucks.\"\n\n\"I'm sorry.\"\n\n\"Stop saying that.\" She shook her head. \"How DO you put up with it? If a bunch of girls treated me like this, I wouldn't stick around. I'd say 'Screw you bitches. I'm gonna find someone who'll put out.'\"\n\n\"We both know I'm not gonna do that.\"\n\n\"Then you're a pussy.\"\n\n\"Calling me names isn't going to change my mind.\"\n\n\"I'm sorry, I'm sorry. It's just.\" She took another deep breath, her eyes big as she shook her head. \"Wow! This feeling SUCKS. I really think this is the first time a guy's ever turned me down!\"\n\n\"It's not you. You're amazing and gorgeous and I would have loved to have sex with you. It's me. I just-\"\n\n\"'It's not you, it's me'?\" she cut me off. \"Did you really just say that?\"\n\nI rubbed my forehead again. \"Trite as the sentiment may be, it's true. This has nothing to do with you and everything to do with me.\"\n\n\"You mean everything to do with your feelings for the BTC girls.\"\n\nI started to say 'no' but caught myself, sighed, and nodded affirmatively. \"I believe you when you say they gave their permission. But even so...\" I took a deep breath and sighed, a pained expression on my face.\n\nHolly eyed me carefully. \"You really love them, don't you?\"\n\nMy eyebrows popped. \"What?\"\n\n\"The BTC girls. You love them.\"\n\n\"I'm not in love with them. We're just friends.\"\n\n\"I didn't say you were IN love with them, like, romantically or anything. Six girls and one you? That would be really awkward. But it's always been clear how important they are to you, and how important you are to them. They're your best friends, and you can't shake the feeling that if you sleep with me, you're somehow betraying them.\"\n\nI frowned and thought about her words. Again, I started to say 'no' but caught myself, started to say 'yes' but stopped again, and finally said, \"Not that I'm betraying them, no. Whether or not Sam feels territorial, or any of the girls feel territorial, I'm NOT their boyfriend and they have no right to demand faithfulness from me.\"\n\n\"True.\"\n\n\"It really is about ME. I'm gonna sound like a 14-year-old girl, but this is my virginity. And...\" I paused to collect my thoughts. \"You're really hot, Holly. But as much as I like you, and as grateful as I am for you giving me my first blowjob and being the first girl I ever went down on - even my first naked boob - we don't really know each other.\"\n\n\"Oh, so it actually IS me. I'm not special enough to give your virginity to.\"\n\n\"I don't mean...\" My voice trailed off as I made a face. \"Well...\"\n\n\"I'm not one of the BTC.\" She started laughing.\n\n\"Well...\"\n\nHolly kept laughing. \"You realize you've totally screwed yourself. You're saving yourself for one of the BTC girls, but they've all agreed to never have sex with you.\"\n\n\"I never intended to SAVE myself for them.\"\n\n\"But when you had the chance to stick your dick inside me, you suddenly realized you ARE saving yourself for them.\"\n\nI buried my face in my palms again. \"This is so fucked up.\"\n\nHolly took a deep breath and exhaled slowly. I still had my face in my hands, but I could feel her shifting across the bed until she wrapped an arm around my shoulders and rubbed me softly. \"If it's any consolation, I think it's actually pretty sweet. I mean yeah, you do sound like a 14-year-old girl, but I also know my first time was nothing special, and that's a regret I'll have to live with for the rest of my life. Most guys are so eager to have sex that they don't really care about the girl they're with, as long as she has a working vagina. I think whichever girl finally gets your cherry will be very lucky indeed, because then she'll know for sure she means more to you than just an available pussy.\"",
        "I picked my head up and gave her a thankful look. \"You're taking this rather well.\"\n\n\"This has definitely been one of the most unique encounters of my life. I'll never forget the guy who stopped me from impaling myself on his dick right at the front gates.\" She sighed. \"And I'll never forget getting stuck with the female equivalent of blue balls. I really WAS hoping for a few more spectacular orgasms.\"\n\nWith that, Holly pecked my cheek and started getting off the bed, glancing around for her clothes. But I reached out and grabbed her hand, tugging gently.\n\n\"Turns out I AM saving myself for the BTC, but that doesn't mean I can't give you a few more spectacular orgasms. You never did teach me anything in the art of cunnilingus.\"\n\nHolly smiled and allowed me to pull her back onto the bed and push her into a reclining position while I slid my head down between her spread legs. \"I don't need to teach you anything. You really are a natural.\"\n\n\"Then let's just say I'd like to get more practice, if you don't mind.\"\n\nHolly giggled, put her hand on the back of my head. \"I don't mind at all.\"\n\n****\n\n- CHAPTER 3: Study Breaks -\n\n****\n\n\"So what happened then?\" Belle's eyes flicked to the prominent bulge in my shorts, but she quickly returned her attention to my face.\n\nI shrugged, folded my arms behind my head, and reclined back against the headboard in her bedroom. Only an hour earlier I'd sent Holly home un-fucked but satisfied nonetheless. I took a shower, felt the need to talk to someone, and walked next door to see Belle.\n\n\"I ate her out until she pushed my head away and curled up on her side, just like before. She actually tried to teach me for five minutes, telling me to go softer or harder or to push another finger inside her. But after her first orgasm she kinda got incoherent, so I just went to town making up stuff as I went.\"\n\n\"Well she obviously enjoyed it.\"\n\nI nodded. \"When she finally recovered, she took one look at my throbbing erection and pounced on it. She said she wanted to try deep-throating me, but she kept choking and couldn't quite pull it off.\"\n\n\"Was your dick too long or too fat?\"\n\n\"I, uh, I dunno. I didn't stop to ask.\"\n\nBelle laughed.\n\n\"In the end I came in her mouth, she swallowed it all, and then gave me a quick peck on the lips and said thanks for a fun evening. We got dressed and she left. That's it.\"\n\n\"That's it? Did you make any plans to hook up again? Maybe go on a date?\"\n\n\"A date? Didn't you hear the whole part about how she's not into having steady boyfriends?\"\n\nBelle shrugged. \"One date does not make a steady boyfriend. I'm just saying, if the whole night was that enjoyable for both of you, one would think you'd talk about doing it again.\"\n\nI shook my head. \"Not a good idea. She'd want to have sex, and I'd have to turn her down again, and she really didn't like the feeling of rejection.\"\n\n\"Yeah, exactly why DID you reject her?\" Belle screwed her face up. \"I mean, when the rest of us went home last night, I assumed you were going to wake up this morning an ex-virgin.\"\n\nI averted my eyes and shrugged. \"I just told her I wasn't ready yet. That I had performance anxiety and couldn't go through with it.\"\n\n\"Yeah, you said that. But knowing what I know about Holly, she would've just tried to convince you otherwise. Believe me, that girl was HOT to get you buried deep inside her pussy last night, and all you'd have to do was lay there and let her ride you. If you popped off early, so what? She'd just suck you hard so you could try again. I can't believe she'd back off with so simple a deflection. And then despite your rejection, things were patched up enough that you still went down on each other afterwards. So what DID you say to her?\"\n\n\"That was it,\" I lied, shaking my head. \"I told her I wasn't ready, and she wasn't going to rape me or anything, so she accepted it. And maybe I really am that good at eating pussy that she was happy to settle for a few more oral orgasms. Simple as that.\" \n\n\"Matty, this is me. I can tell when you're hiding something.\"\n\n\"Belle, seriously.\"\n\n\"Alright, alright, I won't push you. Yet.\" She got a teasing smirk on her face that let me know she was going to worm the truth out of me eventually.\n\nI sighed, trying to figure out how I was going to hide the truth. I knew the idea that I was saving myself for the BTC would be a bomb that could fracture the whole group. The girls might feel obligated to have one of them put out for me, which could start a chain reaction of them squabbling about which one of them should get my cherry (Neevie, maybe? Hopefully?) and disrupt the balance of the group for the same reasons none of them was allowed to date me. And let's say one of them started having sex with me, then maybe one or more of the others would want to because it would only be \"fair\", and girls could get jealous about that sort of thing, right? And even if some of them started having sex with me, maybe some of them would NEVER want to have sex with me, and the pressure of hanging out with a guy you KNOW wants to have sex with YOU could strain my relationships with them and ruin the comfortable, \"safe\" bond that we'd formed over the years. And that didn't even consider the peer pressure part the girls had already discussed about feeling obligated to \"keep up\".\n\nI'd explained all this to Holly and asked her to not tell Sam the exact reason I'd turned her down. Holly had offered to lie and claim she DID get my cherry, and I'd been sorely tempted to take her up on that offer. But the idea of going around pretending I'd lost my virginity - and then somehow answering the avalanche of questions I'd get from the BTC about said de-virginization without losing my mind - did not appeal.\n\nFortunately, Belle was no longer scrutinizing me and didn't notice my contemplative state. She looked pretty contemplative herself, reclining on one side across her bed propped up on one elbow and holding her cheek in her palm.\n\n\"So what was it like?\" she asked quietly, without looking at me.\n\n\"What was what like?\"\n\n\"Oral. What did it feel like to have her mouth on you?\"\n\nI grinned at the memory. \"It felt incredible.\"\n\n\"Better than masturbation?\"\n\n\"WAY better.\"\n\nBelle shivered, and I noticed the way her nipples started poking through her sweater. I also noticed the way her free hand drifted down from her hip, rubbing her thigh as it moved closer to her crotch.\n\n\"You imagining Holly putting her mouth on me?\" I asked quietly. \"Maybe imagining you putting your mouth on me?\"\n\n\"Matty!\" she yelped and gave me a scandalized look.\n\n\"Imagining ME going down on YOU?\"\n\n\"MATTY.\"\n\nI arched an eyebrow. \"Ah, I see. Imagining Holly going down on you.\"\n\nShe sat up and threw a pillow at me while I laughed.\n\n\"Hey, fair's fair. You girls are always teasing me.\"\n\nShe pursed her lips and mused on that. \"You're right. We do.\" Sitting up straight, the petite strawberry-blonde crossed her legs and leaned forward with a gleam in her eyes. And in a sensuously thick voice, she began, \"Fine, I admit it. I AM fantasizing about putting my mouth on you, and this isn't the first time. I fantasize about sucking your big, throbbing dick a lot, actually. Two weeks ago, we were eating dinner with my dad. I pictured myself crawling underneath the dining table and cramming every last inch of your beautiful cock between my lips and giving you the most incredible blowjob until you filled me with gallons of sperm. But in MY dreams, I can do the deep-throat Holly couldn't quite pull off. I'd be better for you than she was.\"\n\n\"Okay, okay, you can stop now.\" I averted my eyes and held up my hands defensively. \"You've made your point.\"\n\nBreathing hard, Belle slid one hand beneath the hem of her sweater, which was tight enough for me to see the outline of her fingers inching upwards until she'd started cupping one of her own D-cup breasts, all while adding, \"And yeah, I was imagining you going down on me. You have no idea how many nights I lay awake, fingering myself while imagining you and your long tongue are between my thighs.\"\n\n\"Belle...\" I warned.\n\n\"I'm so jealous of Holly, you know that? She actually got to feel you cumming down her throat while I can only fantasize.\"\n\n\"Belle,\" I said a little more strongly.\n\n\"Do you realize how many times I've wished you'd come lick ME to an orgasm?\" Belle's other hand slid into her crotch. \"And then fucking HOLLY... who you barely even know... got what, six from you? Seven?\"\n\n\"BELLE. Stop it.\" I barked quite loudly, grabbing one of her pillows and throwing it at her. \"The teasing's not fun anymore.\"\n\nShe'd pulled her hand out of her sweater to block the pillow, and now sat up straight as well. In a challenging voice, she intoned, \"Who's teasing?\"\n\n\"Hell, B. You don't need to make up crazy shit like that just to mess with me.\"\n\nShe gave me a serious look. \"I didn't make up a thing.\"\n\nI blinked twice and frowned at her. \"What?\"\n\nShe repeated, more slowly this time so she could enunciate each word, \"I didn't make up a thing.\"\n\nI kept blinking and shook my head, not quite believing what she was telling me. \"Seriously?\"\n\n\"Is it really such a surprise? We ALL fantasize about you. Just like YOU fantasize about us, don't you?\"\n\n\"That's different. I'm a guy.\"\n\n\"And what, girls don't fantasize? Please, I ring Baby Belle at least three times a week,\" she scoffed.\n\n\"But you never said anything like THAT before. All the stuff about crawling under the dining table while your dad was there, that shit was real?\"\n\n\"That shit was real.\" Belle shrugged. She reclined back on her elbows and raised her knees, spreading them out to the sides. Biting her lip and giving me an intense, sultry gaze, she slid her right hand beneath her waistband, murmuring, \"So many times I've been in this position, rubbing myself while dreaming about you crawling between my legs and eating me out to incredible orgasms.\" \n\nMy eyes got big. Was she actually masturbating herself right here and now? I blinked a few times and muttered lamely, \"Uh... Do ALL the girls have had these kinds of fantasies about me?\"\n\n\"Well, you, Keanu, and Brat Pitt.\"\n\nI thought about that. \"Fair enough.\"\n\n\"You gonna say you haven't had the exact same kinds of fantasies about all of us?\"\n\nI was about to nod, but caught myself and winced. \"Well...\"\n\nBelle noticed and frowned. \"I know. Everyone but me, right?\" Shaking her head as she pulled her hand out of her shorts, she turned and slipped off the bed.\n\n\"You're gorgeous, B,\" I said apologetically. \"I just-\"\n\n\"I know, I know. I'm like a sister to you.\" She stretched out the word as if it was a curse.\n\n\"You're my Annabelle. And that's a good thing!\"\n\n\"Is it?\"\n\n\"C'mon. You can't say I'm not like a brother to you.\"\n\n\"You're like a sexy STEP-brother to me.\" Shaking her head again, Belle paced away toward the door, but she only took a few steps before turning back to face me. \"Look, I know you try not to objectify me. I get where your heart comes from. But I don't have the same problem fantasizing about you. I KNOW we're not related, and I know you'd treat me right if we ever did cross that line.\"\n\n\"But we can't cross that line, even if we wanted to. We have The Rule for a reason, one that has nothing to do with our brother-sister relationship. We could never do that to the rest of the BTC.\"\n\n\"I know, I know. I just...\" Shaking her head, she gave me a helpless look. \"You're hot and sexy and I can't help but fantasize. A girl can dream. Just like I'm sure you dream about sticking your dick between Sam's big tits and blowing a load all over her face. That would be crossing a line, but you still think about it, don't you?\"\n\nI sighed. \"Well I certainly am now. But fantasizing about Sam is one thing. We're friends and all, but if something happened and things got awkward and our friendship got ruined... I'd get over it. But I wouldn't get over you. You're my Annabelle. My feelings for you are just so much stronger and more important to me than my feelings for Sam. YOU'RE so much more important to me than Sam.\"\n\nBelle smiled at that. \"Good.\"\n\n\"I don't want to risk screwing things up between us. Do you?\"\n\n\"No, of course not.\"\n\n\"Then don't push me on this, alright? I...\" I took a deep breath and gave her a serious look. \"I love you, Annabelle. You mean the world to me, but... not in THAT way. You're my little sister, and I can't sexualize you. And to be honest, to hear that you've been sexualizing me... It's kinda freaking me out.\"\n\n\"Really?\"\n\n\"It's kinda weird, actually.\"\n\n\"No-no-no-no, please don't be weirded out.\"\n\nI took a deep breath. \"I'm trying not to. It's just... I thought things were cool between us. We've grown up together. We hang out all the time. I know Mari's your bestie and I've spent most of the last five years playing video games with Alice, but I share my entire life with you and I really had no idea you were... like... masturbating to thoughts of me.\"\n\n\"They're just random thoughts.\" She waved dismissively. \"I really don't want you weirded out about it. I'm sorry. Can we please just forget I ever said anything?\"\n\nI shrugged helplessly. \"I dunno. Those fantasies you told me are gonna be kinda hard to forget.\"\n\n\"Then do it as a favor to me, your Annabelle. Maybe fantasies should just be left as what they are: fantasies. Everybody's entitled to a little fantasy, right?\"\n\n\"Of course, of course.\" I took a deep breath and calmed myself.\n\n\"I just really want to make sure I haven't screwed up my relationship with you. You're my Matthew as much as I'm your Annabelle. We can't afford to get awkward around each other just because you know I've masturbated to thoughts about you.\"\n\n\"I know. I just need to wrap my head around it a bit.\" I paused, collected myself, and then gave her a reassuring smile. \"I mean when I really think about it, it's actually quite flattering. I'd like to think ALL of the girls have masturbated to thoughts about me.\"\n\nBelle nodded. \"Oh they have. They've all told me about some of their fantasies. It's just part of... Well... Let's just say the BTC has a unique social dynamic.\"\n\nI grinned. \"I'll say.\"\n\n\"So we're good? No awkward feelings?\"\n\nI nodded. \"We're good.\" With that, I opened my arms.\n\nHolding back tears of relief, Belle ran and launched herself into my hug.\n\n****\n\nIn the morning, the BTC girls didn't waste any time coming to get the first-hand scoop about what really happened between me and Holly last night. \n\nIt started with Alice. She was waiting for me and Belle at the parking lot and came over to us as soon as we stepped onto the curb. Literally, the first words out of her mouth were, \"Is it true that you turned down Holly because you were saving yourself for the BTC?\"\n\nI blinked twice and looked around to make sure nobody else was nearby. Other people were walking in from the parking lot, so I quickly grabbed Alice by the elbow and pulled her toward a quiet corner where I could at least have my back to a wall and see if anyone was eavesdropping, and Belle followed. \"Where the hell would you get that idea?\" I hissed. \n\n\"Neevie told me,\" Alice whispered, understanding the need for secrecy. \"She got it from Zofi, who got it from Sam, who talked to Holly like five minutes after she left your house.\"\n\nBelle stepped in closer. \"That's why you turned Holly down? You told her you were saving yourself for us?\"\n\nBelle read the stricken expression on my face and already knew the truth. Alice did, too. Pinching the bridge of my nose, I muttered, \"I asked her to not tell anyone.\"\n\n\"Wow,\" Belle breathed. \"Okay I guess that makes sense...\"\n\n\"Wait, which of the girls are you saving yourself for?\" Alice interjected, looking confused. \"Which of the girls are you in love with? It's not me, is it?\"\n\nShe looked genuinely worried and I smirked at her. \"Would it really be so bad if I was in love with you?\"\n\n\"Yes!\" she exclaimed a little too loudly and immediately caught herself. Taking a deep breath, she explained in a calmer voice, \"It would ruin our friendship. I like messing with you and feel safe teasing you. I'm not an overtly physical 'pay attention to me and make me feel beautiful' girl like Sam, but it's nice to know that even with all the hot girls around, I can still give you a boner.\"\n\nI thought to the last time Alice climbed into my lap wearing a bikini, rubbing her butt into my crotch and sticking her big boobs under my chin. \"Yes, you certainly can.\"\n\n\"See! THAT look in your eyes. It's quite validating.\"\n\nI smiled and shrugged. \n\n\"It gives me a rush and I don't have to worry about you grabbing my ass or taking things the wrong way. But yes, you being in love with me would ruin everything. You've been my friend since we were kids on the elementary soccer field. You're the one guy that doesn't treat me like a potential mate, and I cherish that sense of comfortability. I've tried to make friends with other guys, but there's always the tension of whether or not they'll ask me out, or if I'll get interested enough to ask him out. It's all too nerve wracking and I'd hate it if that kind of will-we-or-won't-we-start-dating tension ever cropped up between us.\"\n\nNodding, I replied, \"I totally agree.\"\n\n\"So you're not in love with me,\" Alice said, more statement of confirmation than a question. \n\nI nodded. \n\nAlice not-so-subtly flicked her eyes to Belle.\n\n\"I'm not in love with ANY of the BTC,\" I stated firmly. \n\nAlice mused on that for a second before shrugging. \"If you say so.\"\n\nI shook my head and gestured toward the school. \"C'mon, let's get to class.\"\n\n****\n\nSam and I shared our first and second periods, so we always walked together from one to the other. Sam was busy talking to the teacher before class (she was a pretty driven student), so there wasn't time for us to talk before the period started, but as soon as we walked out the door she wrapped her arms around mine, leaned in close, and started whispering just loud enough for me to hear while we kept walking to our next class. \n\n\"Are you or are you not in love with one of the BTC girls and saving yourself for her?\"\n\n\"Ah, hell,\" was my only response. Her accent somehow made her sound pretty angry.\n\n\"So Zofi and I think it's either Belle or Neevie. Belle because you two have always been close, and Neevie because it's clear you've always been super attracted to each other, you think she's the most gorgeous thing you've ever seen, and if it wasn't for The Rule you two would've hooked up already.\"\n\n\"I'm not in love with either of them. Belle's like my little sister and that's never gonna happen. And yes, Neevie is super hot, but I'm not in love with her.\"\n\n\"Then which one of us? Me? Zofi?\"\n\n\"No, no, none of you,\" I cut her off before she kept naming names. \"I'm not in love with any of you. Lust, certainly. But not love.\"\n\n\"Then why didn't you fuck Holly?\"\n\nI winced at her saying the f-word aloud, spotted an out of the way corner, and pulled Sam towards it. She still clung to my arm closer than any non-dating couple would, so we got a few stares, but we paid them no mind before I got my back against a wall. Surrounded on three sides, I felt a little more comfortable having this conversation. At least our second period wasn't far away. \n\n\"Why didn't you fuck Holly?\" Sam repeated. \n\n\"I still don't really know,\" I said, a little exasperated. \"I'm starting to wish I did just so I wouldn't have to deal with all these questions about why I didn't. Yes, she's really sexy and we had a great time and under normal circumstances I would have plowed the hell out of her. But I couldn't shake the feeling that if I did that, I'd... I'd...\"\n\n\"You'd be giving your virginity to someone you didn't really love,\" Sam finished for me. \"Hence all the questions about which one of us you're in love with.\"\n\n\"I didn't say that.\""
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "high school",
        "teenagers",
        "teen",
        "18-year-old",
        "virgin",
        "busty",
        "group",
        "blowjob",
        "big tits",
        "big breasts"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-big-tits-club-ch-01-04"
}