{
    "title": "The Maestro Ch. 06",
    "pages": [
        "The orchestra was a tuneless jumble of noise, each practicing a different part, some just improvising little melodies on the spot. It was Saturday afternoon, and no performance was scheduled for that evening, so everyone was relaxed. Claire was packing away her things at the far end of the stage when Sebastien approached her.\n\n\"Claire, how would you like to come to dinner with me tonight?\"\n\n\"Why, Maestro, are you asking me on a date?\"\n\nHe frowned down at her. \"Not in so many words,\" he said stiffly.\n\nShe pursed her lips, unsuccessfully trying to hide her amusement. \"I'd love to.\"\n\n\"I shall come for you at six.\" As he walked away, Claire felt her heart speed up. Whatever he had said, this was a date. Where were they going to go? Oh. My. God. What was she going to wear?! Okay, this was ridiculous. They saw each other almost every day. He had seen her in almost everything in her closet, and he had seen her in nothing at all.\n\nShe tore apart her closet anyway. She really wanted to knock his socks off.\n\nBetter start from the ground up, she thought, picking up a lacy black garter belt and slipping it on over her bare skin. She glanced down at her neatly trimmed mound peeking out from underneath the lace, and decided to forego the panties. She felt sexy already. She clipped on black silk stockings with a dramatic seam up the back, and picked out a black push-up bra. Over everything, she smoothed a body-skimming siren red dress.\n\nShe bent over to slip on stiletto heels, taller than she normally wore, and admired her cleavage in the bedroom mirror. Sebastien, so much taller than she, would have a nice view.\n\nClaire did her hair, makeup, circled her throat with cream-colored pearls. At 5:50, she was pacing her living room nervously, getting used to her heels. When she caught a glimpse of herself in the mirror, she almost didn't recognize herself. For the first time, she could see herself as the kind of woman she had always pictured on Sebastien's arm. Perhaps it was a little over-the-top, but she felt so different, so sexy.\n\nThe buzzer rang, interrupting her thoughts. Her heart stopped. She hit the speaker button.\n\n\"Hello?\" Her voice sounded calm, but breathy.\n\n\"Mon abeille, it is I.\"\n\n\"I'll be right down.\" She grabbed her jacket and bag, walking out into the hallway. She took a deep breath, willing herself to walk steadily. The last thing she needed tonight would be to break her ankle. The elevator was torturously slow, and she used the time to take slow, even breaths to calm her speeding heart.\n\nWhen the doors opened, she saw him, standing just outside the glass lobby doors. He was looking up off the street, and as she walked toward him, he turned. His eyes roamed her body, and as soon as she came out, he caught up her hand to kiss it.\n\n\"Mon abeille,\" he murmured against her skin, \"you take my breath away.\"\n\nThey drove deeper downtown to a tall hotel, and found themselves alone in the elevator going to the top floor. Claire reached out, timidly took Sebastien's hand. He rubbed his thumb over the back of her hand.\n\nThe room they stepped out into was unlike anything Claire had ever seen. The elevator they were in stood back-to-back with the service elevator, and two semi-circular bars surrounded them. Two rings of two- and four-seater tables ran around the edge of the room. The walls - what could be seen of them between the enormous windows - were painted a warm peach color. The lights were low, and the rose color of the dying sunset warmed the room.\n\nThey were led to a table with an ocean view, and ordered drinks. They chatted over cocktails - a Manhattan for Sebastien, a raspberry lemon drop for Claire - and lobster. Talked about the season they had just finished, the one that was to come, their summer session, music, the books they had each been reading - Fleming's Casino Royale for Sebastien, and Claire a book on medieval art.\n\nAfter dinner, Sebastien ordered port, and sat swirling it idly in its glass. He laid his other hand affectionately on Claire's thigh. Surreptitiously, she slid her dress upward underneath his fingers, until they were lying directly on the lacy top of her stocking and the naked skin of her thigh. Sebastien raised his eyebrows at her over his glass, running his fingers along the stocking top. Claire's demure smile encouraged him, and he slid his fingers slowly up, up, until they brushed her bare pussy lips. A soft sigh escaped her lips as she took in the surprised look in Sebastien's face.\n\nHe asked for the check.\n\nMoments later, Claire was slammed into the back of the service elevator by Sebastien, his mouth coming down onto hers in a crushing kiss. His hand was under her dress, rubbing her soft skin and making her so wet already.\n\n\"Mmm aren't you a naughty girl?\" he said, kissing a line down her neck.\n\n\"Ahh, ah, Maestro, a lady doesn't kiss on the first date.\"\n\n\"Good thing that isn't what this is,\" he replied, capturing her mouth again, his tongue tangling with hers. He drew back to bite her lip gently. She had her fingers on the button of his pants, when his hand stilled her. \"Not here, mon abeille.\"\n\nShe whimpered in frustration, sliding her hands over the front of him, thrilling at the feel of his hardness. She cupped her hands further down, squeezing softly. The elevator doors slid open, startling Claire. She looked past Sebastien, and was relieved to see that no one was there. He led her into the little hallway, and turned the corner at the end of it.\n\n\"Where are we?\" she whispered. He didn't answer, opening the door they found instead. The chill breeze swept in and raised goosebumps on her skin. \"How did you know where the roof access was?\" she asked, baffled.\n\nHe smiled secretively at her, pulling her onto the roof with him. She had been on the roof of relatively few city buildings - actually, none. It had strange protrusions, vents, wires. She didn't know what any of it really did. They walked around until there were a few protrusions between them and the door. Around one more vent pillar, there was an astonishing panoramic view of the ocean and much of the city. The sun had gone down, and the light was fading quickly, but an enormous moon was rising, casting pale light over the water.\n\n\"I was going to bring you up here anyway,\" Sebastien said, turning to her, \"but now I have two reasons to do it rather than one.\" He touched her cheek to get her attention, and bent to kiss her. As he pulled away, he watched with pleasure as her head tipped up and back, amazed to see the array of stars overhead. He gently pushed her back into the pillar behind her, smiling as she shivered to feel the cold metal through her dress. \"This is one of the tallest buildings in the city, mon abeille, and I am going to fuck you on top of it.\"\n\nA shudder ran through her body. Then she yelped, feeling her now-naked ass bumping against the pillar as Sebastien slid her dress up to expose her to the cold night air. His hands were on her, caressing, pinching her hardened nipples. Then she felt his cock rubbing up against her wet pussy, pressing into her. She let out a long, low moan, and then felt Sebastien's hand clap over her mouth. She struggled against him, but he shook his head firmly.\n\nThen she heard it. Voices.\n\n\"Where did you say we were supposed to put this thing?\"\n\n\"I don't know, somewhere up over there I think. I'll know the spot when I see it.\"\n\nClaire felt Sebastien's cock get even harder inside of her and he started pumping it in and out of her, slowly at first. The voices were getting closer. Her eyes widened, and she made to pull her skirt down over her garter belt. Sebastien hissed softly, \"leave it alone!\" He removed his hand from her mouth, warning her to be quiet.\n\nShe tried not to make any noise, but when he started rubbing her clit softly, it was pretty hard. She sucked in soft breaths and blew them out softly. He held one thigh up as he started fucking her harder.\n\nAll she could hear was the soft rustle of cloth as her pussy was pounded, her racing heartbeat, those steps getting closer every second. She chanced a glance to the side, but saw nothing. Sebastien's fingers were pushing her closer to the edge, but was too keyed up, too anxious they would be caught.\n\n\"Ah, here it is. Set 'er down right over here.\"\n\n\"Geez, finally,\" the other one grunted. \"This shit is heavy.\"\n\nSebastien leaned down, his lips next to her ear. \"Come,\" he commanded firmly, \"now.\" He bit down on her ear, and, surprising herself, Claire felt ripples of pleasure pouring over her body. She couldn't stop the tiny squeak she let out.\n\n\"Did you hear something, dude?\"\n\n\"Nah, let's get back inside. It's cold as fuck out here.\"\n\nThe steps were getting farther away now, to Claire's considerable relief. Her pussy was still clamping down, but Sebastien showed no signs of wanting to slow his fingers down.\n\n\"Stop, stop,\" Claire whined. \"I can't be quiet much longer.\"\n\nHis eyes flashed in excitement. \"I don't care. I want to make you scream,\" he said breathlessly.\n\nHe did.\n\nShe was shivering all over, Sebastien's cock sending little shockwaves through her with every thrust.\n\n\"Please,\" she moaned softly.\n\n\"Please what?\" he asked, with some difficulty.\n\n\"Please don't come inside me.\"\n\n\"Why not?\"\n\nShe rolled her eyes in embarrassment. \"I'm not wearing panties,\" she said, like it would be self-explanatory. Sebastien laughed in delight, but withdrew from her. She dropped to her knees right away, flicking her eyes up to meet his as she sucked his cock into her waiting mouth. His hand gently rested on the back of her head as he watched her. She felt his cock growing thicker in her mouth suddenly, and then streams of his come were splashing onto her tongue. He was sighing contentedly above her, and she swallowed, running her tongue over her teeth.\n\nHe helped her stand, pulling the bottom of her dress over her ass again and brushing the gravel from the roof off of her knees. He kissed her deeply, apparently not caring that she still tasted of him.\n\nWhen he pulled away, Claire rested her head against his chest, looking out at the bright lights of the city again.\n\n\"I know there is no music, mon abeille, but would you care to dance with me?\" She looked up in surprise. \"Well,\" he said, with perhaps a touch of embarrassment, \"that was what I intended from the beginning, but I could not help myself.\"\n\nShe smiled. God, he could be cute sometimes. She let him wind his arms around her, as she slipped her hands under his jacket to rest on his back. He twirled her around, humming melodies just above her head.\n\n-----\n\nIt was a day, just another one in what was becoming sort of a routine around Sebastien's house. After a Saturday night of debauchery, Claire and Sebastien spent a sunny Sunday morning together. He would make them breakfast, something simple, and bring it to her before she even had to get out of bed. Then they would brush the crumbs from the sheets, and he would go downstairs to play on the piano. Claire would detour into his bathroom, where he had the most exquisite shower, and meticulously wash her hair and scrub every inch of her body.\n\nShe would towel-dry her hair, leaving it damp and curling around her shoulders, and come downstairs to listen to Sebastien for awhile. Sometimes they would make love or, if Claire was too sore, they might rub cooling lotion into her skin, and then curl up on the sofa with books. They usually parted by lunchtime, sometimes going to the symphony hall together if they had a matinee performance.\n\nToday, Claire had come downstairs wrapped in a towel, and Sebastien had risen from the piano to come meet her. Cheekily, she smiled as she dropped the towel, and Sebastien was leaning down to kiss her when they heard a sound from the direction of the front door.\n\nTurning in surprise, they saw the front door wide open, and a tall, slender lady in the doorway with a shocked look on her face. Claire turned crimson, snatched up the towel and dashed upstairs. She struggled into the clothes she had left in Sebastien's bedroom, and listened to the increasingly loud voices in French drifting up from downstairs. She was too upset to try and understand what they were saying, but she guessed that Sebastien was telling his sister - for that's who the lady was - that she shouldn't have come over unannounced.\n\nProbably his sister was expressing her triumph at having been right about him seeing someone, and berating him for denying it and lying to her. After a few minutes, the door slammed again, and all she could hear was angry French muttering by Sebastien.\n\nSo, this was an opportunity to introduce them at last, but Sebastien obviously didn't want that. She didn't want to be the cause of family strife. She wanted to leave.\n\nShe ran down the stairs again. Sebastien tried to take her arm, and she yanked it back away from him.\n\n\"I'm going,\" she said, and strode toward the door.\n\n\"Mon abeille, wait, Claire!\" he called, but she was gone.\n\nShe half-expected him to follow after her, and her heart broke a little when he didn't arrive, even though she had to wait for the elevator. Tears welled up in her eyes. So perhaps he didn't care about her after all, if he wouldn't even introduce her. What was it he had said before? She was his plaything, and she was to be kept separate from his family. She'd thought she understood.\n\nShe crossed the lobby. The worst part was, there was no one she could talk to about it. No one who knew the situation... except the man she inexplicably ran directly into at the front door - Ren\u00e9.\n\n\"Hello, cherie,\" he said breezily, frowning as he saw her expression. \"I was just going up to see mon ami. What is the matter? Come, shall we go to my flat, and you can tell me what is troubling you?\"\n\nShe sniffed and nodded, feeling so grateful to see someone who she could pour the story out to. She kept quiet while they walked, not wanting to be overheard by random passersby. But as soon as they were in his apartment, she turned to him and told him what had just happened.\n\nRen\u00e9 sat her down in his living room, crossing to the window and looking out for a long moment as she finished, and he thought. He sat next to her, resting his hand familiarly on her thigh.\n\n\"You must listen to me, cherie. Sebastien cares for you; surely you know this.\" Claire only shrugged restlessly. \"Has he not told you?\" Ren\u00e9 asked with raised eyebrows.\n\n\"That's not exactly what he said.\"\n\n\"What did he say, exactly?\"\n\nShe felt her face grow warm as she remembered that night in the elevator, his crushing embrace, his soft, heartfelt words. \"Je t'adore.\"\n\nRen\u00e9 touched her cheek gently. \"You are crazy if you think that he does not care. And you care for him, too, do you not?\"\n\nClaire turned away, her eyes welling up with tears again. He turned her face back, leaned in closer to her, lips a hair's breadth from hers.\n\n\"What are you doing?\" she breathed.\n\n\"Just a kiss, to comfort you.\"\n\n\"I don't think-\"\n\n\"Sebastien would not mind,\" he said, moving to close the gap between them.\n\n\"That's where you are wrong, mon fr\u00e8re,\" came a voice behind them, darkly.\n\nRen\u00e9 turned with a half-smile. \"Ah, mon ami, I should have known you would be along shortly. How long have you been standing there?\"\n\n\"Long enough.\" Claire looked up at him in trepidation, her heart hammering away. \"Come here,\" he ordered. She moved to get up, but Ren\u00e9's hand on her leg grew firmer, keeping her on the sofa. He shot off something in French to Sebastien, who glared at him, retorting angrily. The two argued for a few moments, and again Claire was left out. Was Ren\u00e9 saying something about love? No, ridiculous.\n\nFinally, Sebastien huffed out a breath in frustration. \"Mon abeille, Ren\u00e9 evidently thinks I am mistreating you. Is that what you think, too?\"\n\nShe thought for a long moment. Over the past few months, they had developed an amazing, fulfilling relationship. The sex was incredible, and kept getting better. He was tender with her even when he was punishing her, and she finally felt that she was getting to know him a little bit. Sure, they had some arguments, but what relationship was without those? Their biggest problem was the secrecy they had imposed on everything. That and, perhaps, a reluctance to articulate their feelings, whatever they were. Looking back on it, she could see it so clearly. She did care for him. And, when she was honest with herself, she could see he cared for her, too.\n\nShe looked from Ren\u00e9 to Sebastien, both waiting for her answer.\n\n\"No, Maestro. You do everything but mistreat me.\" She wondered if the soft, warm feelings in her heart at that moment were showing on her face. Neither man gave any sign that it was.\n\n\"Then, come.\" His voice was softer, but still firm. Smiling at Ren\u00e9, she touched her fingertips to his cheek and rose from the sofa, walking over to Sebastien. She looked up at him, eyelids fluttering as she shivered all over. He took her wrist, pressing his fingers firmly around it, but not hard enough to bruise, just enough to feel that he meant business. \"Mon fr\u00e8re, I will see you tonight.\"\n\nRen\u00e9 gave a half-shrug, running his fingers through his hair. He seemed a little confused, but Claire was sure Sebastien would explain it to him later. Maybe.\n\nSebastien guided her into the hallway. As soon as the door had closed, he twisted her arm behind her back, a bit painfully. He jerked her against him and kissed her deeply. She felt so hot suddenly, as if her bones would melt. When he pulled her back, just as roughly, she saw no hint of smile on his face. He walked her all the way back to his own apartment without saying a word, keeping her wrist pressed into the small of her back.\n\nAs soon as they reached his apartment, he spun on his heel and snapped at her, \"So, is this how it is going to be? Running to another man at the first sign of trouble? And mon fr\u00e8re, at that. I am not sure if that is more or less upsetting than if it had been someone else.\"\n\n\"What? No! I-I ran into him downstairs, and he asked what I was so upset about. I didn't want to discuss it in public, and he invited me up to his apartment. It's just that he, well, he knows about you and I...\"\n\nHe looked dubiously at her, but she suspected it was really for effect. If he'd actually believed what he was accusing her of, he would have been way more pissed.\n\n\"I would have asked, but you ran out on me before I had a chance. What were you so upset about?\"\n\nClaire looked down at her feet uncomfortably. The tears were threatening to return and spill down her cheeks again. She forced herself to look up at him.\n\n\"Are you ashamed of me?\"\n\nClearly, this was not what Sebastien had been expecting to hear. \"Of course not, mon abeille,\" he said with a frown.\n\n\"Then why haven't you told your family about me?\"\n\nHe sighed, rubbed his hands over his face. \"Well, I do not know about you, but I have not chosen to discuss with my family every person I have ever had casual sex with. That is what we were having, perhaps, but no longer. To tell the truth, I have not had the words, even for myself, to say what we have together. What would I tell my family? Have you told your parents?\"\n\n\"I, well, not really. I may have said I was seeing someone casually, so my mom would get off my case about worrying I was lonely.\"\n\n\"So you see neither of us have been completely honest. Not with our families, perhaps not even with each other.\"\n\n\"You're right. I'm sorry. I shouldn't have run off, but I was so embarrassed, I guess I wasn't thinking straight. Forgive me?\"\n\n\"If you'll forgive me for forgetting to lock my front door,\" he said with a small smile, which Claire returned. \"Ahhh, mon abeille, what am I to do with you?\"\n\nShe bit her lip, looking at him from under her lashes, still damp with unshed tears. \"You could... punish me.\"\n\n-----",
        "Claire was shivering slightly in the weak sunlight filtering through gauzy curtains into Sebastien's bedroom. She stood in front of his bed in only a pair of pale blue satin panties. Sebastien removed his jacket, tossing it over the arm of the chair in the corner. Then he leaned down, brushing his lips against Claire's ear. She inclined her head away from him, her breathing coming quicker as he gently nibbled on her earlobe and down the side of her neck.\n\nHe slid his hands over her shoulders, turning her to face him.\n\n\"Show me,\" he said in a low voice.\n\nShe sat on the edge of his bed, looking up into his eyes, and drew her knees up to her chest, planting the soles of her feet on the bed. Then, ever so slowly, she spread her knees, exposing the silky fabric of the panties stretched tightly over her mound. He grasped her arms, pulling them firmly behind her back and tying them together with one of his ties. She relaxed into him, which helped her legs fall open a little wider.\n\n\"I know what you want, mon abeille,\" he said, withdrawing an implement from the closet behind him. It had a thick handle, wrapped with what looked like soft leather. Sprouting from the handle were what looked like two or three dozen tendrils in suede and leather. Sebastien's eyes darkened as he slid it up her inner thigh and over the crotch of her panties, then up between her breasts. Claire realized that she was looking at her beloved Stinger for the first time. It looked... official, or something. A seed of doubt crept into her mind - how long had he had this thing?\n\nSebastien was searching her face, and it must have shown, because he touched his fingertips to her cheek. Even that simple touch and the understanding look on his face were reassuring. \"I bought it because I didn't want to have to replace my baton every three weeks.\" She nodded at that, hot all over at the memory of his baton on her buttocks, awakening her to these feelings. He still used that baton in performances, and sometimes she thought of it, watching it bounce along to the beat.\n\nHe trailed the Stinger over both of her breasts, tickling her nipples with the tendrils. \"Are you sure? It's going to hurt.\"\n\n\"Oh, I know,\" she replied in a low voice, her skin prickling in goose bumps.\n\nHe drew back and gave her a couple of quick, soft thwacks. She flinched in surprise, feeling her heart start to race. When he saw that she was not to be dissuaded, Sebastien continued on, brushing and smacking every inch of her skin gently. Her nipples hardened as the prickling warmth spread over her body. Aiming a harder series of thwacks along her inner thighs made her yelp.\n\nSebastien found a rhythm at last, and Claire felt a new sensation. Warm wetness was seeping out between her legs, soaking through her panties. She savored the sweet brush of cooling air that touched her skin each time the Stinger swung back, and the hot, stinging pain was all the more keenly felt each time it landed - on breasts, belly, thighs.\n\nWhen Sebastien stopped for a moment, Claire tipped her head backward, reveling in the aliveness of her nerve endings. She felt Sebastien's hands on her, closing her legs, pulling her panties down and tossing them away. He placed his hands on her reddened inner thighs, spreading them wide, and she looked down at him again.\n\nHe stood again, and Claire watched him lean back, aiming a strike squarely between her legs for the first time. It stung, oh, it did hurt, but it brought with it a bolt of pleasure that shot right through her. Tears sprang to her eyes, but she didn't look away. Sebastien's eyes glittered with unspoken things, and Claire realized what a strangely intimate experience it was actually watching him punish her this time. Almost always before, he worked her backside, and on those rare times he was in front, her eyes were closed, the sensations too much to bear, or the intimacy of looking into his eyes too frightening.\n\nThis time it was different. She wondered idly if he was self-conscious with her watching him, but if so, he didn't show it.\n\nThe Stinger was wet now, and the slaps were ever sharper. Her back and buttocks were starting to ache, not out of pain, but out of longing for the same treatment. Another smack to her pussy made her shudder in pleasure, and she let out a tortured whimper.\n\n\"More?\" he asked very softly.\n\n\"Yes, Maestro, yes, please more,\" she begged.\n\nAgain and again the slaps came, fast enough that she no longer had enough time to breathe between impacts. Her heart was hammering in her chest and her breath was growing ragged. The pleasure was building between her legs, and she unconsciously shifted her hips up and toward the Stinger. She was getting so close, close to coming, yes, so close.\n\nAt once, Sebastien dropped to his knees and thrust the handle of the Stinger up into her, slapping at her clit firmly with three fingers. She gasped at the sudden penetration, and felt him wiggling the thick instrument inside her. He was angling it, touching her places she had never felt before. Her whole body was on fire and she felt it slam into her, losing the battle to keep her eyes open. She shook all over, crying out as her thighs, the sheets underneath her, suddenly felt so much wetter.\n\nShe was still twitching inside from her orgasm when Sebastien pulled on the Stinger lightly to remove it from her. It slid out about half an inch and then stopped, where she had tightened around it. The knob at the end apparently was slightly too large to come out easily now. They looked at each other, confounded, and Claire started to giggle. The corners of Sebastien's mouth were twitching.\n\nClaire stopped laughing and looked down at herself where the instrument was now protruding from her. She shook her head.\n\n\"Relax, mon abeille,\" said Sebastien.\n\nShe tried, to no avail. He rocked up on his knees and kissed her sweetly, his hand cradling the back of her neck. She melted into him, and was rewarded with the feeling of the Stinger finally sliding out of her.\n\n\"Would you like your hands free?\"\n\n\"Please.\"\n\nHe untied her hands, and she rolled her shoulders a little to free them.\n\n\"Better?\"\n\n\"Mmm.\" She flopped onto her back, stretching out her legs and sighing in relief. She looked up at Sebastien, who was watching her with a ghost of a smile on his face. \"Are you gonna, you know...?\"\n\n\"If it is all the same to you, mon abeille, I would rather just lie here beside you awhile.\"\n\n-----\n\nIt was June, hot and steamy in much of the country, but still mild and balmy in the city. Normally, the symphony would have been on break, but they had decided to hold a mini-series of concerts in July to promote the upcoming season. So they were furiously in rehearsal during the preceding month to prepare for it.\n\nClaire, uncharacteristically, was in a foul mood, and she couldn't keep herself from showing it. She and Sebastien had argued briefly before rehearsal, and she was having a hard time distracting herself.\n\nHe had come into her dressing room, given her a distracted kiss on the cheek.\n\n\"Tell me where you would like to go tonight, mon abeille. It will be the last night we can be together for a short while.\"\n\n\"Why's that?\"\n\n\"Paris calls, I'm afraid.\"\n\nShe hated that her lip pouted out automatically. \"Again? Why, what are you always doing over there?\" As usual, her creative imagination was dreaming up hordes of buxom French girls cavorting about in their fancy French lingerie, but she knew better now. She trusted Sebastien. He looked at her blankly, clearly indicating that he was not going to give her the answer. She supposed it was none of her business anyway. He could go anywhere he liked.\n\nMaybe she would go away in the next week or two. It was her birthday, after all. Thinking of this made her frown even more deeply. She hadn't thought about it yet, but it would have been nice to spend her birthday with Sebastien. Oh well, better to let that thought go before dwelling on it too deeply.\n\n\"I wish you didn't go so often,\" she said, blinking up at him demurely. He was clearly taken aback by this change in demeanor.\n\n\"There is nothing I can do about it.\"\n\n\"Yes, there is!\" she said, spinning away from him suddenly and stamping her foot. \"You can do anything you want to, you always do.\"\n\n\"When will you stop acting like a petulant child?\" he snapped.\n\n\"When you stop pulling me over your lap and giving me spankings,\" she replied, wincing internally at the ridiculousness of her statement.\n\n\"Crazy. You are being crazy, and I'm not going to discuss this further. I will see you in ten minutes, on stage, when you have calmed down.\" So saying, he spun on his heel and left.\n\nOkay, so now she felt like an idiot. Enough of an idiot that she didn't really want to be around Sebastien, at least not until she had an opportunity to apologize. Unfortunately, that wasn't a possibility at this point, so she decided to be pissed off instead. It probably wouldn't do her any favors in the long run, but it felt better right now.\n\nSebastien glanced up at her when she came onstage, probably trying to assess whether she had actually calmed down. She narrowed her eyes in his general direction, firming her lips slightly in irritation. He frowned back at her. Great. Combative already.\n\nThey were rehearsing for Orff's Carmina Burana, not just the \"O Fortuna,\" - which is one of \"those\" classical pieces that almost everyone knows, but doesn't realize they know - but the entire 25-movement piece for their summer production. The soprano part is featured prominently only in the section on love songs, which was what they were rehearsing this night. In the middle of one of these pieces, Sebastien called the orchestra, and Claire, to a halt.\n\n\"Claire, this is a love song. Dulcissime, sweetest, you should be looking your most ethereal, most lovely. Try to relax your features and smile a little as you sing. Discord does not flatter you, and it will give the notes the right tone as well.\"\n\nIn response, she glared furiously at Sebastien. She opened her mouth to retort, and caught the flicker in his expression. \"Don't,\" it was saying to her. \"Do not presume to tell me how to look when I sing, Maestro. With respect, the singer's demeanor reflects so much personal interpretation of the piece. Besides, the only one who is watching me today is you, and if you don't find me angelic, I'm afraid it's no concern of mine,\" she said bitingly. In other words, she added in her head, I'm not thinking very much of love at the moment, so fuck you.\n\nThe orchestra murmured gently behind her. It was very unlike their soprano to talk back to the Maestro, especially as of late, when things had been such smooth sailing. They had not failed to notice her appearance at rehearsals of performances that were orchestral only, and some of them had genuinely come to enjoy her presence there. They looked to Sebastien - what would he say? A little color had risen to his face, and he looked as though he was holding himself back from saying what was on his mind.\n\n\"Very well,\" he said in a clipped voice, and signaled for them to start again.\n\nAt the break in rehearsal, Claire disappeared backstage, hoping vainly that Sebastien would make an appearance. Instead, it was a horn player named Holly that came up to her.\n\n\"Lovers' quarrel?\" she teased.\n\nClaire blushed and stammered \"What do you mean?\"\n\n\"Oh, gosh, I was just teasing about Maestro Boulet. You've been such a regular around the symphony hall that when you have a disagreement, it's sort of like Mommy and Daddy are fighting,\" she giggled. \"What did you think I meant?\"\n\n\"I thought perhaps you were under the impression that the Maestro and I, well...\" she said uncomfortably.\n\nHolly cut her off with a burst of laughter. \"Oh, no! I couldn't even imagine that. I mean, after the parade of girls he's had through here over the years, I don't think you'd really fit in with them. And besides, after the violinist he dated in the orchestra last year, I don't think he'd ever date anyone involved with the symphony again. Not after what happened.\" \n\n\"What happened?\" Claire asked hollowly.\n\n\"Well, I guess he'd asked her to keep it quiet, of course, but she told some of us plenty. What his apartment looked like, and what kinds of places he took her to. The Maestro fired her!\" There was a strained pause. \"Oh look, I think we're going to start up again.\" She dashed off back to her seat, and Claire was left with an empty feeling in her gut.\n\nIt was one thing to theoretically know that Sebastien had probably been involved with other women. But to find out that it was many - how many, Holly hadn't said, but enough for an entire \"parade\"? And then this person, whoever she was. Apparently Sebastien had trusted her enough to take her to his apartment, even though he had told Claire that he never revealed that information to anyone if he could help it. And he'd told her - or at least implied - that he hadn't been with anyone in some time. She felt sick.\n\nThe other members of the orchestra were scurrying into place, and she drifted onstage after them, looking up at Sebastien with hazy eyes. Her head was swimming and her heart ached. Tears blurred her vision and, as she walked over to her seat, she stumbled over a stray cord she hadn't seen. She righted herself, wiping hastily at her eyes, and saw Sebastien watching her now with a strange expression on his face. She wasn't sure if she was going to burst into tears, or throw up, but at that moment, as she faced him at the edge of the stage, she felt herself falling backward, and the last thing she saw was the panicked look on his face as he reached for her.\n\n-----\n\nIn the dark, it was warm. The air smelled sweet, woodsy, floral. Sebastien was here. In the dark, with her. Her head ached. Actually, a lot of her ached. She opened her eyes. The dark was just the shadow of the stage that she was lying in, and the person leaning over her was Sebastien, pale and concerned. He closed his eyes in apparent relief when she opened hers, but she didn't know what to make of it now.\n\n\"I am taking you to a doctor,\" he murmured.\n\n\"No, I'm fine. I can move everything.\" She demonstrated by pushing herself up to a sitting position. It made the ache in her head a little worse, but it was subsiding gradually.\n\n\"You fainted. You need to see a doctor.\"\n\n\"Just stress,\" she muttered. Sebastien narrowed his eyes at her, but said nothing. She realized all at once that most of the orchestra was gathered around, on stage and off. \"I'm fine, fine!\" she called out.\n\n\"Everyone, I'm calling rehearsal to a close early tonight. Please get some rest and do not be late tomorrow night,\" said Sebastien, helping Claire to stand on her feet. She went to walk away, but he held her hand tightly. \"Not you.\"\n\n\"I don't want to go to the hospital,\" she protested.\n\n\"Too bad,\" he said, picking her up swiftly.\n\n\"Oh, do you have to carry me? Haven't I been embarrassed enough tonight?\"\n\n\"Hush.\"\n\nHe drove her to the hospital, and she secretly admitted it was a good idea. If she had a concussion, it would be good to know. Not that she'd ever tell Sebastien that.\n\nThe nurse who took her information soon ushered her into a back room to get checked out. When Sebastien made to follow them, she turned to Claire. \"Who is he? Relative? Boyfriend?\"\n\nClaire looked up at Sebastien, who returned her gaze steadily with no hint of his thoughts. Well, fine. If he could be a jerk, she could play the game, too.\n\n\"Just my boss.\"\n\n\"Oh. Then he'll have to wait out here.\"\n\nSebastien set his jaw. Oh, wasn't he pleased? As she turned away from him to follow the nurse, she could only think of what Holly had told her. And oh God, oh God, oh God, it hurt.\n\n-----\n\n\"Where are you taking me?\" Claire asked, as she sat huddled in the passenger seat of Sebastien's car.\n\n\"Home.\"\n\nThat didn't really answer her question. She let it go, and wasn't surprised when he pulled into the garage at his apartment building. He came around to open her door, and helped her out of the car, his hand gently supporting her elbow.\n\n\"Don't carry me again,\" she said.\n\n\"As you wish.\"\n\nShe was surprised that he gave in, but not that he remained silent until they were safely behind the closed - and locked - door of his apartment. He followed her to the sofa, where they both sat, both feeling a little awkward. She wondered what he was thinking.\n\n\"Are you going to tell me what is the matter with you tonight?\" he asked softly. \"I feel that you are not being yourself.\"\n\nShe looked at him. She didn't even want to have this conversation. He looked so sincerely concerned, though. And she did care for him, so much. Maybe she should give him a chance to explain, at least. She told him everything that Holly had said to her, watched as his face showed frustration, discomfort.\n\n\"So that is what is bothering you?\" he asked in an even quieter voice. Claire looked down into her lap, then back up, nodded. \"I see. So. You believe that I have lied to you, repeatedly. Is that what I am hearing?\"\n\nShe winced. \"It sounds bad when you say it like that. I...I don't know if I believe it, but...what am I supposed to think?\"\n\nHe blew out a breath, clearly annoyed. \"Well then, I will tell you that this woman, this violinist, she was fired not because she exposed our secret liaison, but because she was a hateful, lying person. I suppose you were too polite to ask for details. You would no doubt have found out quickly enough that it was all a lie, since her claims about my apartment and where I lived were invented.\"\n\nHer heart leaped in her chest. Perhaps it was foolish to just believe his words, but, she could always ask Holly for those details and see what she thought for herself. He wouldn't have said that if it wasn't true.\n\n\"As for the 'parade' of women-\"\n\n\"You, um, don't really have to explain that,\" she said, uncomfortable again.\n\n\"No, I don't. But I am going to, because truly it is not as bad as it sounds. As you know, I have been with the symphony for a number of years. Obviously you would expect that I have not been celibate these many years, and you would be correct. There was a period that I was more seriously seeking a mate, and many of those women did come to performances. But I never, and I want to emphasize this, never paraded them about. I did not bring them to rehearsals, nor cast parties if I could avoid it. I never brought any of these women to my apartment, and frankly I can hardly recall some of them, as briefly as they passed through my life. Despite the implications, I certainly did not sleep with all of them. I'm no playboy, mon abeille,\" he said with a wry grin.\n\n\"Do you wish you were?\"\n\n\"Ah, don't all men?\" he replied, teasingly.\n\n\"While you're in the mood for sharing, will you tell me what you're doing in France so often?\"\n\n\"No.\" Then he smiled, quickly, easily, something she valued so much of late. \"But I will ravish you, anywhere and any way you like. Will you stay tonight?\"\n\n\"I'd love to.\"\n\n-----\n\nThe bathroom filled with billowy steam. A pile of clothes by the door was topped off by a pair of panties, carelessly thrown by Claire as she climbed into the warm embrace of the shower - and Sebastien. The kiss he pressed to her lips was no less hot than the water that tumbled around their shoulders.\n\nHis mouth devoured her, her nipples, her tummy, all the way down to her mound, which he nuzzled briefly before licking and sucking on her like a starving man. She moaned softly into the echoing room. Her toes curled against the tile beneath her feet, hands grasping uselessly at nothing. His fingers invaded her, slipping slickly into her hot wetness.\n\nHis fingers curled, stroking against her most pleasurable spots. \"Yes, yes, Maestro,\" she gasped. His tongue fluttered against her clit inexorably, and she was coming, squeezing in against his fingers. Then they were replaced by his cock, and he was trailing her sticky wetness over her breasts. In the heat, her scent blossomed and the whole room soon smelled of sex.",
        "Ahh, and he was kissing her again, bumping his hips up against hers gently. She ran her hands around to his back, stroking it, then running them down to cup his tight buttocks as they pistoned into her. He grabbed her wrists, holding them up above her head firmly. For an instant, she pulled against him, and then the inevitable calm settled over her. The light buzzing in her head amplified everything else she was feeling, and he was soon nudging her over the edge again. She came breathlessly, whimpering into his mouth. Then she felt his come, hotter than she expected, pumping into her.\n\nShe opened her eyes again, and found herself staring right into another pair of eyes, crinkled around the corners in an obviously affectionate smile. Her heart turned over.\n\n\"We should clean you up, mon abeille,\" he was saying, so softly, as he knelt again, running his tongue up her inner thigh.\n\n-----\n\n\"So... your birthday is around the corner, is it not?\" Claire was sitting up, cross-legged in Sebastien's bed, brushing her hair. She was completely naked but for the sheet that she had drawn up over her breasts. Sebastien lounged next to her in his silk pajama pants, watching her.\n\n\"It is. I didn't think you knew when it was.\"\n\n\"You are always underestimating me,\" he said, with a hint of amusement.\n\n\"Well, I don't know when yours is,\" she replied.\n\n\"It's in September, and I am not looking forward to the day you find out how much older I am than you are.\"\n\n\"I'm pretty sure I already know,\" she said with a little laugh. \"Besides, I bet I'm older than you think I am. Why do you bring it up?\" She set the brush down and began twisting her hair into a thick braid.\n\n\"Well. As you know, I am going to be taking a brief holiday to France, and I wanted to give you a little something before I left.\"\n\nSebastien took a leather case from his bedside table, and offered it to her. Opening it, she saw two leather cuffs in a pretty ruby-red color, about an inch wide, each with a small D-ring on either side. \"Oh!\" she said in surprise, blushing a little.\n\n\"I hope that when we are apart, they will remind you of me. And when we are together, well, I think there will be a more... practical application or two.\"\n\n\"Thank you, Maestro. The color is beautiful,\" she said, already buckling one on and admiring the way it looked against her slender wrist.\n\n\"I do have one other little gift to give you. Would you like it now?\"\n\n\"Maestro, you shouldn't have gotten me anything,\" she murmured.\n\nHe only smiled, sliding open his table drawer and withdrawing a slip of paper. He tossed it onto her lap carelessly. She picked it up, and read the words printed on it. At first, it seemed her brain couldn't quite make sense of what it was, and suddenly it clicked. It was a plane ticket. To Paris. Her mouth fell open, and she looked at Sebastien, who was watching her carefully.\n\nBefore she could formulate the right words to say, he was laying a hand on her bare shoulder. \"I know it probably comes as quite a surprise to you, but I had hoped it would not be too forward.\" Claire glanced at him; was he actually feeling nervous about this? She still didn't know what to say. She leaned over, brushed her lips against his. She sat back, saw he was still looking at her expectantly.\n\nShe looked down at the ticket in her hand again, read it. Then she threw her arms around his neck, feeling it really sink it. \"Ohhhh my gosh, I'm going to Paris!\"\n\n-----\n\nJuly was a positive whirlwind for Claire. The month started off with the symphony's performances of Carmina Burana, which were absolutely amazing. It was a beautiful and humbling experience to be singing a solo soprano role with a choir of over one hundred singers of all ages behind her. She hadn't been overly thrilled with the way that some of the younger girls fawned over Sebastien when they had the chance, but mostly because she sometimes wished that she could be the one touching his arm, smiling up at him so charmingly.\n\nAlmost as soon as the mini-series had ended, Claire and Sebastien had left for Paris. It was actually Claire's first time in Europe at all, and it was perhaps the most glorious three weeks of her entire life. They took long strolls through the busy city streets, ate pastries from patisseries almost daily, took the most delicious cheap bottles of wine and loaves of bread to parks for lunch. They spent a weekend in London, and another in Amsterdam. They dined everywhere from casual bistros to Michelin-starred restaurants. He took her to see the normal tourist sites, the Louvre, the Eiffel Tower, kissing her in its shadow, but also his favorite nooks and neighborhoods.\n\nMaybe the best part was finally finding out why Sebastien had been returning to Paris so often over the last six months. It's true that he had been back regularly during his entire time in the United States, but he had been away more often, and more secretively. When they had landed in Paris, he had driven her to an unassuming building with sweet wrought-iron balconies on a pretty street.\n\nThey'd gone up to the fifth floor, the top floor of the building, and Claire had become more curious with each passing moment. Surely this was no hotel.\n\n\"Where are we, Maestro?\"\n\nHe smiled as they turned the corner at the end of the hall, walked all the way down to the door at the end - so like his apartment building, she thought.\n\n\"You wanted to know why I was spending so much time in Paris, did you not?\"\n\n\"I did, but-\"\n\n\"This is why,\" he said, pulling out a key with a little flourish, and unlocking the door. The room he ushered her into was small, and opened up into a little kitchen done in a sunny yellow tone. Beyond that was a sunken living room, where an upright piano rested against the wall. Venturing further into the apartment, she saw that there were two additional rooms around a little corner, and a bathroom between them. The front bedroom had its own balcony, with a short spiral staircase that led, where? To the roof, it looked like. The whole apartment was furnished in dark woods and muted earth tones, similar to Sebastien's apartment back home, but softer.\n\nWhen their luggage was safely stowed away in the bedroom, Claire wandered to the windows that faced the street and looked out, amazed at how different this city was from home. Sebastien stood beside her.\n\n\"Well, what do you think?\"\n\n\"It's lovely, Maestro, but I still don't understand.\"\n\n\"For years, when I returned to Paris for a visit, I took a room in a hotel, or stayed with my relatives. Once I realized that I would want to take you with me someday, I decided that I should get a more permanent place. Not,\" he said, going on before she could respond, \"to keep you away from my family, as you are no doubt already suspecting, but because, well, you may already have noticed quarters are a bit tighter here. I thought we could use the privacy.\"\n\nThe low tone of his voice sent a shiver up her spine. \"Do you understand now, mon abeille?\"\n\n\"You were here looking for an apartment... for me?\"\n\n\"For us. It took me a while to find one that needed as many renovations as this one did, so I could soundproof it.\"\n\nHe looked at her, and that was all it took. She felt herself grow wet. It was crazy, she told herself, how much she wanted him. All the time, her body craved his touch. It seemed more and more, her heart was as touched as the rest of her. A thought occurred to her.\n\n\"Am I going to meet your family?\"\n\nHe hesitated. \"I thought I would leave it up to you. I know that my sister is anxious to meet you, now that she has proof that you exist.\"\n\n\"Oh, did you tell her we were, um, seeing each other?\"\n\n\"I could hardly avoid it, wouldn't you agree?\" he said with a wry smile.\n\nClaire managed a small smile, but her voice was serious. \"So... what did you tell her about us? I suppose you couldn't introduce me as your plaything?\" she asked, attempting to make a joke.\n\nSebastien nodded slowly. \"I actually told her nothing more, preferring that I discuss it with you first. She does not not know who you are, or even your name.\"\n\n\"I see. Well, I would like to meet her, but I think we should figure out what you're going to say first.\"\n\n\"I agree. Girlfriend seems juvenile, but lover, though true, makes it sound like what it is, which is perhaps not the image we want to give.\"\n\nIt was Claire's turn to nod, thinking it over. \"I don't think we should say just, friend, that would make it too obvious we were sleeping together and not dating, wouldn't it?\"\n\n\"We are not dating?\"\n\n\"I... I don't know. We've been to dinner together, but it's not really like you're, you know, courting me.\"\n\n\"Hmmm,\" he said, \"perhaps I am not trying hard enough, in that case.\" Claire blushed, and looked away.\n\n-----\n\nClaire smoothed down her sundress for the fiftieth time, then ran her fingers over her hair nervously. Sebastien glanced at her, then ran his fingers down her shoulders to her wrists. He slowly pulled them behind her back, holding them firmly in place. Her head whipped around, wide-eyed.\n\n\"Stop,\" she whispered. \"He'll see!\" She tipped her head toward the driver of their car.\n\n\"Then be quiet,\" he said mildly. Claire flushed, and Sebastien jerked back a little, making her shoulders ache a bit. Almost immediately, she felt calmer. Sometimes, she hated that he knew how much it calmed her to be restrained. Still, it did work.\n\n\"Let me go!\" she hissed.\n\n\"Will you be calm? You were beginning to make me nervous.\"\n\n\"You, nervous? I'll believe it when I see it,\" she muttered. He tsked at her, but let her go. They were traveling across the city, to a row of townhouses, one of which belonged to Sebastien's sister, Sarah, and her family. It turned out that she was his older sister by three years, that she had been married for eight years (and after him to marry for almost as long) and had two children, one an infant. They were going for an afternoon visit. Claire thought she could handle anything for a few hours, and a visit with Sebastien's family should be a snap.\n\nWhen they got out of the car, Claire smoothed her sundress once more. It was a soft yellow, and she was wearing matching sandals and a flower in her curling hair. Sebastien was in his usual casual chic, a light grey suit with pale pink shirt, open at the neck. Before they had even passed through the front gate, Sarah had breezed out of the front door, shutting it conscientiously behind her.\n\nAddressing Sebastien with a sigh, she said - in English, Claire was pleased to note, probably for her benefit - \"Mon chou, ah, Maman is here.\"\n\n\"Is that so?\" He looked calm, but Claire could see an almost indefinable sense of tension rise in him.\n\n\"Ye-es, but not just Maman.\" She looked apologetically at him. \"Also Papa, Raoul, Gerard, Justine...\" She trailed off, as Sebastien raised his eyebrows at her. \"And their families. Oh I'm so sorry, mon chou, I didn't expect them all.\"\n\nSebastien definitely looked irritated. \"How did they even find out I was coming here today?\"\n\n\"Welllll, I mentioned it to Justine, but I thought that she would be discreet. Evidently, no. Please forgive me.\"\n\nHe sighed heavily, turned to Claire. \"Well, ador\u00e9e, what do you think?\" Hmm, ador\u00e9e, a new pet name? She assumed it meant just what it sounded like, but wondered why he was using it. Perhaps he wanted to keep his usual term of endearment private? How sweet.\n\n\"I don't know,\" she ventured, hands going nervously to her hair again.\n\n\"You look lovely,\" he said reassuringly. \"I will make it up to you, I promise.\"\n\nShe bit her lip. \"Well, we're already here. Aren't you going to introduce me?\" she asked with a little smile.\n\nSebastien relaxed minutely. \"Ah, of course. Claire, this is my sister, Sarah. Sarah, my companion, Claire,\" he said, using the term they had finally agreed upon.\n\nSarah extended her arms, and the two women came in for a brief hug. \"I am very pleased to meet you at last. Sebastien has kept your existence a secret for far too long, I think.\"\n\nClaire murmured her agreement, and the three headed inside. She was positively bombarded by people as she was led into the parlor by Sarah. She felt Sebastien take her hand and squeeze it firmly. A parade of people were introduced to her, and she knew she could never remember their names. All she knew for sure was that Annette and Th\u00e9odore were Sebastien's parents, Raoul and Gerard his older brothers, and Justine his younger sister. Justine was not yet married, but the brothers were, and both, like Sarah, had two young children apiece.\n\nAltogether, this meant that there were seventeen people - and two dogs - crammed into the parlor, overflowing into the kitchen. Justine made room for both of them on a sofa, rising and handing \"baby Zo\u00e9\" to a very surprised Claire. She glanced sidewise at Sebastien, wondering if she could possibly communicate her disbelief in a look subtle enough for the others to miss. He gave her a carefully expressionless look in return.\n\nThe shock wasn't just that there were so many of them, but that they were so... different from what she had imagined. Sebastien was so elegant and restrained, and Sarah had also seemed very sophisticated on the occasions Claire had seen her. Yet, in this small house, there was so much warmth, such closeness. She had expected his family to be quieter, reserved, maybe even cold. She had seen Sebastien relax somewhat and be sweet and affectionate when it was just the two of them, but what kind of person would he be around his family, and could he be that same person with her there?\n\nSarah came over, holding her little one, Val\u00e9rie, who looked to be about a year old. \"Here, say hello to your ni\u00e8ce, mon chou,\" and dropped her into Sebastien's lap. He blinked at the child, who immediately babbled at him unintelligibly. He smiled broadly, striking up a conversation with her, even tickling her, much to Claire's amazement. It was completely surreal.\n\nAt last, Sarah had settled herself down on a chair opposite them, and directed her question to Claire. \"So, tell us about yourself. What do you do?\"\n\nClaire glanced at Sebastien, suddenly nervous again. He answered for her. \"Ahh, Claire is the soprano soloist at the symphony,\" he said. The room grew much quieter suddenly. Sarah looked surprised.\n\n\"Really, is this true? But mon chou, I thought you always said you would never date anyone with the symphony.\"\n\n\"I have said so, but-\" He cut off, glancing at Claire, who was doing her best not to look uncomfortable. \"Mon ador\u00e9e is someone very special. But, I do not need to tell you. You have come to our performances this last year. Would you not agree?\"\n\n\"Ah! I did not, ah, recognize you, I am afraid. I apologize.\" Claire smiled demurely, not knowing what to say. \"I agree, you have a magnificent talent.\"\n\n\"Thank you very much.\"\n\nThe afternoon passed much more quickly than Claire had expected, with small talk aplenty, and Sebastien's skillful maneuvering around such questions as whether they were getting serious enough to be talking about marriage and children. She had kept her own thoughts assiduously away from such topics since she and Sebastien had begun their relationship, and she was not about to compromise what they did have. They weren't even in love!\n\n-----\n\nThe night before they were scheduled to leave Paris, Claire was lounging in Sebastien's antique claw foot tub, covered in mounds of lavender-scented bubbles.\n\n\"Mon abeille,\" he said, peering in from around the doorjamb, \"it is almost suppertime. I thought we might stay in tonight. Could you come upstairs when you are dressed?\"\n\nClaire combed her hair back, pulling it back tightly against her head. She dressed in a sexy little slip of a dress that Sebastien had bought her in Paris - against her protestations, and along with a passel of really gorgeous lingerie - green, filmy, clinging. She went out onto the balcony off the bedroom, admiring the balmy atmosphere, the lights coming on as the sun went down. She had not yet been up on the roof in the entire three weeks they had been there, Sebastien always gently discouraging it.\n\nWhen she got to the roof, she was astonished to see that there was a garden on the rooftop, with all sorts of flowering plants and vegetables, plus a bushy herb garden in one corner. Thousands of tiny lights had been strung up everywhere, casting a golden glow over the roof. To one side, a table had been set up with a bottle of wine and their dinner.\n\nSebastien was lounging up against the railing on the edge of the roof, watching the city lights. She walked over to him, leaning up on her tiptoes to kiss his cheek.\n\n\"It is just beautiful up here,\" she sighed.\n\n\"Not as lovely as you,\" he said seriously, brushing a stray strand of hair off her forehead. \"But you see why I chose this apartment. When I saw this, I knew it was perfect. Come, shall we eat?\"\n\nThat night, conversation revolved mostly around Sebastien's family, and everything they had done on their trip. Recalling running into other tourists, getting lost in Amsterdam, missing a train. At length, there was a lull in the conversation, and Claire sighed contentedly. A chill was beginning to creep into the air.\n\n\"Are you happy, mon abeille?\"\n\n\"How could I not be? Here, in Paris, with you. I don't think I have ever been happier.\"\n\n\"It is hard for me to believe that I almost did not hire you,\" he mused, half to himself.\n\n\"I - wait, what?\" she asked, her reverie broken.\n\nSebastien chuckled softly. \"Well, you certainly had the most lovely voice out of all those who auditioned, but most had much more experience than you did. I did take a bit of a chance on you, that you could handle the material I would choose, and the performance schedule, the audience.\"\n\nShe wanted to be offended, but she did see his point. \"I'm glad you hired me, too. There weren't any other positions I wanted. I had already fallen in love with the city, and-\" And you, she had been about to say. But it was more like lust at first sight, no, fascination. That was it.\n\n\"And?\" he prompted.\n\n\"Mmm, nothing.\"\n\n\"Shall we go to bed, mon abeille?\"\n\nShe followed him downstairs, sighing as he undressed her. He laid her down on the bed, running his fingertips all over her, waking up her nerve endings and making her shiver. He nibbled on her nipples as they hardened. His fingers worked their way between her legs, where he found that she was already wet for him. He slid two fingers into her, alternating between penetrating her unhurriedly, and swirling them around her most sensitive spots.\n\nClaire arched her back, moaning softly as his fingers and tongue worked her up to insanity. She felt the pleasure mounting, loved the way he knew how to make her come so fast. His mouth was on her neck now, biting the skin gently and nipping at her earlobe. She cried out as she came, feeling his fingers inside her. He withdrew his fingers, running them in featherlight circles around her clit, making her writhe.\n\n\"I could make you come all night long,\" he said in a low voice.\n\nNow she felt his fingers invading her again, but the touches on her clit were firmer, more insistent. She had been coming down from her high, and was vaulted up again, until her hips were jerking against him and she was moaning out again. The fingers sliding over her clit were now pressing in so firmly that she rode the line between pain and pleasure.\n\nThe sensations stopped, and she opened her eyes to see Sebastien undressing. He knelt on the bed again, taking his cock in his own hand, smearing her juices all over himself. Her eyelids fluttered lazily as she watched him. She was aching to feel him inside her.\n\n\"Maestro,\" she murmured.\n\n\"Yes, ador\u00e9e?\"\n\n\"Please, would you?\"\n\n\"Would I what?\"\n\nShe blushed a little. She still hated to say it. \"Fuck me, Maestro.\"\n\n\"Ah, you want to be fucked, mon abeille?\" he asked, moving closer to her and dragging the tip of his cock up her inner thigh.",
        "She writhed, whimpering. \"Yes, Maestro, please.\" He stroked himself still, and she thrilled to see him doing it. With his other hand, he went back to playing with her so sensitive clit.\n\n\"Perhaps I wish to see how many times I can make you come before I can no longer stand it.\" Claire moaned at the image, picturing herself slick with sweat, Sebastien jerking off onto her.\n\n\"Ahhh yesss,\" she cried, feeling herself just on the edge of another orgasm.\n\n\"Then again...\" he said, driving his cock into her, enjoying the feel of her pussy squeezing tightly around him, her body shuddering in release. He pulled out of her, gently helping her up onto her hands and knees. He slid into her again, fucking her slowly as he reached around to pull her hands behind her back. She relaxed in his grip, letting her head rest on the coverlet.\n\nHe held her wrists tightly in one hand, then reached down again to rub her clit in rough circular motions. He fucked her harder now, and she could feel as he bumped into the deepest parts of her. Sparks of pleasure fired off each time he thrust all way into her, and she felt her body tensing up all over.\n\n\"Come again,\" he said.\n\n\"Noooo I can't,\" she whined softly.\n\n\"You can. I can feel it. Come for me.\" He held her tightly as she bucked up against him. He vibrated his fingers against her as quickly as he could, and she cried out into the bed as she writhed, as if to get away from him. But there was no escape. He kept pleasuring her, fucking her as hard as he could, until she was weak from it. She had lost count of the number of times she had come, if indeed it was not just one long, drawn out orgasm.\n\nShe was glad for the soundproofing, what with the sounds coming out of her mouth, and those of their skin slapping together with the vigor of Sebastien's thrusts.\n\n\"Ah, mon abeille, where do you want me to come?\" he asked, catching her off guard. as she was gasping for air, his fingers blissfully unbusy.\n\nOut of her mouth tumbled the truth before she'd had a chance to think about it. \"On me, all over me. Please, I want to see you come,\" she begged.\n\nHe pulled out of her, giving her a gentle push so that she was again on her back. His cock looked huge to her, reddened and swollen. His hand was giving it long, firm strokes, and his glittering eyes burned into hers. With a little smirk, he set his fingers back on her clit, shaking his hand back and forth. She winced, feeling so sensitive that it was like sparks were being set off between her legs.\n\nSebastien slapped her then, firmly between the legs as she often liked. \"Fuuuuck,\" she moaned, and he slapped her again, over and over.\n\n\"Oh God, oh God, Maestro, I'm coming!\" she cried, fighting to keep her eyes open and on his cock, which began spurting out thick globs of Sebastien's come. It landed hotly on her pussy, her belly, her breasts. The orgasm tore a cry from Sebastien, and Claire saw his thighs tightening to keep him upright. At last, he collapsed forward onto one of his hands, the other swirling his cooling come around one of her nipples.\n\nClaire's muscles were too jellied to move, so Sebastien gently cleaned them both up, even attempting to dress Claire in a nightie. He pulled on a pair of pajama pants and collapsed down onto the bed beside her, drawing her in tightly. The lights of the city outside played over his relaxed face, and he smiled contentedly down at her. She glanced up at him with tired eyes, and felt a sudden realization spear through her.\n\nShe loved him. It was so blindingly clear that she wondered how she could have failed to notice it before. Her heart ached with the desire to tell him everything, but in that instant, she knew she couldn't do that. What they had was good, amazing. He was happy with their relationship, and she couldn't bring herself to complicate things any more than they already were. She could keep this secret.\n\nHer eyes blurred a little with tears, and she buried her face in his chest, feeling the hairs tickling her cheek and breathing in the scent that was just... Sebastien. So she loved him, maybe, probably. He didn't have to know."
    ],
    "authorname": "barabajagal001",
    "tags": [
        "bdsm novella"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-maestro-ch-06"
}