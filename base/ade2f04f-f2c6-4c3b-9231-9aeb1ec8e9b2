{
    "title": "Saturday Night School Ch. 10",
    "pages": [
        "They didn't talk very much on the drive back to Pine Hills. The radio was on and the road was dark except for the long reach of the headlights stretching ahead of them. Sometimes he heard Michelle singing along to the music, her voice a low whisper under the vocals. She still wore her grey shirt with nothing underneath. Standing next to his car in the parking lot, he'd played with the idea of pulling that grey shirt off her and making her ride the whole way home naked. She had met his gaze, waiting for him to open the car door for her, and he suspected that she had known what he was thinking. Maybe she even wanted him to do it. \n\nBut he just pulled the door open and she climbed into his car. He closed the door behind her. Why hadn't he stripped her? He considered the question as he walked around to the driver's side. His heart was beating fast and his cock was more than halfway erect. He wanted her to be naked. So why didn't he strip her?\n\nHe pulled onto the highway, thinking that he still could. He could ask her to take her shirt off, and she most likely would. His cock was now close to fully erect. If he asked, she would toss her shirt in the back seat and ride all the way home naked. She would even let him reach over and feel her body while he drove.\n\nSo why didn't he tell her to take off her shirt?\n\nBecause of that look in her eyes. That look she gave him as he walked to her side of the car, the look that urged him to do something reckless. That look that said she was ready and willing to play. He had seen that look in her eyes and he had reacted to it, and in fact, he was playing with her. He was playing with her by making her behave. He would make her keep her clothes on for now.\n\nIt would make it even sweeter when he finally did strip her.\n\nThey passed through Pebelton. Four miles back to Pine Hills, and then what? Her car was by the school, but he didn't want to fool around with her there. Not with Daryl still on duty. Greenholt Gardens was off limits since Nick didn't work on Saturday. Maybe he could take her home? Sneak her in again and make love in his bedroom? He mulled it over and although it seemed a little tame, he couldn't think of a better idea.\n\n\"I want to show you someplace,\" Michelle said.\n\n\"Where?\"\n\n\"I'll give you directions when we get close. It's a place I like to go.\"\n\n\"Okay.\"\n\nShe didn't offer anything more, and he didn't ask any questions, only followed the road patiently to Pine Hills. A mile away from the city limits, she spoke again, \"Take the next right.\"\n\nHe slowed. Ahead, he saw a turn branch off from the highway and curve to the right. He put on his blinker and followed it.\n\n\"When we get to the bottom, turn right.\"\n\nThe road they were on intersected a second road. Charlie turned right. It took him a minute to remember when he'd been on this road before. He recalled that it drove up a bit, then down, curving left and right, until it reached a small lake with a campground. He had gone camping there a few times when he was in elementary school.\n\nBut Michelle wasn't interested in driving to the campground. After a couple minutes of uphill driving, she said, \"Take the next right turn.\"\n\nCharlie saw a light pole on the corner of the next intersection, illuminating his next turn. He turned right. He saw another light pole in the distance, and as he travelled around the next curve, he could see a line of lights going up the hill, marking the path of the road. They passed through a dense forest of pine trees, following the road as it slowly curved to the left and then to the right. Through a break in the trees, Charlie could see a long, narrow bridge ahead, crossing over a shallow ravine. The bridge had lights leaning over the span, with a light pole about every twenty feet. Charlie could see a slow river passing underneath. On the other side of the bridge, the road disappeared around another curve, heading further uphill.\n\n\"Here we are,\" Michelle said. She pointed to the left, just before they reached the bridge. \"You can park there, on the side. It doesn't look like you can, but people park there.\"\n\n\"Okay.\" No one was parked there now. Charlie pulled off the road onto a flat stretch of dirt. The car bounced on the uneven surface. He pulled in front of a tall tree and put the car in park, leaving the engine running.\n\n\"Have you ever been here before?\" Michelle asked.\n\n\"I don't think so.\"\n\n\"It's called the Hanson Bridge. This road is Hanson Road.\"\n\n\"You come here?\" he asked.\n\n\"Uh-huh.\"\n\n\"When? In the day?\"\n\n\"No,\" she said. \"Mostly at night. I like the way it's all lit up.\"\n\n\"You come here by yourself?\"\n\n\"Uh-huh. Don't worry. I don't usually get out of my car. I just drive over the bridge, and look at it. Honestly, I'm pretty obsessed with it.\"\n\n\"Really?\" Charlie leaned back and looked at the bridge through a gap in the tree. \"There is something striking about it, isn't there. It's so long and thin. And the lighting is interesting. I wonder why they decided to use those smaller kinds of lights?\" Charlie thought it would make a good location to film a scene. A young couple, taking an evening walk from one side of the bridge to the other. Stopping in the middle to lean against the railing and look down at the river. He thought it would make a great setting. The camera would love it. But what film would it be in? \"I wonder why they built a fancy bridge like this way out here?\"\n\n\"I guess someone was inspired. Anyways, people come out here to hike along the river. There's a trail. They park right here.\"\n\n\"Have you done that? Hiked along the river?\"\n\n\"Uh-huh. That's how I first found out about the bridge. I came here a couple times with Kyle.\"\n\n\"Who's Kyle?\"\n\n\"My ex. He graduated last year.\"\n\n\"Oh.\" The only thing Charlie could think to respond. Kyle? Who was Kyle? Had she ever mentioned him before? Charlie couldn't put a face to the name. A senior the year before. His picture would be in the yearbook. Charlie would almost certainly look him up later.\n\nWhy did he feel so surprised? Of course Michelle had ex-boyfriends. She was Michelle. Guys chased after her, guys asked her out. Just because they hadn't talked about any of the other guys she'd dated, it didn't mean there weren't any. She hadn't been a virgin when he'd first made love to her. For that matter, he hadn't been a virgin either.\n\nA low rumble in the distance announced an approaching truck, and a moment later Charlie saw it through the trees, coming downhill towards the bridge. It towed a wide trailer with an open top. Charlie couldn't tell what it was hauling. The semi-truck rumbled across the bridge and passed loudly behind them. \n\n\"This road leads to a quarry or something,\" Michelle said. \"Trucks are always going back and forth, hauling rocks. One time, we got stuck behind one of those trucks, and a rock popped out of the back and hit Kyle's windshield. It made a crack like a bullet hit the glass. Kyle was so mad.\"\n\nCharlie had already formed an image of Kyle. Tall, blonde, driving an expensive car. A gleaming white BMW convertible, something like that. \"Did the quarry pay to replace his windshield?\" Charlie asked.\n\n\"Mm. I don't know.\" Michelle shrugged, flicking her hair back. \"Do you want to take a closer look at the bridge? I mean, like walk over it?\"\n\n\"Sure.\"\n\nCharlie turned off the engine and stepped out of the car. He could hear the buzzing and chirping of insects from the trees around them. Michelle didn't wait for him to open her door; she was already out, and Charlie watched her gently close the door behind her. Maybe she did it quietly out of respect to the forest. He closed his own door the same way, so that it didn't make a sound as it latched. \n\nMichelle led the way, gracefully managing her heels on the bumpy ground. They reached the road and Charlie took her hand as they walked along the side of the road towards the bridge. Gradually they found themselves drifting towards the center of the road, as if the asphalt path existed just for them. The night was so quiet that Charlie felt he would hear the sound of an approaching vehicle long before it reached them. \n\nThey crossed the threshold of the bridge, the line where the railings began and the glowing overhead lights formed an archway of smoldering orange. Michelle drifted towards the railing now, and Charlie followed her, still holding her hand. She touched the railing with her fingers, peeking over to look at the water. \"I've seen deer before,\" she remarked. \"I've seen them coming up to this river to drink. And one time, when I was driving on the road to get here, I had to slow down almost to a stop, because three deer were standing right in the road. A daddy deer, a mommy deer, and a baby deer. They didn't even care that I was driving at them. They walked just as slow as they wanted to.\"\n\n\"I guess this place belongs to them more than it does us.\"\n\nMichelle smiled and nodded. \"You're right.\" She traced the railing with her fingers as they walked. The bridge had a gradual arc; a car was unlikely to even notice it, but Charlie felt the uphill climb. The cool night air felt good in his lungs and he took a deep breath. \n\nAt the midpoint of the bridge, Michelle stopped and leaned against the railing, looking down at the water flowing underneath them. The dim light of the bridge glimmered against the water surface. Charlie leaned next to her, following the path of the water until it disappeared outside of the bridge's glow. He could see pine trees leaning over the water in the distance like silent sentries.\n\n\"Isn't it pretty?\" she asked.\n\n\"Yeah.\"\n\n\"I haven't crossed this bridge at night in a while.\" She squeezed his hand. \"It's not something I'd do alone.\"\n\n\"Not since Kyle?\" Charlie ventured.\n\n\"Oh, it hasn't been that long. I think I came up here with Vanessa a few months ago. Vanessa and some others.\" Michelle turned to face him. She still held his hand in one of hers, and now, with her other hand, she reached down and caught the bottom of her shirt. She tugged her shirt up, rolling the fabric in her hand as she went, until she'd pulled it up past her breasts. She pulled her arms free of the sleeves and let the shirt hang from her neck like a scarf, leaving her body completely exposed. She lifted Charlie's hand and pressed it to her bare breast, an invitation he gladly accepted. He squeezed gently, feeling her hard nipple poking between his fingers.\n\nOne hand quickly became two and Michelle swayed in place as he squeezed and fondled her breasts. \"Do you know, I've always wanted to walk across this bridge naked,\" she whispered dreamily. \"From one side to the other, with nothing on. It's one of my fantasies.\" \n\n\"You're naked right now,\" Charlie murmured.\n\nShe smiled. \"Not all the way. I still have my shirt on.\"\n\nCharlie regarded the flimsy grey cloth circling her neck. He reached for it, intending to pull it over her head, but she quickly caught it and held it in place.\n\n\"No, don't take it off!\" she said. \"Not now. Don't you hear?\"\n\nHe frowned, listening. Now that she'd pointed it out, he could hear a distant sound, a low rumble. The tone changed slightly, now higher. A shift of gears. Another truck coming, from the same direction as the first.\n\nMichelle was already putting her arms back in her sleeves, although she wasn't in any rush. \"They pass back and forth constantly,\" she said. \"No matter what time, day or night. I don't think I've ever crossed this bridge without one of those trucks going by.\" She tugged the dress into place. \n\nWhen the truck rumbled over the bridge half a minute later, Michelle stood leaning against the railing and Charlie stood just behind her, partially blocking the view of her with his body. Michelle didn't look at the truck, but chose instead to gaze wistfully at the river. Charlie couldn't help himself; he glanced up as it passed, trying to see the driver. He couldn't see through the light reflected on the windshield. The driver didn't see them either, or at least didn't react to them. The truck shot by without slowing, causing the bridge to vibrate. The clamor as it passed was deafening, but the noise quickly faded into the distance.\n\n\"See?\" Michelle said. \"That's why I can't... oh!\" She was caught by surprise as Charlie immediately pulled her dress back up and cupped her pussy from behind.\n\n\"Sorry,\" he said. \"But it sounds like we don't have a lot of time until that next truck comes.\" He pulled her hips away from the railing with one hand while he undid his zipper with the other. His fingers found his cock and pulled it free. He bent his knees, guiding the head of his cock towards Michelle's waiting pussy, pushing into her, filling her. She let out a long, low gasp, pushing back against him, urging him deeper. She leaned against the railing on one elbow, and as he began to move inside her, she used her other hand to pull her shirt over her head. She tossed it to the sidewalk. \n\nCharlie clutched her hips, thrusting into her, and her body matched his motion, meeting every thrust. They found a rhythm, pulling apart and coming together, pulling apart, coming together, again and again. Michelle didn't restrain herself; her cries of pleasure rang out across the river and echoed through the trees.\n\nCharlie ran his hands over her bare back, intoxicated by the feel of her skin. They moved to a rhythm that beat faster and faster, and each time he pushed deep inside her, in that brief moment when he felt her warmth clutching his throbbing cock, he felt himself ascending, nearing that peak of ecstasy. So close. He was so close. \n\nThey heard the distant growl of an approaching truck at the same time. It was louder than before, and had undoubtedly been audible for a short time, but they'd been too distracted to notice. Michelle immediately pulled off of him and scrambled to pick up her discarded shirt. Charlie tried to shove his erection back down his jeans.\n\nThe truck turned the corner just as Michelle finished pulling her shirt down her body, and Charlie and Michelle quickly moved into their 'innocent' pose, standing side by side at the railing, pretending to look at the river. Like the first two trucks, this truck was hauling a heavy load, and the bridge shook as it passed. Once again, the driver didn't appear to take any notice of them. The truck disappeared down the road.\n\nCharlie was already reaching for her shirt, even while the reek of oil and gasoline still lingered around them. He pulled it up and over her head, then let it drop by their feet. This time he pushed Michelle up towards one of the light posts, putting her back to it. She reached up and gripped the light post with both hands. He lifted one of her legs, holding it to the side, and quickly freed his cock. Kissing her deeply, he slid his cock back into her.\n\nThey barely had two minutes before they heard the next truck. This one was coming from the other direction. Charlie was close to climaxing again, and even after he heard the truck, he continued to thrust into her several more times. Michelle always talked about the thrill of Not-Caring, and at that moment, he wanted to Not-Care, to keep fucking her even while the truck passed by. Michelle made no move to pull away from him, and he thought she was probably considering the same thing. Or maybe she was leaving the choice up to him. \n\nReluctantly, he pulled out of her and stepped away. Michelle reached for her shirt, and Charlie tucked his erection back in his jeans. They stood at the railing until the truck rumbled by. \"Frustrating,\" he muttered to her.\n\n\"I know.\" She took his hand. \"Come on. I know somewhere else we can go.\"\n\n\"Where?\"\n\n\"I'll show you.\"\n\nThey walked back across the bridge towards the car, and Charlie expected they would get in and drive somewhere. Instead, Michelle led him into the trees, onto a trail that followed the river as it flowed downstream. The trail was smooth and showed evidence of frequent use, so that even in the dim light they had no difficulty finding their way.\n\nThey heard another truck coming, and turned to watch. The bridge was visible through the line of trees that separated the trail from the river. After a half a minute, the truck roared past, its lights flashing as it crossed the bridge. It was headed downhill. They could hear the sound of it fading into the distance. \n\nCharlie turned to face Michelle, considering her in her loose grey shirt. They were hidden by the trees, and far enough away from the road that passing vehicles had little chance of seeing them. Given those facts, it seemed silly for Michelle to still be wearing clothes. He stepped towards her, and she must have had the same thought, because she raised her arms in the air. He slipped her shirt up and over her head, leaving her naked except for her heels. They left the shirt hanging from a tree branch as they continued down the trail.\n\nAfter a short distance, the trail opened onto a clearing. The river curved to the right, and the sandy sediment deposited by the water over time had formed a crescent of gradually sloping shoreline lined with sticks and branches. Instead of pine trees, the clearing was filled with scraggly green grass. \n\nThey stepped out into the open space of the clearing. Charlie looked up at the stars, which shone brightly in the darkness. He could even see the cloudy streak that was the milky way. Michelle held his hand as they walked to the water's edge, where the river lapped against the shore. Charlie looked upriver, confirming that the bridge was still visible in the distance. He imagined standing where he was, looking at the bridge and seeing the Charlie and Michelle from fifteen minutes earlier, with Michelle naked and clutching the railing, and Charlie just behind her, fucking her. How much would he have been able to see? \n\nProbably not much. He could have guessed what was happening, but they were too far away to make out any details. He wouldn't have been able to make out the faces. At least, he didn't think so.\n\nHe reached for Michelle, embracing her and kissing her. His hands slid over her nude body as he pulled her close.\n\n\"This is a good place, isn't it?\" she murmured.\n\n\"Yeah.\" He touched her breast, fondling it. She kissed him as her hands moved to the front of his pants, undoing the zipper.\n\nAnother truck drove over the bridge, but neither of them paid any attention to it. Charlie pressed his fingers against her pussy, finding her still very wet. He slid his finger deep inside her as he kissed her.\n\n\"Have you ever been naked here before?\" he asked softly, wondering if Kyle had introduced her to this place.\n\nMichelle didn't answer for a moment. \"I lost my virginity here,\" she admitted.\n\nHer virginity? With who? With Kyle? Charlie wanted to ask more questions. But Michelle was stroking his cock, coaxing it into an enormous erection, and he decided questions could wait. They moved away from the water, towards the grass, and Charlie discarded his own clothing as they went. He lay down in the grass, pulling Michelle on top of him, and she happily lowered herself onto his cock. Finally, they were able to finish what they had started on the bridge, making love slowly, trying to make it last as long as possible. When she reached her climax, he surrendered to his as well; her sweaty body collapsed trembling on top of him while his cock pulsed inside her, filling her.\n\nAfter they disentangled themselves, they walked to the edge of the river and washed themselves in the cold water. Michelle showed Charlie a flat rock where they could both sit, and they huddled together, keeping each other warm as the night air dried them off. Michelle wore Charlie's shirt draped over her shoulders and he had his arm around her waist. They could see the bridge in the distance and counted the trucks that rumbled back and forth.\n\n***\n\nDarren Mickels was in Charlie's Theater Tech class, and it was easy for Charlie and Ronni to pull him aside after the class was dismissed. Charlie had worked on several productions where Darren had a role, and knew that Darren took acting very seriously. Darren had short, dark hair and a smile that was close to a smirk. He was thin and had an easy stride when he walked, as if he never had to hurry. ",
        "Darren listened attentively as they pitched their project, then took a few minutes to leaf through the script. Charlie knew that Darren had a bit of an ego, and sometimes overacted to make his performance stand out from the rest of the show. But he seemed like he'd be a good fit for the role of Max. \n\n\"Late night shooting,\" Darren said thoughtfully. \"It's cool that you have Greenholt Gardens. How many days, do you think?\"\n\nCharlie and Ronni exchanged a glance. \"Probably three,\" Charlie said. \"Not more than four.\"\n\n\"Hmm.\" Darren nodded, considering. \"Do you have anyone for the other roles?\"\n\n\"No one yet for Ingrid,\" Charlie said. \"Michelle Santos has agreed to play Gwen.\"\n\nDarren perked up. \"Michelle Santos? Really?\" He looked impressed. \"She's gorgeous. Is she interested in acting?\"\n\nCharlie shrugged. \"Yeah. She said she'd do it.\"\n\nDarren grinned slyly, looking between Charlie and Ronni. \"So that's all that was going on? You're all just working on a film together?\"\n\n\"What do you mean?\" Charlie frowned.\n\n\"Oh, you know... there's some rumors going around...\" Darren paused, then waved his hand, dismissing the subject. \"It doesn't matter. We all know how this school loves to spread stories.\" He leafed to the end of the script and skimmed the last couple pages. \"I'm pretty sure I can do this part for you. Let me read through the script, and I'll let you know my thoughts. Then we can talk about what days you want to shoot.\"\n\n\"That's great!\" Ronni said. \"We were really hoping you would say yes.\"\n\nDarren looked up, grinning widely. \"Sure. It sounds like it'll be fun.\" He nodded to Charlie. \"Tell you what. Just make sure I look half as good in the film as Michelle Santos is going to look.\" He smirked. \"I have the feeling she's going to steal the whole show.\"\n\n***\n\nThe Ingrid role was not as easy to fill. First, they went to Allison Hayes. Allison had dominated the theater productions in the last two years, starring in two of the shows and having prominent roles in two others. She was slim and blonde, with features like a Barbie doll. She loved to act, and had undeniable talent.\n\nBut she said no to their pitch. Senior year, no time, and besides that, she didn't want to be out so late. Charlie was disappointed, but mentally crossed her name off the list.\n\nSecond choice: Jennifer Addish. A junior, and a friend of Ronni's. Jennifer was shorter than Allison, with long brown hair and a bright smile. She was active in the theater, having been cast in most of the productions for the previous year, and she was also a fairly talented make-up artist. According to Ronni, Jennifer would spend entire Sundays looking up make-up tutorials on Youtube and trying them out. \n\nBut Jennifer also said no. \"Sorry, Ronni, but my parents would kill me if I was out that late on a weekday,\" Jennifer said. \"You sure you can't make it earlier?\"\n\nRonni exchanged a look with Charlie. \"I don't know if they'll let us film at the garden any earlier. We're basically trying to take advantage of my brother working there at night.\"\n\n\"Well, if you change the time, maybe I could do it,\" Jennifer said. \"But I can't do it that late.\"\n\nCharlie mentally marked Jennifer as a 'maybe'.\n\nThey moved on to their third choice: Kim Mink. Senior. They found her after school, sitting at her usual green bench outside the auditorium. Kim always looked stressed out - the way she was slumped on the bench, she would have looked natural with a cigarette dangling from her fingers. But Kim didn't smoke, so instead she held a venti cup from Starbucks. Kim had long dark hair that always fell around her face. Her father was Jewish and her mother was Japanese, and her Japanese heritage showed a little around her eyes. \n\nCharlie knew that Kim considered herself an artist. She was mostly interested in drawing and painting, but dabbled in theater as well. When Charlie and Ronni explained that they were trying to make a film for the Apex film program, and wanted to shoot late at night at Greenholt Gardens, Kim just shrugged and asked to look at the script.\n\n\" 'Anything You Want'?\" Kim read the title page. She took a sip of her latte.\n\n\"I might change the name,\" Charlie said.\n\n\"Nah, it's fine.\" Kim opened to the first page and started to read. \n\n\"We're hoping you can play Ingrid,\" Ronni said. \n\n\"Sure. I see her name right here. Ingrid.\" Kim pointed at the first page. Her eyes moved swiftly over the page and she flipped to the second. \"Apex film program, huh? I looked into that, too. But I didn't end up applying. Glad to hear you got in. It sounds like a good program.\"\n\n\"Thanks,\" Charlie said, resisting the urge to tell her he hadn't definitely been accepted yet. \"Yeah, I'm excited about it.\"\n\n\"Sure. I looked into it, but it wasn't for me. I want to get somewhere further from Pine Hills next year. The bay area, maybe, or somewhere on the east coast?\" Kim flipped another page. Charlie couldn't tell if she was reading the pages, or just skimming through them. She seemed to be moving through the script too fast to be reading every line.\n\n\"Darren Mickels has said he'll play Max,\" Ronni said. \"And Michelle Santos for Gwen.\"\n\n\"Sure. Those are good choices.\" Kim sipped her latte as she read. Charlie and Ronni sat next to her and waited patiently while she went through every page.\n\nFinally, Kim flipped over the last page. \"It's pretty good,\" she said, shuffling the pages into a neat stack \"You want me to be Ingrid?\"\n\n\"Yeah,\" Charlie said.\n\n\"All right.\" She handed the script back to Ronni. \"I'll be in your film.\"\n\n\"You don't mind that we're filming so late at night?\" Ronni asked.\n\n\"Not at all. I'm up anyway.\" She shrugged. \"Who needs sleep?\" Kim took a long sip of her latte.\n\n***\n\nSo, Kim Mink would be their Ingrid, and Darren Mickels would be their Max. Charlie called Michelle's phone later that evening. She didn't answer, but sent back a text that read \"5 mins.\"\n\nFive minutes later, his phone rang, and Michelle chirped, \"Hi, Charlie!\"\n\n\"Hey! I wanted to tell you some good news. Ronni and I managed to find actors to play Max and Ingrid.\"\n\n\"Really? Who?\"\n\n\"Darren Mickels for Max, Kim Mink for Ingrid. Do you know them?\"\n\n\"I know them. You didn't show them the script with the nude scenes, did you?\"\n\n\"No. I showed them the other one.\"\n\n\"Whew.\" She paused. \"Do you know when you want to work on it? I mean, at Greenholt Gardens?\"\n\n\"Ronni and I are talking about it,\" Charlie said. \"We thought we might try to get everyone there on Thursday?\"\n\n\"Thursday. Another Thursday.\"\n\n\"Yeah, I mean, it gets harder to coordinate, the more people we have. I haven't asked Darren or Kim about Thursday yet. But Ronni says she can make it, and Nick is fine with that day. What about you? Are you busy Thursday night?\"\n\n\"No, I can make it on Thursday,\" Michelle said. \"But... do you think Nick would be okay if we came by tomorrow, too? Just you and me, without the others?\"\n\nCharlie hesitated. \"You mean, to walk around?\"\n\n\"Uh-huh. Walk around. Like before.\"\n\n\"I'll ask him,\" Charlie said. \"I'll let you know.\"\n\nThe next day, Charlie asked Darren and Kim If they could come to Greenholt Gardens on Thursday night. Both of them agreed to be there. Charlie texted Nick and told him everyone had agreed to film on Thursday. He also asked if he and Michelle could come by later. Nick said yes.\n\n\"Should I pick you up?\" Charlie asked Michelle.\n\n\"I'll come by your house,\" she said. \"Like last time. I'll leave my car there.\"\n\nCharlie didn't argue with her. That evening, he was surprised when she arrived around 7 o'clock, a few hours earlier than he expected her. It was Charlie's turn to cook dinner, and he had made spaghetti. Fortunately, he made a lot of it, enough for Michelle to have a plate. Charlie's mom was ecstatic to have her son's potential girlfriend over for dinner.\n\n\"I wish you had warned me we'd have company,\" Mrs. Tucker scolded Charlie, as they ate spaghetti. \"I'd have made a dessert.\"\n\n\"We have creamsicles,\" Charlie mumbled.\n\nHis mom looked indignant but before she could speak, Michelle chimed in, \"I love creamsicles!\" So, after dinner, Mrs. Tucker went to the living room to watch TV while Charlie and Michelle ate creamsicles in the kitchen. Afterwards, Michelle insisted on rinsing the dishes and putting them in the dishwasher, while Charlie worked on storyboards for the film.\n\nHe watched her from behind as she stood at the sink. She wore a black dress that hung loosely against her body, and small black boots. The dress came to her knees, but became sheer for the bottom two inches. He could also see additional black straps over her shoulder, indicating a black bra. Did she have matching black panties underneath? Or nothing at all? When would he learn the answer?\n\nAt 10:30, they said goodbye to Mrs. Tucker and stepped out of the house. \"Don't be too late!\" she called after them, and Charlie assured her they would only stay at the gardens for an hour or so. He texted Nick that they were on their way, and Nick texted back saying it was all clear.\n\nCharlie felt some anticipation as they drove. He kept glancing at Michelle, expecting that at any moment she would be undressing. He even considered the idea that he would glance at her and find her already undressed, having stealthily slipped out of her garments while his attention was on the road. \n\nShe was still fully clothed when they pulled into the parking lot for Greenholt Gardens. Charlie parked next to Nick's pick-up truck, which was the only other vehicle in the parking lot. He turned off his car, and took out his phone intending to send Nick another text. But Michelle exclaimed, \"There he is!\" and Charlie looked up to see Nick propping open the door for them to enter.\n\nCharlie opened the car door and stepped out, and saw that Michelle was doing the same. He started walking towards Nick to say hello, but Michelle stopped in front of the car. \"Just a sec!\" she called out to them. She quickly tugged her dress over her head and tossed it carelessly onto the sidewalk. She was in her underwear, and Charlie could see that she was indeed wearing black panties to match her black bra.\n\n\"Wow,\" Nick said under his breath. Charlie echoed his sentiments. Even though he'd expected Michelle to strip before they entered the gardens, it still shocked him that she did it so casually out in the open.\n\nHe watched her as she reached back to unsnap her bra. \"I'll put your stuff in the car,\" he offered as she pulled the bra away from her breasts.\n\n\"Oh, that's okay. You don't have to bother.\" Michelle tossed the bra over her shoulder, where it landed in a tangle in a parking space. Next, she slid her panties down her legs until they dropped in a circle around her boots. She stepped out of them and left them where they lay as she walked towards the two guys. \n\nNick watched her approach. \"You're just leaving your clothes on the sidewalk there?\" he asked. \"They might be gone when you come back out.\"\n\nMichelle shrugged. \"It's a possibility.\" She stepped in close to Nick and pressed her body against him. \"Hello!\" she greeted him, just before stretching up and giving him a long kiss. \n\n\"Hey, Michelle,\" Nick murmured when she broke the kiss and slipped out of his arms. \"My favorite nudist.\" He grinned weakly at Charlie. \"Hi, Charlie.\" They entered the gardens through the propped door, and Charlie pulled it closed behind them.\n\nThe evening passed in much the same way as their previous night at Greenholt Gardens, except that this time they made no pretense at working on a film. Charlie led Michelle naked out into the gardens, and they made love in the Japanese garden under the light of the red lanterns. Afterwards, Charlie put his clothes back on and Michelle remained naked, and they met Nick in the snack bar, where they sipped drinks from the cooler and watched late night TV. Michelle sat even less modestly than before, stretching one leg to the side so that her pussy was clearly visible.\n\nWhen it came time to leave, Michelle gave Nick another hug and kiss, and he walked them to the door. Charlie stepped out first, and immediately noticed that Michelle's clothes were gone. Someone or something had taken them. Michelle stepped out behind him and hesitated, looking down at the sidewalk. She didn't say a word, but resumed walking, passing Charlie on her way to the car. The bright lights of the parking lot illuminated her nude body as she headed towards the passenger side, acting as if her missing clothes had never existed.\n\nNick barked a laugh. \"Michelle!\" he called to her. \"Come back. I picked up your things and brought them inside. I just wanted to see your face when you saw that they were gone.\" He laughed again, shaking his head. Clearly, he had expected more of a reaction from her. He disappeared through the door and returned with a neat stack of Michelle's clothes.\n\n\"Charlie will take them,\" Michelle said. Charlie accepted the clothes from Nick and said goodbye and thanks. Returning to the car, he handed Michelle her bra and panties but kept the dress. Michelle smiled and leaned against the front of the car to slip on her panties. Charlie tossed her dress into the back seat.\n\nThey drove back to Michelle's car while she sat in the front passenger seat in her bra and panties. They saw very few cars on the road at that time of night. As usual, Michelle had parked around the corner from his house, in that dark spot away from the street lights. He parked behind her and turned off the engine.\n\nTheir eyes slowly adjusted to the dark. Michelle unbuckled her seat belt but remained in her seat. \"My mom and dad helped me buy that car at the end of last summer,\" she said.\n\n\"Wow. Nice parents.\"\n\n\"Yeah. My mom was tired of driving me around. Right after I got it, Mirella, my sister, her car broke down, so she asked me to drive her back and forth to work, for about a week. She worked evenings, so I picked her up from Macy's late at night, like more than an hour after the store closed.\" Michelle paused. \"Not many people would be around that late, around those stores. The parking lots were always almost completely empty. I was driving through the parking lot and I noticed this trash bin, that was in the corner of the parking lot, away from everything. One of those big green bins with the lids, and I noticed the lid wasn't locked. I thought to myself, what if I walked up to that bin, took off all my clothes and tossed them into the bin? And just walked away?\" She looked at Charlie. \"Is that crazy?\"\n\n\"Maybe a little...\"\n\nShe laughed. \"I know. I'm crazy. But once I thought about it, I couldn't stop thinking about it. The idea was so exciting to me. That's how my mind works, I get obsessed. It's the same reason I always think about crossing that bridge.\" She looked down at herself, her finger tracing the line of her panties where it crossed her leg. \"So I made a plan. I put a change of clothes in my car, older stuff I didn't care about. When I got in my car to get my sister that night, I changed into the old clothes. Then I drove to Macy's early, and I parked near the trash bin. I got out of my car, walked to the bin, took everything off and threw it all away. I walked naked back to my car, got in, and put on the original outfit. Then I drove to the employee exit of the store and waited for my sister.\" \n\n\"Wow.\"\n\nShe smiled. \"There's actually a point to the story. Ever since that day, I've kept my car stocked with spare clothes. I'm always prepared. If I see an opportunity and get a crazy impulse to do something, I always have a spare outfit to put on.\" She touched his arm. \"You've asked me before, if I have clothes in my car, and I always tease you and don't answer, because I like to pretend I don't. But I always do, and I do now.\" She leaned forward and kissed his lips. \"You don't ever need to worry about me, okay? And you can keep that dress. At least for today. I don't need it.\" \n\nShe turned and popped open her door. As she shifted to climb out of the car, Charlie suddenly said, \"Michelle.\"\n\nShe paused. \"Yes?\"\n\n\"That dress. Is that what you were wearing when you left your house?\"\n\n\"No. I wore something different. That's what I mean. I still have those other clothes, in my car.\"\n\n\"Okay,\" Charlie said. \"Good night. Better go before someone sees you.\"\n\nShe flashed a smile at him and stepped out of the car. He watched her walking in her bra and panties to her own car. She unlocked the door and slipped inside. Her car started. He waited until she drove away before starting his own car up again.\n\n***\n\nOn Thursday, they had to follow a different method to get to Greenholt Gardens. Michelle didn't stop by his house; she went directly to the gardens. Charlie drove by himself, with all the video equipment he had checked out of the A/V room in his back seat. Darren and Kim each arrived separately. The parking lot was conspicuously full for a time when the garden was closed.\n\nEven Nick was nervous, looking out at all the cars. \"It looks like I'm having a party,\" he said. \"You're not going to be here too long, right?\"\n\n\"We all have school tomorrow,\" Charlie said. \"We won't be long.\"\n\nFor the early scenes, Michelle was supposed to dress conservatively, and she arrived in a dark blue dress with long sleeves. Nick came by to help them set up, and he eyed Michelle while helping Charlie set up the lights. \"I've mostly seen her with her clothes off,\" he whispered to Charlie, \"but she looks pretty damn good with them on, too, doesn't she?\"\n\n\"Shhh.\" Charlie glanced at Darren and Kim, but the two actors were practicing lines and hadn't heard. He turned his attention toward Michelle. Nick was right, she did look damn good, maybe too good. She was supposed to look chaste, to symbolize the initial reservations Max and Ingrid had towards each other. But Michelle's dress was a little too tight, clinging to her curves, emphasizing her bosom. \n\nKim had her long hair up in a bun and wore a dressy blouse and skirt which gave her a polished look. Darren was also dressed up in a long sleeve shirt and crisply ironed slacks. Charlie surveyed his three actors and decided they matched each other pretty well. They would look natural sitting at a table together in a garden, at a country club, or maybe a cocktail party.\n\nDarren and Kim treated each other like two well-acquainted professionals, bantering back and forth, dropping cryptic references to previous experiences in the theater department. Kim had a latte in her hand which she was sipping like a cocktail. Michelle joined them at the table which would be the setting of the first scene, and the two actors focused on her. \n\nMichelle was in good spirits; she laughed easily at whatever Darren and Kim said to her. Charlie tried to eavesdrop on their conversation, but kept getting distracted by all the setup he and Ronni had to do. He could tell that the two actors looked at Michelle as a mystery to solve; neither of them understood why she was there, and they were both curious to know the answer. Why would a senior cheerleader with no previous interest in acting suddenly decide to be in a random film project? What was her connection to the project? Michelle wasn't giving them anything, to their mild frustration.\n\n\"All right, everyone,\" Ronni told them. \"Let's get started.\" \n\nFor the next hour, they worked on the first scene. Charlie had them go through the entire scene several times while he filmed from one angle, then he moved the camera to a different angle and had them go through the scene several more times. He had them repeat particular lines while filming close-ups. Ronni monitored the shot list, checking off the shots one by one.\n\n\"I wish we had more time,\" Charlie muttered to Ronni.\n\n\"I know,\" Ronni replied. \"Me too. But I think you're getting enough to put this scene together.\"\n\n\"Yeah, maybe.\" He didn't have any choice. It was past midnight, and he couldn't keep his cast for much longer than he already had. \"All right, let's call it a night.\"",
        "He thanked the cast and let them know they were done. Kim immediately gathered her things and headed for the parking lot, explaining that she was late for another commitment. Darren lingered, ostensibly to help put away the equipment, although he seemed more interested in sitting and chatting with Michelle.\n\nCharlie listened in on their conversation, scowling as Darren offered to meet with Michelle sometime to practice their lines. \"Maybe after school?\" Darren suggested.\n\nMichelle suggested that they should find a time when Kim was also available, because if they were practicing lines, then shouldn't Kim be there, too? \"Of course,\" Darren agreed, but now he didn't sound quite as enthusiastic. \n\nFinally, Darren stood. \"I should get going,\" he announced loudly. He looked at Michelle. \"Walk you to your car?\"\n\n\"No, that's okay,\" Michelle said. \"I need to wait for Ronni.\"\n\nDarren nodded. \"Okay then. Good night, all! See you bright and early at school tomorrow!\" He turned and strolled confidently towards the snack bar and the parking lot.\n\nMichelle watched him out of the corner of her eye, waiting until he disappeared through the door of the snack bar. \"Whew!\" she said. \"So glad he's finally gone!\" She reached behind her back and tugged down the zipper to her dress. Swiftly, she peeled the dress down her body, tugging her hands out of the sleeves so that they were turned inside out. She pushed down her undergarments at the same time, and in less than a minute had stripped down to her bare skin. \n\nRonni blinked at her. \"I'm really not used to you doing that.\" \n\nMichelle shrugged and grinned. She bundled her clothes into a ball and set them on a table. \"Tell me what I can do to help.\"\n\n\"That's all right. We got it.\" Charlie zipped up one of the camera bags. \"You didn't give him much time to get to his car, you know. He's probably still walking through the snack bar. He might be looking out the window at you right now.\"\n\nMichelle shook her head. \"Oh, don't try to scare me.\" She stepped up to one of the lights and studied it, finally locating the switch and turning it off.\n\n\"Careful,\" Ronni warned. \"Those lights get pretty hot.\"\n\nCharlie jumped up. \"Yeah, let them cool down for a bit.\" He walked over to Michelle, who smiled and took a step away from the light. She stood with her hands behind her back, gazing at him expectantly.\n\nHe couldn't help but look down at her body. Why had she stripped? He hadn't expected to do anything with her that night, other than work on the film. Did she expect another nude walk through the gardens? More time watching TV with Nick in the snack bar? Or had she just decided she wanted to be naked?\n\n\"Um... do you want to unplug those extension cords and roll them up?\" Charlie pointed at two long orange cords which led to one of the outside outlets. Michelle nodded happily and darted away to do as he asked.\n\nNick came down from the security room to help them pack up. He lifted his eyebrows at Michelle's nudity but didn't comment on it. With all four of them working, it took no time at all to get all the equipment bagged up. \n\nRonni glanced at Michelle before turning to Charlie. \"I need to go home,\" she said. \"I can help you carry this stuff to your car, but then I gotta leave.\"\n\n\"We can take it all in one trip,\" Michelle suggested. \"If Nick helps. I need to head home, too. Let's all walk together.\" She reached down and picked up one of the camera bags, hoisting it on her bare shoulder. \"Oh, Charlie...\" she said. \"Do you mind putting my clothes in one of the bags? So I don't have to carry them? They won't fit in my purse.\"\n\n\"Oh... sure.\" He picked her clothes off the table and pushed them into the bag he was holding. Nick picked up the two remaining bags, and they walked as a group to the snack bar. \n\nCharlie opened the door to the outside first, and he took a moment to prop the door open with the big rock that sat nearby for that purpose. It wasn't until Michelle was already outside that he realized that his first move should have been to scan the parking lot and warn Michelle if Darren was still around. Fortunately, the only four cars in the parking lot belonged to the four of them that remained. \n\nCharlie popped open his trunk, and Nick helped load the equipment inside. Michelle gave Charlie the bag she was carrying, and he found space for it in the trunk. \"Good night!\" she announced. \"I'm going to head home.\" She walked over to Nick and gave him his usual goodbye kiss, then turned to Charlie and gave him an even longer kiss. She even walked up to Ronni to give the smaller girl a hug and a kiss on the cheek, and the shock on Ronni's face was clearly visible. \n\n\"See you!\" Michelle sauntered over to her car and opened the door. She was affecting an air of indifference towards the fact that she was still completely nude, but Charlie knew her well enough to recognize that she was actually very thrilled by what she was doing. She climbed in and started her car, leaving her door open.\n\nCharlie closed his trunk and said good night to Nick and Ronni. He was well aware that Michelle's clothes remained in one of the bags in his trunk, and he knew Ronni also remembered, because she gave him an incredulous look. But neither of them said anything. Ronni got into her car and Charlie got into his, and Michelle seemed to be waiting for them. As soon as they both had their cars started, Michelle closed her door and put her car in reverse. Michelle's car was the first one to leave the parking lot, and by the time Charlie pulled out onto the road, Michelle's car was gone.\n\nHis phone rang as he drove. He picked it up, expecting Michelle, but it was Ronni.\n\n\"Hey,\" he answered.\n\n\"Her clothes are in your trunk. You know that, right?\"\n\n\"Yes,\" he said. \"She did it intentionally.\"\n\n\"So she's out there driving and she's still completely naked. I mean... is she going to be all right?\"\n\n\"Yeah. She has extra clothes in her car. She was just putting on an act for us. Pretending like it didn't matter that she wasn't wearing anything. Like she didn't have to care.\"\n\n\"Well, she convinced me,\" Ronni said. \"Geez, Charlie. She's quite an outlier, isn't she? Even after you told me about her... I never expected she'd get so comfortable so fast being naked at the gardens in front of us. She's really into the whole nudist thing, huh? She strips off her clothes like it's nothing.\"\n\n\"Yeah. I don't know. Maybe she's just happy to have a place where she can be herself?\"\n\n\"Hah! Yup. Her naked self.\" Ronni chuckled. \"Yes, she does seem to be happy about that.\"\n\nCharlie changed the subject. \"How do you think we did tonight?\" he asked. \"Do you think we made good progress on the film?\"\n\n\"I think so. You'll have to watch the footage to see. But yeah, you probably have enough to edit that first scene.\" Ronni paused, and Charlie could hear the click-click-click of her turn signal as she made a turn. \"I'd like to say we could finish in two more nights of filming. But probably more like three.\"\n\n\"Probably three. You're right.\"\n\n\"Get some sleep, Charlie. Maybe tomorrow we can eat lunch in the A/V room and look at what we got?\"\n\n\"Sure, sounds good.\"\n\n\"Charlie?\"\n\n\"Yeah?\"\n\n\"Be sure to take Michelle's bra and panties out of that camera bag before you check it back into the A/V closet tomorrow. Okay?\"\n\n\"Oh. Yeah, right.\"\n\n\"Good night, Charlie.\"\n\n\"G'night.\" He disconnected the call.\n\nWhen he finally arrived home, it was close to two in the morning, and he should have gone straight to bed. Instead, he was at his computer, uploading the footage from one of the cameras. He watched a close-up of Michelle, in that tight blue dress that clung to her body, her face turned up towards the light, a smile on her perfect lips. He knew that when he had the footage uploaded to the editing computer, he would edit it all together to tell the story he had written, a story where Max and Ingrid were the main characters and Gwen was the ethereal symbol of their attraction. But he also knew that in his heart, this film was about Michelle and no one else.\n\nHe rewound Michelle's scene to the beginning and watched it again. \n\n***\n\nCharlie passed Michelle in the school hallway the next morning. She waved. \"Having a good day?\" she asked.\n\n\"Tired,\" he replied, and she laughed.\n\nCharlie struggled to get through his morning classes. He nodded off during his Euro Lit class when the teacher had them watch the first half of \"Sense and Sensibility\" in a dark classroom. During lunch, he met Ronni in the A/V room and they uploaded the previous night's footage onto the computer in the editing bay. They watched some of the clips and agreed most of the shots looked pretty good. The sound wasn't as crisp as Charlie wanted, but he expected he could fix that later by having the actors re-record some of their lines.\n\n\"Any plans this weekend?\" Ronni asked. \"Doing anything fun?\"\n\n\"I'll be here tomorrow, probably,\" Charlie said. \"Editing. I don't have anything else planned.\"\n\n\"You're not going to see Michelle?\"\n\n\"Probably I will. But we don't have anything planned.\"\n\n\"Better hurry and ask her,\" Ronni said. \"The day is half over already.\"\n\nCharlie didn't respond, pretending to be focused on the editing software. He hid the panic that suddenly bloomed inside of him. Should he have asked Michelle out already? Did she already have plans? When was he supposed to schedule something with her? He hadn't ever had a girlfriend before, he didn't know how it was supposed to work.\n\nWhere would he take her, anyway? He felt like he'd already used up his best option, the weekend before. Could he take her to dinner? A movie? Maybe just an invitation to his house. Or would she think that was boring?\n\nHe waited until the end of lunch before trying to contact Michelle. Ronni left for her class, and Charlie slipped into a stall in the restroom. He sent a quick text to Michelle: \"Busy?\"\n\nShe wrote back. \"Class is starting. What's up?\"\n\nHe wrote, \"What are you doing tonight?\"\n\nA pause before her response came back. \"Family thing. Call you later?\"\n\nHe frowned. He wrote back, \"Ok.\" The bell rang and he had to jog to his next class.\n\nHe kept checking his phone through his afternoon classes, looking for something from Michelle, but nothing came. Not a big deal. She was in her own classes, after all. The final bell signaled that school was out for the weekend, and Charlie walked to his car. He set his phone on the passenger seat and took his time starting the car, in case Michelle called. \n\nI'll call her when I get home, he thought. If she hasn't called me by then.\n\nHe drove home and pulled into the driveway. On his way in, he checked the mail and found a large envelope addressed to him. The envelope showed the seal for Jefferson University. He couldn't wait; he ripped open the envelope and peeked inside. It contained a packet of documents, and at the very top of the packet he could see a cover letter.\n\nThe cover letter was addressed to him. It read, \"We are happy to inform you that you've been accepted into the Apex Film Program...\" \n\nHe closed the envelope and clutched it in his hands. \"Wow,\" he breathed. \"I got in. I actually got in!\"\n\nHe rushed through the front door and into the living room, where he emptied the contents of the envelope onto the living room table. He could see forms to fill out, a pamphlet describing the program in detail, a page showing the photos and listing the credentials for all the professors. \n\nCharlie seized his phone. Now he had a real reason to call Michelle, and he wasn't going to wait another minute. He went to his contact list and found her name. Just as he was about to press the call button, the phone buzzed in his hand. Michelle's name appeared on the caller ID. \n\nHe answered the call. \"Michelle!\"\n\n\"Hi, Charlie.\" Michelle spoke rapidly. \"Here's the thing. My grandparents are coming over for dinner tonight, and my mom really wants me to be there. So I really have to be there. She wanted to have a family dinner with my grandparents like we used to, but then Mirella said she has to work, and Marie is complaining because she wanted to go to her friend's house, and they're all going back and forth, and if I tell my mom I want to go out instead, she's really going to be upset. And she's really going to want to know where I'm going and what I'm doing.\"\n\nIt took a moment for Charlie to remember why she was explaining this to him. \"Oh. Yeah, it sounds like you should be there for dinner,\" he said. \"Hey, do you want to hear some good news?\"\n\n\"What?\"\n\n\"I'm in! I was accepted to the Apex film program.\"\n\n\"You were! That's awesome, Charlie! I knew you would be! Congratulations!\"\n\n\"Thanks! They sent a letter in the mail.\"\n\n\"Yay! I'm so glad for you! Does your mom know yet?\"\n\n\"No,\" he said. \"She's still at work. I just opened the letter barely five minutes ago.\"\n\n\"I bet she'll be happy.\"\n\n\"Oh, definitely. She'll want to go out and celebrate.\"\n\n\"Yes, you should celebrate!\" Michelle said. \"You and your mom can celebrate tonight. Then tomorrow, you and I should do something to celebrate.\"\n\n\"Like what?\"\n\n\"Anything you want. You decide.\" She hesitated. \"The only thing is, I told Vanessa that I would go shopping with her in the afternoon... but maybe you and I can meet later?\"\n\n\"Sure.\"\n\n\"I don't want to cancel on her again. She already thinks I'm acting flaky and there's so much I'm not telling her right now. She doesn't even know about the movie we're working on.\"\n\n\"It's fine. We can meet later. What should we do?\" \n\n\"Anything you want.\" This time she said it in a sultry whisper, and Charlie felt a tingle go down his spine. He knew she wasn't just talking about picking a favorite restaurant or a special dessert place. She was offering herself as the award for his accomplishment, and leaving it to him to decide what he would do with her, and where. Charlie had no doubt that if he asked her to sneak into his house and spend the evening in his bed, she would agree to it. But he also knew that he wouldn't waste her offer on anything so tame, and maybe she knew it as well.\n\nHe felt his blood stirring as he considered possibilities. Anything you want, she said. What did he want? Had he developed a taste for the forbidden because of his contact with her? Had her fetish invaded his desires, an arousal born of seeing her aroused? Or had he always been this way, deep down, and she had just brought it to the surface?\n\n\"Here's what I want us to do to celebrate,\" Charlie said, and he told her what he wanted.\n\nWhen he finished speaking, she was silent for a moment. \"Charlie...\" she spoke quietly. \"I don't know if I can do that. I mean... it might be too much.\"\n\n\"I know.\"\n\n\"I think it's going too far. Isn't it?\"\n\n\"It is. You're right,\" he said. \"I was just getting carried away. How about this, what if you hang out with Vanessa on Saturday, and we'll do something on Sunday? You have any plans on Sunday?\"\n\n\"No. I'm free on Sunday.\"\n\n\"I'll call you. We'll do something together Sunday afternoon to celebrate. We can get ice cream or something.\"\n\n\"Okay.\"\n\n\"That'll leave you free to hang out with Vanessa, for as late as you want Saturday night. So you won't have to rush.\"\n\n\"Okay.\"\n\n\"I'll call you. We'll figure it out.\"\n\n\"Sunday?\"\n\n\"Right. Sunday.\"\n\nThey talked for a few minutes more, about Jefferson University and what college life would be like for him, until Michelle had to leave to help fix dinner. Mrs. Tucker came home soon after, and as predicted, she was overjoyed when she heard of Charlie's acceptance into the film program. That night, they went out to Olive Garden to celebrate.\n\n\"What about Michelle?\" Mrs. Tucker asked in the car. \"Do you think she'd want to join us?\"\n\n\"She can't make it tonight,\" Charlie said. \"But it's fine. We're going to get together and do something this weekend.\" \n\n***\n\nCharlie drove to the school the next day to do some work in the editing bay. He was surprised to find Ronni waiting for him when he arrived.\n\n\"What are you doing here on a Saturday?\" he asked her as he unlocked the green door to get into the school.\n\n\"I came by to see if you were working on the film,\" she said. \"I was just about to text you to see how it was going. The film's been in my head a lot lately.\"\n\n\"I'm just about to start on it,\" Charlie said. \"Come on in.\"\n\nFor the next few hours, Ronni sat with him in the editing bay as they looked at the footage from the cameras and organized it into useable pieces. Charlie usually worked by himself, but he had to admit that the editing went quicker with Ronni there. She had a sharp and organized mind and kept notes on the different clips and where the pieces would fit into the film. \n\nDaryl dropped by and looked surprised to find Charlie with a new girl. Charlie introduced Ronni to the security guard and explained that he was working with Ronni on a short film. Daryl grinned, and Charlie suspected that Daryl wasn't buying that his relationship with Ronni was completely platonic. Charlie knew that Daryl was going to tease him about being a player the next time the guard caught him alone. \n\nCharlie showed Daryl some of the footage they had edited together. Although Michelle was clearly recognizable on the screen, Daryl didn't say a word. He nodded his approval when the clip ended. \"Looks good,\" he said. \"I think you got some good actors in there. Show me the whole thing when it's done?\"\n\n\"Sure,\" Charlie said. \n\n\"I gotta keep walking,\" Daryl said. \"Don't stay too late.\"\n\nCharlie didn't intend to. He had plans for later.\n\n***\n\nHe ate alone that night, in a Gozerburger restaurant twenty miles west of Pine Hills. He had a gozerburger with cheese, a large fries, a large Sprite. Afterwards, he walked to a Starbucks in the same strip mall and sat for a while, sipping a large coffee while he prepared a shot list for the next filming session at Greenholt Gardens. He watched people come and go, and as the hour grew late, he saw more and more empty seats around him. \n\nIt was all just killing time. He had told his mother that he would be out on a date with Michelle that night, celebrating his acceptance into the Apex film program, and now he had to fake like that's what he was doing. In reality, Michelle was out spending time with Vanessa and her other friends. She had gone shopping with them, and probably afterwards they had gone somewhere for dinner. \n\nJust after 11 o'clock, Charlie gathered his things and returned to his car. He pulled onto the highway, heading back to Pine Hills. At first, he had the radio on, tuned to a local pop music station, but after a few miles, the music got on his nerves and he turned it off. The miles passed in silence.\n\nCharlie drove past the sign that let him know he was entering the city limits of Pine Hills. Instead of remaining on the road as it curved to the southeast towards his neighborhood, he took a left and headed north. After a mile, he found Benham Road and turned onto it. His eyes slid over the same landmarks he had passed the week before, when he had driven north on the same road with Michelle. The houses, the intersections, the gradual shift from residential properties to commercial.\n\nWhen Charlie finally saw the glowing letters of the Macy's sign in the distance, he looked down at the clock on his dashboard and saw it was approaching midnight. The store looked dark; Charlie knew it closed at 10:00 PM on Saturdays. The lights were on in the parking lot but he only saw three cars parked there, close to the store. Maybe a cleaning crew. Charlie moved into the left turn lane and turned onto the street that ran adjacent to the store.\n\nHe kept the speedometer at exactly 25 miles per hour. Any slower and he might draw attention. As his car approached the next intersection, he scanned the corner of the parking lot for a dumpster or trash bin. He saw something there, but it looked like some kind of electrical box. At the corner, he turned right, continuing his circuit around the Macy's.",
        "At the next corner of the parking lot, he could see a wall of concrete blocks enclosing a rectangle, with one side of the rectangle left open. Inside the enclosed space, he could see a dark shape sitting in the darkness. The wall was tall enough to hide the dark shape from the view of the street, and as he drove closer, Charlie caught a glimpse of the corner of the shape before it disappeared from view behind the wall. It was a green trash bin with a black lid. This was it. He was sure of it.\n\nCharlie turned left and entered the parking lot. The lot was completely empty in this area, but Charlie avoided the temptation to cut straight across over the lines. Instead he carefully wound his way over to the green trash bin. He pulled into a spot in the shadows, about forty feet from the bin, and turned off his engine.\n\nCharlie checked the time. Five minutes to midnight. He looked at Macy's through his rear-view mirror. The main entrance to the department store was located on the other side of the building. This side looked like it was used for unloading trucks. The three cars he had seen in the lot were on the other side of the building, hidden from view.\n\nHe checked his phone for messages. Nothing. He pulled the lever to recline his seat, leaning back but not so far that he couldn't keep an eye around him. He reached over and opened his glove compartment, rummaging around until he found a small bottle. He pulled it out and closed the glove compartment.\n\nCharlie slowly undid his zipper. He reached in and found his cock. It was already partially erect and stiffening rapidly in his fingers as he pulled it out of his zipper hole. After taking a quick look around to make sure the coast was still clear, Charlie opened the bottle and dribbled some lubricant onto his palm. He reached down and started to rub it over his cock.\n\nThe time on his dashboard had reached midnight. Charlie watched it as he stroked himself. 12:01. 12:02.\n\nA car appeared in the distance, driving along the same road that he had arrived on earlier. Charlie tucked the bottle of lubricant under the seat and watched the car. It turned, and now the headlights were pointed at him, driving towards him. Charlie couldn't identify the car because of the brightness of the headlights. He watched warily, ready to shove his cock back into his pants if he saw police lights on top of the car.\n\nThe car turned into the parking lot, and he saw it from the side. It was Michelle's car. Charlie relaxed. His hand found his cock again, and he stroked it back to hardness as he watched her driving through the parking lot.\n\nShe didn't drive in his direction, but instead headed for the adjacent side of the lot. \"Where are you going, darling,\" Charlie murmured. \"No, no, no. That's too far. Are you crazy? That's way too far.\" Michelle pulled into a parking space at the edge of the parking lot, at least a hundred feet away. Instead of picking a spot in the shadows, as Charlie had, Michelle parked almost directly under a lamppost. He was astonished that she had parked so far away. He felt a nervous flutter in his stomach when he considered the distance.\n\nThe door to her car opened and Michelle stepped out. Charlie stared at what she was wearing. She looked like she was dressed for church. She had on a white dress that became sheer lace as it crossed over her shoulders. The dress came to her knees. She wore matching white heels on her feet. Michelle stood next to her car, looking around. She carefully avoided looking at Charlie's car, as if she pretended it wasn't there.\n\nAfter a moment's hesitation, Michelle closed her car door. She opened it and closed it a second time, probably making sure she hadn't accidentally locked it, then turned towards the concrete structure containing the trash bin. She began to walk across the parking lot towards the bin. \n\nCharlie gripped his cock in his hand, watching her intently. The tap of her heels against the asphalt was audible as she came closer and closer to the bin. She knew he was there, sitting in his car, but she didn't look at him. It was like the game they had played, that first day in the girl's locker room, where she pretended he was invisible.\n\nMichelle reached the trash bin. She tried to lift up the black lid and flip it over, but struggled with the weight and awkward leverage. After two tries, she gave up and left it closed. She turned, looking over her left shoulder at the Macy's but standing so that her front faced towards his car. Her dark hair fell over her right shoulder, black against the white dress. She reached back between her shoulder blades and he knew that she was undoing a zipper.\n\nCharlie stroked his erection, watching her. The top of her dress, which had clung to her curves before, now came loose, and she slipped the fabric off her shoulders, demurely drawing it down her body. He could see her bra now, white and lacy and hinting at the shape of the breasts underneath. She looked like a bride undressing on her wedding night.\n\nNow she pushed the dress over her hips, and he could see that her white panties matched her bra. She bent over and tugged the dress down to her feet, then stepped daintily out of it. In her bra and panties, she held up that beautiful white dress, letting it dangle in her left hand. With her right hand, she lifted up the top of the trash bin. She tossed the dress in and it disappeared into the darkness.\n\nWas her heart beating fast now? Did she look around at the empty parking lot, feeling her vulnerability, perhaps savoring it? Half-naked, wearing only her underwear, her dress gone forever in the shadowy abyss of the bin. And now he watched as she reached between her breasts to undo a clasp there. Her bra came loose and her breasts were revealed. The bra went into the bin as well. \n\nShe slid her panties down her legs and he could see the dark line of her pubic hair. She stood up straight, still facing him, the panties balled up in her hand. He admired her nude body as she tossed the panties into the trash. Now she was naked, her beautiful clothes tossed away like rubbish.\n\nBut she wasn't done. She removed her heels, one at a time, and tossed them into the trash as well. For a lingering moment, she posed next to the trash bin, naked and barefoot, pushing her hair back with her fingers, pretending to look at the store while offering him a long look at her body. She turned, and now he saw her in profile as she faced her car. Maybe she was realizing how far away she had parked, and how long a walk she had ahead of her. Her first steps were tentative, but once she started walking, she moved with deliberate slowness, as if taking a casual stroll under the stars.\n\nCharlie picked up the bottle of lubricant and squirted some onto his palm. He rubbed it liberally onto his cock, urging it to greater rigidity. Tossing the bottle onto the floor of the car, he quietly opened his car door and slipped out. His hard cock still jutted out from his zipper, gleaming with the coat of oil he had just applied. He looked for Michelle; she was almost a third of the way to her car. He walked after her, his pace slightly faster than hers. He wanted to catch up with her but didn't want to rush.\n\nHe fell into line behind her, closing the gap between them. His eyes admired her long legs, her perfect ass, the tiny protrusion of labia visible at the top of her thigh gap. Rising higher to her graceful back, the way her dark hair flowed between her shoulder blades like a stroke of calligraphy. She walked a straight path toward her car, heedless of the lampposts and where they cast their light. More than once she walked through a pool of light as bright as the day and her nude body was clearly displayed. Charlie circled around these bright spots, unwilling to put his erection on display in the same way. He didn't want to tuck it back into his pants; he liked the way it pointed towards Michelle, as if straining to reach her.\n\nHis shoes tapped on the asphalt. He made no effort to keep his steps silent, and Michelle must have heard the rhythm of his walking behind her, coming closer and closer. She kept her eyes forward, making no acknowledgement of his presence, until the moment she stepped into the glowing circle of light cast by the lamppost next to her car. Suddenly she stopped; she whirled to face him. Charlie was ten feet away, still in the darkness, and he also stopped. Their eyes met.\n\nCharlie slowly walked towards her, closing the distance between them. He could feel the cool air on the hot skin of his cock as it throbbed with the desire to press against her. It would be the first part of him to slide against her skin, to go between her legs, to enter her.\n\nHe crossed the threshold of the light, and now his body was also illuminated, caught in the bright glow of the lamppost. Michelle reached out and caught his cock in her fingers. She squeezed it while leaning forward to press her lips against his mouth. Charlie groaned, returning her kiss, consumed by the feel of her fingers gripping his shaft. \n\nMichelle backed up, step by step, towards her car, and Charlie followed her without even realizing it, tugged by his cock, knowing only that he wanted to remain near her. Her calves hit the front bumper of the car, but instead of stopping, she let herself drop lightly onto the hood. She climbed up onto the car, releasing his erection so she could support herself with her hands. Pulling herself further up the hood, she brought her feet up and let her legs fall carelessly open. She watched him, waiting to see what he would do. Her dark eyes dropped to gaze at his erection.\n\nCharlie reached down and caught hold of her ankles. He pulled them up, off the car, and pulled her legs towards him, around him. Michelle didn't resist; she let herself be pulled down the hood of the car, her pussy being pulled towards his waiting cock. He leaned forward, the head of his penis pressing against her glistening slit. Perhaps it was the lube he had spread liberally onto his shaft, or perhaps it was her own arousal that allowed him to slide so easily into her. He went in too quickly, faster than he had intended, and heard her gasp in shock. The entire length of his cock was suddenly buried deep inside her. He started to pull out, but her legs clutched tightly around his waist and tried to bring him in deeper still. \n\nHe clutched her hips, lifting her bottom off the car to give him a better angle. The sight of her underneath him, her naked body splayed across the car, and the outrageous realization that they were having sex in the middle of the Macy's parking lot made Charlie delirious with desire. He didn't hold back, knowing that the longer they took, the greater the chance that they would get caught. They fucked furiously against each other like animals, Michelle matching his rhythm thrust for thrust. Her fingers dug into his shoulders and he could feel her nails even through his shirt.\n\nShe came first, her back arching, her eyelashes fluttering towards the night sky. Her hair made a dark fan against the red paint of her car. For a moment, he felt the illusion that she lay on red silk sheets, that he was making love to her on a bed that somehow sat in the middle of the parking lot. Afterwards he would sprawl next to her, he would hold her, and they would lay together naked on those red sheets, watching the moths flit around the streetlight above them. They would lay together, waiting for the sunrise, and the next morning cars would arrive and park around their bed, shoppers would walk by where they still lay intertwined.\n\nThe ecstasy rose like a shriek within him, an irresistible force, and suddenly he was flooding inside her, his essence connected to hers in the surge that erupted from his cock. Her legs clutched around his waist, squeezing him tightly, holding him deep inside her while she milked him for every drop. \n\nHe leaned over her body, breathing hard. His cock was still inside her, warm in the sheath of her pussy. The cloud of arousal lingered over his awareness, making him feel like his feet had detached from the earth. He was floating above Michelle, looking down at her. Michelle, his Michelle. The flush in her cheeks looked so lovely, the way her lips were slightly parted. He would use softer lighting if he could, to capture how beautiful she looked at that moment, diffused lighting, so his own shadow wouldn't be visible on her skin...\n\nThe sense of urgency came back to him all at once and his surroundings clicked back into acute focus. He rose quickly, pulling out of Michelle, and looked around anxiously while he shoved his penis back into his pants. Although he didn't see anyone and the parking lot looked as empty as when he had arrived, he suddenly felt as if eyes watched from all around them, a sea of spectators to their scandalous act. \n\nHe gave Michelle his hand and helped her down from the car. Neither of them spoke a word. Michelle hurried over to the driver's door. Her clothes were lost in the dark depths of the trash bin, so the car was her only way to cover herself. Charlie watched her climb into the driver's seat and close the door. He was taking small steps backwards, instinctively moving out of the circle of light into the shadows.\n\nMichelle turned on her engine. He waited for her headlights to come on, but her car started moving while they were still off, and he understood that she didn't want to put a spotlight on him while he was crossing the parking lot. He turned and walked briskly to his own car, listening to the sound of hers as she cut across the parking lot towards the exit.\n\nBy the time he reached his car, Michelle was driving into the distance. Charlie climbed in quickly and turned on his car. He also left his lights off when he started driving, suddenly certain that someone was watching his car and trying to take down the license plate. He pulled out onto the street and intentionally drove in the opposite direction from the way Michelle went. If the police were going to chase him, he'd at least make sure Michelle got away. Bonnie and Clyde.\n\nBesides, he didn't want to accidentally pass the spot where she'd pulled over to get dressed. He liked to imagine her speeding through Pine Hills, still naked behind the wheel, his cum leaking out of her onto the seat.\n\nHe flicked on the headlights. The police never materialized, and as Charlie drove north, picking streets at random, he changed from being a criminal fleeing a crime scene to just another teenager driving around late at night on the weekend. He turned his car east, not quite sure where he was but knowing he would eventually cross a familiar road.\n\nHis phone buzzed. A text message. It was from Michelle.\n\n\"Congrats on getting into the film program!\" And she had put an emoji blowing a kiss. He smiled.\n\nThe light ahead of him turned red and he slowed to a stop. He picked up his phone to send a message back. He thought for a moment, then quickly typed, \"I love you, Michelle\". His finger hovered over the Send button.\n\nThe light turned green before he could press the button. He set the phone down and drove.\n\nWhat if he sent it, and she didn't send anything back? They had just shared an unbelievable experience. Michelle had said they could do anything he wanted, and he had asked her to fulfill a crazy public sex fantasy. And she had done it. Naked in the parking lot of the store where her sister worked, where she intended to work after graduation, fucking out in the open on the hood of her car. An incredible experience, a memory that would turn him on every time he thought of it for the rest of his life. \n\nWhy take the chance of ruining this high by sending a text that she might not return?\n\nAt the next red light, he picked up his phone and quickly deleted the message. The light turned green, and he set his phone down and kept driving. \n\nHe was lucky for the rest of the drive home. Almost all of the lights were green."
    ],
    "authorname": "jessica_tang_vonharper",
    "tags": [
        "voyeur",
        "exhibitionist",
        "cmnf",
        "oon",
        "enf",
        "public sex",
        "public nudity"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/saturday-night-school-ch-10"
}