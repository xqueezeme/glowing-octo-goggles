{
    "title": "The Big Tits Club Ch. 05-06",
    "pages": [
        "- CHAPTER 5: BJs -\n\n****\n\n\"Holy crap, B. Mari'll be here any minute!\"\n\n\"Then shut up and let me finish!\"\n\nSuiting action to her words, Belle wasted no time getting her mouth around my rapidly-expanding erection. My jeans were around my ankles as I sat in her desk chair, one eye watching the beautiful strawberry-blonde kneeling on the floor between my legs as she bobbed her head up and down in my lap, and the other eye trained out the window and through the blinds in anticipation of Mari's car parking in the driveway.\n\nOf course, I needn't have worried that much. The front door was locked and Mari would never just barge in unannounced. Even if she came early, we'd have plenty of time to get my dick back into my boxer shorts and make myself presentable while Belle headed downstairs to let her best friend into the house. But there was just something so... wrong... about what we were doing that even the slightest percentage chance of discovery was enough to send me into paralyzing panic attacks.\n\nI shouldn't have this fear. I'd never before FELT this kind of fear because I'd never before had anything to HIDE. All my life, the girls had teased me and messed around with me and the worst thing anybody could catch me doing was masturbating within the safety of my big, empty house. Big deal.\n\nBut now? Now I was in Belle's room getting a fucking blowjob from the literal girl-next-door I'd grown up with all my life... and none of her so-called best friends even knew about it!!\n\nYes, we were hiding our blowjobs from the BTC.\n\nI couldn't believe we were hiding our blowjobs from the BTC.\n\nShit, I still couldn't believe I was even GETTING blowjobs.\n\nAnd I REALLY couldn't believe I was getting blowjobs from BELLE.\n\nI'd been getting a LOT of blowjobs from Belle, actually. For someone who hadn't even touched a penis for her entire life up until a couple of weeks ago, she was certainly making up for lost time.\n\nI'd woken up that Sunday morning after the Halloween party slightly hungover but with perfect memory of everything that had transpired. That's when the guilt came in, the mental angst of letting the little girl I'd grown up with commit such a debauched, depraved act making me feel lower than a horse turd. And her declaration of love at the end? What was THAT about?\n\nI hadn't been able to sleep in as I usually did on Sunday mornings, so I'd remained awake in bed for over an hour, agonizing over the previous night's activities until I finally got up and started my morning routine. I headed downstairs and into the kitchen to start making breakfast for myself. \n\nMother was used to getting up before me and then either making brunch or driving us out to a restaurant. She was surprised to find me up and about before her, but she accepted my offer to make her breakfast as well. We made small talk during the meal and I doubt she had any clue what kind of mental turmoil I was in. She simply didn't know me well enough to form a baseline for comparison. In the end, she started reading the business section of the newspaper while I returned to my room to change clothes and get ready for the day.\n\nI'd waited until noon before walking over to Belle's house. Her dad let me in and gave me a warm hug hello. I almost couldn't hug him back, wracked with guilt for letting down this kind-hearted man who had been more of a parent to me than either of my biological gene-donors. How could I face him knowing I'd defiled his only child in such a degenerate manner? But Belle was super-happy to see me, and if she recognized the mental turmoil I was in, she didn't let on. She simply turned and hopped up the stairs, leading the way into her bedroom while I followed, and closed the door behind me.\n\nI knew Mr. K wouldn't come to check on us. If any other boy had been alone in the room with Belle, you'd better believe the door would've had to remain open, but this was me. Matt. The son he'd never had. I'd been alone with Belle behind closed doors ever since the two of us learned how to close a door. I had his TRUST.\n\nLower than a horse turd was too good for me.\n\nNot that Belle cared about how I was feeling. Strike that. She very much cared, she simply didn't have any intention of respecting how I was feeling. To that end, she parked me on her bed, climbed into my lap, tenderly held my head in her hands, and softly pressed her lips to mine.\n\n\"Belle,\" I groaned, prying her face off mine. \"We need to- mmph!\"\n\nShe'd cut me off with a kiss.\n\nSo I pried her off again. \"I'm serious. We nee- mmph!\"\n\nAgain, she cut me off.\n\nSo I pried her off again. \"Belle, seriously. Last night... oh holy crap... Mmph!\"\n\nI'd been wearing comfortable Adidas track pants, nothing fancy, with a super-stretchy waistband. So it had been easy for Belle's hand to slip down and grab hold of my cock, which she started squeezing and stroking while she once again sealed her mouth on top of mine.\n\nThe next thing I knew, I was flat on my back across her bed while Belle and I made out with a fury. Every time I tried to break the kiss, her hand tightened a little more around my rapidly-elongating shaft. Every time I tried to say something, she kissed me a little harder and what little mental processing capacity I had available for verbal communication got reassigned to sexual stimulation.\n\nPerhaps two minutes later, Belle finally broke for air, slid down the bed, and pulled my track pants and underwear with her. \"Keep it down,\" she hissed. \"Unless you want my dad to come find us with your dick in my mouth.\"\n\nI kept quiet. My dick was already in her mouth.\n\nFive minutes later, I sat up against Belle's headboard, breathing hard while she snuggled up against my right side. Her hand was beneath my shirt as she rubbed my chest, a silly smile on her face as she enjoyed having a belly full of my cum.\n\n\"Mmm... tasty...\" she giggled.\n\nBut once I caught my breath, I looked down at her and sighed, all the guilt and mental anguish returning to my beleaguered (but no longer distracted) brain. \"We need to talk.\"\n\n\"I'm done talking to you about this,\" she said wearily, with a look that suggested she'd rather do anything than have another 'talk'. \"I really do love you, but I hate going in circles about the same fucking thing. I'm not your little sister! Fuck, I'm a month older than you! Get this in your head: We're not related! I understand that we grew up together, and that you have a mental conflict about sexualizing me. But I really don't think you'd have this problem if I was 5'10\" with Sam's boobs. When I complain about you not fantasizing about me because I'm a little shorty compared to everyone else, there's more than a kernel of truth there.\"\n\nI sighed. \"It's not that you're a shorty, although I'll grant that if you were 5'10\" I might be a little less protective of you. I just... I can't...\" I trailed off.\n\n\"Come ON, Matty.\" Belle shook free of my arm, sat up straight, and pivoted around to face me. \"I literally have your sperm soaking into my stomach right now. What's it gonna take for you to see me as a woman and not some little girl who needs your protection?\"\n\n\"I DO see you as a woman! You think I don't know you're freaking hot and uber sexy?\"\n\nShe crossed her legs into a lotus position and grinned at me. \"You think I'm 'uber sexy'?\"\n\nMy heart broke. \"Of course I think you're uber sexy.\"\n\n\"You've never called me uber sexy before.\"\n\n\"Yeah, well, we've already been over my whole mental block when it comes to you. But the fact remains that I've wanted to be with you since we were little. Back when we were twelve, I was the little dweeb next door who kept wanting to tag along wherever you went. You got sick of it and asked your dad once if he could make me stop coming over.\"\n\n\"I did NOT.\"\n\nI nodded. \"One of the most traumatizing moments of my life.\"\n\nWaving her hand, Belle said dismissively, \"I'm pretty sure I was just overreacting to something. I never would've actually wanted you to stop coming over. You were my Matty.\"\n\n\"Perhaps.\" I shrugged. \"The point is: I never cared about any other girls. All I wanted back then was you.\"\n\n\"And now you get to have me. Well, not exactly have me,\" she clarified quickly. \"I do love you, Matty, but I'm not breaking up the BTC for us. I've always enjoyed the teasing and flirting and messing around, but we're not gonna start dating. I couldn't take you away from the other girls. But I'm getting sidetracked. What I don't understand is: If you really felt this way, why the hell have you kept me at arm's length all this time?\"\n\n\"I'm... I'm...\" I started twice, thinking that if I just started talking the words would come out on their own. But they didn't, and I rubbed my forehead while shaking my head. \"I don't know exactly. I know the reason I've told myself for all these years, but right now I'm starting to think I've just been lying to myself to cover up the pain.\"\n\n\"What are you talking about?\"\n\nI shrugged. \"I couldn't have you back then. You were all I thought about, and not even in a remotely sexual way. Even today I can't quite put my finger on it. You were best friends with Mari and you hung out with a bunch of cute tween girls. I was best friends with Alice and we played sports and card games like Magic. Our two social circles did not intersect in the slightest, but every day I got to come home and hang out with you, and spending those few hours with you between the end of school and dinnertime was always the highlight of my day.\"\n\nBelle glanced around her room, a smile on her face as she reminisced about those days. \"Yeah, we had fun back then.\"\n\n\"You'd been my playmate since we were little. Building pillow forts out of the couch cushions,\" I said with a small chuckle.\n\n\"Playing make-believe with our LEGOs,\" she giggled. \"Your pirates always wanted to attack my princess castles for some reason.\"\n\n\"Just running around the backyard with nothing but our imaginations.\"\n\n\"Teaching you to bake chocolate chip cookies.\" Belle shook her head. \"You never did catch on very well.\"\n\n\"I always wanted to follow the measurements on the box precisely.\"\n\n\"When a true baker knows how to tweak things a little to make it just right.\"\n\nI rolled my eyes and waved my hand. \"There was nothing remotely hormonal or sexual about it, but I was in love with you back then. I wanted to spend every waking moment possible with you. I dreamed we'd fall in love and get married one day after we both grew up, the classic girl-next-door romance from the movies, you know? But then in... eighth grade... I think? You started crushing on Taylor Guazelli.\"\n\n\"Who?\"\n\n\"You seriously don't remember Taylor Guazelli?\" I shook my head. \"You didn't care whether or not I was around - I was the invisible brother at that point. You whined and complained to Mari and your other little girlfriends about how he walked past you in the hallway and didn't even look at you. You thought you were gonna die. You described in great detail how he was such a hunk, defining qualities that did not resemble me in the slightest. And I convinced myself then and there that I would never get to be with you. Mari even said one time that I was getting pretty cute, but you dismissed her comment immediately saying that -I- was like a brother to you.\"\n\nBelle frowned and gave me a strange look. I had paused, so she led me with a somewhat impatient, \"And then what?\"\n\nI wasn't a hundred percent sure myself, but I thought back to the way I'd felt back then, thought really HARD and tried to will myself to bring such old memories back into clarity. I don't know if I succeeded or if I was just drawing new conclusions from old data, but after a few more seconds of trying to make the puzzle fit in my brain, I said, \"I think... I think... I think that's when I decided I could never consider you as a potential partner because you were like a sister to me. Rather than let myself be hurt by rejection, I just... categorized you as out of bounds. It was easier to believe than continue to hope you'd eventually see me as man but be perpetually disappointed.\"\n\nBelle frowned. \"Umm... okay...\" She furrowed her eyebrows and tried to process that.\n\n\"You know, we might be able to ask Alice. I've told her a few times about various crushes I had back then. She might remember some of this part, or at least verify how obsessed I was with you back then.\"\n\n\"I just might do that.\" Belle popped her eyebrows. \"So if I have this right, you put a mental block around me, convincing yourself that I would only ever be your sister, and THAT'S why you've never been able to fantasize about me or otherwise get... well... intimate?\"\n\n\"I think so?\" I said uncertainly. \"In a way, the origin of the mental block doesn't even really matter. It's there. And even now, it hasn't gone away. Like you said: you've got my sperm soaking into your stomach right now. We're not related and clearly I'm not the one molesting you or anything like that, and yet I can't help but feel this guilt inside like I'm an incestuous bastard for letting you.\"\n\n\"Uggghhh,\" Belle groaned, burying her face in her hands. \"You are NOT an incestuous bastard. We aren't even fucking related!\"\n\n\"I know, I know.\"\n\n\"So how do we get you over this mental block? Because I REALLY don't want to keep having these conversations every time I wanna do something 'uber sexy' with you.\"\n\n\"I don't know.\"\n\nBelle took a deep breath, let out a long exhalation, and then hopped off her bed. \"Okay fine. C'mon. Let's go.\"\n\n\"Go where?\"\n\n\"Back to your house. I'll tell my dad we're going out but will be back in time for dinner.\"\n\n\"Um, okay... But we're actually going over to my house?\"\n\n\"Yep.\"\n\n\"To do what?\"\n\n\"Well I'll tell you what we're NOT gonna do: We're NOT gonna keep talking about this!\"\n\n****\n\n\"WHY are we still talking about this?!?\" Belle screamed at the ceiling, not quite loud enough for her dad to hear next door, but pretty loud. \"I want to. You want to. Why is that not good enough?!?\"\n\nI'm getting ahead of myself again.\n\nMother was still home when Belle and I walked in. Belle greeted her politely, Mother asked all the expected questions about how things were going, and after completing the required amount of small talk, finally asked what the two of us were up to. Belle smiled and announced that we were here to bake chocolate chip cookies, which was news to me. But I just smiled and nodded silently until Mother said she was going out and said, \"Have fun you two!\"\n\nTo my utter and complete surprise, Belle and I actually made chocolate chip cookies. She knew her way around my kitchen pretty well after all the Friday night dinners we had with the BTC. And the longer we spent baking, the more I forgot about all the angst and guilt over my incestuous bastard behavior.\n\nAfter the cookies were finished, we pulled out a tub of vanilla ice cream and made ice cream sandwiches, which didn't work very well because the cookies were still too hot, but they were quite tasty nonetheless. And afterward, Belle dragged me up to my bedroom and asked me to find my old Magic: The Gathering cards so I could teach her how to play.\n\nBy this point, I had NO IDEA what was going on, but I went along with it. She was pretty bad at the game. Not that she wasn't smart enough to pick it up - Belle was a straight-A student - but there are a lot of complicated mechanics involved and the decks I had built at that point were pretty advanced. No matter, she wasn't actually interested in playing for very long.\n\nWe were in the middle of our second game when Belle set down her hand, got up to her knees, and leaned over so she could kiss me. I had been so concentrated on my hand that I didn't even realize what was going on until her face was only inches away from mine, and once her tongue slipped into my mouth I forgot about everything else.\n\nI promptly forgot about the game. I forgot about the cookies. And I forgot I was supposed to NOT be doing this because I thought of Belle like a little sister.\n\nAll I felt were the fireworks of joy exploding in my mind and my heart as Belle... my Annabelle... kissed me.\n\nWe'd been sitting up playing cards on my bed, and Belle swept them aside without a second glance. She pressed me onto my back and straddled my hips, her tongue spearing down into my mouth over and again like a fish-hunting bird of prey. She mewled into our lip-lock, her arousal quite evident. And then moments later, she sat up and ripped her sweater over her head.\n\nI held my breath gawking up at her. Although she'd given me blowjobs both last night and this morning, Belle had remained fully-clothed for both of them. And while I'd seen her in her bra or in skimpy bikini tops that covered even less than her bra, the moment Belle unclasped her bra this afternoon and tossed it aside was the very first time I ever laid eyes on her perfect breasts.\n\nOkay, I actually glimpsed them once before when Sam got all six girls to line up and flash me that one time. Still, this was my first chance to just stop and ogle away to my heart's content without any distraction, and I truly mean that Belle's breasts were absolutely perfect. She was a goddess scaled down, with perky 32D boobs that fit her frame perfectly (which to me meant being a little top heavy). Let's face it: I like my girls top heavy. Sam, Mari, and Naimh were flat out boobalicious with their big Double-Ds that overflowed my hands. Zofi's D-cups were somewhat comic book disproportionate to her model-thin physique. Alice wasn't quite as skinny as Zofi, but her D-cups still seemed overly large for her otherwise slender athletic frame.\n\nProportionally, Belle was just as top heavy as, say Zofi, but she was a petite little doll so the volume wasn't quite up there with the others. And while her boobs were definitely on the large side, they were just so firm and upright without a trace of sag that it seemed impossible that they weren't fake. But as soon as she pulled my hands to them and I felt their pliant softness, I knew with a hundred percent certainty that they were indeed all real.\n\nAnd I devoured them.\n\nBelle moaned and groaned and whimpered my name while I gave her tits a tongue-lashing. I suckled and fondled to my heart's content. Very clearly, I'm a tits man, and I'd ended up with the most amazing circle of friends in that regard (or did the circle of friends lead to the fetish?). I made each pink nipple stand up and salute, and I bathed those beauties with love until she couldn't take it anymore and rolled off me.\n\n\"Take my pants off,\" Belle husked urgently, grabbing my wrists and directing them downward. \"I wanna know what made Holly rave about how you were such a natural at eating pussy.\"\n\nWith a grin, I eagerly leapt to the task, taking a firm grip on her waistband and jerking hard. I didn't quite get it right at first, having never before taken someone's pants off other than my own. The geometric angle of my arms to the direction of travel was a little weird at first, as was the fact that girls have hips, hips that are typically several inches wider than her waist, much like Belle's hourglass shape, not to mention her shapely ass. But eventually I figured it out and managed to drag both her pants and panties off together.\n\nBelle was bare-shaven, not a surprise given some of the bikinis she'd worn over the summer. Of the BTC I was pretty sure only Alice, Mari, and Naimh had any pubic hair. Unlike Holly's welcome and waiting open labia, Belle's were tightly closed, as if symbolizing a pair of doors just waiting to be opened for the very first time. But I could see a thin line of moisture secreting through from within, and after I parted her thighs out to the sides, I took a long lick through her channel from base to top.\n\n\"Ohmigawd,\" Belle shivered and moaned. \"Do that again.\"\n\nSo I did it again. And again. And again.\n\nLittle by little, Belle's flower petals opened up to me. Once she cracked open a few millimeters, I could even feel the hard nub of her clit near the top. And by flattening my tongue and firming it up, after a while I could even penetrate her pussy a couple of inches by pushing my tongue inside.",
        "Belle announced her first orgasm when her fingers combed through my hair and suddenly yanked none too gently. I had often wondered if Holly overstated my cunnilingus abilities, buttering me up or otherwise attempting to boost my confidence so that I'd fuck her that much better afterwards. But if Belle's reactions to my oral attentions were sincere, I was two-for-two on the pussy-eating front.\n\nI never asked Belle to teach me. I assumed she knew as little about eating a girl out as I did, even if she had her own box to play with. I pretty much just did the same thing I'd done to Holly, which was to read my lover's reactions and act accordingly.\n\nFlicking her clit with my tongue over and over again definitely got her going, but just as with Holly, after a while the technique became predictable and I had to change it up. I switched to more of a sucking motion for a while, and then a few minutes later I flatted my tongue and sort of grinded it down against that little nub. And a few minutes after that, I pointed my tongue so I could swirl it around and around the circumference of Belle's clit.\n\n\"Ohmigawd, Matty...\" she moaned every so often. \"How are you doing this to me?\"\n\n\"Right there, right there, ohmigawd, right there!\" she whimpered a few times when I found a particular rhythm on a particular spot that just flat out worked for her.\n\nAnd \"Holy FUCK, Matty! Ohmi... GAWD! I'm gonna cum! You're making me cum! Matty's making me cum! OHHHWWWAAAAAAAUUUUUGGGGGHHHH!!\"\n\nShe did that one twice.\n\nNo two girls react the same, and I already knew my \"routine\" would not be nearly as consistent as my massage routine. But I definitely wanted to refine and fine-tune this particular routine, because I had so much fun making Belle both scream and cream that I knew I'd want to do it again.\n\nAnd again and again and again. Maybe the best way to get over this \"she's my little sister\" mental block was just to keep going down on each other and making out until she truly became a sexual being to me because it would just be too ridiculous for me to think otherwise. At least, that's what I had started to think by the time Belle squeaked and screamed her fourth orgasm, after which her legs collapsed flat out to the sides, nearly doing a full split. And as she grunted and gasped for air, she started tugging at my hair while moaning, \"Matty... Matty... Come up here... Come up here...\"\n\nI sorta figured Belle could stand one more orgasm. After all, she hadn't rolled over into a fetal position on her side begging, \"No more, no more.\" So rather than allow myself to be tugged upward, I tried to keep licking at her clit.\n\nBut she insisted on yanking and yanking and finally stopped, groaning, \"I need you to get up here and fuck me.\"\n\nTHAT made my eyes pop open wide. \"Umm, what?\"\n\n\"Fuck me, Matty. I want it. I need it.\" She held both arms out to me, her hands gesturing urgently for me to come to her.\n\nAnnnd the mental block slammed back down. Having sex? With Belle? No way. Going down on her was one thing, but deflowering my little Annabelle? No fucking way. I would NOT be that kind of molester.\n\n\"I can't,\" I said dejectedly, pulling back and propping myself up on my elbows.\n\nHer legs closed in to either side of me, and she drummed her heels on the mattress like a toddler throwing a tantrum. \"Matty, it's me.\"\n\n\"That's the problem.\"\n\n\"I want you. I need you. I need you deep INSIDE me.\" She started to prop herself up on her elbows, staring at me with an expression of unadulterated lust. \"I already told you last night you could have my virginity.\"\n\nI sat back on my heels and wiped my soaking wet chin with my forearm. \"And I'm incredibly honored that you'd entrust me with that, but... I mean... are you even protected?\"\n\n\"You can use a condom.\"\n\n\"I don't have a condom.\"\n\nBelle sat up straight and looked agog at me. \"What kind of teenage boy doesn't have any condoms?\"\n\n\"The kind of boy who committed himself to the BTC, all of whom swore they'd never have sex with me!\"\n\n\"We never swore any such thing!\"\n\n\"Wait, really?\"\n\n\"MATTY!\"\n\n\"Okay, okay, getting sidetracked.\" I held up my hands and waved them defensively. \"But seriously, Belle. We can't. Not like this.\"\n\n\"Not like what? In your room? On your bed?\"\n\n\"No, not that. I... I just can't.\" I rubbed my forehead and winced.\n\nBelle knew the look. By now, she knew it well. It was the look that told her I was locked up because I still thought of her like a little sister, and she held up her index finger and waggled it at me. \"Oh, no. Oh, NO. Do NOT tell me we can't have sex because you see me as your little sister.\"\n\nI blushed pink, averted my eyes, and shrugged. \"Fine, I won't tell you.\"\n\n\"Fucking A, Matty! Am I not beautiful?\"\n\n\"Of course you are.\"\n\n\"Am I not fuckable?\"\n\n\"Of course you are.\"\n\n\"Do you not stare at this naked body and think of how amazing it would feel to bury that big gorgeous cock of yours all the way up my virgin pussy?\"\n\n\"Of COURSE I do!\" I gazed down at her puffy pink slice of heaven, with glistening rivulets of girlcum trailing down her crack. \"But... but...\"\n\n\"Don't you DARE fucking say it!\"\n\n\"I'm not saying it! I'm not saying it!\"\n\n\"WHY are we still talking about this?!?\" Belle screamed at the ceiling, not quite loud enough for her dad to hear next door, but pretty loud. \"I want to. You want to. Why is that not good enough?!?\"\n\n\"I don't know!\"\n\nRolling her eyes and shaking her head, Belle turned and flopped off my bed like a fish on the deck trying to get back to the water. Eventually she managed to get to her feet and started hunting around for her clothes.\n\n\"Belle... I'm sorry...\" I whimpered. \"I love you. I wish I could get over this block, I really do.\"\n\nThe L-word caught her attention, and she immediately froze. Blinking fast, she looked over at me and arched an eyebrow. \"Do you? Do you really love me?\"\n\nMy mind racing, I could scarcely hold three thoughts together. But I knew the answer with absolute crystal clarity, so I stated quite seriously, \"Yes. I love you. I always have.\"\n\nBelle's eyes narrowed, and she stared up at the ceiling for a moment before sighing and shaking her head. \"But you love me as a little sister, right?\"\n\nI shrugged helplessly. \"You told me not to say the s-word.\"\n\nShaking her head even more vigorously, Belle focused on hopping back into her panties and pants, and then re-clasped her bra around her back, and finally shrugged into her sweater. I had never taken my clothes off in the first place, so I simply sat in the desk chair watching her get dressed without an ounce of arousal.\n\nOnce completely clothed, Belle turned to face me and crossed her arms over her chest. Her jaw was set, and her pale green eyes NOW blazed like some kind of evil robot. Even though I was quite literally a foot taller than her, she loomed tall and intimidating over me at this moment. And after pursing her lips and tapping her toe, she finally exhaled and said, \"You seemed to be able to get over your mental block both when you were going down on me and I was going down on you. You were even able to get over it when we were just kissing. It seems to me the only time this mental block is able to actually stop you is when you have time to actually think about it. Otherwise, if we can just get straight to the action before you have time to really think about it, we can do just that: get straight to the action before you have time to really think about it.\"\n\nI blinked twice, processing all that for a moment. \"Uh, yeah. That's actually exactly what I was thinking right before you asked me to come up and fuck you.\"\n\nShe pursed her lips again and sighed. \"So I sealed my fate when I stopped to tell you I wanted you to come up and fuck me.\"\n\nI blinked again. \"Uh, something like that.\"\n\n\"So the solution would seem to be that I should just mount myself on you when you're not really expecting it. Like... start a blowjob, make sure you're lying down flat, and then just climb into your lap and impale myself. Sound about right?\"\n\nMy throat tightened, and I suddenly had trouble swallowing. \"Maybe this isn't such a good idea.\"\n\nShe waved me off dismissively. \"Doesn't matter right now. First things first: I need to get on the pill, then finish my period, and that'll take like three weeks. Otherwise if I take the time to try and roll a condom onto you, you're liable to go into vapor lock and start whimpering about how you're molesting me or some such bullshit.\"\n\nI grimaced. \"I'm sorry.\"\n\nShe waved me off again. \"Don't be. It is what it is. I love that you care that much about me, let's leave it at that. If I think about the rest of it too much I'll just get more annoyed.\"\n\n\"Um, sure.\"\n\nTaking a deep breath, Belle stretched out her arms and dropped them as she exhaled. Waving at the scattered Magic cards, she muttered, \"Sorry about the mess but uh, I need to take a walk to clear my head.\"\n\n\"Don't worry about it,\" I replied immediately. \"Totally understand.\"\n\nAlmost mechanically, Belle stepped forward and pulled me down so she could peck my lips, a sibling peck that didn't set off any alarm bells in my mind. With a curt nod and a tight smile, she turned and walked out the bedroom door. I heard her thump down the stairs, and eventually the sound of the front door opening and slamming shut a moment later reached my ears as well.\n\nI was still bent over on all fours, collecting loose cards when I suddenly felt myself get rolled over. My mouth dropped open in shock as Belle yanked down my track pants and underwear, grabbed at and squeezed my limp dick. She must've faked going out the front door. And three seconds later, she shoved every last inch of me into her mouth, although as my rapidly-elongating dick well... elongated... she quickly had plenty of room around which to fit her tiny hands.\n\nFive minutes later, I lay flat across the floor of my bedroom, breathing hard while Belle snuggled up against my right side. Her hand was beneath my shirt as she rubbed my chest, a silly smile on her face as she enjoyed having a belly full of fresh Matty-cum.\n\n\"Whaddaya know?\" she remarked mirthfully. \"My theory holds.\"\n\n****\n\nWhere was I? Oh, right.\n\n\"Holy crap, B. Mari'll be here any minute!\"\n\n\"Then shut up and let me finish!\"\n\nSuiting action to her words, Belle wasted no time getting her mouth around my rapidly-expanding erection. My jeans were around my ankles as I sat in her desk chair, one eye watching the beautiful strawberry-blonde kneeling on the floor between my legs as she bobbed her head up and down in my lap, and the other eye trained out the window and through the blinds in anticipation of Mari's car parking in the driveway.\n\nIt was now Thursday in mid-November, almost two weeks since that fateful Halloween party. Belle and I had driven home from school and gone straight to her bedroom. Mari always joined us on Thursdays to study and do homework together, but she also had to drive her younger cousin home first (they carpooled) before coming over to Belle's place, which gave Belle and me a narrow window in which to sneak in this latest BJ session.\n\nBelle never asked permission to take my shorts down and start jacking my cock. She knew that if she took the time to ask, I'd hem and haw and go into vapor lock, which was the absolute least arousing thing I could possibly do, for either of us. Instead, she held to her theory that if she could start the hormone rush quickly enough to completely bypass my conscience, we would both get what we wanted. And ever since that Sunday, the theory had held.\n\nBelle blew me in-between kids coming to the door to trick-or-treat (Mother and I never decorated our house, but I had always helped pass out candy at hers once I got too old to trick-or-treat myself). It was a good thing her dad had to work late that day. \n\nBelle blew me one night when she told her dad she was going over to my place after dinner but would be back in an hour. After she swallowed everything, she asked me to go down on her, which I was more than happy to do. No mental block there. It was the least I could do after she'd gotten ME off first. She loved it so much that when she gave me a second blowjob, she pulled her mouth off me at the last second and let me spray all over her naked tits.\n\nThe next night, Belle came over to my place after dinner again. This time, instead of going straight into a blowjob, she pulled her pants down, spread her legs, and asked me to get her off first. I think it was a test, actually, to see if I'd go into vapor lock and insist I thought of her as my little sister or something. But surprisingly, the mental block never materialized. Going down on her was doing something for her, not for me, so there was no guilt. She definitely seemed quite pleased by this development, and after that, pretty much every time we weren't under some kind of time constraint, we'd start off with me going down on her first, and by the end of it I'd be so revved up and horny that I was only too eager to let her return the favor, any mental blocks completely nonexistent.\n\nShe also started to get even bolder with our encounters. Twice, she pulled me into her bedroom for quickie blowjobs after dinner even though her dad was downstairs. One morning, she blew me in my minivan halfway to school. I sat bolt upright in the driver's seat, idling on the curb by a neighborhood park, praying fervently that no morning joggers came by before she finished me off. It was a minor miracle I hadn't crashed in the first place when she'd reached over and slid her hand into my unzipped jeans.\n\nAfter that, she asked for a spare key to my house so she could just let herself inside in the morning, unless I wanted to risk more minivan blowjobs en route. I warned HER that Mother would still be home in the mornings, as she usually didn't go into the office until 8am. Belle conceded the point... and promptly gave me another minivan blowjob the next day.\n\nThat very same afternoon, Belle parked me on the couch and blew me as soon as we got to my house after school only minutes before a study session with Alice, Sam, and Zofi. An hour later, Sam wanted a \"study break\", turned our makeout session into a handjob session, and expressed surprise at how long it was taking me to blow, even when she took her top off and started titfucking me. Our friends had no idea Belle had already pulled two ejaculations out of me that day, but Alice and Zofi were happy to have the extra time playing with my dick before Zofi did the honors of jacking my eruption all over Sam's big titties. Zofi even licked up a few globs and fed what she found directly into Sam's mouth with her tongue. It was just as hot as the first time I'd seen her do it.\n\nAnd that's the thing: the rest of the BTC had no idea what Belle and I were doing with each other (\"to\" each other?) when they weren't around. They had their own lives to lead, with families that demanded their attention, after school activities to attend, and hobbies to soak up their time. Zofi took dance classes. Sam wanted to be a doctor and had a full schedule of studying and extracurriculars that would look good on a college application. Naimh was into arts and crafts. Alice was really into comics and manga, and she and Naimh would get together to do projects for fun, like the one time they wrote a comic book together. Mari had a large extended family and spent a lot of time with her cousins. So long as Belle and I confined our activities to times that none of the BTC were around, nobody had a clue.\n\nWell, Alice noticed that I'd been unusually tired for the past couple of weeks, and asked with sincere concern if I was sick or something. I couldn't tell her Belle was draining my dick as fast as I could get it up, in-between sessions of the rest of the BTC attempting to drain my dick as fast as I could get it up. Lots of guys (including me) have fantasized about getting off six times a day with a harem of nubile, hot babes who literally line up for him to service them, but even though I was still a freaking virgin, I was absolutely exhausted trying to keep up. At least Belle was the only one I was obligated to satisfy in return (for now). I couldn't imagine what life would be like if I had to spend all week going down on the other five girls of the BTC in addition to servicing Belle almost every night.\n\nWith all that going on, I suppose I shouldn't have been surprised Belle was starting another blowjob on a Thursday afternoon before Mari arrived. At this point, I would've been more surprised if there was a window of ten-plus minutes and she didn't start something. But the longer we kept this up, the more likely it was that we'd get caught. And I knew all hell would break loose as soon as we did.\n\nOh, how right I was.\n\nI just had no idea it would happen the way it did.\n\nBelle popped off my prick and glared up at me. \"C'mon, you're not paying attention.\" Pulling her sweater up to her neck, she trapped my dick in the valley of her D-cup cleavage and started humping her chest up and down.\n\nWell that certainly got my attention. This would make only the third time ever that Belle tried to give me a titfuck. But as great as a titfuck is visually, it can't compete with the feeling of a warm and wet mouth, so after another minute I started looking out the window again.\n\n\"C'mon, Matty!\" Belle complained. \"I don't want you going soft on me!\"\n\n\"I'm sorry! I'm not doing this on purpose. The six of you are pulling so much cum out of me it's a wonder I haven't died of dehydration.\"\n\n\"You ARE drinking extra fluids, aren't you?\" she asked while continuing to pump her tits around my cock.\n\n\"Yes, yes, of course.\"\n\nPulling me out of her cleavage, Belle ducked down to take another long lick from balls to tip and frowned. \"You know what? Just get away from the window. You're psyching yourself out watching for Mari's car.\"\n\nI whined but let Belle tug me out of her desk chair and put me onto her bed instead. I dropped back onto my elbows, forcing myself to relax and focus on the sight of my beautiful Belle's face and her small little mouth getting stretched obscenely wide around my thick shaft.\n\nShe was right. Not staring out the window worrying about Mari's car definitely helped me relax. I reached out and caressed her cheek, and actually caressed the bulge my dickhead made as it dented her cheek out from the inside. Belle's huge, pale green eyes twinkled as she felt the adoration in my gaze. And as she closed them to focus on pumping her entire head up and down my dick, making the shaft disappear and reappear over and over again, I felt the pleasure begin to build.\n\n\"Fuuuuck, B,\" I groaned. \"You're getting GOOD at that.\"\n\nShe popped off for a second and grinned at me. \"Practice, practice. Someday I'm gonna get the whole thing in my throat.\" She promptly tried to swallow as much of me as she could, although she had a good three inches still to go, room enough for one of her hands to keep twisting around the base.\n\n\"I'm happy to let you keep trying. But don't think I'll love you any less if you can't.\"\n\n\"Mmm-mmph!\" she insisted with a mouthful of meat, although I had no idea what words she actually meant to say.\n\nI just patted her head and let her keep going. Mentally, I calculated how much time we would have left: maybe five more minutes at most. I started to visualize the semen boiling in my balls. I imagined the creamy white goo thinning into a slippery fluid as it heated up. I thought about what my jizz might look like pouring up through the narrow tube of my cock, rising rapidly like an out-of-control mercury thermometer until it exploded volcanically from my protruding upright tower to bathe the insides of Belle's mouth with my scalding hot white lava.\n\n\"Gonna cum, B,\" I warned, perhaps two or three minutes later.\n\nTo my surprise though, Belle slowed down. Instead of pumping her head quickly, her usual way to make me blow, she stopped at the top, nursed on my mushroom head, and used her hands to stroke my shaft slowly.",
        "\"Ungh,\" I groaned, feeling the bubbles in my balls settling down. \"Don't tease me.\"\n\nShe popped off my prick and grinned. \"Who's teasing?\"\n\n\"You are,\" I complained. \"Mari'll be here any minute.\"\n\nGiggling, the beautiful strawberry-blonde started bobbing her whole head up and down my dick again, and I felt the boiling bubbles start to return.\n\nBut then thirty seconds later, she backed off again.\n\n\"C'mon, B! Lemme cum!\"\n\n\"You will. I promise. Here, lay back flat, close your eyes, and let me please you. If we had time, I'd let you cum all over my tits again.\"\n\n\"Nngh!\" I groaned, my hips jerking at the thought. I really wished we had time, but we didn't, so I'd have to settle for imagining it, and lay back flat as she suggested while closing my eyes.\n\nBelle didn't tease me anymore. She bobbed her head, corkscrewed her hands, and jacked me off with a purpose. In less than two minutes, she brought me back up to a boil. And when I started grunting and bucking my hips, moaning, \"Gonna cum... Gonna cum...\" she held nothing back and stroked me feverishly.\n\n\"Eeeyarrrghhh!!\" I groaned, launching my hips off the bed and cramming an extra inch of cock into Belle's throat. Expecting the sudden thrust, she held onto my thighs and took the impact, swallowing rapidly until I collapsed back down to the mattress and she could resume using her hands to milk out every last drop.\n\nDespite my initial plan to imagine blowing all over her tits, I found myself visualizing the way each glob of spunk splattered within her tiny mouth and slithered down her throat into her belly. And with the infinitely-pleased grin of a post-ejaculative young man, I sighed, opened my eyes, and reached out to thank her.\n\nAnd then I froze.\n\nMy words died on my lips as I realized we were no longer alone. Mari stood beside the bed, staring down at us with a look of absolute shock. About three seconds later, I jerked backwards and scrambled up to a seated position against the headboard. The motion withdrew my spent dick from Belle's mouth, leaving her to lick up stray bits of cum from her own lips as she looked up at me with a silly smirk. Only then did I realize that she wasn't freaking out about Mari's presence nor was she surprised by my panicked reaction.\n\nBelle confirmed it when she glanced up at her best friend and said in a smart-alecky tone, \"Told ya.\"\n\nI blinked twice and exclaimed, \"You TOLD her?\"\n\nBelle shrugged. \"We knew we wouldn't be able to keep this a secret forever. BFFs don't keep secrets from each other, and I figured I'd rather she hear it from me rather than find out any other way.\"\n\n\"I didn't believe it,\" Mari breathed quietly, her eyes as big as saucers. She was staring at my semi-limp dick, traces of cum still on it. A moment later, she looked over at her best friend, who had gotten up to sit down on the edge of the bed and began scraping globs of creamy jizz off her own lips, popping them into her mouth with a look of smug satisfaction.\n\nGoggle-eyed, I asked Mari, \"How did you get in? Wasn't the door locked?\"\n\nMari shook her head. \"Belle told me to park down the street and sneak in quietly. She didn't want you to see me coming.\"\n\nI shook my head in disbelief. \"Well it worked.\"\n\n\"I'll say. And you've been doing this for almost two weeks already?\"\n\nI nodded.\n\nMari took a deep breath and fixed Belle with a look. \"Sam is gonna be PISSED.\"\n\nBelle rolled her eyes. \"Fuck her. I'm not apologizing. The rest of you got to mess around with him while I couldn't do a thing for a LOT longer than two weeks. But I'll tell her now.\"\n\nMari shook her head. \"I still can't believe you're giving him blowjobs.\"\n\n\"You want a turn? I'll teach you.\"\n\n\"Uhhh...\" Mari's eyes got big again, an expression of sheer terror spreading across her face.\n\n\"Hey, don't push her,\" I cautioned.\n\n\"Oooh! Oooh! Better idea!\" Belle said enthusiastically as she reached up and grabbed her best friend's hands. \"Lie down on the bed and take your pants off!\"\n\nMari jerked her hands away. \"Wait, what?\"\n\n\"Trust me.\" Belle's eyes sizzled. \"You're gonna LOVE this.\"\n\n****\n\n\"I'm just saying: I don't love this,\" Sam muttered with a sigh, pursing her lips and pacing back and forth in front of the TV. It was Friday afternoon, the day after Mari got to third base for the first time, and the whole BTC was at my house.\n\n\"Why not?\" Belle argued from the seat next to me. \"We're not doing anything with him he hasn't already done with Holly of all people. And YOU were the one saying we're not fifteen anymore and we were mature enough to push our boundaries after Mari first gave him a handjob.\"\n\n\"I know that,\" Sam conceded.\n\n\"And we're not gonna stop, no matter what you say,\" Belle charged, fire in her eyes. \"He was my Matty before he was any of yours, and if one of you tries to keep me from him, I'm taking him home and not giving him back!\"\n\nSam rubbed her forehead and sighed. \"Nobody's suggesting they'll keep you from him.\"\n\n\"Then what are we arguing about?\"\n\n\"Nobody's even arguing. At this point, you're the only one yelling and I'm saying, 'Yeah, I get it. There's no going back from this.'\"\n\nBelle sat up straight, looking confused for a moment. This was all playing out much differently than she had imagined in her mind. \"Then... what's the problem?\"\n\nSam shrugged helplessly. \"The problem is that I'm not thrilled we're moving this far, this fast.\"\n\n\"Says the girl who's already given blowjobs and had sex,\" Zofi drawled from the 2-cushion loveseat.\n\n\"This isn't about what I have or haven't done before,\" Sam countered. \"This is about keeping the BTC in balance when it comes to Matty. We came up with The Rule for a reason.\"\n\nAlice paced behind the big couch, muttering, \"A rule that's been getting slashed and burned every week it seems.\"\n\nSam rubbed her forehead again. \"Exactly my point.\"\n\nFrom the other seat beside me, Naimh pointed out, \"Technically we're not violating anything. Nobody's dating Matty.\"\n\n\"That's not what The Rule means anymore, and you know it,\" Alice warned.\n\nSam spread her hands out. \"Yes, the original intent was for nobody to date Matty and therefore take him away from the others. But since then, we all know the actual meaning has shifted quite a bit. At this point, the idea is to keep everyone on a level playing field. To keep everyone 'in balance'.\" Sam provided her own air quotes.\n\n\"None of y'all seemed to care when -I- was the only one out of balance,\" Belle grumbled.\n\n\"Well you certainly caught up in the last two weeks,\" Naimh snarked, leaning around me to look at Belle. \"How could you do that to us? I could have sucked off that beautiful dick a dozen times by now!\"\n\n\"Exactly why I didn't tell you,\" Belle shot back. \"The only way I figured to rewire his brain was to give him a ton of orgasms until it stopped being a thing, and if I let YOU start blowing him he'd have tried to cut me off again. Give me credit for coming forth and telling you all instead of waiting to get caught. Would you rather I kept it a secret for another month?\"\n\n\"What's done is done,\" Sam stated loudly, trying to get control of the room again. \"And nobody is going to resent you for what's already happened. We get it. Even without the issue of Matty's mental block, I'd probably have done the same if I were in your situation.\"\n\nBelle gave Sam a tight smile and a nod.\n\nSam gestured to the room. \"The question is: What do we do about it now?\"\n\n\"Obviously, blowjobs have been added to the menu,\" Naimh said salaciously.\n\n\"Eww.\" Alice made a face.\n\n\"It goes both ways,\" Mari pointed out from the armchair. \"Eating you out gets added to the menu, too.\"\n\n\"Oooh.\" Alice visibly brightened. \"I rather like THAT idea.\" \n\n\"It was amazing,\" Mari continued, visibly enthused. \"Soooo much better than any masturbation session. I literally had the greatest orgasms of my entire life!\"\n\n\"Boooo!\" Naimh complained. \"Stop rubbing it in our faces.\"\n\n\"I call 'next'!\" Zofi called enthusiastically.\n\n\"Everybody calm down!\" Sam shouted, gesturing with outstretched hands.\n\n\"And did you really put your mouth on him too?\" Alice asked Mari with a wince. \"You didn't swallow his sperm, did you?\"\n\n\"Seriously!\" Sam yelled, glaring at Alice. The Korean girl shut up. She then continued by glaring at each and everyone else around the room, including me. And after a long, pregnant pause, she finally relaxed and took a deep breath, muttering, \"Thank you.\"\n\nSam took to pacing in front of the TV again. Everyone waited her out in silence. Finally, she spoke again.\n\n\"As I said, there's no going back from this. Blowjobs and cunnilingus are apparently on the menu. But we HAVE to draw the line somewhere.\"\n\n\"Anal?\" Naimh offered with a smirk.\n\n\"Neevie, not helping,\" Sam drawled and rubbed her forehead. \"Clearly, The Rule has been a moving target, one that's moved a LOT since the start of the year, but I do think it's been doing its job. I get that we all want to explore our sexuality, and do so in a way that feels safe and under control. I always knew things would eventually progress. I didn't expect us to go from over-the-clothes grinding to oral sex in a matter of weeks, but... yeah... that happened. It's impossible to keep a gorgeous, straight male in a club with six beautiful girls and NOT have fireworks eventually go off. If it weren't for The Rule, Neevie would have taken his virginity three months ago.\"\n\n\"Damn straight!\" Naimh looked rather peeved.\n\nI arched an eyebrow. \"'Gorgeous'?\"\n\n\"But...\" Sam continued, ignoring me, \"we didn't let her because it wouldn't be fair to all the other girls who weren't ready to go that far.\"\n\n\"Whoa, whoa, whoa,\" Belle chimed in. \"It sounds like you're saying The Rule is basically a democratic consensus. For example, if we all WERE willing to fuck Matty, we all could?\"\n\nSam shrugged. \"I'm not a dictator, even if I'm the one standing up here, and you're all here of your own free will. Truth be told, I was pushing boundaries as much as anyone this past summer. But I am doing my best to keep the BTC together, and I AM scared that if we don't draw the line somewhere BEFORE actual intercourse, the club will break apart.\"\n\nEveryone looked at each other, weighing Sam's words. Alice piped up, asking, \"So are we supposed to vote or something?\"\n\n\"I vote for sex!\" Naimh thrust her hand into the air.\n\nAlice shook her head. \"I vote for NOT sex. This is already getting out of control.\"\n\nZofi shook her head slowly. \"I have to agree with Alice. I like the idea of Matty being my boyfriend and holding my hand around school, but I am NOT ready for sex. I don't think I'm even ready for blowjobs.\" She paused and smiled, \"But I really would like to feel what Mari was raving about. Greatest orgasms of your entire life?\"\n\nMari giggled.\n\n\"Can I vote we postpone the argument about whether or not we can have sex with him until AFTER we've sampled the new oral sex stuff on the menu?\" Naimh whined. \"Do you have ANY idea how long I've been waiting to suck him off?\"\n\n\"A lot less than Belle was waiting, so you can wait five more minutes,\" Sam retorted. \"Seriously, let everyone have their say.\"\n\nNaimh grumped and folded her arms across her chest. I reached out and patted her knee. She responded by sliding her hand onto my thigh, and then almost immediately moving it higher so she could rub my package. Sam noticed and sighed, \"Neevie, really?\"\n\n\"Just let her,\" Belle put in. \"Maybe this way she'll finally stop interrupting.\"\n\n\"I'd stop interrupting if my mouth was full,\" Naimh giggled. \"Just saying.\"\n\nAlice was behind the couch and bopped Naimh lightly on the head.\n\n\"Well... whether or not we agree to something,\" Mari said thoughtfully. \"I mean, even if we all voted 'yes' to sex, that does mean we... I mean... we don't have to have sex with him, right?\"\n\n\"Relax, the BTC's not a cult,\" Zofi insisted before shooting a look at Sam. \"Right?\"\n\n\"Of course nobody HAS to have sex with him, just like nobody has to give him a blowjob if they don't want to,\" Sam assured everyone. \"Free will and all that.\"\n\n\"Well that means Matty doesn't HAVE to go down on everyone if HE doesn't want to, right?\" Belle asked with a bit of a smirk.\n\nSam waved her hands urgently. \"Whoa, whoa, let's not get any crazy ideas here,\" she quipped. \"If pussy-eating is on the menu, I am DEFINITELY getting in line.\"\n\nEveryone laughed at that, but Alice did give me a nervous look. So I went ahead and spoke up for the first time, declaring, \"Of course I'd be honored to have the privilege of taking care of all six of you... time-permitting.\"\n\n\"That sounds like an offer to get started right now,\" Naimh husked right in my face, her hand tightening around my package. \"Clock is ticking, girls.\"\n\nSam sighed and complained, \"We STILL haven't decided where we're going to draw the line.\" But Naimh ignored her as the Irish beauty climbed into my lap, grabbed my head, and crammed her tongue into my mouth.\n\n\"I'm afraid that ship has already sailed,\" Belle said consolingly as she got up and walked over to Sam.\n\nZofi was suddenly beside me and Naimh, taking over Naimh's old seat, eyes glittering. \"You can give him the first blowjob,\" she told Naimh. \"I've been fantasizing about Matty eating me out forever.\"\n\nNaimh was already sliding down to the floor in front of me, her hands tugging at the waistband of my cargo pants. I never wore jeans on Fridays anymore; easier access this way. But while Zofi leaned in to nuzzle her nose against mine and then give me a wet kiss full of her arousal, I started trying to calculate the best geometry for all of this to work.\n\nBelle beat me to it. \"You should put him on a bed; easier to have a three-way. Mari and I figured that out yesterday.\"\n\nZofi giggled and started tugging me off the couch by my hands. \"C'mon, Matty. Let's go!\"\n\nI let Zofi pull me up to my feet and begin dragging me off towards the stairs.\n\nBack in the family room and still kneeling on the floor, Naimh threw up her hands, complaining, \"You're making me wait AGAIN?!?\"\n\n****\n\nWhat came next solidified that day as the greatest day of my young life up until that point, and even now stands in the Top 5 of days that didn't even have any actual intercourse. For a teenaged virgin boy, you really can't top licking six different pussies and getting your dick sucked by four different girls (neither Alice nor Zofi was ready for that part yet). Alice actually seemed willing to try it once, but as she approached me, Naimh teased her that it looked like I was about to blow from excitement, and Alice dove away from the bed as if a grenade had exploded. I think Naimh just wanted to get the competition out of the way and seize another opportunity to shove my dick into her throat.\n\nKnowing what was sure to happen in the afternoon, Belle had not gotten me off since yesterday's little three-way with Mari. She also forbade me from masturbating, not that the idea of handling my own dick appealed when compared to the probability of getting all six girls of the BTC to do it for me. Heck, it had probably been a month since I'd jerked myself off to completion. The girls had been draining me often enough already. And in the end, I came five times in one afternoon.\n\nNaimh swallowed my first load, although that didn't happen until three of the other girls had also taken a turn blowing my dick. I started flat on my back in bed with my legs spread to the sides so Naimh could rest on the mattress belly-down between them. She stroked my shaft for a few seconds not unlike the many times she'd already done so in the previous weeks, but wasted no more time before giving me a toothy grin, wrapping her plump red lips around my mushroom head, and swiftly pushing her face downward, taking in inch after inch of my cock. She stopped at the entrance to her throat, clenched her eyes, and shivered a little.\n\nDid she just have a little orgasm? Just from finally having my dick in her mouth? I wondered to myself. It turned out she was fingering herself at the same time, so perhaps she did.\n\nIn any case, I only had a minute or two to admire the gorgeous Irish redhead's face as she slurped and licked and generally made oral love to my cock, as if her fondest wish was finally coming true. That's because Zofi was impatient to let ME make oral love to her pussy, and the tall, leggy brunette soon had those long, lithe legs folded to either side of my head as she gracefully lowered her bare-shaven pussy down to my lips.\n\nSomewhat surprisingly, Zofi didn't look remotely nervous in the way Mari had been yesterday the first time my face approached her most intimate place. That set off a lightbulb in the back of my head that this probably wasn't the first time she was getting her pussy licked, although I was still pretty sure I would be the first male (hopefully?). Given the way she'd already been French-kissing Sam, I had to assume the two gorgeous girls had been playing around with each other for some time, although the way she had licked up my semen from Sam's boobs did make me wonder what else I didn't know about the girls' sex lives.\n\nThe point is: I didn't hesitate to grab Zofi's thighs, yank her down onto my face, and simply devour her. I'd taken things slowly with Mari yesterday, gently working her into each sensation by taking a long lick and then pausing to let her absorb the brand-new sensations. With Zofi, I went from zero to sixty in two seconds, munching and sucking and driving her up the proverbial wall intent on getting her off before one of the other BTC girls got impatient and started whining about getting her turn.\n\nFrom the sounds of Zofi's mewling whimpers and choked-off moans, it seemed that I had a pretty good chance of achieving that goal. The exquisite brunette's ecstatic expressions were a marvel to behold, and as she bent over above me, I took the time to really admire her classically Eastern European facial structure and piercing blue eyes. She really could be a model if she wanted to, although high-fashion was probably out of the question because of her big D-cup boobs. \n\nSpeaking of those big boobs, while Zofi was completely bottomless to sit on my face, she still wore all of her clothes on top. I couldn't see her luscious melons while eating her, but settled for sliding my hands underneath her sweater, across her somewhat bony ribcage, and pushed her bra out of the way so I could palm her tits. In hindsight, this was a highly unusual move for me. I'd never actually held Zofi's bare-naked tits before! And I was supposed to wait for the girl to grab my hand and bring it to her breast or otherwise give me explicit permission before initiating the next level of physical contact.\n\nBut I'd sort of gotten into the habit with the others by now. Belle was more than happy to let me manhandle her melons whenever we got busy, and there was this one time when I lost my head for a second and forgot to think \"she's like my little sister\". We had been making dinner before her dad came home when I snuck up behind her and just started fondling away. She'd squealed in surprise, then -I- realized just what I was doing and immediately felt a wave of guilt hit me. But Belle promptly grabbed my hands, put them back on her breasts, and started a makeout session that ended with her swallowing a fresh load of cum while I braced myself against the kitchen counter. Sam and Naimh were happy for me to play with their big titties during our \"study breaks\" and handjob sessions each and every time. And Mari seemed to love my stimulation of her massive mammaries even more than I did, especially while I'd been going down on her yesterday. So it was purely out of habit that I reached up through Zofi's sweater and started fondling away.\n\nShe gasped at the unexpected touch and immediately clamped her hands on top of mine. But rather than pull my palms away, she bit her lip, groaned, and mashed my fingers around her boobs even tighter. I put my thumbs to use tweaking her hard little nipples, curled my other fingers around the curvature of her breasts, and continued caressing them on autopilot while putting the rest of my focus into munching.",
        "It took less than five minutes before the lissome brunette beauty was bucking and writhing on top of my face, and I tasted her sweet essence pouring out onto my tongue. She whimpered and squeaked rather cutely, her hips shuddering for another minute before she finally went still and hung her head down between her shoulder blades, panting for oxygen. She may have collapsed entirely if not for the way I still held her up by her boobs. When I finally pulled my hands out of her sweater, she smiled, dismounted, and knelt beside me to say sweetly, \"Thank you, Matty. That was SOOOO good.\"\n\nShe finished by giving me a kiss, one that started off as a soft peck but quickly turned into more. Zofi actually started licking my face, obviously turned on by the taste of her own girlcum, and a minute later we were full-on making out. But then Alice got impatient and started shaking Zofi's shoulder, complaining, \"My turn! My turn!\"\n\nZofi finally broke our kiss and grinned. \"We have to do that again... and soon!\" But she finally backed away.\n\nMeanwhile, I had actually missed seeing the first time Sam sucked my dick. Hell, I'd missed seeing Naimh hand me off to Sam, who then handed me off to Belle, who then handed me off to Mari, and finally came back to Sam. The girls were still messing around having fun with the idea of sucking my dick and in no hurry to get me off. So it wasn't like I was getting intense lightning bolts of pleasure shooting up into my brain that would have distracted me from getting Zofi off. But now that Zofi was out of the way, when I looked down the length of my body and saw a blonde head bobbing in my lap instead of a redhead, I jerked a little in surprise.\n\nSam looked up at me, grinned, and crammed her head down as far as she could go. She couldn't quite deep-throat me, but she got within a couple of inches of the base. Wrapping her hand around the remaining portion, she pulled off, checked the level, and turned to Naimh, saying, \"Ha! Beat that!\"\n\n\"You're on, bitch,\" Naimh growled with electric green eyes and a wide smile. The next thing I knew, the redhead was back between my legs sinking her face down as far as she could go.\n\nAnd then a brand-new pretty pussy was suddenly blocking my vision. \"Hey there. Remember me?\"\n\nI blinked twice and grinned up at Alice. \"Sorry. Got a little distracted there.\"\n\nMy long-time best friend shrugged like it was no big deal, and for a second it looked like she was going to offer me a fist bump as a peace offering. But after starting to lower her pussy down toward my mouth, she suddenly froze and backed up a bit. \"Is this as weird for you as it is for me?\" she asked nervously.\n\nI gave her a sincere look and replied, \"Not weird, just the next step in our friendship. We'll ALWAYS be friends, even if you do happen to have boobs.\"\n\nAlice chuckled. It was the exact same sentence I gave her when we were in fifth grade and she started growing puffies. She was worried I'd stop being her friend like so many of the other boys, but I'd reassured her otherwise. \"This is gonna be awesome, isn't it?\" she asked with an excited tremor, as if she were at the top of a bungee jump bridge all buckled in at the edge of the precipice.\n\nSo I pushed her off, metaphorically speaking, by raising my head to close the gap between us and taking a long, wet lick along her pussy from base to clit.\n\nYes, it was awesome.\n\nAfter Alice screamed like a banshee and thrashed all over the place hard enough that I had to hold onto her hips just to keep her from bucking off my face, I was starting to reach my ejaculatory limit. When Alice finally toppled off me, I looked down to find that Naimh had me back in her mouth. And once she realized she had my full and undivided attention, the bodaciously busty redhead sat up, cupped her big freckled titties in her hands, and waggled them for my enjoyment. \"Wanna fuck these again?\"\n\n\"Oh, hell yeah,\" I groaned.\n\nBy now, the girls were well aware of my penchant for titfucks. In a world where blowjobs had still been off the menu, titfucks beat hand jobs by a long ways. I certainly got more excited whenever she, Sam, or Mari would wrap up my hot dog in the middle of their Double-D buns (or Belle's somewhat smaller 32Ds) and just go to town. Physically, it wasn't as stimulating as one of Belle's blowjobs. But mentally, it made for an amazing view. The chesty redhead wrapped her big melons around my shaft and started humping away. But the angle was wrong, and she had to pull me to the edge of the mattress so that my legs dangled and she could get to her knees instead of lying belly-down on the mattress. Only then was she able to really get going in a fervently playful up-and-down motion.\n\nBlonde bombshell Sam crawled forward and started kissing my belly. Pint-sized strawberry-blonde Belle crawled over and started kissing my face. Luscious Latina Mari got on the other side of me, took off her top, and started feeding me a nipple as soon as Belle got out of the way. And sweetly exquisite brunette Zofi sidled up behind redheaded Naimh, doing... something... I couldn't really tell from my vantage point. But whatever she was doing, Naimh closed her eyes and started whimpering even while continuing to pump her tits around my cock.\n\nMy best buddy Alice was half-conked out and delirious somewhere behind me.\n\nBy the time Belle and Sam started licking my nipples, Naimh crammed me back into her mouth and started pounding my dick with her face, trying to make me blast down her throat for the very first time. Her head moved faster than I would have thought humanly possible, pistoning like a race car cylinder until I groaned, clenched my abs, and fought to stave off the impending eruption.\n\n\"Ohmigawd!\" Mari squealed in surprise.\n\n\"Shit-shit, sorry!\" I exclaimed, belatedly realizing I'd bitten down a bit on Mari's breast when I clenched up. And then tightening my hands in the hair of both Belle and Sam who were still hovering over my chest licking and sucking away, I warned, \"Neevie! I'm gonna...\" \n\nNaimh felt the first thrust of my hips and backed off, lest she choke. Instead she rapidly jacked my cock with her right hand, squeezing and tugging while sucking powerfully on the head. And three seconds later, she finally got what she'd always wanted:\n\nMy thick cum spraying straight into the back of her mouth.\n\nAnd that was only my first ejaculation of the day.\n\n****\n\n- CHAPTER 6: Samantha -\n\n****\n\n\"Ohhh... shiiiiit...\" Sam sighed as she shoved my head out of her crotch and curled up into a fetal position on her side. I'd been eating her out for more than half an hour, in no rush because for once I didn't have any time constraints. I wasn't trying to sneak in a quickie before school, like I'd done with Belle yesterday morning. There were no friends watching us and waiting for their turn, like this afternoon's study session with Alice and Naimh. It was just me and Sam tonight, and I wouldn't have it any other way.\n\nIt was Wednesday night, late enough in the evening that I'd been surprised when the doorbell rang and I found the platinum-blonde Aussie standing on my doorstep with her arms crossed beneath her big breasts, squishing them together to create amazing cleavage in her V-neck sweater. She'd asked if I was busy, admitted she was horny, and sweetly pleaded for me to go down on her. I didn't need any further convincing.\n\n\"I think moving this into your bedroom was a BAD idea,\" she panted, looking unbelievably sexy with tousled hair and her bare skin shimmering with sweat. \"You have NO idea how tempted I am to have you come up here and just slide it into me.\"\n\nI picked my head up, blinked at her a few times, and let my eyes rove all over the busty blonde bombshell's bodaciously beautiful body. \"Um, yes please?\" I said with a smirk, only half-joking. I then sat up and reached for the box of tissues on my nightstand to dry myself off. The entire lower half of my face was absolutely soaked in girlcum.\n\nSam giggled at my playful tone and sighed, shaking her head rather mournfully. \"You know what I love most about you? I know you'll never do anything I don't want you to do. I feel safe. I trust you. I've never felt that way with other guys. The last time I let a boy eat me out, he barely made me cum before he was hovering on top of me, nudging his dickhead against the entrance to my pussy and begging me to let him push it in.\"\n\nThe idea of some meathead in that position over Sam immediately killed any arousal I felt, and with narrowed eyes and a bit of a growl, I intoned, \"You didn't let him, did you?\"\n\n\"You jealous?\" Sam laughed and shook her head. \"No, of course I didn't let him. We'd only been on like three dates and after his pathetic rug-munching, I realized I didn't want to sleep with him. I did give him a courtesy blowjob to get him to leave, but we never went on another date after that.\" She shrugged like it was no big deal.\n\n\"I'm sorry,\" I apologized. \"I shouldn't have asked.\"\n\n\"No, it's okay. You're one of the BTC.\" She gave me a brilliant smile. \"We share everything.\"\n\nI arched an eyebrow and shook my head dismissively.\n\nSam levered herself up onto one elbow. \"No, I'm serious. Ask me anything.\"\n\nI shook my head in the negative again. \"I'm part of the BTC, but I'm not one of the girls. A gentleman doesn't ask such things.\"\n\n\"But you're still curious, aren't you?\" Her eyes twinkled.\n\n\"Anyone would be, but I still would never ask you that stuff.\" I shrugged. \"I respect you too much for that, and I'm not the kind of guy who would devalue a girl based on her sexual history.\"\n\n\"Easy for you to say with this crowd. Everyone but me and Neevie is still virginal and pure. Neevie's only been with one guy her whole life, well... up until she gave you those blowjobs last Friday. That makes me the resident slut with a number of 'two'.\"\n\nI arched an eyebrow. \"Still at 'two'? I always wondered if you hooked up with Jake Pedson at Junior Prom.\"\n\nNow Sam arched an eyebrow at me. \"Thought you just said you'd never ask me that stuff.\"\n\nI winced and sat up straight, holding out both hands defensively. \"You're right, you're right. My sincere apologies, mademoiselle.\"\n\nSam laughed musically, and her Aussie accent made her next words sound even more playful. \"Don't apologize. I already said you could ask me anything.\" There was a world of innuendo in her voice.\n\n\"Anything?\" I asked with a tease. I was pretty sure she wasn't talking about asking questions anymore.\n\n\"Anything,\" she assured me. \"And no, Jake Pedson squirted his shorts in the limo when I put his face in-between these two beauties.\" Sam hefted her big naked boobs for emphasis, mashing them together and rubbing one up and the other down before reversing course over and again, like a pair of cheerleader pom-poms. If she kept that up much longer, I'd squirt my shorts too, if I were wearing any. \"You, on the other hand, will get a LOT farther than he ever did. All you have to do is ask.\"\n\n\"Um, does that mean I can ask for a blowjob now?\" I asked innocently, staring at those pom-pom boobs.\n\nSam giggled. \"Why yes, sir, you may.\"\n\n\"And can I ask you to let me fuck your tits again?\"\n\nShe laughed and repeated, \"Why yes, sir, you may.\"\n\n\"And will you swallow every drop of sperm I give you?\"\n\nSam thought about that and grinned, shaking her head 'no'.\n\nI arched an eyebrow, confused.\n\nSam's eyes glittered. \"I want you to cum on my face.\"\n\n****\n\nSam apparently had such a great time Wednesday night that she came back again Thursday. I was a little drained from my regular Thursday afternoon \"study breaks\" with Belle and Mari, although I couldn't go down on Belle because she was on her period. But my mouth was in perfectly good working order, and this time Sam wanted me to start pushing my fingers inside her. I was more than happy to learn new tricks. The virgins of the group might be a little skittish about that sort of thing, but I would have bet my left nut Naimh would be thrilled the first time I tried it out on her.\n\nSam and I got quite a shock when we headed downstairs and found that Mother had come home a little earlier than usual. At least we were fully dressed. Sam blushed bright pink but made polite small talk. Mother had interacted with each of the BTC girls in passing several times each year, so they at least knew each other. Eventually, Sam gracefully made an exit, and after she was gone, Mother fixed me with a serious look.\n\n\"Did you use protection?\" she asked rather bluntly.\n\nI blinked twice. \"Uh, we didn't have sex.\"\n\n\"Really?\" Mother looked surprised. \"It sure sounded like you two were having a good time.\"\n\nI frowned. \"I'm still a virgin.\"\n\nMother pointedly looked toward the front door where Sam had just left and then looked back at me. \"Not for long.\"\n\nI arched an eyebrow. \"What's that supposed to mean?\"\n\nMother smiled thinly. \"Make sure Samantha is on birth control, and buy yourself some condoms just in case. I don't want the two of you going through what your father and I had to go through.\"\n\nI sighed and shook my head, already walking out of the room. \"Thanks for the reminder I'm nothing but an unwanted accident.\"\n\n\"Matthew,\" Mother called, but I was already heading for the stairs.\n\n****\n\n\"Mari... Angel... I'm gonna cum...\" I warned, gasping for air as I watched the lovely Latina bob her head up and down my prick, her lips stretched wide around my girth. It was a regular Friday BTC hangout, and at the moment I was seated on the couch with no one else around but me and her since the other girls had been satisfied and moved along. Naimh, Belle, and Alice were presently chatting around the kitchen island, and Sam and Zofi were in the office putting their clothes back on after our latest group expedition into exploring the uncharted territory recently made available after pushing The Rule's boundaries further and further out.\n\nSee, for a long, long time, each of the girls had long spent her days using me as a crash test dummy to practice flirting: tossing her hair, batting her eyelashes, pretending to absentmindedly tug at the V-neck of her sweater and expose millimeter after millimeter of additional titflesh, etc. They'd been testing out their seductress skills on me for a while now, but over the past week, actual nudity had been added to the menu and happy endings were allowed for all. And knowing that all that teasing and flirting could ACTUALLY end up with an orgasm or two for both parties involved made a TON of difference.\n\nInstead of almost exposing a nipple when playing with the buttons on her sweater and dry-humping my erection on Monday after school, Sam went ahead and gave me a few peeks while batting her eyelashes at me coquettishly, only to cover her tits up again. Minutes later, Naimh one-upped her by unbuttoning herself all the way and then pulling my mouth around her swollen teat. Minutes after that, Sam gave me a titfuck that ended with a wet and sloppy facial.\n\nZofi had always loved to sashay past me doing a model's runway walk before glancing back to make sure I was checking out her high and tight ballerina butt. On Tuesday, she paused a few feet away, pulled her jeans down to mid-thigh, bent over, and waggled her toned tushie at me before giggling and scampering away. An hour later, when she repeated the maneuver, I leapt out of my chair and went after her. She issued a high-pitched squeal as I pounced, unable to retreat with her pulled-down jeans obstructing her legs' freedom of movement. I caught her easily around the waist and spun her around once before putting her back on the ground and lightly spanking her bare butt. She looked back over her shoulder at me in surprise at the unexpectedly aggressive act (for me, at least). With a mischievous glint in her eye, she then shook her butt at me again in defiance. Taking the cue, I bent her over and fell to my knees so I could lick her succulent snatch from behind.\n\nAlice was more direct. When she wanted a study break, she just dropped into my lap, pulled her shirt and bra up to her chin, and shoved a nipple into my mouth. Five minutes later, she sat back in the armchair with her legs thrown over my shoulders while I feasted on her.\n\nNow it was Friday, and the girls decided to have a little \"nude in high heels bootcamp\" to further their education in becoming good and proper sex kittens and learn the art of seduction sans clothes. In the past, when the girls would flaunt themselves before me, I was expected to keep my hands to myself. Today, they'd demanded that -I- be the first to strip. Not for any solidarity with the girls or sense of fairness mind you, but simply so they could have easy access. So while in theory I too would be getting used to being nude around the girls, in practice, for most of the afternoon my nudity was obscured by the head of a budding fellatrix.\n\nLong story short, it wasn't long before I was most definitely comfortable in my own skin.\n\nFor the better part of two hours, Sam, Zofi, Naimh, Alice, and Mari took turns parading around my house without a stitch of clothing save for high heels - practicing their runway walks, testing out optimal angles for presenting me with their naked asses while simultaneously twisting their torsos to put their big bosoms in profile, things like that. Belle also paraded around, but since she was still on her period she was the only one who kept her panties on the whole time.\n\nThe girls would go up one at a time, with the rest of us sitting on the family room furniture we'd pushed back to give them the runway space to practice their moves. Sam took the honors of calling out and demonstrating many of the moves, though most of the girls came up with at least one pose they wanted to try out with the group watching.\n\nWhat followed was vintage BTC. My friends cheered and supported each other from the audience, giving tips without judgment and giving encouragement when they got the move just \"right\" (in my opinion, they never got it wrong).\n\nShy Mari faltered during her opening strip tease, momentarily reverting to the nightmare of being a scared girl standing in the middle of a room wearing nothing but her underwear and everyone staring at her. I don't know who started it, but soon we had a chant going, \"Ma-ri! Ma-ri! Ma-ri!\" while we all slapped the cushions on each syllable. Naimh called out from the loveseat in a hybrid Irish/Cajun accent, \"You can do it!\"\n\nIt would probably be an exaggeration to say that Mari finished the strip tease like a pro, but off came her bra, with her panties following soon after while everyone encouraged her with catcalls and whistles. Most importantly, when the lush, curvaceous Latina finished her final pose, her back to us, one foot on a coffee table as she swung her hips back and forth with her panties still dangling from her fingertips, Mari turned to us and her smile lit up the room as Belle ran to hug her BFF clad only in her panties, squishing their big boobs between them.\n\nThen there was that moment when blonde bombshell Sam attempted to lean back against the doorframe to the downstairs office. She'd meant to use it for leverage as she wiggled her body down and back up again like a pole dancer as Neevie had demonstrated for us, but she misjudged where she was and almost completely missed the doorframe. Her eyes went wide as the expected support didn't arrive and she fell backwards right through door, completely eating it right in front of us. Several of the girls yelped in surprise as we all scrambled to see if she was okay.\n\nSam looked up at our anxious faces and answered our voiced concern for her with a chagrined, \"I fell on my butt,\" drawing a laugh from each of us. Alice suggested I kiss the boo-boo, which I was only too happy to do.\n\nSam tried again and pulled it off, the incident passing into legend amongst the BTC.\n\nWhile those moments of comradery were memorable, the parade of flesh was exquisite. Willowy Zofi, of course, excelled with her natural dancer's grace. Extroverted Sam, Naimh, and Belle vamped it up and took great glee in shaking their goodies for me. Even Mari warmed up as the afternoon went on.",
        "One benefit of always having either Belle, Naimh, Sam, or Mari slurping away on my dick was that I felt no need for ejaculatory control. And so it was that when the most gorgeous thing I'd ever seen paused to lick two of her fingers before swiping them through her red-furred landing strip and across her clit after a turn on our little catwalk, my hips jerked and Sam happily swallowed my first of three loads that afternoon. Naimh seemed particularly proud of herself for that one.\n\nThen there was Alice. Like Mari, Alice was a more hesitant participant and would cover herself up with bathrobes between sessions. She'd never frozen as Mari had, and she wasn't the only one to cover up when not performing (Mari retreated into a bathrobe as well, and Zofi had taken to wearing her panties like Belle, not for modesty's sake but rather because she liked the way I'd started staring at her panty-clad ass, even with all the other naked tushies around). But regardless, my best friend was clearly feeling awkward. I was beginning to consider asking if she wanted to sit the rest of the day out.\n\nThat's when Sam had the bright idea to have each girl take a turn sitting in my lap wriggling her naked heinie against my bulge. For this, Sam asked that I put my boxers back on. No need to tempt fate (or Naimh) that things would line up just right and cost someone their virginity. It wasn't a far cry from the dry humping Sam had begun last summer, but now there was less clothing in the way and I was also allowed to touch and grab to my heart's content. First went Sam, who ground out an orgasm for herself before her dismount. Mari and Zofi followed after.\n\nOnce their turns were over, my best friend took her place. Now, while Sam had ground herself against my erection, Mari and Zofi had mostly been content to cuddle, with Mari taking the extra step of feeding me her nipple. As such, I'd actually had less direct physical stimulus in the last few minutes than I'd had for most of the afternoon and was nowhere near losing my load.\n\nAlice, however, wasn't one for cuddling. And while she wasn't a big fan of walking around naked, either, she did enjoy getting herself off and began imitating Sam's ride. It took her a moment to figure out what worked, but eventually she was riding me like she'd been doing it for months. \"Suck my titties,\" she commanded, and I happily complied, leaning forward to take in the luscious love melons.\n\nBeside us, Sam was calling time, but Alice didn't want to stop. \"Please, I'm almost there,\" she whined. No one stopped her as her hips moved faster, seeking just the little bit more she'd need to go over the edge. Ignored was the effect she was having on me. I might not have been close before, but a solid five minutes of Alice undulating on my lap was bringing my balls to a boil.\n\nThen I felt her hand between us, Alice taking matters into her own fingers as her rapid diddling of her clit also rubbed across my cock. Finally, she screeched out the orgasm she'd been chasing, wailing while her body ground down on me one last time, and I grunted as I followed her over the edge.\n\nAlice's eyes refocused as the wave passed. Still breathing hard, she apparently felt the moisture between our loins and looked down. \"Did you...?\"\n\nI chuckled. \"I certainly did.\"\n\n\"For me?\"\n\nI looked back at her confused until it hit me. Alice hadn't been awkward out of shyness; she'd been intimidated by the other girls. Sometimes I forgot the BTC were teenage girls with their own set of body issues, and we did have very beautiful friends. So I assured her with warm sincerity, \"Yes, for you.\"\n\nAlice contemplated that for a moment until she looked down again and realized what was smeared between us. My erection had long been poking upwards between our two bodies, giving the girls something to grind on. But Alice's undulations had worked the waistband of my boxers lower and lower so that the top several inches of my dick were exposed, and I'd ultimately belched my load across both of our bellies.\n\n\"Eww!\" Alice abruptly complained and leapt off my lap to run into the kitchen. We could see her grabbing paper towels to first blot up my icky sperm, and then run a few more paper towels through the sink to make wet wipes. And she kept up a constant stream of complaints from the kitchen through most of Belle's turn on my lap.\n\nBut when Alice came back, she was a lot freer and confident for the rest of the afternoon, imitating Zofi's preference for wearing panties, but ditching the bathrobe.\n\nSensing that the whole \"naked bootcamp\" thing was winding down, Naimh was the first to break, flopping onto her back in the seat beside me and yanking me around until my face was in her crotch. I was only too happy to start feasting away.\n\nAlice promptly pulled her panties back off and then parked herself on the couch right next to us. \"I call 'next'!\"\n\nSpending all afternoon exposing themselves to my hungry gaze had primed all of the girls, and they each climaxed quite quickly. Sam and Zofi also screeched their satisfaction in short order after Naimh and Alice. Mari held back, letting herself be last. After she finished squealing her pleasure to the ceiling, my adorable angel reached out and fondled my final erection of the afternoon between her thumb and forefinger. She patted the seat cushion and said sweetly, \"Let me take care of that for you.\"\n\nNaimh, Alice, and Belle were all fully-dressed by now and chatting around the kitchen island. Sam remained naked, chilling out on the armchair a few feet away while Zofi sprawled next to us on the couch, also still naked and still a little delirious from her recent orgasm. Accepting Mari's generous offer, I took my place on the seat, my rock-hard shaft pointing straight up to the ceiling. And I groaned in exquisite relief as my luscious Latina started lowering her warm and wet mouth around my rampant prick.\n\nI wasn't in any hurry to cum. I was already down two ejaculations this afternoon, and I wanted to relax and enjoy Mari's blowjob as if it were a well-earned cigar at the end of a long day. At first, Sam watched Mari working me, and it almost looked like she was studying the other girl's technique. But then Zofi started to stir from her stupor, and Sam went to help collect her best friend and took her back to the office to get dressed.\n\nEventually, though, my angel's talented mouth started bringing me up to the edge. Pleasure shot through my brain like lightning bolts as I groaned and let my head loll against the backrest. And when I felt the pressure in my balls come to a boil, I stiffened my spine and looked down to warn her of my impending eruption.\n\n\"Mari... Angel... I'm gonna cum...\" I warned, gasping for air as I watched the lovely Latina bob her head up and down my prick, her lips stretched wide around my girth.\n\nMari held up a finger, telling me to wait. She stopped her bobbing at the top, inhaled deeply through her nose, and sloooowwwlllly sank her face all the way down my dick.\n\nI mean ALL the way down. Mari's lips were around the very base of my cock, and the tight constriction of her throat was almost too much for me to bear.\n\n\"Holy CRAP!\" I exclaimed, throwing my head back and desperately trying to hold my orgasm at bay lest I drown her in this vulnerable position. Mari stayed down there, breathing shallowly through her nose, trying to hold the deep-throat for as long as she possibly could.\n\n\"Holy CRAP!\" Belle exclaimed from the direction of the kitchen. A moment later, she announced in a louder voice, \"Mari's deep-throating Matty!\"\n\n\"What?!?\" Sam exclaimed as she returned down the hallway. Zofi squeaked something as well. But I didn't bother turning to look. All my attention was on the angel before me with a throat full of cock.\n\nMari suddenly choked and backed off quickly, thumping her chest with her fist as tears appeared in her eyes. She tried to get over it a little too quickly, putting me back into her mouth and sucking once more, but she hadn't yet cleared her airways and she pulled off to start coughing again.\n\nBelle quickly settled to her knees beside me and crammed me into her mouth. She didn't bother trying to deep-throat me, she simply hummed and pumped and did that thing I loved so much with both her hands twisting around the base, and in less than a minute I grunted and began spewing semen into my \"little sister's\" stomach.\n\nWith a satisfied sigh, I collapsed against the couch and smiled serenely while Belle nuzzled and nibbled at my cockhead lovingly. When I had enough energy, I raised a hand to caress her cheek, and she turned to kiss my palm and flash me an impish grin.\n\n\"Thanks, B.\"\n\n\"Yeah, thanks, B,\" Mari added, still tapping her chest and breathing heavily. She gave me an apologetic look and said, \"Sorry to leave you hanging.\"\n\nI shook my head. \"Don't be, Angel. I loved what you did.\"\n\n\"But I choked instead of making you cum.\"\n\n\"Girlie,\" Belle chimed in, \"you got all the way down! That's amazing! And I had your back this time. Next time, you'll be able to say you made him cum straight into your belly.\"\n\n\"IF that's what you want,\" I added. \"You know I'll be fine if you don't.\"\n\n\"Of course I know.\" Mari beamed at me. \"That's why I loved doing it for you.\"\n\nWith a wide, satisfied grin, I gestured for Mari to climb up and cuddle alongside me, which she did happily. I loved the feel of her lush naked curves beneath my arms. In the meantime, Belle hadn't let go of my prick, continuing to stroke my semi-hard shaft. Having cum three times today, it wasn't in any hurry to rise back up to full mast, not that she seemed to mind. At the moment, the petite strawberry-blonde simply wanted to play with it.\n\nMari had gone to get dressed and Belle was still playing with my prick when Zofi came around and held up the DVD we'd rented from Blockbuster to be tonight's entertainment. I nodded and Zofi hollered, \"We're starting the movie!\" And the rest of the girls assembled around.\n\nBelle finally put my penis away and sat on the other cushion beside me. Alice and Naimh took the two-cushion loveseat, and Zofi was quick to call dibs on the armchair, leaving Sam out in our impromptu musical chairs game.\n\nBut Sam wasn't interested in sitting down just yet. She stood in front of the TV, waiting until she had everyone's attention. And then in a slightly nervous voice that was supremely out of character for the typically ultra-confident young woman, she said, \"I need to ask a favor from all of you: I'd like Matty to go with me to this wedding tomorrow night.\"\n\nZofi frowned. \"You mean, like a date?\"\n\n\"No, no, that's just it. I mean, technically, yes he would be 'my date'.\" Sam did the air quotes. \"But we wouldn't be going 'on a date'. I'm perfectly aware of The Rule. Rather, one of my dad's business partners is getting married and I've already been to a half-dozen functions with these people and I'm ALWAYS getting hit on by older men who won't take a hint even if I tell them to bugger off. I have to be nice to them because they work with my dad, but having Matty escort me would help a lot in keeping those wankers away from me, you know?\"\n\n\"You both have to dress up, right?\" Naimh queried.\n\n\"Of course. It's a wedding.\"\n\n\"And there's going to be a fancy dinner,\" Alice stated, rather than asked.\n\n\"Of course,\" Sam sighed, recognizing where this was going.\n\nMari giggled. \"Sounds like a date.\"\n\nNaimh added, \"And I'm pretty sure The Rule clearly states that-\"\n\n\"I get it, I get it,\" Sam wheezed. \"That's why I'm asking permission from you instead of him.\"\n\n\"Did you ask him?\" Belle sat up straight before turning to me, adding, \"Did she ask you?\"\n\n\"Yesterday.\" I shrugged. \"But we knew we had to run it by you all first. Seriously, she just needs a shield, and I told her I'd be happy to do it, but only if you all were okay with it.\"\n\nZofi leaned forward and raised both eyebrows at Sam. \"You realize this'll set a precedent for other situations where one of us will want to 'borrow' Matty to be an escort at some function or another. I'm not complaining - just confirming for my own selfish purposes.\"\n\nSam rolled her eyes. \"Yes.\"\n\nZofi grinned. \"I'm okay with it.\"\n\nBelle laughed. \"You're penciling him in for next Saturday or something, aren't you?\"\n\n\"I call the Saturday after that!\" Naimh announced.\n\n\"Can we divvy up weekdays, too?\" Mari asked.\n\nSam started waving her hands. \"Oh no-no-no. This is NOT going to turn into some kind of rotating schedule where Mari gets him on Mondays, Neevie gets him on Tuesdays, Alice gets him on Wednesdays, etcetera. If you're going to try and pull that shit then you can all get stuffed and hang the wedding.\"\n\n\"Relax, relax, we're just teasing,\" Belle assured her. \"I mean, as long as Matty's fine with it, I say let him go with Sam. It's not like they're going off on some romantic escapade.\"\n\nAlice shrugged. \"Yeah, no biggie.\"\n\nNaimh briefly waved both hands in a what-the-heck gesture and said, \"No worries. But like Zofi, I reserve the right to borrow him if something comes up where I need a boyfriend on my arm.\"\n\nMari nodded and said, \"Sure.\"\n\nI smiled and said, \"Looks like it's unanimous.\"\n\nZofi grinned. \"But you still lost musical chairs.\" She tossed a big pillow for Sam to use as seat cushion on the floor.\n\nSam beamed at me and said sincerely, \"Totally worth it.\"\n\n****\n\n\"Wow... This is pretty nice,\" I commented as Sam and I walked through the front doors of the San Francisco Merchants Exchange building arm-in-arm. The wedding ceremony would take place right there in the barrel-vaulted lobby, which was decorated to the nines with golden trees topped with white flowers that accented the distinct d\u00e9cor. Sam looked somewhat less enthralled, so I arched an eyebrow. \"Been here before already?\"\n\nShe shrugged. \"Second wedding. Third event overall. The company likes this place.\"\n\n\"I can see why. It's impressive.\"\n\n\"Samantha!\" A male voice called from somewhere to our left.\n\nSam winced and closed her eyes for a moment. \"So it begins.\" She schooled her face, put on a pleasant fa\u00e7ade, and turned with me to face our new visitor.\n\n\"Mr. Sanderson, so nice to see you again,\" Sam said politely as the early 30s man with a trim goatee strode over to us.\n\n\"How many times have I told you to call me 'Tim'?\" he said, eyes gravitating down to Sam's upthrust cleavage. They lingered there a little longer than would be polite, but he finally brought his gaze back up. I couldn't necessarily blame him. Sam was impeccably dressed in a satiny black dress that put \"the girls\" on display, black lace stockings, and fancy skyscraper high heels. Her dark roots and heavy eye makeup accented her severe appearance to go with the dress, but her platinum-blonde hair, piled high in a fancy up-do, and dangling silver earrings completed the look. Teenaged near-jailbait or not, Sam was gorgeous enough to attract the attention of everyone from twelve to a hundred and twenty.\n\n\"Perhaps one more time, Mr. Sanderson,\" Sam replied primly. Turning to me, she released one of her arms from mine and gestured, \"This is my boyfriend, Matthew.\" She immediately wrapped both arms around my left elbow afterwards.\n\n\"Pleased to meet you,\" I stated evenly, offering my hand. For whatever reason, it never occurred to me that Sam would introduce me to people as her boyfriend. I mean, I knew I was going to be her escort, but I honestly thought I would just be her \"date for the evening\" or something.\n\nMr. Sanderson shook my hand, a trace of disappointment in his eyes. Gleaning what I could from the conversation, I wondered just how long he'd been fantasizing about banging the hot blonde teenager. We exchanged pleasantries, but after less than two minutes, Sam explained that we needed to meet up with her parents and we excused ourselves.\n\nWe were stopped by one more \"older admirer\" and basically had a repeat of our conversation with Mr. Sanderson, but Sam's parents were nearby and overheard us. After Mr. Quin departed, Sam's mother leaned over and asked, \"'Boyfriend'?\" I could practically see her miming the air quotes the same way Sam always did.\n\n\"Relax, Mummy. It's just to keep the wombats at bay.\"\n\nHer mother's smile broadened, and she looked at me. \"Nice to see you again, Matty.\"\n\n\"You too, Mrs. Smith,\" I replied politely. I shook hands with Sam's father, and we had a nice chat for a few minutes, talking about school and other things.\n\nWhile I'd met Sam's parents before, this was easily the longest duration we'd ever spoken. Sam's dad made a few references to San Francisco politics, specifically his support of the LGBTQ agenda, and as the conversation wore on, I got the distinct impression Sam's father thought I was a homosexual.\n\nWhen we separated again, I leaned in and whispered, \"Does your dad think I'm gay?\"\n\nSam giggled and shrugged. \"Well you have been hanging out with six girls and zero boys for the past few years. I've never tried to correct him. Otherwise he might pitch a fit about me visiting you.\"\n\nI arched an eyebrow. \"Does your mom think I'm gay?\"\n\nSam shook her head in the negative. \"You've done a much better job than other guys of not staring at my breasts, but you still check me out. She noticed and asked me last year if you were gay or straight.\"\n\n\"Does she pitch a fit about you visiting me?\"\n\nSam shrugged. \"I don't tell her and she doesn't ask. She trusts me. I have been honest with her about the boys I slept with.\"\n\nI popped my eyebrows. \"Have you told her about what we've been doing?\"\n\nNow Sam's eyes sizzled. \"What happens in the BTC stays in the BTC.\"\n\n****\n\nSam's parents had driven separately from us as they'd met up with other business partners before the wedding. Immediately after the cake cutting ceremony towards the end of the reception dinner, Sam asked for and received permission to leave early. She'd put in her required appearance and was allowed to get away from the \"wombats\" as she put it.\n\n\"Don't take me home yet. Let's go to your house,\" she said in a husky voice, one hand on my leg in the minivan as I started the ignition. \"Mum and Dad will be at the reception for another two hours at least.\"\n\nI arched an eyebrow, both questioning what she intended to do at my house and excited by the possibilities. Both Wednesday and Thursday nights had been FUN. And then I put the van into gear.\n\nI drove aggressively but not recklessly. Sam was a bit of a distraction since she kept reaching over to rub the bulge in my pants, but at least she didn't unzip me or anything. We made it home safely and hurried inside. But once we got through the garage door, Sam grabbed my hand, spun me around, and clamped both hands behind my ears as she pulled me into a fierce kiss. She hit me with enough force that I staggered until my back hit the wall, Sam crooning into my mouth while pressing her entire torso against mine.\n\n\"I wanna suck your dick,\" Sam hummed in a low voice, her right hand dropping over my bulge to fondle it. She then dropped her left hand so they could work together undoing my belt, unbuttoning my suit pants, and unzipping the zipper. Then with one last fierce kiss, she squatted straight down, dragging my pants and boxer shorts with her, and fed on my cock.\n\n\"Gawd you're so sexy,\" I groaned at the sight of the busty blonde before me. She was still fully dressed, fancy skyscraper heels and all, as she gripped my buttcheeks in her hands and bobbed her head back and forth along my length.\n\nTwo and then three times, she tried to deep-throat me, choking a little with each attempt. I could feel the tension in her hands as she held my ass, attempting to impale her face on my protruding prick. I wanted to tell her it was alright if she couldn't do it, but Sam seemed on a mission tonight and I didn't have the heart to tell her to stop.\n\nWell that, and it both looked and felt fucking amazing to watch her try.",
        "Tears started running down her cheeks, causing her mascara (or eyeliner?) to run and give her watery raccoon-eyes. But despite the apparent discomfort, she continued to ram my dick into her throat, and although she got within an inch of my thick base, she never quite pulled it off.\n\n\"Fuck! How the fuck did Mari do it?!?\" she swore after pulling away, retching just a little, and fighting to catch her breath.\n\nI chuckled and reached down to take hold of her hands and pull her back up to a standing position. \"Hey, hey, relax. It's not a big deal.\"\n\n\"It's a big deal to me!\"\n\nI hugged her tightly and stroked her spine. \"Seriously, Sam. I promise I won't love you any less just because you have a functional gag reflex. I've got a big dick, I know it.\"\n\nSam blinked and stared at me, her irises somehow glowing amber amidst the heavy darkness of the surrounding eyeliner. \"You love me?\"\n\nI winced. \"I love all the BTC girls.\"\n\nShe didn't look sure whether to feel relieved or disappointed, but smiled nonetheless. Suddenly, she brightened as if a lightbulb went off in her head. \"I know. The couch!\"\n\n\"What?\"\n\nSam was already tugging me by the hand into the family room, and I had to try and hold my pants up around my knees just to manage a duck walk fast enough to keep up. \"Mari managed to do it over here on the couch. The angle might be easier than straight on. I couldn't breathe the other way.\"\n\n\"Uh, worth a try,\" I conceded, allowing the spirited young vixen to push me down into the couch and drop my pants back to my ankles.\n\nSam grinned at me, stroked my shaft twice with her right hand, and then bent over to inhale my prick. Halfway down, she paused and looked up at me to make sure she had my full and undivided attention. And when our eyes met, she actually winked.\n\nI'll spoil the ending and tell you she still couldn't quite do it. She tried for about ten minutes straight and never got closer than an inch away. It still felt AMAZING to me, but by the end of it, Sam was hunched over on her knees, hugging herself and outright bawling.\n\nSeriously, Sam was crying in abject misery over not quite being able to deep-throat me. I quickly went to kneel beside her, wrapping my arms around her reassuringly, shushing her gently, and telling her over and again, \"It's okay, it's okay. You really don't have to do it. I don't mind.\"\n\n\"It's not okay,\" Sam insisted. \"I WANT to do it.\"\n\n\"I know you do. But I think it's time you at least took a break. This isn't a big deal to me.\"\n\nIt was the wrong thing to say. Sam suddenly stared at me, righteous fury in her eyes. \"Well it IS a big deal to ME.\"\n\nI blinked and let go of her, holding my hands up defensively. As reassuringly as I could manage, I said, \"I can see that, and I appreciate you trying so hard.\"\n\nSam furrowed her eyebrows and hung her head dejectedly. \"You really don't care, do you?\"\n\n\"What do you mean?\"\n\n\"You really don't care if I finish the deep-throat. Even if I did, it wouldn't change the way you feel about me, would it?\"\n\n\"Of course not,\" I replied reassuringly. \"I already promised I wouldn't love you any less if you couldn't do it.\"\n\n\"You're not listening,\" she complained, shaking her head.\n\n\"I'm trying.\" I reached out to grab a few tissues and handed them to her.\n\nWith a sigh, Sam accepted the tissues, sat back on her heels and wiped her eyes. Even when she was done, her eyes remained closed. She went silent for a long while, just... thinking... But the deep-set frown was etched onto her face, and I desperately tried to think of something else to make her feel better.\n\n\"Hey, climb up here,\" I said softly, suiting action to my words as I hugged her around her midsection and bodily lifted her up onto the couch, parking her butt right at the edge so that she had to recline quite a bit before her shoulders and head hit the backrest. Sam didn't resist, although she looked at me curiously. But her eyes did go wide when I slid the hem of her dress up, glided my hands along her stockinged legs, reached beneath to take hold of her panties, and started tugging them down.\n\nWith an eager look, Sam pressed her skyscraper heels into the floor and raised her ass off the couch to help me. I dragged her panties all the way down, putting her feet together so I could extract them over her shoes and set them aside. Only after I did so did she smirk and say, \"I didn't give you permission to take my panties off. I thought you were the guy who would never do something without the girl giving you permission first.\"\n\nI blushed, thought about that, and replied, \"Actually, you said you trusted me to never do anything 'you didn't want me to'. There's a difference.\" And raising the hem of her dress out of the way, I leaned forward to take my first lick.\n\n\"Aye... I suppose there is... nnnggghhh!\" Sam grunted as I started to go to work.\n\nIt didn't take long. Trying (and failing) to accomplish the deep-throat had stressed her out, winding her up tighter than a drum. She ramped up quickly, and only a few minutes after I started munching her out, all that tension burst out of her in an explosive orgasm that nearly ripped my head off. And in the end, she tilted to the side and lay slumped and exhausted across my couch.\n\n\"Fucking A, Matty...\" the busty blonde bombshell wheezed. That lightbulb went off in her head again, and she grinned as she added, \"I'm so tempted to have you come up here and just slide it into me.\"\n\nI picked my head up, smiled back, and replied automatically, \"Yes please!\" But we both knew I would never do that, and I got up to grab a few tissues and wipe off my face. Hoisting my pants up, I buttoned myself but left the zipper and belt undone. Extending a hand down to her, I said, \"C'mon. Let's go upstairs and get more comfortable. I've been fantasizing about getting you out of that dress all night, unless you think I should run you home sooner than later.\"\n\n\"I'm not going anywhere but up to your room,\" Sam replied quietly. She looked up at me, adoration in her eyes as she took my hand and stood up. Wrapping her arms around my neck, she kissed me softly, whimpering a little as she increased the pressure and snaked her tongue into my mouth. We made out for a minute or so, but I pulled away first and head-nodded toward the stairs. She held my hand with both of hers, almost as if she was afraid I'd let go, and let me lead her away.\n\nOnce inside my room with the door closed, just in case Mother came home early again, I led Sam over to the foot of my bed and paused to kiss her gently. While our lips were still together and our eyes still closed, I raised my hands and felt my way by touch to the back of her dress, slipping the catch and pulling down the zipper. Still with our tongues carving out each other's mouths, I felt for her shoulder straps and tugged them down her upper arms. And only then did I break the kiss so I could step back and watch, entranced, as I slowly dragged the satiny material down to reveal every inch of her goddess-like body before my hungry gaze.\n\nThe top of the dress got hung up on her prodigious boobs, but once I pulled hard enough for the garment to abruptly fall down to her waist, I found that Sam had really gone all out tonight, wearing an outfit she'd quite clearly planned on showing me at the end of our \"date\".\n\n\"Oh, my fucking GAWD...\" I moaned rapturously, and Sam's smile lit up the room with both pride and delight at my reaction.\n\nEven though her makeup had been messed up a little, her hair was still sexy and I loved the way her dangling silver earrings framed her face. She wore a strapless, black lace corset top that lifted and separated her huge breasts so that they almost appeared spherical. I tugged her satiny dress past her hips and down to the floor, revealing a matching garter belt to go with her thigh-high lace stockings. She stepped out of the satiny material and waited for me to remove her skyscraper heels, since I had my hands on her left shoe. But with a bit of a smile, I pulled my hands away and left the heels alone. \"Wouldn't want your bootcamp training to go to waste,\" I murmured with a smile.\n\nStill kneeling before her, I ran my hands up Sam's stockings and around to cup her juicy buttcheeks, using my grip to tug her crotch forward so I could inhale her sweet scent and take another lick at her sweet pussy, causing her to shiver. But I didn't linger, sliding my hands higher along her spine as I stood up, put my nose into her cleavage for a little bit, and finally pressed my lips to hers for another searing kiss while my hands went to the buttons of my shirt.\n\nShe started helping me unbutton myself. I focused on getting my tie loose, and only then realized I'd left the suit jacket hanging in the van. No matter, I could get it when I drove her home. Sam finished with my buttons, I pulled my shirt, tie, and undershirt off, kicked off my shoes, and finally stepped out of my pants and boxers. I was now completely naked while Sam remained fairly covered, having only removed her dress and panties. She started to rectify that by reaching behind herself, apparently to unzip the corset. But I made her squeal in surprise when I stooped, picked her up around her upper legs, and hoisted her up onto my bed, dropping her halfway so that only her calves and feet hung off the edge.\n\nI also found myself on all fours directly above her, my thick and waving cock angled downward between us. The mushroom head actually scraped against the bare skin of her belly just below the hem of the corset, and for the briefest of seconds I thought about sliding back about a foot, lining myself up with her puffy pink labia, and pushing myself in. For the briefest of seconds, it looked like Sam was considering it too.\n\nBut it was just a brief second, and I quickly slid back down and off the bed, thinking about the story Sam had told me about the guy who barely got her off before hovering and begging her to let him push it in. I definitely didn't want to be THAT guy, so I slid off the bed and got to my knees on the floor, bent myself over, and started licking her again.\n\nSam bucked and moaned and didn't hold back her cries of ecstasy. She lasted a good bit longer than she had the first time, crying out two separate orgasms that slowly wore her down rather than a single explosive climax like the first one. It took me a while to get her to the third peak, and I used the lessons she had taught me about scratching her g-spot with my fingers to finally get her there. Only then did she start pushing my head away while whimpering, \"No more. No more.\"\n\nThe lovely Aussie blonde lay flat on her back, spread eagle and gasping for breath. My cock was hard and throbbing and screaming for me to bury it into my lover's body, but I resisted the urge and started kissing my way along her naked skin. I started with Sam's legs, nibbled up her inner thighs until she giggled, took just one more lick at her saturated pussy, and swirled my tongue around her clit. Moving on, I tickled my way up her belly button, over the top of her corset, and started sucking on her exposed titflesh.\n\n\"Unzip me,\" Sam wheezed, and it took me a second to realize she meant the strapless corset. I quickly reached beneath her, found the zipper, and tugged it down her spine. A moment later, I pulled back on the two halves and tossed the lacy material off the bed while sitting up so I could fully admire the view. The beautiful blonde bombshell watched my eyes breathe in every inch of her naked breasts, watched me memorizing every last detail as if I could make this moment last forever. And only after taking my time to fully appreciate the magnificence of her rack did I finally bend over and shove my face into those marvelously massive melons she called boobs.\n\nI stopped there for a good five minutes, just licking and sucking and fondling to my heart's content. Having spent so much time focusing on her pleasure, I was more than happy to take my own for as long as she was willing to let me. She didn't even have to bother commenting, 'Damn you love my tits.' It had been a known fact of the universe for years already.\n\nBut eventually she tugged at my hair and directed me to climb higher. I kissed my way up her chest, along the ridge of her shoulder, and into the crook of her neck. Sam giggled and shied away from the ticklish sensation, grabbing hold of my head and finally pulling my face to hers for another kiss. And we made out like the teenaged lovers we were for another few minutes, Sam licking her own juices off my face.\n\n\"Fuck my tits,\" she said quietly when we finally broke for air.\n\nI didn't need to be asked twice. Scrambling upright, I straddled the busty blonde's chest and lay my big dick down into the valley of her cleavage. She held her own massive mammaries, squishing them together around my shaft. But she did let go for a moment to reach out and snag one of my pillows, dragging it beneath her head to prop it up so she could get a better view of my angry purple cockhead right in her face.\n\nFrom this position, she could lick it, and she did so with a smile and a laugh. She gaped her mouth open invitingly, so I pushed myself a little further forward through her puffy pillows, getting the first couple of inches past her lips before retracting and pulling back.\n\nI fucked Sam's tits and face this way for several minutes, the erotic view more stimulating than the physical pleasure. I actually wanted to get my dick a little deeper into her mouth, but her boobs were just too big and in the way, stopping my pelvis from moving forward any further. Realizing this, Sam stopped me and said, \"Climb up a bit and hold my head.\"\n\n\"What?\" I asked, momentarily confused.\n\n\"Fuck my face. I wanna see if I can deep-throat you this way.\" She gestured 'come hither' with both hands.\n\nEyebrows raised, I nevertheless did as she asked, parking my knees beyond her shoulders and taking gentle hold of her head in my hands. Sam grabbed my ass and tugged me forward, taking in inch after inch of thick dick into her mouth. Once again, it made for quite a sight, but she still couldn't quite get all of me inside. And I had to let go of her head to brace my hands on the mattress behind her, lest I lose my balance and fall forward, skewering her throat farther than she could handle.\n\nI tried to read the tension in her hands. When Sam's fingers relaxed on my ass, I retracted my cock until it was almost all the way out of her mouth. When she squeezed my buttcheeks, I let her tug me forward. Once, she had me pull all the way out, and then turned her head to the side to start coughing like a chronic smoker. I looked down and suggested we stop, but she was a girl on a mission. She caught her breath, and we tried again.\n\nWhat came next happened so fast I could barely keep up. My memory of the next few minutes is a whirlwind of thoughts, actions, and emotions that's still hard to process even now.\n\nI'd quickly realized the position simply wouldn't work. I refused to let her keep choking herself, so I swung a leg over and flopped onto a seated position beside her head. Sam started crying again, which made my heart ache. And once again I tried to soothe her and reassure her everything would be alright.\n\nShe moaned and bitched about how important it was for her to do this for me while I struggled to comprehend how this could BE so important to her. She wanted to try again and I tried to deflect her before reluctantly conceding the attempt. She sat me upright against my headboard, slightly reclined with the pillows supporting my lower back. My legs were straight and she bent over me on all fours, doing a sort of modified push-up as she raised and lowered her head up and down my upright cock. Letting gravity do a lot of the work, she closed her eyes, tried to catch her breath, and then sank down and down and down, getting ever so close to the bottom and yet never able to finish that final inch.\n\nSam just couldn't do it. Not for lack of trying, but she couldn't do it. And even forcing her gag reflex to the point of near retching wasn't going to change that, not tonight.\n\nPerhaps that's why she did what she did next. With tears in her eyes and heavy black makeup running down her cheeks, Sam sat in my lap with my aching dick trapped between our bellies. She kissed me and apologized and kissed me again while I cradled her head next to mine and hugged her to my chest, reassuring her as best I could that it was alright and that I wouldn't love her any less.\n\nAnd then without a word of warning or request, Sam elevated her body, notched my cockhead at the entrance to her pussy, and sank herself down."
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "big tits",
        "big breasts",
        "first time",
        "blowjob",
        "titfucking",
        "facial",
        "virgin",
        "18-year-old",
        "teenagers",
        "busty"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-big-tits-club-ch-05-06"
}