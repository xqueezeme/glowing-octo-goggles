{
    "title": "Mike & Karen Ch. 09",
    "pages": [
        "Disclaimer: All characters are 18 years of age or older while actively engaging in sexual activity. This story is a prequel/sequel (sprequel?) to my other work, Alex &amp; Alexa. As always, many thanks and gratuitous panty shots from Freja and Jeanie to my long-suffering editor and beta-reader for their assistance in polishing up and improving this work. Reviews are welcome; flames will be snickered at and deleted with extreme prejudice. Enjoy! \n\nPlease Note: There are incest themes with a secondary couple in this story. Just a forewarning. \n\n*** \n\nChapter IX - Invitation to an Uptown Girl \n\nKira hissed and panted as she rocked and wriggled beneath the huge blond man, his weight pressing down on her back and behind as he fucked her, his massive cock splitting her pussy wide in ways she'd never known. \n\nBeneath her, the man's gorgeous wife, a stunning bronze-haired goddess, was looking up at her, her hands placed on Kira's shoulders as they wiggled and writhed against one another. Kira's sloppy pussy was pressed against Karen's, betraying her arousal at this wicked tryst. \n\n\"You always get your way, don't you, princess?\" Mike grunted, looking down past the back of Kira's head to his beautiful wife, who smiled back up at him and nodded. \"The way it's always been, isn't it?\" \n\n\"I don't hear you objecting, good sir,\" Karen replied, winking at the black woman who ground down on top of her, their breasts squirming together. \"I think it's fair to say all three of us are getting what we need.\" \n\nKira tried to talk, though her heavy breathing made that nearly impossible. The cornrows she wore her hair in fell past her face, caressing Karen's cheeks and giving her a splendid tingle. \n\n\"I don't ...\" Karen gasped, wobbling back and forth beneath Mike, tossed like a boat in a storm by his powerful hips. \"I'm not ... just so you know, I'm not ... I'm not a lesbian ...\" \n\n\"I know, darling,\" Karen cooed, smiling. \"Small price to pay for this ride, though, isn't it?\" \n\nKira couldn't respond because she seized up, arching her back and clenching her teeth to keep from screaming as she began to cum. They both felt Mike tense up as he pulled out of Kira and pushed himself into Karen below, both of them moaning in relief as he came, pumping his seed deep inside her. The trio writhed and ground lustily until they were spent, with Kira wearily resting her head against Karen's shoulder. \n\nMike looked down at Karen, his skin shining with sweat, as was hers, and he smiled in satisfaction. Karen mouthed the words \"I love you\" to him, and he leaned down to share a loving kiss with his wife. She was his joy, his serenity, and his very reason for existing. With Karen in his life, the world had purpose and seemed ... not so small. \n\n\"Jesus,\" Kira said finally, stirring and raising her head. \"Girl could get used to that sorta treatment ...\" \n\nShe now smiled slyly down at Karen: \"So what's the charge for getting to feel your husband in my ass?\" \n\nKaren just winked at her. \n\n\"Mmmmm, I think I can live with becoming bi ...\" the black woman purred as she began kissing Karen deeply while spreading her legs wide for Mike, showing her puckered knot to him. \n\n*** \n\n\"So it doesn't bother you that mom and dad porked Kira?\" Alex asked as he drove the SUV, with his wife lounging in the passenger's seat. Alexa was wearing a light blue sundress with the skirt on the shorter side and a rather low top. The tiny straps over her shoulders deserved an award for somehow supporting her large bust, since there was no bra to be seen. Her golden hair spilled over her shoulders as she slowly shook her head. \n\n\"Not one bit,\" she replied. \"She wouldn't stop talking about Mike when we all went out dancing, so it was fairly obvious that she wanted him inside her. I know Kar was interested in trying her on for size, even though Kira isn't gay or bi.\" \n\n\"Wasn't,\" Alex corrected, turning a corner and taking them downtown. \n\nAlexa giggled: \"True. My big sissy does tend to get what she wants. I figure that if Kira gets it out of her system, she'll stop babbling about it. And hey, if she becomes a regular plaything of theirs, that's fine with me.\" \n\n\"She's from Cleveland, right?\" he asked. \n\nHis wife nodded: \"Escaped a messy marriage and divorce. Guy was always cheating on her, got caught. And when he found her with a guy, even after they separated, he lost his mind and beat her up, saying that no woman ever cheated on him. He's in the clink, but he's got friends who are crazy, so she moved north. Now she's happy here.\" \n\n\"Good on her,\" he replied readily. \"Ready for some shopping?\" Alexa needed some stylish clothes for her trip to Quebec City with Karen, so he'd quickly volunteered to drive her downtown and take her to Yorkville, which was known for the most exclusive shopping in the country, the road known as 'The Mink Mile.' \n\n\"It's kinda funny,\" she mused, smiling. \"Not so long ago, you had to take me shopping, often grudgingly, in order for us to sneak off and go make love. Now, we just go shopping, and if we want to make love, we've gotta find the time to do it.\" \n\n\"You just miss the kink of sneaking off and fucking your nephew,\" Alex chuckled. \"I think I initially fell in love with you by trying my best to forget that we were related. Not that I had a chance in any event, but I needed to try. You, I think you get off on it.\" \n\n\"Maybe a little,\" she admitted, looking over at him and winking. \"But I never had a chance either, because you're you, Alex. If you'd just been any other nephew when I moved back, I wouldn't have fallen instantly in love with you. It's not like I have some deep need to commit avunculate incest.\" \n\nShe thought about that: \"Well, I do, but only because you're you. But you know what I mean.\" \n\n\"Fortunately, yes,\" he laughed. \"Because I feel the same urge.\" \n\n\"I'm just surprised that you never had any urges about Kar,\" she said, playing with the hem of her dress. \"God knows I do. But she says you never gave any indication whatsoever. You never stole her panties or her bra, ever, never peeped on her. I mean, that's pretty standard boy stuff when they have a mother.\" \n\nAlex shrugged: \"I know objectively that mom is stunning, yeah, I get that. And God knows, I've seen her naked enough times, and they were all circumstantial or completely involuntary on my part.\" \n\n\"Yeah, I remember the hotel room in Laval,\" she snickered. \"I've never been so terrified in my life, and not because Kar was wandering around buck-naked. Hell, it's one of the few times I wasn't trying to peep on her myself. I was just hiding and dying inside by the moment.\" \n\n\"I've gotten used to it,\" he admitted. \"This seems to be the new dynamic, and I might as well be comfortable with it, right? Besides, if the prize I get for adjusting is you, well, I'd say it's worth it.\" \n\n\"Oh, I love you too, honey,\" she cooed, reaching over and caressing his cheek before fishing around in her purse and pulling out a credit card. \"Kar said to use this to shop. Is that really okay?\" \n\n\"Which bank and what colour?\" he asked, watching the road ahead. \n\n\"Royal and black.\" \n\n\"Oh, I'd say that's fine,\" he replied, smiling. \"That's a Blackwell expense card, tied to slush accounts. Only a few members of the family have the Diamond or Black cards, and mom is one of them, as the direct heir to grandpa.\" \n\n\"Still sounds weird hearing you call him grandpa,\" Alexa said, turning the card over in her hand. She'd never actually hurt for money over the course of her life, she'd lived a reasonably comfortable existence in Europe, but the finances she was exposed to now with her sister sometimes blew her mind. \"I mean, I always just referred to him as 'dad,' even though I never met him.\" \n\n\"Kinda like I never met grandma,\" Alex replied, nodding. \"And I guess that's sad, but in a way, I'm happy, y'know?\" \n\nShe smiled warmly. \"Because if mom hadn't fled to Europe so suddenly, you would've been born a year after me, and we would've grown up together and might not have fallen in love. And while I miss mom and dad, nothing is more important to me than that fact, Alex.\" \n\n\"Me either,\" he agreed readily, heading down Bayview Avenue. \"I've often wondered if we still would've fallen in love, though. Like, if we're meant to be, would we just have fallen in love when we were younger, and had to hide it for years on end, rather than attempting it over a summer?\" \n\n\"Oh, and I'm the kinkster here ...\" Alexa giggled, turning to look at her husband in her seat and resting her head on her arm. \"And all this time, you've been dreaming of us as youngsters of delicate age, sneaking off together to smear Nivea cream all over one another and then do naughty things without getting caught. I see how it is.\" \n\n\"Hey, I told you that about Nivea thing about Stacey Kain and I in confidence!\" he laughed. \"But yeah, now I wish it had been you.\" \n\n\"Well, a little roleplay never hurt anyone,\" she purred, using a finger to lower her top and expose her glorious breasts to him, knowing that he wouldn't dare look, because the road was very busy. She felt like teasing him all the same. \"We could play that out sometime, after all.\" \n\n\"Alexa, you're making my brain sweat ...\" Alex muttered, wiping at his brow. \n\n\"Mmmmmmm, I'll bet I am, big boy,\" she said slyly, tracing a single finger around one of her nipples, her sapphire eyes glinting with mirth. \"Pity you're driving, because I could really stand to have one of these girls sucked on right now ...\" \n\nShe decided to provide an example and lifted her breast to her lips and swirled her tongue slowly around the hardening pink bud. \"Mmmmmmm ...\" \n\n\"If you keep that up, I'm gonna pull over to the curb, drag you out of this car, bend you over and fuck you on it ...\" Alex warned, feeling the front of his pants tightening. \n\n\"Promises, promises,\" Alexa said back, sucking the nipple into her mouth now. \n\nThen she felt the vehicle easing over to the right. She paused and looked up. \"What ...\" \n\nAlex brought the vehicle to a stop and turned on the blinkers. Cars kept whipping by and Alexa's eyes widened as he unbuckled himself and turned to reach for her. \n\n\"Eep ...\" was all she managed to get out before his arms were around her ... \n\n*** \n\nJeanie exhaled loudly as she finished the shot, putting the tiny glass back down on the dining room table with a 'clunk!' She looked intently at her wife, sitting across the table from her and blushing. Freja was wearing a bra and panties, while Jeanie was wearing a cropped white tank top that ended just below her breasts and a tiny purple thong. Her kinked brown hair flowed around her shoulders. \n\n\"Your turn ...\" the brunette said quietly. \n\nFreja looked deeply nervous as she stared down at the table - ten empty shot glasses rested on her side of the table, nothing but mere droplets of the strong-smelling brown drink they were sharing left in them. She could feel her heart thumping in her chest, and her palms were sweaty. She felt an unusual warm pang or sickness in her stomach. \n\nWhy? Because it was Jeanie? \n\n\"I ...\" she faltered, trying not to blush crimson. \"I once forced myself on a girl. We were quite young, and she said no, but I continued, because I did not yet understand how important 'stop' was. And it does not matter that we became lovers after that, or that I apologized; I still forced myself on her.\" \n\nJeanie looked at her levelly: \"Did she forgive you?\" \n\nFreja kept looking at the table and nodded. \n\n\"I forgive you too, Fre,\" the brunette said warmly, smiling at the woman she loved so much. \"Now drink up.\" \n\nFreja sighed and took hold of her shot glass. She stared at the pungent drink and tilted her head back, pouring the offering down her throat. She made a wry face as she swallowed and shivered before sighing and looking at Jeanie. \"Still love me?\"  \n\n\"More than ever,\" the brown-eyed girl assured her. \"So, ummmm ... I got mad at my younger cousin once and I fucked one of her Barbie dolls - like, shoved the whole damn thing inside me and greased it good. She never figured out why it smelled funny or was sticky. Worse yet, my aunt and uncle thought she'd done it to the doll and gave her hide a good tanning.\" \n\nShe took up another shot glass and drained the contents, looking intently at Freja as she put it down. \n\nFreja hesitated, blushing more. \"I ... was filmed in a fountain in Budapest, getting fucked by many men ... many men. And they all came on me as I knelt in the fountain.\" \n\n\"Oh, wow, Fre ...\" she breathed, gazing at the Danish girl, who hung her head in shame. She was pretty damn certain this could be something that turned Jeanie cold to her. \n\n\"We have got to try that together ...\" Jeanie said readily, her eyes twinkling with amusement. \"Go, drink, drink, it's my turn ...\" \n\nFreja sighed, nodded, and belted back another shot, exhaling and then burping loudly, her fist in front of her mouth. She shook her head a little and then looked back at her wife, waiting intently. \n\nJeanie blushed slightly. \"I broke up a marriage,\" she murmured quietly, the memory and the shame she'd felt coming back to her. \"I was young, and I didn't care; I just wanted to fuck the guy. I did get to, and he went cold on me. So, I got angry and seduced his wife, and he walked in on us. There was a huge fight, and I got the Hell out of there while they tried to maul one another. I ... they got arrested for domestic violence, both of them, and they got jail time and divorced while they were behind bars. My name was never mentioned by either of them, because I was still a minor, and they didn't want those charges on top of everything else ...\" \n\n\"What ... happened to them?\" Freja asked. \n\nJeanie shrugged as she stared at the empty shot glasses. \"I know she went to a women's detention center, because she just about caved his head in with a bat, and he got sent to some place in Alberta for violent offenders. After that, I don't know.\" \n\nShe looked at Freja now, her eyes turning bleary as she struggled not to cry. \"It was a happy marriage, Fre. But I didn't care, I wanted to fuck him. It was my fault entirely. And now there's no way to make up for it.\" \n\nFreja made her way around the table and plunked down heavily in the third chair near Jeanie and hugged her tight. Jeanie sniffled, but managed to not cry. \n\n\"It is as you said, my love,\" Freja said softly, her eyes closed. \"There may be no way to make it right at this time. But entirely your fault? No, yndling, not entirely. You did not force them to have sex with you; they both made a choice. A bad one. You only hold one third of the blame ...\" \n\n\"That's still a whole universe of blame ...\" Jeanie choked out bitterly, hating the tears on her cheeks. \n\n\"Perhaps,\" Freja cooed, stroking her shoulder gently. \"But you have a lifetime to find ways to make up for it. Maybe not to them directly, but in other ways. Oh, what is your English term? It's ... pay it forward?\" \n\nJeanie pulled back from the hug and looked at her wife, her eyes stinging with her tears. But she saw love and acceptance there and could barely believe it. \n\nMaybe there was hope for her? \n\nShe turned and downed the shot in front of her, resting the glass on the table. Then she exhaled and looked at Freja steadily: \"Your turn.\" \n\nFreja smiled weakly and now her eyes were tearing up. \"I am thinking we should not continue, my love.\" \n\n\"But why?\" \n\n\"Because my next confession, it is the one that without fail drive you away from me, I am fearing,\" Freja replied, her voice trembling. \n\nJeanie looked at her steadily and her voice was firm. \"Now you have to tell me, Fre.\" \n\nTears began trickling down Freja's cheeks and she closed her eyes and leaned in, whispering in her soon-to-be-lost beloved's ear. Jeanie's eyes went wide, and she felt her wife's head press against her shoulder as she began crying. It was nearly a minute before Jeanie could say anything. Her hands sat on her lap, as if she'd forgotten to hug Freja, or couldn't. \n\n\"They offered me money, and I needed it,\" wept the Danish girl. \"I was still young, Jeanie, I -\" \n\nSlowly, almost mechanically, Jeanie's hands found Freja's arms and took them gently. She moved Freja away from her shoulder and looked her in the eye. Freja quailed inwardly; she'd been held like this before - the hands on the biceps, locked in place to keep her from getting closer. The look in the eye, one that was full of resolution. \n\nShe'd lost dear friends exactly like this before. And it hurt so much, because it was always something she'd done. They'd always been justified in walking away from her. \n\n\"Freja Adama Kjaer ...\" Jeanie said in a very quiet voice. \n\nFreja's trembling was almost shaking now as she awaited the dreadful words. \n\n\"Next time, if there is a next time, it will be both of us.\" Jeanie whispered in the most tender voice imaginable. \n\nThe Danish girl's eyes flicked open and her mouth dropped in shock. Before she could say or do anything, Jeanie had crushed her lips against her wife and was kissing her deeply, lovingly, and without any hesitation. Even though their kiss, Freja was sobbing, the tears flowing faster down her cheeks. \n\nJeanie ended the kiss and held her wife by her cheeks gently, letting her cry, while she blinked away her own tears and controlled her sniffling. \n\n\"You're always there for me when I'm crying and giving me such loving and encouraging words,\" she rasped, swallowing. \"My turn for you, Fre. It doesn't matter to me what they paid you to do that. I don't care if you were young and stupid. Hell, I wouldn't care if you'd done it for free and just for kicks.\" \n\n\"H- how?\" Freja stammered. She still couldn't believe what she was hearing. The only other person who knew was Alexa. \n\n\"I don't care about your past, Fre,\" Jeanie said, shaking her head for emphasis. \"It may seem shameless to other people, but it made you who you are, and I love you just the way you are. If you hadn't had that past, you might be a different person, and I don't know if I'd be in love with that person. I can't know.\" \n\nFreja sniffled and listened. She thought her heart would burst, although she couldn't say exactly why. \n\n\"I don't care how many dicks this mouth has sucked,\" Jeanie stated, caressing Freja's lips before tracing her fingers down under her bra and fondling her breast. \"I don't care how many men have cum on these tits.\" \n\nFreja sucked in her breath as Jeanie reached into her panties and slid two fingers deep inside her pussy. \n\n\"And I don't care who or what has been in this cunt,\" she said very firmly, stroking back and forth inside her wife, making her shudder. \"You are mine, Freja. You love me in spite of what a shameless whore I am, what I've been. And we've agreed that we're going to go on being shameless whores. But together. What does a past I wasn't there for matter to me?\" \n\n\"You ... you do not care that I -\" \n\n\"No. No I don't,\" Jeanie said, shaking her head, her brown tresses spilling everywhere. \"I expect you to keep telling me everything, Fre, because to be honest, it almost always turns me on. And I'll find the courage to keep telling you, too.\" \n\nFreja reached a hand up and cupped Jeanie's cheek with it, as they stared into one another's eyes. How could this beautiful girl love her so much? \n\nOne of Jeanie's hands reached over the table and came back with Freja's shot glass. She pressed it to her lover's lips and Freja slurped the contents back before leaning in and kissing Jeanie hard. They kissed one another hungrily as the brown liquid sloshed back and forth between their tongues and dribbled down over their breasts. They didn't care. They were in love. ",
        "The pulled back from the kiss and both exhaled loudly, sweating. \n\n\"Wah ...\" Jeanie breathed. \n\n\"I am thinking we should stop with the shots, ja?\" Freja suggested. \n\n\"Not like we have a choice,\" Jeanie sighed, picking up a two-litre plastic bottle and shaking it upside down over her shot glass. \"We're outta root beer anyway. I knew that slut confessions between us would require at least ten litres.\" \n\n\"These confessions, they might have been easier if we had used alcohol, I am thinking,\" Freja mentioned. \n\nJeanie shrugged: \"Maybe, but I didn't want that. I wanted to hear your sober confessions when it hurt, Fre. And I wanted to be sober when I told you that I loved you even more than when we began the confessions, no alcohol clouding my feelings.\" \n\nShe leaned in close, her lips almost touching Freja's, the sweet scent of the drink on their breath: \"And I was right. I love you more than ever.\" \n\n\"I am glad, because I am loving you more too,\" Freja replied, kissing Jeanie and trembling in relief. Then she squirmed somewhat uncomfortably. \"But I have drunk too much of your root beer, and now I am needings to pee.\" \n\n\"Okie-dokes!\" Jeanie said cheerfully, shucking her tank-top off so that her breasts wobbled freely. \"You go, I'm gonna watch, then I'm gonna take you in the bedroom and let you fuck me in half!\" \n\nFreja smiled slyly: \"I like it when you watch me. And I love fucking you in half.\" \n\nHand in hand, they walked through their condo toward the bedroom and their bathroom, both managing to shed any remaining clothing along the way. \n\n\"D'you think we can do the fountain thing together?\" Jeanie asked. \n\n\"With you, I would do that for free,\" Freja replied, squeezing her wife's hand. \n\n\"How about the last thing you told me?\" \n\n\"We ... will talk,\" Freja laughed as she closed the door to the bathroom. \n\n*** \n\n1986 ... \n\nIt was a somewhat strange transformation, she had to admit - this posh neighbourhood, full of luxury retail, upscale condos and expensive hotels, had once been the bohemian and hippie capital of Toronto, indeed Canada. Yorkville had certainly changed over the decades, although Karen was only familiar with this iteration of the location. \n\nShe remembered her mother talking about how she'd spent time in Yorkville in the '60s, when it was a neighbourhood for bohemians, hippies and revolutionaries, considered a blight or an eyesore on the respectable reputation of 'Toronto the Good.' Then again, her mother mentioned that she got to hang out with legendary artists such as Joni Mitchell, Neil Young, Leonard Cohen, Gordon Lightfoot and Margaret Atwood, so who cared what the city's councillors thought? \n\nHer father didn't approve of most of her mother's hippie shenanigans, but they loved one another beyond question. The dynamic of raising their daughter certainly proved interesting. Karen's upbringing was framed in patrician terms, but she also displayed her mother's willful defiance and individualism. Her personal conduct aside, she was decidedly progressive in her social outlook, much to the dismay of the majority of the Blackwell and Gordon families, especially the former. \n\nShe didn't care. She was bisexual, and if anybody felt they were entitled to know her proclivities, they were met with imperious silence. She suspected her mother might have had an experimental sexual phase before marrying, but they'd never discussed it either. What mattered was that her mother encouraged her to be herself. Who she allowed in her bed was her business. \n\nMiranda Gordon had, in fact, paid for what amounted more or less to courtesan classes for her daughter, where she learned manners, elegance, and how to conduct herself in just about any circles she might find herself in and still be a model of dignity and elegance. These lessons also included the option of how to learn to be a superb lover, and Karen had picked these lessons up willingly. \n\nDisdaining the patriarchal notion that her worth was tied to her virginity, she placed no value on losing it either. Frankly, she wanted to be a ready and capable lover for whatever man (or woman) finally captured her heart. She'd lost her maidenhood to two teachers at boarding school and had been practicing ever since. \n\nOf course, she had no intention of being a kept wife, a trophy or any such thing. She was no Jacqueline Bouvier, raised to be a perfect and obedient bride to some great man. No, she was no Stepford Wife, but she intended to dazzle society and to keep her spouse's heart with her exquisite skills in the bedroom. \n\nNow she just had to find someone worthy of her. \n\nThe day was bright and pleasant as she stood outside the store window, considering a pair of shoes. She was wearing a black dress with white floral prints, the upper part of which hugged her curves while the skirt fluttered playfully around her thighs. A stylish broad-brimmed hat protected her face from the sun's rays on the broad boulevard. The small black purse she carried complemented her dress, naturally. \n\nShe'd had Jordan drop her off in Yorkville so that she could spend an afternoon out, instead of slaving over her studies. She was so far ahead that it was simply overkill to do any more at this point, and it seemed rather neurotic to her. So many students obsessed over their courses, even if they were acing them, as if distraction of any sort were grounds for karmic punishment. \n\nSo she found herself here, in the midst of the most splendid shopping district in all of Canada, and realized that she'd actually come here without any objective in mind. She couldn't think of anything she immediately needed; she had shoes, certainly. Dresses, most definitely. Purses? Lingerie? \n\nShe should have brought one of her friends so that she had someone to play dress-up with. Mona usually balked, citing that she wouldn't take 'charity,' whatever that meant, so Karen insisted only rarely. Janet was usually game, but because of her personality and presentation, which Karen could only describe as, well, lazy, she rarely looked good in anything Karen put on her. Lisa, along those lines, was so timid that even if Karen found something that suited her roommate, she couldn't pull it off because she was usually so withdrawn or nervous. \n\nKaren just sighed and stared into the show window, wondering if she'd wasted a trip. \n\nJust before she sensed a presence somewhere nearby. \n\nShe turned her head and smirked as DeBourne strode down the street, distracted by a book he was reading. The textbook looked like a kid's comic dime novel in his huge hand, and people stared at him, parting like the Red Sea in front of his bulk. He hadn't noticed her yet, engrossed as he was in his subject matter, no doubt Calabi-Yau Manifolds or some such thing. \n\n\"Where's the fire, Gargantua?\" she asked, her voice pulling him instantly from his book. She turned to gaze up at him as he stopped, an amused look on her face, her hand resting on her hip. \"Not like you to not be aware of your surroundings.\" \n\n\"Well now, if it isn't Uptown Girl,\" he replied, nodding and closing his book to deposit in his backpack. He just carried it in his hands wherever he went, because it wasn't nearly big enough to fit across his vast shoulders, and any backpack that was big enough qualified as definite overkill for the course loads. \"In your natural habitat, I see.\" \n\n\"Oh, be nice,\" she chided, patting him with a gloved hand. \"And it was ungallant of you to not answer a lady's question, good sir.\" \n\nHe shrugged: \"Just heading to the museum. New specimen in the dinosaur exhibit, not to mention the Egyptian wing.\" \n\nShe thought about what he said. \"The Museum's around here?\" \n\n\"Yeah, it's ... about a mile thataways,\" he answered, pointed west, the direction he'd been heading. \"It's not far from campus, Gordon. How do you not know that?\" \n\nShe blushed somewhat: \"A girl can't know where everything is, can she?\" \n\nHe thought about what she was saying for a moment and then began grinning in amusement. \"What's the closest subway station to where we are, right this second?\" \n\n\"That's easy,\" she sniffed. \"Davisville.\" \n\n\"Nope.\" \n\n\"York Mills, I meant.\" Karen corrected. \n\n\"Not even close, Gordon,\" Mike chuckled. \n\n\"Runnymede!\" she almost hissed, her cheeks turning slightly scarlet. \n\n\"Now you're just naming stations you associate with historical events,\" he laughed. \"How did you get here?\" he queried. \n\nShe turned her head and looked at the ground, hoping the brim of her hat hid her embarrassment. \"My ... Jordan drove me here.\" \n\n\"From your dorm?\" he laughed, clearly greatly amused. \"Gordon, the Royal Ontario Museum literally anchors the northeast corner of the campus. You're precisely one mile from your own dorm.\" \n\n\"So?\" she said petulantly, still not looking up. \n\n\"Do you not know how to use the public transportation system?\" he asked. \n\nShe said nothing, scowling at the sidewalk. \n\n\"Oh, princess,\" he sighed, shaking his head. \"That's downright adorable. Don't worry, I won't tell anyone.\" \n\n\"Well, thank you for that,\" she said dryly, fixing him with a look. It would have intimidated anyone else, but there was a distinct possibility it wouldn't reach his face for another week or so. \"My TTC-dyslexia isn't keeping you from your extracurriculars, is it?\" \n\nMike shrugged again. \"I was just killing time. I wasn't married to the idea; I just wanted to get out of the dorms, to be honest.\" \n\nShe assessed him for a few moments, looking up and down his enormous frame. He was wearing what must have been at least a 5XL T-shirt, but it barely fit across his massive chest, sporting a Mot\u00f6rhead logo. The faded jeans he was wearing bulged over his powerful quads and calves (and other, less mentionable areas). Beat-up sneakers contained his absurdly sized feet. \n\n\"What?\" he asked suspiciously, seeing the wheels in her head turning. \n\n\"You, sir, are to sartorial elegance what napalm is to shrubbery,\" Karen mused, regarding his shirt. \n\n\"Are you sassing me?\" he asked, still suspecting her motives. \"Are them fighting words?\" \n\n\"Fortunately for you, no,\" she replied simply. She was probably right. \"I forgot to bring anyone with me to accommodate my need for applied haberdashery. I didn't think ahead when I chose to come to Yorkville.\" \n\n\"That's a very strange way to say 'None of what is happening concerns you, Michael DeBourne,'\" he stated. \"Is there a point here?\" \n\n\"Absolutely,\" she confirmed. \"Here I was, in a predicament, and you happened by. Providence? Without question.\" \n\n\"What's the predicament?\" he asked, getting impatient. \"Do you need me to escort you to one of the subway stations and show you how to use a token?\" \n\n\"Very droll,\" Karen said, clucking her tongue. \"No, I should have brought one of my girls with me, so that I could buy some dresses, but I failed in that regard. Now, here you are.\" \n\n\"I am not wearing a dress for you, crazy lady.\" Mike said firmly. \n\n\"Don't be silly,\" she giggled. \"You're actually a dream come true.\" \n\n\"Thanks?\" \n\n\"You're welcome. What I meant was that I can take you to a men's store, and we can see if they have the skill to make a suit that will accommodate your Brobdingnagian frame.\" \n\nHe frowned: \"Why would I agree to this?\" \n\n\"You already said you're not doing anything of import,\" Karen pointed out. \"And it would be interesting to see if anyone is up to the task.\" \n\n\"What if I don't feel like being a lab rat for you and your Savile Row Rembrandts?\" Mike almost growled. \n\n\"Do you even own a suit, DeBourne?\" she queried, not backing down. \n\nHe faltered, although he didn't know why. \"I ... no.\" \n\n\"I'll go out on a limb and say that no one in the mighty metropolis of Kapuskasing was up to the task, yes?\" \n\nNow Mike was the one scowling at the ground. \"So what?\" \n\nShe sighed and patted him again. \"I am not trying to sound classist, good sir, but every man should own a decent suit. It wouldn't do to have one of our most accomplished minds at the university excluded from important functions because no one was able to properly outfit him, would it?\" \n\n\"Look, Gordon,\" he said irritably. \"Even if your thread monkeys did manage to make a suit for me, how the Hell am I supposed to pay for it? I can't. Simple. And you don't expect them to spend valuable dialectical hours slaving away on an experiment just for show, do you?\" \n\nShe rolled her eyes: \"No, I'd buy it, of course.\" \n\n\"Yeah, no,\" Mike announced. \"Not to rain on your parade, but no.\" \n\n\"Why?\" \n\n\"I can't just accept expensive suits from people,\" he protested. \"No matter how warped their personal genius makes them.\" \n\n\"Is it because I'm a woman?\" Karen asked. \n\n\"No, but being a woman is the only thing that has kept me from turning your nose to the other side of your face for presuming.\" Mike said somewhat tersely, a voice he regretted using on her. He couldn't believe he'd done it, but she was out of line. \"I'd've knocked a guy out by now.\" \n\nKaren ignored the implications, in spite of the chill it sent down her spine. He'd never strike her, or even threaten her, but it reminded her exactly how dangerous this leviathan was. \"DeBourne, as I've already stated, this is something akin to providence. I came to Yorkville lacking purpose, and you've provided me with a great one. Why object?\" \n\n\"Gordon, finding yourself stuck in a posh shopping district without knowing what to buy hardly qualifies as a life crisis requiring intervention by the Almighty,\" he insisted. Why was he considering this? \"And I'm not a charity case for you in any event.\" \n\nShe sighed, ready to explain again: \"You happened to show up. It could have been anyone I knew. I'm also reasonably certain that anyone else would not be putting up such a fight. Why are you being such a hard-ass about this?\" \n\nThe normally proper and respectable Karen Gordon using the rather vulgar and pedestrian term 'hard-ass' snapped Michael out of his oppositional state. As exceedingly strange as this moment was, he was having a hard time justifying his protest to her plan. In her place, with her resources, he would have been doing the same thing constantly, and would have been baffled when people objected. \n\n\"Fine, look,\" he said eventually. \"Let's say I acquiesce to your little scheme here ... how do I reciprocate? Because I guarantee you, this plan of yours is going nowhere without that aspect being resolved.\" \n\nKaren considered: \"Well, if it's still open, take me with you to the museum.\" \n\nMike blinked for a moment and she gave him a wry look. \"What, I can't like dinosaurs because I'm a girl?\" she asked. \"And I happen to be partial to Egyptian history, thank you very much.\" \n\n\"Okay, deal,\" he agreed. \"But what did you mean if the museum is still open? It's only eleven in the morning. How long can it take to fit a damn suit?\" \n\nShe smiled and shook her head. \"Nobody makes suits in your size, Atlas. They'll need to measure you and then begin forging it. I have no idea if the museum will still be open when they're finished.\" \n\n\"You mean this could be an all-day thing?\" he exclaimed. \n\n\"Whose fault is it, exactly, that you displace more water than a whole Maritimes fishing village?\" Karen reasoned. \"It may take some time. I promise, an afternoon of exposure will not turn you into the haut monde you seem to be so offended by. And if the museum is closed, well, then you can buy me a drink, peasant.\" \n\nMike shook his head, even as she put her hands around his massive forearm and cast her gaze around. \"Now then,\" she mused. \"Who would be up to the challenge? Harry Rosen? Emporio Armani?\" \n\nHis head turned to look down at her. \"Did you just say Armani? Don't those suits cost a couple of grand?\" \n\n\"One would hope,\" Karen replied casually. \"You get what you pay for, after all.\" \n\n\"God save us all ...\" Mike muttered as she tugged him toward a store just down the way. \n\n*** \n\n\"Lemme get this straight,\" Alex asked as he worked out alongside his father at the gym they attended. He was using the pectoral machine, pushing out a considerable amount of resistance. \"Mom bought you your first adult suit?\" \n\n\"Not like I was given much of a choice,\" Mike replied, lying on his back and lifting the entire available weight of the press machine. One woman tripped over a dumbbell as she stared while walking by. \"She has this incredible gift for bafflegab that subverts one's will to hers without you truly realizing it had happened. She almost makes it look like you had a choice in the matter.\" \n\nAlex considered and shrugged. \"If Alexa ever wants to make sure I do something, she just uses her cutesy voice and rubs her boobs on my arm while she does it. Guess it's a genetic thing with the Gordon-Blackwell women.\" \n\n\"You have no idea,\" Mike sighed, sitting up and stretching his arms over his head. \"Pity it won't work for them next week.\" \n\n\"Yeah, they're gonna be in for it,\" Alex admitted, letting the weights clank back into place and standing up, rotating his shoulders. \"Is it really okay to not go as backup?\" \n\n\"We don't have to like it, we just have to accept that it's how your mother wants to handle it,\" Mike replied, standing now. \"And I get it, because if we keep acting as her goon squad, they'll always see it as weakness on her part. We know it's not true, but that'll be the narrative they play to keep going after her.\" \n\n\"Pisses me off,\" Alex growled, his expression darkening considerably. \"She's trying to hold the family and the legacy together, and those jackals are just in it for the money and power trip.\" \n\n\"Well, Alli is her secret weapon this time around, so they won't be ready for that,\" Mike mentioned. \"They know she's coming, but I somehow doubt your mother will allow this first meeting to be at all typical.\" \n\n\"Sounds like mom,\" Alex said dryly, towelling off his blond mane. \"Still wish we were going.\" \n\nMike stood and shrugged, now towering over everyone in the gym. Even the more muscular men looked like stunted saplings next to him, not that he either noticed or cared. \"Well, we're not, so don't dwell on it, bucko. Got any plans for you and your wife before they leave?\" \n\nAlex nodded: \"Yeah, amongst other things, I'm gonna take her back to the glade for a romantic interlude.\" \n\nMike grinned: \"Good call, Alex; she'll love that.\" \n\n\"What about you and mom?\" the younger DeBourne asked as they headed toward the sauna. Neither remarked on the stares they were drawing, tacitly ignoring them. It was old hat by this point. \n\n\"Oh, dinner out at her favourite club, then some dancing,\" Mike replied as they got to the cedar room, uninhabited except for the two of them. \"A classy establishment is never classier than when your mother is gracing it with her presence.\" \n\n\"True enough,\" Alex admitted readily as he settled down on the top row of seating. \"When she's not wearing plaid pants and singing karaoke with you, she's got a lock on regal, doesn't she?\" \n\n\"That was her upbringing, yes,\" Mike agreed, as he sat on the lower level of seating, at the corner, which supported his weight, but still creaked in protest. \"She was meant to move in the very highest circles when necessary. She went through extensive manners training from the time she was little until she headed off to university. Tea with Her Majesty the Queen wouldn't be a challenge for her.\" \n\n\"Good thing she's got nerves of steel for this week,\" Alex sighed. \"I know Alexa will do everything she can, and has her own part to play, but not having you there is gonna be tough on mom.\" \n\n\"She's the strongest person I know, Alex, never forget that,\" Mike said seriously, stretching out his massive arms over the upper ledge. \"She's held that family together for nearly twenty years now, ever since your grandfather started having his breakdown and the wolves closed in.\" ",
        "\"She oughta look forty years older than she does, then,\" mused his son. \"Full-time internationally respected physicist and university professor, raised my pain-in-the-ass ass up, and fought off the Blackwells. I dunno how she does it.\" \n\n\"She does it because she loves that family, even if most of them don't deserve it,\" Mike replied, staring at the far wall. \"And I'm privileged enough to be her support and bulwark. I'm the luckiest SOB to ever come out of Kapuskasing.\" \n\n\"Yeah ...\" Alex said somewhat absently, doing his own staring at the window of the sauna's door. \n\n\"What're you so lost in thought about?\" Mike queried, smirking at his son. \n\n\"I guess I've spent just about all my time with Alexa now, since she arrived, with the exception of those three days it took us to find her again. Now she's gone for a week. I mean, I know she'll be fine and everything, but I'm still gonna be kinda lost without her, you know?\" \n\n\"I don't blame you one bit,\" Mike agreed. \"Am I right in assuming that Sodom and Gomorrah are under instructions from your wife to look after you in her absence?\" \n\n\"Yeah,\" Alex chuckled, smiling. \"And that'll no doubt keep me occupied, but I'll still miss her more than I can say.\" \n\n\"Well, that's the way it should be,\" Mike reasoned. \"Alli'd be right to be insulted if you weren't pining away in some meaningful capacity, even if she's got her minions crawling all over you.\" \n\n\"That's fair,\" allowed the younger man. \"Mom still keen on getting pregnant?\" \n\n\"Absolutely,\" Mike answered, nodding. \"She misses raising a child. It's very important to who she is, and she had to more or less hand you off to Alli.\" \n\n\"D'you miss it?\" \n\n\"Raising a child?\" Mike mused, looking at his son. \"Your mother raised you, I trained you. And that's never going to stop happening. You've got big shoes to fill, Alex, and you're infinitely capable of it. But going it alone and without guidance is not something I will let happen. Without sounding imperious, do as I tell you, and you can't go wrong.\" \n\n\"I know, dad,\" Alex said, grinning. \"Best head start on adulthood ever. Guess we'd best plan our free time this week out, eh?\" \n\n\"Now that you mention it ...\" Mike said, standing up and heading to the door. \n\n*** \n\n\"So, do you like it?\" Alexa asked, twirling around in her little blue dress they'd bought down in Yorkville. It was a silly question, since she'd modelled it for him at least three times now, not including the initial time just before they bought it. It hugged her bust close, displaying magnificent cleavage, and then followed her curves sensuously until it tapered off at mid-thigh. \n\n\"You know I love it on you,\" Alex said readily, sitting on their bed and nodding in appreciation. \"It helps that they adjusted it for you, because while you could make off-the-rack look amazing, this is made for you specifically, and it's light-years ahead of anything else.\" \n\nAlexa beamed gratefully. She always took everything Alex said to heart, and it filled her with a bubbling glee. \"D'you ... d'you think Kar will like it?\" \n\nAlex laughed and nodded: \"Alexa, mom's got a better eye for high fashion than anyone I know of. She'll love it.\" \n\n\"I knowwwwwww, but she's gonna look so regal and elegant, because that's who she is,\" Alexa almost whined, looking slightly nervous. \"How do I compete with that? Best I'm pulling off is bombshell sexpot.\" \n\n\"Who says you need to compete at all?\" Alex reasoned, shrugging. \"Maybe it's the perfect complement to however mom looks, right? You're gonna turn heads no matter where you go; who says you have to look the same?\" \n\nAlexa sighed and nodded, composing herself. \"I know, and you're right. I just ...\" \n\nShe came and sat down next to her husband and took his hand, smiling wanly. \"I know you're not used to seeing me getting all self-conscious and stuff, but I really do where Kar and Mike are involved. I ...\" \n\nShe paused and Alex turned in to face her and stroked her cheek. \"Just say whatever, Alexa. You're not gonna be any less perfect to me when you're done.\" \n\nShe smiled and continued, appreciating his sentiment. \"When mom left for Europe, Kar and Mike had both just turned about thirty, right?\" \n\nAlex nodded. \n\n\"Well, they were still absolutely in their physical primes at that point,\" she explained. \"And while mom didn't have a lot of pictures and albums to show me, because we left with virtually nothing, the ones she did bring with her were like sacred texts to me. Here was this goddess, my sister, beautiful beyond words, and this enormous thunder god she was married to, like something out of a Marvel comic. For just over eighteen years, those were my only references about my sister.\" \n\nAlex considered: \"That would be intimidating, yeah.\" \n\n\"And mom showed me these pictures, and spent countless hours describing everything in detail, and I was so in awe of them. I ... worried I couldn't possibly measure up. I was so enchanted by her.\" \n\n\"Not dad?\" \n\n\"Well, that's different,\" Alexa admitted. \"He just flat-out intimidates me, mostly. But the way mom talked about him, and how desperately in love Kar and Mike were, I never really developed any attraction to him that way. It's weird, maybe, but that's the truth.\" \n\n\"But mom turned you on.\" Alex prodded, smirking. \n\nHis wife blushed: \"I ... oh, damn you, yes,\" she muttered. \"Yes, Kar totally turned me on, even though I worshipped her like a goddess. There were pics in the albums of her in her tiny bikinis at the beach, and - oh, Alex, you're such a dolt for not being turned on by her.\" \n\n\"Sorry!\" he laughed but continued listening. This was important to her. \n\n\"And yeah, I admit, she was one of my masturbation fantasies,\" Alexa murmured, blushing. \"Not in an incestuous way, really, but her body, Alex, it just made me so damn horny. Even when I was younger, I'd kneel on my bed, stick a pillow between my legs and ride it until I came like a leaky faucet while drooling over her bikini pics.\" \n\n\"Sounds reasonable when you say it that way,\" Alex reasoned. \"I'm sure there's some sorta Freudian psycho-sublimated sexual thing in there, but I don't care. The photos made you horny. Go on.\" \n\n\"I never had any clue if I'd ever meet her; I mean, I was resigned to living away from my family I never knew,\" she said, looking at her hands. \"So maybe I felt like it was a safe fantasy, y'know? Even Fre masturbated with me over her pics, although she also got herself off to photos of your dad, the perv.\" \n\n\"Moving right along ...\" Alex said dryly, making her giggle. \n\n\"Well, I'm here now, and ... Mike still intimidates me, and Kar still turns me on, y'know? And I -\" \n\n\"Alexa,\" he interrupted uncharacteristically, taking her hands in his and looking into her eyes. \"Whatever happens, don't leave me for mom, okay?\" \n\nThe absurdity of the statement made her pause, but the somewhat distant, misty look in her eyes cleared up and she smiled and giggled cutely. \n\n\"I think I can make that promise, big man,\" she cooed, leaning in close and running her fingers through his thick mane of blond hair, caressing his scalp. \"You sure you're not gonna tell me what you have planned for our final night before Kar and I leave?\" \n\n\"Nope,\" he said, shaking his head. \"Not tellin', but I know you'll like it. I don't suppose you've thought about what you wanna do today? You were supposed to choose something, since mom and dad made a point of being gone until late tonight.\" \n\nShe smiled at him slyly. \"I ... have a little proposition in mind.\" \n\n\"Oh? Do tell.\" \n\n\"Well, you have that amazing camera, y'know, the one that takes incredible pictures and can also do video.\" \n\nHe nodded. \n\n\"This may sound a little funny at first, but ... I want you to spend the rest of the day doing a sort of private photo and video shoot of me, Alex.\" \n\nAlex considered but tilted his head. \"You are constantly taking pics of everything, us included. And it's hardly unusual for me to be taking photos of you, either. It's one of my favourite things, in fact.\" \n\nAlexa blushed again: \"Yes, but ... Alex, I want you to take very, very private photos and videos of me behaving incredibly badly for you.\" \n\nHe thought about what she was saying. \"Like what?\" \n\nShe had to struggle to find her voice, and she was blushing almost crimson. Clearly this was a big deal for her. \"I want to get into the most exposed, vulnerable and compromising positions for you, and have you take pictures and videos of me in those raw moments, Alex. There's a thrill, and a terror, to exposing yourself that way, for someone you love.\" \n\n\"So, like, incredibly private videos that even Fre and Jeanie wouldn't see?\" he asked. \n\nShe nodded readily, but was still blushing. \"Me pulling my pussy wide for you, me fucking a bedpost for you. I need to be depraved and indecent for you, privately, and then know that you recorded it all, Alex. For me, as a woman, there's something to that concept that just ... it's baring my soul in a sense, I guess. I want it with you.\" \n\nHe smiled slyly: \"You've done this before, haven't you?\" \n\nAlex looked at the floor, her cheeks scarlet. \n\n\"With Fre?\" \n\nThe nod was almost imperceptible. \n\n\"Well, if you've done it once already, I'm gonna have to work hard to get even more out of you, aren't I?\" he announced, nodding readily. \"Okay, naughty wife, you've got a deal.\" \n\nAlexa's eyes widened for a moment and then she nodded too, biting her lip. \"All day?\" \n\n\"Until the last possible moment before the kids get home,\" Alex laughed. \"I'll make sure dad knows to message us when they're fifteen minutes out.\" \n\n\"Thank you, Alex,\" she sighed, trembling as she leaned in and hugged him close. \"Because you'll never regret letting me do this ...\" \n\n*** \n\n1986: A shop in Yorkville ... \n\nKaren sat in a comfortable chair, one leg crossed over the other, her elbow resting on her knee and her chin on her finger as she smirked at the scene unfolding in front of her. Some feet away, in the back of this small but prestigious haberdashery, two junior tailors were practically having to climb all over Michael DeBourne to take his measurements. One had been forced to head to the supply room at least twice now, to get a stepladder and longer tape measures, since none had fit around his massive chest. His absurdly large quadriceps were also proving challenging. \n\nThe huge student stood there in his boxers, with his arms held up and out to the sides. His fingertips almost touched the walls at each end of the small room. She hid her wonderment at how broad and chiseled his shoulders were. She may have looked like she was just slowly moving her knee as a matter of course, but the truth was that looking at his titan, muscular body was very stimulating, and she was controlling a growing wetness between her legs. \n\nLisa was getting absolutely raped tonight when Karen got back to their dorm room. \n\nAs the two men crawled around him like ants, Mike looked over at Karen, his expression one of bemusement. \n\n\"Should I be practicing enunciating my vowels while I'm standing here, your ladyship?\" he asked sourly. \"Ayyyye... Eeeeeeee... Iiiiiiiiii... the rine in Spine sties minely in the pline...\" \n\n\"Oh, don't be such a curmudgeon,\" Karen replied, subtly pressing her knuckle into the soft spot behind her chin to help contain her arousal. \"Would owning an exquisite suit really be so dreadful for you?\" \n\n\"I don't even know how to reciprocate for this,\" he almost complained, looking down at himself, but seemingly not embarrassed by his state of undress. Karen had to admit, he had nothing to be embarrassed about. \"Seriously, how would I?\" \n\n\"Reciprocity is not required, good sir; we have been over this point,\" she iterated. \"The fact that you're allowing me to indulge this urge I have is more than enough, assuredly. And you did promise to take me to the museum or for a drink, I might remind you.\" \n\nMike sighed, causing one of the tailors to mutter under his breath as the giant's rib cage expanded. \"Do I even want to know how much this suit is likely to be?\" \n\n\"No, probably not ...\" one of the tailors interjected. \n\nMike shot him a look, but then returned his attention to the woman responsible for this. He looked at the floor again, because sometimes, looking at Karen Gordon could be painful. She was hauntingly beautiful, and he very often found himself staring at her dumbly. She was utterly flawless, from her shining bronze hair to her dainty-looking but surprisingly lithe and strong feet. He'd never seen such an attractive woman. \n\nBut what captured his interest most was her incredible intellect. He had never met anyone with her raw capacity for numbers, and her understanding of experimental physics matched his own. Her singular intelligence was matched by her myriad talents and interests. Cap this all off with the most forceful will he'd ever come across and Karen was truly devastating to behold. \n\nAnd so he didn't look at her, for fear of staring crudely. \n\nKaren, for her part, didn't dare look away. She was certain if she did, she would expose herself for being intimidated and in awe of this man. He was like an incredible force of nature, with a body equal to his unique and unmatched mind. Though she had the greater command of raw numbers and math, Mike DeBourne had an innate understanding of deep physics for which she felt she had only just scratched the surface. He spoke even more languages than she did, and he hadn't even had the benefit of proper language schooling. Like herself, he was a gifted musician and singer, and he had a decided flair for visual arts. And, of course, his body was an engine of destruction, which made her knees weak to think about. \n\nSo she stared down the storm, knowing that to look away was to show her fear, if one would call it that. She smiled at him serenely, knowing that he was looking at the floor so that she wouldn't see him staring at her. \n\nWhat a luxury he had there. \n\nThe worker ants finally finished measuring and came down off the small platform he'd been standing on and approached Karen. She glanced at her watch: it was just after noon. It had taken them nearly an hour to properly measure the leviathan. The senior tailor spoke, wrapping up his little kit. \n\n\"Miss Gordon, we will consult with our supervisor to make sure, but we think that we can indeed accommodate you.\" \n\n\"Her?\" Mike asked from behind the assembly, frowning. They ignored him. \n\n\"Excellent,\" she mused, nodding. \"A three-piece would be best. And of course, he'll be needing the usual trimmings, such as shirts, ties and shoes. How much time will you need?\" \n\nThe senior man considered: \"It would be at least tomorrow before we could have it ready.\" \n\n\"Oh, no,\" Karen said, shaking her head. \"But I need it today.\" \n\n\"You do?\" Mike asked. Once again, no response. \n\nThe man drew a deep breath. \"I suppose if your friend were to stay, allowing us to measure and alter as we go, we could, quite possibly, have it done in seven or eight hours.\" \n\n\"Eight hours?!\" Mike exclaimed. \n\n\"And even that, I must admit, is something of an optimistic stretch, miss,\" the man admitted. \"It is a wondrous challenge, but the staffing is small today, and I doubt we have the manpower to devote properly to your project, even if he does stay.\" \n\nKaren considered and gave a small shrug. \"I'll pay double the price, then, to account for your dialectical efforts. Do we have an agreement?\" \n\nThe man smiled and nodded. \"I will still have to consult, of course, but I am fairly certain that this is more than acceptable, Miss Gordon. Your family is always infinitely fair with us, and a pleasure to work with.\" \n\n\"Wonder what that's like ...\" Mike grumbled. \n\n\"So then,\" Karen announced, standing up and holding her little clutch in front of herself. \"My friend here will allow himself to be measured and refitted as needed, and you're guaranteeing my desired results by eight this evening, oui?\" \n\nThe man nodded. \n\n\"Good, then we will discuss your bill at that time,\" she mused. \"Until then, I'd best be off.\" \n\n\"Wait, what?!\" Mike exclaimed rather loudly, his eyes going wide. \"I'm stuck here with Ig and Ook and you're going out again?\" \n\n\"Well, I would hardly be any good to anyone here, would I?\" Karen reasoned. \"These men are certainly more experienced tailors than my own self, after all. I thought I would do some personal shopping, and then maybe go see the new dinosaur specimen at the museum. I do rather like dinosaurs, after all.\" \n\nMike said nothing, but simply stared at her, trying to keep the murder out of his expression. \n\nKaren smiled charmingly. \"Well, gents, I leave my Galatea in your capable hands. I must be off, and I wish you godspeed. Ta!\" \n\nAnd with a wave, she swished out of the shop. There was near silence for several seconds following her departure, the only sound to be heard that of Mike's jaw grinding. \n\nThe two men now turned and looked up at their charge, seemingly rather intimidated without Karen Gordon's reassuring presence. \n\n\"If you two even think of fixing me with a top hat and a cane, I will eat your entire shop,\" Mike growled. \n\n*** \n\nAlexa was blushing hard and trying to control her breathing as she knelt forward on the bed with her face against the pillow and her exquisite ass in the air. Lying on the bed in her original bedroom, she had reached under herself and was using her fingers to pull her inner pussylips wide, exposing herself completely to the camera her husband was working. She pressed her face into the pillow and bit her lip as she squeaked, trying to control her embarrassment. \n\nSome people might think such feelings were ridiculous at this point, not only because it was her husband she was doing this for, but also because she seemed pretty uninhibited and downright shameless on occasion. There was a lewdness to this that brought a deep and dark thrill, a vulnerability she couldn't explain even to herself. \n\nShe was almost panting now as she pulled her pussy apart farther, the opening becoming a black hole inside her. She felt Alex moving in closer. \n\n\"I'm shining the light on my camera right inside you, getting a great view!\" he stated. \n\n\"Nnnnnnn!\" Alexa moaned in exquisite embarrassment, her body feeling so hot she thought she'd catch fire. Her skin was a deep pink, and she was covered in sweat. Her fingers now had trouble holding onto her slippery pussylips. \"Alex!\" she almost whined. \n\nAlex might have stopped, once he heard her tone, but he remembered that she was to make herself as vulnerable as possible no matter her embarrassment or shame, so he kept on, knowing that if he stayed firm, she would keep going. This was a gift to him, after all. He moved the camera closer still, until the lens was almost pressed to her nether regions. Her bubblegum-pink insides glistened wetly, and seemed to throb and contract involuntarily. \n\nHe slowly moved around her, panning up her incredible body, noticing how it shone with sweat. He heard her panting almost uncontrollably as he arrived at her face. Her eyes were glazed over, the skin flushed red. She squeezed her eyes shut and bit her lip again as he began filming her expression, willing herself somehow to not look away. \n\n\"Finger yourself ...\" he instructed. \n\n\"Hnnnn ... nnnnn ...\" she mewled while plunging three fingers inside herself desperately, hoping for anything that might distract her from the crimson heat of her discomfiture. Her body trembled as she pleasured herself, rippling her fingers in her tight channel. \n\n\"Now bring them up and suck on them.\" \n\nAlexa trembled as she pulled the fingers from inside her pussy and slowly drew her hand up to her mouth, her tongue coming out to slither around them before she almost sobbed and pushed them into her waiting mouth, sucking on them and moaning shamelessly at the taste of herself. ",
        "\"Now you can turn over ...\" Alex said simply. \n\n\"Ah!\" Alexa called out as she flipped herself onto her back, frantically writhing with need. Her legs squirmed against one another and her hands caressed her breasts. Alexa hissed as she looked at the ceiling, nearly beyond any control of herself. \n\n\"Hmmm, what to do now ...\" Alex mused, smirking as he filmed her. \"Didn't you say something about fucking your bedpost?\" \n\n\"Please ...\" she rasped. \"Please, Alex, let me do that for you ...\" \n\n\"Slowly ...\" he told her. \"I want everything.\" \n\nAlexa sat up with effort, getting on her hands and knees before pushing herself to her feet. The bed in her old bedroom was a four-poster, with a stubby brass knob on each post. Alexa chose the easiest one for Alex to film her using and began by rubbing her pussy all over the round brass flange. She was so wet that in no time at all, it was slippery and ready to enter her. \n\nAlexa was still flushed scarlet, her chest heaving as she stood on her bed, steadying herself. She closed her eyes and took several deep breaths as she felt the slick metal pressing against her lips. She squirmed back and forth a little more, trying to calm her nerves but instead blushing redder by the second, knowing Alex was right in front of her, recording it all. \n\n\"I love you so much, Alex ...\" she murmured as she began pressing down gently, squirming and feeling her pliant pussylips give before the knob, stretching them out with its girth. She clenched her teeth as she pressed down more, feeling it begin to force its way between her tight walls. \n\n\"Gnnnnnn!\" she keened her eyes squeezed shut, fighting a flush embarrassment and terror. She pushed down and the knob pushed in, splitting her open like a melon, to the place where she was worried she'd hear a wet cracking sound. Her sweat-slicked body shook almost uncontrollably, but she continued on, remembering her promise to her husband. \n\nA loud gasp escaped her throat as the thickest part of the bulge suddenly popped inside her and her eyes snapped wide - Alexa trembled as she stared at the far wall almost sightlessly, seeing only stars behind her sapphire blues. She felt stuck, pinned. Her knees were bent, and if she lost her footing, she was terrified that she'd plunge down and the post would punch out the top of her head. \n\nNo. Alex was here. He may have been filming, but he was here for her. He would never let that happen. This was fine. She was still safe. But oh God, the embarrassment! Her teeth gritted as she pushed farther down, flexing her knees more, feeling the brass ball sliding deeper inside her pussy. \n\n\"This is incredible, Alexa,\" Alex, still filming in fascination, whispered just loudly enough for her to hear. \"I can see the knob of the post bulging beneath your skin.\" \n\n\"Gnuhhhh! Haaah!\" she wailed, shaking, feeling like her body was being ripped apart, pulled in a thousand directions. The knob was so big in her pussy that she could feel it pulling her ass cheeks apart, stretching her puckered knot. Her bleary eyes were now leaking. \n\nBut then she felt a gentle hand on her cheek, and managed to focus, seeing Alex right in front of her, the camera off to the side while he smiled and caressed her face gently. \n\n\"I love you, y'know,\" he said gently. \"And this is the most incredible thing. You've got this.\" \n\nThen he leaned in and kissed her, and Alexa moaned and sobbed through the kiss, trembling now with raw emotion. She reached up and clasped his strong hand between hers, eternally thankful for him right at that moment. \n\nHe broke the kiss and smirked, going back to filming her. Alexa knew full well that the bravery imparted to her by that kiss was fleeting, so she made the most of it. Slowly she began to snake up and down on the slicked knob, using one set of fingers to pull her netherlips apart, exposing herself to the camera, letting it see how depraved her pussy looked, stuffed with the brass fitting. \n\n\"Ohhhhhh my Gooooooood ...\" she moaned, feeling like she was being turned inside out. Her large breasts prevented her from seeing what it looked like below, but she at least could see herself in the large mirror of her dresser. Alex was right; her skin bulged obscenely wherever the knob was inside her. It was almost surreal to watch. \n\n\"Don't let me cum, Alex,\" she rasped, bobbing herself up and down rhythmically. \"If I do, I'm done for and won't be able to continue.\" \n\nAlex just nodded and kept filming. \n\nAlexa's body felt positively molten, sweat streaming from her skin. She was so full that she could experience almost no other sensation, but she knew she was trembling, if not outright shaking. Breathing was hard, as if the knob were pushing up into her chest somehow. Everything felt like it was under pressure. Her hand massaged her clit feverishly. \n\nHer back arched and she cried out as the knob touched her cervix, sending her almost into convulsions. One of Alex's hands reached out instantly on reflex, but then paused when she had steadied herself. He went back to filming her, while Alexa tried to adjust, seemingly able to do very little about the shaking of her limbs. \n\nHoly shit, she thought, feeling something pattering on her breasts, something sticky. I'm drooling on myself... \n\nAlex kept filming. \n\nAlexa was moving up and down steadily now. It wasn't correct to say that she was adjusting to the feel of the knob inside her, but she was enduring it. She felt like she was wheezing, but the enormous stretch was accompanied now by an excruciating pleasure. It wouldn't take many more thrusts on this thing to make her cum so hard she just might pass out. \n\n\"Gnnnn, help me off ...\" she managed to say. Still recording, Alex held out an arm, which his aunt took hold of. Bracing herself, she lifted up slowly, aware of Alex shifting the focus of the camera back to her pussy. Her inner lips pulled away wetly, dragging along the brass. The fixture popped out of her and she yelped loudly and collapsed on the bed face down, shaking like a leaf in the wind. \n\nAlex still kept filming, making sure he spent time focused between her legs, where her pussy was gaping wide, but slowly closing in on itself. Alexa was still trembling, and he resisted every urge he felt to go assist her. She was strong, and she'd ask for help when she needed it. \n\n\"Gotta pee,\" she murmured. \"C'mon ...\" \n\nShe slowly pushed herself off the bed and used the furniture to walk unsteadily toward the bathroom across the hall. She sighed as she plunked down on the porcelain seat, her head hanging forward. Seconds later, she raised it and looked up at her husband wearily before spreading her legs. \n\n\"Well, get in here,\" Alexa said. \"Show's not over yet.\" \n\nAlex nodded and knelt, focusing the high-resolution camera between her legs. Alexa used her fingers again to spread her sticky lips and shuddered as she began to pee. It sounded like Niagara Falls to her and felt like a roaring rush out of her body. She blushed furiously from head to toe. \n\n\"Dunno why this is so hard,\" she said quietly, shaking her head. \"Not like I haven't peed for Fre or lots of other people before.\" \n\n\"Must be because it's me and you feel differently about me than any of them,\" Alex posited, still behind his camera. \"You're in love with me like you never have been before, and all this takes more effort. It's not casual. It's real.\" \n\nShe smiled at him, although she looked almost exhausted. \"I think you're right, Alex, I really do. Maybe I - gnnnnn, oh God ... maybe ... maybe I feel so very vulnerable because I want you to see me to my very depths. I need you to.\" \n\n\"What else have you got planned?\" he asked, smiling. \n\n\"Iono ...\" she said finally, her body sagging as she finished going pee. \"I ... I'm so drained, physically and emotionally.\" \n\n\"I don't blame you; you've been doing this incredibly private thing for over an hour now.\" \n\n\"Shit, it's only been an hour?\" she asked, sounding almost shocked. \"It's felt like six hours to me. But I've really drained my tank.\" \n\n\"Well, then,\" Alex said, stopping recording and sitting down on the bed beside her lovely form and caressing her cheek gently. \"I guess I get to spend the rest of the night pampering my porn-star wife, don't I? A bath, a massage, lots of TLC, right? I think that sounds pretty good.\" \n\n\"It's sounds wonderful beyond words, Alex,\" Alexa replied, her eyes misting with tears. \"You always seem to know just what to do, don't you?\" \n\n\"It's pretty easy when you've devoted yourself to the happiness of the person you love ...\" he answered, leaning in and kissing her lovingly. \n\n*** \n\n1986 ... \n\nKaren tried to control her breathing as she plunged her fingers in and out of herself, sitting on the porcelain seat in the small bathroom. She couldn't believe how wet she was! After making her desperately graceful exit from the haberdashery, she'd wiggled down the street with as much composure as she could manage, deathly worried that before long, her arousal would be trickling down and glistening on her leg, ruining her stockings. \n\nShe needed to sate this urge now. But where?! She didn't dare use the washroom in a restaurant; she would rather the ground open up and swallow her whole. \n\nShe found a lingerie shop and hurried in. She grabbed an assortment of items, not checking at all to see if they'd fit her, before heading up to the counter and asking if she might avail herself of the facilities for a moment before paying. Dressed as she was, the ladies behind the counter made no demur at all, and she hurried in and locked the door. She had barely sat down and pulled aside her panties before her fingers were deep inside her, beginning to provide her with the relief she so desperately needed. \n\nHer mind raced as she pictured the enormous, chiseled body she'd left behind at the other store: DeBourne's massive chest, muscles sculpted in place in such a way as glorified Intelligent Design beyond question. His broad, powerful shoulders, supporting muscular arms and huge hands. She shivered as she pictured how his waist tapered in to his hips, and then flared out into those gigantic, muscle-bound thighs. Even his calves were huge and defined! \n\nShe pictured his thick, wavy blond hair, piercing blue eyes and the dour look on his face as he allowed the tailors to measure him. Even his sullen mood had been compelling to her. She had pulled her dress off completely and was squeezing her breasts while she fingered herself, almost choking on her moans, praying she wouldn't be heard. \n\nShe imagined his boxers removed, remembering the giant tool hidden beneath. She could scarcely imagine how big it was erect, no matter what Janet had told her repeatedly. Karen pictured how it would feel against her skin, hard and throbbing, or between her breasts, fucking them. Her mouth watered as she pictured sucking on it, forcing its massive diameter down her throat. \n\nOr feeling it deep inside her, fucking her hard until it felt like she was being torn apart. Pumping cum deep inside her. \n\nFinally she arched her back, squeezed her eyes shut and clenched her teeth, waves of unreal pleasure washing over her as she pushed her three fingers as deep inside herself as possible, curling them along her upper wall and wiggling them madly. Scintillating colours exploded behind her tawny-amber eyes, and ecstasy splintered through her like bolts of wanton delight. She felt her molten pussy drench her hand as she came, praying with what was left of her senses that she wasn't getting any on the floor. \n\nKaren sagged back in the seat now, sighing and breathing heavily, her fingers still buried inside her and her other hand tightly gripping her large breasts. She was almost beyond thought, and had no sense of how much time had passed since she'd come in here. They didn't seem to be calling on her, so it shouldn't have been too long. She know how to make herself cum easily and quickly, although she had been determined that this one wouldn't be cheap. She'd cum good and hard, despite her time restriction. \n\nShe couldn't help it - she brought her fingers up to her mouth and sucked on them, shivering in pleasure as she tasted her own cum on them. She cleaned her fingers with her tongue and then took several deep breaths, trying to compose herself. Once she felt like herself again, she washed herself diligently before putting on her dress, her broad-brimmed hat, and her dainty gloves. \n\nKaren looked around and wrinkled her nose, noticing a can of aerosol air freshener, advertising a fresh evergreen aroma. Repulsive as that sounded, it was hopefully strong enough to cover the permeating scent of her climax. She couldn't recall having used one before, and sprayed as much as she thought necessary before escaping the tiny room, lest the horrid stench cling to her. \n\nThe woman behind the counter greeted her cheerfully, pointing out that several of the items she'd chosen were going to be too small for her, based on a straight physical assessment. Her bust was far too large. The woman offered to help her correct the issue concerning sizes, and Karen agreed to the assistance, though she sighed inwardly. Perhaps this was her penance for indulging her Gordon-Blackwell libido so readily, instead of practicing restraint. \n\nThere were just some lessons she saw no point in learning. \n\n*** \n\n\"Heiajaheia, Heiajaheia! Wallalallalala leiajahei! Rheingold! Rheingold!\" the maidens sang sonorously as they knelt before the sacred treasure of the gods. The hall filled with their voices, lifting the hearts of everyone hearing them. The gold shone magnificently in the middle of the stage, the lighting exquisite. \n\nKaren reached over and squeezed her husband's hand as they sat in their box seat. Every year, he made sure they had season tickets to every opera that was being performed. She looked resplendent in a form-fitting midnight blue dress, with white gloves that went up her arm. She smiled at him warmly. \n\n\"You always know exactly what to do to keep my heart, don't you?\" she said softly, transported by the music and the voices. \"You've always known.\" \n\n\"It's my sole purpose in life, to be honest,\" he replied, nodding to her. \"I can't begin to imagine how mundane and boring my life would be if I didn't have you to dedicate it to.\" \n\nThe booth was private; no one else could hear them. Karen looked back at the performance below, watching intently. She'd be hard-pressed if asked which opera in the Ring Cycle was her favourite, but she could say with certainty that the Rhinemaidens' Song was one of her passions, without question. \n\nShe only had tonight and tomorrow night left with the man she loved before being gone for what promised to be a rather torturous week. She wasn't even certain when the last time was that she'd been separated from Michael for so long. It had been many years, to say the least. As much as she might be looking forward to spending time with her little sister one-on-one, the thought still unsettled her that he couldn't be there. \n\nShe wanted him there, desperately. But she couldn't have him there. No. She had to face this as the mistress of the Blackwell family, without him as backup. \n\nHe seemed to sense her thoughts and squeezed her hand gently. She felt the reassuring warmth of his love and went back to watching the opera playing out perfectly below. \n\nEverything else could wait. \n\n*** \n\nAlexa sighed and settled back on top of Alex, the two of them sprawled out in the jacuzzi. He smiled and caressed her slippery skin, soothing her after all her monumental exertions earlier. She purred and turned her head to kiss his cheek. \n\n\"Mmmmm, I love when you hold me,\" she whispered in his ear. \"It feels so very, very right, like it never has before when anyone else did it.\" \n\n\"My privilege and my pleasure,\" Alex replied, his hands travelling up her divine form, moving from her thighs, over her hips and up her abdomen and her rib cage before he hugged her close. She sighed again, looking up at the night sky. \n\n\"D'you think we'll be able to see the stars a little more easily when we move to the Blackwell residence?\" she asked wistfully. \n\nAlex shrugged: \"Probably not, it's not exactly outside Toronto, y'know. There's a lot more space, because the property lots are so damn big, and it feels remote. If we want stars, we'll buy another house or cottage outside the city.\" \n\n\"What about Kapuskasing?\" she asked. \"It's only a little town, right?\" \n\nHe smiled and stroked her cheek. \"About ten thousand people in Northern Ontario, yeah. Seeing the stars is real easy up there. You'll be amazed. When we go for the visit, I'll make sure we take a lot of night walks.\" \n\n\"Are we announcing that we're coming?\" she asked. \n\n\"I don't think that's the plan,\" he replied. \"I think dad and mom want to make it a surprise. You've been missing from their lives for over eighteen years, so a surprise will be just what they need.\" \n\n\"But they already know I'm here, right?\" \n\n\"Oh yeah,\" Alex said, nodded. \"Not like mom'd keep that from them. But they think you're adjusting and re-learning how to be a colonial, so they're giving you space, even if they're peeing themselves in excitement at your return.\" \n\nShe giggled: \"They're your family, not a bunch of Great Danes, Alex.\" \n\n\"You might reconsider after you meet Uncle Connor,\" he chuckled. \"He's the definition and stereotype of a DeBourne.\" \n\n\"Wow, even more than Mike?\" \n\nAlex nodded again. \"Dad is a good standard-bearer too, but he freely left K-Town for a larger world, not to mention for mom. Uncle Con wouldn't for all the money in the universe. He's family first, above everything. So're my Aunt Ronnie and Uncle Josh.\" \n\n\"Josh, he's the gay one, right?\" she asked. \"Hard to imagine, since I'm told all the DeBourne men except him are big and burly.\" \n\n\"Yeah, and then there's Uncle Josh, who is slender and elegant, and would give you and mom a run for your money in the hip-swishing department,\" Alex said, stroking her hips. \"Still blond and blue-eyed, but about one third my dad's weight.\" \n\n\"Wow, he's like a unicorn,\" Alexa snickered. \"I can't wait to meet them all.\" \n\n\"I think that's the plan sometime soon after you're back from Quebec,\" Alex mused, stroking his wife lazily. \"Normally, mom'd never let us take this much time off from our studies, but she's been talking with our profs and they've assured her we're both so far ahead that it's not a worry.\" \n\nHe continued caressing her gently, just letting her relax, while she stared up into the vault of night. They'd reached a point in their love and relationship where words were not necessary to fill the silence; they just needed one another's company to be completely content. \n\n\"A week without you ...\" she said distantly, still looking up. \"Hard to imagine, after months of being constantly beside you.\" \n\n\"It'll be fine, not to mention good for you and mom,\" Alex said, nuzzling her cheek. \"And yeah, I'll miss you, Alexa. Every damn moment you're away. But I'll be happier than ever when you step off that plane, y'know.\" \n\nShe nodded slightly. \"I told Freja and Jeanie to take good care of you while I'm gone, okay? Don't even think of not obliging them, they'd be hurt and insulted.\" \n\n\"I'm sure I'll somehow manage to acquiesce to their attentions,\" he chuckled again, hugging her tight. \"You know I love 'em both.\" \n\n\"I know,\" she agreed, patting his arm before looking up at him. \"Wanna put it in my butt?\" \n\n\"The queen of romance, you are!\" Alex laughed as he began tickling her and getting ready to put his hardening cock inside his wife. \n\n*** \n\n1986... \n\nTo her amazement, she had only had to avail herself one time of any facilities to relieve her sexual tensions. Aside from that, she'd gone to the Royal Ontario Museum, which in fact turned out to be exactly where DeBourne had claimed it was, and checked out the new dinosaur specimen, as well as a new mummy in the Egyptian wing. After that, she'd bought herself a coffee and then done some more shopping, buying a little more than she normally might, because even though it seemed ungainly in her hands, she was certain DeBourne would carry it all for her without a second thought. ",
        "She walked back to the shop she'd left him in, since it was past seven o'clock now and rather dark out. She strolled in through the door and found one of the attendants at the desk. He beamed in delight as he saw her and eagerly asked her to come back and see what had been accomplished. \n\nShe was prepared to be impressed, but what she saw took her breath away and she dropped the bags in her hands quite involuntarily. Staring was no longer an act of will, but a compulsion. There was a flush of heat on her cheeks, and she prayed to the Lord above that she wasn't visibly blushing. \n\nMike towered over her and the tailors, now resplendent in his slate-grey three-piece suit. He was still massive and broad, but the superb fit meant that he didn't look like a bodybuilder ridiculously squeezed into some off-the-rack suit and hoping for the best. The suit was every bit as proportional as his build. The crisp white shirt was enhanced by a dark tie with subtle diamond patterns decorating it. His cognac-coloured shoes and a matching kerchief in his breast pocket completed the ensemble.  \n\nThey'd even teased his thick, jaw-length blond hair into stylish submission, and it somehow accented the suit perfectly. \n\nHe looked down at her and smirked, appearing surprisingly comfortable in his new attire. \n\n\"Can we cook, or can we cook?\" one of the tailors asked proudly. \n\n\"I ... gentlemen, you have outdone yourselves,\" she said, trying to keep the wonderment out of her voice. \"I left you with marble and you've given me a sculpture for the ages.\" \n\nShe slowly walked around him, examining the suit with a trained eye - the fabric was high-quality, let out with subtle, invisible gussets in areas to allow it to hang properly, as a suit should. It neither looked tight, nor did it look like a sack, it just ... fit perfectly. \n\n\"How does it move?\" she asked. \n\nIt took Mike a second to realize that she was talking to him, but once he did, he nodded and rotated his shoulders, arms, hips and legs to a degree. \"It moves well. I won't be participating in any full-contact tournaments in it, but I can certainly get from one place to another and socialize easily.\" \n\nShe looked at the tailors pointedly. \"I'll need extra shirts, socks, and some more shoes. They needn't be ready today, but maybe later this week?\" \n\n\"We can do that for you, Miss Gordon,\" the senior tailor said readily. \"What else can we do for tonight?\" \n\n\"We will settle up, if you please,\" she said, beginning to open her small clutch. As they began walking toward the register at the front of the shop, she turned to look at Mike and put up a staying finger, looking at him for a few moments. \"You ... just stay right here and look fantastic, good sir. I can see you from the front, and Heaven only knows when a perfect scene like this will present itself again.\" \n\nMike stayed and waited patiently, watching from a distance as she paid with a credit card. Whatever the amount was she was authorizing, it clearly pleased the store's employees and she didn't even blink. He thought about how wealthy she was, and what that must have been like. \n\nShe swished back into the room, beaming an enchanting, genial smile. \"Well now, fine sir, shall we?\" \n\n\"As long as I can begin to somehow reciprocate by carrying all those bags for you,\" Mike replied with a nod of his head toward her purchases. \n\n\"Such a gentleman,\" she said, placing a hand on her d\u00e9colletage and looking grateful. \"I accept your unexpected but welcome offer.\" \n\nHis older clothes were put into a bag, which also held (well, concealed) his backpack, and she led him out of the shop with an elegant wave and a characteristic 'Ta!' to the employees, and Mike looked up at the dark sky and nodded. \n\n\"Yup, it's eight o'clock all right.\" \n\n\"Oh, come now,\" she chided as she walked alongside him, heading west. \"Not much more than a week ago, I saw you shambling through the campus, ripped to shreds and covered in bruises and cuts. Do you mean to tell me that today's exercise was somehow more traumatic and excruciating than that?\" \n\n\"Are you going to play Bach on your cello for me before the night is out?\" he asked. Karen blushed in response, at a loss of words for a moment before recovering. \n\n\"Since I have no doubt that you will insist on this reciprocity of yours, did you have anything in mind?\" she asked. \"I did say you could buy me a drink.\" \n\n\"Yes, you did,\" he mused, looking around as they walked and finally sighting something. \"There we go.\" \n\nShe glanced over where he seemed to be looking. \"That club?\" \n\n\"That very club.\" \n\n\"It ... might be somewhat expensive,\" she said uncertainly. \"I don't want to be an imposition.\" \n\nHe shrugged: \"I've seen their prices. I can afford that tonight, with what I have made tutoring. All I said was that I couldn't buy an expensive suit.\" \n\nShe looked up at him for a moment, assessing him and then nodded. \"Very well, Mister DeBourne,\" she said, taking him arm. \"You may accompany me to this club.\" \n\nHe smiled and nodded. \"This way, Miss Gordon ...\" \n\n*** \n\nMike and Karen were sitting in their living room, listening to Vivaldi and reading science periodicals when Alex strode into the room, followed by Alexa. It was still warm enough, despite it being October, that Alex was wearing a black cotton Moroccan shirt and cr\u00e8me-coloured linen pants, while Alexa was wearing a short and sassy blue sundress. Karen looked up and smiled at the pair. \n\n\"Has he told you where he's taking you yet, Alli?\" she queried. \n\n\"Nope, he's being quite annoying that way,\" Alexa replied, nudging her husband and winking at him. \n\n\"Yes, my male won't tell me, either,\" Karen agreed, tilting her head and Mike, who finally looked up and beamed a smile. \"DeBourne males are maddening that way, just so you know.\" \n\n\"Yeah, I'm getting used to it,\" Alexa agreed. \"But there are still perks, I guess.\" \n\n\"C'mon, Alexa,\" Alex said, waving to his parents and then turning to head out the door. \"Places to go.\" \n\n\"I guess we're leaving,\" Alexa declared, shrugging and turning as her husband disappeared out the door. \"We'll see you tonight.\" \n\n\"Try not to get arrested for public indecency, Alli,\" Karen said. \n\nAlexa paused in the entrance to the living room, looked back her sister and brother-in-law with a wry face, and stuck out her tongue before lifting her skirt and flashing her bare ass at them. She then flounced out the door after her nephew. Karen just blinked as she watched Alexa disappear, rather at a loss for words. \n\n\"Well, I'm not spanking her ...\" Mike said as he went back to reading his periodical. \n\n*** \n\nThey walked hand-in-hand along the trail, the ground carpeted with red and gold leaves. Though the deciduous trees were mostly asleep now, the great number of pines and other conifers kept the forest around them green and lovely. The sun was warm, the breeze refreshing. \n\n\"I'm so glad this was your plan,\" Alexa said, smiling at him warmly. \"No lie, this was a surprise. I thought we'd be doing something in town or meeting up with Jeanie and Fre. But this, this is a million times better.\" \n\n\"I was hoping you'd be pleased,\" he replied, squeezing her hand while carrying their picnic basket. \"We haven't been back here together since your return.\" \n\n\"Mmmm, it's perfection,\" she sighed happily, looking around at nature in all its glory. She loved this time of year. \"So aside from ravishing me, and taking lots of pictures, what else do we have in mind?\" \n\nHe grinned and held up the picnic basket. \"French wine, late-season peaches, caviar, and maybe some classic French literature to read to you while you lie next to me on a blanket and gaze at an autumn sky ...\" \n\n\"God, you're so romantic,\" she almost moaned in bliss, pausing in their walk and turning in to face him, close enough that her breasts pressed to his chest. \"It's like you know me inside and out, Alex, to the very core of my being. I have no secrets from you, because you know my heart, perhaps as well as Fre does in some ways. Certainly the important ones.\" \n\n\"High praise indeed ...\" he said, leaning in and kissing her cheek. She purred and nuzzled into the kiss, content to stay like this forever. But even better moments awaited them just down the way and with a turn off the path. They began walking again, until they reached the place where they pushed through the brush and headed down an incline. \n\nSome minutes later, they reached the bottom of the hill and continued on. He brought her to their spot, the glade where they had married back in the height of summer with the full moon shining down on them. The babbling brook greeted them cheerfully, and they looked around in wonder. It was so different-looking and yet so familiar. \n\n\"Our brook, our big rock, some of the bushes,\" Alexa mused as she stared around. She looked behind them at the way they'd come. The hill they'd descended was actually quite some distance away. \"Remember that we were worried that people might see or hear us from the path? We're actually really far in. No chance of seeing us, even with all the trees hibernating.\" \n\n\"So as long as you don't yodel, we'll remain undisturbed, right?\" he quipped, making her smirk and wrinkle her nose at him. He put down the basket and pulled out the large, red-and-white checked blanket, laying it on a patch of flat ground for them. As he began removing the other supplies, she sat back on her hands on the blanket, sighing contentedly. \n\n\"I can't think of another way I'd rather spend this day,\" Alexa said, pushing her toes through the cool grass, which had retained its emerald hue. Although half the foliage was now missing from the surrounding trees, it still felt remote and undiscovered to them. For all they knew, no living soul had still even been to this spot before, a natural small clearing in the forest, a glade meant just for them. Aside from the singing of the water, the only sounds were the sighing of the wind in the trees and the calls of autumn birds. \"We really should do this more often, Alex.\" \n\n\"I'm good with that,\" he agreed as he opened the wine bottle, poured some into a picnic glass and handed it to his aunt. \"Once the good weather is back next spring, how about once a week if we can manage it?\" \n\n\"Mmmm, I love the sound of that,\" Alexa hummed, sipping at her Bordeaux. \"A lot of people might think it was gonna get routine and boring, but not me; it would be Heaven on earth. I really hope we can do it.\" \n\nAlexa relaxed and listened while Alex read poems to her in French, noticing quickly how much his accent had changed in mere months - where he had once spoken fluently but with a decidedly rustic Quebecois accent, he had endeavoured to match the elegant Parisian accent in which his aunt and his mother both spoke. His pronunciation was flawless, his cadence almost perfect. Listening to him transported her. \n\nThey paused in the reading and ate some of their food, while consuming more wine. Soon enough, Alexa had shed her sundress, since the day was still warm enough to allow for such a thing, lying naked on the blanket while her husband stared on longingly. She winked and stood up, wiggling over to the running water and shivering as she stepped in. It barely passed her ankles, but it was crystalline and pure. She knelt in it readily and began laving herself with it, smiling for Alex as he took pictures and video of her. \n\n\"Why don't you set up your camera to record and then join me?\" she asked, running her hands over her wet, glistening breasts. Alex didn't need to be asked twice, and quickly found an excellent spot to record from. He shed his clothes and joined her, kneeling and hugging her from behind. She giggled and leaned back into him. \n\n\"I know we're still practicing, but I can't wait until it's perfectly obvious that I'm every bit as in love with you as my sissy is with your dad,\" she whispered against his cheek between soft kisses. Alex shivered and pulled her back against him, his hands cupping her magnificent breasts. Her nipples were hard beneath his palms as he caressed and rubbed the silken skin. \"And I'm loving practicing, I have to say.\" \n\n\"I love it too ...\" he murmured as he leaned his head in and kissed her neck, causing her to moan in bliss, one hand reaching behind to rest on the back of his head. They'd just begun, and she was already so turned on! What magic did DeBourne men have that Alex could arouse her just like that? \n\n\"Do you want to make love to me like this?\" she whispered back to him, her eyes closed, reveling in the feel of his body wrapped around hers. She felt him nod and lifted herself slightly while spreading her legs a little wider. She felt his hard cock move under her toned behind and begin sliding back and forth against her pussylips. \n\n\"Mmmm, I'm so wet and horny at the moment that I don't even need foreplay,\" Alexa breathed, squirming on her husband's lap while facing out. \"We've got all day, and all I need right now is you inside me, Alex. Please ...\" \n\nAlex wiggled slightly underneath her and she felt his throbbing cockhead press against her clit and then inch down to her pliant lips. His hands were still on her breasts but gripping her hard enough to hold her in place. His strength sent a shivering thrill through her. Then the head pushed through her opening and she sighed as she pushed down against him, taking his cock deep inside. \n\nAlex held her close for several seconds while they just savoured the feeling of being united. Alexa's head hung forward, her long, golden tresses spilling forward, her eyes closed. Heaven. That was all she could think of at this very moment to describe what she felt. He held her in place, the strength of his body making her feel so warm, safe and so very loved. \n\nAlex's hands moved slowly to her hips, steadying her while she began to move up and down on his erect cock, shivering and moaning each time it touched deep inside her. The pace was slow, gentle, allowing them to savour the eternal bond they shared. \n\nAlexa leaned back, turned her head and kissed her husband deeply, pushing her tongue inside his mouth. They gently squirmed against each other, surrounded only by trees and gentle wind as the shallow water tumbled past their legs. Alexa squeezed herself around him each time she sank down onto his thick member. \n\nThe couple moved and undulated with a slow but deliberate rhythm that built into an urgency, a need to cum together. She writhed on his lap, kissing him hungrily, her slender fingers tangling in his hair. Alexa whimpered into his mouth, pushing down harder as she felt him swelling inside her. Alex pulled down on her hips, feeling his cockhead press against her cervix, and she squeezed tighter then ever ... \n\nShe shivered and wailed into his mouth, her muscles contracting around him fiendishly as he began pumping his thick, pearly cum deep inside her wanton pussy. She shook as she held onto him, and he pulled her tight against his body, needing to feel all of her. His ropes of cum in her molten core sent her mind spinning in pleasure. \n\nThe pair sighed and settled contentedly into each other, still joined by his hard, throbbing cock pinned inside her tightness. They whispered to one another and caressed each other's bodies tenderly for several minutes, until she lifted herself off him. Alex stood, picked her up in his arms and carried her back to the blanket, where he laid her down and then got on top of her. They wrapped their arms around one another and kissed lovingly for several minutes. Alexa finally looked up at him and smiled. \n\n\"A week without you ...\" she said softly, reaching up and caressing his cheek. \"It's hard to contemplate.\" \n\nHe nodded in agreement: \"If we live another hundred years together, though, we have fifty-two hundred weeks to make up for it, right?\" \n\nShe smiled dreamily and nodded. \"I could stand to be married to you for the next century, I'm pretty sure.\" \n\n\"I'll miss you more than I can say, y'know,\" Alex said as she parted her legs and he slipped his still-hard cock back inside her. \n\n\"Then don't let me go until the last possible moment ...\" Alexa sighed as they began making love again. \n\n*** \n\n1986 ... \n\nKaren casually observed her escort as they sat inside the club, her drink in her hand. Across the small table, Michael DeBourne loomed large, but seemed to be very much in place, and it wasn't only the suit making it possible. To her considerable surprise, he looked to be totally at ease, not at all fazed by his surroundings. She had been expecting at least some measure of proletarian discomfiture on his part. He'd even ordered a proper drink, instead of a beer. \n\nUp on a small stage at the rear of the room, a sextet of musicians was playing the slow movement of a Mozart string quartet, providing an excellent atmosphere for conversation. \n\n\"I have to admit, I was expecting you to look a little more out of your element,\" she stated, sipping at her martini. \"Was I remiss in assuming there were no high-end clubs in Kapuskasing?\" \n\n\"No, you would be right,\" Mike agreed. \"But every once in a while, people come up from civilization and teach manners courses and so on. When I was younger, my parents had saved up enough to make sure I got to attend some.\" \n\n\"Your parents impress me, I won't lie,\" Karen remarked, wondering how much it had cost them to give their behemoth son this training. She'd only met them once before, soon after the semester had started, but she had been instantly enchanted by them. So why did their eldest have to be so difficult? \"They're probably the the most likeable people I have ever met.\" \n\n\"Well, that's good to hear,\" he chuckled. \"They make decency look easy, don't they?\" \n\n\"Am I to infer that it's not for you?\" she asked, wondering what he meant. \n\n\"Oh, I guess it is, from a strictly upbringing point of view,\" Mike answered, shrugging. \"But the world is black and white for them, which is how it should be if you believe in good and evil. I guess you and I are exposed to shades of grey, which we struggle against. Harder to fight the greys of moral ambiguity.\" \n\n\"There is that,\" she allowed. \"Mostly where my father is concerned, I suppose. My mother is quite the activist.\" \n\n\"I noticed. Your father can't be all bad if your mother loves him as much as she seems to,\" Mike pointed out. \"You and I are both devoted to black and white moral views, ultimately, even if we work through shades of grey.\" \n\n\"So certain of that?\" she queried, wondering if she should take offence at his proclamation. \n\nThe sextet finished its piece and Karen and Mike paused in their conversation to applaud, along with the other patrons of the club. Then the establishment's sound system began playing a slow and lilting tune of great fame. Mike looked up at the ceiling and smiled. \n\n\"The Ball from the Symphonie fantastique,\" he mused. \"Berlioz knocked it out of the park with this one.\" \n\n\"You know your classical composers?\" Karen asked, playing her part by raising an eyebrow, but not terribly surprised, in fact, once she thought about it. \"I thought you were all about goofy rock and plaid pants.\" \n\n\"Live and learn, princess,\" he replied, standing. \"C'mon, this is a waltz, and it won't do to have the most stately woman in the room not enchanting everyone on the dance floor.\" \n\n\"Oh, I don't know,\" Karen replied, blushing and looking away. \"I'm not dressed for dancing, my skirt's not long enough for a proper waltz.\" \n\n\"And I'm not wearing a tuxedo,\" he stated, holding out his massive hand. \"Now everyone's seen me stand and make an offer; don't make me sit back down.\" \n\nSomewhat uncertainly, she put her gloved hand in his and allowed him to walk her to the dance floor, with most of the patrons subtly staring. He looked down and smiled as he kept hold of her one hand and placed the other on the small of her back.  ",
        "\"I admit, I've only taken lessons back home a few times, but I promise to not step on your feet,\" Mike said, beginning to lead as the strains of two harps led them into the main theme of the music. \"I've no doubt you're very accomplished.\" \n\nKaren blushed again: \"I'll try to keep up.\" \n\nThe music lilted out of its introduction and they began twirling around the dance floor together, dominating the space, even though others had joined them. Karen's free hand took the hem of her skirt and she moved in graceful circles with him, trying to hide her wonder at how light on his feet he was. She glided about the floor effortlessly in his hands, looking up into his eyes, as was proper. The gesture between them terrified her more than she thought possible. But in a waltz, you held your partner's gaze. \n\nAnd just this afternoon, I was treating him like a dress-up doll, she thought to herself, trying not to think about how he managed to not look ridiculous moving about since he was so much larger than her. His foot movements should seem absurd trying to accommodate her small gait, but he did it smoothly and naturally. Is this some warped revenge for earlier? \n\nShut and enjoy the dance, Karen. Isn't this what you love more than almost anything? \n\nThis was so dangerous. And yet she waltzed, losing herself in the moment. Her silken bronze hair swayed back and forth as it framed her lovely, patrician face in time with the music. She ignored all the eyes on them and thought only about the bliss of dancing. \n\nHe couldn't have been the most graceful waltzing partner she'd ever had. He didn't have nearly the training necessary. So why did it feel like he was? \n\nThe tempo picked up a step, and they made the transition into the new gait easily, still twirling about together. A consummate artist, Karen turned her steps into skips to keep up, but she concealed this with unreal elegance, as she'd been taught. No one would notice. \n\nBefore she was ready, the dance had ended, and applause all around them indicated that people had been watching with rapt enthusiasm. Even the other couples dancing had stopped to look at them and applaud. Her dance partner, towering over everyone, smiled genially and bowed slightly, while Karen looked around, blushing as she smiled and curtsied. Then she allowed him to lead her back to their table while the sextet began playing again. \n\n\"That was unexpected,\" she said as she sat while he held out her seat for her. \"Those were obviously very good lessons you took, sir.\" \n\nHe shrugged as he sat, his stately demeanour on the dancing floor replied by his normal, down-home cheerfulness. \"Probably not, but once I had been taught, I practiced and practiced relentlessly. My mother and younger sister Ronny must have hated me, since I made them practice with me.\" \n\n\"It paid off, you were an exemplary partner,\" Karen said, the simple statement carrying the weight of undeniable truth. \n\n\"Thanks, I was worried about not being able to keep up and embarrassing you,\" Mike admitted. \"I couldn't imagine you being anything less than perfect at it.\" \n\n\"A bold move, then, asking me to dance if you were so worried,\" she pointed out, smirking. \"I half-thought maybe you were trying to avenge yourself upon for me this afternoon.\" \n\nHe shook his head: \"No, princess, it'll never be anything like that.\" \n\nShe raised an eyebrow. \"So you will be avenging yourself, but I don't need to worry about you embarrassing me in this vein?\" \n\nMike didn't answer but merely sipped from his drink. Before she could press him, a ma\u00eetre d' came over, expressing his appreciation. \n\n\"You and your husband are welcome back here any time!\" he said, nodding to them. \"Our private events will be open to you.\" \n\n\"Oh,\" Karen said, blushing for what felt like the fortieth time this evening. \"We're not ... he's not -\" \n\n\"A very kind offer, sir,\" Mike interjected, gaining the man's attention. \"We happily accept.\" \n\nThe man seemed pleased and left them to their evening. Karen sighed and looked around. \n\n\"Splendid,\" she sighed quietly. \"Now whenever I come here, I'll have to lie and call myself Karen DeBourne.\" \n\n\"I suppose you could always hyphenate ...\" Mike teased, making her give him a wry smirk. \n\nHe was certainly a charmer. \n\n*** \n\nThe present ... \n\nThey spun around the room as everyone watching had come to expect of them, the joyous strains of Weber's 'Invitation To The Dance' filling the ballroom. Karen's eyes were fixed on her husband's, and there was no place else she ever wanted to look. Her full and elegant ballgown, midnight blue with subtle silver and diamond accents, flowed about her gracefully. His simple but exquisitely fitted black tuxedo complemented her perfectly. \n\n\"A long way from our first dance, wouldn't you say?\" she said to him quietly as other, lesser couples twirled about them like bees on the dance floor. The center belonged to them. \n\nHe nodded: \"I'll never be able to tell you how terrified I was that night of embarrassing you and making a fool of myself. But I simply had to ask you to dance.\" \n\nShe smiled: \"Not just a compulsion to dance with me, no ... you needed to show me you weren't a rube, didn't you?\" \n\nMike nodded again. \"I wasn't being competitive, I just needed you to understand that I could do these things, the things we do now that I love.\" \n\nKaren smiled serenely. \"I am so glad you did. I am so glad that you took me to that club on your own dime, and forcefully proved to me that you could dance, and mix with my peers, because it meant I was obligated to prove that I wasn't stuck up there in that stifling stratosphere, at least not alone.\" \n\nHe shook his head: \"Never alone, princess.\" \n\nKaren's eyes shone. \"I'll miss you so much this week. I'm glad I'll have Alli, but ... without my tower of strength, my mighty lord of war ... I'm terrified, Michael.\" \n\nHe nodded to her, smiling. \"Karen Gordon, you are the strongest person I know. Your depths of character are what's terrifying. You may want me, and you may love me, but you don't need me. That's the beauty of us. We are completely in love and enslaved to one another; you are my everything. But because we don't need one another, we are free to love each other more deeply than anyone else will ever be blessed enough to know.\" \n\nTheir feet twirled through and around like it was second nature. Their dances, like their love, were innate and instinctual. There was no error to be had; it was not possible. They were too in love for anything less than perfection to be their norm. \n\n\"Maybe you're right,\" she sighed. \"But I'll miss you all the same. Even if I don't need you, that doesn't mean I'm not happiest when I'm with you.\" \n\n\"It'll be a tough week for me, too,\" Mike replied. \"But I just remind myself that you're not far away, ever.\" \n\nIt may not have been proper, but Karen rested her cheek on his chest, closing her eyes and smiling as they continued to dance, not missing a beat. The music flowed through her, and she lost herself in her feelings, knowing that he was right, she was not alone. \n\nNever alone. \n\n*** \n\nAuthor's Notes: For the next three issues, Mike &amp; Karen will be a split-arc story. Mike &amp; Karen chapters 10-12 will continue on here as normal, playing out during the week that Mike, Alex, Freja and Jeanie have while the Gordon-Blackwell sisters are gone. It will feature their week, but also continue to show us through flashbacks how Mike and Karen became the couple they are today. \n\nNext to it, a three-chapter arc entitled Karen &amp; Alexa will be running, dealing exclusively with the sisters and how they handle their family in Quebec. It's going to be an interesting war, for certain. \n\nI enjoyed the 'Uptown Girl' arc, because it was just fun to write. Young Karen not knowing her way around town except by chauffeur is adorable, as Mike pointed out. And Mike proving capable of moving in her circles was important, since she has previously resigned herself to the idea that they lived worlds apart. Mike may not think he belongs there, but she is now conflicted by the fact that he can. That's her quandary. And neither one is very good at explaining themselves, are they? \n\nAs for the music, if you're the type who likes to hear the music I reference to help set a scene, here they are- the Rheinmaiden's song greeting the Rheingold from Act 1, Scene 1 of Wagner's 'Das Rheingold'. In 1986, Mike and Karen danced to the elegant and thrilling 'The Ball' sequence from Hecotr Berlioz' wonderful 'Symphonie Fantastique'. It's very easy to picture them dancing to this. Lastly, Mike and Karen in the present day, waltzing to von Weber's 'Invitation To The Dance'. It's less aethereal than the Symphonie Fantastique, but also more robust and joyous. I hope you listen to and enjoy visualizing these sequences with their music, because I certainly do. \n\nThe confessions scene with Jeanie and Freja will be opening doors for me about them. They've become a surprisingly popular couple, and I guess I'll just announce here that they will, in the near future, be having their own series, once I've wrapped up a few other stories that are nearing completion. I know you'll enjoy it. \n\nThe Karen &amp; Alexa stories will be telling us a lot more about what kind of family and background the girls come from. It'll be quite an eye-opener about how Karen has adapted over the years and who she might have been if she were not possessed of such a strong character. A lot of readers tell me how in awe they are of Mike, because he is such a moral force, but keep in mind that he lives in awe of Karen's depth of will and fortitude. \n\nThis'll do for now, I'd better move on with other stories. I'm catching lots of grief for not being so prolific with them. Onwards and upwards. \n\nKeep your stick on the ice! \n\nManagement"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "romance",
        "humour",
        "confessions",
        "incest romance",
        "lesbian romance",
        "music",
        "haute monde",
        "worlds collide"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/mike-and-karen-ch-09"
}