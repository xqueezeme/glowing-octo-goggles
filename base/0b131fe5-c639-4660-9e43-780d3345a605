{
    "title": "Goldilocks & the Three (Were)Bears Pt. 02",
    "pages": [
        "I forgot to mention in Part 1 that this takes place in the same world as The Witch's Offering ( https://www.literotica.com/s/the-witchs-offering-ch-01 ). It's not necessary to read TWO, but it will shed some light on a few of the concepts brought up in this portion of the story.\n\n-Blu\n\n------\n\nPart 2\n\n\"WHY THE FUCK DOES IT SMELL LIKE A WHOREHOUSE IN HERE!\"\n\nGoldie and Arthur's eyes flew open.\n\nAfter their late-night tryst, Arthur remained human as they drifted off. He shifted to Bellator as he rolled off the bed. Facing the door, he tried to hide the human with his body. Goldie shrieked in fear and crawled into the corner like yesterday, covering herself with the sheet.\n\nTwo more werebears stood by the front door. The bigger one's coat had a red tint, while the smaller sported an impressive set of breasts and rich brown fur that bordered on black.\n\nThe larger werebear went ballistic when he saw Goldie.\n\n\"What the fuck is that!\" he bellowed.\n\n\"She's a hiker, Owen. I spooked her up on the trail, and she ran here--\"\n\nOwen crossed the cabin in two strides. A bear-sized left hook crashed into the side of Arthur's head, sending him flying onto the next bed over. \"What did I tell you to call me!\" Owen roared. \"I'm Papa Bear to you, you tiny dicked little bastard! This is my house! Your cock doesn't go in anything besides your hand without my fucking say so. You little piece of shit!\"\n\nAs Owen screamed at a dazed Arthur, the female bear Goldie assumed was Marion rushed over to her. She acted for a moment like she would gather the human up in her arms but froze when she got close. Sniffing the air, the werebear's eyes widened in surprise, \"She's pregnant.\"\n\n\"What?!\" Goldie shrieked. The question was quickly echoed by Owen and Arthur.\n\n\"I can smell it. She's pregnant.\"\n\n\"No...\" growled Owen. When he turned toward her, she could see the hatred and jealousy in his eyes. \"I've been through two mates and been trying for the past two years with Mama Bear. And this little fuck knocks up the first whore to spread her legs for him... IN MY FUCKING HOUSE! NO! The only cubs conceived under this roof will be MINE!\" Roaring, Owen lunged toward her, his maw wide open.\n\nGoldie's world seemed to slow down as the red werebear's jaw snapped closed centimeters from her nose. Arthur had grabbed ahold of his arm, keeping him from killing her. But the enraged Were whipped around, landing another heavy blow on the side of Arthur's head and dropping him to one knee. Owen spun around and lunged at her second time, but again fell short as Arthur grabbed his leg.\n\nSnarling, the younger werebear stood, jerking Owen's leg upward in the process to make his other foot lose traction and send him crashing to the floor. Goldie saw the fur on Arthur's arms ripple from the bunching muscles beneath as he stepped to the side and swung the larger werebear around by his leg. Marion's body obstructed her view as the female Lycan wrapped her in a protective hug. That didn't save Goldie from the sound of splintering wood and plates, pots, and pans spilling onto the floor as Owen slammed into the other side of the cabin.\n\n\"Cover your ears, sweetheart. It will all be over soon,\" whispered Marion.\n\nShe took the Were's suggestion and clapped her hands over her ears. But werebears were powerful beasts, and her hands only deadened the roars of rage and pain as the Owen and Arthur fought. Another loud crash signaled the two smashing through the back door. A few seconds later, they heard a series of increasingly desperate grunts and howls from the other side of the cabin wall. A crunching noise followed a loud pop, and then there was silence.\n\nTears fell onto Goldie's hair as Marion whispered \"Please...\" over and over above her.\n\nArthur's voice came from the shattered door \"Marion? He's...\"\n\nAbove Goldie, Marion sobbed with relief before looking back toward the door, \"He tried to kill a human. I'll vouch for you at the next Run.\"\n\n\"Alright,\" said Arthur. \"Keep her there. I don't want her to see me like this.\"\n\n\"Understood,\" said Marion.\n\nGoldie's sexy and fun dream had turned into a nightmare. Still covering her ears, she quietly cried herself to sleep.\n\n------\n\nShe slowly woke up to Marion and Arthur, both in human form, in the middle of a heated argument.\n\n\"I just fucking killed a man, and now you're telling me I didn't need to?! That you fucking lied just to get us to fight?\"\n\n\"No, Arthur. I lied because one of these times, you were going to piss him off, and he was going to kill you. Like me, you don't have anyone to turn to and nowhere to run out here in the middle of fucking nowhere. If you did, you would have left the moment you came of age. That fucker brainwashed both of us into thinking we had nowhere else to go.\"\n\n\"If you knew all this, why the hell didn't you just leave instead of becoming his fuck toy?\" he snapped.\n\n\"Because of you.\"\n\n\"Don't blame this bullshit on me--\"\n\n\"I'm not. I stayed because I was worried if I ran off, he might blame you. I'm not kidding when I say Owen fucking hated you. He constantly thought you would steal me away or sneak around and knock me up when I was in heat. As bad as his paranoia was getting, I have no doubt if he found a good excuse for the Run, you would be dead already.\"\n\n\"But why lie?\"\n\n\"Because he convinced you years ago, you could never win against him. Why do you think he insisted on the Baby Bear crap? To make you think you weren't shit compared to him. You would never beat him in a fight. He messed with your head so much, you would have convinced yourself you lost before the first punch. But if he threatened your mate and cub...\" said Marion with a wave in Goldie's direction.\n\n\"What's going on?\" she asked, sitting up in the bed and pulling the sheet up over her breasts.\n\nArthur crossed his arms. \"Tell her,\" he growled at the female Were.\n\nMarion walked over and sat on the foot of the bed. The hair on her head, as well as the bush above her sex, matched her Bellator form's dark brown fur. It took a moment for Goldie to remember Arthur saying they didn't wear much clothing. Marion had the same kind of tall but stocky build as Arthur and reminded Goldie of Olympian shotputters. At least those that didn't muscle their breasts into nonexistence because human Marion's boobs made Goldie feel small. The Were wasn't unattractive but fell more into 'handsome' territory instead of 'beautiful.'\n\n\"I don't know if this is good or bad news,\" she said, \"but you aren't pregnant.\"\n\n\"Oh, that's good, I suppose. It does make me a little sad,\" said Goldie as a hand dropped to her belly.\n\nArthur walked up behind Marion, \"I'm sorry, Goldie, but it's time for you to go home. As much as I hate asking you to leave. I have some big messes to clean up,\" he said, pointing over at the cabin's thoroughly destroyed kitchen area and the blanket covering the broken door. \"Since you aren't pregnant, I can't justify letting you stay.\"\n\nShe gave him a weak smile, \"Time to wake up, is it?\"\n\n\"Wake up?\" asked Marion.\n\n\"It's The Veil,\" said Arthur. \"It's making her think this is all a dream, and the longer she stays, the bigger the chances it might crack. I don't want her to leave, but with Owen dead, I think we need to avoid pissing off the Run.\" Breathing deep, Arthur let out a long sigh, \"I imagine once she gets home and goes to sleep again, she'll forget about all the last two days.\"\n\n\"And she's your first. Oh, Arthur, I'm so sorry,\" said Marion looking up at him with sympathy.\n\n\"I don't want to think about it,\" he said before turning to Goldie. \"Let's get you packed up.\"\n\n---\n\nAs Goldie put her hiking pack back together, Arthur pulled his tablet off a shelf and tapped the button for a video call.\n\nA few seconds later, a gray bear with only a few wisps of brown left in his fur popped up on the screen. \"Artie! Good to see you! What can I do for you?\" asked the bear on the screen.\n\n\"I'm sorry, Chancellor, but this isn't a courtesy call. Owen is dead. We got into a fight, and I killed him.\"\n\n\"No, you don't, Arthur!\" yelled Marion bouncing up from the bed and yanking the screen from him. \"I'm the one who instigated the fight. It's my fault, not his. Arthur didn't even want to fight him.\" she told the Were on the screen.\n\nThe gray Lycan frowned, \"Arthur isn't the first to kill another over a mate, but with such a small population, we expect restraint settling these matters. Since both of your admissions are now recorded, I'll call a Run so we can discuss punishments, as well as succession for Owen's holdings. I'll contact you with the time.\"\n\n\"Yes, Sir,\" they said in unison.\n\n\"What did he mean by Run?\" Goldie asked.\n\nThankful for something to break the mood, Arthur chuckled. \"A Run is just our name for a council of werebears. A long, long time ago, someone commented that the only time you could get a bunch of bears to act civil in one place was a Salmon Run. I'll let you figure out the rest.\"\n\n------\n\n\"There's my walking stick, leaning up against that boulder,\" said Goldie running ahead and leaving the two werebears behind.\n\nArthur sighed heavily, and Marion patted him on a furry shoulder. \"We'll have to be at the Run in a few days. You could ask about bringing her in.\"\n\n\"I think you and I are in enough trouble already. 'If you love someone, set them free. If they come back, they're yours; if they don't, they never were.'\"\n\n\"That's a lot of faith to put in an old saying.\"\n\n\"It's all I've got right now.\"\n\nGoldie trotted back to them, her expression sad. \"I guess this is goodbye.\"\n\nMarion knelt down, and the blonde went over and wrapped her arms around the werebear's thick neck, \"Thank you for protecting me.\"\n\n\"We're a little harder to kill and heal a lot faster than you humans. It was an honor to protect Arthur's first.\"\n\n\"This feels a little strange to say since this is all a dream, but take care of him while I'm gone.\"\n\n\"He's still pretty pissed off at me right now, but if he ever forgives me, I'll be happy to.\"\n\nLetting the female Lycan go, Goldie turned and threw her arms around Arthur. \"I've known you for like... less than a day, and most of that was spent in bed. So, why am I crying?\"\n\nNot trusting his voice, Arthur grunted in response. When she pulled away, she saw small patches of wet fur below the werebear's green eyes.\n\n\"I know you won't remember me, but I'm going to miss you. Yesterday will live in my memory until the day I die.\"\n\nLeaning forward, Goldie kissed him on the nose before turning and walking back to the hiking trail. Glancing one last time at the boulder where this all started, she started back toward the trailhead and her car.\n\n------\n\nA long string of notification tones announced her phone finding a signal, thankfully she set up her autoreply with \"Out hiking\" before she left. She briefly considered answering a few, especially the twenty or so from her mother. Instead, she put the phone on mute and savored the memories of yesterday as she drove home.\n\n------\n\nThe following day Goldie awoke to the sound of an incoming call on her phone. She groaned at the name on the screen before tapping the answer button.\n\n\"Hi, Mom,\" she croaked.\n\n\"How was your trip, dear?\"\n\n\"What trip? My trips to the bathroom and back? I've been sick for the past two days, Mom.\"\n\n\"Sick? Your autoreply said you were out hiking, and your car wasn't there when I drove by.\"\n\n\"You must've just caught me when I was out getting some Pepto or something, Mom. Believe me, I haven't been in any condition to travel, much less hike.\"\n\n\"Teddy at the gas station said he saw you, and you left heading north.\"\n\n\"I--I think I started up that way, but then got to feeling sick and came home. Listen, Ma, the last couple of days are pretty fuzzy. Just know that I'm home now, and I'm feeling a little better. I'll feel a lot better once I get some migraine meds for this headache from hell.\"\n\n\"Okay then, I just wanted to check on you. If you need me to bring you some soup or anything, just let me know.\"\n\n\"Thanks, Mom. Love you.\"\n\n\"Love you too, Anna. Hope you're feeling better soon.\"\n\nTossing her phone back onto the nightstand, Goldie's hand went to her throbbing head. Throwing her blankets off, she crawled out of bed and walked naked into her bathroom to grab a couple painkillers. On her way back to bed, she saw something blue peeking out beneath the covers. Lifting the blanket, she found her 'big boy' dildo sitting next to her little pink wand vibrator.\n\n\"What the fuck?\" she asked out loud. She must have been really out of it last night to have used those and not remember. For that matter, why would she have used them at all? Getting off wasn't high on her list of things to do when feeling sick.\n\nShaking her head in confusion, she dropped the toys into the bottom drawer of her nightstand and crawled back into bed to let the painkillers kick in.\n\n------\n\n\"Arthur and Marion Redclaw, step forward,\" said the gray-furred grizzly.\n\nThe two Lycans solemnly walked into the middle of the room under the watchful eyes of the Run. In Bellator form like the rest of the Were's in the room, The Chancellor stood behind a podium that looked comically small for his size. To either side of him sat the polar bear and Kodiak representatives, the next eldest members of the Run. To the left sat two more grizzly bear Lycans, one each from Canada and the U.S., while on the right were two black bears, also representing their respective countries.\n\nThe old hunter's lodge they stood in was sparsely decorated since the only time it got any use was for small meetings like this. Larger, more public Runs were held at a fancy lodge further north with its own hotel that pandered to Weres, specifically to werebears.\n\n\"The first order of business is the matter of succession. Arthur, you are officially the new head of house Redclaw, succeeding Owen Redclaw. That doesn't--\"\n\n\"What about Marion? She's older than me,\" Arthur asked.\n\n\"Marion Redclaw declined clan leadership citing her poor judgment involving Owen Redclaw's death as well as personal reasons for not wanting the role. As I was saying, Clan Redclaw's holding's aren't much, mainly a large swath of forest where your house is located.\n\n\"After going over your video interviews, the Run wishes to extend its deepest apologies to Marion Redclaw. Though there were indications Owen would take you as a mate, the Run let its sympathy for his lack of children cloud our judgment. We also did not believe him capable of the psychological manipulation you were both subjected to and would not have agreed to your adoptions were we given any inclination he would keep you in sexual slavery once you came of age. Again we are deeply sorry and will be more vigilant of these kinds of situations in the future.\n\n\"However, a werebear has been killed, and that is no small matter. But we must also understand why. The Lycan community has strict rules against killing humans, and Owen was quite aware of this. In your statement, Arthur, you said that you did not take action against Owen until he attempted to attack your human companion.\"\n\nArthur winced. It had been less than a week since she left, and his memories of Goldie still hurt. \"That is correct, Chancellor.\"\n\nThe gray grizzly gave Arthur an odd look before continuing. \"And Marion, you feel that Arthur's belief Owen was threatening his mate and cub was the only reason he won the altercation?\"\n\n\"I do.\"\n\n\"Do either of you believe that the human would have been allowed to live had Owen won instead?\"\n\nMarion and Arthur looked at each other and replied in unison, \"No.\"\n\n\"Do you feel Owen would have harmed the human without believing she was pregnant with Arthur's child?\"\n\nBy the look on his face, Arthur plainly had no answer, but Marion spoke up. \"Given how unbalanced he had become, I think there is a good chance he would have tried mating with the human by force to reduce the chances of her getting pregnant by Arthur.\"\n\n\"Like hell that would have happened,\" Arthur snarled.\n\nThe polar bear looked up at the gray grizzly, \"It sounds as though this outcome was inevitable,\" she said in a heavy Inuit accent.\n\nThe Chancellor nodded, as did a number of the other Lycans sitting around the room. \"I believe that we must look at this as the best possible outcome, as the other would have likely led to both Arthur's death and that of the human.\"\n\n\"A werebear's death cannot go unpunished,\" said the grizzly from the U.S.\n\n\"That is true.\" Said the Chancellor. \"However, we choose the severity of the sentence and when it is carried out. In this situation, we have a very young clan leader who needs the opportunity to grow his clan into more than a cabin out in the woods, and we all believe that harsher punishments are unwarranted. I recommend we withhold sentencing for three years, during which Marion and Arthur will be on probation. Is this acceptable to the Run?\"\n\nThose in the room nodded their heads, muttering various versions of \"Aye.\"\n\n\"In that case, I believe we are adjourned. Thank you all for coming,\" said the Chancellor before stepping around the podium and coming over to the young Redclaws.\n\n\"Thank you, Jaques,\" said Arthur.\n\n\"Don't thank me, young man. I withheld my vote since I didn't think I could be impartial. Marion, the Run recommends some kind of counseling to help with what you've gone through, and because we feel partially responsible for putting you in that situation, we will cover any costs should you go that route. It's up to you.\"\n\n\"I think I'm needed at home right now. The Run may have forgiven me, but Arthur hasn't yet. But more than that, Owen kept Arthur from learning a lot of things he will need to know as a clan leader.\"\n\n\"Oh? Like what?\" asked the gray-furred bear.\n\nArthur looked down in embarrassment, \"Marion had to drive us here.\"\n\n------\n\nGoldie stared into the trunk of her car.\n\nWhere the fuck was her walking stick? It's not like someone could just lose a five-foot-long wooden staff. Frustrated, she tossed her pack in the trunk and slammed it closed.\n\nThis week had been a complete shit-show. She kept on bouncing between pissed at everything and feeling like she was missing something important. She also went home on her lunch breaks more than once just to get off and had no idea why she was so horny. On top of that were the mounting claims that she left last weekend even though she knew damn well she had been sick in bed. By Friday, she felt so frazzled her boss sent her home early and told her to get some rest.\n\nRest wasn't what she needed. She needed to be naked out in the woods with a vibrator shoved up her pussy while the wind caressed her body. She needed some big-cocked stranger to walk up behind her and fuck the hell out of her. Then afterward, she needed to be held tightly to a warm furry chest as a huge cock speared into her sex--\n\nGoldie growled, she didn't know where these thoughts of fucking some furry beast with a massive prick were coming from, but they were starting to piss her off. The fantasies themselves were pleasant, but it annoyed her how they kept seeping into her 'normal' repertoire of hot images she jilled off to.\n\nGreat, now she was pissed because she lost her walking stick and horny from the images of getting fucked by some big hairy creature.\n\nClimbing into the driver's seat, she slammed the door closed. Her tires squealed as she pulled out of her apartment complex's parking lot and onto the street.\n\n------\n\n\"Fill 'er up, Ted,\" she said as she climbed out of her little sedan.\n\n\"Heading North again, Goldie?\" asked the old man.\n\nShe bit back a sharp reply and instead smiled, \"I didn't make it very far the last time, so this is take two. I'm trying some new trails, though. The last one didn't have good reviews to begin with, and since I got sick on the way there, I'm figuring it's a sign I should hike somewhere else.\"",
        "\"Sounds like a plan. Be sure to get some more bear spray. It looks like the can on your keyring is empty. I feel sorry for whatever you used that on.\"\n\n\"Wha--?\" pulling up her car keys, she saw the safety tab was missing and could even make out some dried spray around the nozzle. \"But I never used it....\"\n\n\"If that thing went off, you'd know. That stuff is no joke. Maybe it was defective. Best go inside and get yourself a new one.\n\n\"I will. Thanks, Teddy.\" Still staring in confusion at the canister, Goldie wandered into the store for a new one.\n\n------\n\nWhy was she here?\n\nMore importantly, how the hell did she know how to get here. The GPS on her phone finally stopped bitching at her to turn around and get back on the main road when her phone lost signal. And without any electronic help or even a map, she somehow found herself at the head of the hiking trail she planned on visiting last week.\n\n\"Well, I'm here,\" she muttered to herself. Getting her pack out of the trunk, she went through her mental pre-hike checklist ticking every box except for her walking stick. Maybe she'd find a replacement on the trail. Goldie made that stick back when she was a teen, and it sucked that she somehow lost it. Weaving between the posts keeping ATVs and snowmobiles out, she smiled at the sense of peace that came over her as she made her way into the woods.\n\n------\n\nThis was it, this was the place.\n\nSetting her pack down next to a boulder, she stared up and down the trail just to be sure no one was coming. Already breathing hard with arousal, she leaned against the rock and reached down to unbutton and unzip her khaki hiking shorts. She moaned quietly as her fingers slipped under her panties and across the golden hair above her sex. Spreading her pussy lips with two fingers, she used a third to just barely brush across her clit.\n\nGoldie's hand jerked out of her panties like she burned it. Wide-eyed, she looked around, taking in the scenery around her. This wasn't some strange sense of d\u00e9j\u00e0 vu. She had been here before and done the same thing in this very place. She knew she had... but why couldn't she remember it?\n\nButtoning up her shorts again, she walked around the boulder, searching for anything else that might trip a memory. She didn't make it very far before freezing in her tracks and staring hard at a couple of small bushes on the side of the rock facing the trail. Kneeling, she reached between the thin branches and leaves and pulled out her walking stick. At the same time, she remembered putting it there as a deep voice behind her said, \"If you love someone, set them free. If they come back, they're yours; if they don't, they never were.\"\n\n\"I... put this here,\" she said, standing up and staring at the lacquered piece of wood. \"I put this here so I would find it again.\"\n\nLooking toward the trail and the crest of the hill, she got the feeling something terrifying came from that direction.\n\n\"And I grabbed my pack and my clothes... and ran that direction,\" she said, looking through the trees and down the gradual slope. Shouldering her pack, she grabbed her walking stick and started down the hill.\n\n------\n\nThe sense of d\u00e9j\u00e0 vu returned with a vengeance when she saw the cabin through the trees. There was no denying she had been here. As she approached the edge of the log cabin's clearing, she darted to the side and hid behind a tree as a light brown grizzly bear came running around the side of the house, barreling towards her as it grunted and roared its warning. She heard it come to a skidding halt a short distance away.\n\nHuffing and woofing, the grizzly paced back and forth until Goldie peeked out from behind the tree. When it saw her face, it charged a few steps closer, baring its teeth and roaring at her.\n\nGoldie dropped her pack to the ground and propped her walking stick against the tree. Stepping out, she cautiously took a few steps toward the bear. The beast continued its rant, roaring in her direction, standing on its hind legs, then dropping to the ground with a loud thump. As she got closer, it started snapping its teeth at her, but not once did it come any closer. When she stood right in front of the grizzly, it roared one last time right in her face. She could see every tooth in its maw, and all it needed to do was move forward a little, and it could have taken her head off.\n\nEvery one of her instincts told her to run away as far and fast as she could, but something in her gut told her...\n\n\"You won't hurt me. Will you?\"\n\nThe grizzly's mouth snapped shut, and it stood there glaring at her. Breathing heavily from the exertion of its display, puffs of air from its nose ruffled her shirt.\n\nDropping a shoulder underneath the bear's jaw, she wrapped her arms around its furry neck.\n\nThe beast sat down, dragging her along while at the same time growing in size.\n\nFurry arms wrapped around her back and held her close. \"Idiot human. You should've run away,\" said the bear.\n\n\"Arthur!\" she gasped, squeezing him tighter. It was as though something cracked around her, and memories of their day together began slowly trickling in, filling in the gaps of her \"sick days\" last weekend.\n\nThe sound of laughter came from the direction of the cabin. Curious and a little worried, Goldie pulled herself up to look over Arthur's shoulder. Near the back door stood another werebear with dark brown fur.\n\n\"Damn, that girl straight up handled you,\" said the female Were.\n\n\"Don't care, she came back,\" he rumbled, holding Goldie a little tighter. \"Despite The Veil, she came back.\"\n\n\"Yeah... the council isn't going to be too happy she cracked it. But there's no way we could have guessed she'd find her way back here. Before you two get naked and start sexing each other up, we should go back to her car and show her how to get here properly for her next visit.\"\n\n\"Give us a few minutes,\" said Arthur, as a content smile split his muzzle.\n\n------\n\nAfter Marion showed Goldie how to get to the little parking area in the valley below the cabin, the Lycans shifted to their human forms and they all sat down for a lunch of steak, roast beef hash, and, to the human's delight, buttered biscuits with honey. Once they finished eating, Goldie donned the house attire with a little striptease that got Arthur's undivided attention and catcalls from Marion.\n\n\"Ooohh pretty,\" said Goldie as she examined the bear paw charm with red claws hanging from the female Were's choker.\n\n\"Arthur's idea,\" she said proudly, \"and the material is elastic so it won't rip when I shift. I believe he's thinking about getting a tattoo on his chest of it since he's now the head of Clan Redclaw.\"\n\n\"Not that that means anything, really,\" he mumbled.\n\n\"Not yet, you mean. Goldie, I hope you don't mind sharing Arthur. As the clan leader, he has mating rights to all untaken females within the clan. He also has a say over who the males of the clan breed with. Although in this day and age, it's frowned upon to use that power.\"\n\n\"So, he can fuck you any time he wants?\"\n\n\"Yes, the difficult part seems to be getting him to do it,\" she grumbled. \"He's still mad at me for lying about you being pregnant and forcing him to fight Owen.\"\n\n\"I thought earlier you said the council... err... Run decided this was the best outcome?\"\n\n\"They did, but I still killed the guy who took me in and raised me after my parents died. Even if he was a nutcase towards the end, he wasn't always like that. Calling it a Council is fine. You don't need to call it a Run.\"\n\nGoldie walked over and stood in front of him with her hands on her hips, \"You're a clan leader with one other member, and you're not taking care of her needs.\" She clapped a hand over her mouth, her eyes wide with shock. \"Did I just tell you to fuck another woman?\"\n\nArthur chuckled and pulled her into his lap, \"I guess that answers Marion's question about sharing.\" He lifted her by the waist, and Goldie reached down to angle his hardening cock towards her entrance. She had been waiting for this moment since she took her clothes off and moaned as he slowly sat her back down in his lap. \"What about being shared?\" he asked as he moved her legs to the outside of his thighs then spread his legs. \"what if I want to watch Marion lick you.\"\n\nGoldie giggled, \"Let's just say after I graduated high school, when a couple of my classmates came out as lesbians, it was no surprise to me. I enjoy girls but very much prefer boys.\"\n\n\"Let's save that for another time,\" said Marion, sounding nervous. \"I've never really thought about being with another woman.\"\n\n\"Oh, sorry,\" said Arthur. \"I won't bring it up then.\"\n\n\"No... that's fine. The idea just caught me off guard. But I was thinking it should be just you two for your reunion. But if you let me, I'd like to watch.\"\n\nWhen Goldie didn't object, Arthur nodded and carried the human woman over to his bed, still impaled on his prick. The next few hours were a replay of Goldie and Arthur's first night together but with the addition of Marion sitting on her bed playing with herself and trying to cum when they did. They didn't get as far as assfucking again, but it was a fair trade-off for seeing the look on Marion's face as Goldie slowly sat down on Arthur's Bellator-form cock.\n\nOnce he filled her pussy with cum they lay there, snuggled together as he slowly softened inside her.\n\nAs she hummed with happiness and contentment, Goldie caught a glimpse of longing in Marion's eyes as she watched them.\n\n------\n\nThe next day Arthur sat at the little table going over Redclaw's financials on his tablet. It still didn't feel like much of a 'clan' with only him and Marion. Still, Marion constantly assured him now that \"Owen the Hermit\" was gone, other Werebears would be interested in joining, especially if it came with a degree of seniority for joining quickly.\n\nShe also warned him to be wary of older male bears interested in joining their clan. Those unable to rise higher in their own ranks may want to take advantage of his youth and inexperience to usurp his power. There was so much new crap he had to deal with and worry about as a clan leader. Thankfully financials weren't one of those things. Math was his strong suit in school, and while Owen didn't leave them much, it was enough to work with.\n\n\"Arthur?\"\n\n\"Yes, Goldie?\"\n\n\"You need to make love to Marion.\"\n\nHe looked up from his tablet, \"That didn't sound like you just wanted her to join us.\"\n\n\"No, it wasn't. Though I would like to join in, I think I should just watch like she did last night.\"\n\nArthur glanced out the window where Marion was hanging the blankets and sheets on the clothesline. He and Goldie got a little messy last night. \"What brings this on?\"\n\n\"I saw her face when we were laying there cuddling. I don't think she's ever experienced that. The more I've thought about it, the more it seems like Owen was just using her as a hole to pop out a baby... cub... child. I mean, just look at how he had you go down on her to get her ready whenever he fucked her, and can you think of any time those two cuddled afterward like we do?\"\n\n\"Okay, but things need to be different with her than with you.\"\n\n\"Why?\"\n\n\"Because you were my first, and you cracked The Veil to come back to me. As far as I'm concerned, if I'm the King of the Redclaws, you're my queen, werebear or not.\" He couldn't miss how the human woman's nipples hardened after his statement or the faint scent of arousal coming from her crotch. He tried to ignore it, but his cock didn't. \"Her and any other female werebears wanting to join the clan need to understand that.\"\n\n\"I see where you're comin--\"\n\nThe notification of an incoming video call interrupted her.\n\n\"Amanda Blackpaw?\" Arthur wondered aloud. He recognized the clan name but couldn't remember meeting any of them. He tapped the accept button on the tablet.\n\n\"Hi! I'm trying to contact Arthur Redclaw?\" asked the werebear on the screen. Amanda's fur was a touch darker than his, and she looked to be a bit taller and less chesty than Marion.\n\n\"Speaking.\"\n\nThe woman on the screen suddenly looked very nervous. \"Oh! I didn't know this was your--Well, umm... my sister and I would like to join Clan Redclaw. We feel honored to have been born into Blackpaw, but there are only so many males to go around. Umm... neither of us have a lot of... experience with men--\"\n\n\"Why is she telling you that?\" Goldie asked. Amanda went quiet at the sound of her voice.\n\n\"Remember what Marion said. As clan leader, I have breeding rights with any unclaimed females. She must see her experience in bed as part of the application process.\"\n\n\"Waitaminit... you said that they offered clan leader to Marion first. Does that mean if she accepted and wanted to sleep with you...\"\n\n\"I would have been obligated to get it up and do whatever she wanted with me. Male or female doesn't matter. The perks of being clan leader are the same.\"\n\n\"And she gave that up? Silly girl,\" said Goldie, holding out a hand for the tablet. \"Did I ever mention what my job is?\"\n\n\"No, should I be worried?\"\n\n\"Uh... Sir?\" came Amanda's voice from the tablet, but they both ignored her.\n\n\"A little, I'm a secretary for a Human Resources firm, I have a Bachelor's degree in HR management, and I'm working online for my Masters. Interviews, applications, and workforce management are my bread and butter. Just keep the financial crap you were working on earlier far away from me. Tablet, please.\"\n\nArthur glanced at the nervous Were on the tablet screen and slowly handed it over to Goldie. He briefly got the impression he was feeding newborn lambs to a wolf. Instead of sitting in one of the other chairs, she plopped down in Arthur's lap but was careful enough not to bend his cock at an odd angle. The damp warmth of her pussy on the base of his dick did nothing to help his erection go away.\n\n\"Hi there, Amanda,\" Goldie said with a pleasant and disarming smile. \"First things first. If you and your sister wish to join Clan Redclaw, then get her out here, please.\"\n\n\"She gets... anxious....\"\n\n\"Then she must not be very interested in joining Redclaw. We'll continue with just you.\"\n\n\"I'm here! I'm here!\" another female called out before nearly falling into the picture.\n\n\"Excellent, and your name is?\"\n\n\"Amber, Amber Blackpaw.\n\n\"Named for your fur color, I'm guessing?\n\n\"Yes, Ma'am.\"\n\nIt's very pretty, but I need you to shift to human. I'm a human, and I'm most familiar with human faces.\"\n\nThe two Weres on the screen looked at one another for a moment before shrinking into their human forms. As they adjusted the camera for their new height, Goldie looked back at Arthur. \"Are all werebear women stacked? Here I thought I had decent-sized boobs, but if they all look like Marion and these two, I'll be part of the itty-bitty-titty club.\"\n\n\"Ma'am, we aren't all this big, but with our stature, small-breasted Were-women often get growth spells or potions just so our proportions match,\" said Amber. \"A flat-chested female has a high chance of getting mistaken for a male.\"\n\nGoldie tapped the screen muting the microphone. \"They keep saying male and female. Maybe it's just on the internet, but don't you go by the animal-specific genders?\"\n\nArthur raised an eyebrow, \"I don't mind being called a boar, but are you going to call Marion and those two sows?\n\n\"Wait, 'sows' as in female pigs?\"\n\nArthur nodded\n\n\"Male and female make a lot more sense now.\" Unmuting the mic, she smiled at the screen. \"Thank you for that. It's good to know. As to what you said earlier, Amanda, your experience in bed, or lack of, is irrelevant. Arthur is rebuilding a clan from scratch and needs to know what kinds of skills you can bring to the table. Amanda, you go first. What skills do you have that can help this clan grow?\"\n\nArthur felt sorry for the girl on the screen as she stammered through a couple of answers that had something to do with teamwork and taking the initiative.\n\n\"Stop right there, Amanda,\" said Goldie, \"take a moment to collect your thoughts and try to remember that you are not interviewing for a job in fast food but joining a clan, a family, and an organization. Amber, would you like to go next.\"\n\nLooking dejected, the other Lycan shook her head. \"No, Ma'am, I don't have any answers better than Amanda's.\"\n\nGoldie regarded the amber-haired girl for a moment, \"That's very brave of you to admit. Ladies, I'm sorry to say that a couple of virgin pussies are not enough to become a Redclaw. However, I want you both to think carefully about your schooling, hobbies, activities you enjoy, and any skills you have that Arthur could find useful. Take all that, put it into a professional resume, and send it to this number. From there, we will set up a second interview. Thank you, ladies. I wish you the best of luck.\" She laid the tablet down but kept a finger underneath.\n\n\"Damn, Goldie, you're vicious.\"\n\n\"No, I'm not. I'm putting your clan's needs over my sympathy for those girls. With luck, they'll take what I said to heart offer up some damn good resumes. Something tells me if they get a second, in-person interview, they won't leave as virgins.\"\n\nArthur noticed Goldie's hand move beneath the tablet and raised an eyebrow at the woman, \"Did they just....\"\n\n\"Every word.\" She blinked a few times and shook her head as if trying to clear out some cobwebs. \"What the hell is wrong with me? First Marion, now I'm setting you up to sleep with a couple of girls fresh out of high school. Why am I not more upset by this?\"\n\n\"Because they aren't any threat to you. I'm not trying to put them down, but in my mind, they are occasional dalliances and clanswomen that will need my attention through their heats. You are something more.\"\n\nThe tablet buzzed and played the tone for another incoming call, \"Sonya Stormpelt?\" Goldie asked.\n\n\"Never heard of the Stormpelts. They must be a smaller clan. Go for it.\"\n\nSonya turned out to be a bust. The moment Goldie mentioned she was human, the reddish-brown Lycan stopped talking to her altogether and began making some very blatant sexual overtures toward Arthur.\n\nShe pissed him off enough Arthur had Goldie hold the tablet over her head as he pushed her over onto the table and slid his prick inside her. As he pounded the human's pussy he explained that he was doing just fine for tight, wet places to put his cock and that she need not call back. Goldie managed to wail she was cumming twice before Sonya disconnected.\n\n\"You weren't even close to getting off,\" Arthur chuckled.\n\nShe smiled over her shoulder and shook her ass back and forth. \"Nope, but she doesn't know that,\" said Goldie before pulling up a menu and saving the last minute of video.\n\nThe calls kept coming in, and they tended to be either underskilled or looking for easy power. The unskilled were given the same treatment as the two Blackpaw girls, while those looking for power either got a pleasant \"fuck off and don't call again\" if they were male or got to see Goldie bent over the table if they were female. Only one of the female Lycans backed off and said she would call again with a more professional offer.\n\nThe two keepers for the day were Aria Whitefang and Carl Silvermane. Aria was an avid gardener looking for a new challenge and a younger male to take care of her heats. Carl hailed from the States and moved up to Canada three years ago after his human wife of twelve years passed away. Like Aria, he was looking for some younger companionship and figured the rekindled Redclaw clan might offer that opportunity. What caught Goldie's attention was his many years spent in the construction industry and his hobby as a carpenter. The pictures he sent of his woodworking projects were mainly his shop tools, every one made by him out of wood, even his bandsaw.\n\nAnother call came in, but the name on the caller ID just said 'Jaques.'",
        "\"I'll take this one,\" said Arthur. Setting Goldie off his lap.\n\nThe gray grizzly on the screen looked none too happy, \"Arthur, I just received a message from the Magi. They say there's a crack in The Veil not a dozen meters from your house.\"\n\nArthur suddenly looked nervous, \"About that... the human Owen tried to kill. She came back, and The Veil cracked when she remembered me.\"\n\n\"Dammit, Arthur! You're on probation! Why am I hearing about this from the Magi and not you?\"\n\n\"Honestly... I didn't know what to tell you. And also... we were kind of celebrating our reunion.\"\n\n\"I realize you're young Arthur but don't think with your dick first. What are your plans for this human now that she knows about us.\"\n\n\"I don't know... Goldie, what are your plans?\"\n\n\"Goldie?\"\n\n\"When you see her hair, you'll understand.\"\n\nGoldie hopped back up into Arthur's lap. She briefly covered her breasts but then thought that was silly, considering Weres didn't seem to have much time for clothes. She did get a tiny thrill at seeing the old bear's green eyes widen as her arm fell away. \"For now, I plan on visiting on the weekends and using my background in human resources to help Arthur get established. After that... I don't have a good idea what lies ahead, so I'll play it by ear.\"\n\n\"Do you plan on joining Clan Redclaw?\"\n\n\"I'm human. Is that even possible?\"\n\n\"A clan is many things, and one of them is a family. In the right situations, family ignores things like Were or human. Because of this, the Run puts no restrictions on who joins a clan, leaving that to the individual clan leaders. If Arthur accepts you as a Redclaw, then you would be subject to all of the same rules and restrictions as a Were.\"\n\n\"Like breeding rights?\"\n\nThe gray grizzly nodded, \"Forcing another in your clan to mate with you is heavily frowned upon but not illegal as such things are considered internal family matters. The most the Run can do is remove a clan member from a bad situation and even then could only step in to take action against a clan leader after repeated interventions. As you are so friendly with Arthur, I'm guessing you have an idea of Marion's ordeal these past years.\"\n\nGoldie nodded, frowning.\n\n\"Had we known about her situation with Owen Redclaw, the Run would have stepped in, but since she chose to protect Arthur by keeping quiet, our hands were tied. I'm only telling you all of this to point out the huge differences between werebear culture and human. Our system may seem archaic, but we are an honorable people, and situations like with Owen are exceedingly rare.\"\n\n\"If I joined Arthur's clan then changed my mind, is there something to stop me from leaving? Is it like marriage and I'd need to get a divorce?\" she asked.\n\n\"No, but as I said, it's a family. Marion could have walked away two years ago but didn't leave. If you join his clan, I'm sure you will find many more reasons to stay than just Arthur.\"\n\n\"Thank you, Jaques. I'll think about it.\"\n\n\"While you're thinking about that, think about toning down some of your rejections. We received a report that Sonya Stormpelt was furious with how you spoke to her. Clan Stormpelt is small, like Redclaw, and a merger could be beneficial for both of you.\"\n\n\"I can tell you a 'merger' was the last thing on her mind, and I won't tolerate people who disrespect Goldie,\" Arthur snarled.\n\n\"Wait... A merger?\" Goldie asked, \"is she their clan leader?\"\n\n\"That is correct,\" said Jaques.\n\n\"I'm with Arthur on this. She had no intention of a merger. It would have been a takeover. But that explains why she got so pissed about our little show.\" She looked back at Arthur, \"If her only play was spreading her legs for you, then stripping away that power probably made her furious.\" Looking back at the screen, her lips widened into an evil grin. \"I don't regret how Arthur handled her at all.\"\n\n------\n\nMarion entered the back door of the cabin to the sight of Goldie in the middle of a video call with a female werebear who looked like she'd rather be anywhere in the world as long she didn't have to deal with the blonde human and her probing questions. Arthur laid back on his bed, watching as Goldie deconstructed the werebear's initial bluster to figure out if the woman would make a good fit for the clan.\n\n\"What are you doing?\" Marion asked him.\n\n\"Watching the master at work. I think I've learned more about interviewing and the methods of distraction people use to gloss over their weaknesses than I could in ten years of learning by experience.\"\n\n\"That sounds both extremely useful and terrifying.\"\n\n\"For the people on the other end, I imagine it's extremely terrifying. No joke, I wouldn't survive one of her interviews.\"\n\n\"It's a good thing you're the clan leader,\" Marion said, laughing.\n\n\"Speaking of being a clan leader...\" said Arthur, beckoning her over to the bed.\n\nHer smile faded as she came over and stood next to the bed, eyeing Arthur's cock as it began to grow. Arthur patted the bed on the other side of him. The gesture was only slightly different from when Owen patted his lap, expecting her to climb on and ride him. She was both elated and filled with dread by the simple movement. Marion had wanted the younger Lycan ever since he came of age, and her desire for him only grew when Owen began having Arthur eat her out before the older Were fucked her. She wanted him inside her but was scared he would turn into another Owen.\n\nStraddling Arthur's waist, she reached down to guide him in when he gently pushed her to the side. Laying her down next to him, he put an arm around her shoulders before going back to listening to Goldie.\n\nThe Lycan on the screen had changed. The male offered an impressive set of qualifications that bordered on unbelievable for his age. He also kept mentioning that discretion and secrecy were paramount concerning his approaching Clan Redclaw. Apparently, he was quite important within his clan, and they would be distraught to know he was looking elsewhere. After a polite 'don't call us, we'll call you,' Goldie terminated the feed and muted the tablet before looking over at them.\n\n\"Everything alright, Goldie?\" Arthur asked, seeing the look of bewilderment on her face.\n\n\"I'm just trying to wrap my head around everything that's happened today,\" she said. \"I mean, I've been topless in front of more people today than probably the rest of my life combined. You bent me over the table and fucked me, on camera no less, and I didn't object or even bat an eye. I can count the number of times I sent past boyfriends sexy pictures on one hand.\n\n\"And now I feel like I should be pissed as hell that my man is cuddling with another woman. Instead, I just feel... happy for you,\" Goldie finished while looking at Marion.\n\n\"Happy for me?\" asked Marion. If Goldie answered, she didn't hear it as Arthur leaned down and kissed her.\n\nOwen never kissed her like this. Whenever the late head of the Redclaw Clan put his lips to hers, it wasn't tender and caring like Arthur's kiss. It was more of a claiming, a demand for submission, and a reminder that she belonged to him as his tongue forcefully speared into her mouth. Only after he first started fucking her did she see Owen's kisses as love, but over the last two years, she came to understand the man didn't love her at all. She was just a way to an heir.\n\nHowever, Arthur did love her. First, as an adopted sister, then later as a woman when Owen discovered orgasms during sex increased a woman's chances of getting pregnant. Unless she was in heat, he couldn't get her off with only his dick, and he wasn't about to waste his precious time and effort. The day after Arthur came of age, Owen pulled him over and shoved his face into her crotch, telling him to lick her until she came. Marion could tell the young Lycan was shocked and more than a little confused at first, but after tentatively obeying \"Papa\" and seeing how good his tongue made her feel, he eagerly went about his new task.\n\nSoon afterward, she realized Arthur loved and wanted her, but by that time, Owen had them both brainwashed into blindly obeying him. Fearing severe punishment, neither she nor Arthur would dare take things further.\n\nNow things were about to go further, a lot further, and Marion didn't really know what to do. Owen had a phobia about putting his dick in a woman's mouth. She tried to suck him hard once during her first heat, but he shoved her away and slapped the hell out of her, screaming he wasn't going to let her bite his dick off.\n\nFrom earlier conversations that day, it sounded like Goldie let Arthur fuck her ass. She didn't know what to think about that. Owen was only interested in maintaining his lineage, and that wouldn't happen by cumming in her ass. Despite having sex almost daily for the past two years, she felt pathetically inexperienced compared to Goldie and Arthur.\n\nArthur's tongue brushed across her lips, pushing slightly. She expected the hand on the back of her head, the mashing their lips together as his tongue drove into her mouth. Instead, when she let him in, Arthur's tongue teased the tip of hers as if inviting it to dance. As her and Arthur's tongues dueled, Marion let out a shuddering sigh of relief.\n\nShe pulled away to collect her thoughts, and while Arthur's lips chased hers for a moment, he let her go. Such a simple gesture meant the world to the female Lycan and reminded her of Arthur's saying when Goldie left last week.\n\n'If you love someone, set them free. If they come back, they're yours; if they don't, they never were.'\n\nHe let her go, and Marion knew that he wouldn't stop her if she got up and walked out of the cabin right now. He would try to convince her to stay, he might even block the door, but he would step aside and let her go in the end. Laying here with his arm wrapped around her and face only centimeters away, she was more free than she had ever been in her life. Arthur set her free, though she doubted he understood the implications of his simple action. Now it was her choice to decide if she wanted to come back to him.\n\nReaching across his chest, Marion pulled herself up and pressed her lips against his.\n\nMarion pushed herself up without breaking their kiss and threw a leg across Arthur's waist before pulling herself on top of him. As their tongues intertwined, Arthur's hardening cock came to rest against her ass. As the head slid over her pucker, Marion finally broke the kiss. She sat there panting for a moment before looking over at where Goldie lay on the other bed. The blonde was up on her side with a leg raised and a hand between her legs, slowly rubbing herself.\n\n\"Goldie?\"\n\nHer fingers stopped moving, \"Yes?\"\n\n\"There's a lot of things I never did with... There's a lot of things I haven't done, but you seem to know all about. Do you think you could teach me how to go down on him and take it in my... bottom.\"\n\n\"You've never given a blowjob?\"\n\n\"He thought I would bite it off.\"\n\n\"For him, that was probably a wise move,\" Arthur chuckled.\n\nThere was a long moment of awkward silence before Goldie noticed the expectant look on the female Were's face. \"Oh, you mean now?\"\n\nMarion nodded.\n\n\"Nope,\" said Goldie, shaking her head. \"Much as I would love to come over there and join you, I'm staying over here. Yours and his first time is yours and his first time. Arthur's a fast learner, trust him and let him make love to you. Save the backdoor stuff for later. Since it will be your first time back there, we will need to make sure you are prepared so you can really enjoy it.\"\n\nMarion's face fell in disappointment when Goldie wouldn't help but appreciated it at the same time. Looking down at Arthur, she asked, \"Is this what we are doing? Making love?\"\n\n\"Goldie pointed out you've had a lot of sex, but it was all 'making cubs' not 'making love.' So, yes.\"\n\nAfter thinking for a moment, she cast another pleading look over at the human. \"I don't think I know how to make love,\" she said.\n\n\"That's okay,\" said Goldie. \"Let Arthur show you this time, and you can return the favor later after you know what it's all about.\"\n\nBefore Marion could bring up anything else, Arthur drew her down into another kiss. As their tongues danced, he shifted his hips until the head of his cock pressed against her entrance. Wrapping his arms around her, he slowly but insistently pushed inside. Marion moaned into his mouth as his prick spread her open. It felt like she could feel every bump and ridge on his cock as he gradually filled her. This was so insanely different from her past experiences, where she sometimes barely got the chance to squirt some lube on her pussy before Owen shoved his dick inside her. But Owen was gone, and Arthur's cock, that she had wanted for so long, was starting to slide in and out of her.\n\nBreaking the kiss, Marion laid her head on his shoulder and just savored the feeling of her lips tingling and his arms around her. A faint buzzing made her lift her head and look towards Goldie. The blonde had a little pink wand with an oval head pressed over her clit as she watched them.\n\nArthur followed her gaze and smiled, \"Cum for us, Goldie.\"\n\nThe human glared at him. \"What's your obsession with seeing me get off?\" she said, sounding annoyed. Marion noted that, contrary to her tone, Goldie fiddled with the dial on the end of the wand, and hum's volume increased.\"\n\n\"I'm going to record you one of these days and show you exactly why. But right now, I have an idea, and part of that is letting us watch you cum.\"\n\n\"Oh, fine,\" she said before closing her eyes and turning the wand up another notch.\n\nMarion saw the blonde get off a few times last night. It was the first time she had seen anyone orgasm besides the Redclaw clan's former leader. She had to admit, the way Goldie's face twisted up, and she lost control of her body from the intense pleasure was incredibly arousing to watch. In only a couple of minutes, the female Were was treated to the scene again as Goldie clamped her legs closed around her toy while moaning and clawing at the bedsheets.\n\nStill breathing hard, she looked over at Arthur. \"Happy now?\"\n\n\"Very,\" he said, grinning. Wrapping his arms around Marion, he rolled them over, so he was on top. Despite his efforts, he slipped out of Marion's sex, but only for a moment before finding her entrance and filling her again. Pushing himself up into a kneeling position, he held a hand out toward Goldie.\n\n\"This?\" she asked, holding up the wand.\n\nArthur nodded, \"I hate admitting this, but I'm not going to last much longer. I'd like it if I wasn't the only one to get off.\" He blushed bright red before looking down at Marion and saying, \"I've been wanting to do this for a very long time.\"\n\n\"Is that why you wanted to watch me? To distract yourself?\" asked Goldie.\n\n\"A little. It didn't work.\"\n\n\"You are pretty sexy when you get off,\" said Marion.\n\n\"Time for me to find out if the same is true for you,\" said Goldie holding out her toy. Arthur reached out, but the blonde pulled it out of his reach. \"Just for your information, using a girl's vibe on another woman without asking is a big party foul.\" Noticing the end glistening in the light, she said, \"Oops, forgot to wipe it down. By the way, that's another party fou-- Hey!\" Goldie yelled as Arthur snagged the pink wand from her hand. Giving it a quick sniff, he popped the oval end into his mouth as Goldie stood there and fumed. Marion, however, started laughing at them. Not little giggles or titters, but belly-shaking guffaws.\n\n\"Wush sho funny,\" asked Arthur around the toy. Marion looked up at him and just laughed even harder. Arthur wasn't about to complain. It was making her pussy squeeze him in some interesting ways.\n\nTaking a couple seconds to calm herself, Marion looked up at him. \"You're balls deep inside me with your girlfriend's vibrator sticking out of your mouth like a big, pink toothbrush,\" she wheezed before putting a hand over her mouth to contain her laughter.\n\nHis mouth widened into a mischievious grin as he took the vibrator out of his mouth and turned it all the way up. As he brought it down to Marion's clit, Goldie snatched it from his hand.\n\n\"It may be small, but this is too powerful for that. Top speed on the clit all at once can hurt. Work your way up,\" she said, twisting the dial down to quarter power and giving it back to him. \"I suggest you give it to her instead. She knows what feels good and what she can take better than you.\"\n\nAfter a moment's thought, Arthur spun the toy in his hand and offered it to Marion.\n\n\"This feels like cheating, using something like this our first time together,\" she said, taking the buzzing wand.\n\n\"Count your blessings it's an option. I literally had a boyfriend walk out on me after finding my toys because, 'my dick should be the only thing you need to get off,'\" she said in a mocking, low voice. \"Too many men think it lessens their manliness to add a vibe to their bedroom activities. Idiots. Not swallowing your pride enough to make sure your partner is satisfied lessens your manliness,\" she growled. Coming out of her memories, she looked sheepishly at the two Weres, \"Sorry about the rant. You two should probably focus on each other and forget I'm here.\" Blushing red from embarrassment, she darted over to Marion's bed and hopped up on it.\n\nHeeding the human's advice, Arthur took hold of Marion's ankles and held her legs apart as he slowly withdrew from her sex and pushed back in. Marion let the hand with the toy drop to the bed as she just enjoyed the feeling of having Arthur inside her. But as his strokes quickened, the pleasure intensified she began craving more and more stimulation.\n\nThe female Lycan clenched as the toy touched her pussy, and Arthur grunted in appreciation before speeding up more.\n\nOnly minutes after pressing the wand to her clit she was panting and begging her lover, \"Fuck me. Fuck me hard. Please fuck me hard.\"\n\nHappy to oblige, Arthur slammed his prick into her pussy hard enough to shake the bed. At the last second, Marion pulled the toy away and let Arthur's pounding cock push her over the edge. Arthur slowed but didn't stop as she came, continuing to slide in and out of her squeezing pussy. The tightness proved too much for him, and after only a couple strokes, he pressed as far as he could into her sex and began filling her with cum.\n\nUnlike Goldie, Marion didn't scream or yell as she climaxed but instead balled her hands into fists and held her breath as her teeth clenched hard enough to make the tendons stand out on her neck. Close to a minute passed before her breath burst forth, and she lay there sucking in air.\n\nArthur hissed as his oversensitive cock slipped free of her pussy's grip, then laid down on the bed and pulled Marion up against his side. He held out an arm inviting Goldie to do the same.\n\n\"In a minute,\" she said, waving off his offer and crawling into bed between his legs. The blonde hesitated for a moment as if unsure of what she was about to do. After glancing between Marion's face and Arthur's cock a few times, she wrapped her hand around the base of his prick.\n\n\"Hey, Marion. You want to know about giving blowjobs?\"\n\nThe female Lycan nodded.\n\n\"First lesson, most guys love it when you clean them up after sex.\"\n\nArthur and Marion both looked on with surprise as the blonde ran her tongue up the side of Arthur's cock then sucked him into her mouth where her tongue went to work cleaning off the Lycans' combined fluids. By the time she finished and crawled up under his other arm, the young clan leader's cock was trying valiantly to get hard again.\n\n\"Is that one for you in a few minutes?\" he asked.\n\n\"Nope. I'm going to go back over to her bed in a second. You two still haven't experienced each other's Bellator forms. No offense, but if you two get too enthusiastic, you could seriously hurt me.\"",
        "\"Understanda... ble,\" said Arthur giving Marion a questioning look as she sat up. The female Lycan rolled forward onto her hands and knees as her body grew and sprouted thick, dark brown fur. The anticipation was plain in her green eyes as she rolled her hips.\n\n\"I'm not an expert on bears, but that looks very human,\" said Goldie commenting on the werebear's pussy partially concealed by dark fur. Beside her, Arthur shifted, and she looked down at his large, human-looking cock. \"But that makes sense given your equipment.\" She kissed him on the nose, saying, \"Have fun,\" before going back to the other bed.\n\n------\n\nBy the time Arthur and Marion were done, Goldie had fallen asleep. Still in their Bellator forms, Marion picked up the woman and held her as Arthur pulled his bed out from the wall and pushed Marion's up against it. Goldie spent the rest of the night cuddled up against Arthur's chest as Marion pressed up against her back. Smothered in soft fur, she quickly fell into a deep and restful slumber.\n\n------\n\n------\n\n\"Fill 'er up, Ted,\" said Goldie as she stepped out of her car.\n\n\"Headed somewhere?\" he asked, looking up at the dark clouds in the sky. \"Not very good hiking weather today.\"\n\n\"North again, I have some business up there.\"\n\n\"Business, huh?\" said the old man, looking skeptical. After inserting the nozzle into her car and starting the pump, he crossed his arms. \"I've seen that look before. You've taken a shine to a boy up there, haven't you?\" he asked with a big grin.\n\n\"Maybe... ya nosey old fart,\" she snipped back in a playful tone. \"But he had his adopted father's organization dropped on him after the man died, and I'm helping him get the people he needs to make things work. So, yes, I am going there for business.\"\n\n\"Well, be sure to tell him he can't steal you away. Not many girls around here as pretty as you.\"\n\n\"Aww, thanks, Teddy.\"\n\n------\n\nGoldie pulled into the little parking area in the valley below the cabin. Off in the woods to one side, Carl and Arthur waved before going back to pacing out where the new workshop would be. It was strange for her to see Arthur clothed.\n\nCarl planned on something like a longhouse with a bunch of smaller satellite cabins just beyond the workshop. The longhouse would contain the showers, kitchen, and common rooms, while the cabins would essentially be just a bedroom. This was all temporary, though. After looking at some topographical maps of the Redclaw's holdings, he recommended an area further north with better land for building, a small lake nearby, and a small town about a half-hour away for picking up groceries and supplies.\n\nThe majority of Redclaw lands were densely wooded, and Carl wanted to use that to cut building costs. All he needed was a workshop and some kind of workforce to get started. Everyone was all for saving money, but his suggestion to lease a parcel of land to the foresting companies was much less popular. They would clear cut the forest there then replant the entire area. Not only would they get money from the lease but also some from the sale of the lumber. Nobody liked it, but it seemed like the best option for getting Redclaw on track to its former strength before Owen let it nearly die.\n\nThe car that pulled in and parked behind her likely contained one of Carl's new workforce.\n\nStepping out of her vehicle, she walked over to Amanda and Amber as they got out of Amanda's car. Arthur forwarded their resumes to Goldie so she could look them over while at work earlier this week. Amanda didn't seem to have any particular strengths but was involved in a few community projects within Clan Blackpaw. It wasn't much to go on, but Goldie was getting some hospitality/public relations vibes from her. Amber was an easier fit.\n\n\"Miss Amanda, you're with me. Miss Amber, Carl is the older gentleman over there speaking with the clan leader. Introduce yourself and see he can find a place for your skills.\"\n\n\"Yes, ma'am,\" said the taller girl before walking toward the men. Amber was less outgoing than her sister but took woodworking and metalworking in high school. Both skills would come in handy when setting up a new estate for future clan members.\n\nGoldie smiled as she started up the hill towards the cabin with Amanda in tow. This was likely going to be her weekends for the next few months, at least. But she was looking forward to seeing Arthur's clan grow. Maybe one day she would call Redclaw her clan as well.\n\n------\n\n------\n\n\"Fill 'er up Ted,\" said Goldie as she got out of her car.\n\nTed lifted the nozzle off the pump then froze as he turned around. \"What's all this?\" he asked. The back seat of her little car was packed full of belongings from her apartment. \"Don't tell me you're leaving. Didn't I tell you to tell that boy he couldn't steal you away?\"\n\n\"Come on now, Teddy. Mom already dropped her guilt trip on me today, don't make me feel even worse for leaving.\"\n\n\"I guess I shoulda known, considering you've been going up there every weekend for months now,\" he said after inserting the nozzle into her car and turning on the pump. \"As long as you are happy, I guess there isn't much I can say. Although...\" Ted pulled some reading glasses out of his breast pocket and donned them before reaching up to look at the little charm hanging from her new choker. Like Marion's, the claws on the tiny bear paw were red, but instead of silver, her paw was gold.\n\nGoldie lifted her chin, showing the bauble off with pride as the old man inspected it.\n\n\"You're doing Clan Redclaw a lot of good. Artie and Marion are decent kids that were put in a bad situation. I understand Marion's heat just passed. Here's hoping she took. You all are going to get quite a few laughs having Papa Bear, Mama Bear, Baby Bear, and Goldilocks all living under one roof.\"\n\nGoldie stared at the old man, her mouth agape with shock. Behind Ted, the gas pump clicked off.\n\n\"WHAT!\" she shrieked.\n\nTed chuckled and jerked a thumb towards the store, \"Doris and I started fooling around about ten years ago. She's the one who started calling me Teddy, and it stuck.\" He lifted his hat, and Goldie saw a familiar pattern of gray hair with streaks of brown. \"But you can call me Jaques.\"\n\n------\n\nGoldie pulled into the parking spot they left for her in front of the recently finished house. It wasn't a mansion and was only slightly larger than the houses still in planning. Except for her, the entirety of the Redclaw clan had gathered on the front porch. Those in human form wore clothing while Weres in Bellator form had their fur. In the middle of the group stood Arthur and Marion with giddy looks on their faces.\n\nUnable to contain herself any longer, Marion ran down the stairs and wrapped Goldie in a big hug, lifting her off the ground. \"I'm pregnant! I'm pregnant!\" she yelled while swinging the human around. A small cheer erupted from the front porch of the house. Even though everyone already knew from how Arthur and Marion were acting, the ecstatic Lycan's shouts were the first official confirmation.\n\nPutting her arms around the female Lycan, Goldie squeezed Marion tight. \"I'm so happy for you,\" she whispered, her voice thick with emotion.\n\nArthur descended the steps and put his arms around both of them. Kissing Goldie on the forehead, he asked, \"How was that for a 'Welcome to your new home?\"\n\nPushing up onto her tiptoes, she kissed him on the lips and said, \"It was perfect.\"\n\nEpilogue\n\nThree years passed since the day Goldie and Arthur met, and it had been nearly as long since she pulled into the tiny parking area at the head of the hiking trail. Instead of her full hiking backpack, she just had a small shoulder pack today along with her walking stick.\n\nShe and Amanda spent the last couple of days cleaning up the old cabin, preparing it for today. Goldie had been wrong about the girl when she first arrived. Instead of hospitality and public relations, Amanda turned out to have a knack for house- and groundskeeping. Now the girl managed the small group of Weres that kept the Redclaw clan's estate looking beautiful. When Goldie told Amanda why she needed the old cabin cleaned, the girl couldn't have said yes fast enough.\n\nComing up on a familiar-looking boulder, Goldie smiled at the unintended genius of hiding her walking stick in the nearby underbrush after she and Arthur first met. The Magi who repaired the crack in The Veil said that while people think of certain items as important, often they end up getting put on a shelf and only glanced at or spoken about occasionally. However, her walking stock was picked out, carved, and lacquered by her own hands then used constantly during an activity she thoroughly enjoyed. The Magi believed her strong familiarity with something she created led to her return here, and eventually, back to Arthur.\n\nShe leaned her walking stick against the rock and stripped her shirt off. The breeze coming through the forest up her near the top of the hill made her nipples stiffen.\n\nPulling down her shorts revealed a henna tattoo directly over her womb. The tattoo would last a couple of weeks, but the design's magic faded after only a few days. She had already wasted one of those days driving back from the bear shaman who put it there.\n\nShe felt a flash of guilt as she ran her hands over the pattern. Bending the old spells enough to allow her and Arthur the chance at a child was extremely expensive. Arthur even called a clan meeting to ask if the rest of them were okay with the cost. Carl was the first to pipe up, saying one of his greatest regrets was not spending the money to have a child with his late wife. He then looked down at Amber, who quickly became his mate after they met, and said he wouldn't have a second chance at a child of his own if it weren't for Goldie. The rest of the clan quickly voiced their approval.\n\nIt helped that if she and Arthur were successful, it would bring the Redclaws up to five cubs in only four years by the time she actually gave birth. Only two of those would be Arthur's. Such numbers were unheard of in such a small clan that didn't retain a human male.\n\nCubs... babies... at the moment, there was no difference. They all came out as human babies and didn't develop the ability to shift until they were nine or ten years old. She briefly wondered if she would have been so quick to try for a child if she were going to give birth to a similarly sized bear cub instead of a human baby.\n\nGoldie was a little jealous the mothers had the option of going through labor in their Bellator forms. After witnessing a huge bear-woman give birth to a tiny human baby, it almost seemed like cheating. Then again, compared to actual bears who gave birth literally in their sleep, maybe human women just got the raw end of that deal.\n\nLeaning back against the boulder, she reached down and began caressing her sex while stealing glances back toward the trail. A few seconds later, the head of a grizzly bear standing on its hind legs popped up over the crest of the hill. It made a series of grunts that sounded like chuckling before dropping down and walking over the hill a moment later. The bear hopped with its front paws, walking on its hind legs as its body grew and changed shape.\n\n\"You're far from home, Goldilocks,\" said Arthur in a deep rumbling voice.\n\nGoldie turned around bent over, leaning against the large rock. Giving him a sultry smile over her shoulder, she said, \"What are you going to do about it, Papa Bear?\"\n\nSince the birth of Marion's son, Evan, Arthur and Marion found it impossible to escape the Papa, Mama, Baby bear association since they lived with a human woman who went by a shortened version of Goldilocks. Eventually, the associations with Owen faded, and both Weres began to wear the monikers with pride. Arthur did think it a little weird when clan members two or more times his age called him Papa Bear.\n\nShe watched the werebear drop to one knee, then felt his hot breath on her pussy a moment before he dragged his long tongue from her clit all the way up to her ass. \"Mmm... still delicious.\"\n\n\"That didn't feel like much of a punishment,\" Goldie moaned. A few seconds later, she gasped as the head of Arthur's cock pressed against her sex and slowly began pushing inside.\n\n\"It isn't?\" he asked in mock confusion. \"I guess I'll have to fuck you until I come up with a better one.\"\n\nGoldie felt a warmth in her lower abdomen and looked down at her body. Past her breasts, the tattoo glowed a dull orange.\n\nShe looked back over her shoulder, \"No need to hurry.\"\n\nFin"
    ],
    "authorname": "BluDraygn",
    "tags": [
        "toys",
        "werebear",
        "were",
        "exhibition",
        "violence",
        "oral sex",
        "size",
        "masturbation"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/goldilocks-and-the-three-were-bears-pt-02"
}