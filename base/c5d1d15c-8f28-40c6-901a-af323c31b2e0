{
    "title": "TT Spalding-PI: TT's Story",
    "pages": [
        "This is the story of TT Spalding. By now, if you've followed his career, you've met Bruno, Polly and Maggie. They are his friends and his family. He was a cop, a detective and finally a PI, but this is a quick glimpse into his life. As he himself says, life didn't really begin until he met Maggie Malone. But, judge for yourself.\n\nEdited by Angel Love. As always.\n\nTT Spalding-PI, His Story\n\nThis was really boring work but it had to be done. It was stuff like this that reminded me again why I considered getting out of this line of business. I was getting too old to be sitting in a cold car watching for some shithead to do something bad. I checked the rear view mirror one more time before sliding down in my seat to take the stress off my ass. I had been sitting here now for close to two hours. Two fucking hours in a cold car on a dismal side street in the worst part of the damn city. Jersey City, NJ to be exact. Nestled snugly between Newark Bay and Upper New York Bay, both scenic waterways to be sure, and just across the water from New York City proper, Jersey City was in its heyday as one of the top crime cities in Jersey. The tourist brochures called it the cream of the garden state if you believed the mayor and the PR guys. But then I wasn't a tourist. I was here on business and Jersey City was the armpit of the world if you ask me. But, this was the place Ratface and his crowd did their business.\n\nI was staking out the place for the District Attorney of one of the five boroughs of NY. He had a tip that one of the crime bosses, a guy called Ratface since his eyes were small and beady I guess, was going to do some serious business here tonight. Make a score of drugs that would end up in NY. Can't tell you which DA, because that would be breaking the law. I was on official business. Who am I you ask? Well, let me tell you.\n\nMy name is TT Spalding. Shit! OK, if you really have to know, my name is Theodore Terrell Spalding, a name most proudly given to me by my sainted mother, long live her beautiful soul. She was full of love and so proud of her baby. She poured both into my name. Theodore was my father's name and she adored my father. Her father's name was Terrell whom she also adored, so that became my middle name. \n\nMy mother was Irish and my father was English. They came to this country when they were newlyweds. Dad wanted to make his fortune here in the states and my mother would go wherever my father took her. They were devoted to each other and that devotion came down to me when I was born three years later. That was back in 1957. They raised me with the same love they showed each other and in my memories, our home was always filled with laughter. I grew up in that home and it made me the man I am today. I know a lot of cops had bad childhoods but I wasn't one of them. \n\nI was already a man grown when I lost both of them in a fire. I had been accepted into the police academy and training had begun when I was called into the commandant's office for the news. Both my mother and father had died in a gas explosion and resulting fire in their apartment. They were both dead on arrival in the hospital. At twenty-one years of age, I was alone for the first time in my life. The first time their laughter and joy were stilled. The first time I had no one but myself to share my life with. Just me. When I went home that night to my small flat, I knew that the love and laughter I had known all my life was gone. It was just me now, with only the memories of them and their love.\n\nI survived, of course. Life never lets us off that easy. Arrangements were made, they were buried side by side with dignity and I had a stone erected where they lay. I put some sentiment that would have pleased my mother and amused my father on the stone and I still go there when I can. For the next twenty years, I talked to them and discussed my plans with them and it seemed like they were still there for me. But, they weren't and I knew it, but the fantasy gave me peace.\n\nI graduated from the police academy, and worked hard on the job. I learned the streets and the lessons it taught me. I applied for, and was accepted as an aide with one of the detectives and trained with him for two more years. He brought me along quickly and within another three years, I was a detective for the NYPD. Proud moment for me and one I shared with Mom and Dad. Me, their son, TT Spalding, a detective. I had my shield and I swore to them to use it with integrity. I might not be great and I might not earn accolades but I would always be honest and straight. I would make them proud. I hadn't let them down on that score, but I was also not one of the real stars in the department. Honest, yes. A great detective? Not really. But it was not because I didn't try. \n\nSo it was as I sat there, waiting for this Ratface and his crew to do their thing. It was a big operation. Ratface was trying to make his bones and take over one of the biggest drug syndicates in Jersey. He was a smart guy. He found it was easier to steal drugs from the current drug lord, peddle them on his own in the current drug lord's territory and use his distributors in the process. A tactic guaranteed to piss off the current drug lord and make the shit fly. So, I was there to try to stop all hell from breaking loose. I had help but it was still going to be dicey. But, success would be a rose in my jacket.\n\nJust as I was about to get on the two-way and see if we were still on, I saw a big black SUV pull up in front of the building I was watching and sat up straighter. I knew Ratface by sight and I waited. Sure enough, he stepped out of the back and stood there waiting until his bodyguards surrounded him. Then, as a group, they walked into the building and out of my sight. But that was the key. We were going to give them a few to get inside and then SWAT would go in and roust them out. We needed them in possession of the goods we had found inside. Just let them establish ownership and we had them all on felony possession. From there, the DA could have them.\n\nThe SWAT team moved into position from their concealment. They had been waiting in an abandoned building just across the street. Dressed in black with their helmets and their weapons they looked like the vision most people had of the SS Storm Troopers of the second world war. Only these were the good guys. They moved in groups around to the back and to the front door ready to bust in. Just as I saw the commander arrive on site and prepare to give the word, shots rang out upstairs in the building and the hell that I was there to try to prevent did indeed break out. Pandemonium reigned as gunfire broke the silence all to hell and back. Shots from the upper floor became constant and the SWAT team backed away and took positions blocking all exits. But instead of going in, the commander just held them in place, a small smile on his ugly face. \n\nAs I watched and fretted I was about to get on the radio and order SWAT to go in now when they did just that. As the gunfire began to die down, SWAT went in fast, both front and back doors with guns ready and bullhorns screaming. I got out of my car and watched, figuring these guys were better at this than me. As I stood watching the action, I saw a man crawling out of a side window. I moved over to get a better view, and saw it was Ratface, trying to sneak away. Well, I hotfooted it over to the side alley where he was trying to make himself invisible and snuck around the corner just as he was about to make a run for it. \n\nJust as he turned, I said, \"Going somewhere asshole? I wouldn't try it if it was me.\" \n\nI had my gun on him but the son of a bitch must have been holding his piece just out of sight because as I spoke, he drew and fired. As I felt the burn just below my waist and very damn close to an area that I fervently prayed he missed, I fired. I got him in the gut and he went down like a sack of potatoes. It got very dark then, and the lights went out. \n\nI woke in the hospital, sore, but alive and wondering how things went down after I bit the dust. I didn't have long to wait as my Captain came in and gave me the news. Seems I was a hero. I had single handedly stopped the top guy, Mr. Ratface, from escaping. He left his crew behind to take the heat from the small army the drug lord had waiting for him. He split when the first bullets went flying and then he waited until SWAT went upstairs. When he thought it was all clear, he made the move out the window where I spotted him. He was going to survive and face the music. The rest is history. \n\nSpeaking of history, as I lay there in my hospital bed, not badly hurt but very badly frightened by what had almost happened, I asked myself what I wanted out of my life. This sure as hell wasn't one of my top ten, that's for damn certain. But I did like being a detective, or at least, being in the position of figuring out how to beat the bad guys. I also kinda liked the power it gave me over the evildoers. (I really liked that word). But I didn't like the idea of other people shooting at me, so how to have the best of both worlds? Good question and one I chewed on for the next twenty-four hours before I was discharged. \n\nWhen I reported to duty a week and a half later, relegated to desk duty by my healing injury, I got a visit from the DA. He asked after my health and then made me an offer. Seems he wanted a small task force to go after the drug trade in and around the city. He wanted me to head it up, referring to my vast experience with said drug lords. I could call the shots, set up the stings and order others in to do the heavy lifting. Not a bad gig. I accepted. I became attached directly to the DA's office as a special investigator. \n\nFor the next two years, I headed the task force that the DA set up and I have to say, we were very successful. In that period, we had more than fourteen major busts, all of which ended up in convictions and we took probably well more than twenty million dollars of illegal drugs off the streets. Of course, for every bust, someone else moved in and for every million or so we took off the streets, another two to three million came back in. It was sad, but true. We did our jobs trying to protect the people, but I soon came to realize that too many people didn't want our protection. But, for those that did, we stayed. \n\nIt was on one of those raids, much like the one in Jersey City, that I met a man named Bruno Carlette. Bruno was a small time junkie who had a flair for things electronic. When I came across him, I had been staking out a building where I had a line on the group trying to muscle in on the local drug distributor. I was going to bust the newbie since I wanted the established druggie to stay in power. He was dumb, trying to make a big name for himself and I had him infiltrated every which way but Sunday. So, I needed him to stay in business. The new guy had to fall. \n\nAnyway, while I was staking out the building, I saw this junkie making tracks to get into this building. He was very good apparently since he did something I couldn't make out and the door opened. I expected the alarms to go off but none did. Well, well. What do we have here? I went in after him just to see what he was going to do. Gun drawn and being as quiet as I could, I snuck into the building and followed the light I saw from the flashlight he carried. I found him working on the alarm for the building, which was a really good trick since the alarm was top of the line. As I watched, he disarmed it, re-set the code and locked it down. When he was finished, I made the collar, took him in and turned him over. But it was the strangest thing. As I watched his interview, something about the guy struck a chord inside me and I wanted to save his ass. I heard him admit to being a junkie and he said he worked for drugs or drug money. Same story I had heard a hundred times. Why was he different? I hadn't a clue.\n\nAnyway, I had him released to me, used him for this bust, putting him back in where I found him but now with a wire. He delivered and after the bust was over, I got him to agree to rehab and I worked with him as my CI, my own informer. It was a hell of a ride, him wanting the smack and me determined not to let him have it. He tried though and I made damn sure he stayed on the path. He did good, stayed clean and we worked together for the next three years or so. We became friends, or at least I like to think he was my friend. I helped set him up in business for himself. He was into electronics so that's what he did. I even helped him make some contacts to get a patent or two. I suspected he made a lot of money from stuff like that but I never let on that I knew. To me, he was always going to be Bruno, the wiz kid when I needed surveillance. He was tops and still is. \n\nDuring that time, I decided that I was going to call it quits. I had almost twenty in with the NYPD and I wanted to retire while I was still in one piece. I gave notice, set my retirement date and decided to go into the private dick business. I got the idea, believe it or not, from reading some of my dad's old books. Ones I salvaged from his apartment after the fire. They were all detective novels, but the ones that I started reading in the hospital and at home after I was discharged were books by a guy named Mickey Spillane. He wrote a lot of stuff but the ones I liked best were about this private dick named Mike Hammer. I got into it by accident. I started reading one called The Girl Hunters, thinking it might be really hot in a sexy way, but it was one of the Mike Hammer novels, and once I started it, I couldn't put it down. Damn, it was good stuff! I loved it! From then on, I was hooked. I checked my stash and found I had five of those novels. I found some others by Mickey and they were detective novels as well, but not Mike Hammer ones. I think back now and I know I modeled myself after Mike. TT Spalding, PI. \n\nAnyhow. I started my own firm, TT Spalding, Investigations. I got my license, still kept my carry license for my 9 mm and opened a small office. I put the word out with some of my cop friends, some shop keepers and bodega owners and then waited. I did ask Bruno to join me, but he was into his own thing. Said no, but to call if I needed him and he would come. And to this day, he has never refused when I did call. I guess he had enough money to make it on his own now. That was good. It gave me a good feeling to know I had been part of that. \n\nFor the next year or so, I did enough to keep me busy. Mostly cheating spouses and identity tracing but got one or two business cases. Ones where someone was ripping off funds or merchandise. I liked those, since they could make me a buck or two more than the domestic stuff. I got Bruno on a couple of those and we worked well together. Just like before. I had missed him at first. Just a guy thing, so don't get any ideas. But I did miss him. It was good to work together again. It was on one of those cases where I met Melvin Haynes, an attorney who worked like me: on the cases the police and the well to do lawyers wouldn't take. We worked for the little people, although neither of us would admit that to anyone. I felt Mike Hammer would have been proud. We were just trying to make a buck. But we liked what we did and we never worried about tomorrow. Just do the job.\n\nI had done several jobs for Mel, mostly gaining evidence in divorce cases. I hated that type work but it paid some of the bills. And it gave me time to read my Mike Hammer novels while staking out the places these no-imagination types used for their meetings. Jesus! These people can really be dumb! Like this one night. It seemed like a regular domestic stick, just catch the cheating wife. No biggie. I handled it on my own. Never thought to ask Bruno. A simple stakeout, a couple of pictures, some work to identify license plate numbers and done. A quick $500 for a couple of hour's work. Right?\n\nI followed this woman to a no-name motel where she registered under her own name. Stupid? Of course. A $20 bill later, I had a copy of her signature on the register, complete with name of motel, time stamped and dated. While she went into the room, I waited, reading 'One Lonely Night' a Mike Hammer novel Mickey penned in 1951. Great read! I was just getting into it when Mr. Stupid pulls up, walked into the lobby and has the clerk connect him with the room Mrs. Stupid rented for their meeting. I watched him say something, then walk to the room where Mrs. Stupid was waiting. I stopped reading long enough to get several good pictures of him and then both of them when she opened the door. Mrs. Stupid was wearing nothing when she answered the door. Great pictures. I waited, walked up to the window where I had noticed the curtain left a gap between the edge of the window and the curtain giving me a nice view of the bed. Well, you can take it from there. Really good pictures!\n\nI wrapped it up after that, took my camera and stopped at Max's photo shop to have them developed. Max knew what I did so he never questioned the pictures I gave him. He just grunted, developed them and gave them back to me. On this occasion, however, my life changed forever. It seems Max had hired a new woman to work for him. When I saw her, my heart started to pound and my legs felt a little wobbly. I was sweating bullets and I was afraid I was having a heart attack. She didn't seem to be paying me much attention so I was able to recover my wits and get my body back under some sort of control. I almost forgot what I was doing when Max handed me the pictures in an envelope. \n\nI took the envelope, looked again at the woman and asked Max, \"Who is that working behind the counter? Did you hire her? Does she work for you now? What's her name? Is she....\"\n\n\"Name's Maggie and she's none of your never mind. She works for me. Not for you to think about. She's got troubles and she doesn't need you to make it worse. You hear me?\"\n\nI heard and wondered what those troubles were. As we talked, she glanced over to us and smiled at me. I returned the smile, sort of sickly though not being able to understand what was happening to my insides. That was the beginning of the end for me. I was lost even though I did as Max asked and stayed away. But, I was weakening.\n\nIt was several weeks later that Mel called me to do a job for him. I was at loose ends so I agreed. I went into his office, he showed me some pictures of a man and gave me his address, SS number and some other information and told me he wanted to know everything there was to know about the guy. Especially financial info. He wanted it yesterday and told me it was urgent. Never mentioned the client's name though so I had no idea of whom he or she was. Just a target. Just up Bruno's alley. \n\nBruno and I started right away and before the week was out, we had a good amount of info ready. Seems the guy was a creep, with several misdemeanor charges of abuse, misdemeanor assault, disturbing the peace and other similar charges. Most pleaded out by the local DA which meant juice to me. He knew someone or had something on someone. Whatever. Bruno was able to find at least two separate accounts in his name and two accounts in another city. All were in his name: Jonathan DiCarlo. His wife was a Margaret DiCarlo but she was absent on all of his accounts and on the deed for their home. Just a joint account which had virtually nothing in it and some small savings accounts at two local banks. By the time we were done, we found more than $250k the guy had hidden from his wife. \n\nWe gave the info to Mel the following Monday and he looked like a shark who just spotted his next meal. Mel's laugh boomed as he read the file. \"Damn, you do good work TT. No wonder I let you work for me. No shit! This guy's a real bastard, ain't he?\" Mel read the file over again and the grin on his face just got wider if that was possible. \"This is exactly what I needed. Good work guys! Damn good work!\"",
        "After that, things went back to normal and Bruno and I went our separate ways. I started stopping in to Max's place once or twice a week, just to see Maggie. I spoke to her politely but felt tongue-tied around her most of the time, so I settled for watching her as she helped customers. Busy days were my best times. I could just watch and not have to say anything. I knew that I was in trouble. This woman was real trouble for me and I wasn't sure I wanted that kind of trouble. I had been single for all but one year of my forty-eight years. A brief marriage when I was twenty-five was a big mistake and we both knew it right away. We parted friends and I never had the time to try again. I was happy being single, lonely sometimes but I had friends. Good friends. Bullshit, why do I lie about stuff like that? I knew people. I had one friend: Bruno. \n\nThings changed again about a month later. Mel called and asked me to come in to see him. Seems the client was asking for a divorce and the husband was being a real pain in the ass. Didn't want to admit to the extra money, made noises about moving it again if she tried to take any and threatened to make trouble for her if she didn't drop the divorce motion. \"I need you to put the move on this guy. I need for him to see that it would be less painful and better for his health if he comes around to my way of thinking. I know you don't do that stuff, but you know people. Talk to your people. Do this for her.\"\n\n\"Who the hell is her. You never told me the client's name so I have no idea who you're talking about. If you want my help, level with me.\"\n\nMel just gave me a puzzled look. \"I thought you knew. It's Maggie. Maggie that works for Max. I thought you knew her name. Jonathan DiCarlo is her husband. Her name is Maggie Malone DiCarlo. His wife.\"\n\nI sat there stunned! I didn't know. I never made the connection. I never knew Maggie's last name. Hell, I was lucky to even talk to her, let alone know anything about her background. But now! Whoa! This was big. \"Let me get this through my head. Maggie is this creep's wife? She's breaking away?\"\n\n\"Finally, it registers. I thought you were a top notch snoop. You honestly didn't know? I'll be damned. Hah! Well, you gonna do it for me? For her really.\"\n\nLong story short, hell yes! Told Mel to give me a couple of days and we would talk again. So, when I left, I called Bruno and asked him to meet me at the local watering hole. One of my favorite haunts. Cheap beer and good company. Mostly male, and the occasional female. Not that I was interested but some were good listeners. So, when Bruno arrived, I motioned him over to a booth and joined him with a fresh beer and a shot, his choice of refreshment. \n\n\"Listen my man. Remember that woman beater we worked on a few weeks ago? You found a whole bunch of hidden accounts he was keeping from his wife. Seems he needs some encouragement to make Mel's job easier. And here's the thing. I find he is the husband of that woman who works for Max. You know the one?\"\n\nBruno smiled a little and then asked, \"You mean the one that has your shorts in a wringer? That woman?\"\n\n\"Yes, that one. And I just think she's a nice lady who needs our help. That's all. Just a person in need of our professional services.\"\n\n\"Sure boss. Whatever you say boss. Just a nice lady. I got it. What do you want to do? I assume you have a plan, like always. One where I do all the work and you take all the credit?\"\n\n\"Something like that. I have the brains, you have the skills. Without me, you're just a nerd. With me, you're a special nerd.\"\n\nBruno and I talked it out. I wanted three things from this asshole. First, I wanted Bruno to find and freeze all of his accounts when I gave the word. No way for him to get his hands on the bread. Second, I wanted him to know that regardless of what he did, we had him nailed. If he tried to make a move or switch an account, I wanted him to know we knew! Finally, I wanted him to feel what Maggie felt when he beat the hell out of her. I wanted him to have a couple of ribs cracked as a reminder that he either agreed with Mel's conditions or he would receive much worse. Bruno knew the guys for that part, but so did I, so we flipped a coin and I lost. I'd do the guys and Bruno would do the rest. We agreed on one week. On the last day of next week, Mr. Jonathan DiCarlo would sign the divorce decree. Or else.\n\nOn the appointed day, Mel got a call from Mr. DiCarlo who wanted to come in and sign on the dotted line. Mel agreed, set a time and I watched from my car as Mr. DiCarlo pulled up, walked slowly and painfully in, signed without a word and then left. I followed him to his house, watched as he went inside, moving around the guys loading his furniture. I sat there for another two hours as the movers completed their job, closed up the truck and left. During that time, Bruno came by driving one of those SUVs, Hummers I think they call them. He pulled up beside me, rolled down the window and asked me if things were going fast enough. I laughed and said it was fine. He waved, then drove off. After the truck moved away, Mr. DiCarlo came out, locked the door, looked around once and then got in his car and drove off. I followed him as far as the interstate. \n\nOut of respect for Maggie and what she had been through, I waited until the divorce was final before resuming my visits to Max. It seems that in the meantime, Max had also adopted a sweet young thing for his prot\u00e9g\u00e9. That was a good thing since Max wanted so badly for someone to pass on his love of photography. I think her name was Polly something. Cute kid, but tough. I spoke one day to her and got a curt \"Yo!\" but nothing more. But Max was sold on her so she must be OK. \n\nI was on a new project that unfortunately took me out of state for a good long time. It was one of those damned import/export things that had me going to several states and finally down into Mexico. Took me over a year to solve that one and during that time, Max died. I was in Mexico at the time and couldn't make it back for the funeral which pissed me to no end. Max was one of the good guys. But, I sent flowers. And hoped Maggie would be OK. And Polly, for that matter. I decided to try to end this job as soon as possible and get back home.\n\nThings at home were fine, my business was solid, nothing was out of line and I relaxed once more. I had made enough from the last job to pay my bills for a while so I was loose. I let Max's affairs settle and just sort of bided my time. I know Max left everything to the girls since he had me and Mel witness his new will. Seems he wanted Polly to have all his photo stuff and he left the shop and the loft apartment to Maggie and Polly together. I was happy in a way because that meant Maggie might be staying. I was happy in a selfish way. So sue me. I watched and waited and finally I couldn't stand it any more. I had to do it. I put on one of my only suits, with a clean shirt and tie, my good shoes, screwed up my courage and went into the shop.\n\nMaggie was there, and it wasn't very busy thank the gods. She was working on a display of something or other and I just watched her for awhile. I think she caught me looking but I turned away really quick. She finished, walked away and turned to see me watching. I think we were both caught by surprise. But now was the time. I checked my reflection in the window, smoothed what hair I had left back and wet my lips. Just so I could speak coherently. I gathered my courage, walked right up to the counter and introduced myself. \n\n\"Hi. My name is TT Spalding. Everyone calls me TT. You're Maggie, aren't you?\" \n\nShe answered me and we talked for a while about whom we were. You know, just chatting. I finally decided to go for it. I swallowed, wet my lips again, and asked, \"Would you like to have dinner with me some evening? We could try that new place on Seventeenth Street, if you like Italian.\" \n\nThere! I did it. Not even a stutter or a stumble. I made it through the speech I had rehearsed over and over and it came out perfect. Now, what would she say? No? I could handle it. No, I couldn't. No way could I stand that. She had to say yes. She had to! But, she didn't. She didn't say anything. Just looked at me as if I had two heads. Oh, shit! I hadn't planned on this. I had only yes in my head. \n\n\"OK, I'm sorry. You don't know me and it's OK. I shouldn't have sprung it on you like that. I'm really sorry. I'll go now. I'm sorry.\" I turned and headed for the door, praying I could make it before I broke down and cried. I was so humiliated. What the hell was I thinking? Stupid! Stupid! I reached for the door and almost walked out before it dawned on me she had called me. \n\nI stopped, turned and said intelligently, \"Huh?\"\n\n\"I said I don't know. I'll have to think about it.\" Then she must have realized how that must sound so she quickly added, \"It's not you. Please don't think that. It's just, well, I've not dated for some time now.\"\n\nWell, it wasn't no. I could do that: give her time. Sure I could. \"Take your time. I'll stop back in later and then we can talk about it some more.\" \n\nShe smiled and nodded. I bobbed my head a couple of times and walked out quickly before I lost it. Maybe! She said maybe. OK, all right! Yes was not far from maybe. Maybe was closer to yes than to no, wasn't it? I thought so. OK, tomorrow. I could wait. \n\nWell, Maggie said yes and we went out on our first date. I had the best time of my life. She was bright, witty, easy to talk to and very, very easy on the eyes. She had on a white blouse that fit her very well and showed her very bountiful cleavage to good advantage. Not too low, not too tight, just damn perfect! She had on a skirt that had a slit up one side so that when she walked or sat and crossed her legs, some thigh would show. Again, not too much and not too tight. Perfect. She had on heels, about two inches I would guess and it did things to her calves that made my mouth go dry. But, her legs were perfect. As a matter of fact, every thing about her was perfect. I had the best time. Did I already say that? Well I did. \n\nI have to say, I fell for Maggie that first night. I was hooked, completely hooked and I wanted nothing more than for her to reel me in. I walked her home, she gave me a chaste good night kiss and I went back to my apartment in a daze. But it was a good daze and it carried me through the night. It was a wonderful night and my dreams were very good ones. It was the start. Maggie and I continued to date and we were drawn to each other from the very beginning. Neither of us could get enough of the other and we became almost inseparable. We did the deed for the first time on our fifth date and we went to my apartment. All I can say is, 'Wow!' I never knew sex could be like that. I guess it was love that made it so different from anything I had ever experienced. \n\nI wanted Maggie to move in with me but she refused. She was living with Polly and the two of them were still working the shop and Polly was becoming very well known. I knew money was not a problem for either of them so I began to think. Maggie and I belonged together. I had to have her in my life. I had no life now without her in it so I decided to give it a go. I asked Maggie to dinner the following Wednesday evening. She closed the shop early on Wednesdays so she was always able to go out that night. I paid a visit to a good friend of mine and made a purchase. I made reservations at a really good restaurant up town and got flowers. I snagged a guy I knew for a limo for the evening and he agreed. He owed me. I was all set. \n\nI picked her up and escorted her to the limo. She was impressed when she saw the limo and the flowers I had waiting for her. She slid into the seat and I told Murray to head for the restaurant while I poured a glass of champagne for each of us. I was going to wait till we were in the restaurant but I was too anxious. I toasted our relationship and we drank to more to come. As I took the glass from Maggie, I reached into my pocket and pulled out the little box I had inside. Maggie saw it and became very quiet. I gulped once, took her hand in mine with the ring poised and took the biggest leap of faith in my life.\n\n\"Maggie, I want to live the rest of my life with you by my side. I love you more than I thought possible and I know now that I can't be happy without you. I want you to be my wife. Will you accept what I have to offer and marry me, Margaret Malone?\"\n\nI held my breath while I looked into her eyes. They began to glisten with tears and I wasn't sure whether that was a good thing or a bad thing, but she let me know with a single word.\n\n\"Yes!\"\n\nEven though I was ready to shed the mantle of single male and do the deed with Maggie, she told me she had some things to do first. I had no choice but to agree and asked what I could do to help. She told me nothing and to just let her take care of it. I finally agreed and stopped wondering. Maggie was her own woman and when she decided to do something, it got done. \n\nI knew that Maggie and Polly were co owners of the loft apartment and the photo shop. Polly had a whole lot of stuff in the apartment and in the studio right above the store. I knew that was one of the things Maggie had to decide. So, I was quite surprised when she told me later that she had a buyer for the shop. I asked her if she really wanted to let it go and she told me that while it was a special place for her, she would rather be my bride and spend her time with me. I had no problem with that and told her so. Polly had agreed to take over the apartment, the loft studio and all of the equipment so the deed was restructured by Mel to separate the shop from the rest and the shop was then sold as a stand alone. Maggie was now free to move in with me but not until we were married. \n\nNow, you may ask how that all worked. Well, simple. Maggie and I searched and found a nice two bedroom apartment not far from the shop. We both liked it so we made an offer and were accepted. We now had a place for us when we married. In the meantime, Maggie stayed with Polly until the wedding. Most of her stuff was moved into the new place, just waiting. In the meantime, Polly and Maggie planned the wedding. Why we couldn't just do to a JP, I didn't know, but it was important to Maggie so we compromised and did it her way. I should have realized then that this was the way it would be from now on. But, I was still a little dazed by Maggie agreeing to marry me. \n\nThe wedding was a small but very nice affair with my one or two and her many friends. Bruno was my best man and Polly was her maid of honor. We were married in a small chapel just around the corner from the shop, a place where Max was well known. I think his friends came just to remember him, but it was a great ceremony and I was now a married man. For a honeymoon, we flew to Florida and stayed in one of the ubiquitous hotels on Miami Beach. We never left the room for the first three days and they were days I still remember fondly. But we did eventually hit the beaches and do some swimming. Maggie was beautiful in her swimsuit and I had a hard on, I mean a hard time, getting used to the looks she got from all the men on the beach. But Maggie paid them no mind. I was hers and I was all she wanted, something I never stopped wondering about. But, I feel the same way about her so we're even.\n\nWhen we returned, Maggie came to work with me as my secretary, my bookkeeper, my accountant, my conscience, and my motivation. She quickly took over the place and I was left to myself to drum up business and work on the novel I was going to do and publish as the next Mickey Spillane. I would make him proud as I assured a doubting Maggie. She simply patted me on the cheek, pressed a quick kiss to my mouth and then dismissed it. But we did OK and business remained steady, mostly because of the contacts I still maintained with the owners and shopkeepers. And the cops. They still pushed business my way. I even worked for the DA on some occasions. Life was good, Maggie and I were still in love, the business was solid, and we had no problems.\n\nAt least up until the phone call from Bruno . . . "
    ],
    "authorname": "thecelt",
    "tags": [
        "background"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/tt-spalding-pi-tts-story"
}