{
    "title": "The King in Yellow",
    "pages": [
        "\"Books cannot be killed by fire. People die, but books never die. No force can abolish memory.\"\n\n-Franklin Roosevelt\n\n***\n\nIt started with a play.\n\nIf I had never heard of the play then none of this would have happened, and no one would have been hurt, and I wouldn't be writing this knowing that it's probably the last thing I'll ever do. But now it's much too late.\n\nAnd, in the beginning, it wasn't even about the play at all. Really it was just about the girl, and it was for the sake of meeting her that I was willing to do anything. Her name was Melissa Folger, and I can honestly say I loved her from the first moment I saw her, all blue eyes and full smile and hair such a pale blond that it was almost white. Hair like asphodels, that's what it was.\n\nBut she had no idea who I was and at first I didn't know how to approach her. Then an opportunity came, in Professor Chambers' seminar on literary censorship, one of the two classes I shared with Melissa. Chambers was lecturing about an old play: It was called \"The King in Yellow.\"\n\n\"It's perhaps the most widely censored work ever written, in any language,\" Chambers said. \"When its author put it forth 1895 the governments of Europe fell over each other to ban it. The first copies printed in Paris were immediately seized and the writer jailed. He killed himself two weeks later and the efforts to suppress his work were so ruthless that no one today even knows his name.\n\n\"But the play didn't die with its creator,\" Chambers went on. \"No one is sure who translated it, but in 1896 the play somehow surfaced in England, and that country eventually outlawed it too. Even in America the government would not allow it to be publicly circulated.\"\n\nA hand went up: \"What was so bad about it?\" a student asked.\n\n\"Well, the complex relationship between sex, power, and violence in the play offended the moral guardians of the age. In fact, the play's content, whatever it was\u2014because today we have only fragments from which we can formulate guesses about the material\u2014was so shocking that it was considered downright evil. The play, it's said, was cursed.\"\n\nThe class murmured a little, and Chambers grinned. \n\n\"'The King in Yellow' is a book of great truths,' wrote one of the judges who issued the original warrant for the author's arrest, 'but they are truths which send men frantic and blast their lives. I don't care if the thing is, as they say, the very supreme essence of art: It is a crime to have written it.' Perfectly sane men have gone mad reading it\u2014or so the rumors say. And it was connected to outbursts of mania, mass hysteria, and violence everywhere that it went.\"\n\nAnother hand: \"Are any of the stories true?\"\n\nChambers shrugged. \"No one knows,\" he said. \"But one way or the other, we may have finally disproved that old idiom about there being no such thing as bad publicity.\"\n\nHe went on like that for a while but I honestly didn't pay much attention. And I probably would have kept on caring less about \"The King in Yellow\" if I hadn't overheard Melissa telling a friend that she had heard of the play before, and that she thought it was tragic that great art had been ruined by narrow-minded censors, and how much she wanted to study the fragments that were left. She spoke with so much enthusiasm for the subject that I made up my mind that if Melissa was interested in \"The King in Yellow\" then it was a subject worth studying. If I could learn anything interesting about the play, it might give me the chance to make an impression on her that would really last. \n\nWhich, all things considered, it certainly did.\n\nSo I did some reading. Almost nothing of the original play survived the 19th century. Men like Professor Chambers have chronicled all of the scraps that remain and produced a catalog of names and phrases related to it: a city called Carcosa, a woman named Camilla and another named Cassilda, and some strange, opaque phrases like \"The Phantom of Truth\" and \"The Pallid Mask\" which no one really understood. But of the story itself there was nothing at all.\n\nOf course, a play with a reputation like that gave birth to plenty of pretenders. Pulp magazines, basement publishing houses, and of course the Internet teemed with dozens of scripts claiming to be the one true version of \"The King in Yellow,\" all of them obvious frauds from amateur playwrights trying to trade on its reputation. Most were almost unreadable. But poor imitators though they were, I thought that these fakes might give me something to work with. \n\nA sufficiently well-written fraud, I reasoned, might contain \"insights\" into the real thing. It was thin, but it was enough to possibly interest Melissa. So one day I summoned up all of my courage and, when class was over, introduced myself, told her about my research, and asked if she would be interested in looking at something, the first Act of a play that was, I claimed, probably the closest thing to the original text of \"The King in Yellow\" that still existed.\n\nTo my surprise, she was very interested. I remember the look on her face when I showed her the manuscript; like a kid on Christmas morning. She took it, and smiled, and thanked me, and told me how much she admired my fastidiousness. I was putty in her hands. Only later did I realize that this was where it all started. As soon as the pages passed from my hands to hers, there was no going back.\n\nAt ten o'clock that night I was lying in bed in my one-room dorm, staring at the ceiling and thinking about Melissa. I wondered what she thought of the play. It was such a strange story, surreal and macabre and terrible. I was glad it was unfinished. If there was a second Act, I didn't want to read it. I thought about the Phantom of Truth, the ghostly figure that haunted the play's heroine, about its frayed robe and pale white mask, and how it pointed its accusing finger at everyone who passed, though only she could see it. I shivered.\n\nI jumped when someone knocked on my door. When I answered Melissa walked right past me without saying a word. I was so surprised that I almost fell over. She didn't even look at me and instead just dropped a stack of loose pages onto my bed and then stared at them like she had never seen them before. She was pale and shaking, and although we had spoken only six hours ago she had bags under her eyes like she hadn't slept in days. She looked like she had just come from her own funeral.\n\nBefore I could ask what was wrong or what she was doing here she began reciting words, words that I recognized, though she said them in a way that almost obliterated that recognition:\n\n\"Strange is the night where black stars rise,\n\nAnd strange moons circle through the skies.\n\nBut stranger still is \n\nLost Carcosa.\"\n\nIt was Cassilda's song from Act 1, Scene 2. Except it wasn't: It was the same lines, certainly, but when I had read them on the page they had not filled me with the kind of dread that I felt then. It was like falling down a very dark hole and being absolutely certain there was no bottom. Even worse was the dull, flat look in her eyes, and the droning monotone of her voice. \"It's beautiful, isn't it?\" she asked.\n\nI tried to talk but my tongue was stuck to the roof of my mouth. After a few seconds I managed a noise that sounded somewhat affirmative, although I'm not sure that agreeing was really what I wanted to do.\n\n\"It's just like I thought it would be,\" she continued, \"only better. And worse. It's like one of those dreams that you forget as soon as you wake up. I can't believe you found it.\"\n\n\"Found what?\" I said.\n\nShe looked at me like I was an idiot. \"The play: You found 'The King in Yellow.'\"\n\nI shook my head. \"No, Melissa, that play I gave you is a fake. There's no way\u2014\"\n\n\"It's real,\" she said. \"Oh, but of course, you won't realize it until the end. It's fine. It's the way things have to be. Tell me, what do you think it was about?\" \n\nHer eyes looked like two bright blue chips of ice as she waited for my answer. \n\nI hesitated, then said: \"Um...it's hard to say.\"\n\n\"That's fine,\" she said. \"I'll show you.\" And then she began to undress.\n\nI would like to be able to say that at this point I stopped her, pointing out that she was obviously not in her right mind and that she was maybe under the influence of something and in any case that this is not the way I wanted this to happen. \n\nBut no matter how strange she was acting, this was the girl of my dreams, alone in my room in the middle of the night and apparently quite intent on being naked in front of me. If I was slightly less honorable with my handling of the situation than I should have been, well, really, can you blame me?\n\nIn seconds she stripped down to her bra and panties, and she stood less than a foot away. She put her hand on my chest and closed her eyes, and I watched her sway in time to the erratic beating of my heart. I was frozen in place, afraid that if I moved or said anything that the moment would somehow shatter like brittle glass.\n\n\"Do you want me?\" she said.\n\nI swallowed. \"Yes.\"\n\n\"What will you give me?\"\n\nI bit my tongue. \"What?\"\n\n\"If you want me you'll have to give up something. What should it be?\"\n\nI was now almost completely certain that I was having a nightmare.\n\nWhen she saw that I wasn't going to answer, she said: \"Why don't you do something for me? Why don't you find the Yellow Sign?\"\n\nShe obviously thought I should know what that meant, but I didn't have the first idea, any more than I expect you do now. Even so I nodded, and then she kissed me and all of my worries disappeared for a while.\n\nThere was something about the way that she took my clothes off that made me feel studied. She ran her hands over my bare limbs and naked chest like she was mapping it all out. She kept her eyes on what she was doing, only looking me in the face when she had finished the examination, apparently satisfied with whatever she had found. Then she pushed me onto the bed and climbed on top, catching me between her thighs. She rubbed against my naked, swollen cock once and I gasped. She looked placid.\n\nI had trouble speaking: \"Melissa, wait. Before we go any further, you should know, I mean, I've never, I've never actually\u2014\"\n\n\"That's okay,\" she said, face softening just the tiniest degree. \"I'll help.\" \n\nThen she slid down, taking me in her hand and guiding me into her mouth, and for a second I thought I might pass out. It wasn't just the feel of her lips gliding down over me or her soft tongue teasing the underside of my cock that nearly pushed me over the edge (although, that too...), it was the sudden and unexpected reality of what was happening. \n\nI had only ever kissed a girl once. Physical intimacy was altogether foreign to me, and sex seemed like a distant shore on the other side of an enormous ocean. Even as I ran my fingers through her hair it was impossible to believe that this was real, and the contrast between what was happening now and what I could ever have hoped would happen when I approached her that afternoon was nearly impossible to reconcile.\n\nShe took me all the way to the opening of her throat, pursing her lips around the base of my cock and then sucking wetly while her tongue swirled around. My fingers knotted so tightly in her hair that I worried I might hurt her, but she never objected. She was making a gulping noise that seemed particularly obscene but still made me quietly ecstatic. \n\nOf course, I was young and it was my first time, and although she was only a year older than me it was very clearly not her first time, and before long she had pushed me much further than I was able to go. I gasped out a warning as I felt it roil up inside of me, but either she didn't hear or didn't care because her only response was to slide my cock halfway out of her mouth and lick the head, which of course was all it took. I cried out as I came, squirting onto her tongue, body shuddering. She only me out when I was spent, her strawberry lips painted with the aftermath. \n\nI grunted an apology, embarrassed by my lack of stamina and sure that she would be disappointed. Instead she climbed on top again, kissing the side of my neck and telling me not to worry and that it was just what she had wanted. \n\nShe reached behind her back and unhooked her bra, tossed it away, then pressed my face to her breasts, where my lips found their way to her soft pink nipples. She whispered to me as my tongue flicked over them, and although her voice was still vacant there was a restrained undertone of affection under her iciness. She was patient with me while we waited for it to come back, and sure enough after a time I was ready again. She lay on the bed, pulling me down with her, holding me in place between her splayed legs. I muttered something about protection but she said not to worry (which I guess is exactly the kind of thing that should have made me worry more, but somehow when she said it it seemed okay). Then she put her arms around my neck and, coaxing with little twitches of her hips, let me in. \n\nTo be honest, from that point on, there's not much in the way of linear, coherent memory. I couldn't tell you how long it lasted or what we said or what I was thinking. All I remember is a long, slow, hot hour alone (together) in the dark. I tried to pull out at the end but she held me in, and I felt something pass between us, and the moment was suddenly broken, and I was back to myself, sweating, panting, naked, and sore. And Melissa opened her eyes and looked at me with that icy flatness, and I felt chilled all over, and I knew that whatever affection she felt for me just seconds ago was gone now. \n\nAnd then she left. \n\nShe dressed and went without saying a word, and as soon as she was gone I started to wonder if any of it had really happened. But then I saw the pages scattered on the floor and I realized that yes, it must have been. And it was when I began gathering the pages up that I noticed something else strange: Although I had given Melissa only the first Act of an unfinished play, somehow she had returned a manuscript complete with a second Act. Where had it come from? I was too tired and too confused to consider an answer, so I stuck the whole thing in a drawer and hoped that when I woke up in the morning it would all make sense. Of course, it didn't. \n\nI was relieved when she was absent from class the next day. I stared at her empty chair, remembering the warmth of her naked body but unable to enjoy it because the competing memory of her blank, emotionless glare kept crowding it out. I might have sat there all day thinking about it if I hadn't been startled by what at first sounded like the call of a deranged hyena but instead turned out to be:\n\n\"Let the red dawn surmise\n\nWhat we shall do,\n\nWhen this blue starlight dies\n\nAnd all is through.\"\n\nCassilda's song again, I realized, snapping my head up. Professor Chambers stood at the lectern looking pale, his eyes wild, hair tangled, and mouth hanging open. His clothes were disheveled and from where I sat I thought I could see spots of blood in his beard. He looked like he had just been in a car accident, and when he spoke the next verses he drew handfuls of papers out of his briefcase and flung them into the front row of desks. I didn't even need to look at them to know what they were. \n\nOf course Melissa would have showed the play to Chambers. Probably even before she came to see me. Maybe before she finished reading it herself. I guess he must have liked it, because he tried to quote the whole thing.\n\nI looked around the room; a few of the other students were laughing and one or two seemed to think this was some sort of particularly unorthodox lecture, but most appeared uncomfortable. Chambers' voice grated like a saw while his recitations became less and less coherent. After ten minutes campus security escorted him out of the room and off to an ignominious early retirement and within an hour everyone had heard what happened. Most of the student body found the incident hilarious: Had he been drunk, or is this just what happens after too many tenured years without a vacation?\n\nAlthough a few people had saved the pages he threw around, no one recognized them, and no one made any connection between the professor's sideshow and \"The King in Yellow.\" No one but me, of course. The combination of Melissa's spectral visit to my room and the professor's performance in class set an unnamable terror in my heart. But it couldn't be that the play was to blame? I didn't believe those ridiculous old ghost stories about a cursed play that drove people insane. Besides, the play I had shown Melissa was a fraud, of that I was certain. Even so, when I got back to my dorm I hid the pages in my mattress and I told no one about them. I was sure that if I just kept my head down that this would all blow over, and things would be back to normal in no time at all.\n\nThree days later Chambers was dead. So was Melissa. \n\nThey hung themselves side by side from the statue of the Fates in front of the arts building. A 30 page suicide note in both of their handwriting was found scribbled on the back of Act 1 of \"The King in Yellow.\" Police found over a hundred photocopied manuscripts in the trunk of Chambers' car, held together with rubber bands, and they seized the whole lot of them as evidence.\n\nClasses were cancelled. The rumor mill was spinning from the moment the bodies were found: A nervous breakdown in class was one thing, but now suicide too? Double suicide, with a student? And what about this mysterious play the cops found? What did it all mean? All the week long the people talked, and speculated, and gossiped, and wondered while I was in mortal terror of the police or anyone else connecting the dots between Chambers, Melissa, the play, and me. I considered throwing out the pages I had hidden, but something wouldn't let me. I suppose it was the belief that I would never understand what had happened unless I read it. When I got the news that Melissa was dead, I went numb inside, and I thought that the only thing that would shake the feeling away was might be in that strange second Act she had brought me. Really, it was all I had left of her now.\n\nBut I didn't read it. I was scared to even touch it. And it was about then that the bad dreams started. In my sleep I saw the Phantom of Truth, who pointed an accusing finger at me, and I heard a voice\u2014often Melissa's, but just as often not\u2014and it said:\n\n\"Have you found the Yellow Sign?\"\n\nBut when I awoke I still did not know what it meant.\n\nWhen classes finally started again I thought I could put the whole thing behind me. But as I walked to the Humanities building I heard something that made me wonder if I was dreaming still:\n\n\"You, sir, should unmask.\"\n\nIt was Camilla's line from the end of the masquerade, Act 1, Scene 2. I saw a knot of people clustered at the foot of the hill. Elbowing my way through the crowd, I saw someone dressed in an elaborate yellow gown and a gold Mardi Gras mask. It was Tessa Solomon, a girl I had known and briefly flirted with in my civics class before I met Melissa. Opposite her, playing the Stranger (revealed at the end of Act 1 to be the Phantom of Truth), was a tall man costumed in a faded bathrobe (his version of the Tattered Raiment) and a fencer's hood (standing in for the Pallid Mask). I later learned that he was her boyfriend, Louis Castaigne, a theater major. \n\nThey had marched unannounced across the green to the top of the hill ten minutes earlier and begun their performance. No one there but me could possibly have known what play it was, but a clamor of excitement went through the audience as the first people made the connection between their lines and the phrases referenced in Professor Chambers' last lecture. Dazed, I watched the scene unfold. \n\n\"I said, you should unmask,\" said Tessa-as-Camilla.",
        "\"Indeed?\" said the Stranger.\n\n\"It's time. We have all laid aside disguise but you.\n\n\"But I wear no mask.\"\n\n\"No mask? No Mask!\" Tessa threw down her Mardi Gras mask so that the audience could appreciate her horrified expression. It was a good performance, but something about it felt off to me. It was her eyes: They looked like Melissa's that night I found her at my door. \n\nLouis pointed an accusing finger at the crowd, and although I knew it was all part of the show it was too much like my dreams. As I turned away, I saw Tessa bring out the sword. I knew what was coming next and I preferred not to watch the scene play out. But when I heard Louis scream I turned back: In the play, of course, the Stranger isn't hurt by Camilla's sword; but I guess this was one vein in which Louis' final performance wasn't quite as authentic as he had hoped.\n\nEarly speculation was that Tessa had somehow mistaken a real sword for a prop, but as the police report later revealed, the weapon she killed Louis with WAS a prop. The blunt metal stave went through him with so much force that it broke in half, and broke Tessa's wrist along with it. Even as Louis lay there, bleeding and screaming, and the audience all scattered in a panic, Tessa never stopped reciting her lines. When Louis wasn't there to say his line in response, she just repeated the cue line over and over again until the police took her away. As far as I know she's still institutionalized.\n\nAfter that the campus was closed until further notice. The students lived in a strange no-man's land. Some left. Others stayed. They wandered between bars and parties, and they talked about what had happened, and increasingly they talked about \"The King in Yellow.\" Was the play real? Had Chambers read it? Had Tessa? Could it really drive a person insane? Where had it come from?\n\nSpeculation and gossip gave way to myth. Soon everyone knew someone who knew someone who had read it. It became a fad. Everywhere you went people asked: \"Have you read it?\" and \"Do you know anyone who read it?\" and \"Where can I read it?\"\n\nWhere indeed? Where, I wondered, had Tessa and Louis gotten the script for the scene they performed that day? Melissa must have given it to them. I remembered the hundred copies found in Chambers' car. I wondered how many others the police hadn't found because they had been given away first, and who might be reading them now, and what they might do?\n\nTwo weeks after Louis' death I attended a frat/sorority mixer billed as a \"Carcosan Ball,\" where the Theta Phi girls dressed in corsets and masks and long gowns like Carcosan courtesans, peeking out from over the top of decorative fans at the guys from Alpha Chi Omega, and every third person quoted \"The King in Yellow\" in conversation, or pretended to. A friend had invited me on the pretense of cheering me up (had he known why I was depressed he probably wouldn't have bothered), and I hadn't known the theme when I, for the sake of politeness, agreed to attend. Watching the partygoers, I thought of them all as silly, thoughtless children. To them \"The King in Yellow\" was still fun, and an excuse for a second Halloween or Mardi Gras, but I wondered if any of them were thinking about the three people who had died and the one laying in a hospital.\n\nBy midnight I was ready to leave, but then a group of laughing Thetas climbed onto the dining room table and shouted for everyone's attention. My heart jumped when I saw them passing printed pages around. A tall blonde, clearly many drinks for the worse, read in a wavering voice from the sheet in front of her:\n\n\"Along the shore the cloud waves break,\n\nThe twin suns sink beneath the lake,\n\nThe shadows lengthen \n\nIn Carcosa.\"\n\nShe giggled and passed the page to one of her friends, who continued the verse:\n\n\"Strange is the night where black stars rise,\n\nAnd strange moons circle through the skies\n\nBut stranger still is \n\nLost Carcosa.\"\n\nThe effect that these words had on the crowd was astonishing: They surged forward to hear more, and when each girl finished reading a page she would fling it into the mass of them, where it would sometimes be torn to shreds by too many hands groping for it. \n\nAt first the girls had apparently been acting on a lark, their drunken recital full of giggles and winks. As they went on, though, their demeanor sobered, and each of them got a faraway look. When one of them lifted up her voice and shrieked:\n\n\"The scalloped tatters of the King in Yellow must hide Yhtill forever!\"\n\n\u2014it elicited such a horrible cry of elation from the audience that I felt I had to leave. I pushed my way through the dumbstruck Alphas who stood shoulder to shoulder in the doorway, hurrying upstairs to find my coat and get out of that place before I had to hear anymore of those horrible words.\n\nI only made it as far as the first open door in the hall before I stopped. I stood staring into the dimly lit room, just as dumbfounded as those downstairs who were transfixed by the recitation. Scattered over the floor were the various pieces of girls' costumes and lolling on the bed, half-naked in each other's arms, were two Thetas, busily kissing, groping, and fondling each other.\n\nA girl with dark curls piled up on her head struggled with the laces of her corset, finally loosening them enough to allow her breasts out so that her partner could lick the erect nipples. She lounged against a pile of pillows, fingers stroking the other girl's hair, eyes half-open and tongue set between her teeth, inhaling with little hissing noises and then exhaling with lazy sighs. \n\nThe other girl closed her eyes, strawberry lips and cherry-red tongue licking and lapping. She shifted her gaze to me, and I was afraid she might scream, but instead she regarded me with cool indifference, or perhaps a complete lack of acknowledgment that I was there at all. The moment didn't seem real. In fact, I was sure that it wasn't. Because it was not the sight of female bodies entwined that fixed my attention; it was that one of them, the girl with the dark curls, looked exactly as I imagined Camilla, the heroine of \"The King in Yellow,\" to look. \n\nIt's a strange thing, a resemblance to the fancied image of a fictional person, but when I first read the play a picture of Camilla's face emerged very prominently in my mind, to the point that I felt I could pick her out of a crowd. And now here she was, or at least, someone who looked so much like her that I could only assume I was once again dreaming, or that the difference between dreams and waking was not as pronounced as it should be.\n\nI might have stood rooted to that spot all night if \"Camilla\" had not pushed the other girl away, stood, and walked across the hall, stopping to stroke the side of my face and trail her hand over my shoulders. She was naked except for fishnets, long black opera gloves, and costume jewelry, but she walked right up to me, touched me, and then retreated into the darkened doorway of the room on the opposite side. A pair of long white arms with lacquered nails emerged from the shadows of that room and drew \"Camilla\" in.\n\nThe other Theta, a short, petite Vietnamese girl, followed, stopping only to kiss my cheek, touch my wrist, stroke my thigh, and trail her fingers along my arm. Her movements were languid, like a passing mirage. I was still not sure if any of this was real, but her touch felt solid enough. She looked over her shoulder as she disappeared into the impenetrable blackness of the other bedroom and gestured, once, for me to follow.\n\n\"Hello?\" I said, approaching the open door and peering in. I could see nothing, but the same arms, belonging to the unseen third person in this rendezvous, slipped out of the shadows and, taking me by the wrists, drew me in. The door closed behind us. \n\nI felt a hand on my shoulder, and I allowed myself to be drawn through the dark, to the bed. My unseen partners made no noise at all, and when I lay down it seemed that the weight of only one caused any depression on the mattress. But then I felt their hands on me, one's touch gentle and reassuring, one's fast and insistent, the last a measured compromise. They never said a word, to me or each other, but they worked in perfect tandem, stripping me, laying me back, and ministering their affections one at a time.\n\nCertain things about that night will always stand out to me: I remember hearing the bedsprings creak, and the sound of fabric rustling, and of zippers and buttons and catches being undone as the last vestiges of costumes were dismissed. I remember hearing long hair sweeping over bare shoulders, and the sound of lips brushing together. I remember sighs, and moans, and little laughs so soft they almost weren't there. And from below I could still hear the awful grind of words from many mouths. The impromptu chorus had reached the masquerade scene, and again I heard Camilla's fateful line:\n\n\"You, sir, should unmask.\"\n\nThose words were a throbbing pulse that ran through the whole house, like a gigantic heartbeat, and we all fell into their rhythm.\n\nI smelled perfume, and chapstick, and clean sheets, and the scent of wildflowers. I smelled musk, hot flesh, and sweat. I smelled lust, want, need, and indulgence. I remember the taste of lips, and tongues, and soft necks, and bare shoulders, and exposed breasts. Each kiss left a sweet taste behind that never quite went away. Later, I tasted the wetness of their bodies, my lips dancing across the smooth plane of each of their thighs and then between them.\n\n\"You, sir, should unmask.\"\n\nAnd of course, I felt. I felt everything: one set of lips against mine, long hair hanging around her face and tickling my cheek while our tongues met. Another mouth ran down my bare chest, over my ribs, and back up again. Further down, a pair of hands wrapped around my cock, holding me while she sat above me, and then down on me. The kissing girl bit my lip at the same moment I entered, and then she pushed my face to her breasts as her friend began to ride me.\n\n\"You, sir, should unmask.\"\n\nI felt the pain and the grief and the coldness of the last weeks drop away. I felt myself forget everything, down to even who I was. \n\n\"You, sir, should unmask.\"\n\nThey still didn't say anything. Each time I came they waited patiently for me to recover, teasing me with light kisses and touches until I was ready again, and then it was time for another round, a sea of hot bodies, thrusting hips, and quivering thighs, all while many hands clutched at me and many voices moaned and sighed.\n\n\"But I wear no mask...\"\n\nAfter, I lay in the dark, shivering, somehow feeling alone. The girls said nothing, and when I reached out I found the bed unexpectedly empty. Then I felt my clothes drop onto my chest, and I took the hint. After dressing in a hurry I reached for the light, but someone beat me to it, closing her hand over mine and pushing it away. \n\nThe door opened, and with the same gentle force that I had been drawn in I was now expelled. I stumbled to the stairs, allowing myself to look back only once. When I did, I saw the open, lightless doorway, and from inside I heard a voice, and it whispered:\n\n\"Have you found the Yellow Sign?\"\n\nAnd then I ran.\n\nI ran down the steps and out of the house. As I passed the living room, I had the impression of some great turmoil there, a riot of shouting and colliding bodies and a horrible noise that may have been a voice still reading \"The King in Yellow,\" although nothing about the voice was recognizably human anymore.\n\nBut I ignored all of that, and everyone and everything else I encountered on the way home. It wasn't until I was in my one-room dorm with the door securely locked that I allowed myself to stop running, and then I fell onto my bed and cried, and screamed, and tore at the sheets. \n\nI did all of this because I knew that I had recognized that voice in the dark, and that it had been Melissa.\n\nAfter that things started to get really bad. The nightmares came every night. When I was awake I thought about Melissa and when I didn't think about Melissa I thought about the play. I talked to no one if I could help it. I rarely left my room.\n\nOn the outside, things were happening. The Thetas and Alphas and assorted hangers-on from the Carcosan Ball set to work. The manuscript from the party was reassembled, then copied, and they began to pass the copies around. Demand was high, especially since the party itself had assumed something like legendary status among those who hadn't been there. Hand to hand, person to person, it spread and spread. Copies of the play in book form, printed and bound in someone's basement, were pushed onto stores by mysterious, anonymous salesmen. Desperate for a hot seller, the shops bought up all they could. It flew off the shelves. Soon everyone was reading \"The King in Yellow.\" \n\nIt was just a trickle of stories at first: suicides, murders, nervous breakdowns. Nothing unusual in themselves. If they were happening a little more often lately, well, maybe it was something in the air. \n\nWhen Louis Castaigne's cousin, Henry, threw himself in front of a bus it was chalked up to grief. When an assistant district attorney set fire to himself on the courthouse steps it was blamed on depression and being overworked. A woman drowning her husband at their oldest daughter's swim meet? Postpartum depression. \n\nAs the incidents became more frequent and more graphic, authorities and media analysts noticed that many of those involved had read \"The King in Yellow.\" A few publications ran sidebars highlighting the play's sordid past, but no one seriously considered that it had anything to do with the violence. No one worried yet. Then a week went by, then two, and more stories came in: \n\nA cab driver who held his fare at gunpoint and forced them to read the play. \n\nA man who changed the name of his club to \"Carcosa\" only to have it burnt down by rioters two days later. \n\nA parish priest who gave a sermon about \"The King in Yellow\" rather than the Bible, and an hour later, when his horrified parishioners couldn't take it anymore and found they had been locked in, eventually tore the priest limb from limb with their bare hands, telling police after that it was the only way to keep him from driving them all mad. \n\nThe last straw came when a group of Alphas and Thetas set fire to the local library while chanting \"Carcosa now!\" and then threw themselves off of a freeway overpass. People became scared, and serious questions about play were asked for the first time: Was it mass hysteria? The power of suggestion? Were already psychologically-fragile people drawn to the text because of its reputation and then acting out on it? \n\nOr could it be that the governments of 19th century Europe hadn't suppressed the play because it offended them, but because they knew what it could do?\n\nNo sane person was willingly reading or distributing it at all now, but those who had read it already would not stop trying to spread the gospel. They copied the prologue into the body of emails and sent it to their entire contact list hoping that trusting recipients would open it and read without knowing what it was. They texted individual lines to every person whose phone number they could get their hands on. People downloaded podcasts and found, instead of the content they expected, \"The King in Yellow\" being read over their earbuds.\n\nCopies with fake covers and titles were smuggled onto store and library shelves, hapless browsers opening them up and finding horror within. In at least half of all cases, we were told, those who had read or heard even a few lines couldn't resist reading the entire thing. Once its hooks were in you, they never came out.\n\nThe police tried to step in, even going so far as to close bookstores and libraries for the sake of public safety. But of course, the police had seized Chambers' copies of the play after he died, and the suicide note was written on a copy of the play. At least one of the detectives must have read it during the investigation. And then he would have passed it on to a colleague...\n\nIt had been months now and there was no telling how many in the department had read it. So when people noticed that the stores being raided were almost always the ones not actually selling the book, and that a person arrested for distributing had usually never done so but very often started to after being released, well, it was best not to draw attention to oneself by saying anything.\n\nPersonal protection guidelines were issued to help us keep ourselves safe. We were encouraged to leave the house as little as possible, to minimize use of all communication devices, and not to read anything that was put in front of us. Be suspicious of anyone you haven't been in constant contact with, we were told. Report anyone exhibiting unusual behavior. Assume that anyone you meet may be a threat. Everyone stopped going to work. Cars were abandoned all over town. People started hiding.\n\nFrom my window each night I could see the fires burning and the crowd of frenzied madmen running through the streets. During the day normal people left their homes, scavenging what they could before returning to their hiding places. The Tattered Raiment was spread over all of us, and we were afraid.\n\nI stayed in my dorm, leaving only twice a day to use the bathroom down the hall. My door was locked at all other times, and I had covered the windows with duct tape. I never saw anyone else, and no one came looking for me. The more time went by, the less and less I heard from the outside and the fewer unaffected people seemed to be on the streets. \n\nOccasionally I wondered if I was the last man in the world. Other times I was sure of it.\n\nI remember spending all of one night crouched by my door, my eye pressed to the crack, watching the hall outside for any hint of movement. I was not sure if movement would be a good or bad thing, but I would cross that bridge when I came to it. Hours passed and I kept my vigil. It was almost sunrise (I slept during the day; it was safer) when something passed by. Not only did it pass, but it stopped, and, to my surprise, dropped down to my level, and peered through the same crack I was at. I saw a jaundiced eye shot rolling in its socket as a voice that was something between a whisper and a grunt said:\n\n\"Little pig, little pig, let me in.\"\n\nI froze. There was a pause. Then:\n\n\"You're supposed to say: 'Not by the hair of my chinny-chin-chin.'\"\n\n\"Is that from 'The King in Yellow'?\" I asked.\n\n\"Sometimes,\" was the answer, and then a laugh. \"Do you know it?\"\n\nI considered this question for some time, as the answer was surprisingly complicated. But eventually I said:\n\n\"Yes. In fact, I was the first. And now I might be the last. And everything that's happened is my fault. But it doesn't matter because there's probably not anyone left to blame me, and no one ever knew anyway, and it was nothing I did on purpose, and as embarrassing as it is to admit now, this is all just because I wanted to impress a girl but didn't know how, and I think that's a hell of a fucking thing to end the world over.\"\n\nAnother long pause on the other side. Then:\n\n\"When do I get to say 'I'll huff and I'll puff and I'll blow your house in?'\"\n\n\"I don't know,\" I said, voice trembling because I had started to cry. \"The second Act?\"\n\nThe Big Bad Wolf skittered off down the hall to whisper at another door, and I never saw him again. After that I stayed away from the doors and windows entirely.\n\nI counted the minutes as they passed one by one. I did not read the play. I ran out food before I ran out of water. The power went out and stopped coming back on. I considered leaving to find help or supplies, but the thought of what might be waiting out there stopped me. Starvation didn't seem so bad, in a certain light.\n\nIf the tape hadn't worn away from the windows I might be in there still. But through a rip I saw the orange light flickering one night, and curiosity got the better of me. I stripped the tape away, and below, in the center of the campus, I saw the great fire being stoked, and around it I saw a mass of people, hundreds of them. At first I thought it was another group of madmen, but then I looked more closely and saw the grim, determined looks on the mob's faces, the faces of people who had been in hiding for weeks and were now ready to burn the cancer of \"The King in Yellow\" out of their community forever. It turned out I had been wrong, and I was not the last sane man left in the world.",
        "I watched as they fed a seemingly endless stream of pages into the fire, emptying box after box full of books and loose manuscripts until the air was black with ash. And then I heard it: a hooting, screaming, cackling noise, and I saw the crowd carrying in something that might have been a person or might have been a scarecrow, but which in either case foamed and gibbered and struggled as six people bore it along. I imagined what it must have been like for this creature who, after weeks of crawling in the gutter and running across rooftops and reciting \"The King in Yellow\" until it forgot how to feed itself, was now too tired and too sick and too hungry and too insane to resist the hands that held it up and pushed it forward. I knew what was going to happen before it did, so when they threw the struggling stick figure into the fire, and when the madman laughed and leaped and cavorted in the flames, I only nodded, and wondered if he was the Big Bad Wolf. \n\nAnd then they brought in the next one.\n\nThis went on until dawn, and when the flames began to die someone threw gas onto the fire and the crowd cheered. A blazing plume shot into the sky and the center of that burning mass glowed bright yellow, and in the swirling dance of the flames I thought I saw, and could still see imprinted on my vision even after the explosion faded away, a shape with three points, a symbol entirely alien but which nevertheless communicated to me thoughts and words and ideas so beautiful that I wept. \n\nAnd I knew that it was the Yellow Sign, and that I had found it at last. \n\nAnd I also knew that despite the mob's efforts, the play would not be destroyed, that I would not run down to them and throw the last (and first) copy of it into that fire, and that even if I did it wouldn't matter, because the essence of it had spread through those flames and shown itself to me. The Yellow Sign taught me that the play more than just paper and words. It had been destroyed before; it would live again. \n\nI realized that I was no longer alone. My door was still locked, barricaded in fact, but even so a figure in a tattered robe and a white mask stood next to me, pointing an accusing finger. I reached out and touched the fabric of its coarse, billowing gown. It was real. The Phantom of Truth had come for me. And that meant that I should unmask. \n\nThe truth is, I didn't discover \"The King in Yellow\": I wrote it.\n\nAll of my research turned up nothing interesting enough to approach Melissa with, so I took matters into my own hands. Lots of people over the years had tried recreating the lost play. So why couldn't I do the same? \n\nBut not all of it, you see: I only wrote the first Act. Just enough to have something to show her. The second Act that Melissa brought to my room that night, and that Chambers and Tessa and the Thetas and all the others had read? Well, at first I assumed that she had written it herself. But now, as I looked into the Pallid Mask, I realized that wasn't true. Perhaps the second Act was written through her, just as the first had been written through me, but the words belonged to neither of us. They were the words that had been whispered into our ears by the invisible messengers: Camilla, Cassilda, the Stranger, and even the King in Yellow himself. The play was their doorway into the world and we were their key, just as others had been before us.\n\nThe Truth hounded me still. It pointed at the place where the manuscript was hidden. I took out the play, arranged it into the proper order, and then I read it. I read it from beginning to end, and when I came to the revelation of the Yellow Sign I laughed. I laughed and laughed and laughed until I was sick, and for all I know I'm laughing still. \n\nWhen I was finished, I looked up and said: \"Shouldn't you unmask too?\" So the Phantom of Truth took off the Pallid mask, and I saw blue eyes and a full smile and hair the color of asphodels. And when we kissed I thought how lucky we were, that on our one night together we had compounded such a child as this, we each contributing one half that somehow became a greater whole. And I felt very proud.\n\nWhen the mob came to my room they found what they thought was me hanging from the curtain rod. And they clucked their tongues and said what a shame it was. If any of them had read the play, they would know that I am not dead, any more than Melissa is, and that by leaving our bodies behind we've freed ourselves from that prison of flesh.\n\nThey did not find the play either. We took it with us. And although this one town has evicted us, we have a whole wide world to find a new home in. \"The King in Yellow\" will live again, and you, who have read this confession, will be among the first to seek it out. The Pallid Mask sees you, and the accusing finger of the Phantom of Truth now points in your direction, even if you cannot yet see it. \n\nBut tell me friend: Have you found the Yellow Sign? "
    ],
    "authorname": "TamLin01",
    "tags": [
        "ghost story",
        "fraternity",
        "love at first sight",
        "loss of virginity",
        "tragedy",
        "sorority",
        "psychological horror",
        "lovecraft mythos",
        "fffm orgy",
        "haunting dreams"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-king-in-yellow"
}