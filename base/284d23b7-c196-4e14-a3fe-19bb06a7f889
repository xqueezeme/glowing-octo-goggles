{
    "title": "Growing Up",
    "pages": [
        "\"Can you get the plates for the snacks?\" Kaylie said.\n\nJason continued his game of Call of Duty. \"You mean stop in the middle of a game or get them later, like when I'm getting the ice?\"\n\nThis is the boy I fell in love with, she thought unironically. They were best friends in school since they were eight years old because he was so carefree and sarcastic and never did what anyone told him to do. He was fun. That's all you want from a best friend when you're eight, someone so annoying that everyone is mad at them except you You're in on the joke, so you can laugh at all of them. But they were 18 now and she was waiting patiently for him to grow up. She still loved him, it wasn't a major drama. He was her first best friend and her first boyfriend. She'd always love him. She was just having a bad day and probably stressed because of this party.\n\nThe party was for the other man in her life: Mr. B, Jason's dads. She'd known him since she was eight too, if that wasn't immediately obvious. Her dad left her and her mom when she was too young to remember what it was like to have a dad. She was two years old when he went to England and then somewhere else after that and never got in touch with them again. She had no idea where he was and no real interest in finding out beyond an idle curiosity about some stranger she once barely knew. Apparently, he was a lot of fun, so said her mom. The thing that made Mr B a great dad is that he was the exact opposite of her dad. He was boring, but he was always there. He had a great job, they had an amazing house and Jason always got the latest iPhone or PlayStation, but mostly what was great about him was that he stuck around for Jason even after his wife left him for a guy ten years younger.\n\n\"You know this is really important for your dad, right?\"\n\n\"Yeah, I know,\" Jason says back to me. \"It was my idea, remember?\"\n\nTo be fair, yes it was. \"Have you checked the weather report for tonight?\"\n\n\"Ummm, no, was I supposed to?\"\n\n\"You mean, was it a job assigned to you?\" She felt like she only had one speed at the moment: sarcasm.\n\nHe looked worried now. \"Was it?\"\n\nKaylie didn't even answer because, what do you say to that? It was like the biggest night of the year for astrophotographers, and they promised him a surprise so they could maybe distract him from the fact that the day marked one year since his wife left him \"temporarily\" to find herself, which is apparently code for being a whore. Mr B convinced himself from day one that she'd be back within the week because he always thinks everyone in the world is like him. Nowhere in the recesses of his mind did he ever believe she'd be gone a year. He somehow managed to wake up every day thinking that this was the day she'd come back to him.\n\nThey still talked, and once a month or so she made time for a weekend with Jason, but this mindless fantasy that she'd come back was kind of hard to be around. Pollyanna would have given up long ago, but Mr B was hanging in there. It was endearing in a Richard Bach novel kind of way when you're in that moment of time lost in the writer's words and you believe everything is going to work out if we just all do yoga and throw sticks in rivers.\n\n\"Just checked on my phone and it's going to be mostly clear with the odd cloud,\" Jason said.\n\nKaylie laughed because, what else are you going to do? He'd done his job and didn't even have to leave the couch. She could see herself marrying Jason and being the one who does all the work in the house and takes care of the kids while he plays golf on his PlayStation 15 or whatever. \"Just remember to get the ice and be back here before five.\"\n\n\"Why five? The sun won't even go down till eight or something.\"\n\n\"Because when he gets home, I want everything ready so he sees it. All the food and beer, all the snacks ready to go, barbecue prepared, and all the camera and telescope stuff set up on the gazebo. So, when he walks in, his surprise is all ready and he can get excited and know how much we love him and feel special instead of thinking that it's been a year since your mom walked out.\"\n\n\"Hey,\" Jason said like it was a eureka moment, \"what about your mom?\"\n\n\"I don't know,\" Kaylie said. What about her?\n\n\"Well, she's working tonight. Couldn't she bring the ice from the bar?\"\n\n\"Yeah, you're right. She gets off at 2:00am, she can bring the ice and your dad will just have warm beer till then.\"\n\n\"Don't snap my head off! I'm just trying to help.\"\n\nShe had a strong urge to explain how it wasn't helpful at all when he refused to do any critical thinking, but decided she didn't have time for this discussion. It was just past three o'clock and she had a ton of things to do. \"Just go get the ice.\"\n\nKaylie got to work setting up the viewing station at the gazebo. This was the el primo most important job, and it had to be done right. She wanted him to look at it and think that she did everything that he would have done and did it exactly the way he would have done it. She'd learned a lot about photography from Mr B. Mostly, she used it to get the best light on her in any situation so she looked her absolute best. Although generally not one to sneer at others for how they looked, bad lighting was one area where she'd let fly because it was so easily taken care of. Simply, never ever let anyone take your picture when the sun is high in the sky. Never do it. And if you have to, turn your body to get the best possible shadows on your tits because that's all anyone will look at. She knew she had amazing tits and didn't care if people judged her for wanting people to notice them. They were young, they were firm, and they were big without being cartoonish. And they weren't hanging off a fat body either. Her ass was round but tight and her tummy was the kind of tummy you expect from a swimmer.\n\nShe also learned about the technical side of things, with cameras especially. Jason was more the type of boy who'd pick up a camera and switch it to automatic mode and then point and shoot. He used whatever flash came with the camera instead of a dedicated flash that you could bounce, for example. Kaylie enjoyed getting into the meat of whatever she was doing and finding out all the intricacies. She wasn't into the whole photography-as-a-hobby thing, but she liked knowing how to do it and she loved listening to Mr B talk about the techniques he used to take a particular landscape photo. That was the one time when his face lit up as bright as when his son got a \"clutch\" in Call of Duty.\n\nJust after five o'clock, Mr B walked through the door. You could almost always rely on him to be home before dinner. He could easily work late hours: he had plenty of clients. But he knew how important it was to be home for dinner with his son. Kaylie respected that about him.\n\nHe called out, \"There better not be strangers hiding in the closet. It's not even my birthday.\"\n\nKaylie skipped over to him at the front door and kissed his cheek. \"Not that kind of surprise, mister.\" She brought him on a tour of the kitchen to show him all the snacks, and opened the fridge revealing a couple of six-packs, three steaks, and way too much salad. Then she took him to the window that looked down on the backyard and handed him the binoculars. He looked through them and saw the setup on the gazebo.\n\n\"You remembered,\" he said. He looked really happy.\n\n\"Of course, we remembered. Right, Jason?\"\n\nJason took one hand off his controller and waved from the couch. \"Happy asteroid day, Dad.\"\n\n\"Don't get up. son,\" said Mr B. Everyone was being sarcastic.\n\nAfter the barbecue, they all headed down to the gazebo for the main event, but within a few minutes, Jason got a call from one of his buddies and went back up to the house to \"deal with the matter\". Half an hour later, he hadn't come back, so Kaylie went up to the house and found him playing Call of Duty. What a shock. She read him the riot act, told him it was an important night for his dad, lectured him on how much his dad does for him, etc. Jason responded with some gobbledygook about his team getting together for a mission and how he had responsibilities. \"It'll be like half an hour. Just chill and stop making a drama out of it. Dad's fine, he's not going to slash his wrists in the next half an hour.\"\n\nKaylie gave up. She walked back down to the gazebo and told Mr B that Jason had to do something important but he'd be down in half an hour.\n\n\"Listen,\" he said, \"I know how much trouble you guys went to for me, and we both know it's one year today and...\" He smiled, but in a very sad way. \"It's just, I feel very lucky to have you both in my life and I'm doing fine. I respect her choices. If you love someone, set them free, etc.\"\n\n\"Oh, good,\" said Kaylie and gave him a hug. She didn't buy a word of it.\n\nThey passed the time chatting for an hour or so, and then she made her way back up to the house. Jason had great news. \"We got through to the next round! And I'm really close to getting golden guns in the shotgun category, which you may recall is my worst gun type.\" He was really excited. Kaylie was really happy for him in that sarcastic way of the day. \"I'll just be another 15 minutes or so.\"\n\nKaylie knew exactly what 15 minutes meant. It meant go away, I have no self-control, Sony owns my ass and has designated that it should stay stuck on this couch.\n\nShe mused during the long walk back to the gazebo what Jason would be like to live with full-time or as a co-parent. He never seemed to show any initiative. Unless he was told to do something, he never did it. He never even asked her to go out with him, which always irked her. They'd been best friends for years by that point, spent every day together, and everyone assumed they were boyfriend and girlfriend, and both of them went along with it. Eventually they kissed but it was like one of those things you're supposed to do when you're boyfriend/girlfriend. Mind you, she also accepted that it was partly her fault. It fed perfectly into her desired worldview of steady predictability, and honestly, most girls were jealous of Kaylie. Jason took after his dad in the looks department. He was also a pretty good basketball player, always on the starting five when they were in high school. Not good enough for a college scholarship or anything, but good for bragging rights among the girls, especially when he had a good game. Basketball was big in their high school: it got way more attention than swimming.\n\nAs she approached the gazebo, she could see Mr B busy making sure everything was the way he needed it: lining up telescopes, tripods, and cameras, making sure he had the battery chargers humming, and checking he had enough SD cards, that kind of thing. He didn't tell Kaylie that she did a good job or anything, but he seemed happy, and that would do for her. It was still too early for the asteroids, but for him, all of this preliminary work was all part of the event. It was like how football fans watch the Super Bowl previews all weekend instead of just tuning in when the game was about to start. He had his phone out, using some app to calculate the right angular diameter and azimuth and elevation. Even though Kaylie didn't understand 90% of what he was saying, she was rapt with the way his voice sounded as he talked about this kind of thing. Most of the time, Mr B was this tedious adult/parent saying the right things and doing the right things, which she loved, but she also loved this other side to him. He was a master of his craft and incredibly successful in his field. You just had to look at his property to see that. He had a large house with a backyard that led down to a beach a couple of hundred yards away. Hell, you just had to look at the gazebo to see it. It was as big as some houses, had a movie screen and projector, a little mini-bar, and even a hot tub.\n\nThey chatted for another hour, Kaylie asking lots of questions to keep his mind off the person neither of them wanted to discuss, but at 8:37pm, his watch beeped. She looked up to the sky assuming some major celestial event was about to unfold, but no. The beep, he explained, marked the exact time one year before that she left him. He lit up a cigarette. He'd been off them for months, but every now and then, she'd see him walking somewhere on the property or along the beach, smoking a cigarette. It always meant the same thing: he was thinking about her. She was in awe of how much he loved her. He could have easily taken in lovers, he was a great looking guy, but he didn't.\n\n\"Can I ask a personal question?\"\n\n\"Sure,\" he says.\n\n\"Why haven't you ever gone on a date? I know you say you're doing it for Jason, but come on, he wouldn't even notice. You could be gone for a weekend and he wouldn't know as long as the internet didn't go down.\"\n\nMr B took his beer bottle and held it in front of him as if preparing to take make a toast, just waiting for the right moment. His eyes were intense with sadness and resignation. \"I'm 44,\" he said, and took a sip.\n\n\"And?\"\n\n\"When you date at 44, the women are serious about it. They're not just looking for a roll in the hay. They ask what happened in your last relationship. When I tell them, then they'll ask if I still love her. I'll say yes, I will always love her. Now, if Claire had died in a brutal car wreck, that would sound really sweet and romantic because even though I love her, she's not a threat. But Claire's alive, and the next significant question is, would you take her back if she asked?\"\n\nKaylie nodded. She got it. \"But couldn't you just say no?\"\n\n\"Absolutely. But I'd be starting a relationship with a massive lie. And if this woman fell in love with me and Claire were to come back, that poor woman would be devastated and never believe a man again. I know the pain she'd feel. Trust me, whoever she is, she's better off with someone else.\"\n\nKaylie nodded.\n\n\"And one thing I know about women, if you want them to notice you, let them learn there's another woman in your life. Claire would be at the door the next day.\"\n\n\"Well, isn't that what you want?\"\n\n\"No, of course not. If she comes back because there's another woman, she'll leave again when that woman has been shooed off the scene. No, I want her to come back because she remembers what a great fuck I was. Sorry. Too far.\"\n\nKaylie laughed. \"Actually, no. I'm 18 now. We should be able to talk about things like this. We're past the lectures on life choices and Pixar movies and ghost stories by the camp fire.\" She looked at her watch and couldn't believe how fast the time passed. It was nearly 10 o'clock. \"Is it getting close to show time?\"\n\nHe looked at his watch and the sky and toggled his head from side to side. \"We'll get some early signs,\" he said, \"but most of the good stuff will happen after midnight. You never know though.\" He recounted stories of photos he got when he least expected them, whipping out his phone to show her some amazing shots that were never planned. Not just astrophotography. He did all kinds of different photography: landscapes, portraits, weddings, urban photography, all kinds of things. He wasn't just technically good. There are millions of photographers that can set the right aperture and shutter speed for a scene and take perfectly fine pictures, but to get the right composition, that was an art. He was also brilliant at post-processing. Mr B could take even other people's photos and do magic with them in Lightroom and Photoshop. He was a master of his craft, a genuine artist.\n\n\"Okay,\" Kaylie said in her most resolute tone, \"I'm going up to get him and I'm not coming back without him.\"\n\n\"Okay, get Jason and another six-pack, would you? If you can only bring one of them, make it the beer.\"\n\nHe knew his son well, but he was underestimating Kaylie. \"I'm bringing them both, Mr B. You can rely on me.\"\n\nShe knew Jason would be stuck to the couch staring at toy soldiers on the 80-inch screen, but she had a few quivers in her arrow. Or vice versa. He would have flunked out of high school if she hadn't found a way to get him to study. Three hours of study and she'd blow him, that was the deal. And no one blew Jason like Kaylie. At least, that better be the case. They'd been having sex for a while now, longer than their parents wanted to know. Kaylie had been staying for overnight visits almost since the start, making Mr B a free babysitter that gave her mom the freedom to take late-night jobs, when the tips tended to be better. Kaylie had a little room there that she used to sleep in, but when they both turned 18 a couple of months back, they were allowed to officially share a bed in Jason's room. They just kept the sex quiet -- no screaming out, \"Yes, Jason, fuck my barely legal cunt!\" Kaylie laughed to herself as that exclamation ran through her mind.\n\nSure enough, there was Jason on the couch, cursing at people inside the TV: they were all fucking lowlife camper shitheads. That was another thing that they weren't allowed to officially do -- curse. Mind you, that rule might have changed too. They just didn't get around to discussing all their newfound freedoms.\n\n\"Not now!\" he said, admonishing her when she walked in. If he'd seen her scowl, that might have made more sense, but he hadn't even looked in her direction. In her mind, she went through all the lectures she could deliver, full of righteous vigor, and they would have made no difference, not one of them.\n\nSo, she went for the supportive girlfriend approach and sat beside him. She watched as he moved around some snowy mountain location. Kaylie was not even close to being a gamer, but she'd picked up a rudimentary knowledge of first-person shooters from watching Jason. \"Is that a shotgun?\"\n\nHe snapped back at her: \"Yes, I told you before!\"\n\nTold her what? She had no idea what he was talking about. \"Isn't that a pretty big map for a shotgun?\"\n\nHe exhaled loudly. \"I fucking know that. I don't have any choice. Do you even listen to me when I tell you stuff?\" He fired shots at several people before getting killed and let out a grunt.\n\n\"If you're gonna insist on using a shotgun, you should get closer to them,\" Kaylie said.\n\n\"Can you do me a favor and shut up?\"\n\nShe sat there and just watched since talking was not working. She leaned forward and stared at the TV to convey her fascination with what was going on, but within a few minutes he sighed abruptly and said, \"Do you mind just leaning back a bit. You're right in my peripheral vision.\" The words sounded polite, but the tone was definitely not. Okay, it was time for plan B. She stood up and walked upstairs to her room.\n\nIn practice, it was a wardrobe more than a room she slept in. Mind you, she'd been dealing with some insomnia lately, which combined with Jason's snoring meant spending part of the night in her other bed or the couch or on the gazebo sometimes. She found the waves helped rock her to sleep. She went to the actual wardrobe in the room. More than half her total clothes collection lived here fulltime. She stripped naked, looked at herself and mused aloud, \"Now, what should I cover this up with for maximum effect?\" Kaylie spent all four years in high school on the varsity swim team, and swam pretty much every day since school was out: one of the benefits of your boyfriend having a pool and access to the beach. She was 5'7\", her ass was tight, and her breasts had been attracting attention from boys who tried to steal her from Jason since she was 16. She wore a 36D bra, but she wouldn't be needing that for this particular mission.\n\nShe settled on a tight thin white top that revealed her midriff and was held closed by seven buttons down the front. It allowed a girl to show as much or as little cleavage as she chose. In this case, she went for two undone buttons, which should get Jason's attention. The material was so thin you could see her nipples, especially if she pinched them, which she did, causing a smirk to form on her face. She loved how it showed off her flat, toned tummy. To complete the temptress look, she went with very short soft denim cut-offs that didn't quite cover her ass cheeks. She'd never worn either item before, but this was the time for it. For panties, she went with a blinding white high-cut bikini made of thin lace that made her feel super sexy. She tried everything on and looked at herself in the mirror from every possible angle. \"Yeah, the poor guy doesn't stand a chance.\"",
        "She spritzed her neck with Prada Candy perfume and nodded to herself in the mirror as she mussed up her blonde mane. \"Yep. Not a chance.\"\n\nShe walked slowly down the stairs, watching his every move, wanting to enjoy that moment when he turned around and his eyes popped out of their sockets. But that didn't happen because his other, more sexy girlfriend, the TV, hogged his attention. Okay, if that was how it was gonna be, so be it. Bring it on, bitch.\n\nShe sauntered over to where the TV sat on the wall and stood right there beside it with one hand on her hip and the other against the TV. He glanced in her direction, then looked back to the TV, then looked at her again like he couldn't believe what he just saw. Here it comes, she thought.\n\nHe looked back at the TV in disbelief, then scowled to the heavens. Using all force in his lungs, he screamed, \"For fuck sake\" at the top of his voice and flung his controller in her direction. \"I was one fucking head shot away from getting a gold camo. What is fucking wrong with you?\"\n\nShe stood there for a moment in absolute astonishment, looking from him the what was left of his controller on the floor beside her. Was he fucking kidding? She looked away to try to compose herself and took a few deep breaths, but no serenity was coming to her. She stormed out through the kitchen doors, slammed them shut, and marched down the back garden, fuming with every step. What the fuck was wrong with him? She was also embarrassed that she was returning to the gazebo without Jason, something she told Mr B she wouldn't do. She got about halfway to the gazebo and stopped. \"Dammit, forgot the fucking beer.\"\n\nShe couldn't believe she had to go back in there. Yeah, he'd probably apologize, but if he thought he was getting any of this, she thought, gesturing to her body, he had a big surprise awaiting him. You don't throw stuff at her and get away with a milk toast apology. She decided to slide the doors open quietly and get in and out without him being aware, but the fridge door was too loud. She heard his footsteps approaching. She pulled out a six pack and looked over to the doorway to the living room with her chin pointed in defiance as she waited for the groveling.\n\nJason waved a controller in the air. \"And you made me break my fucking controller. Now I have to try and get the gold camo with this piece of shit.\"\n\nAll she could do was stare, her jaw frozen with rage like she was a statue. She stormed out and this time, slammed the sliding door closed even harder. \"Fucking asshole.\" That's what she said about 30 times as she took long angry paces back to the gazebo, trying to think of what she was going to say to Mr B when she got there.\n\nShe led with \"fucking asshole\" and when Mr B smiled, she felt all the rage building up inside her till she couldn't keep it inside anymore. \"What is the fucking matter with you males? We do fucking everything for you and what do we get back. Gold camo bullshit. It doesn't even make fucking sense. Gold is bright and fucking shiny. How can it be a camo? Do any of you know how to treat a girl and not send us running in desperation and frustration?\"\n\nShe took a few deep breaths. Just getting it all out seemed to calm her a bit. Then she looked over to Mr B. What she saw in his face caused a pit in her stomach the size of a softball. In his eyes, she saw Claire walking out the door, and it was all his fault. \"Shit, no,\" she said. \"Not you. I didn't mean you.\" She ran over to him, put the six pack on the table and sat beside him in the swing seat and wrapped her arms around his neck. The emotion flowed out of her in the form of tears. \"You were a prince to her the whole fucking time. I'm sorry. That came out wrong.\"\n\nShe poured her regret into the eyes of Mr B, begging for him to tell her it was okay, that he was fine. He wasn't a crier, he never was, but he was floored, and she knew it, and she knew it was her fault. If she'd said that on any other night, he would have waved it away as the inner turmoil of a teenager basically being a bitch. But this was the night when he told himself she'd be back by now. This was his line in the sand, not in a threatening way, not like if she didn't come back after one year, they were through. Claire could come back anytime as far as he was concerned. She was the love of his life. This line in the sand was the time for him to just accept it: she was probably gone forever. Kaylie knew this, and she knew that even long after her explosive words had faded from memory, he'd still wonder, was it his fault? Was it something he did or didn't do that drove away the only woman he'd ever loved? She wished more than anything that she could go back in time five minutes.\n\nInstead, she twisted off the top of a bottle of beer and put the other five in the cooler with the ice. Before shutting the lid, she took one single cube and slipped it into her mouth, a symbolic attempt to cool off. Then she leaned in and wrapped her arms around his torso and let her head rest on his chest. \"You know how you know you're a good guy? Because you're here. My dad left. Claire left. And your asshole son and the only boy I've ever loved and would do anything for, he's not here when he should be. You know you're a good guy because you always do the right thing even when they don't, and even when that makes it easy for them to take you for granted and stick the knife in.\"\n\nHe kissed her forehead. \"Thanks, Kaylie. The same goes for you.\"\n\nShe looked up at him quizzically. \"Who did you think I was talking about?\" He laughed and she knew they were good. Or they would be soon.\n\nHe reached over to the table and picked up his beer and looked at Kaylie. \"So, I think I get the drift about the gold camo and how he pissed you off and everything, but I still have one question? Did he really see you wearing this and let you walk away?\"\n\nShe laughed and scanned her body. \"I know, right? Do you have any idea how many guys from our school would love to get with this?\"\n\n\"Yeah,\" he said, \"I think I have an idea.\"\n\nShe put her feet up on the swing chair, her knees near her breasts, and leaned back so she could look up into the sky. \"Shit, I forgot my watch. What time is it?\"\n\n\"Getting close to midnight. Almost time to kill the lights.\"\n\nShe stared into the dark sky and let out a sigh. \"I'm so fucking stressed right now.\"\n\nHe looked her up and down, making her feel a little self-conscious, causing her to draw her knees tighter to her breasts. Then he said, \"I think the last ten minutes or so is the most total curse words I've ever heard you utter.\"\n\nShe smiled. He always had a great way of making his point without sounding like he was delivering a lecture. \"Yeah, I was thinking about that today, about us being adults now and how it's probably okay to curse now.\"\n\n\"Adults curse but, you know, not that much and usually to make a point.\"\n\nShe arched an eyebrow. \"And you think I don't have a point to make?\"\n\n\"Now that I think about it, yeah you fucking do.\" They both laughed.\n\n\"Anyway, you know what? This is nice. We've never really had any one-on-one time like this as adults, just sitting together and drinking a beer.\"\n\nA stretch of silence followed, ending with him saying, \"You're not getting a beer.\"\n\nShe made a dramatic pout before launching into her debate. \"Well, A, I never asked for one. B, stop reading my mind. And C, half a beer?\"\n\n\"No.\"\n\n\"It's insane. I'm stressed. Alcohol is known to calm people down. There's alcohol in thousands of medicines.\"\n\n\"Thousands?\"\n\nShe repressed a smile and powered on. \"Let's not get caught up in the numbers, just focus on the principle. Would you rather I have my first beer in some dark field somewhere or under the supervision of a responsible adult?\"\n\nHe arched an eyebrow at the \"first beer\" comment. \"I could get in trouble, you know.\"\n\n\"Oh, please! Are the alcohol patrol forces in some kind of stealth offshore dinghy waiting to pounce? Anyway, wouldn't you like a night off from being that guy who always does the responsible thing? Not as a way of life or anything, just one night. I know I'm sick of always being the good girl with the good grades and polite words, the one who always makes sure everything is done the proper way. Tonight, I'm going to be a bad bitch. Watch out, world.\"\n\nHe looked down into Kaylie's eyes and at her outfit. \"You definitely wore the right clothes.\"\n\nShe smiled. \"One sip, okay?\"\n\nHe was breaking, she could see it. She reached up for his bottle, but he pulled it away. \"Not so fast. I was your age once and I know all the tricks.\" He offered the bottle opening to her mouth and she accepted the pathetically small mouthful of beer he allowed her. It was a nice moment though, him doling out what he surely assumed was her first mouthful ever.\n\n\"So, what do you think?\" he asked.\n\nShe pushed out her bottom lip and nodded. \"It's actually pretty nice.\"\n\nHe held up the bottle and read the label. \"Steinlager. I discovered it while on a shoot in New Zealand when I was in my twenties.\"\n\n\"What were you like back then? Were you always the sober responsible adult we see before us?\"\n\nHe looked away, but not before Kaylie got a read off his face and started laughing. \"Oh, this is good. Now don't try to weasel out of this with diplomatic-speak. Come on, let's hear the good the stuff for once.\"\n\nHe laughed. \"Not without my lawyer.\"\n\n\"Come on,\" she said. \"No judgment. I promise. We have a couple of hours to kill. Does Jason know about any of it?\"\n\nHe shook his head matter-of-factly. \"No. You wouldn't want him to be like I was.\"\n\n\"Okay, so we need a new understanding because I mean, secrets can be bad, but they can be good too. Secrets build bonds. So, if he were ever to learn about this stuff, and he finds out I knew, I'll just say I sometimes can't tell him stuff that you told me in confidence... during a meteor shower... as you fed me beer.\" She put on her sweet puppydog, give-me-what-I-want smile.\n\nHe chuckled as he shook his head and held the bottle to her lips. \"So, no judgment and no telling. Agreed?\"\n\n\"Okay, now you're getting into it. Isn't it good to tell someone these things?\"\n\n\"Maybe. I'm taking a leap of faith here.\"\n\n\"So,\" she said. \"You were once a bad boy. What happened to him?\"\n\n\"You know what happened,\" he said.\n\n\"He met Claire, had a kid, and decided to be a proper grownup. So, now I can place the growing up part of your life at about 25.\"\n\n\"Yep. Twenty-five. Are you sure you want to hear this?\"\n\n\"Oh, I am dripping with anticipation. Don't hold back. I'm a big girl now.\"\n\n\"I'm just not sure where to start.\"\n\n\"Well, did you ever tell a girl she could be a model just so you could get her into bed?\"\n\n\"Yes.\"\n\n\"Was it worth it?\"\n\n\"Yes.\"\n\n\"I like this game. It's like truth or dare except only with truths and it's always your turn.\"\n\n\"Wait. I don't get to ask you questions?\"\n\n\"There's no point. I'm a good girl. Boring.\"\n\n\"I'll make a deal with you. For every ten questions you ask, I get to ask one.\"\n\n\"I have a better idea. Every time I get a sip of beer, you can ask one. That should make things interesting.\"\n\nHe laughed at her sneakiness, but didn't disagree. \"What's your next question?\"\n\n\"Okay, on the bad boy scale what's the highest you reached out of ten?\"\n\nHe didn't even stop to consider. \"Ten,\" he said.\n\n\"And you didn't know where to start?\" She laughed. \"Start there. What happened?\"\n\n\"Well, I had this friend, who was not actually a friend at all, but he asked if I would do a photoshoot free of charge, the friend rate. I told him I couldn't for legal reasons, but said I'd give him half price. At that point, I was charging $75 an hour, so I charged him $40.\"\n\n\"Wait, were you gay?\"\n\n\"No, no, no. He wasn't the subject. His girlfriend wanted some photos done supposedly to try her hand at modelling. The real reason was to give him an album of her pictures for Christmas, but he didn't know that.\"\n\n\"Ahh, so they were sexy pics.\"\n\n\"Of course, but fully clothed: bikinis and short skirts, that kind of thing. Clean but provocative. Suggestive.\"\n\n\"Go on.\"\n\n\"So, I was taking these photos and she started talking to me. Well, flirting with me. She was a bad girl, I knew it from the start, but I was playing it professional, giving her curt answers and focusing on the work.\"\n\n\"How did you know she was a bad girl?\"\n\n\"You just know.\"\n\n\"Oh, give me a break. Come on, don't cop out on me. Gimme some details.\"\n\n\"The way they look at you. You've seen guys look at you, haven't you?\"\n\n\"All of them! Does that mean they're bad?\"\n\n\"All guys are bad. There's your first lesson as an adult. They'll all want to fuck you. And because you have a boyfriend, that changes nothing. In fact, fucking you when you have a boyfriend makes it ten times better.\"\n\n\"Wow. I can understand how the human race has lasted so long now. Okay, she eyed you up and down. Girls do that. It doesn't mean they're bad.\"\n\n\"Sure. It's not just the looking. That's just the start.\"\n\nKaylie flashed a smile. \"I think I'm thirsty.\" She leaned in close to him, feeling less self-conscious of her revealing outfit with each sip of beer. He held the bottle to her lips for a good length of time this go around. Some even dribbled down her chin, which she caught with her thumb and sucked.\n\nIt meant it was his turn for a question. \"Have you ever dressed so that a guy other than Jason would look at you?\"\n\n\"Of course! I'm a girl.\"\n\n\"But I mean a specific guy.\"\n\n\"Oh.\" Kaylie could feel herself blushing and straightened her back in protest. \"But, it wasn't that I was trying to make something happen. There was this girl named Marie at school who acted like she was so fucking hot. It was annoying. I just wanted her to see her boyfriend drooling over me.\"\n\n\"And did he?\"\n\n\"Like a Basset Hound.\" They both laughed.\n\n\"Okay, so you're taking her pictures and acting uber professional, and then what?\"\n\n\"Then she sort of asked me how these contracts work. We talked around the subject a bit, and I eventually asked her what was her specific interest? She asked me, what if she wanted photos that he didn't pay for and she couldn't afford to pay for. She eventually got around to telling me she wanted some really sexy pictures but for herself, and asked could I do half and half, but not tell him what I'd done.\"\n\nKaylie rolled her eyes. \"Yep, she's bad. Run, good guy, she's gonna turn you bad. Get out of there now.\"\n\nHe laughed. \"She was way late on that score.\"\n\n\"Oooooh,\" she said. \"Sidebar, sidebar. What was your first time at let's say, above seven out of ten?\"\n\n\"Ummm, not very exciting, but having sex with a friend's mom when I was...let's say 18.\"\n\n\"Oh, we may have to circle back to that one, but briefly, did you seduce her?\"\n\n\"No, the other way around pretty much.\"\n\n\"So, what was her interest in you?\"\n\nHe let out a sigh and checked the sky for asteroids. \"This was a really stupid idea,\" he said.\n\nKaylie slapped the side of his arm. \"No quitting just when it gets fun.\"\n\nHe took a few breaths before answering. \"I had a reputation,\" he said. \"Without going into details, my nickname in some circles was, Horse.\"\n\n\"Okay, that doesn't surprise me,\" she said, looking back to the house where her boyfriend was. \"It's true what they say: the apple doesn't fall far from the tree. So, what did you decide about the slutty nudie shots?\"\n\n\"It was convoluted, but I told her technically, I had to give him what he paid for and if I divvied it up, I'd have to tell him about the naked ones because he was the client.\"\n\n\"Wow, how principled of you.\"\n\n\"Yes, but I also wanted her to work for it. I wasn't going to make it easy.\"\n\n\"But you wanted it, too?\"\n\n\"Have you ever heard of putting horns on a guy?\"\n\nKaylie scrunched her forehead. \"No.\"\n\n\"It basically means you make his girl want to fuck you when she could way more easily just fuck her boyfriend. She can never take back that she fucked you instead of her boyfriend because she specifically wanted you, and it involves getting her to admit that, and even say she'll fuck you anytime you want because you're an absolute stud, even though she's going to stay with her boyfriend. From that point on, anytime you see him, you can smile because you know there are horns there even if he doesn't.\"\n\n\"Fuck me,\" Kaylie said, her mouth wide open. \"You were hard core bad guy.\"\n\n\"When you're full of raging hormones, you want to have that feeling of being sexy even when you can't have sex. And my hormones were raging out of control. Plus it gives you an air of superiority over the guy.\"\n\n\"So, you said you couldn't do this deal with her.\"\n\n\"Yes, but I told her he paid me quite a good rate, so I didn't mind doing a few extra for her for one dollar. And that made her the client for those pictures, so I didn't have to tell him.\"\n\nThis was getting good. Kaylie was loving the benefits of being an adult. \"Don't stop!\"\n\n\"So, we were getting to the end of the original shoot, and she was in her bikini, and I was transitioning into the second part. I played my expert-photographer card, where you act like, yeah, this next part is normal, we do this all the time in the business. I told her not to move, she was perfect like that, but I needed to adjust her bikini to get rid of a line. And she said to do what I had to do, but in her tone and the grin she wore, I heard, oh fuck, yes, touch me anywhere, anytime.\"\n\nKaylie stole a sip from his beer and said, \"I'll owe you. Keep going.\"\n\n\"I slid my finger right along the edge of her vagina-\"\n\nKaylie blurted out, \"You mean her pussy.\"\n\n\"I slid my finger right along the edge of her pussy to smooth the line and then I did the other side.\"\n\n\"Was she wet?\"\n\nShe was so fucking wet, which isn't unusual in a photoshoot. It's a very sexually charged event by its nature. But what is unusual is when they moan and don't even move except to spread their legs.\"\n\n\"And that was it? She fell before your feet?\"\n\n\"God no, I made her work for that. When I had her top off, I convinced her that to get her nipples just the right amount of perky and glistening, she couldn't just pinch them herself; It's like how you can't tickle yourself. I'd have to suck them. And she just said, mmhmm in the sexiest way possible. I also suggested that to make her more comfortable being naked, I'd take off my pants. Of course, then she saw I had way more than her boyfriend. And the way she stared at my cock with her mouth hanging open confirmed it. Wayyyyyy more.\"\n\n\"And that was it?\"\n\n\"No. She was waiting for me to make the first move, and that was never going to happen.\"\n\nKaylie kept sipping the beer she'd taken from him to cure her dry mouth. \"What was her breaking point?\"\n\n\"When she asked me what her boyfriend would say if he knew I was touching her in places that are supposed to be his alone, and I said, 'Well, your boyfriend sent you here. Maybe he likes this kind of thing. Some guys get turned on by their girlfriend getting raked by a guy who's much bigger than him.' At that point, she got up, turned to me, slid her fingers along my cock, and said, yeah, maybe he does.\"\n\n\"She just took over?\"\n\n\"It was time. She wanted one more picture, she said. She wanted a picture of her blowing the biggest cock she'd ever seen for her private viewing. I sat down in an armchair, opened my legs, and told her she was going to be doing a lot more than blowing me.\"\n\n\"Holy fuck! I'm so amazed I never met this guy before tonight. How do you keep him hidden? Did you get her to say all those things about you being a better fuck and how she'd be your slut whenever you wanted?\"\n\nHe had a smile on his face that Kaylie had never seen before. \"Yeah, the whole checklist.\"\n\n\"Did you ever fuck her again?\"\n\n\"A couple of times when he was particularly annoying. One time at a party they went to together. She and I went out back for a smoke and found a dark, quiet corner. I asked her did she think her boyfriend was walking around the house looking for her, and she said probably. I said I thought she should go back and kiss him, give him an idea of what my cock tastes like. She just smirked and got down on her knees.\"",
        "Kaylie was breathless. She drained the beer bottle and said, \"I owe you a couple.\"\n\n\"Okay, have you ever fantasized about fucking someone who it would be wholly inappropriate to fuck?\"\n\nKaylie exhaled loudly. \"That's pretty much the only thing I fantasize about. Go again.\"\n\n\"Have you masturbated while fantasizing about it?\"\n\nShe couldn't believe he asked her that, but fair was fair. \"Yes,\" she said.\n\n\"I'm going to save my other ones for later. Let's kill the lights and check the sky.\"\n\nUnder the cover of dark, Kaylie could admit to herself that she was feeling flushed. It was weird that a younger version of her almost-dad was going to be worming his way into her future fantasies. Jason was good at sex, but not as good as her mind and her fingers. She loved getting into that mindset when she was alone, and had plenty of fantasy partners. She just never expected Mr B to be one of them.\n\nThey took turns looking through the cameras and the telescopes. As she bent over, she could feel her shorts inching their way up over her ass cheeks, but instead of being embarrassed about that, she imagined a young Mr B photographing her from behind and telling her he had to adjust the tight jeans on her perfect ass, and she imagined letting out a light moan, encouraging him to touch her in all the wrong places as he asked what would her boyfriend think if he saw this. Each time she bent over to look in a different telescope, she put her feet together, leaned her hands on her knees, and allowed her ass to sway from side to side. The only thing missing to complete the image was some 6-inch fuck-me heels.\n\nShe felt hot, and so she pinched the front of her top, pulling it out and fanning herself to cool down. She could feel her nipples engorged against material and wondered had they been like that as she listened to Mr B's story. At least the lights were off now. Without even thinking, she then undid buttons three and four so it wouldn't be so tight, leaving just three of the seven buttons fastened.\n\n\"Want to see Venus?\"\n\n\"Sure,\" she said and went over to look through the telescope. This one was slightly lower on the table and she placed both palms onto it and spread her feet wider, staring at Venus for a good minute or so. \"Are you going to take a picture?\" As soon as the words left her lips, she was aware of how they could be taken. She'd meant a picture of Venus, but the pause after she said the words made her wonder if he was admiring her ass.\n\n\"Nah, I have better shots than that already. It's pretty cool though, eh? That thing is just floating up there and moving in a predictable pattern.\"\n\n\"It is pretty cool.\"\n\n\"No sign of the asteroids, but if we keep the lights off, we should spot them.\"\n\n\"Good idea,\" Kaylie said, finally standing up. It would also mean Jason would need a torch if he decided to walk down to the gazebo, not to mention stopping her overexcitable nipples from giving off the wrong idea.\n\nThey returned to the swing chair and stared at the sky for a few minutes. She had so many weird and wrong images flashing through her mind. Was it just her teenage hormones running amok, or were the same images running around his wiser, more seasoned 44-year-old mind too? Was he going to have a wholly inappropriate masturbation session while imagining his son's hot girlfriend's near naked body bent over the telescope?\n\n\"I wonder if Jason is still up.\" She swiveled to her left to look up to the house and leaned on his thigh with her right hand to keep her balance. She squinted as if she were trying hard to make out if the living room light was off, leaving her hand pressed on his thigh. She wondered was there enough light for him to see down her shirt as she leaned closer to him while looking back up the garden. She then bent over a bit more to get a different angle of the house.\n\nThen, with just the fingertip of her middle finger, she felt something move and recognized the sensation right away. His cock was hard. She stayed in that position, looking up at him, and said, \"I think it's going to be just us for the rest of the night. How long are you staying up?\"\n\n\"Till I get everything I want,\" he replied. \"You?\"\n\nThose words caused her to swallow and almost made her ask him what he wanted, but she lost her nerve. \"Well, I'm an insomniac, so I'm up late most nights. I go for walks sometimes.\"\n\n\"I know. I should have asked you about that.\"\n\n\"You knew? I thought I was always so quiet.\" She was still looking up to him, her chin tilted up. If this had been any other guy, her hand on his thigh, fingertips still lightly touching his hard cock, her firm tits practically begging for attention, the scent of Prado Candy wafting up to him, any other guy would kiss her right then. She could make out his tortured face, which meant he could make out her tits. Calm down, she told herself. Save your fantasies for your alone time.\n\n\"I'm a photographer,\" he said. \"Sometimes I'm up at night and I've seen you walking along the beach.\"\n\nShe stared into his eyes. They were so dark, so brown. In the near total darkness, they seemed to just suck her into them. She wondered if he ever took any pictures of her at night. The quality would suck, but still. She tried to swallow at the thought of it, but her mouth was dry. Turning to face forward, she wondered whose turn it was. She'd lost track.\n\nHe didn't speak for a while, but she could feel his eyes still on her. \"Did you know your eyes get brighter and bluer when you're excited?\" he asked.\n\nShe knew that. How did he know? Was he reading her eyes the whole time as he told his story about his bad boy years? \"You said you can always tell who the bad girls are.\"\n\n\"Mmhmm. Usually.\"\n\nShe took a few deep breaths debating whether to ask the next question, but decided their conversation had been so honest all night and they hadn't crossed any lines, and he knew her as well as anyone, so she asked. \"Do you think I'm a bad girl?\"\n\nHe thought for a moment. \"Stories are always going to turn you on. That doesn't make you bad.\"\n\n\"Okay,\" she said, blushing at the notion that he knew she was turned on. \"Thanks.\" She found herself hoping for a different answer, but the game was called Truth, after all.\n\n\"But when you were bent over that telescope looking at Venus, staying down there so long... depending on what was going through your mind...\" He said it in a quirky way, like he was mocking her for practically begging him to stare at her ass.\n\nShe was a bit taken aback, not wanting to confirm or deny anything, but wondered was that what happened with all his conquests? He told them a story and they imagined themselves as his subject? \"Maybe I like Venus,\" she said in a low voice but with a touch of defiance.\n\n\"Maybe you do,\" he responded. Then he pointed the flashlight back toward the telescope, daring her to go take a further look.\n\n\"I do. And I'm going to look again,\" she said defiantly. She stood up and started to walk in the direction of the telescope, pretty sure that he wasn't buying her lame attempt to double-down (nobody likes Venus that much), but up for the dare. She walked into the beam of light pointing her way in the darkness toward the Venus telescope. She bent even lower, spread her legs even wider, and stayed down even longer this time, knowing exactly where the flashlight was pointed and getting into the spirit of her role in this back and forth between them where she played the temptress and him the brooding male conqueror. It was fun and it was very sexy.\n\nIn truth, she always thought it must be hard for dads, stepdads, uncles, and other kinds of surrogate dads. Society tells us we mustn't lust after certain people, but she knew her glutes were magnificent by any standards. How can a living breathing normal man with normal vision not stare at her ass when she bends over in these tight cutoffs that come nowhere close to covering it? That would be abnormal! Enjoy it, big guy. Get a good look.\n\nShe'd had enough of Venus though. She stood up and arched her back, stretching her hands to the sky, then lowering them over her front, taking time to check her nipples before turning around. She hoped they'd gone down a bit but they were still hard and swollen. Fuck it, though. She turned around with her back still arched and let the flashlight's beam drink up her bright white shirt. She knew he could see her nipples. She specifically chose the thin white top for that purpose, albeit with Jason in mind. Was this the first time her surrogate dad was staring at her tits, getting a good look from behind the flashlight, knowing she couldn't see his eyes?\n\nShe faked a shiver before walking back. \"Ooh, it got chilly.\" She sat in the swing seat and leaned against him to warm up just like she'd done a thousand times before in the ten years since they'd met. He wrapped his arm around her like he'd always done. \"Whose turn is it?\" she asked.\n\n\"Go for it.\"\n\nAnd go for it, she did. First, she again turned around to look up at the house, placing her palm on his thigh, but this time she made sure to grab a position where her fingers rested on his cock. \"Oh!\" she said, feigning surprise. She left her fingers there and asked, \"Is this the first time you've ever been hard for me?\" She waited for him to laugh or act totally shocked or run away. \"I mean, it's just biology, there's nothing wrong with it.\"\n\nHe just looked flatly into her eyes. \"I know.\"\n\nShe took in a sharp breath and glanced down at it, but it was too dark to make anything out. The truth was, what his cock was like compared to Jason's hadn't really left her mind since he'd said the word, horse. \"I'm really curious about it?\"\n\nHe snorted. \"You want to know how it compares?\"\n\n\"I always assumed you were bigger for some reason.\"\n\n\"I know I'm bigger.\"\n\n\"How? Have you seen his, recently?\"\n\n\"No,\" he said right beside her ear, causing her to shiver. \"But it's a lot bigger.\"\n\nShe reflexively sucked in her breath. She thought he might follow his comment with a snort, playing it off as a joke, but he was deadly serious. Now, she really wanted to see it. She just didn't want to sound weird about it. \"Can I have a sip of your beer?\"\n\n\"I thought you were just taking it now.\"\n\n\"I like it when you feed me. It makes me feel like a little girl.\"\n\n\"Then ask me nicely,\" he said in a challenging tone.\n\nYou wanna play that game, buddy? I can play it. She looked up to him with a full pout and said, \"Can I please have a sip of your beer, daddy?\"\n\nThis brought a rumble from his throat, eliciting a giggle from her. \"You are definitely a bad girl.\"\n\nHe poured a small amount of beer into her newly discovered sweet dirty mouth, using his thumb to catch the dribble on her chin and feeding it back to her mouth, which she lapped at with her tongue. \"Thanks,\" she said. \"It's your turn.\"\n\n\"Do you remember about a week ago, walking along the beach and you decided to go for a swim naked?\"\n\nShe cringed. \"You saw me!\"\n\nHe nodded. \"I thought you knew. I thought you saw me.\"\n\nShe pictured him watching her late-night swims through his telephoto lens, moonlight bouncing off wet skin, the silhouette of ass and tits, him getting hard without her knowing and adjusting his \"horse\" cock so he could go back to staring at her through the camera. She was becoming obsessed with his grown-man sized cock. She ran her fingers along the length of it. \"I just need to see it. Just see it. Up close. Is that too weird?\"\n\nHe nudged her off the swing seat to the floor of the gazebo and opened his legs. She willingly knelt between them and felt for his cock. At first it didn't register; something didn't feel right, but it soon dawned on her: yes, that's his cock. \"Holy fuck!\" She slid the zipper down and eased it out with two hands. It was fully erect and it was hard! It wasn't at all a case of the apple not falling far from the tree. This was the whole fucking tree trunk! She had her two hands wrapped around it like it was a baseball bat, and still some showed at the top. She looked at her fingers, unable to get all the way around it. Not that her hands were especially big, but this thing made them look tiny.\n\nFor several minutes, she stared, overwhelmed by the sheer size and power of it. Then she licked around the crown, which was impressively bulbous. She knew she was crossing a line but the budding photographer in her yearned to see what it looked like when she gave it a shine with her saliva. She continued to paint it with her tongue from bottom to top and allowed herself to lift up the plums that were his balls, weighing them with her fingertips. God, they could power a geyser of semen for any woman lucky enough to have this inside her.\n\nEven if the two of them fucking wasn't completely out of the question -- which it was, she admonished herself -- she couldn't convince herself that she'd even be able to take it all. Maybe in her pussy. Maybe. In her mouth? Never. Jason had a really nice cock and she could go all the way down on it. This was a monster, and it was also impossibly hard. Even in pornos she'd never seen one so hard, which her ego told her was a compliment. It might just break her in two though. She was starting to regret the fight with Jason. No way could she give in to him now, but God did she ever need a good fucking. Her pussy was on fire. Masturbation was not going to be enough that night.\n\nAs she licked the head again, her final goodbye to this beast before putting it away, she couldn't help but wonder what her pussy would feel like adjusting to its size. Then she tasted pre-cum on the head and smiled, feeling a certain pride in herself for being able to get him to this state of arousal. \"It's been a year for you, hasn't it?\" she said.\n\n\"Yes,\" he said, his moans telling her she should carry on.\n\nShe continued licking the head, tasting more pre-cum as she looked into his eyes to enjoy the pleasure she was causing him. \"Can you hold my hair out of the way?\"\n\nUsing both hands, he gathered the hair falling in front of her face, then did the same for the hair at the back till he was holding it all firmly in one fist.\n\nKaylie let out a small moan as she continued bathing the head of his cock with her young tongue and her suddenly eager mouth. \"Tighter,\" she said and let out another moan when he squeezed his fist around her hair.\n\n\"Tighter!\"\n\nThis time, he squeezed tighter and forced her head lower, down to where his big balls hung. She got the message and sucked on them. She knew they were crossing a line, but he really seemed to need this, and if sucking his balls took him mind off Claire for a few minutes, it was the least she could do after all he'd done for her.\n\nPlus, she couldn't deny that it was turning her on that he was absolutely loving every moment of this. She was starting to understand the meanings behind the various rumbling noises that came from him, from that side of him she'd only just met that evening.\n\n\"Do you like that?\" he asked. \"Do you like being on your knees in front of me sucking my balls?\"\n\nAnd what could she say? He didn't exactly force her down there. He didn't make her take his cock out. He didn't make her lick the pre-cum off his head. She guessed he could tell the difference between a pity suck and a girl who was loving every second if it. The manner in which he was talking to her, the arrogance, the smugness, she'd never heard anything like this before. Not from him, not from anyone. And you can be sure she never envisioned Jason or any other guy forcing her mouth down to their balls. She could deny the fact that it was turning her on, but the fact that her pussy was drenched would have disproven that lie with one touch. She looked up at him with a crazy satisfied grin and said, \"I've never been so wet in my life.\"\n\nShe felt herself really getting into the fun of this banter. \"How about you?\" she asked. \"Do you enjoy having your son's girlfriend sucking your cock and licking your humongous balls?\" She could only imagine the power of symbolically showing the younger stud in the family, this is how you make her lick your balls.\n\n\"You know,\" he said, as he looked down upon her in a way she'd never seen before, \"you could so easily stand up, go up to his room and fuck him.\" He said it with such an air of superiority, almost as a challenge for her to stop when he was 100% convinced she wouldn't because she couldn't.\n\nWithout breaking eye contact, she licked a line along his cock from balls to head and engulfed it into her mouth, forcing herself to push as far down as she could, and she still couldn't reach the part where her fist was wrapped around it. She then moved slowly back up as she zigzagged her tongue along the underside of his impossibly hard cock. She repeated this a few times, then looked up at him. \"Is that what a good girl would do?\"\n\nHe pulled her up and leaned her into him, staring into her with his dark eyes as if trying to learn all her secrets in one moment. Their faces were practically touching and she could feel his breath on her mouth. It caused her heart to pound in her chest.\n\n\"I like how you taste,\" she said. \"Have you ever tasted it?\n\nHe shook his head. \"Not in a while.\"\n\n\"Taste it.\"\n\nHe maintained his gaze and licked slowly along her bottom lip, then the same along her top lip. She reached out to him with her tongue and he rolled his over and under the tip of it. He seemed to enjoy it, so she stroked his cock and scooped some more pre-cum from the head, then spread it over his lips and licked it off like he'd just done to her. Without either of them intending it, they were suddenly kissing and damn, was he a good kisser. At first, he teased the tip of her tongue then withdrew his own back into his mouth, causing Kaylie to follow it eagerly. He then claimed her mouth for himself, their lips locked and his tongue plunging and probing her mouth much like you'd expect from a guy who knew what he was doing and who hadn't tasted a female mouth for a year. As much as her mouth was hungry for air, she couldn't break the kiss and found herself moaning into his masculine kiss.\n\nAfter a few minutes, they each pulled back, panting heavily. \"I'm hot,\" he said and pulled his shirt over his head, revealing his pecs. She'd seen them before, no big deal. And it was getting hot. She could feel the perspiration starting to attach itself to her own top.\n\nShe reached to the buttons and looked at him. \"You've already seen these naked, right?\"\n\nHe nodded. \"From pretty far away.\"\n\nShe started to undo the buttons. \"So, is this okay? I don't want to get sweat stains on it. It's brand new.\"\n\nHe nodded and helped her take it off like a gentleman, allowing him a full view of her tits. She wasn't going to pretend to herself that the way he looked at them didn't give her goosebumps. Her stiff plump nipples were swollen like strawberries and in the darkness, her areolas looked beautifully dark. He licked them, giving them the same shiny gloss she'd given his cock. She reflexively swiveled her chest one way, then the other to give easier access. Almost as good as the feeling of his tongue was the look of pure desire in his eyes.\n\n\"I guess it's been a long time since you've seen a pair of tits,\" she chuckled.\n\nFor a minute or so, he ran his fingers over them tenderly like he was reading Braille. Then he lifted them to feel their weight. \"I've never seen a pair like this in my life,\" he said.\n\nHis words made her swoon, and when he started licking them, sucking them, biting them, yes, it was another line they were crossing, but how could she stop him sucking on the best pair of tits he'd ever seen in his life? To make it easier, she climbed on the chair with her knees and leaned into his kisses and sucking. This allowed her to better hear the noises he made as he sucked them in then and let them pop. She had to admit, he was so delightfully patient, so sensual with the way he licked and sucked and kissed them, and God, was it heavenly.",
        "Meanwhile, a by-product of her kneeling in the swing seat was that her ass seemed to be perfectly positioned where his hands fell and so he caressed the perfect round ass that she'd teased him with earlier. She conceded to herself that she'd asked for this with all her teasing, but at least she still had her shorts on. It wasn't like he was pawing her bare ass.\n\nShe kept telling herself that he needed this, but they wouldn't cross any real lines, always able to turn back and say they hadn't done anything truly wrong. Like, sure she revealed her tits to him, but he'd already seen them last week on the beach, and she couldn't even be sure that she didn't take her clothes off that night in the unconscious hope that he was out taking pictures. And yes, sucking them was different than seeing them, but she'd sucked his cock. The was way down on the Richter scale of inappropriateness.\n\nWhen he tried to force his fingers inside her shorts, though, she started to wonder was it time to call a halt to this before things swerved out of control. She took the fingers that were trying to worm their way inside her shorts and kissed the tips, smiling with each kiss. Then she sucked each one. Her idea was to sweetly tell him they'd gone too far, but as he started finger-fucking her mouth, she felt a new wave of wetness in her own pussy and it occurred to her that he was just trying to find out how wet he'd made her. She wanted him to know that too, especially since she told him she'd never been so wet in her life. In his current fragile emotional state, how could it be a bad thing to let him know how much he turned a hot teenage girl on.\n\nShe wasn't sure if she led his fingers or if he just couldn't help himself, but they somehow ended up at the button of her shorts. \"In those nights when you watched me, did you ever get to see my pussy?\"\n\nHe nodded his head and undid the button and lowered the zip. Him pulling them open felt like a mini-release for her and she wiggled her butt to help him as he jerked her shorts and panties down to mid-thigh level, then she took a step back so she was no longer kneeling, but standing in front of him, her shorts and thin lace panties shimmying into a heap at her ankles. She was sure she looked quite the sight. His eyes had a ferocious hunger as he looked her up and down, seeing the thin landing strip of her pussy up close for the first time. He did a twirl with his finger to tell her to spin around and she grinned at the effect she was having on the senior male in the family. Maybe because Jason had never had to work for it, just had it given to him, she had never seen this dark avaricious look before.\n\nShe turned away from him and bent over with her hands on her knees as if looking for Venus again, but her ass was much closer this time and way more naked. His hands explored the roundness of it, a feature she'd always liked almost as much as her tits. He ordered her to turn back and face him, which she did, and for good measure, she stepped onto the swing chair, standing on it so her pussy was level with her eyes. \"Can you see how wet you made me.\"\n\nHe smiled and leaned in closer and licked her up and down both sides of her landing strip as his hands held her by the ass to aid her balance. This was definitely a man who'd learned through the years how to use his tongue, navigating slowly over her tender spots, but veering away from her most sensitive areas just when she thought she was going to experience some erogenous relief, bringing a mix of moans and whimpers from her 18-year-old mouth. She swayed and swiveled her hips in an attempt to guide him where she wanted him to go, but he made it clear he was in control. And honestly, that made the whole experience more erotic for her.\n\nShe again wondered, was this way over the line, and reasoned that it surely was, and it was time to stop it. Not that she wouldn't have loved what this mouth and tongue would do to her pussy. Jason wasn't the best at eating her out and she could already feel his dad was an artist. To thwart him without rejecting him, she lowered herself till she was kneeling on the swing seat, straddling his thighs, offering her tits to this mouth instead.\n\nAs a consequence now, though, while he delightfully teased her swollen nipples with light kisses and licks, the head of his cock angled precisely against her very swollen clit, using his hands on her ass to guide her clit along the length of his cock, which in a way was worse than eating her out, but the combination of sensations shooting through her nipples and her clit made it very hard to weigh up the rights and wrongs, and some part of her reminded her of her oath to stop being the perfect good girl for one goddam night. So she eased over his crown and down his length with her pussy lips and just enjoyed the moment. It was just touching, after all, not fucking. She wasn't even sure if he was teasing her or she was teasing him, but again, her senses were too overloaded to even think about it except she knew one thing: as pleasurable as this was, it was eventually going to frustrate her to the point that she would end up begging Jason to wake up and fuck her just for the sexual relief.\n\nShe was amazed and impressed with how this rock hard cock between her legs seemed to have such control, always finding its way back to her clit no matter that he was distracted by her nipples. His hands on her ass were forcing her closer, creating greater pressure on her clit and more satisfying friction, but then he attempted to push the crown between her lips, which would have caused penetration. \"I don't think we should,\" she said tenderly. \"Honestly, I'd love to feel you cock in me even one time, but...\"\n\n\"I just don't want you to be disappointed,\" he said. \"You might never have a chance like this again, and whenever you see me, you'll always wonder what it feels like to have a really big, really thick, really hard cock inside you.\"\n\nShe kissed him because she had to do something; just him saying those words turned the whole sexual tension up a notch and she could feel a need in her pussy. \"Just slowly, okay? Because we don't have a condom and I don't think you should cum in me.\"\n\nHe nodded. \"Okay.\"\n\nShe found herself nodding. At least he wouldn't cum; that was something. And she did wonder how it would feel. Your imagination can only take you so far. She wasn't exactly what you'd call a size queen and imagined it would be very uncomfortable, something you'd do for the experience rather than the pleasure.\n\nAt the same time, she'd never seen this more assertive version of her boyfriend's dad. Honestly, Jason walked all over him most of the time. It was nice seeing him like this, asking for what he wanted, insisting on it, and she imagined she had something to do with it. It's gotta boost a middle-aged man's confidence when a hot 18-year-old acts like she wants him so bad.\n\nAll that to say, she implicitly agreed and widened her knees to make room in her young tight pussy for his thick, long hard cock. He was a gentleman and allowed her to dictate the pace while he continued to do God's work on her nipples, giving her tiny little orgasms in each breast. She couldn't believe this was the out-of-practice version of the man.\n\nHis hands were still behind her, squeezing her ass. She couldn't believe he could hold his cock bolt upright and manipulate it without using his hands. She lowered herself onto him, first just taking the head inside her, moving up, then back down several times, her pussy opening wider and wider, then going down another inch, enjoying the breathless pants coming from him as much as how the massive organ was filling her like she'd never been filled before. With each inch, she felt herself opening more and more, able to take a little more with each downward stroke until he was inside her about as much as Jason when bottomed out, but of course the Mr B was much thicker. Her mouth formed a perfect O as she felt completely filled, and she couldn't believe the whimpers coming from her. For a moment, she couldn't move: not up, and not down.\n\nMaybe something about her reactions gave her away because Mr B used his hands on her ass to lift her almost all the way out, then he slowly lowered her back down to where she had been. Her smile and moans must have told him that she was adjusting to him, and starting to really feel the utter wanton pleasure a big cock can give. But then he pulled her up, and suddenly, instead of penetrating her, he was sliding her clit over the underside of his cock, moving the entire length of it lightly over her clit and making her fucking crazy with each inch of his cock. She clamped her mouth onto his shoulder, licked the delicious sweat off it, and screamed into it as she got closer and closer to orgasm. So close, so fucking close, building and building to what felt like the orgasm of her life. She tried to increase the pressure on her clit by easing her hips closer, but he held her firm, allowing just enough friction to tease her clit but not to orgasm.\n\nShe looked furiously and helplessly into his eyes and saw pure swagger. \"What the fuck are you --? how the fuck --?\"\n\n\"You're not ready yet.\"\n\n\"I'm fucking ready,\" she snapped.\n\n\"I don't think so.\"\n\n\"I fucking am.\"\n\n\"If you were ready, you'd be begging me right now.\"\n\nHe was still stroking her clit with his smooth granite-like cock and she could only stare at him through pained eyes, wanting it so bad. Would it be so wrong to admit that and make him happy? \"I want this so bad, Mr B. I want you to make me cum so fucking bad. I've never wanted anything more in my life.\"\n\nHe smiled. \"I know.\"\n\n\"You bastard,\" she said, but felt him loosen his grip so she could press harder against his rigid shaft, each stroke making the feeling more intense and getting her closer to an orgasm, which she was well aware would be crossing a line, but any woman this close to an orgasm this good would sprint over that line. It occurred to her in a flash that if Jason were to walk down right then and be standing there looking her in the eye, she couldn't stop what she was doing. The wave that was building with each stroke was too powerful and would eclipse any shame she felt. She'd hold up her index finger and tell him breathlessly, \"I'll just be a few minutes. Go and get a gold camo while I finish here, hon.\"\n\nShe increased the pace and the pressure and looked Mr B in the eyes and said, \"I'm gonna cum so hard.\"\n\nHe just smiled and nodded, then reached for one of her hard nipples and squeezed it tight and twisted it, and that did it, the floodgates opened and her screams gave voice to her climax without any regard for who might hear. Then, mid-orgasm, he surprised her, lifting her by her ass and placing her pussy lips on the head of her cock. Without even thinking, she pushed down... all... the... fucking... way. She could feel his balls against her ass and his cock buried in her, reaching places she didn't know existed before that night. She grinded lower, trying to get more of him. Her orgasm was still going and she raised herself up almost all the way and slammed back down, giving new height to her orgasm and new moans, the likes of which she had never heard from her teenage mouth. New words she never imagined saying streamed from her dirty whore mouth. She could feel the tingling sensation throughout her body: her tits, her ass, all the way down her legs to her toes, all the way along her arms down to her fingertips. It travelled up and down, back and forth. Throughout this seemingly endless orgasm, she looked into his eyes and saw only remnants of her boyfriend's dad. She had awakened a sexual giant and he was giving her the fucking of her young life.\n\nAs she came down from the high, she wrapped her arms around his neck, holding on for dear life, almost sleepily, and sighed into his ear. \"So that's what an orgasm really feels like.\" She'd had orgasms before, always pleasurable, but always focused in her clitoris, never one that radiated through her whole body like this. For several minutes, he'd been completely in control of what she felt, what she wanted, and what she'd be willing to do. It almost pained her to admit it, but she couldn't deny it: he owned her during that time. She would have done anything he wanted to keep it going.\n\nHe spent the next 10 minutes or so still inside her and still as hard as ever, while kissing and licking her skin. \"Do you have any idea how perfectly sexy you are?\"\n\n\"I mean, I know I'm hot. I get lots of come-ons.\"\n\n\"Most of the women in the world would kill to have your tits. They're just so fucking perfect. Most of them would kill for your ass. Or your hair. Or your amazing light blue eyes. Most men in the world would kill to have your mouth on their cock; your lips are so fucking sexy. Your legs alone, many women would settle for. Any one of those things, they'd settle for one of them, knowing they could use that one thing to get any guy they wanted. And you have them all.\"\n\n\"You make me feel so sexy, Mr B.\" After a while, she asked, \"When was the first time ever you found me sexy?\"\n\n\"Do you remember the pool lesson?\"\n\n\"That was a while ago!\"\n\nHe nodded but showed no shame. \"Do you remember what you were wearing?\"\n\n\"Probably something that would attract attention.\"\n\n\"I think it was the shortest skirt you ever wore.\"\n\n\"Winning by distraction,\" she laughed.\n\n\"You asked for a lesson. You had a problem lining up the balls and I would correct you, leaning over your shoulder and telling you a bit more left or an inch to the right.\"\n\nShe pulled off him and started stroking his cock now. Impossibly, he was still hard. \"I remember now. I had one really long shot and had to lean over the table and you said the rules were I had to keep one foot touching the floor.\"\n\n\"And you said, 'Help a girl out, would ya?' I had to hold your hips down.\"\n\nKaylie lowered herself to the floor of the gazebo and reached into the cooler to grab an ice cube. She put it in her mouth and then licked the length of his cock. \"And you got hard?\"\n\n\"Holy fuck, that's good,\" he called out. It took him a minute or two before he was able to speak again. \"Remember I had to go make a phone call?\"\n\nAs she remembered that night, she sucked on his frenulum, the underside of the crown of his cock, the very sensitive V area where the crown meats the foreskin. She tongued it and sucked it, causing him to moan. He liked her sucking there. Jason liked it too. She didn't even have the head in her mouth. It was just this one spot that seemed to make guys crazy. \"I had no idea I gave you an erection.\"\n\n\"Because I left the room,\" he said and sounded out of breath.\n\n\"And now you put horns on your son,\" she said.\n\nWhat she was doing seemed to be working as he again sounded like he was having trouble breathing. \"Not exactly,\" he said.\n\n\"I thought...\"\n\n\"There's one more thing you need to do to really own a pussy, to turn it into a whore cunt, and put horns on her guy.\"\n\nShe wasn't sure what he meant, and was a bit distracted. She increased the intensity of her sucking as his breathing became more ragged. Was he getting close?\n\n\"You're not on the pill, are you?\" he panted.\n\nShe shook her head. Even if fucking wouldn't be way over the line, they'd both obviously figured out that they couldn't go back to the house for a condom. But he was close enough, she could tell. Should she take it in her mouth now? She moved to do that, and he said no, pushing her back to that spot.\n\n\"Keep going, Kaylie. That's really fucking good.\"\n\nShe went back to the same spot and sucked and licked it while stroking his cock with two hands. She could feel his thigh muscles tensing and twitching. He was lost in the sensation, mumbling something she couldn't make out, but getting louder, increasingly, and more seething with each suck until she could make out what he was saying. \"You like my big cock now, don't you? Like fucking, like sucking it, can't get enough of it. You wanna see my cock explode with cum all over you and then lick it all clean me off like my personal bitch...\"\n\nShe didn't know who he was talking to, but it was making her wet again. Jason never talked like this. She was now stroking him as well as sucking him. \"You gonna cum for me, daddy?\"\n\n\"I love your dirty fucking mouth.\"\n\nShe felt him swelling in her hands, like his cock was a volcano about to blow \"I love how you make me feel like a slut, daddy. I need your cum.\"\n\n\"You want my cum, whore?\"\n\n\"Yes, daddy!\"\n\n\"Stand up!\"\n\nShe did as he said, a bit startled, but turned on by the low rumbling tone in his voice. She looked into his eyes and saw pure lust. With strong hands, he turned her around till she was facing the other way, then bent her over the table and held her down.\n\nShe got suddenly scared that he'd fuck her and come inside her unprotected pussy. \"Wait, what are you doing?\"\n\n\"One more question from the game of Truth. This is how you looked that night over the pool table. Did you really not know what you were doing?\"\n\nShe started to answer, but he interrupted sharply. \"The game is called Truth.\"\n\n\"Truth,\" she said back to him.\n\n\"Did you want me to fuck you?\"\n\n\"No, I swear.\"\n\n\"One more chance to tell the truth.\"\n\n\"I didn't want you to fuck me but...\"\n\n\"But what?\"\n\n\"I wanted you to want to fuck me. I used to fantasize about you taking me. It was just a fantasy. So I sometimes teased you so I could masturbate later as I imagined you in your room stroking your hard cock to images of my ass.\"\n\nHe grunted. She couldn't figure out if it was good or bad.\n\n\"I'm sorry, I was stupid and selfish. Please don't be mad.\"\n\nHe took his hands off her. \"What should I do with you?\n\nShe stood slightly more upright but stayed bent over. She let one hand stay on the table to stabilize herself and used her other hand to hold an imaginary pool stick. She leaned further and further forward till she was on her tip toes. \"Could ya help a girl out?\"\n\nHe took hold of her hips and she let out a moan. \"Did you want to fuck me, that night?\" she asked.\n\nHe slowly pushed his cock inside her, giving her the whole thing and causing her to gasp. \"Concentrate on your shot.\"\n\n\"Ohh,\" she said, \"That's what you said that night. I remember. Your voice got really low and gravelly.\"\n\n\"Just focus,\" he said as he took long, slow strokes in her pussy.\n\n\"What you said earlier about horns... did you always fill them with your cum?\"\n\n\"Yes,\" he said, picking up the pace.\n\n\"No condom.\"\n\n\"No condom,\" he said with ragged breath as he fucked her faster.\n\n\"But we can't do that, right?\"\n\n\"No,\" he said in a goading tone. \"You're a good girl.\"\n\nHe was really picking up the pace now, managing to pull out nearly all the way, then slamming his hips into her ass and filling her pussy.\n\n\"That's me, all right. A good girl with her boyfriend's dad's big fucking cock sort of kinda fucking her whore cunt though, right?\"\n\nShe could tell by his reaction how much he loved it her newfound dirty mouth.\n\n\"I mean, I can tell you're holding back. Afraid you're gonna break me or something. I thought your nickname was horse.\"\n\nNow he really ploughed into her, drilling her with jackhammer strokes as she braced against the table. \"Are you sure you know what you're doing?\" he grunted.\n\n\"This was what I imagined that night as I masturbated.\"\n\n\"You know I own that whore cunt now,\" he said between pants, finally giving her the power fucking she'd been goading him into. \"No one will ever fuck you as deep as this.\"\n\nShe felt the orgasm approaching again with each stroke, her moans giving her away. It felt even better than the first one. \"Yes, fuck me like the whore I am. Fill my whore cunt with your big hard fucking cock. Fuck your little girl, daddy.\"\n\nAs her moans got louder and she was about to scream out that she was cumming, he pulled out. She swiveled her head to look at him with pleading eyes. \"I'm right there,\" she said in a begging tone.",
        "\"I'm too close,\" he said.\n\nOh. He was gonna cum. So, he pulled out. When her pussy was on fire. She positively sneered at him. \"I thought you were a bad boy tonight.\" She reached between her legs to his cock and stroked it lightly with her index finger, teasing him.\n\n\"You fucking tease,\" he said. She couldn't quite tell if that was a good thing or a bad thing.\n\n\"And what are you gonna do about it, Mr B?\" she said, mocking him. \"Gonna get to bed and make sure you get up early for the golden hour and then make us breakfast like a good responsible dad. Or are you gonna show this whore what happens to teases?\"\n\n\"Stand up,\" he said in a no-fucking-nonsense tone.\n\nShe jumped to attention, and he took one of her hands, then the other, and placed them firmly on the table's edge. \"Do not move them until I say you can, understand?\"\n\n\"Yes, sir.\" She wasn't mocking now. She was actually trembling.\n\n\"Spread your legs. Get a good strong stance.\"\n\nShe spread them out, looking back to him.\n\n\"Look straight ahead and don't turn around.\"\n\nShe stared out into the darkness.\n\nShe heard the slap before she felt the sting vibrating through her ass. \"Oh fuck, that hurt,\" she screeched.\n\n\"Nine more.\"\n\nWith each slap, she felt her ass cheek getting redder and more numb.\n\n\"You asked for that,\" he said after the final one. She started to reach around to rub her ass, but he was on her right away, putting her hand back on the table. \"I told you to leave your hands there, did you not hear?\"\n\nShe gritted her teeth and looked forward as he held her wrists down. Suddenly, his cock was at the entrance to her pussy again, playing with it, giving her an inch, then taking it away. He leaned close to her ear and whispered, \"Did you fantasize this part?\"\n\nShe stayed where she was, looking forward. \"I will the next time.\"\n\nNow his strokes were longer, more purposeful. She was getting the feeling back. \"Don't stop this time,\" she moaned. \"I need to cum so bad.\"\n\nBut he pulled out again, causing her a momentary groan. He went back to sliding the head of his cock over her clit: a different sensation for her that drove her insane in a different way, keeping her on edge, but without the full feeling of his monster cock. She'd gone from wondering if she could even take his entire cock to wondering if she could ever cum again without it.\n\nHe seemed to sense that, shoving his cock in all the way, eliciting an mmmph from her because she wasn't expecting it. But he pulled out again and went back to teasing her clit. She stayed face forward but whispered breathlessly, \"What are you doing to me?\"\n\nHe kept it up for a few more minutes, then slammed his cock into her again, bringing a cry from her: \"Please!\"\n\nHe responded by pulling nearly all the way out, his head holding position at her pussy lips.\n\nThe feeling of being empty was killing her. She'd got used to him filling her and was greedy for it. \"Please!\"\n\n\"You want it?\" he asked, his voice gravelly now.\n\n\"I need it,\" she said, begging more insistently than ever for completion. \"Don't leave me like this.\"\n\nHe rocked slowly with just the head of his cock. \"Where do you need it?\"\n\nShe turned and looked back, looked at his gorgeous hard cock and into his eyes. Her look surely told him everything he needed to know, but he stared back arrogantly, smugness across every feature of his face. He knew very well where she needed it. \"I need you to fuck me hard in my whore cunt,\" she said. \"I need it so fucking bad.\"\n\nHe stared into her eyes and gave her one slow stroke. Then another one. Then another as he picked up the pace. She was still watching him, as if to look away would lead to him stopping again. But he didn't. He drove it faster, deeper, harder with each new stroke, pounding her with everything he had, bringing loud moans from her.\n\nKaylie could no longer see him even though her head was turned in his direction. She couldn't see anything, her entire body was focused on the euphoria of this, the fucking of her life, the grown-man fucking she'd fantasized about in the pool room that night and every night she'd masturbated since then. She felt the rush of absolute ecstasy radiate into her tits and her legs and prayed he was so lost in it that he wouldn't stop this time.\n\nHe didn't. He was fucking her faster and harder now and with each stroke, she moaned and groaned and whimpered and encouraged him. \"Yes... yes... yes... yes...\"\n\n\"I'm... gonna... cum...so...hard...\" she said, timing each word with a thrust of his cock into her.\n\n\"You need a big cock, don't you,\" he moaned.\n\n\"Yes, you fucking stud, I--\" Before she could say another word, she felt his thumb slide deep into her ass, and that did it, sending her into convulsions, the fullest she'd ever felt in her life. She felt his cock swelling in her and she knew what was happening. She knew he was about to cum. Her boyfriend flashed into her mind, imagining him has asleep and dreaming of a gold fucking camo while his faithful girlfriend was being given the best orgasm of her life.\n\n\"Fuck me,\" she screamed out. \"Please don't stop. Fill my whore cunt with your seed. Put some fucking horns on your son.\"\n\nSomehow, he found a faster pace now, holding nothing back and for the next few minutes, she came over and over while he piledrived his cock deep into her young whore cunt, which would never be the same again. He stopped for one moment and got a fistful of blonde hair to hold onto and then drove his cock deep into her and started shooting rope after rope of his powerful seed into her unprotected cunt.\n\nShe never believed you could actually feel ejaculation. It was a myth, she thought, an elaborate exaggeration to create a narrative. Maybe because he hadn't fucked anyone in a year, it had welled up in his giant balls, but this fountain of sperm shooting into her cunt, she definitely felt, and after he finished, she could feel it going down her inner thighs: too much cum for her to keep inside her tight young cunt.\n\nWhen he pulled out, he looked exhausted and satisfied. He backed up unto the swing chair and slumped down.\n\nKaylie tried to walk over to him, but her knees gave out, and she sunk down to the gazebo floor. She decided to stay there a while and made eye contact with him as she used her fingers to wipe his cum off her thighs and into her mouth, licking her lips to make sure she got it all. When she was satisfied she got it all, she went over to the chair and kneeled at his feet, lifting his semi-hard cock with her hand and cleaning all around it with her tongue, tasting their combination of cum. Then she went to his balls, making sure to get every last drop.\n\nShe went back to the table and got him a cigarette. She lit it for him, took a drag, then handed it to him.\n\n\"I didn't know you smoked,\" he said.\n\nShe took it from him, took another drag, held it in for a while, then blew it into the sky, where she saw the asteroids streaking across. \"Bad girls do what they want,\" she said, and handed him back the cigarette.\n\nA couple of hours later, she got out of the bed in her room and went back down to the gazebo for another cigarette. She took a selfie of her smoking in nothing but virgin white panties and texted it to him. \"I guess I wasn't done being bad.\" There, she thought as she put the phone down beside her. He'd have a souvenir when he woke up.\n\nShe finished the cigarette, then took off her panties and went for a swim in the ocean. Twenty minutes later, she headed back up to the gazebo. She could make out a silhouette as she approached. It was side-on to her, and a momentary panic hit her. They both had about the same build. Then he turned around to face her and he was naked, his cock hanging between his legs. She smiled."
    ],
    "authorname": "KaraJ101",
    "tags": [
        "boyfriends father",
        "18-year-old",
        "photographer",
        "seduction",
        "flirting",
        "young girl",
        "cheating",
        "blowjob",
        "sons girlfriend",
        "big cock"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/growing-up-18"
}