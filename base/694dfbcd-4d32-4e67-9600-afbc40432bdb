{
    "title": "Cassie Ch. 02",
    "pages": [
        "I scooted along quickly under the dappled sunlight filtering down through the gigantic elms lining the concourse of Central Park. I was running a little late, but I'd phoned Cassie to let her know and she'd said she had a book with her and to take my time. My hurried pace was more a result of my excitement to see her than it was due to being a bit tardy. I settled into a long steady stride, glanced at my watch and smiled, knowing I'd be at our meeting place in a few minutes.\n\nIt was hard to believe six weeks had gone by since our last meeting. Serendipity had played a huge role in my bumping into Cassie that day at the Barnes & Noble in Union Square. But sheer sexual chemistry had propelled that meeting into one of the most incredibly erotic nights of my life. And interestingly enough, despite our age difference of 27 years, Cassie had expressed having the same memorable experience. I kept pinching myself at the realization that this beautiful young woman wanted to continue our dalliance. I was fully expecting that the brief, but intensely sexual flame of that magic night in late March might be just a passing thing or an \"experience du jour\" for Cassie. \n\nWe had intended to get together sooner, but life gets in the way sometimes, and while it was longer than either of us would have liked, the time had finally arrived for our \"second\" date. We had filled the intervening weeks with phone calls, emails, chats and texts. Certainly the younger generation has many more means of staying in contact then had been in existence when I was in my twenties, and Cassie and I had used all of them to the fullest. And while I had texted and chatted before, I'd never participated in the sort of deeply erotic and highly sexual repartee that we had delved into in our quest to keep the fires burning. And burn they did.\n\nWe'd sent daily emails, texted many times a day, chatted at odd intervals and found time for sexy phone calls when our schedules allowed. Her job with the marketing firm had gotten very busy and placed incredible demands on her time. Add in teaching yoga and taking a night course at Pratt and she was one busy girl. On my end the spring was always my busy season, with weddings and graduations kicking my photography work into high gear. Each new project required a commensurate amount of time dedicated to editing and design work. In addition my freelance work for the travel website had fed me several spring assignments which had kept me on the road and busier than usual. Between the two of us we'd not been able to find a mutually satisfactory weekend, until today, the first Saturday in May.\n\nI glanced at my watch one more time. I'd be ten minutes late. We'd lucked out on the weather report, as early May can bring wild fluctuations to the greater metropolitan area. But the afternoon sun had brought the hordes out in the park and had put a bounce in everyone's step, including mine. \n\nSuddenly, an image of our previous meeting flashed through my head and I smiled, as I remembered the scenario of Cassie straddling me in a straight-back wooden chair in her small studio apartment; riding me like there was no tomorrow. I quickened my pace; close enough to our meeting spot that I could start looking for her. \n\nI saw her before she saw me. She was sitting alone on the west side of the concourse, legs crossed, reading a book. I caught my breath as the beauty of her visage filled me with a myriad of emotions. Her thick wavy brown hair was tied carelessly above her head and to one side, accentuating the large silver hoop earrings dangling from her lovely lobes. The reading glasses did nothing to hide her innate beauty; in fact, in my mind's eye, they enhanced it. She looked beautiful, sexy and intelligent, and she was all of those things.\n\nShe must have sensed me drawing closer, as she closed her book, looked up at me and a huge smile erupted across her gorgeous face. She stood up quickly and opened her arms to greet my approach with a soft landing and a kiss. \n\n\"Well, hello there, Uncle Teddy,\" she said softly as she wrapped her arms around my neck and gave me the most delightful kiss on the lips.\n\nI was an uncle in name only, due to the close relationship I'd had with her father and family over the years, and not a blood relation. Still, her \"Uncle\" comments never failed to make my heart skip a beat. There was something sort of naughty, but innocent, in that reference; especially now that we had become lovers. \n\n\"Well, hello to you too, Cassandra,\" I replied, nuzzling her ear and kissing that super sensitive spot on her upper neck; one of many I had discovered gleefully on my last trip to New York. She pressed her body against mine, both of us oblivious to our public display of affection. I leaned back to look at her at arm's length. She was even more beautiful than I had remembered, or perhaps it was the knowledge of where our afternoon was headed that clouded my judgment and reason. \n\nHer large brown eye sparkled with excitement and her steady gaze drew me in. Her slender body felt soft and pliant in my arms and I knew I was going to have a hard time keeping my hands off of her. She was wearing a light gray hoodie, unzipped to display a tight turquoise top that hugged her perfect breasts. She had on thin black leggings that followed every nuance of her contours and heavy Frye boots that gave her a kick-ass air of authority. To top it all off she smelled divine; a subtle combination of spring flowers and lavender. I was, once again, mesmerized. \n\nAs I leaned back to gaze at her, my arching back brought our pelvises together in a grinding bond. We just looked into one another's eyes and pressed hard. I knew she could feel me growing and we swayed back and forth, absolutely oblivious to the world and strollers passing nearby.\n\n\"I've missed you Teddy,\" she cooed with the sexiest smile imaginable. \"I'm so glad you're here.\"\n\n\"Cassie, there is no place, and I mean no place, that I would rather be right now than right here, right now, pressed against you just like this,\" I smiled. She beamed. \n\n\"God, maybe we should pry ourselves apart for just a few minutes. I don't want anybody screaming at us to 'get a room'\" she laughed.\n\n\"Oh, we have a room, Cass. That's not an issue. But maybe we should slow down and take our time getting there. What do you think?\" I queried. \n\n\"I agree,\" she said. \"But I think you need to sit down for a minute and regain your composure. If you know what I mean,\" she said with a sly grin, glancing down at the meaty bulge in my black jeans. I laughed and sat down on the bench, my arm over her shoulder. We contentedly watched the world wander by and smiled at our good fortune and a beautiful weekend just beginning to gradually unfold. \n\nWe got lost in conversation for awhile, catching up on each other's news and the latest twists and turns of our barely tethered worlds. The undercurrent of our conversation, however, was the knowledge that we were there together and side by side after weeks of pining and conjecture. Our inability to meet in the intervening weeks had become somewhat comical, in fact. But we were here now and that was all that mattered. \n\nCassie suggested we walk; maybe even begin to wend our way toward the hotel. I had come straight to the park from Grand Central and hadn't checked in yet. It was past 3pm and we could certainly do so whenever we wanted. She hooked her hand into the crook of my left elbow as we stood and pulled me against her as we began to walk. I was a good six inches taller than her, but her boots gave her a hefty two inch boost and her body felt perfectly formed next to mine as we strode along the gravel paths. \n\nAt one point Cassie stopped abruptly as she ran into someone she knew; a young man her age who was obviously a good friend. They laughed for a few seconds before Cassie introduced me.\n\n\"Alex, this is my friend, Teddy. Teddy, Alex.\"\n\nI extended my right hand and Alex grasped it firmly, cocking his head slightly as he sized me up. I could see the age thing washing through his thoughts quickly as he saw Cassie's hand clasping my elbow. \n\n\"Alex? Nice to meet you,\" I replied, shaking his hand firmly. \n\nI saw him glance at Cassie with just a fleeting glimmer of wonder, then launch into questions about their mutual friends and acquaintances whom I was not familiar with. He and Cassie spoke casually for a minute or two until the social moment had worn thin and Alex excused himself and gave Cassie a peck on the cheek and me a curt nod. As he took his leave Cassie squeezed my arm and we began to march forward again. \n\n\"So, was that awkward?\" I inquired.\n\n\"Was what awkward?\" she replied. \n\n\"Well, your friend there sees you snuggled up to an older guy. Here you are, a beautiful young thing, hanging out with an older gentleman. I don't know. Alex, or whatever his name was, seemed to be a bit amused by the whole scene.\"\n\nCassie looked at me quizzically. \n\n\"Why would I give a shit about what Alex thinks?\" she queried with a hint of incredulity in her voice.\n\n\"I don't know, Cass. I mean we're not the most natural pair of lovers in the world. You're half my age. You could have any man you want, and I mean ANY man. Yet you're on my arm and I'm just at a loss for words, I guess. Not being very coherent, am I?\"\n\nShe peered at me with a hint of curiosity.\n\n\"No, you're not. But why are you so concerned about age and looks and whatever? I'm here, you're here, and we're wandering toward a hotel room where we'll have lots of privacy and we'll get washed away on waves of orgasms. What's the problem?\"\n\nI didn't want to blow a good thing here, but it was an interesting discussion and not a topic we could sweep under the rug, at least not for long.\n\n\"Well, what would your father say if he knew you were fucking one of his oldest friends? What would you say to him? What would he say to me? God, I hate to think,\" I rambled.\n\n\"Geez, Teddy. Let's just enjoy what we have while we have it. Why do we need to be jumping ahead of ourselves? Slow down, man. Enjoy the moment. My father's not here. You are.\"\n\nShe squeezed my arm and pressed her head against my shoulder and I realized I was getting lost in an emotion and concept that would be better left for another day. I could think about this tomorrow, or the next day. But right now I was walking through Central Park with an absolutely gorgeous woman on a clear spring day and I should be absorbed in the moment and not stressing about ghosts in the future. I put my arm around Cassie's shoulder and pulled her against me. \n\n\"You're right. I'm sorry, Cass. Age hang-ups, I guess.\"\n\nAs we walked, however, I noticed the looks we got, partly due to the exquisite beauty nestled under my arm; partly due to the sharp contrast in our generational heritage. But I was determined not to worry or think about it again, at least until after the weekend. I continued to take in her beauty \u2013 the way the errant strands of hair fell across her graceful neck, the way her pouty lips would curve into a smile as she'd turn to face me, the way she walked with a sinuous feline grace. \n\nI kept trying to look at her anew; as if I was seeing her for the first time. I'd be in awe, as any man would be, and many were as we continued to head west along the meandering paths of the park. \n\nI'll admit to turning around sometimes when a beautiful woman walks by, eager to see the rear view and confirm that what just walked by was as intoxicating from the back side as they had been from head on. Cassie would have been one of those head-turners for me. The difference now was I wasn't turning to pine at a passing beauty. We were walking side-by-side and headed ever so surely toward a conjugal reunion that I knew would rival anything I had experienced to date, despite my considerable experience. \n\n\"So, your last email said you had a surprise for me, Teddy, What is it? Give it up,\" Cassie crooned, returning our focus to the here and now and giving me that devilish smile of hers.\n\n\"Well, Cassie. I really want to take photographs of you. And my plan is for us to check into the hotel room, get comfortable, and then I'm going to slowly take a series of photos. But as the session unfolds and clothes are discarded, we're not going to touch one another. I will touch you with my vision and my lens, you'll pose for me, but we'll resist touching one another. You'll try to seduce me with your body and your persona; I'll try to seduce you by watching you, mostly through the lens of a camera. We'll see who blinks first, who can't resist touching the other, who gets turned on beyond the point of no return,\" I explained. \"What do you think?\"\n\n\"Oooohh, that sounds great, Teddy. I can play that game. But I should warn you ahead of time. You don't stand a chance in hell,\" she said, cocking her head, her big hoop earrings dangling in a way that seemed to reinforce her claim. \"You are so toast,\" she gloated.\n\n\"We'll see. I'll admit to being the underdog in this exercise. But I've spent a lot of time behind the lens of a camera and can be very serious and determined when I'm working. I can completely disassociate myself from the subject; no matter how intoxicating. You'll have to be pretty hot to make me waver, just so you know.\"\n\nShe smiled knowingly. \"Oh, we'll see about that. Is there money riding on this venture?\" \n\nI pondered the challenge for a minute.\n\n\"Dinner,\" I stated emphatically. \n\n\"You're on. That means I get to go anywhere I want. Hmmm, let me think,\" she continued as she scrunched her face up in a quizzical expression and brought her hand under her chin in an effort to look like she was pondering the future.\n\n\"Go ahead and laugh, sister. You're not dealing with some young punk who just fell off the turnip truck. So, you go right on and give me your best moves, darling. Just don't underestimate the competition,\" I continued.\n\nShe tightened her grip on me and smiled knowingly. \n\n\"Well let's just get to the hotel and let the games begin,\" she goaded. \n\nWe were just emerging from the park on Central Park West as she issued this challenge. We proceeded the few short blocks to the hotel with a little more urgency, knowing that dinner would probably either be eating one another or, at the very most, a romantic room service for two. \n\nWe hustled west toward the hotel; a recently renovated gem from the Golden Era of New York style. I checked in as Cassie fidgeted in the lobby, but before long we were sauntering over to the elevators, key card in hand. There was a hush of understanding as we climbed aboard; the only couple headed up. Or maybe it was the just the lull before a competitive event; each foe contemplating the moves ahead and the plan for a counterattack. We headed down the darkened corridor, ready for battle. \n\nI felt her hand on my ass, cupping a bun, as I swiped us into privacy. \n\n\"Ahem,\" I said with a sense of enforcement. \"That will be end of that, Miss. Hands off for now. Until you're ready to buckle,\" I exhorted. \n\nThat brought a huff and a look of complete disdainment. And I knew, right then, that a silence was going to fall over the activities of the next half hour. I knew where things would head fast, so I quickly pulled my camera bag from the backpack and began to ready technology for the events to unfold. For her part, Cassie threw her large purse on the bed as she strode across the room, suddenly oblivious to me and headed toward the view waiting at the window wall. I watched her wonderful ass twitch out of the corner of my eye as she walked.\n\nOur room was a corner suite on the 12th floor and faced Broadway and a cross street to the north. The lovely eastern and northern light filled our space with a tender daylight glow. I busied myself with prepping: cleaning my lenses and checking my SD card. I also plugged my IPhone into the docking station and dialed up a mix I had made just for the occasion; a potpourri of musical styles, but all with a sexy backbeat. When I finally looked up I saw Cassie leaning on her elbows on the window sill, looking out the window. Her ass was sticking back into the room and, oh my God, what an ass this girl had. \n\nI've pontificated before on her lovely butt and the view presented to me at that moment just reinforced everything I already knew. Cassie had a world-class rear end and she knew it. When added to her face and slender torso and hair and eyes and her personality and, just her complete demeanor, she was a beauty of epic proportions \u2013 way out of my league, but presently in my hotel room and ripe for the challenge I'd put forth. I was going to play this challenge to the max. But I also knew that, despite anything that might unfold, before long, we would be fucking one another's brains out. \n\nThe view of her leaning on the window sill was a view for the ages. The leggings she wore were like a second skin and left almost nothing to the imagination, at least in terms of her shapeliness. I brought the viewfinder to my eye, focused and pressed the shutter. The first snap of the shutter brought a subtle reaction to Cassie. She turned her head to me, partially, and smiled. \n\n\"Let the games begin,\" she stated. \n\nI didn't reply, but shot another photo, and then another. She bent her leg so one ass cheek rose slightly above the other. She moved in subtle stretches as I began to move about the room, taking her bent over posture from different angles. She finally stood and turned, looking at me directly with a defiant air. She unzipped her hoodie and let it slide off her delicate shoulders without smiling and without ever taking her eyes off of me. The turquoise top below was tight and thin, barely concealing her breasts. It was quite evident she was not wearing a bra. I'm no expert, but I would have characterized her bust as a nice full B cup; large and full enough to be quite noticeable and seductive in its current state, but small enough to allow her to go braless when she was of a mind. The thin spaghetti straps hugged her slender shoulders.\n\nShe leaned back against the window sill putting her hands to each side. The result of this posture was to accentuate the lovely curvature and profile of her bust. A small strip of skin was exposed between her top and the waistline of her leggings. My camera washed up and down her body. I continued to take shots as I moved in a wide swath around her window perch. She arched her back against the window, her hips projecting forward in a move that made her mound become more prominent through the tight black leggings.\n\nAs she watched me with a determined eye, I saw her flatten her right hand and slide it along her flat tummy and slip it beneath the waistband of her leggings. I zoomed in quickly on her hand as it crept lower, moving steadily downward to cover her hidden sex. The profile of her knuckles pressing outward against the stretchy material of her leggings was particularly sexy. My camera zoomed in on her crotch as her hand curved and moved underneath in a gentle probing of her hidden lips. She closed her eyes, lost in the moment, as her other hand drifted up to fondle her still covered breast. \n\nOn the one hand I was somewhat disassociated from all that she was doing, filtering my desire through the lens of the camera. On the other hand it was impossible to ignore the sexy nuance of her blatant digital exploration. I could feel a stirring in my core that I knew would manifest itself in a physical expression of my own state of arousal. Her posing was beginning to give me an erection. \n\nAs Cassie continued to move her hand within her leggings, her body began to undulate and move in slow circles and in sync to the steady beat of the music. I saw her open her eyes and look at me with a serious seductive look, as I continued to study her form through the camera lens. With one hand still ensconced in her sex, she moved her other hand from her breast and lowered one strap of her top, then the other. Then, as she stared into the lens, looking right through me, she pulled her top down, ever so slowly, until one, then the other, nipple popped into view. They seemed to be emerging, ready to play, ready for the party. I couldn't help but smile and I know Cassie saw my mirth.",
        "\"Teddy, I think it's only fair for you to discard clothing as I do. Don't you think? Just to keep things on an even playing field.\"\n\nI couldn't argue with that logic, but I didn't want to give in too easily. I zeroed the camera in on her exquisite nipples, while she gently ran the tips of her fingers around each one, bringing them to full erection. Her areolas were a lovely light brown color, smooth, slightly puffy and with perfectly stiff nipples pointing slightly skyward.\n\n\"I don't have any straps to lower, Cassie,\" I stated feebly.\n\n\"Funny. Off with the shirt, Mister,\" she said sternly. How could I argue with a half-naked woman? \n\nI was wearing a blue denim work shirt and black jeans. I lowered the camera down to my waist, letting it dangle on the strap and looked at Cassie as she pushed her top down around her waist, totally exposing her lovely breasts. As she smiled at me seductively she pushed off the window sill and sauntered over to the bed, pulling her hand out from inside her pants. \n\n\"The shirt, dude. Lose it,\" she said casually as she crawled onto the bed, facing away from me. \"Now.\" \n\nShe knelt on the bed, facing away from me, but with her head turned to watch me; topless with her leggings painted to the curves of her lower body. As she watched me unbutton and discard my shirt, she put the fingers that had just been stuffed in her pussy, into her mouth, tasting the fruits of her labor. Satisfied that I had followed suit, she leaned down to place her head and upper torso face down on the bed, leaving her ass up high. As I threw my shirt onto the floor, I picked the camera back up, getting ready for this next pose. \n\nTurning her head sideways to look at me, Cassie reached back and began to lower the leggings down and over her ass. Someone with a male voice said, \"Oh my God,\" and it took a second for me to realize that it had been me. She pulled the waistband out and over and ass cheeks and about halfway down, fully exposing her ass, but not quite revealing her pussy, which lurked in the shadows. I burrowed down low to shoot some photos of her ass up close. The sight of her upside-down ass framed by the hard horizontal black line of her leggings was just phenomenal. I angled this way and that; taking shots close in with my telephoto and further away, catching her entire feline form on the bed. The soft afternoon northern light in the room was absolutely perfect, creating gentle shadows and caressing Cassie's perfect skin.\n\nSuddenly, from the deep triangle between her thighs and the leggings, her hand emerged and I saw, as well as heard, it slip into her cunt. Judging from the barely audible sticky sounds emanating from her slit, she was very excited. And, without having been conscious of it until now, I realized that I was very aroused myself and extremely hard. Her other hand joined the first and pulled her leggings down enough to expose her pussy. It took every ounce of will power I had not to leap down and bury my face into her sweet juicy groove. I had an overwhelming desire right then and there to drive my tongue straight into the tight little starfish of her anus. But I was strong; I would prevail. I continued to study her glorious body through the lens.\n\nCassie pushed her leggings down so they were scrunched down just above her knees and arched her back to accentuate the lovely curvature of her ass and hips. The sweet round cheeks of her buttocks were pure perfection and would be a source of lust for any living breathing person; male or female. The slender taper of her smooth thighs was almost irresistible. I whistled under my breath as I zoomed in on her fingers spreading her pussy lips and exposing her glistening pink labia. She still had her big heavy boots on and something about the contrast between their worn thick leather and the gentle folds of her delicate labia was extremely erotic. \n\nShe slipped two fingers into her juicy hole, all the way in, then pulled them slowly out and down to swirl the lubricated pads in tight circles around her clit. I heard her moan softly and realized she was lost in her own lust, perhaps not oblivious to me at the moment, but definitely wound up tight within her own sphere. God, I wanted to fuck her so badly that very minute. My will power was slipping fast and I knew it wasn't going to take much more to push me right over the edge.\n\nWithout warning she flipped over onto her back, pulled her boots off quickly, slid her top up and over her head and pulled each leg up to slide her leggings off. She stripped in a matter of seconds and was now naked except for a lovely sheer black thong which she rearranged to maintain some modicum of modesty, if you could call it that. She had reopened her eyes and focused on me, bringing me back into her sensuous world. She eyed my body hungrily and then noticed I was still in my pants, albeit with a monstrous bulge filling the front. \n\n\"Hmmm,\" she cooed sexily. \"Time to unleash that bad boy, Ted. Off with the pants.\"\n\nI sighed, stood up from the bed and unbuckled my jeans. She seemed to be watching with some interest, so I tried to add a little drama to the discarding of my own pants, hoping to get a rise out of her; hoping to elicit some small signal of desire with my slow strip. Where was a brass pole when I needed one? Cassie did seem entranced as I began to slowly ease the zipper down over the sizable protuberance in my jeans. I was careful with the zipper as I had not worn boxers. \n\n\"Ooooh, commando, Teddy. I had no idea. Such a bad boy. Oh, God. It's beautiful, Teddy,\" she gushed. \n\nMaybe my fumbling striptease was having a more potent effect than I had thought. I let my jeans fall to the floor and stepped out of them, now naked except for a dangling Nikon around my neck. My telephoto lens was much bigger and thicker, but my cock stood proud and fully erect. There was no doubt that my nakedness and cantilevered rigidity seemed to be having some effect on her. \n\nCassie dug her heels into the bed and arched her back, her tight little buttocks tightening into a perfect pair of fleshy bubbles; her thighs taut and spread wide. The arching position forced her mound forth and the thong was so thin I could make out her delicate labia through the sheer material. She was running her hands freely all over her body and undulating her hips in time to the thumping bass beat. As she pressed her thong into her slit with her middle finger, I clicked away, hunkering down low next to the bed to get an upward view. The profile of the puffy curve of her mound was awe inspiring. \n\nCassie was moving her body as if she was in heat. I could hear hurried breathing and the softest moans coming from her. She pulled the thong aside and let it slide into the crease between her outer labia and upper thigh; nestling her fingers into her sticky wet groove and dipping her fingers into the sweet honey dripping from her hole. I was mesmerized and having a hard time looking through the viewfinder; wanting to see the whole scenario unfolding with both eyes.\n\nShe put her ass down on the bed quickly, pulled her knees up and quickly discarded her panties. Then she swung her legs together and to the side, so that I had a sideways view of the backs of her thighs and tight little ass. The folds of her labia were compressed between her legs and looked so delectable and alluring. She reached down and pulled on her upper cheek, slowly opening her labia and exposing the juicy pink core. I couldn't believe the display of flesh and the complete comfort with which she showed her body.\n\n\"You're not a stranger to the camera, Cassie. Are you?\" I stated as I turned the telephoto for an extreme close-up of her delicately spread lips. She lifted her upper leg up in the air and her pussy opened completely; such an amazing site of delicate flesh and slick arousal.\n\n\"No,\" she answered without hesitating. \"But I'm a stranger to your camera, Teddy.\" She hesitated for a moment. \"But not for long,\" she added.\n\nThis was certainly true. She swung her legs back into the air, then extended and stretched her long slender legs together straight into the air. Then, slowly, ever so slowly, she spread them. I was fixated on her cunt as it appeared, then opened, then spread wide as her legs formed a wide vee and then fell back to the bed. I'm not sure I'd ever seen a more glorious pose. And, certainly, Cassie had one of the most gorgeous pussies I had ever laid my eyes on. Her lips were delicate, but pronounced, curving and encircling her tiny rigid clit in a soft U shape. Her lower lips cascaded downward and tapered into a tight slit running in a deep groove directly into her small puckered anus. The inner folds were a lovely soft pink and glistened with her excitement. Her deepest recess beckoned with the most subtle aroma and pulsated with arousal. She saw where my gaze was fixated and dipped her middle finger into her slick opening, then brought it to her mouth to taste, never letting her eyes leave mine.\n\nI leaned in close, camera covering my face, and took the closest shots that I could. I realized that I had used the camera as my shield. If I was looking through the lensfinder, I was one degree removed from the reality of what was in front of me. My camera was a total defense mechanism and had been working, so far. But what I hadn't realized was how my other senses would kick in and subjugate my best intentions. I was dealing with the visual aspect of Cassie's sensuous display. I wasn't prepared, however, for how the sense of smell and sound would permeate my semi-controlled demeanor.\n\nIt was the aroma of Cassie's arousal that first worked its tentacles into my brain. The combination of the subtle flowery perfume she'd applied earlier in the day with the innate sexual scent of her excitement was a deadly combo. My head was spinning from the aromatic delight of her musk. But, when that was combined with the subtle sound of her juicy lips leaking sexual fluids, I was a goner. A blind man would have had no chance in this same situation and position. I was no longer a match for her wily ways and sexual tools.\n\nAs my head spun with erotic overload, Cassie rose up on the bed, standing with legs spread in the middle of the bed. Her look told me what I was to do. I slid over on my back as she lifted one leg to let me position myself directly underneath her proud form. I pulled the camera to my eye <click> and aimed up at the most beautiful sight I had ever seen. I was gazing up at Cassie's cunt, her legs spread, her hands on her hips, her head looking down at me between the shallow valley of her lovely breasts. My shutter finger spasmed and the camera took shot after shot. Could there be a better view than what I was observing at that very moment? \n\nAnd just when I thought it couldn't get any better, Cassie began to move and sway. I tried to stay focused, both physically and mentally, but I was under her spell and, literally, under her sweet sexy pussy. Slowly, ever so slowly, she weaved and danced and lowered her body, closer and closer to my lens. The music playing right then was a perfect score for her slow seductive descent. I tried in vain to stay focused and on task, my lens moving with her hips. But as she moved seductively, lower and lower, I realized she was getting too close. I froze, my camera black and vertical, as she lowered her gaping pussy directly onto the broad face of my telephoto lens. It was like blocking out the sun. I saw nothing, but I knew her wet sex was becoming close friends with my polarizing filter. They were now lovers.\n\nAs she rose up slightly I let the camera fall to the side of my head, realizing that the last tool of my defense had been compromised by Cassie's body. Once she saw my camera tumble away, she knelt down and straddled my face. I looked up in awe at the sexiest display of sensuality that I had ever witnessed. With timing best described as slow-motion, Cassie lowered her sex toward my head. I was face to face with the most beautiful pussy I had ever laid eyes on. And in what could best be described as a first gentle kiss, I stuck my tongue out and watched in amazement as Cassie lowered her bulging little clit to just within reach of my tongue. \n\nShe'd said it earlier: I was toast. And I was. My camera was gone, covered with pussy juice, and I was literally defenseless. I surrendered. I'd lost our bet. I lifted my head and made first contact; glad, ecstatic in fact, that our game was over. I licked Cassie's clit with a gentle nudge of my tongue. Then, with a tight circular twirl, I engaged her swollen labia and tasted the juices that had collected on the rigid little nubbin of her clitoris. I suppose I shouldn't have been surprised at how wet she was; she was dripping with honey. I pursed my lips and kissed her core. I don't know that I had ever tasted anything so sweet. The aroma of her arousal completely overwhelmed my nasal passages and brain, and I moaned involuntarily as Cassie moved her hips and slid her clit along the vertical rudder of my extended tongue. I heard her groan deeply and knew that we were, finally, off to the races.\n\nI could hear the excitement in her breathing and felt her slip into a rhythm; a groove. She leaned back, placing her hands behind her on my legs and arched her hips forward, offering her lovely pink pussy to my mouth. As I sucked her juicy cunt in earnest, I looked up at her body and her lovely face. She was looking back at me with lust-filled eyes as her hips rocked and my tongue swirled. \n\nCassie began to lift her hips up so I had full access to the wet folds of her core and I turned my focus back to the lovely open pussy that was being offered to me. I'd been somewhat passive since losing the challenge, and suddenly felt a surge of sexual energy. I grabbed Cassie's tight fleshy ass cheeks with both hands and pulled her pussy onto my face hard, grinding my tongue deep into her hot flesh. She groaned and bucked her hips, loving the pace and intensity of this cunnilingual exercise. The sensual sounds of saliva mixed with female juices and the locking of two types of lips made for a slurpy smacking soup of sound that echoed between her slender thighs. My moans were muffled by the thin spread lips of her engorged labia.\n\nShe'd been working pretty hard up to this point and her determination and guile had panned out. I felt like it was my turn to steer the action. With one swift move I pushed her thighs up and over and threw her back with a bounce on the bed. She smiled beguilingly, happy to relax for a bit and let somebody else do the heavy lifting. I grabbed under her tight little ass cheeks and drew her to me, sliding a pillow under her ass to get just the right angle. \n\n\"Ohhhhh,\" she cooed appreciatively. \n\nShe let out a breath of satisfaction and placed her hand lightly on my head. Her legs were spread wide and she seemed completely at ease and comfortable with her sex totally on display. \n\n\"So beautiful, Cass. Just beautiful,\" I whispered, as my fingertips grazed along the smooth skin of her inner thighs and up over her flat tummy, her sex glistening with anticipation. \n\nI leaned down and began to kiss along her legs, my hands continuing to roam with a light touch. My licks and kisses circled in an ever-tightening radius toward her open center. She was hairless, from a waxing, not a razor, and there was a cute tuft of silky pubic hair sitting high up on the delicate rise of her mons. I loved running my fingers up and along the gentle mound of her pubis, my thumb lightly grazing her swollen clit as it passed by. She moaned and squirmed with my touch. \n\nI returned to kissing her with more energy and intimacy and I finally reached the tender folds of her labia. I opened my mouth wide and, once again, engaged her lower lips in an open mouth kiss. Then, pulling back, I let the flat of my tongue start at her perineum and with a subtle swaying motion, I licked and swirled my way up her succulent slit. My hands spread her labia and laid bare the beautiful pink hole; slippery wet and slick with lubrication. She tasted divine and smelled even better. I could tell by the way she was bucking and undulating her hips that she was ready to be eaten and she was ready now.\n\nMy tongue continued its savory journey until it reached her throbbing bundle of flesh, barely peeking out from the cloak of her tightly layered hood. I looked up to find her watching me, with interest and intent, and as I looked back, the flat of my tongue flickered in a rapid side to side motion over her clitoris. \n\n\"Ohhhhh, fuck, Teddy,\" she groaned. \n\nHer mouth opened and her eyes closed, and I knew exactly where I was going next. With an ever increasing intensity I began to suck her glorious cunt, every so often inhaling deeply and creating a wet loud suction. My idle hands came into play as my left thumb prodded against the tight sphincter of her anus, barely penetrating, and as my middle and ring fingers of my right hand sliced vertically into her slippery hole, then turned ninety degrees to curl up deep inside her fleshy warm vagina. \n\nEvery nerve of my body was focused on the signals, and there were many, emanating from Cassie. And as I adjusted my fingers to get them just right, and my tongue and mouth alternated in a dance of vaginal stimulation, I zeroed in on her pleasure center and went to town. I was determined to make her cum and every twitching movement of her body and every involuntary guttural sound from within, told me I was on the right track and just needed to keep going. I couldn't stop. \n\nAnd I didn't. I kept up the consistency of my movements with just enough variation to keep her slightly off guard. And I knew from our previous date, our one carnal extravaganza, that if I persisted, she'd come violently. I found my pace in her groove and she bucked her hips in a jerky motion, slowly crawling toward the edge of her climax. She wanted it, bad, and she knew I'd deliver it and not stop. She relaxed into the rhythm and the pace and as I felt her body start to stiffen and rise even further off the bed, I literally felt the wave of her orgasm strike as her pussy pulsed and grabbed my fingers in anxious contractions. \n\nI hadn't realized for a moment, her silence, as she suddenly found her voice and her breath again, moaning in appreciation and exhaling in a breathy release coinciding with the ebbing of her climax. I felt her body, rigid with joy just seconds ago, begin to relax and descend back onto the bed, physically and mentally. \n\n\"Oh my God, Teddy. Ohhhh. Oh, man. I am speechless.\"\n\n\"That's a first,\" I replied snarkily. She hit me on the top of my head in reply. \n\n\"You just gave me one fucking amazing orgasm; now you're going to insult me before I've even stopped throbbing. Didn't your mother teach you any manners?\"\n\n\"Oh, no, she did. She said, 'Theodore. Don't ever insult a woman when her pussy is still contracting from an orgasm.' We used talk about it around the dinner table all the time.\"\n\nCassie sneered at me. \n\n\"Wiseass,\" she said, as she scooted toward the edge of the bed. \"Get over here, you,\" she commanded. \n\nWho was I to deny the wishes of a woman with a pulsing pussy? I slid over as directed, my feet on the floor, my ass on the end of the bed. I placed a pillow under my head so I could relax and enjoy the view. Satisfied that I was almost in place, Cassie pushed my knees apart and knelt between them, pulling my ass off the bed a little more so the small of my back hung on the edge of the mattress. She stood and leaned forward and began to move north, her long highlighted tresses hanging wild and free, her curls grazing over my hardening cock, over my stomach, along my chest. As she reached my head I felt her thigh press against my groin as she leaned down for a kiss.\n\nIt was a long slow lingering kiss, almost like we were starting over, or just beginning. There was a sweetness and innocence to her languid lips that slowly gave way to an ever-increasing intensity. Our tongues slowly emerged and began to twirl in a dance as I felt her thigh begin to slide up and down my rigid member. As our kiss seemed to be peaking she broke it and nibbled her way along my cheek to my ear. ",
        "\"I'm going to give you the best blowjob you've ever had, Teddy,\" she whispered. \"Uncle Teddy,\" she added for emphasis as her tongue probed my ear.\n\n\"Better than last time?\" I inquired, eager to know what I was in for.\n\n\"Oh, yes,\" she seethed. \"Better than last time.\" \n\nShe exhaled a warm breath in my ear and I felt a shiver run down my spine and lodge in my loins. She nuzzled her way down my neck, little nibbles from her full soft lips, and headed south over my nipples, giving them little soft sucks. I moaned in appreciation and placed my hand in the thickness of her lush mane of locks. She was headed to the Promised Land and was going to take her time getting there with no complaint from me. I just lay there in a state of rigid anticipation as her twirling tongue darted lower and lower. I felt her nipples engage with my bobbing cock and tightened my grip on her head as she slowly began to lower herself onto the floor between my legs. \n\nBut instead of engaging my dick, she hunched down low and began to kiss her way up and down my thighs. I moaned involuntarily; unable to squelch the burning need that was making itself known, as evident from my wavering flagpole of excitement. But Cassie seemed more intent on concentrating on the lower regions, and as she kissed further and further up my thighs, I suddenly felt her tongue reach out and swirl a greeting to my left testicle. \n\n\"Oh, Cassie,\" I wavered. \n\nShe knew what she was doing, and why, and with my exclamation of approval I felt her mouth open wide and engulf my left ball. I hissed in appreciation, realizing this slow torture of ecstasy was going to take some time. Best one ever, indeed. \n\n\"God, I love to have my balls sucked, baby.\"\n\nI heard, and felt, her moan with my testicle surrounded by her mouth, and then I heard, and felt it, as she let my ball fall free with a popping sound. \n\n\"I know,\" she whispered, before sucking the other ball into her warm wet mouth. \n\nGod, it felt so fucking good. She continued to suck the other testicle as I felt her soft hand curl around my rigid shaft and just hold it aloft. \n\nTo me there are few things more erotic than seeing a woman's hand on a man's cock, especially when it's my own. I craned my neck to watch her as she multi-tasked with slow lazy strokes of my fully erect cock with a ball licking like none that I had ever experienced. Okay, so she was right, again. \n\nShe continued to lather my testicles, freshly shaved that morning, cupping and gently fondling my ball sac with one hand, while she languidly stroked the length of my erection with the other. She continued to massage my testicles with her hand as she kissed the underside of my shaft and worked her way slowly up my length with her tongue lashing the bulging ridge. Arriving at the head she wrapped her slender fingers around the base, looked up at me with sultry eyes and opened her mouth to descend slowly over the head. I groaned in appreciation as I felt her take maybe two inches into her mouth and begin to wash her tongue back and forth under the head. \n\nThe involuntary guttural sounds she was eliciting from me were enough to tell her she was right on target. I left my hand on her head, not to steer her, but to enjoy the feel of her head bobbing up and down on my member. Every once and awhile she'd stop sucking for a few seconds and expertly stroke the upper reaches of my cock with an experienced grip, sliding the soft thin outer layer of skin over the steel pipe of hard rock flesh below. After a few strokes, just to vary the pace, she'd re-engage with my cock head. And each time she'd take me a little deeper and a little deeper still. I was in heaven. \n\nAt one point she pulled off, hovered over my head and let a big dollop of saliva drop out of her mouth and onto my wavering erection. Then she returned to sucking; making the most intimate sounds and moans as she varied the pace expertly, but slowly increased the intensity of her oral love-making. After one deep inhalation of my cock, causing her to choke and gag slightly on my throbbing flesh, she pulled off to stroke me again. She looked me in the eye.\n\n\"I want you to come in my mouth, Teddy. I want to taste you,\" she said hungrily as she gave me that expert stroke of thumb and forefinger. \"I want to drink you, baby. Come for me.\"\n\nAnd with that statement she began a full-focused assault on my manhood. With one hand cupped warmly around my ball sac, one hand stroking the base of my shaft and her mouth warmly open to my girth, she began to suck with an intensity that was leading to the end. She gauged and altered her depth, speed and intensity with the verbal and physical cues I was giving her. She worked up to a steady rhythm that was meant to take me the distance, and I lay back to enjoy the rising sensation of an impending orgasm. \n\nShe seemed to have a sixth sense about what to do. Her mouth felt so fucking good on my cock, but it was the way she was using her hands in concert that had me lifting my hips off the bed to meet her warm wet mouth. \n\n\"Oh, God, Cass. That's so good, baby. Don't stop. Don't stop, Cassie,\" I implored. No need to beg; she wasn't stopping for anything other than a mouthful of cum. She began to moan in time to her deep sucking and in time to the music, as I felt a huge load of semen coalescing into what I knew was going to be an enormous eruption. As my voice rang out and my hand pressed her head down on my throbbing shaft, I felt the first wave of an orgasm looming within seconds.\n\n\"Oh, Cass. I'm gonna cum, baby,\" I cried. \n\nI suppose I was stating the obvious, because Cassie could tell I was ready to shoot. And without missing a beat, without hesitating for a second, she sucked and bobbed her way through a pulsing orgasm like I could not remember having in a very long time. Spurt after spurt erupted as Cassie opened her mouth wide to catch and suck up every last drop of cream. I emptied myself, totally and completely, as my climax began to subside. Cassie didn't disengage, but chose to keep my cock in her mouth as her tongue circled and collected every drop. I looked down at her beautiful face and saw her Adam's apple bob as she swallowed everything. She caressed my flagging cock gently as she smiled up at me.\n\n\"Wow. That was some load, Teddy. You needed that, I guess,\" she said, smiling up at me.\n\n\"That might be the understatement of the day,\" I replied. \"God, Cassie. That was amazing, girl. Truly amazing. Thank you.\"\n\n\"Just returning the favor,\" she said, as she stood, placed her hands on my chest and leaned down for a kiss. I could taste the residue of my semen still on her lips and tongue and we French kissed to enjoy the aftertaste. She wanted to share. \n\nWe spent the next twenty minutes snuggling and caressing, having an intimate conversation with our faces only inches from one another. I loved being so close to her. We took a break to recuperate; Cassie checked her phone messages, me tweaking the lighting and the temperature. I took a quick trip to the bathroom and emerged with a bounce in my step, only to be greeted by the shutter click of my camera. Cassie backed away slowly, camera covering her face, taking pictures as I sauntered across the room.\n\n\"Oh, naked paparazzi. That's a new one,\" I joked. <click> <click>\n\nI noticed the camera was now aimed at my lower extremities as opposed to my upper reaches.\n\n\"I can see the headline now,\" she claimed as she continued to take a series of photos. \"Shrinkage occurs: Teddy's formerly impressive member turns little and cute.\"\n\n\"Hey. You know that old Seinfeld joke is pretty worn out now. And you better be nice to my friend here or he's not going to want to play with you anymore,\" I chided. \n\nI plopped on the bed, rested my head on a pile of pillows and watched my beautiful young friend circle me like a photographic vulture. She kept taking photo after photo. <click> <click>\n\n\"Geez, Cassie. You're wasting film.\"\n\n\"Film?\" she queried. \"What's film?\"\n\n\"Okay, digitial data storage. You're filling up my SD card,\" I answered, mock sternly.\n\n\"Yes, but these photos are priceless. Someone will pay big bucks for them,\" she said as she leaned closer. \n\nWith a quick swipe of my hand I grabbed the telephoto lens and pulled the camera from her grip. \n\n\"You're incorrigible, young lady,\" I stated.\n\n\"Ohhhh, I love it when you use big words. Speaking of big, how is junior?\" she inquired, crawling between my legs and leaning down to take my semi-flaccid penis into her warm mouth. \n\n\"He's fine,\" I answered, \"and ready for a resurrection,\" I answered.\n\nI began to thicken in her mouth. She had all of me sucked deep and I could feel her tongue sliding back and forth along the glans under the head. God, it felt good. She'd only been able to take a few inches when I was hard; now, or at least for the next few seconds, she was able to take me down to the root. As I rapidly hardened I heard her moan, pull off and begin to jack me to full mast. She swept her long tresses over her shoulder.\n\n\"Oh, Teddy. I want your cock, baby. I want you to fuck me. Now,\" she stated unequivocally. \n\nShe straddled her legs over me, her hair hanging in a seductive veil. She reached down to grab my rejuvenated erection and guided it toward her awakening flesh. I felt her rub the head back and forth along her juicy slit and her engorged clit before inserting the tip in her groove and letting gravity lower her down, ever so slowly, unto my now fully engorged erection. We both held our breath as we felt her sink, inch by inch, impaling herself. \n\n\"Oh, God, Teddy. That feels so good,\" she claimed as she leaned forward to support herself on her arms and began a slow ride up and down my length. Her eyes were closed in a combination of concentration and ecstasy, but I kept my eyes open to enjoy the amazing view. Cassie began to use her lithe body to explore every cowgirl position available. She leaned back on one arm and used the fingers of her other hand to rub her clit with her cunt full of cock. I could feel her shuddering with intensity. I loved the view of her tight hole wrapped securely around the hard flesh pole ensconced in her pink slippery crevice. \n\nThen she pulled her legs up to a squatting position, grabbed the headboard of the bed and used it to hold her weight as she impaled herself on my rigidity in a pounding fuck, her body slamming down onto my hips after each rise up to the tip. Her breasts were bouncing seductively and her hair was flying in loose strands as she fucked my cock with an intensity bordering on violence. \n\nShe was out of breath and slowed down to rest for a minute. She pushed her legs forward so her feet were tucked in under my armpits and slid her ass down onto the bed right between my legs, my cock bent forward so as to stay engaged, but on the verge of being uncomfortable. This position afforded a most delectable view of our linked loins. Leaning back on her elbows she lifted her ass up off the bed just a little and slid her lower torso back and forth, engaging my bent over dick in a most leisurely fuck. We both looked down to watch her pussy lips, swollen and fully lubricated, as they slid up and down the veined throbbing mass of my glistening shaft.\n\nI grabbed my camera and zeroed in on our union; my telephoto lens bringing our organs into sharp focus, up close and personal. The magnified view of sliding parts was magnificent and I clicked a few shots for posterity. <click> <click>\n\nAs much as I was enjoying a relatively passive role in this position, I felt like it was time to reverse roles. It was time to get on top. Laying my camera down once again, I pulled Cassie up to me, as she curled her legs underneath and sat up straight. I was ready to turn, but she wasn't yet. Now, sitting up straight in a classic cowgirl position, she began to slide her hips back and forth in a wildly erotic motion. This position and rocking motion appeared to be working against her clit nicely, as I could feel her pubic bone grinding down and pressing against my own. We were both moaning and moving; we were fucking. \n\nI probably could have climaxed again in one of the positions we had tried, but I wanted to take my time getting there and I could see and sense that Cassie did too. With a seamless motion and twisting turn, I flipped Cassie onto her back, swinging my body with hers so I never disengaged from the tight hold her pussy had on my fully-submerged dick.\n\nOnce she was on her back I rose up over her, pushing up on my arms and bracing my spread legs against hers to maximize my leverage. With long steady deep strokes I began to deliver the full package, grinding every inch I had deep into the grip of her tight slippery vagina. \n\nWhat human motion can compare to the thrusting hips of a fuck? Nothing, that I know of. And we both relished the moment in silence as I fucked Cassie and drove my long hard cock deep into her soul. She responded with a low growl and I could feel her hands grasping for my ass so as to pull me in deeper, if that was even possible. We were in no hurry and we fucked that way, with a long steady rhythm that belied the intense need we both felt. We relished the moment, the feel of flesh in flesh, hard in soft, one thick fit in a tight hole. \n\nWe kissed; no longer a gentle kiss of apprehension, but a soulful kiss of unbearable longing. Our bodies move in a synchronized flow of sensual rhythm. It felt natural, it felt real, and felt so fucking good. Our tempo increased slowly, matching our beating hearts. Cassie adjusted her hips and wrapped her long slender legs around my waist as I kept trying to go deeper than physically possible. She met each inward thrust with an upward movement of her hips, rising to join me, wanting me fully and deeply. \n\nI pushed all the way in, filling her well, and stopped to lean down and kiss her soft pliant lips. Our tongues swirled in a display of complete and utter arousal and our breathing gave away the deep-seated lust that was welling up and taking control. We moaned into each other's open mouth, our inner emotions echoing down each other's throat. Tongue in mouth, cock in cunt, we moved in a graceful feline rhythm that felt whole and natural. It just felt, despite the gap in our ages and background, like we were meant to fuck.\n\nThe next ten minutes were a blur. I could try to recall them, but it was like watching a movie in fast-forward. We moved and moaned and twisted and turned and flipped and fondled, a veritable fuck machine. One or the other of us might be on top, or underneath, or on our sides, but our loins continued to lunge and thrust in a carnal creation all our own. \n\nAt some point I found myself behind Cassie and guided my cock back into her dripping wet hole. I pushed in and began to pump into her one more time.\n\n\"Fuck me, Teddy. Fuck me.\n\n\"I thought I already was, Cass,\" I replied. \n\n\"No,\" she replied, lifting her hips up to gain me even more depth, \"I mean really fuck me, Ted! Hard! Hard as you can!\"\n\nPerhaps I'd had an unconscious governor on my fucking to that point, but it didn't take much goading to get me to let loose. Perhaps I'd held back just a little, though it hadn't seemed like it to me. But if Cassie wanted it hard, than that was what she was going to get. I pulled her to the edge of the bed and stood behind her, her sweet tight ass in the air, her head sideways on the bedspread, her arms stretched forward and gripping the sheets. I grabbed her hips tightly, reared back until the tip of my cock was barely engaged with lips, and rammed it home as hard as I could.\n\nCassie grunted, more out of surprise than pleasure. But she'd made her desires known, and I was hard as a rock and full of vigor and I was going to fuck her like she'd never been fucked before. As I pulled hard on her hips, I jammed my cock home, slamming my hips against her ass. And with gradually more forceful thrusts, I began to pound my dick deep into her gaping wet hole. The slap of my hips against her tightly jiggling ass echoed across the room, mixed in with the guttural verbal exchange of lust and longing. \n\n\"Oh, God, Teddy. Oh, fuck. Harder. Fuck! Harder!\"\n\nMy thrusting was now bordering on the violent, and Cassie just groaned for more. Sweat was pouring off my brow and landing in splattered drips on the small of her back. Standing in the position I was allowed me to use the full force of my hips \u2013 and I did. I fucked Cassie as hard as humanly possible \u2013 because she needed and wanted it and so did I. She was whimpering by this point and almost looked on the verge of crying from the depth of her desire. \n\nAt some point we transcended into an animalistic coupling that rang out with an intensity I'm not sure I'd ever experienced before. I leaned back to increase the upward angle and flow of forward thrusting. Cassie was pushing back to meet each banging inward motion and our bodies crashed together again and again.\n\nI pushed her forward and down further onto the bed, climbing onto the mattress myself to try to get closer, to get deeper. And, finally, with a deep humping thrusting fuck, my hips grinding against the soft cheeks of her ass, I felt another looming orgasm begin to well up deep down and low. \n\n\"Oh, God, Cassie. Fuck. I'm gonna come in you, baby. I'm gonna come,\" I screamed, \"in you!\"\n\n\"Oh, fuck! I want your cum inside me, Teddy. Fuck me,\" she cried. \n\nAnd I did. And this wasn't your run-of-the-mill orgasm. This was an explosion of epic proportions; a pumping spurting flow in a rhythm unto itself. I emptied my seed so deep inside Cassie, so far inside her body, and I know she felt the shooting ropes of my semen crashing against the very depth of her inner walls. I heard a wail and didn't even recognize it as my own for a moment or two. \n\nI pulled out, almost at the point of exhaustion, but couldn't help but look down at the shiny gaping flower of Cassie's exquisite cunt. Her labia bulged and I could see creamy white drops of cum mingling with her own voluminous juices. I'm not sure what propelled me, but I leaned down low and pursed my lips against hers, sucking in the remnants of my own cum and the final flow of her copious lubrication. I heard her moan and press her bottom against my face. God, I loved this woman \u2013 and couldn't get enough of her \u2013 any of her \u2013 all of her. We collapsed in a heap of tangled flesh and bones and sweat, utterly spent and completely happy. \n\nAt some point in the evening we ordered room service \u2013 I paid, of course \u2013 donning the hotel robes in order to greet the bus boy with some modicum of decency. But once he was paid, tipped and gone, we resorted to our naked selves and ate a nude meal full of laughter and bawdy humor. I think what turned me on so much about Cassie was her ability to laugh and make me laugh. She didn't take herself too seriously and she certainly didn't take me seriously, or did her best to try not to. \n\nI lost track of the sex that night. We cycled in and out of a state of arousal all night long and I lost count of the number of times Cassie orgasmed. I was proud to keep up with her and she commented several times on my staying power. Certainly her sexual charms and incredible beauty aided me greatly in keeping pace with her considerable sexual appetite. \n\nAnd as much as I enjoyed the sex, I also greatly appreciated our down times, because that was when we laughed and joked and kept the camera in good working order. Having Cassie naked for such a long extended period of time was a true blessing. Her body was so lovely, from every angle, that I never got tired of looking at and admiring her beauty: the soft slope of her breasts, the exquisite curve of her ass, her smooth slender legs and perfectly proportioned hips and torso. And how could I ever tire of her pretty face and glorious mane of wild thick hair? I was quite sure I was the luckiest dude in New York City. My photographs would save those images for posterity, but nothing beat being in the moment with her and making every minute count. ",
        "It was interesting to see how the age difference seemed to have no bearing whatsoever in our enjoyment of one another, intellectually, emotionally or physically. It would only be upon emerging back into the outside world that we'd be looked at askance, defying the social norms of what was right and proper for one aged person to engage in sexually with another. But we'd worry about that, or address it in some way, tomorrow. This night was ours and ours alone. And we made every minute count. \n\nAt some point after another round of spirited fucking, we fell asleep, exhausted and blissful. We both slept like listless logs and it was Cassie pulling back the shades to a bright sunny morning that awoke me suddenly from a most restful slumber. \n\nWhile our evening sessions had been a series of full-throttled sexual assaults on one another, our morning love-making was exactly the opposite \u2013 more studied and slow; less rushed, more methodical and inquisitive. It was like reading a favorite novel for the second or third time; discovering nuances and subtleties that had been missed the first time through. We were revitalized from slumber and our juices had been replenished. Yet we took our time that morning, enjoying one another's bodies in the early slanted sunlight that permeated our room. \n\nI found myself focusing in on the small details of her slender body: the cute little dimples in the small of her back just above her smooth butt cheeks, her lovely pedicured toes, and the sweet sensitivity of her perky nipples. I couldn't keep my hands off of her. If I wasn't massaging her, I was stroking her body and letting my fingertips graze across her skin, searching for unexplored crevices or curves. She seemed to enjoy a similar tactile approach and it was rare that one of us wasn't touching the other in some way, in some place.\n\nCassie loved it when I placed the palm of my hand over her mound, cupping her sex which would softly mold to my hand. I loved the way her body moved subtly and sinuously under my velvet touch as I felt her lips open ever so slightly to the very tip of my middle finger. I loved the varied spectrum: going from pounding throbbing sex of the night before, to the softest, gentlest, yet no less intense, touch of the morning. \n\nHer body looked so lovely in the refracted morning light. Her hair was wild and askew. And what woman wouldn't kill for the off-handed sexuality her tousled tresses conveyed? The occasional comb of her fingers through her mahogany streaked hair did little to tame her wild mane. I loved it. \n\nWe kissed so tenderly that morning, as if we were searching for corners and skin that may have been missed the night before. And there were always several theaters going on at once: we might be totally absorbed in an opened mouth kiss, yet at the same time my fingers were grazing the open folds of her delicate lips. Or she might be cupping her small smooth hand around the tight constricting sac of my balls. We just, literally, could not get enough of one another. What would we do on departing? How could we possibly let another six weeks go by without seeing one another intimately and fully?\n\nYet despite the breadth of what we'd experienced in the previous eighteen hours, we both realized that we were more focused on all the things still left to explore than on what we'd already done. It was only our second date, yet the need and desire for another meeting, and another, was only reinforced by our time in bed. \n\nI took some lovely photographs of Cassie that morning; maybe the best of the whole lot. It felt to me like the subtle sexuality of her entire personae was there for me to capture, if it was even possible, with my lens. She was at ease, comfortable, and so open sexually, yet I'm not sure I could ever capture her erotic essence. But I tried. And, as I found out later upon viewing the over 1,000 images we took during that short period of time, I succeeded \u2013 at least in my mind. \n\nAnd while I hate the overused phrase, \"all good things must come to an end,\" it was more than true in this case. I won't even try to characterize our love-making that morning. It was as intimate and loving and deeply sexual as anything I've ever had the privilege to experience. And what was ultimately so satisfying was, it was a two-way street. I knew Cassie was feeling what I was feeling. \n\nWe were silent as we packed up that Sunday morning. It was partially a silence born of sadness, but also one based on future expectation and excitement. We checked out and wandered south on Broadway to one of Manhattan's many corner breakfast establishments. Over scrambled eggs and English muffins, we compared schedules and worked out our next rendezvous. No one looked at us askance; no one seemed to really focus on us at all. But our looks and touches over the yellow plastic laminate surface reinforced our need, our appreciation for one another and our hazy, but concrete plans for the future.\n\nWe parted with a kiss and a gaze. Our next date was set \u2013 in stone. I began to text her before I was half a block away \u2013 and was surprised to find she had beaten me to it. I smiled, brimming with delight and love, and strode off south toward Grand Central Station and home \u2013 knowing that Cassie and I would meet again soon."
    ],
    "authorname": "gapster7",
    "tags": [
        "older",
        "older man younger woman",
        "photography",
        "erotic photos",
        "new york",
        "young pussy",
        "eating pussy",
        "hotel sex",
        "leggings",
        "panties"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/cassie-ch-02"
}