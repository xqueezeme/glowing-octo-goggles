{
    "title": "A New Way of Seeing Things Pt. 03 Ch. 28",
    "pages": [
        "Standard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\n. \n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental. \n\n*****\n\nRose led the way down a brightly lit cinderblock hallway to a metal fire door and pushed it open with an echoing bang and creak to reveal a large enclosed space on the other side. Gwen immediately recognized the dirt floor beyond surrounded by concrete walls and garage doors as the staging area between the arena to her right and the outside world to the left. She had been in spaces like this many times, focusing herself on the task ahead...\n\nThe woman did not stop, instead turning to another metal door on the left and pushing that one open too. Gwen's eyes struggled to adjust to the brightness as she followed along into the sunlight beyond, but was at least able to make out an expanse of grass in front of her. A cart path drew a grey line between her and a trailer a hundred feet away where a horse was tethered to the trailer\u2014Dart, she knew right away, and there was a small cluster of people gathered a few yards to his right. The group turned as one to look at the woman getting her bearings outside the open door. Danilo was there along with a pair of stable hands, a young blonde woman and a petite young brunette, both dressed in khakis and dark green polo shirt. That's Cricket, she quickly decided of the smaller woman, unsure how she had gotten into the standard uniform of Mrs. Danning's stable hands. There was a young man with them as well, dressed more casually in t-shirt and jeans...Gwen took a breath and walked towards the group in the practiced measured step Miss Ritter had demanded in these situations. Leave no doubt you are in control...\n\n\"Gwen, you look incredible!\" the young photographer called across the expanse of grass as he came to meet her. \"How are you feeling?\" \n\n\"Same as last night,\" she admitted. \"I really hope you and Mrs. Danning haven't made a mistake.\"\n\nHe stepped back, eying her critically, then grinned. \"I'm really sure we haven't!\"\n\n\"It's Dart who looks incredible,\" she deflected, moving to her horse, looking back in wonder at the young women coming up to join her. \"This is the best he's looked in years, maybe ever! Is this your work?\"\n\n\"I'm Hannah, ma'am,\" the blonde said, \"and to tell the truth, your groom did most of it. I tried to help, though.\" \n\n\"We both worked on him,\" Cricket chirped nervously. \"Hannah had the instructions on what was required, so I just did what she said.\"\n\nGwen circled the horse, inspecting him, finding that her exacting standards had been met. \"Who did the braids?\" she asked after noting the effort that had gone into his mane, appreciating how they hung to the right as was proper for the show ring even if her own outfit was most certainly not. \"I always hated doing those...\"\n\n\"Uhh, Kristen did,\" the young blonde volunteered. \"I was told to do the tail as well, but she said you prefer it to be left unbraided so I banged it instead. I hope that's alright.\" \n\n\"It is, and Kristen is right,\" Gwen said distractedly, her head next to Dart's as she said hello, \"a braid makes the horse carry the tail stiffly. Leaving the tail unbraided helps demonstrate the animal is supple all the way through its back. And the bang is cut beautifully.\"\n\nThere was a tinge of relief in the young woman's voice. \"Thank you, ma'am.\" \n\nGreeting completed, Gwen turned back to the photographer, unsure what to do next. \"I'd like you to meet my assistant, Marco,\" Danilo offered with a wave of his hand. \n\nThe young man shuffled forward. \"H'lo.\" Gwen shook the tentatively extended hand while evaluating its owner. Young and wiry with a shock of black curly hair, young enough to still be in high school, she thought with a hint of alarm, noting that his attempts to look anywhere but the body in front of him were occasionally failing. Just wait until the shirt comes off, the Lady darkly reminded her. He probably won't even pretend to look the other away. \n\nThe young photographer clapped his hands. \"Ready to get going?\"\n\nGwen squared her shoulders and checked her posture. \"What do I have to do?\" \n\n\"Like I said, just what you always do. I'm going to have you walk down from the building to the trailer, get Dart ready for the ring, take him up and put him through a routine.\" \n\nShe felt her stomach lurch. \"I'm really sorry, I don't have a routine ready...\"\n\n\"You don't have to,\" Danilo said brightly. \"I'll be calling for you. Are you alright with that?\"\n\nGwen felt a wave of hope-tinged relief surge through her, the Lady trying to inject a note of caution. She had not had someone calling out her program since childhood, and even then it had been easy enough for her nine-year old self to get through the instructions without much effort. It should be even easier now, she dared hope, given how much experience\u2014and age\u2014she had accumulated. Just follow the instructions, do what you're told...\"Oh\u2014of course, yes.\"\n\nGreat! Now,\" the photographer continued, \"a couple of rules. Number one, don't look at me or the camera unless I tell you to. Just pretend I'm not even here, go about your business. Two, be yourself. Trust your muscle memory, don't do anything you wouldn't normally do, just get your horse ready to ride, and then...ride the way you did that day at your house.\"\n\nThe Lady's need for order took over, deciding that if this perversion was to continue there should at least be some structure to it, and quickly presented a list of tasks to be done. Dart was already impeccably groomed, not much to do there, but it would only be correct if Gwen did it as well. He would have to be saddled...she looked around, wondering if his tack had been retrieved. \n\n\"Everything you need is in there,\" Danilo said with a nod towards the trailer, reading her mind. \"Take a look, get yourself familiar with it, do a quick groom and then we can send you back to the building.\" \n\nGwen stepped up into the cool shade of the equipment bay, Cricket and Hannah hovering just outside the door. Mrs. Danning had supplied the tack; a very high-quality dressage saddle, finely polished double-bit and reins. \"We made sure Dart was alright with the fit and feel of everything last night,\" Cricket assured her, \"then polished it up, not that it really needed it. I tried to guess how I thought you might like things arranged.\"\n\n\"Thank you for doing that. You know me too well.\" She stepped back out in to the warmth of the morning sun to where the photographer was waiting for her. \"I think I've got it. But...\"\n\nHis look changed to one of concern. \"But what?\"\n\nShe tugged at the lapel of her coat. \"Well, I don't normally wear this when I'm grooming or saddling up...it gets in the way...or these,\" Gwen said as she held out the gloves she clutched in her other hand.\n\n\"Then don't wear them now. Put 'em on when you normally put 'em on, okay?\" he suggested with an easy smile. She stepped back into the trailer, identifying a safe place to hang the coat before taking it off and carefully laying the gloves on the top of the collar. His assistant\u2014Marco, was it?-is really going to love this look, she thought wryly, not that the coat was hiding that much... \n\nDanilo was holding his camera when she returned, Marco a computer tablet. \"Ready?\"\n\nShe nodded grimly. \"Ready.\" \n\nHe led the way, Gwen following the young photographer, his assistant following her, no doubt with his eyes glued to your practically naked rear end, the Lady sniffed, until Danilo stopped at the cart path. \"Okay, go back up inside, and when you're ready, come on out and go tend to your horse. Remember, be yourself and don't look at me, okay?\"\n\nShe nodded and continued on alone, opening the door and carefully shutting it again. She stood there breathing in the smell of cool dirt mixed with the heady scent of horse, finding some peace and her bearings in its familiarity. \"Here we go,\" she muttered to no one, her mind firmly set to the task, and stepped back out. \n\nThe photographer was where she had left him, Marco a few steps behind, the others nowhere to be seen. She sharply reminded herself of the photographer's instructions and focused on Dart standing quietly in the shade of the trailer, her gaze steady as each step brought him closer. Gwen willed herself to let routine and muscle memory carry her. Danilo's advice to forget he was even here proved to be exceedingly difficult, the camera clicking rapidly as she walked by, continuing as he crossed behind her, circling. Probably getting some good shots of my rear, Gwen thought, the Slut reminding her he had probably gotten an equally good look at her front. \n\nDart turned his head to casually acknowledge her approach, shaking a fly off his ear in greeting. \"Hello friend,\" she murmured, her nose to his, very aware the photographer was not far off capturing the moment, \"do me a big favor and try and do what you can to make me look good, and I'll try really hard not to make you look bad.\" The horse dropped his head to nudge her chest in response, and Gwen set to work. She went through the motions of a brief grooming, not that he needed it, before retrieving the tack and saddle. They were of the highest quality\u2014of course they were, she thought with mild amusement, and true to Cricket's word, Dart seemed to accept them well. After a final check of the saddle's cinch, she retrieved her coat and put it on, saving the gloves until the horse's lead was untied. \n\n\"Okay, lead him up to the ring and stop in the staging area,\" Danilo softly directed, and as if on cue, the garage door began to roll up, Cricket and Hannah waiting inside. Horse and rider walked slowly, Gwen now staring at the grass in front of her but not seeing it, concentrating as she always had when preparing to compete, composing her thoughts and quieting her nerves, fighting her fear. She didn't look up at the young women as they stepped back into the shadows just inside the door, instead tearing her eyes from the path she had set for herself to look back at Dart and quietly praise the horse. \n\nThe door to the ring was open now as well, the space beyond cavernous and thankfully apparently empty. The cool breeze of air conditioning escaping the big building flowed past her, and Gwen was thankful that at least she would not be riding in the rapidly-building heat of the morning sun. \"Okay, take a quick break,\" Danilo said with a smile as he joined them, \"you're next rider in. Doing okay?\" He smiled and quickly huddled with his young assistant, the pair talking quietly while he reviewed something on the tablet. Once satisfied, he turned back to the group. \"Gwen I'm going to ask you to mount and dismount a few times\u2014I want to get that from various angles. Ready?\" She nodded and he moved to a spot ahead of her. \"Okay, when you're ready.\"\n\nGwen swung a leg up and over Dart's back six times, reversing the process each time to dismount and wait while Danilo moved to another spot. The photographer was finally satisfied and the rider a little surprised to find herself just a bit winded from the repeated effort. She was instructed to take her place at the entry to the ring. \n\nThe next couple of hours were almost anticlimactic, Gwen falling into old routines as the photographer called out half-passes and flying changes of leg, passages and piaffes, many times putting himself dangerously close to Dart's path as the camera fired almost continuously. There were several breaks too, horse and rider given a chance to briefly rest while Danilo reviewed his efforts on Marco's tablet. It was during the first break Gwen reached down to sweep away a bit of imaginary dirt on her thigh and froze. Despite the air conditioning, sitting astride a working half-ton animal produces heat, and heat produces sweat. In this case, the sweat had turned the sheer white fabric covering her legs and crotch nearly transparent, the trimmed triangle of her thatch now visible beneath. The shirt had also lost what little ability it had to provide cover, and her areolae stood out like obscene buttons beside the too-short lapels of her coat. The Slut suggested it was not just sweat making her pants transparent, and Gwen fervently hoped her undeniable arousal would be mistaken for perspiration.\n\nShe urgently motioned for Cricket to join her. \"Could you see from where you were how much this outfit shows?\" she whispered, flicking her eyes down her body in meaning.\n\nCricket nodded and giggled nervously. \"Yeah, sometimes, if you knew where to look...like when you were mounting and dismounting, your bum was kinda showing through your seat. Nobody seemed to mind, though,\" she added helpfully. \n\n\"Of course they didn't,\" Gwen replied with a roll of her eyes, and thought about asking whether it might be a good time to take a break and change into the spares Mr. Barofsky had prepared, but decided she would probably be losing the soaked garments soon enough anyways. The suspense as to if\u2014when, the Lady continued to remind her\u2014that was going to happen was beginning to weigh heavily on her. Memories of that night in the ring with Miss Ritter were refreshed and comparisons were impossible to dispel; though the fear of discovery she felt that night were diminished, her excitement from the sheer perversity of it all was even more pronounced. \n\nShe had not been called to remove anything by the time Danilo eventually called out \"exercise finished, rider go tend to your horse.\" Dart was spurred into a smart trot back to the staging area where Gwen waited for Danilo to instruct her to dismount, imagining her pubic hair standing out like a dark arrow pointing to her sex when the leg swung wide over the horse's back. She knew it was impossible to hide anything as she led Dart back to the trailer while Danilo continued to orbit and shoot, Marco doing his best to stay out of his brother's way. She thought about leaving the coat on while she unsaddled the horse but knew routine was routine and it would be a mostly useless gesture anyways.\n\n\"I think I've got what I need,\" Danilo announced after she had finished her tasks and given the horse a light kiss on the nose in thanks. \"Gwen, Rose is going to take you back to the house so you can freshen up, get some lunch, and then she'll take you out to the site for the afternoon shoot. Sound good?\" \n\nGwen turned in surprise. That was it? The light breeze against her wet clothes was a reminder that it might feel nicer against bare skin. \"Did I do something wrong?\" she blurted.\n\nHis look was one of genuine confusion. \"Wrong? No! Why would you think that? You were great, exactly what I think Mrs. Danning was hoping for. Your horsemanship is wonderful to watch! You and Dart really seem to connect. I can only hope I was good enough to get that on film.\" \n\n\"So, you don't need me to do anything else right now? No more posing?\" \n\n\"Nope, not until after lunch. The grooms will take care of Dart for you. You go take a shower and get something to eat. You were working really hard out there\u2014you're soaked!\"\n\nAnd you're sweaty, too, the Slut guffawed. Gwen blushed. \"Sorry, but it was warm in there, even with the air conditioning...\"\n\n\"Nothing to apologize for\u2014it was actually the look I was going for\u2014you know, two athletes in sync. Now go and relax a little\u2014we'll see you this afternoon.\" \n\nShe accepted the ride from Rose after giving Cricket instructions she didn't need and getting politely shoo'd away. \n\nThe break was brief but welcome. Gwen resisted the urge to relieve her sexual tension with a quick touch in the shower, promising herself something more with Tim later, the ever-present fear and nervousness of the afternoon schedule making the choice somewhat easier. She donned a robe for the lunch served by the pool and then she was back into her own clothes for the short ride to the afternoon's shoot. \n\nRose steered the ATV down a fragrant path surrounded by Southern pine into an open field Gwen remembered from her ride with Mrs. Danning. A small wooden barn had been added since she had last been here, impossibly weathered and worn for the short amount of time since its construction. \"That barn was on one of Mrs. Danning's ranches out west,\" Rose explained. \"She had it taken down piece by piece and rebuilt here at Mr. Castigalli's request.\" \n\nShe definitely spared no expense for this, Gwen mused as the ATV rolled towards a bus-sized RV set a short distance away. Danilo and his assistant were waiting for her there, Dart, Cricket, and Hannah nowhere in sight. Their whereabouts was her first question for the young photographer after they greeted each other.\n\n\"They're in the barn, out of the sun,\" he explained, \"figured since we'll be starting there...\" \n\nShe was led into the bus that was to serve as her dressing room, her hair set in a loose ponytail and makeup sparingly applied before she got into the jeans and t-shirt she had tried on the night before. Just as in the morning, one accessory was added, a folded red bandana wrapped and tied about her throat. At least no cowboy hat, she thought with some relief. She always looked so dumb in them...With a satisfied smile, Rose pronounced her ready and escorted her out the door to where the others now waited. \n\n\"Dart took the morning ride really well,\" Cricket volunteered before being asked. \"Not tired at all or favoring anything as far I can see.\" She looked to Hannah for confirmation and got a quick nod in response.\n\n\"Thank you both for taking such good care of him. It's such a relief for me.\" Danilo quickly set up the afternoon's events, an outdoor repeat of the morning's performance. Gwen could feel the heat of the midday sun beginning to reverse the effects of her shower even as he talked, the back of her shirt quickly sticking to her. The trickle of sweat forming between her breasts meant the front would soon be in the same condition.\n\nThe photographer again circled her as she walked to the barn through knee-high grass, gaze steady and head high as if she were walking to the winner's podium in the ring she had ridden in that morning. She was thankful to reach the shade of the barn but knew the stillness of the air inside would do nothing to dry her shirt. Its interior was a simple affair, and authentic; Dart loosely tied to a rail at the far end, hay piled deep on either side of the split upper floor. His tack was nearby as well, simpler affairs than what she had used for the ring but still high quality, the western saddle nicely broken in yet still in immaculate condition. She smiled at the grooming brushes she had been left. Even those were off a more basic design. They had apparently thought of everything. \n\nDart looked different as well, the braids gone, the hooves clean but no longer brightly polished. Even his tail had somehow been magically un-banged, regaining its more natural look, albeit just slightly shorter. Of course, only Gwen would ever notice the change in length...\n\nShe again pressed her nose lightly against the horse's while Danilo snapped away. \"Take two,\" she murmured, \"you were perfect this morning. Can we try it again?\" She worked at her accustomed pace to ready him, the effort and the still heat of the barn soaking her, a wet spot beginning to stain the tight denim between her legs. It's just sweat, she tried to convince herself, nobody's going to think you've wet yourself. Maybe they'll think it's something else, the Slut teased. \n\nThe shoot progressed as the morning's had, Gwen leading the horse from the barn before being asked to mount and dismount while Danilo orbited the pair, Gwen certain her breasts and the spreading dark spot would be impossible to miss on the images he was capturing. Danilo called out her moves from there, more trotting and galloping as would be natural for a horse and rider in this element, light on the technical maneuvers they had expertly displayed in the ring. There were frequent breaks too, chances for Gwen to confirm just how transparent her shirt had become and how much her wet spot continued to creep down the inside of her thighs. Just like before, she was not asked to change into the fresh clothing she was certain was in the RV, or just remove it altogether. ",
        "And then it was over, Gwen riding Dart back to the barn's open doorway before dismounting to lead him in, using buckets of water and sponges to cool down the sweating animal, giving him the customary kiss on his nose when she had finished with him. Gwen knew she should be relieved that she was still dressed, albeit showing much more than would be right in polite company of course but still leaving at least a little to the imagination; instead she felt disappointment in not being asked to at least go topless or even further\u2014the cool breeze against her sweat-soaked skin would have been refreshing, she reasoned. Cooling off with a sponge bath right now might make a good photo...she dismissed the thought. Mrs. Danning wanted classy, not slutty, and she was not about to volunteer that pose anyways. \n\n\"That was awesome!\" Danilo gushed with genuine enthusiasm. \"You're done for the day! Go and relax\u2014you've earned it. Rose will run you back to the house.\" \n\n\"And we'll get Dart back to his stall,\" Cricket volunteered. \"Nothing to worry about.\" \n\n\"I'm not,\" Gwen replied with a smile. \"I know you've got it.\" She turned to Danilo. \"What's the plan for tonight? Do I have more wardrobe I have to try on? I didn't think Mr. Barofsky designed anything else...\" \n\nThe young photographer nervously averted her gaze and began to walk away from the others, motioning to Gwen to follow. He walked until the group was out of earshot, but lowered his voice anyways. \"There's, uhh, no wardrobe tomorrow\u2014not really, anyways, if you know what I mean,\" he said, continuing to study the ground. \"If you're still okay with that, that is. I mean, if you've had second thoughts about that I might be able to work with what I've already got...\" It was clear that was not what he preferred. \n\n\"No, I said I would,\" Gwen replied steadily, unsure if her tone did enough to make it sound like it was her obligation rather than her wish. \"Where?\"\n\n\"Oh, I've got another spot picked out a couple fields over...very private,\" he assured her.\n\n\"So not a lot of people will be there?\" \n\n\"Just the same people as today.\"\n\n\"About that...your assistant...he seems...young?\" \n\n\"Marco? He's eighteen, but I promise he'll be very professional about\u2014you,\" he stammered. \"He hasn't said or done anything I should know about, right? If he has, please tell me and I'll beat his butt.\" Gwen's look of surprise made him hurry to continue. \"He's my brother, so I can do that,\" he explained. \"He graduated high school earlier this year, wants to follow along in the family business so to speak, so I hired him to make sure he understands having the Castigalli name doesn't prevent you from doing grunt work. If you'd rather he not be there\u2014\"\n\n\"No, that's alright,\" Gwen reassured him, \"as long as you think having to spend his day looking at a n\u2014\" she stopped, some small part of her not wanting to say the word naked and therefore admit she knew that part of the plan\u2014\"an old woman won't be too much for him.\"\n\n\"Stop that. You might be older than him, but I'll bet you still turn heads. Younger men find mature women with your kind of confidence very attractive. So, uhh, I'd like to get an early start, is that alright?\" \n\nThe Lady laughed at the blurring of confidence and immorality. \"Of course, How early?\" \n\n\"Well,\" he hesitated, as if delivering bad news, \"I'd like to get some photos in the early morning light? Can Rose pick you up at 6?\"\n\n\"That'll be fine. And no wardrobe?\" \n\n\"Not much.\" He smiled weakly. \"We'll get you squared away when you get to the site. Still alright?\"\n\n\"Still alright.\" The photographer excitedly repeated just how pleased he had been with the results of the day as they walked her back to the waiting ATV, Cricket and Hannah heading to the barn to tend to Dart after they had said their goodbyes and the vehicle had pulled away at a cautious pace. \n\nShe was dropped off at the house a few moments later, Michelle waiting at the door for her and escorting her up the wide central stairs to where Tim waited by the pool. He was slouched in a lounge chair, the robe about his body opening at the knee and getting dangerously close to exposing him further up, a beer in his hand, and a smile on his face. He looked up as she bent to kiss him. \"Good day?\"\n\n\"Good day,\" he rumbled. \"You?\"\n\n\"I didn't get fired, so I guess we get to stay the night. Did you shower already?\"\n\nHe grinned. \"Swim.\" \n\nGwen knew he had not packed a bathing suit either and smiled. \"Show off. Want come help me clean up? I want to hear how your day went.\" \n\n\"I, uhh, would love to, but I think you have an appointment...\"\n\nMichelle hurried in with the glass of wine Gwen had asked for on her way up the stairs. \"Madame, would you like me to arrange a limousine to take you wherever you might like to go tonight? I understand you will not be needed again until tomorrow morning.\" \n\nGwen laughed. \"No, I think we would like to stay in tonight, if that's alright.\"\n\n\"Of course! I will arrange for your dinner right away. In the meantime, your massage therapist awaits you any time you are ready.\"\n\nShe looked at the woman in confusion, then at Tim. \"Your appointment,\" he suggested. \n\nGwen still wasn't quite sure she had it right. Massage?\"\n\n\"Yes Madame, Madame Danning makes her massage staff available for her guests after a day of riding. And as you are a particularly honored guest...\" \n\nMemories of the massages Miss Ritter would give as a reward for good behavior came to mind, clinical and a bit rough but certainly therapeutic, and even her instructor's touch felt erotic when it was the only touch she knew. But her most recent experiences with the feel of more caring hands had been more pleasant in most ways. She would rather have Tim's hands on her at the moment, but there was time for both; having the aches and pains worked out first would make working out the lust that much more enjoyable. She hurried through her third shower of the day and returned the veranda just ahead of Michelle.\n\n\"If you would follow me, Madame?\"\n\n\"May my husband come with me?\"\n\n\"Of course! There is room for Monsieur as well.\" \n\nTim smiled and held up his glass. \"Can I have my beer in there, or is it off-limits to alcohol?\" \n\nMichelle laughed. \"Liquid spirits help soothe the human one. I will check on you from time to time to ensure your glass does not become empty.\" \n\nThe couple was escorted down a hallway to a warm softly-lit room large enough for the four massage tables in it as well as the chairs and sofas scattered along the walls. A buxom woman in her thirties greeted them, auburn hair framing black-rimmed glasses set on a pleasant face. \"Good evening, my name is Margaret.\" She motioned to the first table. \"Ma'am, if you would disrobe and lay face down on the table, I'll be glad to begin. Sir, please feel free to take a seat anywhere you like.\" \n\nGwen waited until the woman turned back to the table holding her supplies before slipping off the robe and giving it to Tim. She draped the provided towel across her buttocks and closed her eyes as the therapist turned back to her. \"Do you prefer oil?\" the voice next to her ear asked softly. \n\nMiss Ritter had never used it, but Natalie had shown her the benefits...\"Yes, please.\" \n\nIt was warm against her skin, making it tingle just a bit as firm feminine hands pushed the liquid across her shoulders and the base of her neck before beginning to knead and push at the muscles beneath. Gwen let out an involuntary groan of pleasure at the feel of soreness exposed and pushed away by strong fingers. \n\nThe fingers lightened on her skin. \"Too hard?\" Margaret asked softly.\n\n\"No, just right,\" Gwen mumbled. \"It's very nice.\" \n\n\"Just let me know if my touch becomes uncomfortable.\" \n\nThe fingers took their time working up her neck, probing and pushing then backing off to gently stroke. Her ears were next, a spot Gwen had never realized how erotic having them touched and fondled could be until Margaret's attentions made her arousal flare. \n\nThe hands worked down Gwen's arms and she was surprised how the push of a thumb into the palm of her hand revealed soreness there as well. Miss Ritter had never been this thorough, always limiting her efforts to torso and legs, front and back. The always moving hands eventually retreated to where they had started, occasionally pausing their kneading and pushing on the muscles of her lower back to apply more oil. \n\nGwen felt the edge of the towel lift slightly. \"Would it be alright if I remove this to work on your glutes?\" \n\n\"Yes, that's fine,\" she murmured, and felt cool air on the freshly exposed flesh. A splash of the warm liquid followed, splashing on one cheek of her ass\u2014a little like Tim finishing on me, she mused, although his doesn't tingle like that\u2014then the other. Margaret spread it around with gentle swirling strokes that eventually turned into a firm press of her fingertips to reach the sore muscles beneath. The hands left to deliver another splash at the base of her spine, the aim apparently bad as Gwen felt a rivulet running down the valley between her cheeks, eventually tickling its way across her rosebud as it obeyed gravity. \n\nMargaret must have noticed it too, her finger deftly inserting itself between Gwen's partly spread thighs to land just short of her most intimate spot and catch the stray droplet. She dragged the oil back up the way it had come, Gwen twitching in surprise while her puckered ring reflexively winked. \n\n\"Sorry, I didn't mean to startle you,\" the therapist soothed, her fingers already working the remains of the stray oil into the skin it had been intended for. \n\n\"That's alright,\" Gwen quickly answered, not wanting the woman to become cautious now. \"I'm glad you got it before it got all the way\u2014down there.\"\n\n\"It's all natural, very safe, even down there,\" the woman softly reassured her, continuing to work. \"Many of Mrs. Danning's guests will attest to that.\" Her hands and fingers worked all of Gwen's rear end, several times coming within fractions of an inch of her rosebud but never actually touching it, the muscle involuntarily flexing in invitation each time. \n\nMargaret's fingers came just as close to the lips of Gwen's sex after she had allowed her legs to be parted more to allow access to her inner thighs. The hands lingered there for some time before moving down again, working calves and delivering an incredible foot rub.\n\nGwen stifled a groan at the removal of the hands as Margaret bent by her ear. \"Mrs. Nelson, would you like to turn over now?\" The return of the drape was not offered, and she did not ask for it, rolling over to look up at the large breasts covered in green polo shirt partially blocking the face beyond before closing her eyes again. Her face was massaged, another delightful first, and she again looked up to find Margaret's chest hanging inches above her while the therapist bent to work her upper body. She began to straighten and Gwen closed her eyes again, unwilling to be caught looking. \"Mrs. Nelson, I know many of the female riders get sore breasts after riding, even some of the men. I can take care of that if you like, but if you find my touch there uncomfortable...\" \n\n\"Ohh\u2014uhh, they are a little sore, yes...I don't mind if it's not too much trouble,\" Gwen stammered over the Lady's protests. The woman's mostly innocent touch so far had fanned her arousal into full flame; it would only take Tim\u2014or herself\u2014a couple of minutes to finish the job once they were in private. This was not going to make delaying that any easier, she knew, but Gwen wanted them touched regardless of whether it was proper or not.\n\n\"Not at all. It's something I do for many of Mrs. Danning's guests.\" She closed her eyes as Margaret retrieved more oil and could sense the woman's body bent over her head as a dollop of warm liquid was placed above each mound. Fingers circled slowly, the pressure they had been applying gradually easing as they moved on to the slopes of Gwen's pert breasts but still pushing into the soft flesh enough to find spots of soreness. The therapist worked deliberately, hands circling and scooping the orbs, alternately squeezing and smoothing, finally making their way to erect nipples to lightly rub and twiddle them between two fingers. And then the hands were moving further down her body, probing her ribcage and stomach while the Slut listed all the ways she might ask Tim to satisfy her back in the privacy of their room. \n\nGwen guessed Margaret felt she had pushed the line of decency far enough after the woman spent little time at her midsection, thankfully staying away from the points where her legs met her hips and any lingering touch might cause an embarrassing reaction. Firm hands continued down to the tops of her thighs and beyond, and Gwen was surprised to feel firm palms reverse their course down by her ankles, working their back up to the as-yet untouched sides of her hips. They were gently rocked and pushed to loosen them, making Gwen's breasts wobble from the effort before the fingers went back to work, casually sliding through the neatly trimmed thatch as if oblivious to its presence. You were wrong about the line, the Lady said grimly, but Gwen had no desire to draw one now. The fingers began to glide lower, working towards the inside of legs that had opened on their own to allow better access without seeming too obvious. Just as when she had been on her stomach they teased under the guise of soothing sore muscles, coming tantalizingly close to her labial lips as Gwen fought the urge to rotate her hips to encourage the contact. The fingers retreated to again gently swirl on the skin between Gwen's hipbones, and the heel of a palm that rested just above her mons was a teasing annoyance\u2014a couple of inches lower would be nicer and embarrassingly effective...the urge to surrender and give her body what is so sorely wanted was becoming impossible to ignore. Fingers attached to the palm landed lightly on the top of her mons, and her hips involuntarily twitched in response. \n\n\"Everything alright so far?\" Margaret murmured.\n\n\"Oh\u2014yes, wonderful...\"\n\n\"If you like, I can take care of that last little bit of stress you appear to be carrying...\" Her fingers gently pressed down on the puffy swell beneath them, stroking. \n\nGwen's eyes again flew open, this time to see the masseuse standing beside her, smiling back, waiting for a response. She had no doubt what was being suggested; the story of Yvette McCallum's first job had been in the back of her mind since she had laid down. If it truly was as acceptable to both parties as she had made it sound, would it be so wrong to accept Margaret's implied offer now? The slut was emphatic in her belief it was. \"Is that, uhh allowed?\"\n\n\"In addition to being licensed therapists, all of Mrs. Danning's massage staff are trained in sensual massage. She believes sexual release is vital to overall physical and mental well-being. While it might be frowned upon in a more public venue, it is encouraged here if her guest desires it. Provided both you and Mr. Nelson are comfortable with that type of massage, of course.\" \n\nGwen's arousal made that all sound completely sensible and she turned her head to look at Tim, silently asking for permission. He shrugged and spoke for the first time in nearly half an hour. \"If you want,\" he said, his legs crossed to hide the erection his wife's massage had inspired.\n\nShe turned back and closed her eyes, decision made, thinking quickly, not wanting to make eye contact with the woman whose hand was even now turning gentle circles in her thatch. To accept that kind of offer from a complete stranger seemed so wrong, a new low...but the Slut was in charge now, arguing that Margaret had offered it and Tim had said alright and what would it hurt, really? \"Al-alright,\" she said after a deep breath. \"What do I do?\"\n\n\"Just lie there and let me take care of you...\"\n\nThe heel of Margaret's palm was now firmly planted just above her clitoris while her fingers began a light stroking on either side of Gwen's lips. Another digit pushed its way into her wetness, mixing it with the remains of the massage oil to make the sensitive skin tingle. Her clit tingled too as the finger began to expertly stroke it and Gwen's hips bucked in response, twitching uncontrollably at the overloading of her senses. Another hand soon joined the assault, a finger pushing deep inside her and curling up in search of her g-spot. She quickly found it, the touch pushing Gwen over the edge. She shuddered and let out a gasp to announce the arrival of her climax. Margaret seemed to know exactly what the woman on the table needed and desired, her touch perfectly applied as the orgasming woman twitched and convulsed, feeling the rhythmic contractions about her finger. \n\nGwen felt the hands leave after the last waves of her climax and was aware of a warm towel being gently draped across her. \"Relax, rest, take a nap if you want,\" Margaret whispered in her ear. \"Stay like you are as long as you like.\" \n\nThe woman straightened and looked at Tim. \"I'm ready for you now, Mr. Nelson,\" she said softly, patting the empty table next to Gwen. \"If you'd like to lie down on your stomach, I can begin.\"\n\n\"Oh\u2014uhh, well, I...I was just here to keep her company,\" he stammered, very aware of the almost painful erection he was sporting. It seemed dangerous to make it appear he was assuming the extra service provided to Gwen would also be offered to him\n\n\"Weren't you fishing today?\" the redhead asked. \"My husband's a fisherman, too. He always enjoys a nice massage after a day on his boat.\" \n\n\"You're married?\" \n\n\"Yes, I'm married, and yes he knows what I do here. It wasn't quite what he had in mind when I got my therapy certificate but Mrs. Danning is a very generous employer, I get good benefits and she pays for my continuing education. The hours can be a bit strange, but we don't mind. But enough about me. My boss likes to make sure all her guests feel pampered, so please-lie down. You seem to be carrying a lot of stress in your shoulders. Would you like me to work that out for you?\" \n\nGwen laughed from her own table, too relaxed to even open her eyes. \"Go ahead, Tim. I think you'll like it.\" \n\nHe cautiously rose, doing his best to surreptitiously pin his cock against his stomach so as not to tent the robe, or worse yet, have it poke out between the flaps. He waited until Margaret had her back turned to where her oils sat before hurriedly shedding his cover and lying down while arranging the drape across his ass, trapping the treacherous beast beneath him. Firm hands soon began to work tired muscles, and Tim groaned appreciatively. \n\nThe massage was good, good enough to make his cock temporarily forget it had been hard, at least until she asked for permission to remove the towel to work his butt. The attention given the firm muscles of his asscheeks seemed innocent enough, at least until Margaret went a bit lower, massaging the insides of his thighs, casually brushing against the bottom of his sack and the skin between it and his asshole. Tim stiffened and held his breath, unsure where the next touch might land, his length fighting to regain its length beneath his weight. \n\n\"Shhh,\" Margaret soothed gently caressing a cheek, \"relax. Breathe normally.\" He did his best to do that as she worked her way down his legs, her touch both soothing and sensuous, his cock hard and unwilling to be lulled into a state of relaxed watchfulness again. \n\nHis feet got the same sumptuous treatment Gwen's had\u2014he was thankful they had at least been rinsed in pool water after spending the day in his work boots\u2014and then came the dreaded request to \"turn over.\" \n\nTim hesitated, unsure how to gracefully explain why he couldn't, knowing his hard on would not magically wilt away any time soon. \"I, uhh...\" he mumbled into the cushion surrounding his face. ",
        "\"Would you like your drape back?\" Margaret asked softly, guessing the reason for his reluctance. \n\n\"Yeah, that would be great...\" The transfer from stomach to back was performed with a minimum of fuss, Margaret holding the towel between her and his midsection while smiling over to where Gwen now sat watching. Still, the cover could not hide the sizable lump beneath it. \n\nTim was given the same view of the therapist's breasts that Gwen had gotten, hanging just inches from his mouth as she worked his chest, moving as far as she could down his stomach until moving to his side to work down past his towel-covered midsection. Just as she had with Gwen, Margaret eventually finished with his legs and moved back up. \"Would it be alright if I remove the drape now, Mr. Nelson?\"\n\n\"Well, I, uhhh...\" he stammered for a second time. \n\n\"Have an erection?\" Margaret asked softly. \"Please don't be embarrassed\u2014I'm flattered. I like to think it means I've been doing my job. Don't worry, I'm not offended at all\u2014they showed us what they looked like in massage school and I've seen plenty of them since and massaged more than a few of them here. So, may I remove your drape and continue?\"\n\nTim kept his eyes closed, unwilling to look at the woman, waiting for Gwen to object and call a halt to this. Being part of Cricket's education had been one thing; this seemed like a step in another direction. \"Uhh, sure, okay, I guess,\" he finally answered, and felt the weight lift from his hips. He had this brief absurd image of his cock springing up like a freed Jack-in-the-Box but knew that wasn't the case, that instead it was just lying there, laid flat by its own weight, hard and expectant. \n\n\"It's beautiful,\" Margaret said, and Gwen had the feeling the compliment had been addressed to her rather than the owner. \n\n\"Uhh, thanks?\" a blushing Tim replied with still-closed eyes, unsure what the proper response to having your dick openly admired was. \n\n\"Would you like me to finish my massage there?\" Again, Gwen felt the question was directed at her, and Tim was thankful she could respond before he was forced to. \n\n\"Please,\" she replied with a smile and a nod to her husband. \n\nThe next ten minutes were an excruciating tease for Tim and not one he ever had a thought of stopping. Margaret worked all round the twitching shaft but never touched it with anything other than seemingly accidental brushes and swipes, the precum that was now leaking copiously from the tip casually spread about once it had dripped onto his stomach to mix with the oil already there. He shivered when the first fingertip was slowly drawn up the length from balls to the tip, anxious for the next stroke only to be disappointed when the finger resumed its gentle smoothing and circling of the skin above his hips. \n\nTo his relief the fingers began to find their way to his cock with more frequency, gently stroking and swirling at first but gradually becoming more firm as the therapist's other hand joined in. Gwen watched in fascination, making mental notes for future practice after quickly judging her own efforts amateurish compared to this woman's confident and practiced touch, so professional in her manner despite the task she was performing. \n\nTim groaned when the hands left him...he was close, so close to coming, to giving his tormentor a good look at the mess she was about to make. He opened his eyes in time to see a folded towel being placed on his chest and stomach from neck to just above the engorged head of his cock. Task completed, Margaret smiled at him reassuringly and returned her focus to his manhood. It did not take her long to get him to streak the dark terrycloth with ropes of his semen, her fist expertly wrapped around just the right spot on his shaft with just the right amount of squeeze while he thrust lewdly against it. She milked him with long, slow strokes to induce the last few drops to his tip, then collected with a delicate fingertip what she had pushed out and wipe it on the towel. Satisfied he was indeed finished, Margaret covered him as she had Gwen, told him to stay as long as he liked, then quietly left the room.\n\nAfter a few moments, he turned and smiled at Gwen. She smiled back and held up a bottle. \"Would you like your beer now?\" \n\n\"I thought I emptied it.\" \n\n\"Michelle brought a new one while Margaret was, umm, tending to you.\" \n\n\"Oh.\" With an effort, Tim sat and swung his legs over the table, then rose and took the offered drink. \"When? I didn't hear her come in.\"\n\n\"Just a couple of minutes ago, just before you...finished.\" \n\n\"Oh.\" \n\n\"And I see I got another glass of wine while I was on the table...\" \n\n\"Yeah, Michelle brought you one while you were having your chest done.\"\n\n\"Oh.\" They looked at other and shook their heads in a \"I can't believe we just did that\" kind of way. Tim bent to kiss her. \"Was that okay? Are you okay?\"\n\nGwen smiled. \"It was definitely different but yes I'm okay. Are you?\"\n\n\"I'm okay. Relaxed. Are you hungry?\"\n\n\"Famished.\" \n\n\"I wonder if dinner's ready. I really want to hear about your day.\""
    ],
    "authorname": "BusyBadger",
    "tags": [
        "husband",
        "wife",
        "massage",
        "clothes",
        "outdoors",
        "handjob",
        "cfnm",
        "cfnf"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-03-ch-28"
}