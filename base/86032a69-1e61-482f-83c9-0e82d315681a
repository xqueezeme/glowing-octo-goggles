{
    "title": "Firecracker Ch. 02",
    "pages": [
        "*I'm back, Baby*\n\nThe boy woke up, as he always did, opening his eyes to see the protective circle, etched in deep blue lines on the ceiling above his bed.\n\nHis mother's hand was on his shoulder. The woman was tall, fierce in a way that many had a hard time describing. Her hair was fire-red. Her eyes had a ring of silver around the pupil, very close, very thin. She was dressed in boxers and a tank top, her breasts were sagging and flat from so many children, but she still looked regal as a queen.\n\n\"Wake up, Willem. It's time.\"\n\nThe boy yawned and rolled over.\n\n\"Willem, it's nearly midnight, and there's a new moon. We need to get this done tonight. Your birthday is in a few days, we will never get another chance.\"\n\n\"Mommy?\" The boy whispered sleepily, rubbing his eyes with one small uncoordinated fist. \"What are we doing?\"\n\nThe woman gently kissed his tussled dark head. \"I'm going to make you strong, sweetie. I'm going to make you a hero.\"\n\nHe rolled out of bed, pawing sleepily at his eyes. His faded Muppet Babies pajamas were worn at the knees and elbows, a few inches above his pale ankles.\n\n\"Come on, sweetie. I'll get you some Graham crackers and milk when we're done. It wont take very long at all.\"\n\n\"Kay Mommy.\" Willem murmured.\n\nThey went down to the kitchen, and Willem eyed the chaos boredly. Mommy was always drawing things on the floors and the walls. He had gotten in trouble at kindergarden for drawing some of them in his pictures. The principal had called Mommy, talking about what sounded like 'Satan war ship.'\n\nWillem had asked Mommy if that was a new TV show, because it sounded awesome.\n\nThe dining room table had been shoved into the kitchen. A huge basic pentagram had been carved into the floor ages ago, but Mommy had outdone herself.\n\nNormally the pentagram was in white, but she had filled in the carved lines with black this time. She had scrawled layers and layers of intricate runes with black and red and yellow and ochre colored chalk. Some blue and white runes were in the middle. Willem knew that white and blue were protective, and the other colors meant trouble.\n\n\"Be careful, sweetie-pie. Careful, don't smudge the chalk. I want you to sit in the middle.\"\n\n\"Can I have crackers, mommy?\"\n\n\"In a minute, sweetie.\"\n\nWillem picked his way through the chalk. He sat down on the small round pillow that Mommy had put at the center. He watched her with sleepy blinking eyes as she lit the multitude of candles. Normally the candles were white. He had seen her light yellow candles once or twice.\n\nThese candles were black.\n\nShe picked her way through, and put herself in the small bare crescent shape in front of her son.\n\n\"You are the fifth son of a fifth son, just as I am the fifth daughter of a fifth daughter. You will be more powerful than me, because you are born of a fifth daughter and a fifth son. One day, you will make all demons tremble.\"\n\nWillem yawned.\n\n\"Just a few minutes longer, Willem. Then we can have some crackers, and go to bed.\"\n\nShe started to chant. When she chanted, her voice became low and unrecognizable, like the snarling of a beast.\n\nWillem sniffled a little. The air was getting thick, and hard to breathe. His stomach hurt.\n\nHe felt... Hungry.\n\nMommy brought out a small mason jar, and he saw five pokey little lights buzzing around in it. Like fireflies. The lid of the mason jar had a pentagram drawn on it with red crayon. All of the flames on the candles went low. Nothing but tiny blue dots. \n\n\"Open wide, Willem.\"\n\nWillem obeyed. His front top teeth were both missing. He gave her his crooked gap-toothed mouth to fill.\n\nWith her elongated two fingernails, first and middle, she scooped up an immolation mite. Her fingernails were painted with tiny pentagrams. To contain it. The creature was ugly as sin, so small and stupid that it could not disguise itself even to humans. Like an ugly mutated wasp, far too many legs, swollen with poison. \n\nShe placed the dazed mite on her sons tongue.\n\n\"Swallow, my sweet.\"\n\nWillem started to cry. He swallowed it, but he whimpered with the pain. \"Mommy! It hurts! It stung me!\" He tried to get up.\n\n\"Stay in the circle, you little shit!\" She bellowed. She grasped his jaw. Willem froze and opened his mouth when the second mite came. He writhed as it stung the inside of his mouth, and as his body was wracked with pain and a kind of savage pleasure that his young body had no idea how to handle.\n\nEvery hair on his body was standing on end. His pupils were so dilated, that the brown irises were nearly gone. Every muscle was stiff. His eyes were wide and starey with fear and pain.\n\nThe third mite came, dropped from his mommy's long scoop of a fingernail into his open mouth. Like a mother bird, depositing some worm.\n\nHe cried out. He had stings stippling his small pink tongue.\n\n\"Two more, my sweet. Two more.\"\n\nWillem rose unsteadily, ready to totter out of the circle. His mother whispered a harsh word and suddenly invisible hands were clutching him from all sides, holding him still, wrenching his mouth open.\n\n\"Hold him, Izarys. Hold him till I'm done.\"\n\nA rumble came from the naked air. The grip on her helpless son tightened till he squealed with pain.\n\nHe seized, unable to move from the spot, unable to close his mouth, tears streaming from his dilated eyes.\n\nAt the fourth mite, Willem nearly lost consciousness. His mother slapped his cheek to keep him awake.\n\n\"Stay awake, love. I have the antidote right here, but we need to finish the ritual, one more, one more.\"\n\nHer son's face was swelling grotesquely.\n\nShe had to force the last mite in through his swollen lips. She started to chant as her son convulsed from the venom running hot and red through his veins. Steam rose from his pores. His flesh was swelling everywhere. His sweat was extremely inflammable.\n\nShe finished the chant, and suddenly the candle flames were back to normal. The light seemed normal. Sweat soaked her brow.\n\n\"That's enough Izarys.\"\n\nWillem dropped to the floor. His heels drummed against the floor as he convulsed, smearing the chalk lines. He wasn't making any noise, he had stopped drawing breath.\n\nShe plunged an old-fashioned syringe, with two holes for the fingers, into the swollen inner tube of her young son's neck.\n\nThe skin on his eyelids and around his lips was pale lavender. His breathing eased right away, but it took a few minutes for the swelling to go down enough for him to open his eyes.\n\n\"Why?\" Willem bleated. A helpless question, slurred by his swollen lips, and weak sobbing.\n\n\"You'll know when you're older.\" The red woman soothed.\n\n--\n\nWhen Willem woke up, his skin did not burn. He was not swollen up like an inner tube. His tongue was not blocking his entire mouth in a swollen pus-filled boil. He could open his eyes.\n\nHe was no longer five, but twenty-seven.\n\nHe was alone in bed.\n\nDisoriented, he wondered if the events of the last few months had been nothing but a feverish dream.\n\nThen the door opened and in the light from the bathroom down the hall, he saw the silhouette of a curly-haired head with small horns.\n\n\"I didn't mean to wake you.\" Isaac whispered.\n\nWillem turned onto his back and rubbed the sleep from his eyes. \"You didn't. Bad dream.\"\n\nIsaac closed the door behind him, and it was dark. Willem and the boy both had heightened senses, so Willem was still able to see his lithe naked form slip into bed.\n\nIsaac burrowed under the sheets, and Willem could feel the warmth of his body before the younger man actually touched him. Isaac rested his head on Willem's chest, and cuddled in close.\n\nWillem buried his cheek in Isaac's soft curly hair. The blunt point of one horn tapped against his cheekbone. They used the same shampoo, but Isaac had a smell all his own. Spicy.\n\n\"What was the dream about? If you don't mind?\"\n\nWillem brought his hand up and touched Isaac's cheek. The halfling gently sucked on the tips of his fingers.\n\n\"It was about when my mother fed me the mites.\"\n\n\"Did it hurt?\"\n\nWillem closed his eyes. \"It hurt a lot.\"\n\n\"Why did she feed you the mites? You said that they were innocent.\"\n\nWillem sighed. \"It's how the vessel works. With every demon I eat, I become a stronger vessel. Immolation mites are about as weak as demons get. If she had just taken a human off the street, and fed them a mite, they would have died. Even with the antidote.\n\n\"She needed the ritual. I was stronger because my father was a fifth son, and I was a fifth son. The ritual strengthened me. Once I absorbed the energy of the five mites, I was a strong enough vessel to eat a small imp a few weeks later. After the imp, I was strong enough to eat another imp without getting horribly sick.\"\n\nIsaac shivered a little. \"I saw what it was like with the Dreamer, and in that parking garage in Iowa. It must have been horrible, early on.\"\n\nWillem nodded, and then moved his fingers deeper into Isaac's mouth. He sucked. Willem could feel the halfling's cock against his hip. He could feel it twitch.\n\n\"It was. She was feeding me about once a month, and even being as careful as she was, I nearly died. More than once.\"\n\nIsaac abruptly spit out his fingers. \"Could you still die now? If there was a demon strong enough?\"\n\nWillem laughed. He turned onto his side and kissed Isaac full on the mouth. Isaac kissed back, his eyes still full of concern.\n\n\"I've been eating demons since I was five years old. My mother started feeding me full-sized demons when I was eight. I'm the strongest vessel I know. Maybe the strongest in the world.\"\n\nIsaac laughed, and rolled so he was on top, giving up any pretense of snuggling and grinding his cock into the other man's crotch.\n\nWillem smiled up at the boy on his lap. Willem's vestigial wings were flapping to keep balance. His horns were shiny and dark. Willem knew that Isaac liked to polish them.\n\nIsaac grinned. His elongated eye-teeth were just barely visible when his lips were pressed together. When he bared his teeth, they gave him a feral look.\n\nHis crimson eyes glowed in the dark.\n\nWillem ran his hands carefully up those slim hips. Isaac grasped their cocks together. He started to stroke. Willem groaned. Isaac's cock was velvety hot and soft, the foreskin was like satin against his circumcised cock.\n\nIsaac held their cocks together. Willem smiled up at the boy as Isaac rubbed the ball of his thumb over Willem's head, spreading slippery precome.\n\nIsaac bent down and kissed Willem's mouth. Willem felt the heat. He whispered the protective words.\n\nWillem gently bit those soft lips. Bit at the tongue that came out. Sucked on it. He reached down and stroked Isaac's cock, thrusting up with his hips.\n\nIsaac breathed out. The hot air surrounded them. Made the air crackle. Willem smelled hot cloth. The smell of singing fabric was a thoroughly erotic smell to him, by association.\n\nIsaac groaned and ground his cock into his lover's groin. Harder and harder until his breath was coming in frantic little pants. Willem gently teased one finger into Isaac's taut little asshole. Isaac's tail lifted, to give him better access.\n\nIsaac arched his back and his come came out in three spurts. The first landed on Willem's chest, the second one reached about as far as his navel. The third one just dribbled out into Willems coppery pubic hair. Isaac's vestigial wings flapped wildly, sending puffs of hot air everywhere, balancing him. His breaths were coming in great gasps.\n\nHe could feel the cool spurts of Willem's human come on his stomach.\n\nAfter a quick rinse with washcloths and beating out the corner of a pillowcase that had lit on fire, the two men slept soundly till morning.\n\n--\n\nIsaac was not a morning person.\n\nWillem knew better than to wake the sleepy half-demon, so he slid out of bed and pulled on a pair of boxers before going downstairs to check his computer.\n\nHe did his hour-long trawl of the websites he had linked to his main web page. He made a quick file of anything interesting. A series of grisly murders in Mississippi. A couple of missing person's reports. A fire in a closed factory. Ninety nine times out of a hundred, these were regular crimes. Nutjob murderers, random acts of arson, runaways, but every now and then...\n\nWillem checked his emails.\n\nHe quickly scanned and deleted all of the unimportant looking ones. Half were receipts of conformation of online shopping. Isaac bought most of his clothes and things online. Willem enjoyed buying video games, and he purchased his chalk and candles and the occasional bit of equipment from a Wiccan website.\n\nThen he went down to the more important emails. There were three. All from his employer.\n\nThe first one was debunking the grisly murders. It had just been a crazy suicidal teenager on a killing spree. Horrible, but human.\n\nThe second email was a working order. A demon that had been under tabs had gone crazy and raped half a dozen people at a campground in Wyoming. Willem had to get there and track it down.\n\nThe third email was the one that made Willem feel sick.\n\n--\n\n\"We're going to Wyoming!\"\n\nIsaac groaned.\n\n\"Hup! C'mon, sleepyface.\"\n\nIsaac made a crabby squeaking sound when Willem yanked off the covers. Then started rubbing his eyes.\n\nHe stretched like a cat, sticking his rump in the air, two-pronged tail lashing, while stretching out his arms and arching his back and with his little vestigial wings fluttering at the air. Willem reached in to give his ass a playful smack. Isaac yipped and rolled onto his back. His cock was hard, laying against his belly like a thick piece of meat.\n\n\"Isaac? If you can get all your things ready for a weekend trip in the next...\" Willem checked his watch. \"Ten minutes, then I'll give you anal when we get to the hotel.\"\n\nThe tips of Isaac's tail twitched, and Willem could see the pupils dilating. The half-demon practically sprang out of the bed and started yanking clothes out of the drawers.\n\n--\n\n\"I'm boooorrreeed.\"\n\nThe car was packed, and Isaac was bouncing in the seat. It was very hard to arrange air travel for Isaac, seeing how odd he would be to even the most cursory TSA checkpoint, so Willem was traveling a lot more often by car.\n\n\"Get the DVD player out and watch a movie.\" Willem suggested.\n\n\"I'm sleepy, and horny.\"\n\nWillem sighed. \"People will be hurt if we get there any later. I promised you anal, just remember that. And if you really have to go, jerk off in the car. I don't care.\"\n\nWillem looked out of the corner of his eye and saw Isaac giving him puppy-dog eyes. Willem took a deep breath and sighed it back out.\n\n\"Just a quickie.\" He grumbled, a small laugh underneath his grumpy demeanor.\n\nHe pulled the car to the side of the highway, pulling into the dusty hardpan behind a billboard. They still had the badlands ahead of them, and if they drove hard for the entire day, they would be close. Isaac hastily pushed his car seat back and leaned back in it.\n\nNo time for finesse, they had a lot of driving to do.\n\nWillem firmly groped the thick meat of Isaac's oversized cock through the soft cloth of Isaac's sweatpants. The half-demon groaned a little, twisting. Willem quickly turned the knob of the AC to full and murmured the protective words and yanking down his partner's waistband.\n\nDown went the underwear, and the pants, and Isaac's fat cock sprang to attention. Willem went down on the soft pink head with a wet and slobbery kiss. He roughly cradled the shaved pink balls, feeling the soft beginning of stubble. He pushed his fingers under and massaged Isaac's perineum, knowing that the little stretch of skin was capable of driving Isaac purely crazy.\n\nIsaac squirmed. He made adorable little squeaking noises as Willem went down deep, feeling the blunt head against the back of his throat.\n\nWillem went up slowly, sucking gently, before plunging down, letting Isaac's cock pierce past any resistance.\n\nWillem could smell singing cloth, feel how hot the air was getting, despite the AC. He slipped his fingers back and started to massage the taut little ring of Isaac's anus, going up and down in a quick pumping rhythm with his throat and mouth.\n\n\"Ah! Ahaaaah!\" Isaac yelped and jerked his hips. Willem choked slightly and stayed down long enough to suck out all of the come, sucking a little harder than necessary out of annoyance.\n\nIsaac yipped and squirmed a little until Willem detached and spat a mouthful of boiling-hot semen out of the window. \"Happy, my prince?\" He teased. Isaac just grinned and tucked his dick back in the sweatpants. Lazily swatting at a smoking drawstring. \n\n--\n\nThe badlands were hot and barren and alien. Driving through them was like driving between and around the craters on another world. Isaac was half-dozing, staring out the window when he heard the buzzing coming from the cup holder.\n\n\"Iz, my phone is ringing. Could ya pick it up?\"\n\n\"Sure.\" Isaac felt sluggish with the heat. In a good way. He had the old-fashioned flip-phone in his hand when Willem stopped him.\n\n\"Quick, Isaac. Check the caller ID first. Tell me who it is, and don't pick it up.\"\n\nIsaac heard something in Willem's voice that stopped him from trying to make a half-baked joke. He looked down at the screen.\n\n\"Screen sez Jo-Ann Whelk.\"\n\nWillem relaxed. \"She's from the agency, answer for me.\"\n\nIsaac flipped open the phone and answered. \"This is Willem Yeoman's phone, he's driving right now?\"\n\nThe curt voice that reached him made the warm sluggish feeling evaporate in a hurry. Made the two burgers in his gut do a slow greasy flop.\n\n\"I'll... I'll tell him.\" Isaac whispered.\n\nHe flipped the phone shut and Willem gave him a sharp worried look.\n\nIsaac looked down at his knees. \"Whelk said that another demon-hunter got there first and tried to catch the demon. The demon was wounded, but got away. Six people are dead and another five are missing.\"\n\nIsaac was looking at his knees, so he didn't see the look of pure alarm on Willem's face. The speedometer needle inched up from seventy to ninety. Isaac didn't see the resentment and anger and real fear.\n\n\"Isaac... I want you to call Whelk back and tell her to get you a room at a different motel.\"\n\nIsaac was startled out of his thoughts and he looked up at Willem, mouth already open and a slew of questions on the tip of his tongue.\n\nHe swallowed his questions when he saw how strained and pale Willem's face was.\n\nInstead of righteous anger, Isaac's voice came out in a timid squeak. \"Why?\"\n\nWillem took a deep breath. \"That other demoneater... It's not safe for them to know about you.\"\n\n\"Willem... You're going really fast.\" Isaac's small voice snapped Willem out of it a little. He looked down to see the orange needle trembling at just under 110 mph.\n\nWillem loosened his grip on the wheel enough so that color seeped back into his knuckles. The needle inched down until it hovered around the 80 decal. Speeding, but for Willem, that was normal.\n\nIt was very quiet. Isaac gave Willem a wry smile. \"Does this mean no anal?\"\n\n--\n\nIsaac turned on the radio and kept an eye on Willem. Mostly the speedometer. He had never thought about other demon-hunters. Never thought that they might be a danger to him.\n\n\"I thought you said that the agency was okay with you and me? Why do we have to worry about the other one?\"\n\nWillem's voice was calm, but Isaac could see the needle inching up again. \"I'm not a part of the agency. Neither are the thirty other demoneaters. We're not employees, we're 'independent contractors.' I don't meet them often, but I don't trust any of them. There's only one other that regularly does work in this continent. And even then, they're usually further south.\"\n\n\"Willem? Why do you call them demoneaters? In the agency, they always call you a hunter.\"\n\nHe laughed grimly. \"They distance themselves that way. They don't like to watch. They don't like the pure facts of it. When they call me and the others 'hunters', they can pretend that we are assassins. Soldiers, even.\"",
        "\"But up close, we aren't assassins. We're just predators.\"\n\n\"Willem.\" Isaac whispered. \"Speed.\"\n\nThe badlands on either side were blurring past at such speed that when Willem slowed to seventy miles per hour, the new (and still illegal) pace felt slow.\n\n--\n\nWhelk was a tri-state agent. She took care of Wyoming and the Dakotas. Because of low population, they only needed one agent and a handful of pencil-pushers to keep an eye on the three states. Most outbreaks happened in the poorer reservation areas in South Dakota. But this campground was closer to Devil's Tower in Wyoming.\n\n\"If I can get this taken care of quickly, I'll come back to this motel, kay?\"\n\nIsaac nodded, looking out the window. The badlands had passed them by, and they were in a little prairie town, a good twenty miles away from the Wyoming-South Dakota border. The original motel had been only a few miles from the campsite itself.\n\nWhoever the other demoneater was, Willem wasn't taking any chances.\n\nIt was a run-down motel 8. Isaac could only see a handful of cars in the lot, and the sun was hovering over the flat horizon like a pulsing orange ball. The flatness of the horizon was monotonous and a little frightening. Like being in the middle of a microscope slide.\n\nIsaac glanced at the sun through his dark glasses. He imagined a gigantic eye.\n\n\"I know you wanted to go with me to the campground, and I'm sorry.\" Willem had calmed down, now that they were near the destination. Isaac shrugged and leaned over to give the man a kiss on his copper-stubbled cheek. \n\n\"I'll just watch some TV. I'm glad I came. We saw some cool stuff today. Maybe on the way back we can slow down a little, see some sights?\"\n\nWillem pulled the car into a parking spot. \"That sounds great. I can't stay long, but maybe I can stretch my legs, and once we get to the room I might be able to give you a quickie.\"\n\nIsaac fumbled with his seatbelt. His hands were a little sweaty from earlier, so his fingers slipped on the surface. Willem had already slipped out of the car.\n\nIsaac opened the door. \"That sounds amazing, do you think we'll get a room with a view of the... Willem?\"\n\nIsaac straightened and saw Willem. The older man was holding onto the upper edge of the car door with a white-knuckled grip. The tendons in his arms were standing out like cables. When Isaac saw Willem's face he got a cold feeling in his stomach. Something was very wrong.\n\nIsaac whirled to see what Willem was staring at so intensely, with that guarded look of hatred and mistrust.\n\n--\n\nWillem felt his heart jackhammer at the sight of her smug face.\n\nHer hair had grown out. It surrounded her head in a flaming puff, blowing in the wind. And did Willem detect a hint of grey?\n\nHe did.\n\nShe still retained that strand of thin fierce beauty that had stayed with her. Even after all the kids. Even after all of the indignities she had suffered at the hands of demons.\n\nShe looked fierce in the light from the setting sun. The oversized camo jacket on her thin shoulders, the sleeves blowing in the wind. Her thin but child-ravaged body on display in a tight tank top. Her nipples were poking against the thin fabric. The size and shape of pencil erasers.\n\n\"As if fucking men wasn't enough for you. Now you're fucking demons.\"\n\nWillem found his voice, even though he could have sworn it wasn't possible. \"Izarys is a demon, last time I checked. You don't have a problem fucking him.\" As he spoke, he moved around the back of the car, planting himself between her and Isaac.\n\nWillem's eyes darted to the ripple in the air above her shoulder. \"Isaac, get back in the car. I'll explain everything. You're coming with me.\"\n\nHer eyes flashed. They were all silver now. Once upon a time, they had only had a ring of grey. \"You can't leave now... I need to speak with you. That's the only reason I came up to this wasteland anyway.\" Willem bit his lip and refused to rise to the bait. That dangling fishhook heavy with six dead and five missing.\n\nIsaac crept back into the car, closing the door and locking it, looking out with his wide concerned eyes. His eyes flashed cherry red through the glass. He was well fed. Willem kept him well fed.\n\nWillem darted around the car, pointedly ignoring his mother and that shimmer above her shoulder. Even though taking his eyes off of her made every hair on his body stand up with fear. Willem thought he could feel every individual drop of sweat becoming pregnant on his skin.\n\n\"Willem, it's been three years, wont you even listen to what I have to say?\" He could hear the sob in her voice. How much of it was real? He didn't even know anymore.\n\n\"Mother?\" Willem held the car door open and kept his eyes fixed on the shimmer in the air. Izarys was too powerful to ignore, and it was easier than looking at her.\n\n\"Yes?\"\n\n\"I don't know where she is, but whoever she is, you're going to have to find someone else. Because I wont help you. Not with this, never with this.\"\n\nWillem got into the car, and for a paralyzing moment, he couldn't get the key to go in. His fingers were slippery with sweat, and the keyring seemed obscenely big, so many keys and fobs. Isaac was staring out the window with single-minded intensity. At the woman who was walking closer.\n\nWillem started the car and squealed off. The rapidly spinning tires left swatches of hot rubber on the pavement of the parking lot. He didn't relax until they were back on the road. He kept the speedometer needle just a hair above the speed limit the entire time.\n\n\"So.\" Isaac said softly. \"Your mother?\"\n\nWillem glanced at the boy in the front seat. He wasn't sure if Isaac looked nervous and out of sorts from meeting his mother, or if Isaac was just reacting to how nervous he was.\n\n\"The other demoneater.\" Willem whispered. His arms and legs felt cold, the sweat on his body felt cold. His fingers on the wheel felt trembly. He hated how she could do this. How quickly she could make him feel like a scared and helpless kid. \n\nFacing down a mason jar with a pentagon in red crayon.\n\n\"All you need to know right now, is that she's crazy. She's crazy, and you are worse than nothing to her. If I can help it, she wont ever see you again.\"\n\n--\n\nIsaac and Willem checked into the original motel. Willem took a heavy black suitcase out of the trunk. His personal clothes and toiletries were in a small blue duffel.\n\nAs soon as they got in, Willem opened the suitcase and started taking out slim sheets of paper.\n\nHe pasted four of the sheets on the door with little blobs of poster-tac. Each sheet of paper was scrawled with runes. \"Protection.\" He muttered, as he worked.\n\nHe took a fat jar full of some kind of lotion out of the suitcase. He put on a single latex glove before spreading a thin clear layer of the lotion around the entire edge of the one window. Isaac slowly walked to the bed and sat down, watching Willem work.\n\nThere was something deeply disturbing about the fastidious way Willem set up the protections.\n\nIsaac couldn't think of it. He watched Willem screw the lid of the jar shut and gingerly take off the latex glove, keeping the wet fingertips on the inside before throwing it away.\n\nIsaac was about to open his mouth, but then he realized that Willem still wasn't done.\n\nHe was closing the bathroom door now, and pasting more of those long thin sheets of paper on the door. He was mumbling. His voice was strained and stuttering, so different from the normal lazy way he spoke.\n\n\"If you need to go, go now... Nothing will tak... I mean attack you while I'm here, but the bathroom... Dangerous. Too many wires, pl-plumbing. Yeah. Safer to close it off.\"\n\nIsaac finally put his finger on it. Willem's shoulders were rounded and his back was hunched. Even his neck was bent down. He kept looking up, over his shoulders, everywhere but at Isaac.\n\nWillem was terrified.\n\nIsaac closed the black suitcase with fingers that felt too stiff. He sat on top of it. He waited patiently for Willem to finish sealing off the bathroom door, waited for Willem to come back to the suitcase.\n\nSeeing the half-demon sitting quietly on the suitcase seemed to snap Willem out of it.\n\nIsaac spoke slowly and firmly. \"There are six dead people, and five people missing. The longer you spend here, the more likely it is that those five people are dead. The more you worry about me while you're there, the worse of a job you'll do.\"\n\nWillem said nothing. He sat down on the corner of the bed. He looked Isaac in the eye. For the first time since they had seen his mother. Isaac stared him down.\n\n\"Take me with you. You just said that nothing would attack me while you were with me. I trust you.\"\n\nWillem silenced Isaac by grabbing one horn and yanking the young demon up, squashing any further words with his hard mouth.\n\nIsaac took the kiss passively, surprised. Seeing Willem so nervous, seeing his moods shift like this, it was a whole new flavor of unsettling.\n\n\"You're right. Of course you're right.\"\n\nWillem took a shaky breath and looked around the room. Seeing the protections that he had put up.\n\n\"The campground is just a mile away. Short drive.\"\n\n\"Want me to do it?\" Isaac whispered. \"Give you a chance to calm down?\"\n\nThat brought a ghost of a smile to his lover's face. A touch of the old him.\n\n\"You driving, Firecracker? How exactly is that supposed to calm me down?\"\n\nThis time Isaac kissed him. \"If I can't drive, can you at least promise to tell me what's going on? You told me about how she forced you to eat the mites, but you haven't told me anything that explains this.\"\n\nWillem took a deep breath. \"She's obsessed with creating demoneaters. She's one, and she is directly involved with creating three of them in all. Myself, the guy who takes jobs in central america, and a seventeen year old girl that she's still training. I'm her only son in the business, but I have...\" His mouth twisted into a heartbreaking smile. \"I have the best pedigree.\"\n\nHe was packing his black suitcase, taking it out to the car. Isaac followed, quickly adjusting his hood and mirrored sunglasses. The sun beat down on him, but the heat didn't bother him like it bothered humans. Or even Willem.\n\n\"The one in Guatemala, his name is Vincent. He's a distant relative. She bullied her aunt into having five kids, and then bullied her cousin into having half a dozen kids until a fifth son of a fifth son was born. And the girl... She's been almost consistently pregnant since she was twelve.\"\n\nIsaac stopped. Startled. \"But you said she was only...\" \n\nWillem nodded curtly. Slamming the trunk door. He opened the hood of the car. The engine was overheated from the long day, steaming. \"Seventeen. My mother doesn't care if it's a boy or a girl, but it needs to be the fifth of it's gender. The girl's had four sons and she's not even eighteen.\"\n\nWillem laughed, and Isaac had never heard an angrier sound. \"I'm sure there are half a hundred families from miles around that got seeds from my mother's babyfarm.\"\n\n\"Will...\" The older man stopped his jittery angry rant for a moment when his young lover hugged him from behind. Taking both of his hands and holding them still.\n\nWillem couldn't believe how he sounded. He felt like he was unravelling. And it was all her fault. Slower, calmer, he continued.\n\n\"I'm her biggest achievement. She's the fifth daughter of a fifth daughter, and a fifth son of a fifth son was my father. She started feeding me from the earliest age possible. She had a plan. A dynasty of fifth-sons and fifth-daughters. Getting more and more powerful as the bloodlines stacked up. She wanted to put me out to stud with half a dozen fifth daughters.\"\n\nIsaac felt cold, and he could barely hear what Willem said next. \"I don't want anything to do with her fucked up plans. I've been nothing but breeding stock to her all these years. But she has it tangled up in her fucked-up mind that I wont do it because I'm gay. She's tried to hurt people close to me before. Sometimes, she gets through my defenses.\"\n\nThis felt so wrong. Hearing Willem like this. Hearing him sound so scared, and defeated already.\n\n\"Fucking faggots.\"\n\nIsaac practically jumped a foot in the air. He had been hugging Willem from behind for half a minute, and another man in the lot had taken notice. A sneering stoop-backed old man with his lower lip bulging around a pinch of tobacco, taking a suitcase from the bed of a lovingly maintained old truck the color of Isaac's eyes.\n\nIsaac could feel the muscles in Willem's back tense up. The older man didn't look it, but he was very strong. Isaac put his hands up on Willem's shoulders, got on his toes so he could talk softly in his lover's ear. \"It's nothing, Will. It's just an old bastard. Let him be. We got bigger problems.\"\n\nNine times out of ten, Willem would have ignored the old man. Not the best of percentages to begin with.\n\nAnd the demoneater was having a rough day.\n\nWillem walked purposefully towards the truck. It was crimson and mirror-bright. Washed, maybe even waxed, recently.\n\nHe swore. At least that's what it sounded like. Only Isaac recognized the low twisted syllables, though not their meaning.\n\nThe car alarm started screaming. The red car rocked violently back and forth, tires leaving the pavement two at a time, then slamming down hard enough to burst loudly. All of the safety-glass bowed out at once. The horn honked loudly. Once.\n\nWillem crossed his arms and watched, a good ten yards from the possessed vehicle. His eyes glowing and his mouth set into a small white line. Destroying the car only helped a little. The look on the old man's face was more trouble than it was worth. The agency would be on his ass for sure.\n\nThe car settled on it's blown tires. The body was bowed and crinkled out of place. The windows were set, but whitened and bowed with cracks. The once-gleaming hood was marked hundreds of short gouges, revealing bright sheared metal underneath. The remaining paint was rippled and distorted with heat. The old man was on his ass, his face white and his mouth trembling. Utterly speechless. A brown stain of tobacco juice dribbled down his chin.\n\n\"Watch your language.\" Willem said. Soft, his voice almost kind.\n\nIsaac didn't say anything to him until they were nearly at the campsite. It seemed wise.\n\n--\n\n\"I've never seen you do anything like that.\" Isaac could see Devil's Tower against the sunset. It was striking. The black pillar alone on the plains, haloed by the sun. The sunset sky was a huge seeping bloodspot, the clouds edged in gold and purple.\n\n\"You've only seen me work when I'm against small fry.\" Willem seemed a lot calmer. Appearances weren't everything. \"The Dreamer, those imps in the parking garage, the sun-dog in Illinois... All of those guys were small. I didn't have to fight them, only eat them. The sun-dog was the only one that had enough brains to know what I was.\n\n\"There isn't a single demon that I couldn't swallow. But the stronger ones are still dangerous. I have tools at my disposal.\"\n\nWillem burped slightly. \"You saw the shimmer in the air above my mother? You heard me talking about him? Izarys?\"\n\nIsaac nodded. \"Well, I have a couple of friends, too. A few I can call up... and one that I carry around with me. I always meant to tell you about Min. The timing never seemed right.\"\n\nWillem had a sheepish little grin on his face. \"She lives... Well, I'm a vessel. She lives inside me. Mostly sleeps and gluts herself on the demons I eat. She's a security measure. She makes sure that the demons I eat stay quiet, and if I need something, or someone, wrecked...\"\n\nIsaac knew that his mouth was hanging open. He clicked his teeth together. \"Can... Can she... hear us? Now? Or when... When we...?\"\n\nWillem winced. \"Well. She sleeps a lot. But when she's awake... She can see through my eyes, listens through my ears. I tell her to leave off when I'm doing something private... And she mostly listens.\"\n\nIsaac bit his lower lip. It was hard not to see the funny side, but at the same time he felt a little betrayed. \"Do you have anyone else you want to tell me about?\"\n\nWillem sighed. \"The only two entities that are near us right now are Min, and a wisp that does recon for me. The wisp likes to change his name and identity all of the time. Right now he's a 'he' and he likes to be called\u2014\" Willem sighed heavily. \"Enchilada. Enchilada lives in the left headlight of my car, so he can't hear us right now. Min is sleeping. She's gotten pretty lazy over the years.\"\n\nWillem had a wry little smile on his face. Isaac got the distinct impression that Min was not asleep.\n\n\"I... I could see the Dreamer a little. I could see the imps clear as day, and the sun-dog had an aura. How come I've never seen Min or Enchilada? Or... Or the others?\"\n\nWillem pulled the car off of the highway. Riding on a narrow unpaved road. \"Min is an incredibly powerful entity. That's why she can survive distinct inside of me, when most demons immediately revert to energy. You can't see her when she's resting with me, and when she's outside, she can disguise herself seamlessly. Not only to humans, but also to you and most other demoneaters. Izarys can do it, too, but he likes to have a presence. And Enchilada is rarely out in the open. He's either in the headlight, or out doing recon. The others... I've asked the others to keep their distance.\n\n\"You... You were going to tell me about this, right?\" Isaac kept his voice quiet, but it was impossible to completely disguise the frustration. \"That you had... an attack dog sleeping in your stomach, and an enchilada in your car? And god knows who else?\" \n\nWillem pulled to the side of the road. All the lights from the emergency vehicles were flashing from an adjacent dirt road. \"I should have told you about Min. I should have told you about my mother. While we're at it, I have a few more things I want to tell you. But I'll tell you everything when we are somewhere surrounded by protection, and when Min is asleep, fair enough?\"\n\nIsaac slid out of the car. \"Is... Is the headlight-wisp the reason you've been getting so much Taco Bell?\"\n\nWillem sighed. \"He likes the smell. This isn't so bad. For a few months, she called herself 'diaper'.\"\n\nIsaac stopped in his tracks to stare at Willem, pulling his coat from under the seat. \"You're making that up.\"\n\nWillem gave him a look, brows raised almost to his hairline. \"Honey, I wish I was making that up.\" He pulled his creased brown leather jacket over his shoulders, keeping his arms free of the sleeves. Isaac blinked, and realized he had seen somebody else wear their coat like that. Just today.\n\n--\n\nWhelk met them at ground zero.\n\nWillem glanced at Isaac, knowing that she wasn't probably who he was expecting. Whelk was maybe all of four-foot-ten. She had a round moon face and deeply creased brown skin with gray flyaways escaping from a bun resting on the back of her neck like a wrecking ball. Her sharp black eyes were framed by massive red horn-rims and her green tracksuit had a dusting of cat hair and dandruff on the shoulders. In one hand she had a neon-green workout bag, and in the other she had a hissing Coleman lantern. She looked more like a quarrelsome grandma from the rez than a secret agent.\n\nShe didn't believe in wasting words on something so banal as a greeting. \"She fucked us, Willem. I can't stand that cunt. What is this?\" She gestured to Isaac. \"I get that Boss is okay with this, but you don't have to bring your pet here. Especially when she had to bend over backwards to clear the Fish out of here.\"\n\n\"Don't talk about him like that.\" Willem didn't look at her. He didn't feel like getting into a fight with Jo 'Bad Wound' Whelk. So he spoke to her, but didn't look. Instead, he walked around the campsite, inspecting the shredded tent under the harsh white light of Whelk's lantern. \"With 'that cunt' around, I can't leave him alone. He wont effect my work. If anything, he can help. He can see past the first two Planes without glasses, and he's fireproof. His name is Isaac, and he isn't a pet.\"",
        "\"It's okay, Will.\" Isaac said softly.\n\nNo. Willem thought. It wasn't okay. His employer didn't care about Isaac. If he didn't know what Bad Wound was capable of, he would have punted the little bitch across the campsite. He bent down to look at a sleeping bag that had been flayed open by claws. There was only one bloodspot. In the center. He snapped his fingers.\n\n\"Enchilada!\" He barked. He spoke the binding words. The symbol of the contract they had bound between them.\n\nThe wisp rushed out of the headlight. Sliding over the ground rapidly until he was bouncing around Willem's feet. He was pulsing a soft indigo, bouncing and spinning weightlessly, a little cheerful ball of ectoplasm. Willem heard Isaac gasp.\n\n\"Why are you so happy?\" Willem said sharply. \"A little decorum?\"\n\nThe wisp pulsed red once, then his light brightened and steadied so he was the same color as the hissing Coleman lantern.\n\n\"The bodies have already been taken by the Fish. The five that were in this campground were only taken.\" Willem picked up the shredded bloodied sleeping bag. \"Sorry I snapped at you, Enchilada. But I want to find them. Can you find them?\"\n\nThe wisp rushed up at him. Lit on the fingertips of his left hand and zoomed down his arm, across the span of his shoulders, and jumped dizzyingly off of his right fingertips. While he did so, he flashed in every color of the rainbow, and then some. Willem was forgiven. Then the wisp jumped inside the shredded sleeping bag. The bag rippled and twisted with the wisp flurrying around inside. Flashing red and blue, like a police car.\n\nWillem looked over at Isaac, who had crept forward to watch the wisp work. Despite everything, Willem had to smile at the look on Isaac's face. He seemed slightly spellbound. \"He's so... pretty. I thought he would be almost invisible, like the dreamer, or just a shimmer, like Izarys.\"\n\nThe wisp bolted out of the sleeping bag and dashed in three mad circles around Isaac, flashing bright purple. \"No... Don't be afraid. He likes you, Iz. He's a vain little thing.\"\n\nThe wisp flashed green and bounced off of Willem's head before racing away through the trees, flashing red and blue again. The resemblance to emergency lights was not accidental.\n\n\"What are Fish?\" Isaac asked him. Willem was digging in his suitcase, looking for that damned yellow candle. Whelk answered before he hand the chance.\n\n\"Fish just means officials, halfman.\" She took out a phone and sent a text. \"And if you're done with the site, we have to get out of here. Boss only has so much sway with these Fish.\"\n\nWillem was startled by Isaac gently shoving him out of the way and closing the suitcase. The slim boy unzipped an outer pocket and took out a fat corn-colored stub of candle. \"The yellow is for connections, right? You were looking for this one?\"\n\n\"Yeah, how...?\"\n\nIsaac rolled his eyes and picked up the suitcase. \"You heard what she said. We have to get out of here, and you always forget when you leave something in the outer pocket.\"\n\n\"Your boy's right.\" Bad Wound had something that might have been a smile at the corner of her puckered mouth. \"Hurry it up.\"\n\nWillem flushed and lit the candle with a word, following them and cupping his hand around the flame to protect it. At least she wasn't calling Isaac a pet.\n\n--\n\nIsaac sat in the passenger seat of Jo-Ann's SUV while Willem sat in the back, cupping his candle and not moving an inch, or saying a word. A white rabbit-foot hung from the rearview mirror, and the far back was filled with a dozen pieces of matching red luggage. It smelled like menthol cigarettes and rancid cooking oil.\n\n\"Will?\" He asked quietly, \"Are you\u2014\"\n\nThe tiny woman behind the wheel reached over and snapped her fingers in front of his nose, startling him into silence. \"Hesh. He's binding his mind with that little rainbow sprinkle, and he needs to concentrate. Pretzel?\"\n\nIsaac looked doubtfully at the bag in her hand. \"I... I thought you didn't want me here.\"\n\nShe looked at him over her red horn-rims. \"I don't. But that doesn't mean you don't want a pretzel. I was a bitch, and it's probably for the best that you're here.\" She gave the pretzel bag a little shake. \"If that red cunt is after you, best to run with him. He's just about the only one who gives her pause. Even Boss is wary around her. So, pretzel?\"\n\n\"Sure. Thank you.\"\n\nWillem pulled out of his trance suddenly, startling the half-demon into dropping his pretzels.\n\n\"Shit. Shit. Shit shit-shit-shit... SHIT.\"\n\nHe pinched the candle out and threw his body back in the seat, snapping his head back against the headrest with enough force to make the seat tremble.\n\nIsaac couldn't sit forward, he turned around, biting his lip, not knowing what to say. This wasn't like the other times. This felt a whole lot more real. People were dead, and they were in danger.\n\nJo-Ann broke the silence. \"We weren't part of your little s\u00e9ance, Willy, I don't want to guess.\"\n\nWillem spoke without an inflection in his voice. Without lifting his head to make eye contact. \"Seven dead, four missing. Tell the Fish that they'll find her at the bottom of the north face. And the southeast.\"\n\nThat couldn't be it. That wasn't all of it. Isaac reached and took one of Willem's hands, squeezing it. \"What else?\" He asked softly. Willem's hand was limp for a moment, and then he squeezed back. Hard, almost to the point of pain.\n\n\"It took the last four to the top of the rock. Unless we have a helicopter that I don't know about...\"\n\nJo-ann already had a phone clamped against her ear. Her bun had come loose from it's moorings. It waggled at the back of her neck when she moved her head in small fast increments, looking out all windows, like a trapped animal. She started speaking rapidly in a different language. It took Isaac a surprised moment to realize she was speaking French.\n\n\"Willem?\"\n\nThe older man didn't answer. Isaac could see his hands on the armrests of the backseat. Rhythmically clenching and unclenching. Isaac watched the knuckles go white, then pink, when white. This wasn't right. Willem was the one who had the answers. The one who was in control.\n\nMaybe it's my turn to have the answer. The thought pushed Isaac to ask again. \"Willem, do you know what this demon is? You said that the agency had been monitoring it before.\"\n\nFor a long moment, the only sound was Jo-Ann's rapid French, punctured by fragments of silence. Isaac wondered if he was even going to answer. Not for the first time that day, he wished that he had just stayed home.\n\n\"It was one of the dangerous kind, an Iblis. Most demons are insubstantial in this dimension, so their intelligence is also unstable. Fragmented. Most are stupid as rocks, and that's why they don't get into trouble. K'taal doesn't just have intelligence. It has speech, it has a thinking animosity towards humans. And he's gone insane. Dreamers, Incubi, Succubi, it doesn't matter. They only take as much energy as they need. K'taal is devouring whole human souls, and getting stronger with each one. It wont stop.\"\n\nWillem leaned forward slowly, resting his head in his hands. \"And it's hurting them. K'taal's angry at them and it's hurting them. It's not using Glammour or anything. It's too far away for us to reach it, and Enchilada was almost killed just trying to get a glimpse of it.\"\n\n\"Couldn't we lure him down somehow?\" Isaac felt his stomach get fluttery and knotted up. He had an idea. A half-formed, awful idea.\n\nWhelk tossed her phone onto the dashboard with an authoritative whap. \"We can get the Fish to go up to the top for the victims, but we need to clear that freak out of there, first. Your boy-toy is right, Willem. What do you have in your box of tricks that could lure that thing down?\"\n\nWillem made them both jump by slamming his fist against the inside of the door. \"Nothing!\" He spat. \"Nothing that will work. My cunt mother already made it wary. It's holed up on it's tower, and it'll attack any Fish that go up there. We need to find a way to get ourselves up there. And quick. It's torturing them. One at a time. Raping them. Killing them.\n\nIsaac decided it was time to snap him out of it. \"Willem, shut the fuck up.\" It was the first time he had ever said something like that, and the look that his lover gave him was almost enough to shut him up. Almost. \"Punching the car isn't going to do a goddamn thing, and I don't see you suggesting anything. Forget about your mother, there are people getting hurt!\"\n\nIt was time to ask. Time to ask about that terrible, awful idea. \"You said he wasn't using Glammour. Can Glammour effect other demons?\"\n\nThe guilty look on Willem's face evaporated instantly into something else. A new, stony kind of anger. \"No. Absolutely not. Abso-fucking-lutely not. Don't even think like that.\"\n\nJo leaned over, eyes bright behind her red plastic horn-rims. \"Shut up Willem, you said he could help, and he's being a better help than you, right now. So answer his question.\"\n\nIsaac could see the cords in Will's neck. See a darkness in the look he threw at the old woman's way. He quailed only a little when Willem turned that look on him. His silvery eyes looked brighter than ever. \"Isaac.\" He spoke softly. \"This thing has already killed seven people. It didn't just kill them, no. It paralyzed them with it's breath before raping them, flaying their skin off an inch at a time. It eviscerated them. Desecrated their flesh. This isn't a human, that you can just swallow whole without a second thought!\"\n\n\"Like what I did to my dad? Is that what you mean?\" Isaac didn't know it was possible for his own voice to sound so cold. The air felt hot though. Very hot. He could see beads of sweat on Willem's brow. \"Tell me Will. Can I use Glammour on this thing, or not?\"\n\n\"Isaac!\" It was the first time Jo had used his name. \"He's a wretched son of a cunt, but calm down.\" The small wiry hand on his arm was rough as horn, but gentle. She didn't flinch away. Even though heat was emanating off of him in visible shimmery waves. \"We're not going to let that Iblis touch him, Will. That's the point. You're boyfriend is ready, willing, and able. We have to do this. Every second we bicker, K'taal is skinning or eviscerating.\"\n\nCaught between the three prongs of Isaac, Jo, and logic, Willem finally gave in. Leaning forward. \"It will work, but Iz?\"\n\nIsaac had cooled down, but the air all around him still felt hot and soupy. Jo-ann was looking at her fingertips, pink and scalded. He looked at Willem, feeling scared and angry and very cold.\n\n\"Listen to everything I say, Iz. I mean it. K'taal is wary. Twice-shy. If I put any protection on you, even a protective circle, K'taal will smell it, will know it's there. I'm going to use you as bait, and bait usually gets...\" Willem could barely choke the words out. \"Bait gets swallowed. You don't have to do this, Isaac. I can't promise that I can protect you, so please.\"\n\nIsaac pushed the car door open. Willem mirrored his movements. When they were standing outside, in the near-dark, Isaac squeezed the older man as hard as he could. Burying his face into Willem's shirt, smelling sweat, not caring. \"I do have to, Will. I killed my own dad. I can save these people. Don't try to take that away from me.\"\n\nWillem kissed the top of his head. \"That's my Firecracker. You're right. Let's get started.\" He sounded about as enthusiastic as a man getting ready for surgery without anesthesia. \"No goddamn time like the present.\"\n\n--\n\nBonds were hard to establish. But far harder to break.\n\nSo while Willem prepared his partner to be a fucking worm on a hook, he could feel Enchilada in a corner of his mind. The wisp loved bright colors, and had tied his emotions to them. Blinding white pulses of fear and wretched dark veins of pain bled through the back of Willem's mind. He couldn't get the wisp to stop. The little thing was so afraid that he was huddling in the headlight socket, weeping in the only way he knew how, by strengthening the bond between the two of them and sharing the awfulness of what he had seen in vibrant skewed images and splashes of bleeding color.\n\nHe needed to concentrate. Enchilada, while exceedingly bright for a wisp, was frightened out of what little speech and clarity he possessed. \n\n\"Will?\" Isaac's voice snapped him out of the chromatic bruise of Enchilada's fear. \"Will, wh-what is this for?\" Willem caught the tremor. Isaac's hands were already untying the drawstring of his sweatpants. But he wanted an answer. His coal-red eyes were fixed on Willem's. Despite his composure, he was probably as scared as the gibbering wisp in Willem's head.\n\nWillem reached and pulled down the zipper of Isaac's sweatshirt. He was gentle, sliding the sweatshirt off of his shoulders. \"I'm going to mark you as a sacrifice. It will extend the range of your Glammour, but just to him. You're going to stick in his craw. He wont be able to ignore you.\" Willem pulled Isaac's t-shirt over his head, the young man lifting his arms to help. It was very dark. The only light now came from the stars and the faraway emergency lights, pulsing in time with the blood in Willem's temples.\n\nIn the almost-dark, Isaac's thin chest glowed like ivory. Willem bent down to his suitcase, opening it up. He moved his finger past the rows of candles and boxes of chalk. To a rarely opened pocket containing half a dozen plastic bottles of body paint. He'd bought them at craft stores, and added one or two ingredients of his own.\n\nIsaac kept his sweatpants up as Willem squirted some of the bright red paste on his finger. The stuff wasn't red like Isaac's eyes. It was a flat plasticky candy-apple color.\n\nJo could barely see in the dark, but she saw him pause. \"We don't have time to fuck the dog, Picasso, get painting.\"\n\nWillem was running on his own short fuse, clouded by Enchilada. It was only Isaac's hand on his shoulder that quieted him. The young man looked up at him. \"C'mon, Will. She's right. We don't have time.\" He took a shaky breath. \"Just slather me up, before I lose my nerve.\"\n\nHe started at the base of Isaac's throat. When he had first seen him, those collarbones had stood out in sharp contrast, like wings. He dabbed the paint into the hollow, and Isaac gasped at the coldness of the paint. Willem traced a quick practiced circle. The apogee was level with the notch of Isaac's collarbones, the bottom curve at his solar plexus. Willem slashed the circle in five places, breaking it with hyphens of red paint.\n\n\"Turn around, Iz.\" Willem murmured. Isaac did as he was told. His vestigial wings were folded tightly to his shoulder blades. Willem touched one with his clean hand, he could feel Isaac trembling. Willem kissed Isaac between his shoulders, on soft downy skin between his wings, before replacing his lips with cold candy-apple paint.\n\nThe markings for a sacrifice were very specific. Broken protection circles, not in protective blue or standard white, but in a sickly red. The color of supplication, invitation, invocation.\n\nWhen he was done, Isaac was naked, and marked, shivering on a dirt road under and overturned bowl of dim alien stars. The monolith of Devil's Tower blotted out the remainder of a clotted purple sunset.\n\n\"Lucky for us, K'taal made it's nest on top of a ley line. We're on it, too. Bad Wound and I will be off the line, so it wont sense us. Don't breathe in if it tries to get close. The breath will paralyze you. We're going to be a hundred yards away, Iz. I'm going to have Min, and I'm going to put a protection on myself. When it comes...\"\n\nWillem took a hard angry breath. \"When it comes, you'll have to trap it. We can't come in unless it's guard is down... Or if it's trapped.\" Willem clenched his fists and his teeth. \"This is sick. This is so fucking sick.\"\n\n\"I can do this, Will.\" There it was. That vein of steel Isaac always had in him. \"Hell. I'm made to do this. Of course I'm scared out of my mind, but I have to.\" Despite the brave words, Isaac's tail was pressed firmly between his legs, trembling.\n\n\"I know you will, Firecracker.\"\n\nIsaac wanted to kiss him, Will knew. But he had paint on his lips. Willem kissed his hairline between his polished black horns, and ducked into Bad Wound's car.\n\nIsaac looked so small behind them.\n\n--\n\nOnce, Isaac had stumbled in the dark like a human. Since that day, that horrible black day when his tattoos faded and his wings grew, his night vision was almost as good as his day vision.\n\nHe couldn't see the SUV though. It was too far away. He had never felt more alone in his life.\n\nHe turned his eyes up, to the apex of the mountain of nowhere. K'taal. He thought. We're coming for you, K'taal.\n\nHe hadn't used his Glammour since Willem picked him up. Had never used it on purpose. But doing it again felt natural as breathing. Comfortable as slipping on a pair of old shoes. It felt like casting a net, thinner than spider's silk, stronger than bone.\n\nAnd he was trawling for one very special catch.\n\nHe could feel what Willem had called the ley line. It was humming under his feet, only a few inches wide, but it amplified the Glammour, let him cast it further and farther. He could sense life. All sorts of life. Human, animal, even demon. But they slipped through his Glammour. They weren't what he was looking for.\n\nIsaac stood in the middle of the dirt road, his bare painted feet straddling the ley line. To a watcher, it would look like he flinched without reason.\n\nHe could sense the Iblis. Sense a massive slavering thing, thrusting and furious. A tangle of rage and lust and pain. A maddened animal, tempered by a cold vicious intelligence. It went against all of his Incubi instincts, but he tightened his Glammour on K'taal.\n\nIsaac gave a shuddering gasp as the Iblis lunged. He was alone and naked on the dirt road, and he could feel the thing rushing closer, careening down the tall sheer face of the starless lichstone outline. He could hear rocks tumbling from the cliff face to the sloping hill of scree and boulders below. Stones that had held steady for millennia, shaken loose now by a demon on the hunt.\n\n\"I can do this.\" He whispered. \"I'm half-Incubus. I was made for this. Fuck. Fuck. Oh fuck.\"\n\nK'taal had halved the distance between them in less than ten seconds. Isaac just barely muffled a shout to Willem. The Iblis would certainly hear him. The creature was maddened by Glammour, but not helpless with it.\n\nHe could see it. Oh fuck, he could see it. A huge humped shadow lunging down the boulders of the scree hill. A beast, but with too many legs. A beast that moved faster than any mortal beast that had any business in North America.\n\nIt was everything he could do not to run. He faced down the thing that made the ground shake. The tremors numbing his bones through the soles of his feet. He could see it's hide, black and shiny like crude oil. An impression of a hideous elongated snout, not an upper and lower jaw, but more like a cruel three-pronged beak. A mane of long stiff quills that clacked and rustled like dry bones, a dozen dragonfly wings, thrumming and humming, lashing Isaac's face with veils of grit and stench. The thing stared at him with an asymmetrical ring of oilblack eyes around it's long tearing mouth. The eyes were loose and jiggling in their sockets, like jelly, or a cluster of soft poisonous eggs. There was a cold mad intelligence in those eyes.\n\nIsaac took a shaky breath, and drew in his net. It took ignoring every instinct he had to lure in the rapid freak in front of him. \"Come on.\" He squeaked. \"Come on, then.\" \n\nThe thing hissed. Isaac moaned and covered his ears. The hissing hurt his ears. It was like a million wasps, a death rattle, the thing's breath washed over him, reeking of dust and rotten meat, cold as a grave. Isaac closed his mouth and eyes, not letting any of it in. It circled him thrice. It was too fast. Isaac was choking with fear. It was all he could do to keep up the Glammour. Will was right. The Iblis wasn't buying it. It was already wounded. Two of it's muscular shadowlegs dragged. It's tail ended two feet behind it's hindquarters, dripping noxious black fluid from the thick wounded stump.",
        "\"Fuck me.\" He meant to shout it, but it came out as a dusty whimper. He couldn't even hear his own words over the sound and fury of the circling Iblis.\n\nBut K'taal heard him. It stopped it's furious circle-stalking. It stood in front of him and reared onto it's hind four legs. The three-pronged beak opened, showing a hideous lamprey circle of teeth that seemed to go on forever. He remembered not to breathe in, just a moment too late, and the screech made Isaac physically weak, paralyzing his limbs, spiking his head with agony. The air from K'taal's lungs was cold and acrid, drying the lining of Isaac's lungs, making him cough and fall to his knees. The only warmth he felt was the dribble of fear-piss down his leg.\n\nIt's skin was wet and icy. Slick as an eel, but not a fraction as soft. Isaac cried out with revulsion, trying to recoil his skin away from that slick corpse-cold. His cheek was scraping against the dirt road, he struggled to get on his hands and knees, anything but prone. Somewhere, somehow, in the terror-blank of his mind, Isaac remembered. I have to trap it. I have to trap it or-.\n\nHe couldn't even keep that fragment straight, not with something huge and sharp and cold stabbing at the small of his back.\n\nHe bit his scream between painted lips. He writhed onto his back, his limbs slow and heavy, using K'taal's wet rotten hide to slip inside his grip. \"Fuck me!\" This time it came out a snarl. He reached up with both hands, grasping thick hollow quills for support. Isaac couldn't lay his hands willingly on that black frost-rimed skin. He would go insane.\n\nThe thick shadowlimbs tore his legs apart, pushed one knee up to his chest. \"Oh fuck.\" Isaac whimpered. \"Oh F\u2014\"\n\nHe wasn't able to scream when the Iblis first entered him. He greyed out momentarily from the shock. When he opened his eyes, he could see the thing thrusting over him. It wasn't the pain. It was the coldness. The coldness was killing him, freezing him from the inside out.\n\n\"Gotcha.\" Isaac gasped. \"I fucking got you.\"\n\nIt was the last thing he ever wanted to do, and he knew it would hurt. \n\nIsaac let out a scream of anticipation, and clenched down with his ass. \n\nK'taal screamed back. This wasn't a bone-cold rush of poison air. This was a startled painful screech. The humped oilblack harbinger that had killed seven people wasn't just afraid. It was terrified. The gigantic hurting cock in his ass didn't seem as big, as hard, and it wasn't a fraction as cold.\n\n\"Yeah? Getting a little hot for ya?\" Isaac clawed at the sleek hide of the shadowbeast. Where his fingers went, the skin scorched and blistered. \"Little too hot for you? Too fucking bad!\" He squeezed his asshole hard as he could, gasping with pain, while the Iblis screeched and reared, trying to recoil away.\n\n\"Isaac, let go!\" Willem was shouting. When did he get here? The Iblis tried to just turn tail and run. It turned completely around, trying to twist and jerk out of the half-incubus that had trapped it. Isaac was holding him too hard. They were stuck together, like mating dogs. It screeched and whimpered with pain, shuddering it's many limbs. The bone-crest clacked and rattled as it dragged the halfling behind it for half a dozen meters, skinning Isaac's back raw.\n\nIsaac barely felt the pain of his skinned back. \"It's too strong!\" He shouted to Willem. Softer, he said. \"Come here, K'taal. Don't you like me?\" He redoubled his Glammour, binding the Iblis to him in strands of an invisible net, hotter than coals, sharper than wire.\n\nWhen he hugged the repulsive black body to him with arms, legs, and tail. The beast squirmed and sobbed with anguish even while desperately thrusting it's thoroughly softened (?melted?) cock. The air was rank with rotting scorched flesh. Isaac could feel something building up in his bones, in the center of his chest, where his optic nerves crossed in the fleshy bridge between the halves of his brain, in his gut, in the heels of his feet and the knuckles of his hands. It wasn't an orgasm. His limp cock flopped between the two of them like a worm. It was something unspoken and glorious that he rushed towards. Something powerful.\n\n\"C'mere baby.\" Isaac crooned. Mocking the writhing Iblis in his arms. \"I'll give you some sugar.\"\n\n\"Isaac!\" Willem screamed.\n\nIsaac kicked himself on top of the struggling demon, and exploded. He reached the peak of the not-gasm, and the world was suddenly nothing but fire. Fire from his eyes, his skin, his hands, his mouth. Consuming him, part of him. He was fire. And for the briefest moment, he knew what it was like to be a pure demon, insubstantial, an aspect of inferno.\n\nAnd he liked it.\n\n--\n\nWillem was the closest thing on modern planet earth to a classically-trained demoneater.\n\nHis mother had taught him an eclectic mixture of techniques from cultures and schools of thought from around the world. From focusing chakras, to performing a ruqyah, to using sonic frequencies as a deterrent. He had been tutored for a year each by three other demoneaters, from Japan, Russia, and Iran. As well as taking lessons from demonologists too numerous to count.\n\nYet even as he saw what happened in front of his own eyes, he struggled to believe it. Nowhere-never, had he learned how an incubus\u2014a half-incubus at that\u2014could do what his Isaac was doing.\n\n\"Isaac!\" His throat was raw from smoke. His body was streaked with blue paint, not a sacrifice's broken circles, but spirals of warding runes within protective overlapping circles. Circular chains of protection for himself, the demoneater. Meanwhile, he had practically strung Isaac up with a dinner bell 'round his neck.\n\nAlthough, apparently not defenseless.\n\nIsaac rolled on top of the chittering, terrified Iblis. Willem had personally seen the damage an Iblis could do to humans, but some how, some way, Isaac was basically unharmed. He could feel the heat blistering from the halfling's body nearly ten yards away, out of the range of K'taal's thrashing wings and legs. The ground was torn up, a stunted prairie tree was splintered, boulders torn up, but his boyfriend was clenching onto the wounded demon like a vise and all K'taal was doing was taking it, screaming all the while.\n\nIt was the only reason he wasn't already in there. If he broke Isaac's Glammour, the halfling was dead.\n\nSuddenly, there was fire. There was no concussive blast. Only the howling wind-suck as the flames ate up the oxygen, and K'taal was free. Flames licked it's body, black flesh sloughing off against every branch and stone, as it stumbled, blind and keening from the inferno.\n\nRight into the inferno's boyfriend.\n\n\"Min!\" He spoke the words of their covenant in the low tongue. The bastardized mongrel language of demon and man. The words had power that the demon- and man-tongues lacked.\n\nK'taal was burning, wounded, pinned by the Afreet Willem kept in his stomach. But that didn't mean it was over. He spoke the now-familiar low incantation. The phrase that kept him fireproof.\n\nWillem had a demon to swallow. Enchilada hated this part. Hated it so badly that the wisp finally broke the bond between them. Willem barely noticed him go. Barely noticed the pale bleeding body of his lover shivering in the circle of scorched earth.\n\n\"You fucker.\" Willem unhinged his jaw. There wouldn't be any more speech for K'taal. Low or otherwise.\n\n\"Mercy.\" The burning thing pleaded. \"Mercy.\" It's voice was the rasp of millstones. The splintering of bones. The crumbling of forgotten idols. It smelled like rotting flesh as it burned. A smell as strong as a concrete wall. As it begged, the milky heat-scarred eyes popped and leaked down it's long beak. The vitreous fluid was fibrous and smelled like sulfur.\n\nWillem bound that beak shut by a chain threaded with white snakeskin. He punctured those milky staring eyes that were intact, buried his fingers to the third knuckle.\n\nHis grip set, he began to feed. The waves of pleasure and agony racked him. The flamb\u00e9ed Iblis tasted as foul as he smelled. It struggled the whole while. Down to the last twitching foot. When the demoneater was finished, he could barely stand, and the stars were fading.\n\nBut Willem doubted if any meal had ever satisfied him more.\n\n--\n\nIsaac heard their voices dimly, as if through a caul. Words were so indistinct, made even harder to hear by the noise from the engine. \n\nHe was still naked, but now he was curled up in the backseat of the SUV, covered by a creased brown leather jacket. The smell of it comforted him, despite an uneasy pang of d\u00e9j\u00e0 vu.\n\n\"That's the largest demon I've swallowed in a while.\" Isaac heard the voice first, the words took a moment to stick. It was just such a relief to hear that voice, though he couldn't quite reason out why. \"The motel is just a little further up this road, I'll get a cab to pick up my car from the campsite. Thank you for driving us, I don't think I'm good to drive.\"\n\n\"Sure. But I want to stay with you until he wakes up. Boss is going to have questions. And I don't like to face her empty-handed.\" Jo's voice was the softest Isaac had heard it, yet. \"The boy handled himself well. And he's the only reason there aren't eleven bodybags in that ambulance instead of seven. That's going to count for a lot with her.\"\n\n\"I wish you had just taken him somewhere safe. That took hours, and he's in bad shape. I think he inhaled some of K'taal's breath, and-\"\n\nIsaac tried to sit up, and grunted. His entire body felt like a bruise. Every part of him was strained and aching. His stomach felt like it was twisting inside out. He lay back down. Surrendering after the first attempt. He could barely hear Willem's words through the pounding in his temples.\n\n\"Hey... Hey, you're awake. You're okay now.\" Willem didn't look much better than he did. His cheeks were smeared with blue paint, the pattern long since rubbed away. He had deep grey creases under his eyes, dark enough to be bruises. The whites of his eyes were badly bloodshot. It looked like staying awake was a huge effort for him.\n\n\"Am... I?\" Isaac whispered, his voice was hoarse, almost gone. Everything felt so dim. So fuzzy. The movement of the car made him nauseous. His lips were numb, like they had been shot up with Novocain. Speaking took an effort, and everything was sliding in and out of focus. He forgot the rest of his question. His head felt so heavy. He used the fingers of his left hand to tilt his own head back. \"Am... am... W-Will?\" His voice cracked on the last word. \n\n\"Damn it.\" Willem's fingers felt warm. Normally they didn't. Normally they felt so cool, soothing. When Willem held up his head, Isaac didn't have to strain the muscles of his neck and shoulders. He felt Willem's thumb pulling open his eyelid. He let out a feeble whine of annoyance, batting at the offending hand.\n\n\"Fuck. Hey, hey, stay with me, Iz. The motel is just up the road. I'll take care of you there. You're gonna be okay.\" \n\nJo-Ann 'Bad Wound' Whelk kept her eyes on the road. \"What's wrong with him?\"\n\nIsaac let his head fall back to the upholstered seat. The hollow feeling in his gut didn't really matter. But he couldn't seem to get warm. He feebly pawed at the leather jacket, trying to pull it closer. His teeth were chittering. He could barely hear Will reply. \"He isn't just poisoned. Whatever he did, however he did it, he's got nothing left. He's starving.\"\n\nAs the sky bled pale, the SUV pulled into the motel parking lot. As the car idled, Isaac raised his body up from the upholstery of the seat. His arms were shaky, his muscles had all the strength of old rotted rubber bands. He couldn't see. He blinked. Over and over, trying to see through the scrim of shadows falling over his vision like soft moth wings.\n\n\"Can't.\" His lips and tongue felt like they were filled with sand. He tried to work some saliva into his mouth. He couldn't feel his tongue touch the inside of his mouth. He could only hear the swiping sound inside his head, minute and dry and desperate. He didn't feel the breeze when Willem opened up the back door. Didn't see the door open.\n\nWillem gently manhandled the poisoned halfling out of the backseat. Isaac moaned painfully as Willem's arm cupped his scraped back. Whelk had cleaned the wounds while he was unconscious. His sense of smell seemed to be the only thing not affected by the poison. He could smell Willem as the older man hefted him up. The smell was distinct for him, he would recognize it anywhere.\n\nStarving, poisoned, and barely conscious, it didn't matter. Willem had him.\n\n\"I'll come to you as soon as he's fed and stabilized, Jo.\"\n\nThe tiny woman getting out of the SUV shook her head, the bun ticking back and forth at the base of her neck. \"You're useless after you swallow them, Will. Especially the big ones. Get your rest. I'm in room nine.\"\n\n\"Thanks, Jo-Ann.\"\n\nIsaac blinked and blinked. Trying to clear the fluttering shadowwings from his vision. He was still blinking when Willem carried him over the threshold. Willem's arms under his knees, around his scraped shoulders felt feverishly warm. Isaac could hear a dim clicking sound. Is that my teeth?\n\nIt was.\n\n\"You're lucky.\" Didn't feel that way. \"You didn't fill your lungs all the way. If you had, your veins would be black by now.\" As it was, the veins in his arms and temples were taking on an unpleasant bulging quality. Isaac felt something brush his forehead. A kiss.\n\nThen he felt the bed under him. Willem quickly pulled the coverlets down over the shivering halfling. Isaac moaned. He couldn't get warm. He could hear the bathtub gurgle, then roar through the thin wall. Where was Willem?\"\n\nIsaac only had to mew once with fear before the older man was at his side again, stroking sweaty hair out of Isaac's dull black eyes. His tail lay limp on the coverlet between his legs. At Willem's touch, the tips of his tail twitched feebly.\n\n\"I wish this was over.\" Willem whispered. He carefully picked Isaac up. The halfling's collarbones were wings again. He weighed about as much as a rag doll. \"But this isn't going to be fun.\"\n\nThey were in the bathroom. Willem emptied a clear tube of pink rock salt into the tub. The salt was mined from the Himalayas, and had been triple-blessed by five flavors of holy man from all around the world. It was the only surefire cure for Iblis venom.\n\nUnfortunately, a half-incubus wasn't immune to that kind of firepower. Willem carefully lowered Isaac into the tub. \"I'm so sorry.\" He whispered. He kept his left hand under Isaac's head, keeping his face above water.\n\nThe instant Isaac came in contact with the water, venom started to seep out of his pores. His veins lost their unhealthy grey tinge, the mottled whites of his eyes cleared. Red blood seeped back into his lips, eyelids, and fingernails. The water billowed with clouds of black inky Iblis venom.\n\nWillem checked an old-fashioned silver stopwatch anxiously. Isaac started to moan. He struggled and thrashed, splashing grey water everywhere. He tried to climb out. \"It hurts!\" He babbled, his mouth no longer numb. \"Willem, Will, Will it BURNS!\"\n\nWillem's hands, forced him down into the firewater. All real heat had lost it's sting for Isaac, but the black water around him was scalding him, killing him. He was weak and emaciated from whatever he had done to the Iblis. Too weak to fight against the demoneater holding him still.\n\n\"I'm sorry!\" Willem choked. \"You have to get it out. All of it. Just a few seconds longer, Iz. Just a few more!\"\n\nIsaac went stiff in the water, sobbing and shaking with the effort of holding still. His skin had to be melting off of his bones. The water was molten and evil and Willem was holding him down. \"I have to get your face.\"\n\n\"No!\" Isaac begged, he tried to sit up again, but Willem pushed him down.\n\n\"I am so sorry Isaac.\" Willem grabbed a cloth from the grey water and lay it over Isaac's face, pressing his hand down over the half-demon's mouth to muffle the agonized scream and puff of black steam.\n\nEven on Willem's hands, the saltwater felt caustic, like strong bleach. \"Fifteen seconds, Iz, just a little longer.\" He yanked the drainplug a few seconds early. The water was the color of ink, as it drained it left a chalky black ring on the inside of the plastic tub.\n\nIsaac wasn't struggling anymore. His ribs were rising and falling in the inky water, shallow, quick, like a sick dog. Willem snatched the rag off his face and twisted the knob open. The shower curtain wasn't drawn, so hot water needled down on the both of them, pooling on the small white tiles of the bathroom floor.\n\nBlack beads of venom ripened and trickled down Isaac's leeched-white skin. The scummy water was sucked down the drain and the unsalted water washed off the last of the black poison and burning salt.\n\nWillem shrugged out of his shirt and jeans He stepped into the tub, feeling the water pelt his back. He made sure his feet had a good grip on the pebbled no-slip floor of the tub, and he pulled Isaac up. The halfling was semiconscious. He had a weak grip on Willem's arms, trying to stabilize himself.\n\nWillem turned so Isaac took the brunt of the spray, making sure that the water washed away every trace of venom and salt from Isaac's hair, feathers, and tail. From the raw scraped skin down his back.\n\nIsaac's lidded eyes fluttered open. The whites of his eyes were clear and healthy, but his irises were black. An undifferentiated flat void.\n\n\"W-Will?\"\n\n\"How do you feel? You must be hungry, don't worry I'm gonna\u2014\"\n\n\"Shh...\" Isaac slumped into his arms. More from being unsteady than anything. Willem twisted the knob shut. It was quiet in the puddled bathroom, save for the water dripping from their bodies. He could hear the engines of the cars on the highway, hear Isaac's labored breathing. He had a ball of lead in his gut. He knew what Isaac was going to say.\n\nWhere were you?\n\nWhy didn't you come for me?\n\nDon't touch me.\n\n\"I think I love you.\"\n\nThe five small words hung between them. Willem started to say something, but shut his mouth when Isaac spoke.\n\n\"I... I'll figure that out later, when I can think. Re-regardless, you... brought me back.\" Isaac's words were slow and a little slurred, broken by a big yawn. \"So stop... Stop punishing yourself.\"\n\nWillem let out a shaky little laugh as the heavy sick feeling in his gut melted away. At least a bit. He kissed Isaac between his horns. \"You're too goddamn good for me. Too good for this world.\"\n\n\"Please... I kn-know you're tired...\" Isaac yawned hugely, and Willem could see that his canines, normally slight points, had elongated into something like fangs. \"But I'm so hungry.\"\n\nThe halfling was as light as a bundle of sticks. A faggot Willem mused. Isaac was mumbling something. He could only hear snatches of it. \"Already used Glammour on that thing... Don't wanna do it again... I think I exploded... Should we look into that?\"\n\n\"Sure we will, Firecracker.\" Willem kissed him on the mouth and set him on the bed. He crawled onto the bed, and cradled Isaac's head on his stomach. \"But first, time for nom.\"\n\n\"Nom-nom-nom.\" Isaac said sleepily, turning his head. Willem did his best not to hiss when the halfling scraped the head of his cock on one of those fangs. \"Soh'rhy.\" It sounded sincere. Or at least as sincere as somebody could sound with a mouthful of dick.\n\nIsaac had only ever gotten tipsy before. But he felt that being poisoned was a lot like being drunk, except without the fun parts.\n\nWillem's cock was perfect. It reminded him of how his used to look, before the day he had grown horns. With every suck and slurp, he felt a little more awake, a little less numb. It wasn't an entirely good thing. His body felt sore in places he didn't even know he could be sore. His ass hurt, and he was so tired.\n\n\"Hey...\" Willem yawned hugely. \"Did you fall asleep?\"",
        "The halfling jerked back to a soupy state of consciousness. The older man's cock slid out of his mouth and he turned his head to meet his eyes. \"A little.\" He swiped his mouth with the back of his hand and settled his head on Willem's stomach.\n\nHe grunted a little in irritation when Willem forced one eyelid open with his thumb. \"Well, at least you wont slip into a coma or anything.\" He yawned again, this one so wide, Isaac could hear his jaw crackle. \"You look good with brown eyes. But promise me that you'll wake me up as soon as you do. You need to\u2014\"\n\nWillem smirked. His Firecracker was already asleep. He wanted nothing more than to let his head fall back to the pillow and join him.\n\nInstead, he whispered the words of his covenant with Min.\n\nThe Afreet slithered out of his mouth, in a sensation not unlike vomiting. Thankfully tasteless, but hot enough to nearly burn his mouth. Min was invisible in the Earthly Plane, but Willem wasn't limited to that Plane.\n\nMin's scales rippled as she slithered out of her vessel and made a protective circle around the entwined bodies in the bed. It was more of a kidney-shape, really. Each scale was clear as glass, the color of deep freshwater. Each scale was diamond-shaped and flat to her body. When she was angry or scared, the scales would flare up, like hackles on a dog.\n\nShe had a dozen pairs of wings down her sleek glassy body, folded shapes that glowed with the heat of embers. Her seven eyes glowed like hot metal.\n\n\"I should be within thee. Thou will have terrible indigestion.\"\n\nWillem put a finger to his lips. When Min was in his stomach, she still spoke 'out loud', but quietly. Reverberating in the bones of his inner ear. When she was without, her voice was sibilant and very low. Not within the human definition of feminine. \n\nShe rolled all seven of her eyes. Small sparks flew, and he had to beat one of them out with the corner of the coverlet. \"The little one could sleep through the earthquake of Antioch as he is now.\"\n\n\"I know she's close. It would be just like her to try something while we're weakened. I can digest when we're back home, and others can share the guard duty. I know I've asked a lot of you lately and\u2014\"\n\n\"Hush. I will watch over thee and thine. As I guard over mine own self.\"\n\n\"Thanks, Min.\" Surrounded by shimmering azure coils, Willem finally closed his eyes.\n\n--\n\nHis hunger woke him.\n\nAt least partly. Isaac was a fairly restless sleeper, so he wasn't surprised when he opened his eyes to find himself level with Willem's freckled shoulder blades.\n\nDespite a halfway-to-mindless hunger that resonated through his body, he didn't move. He didn't want to disturb the older man. Right now, the company of his thoughts was enough. He stared into the center of a scar at the back of Willem's neck. Teardrop-shaped, pink as a burned doll, the size of a thumbprint. Light fell through the chink where the curtains didn't quite meet. The thin line of sunlight bisected the burn at the base of Willem's neck, neat as the shadow of a guillotine.\n\nThe memories of being in the bathtub were hazy. Like remembering images from a dream. Was it possible to remember pain?\n\n\"You warned me.\" Isaac mouthed the words. He felt a smile tugging at the corner of his mouth. \"You make it sound so safe, hunting demons. Does it comes with experience?\"\n\nWillem snuffled in his sleep and sighed. Then his breathing was slow and regular again.\n\n\"I'll take that as a definite maybe.\"\n\nIsaac spent another minute waking up, staring at the dust motes floating in the golden sliver of light. Doing a kind of karmic math in his head. One dead stepfather. Four men drained to within an inch of their lives. Now, four lives saved from an Iblis.\n\nI can do more. Was the phrase that kept running through his head. I can help him, like Min and Enchilada and the others. I'm already feeding off of him. He says that he has too much for me to ever drain completely, but I am draining him. \n\nHis stomach growled. That was a more mundane kind of hunger, but it complemented the deep thirsting ache throughout his body like a minor chord.\n\nIsaac leaned forward and kissed his lover, right on the old burn-scar. It was a perfect kissing-target. He rested his fingertips on Willem's right hip, stroking up and down his side, dipping down to tweak a nipple, to gently cup Willem's soft cock. When Isaac bit gently at the side of Will's neck, his cock gave a hearty twitch.\n\n\"Hmm. Is that a gun at my back? Or are ya just happy to see me?\" Without turning around, Willem ground his hips back into Isaac's erection. Isaac growled happily.\n\nHungrily.\n\nWillem lazily crawled for his suitcase. He didn't get up, but only heaved his upper body off the bed, fumbling at the straps of the case. The strip of sunlight had migrated, and with him leaning off the bed, it illuminated the soft pale fuzz on his ass cheeks.\n\nIsaac slapped that perky ass, keeping his hand there to squeeze. Willem let out a little squeak and wiggled his hips. Isaac pushed him off the bed. \"Long live the king.\"\n\n\"Hey.\" Willem grunted. \"No fair.\"\n\nIsaac crept to the edge of the bed and looked down at Willem. \"Life isn't fair, and it was gonna take you forever to grab the lube that way. And I'm hungry.\"\n\nWillem looked up at the younger man on the bed, a serious expression on his face. \"All valid points.\"\n\nIsaac practically squawked with surprise when Willem lunged up at him, pinning him down to the bed. He wiggled, trying to see if he could break free of his lover's grasp, but Will was much stronger than he looked. He was pinned to the bed, his erection pressing into the coverlets. \"If you're in such a hurry, I can move things along.\" Willem whispered into his ear, before biting down on his earlobe.\n\nIsaac gasped when Willem stuck two lubed fingers into his ass. He spread his legs and lifted his tail, panting like an animal in heat. The air around them grew hot.\n\nWillem muttered his protective words, and spread Isaac's sweet round buttocks. \"Please!\" The younger man whimpered. \"Please, Will!\" His wings were fluttering against his lover's chest.\n\nAt the first stroke, the halfling had to bite down on a pillow to muffle his scream. Willem grinned and started to pound his cock into the half-demon under him. Isaac was so hungry that once he was feeding, he could no longer form words. The sensations of feeding and fucking were so powerful. Willem had figuratively fucked his brains out.\n\nSo when he stopped, Isaac swiveled his head so abruptly it was almost funny. His eyes glowed dim and red and he tried to push his hips back onto Willem's cock a few times. \"Wi-illl!\" He moaned.\n\n\"On your back.\" Willem growled, grabbing Isaac by the horn and kissing him so hard his head clicked back into the bedboard.\n\nIsaac whimpered and turned onto his back, bringing his knees up to his chest, presenting his asshole, only to be thwarted again. Willem was taking his ankles, pulling them, straightening his legs out. His cock was sticking up like an exclamation point.\n\nWhen Willem broke the kiss, Isaac finally saw that his arm was behind him, doing something with his ass.\n\n\"Will... You don't h\u2014\" Willem shut him up with another forceful kiss, bruising his lips.\n\n\"Well you didn't have to do what you did last night, either.\" Willem whispered. \"Besides, I had a plug in my ass during the entire car ride yesterday, stretching me out. You don't want that to go to waste, do you Iz?\"\n\n\"No sir.\" Willem could see the halfling's pupils dilating as he said it. He already had two fingers awkwardly buried in his own asshole, slick with lube. He got more lube and slicked up Isaac's shaft. The softness of the young demon's foreskin was heavenly, slipping through his slick fingers like hot silk. He could feel the tiny prickling points of pubic hair growing through the skin.\n\n\"Besides.\" Willem straddled Isaac. \"I try and keep my promises.\"\n\nIsaac didn't keep his hands idle. As Willem carefully lowered himself onto the tip of the halfling's cock, Isaac was stroking his cock with hands as hot as stones left in the sun. Isaac's tail was beating an excited tattoo against his back.\n\nHe whispered his protective words, and took the plunge. It had been a big plug, but the first few inches of Isaac's cock was still enough to bring surprised tears to the corners of his eyes. He took a deep shuddering breath, and thought about what it would have been like to take an Iblis' barbed phallus, even for an Incubus half-breed. He fought to relax, and on top of that, to make it look easy.\n\nWillem grinned at Isaac. The younger man wouldn't have noticed regardless of what faces he was making. Isaac's eyes were shut and his face screwed up in a perfect caricature of ecstasy. Willem adjusted and started bobbing his ass up and down in tiny increments, slowly getting used to the monster in his ass.\n\n\"Oh...Oh... mm... hm...\" Isaac was noisy, and the walls were thin. Willem liked the idea. He wanted to wake their neighbors in style. He bent down low over his lover's body, slowly moving his hips, and sucked hard at the side of Isaac's neck. Isaac made that strangled little yelp that he always did when he was overstimulated.\n\n\"Oh... Oh no you don't.\" Isaac growled breathlessly. Willem wobbled unsteadily when Isaac spilled him onto his side. He felt absurdly empty when he slipped off of the younger man's cock, but he grinned when Isaac climbed on top of him. He presented his ass, panting like he had run a marathon. Isaac had changed his mind quickly enough from 'you don't have to' to taking charge. Nothing was quite as fucking hot.\n\nWell. Except maybe his come, which always came out boiling.\n\nWillem didn't bother to muffle his voice the way Isaac did. When Isaac grabbed his hips and punched his way in, he cried out loud enough that Jo-Ann, three doors down, paused in watching her soap operas and rolled her eyes.\n\nIsaac paused for a moment, worried, but Willem just pushed his hips back enthusiastically, leaving no doubt that he wanted more. an incredible feeling of fullness and the intoxicating half-friction of Isaac's silky foreskin. He could feel heat building up in his own body, in waves. Isaac's wings were fluttering, battering him with hot air.\n\n\"Shit. Oh... I'm co\u2014 I'm\u2014\" Isaac let out a great shuddering breath and Willem gasped when the cock in his ass seemed to expand even further, and then when Isaac's cock shrunk a little, and there was a lot more lube. Come that was hot enough to feel through his protection. The first time they had fucked like this, he had accidentally released his protection too early, and limped to the bathroom, hissing about douching with icewater.\n\nThis time he gritted his teeth and held onto his protection, panting and humping his hips a little. Isaac was fed now. He could see the halfling's eyes, bright as heart's blood in the corner of his eye.\n\nIsaac slid out of him, and pushed Willem onto his back. He went down ravenously on his human lover's cock. Slurping and bobbing like he was still starving. Isaac groaned and used Isaac's horns like handles. Isaac plunged three fingers into his gaping asshole and went to town.\n\nAfter Willem came, after he was able to think again, he mused that he preferred fucking Isaac when he was already full. There was something sexy about the half-demon being dependent on him. But it was sexier when Isaac was so fucking enthusiastic, even with nothing to gain.\n\nWhich brought him around to thinking about those five little words Isaac had whispered in the shower.\n\nIsaac crawled up the bed. Wiping lube and come from his hand onto the hotel bedsheets, and licking his lips. His eyes had bags under them. He moved a little slowly, like he was sore, but he was smiling, and his eyes glowed healthy and red again. That was the important part. Willem had to fight not to fall asleep again. His stomach hurt. The Iblis wasn't agreeing with him. He compromised and set his phone alarm.\n\nIsaac curled up under one arm, resting his head on Willem's chest. \"Two hours? You've only been asleep for three. Jo said she would wait.\"\n\n\"It's\u2014\" Willem yawned. \"\u2014Too important. You can sleep while I work things out with Jo-Ann. I'll go over everything with you when we're home. You can drive for a bit. I'm just going to feel a lot safer when we're home. I have protections built into every cinderblock and timber of that house. Not to mention a lot of... ah...\"\n\n\"Tenants?\" Isaac said dryly.\n\n\"Couldn't have said it better myself.\" Willem looked up at the ceiling. A reflection from somebody's headlights was shining through the sheer curtain and making a white starflash on the rippled plaster ceiling. \"I should have said something, earlier.\"\n\n\"S'okay. I wasn't in my right mind.\" They seemed to be on the same wavelength. Thinking about that moment.\n\n\"No. You were. I'm just stupid and stressed. It has been a little hectic for the last two days.\"\n\nIsaac giggled. \"Just a little.\" Willem could feel the half-demon's tail slowly twitching by his leg. It tickled.\n\n\"I'm not sure if I've ever told you, but you've probably noticed it yourself. Humans can... sense us. A little bit.\"\n\nIsaac seemed nonplussed by the apparent change of topic, but he went with it. \"Yeah, I've noticed that. At first I thought it was because I always dress like a shoplifter, hoodies and sunglasses inside. But they always seem...\" He thought about it for a moment. \"Like they have a gut feeling, but they're ignoring it because the gut feeling is 'silly.' You get that, too?\"\n\nIsaac's head rose and fell when Willem's chest hitched with laughter. \"Remember what I did to K'taal, you think any Joe Schmoe could do that?\" Willem's chest settled into the slow rise and fall of his breath. Isaac could hear his voice, vibrating against his cheek. \"For a long time, everyone I slept with, everyone I had any kind of relationship with, they had that gut feeling about me. I slept with people who were used to that gut feeling. I met up with dates I found on craigslist. I went to sleazy bars. Things almost never lasted more than a week. Sometimes, I would have a good night with a guy, and then after I'd see them shiver, like I made their skin crawl.\"\n\nHe sighed. \"What I'm trying to say; awkwardly, slowly, painfully... Is that I don't know what the fuck I'm doing. Which is how I've been loving you for weeks, but I haven't said a goddamn thing.\"\n\nWillem dared to look down, and Isaac was smiling, and flushed from sex, cuddling into him. \"Idiot.\" When he said it, it was a term of endearment. \"And here I thought I was being an idiot. Idiot.\"\n\nWillem kissed Isaac's forehead. \"If I say it to you, will I still be an idiot?\"\n\n\"Yes. But less of one.\"\n\nWillem grinned. \"Ouch, babe. Well, here goes.\" He took a deep breath. \"I love you, Firecracker.\"\n\n\"Love you, too.\" Isaac sighed, and was asleep in moments.\n\n\"How do you do that?\" Willem murmured, a coy smile at the corner of his mouth.\n\n*Yo\n\nOnus 07 will NOT take another year to come out. I promise. It is already almost halfway done, and I'm in a good new environment. No drugs, better sleep schedule, new job, etc. It will be easier for me to write.\n\nFirecracker was in hibernation for a while. I definitely foresee a third chapter, in which the red cunt and Izarys make a more dazzling appearance, but I cannot foresee a release date. Hopefully soon! But no promises there.\n\nI want to thank everyone that has read my stories through thick and thin (and thinner, and nonexistent.) You guys are da real MVP. Onus is probably the story that I've strained my promise the most on, and I wont lie, it's given me some headaches. But it will happen.\n\nKisses and Spanks, \n\n-Cruel*"
    ],
    "authorname": "Cruel2BKind",
    "tags": [
        "gay demon",
        "gay love story",
        "gay romance",
        "gay blowjob",
        "gay anal",
        "demons",
        "demon hunter",
        "incubi",
        "demon sex",
        "gay occult"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/firecracker-ch-02-1"
}