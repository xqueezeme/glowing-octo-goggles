{
    "title": "New Neighbour Pt. 11",
    "pages": [
        "\"Good boy, I'm so proud of you.\"\n\nThe words seemed to be inside my head. It took me a while to realise that Ma'am was whispering them against my latex covered head. My body was awash in the amazing sensations running through my cock. Ma'am's thumb was still working it's magic but I was somehow divorced from proceedings.\n\n\"Do you want to cum baby?\"\n\nI didn't even think, I just shook my head. All I wanted was to stay like this for as long as possible, in some sort of pre orgasmic bliss. Her thumb slowed and she began to pump my cock with her fist. Her hand was on my shaft and she avoided touching my head, but her grip was tight. Each pump felt like it forced even more blood into my already engorged member.\n\n\"Remember tonight baby. Remember these feelings and remember that you have made me very happy.\"\n\nHer hand left me and she got up. A minute later the freezing towel was wrapped around me. I felt some disappointment but mostly I was incredibly proud. I had got to the place that Ma'am had been leading me to. A place where my orgasm didn't matter, a place that gave me great pleasure but that didn't have an end. I had given Ma'am many orgasms and after a slight false start I had been able to completely ignore my own needs.\n\nI felt the cage going back on and the thick mask and penis gag being removed. I blinked in the light and looked up at Ma'am's smiling face. She took my hand and pulled me up. We had a long hug and she said she needed a drink.\n\nWe went downstairs and I poured us both a glass of wine. She held up her glass and we clinked glasses.\n\n\"To you Tom. Well done baby, that was definitely a break through moment. Most subs never get to that point, a point where they can totally let go of their own needs and desires. It's almost zen like.\"\n\n\"Thank you Ma'am, I have no idea what happened. I just know that it felt amazing and that I want to be there again.\"\n\nShe touched my face and smiled.\n\n\"Don't get ahead of yourself baby. Firstly, it might not work next time. You might not be able to find that place again, but each time you do I think it will be easier to get to the next time. Secondly, I might not want you there. I might want you desperate and begging to cum.\"\n\nShe was stroking my cage and I was immediately hard again.\n\n\"That's a good place to be too, isn't it? So horny that you think you will go mad if you don't cum.\"\n\nMy cock was twitching in the prison. She was right, I loved that feeling too. It was so intense.\n\n\"Yes Ma'am, I'm sure you will make that happen many times and I do really love it.\"\n\nWe chatted away for a while until Ma'am started yawning. I was placed in my sleep sack in the dungeon for the night but it was quite a while before my cock and my imagination allowed me to sleep.\n\n\"Wakey wakey latex boy!\"\n\nI had been fast asleep. Ma'am simply walked over to me and sat on my face. It was a very nice way to wake up. By the time I had finished my cock was throbbing with desire and Ma'am was purring in satisfaction. She freed me and we went to the kitchen where I prepared breakfast.\n\nWe ate and then Ma'am told me to follow her to the dungeon. She had installed a toilet and a sink down there in the cell since my last visit so that people could be locked in for longer periods. I found this news a little disconcerting, I had got used to spending the night in there but I wasn't looking forward to anything more.\n\n\"I have some vanilla friends coming round later boy. They are spending the night so you are staying down here. Back in a minute.\"\n\nShe had a laptop with her when she returned and set it up next to the cell. My feet were cuffed close together and I was handcuffed in front of my body so that I could use the facilities. She removed my hood and put hi tech wireless earphones in my ears before locking the hood back on.\n\n\"You did very well today boy, but there is always room for improvement so I thought a little brainwashing would help. There are four short videos that will play on a loop, they are all tease and denial which I seem to remember you enjoy.\"\n\nShe gave me a wicked smile as we both remembered her visiting me in my bedroom. Fortunately for me the latex hood covered my embarrassment.\n\n\"Watch them very carefully, there will be questions in the morning that you would be well advised to answer correctly. I have also recorded a message for you to listen to, also on a loop. Enjoy boy. Lights out at midnight and back on at eight in the morning.\"\n\nWith that she locked the cell, hit a few buttons on the laptop and left.\n\nI heard her voice in my head, soft and velvety.\n\n\"You will always obey me.\n\nYour cock will always obey me.\n\nYou belong to me.\n\nYour cock belongs to me.\n\nYour orgasms belong to me.\n\nYou will never cum without my permission.\n\nYou will never cum without my permission.\"\n\nMy cock hardened immediately in my cage. Her words and her voice always had an impact on me, and now they felt like they were inside my head. I will never cum without permission. It was a frightening thought but I wanted that level of control. My cock was raging in the cage as I imagined a life where I literally couldn't cum unless she told me to. My mind was flying around thinking of the levels of desire her denial could take me to.\n\nI shook my head and looked at the laptop through the bars. I smiled, the first video was the Mistress T video that she had watched with me during that excruciating but incredibly erotic time in my bedroom. She had remembered it, and I remembered my embarrassment. But I also remembered how turned on I had been as her finger just ran up and down the underside of my cock. Mistress T had a slave tied down and she unlocked him from a chastity device and teased him mercilessly. The next video was a beautiful woman giving a man a teasing blow job. Her mouth was wet and inviting and she used her tongue on his head driving him crazy. The third one involved some torture. The slave's cock and balls were very tightly bound. The domme masturbated him with one hand while squeezing and slapping his balls with the other. She wasn't messing about either, he was clearly in a lot of pain. Each video was about fifteen minutes long. I got a bit of a shock when the forth one started, it was me and Ma'am! I was in the chair, bound and hooded. I had no idea when she had made it, but then I spent most of my time in the chair blind so she could have set it up any time. My balls were tightly bound and Ma'am's latex covered hands were sliding all over my cock. I could see it trembling and I saw my bound body tensing and pulling at my bonds.\n\nI realised that I had watched them all once and hadn't taken a thing in. I was throbbing like mad in the cage and glassy eyed, horny didn't describe half of my current level of arousal.\n\nMa'am's words were running relentlessly through my head but I realised one message was missing, that I should always try to please her. I tried to compose myself a little and concentrate on the videos. I had no idea what sort of questions she would ask so I just tried to take it all in.\n\nOne thing that I had noticed was that the sub didn't get to have an orgasm in any of the videos. He remained denied in all of them, that was clearly deliberate. I watched them all again, I tried to concentrate but the combination of the arousing imagery and Ma'am's words echoing in my head were turning my brain into mush. All I could think of was my throbbing cock that would never be satisfied. It was sexual hell but I was so incredibly turned on. My cock wouldn't stop throbbing and my balls were aching under the strain. I realised that I was gripping the cell bars tightly in my fists and that my hips were slowly thrusting to their own rhythm. I took a deep breath and tried to relax while closing my eyes for a moment to stop the images that were burning into my retina. But then my only sensory input was Ma'am's mantra inside my head. It was relentless and so highly sexually charged. I put my hands up to my latex hood, I could probably rip it off and take the earphones out if I tried but I knew for certain that Ma'am would be very unhappy if I did that.\n\nI took another deep breath, control yourself Tom. There was nothing I could do to change the situation so I just had to cope with it. It was all part of my training, it was part of the journey. I could either fight it or go with it and accept it. I opened my eyes and saw an erect and tightly tied cock being gently massaged and an equally tightly tied pair of balls being viciously squeezed. When I was fucking Ma'am I had found that the best way to ignore my own desperate desire was to concentrate solely on her, so I tried to concentrate on the videos and watch them intently. It worked to an extent, in that it took my mind off how horny I felt but it didn't stop my raging cock doing it's best to break out of the steel cage. I did notice that I could hardly hear Ma'am anymore. I guessed she was now digging her way deep into my subconscious. I was going to carry those messages with me for a very long time.\n\nI will never cum without your permission, I will never cum without your permission. Could Ma'am actually make this happen? I had no idea. Perhaps my life would be easier if she could, if she could flick a switch in my brain so that not cumming became easy and not a desperate struggle then maybe I would be able to relax and do anything she wanted to please her. Maybe I would fight her because my masochistic side loved the struggle? Those moments on the edge of orgasm, on the edge of sanity, were beautiful. That was when I felt most alive with endorphins flying through me.\n\nTime would tell, the here and now was what mattered. My full cock and full balls demanded my attention again. I couldn't even remember how many times I had watched the videos now, was it three of four? It would definitely be a while yet before the lights went out, would that be my cue to stop watching and try to sleep? I needed to pee and to have a drink. I had some water and sat on the toilet. I had to force my cock down but there was no way I could go when I was this hard in the cage. I just had to sit there and wait for it to soften a little but with Ma'am's words still pumping into my ears it was difficult. Eventually, with constant downward pressure I was able to go. I shook the last drop off and stood up. I was worried about the questions that Ma'am would ask but I really didn't want to watch the videos again. It was a blessed relief to not be rock hard, my balls were grateful for a brief rest from the constant strain. I also realised that I was getting quite hungry, Ma'am had said she would bring some food down but there was no sign of her yet.\n\nI stood around for a bit and stretched out. I felt my cock begin to harden again and groaned inwardly, not again? I will never cum without her permission. That was it, I was hard again. It was impossible to stop. I looked down at the red, taut skin bulging through the bars. It twitched, it wasn't my doing but I couldn't stop it. Surely the pattern of the bars would be imprinted on my cock forever by now.\n\nThere was a noise and I saw Ma'am at the top of the stairs. She was smiling but had a finger over her mouth indicating that I should remain silent. Like a cat she padded down carrying a bowl which was put through the bars. It looked like cold leftovers. She beckoned me to the edge of the cell and put one hand behind my neck and the other round my balls. She kissed me, deeply and passionately while squeezing my balls hard. I moaned deep down in my throat both in passion and pain but Ma'am took no notice. My cock was like iron as her soft tongue explored my mouth. Then she was gone, swaying her way up the stairs. I was left breathless with aching balls. I struggled to my knees and put a finger into the food, it was stone cold. What time was it? Dinner at eight maybe? An hour, maybe two for the food to go cold. It was ten at the latest so two more hours before lights out. I ate it and washed it down with a gulp of water. I didn't want to drink too much as having a pee had proved quite tricky.\n\nI will never cum without her permission. I wondered if the batteries would run out but I knew they wouldn't. Ma'am always took care of the details. I went back to the laptop and saw a wet mouth slowly slide over the swollen head of a desperate sub's cock. I moaned as my body somehow pushed more blood into my tortured cock. How was she using her tongue? How many times did she take him deep inside her? I tried to look at it analytically and memorise the details but all I could think of was how wonderful her mouth would feel on my squashed glans. I didn't want to cum, I just wanted to be free of this prison. I wanted to be free to be properly hard and to feel a soft tongue rather than hard steel digging into my flesh.\n\nI kept watching as another hour long cycle of the four videos played. I glanced down a few times, to see my throbbing shaft and deep red aching balls. Suddenly there was a click and the lights went out and the computer screen went blank. Thank god for that I thought. Then I saw a line of text appear on the screen.\n\nYou will never cum without my permission boy.\n\nI just stood and stared at it while Ma'am told me the same thing through my earphones.\n\nAt that moment it felt like the truth. I would never cum without her permission.\n\nI dropped clumsily to my knees and moved to the thin mattress and pillow Ma'am had generously provided. I lay down with my legs and hands cuffed. I closed my eyes but I could still see all the highly sexual images that I had been watching flashing through my brain.\n\nYou will always obey me\n\nYour cock will always obey me.\n\nYou belong to me.\n\nYour cock belongs to me.\n\nYour orgasms belong to me.\n\nYou will never cum without my permission.\n\nYou will never cum without my permission.\n\nObviously this hadn't stopped when the videos had. It was still being relentlessly whispered into my mind. My cock was still standing straight up, still straining against the steel. I will never cum without her permission. I noticed my whole body was tense. It was as if all my nervous energy, all my lust was being directed into my tortured cock. It was never going to go soft and it was never going to experience another orgasm. I was locked in a permanent cycle of denial and arousal forever. I deliberately stretched every muscle I could and tried to slump back into a relaxed state. I had to calm myself. I had been in situations like this before although probably not this intense. I just had to lie there and wait, be at peace with my body and eventually my cock would relent and let me sleep. It worked, but it took a long time. I lost myself in Ma'am's words and let myself drift slowly off to sleep. Amazingly I slept like a log. When the lights came on I was totally disorientated. I had been having weird dreams but they slipped away as soon as I woke. It was only when I tried to move that I remembered where I was. My cock was filling the cage but it wasn't hard. What I did know was that I really needed to pee. I was stiff from a night on the thin mattress but I slowly got up and relieved myself.\n\nYou will never cum without my permission. There it was, filling my entire mind. I wanted to see Ma'am and throw myself at her feet and show my total submissiveness to her. I wanted to hold her tight, kiss her, and beg for her dominance. She had me. I was hers.\n\nI noticed the laptop had started up with the lights. I decided that I had better watch the videos again to try and make sure I could answer her questions when she returned.\n\nUnsurprisingly my cock quickly got hard again, pulsing and twitching against the bars. In the back of my mind I realised it was only eight o'clock. Ma'am's friends were probably still in bed, then there would be a leisurely breakfast. I was going to be here for hours yet.\n\nI was right back where I had been last night, suffering a sensory overload. I had Ma'am's voice echoing through my mind and my eyes were glued to hard desperate cocks being teased and denied. Almost immediately I was incredibly turned on and straining in the cage. Usually I loved the feeling but this was too much. I had no idea how long I had been hard for last night and now I was going to be in the same situation for many more hours. Hands pumped lubed up cocks, mouths and tongues licked and sucked, fingers squeezed tied up balls again and again. I watched all the videos one more time in a haze of sexual tension. I barely noticed that I was watching them again when the computer shut down, the earphones clicked off and I realised that Ma'am was coming down the stairs.\n\nI immediately fell to my knees and bowed my head.\n\n\"Good morning boy, that's a lovely way to be greeted. How are you?\"\n\nI looked up, she was only wearing leggings and a tee shirt but she looked amazing.\n\n\"Good morning Ma'am. I am horny, desperate, rock hard and yours.\"\n\n\"Nice. Did you enjoy the videos? By the way, it's actually gone ten o'clock, I told a little lie about when the lights were coming back on.\"\n\n\"I did Ma'am. It was a nice touch to include that Mistress T video. Thank you.\"\n\nShe laughed, \"I thought you would like that. She is your favourite after all, isn't she boy?\"\n\n\"She was Ma'am. I've got to know a couple of very interesting people since I used to watch those sort of videos.\"\n\nShe laughed again, \"have you now? Anyway, I said there would be questions. First, how old is Mistress T? Second, how many orgasms have you given me this year? Third, how many times did you watch each of the videos?\"\n\nMy heart sank. I had been watching the videos to try and anticipate questions about them. These questions were nothing to do with the content. How was I supposed to know how old Mistress T was? How was I supposed to know any of those answers.\n\nI noticed the sparkle in her eye and let a little smile develop.\n\n\"Ageless, not enough and way too many times Ma'am.\"\n\nShe laughed again, \"good answers baby, particularly the second one. I just wanted you to really watch the videos so the threat of questions seemed like a good way. Did it work?\"\n\n\"Jesus Ma'am, I watched and watched and watched. I'm guessing the desired effect was to make me as horny as hell. I was desperate at times. I've never been so turned on for so long. And your voice drove me insane. I will never cum without your permission Ma'am.\"\n\nShe unlocked the cell and began to take my cuffs off.\n\n\"We'll see about that baby. Let's get you upstairs and in my bed. You're not the only horny person here.\"\n\nShe led me to the bedroom by my throbbing cock and lay down on the bed with her legs wide apart.\n\n\"I need a long slow morning orgasm boy so get to work.\"\n\nI didn't need telling twice and I was between her thighs in seconds. It was a little awkward getting on to my stomach as I had to push my hard cock down so that I could lie down but I didn't care. This was my happy place. I didn't care how horny I was, I didn't care about anything except her beautiful pussy and the pleasure I was going to give her. As my tongue made contact with her moist and swollen lips I idly wondered about how many orgasms I had given her, but my answer seemed to cover it. Not enough, it would never be enough.\n\nI wriggled around to get as comfortable as I could, I was going to be here for a while. Ma'am made a quiet murmering sound as I gently pushed my tongue deeper between her folds. I gently moved up and down being careful to avoid her clit for a while. She brought her knees up and I put my arms around her upper thighs holding her close to let her know my head was locked in now. I wanted to give her the best orgasm I could. I wanted to be enveloped by her smell and taste, I wanted to feel her writhing in orgasmic ecstacy that I had created. I could already feel tiny tremors running through her legs so I gently penetrated her as far as I could with my tongue and used it to slowly thrust in and out for a couple of minutes before making my way to her clit. There was a small gasp of pleasure as I touched it, she was definitely ready to begin the inevitable climb to an orgasm. I set a nice slow rhythm but I moved my tongue erratically so she never knew exactly what was coming next. I could hear her soft moans as her arousal increased. I would have smiled if my mouth wasn't so busy. I knew I could make her cum in a matter of seconds if I tried, but that wasn't what she wanted. It was odd, this was the only point in our relationship where I had any semblance of control. I was in charge of her pleasure and she trusted that I knew her well enough to make her cum when she needed to. It didn't need to be said that only my best efforts would be acceptable of course. It was time to accelerate things so I firmed up my movements and began applying more pressure to her willing clit. I started to feel little tremors in her stomach muscles now, and a growing tension in her legs. Her hips moved toward my mouth to increase the pressure but I held her where I wanted her with my arms and shoulders. This was my time, her hips had moved involuntarily because she craved more friction. If there was a conscious motion to encourage me then I would work with her but for now I used my experience to ever so slightly resist her. However I did increase the speed of my tongue a fraction to slowly increase her arousal. Every once in a while I applied more pressure for a few seconds before relenting. Soon there was more movements from her legs and hips, I used this as my cue to take her close. I surrounded her clit with my lips and sucked it into me. Her clit was proud against my tongue and I started vibrating the tip against it. There was an immediate effect as I felt her body jump and heard a long slow moan. I kept just the tip gently flickering across her and I felt her passion growing. Again her hips shifted but because my shoulders were against her thighs and cheeks it made no difference to my position. My tongue was moving fast but barely making contact. She was getting closer but I sensed that it wouldn't be enough. I knew I could keep her waiting a little while longer so I did, feeling the tension in her grow. Her muscles were trembling and she was breathing deeply. I increased the pressure a tiny bit more, that was it, that was enough, but it wouldn't happen immediately. We both knew it was coming. I adored this moment when I knew that I was taking her to a place of total ecstacy. Her groans got louder and her whole body started to shake. I slowed my tongue down just before she came.",
        "I wanted that pre orgasm moment to last just a second longer. The room filled with a long strained moan as she hit her peak. I could feel all her muscles tensing and twitching as a huge orgasm overtook her whole being. I could feel my cock hardening even more, it was as if her sexual power was flowing into me. At that moment it didn't matter to me at all if I never had another orgasm as long as I was able to do this for her. Her moans were slowly subsiding and the tension was gently easing. I heard her whispering, \"oh baby baby, that was magical. Beautiful.\"\n\nShe took another minute to recover.\n\n\"I loved the way you slowed just as I came, it seemed to take an age for my orgasm to hit. Do that again, see if you can moment last even longer.\"\n\n\"Yes Ma'am. I'll do my best.\"\n\nI settled back down between her thighs. I was gentle to begin with as her clit was still very sensitive but as her arousal grew I was able to be a little more forceful. Ma'am began moaning quickly, she was feeling really turned on so I eased back a little. I wanted a slow approach to her next orgasm, I had learned through my own teasing that a slow steady rise would let me control her better. I used my forearms to hold her tight so that I could put my hands on her abdomen. I could feel her muscles tensing and twitching, I needed all the sensory input I could get to follow her command. She was closing in and I allowed the rise to continue, it wasn't time yet. Her thighs were starting to move against my head and my fingers could feel her muscles pulsing as her orgasm got closer and closer. I needed to work out at what point her orgasm was going to be unstoppable, but just before that point I had to pull back. It was going to be a delicate balancing act. She was close, really close and I felt a little extra tension in her abdomen. I slowed, barely touching her clit with the tip of my tongue. The tension remained and her moans became slightly strained and desperate. I knew I had to keep some friction on her clit or she would drop away from the brink so I continued with the lightest of feathery flicks.\n\n\"Ahh, ahh, fuck, fuck. Jesus.\"\n\nShe was orgasming, but she was tipping over the edge incredibly slowly. Her moans were getting higher and higher in pitch and her whole body seemed to be vibrating. She was there, suddenly every muscle started shaking and all the air whistled out of her. I felt her gasp for breath and kept giving her the slightest flicks. The dam broke and she bucked hard, her hands jammed my head into her groin. Her breathing was erratic and desperate, I almost became concerned. With one last loud groan she flopped back onto the bed and pushed my head away. I glanced up, her eyes were closed but her mouth was open as she took in big lung fulls of air.\n\n\"Oh my god, oh my god. Oh baby. That was... I don't know what that was but fucking hell\"\n\nIt seemed like I had done a very good job. Ma'am hadn't moved an inch, it was as if all the energy has drained out of her.\n\n\"I'm done baby, totally done. Mmm good job. Come up here.\"\n\nI moved and lay next to her, she pushed me onto my back and lay on her side, head on my chest and leg stretched over me.\n\n\"Well that was different baby. I can't quite describe it, I'm not sure I would want to cum like that every time but it's definitely something I will order you to do again.\"\n\nHer hand slipped down to my cage and began to caress my still hard cock.\n\n\"He's still very happy, lovely.\"\n\n\"I don't think I have the energy to tease you properly right now, so I will put you back in the dungeon and let you watch some more videos. We want you nice and hard and desperate, don't we?\"\n\nI was already rock hard and the idea of more of what I had gone through yesterday was scarily arousing. Why did I do this to myself? I clearly remembered how incredibly frustrated and aroused I had been but my twitching cock wanted more.\n\n\"Yes Ma'am, please let the videos and your words tease me to distraction while you relax and recover.\"\n\n\"Come on then boy.\"\n\nShe put on a dressing gown and we went down to the basement.\n\nMa'am played around with the laptop for a couple of minutes, blew me a big kiss and swayed her way up the stairs.\n\n\"Watch them closely boy. Who knows what I may ask you.\"\n\nThere was a click and both the laptop and my earphones sprang into life. I quickly noticed a different set of messages this time.\n\n\" You will never cum without my permission.\n\nYou cannot cum without my permission.\n\nYou do not want to cum without my permission.\n\nYou will find it impossible to cum without my permission.\"\n\nMy cock immediately began to fill to bursting point, it's skin taut against the bars. I groaned with lust, could she do that? Could she make it impossible to cum without her permission? I had no idea but I had no reason to doubt her. She always got her way, why would this be any different. Her control of me was absolute.\n\nI took a breath and looked at the laptop. It was playing different videos from last time but the theme was distinctly similar. Bound and helpless subs were being teased. Sometimes it was gentle and kind, sometimes harsh and cruel, but one thing remained the same. They never had an orgasm. I would never have an orgasm without Ma'am's permission. As my cock throbbed relentlessly in the cage I imagined my future.\n\nIn some ways it was such a small thing, the ability to have an orgasm whenever you wanted. But as soon as it is taken away it becomes the most important thing in the world. It dominated my life, no orgasms without Ma'am's permission. What was it, a minute? Not even that, thirty seconds of pleasure, but having it removed had changed my life. I had fantasised about chastity, but those fantasies always ended in an orgasm, which in hindsight, was just daft. Never in my wildest imagination had I ever thought that I would be in this situation. No, that was a lie, I had never fantasised about this. One orgasm every few months, endless tease and denial, what felt like an almost constantly hard and straining cock wrapped in a steel cage. I had on occasion, usually alone in the cell in my sleep sack, wondered what the hell I was doing.\n\nI should be playing the field at university, I should be chatting women up, ending up in bed with them and having as many orgasms as I want.\n\nI should be doing that, I could be doing that, but that would be a lie.\n\nI knew in my heart of hearts that I was born for this. Ma'am hadn't forced me or coerced me. If I wanted to leave her, she would remove the cage and wish me well. There was one undeniable fact. The reaction I had both physically and mentally whenever denial was mentioned. I knew it, and Ma'am knew it. Every time she talked about my denial I got incredibly turned on. My cock got hard and my heart raced. I found it utterly irresistible. I was addicted to the rush of it, the thrill of it. Combine that with the beautiful and amazing woman who was able to fulfil all those fantasies, I was exactly where I wanted and needed to be.\n\n\"You will never cum without my permission.\"\n\nI watched a tongue delicately slide up an erect shaft.\n\n\"You cannot cum without my permission.\"\n\nI watched a smiling domme playing with a locked cock.\n\n\"You do not want to cum without my permission.\"\n\nI watched fingernails digging into a swollen testicle.\n\n\"You will find it impossible to cum without my permission.\"\n\nI watched a leather clad hand pumping away at a hard cock. My own was thumping away in the cage. I couldn't stop it and I didn't want to. I was complicit in my own arousal. I wanted to be hard, I wanted to be shaking with need as Ma'am's hand or tongue caressed me and I really wanted to be rock solid in the cage as I gave Ma'am the pleasure I was denied. Making her cum was the most important thing in my life. I seemed to be instinctively good at it, and with her advice and a lot of practice I could give her inordinate amounts of joy. I had always deferred to women, they seemed to have so much more knowledge and insight into life. I knew that when I was younger my deferential nature was mainly down to shyness but now I knew it was integral to my being. Ma'am had taught me that, and even Alexis who was the same age as me had helped the process.\n\nI wasn't shy now though. Now I was proud of my submissiveness, I had found my place. Submissiveness wasn't a weakness, it was a strength. It took character and a strong will. Every time Ma'am praised me I felt proud and happy that I had pleased her. People who didn't understand might think that I was weak and that I should stand up for myself. But they were wrong. I was standing tall and trying to be true to myself. It wasn't easy, it was far from easy, but being good at anything wasn't easy. I wanted to be the best sub I could be and I was going to do my level best to be just that.\n\nEvery time my cock throbbed with lust it strengthened my resolve rather than weakening it. Every time I survived a tease session without breaking I became a better sub. I wanted to look Ma'am in the eye as an equal. I wanted her to look me in the eye and see a strong and proud man who was devoted to her. I wasn't going to break. I wouldn't cum without her permission. I would take it all and stay strong. I didn't want to cum without her permission, not ever. I could do anything she asked of me. I would never cum without her permission, it was impossible for me to ever cum without permission.\n\nOh my god!\n\nI froze. I looked down at my imprisoned cock and I couldn't imagine it cumming without Ma'am allowing it too. All I wanted it to do was please her. It could give me all this excitement for months and months without cumming. In fact it only gave me all this excitement because it hadn't cum. What was the point of an orgasm? Suddenly I wasn't sure. I really didn't want one. If Ma'am decided that I should cum then I would enjoy every second of it, of course I would, but other than that I realised that I really did prefer this endless denial, arousal and lust. Already I had said no when Ma'am had asked me if I wanted an orgasm, and now I knew that I would never ever say yes.\n\nA pair of full lips were sucked tight around a swollen glans and my cock twitched. I had been lost in my own internal dialogue, I needed to concentrate on these videos. Another little switch had flipped in my brain though. I wanted to watch them and get as turned on as possible. I would absorb the images and Ma'am's words. I would work with them and not fight them. After all, I didn't want to cum anymore.\n\nAh come on. Who was I trying to kid? Of course I wanted to cum. It had been so long now, so desperately long. But was it just the physical release that I craved? I tried to remember what it felt like, the moment when those muscles spasmed and ropes of hot cum flowed out. The joy of an orgasm. But what then? A mess in front of me and a slowly softening cock. I would be spent both physically and mentally. I didn't know how I would react now. I'm sure I would thank Ma'am profusely but how would it affect me mentally? Would I still feel as submissive as I currently did? Would I still want to please Ma'am as much? I felt like I would, but I couldn't really be sure. Maybe it would be easier not to find out. If I stayed this horny then I would worship Ma'am without hesitation.\n\nI froze again. My head was a mess. It was all over the place, flitting from one idea to another. I needed to calm down and try and think rationally. There was one thing that I knew for sure. Ma'am was my anchor. I trusted her and she cared deeply for me. She would look after me, she would keep me safe, physically and mentally. All I had to do was be the best me I could be. I also knew that I could talk to her, I could tell her about where my head was. I wasn't sure I really had the words to describe my feelings but I was sure she could help.\n\nI had watched all the videos twice, they were about to start the third cycle when I realised that Ma'am was coming down the stairs. She switched the laptop off and I was plunged into silence. She unlocked the cage and took me over to the chair. I was quickly strapped down with my legs wide apart, and then she gagged and blindfolded me. I waited for a minute until the freezing cold towel was wrapped around my throbbing shaft. It was a shock, but also a relief. My balls were aching badly, I had been straining in the cage for over two hours. It seemed to take ages to go soft. I heard Ma'am laugh.\n\n\"Oh baby, you know I love you being hard and horny for me, but if you don't get soft soon I'll just have to leave you in the cage. Don't you want to be free and properly hard so that I can tease and deny you?\"\n\nI groaned around the gag.\n\n\"Don't you want to feel my hot wet mouth around your sensitive glans baby?\"\n\nDespite the freezing towel I felt blood surge into my shaft, it wasn't going to go down now.\n\n\"OK baby, I'll leave you here for a bit to see if you calm down.\"\n\nMa'am spent a few seconds wrapping the towel tightly around me and left. I could feel myself twitching and jumping with lust and frustration. I took a deep breath and let my mind go blank. I tried to relax my muscles and let nature take it's course. I had no stimulation at this point and surely I couldn't stay hard forever, could I? The cold was seeping into me and eventually I noticed a softening in the cage.\n\nI felt Ma'am's presence just before I felt the towel being removed. She placed her hands on my inner thighs and the heat seep into my flesh.\n\n\"Is he ready to be unlocked baby, or does he want to stay in the cage, trapped behind those cruel steel bars forever?\"\n\nHer hands slid slowly up my latex clad thighs.\n\n\"Oh look!\"\n\nMa'am's words had caused an immediate surge of blood into me and my cock returned to full hardness in seconds.\n\n\"Well baby, I can't get the cage off now, can I?\"\n\nShe started stroking my full balls, fingertips caressing the bulging skin.\n\n\"As I'm such a caring lady, I will give you another chance. See you in an hour or so.\"\n\nShe moved away, there was a little click and her voice appeared on my head again repeating the same phrases over and over again.\n\n\"You will never cum without my permission.\n\nYou cannot cum without my permission.\n\nYou do not want to cum without my permission.\n\nYou will find it impossible to cum without my permission.\"\n\nI closed my eyes and tried to ignore my cock as it crushed itself into the bars. I flexed in my bindings but there was no give. No give in the cage, no give in my bindings and no give from Ma'am either. I realised that she had chosen her words deliberately, knowing that I was almost certain to react to them. I laughed to myself, no orgasm without permission? I couldn't even get out of the cage at the moment I was so horny.\n\nI tried to relax, and let the words flow through my mind. I wasn't going anywhere so I might as well go with it. The ache deep in my balls returned quickly as they hadn't really had any time without an erection. I did my best to ignore them and as time crawled by there was a slight softening in the cage but it was still throbbing and occasionally twitching.\n\nI was in a world of my own so it was a shock when I felt the towel being wrapped around me again. Ma'am turned off the laptop and squeezed the towel around my shaft. She also gently forced my shaft downward.\n\n\"Last chance boy.\"\n\nShe didn't say anything else, she was giving me a fighting chance this time. The towel seemed colder this time and slowly but surely it did it's job. Ma'am didn't mess around, as soon as it had softened she quickly got the cage off and firmly pulled and wriggled the ring off before I could react. Her warm hand squeezed my cold shaft and it quickly firmed up. She massaged it to full hardness for a couple of minutes then surprised me by clambering on top of me. She used the chest straps to pull herself up and positioned herself astride my upper thighs. By pushing down with her thighs she was able to move herself up and down. She went up and her fingers positioned my cock and then relaxed down. I felt myself glide into her hot tunnel. She pulled her thighs up and my whole shaft was engulfed in her wetness.\n\nShe allowed herself a little moan of pleasure as I filled her up.\n\n\"I'm going to use your cock for my pleasure boy. It's all about my pleasure, always.\"\n\nShe moved her hands so that she was holding on to the bindings around my upper arms and then with her thighs she began to slowly rise and fall. It felt absolutely delicious as her hot wet walls slid across my erect shaft. The bindings were too tight for me to help her in any way so I just had to sit there and enjoy it. This was for her and her alone. My cock was going to make her orgasm, that was all that mattered to me. She was taking my full length, the only part of my face that was exposed was my lips as they stretched around the gag but they could feel her breath getting quicker and deeper. She paused with just my tip inside her then let herself drop heavily onto me. There was a guttural moan. Again, every millimetre of my trembling shaft was forced inside her. She stopped just for a moment and wriggled on me, completely impaled. Then up, faster now, she pounded her pussy into me. She licked my lips around the gag as the pace got even faster.\n\n\"Oh yeah. Your cock, my pleasure boy. Yes, yes.\"\n\nI could feel the chair moving with the force as she fell quickly onto me, picking her thighs up to get my completely inside her. I realised that despite how good it felt, all I wanted was for her to have a huge orgasm. This wasn't time, that would come at some point, but not now. She became even more frantic before a loud groan preceded an equally loud orgasm. I felt her holding on to the straps as she bucked her way through the ecstacy. The groans slowly turned into contented whimpers as she slowly came down from the high. After a minute she kissed my stretched lips and slightly clumsily dismounted. She knelt between my legs, and used one hand on the base of my cock to pull it down a little. Then I felt her tongue licking me. She covered my entire cock, lapping her juices from it.\n\n\"I love the taste of my orgasm on your cock baby. All that pleasure coating your big hard organ.\"\n\nShe stopped licking and took my head in her mouth. Her tongue went to work, sliding across my frenum while her hand gently pumped my shaft. It was electric, my cock tingled and twitched with excitement. I didn't have permission to cum, and it seemed that for quite a while I didn't want to cum either. I felt completely relaxed. The feelings she was creating in my cock, in my whole body in fact, were so good that I wanted them to carry on for as long as possible. Why would I ever want them to stop? Her tongue, her lips, her hand gripping my shaft, it was beautiful. Absolutely beautiful. Then suddenly she stopped.\n\n\"Enjoying that baby?\"\n\nI nodded furiously and she laughed.\n\n\"I'm feeling quite horny myself. Would you like to give me some pleasure instead?\"\n\nI didn't hesitate for a moment and nodded furiously again. She started loosening the straps with a stern warning about touching myself. The blindfold and gag were removed and I stood up. We stood there looking at each other, me covered in latex with a wet hard cock bobbing in front of me, and her stark naked.\n\n\"Would you like to touch yourself boy?\"\n\nI looked down, my hands were by my sides just inches away. I hadn't touched my own cock in about eight months apart from feeling the taut skin as it bulged through the bars. Eight months! I could barely remember what it felt like. Eight months of being completely unable to do what I wanted, when I wanted, to my own cock. Would I have accepted the chastity device all those months ago if Ma'am had explained what I was going to go through? Probably not, but I had changed, Ma'am and chastity had changed me. This was exactly where I wanted to be, and where I needed to be. You could argue that Ma'am had tricked me all those months ago, she had used my innocence and teenage needs against me. But truthfully, she hadn't dragged me unwillingly down the rabbit hole, I had taken her hand and run headlong into it with her. There had been some dark moments, some very tough times, but I didn't regret it for a second. She had made me a better person, a better human being and not just a better sub. I was proud of myself about that. I tried to imagine where I would be without her. Probably in my bedroom jerking off for the umpteen time, feeling bored and listless. I probably wouldn't be at a decent university, I might not even have gone to university. I would probably be in some dead end job earning rubbish money. Instead I was here, with the most beautiful and amazing woman feeling more alive than I could ever have imagined.",
        "\"Honestly Ma'am, I don't. It would be interesting to hold it again, and to remember how it felt, but it's not mine. It's yours and I will never touch it without your express permission.\"\n\n\"I believe you boy, one hundred percent but I love having total control over you and taking away your choices.\"\n\nWith that she found the thick leather belt and a pair of leather cuffs and secured my hands by my sides.\n\n\"That's better isn't it boy?\"\n\n\"Yes Ma'am, it always feels good to be bound and helpless. Thank you Ma'am.\"\n\nShe held my cock firmly and slowly pumped it while looking me in the eyes. I stared back and moaned quietly. As always I was lost in her eyes. I could see her passion and her cruelty in them. Every time I looked into them I knew exactly where I stood. I was hers. I was her toy, just a plaything that she was going to extract as much pleasure from as she could.\n\nShe pulled me by my cock.\n\n\"Come on boy.\"\n\nWe went up to her bedroom and she put me on my back with cushions under my head and backside. She climbed on top and got herself comfortable in the sixty nine position. The pillows made it comfortable for both of us to get busy.\n\n\"Take as long as you like boy and don't worry about what's going on down here. Always remember that you are here for my pleasure.\"\n\nI didn't need reminding but Ma'am was simply reinforcing the point. She pushed herself back a little and my mouth was pressed into her beautiful pussy. It was time for me to do what I did best, bring Ma'am slowly to an incredible orgasm. Her pussy was already wet and slippery and my tongue glided easily across it. I played with her lips, I gently penetrated her, I moved my mouth slowly up and down using my own lips to create more friction. I heard her sigh as she got even wetter. She knew she was in for a wonderful ride and the anticipation was arousing her almost as much as my touches. She had my balls in a tight grip with one hand and her other was holding my shaft tightly, pulling down so that my swollen head was completely exposed. Her lips swallowed my glans and her tongue began to swirl around my most sensitive spots. Somehow my cock managed to get even harder as her soft but insistent tongue teased me. I was concentrating solely on her pussy. I put the amazing sensations she was causing to the back of my mind and closed in on her clit. I kept my tongue still, and moved my whole mouth instead. The movement of my tongue on her clit was mirrored by my lips on hers. Her mouth was full but I could feel her breathing through her nose on my exposed balls. I realised that what she was doing to my head had got me a little hot under the collar so I tried to slow things down on her pussy in the hope that she would ease up a little too. I was under control for now but Ma'am wasn't making things easy for me. Her tongue didn't stop, it was constantly moving from side to side, up and down. I dragged my mind back to Ma'am's clit, that was what I needed to think about. I had to concentrate on all the little spasms and twitches in her body. I took her clit as deep into my mouth as I could, sucking her into me. I let my tongue play very softly across her, building her up very carefully. Fortunately she responded in kind and her tongue slowed it's progress over my shiny glans. I was determined to try and repeat her previous orgasms when I had managed to delay her orgasm as she came. This was a new trick so I thought about it as she got close. Suddenly my cock popped out of her mouth but any ideas I had about the tease torture relenting were quickly proved wrong. She pushed my cock down against my stomach and went to work on my frenum, my ever so sensitive frenum. He tongue made small gentle circles, sometimes tiny, sometimes a little bigger.\n\nI had to concentrate on Ma'am's imminent orgasm. Her tongue was creating the most delicious sensations in my cock and if I thought about that for a second I would be in serious trouble. I could feel her inner thighs starting to tremble and her breathing accelerating. Fortunately her tongue stopped as her moans became more frantic. My tongue was moving quickly, but very lightly over her clit. Just before her orgasm hit I slowed my pace and she very slowly tipped over the edge. I was barely touching her but she had passed the point of no return. However because of the lack of stimulation it took many seconds for the orgasm to take hold. Then suddenly her whole body tensed, then starting shaking. She moaned loudly and shuddered on top of me. I kept a delicate touch on her clit as wave after wave of pure pleasure crashed through her.\n\n\"Yes, yes baby. Keep going. Oh fuck.\"\n\nI continued with light touches for a few seconds and tried to judge when to give her more. She was still bucking and shaking but the movements had become slightly less frantic so I applied more pressure. She reacted immediately so I gave her more. I realised she was going to have another orgasm as my tongue pressed down on her very sensitive clit. I made sure my tongue didn't flick at her as she was super sensitive so I just vibrated it on her. She came like a train, loosing control completely and crying out in ecstasy. She jerked her clit away from me, it was too much. Her whole body was quivering as her second orgasm ran it's course. It took a couple of minutes for her to recover, then she turned around and gently slid me inside her soaking pussy with a little shudder of pleasure.\n\nShe sat up, fully impaled on my trembling cock.\n\n\"Your tongue just gets better and better baby. You're going to turn me into a nymphomaniac, I can't get enough.\"\n\nI smiled and licked some of her juices of my lips.\n\n\"My pleasure Ma'am. I love making you cum, its a beautiful thing.\"\n\nShe rocked slowly back and forth.\n\n\"How are you doing baby? I gave you a good going over and you seemed to survive easily.\"\n\n\"I wouldn't say it was easy Ma'am, but I somehow managed to control myself. The brainwashing, along with your relentless training is obviously working. Thank you Ma'am. The less time I spend worrying about myself, the more time and energy I can devote to you.\"\n\nI matched her gentle rocking with little thrusts of my hips and she made a low growling moan.\n\n\"Oh yeah, that's good baby. So do you still think about when you're going to have an orgasm?\"\n\n\"Sometimes Ma'am but most of the time I'm just enjoying being so incredibly horny all the time, and how good it feels. I wonder if an orgasm would change that.\"\n\n\"I've probably got you to a point where it won't. In fact you will almost certainly feel even hornier when you cum. Your mind has forgotten how good an orgasm feels and is now completely focused on how good feeling horny all the time is. I will need to retrain you after you cum, lots more tease and denial, lots more edging, so you remember that endless denial is the norm for you.\"\n\nShe leaned forward, elbows on my chest and stared into my eyes. She was thrusting more intensly into me now.\n\n\"You can't get enough denial can you baby? You love being rock hard and desperate, don't you? I love it too. I love keeping you like this. I gets me so worked up. Baby, I'm going to use your cock to have another orgasm and you will lie there and take it. Can you feel my pussy contracting on your desperate cock? Oh yeah, yeah.\"\n\nI could, I could feel every millimetre of her beautiful tunnel sliding over my tortured member but all I was thinking about was how much pleasure it was giving her. I stared into her eyes, watching her as she moved faster and faster until she came. I moaned with her, my muscles tensed with hers and I trembled with her. I did everything except cum. I was in my own personal world of ecstasy as she came all over me.\n\nShe slumped across my latex covered body, breathing hard.\n\nShe sighed, \"enough. I'm done. Good grief boy, stop getting me so turned on.\"\n\nShe gently pulled herself off me and lay beside me. Snuggling into me, her hand found my cock and gently massaged it.\n\n\"It's Christmas eve tomorrow, when are you going back to your mother?\"\n\n\"I need to go in the evening Ma'am. My mum's sister is coming over, then we'll have Christmas lunch. I should be able to come back here later that evening. Is that OK with you?\"\n\n\"Of course it is. Its important to be with your family if you can at Christmas. We can exchange presents when you come round. I hope you remembered my spending limit boy.\"\n\n\"Of course Ma'am, it's the thought that counts, not how much you can spend.\"\n\nMa'am was manipulating me more forcefully now, gripping my solid shaft tightly and going up and down the full length. I groaned in frustration as my member trembled with pent up lust.\n\n\"You need to understand the next step boy. At some point I will give you permission to orgasm. However that does not mean that you will necessarily have an orgasm. All it means is that if I decide to make you cum, then you can. Your self control is admirable boy, you are doing very well indeed but there will be times when I want to take you to the edge and turn you into a trembling desperate wreck.\"\n\nI wasn't far from that now. As always happened, I found my self control was tested far more when I didn't have something to concentrate on, like Ma'am's pleasure. At the moment I had nothing to think about other than Ma'am's words and her hand going firmly up and down my needy cock. I heard her words in my subconscious, she had said that I would be unable to cum without permission. I didn't have permission but I was feeling so turned on. However I didn't seem to be getting to the edge, her hand felt amazing but my level of arousal seemed to have plateaued. I was just riding the waves of pleasure, enjoying the arousal for what it was.\n\n\"Good boy, very good. We need a shower, you've been in that latex for a long time now.\"\n\nShe gave my cock a sharp and unexpected slap and jumped off the bed. I followed her to the shower and she peeled the sticky suit off me. She threw it into the corner and told me to clean it later. Much as I loved latex, it was lovely to be free of the tight suit and for my skin to feel fresh air again. She made sure my hands were secure again and we showered together. Ma'am kept her body against mine as much as possible and she spent an unnecessarily long time cleaning my cock.\n\nShe stepped back, \"here it comes baby. I think this might take a while. The cold water hit me hard, straight in the groin. I jumped but managed to stay still. Ma'am was right, it took nearly ten minutes for my cock to slowly soften. She actually had to put the ring on with the water still running just to make sure it stayed flaccid enough. She turned the water off and quickly jammed the cage over me. It had to be quick as my shaft was already starting to fill up.\n\nWe went downstairs and I made drinks.\n\nShe stared at me over her cup.\n\n\"I never expected this.\"\n\nI gave her a quizzical look, \"what didn't you expect Ma'am?\"\n\n\"I didn't expect you to become such a good sub. No, scratch that. I didn't know that you really were submissive. Some people think they are sub. Some just do what they are told, they acquiesce, they bow and nod and simper. Some fight, always moaning and arguing, always looking for a way out. A real sub is hard to find, like a real man is hard to find in the vanilla world. But you, despite your lack of experience, have taken everything I've thrown at you, and you've grown every day. You have trusted me every step of the way, it's beautiful Tom. Thank you.\"\n\nI was taken aback by this. I knew Ma'am was proud of me, and that we had something special but this was very heart felt and earnest.\n\n\"Thank you Ma'am, thank you so much. I think it's beautiful too. I am young, but I'm no fool, and I knew that you were a good person straight away. I had no idea we would end up here, like this, That scene, or whatever you want to call it, in the stables when I first worked for you, I was yours right then. You triggered something, it was a light bulb moment. I didn't understand it then because I was so innocent. I wanted that power and control my life. You had it, and it was so effortless. I knew you were real, I'm just so glad that I didn't run away. It was pretty scary but I'm sure you know that. You haven't put a foot wrong Ma'am and I would not be the sub and the man I am without you. Thank you Ma'am.\"\n\nShe put her cup down and smiled.\n\n\"Come here boy.\"\n\nWe embraced tightly, she kissed me then pulled her face away so she could look me in the eye.\n\n\"This is good baby, really good.\"\n\nI felt her push her body into mine and I responded immediately. She giggled.\n\n\"At this point most couples would fuck like crazy, but we're not like most couples. I am very tempted to let you share my bed tonight, very tempted.\"\n\nShe put her hand between us and gently cupped my balls and my cock got even harder.\n\n\"Would you like to spend the night curled up with me boy? Unlocked and able to do anything you wanted to me?\"\n\nShe was pulling my balls rhythmically, pulling our bodies together. I was beside myself with arousal yet again.\n\n\"Let me off the leash Ma'am and I will fuck you like a madman. I'll go all night and all morning. You'll be begging me to stop as I fill you up again and again. But until that point I will stay desperate, I will stay locked, I will stay denied, and I will stay the horniest man on the planet.\"\n\nShe let go of my balls and moved her hand to her pussy. We kissed passionately and through my need I felt her body jerking against mine as she quickly brought herself to another orgasm. She broke off the kiss with a cry of pure passion and slumped into me. I held her quivering body until she gathered her wits while my cock danced an erotic jig between us.\n\n\"You're a bad influence baby. Oh god, I just can't stop cumming when I'm with you.\"\n\n\"I don't care Ma'am. I love your orgasms almost as much as you do. I want you to have another right now. Please let me use my tongue to give you another Ma'am. Let me slide my eager and well trained tongue all over your clit. The more you deny me, the more I want to make you cum.\"\n\nAs I spoke I edged her to the sofa and gently lay her down.\n\n\"Keep me in chastity forever Ma'am. Deny me, tease me, use me.\n\nI quickly dipped my head and got between her legs. She was as wet as I could remember. The smell and taste just drove me crazy. I was all over her pussy, lapping and flicking at her sensitive clit. She cried out in pleasure as I grabbed her thighs and held them tight. I was lost in her centre, in her core.\n\nI felt the heat radiating from her, I heard her ragged breath, I felt her thighs trembling against my arms as she neared another orgasm. My hips were thrusting involuntarily into thin air, my cock trying uselessly to fuck the steel that cruelly imprisoned it but I didn't care. All I wanted was the magic of Ma'am's orgasm to engulf my mouth and tongue. All I needed was her pleasure to fulfil me.\n\nSeconds later we both got what we needed as her orgasm crashed through her. She pushed my head away as soon as she came, she really had had enough now.\n\nI looked up at heaven. Ma'am's body was displayed in all it's post orgasmic glory. I had done that, I had given her the best gift a lover can give their partner and as always I was incredibly happy and content. I became aware of the dull ache in my balls from being hard in the cage for so long, but even that made me happy.\n\nMa'am roused herself.\n\n\"That was actually a little bit naughty boy, you took the lead there which is definitely not your role. But given the outcome I think I'll let you off this time.\"\n\nShe laughed, I could see how satisfied she was.\n\n\"Sleep baby, I need to sleep. Get down to the dungeon.\"\n\nIt didn't take long to secure me in my usual resting place but it took longer than usual for me to sleep. My cock just wouldn't give me peace but eventually I dropped off and slept like the dead.\n\nIt was a slow start to Christmas eve. Ma'am was clearly still sated from the night before and I was a little tired from lack of sleep. I could catch up tonight though as I was going back home later. I cooked breakfast while Ma'am had a long and apparently very funny video call with Steven and Sarah. We shot the breeze for a while then it was time for me to leave. Back home I was greeted by a slightly frantic mother who was fretting about food and decorations. I got the Christmas tree up and decorated then took an emergency trip to the supermarket to get a couple of things that were clearly vital to a successful Christmas, namely an extra bag of potatoes and some napkins. On my way back I pondered the essentially pointless trip I was making. We had plenty of potatoes and napkins. Last year there would have been a row, this year I just did as my mum asked, no questions, not even a raised eyebrow. My mum wanted me to do something for her so I just did it. I concluded unsurprisingly that I had changed since I met Ma'am. It wasn't just a sexual thing. I wanted to please, I wanted to do the right thing. I was happy to put myself second and to put other people first. It gave me pleasure to do that in all aspects of my life.\n\nIt was nice spending some time with my mum. Her sister arrived in the afternoon and we chatted and played cards until dinner. I went out with a couple of old school friends in the evening and had a few beers. It was just like old times, being home and seeing friends. I went to bed fairly early, it was strange not only being in my own bed, but being free of the sleep sack that I had grown fond of in a strange way. I wondered what Alexis was up to. We had exchanged a few texts but her replies had been pretty short, terse almost.\n\nI was woken up by lots of noise coming from the kitchen. Downstairs I found my mum and aunt wrestling the huge turkey into the oven. It looked big enough to feed an army, I had the feeling that turkey sandwiches were going to feature heavily after Christmas. We were going to be eating at some point in the afternoon, so after the turkey was sorted out we exchanged presents and played silly games for a couple of hours. I laid the table as the ladies sorted out the vegetables and other bits and bobs. I was surprised when my mum told me to set four places for lunch.\n\nA little later there was a knock on the door. I could see blurry looking Christmas hat through the little opaque window in the front door, I opened it and there was Ma'am. She gave me a big grin.\n\n\"Hello Tom, aren't you going to invite me in?\"\n\nI was surprised to see her but recovered quickly.\n\n\"Hi, err, Louise! No one told me you were joining us, please come in. Merry Christmas!\"\n\nMy mum came over and gave her a big hug.\n\n\"Hi Louise, how are you? I'm so glad you could join us.\"\n\n\"It's a pleasure to be here and thank you so much for inviting me.\"\n\nMa'am was wearing a Christmas jumper, covered in robins and little Christmas trees, I laughed, \"love the jumper Louise, it really suits you.\"\n\nShe laughed too.\n\n\"Don't be sarcastic Tom, at least one of us is trying to get into the spirit of things.\"\n\nShe turned to my mum and surveyed all the pots and pans, \"something smells good, you shouldn't have gone to so much trouble.\"\n\n\"Think nothing of it Louise, you've been a good friend these last few months, it's the least I could do.\"\n\nMa'am hadn't mentioned that she had been spending time with my mum. For some reason that made me slightly nervous as I suspected my name had come up in conversation more than a few times. I gave Ma'am a stare and she just winked at me with a grin.\n\n\"Something wrong Tom? Don't worry, your mum has only shown me all your baby photos once. You were such a little cutie!\"\n\n\"Mum!\" I did a pretend face palm but we were all laughing.\n\nWe settled down for a huge lunch, Ma'am had got presents for everyone but she had correctly guessed that my present to her might be personal and said that we could open our pressies back at hers later.",
        "The ladies retired after lunch and I was left with a mammoth washing up job. I was happy to do it though and I made sure the kitchen was spotless when I had finished. My mum was very impressed, I looked at Ma'am and she had a sly little grin on her face. She knew why I had done such a good job and she gave me a nod of approval.\n\nWe left around six in the evening after a very pleasant day, and walked hand in hand back to Ma'am's. I quizzed Ma'am about her relationship with my mum but there wasn't any ulterior motive, she told me that they were both women living alone and they were neighbours so there was no reason why they shouldn't be friends regardless of our relationship.\n\nAs always, I stripped off as soon as we got in and Ma'am gave me a long passionate kiss. My cock was immediately hard in the cage, pressing into the steel. Ma'am dropped her hands and began squeezing my balls.\n\n\"You nearly called me Ma'am back at your mum's, didn't you boy?\"\n\n\"I did, my apologies Ma'am. I wasn't expecting to see you and I got my contexts confused.\"\n\nShe squeezed a little tighter, illiciting a small groan from me.\n\n\"Naughty boy, do you think you should be punished for that?\"\n\nDespite the pain my cock was throbbing hard.\n\n\"Yes Ma'am. You expect the best from me, I also expect the best from me. I nearly let our little secret out which isn't acceptable.\"\n\n\"Indeed, but that can wait for a later date. I don't feel like getting all medieval on your arse today. We have a couple of small presents to open. I hope you kept it low key, I certainly did.\"\n\nWe went into the lounge and Ma'am gave me a small box. I carefully opened in and found a thin leather bracelet inside. I didn't wear any jewellery usually but this was very delicate, only about half an inch wide. I couldn't work out how it fixed together though.\n\n\"Have a look on the inside.\"\n\nBeautifully stitched on the reverse side of the band were the words \"property of Louise.\"\n\n\"Let me,\" said Ma'am taking the bracelet, \" it has a special locking mechanism. Once it's closed it won't come off again, it is locked on for good.\"\n\nShe looked me in the eyes.\n\n\"Can I put it on Tom?\"\n\nI realised the significance of the moment. It was only a small bracelet but up until now we had just been moving from day to day. There had never been any talk about our future. Ma'am was making a statement with this present, not just the obvious one that she owned me but that she wanted to continue for the foreseeable future.\n\n\"Yes Ma'am, please do. I accept your gift gladly. I will wear it with immense pride.\"\n\nI heard a little click as she pressed and twisted the bracelet around my wrist. The words were on their inside so couldn't be seen but we both new they were there and what they meant. I leaned forward and gave her a big hug.\n\n\"Thank you Ma'am, this means the world to me. The words are one hundred percent true.\"\n\nI handed Ma'am a Christmas card and her present.\n\n\"Please read the card first Ma'am.\"\n\nShe opened it and read.\n\n\"When I first read this word, it made me hard but I didn't really understand what it meant. I do now and I want it to be true for as long as you want it to be.\"\n\nMa'am looked slightly confused and opened my present. It was a simple photo frame and inside it was a piece of paper, slightly worn and with visible folds in it, with one word written on it in Ma'am's handwriting.\n\n\"Never.\"\n\nMa'am smiled, reached up and touched my cheek.\n\n\"Do you remember Ma'am?\"\n\n\"I do Tom, it was a few weeks after I first locked you.\"\n\n\"Yes Ma'am. I put it in my wallet and I have carried with me ever since.\"\n\nMa'am pushed me back onto the sofa and straddled me.\n\n\"Thank you Tom, it's lovely, and very meaningful for me. I love the fact that you have had it with you all this time, and it is true. You will never have the keys to your chastity device.\"\n\nShe pressed her body against me and started to rub her groin into my full cage.\n\n\"Never boy. Your cock will never be free. You will never have an orgasm without my permission and you will never touch your own cock. Sounds good doesn't it?\"\n\nMy cock was pulsing in the cage.\n\n\"Yes Ma'am, God yes. It sounds amazing. My cock belongs to you, I belong to you. I am your property Ma'am.\"\n\nWe were both breathing hard now, both very turned on.\n\n\"I'm wearing far too many clothes boy. Go to the bedroom.\"\n\nShe jumped off me and I went upstairs. Ma'am arrived a few seconds later with the freezing towel. It took a while, but eventually my cock went down enough for Ma'am to get the cage off and roughly pull the ring off. My cock was instantly hard again as she gently massaged it.\n\n\"I'm soaking wet baby,\" she whispered as she guided me to the bed. She pushed me onto my back and straddled me again.\n\n\"What I need is a long slow fuck, and fortunately I have just the person for the job. Someone with a lovely cock who will never cum without my permission.\"\n\nShe grabbed my cock and slowly slid its engorged length inside her. She sat down heavily on me and let out a small gasp. Leaning forward she kissed me deeply and began to move slowly up and down. I could feel her bullet hard nipples dragging across my chest so I reached up and began rolling and squeezing them between my thumbs and forefingers. She groaned but kept the pace nice and slow. Her hot wet pussy gripped me tight yet somehow slipped effortlessly across my swollen, taut skin. It felt incredible but I knew I was here for one reason only, to please her.\n\n\"Oh baby, this is so good. I've created the perfect fuck toy. A toy that will please me in any way I choose, and for as long as I want. Oh yes baby.\"\n\nShe was super turned on now, her breathing was accelerating and her face was flushed with arousal. She slowed slightly and looked me in the eyes, a piecing stare into my soul.\n\n\"I'm going to cum soon boy. I'm so damn horny. When I cum, you have permission to cum too. Not before, but when. Understand?\"\n\n\"Yes Ma'am. Thank you Ma'am.\"\n\n\"Merry Christmas baby.\"\n\nShe began to slowly fuck me again, deep and long. My cock was tingling with anticipation. She kept it slow, pulling herself almost completely off me before carefully plunging back down my full length. I realised she was trying to hold back, trying to test me once again. I had permission but I had a very specific task to complete before that joyous moment. I could feel every single movement, every single millimetre of her tunnel as it engulfed my trembling cock but I knew, deep inside that I would only orgasm when she did. I had my hands on her hips now and I started to make small thrusting motions, driving her into me a fraction quicker each time. She was groaning with every downward push now as her orgasm neared. Suddenly I felt her muscles tense and her breathing become ragged. My cock was on fire as I heard a loud moan escape her lips. I didn't have to think, there was no conscious effort. It was as if my body just automatically obeyed. Seconds after her orgasm hit, mine did to. Every part of me went tense and my cock simply exploded. In fact, my whole being exploded. I screamed in ecstasy as a pile driver of an orgasm ripped my body apart. Stream after stream of hot cum poured out of me as my whole body convulsed uncontrollably. For a while I had no idea where I was or what I was doing. My scream turned into low, guttural moans of pleasure. I might even have passed out momentarily but I felt Ma'am's hand on my chest, grounding me, bringing me back to reality. My body was still twitching and my cock was still rock hard but I was able to focus on Ma'am's happy face above me.\n\n\"Fucking hell.\"\n\nI had no other words.\n\n\"Wow baby, what an orgasm, for both of us. That was incredible.\"\n\nWe lay still for a minute, composing ourselves.\n\nI watched a little smile come over her face.\n\n\"I got something for you inside me.\"\n\nShe carefully edged off my cock and put a hand down to her pussy. Slightly clumsily she climbed up my body and positioned her pussy over my face.\n\n\"Enjoy boy, this will always happen on the very rare occasions that you cum inside me. I felt her tense a little and a river of cum flowed out over my tongue. I eagerly lapped it up, savouring my own arousal for once. The thick, slightly salty goo flowed into me and I swallowed it greedily. She stayed like that for a couple of minutes and I put my tongue as far inside her as I could do get as much of my cum as I could. She shifted slightly and I took the hint and moved my tongue to her clit. It didn't take long, she was still super horny. I relished bringing her yet more joy. After recovering, she lay down beside me and made little purring and growling sounds.\n\n\"Mmm baby, that was so good. Enjoy it?\"\n\nHer hand gently wrapped itself around my still hard cock and softly stroked up and down.\n\n\"Ma'am, I really can't explain how I'm feeling but I know it's good, really good. I have never experienced anything like that before. Thank you so much.\"\n\n\"It was very special Tom, very special indeed. I wonder when your next orgasm will be? Christmas comes but once a year, after all. That sounds like an idea, doesn't it?\"\n\nMa'am's words always set me off and my cock was rock solid in her hand.\n\n\"My cock and my orgasms belong to you Ma'am. Whatever you decide will be right for me, for us.\"\n\n\"Do you want to cum again baby?\"\n\n\"Yes Ma'am, but only if you want me to. But I know it won't be as mind blowing as what just happened.\"\n\n\"True, but I was very impressed by the way you came on cue baby. I want to see if you can do that again. Consider it as more training.\"\n\nHer hand was moving quicker now, and she was gripping me firmly.\n\n\"You have my permission to orgasm again boy but when I tell you to, not before.\n\n\"Yes Ma'am, thank you Ma'am.\"\n\nShe kept a steady pace with a nice tight grip and my cock was as solid as a rock. My recent incredible orgasm was still fresh in my mind and I really wanted another, and another. I remembered Ma'am saying that I might find enforced chastity and self control difficult after she allowed me to cum, I realised that she was right. The joy and energy that my lust and need had given me was seemingly bring usurped by a desire for orgasm. I tried not to worry about that and to concentrate on the present and Ma'am's hand pumping away on my cock. She hadn't changed her pace but I was feeling very aroused and my breathing got harder. She noticed.\n\n\"Steady boy, control yourself.\"\n\nI tried to calm down but her hand was relentless. Come on Tom, I said to myself. You can do this. Forget that orgasm and concentrate on how good it feels. Get that mindset back where all that mattered was the lovely feeling of perpetual arousal.\n\nIt worked and I felt myself slip back into a world of arousal without any desire for orgasm. Ma'am's hand pumped away and all I wanted was the feeling of my hard cock pulsing against her fingers.\n\n\"That's good baby, ride it. I know you can.\"\n\nMa'am's praise helped me, more than anything I wanted to make her happy. A few minutes later she increased both her pace and her grip.\n\n\"Soon baby. You can cum soon. Feel it building. Feel the pressure, you control it and you can release it.\"\n\nI was so horny, my eyes were closed and my whole being was centered on my raging cock. I was back in the zone, I wanted these amazing feelings to carry on for ever but I was also aware that Ma'am would soon allow a release which would be beautiful.\n\nA minute later she whispered in my ear.\n\n\"Now baby, cum for me. Cum for your owner, your Mistress.\"\n\nIt was remarkable, she didn't change pace but I immediately felt my cock start to tingle and the inexorable rise. It must have only taken five or six strokes from her words before I came again. My body bucked and shook and the cum flew out of me once more. The first load went up to my chin, with each successive one going less distance. I was groaning with pleasure as my muscles shook and twitched. Ma'am slowed and forced the last drops out of me. My eyes stayed closed as I breathed, \"thank you Ma'am, thank you, thank you.\"\n\nHer hand left my cock and I felt a couple of fingers scooping up my cum. I opened my mouth in anticipation and was rewarded with her cum covered fingers. I licked them clean and she went back for the rest.\n\n\"Good boy, very good.\"\n\nI was utterly relaxed as we lay together in post orgasmic bliss. I had never felt this good, I was truly in heaven.\n\nAlmost instinctively I turned my head to Ma'am's.\n\n\"How may I please you Ma'am?\"\n\nEven at this point my training, or maybe just my submissive nature kicked in. She cuddled into me.\n\n\"Nothing for now baby, but thanks for thinking about me.\"\n\n\"I think of little else Ma'am.\"\n\n\"That is exactly as it should be boy. I am your world. I am everything.\"\n\nMa'am's words sounded corny, but at this moment they were entirely true. My whole world revolved around her. Nothing else mattered.\n\n\"I need a pee!\"\n\nShe jumped up and returned a minute later, throwing herself on top of me and planting a big kiss on my mouth. She pushed her pussy down on my semi erect cock. Despite two orgasms, it hadn't gone completely flaccid. I guess it knew that any freedom it got should be welcomed. We both felt it stirring again, blood filling it.\n\n\"Wanna fuck, big boy? Wanna give me a good seeing to?\"\n\nAfter so much enforced inactivity, my cock didn't need to be asked twice. Ma'am's wet pussy sliding up and down it made thoroughly sure that it quickly hardened.\n\n\"I want to fuck you Ma'am, please let me fill your gorgeous pussy up.\"\n\nShe got off me and positioned herself on her hands and knees, legs wide apart. She looked behind her.\n\n\"No touching that cock boy, not if you ever want to come again.\"\n\nI was rock hard, and her pussy was wet and welcoming so a hands free insertion was easy. I slid purposefully into her, my full length deep inside.\n\nI felt my thighs press into her arse as I pushed deep inside. Slowly I withdrew before going balls deep again. I held her hips and used them to rock her back to me as I rocked my hips forward. Ma'am dropped onto her elbows, arching her back and exposing her stretched pussy to me.\n\n\"Fuck me boy, fuck me hard.\"\n\nI increased pace as ordered, sliding into her, pulling out pretty quickly. She was thrusting back onto my cock but I tried to maintain an element of care and control. I saw her look at me again, her face was flushed with arousal but she seemed to be frowning.\n\n\"I told you to fuck me boy, so fuck me. Do whatever you want. Long and slow or deep and hard. Let it all out, everything. I want an animal inside me.\"\n\nI had been trying to be smooth and gentle, while at the same time going as quickly as I could but I realised that she didn't want that, she didn't want that at all. I curled my hands around her hips a little more, drew my cock out so only the tip was in, then pulled hard as I thrust. Our skin made a loud slap as we collided. She cried out, for a brief moment I was scared I had hurt her.\n\n\"Fuck yes!\"\n\nClearly she wasn't hurt, she loved it. Again I drew back and slammed into her. Another cry of pleasure. I did this a few more times then decided to change it up. I drew back but then slid slowly into her. Another groan. Out a few inches then quickly slamming into her again. I tried to keep her guessing. She was loving it, between her cries and moans of pleasure I heard her tell me to cum with her again. We were both covered in a sheen of sweat as I worked away. I was close so I stopped the variations and just fucked her. Her moans filled the room along with the smacking of damp flesh colliding. I heard her shout yes and the moans got louder. She came like an animal, groaning and growling, and after a few strokes I did too. Pulling her hard onto my cock I came, almost doubling up on her back. I pumped a few more times but we were both spent.\n\n\"Stay inside me baby.\"\n\nShe slumped forward. She was flat on her tummy, I followed her, falling on top of her but still deep inside. I took some of my weight on my elbows and we lay there, breathing hard. My cock was still twitching with pleasure and I could feel her pussy convulsing over it.\n\nShe turned her head a little.\n\n\"Mmm, the perfect fuck toy and it's all mine. Beautiful.\"\n\nWe lay like that for a minute or so until she shifted onto her side.\n\n\"Enough.\"\n\nMy cock slid out of her as it softened.\n\n\"Get down there and clean up boy.\"\n\ni went between her thighs and licked everything as clean as I could then we just drifted in bliss as I spooned her.\n\n\"You can stay here tonight baby. I want you with me.\"\n\nI held her tight as we drifted off to sleep together, exhausted but totally satisfied. As sleep took me I felt her hand on my wrist, holding the bracelet."
    ],
    "authorname": "yourcybersub",
    "tags": [
        "chastity",
        "femdom",
        "domination",
        "submission"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/new-neighbour-pt-11"
}