{
    "title": "The Beast",
    "pages": [
        "Hey everyone, Average Joe here.\n\nI'm back from the isolation that is the Christmas break. So let's start off the new year with one of my longer projects. This story is 56k words of fighting, fun and good old fashioned sex. If you'd like to see longer stories like this, leave a comment or flick me an email. If you like shorter chapters more regularly, I'd also appreciate a comment or an email. Either way, please enjoy and stay tuned for more stories to come. I'm neck deep in several right now and I've no idea the order they're coming.\n\nEnjoy \n\n*****\n\n...Prologue...\n\nIt was a cold and stormy night... Not like I gave a shit, but that's hardly the point. The point is that for the first time in months, Urk, the Goblin King, is being a fuckwit. Yeah... I said it, a fuckwit. Turns out his favourite son is finally old enough to 'be a man'. Basically that means he gets sent on his first planned hunting trip, and I get stuck watching the gate till the wee man comes home... It could be worse I suppose... Playing gatekeeper to a horde of bloody goblins is a far cry better than being dissected on some bloody wizards table. Oh, did I mention how I got here? Well...\n\nIt would have been about four decades ago now... I'd like to say I was brought into this world kicking and screaming. Loved by my parents, and through my own devices, ended up in a respected position of trust working for the honourable King Urk. Fuckin if only...\n\nI came into this world kicking and screaming alright... Some fucking wizard by the name of, Henry the Just, was experimenting with cross species blending. His original plan was to interbreed species with humans, but he couldn't find any volunteers to fuck various monsters. Forcing people to do it would have 'affected his title' so he settled for second best. Essence extraction and injection into a flesh golem. When I first came too, it hurt... Fucker had this idea of waking me up with electricity... Only, being stuck inside a watertight tube filled with synthetic amniotic fluid, he almost damn well cooked me while I drowned. Thankfully, I guess, he realised his mistake and broke me out before I died again. That's when the 'treatments' started.\n\nI'm still not exactly sure what I was injected with. The flesh golem was based off and originally injected with the essence of 'man'. Hence my ability to think, rationalise and gain a moderate education. Henry after all, wanted me to understand questions he would ask. I needed a fundamental understanding of what he was doing. After a few months of lessons from everything from biology and mathematics to romance literature and science, the true testing started.\n\nStupidly, I allowed myself to be shackled to a bench... With magically reinforced shackles... From there, I was given various injections and asked how I felt. I later found out that most of what was put in me was the life essence of other creatures. Each day was agony, as my body twisted internally and externally as changes were forced upon me. My bones hardening, muscles strengthening, senses heightening. My skin toughened, much to Henry's displeasure, when he had to buy stronger syringes... My displeasure when the 'new' ones were forced into me with even more effort and pain... Pretty sure I have a few extra organs now too. Poison doesn't seem to bother me and I've never gotten sick. Most injuries clear up within hours if not minutes. But then... Henry fucked up... He was so proud of the next batch of testing.\n\nDid I mention he fucked up?\n\nTroll... Fucking troll... I have no idea how he got his hands on troll essence. But apparently this was his 'holy grail' moment for me. It was also the first time I truly begged him to stop... Up until that moment, I still looked and acted human. If I was ever released, I could blend in, make a life... Live... I'd seen pictures of trolls in the books I'd read before the injections. Huge monstrosities of flesh like stone. Twelve feet tall at the short end, twenty at the tall. Immune to magic, dumb as a rock and angry as a shaved cat. Yeah... Henry fucked up...\n\nThe first effects were immediate. Suddenly the magic from the shackles disappeared. For the first time in months, I was able to stretch and move my limbs slightly. If Henry had been any smarter, he'd have killed me right then and there... But... Y'know... Henry fucked up... Apparently my utter lack of visible changes, spurned him. So he took off for the night and left me tied to the table for the night. That's when the real changes began... While I thought I'd experienced pain before... Troll essence... I wouldn't wish it on anyone. My bones grew so quickly, my muscles and ligaments tore free. I passed out shortly after I felt the muscles in my spine pulling away.\n\nWhen I came too, I was laying on the floor. My proportions had grown so large, so rapidly, the shackles had simply broken and released my form to collapse on the floor. Once on the floor, my body was able to complete it's changes, and rapidly heal back into a solid whole. Considering the amount of blood that was on the floor, I'm just glad I was unconscious when my skin tore open... Was a hell of a shock for Henry when he came back a few hours after sunrise.\n\nBy that time, I'd made myself comfortable, sitting on the bench like a good boy... Good boy with a severe hatred for wizards named Henry. See, I got the good with the bad. The good, I still look relatively human, shaggy black hair, dark brown eyes and all my teeth. The bad, I'm close to eight feet tall and built like a mountain. The interesting, is all the other shit going on inside.\n\nI can still see his face... The rattle of the keys in the door, followed by that all familiar squeak. He didn't even bother looking around until he'd already closed the door behind him. The emotions that flashed across his face were priceless. Surprise... Delight... Apprehension and finally fear. There wasn't much after fear. By the time I'd stood up, he was already charging up one of his spells. I'd seen his magic before, little things, lighting the fireplace, illuminating the room. I wasn't really expecting the fireball that burst across my chest... I'm sure I've said it a few times now... Henry... Fucked... UP.\n\nSee, the thing with trolls, is they're completely immune to magic. Spells just wash off. Fire just feels like the wind, lightning a soft touch. Hell... I had a straight up death curse pumped into me by a 'familiar' demoness and it went straight through and killed the guy behind me. The second thing with trolls... Is that we have a wicked temper...\n\nAs previously stated... There I am, standing my ground, facing Henry. The largest fireball I've ever seen washing over my chest. And I'm completely fine. I sat there so long staring at my own chest, Henry had enough time to run... Well... I'll specify here... He had enough time to 'run'. What he actually did was pick up a broom, infuse it with lightning, and send it flying into my chest. Queue, a solid thump from the blunt broom pole and the lightning diffusing into the floor when it landed. That's when I learned the true nature of the trolls... Anger...\n\nIn three strides, I came within arms reach of Henry. In four he was laying on his back with his rib cage caved in by my troll size foot trapped inside it. That was another weird lesson for me... Trolls will eat anything. This man... Fucking wizard, whatever... Had brought me into this world for what? Experimentation? Torture? The betterment of mankind? No... His willingness to outright kill me on sight was all I needed to know... I was made a monster... So I acted like one...\n\nI'm not proud of eating him. I don't really regret it, but I swore I wouldn't eat another person unless I was starving. In 40 years, I've never had to eat another person. Either way, it was the first decent meal I'd had in months, and I wanted out... Now, I read stories about battles with trolls, and I always thought their strength was exaggerated. But after gently unlocking the door, I was surprised when my efforts to pull it open, left me carrying what today is my tower shield. Bloody thing came off the wall with a crunch with barely a pull. From there, It was a simple enough situation, get out, get away, get gone...\n\nThough... A hell of a lot of guards and other magic users disagreed with my methods. Turns out I was being kept in the basement of some sort of guild hall. The first man I saw screamed... My attempts to physically silence him gave him a surprise diagnosis of a crushed skull... Totally my bad... But that's all it took for dozens of guards and magic users to try and stop me. Weirdly enough, the thought of dozens of spell weaving demigods coming to magically rip me limb from limb, meh... Sharp metal swords held by mere mortals... Fuckers hurt.\n\nThat was the moment I decided to keep my door-shield. Rushing out of the hallway, I entered a large room, which incidentally enough, was being filled with people who wanted to kill me. Instinct drove me from that point. Instinct is also pretty simple. I'm big + you're little = squish. I didn't even realise I'd ploughed through the guards until I stepped on one and felt something squish up between my toes. Then the magic started. A few spells hit the shield at first, but I've since learned it was magically reinforced as well. When the magic users realised that, they waited for me to get a little closer and hit me directly. For that matter, that's when the familiar demoness hit me with that death curse. I didn't get a good look at her, pinkish-red skin, small horns, green hair.. But she didn't look happy about her situation, so I didn't kill her on my way past... Hope she's doing ok.\n\nEither way, it wasn't long before I'd turned a window into a hole big enough to fit my shield. I'd like to say it was smooth sailing from here... But y'know... Troll logic and anger, mixed in with a healthy supply of guild hall being located in the centre of town... It was only a few hours later when I finally stopped to rest in a forest, that I realised I still had a bloody sword stuck in me. Weirdly enough, it's the only wound that scarred. I think that's because my body tried to heal around it before I removed it, all the other wounds healed without something in the way.\n\nEither way, once in the forest, I calmed down, probably from one of my many 'gifts'... But it didn't take me long to get moving again. It took me three days before I was comfortable enough to stop for a sleep. Turns out trolls don't sleep much either. Couple hours a night, or a full night every few days. More if I've been injured.\n\nIt took me a little over two weeks to leave the human inhabitants of this land behind me. It was another week before I discovered I was in the 'badlands'... Minotaur didn't know what hit him... But his friend was happy enough to give me some basics about life in general out here... Y'know... In return for me not eating him. A few days later I bumped into the Goblin King on one of his hunts. After I'd killed three quarters of his best men, Urk himself came at me. Almost shit himself when I told him to fuck off... Apparently trolls are dumb brutes and can't speak.\n\nThat however is how I ended up here. For a fuckwit Goblin King, the bastard is the genius of his species. And for the last forty years, I've been left mostly alone as the gatekeeper for the tombs of the Goblin horde. It's not a glamorous job, but I'm at least respected. Mostly I deal with the occasional bear. A few times I've turned back scouting parties from other Goblin clans. I just enjoy being left alone for the most part.\n\nAnd that's pretty much everything that leads me back to today. Standing in the alcove of my home, that overlooks the entrance. Think about a bay, surrounded by mountains. That's pretty much the entrance, except it's dug out of stone, and there's no water. The entrance to the 'cove' is a gap in the thick stones, just wide enough for a carriage. There's no trees inside, so I've got a clear view. The only things growing is grass and my vegetable patch on the far side where the sun hits mid morning. My home looks like a small cave, off to one side, with the entrance to the Goblin Tomb on the other. I don't really know what it's like down there, I've never been. But my home? Might look like a cave from outside, but inside it's my little mansion.\n\nI've got a bedroom with a large bed stuffed with furs and blankets stuffed with down. I've my workshop where I tinker and build. I'm no blacksmith or craftsman, but I've got a stocked kitchen full of utensils and running water from a catchment I dug into the roof. I'm even slowly making myself a suit of basic plate armour. It's not real pretty, but that's kinda the point when you're eight feet tall, built and waving around a club that looks like a small tree with a boulder on the end. But my absolute pride and joy... My library... I consider it my 'pay' from Urk. When his goblins go out, they bring back any books they find. Since they're all illiterate, I get first pick, and the rest they use as kindling. I spend so much time there I built a small day bed in case I fall asleep. It's a secret I'll take to my grave... Nobody would believe me anyway... Educated troll? Ha... Fuckin... Ha...\n\n...Chapter one...\n\nSo anyway. Here I am, in the rain, cursing that fuckwit Urk... It's not the rain that bothers me, I'm not bothered by the cold, It's the fact that while important parties are outside the tomb, I have to stand guard to ensure they return safe, without leading others back with them. Prince Burk however left at sunrise and hasn't come back yet... The sun has already dipped to the horizon and it's getting dark. I'm damn hungry and I can't leave my post until the party comes back...\n\nIf only I knew how today was going to change my life...\n\nLightning flashed across the sky, lighting up the forest outside the cove. For that brief moment, I saw movement.\n\n\"About fucking time...\" I grumbled. \"Just gotta confirm the group, then I can take a shit and eat.\"\n\nIt took another fifteen minutes before, thankfully, familiar figures started entering the cove. The only one I knew by name was Burk, the cocky little shit almost skipping at the front.\n\n\"Gods be smilin on me, troll boy,\" Burk chirped in their characteristic high pitched voice.\n\n\"Don't give a shit, Burk, just get inside already.\" I wasn't going to press calling me 'boy' even though he barely came past my waist without standing straight.\n\n\"Oh now my little troll,\" Burk sneered, \"maybe I just did your job for you. You be owin me a favor!\"\n\nI couldn't help the sigh that escaped my lips. \"Just say it, squeaky.\"\n\nAnger flash across the diminutive goblins face, he hated that name... Which is obviously why I use it.\n\n\"I caught a patrol. Coming on goblin lands. Managed to bring back an extra slice of meat.\" Burk grinned, licking his lips.\n\nThat's when I noticed... The first stretcher contained a very dead and gutted bear. The second... A young woman... Still whole, and probably unconscious... Fuckin goblins...\n\n\"Are you really that fucking stupid?\" I growled, stomping towards where the woman was being carried on a stretcher. \"Get the fuck back, all of you. She's mine.\"\n\n\"WHAAT!\" Screeched Burk.\n\n\"Listen here you green dipshit. See the clothing on her? They weren't a patrol, she's a goddamn noble! I'm a gatekeeper, not an army, which is probably what they'll send to get her back!\"\n\n\"And? We just eat her, they won't know...\" Burk grumbled.\n\n\"You're not listening! If she's dead, we're all dead. If she's alive and well, they might leave.\"\n\n\"You can't-\"\n\nThe back of my hand cut him off, depositing him on the ground with a thump. He might be the goblin Prince, but I'm the gatekeeper, and the gatekeeper decides who gets entry. Luckily for me, the goblins carrying the woman quickly cut her loose and scrambled away before I got closer. Without a second thought I scooped the limp woman into my arms and stomped back towards my home, ignoring the quiet squeals of protest from Burk.\n\nI needed to be sure that she wasn't permanently injured, she already felt like ice. So I carried her into the library. Not only did it have a place for her to lay comfortably, but it was the brightest room. Not to mention the several books I had on medicine. I gently placed her on the couch, which looked more like a bed for her. It took me a few minutes to remove her soaking wet clothing. I did however leave the silk wraps she had around her chest and waist. I gently looked her over, poking a few places where I could see bruises, but I couldn't see any signs of broken bones. Just a large egg on the side of her head and a split lip. So the next step was just to get her warm for the night.\n\nLighting a fire I hung her clothing around it to dry, and I fetched a spare fur from my room and draped it across her. Her feet stuck out the bottom, but all the important bits were covered. Now it was time to look after myself. Heading into my kitchen, it was too late to fry up something fresh, so I pulled out a leg of salted boar and some cheese. Cutting a small chunk of each, I took them and a goblet of water into the library and left it in reach of the unconscious woman. She seemed to be colouring a little, which was a good sign that she wasn't going to freeze.\n\nBack in the kitchen I made myself busy gnawing on the remains of the leg. I was hungry after a day of no rest. After my meal, I stripped off my armour, leaving it in my crafting room, before heading outside. Usually I'd pull a leaver and have fresh water douse over me, but the rain was still going strong. I moved to my bathing alcove and scrubbed down with soap and stood still to wash it all off. Heading back inside, I dried off and went to bed.\n\nMornings were a weird thing for me. Because after the couple hours of sleep I required, I simply woke up and started my day somewhere around midnight. Lucky I did too, because I heard a small cough. Quickly dressing, I made myself as presentable as possible. I really wanted my first impression to be a good one, my life probably depended on it. Heading towards the library, I could see before I entered the room, that her clothing was still drying above the fire. So in case she was still asleep, I quietly leaned around the corner.\n\nAll I can really say was, now she was awake... She was a thing of beauty. Pale skin the colour of moonlight, dark hair in shallow waves ending half way down her back. I'd like to say at this point I was a gentleman, but I honestly couldn't ignore how well endowed she was either... Now she was upright, those puppies looked like they'd fill even MY hands...\n\nLeaning back, I took a moment to steady myself, and knocked twice.\n\n\"Are you decent?\" I called out softly.\n\nShe squeaked in surprise, \"one moment... Yes, you can enter.\"\n\nI took a deep breath... Here it is... Smile, act non-threatening, talk calmly. I managed about two steps into the room before the fire hit me. Bright orange plumes destroyed my clothing in moments as the young woman shrieked in terror... My first reaction was a pang of sadness... My second was to remember I was in a room full of treasured books. Tearing across the room towards her, I quickly clamped my fist over her casting hand, cutting the flames off entirely.\n\n\"Please, no more fire, we're in a library.\" I tried to keep an even tone.\n\nThe woman before me blinked twice, before dropping the blanket she was holding. My momentary distraction of seeing gorgeous woman flesh, was ruined by her other hand throwing shards of ice into my face at point blank. Ice was a new one... Felt like soft snowfall. I reached out and grabbed her other hand, ceasing the ice blast as well.\n\n\"Could you stop that, please?\" I asked with a frown.\n\nThe woman didn't respond for a moment, before suddenly opening her mouth and screaming. God damn sonic attack... The air itself vibrated causing visual distortions. Of course it didn't harm me, but it was still loud. But enough was enough... Fuck this... Fuck her... Fuck everyone... Releasing her hands, I pulled back, and picked up the goblet of water... And tossed the contents at her face. That caught her off guard enough to shut up for a moment.",
        "\"Get your shit and get out. I'm not dealing with this bullshit,\" I growled, stomping out of the room. \"Last time I save some dumb bitch from being eaten by goblins...\" The last part I whispered softly to myself. So It was a surprise when she jumped up.\n\n\"Wait!\"\n\n\"No! Fuck you, I took you from those goblins. Brought you inside, looked after you. That water I threw at you, is part of the meal I left you,\" I gestured to the uneaten meat and cheese. \"Then after I'm polite enough to knock before entering, you try and kill me? Uh uh... Get the fuck out.\"\n\nI stared at her for a few moments, watching as several emotions flashed across her face.\n\n\"I'm sorry...\" She said softly, finally looking at me.\n\nGods dammit... Now the human genes kick in... Gods damned puppy eyes. Before I could respond, I heard a loud banging from my front door. I took one more look at the woman, before holding a finger to my lips and left the room. Hopefully she's smart enough to know to shut her damn mouth. I stared down at the tattered remains of my pants, and shrugged. It couldn't be helped... Pulling open my door, it was a little surprising to find myself face to face with King Urk and a group of soldiers.\n\n\"Where is she?\" Urk asked calmly.\n\n\"Uh... \" I had to think quickly, Urk was a genius among his peers, but he's still a dumbass.\n\nUrk frowned, as I scratched absentmindedly at my stomach. \"You ate her?\"\n\nThank the gods, \"Uh... Yeah... Sorry...\"\n\n\"If you were going to eat her, why didn't you just bring her down to the halls?\" Urk growled.\n\n\"She just woke up. Didn't take kindly to my being there and all. One thing led to another, I didn't even think until it was over...\"\n\n\"We heard her scream all the way in the tomb, she was a magic user?\"\n\n\"Was...\" I chuckled.\n\nUrk narrowed his eyes. \"Hopefully this is the last we hear of them then. You however... Strike my son again, and I'll be testing out that rugged troll blood of yours before I string you up like a hunting feast.\"\n\nBefore I could respond, Urk turned and stormed back towards the tomb. The large group of goblin soldiers that acted as his royal guard followed. Burk was the last to leave, a snarl plastered across his face before he turned away.\n\n... Chapter Two...\n\nI waited until they were deep enough into the tomb that I couldn't hear them, before closing the door. Turning around, I jumped in fright, the young woman was standing before me.\n\n\"Fucking... Gods... Don't do that!\"\n\n\"Sorry,\" she smirked... She fucking smirked... \"I thank you for sending them away... I haven't been the most... Humble... Guest.\"\n\n\"That's for damn sure,\" I grumbled, stepping around her. If she was up and awake, I was heading for my favourite book.\n\nI'd barely sat down on the couch, when I felt it shift beside me. Lowering the book slightly, she was sitting beside me, chewing on a piece of dried meat.\n\n\"What are you going to do with me?\"\n\n\"Do with you?\" I asked, slightly bemused. \"I'd planned on making sure you didn't die, before sending you home. Hopefully without the threat of an army showing up to take revenge.\" I put down my book, \"now however, I'm probably going to have to sneak you out in a few nights to get you past the hunting parties.\"\n\nThe young woman flinched. \"I'm sorry...\"\n\n\"What for now?\"\n\n\"Well... I actually kinda feel bad about attacking you. And... It might be better to get me out sooner rather than later...\"\n\nI didn't like the sound of this... \"Just tell me...\"\n\n\"My handmaiden escaped the attack with a guard,\" she said softly. \"If they travel without stopping, they'll reach the fort in a few hours. Then, yes, there will probably be an army...\"\n\n\"Gods damned, stupid, fucking, goblins...\" I moaned. \"Ok... We better get better acquainted with one another, what's your name?\"\n\n\"Eila, and what do you mean better acquainted?\" She asked nervously.\n\n\"Well, Eila, I'll be carrying you, since you won't be able to keep up. As for my name, I never asked.\"\n\nBefore she could respond, I plucked her off the couch and threw her over my shoulder. Ignoring her squeals of distress I quickly ran for the door and disappeared into the darkness. The easy part was getting out of the cove. Just a quick check to make sure nobody was in the nearby area. The hard part was making sure you didn't run into a hunting party. I suppose it was a good thing moving tonight, as most of the hunting parties were in the tomb having their little celebration.\n\nSomething in my blood, however, provided a few instincts. Everywhere I could, I made sure to step on rocks, or swings off branches. I was leaving as few traces I'd been past as I could. It wasn't long until we were deep into the woods and I was forced to slow slightly.\n\n\"How far are you going to manhandle me?\" Eila called, catching my attention.\n\n\"Settle down princess... We're approaching a road.\"\n\n\"How did... Don't call me that!\" Eila snarled, kicking her legs.\n\nI couldn't help but come to a stop. Pulling her from my shoulder, I placed her on her feet before me. \"Princess?\"\n\n\"I said don't call me that!\" She snarled again.\n\n\"Fuck... Of all the... What the hell is a princess doing out in goblin country?\"\n\nEila gave me a strange look, \"I was blessing the forests around our new home... Didn't know there were goblins...\"\n\nBlessing the forest... Dear Gods, she's an elf... An Elf Princess... Yep... Ears are pointy... Fucking stupid goblins...\n\n\"Ok... Ok... My forestry skills are probably from one of your kind, so do you want to run, or be carried?\" Don't ask about the 'your kind' comment...\n\n\"I can run, thank you.\" Eila said sharply.\n\nI just rolled my eyes and started running again. It took me a few moments to realise she was still following me. Her skills in the forest had her moving silently like a wraith. I couldn't help but shiver at the thought of wraith essence being injected into me... No idea what something like that would do to me... It was another hour until we finally broke free of the forest. On open ground, I was still faster than Eila was, simple fact my legs were longer on my eight foot frame, than her legs on her... five and a half? foot frame. So I kept pace until we found the road.\n\n\"Take five, catch your breath, which way to your fort?\"\n\nEila looked around for a moment, \"which way is north?\" I gestured back the way we came, \"Then we should head east.\"\n\nSetting off again, I couldn't help but feel dread. All I wanted was to be left alone. From what I've read in my books, I'm either going to be hailed a hero for her rescue... Or more likely hunted as the culprit for being part of the goblin horde that captured her... I'm probably just going to dump her at the gate and leave... Easiest option...\n\nIt was a little surprising however when I picked up the sounds of hooves as the first light broke the skies. \"You hear that?\"\n\n\"Probably my father's cavalry,\" Eila chirped.\n\nI took that moment to slow down. I wasn't keen on having to outrun a group of damn horses. But I couldn't just abandon her. Chances are it was her father's cavalry, but it could always be bandits. Eila carried on a little ways ahead, before realising I wasn't beside her any more. She looked like she was about to call something out to me, when around the nearest bend, a cavalry crew came. Eila spun around, making a cute series of jumps while waving her arms. That's everything I needed to know. Spinning around, I started jogging towards the trees. That's when I heard the horn... Why are people so stupid... A quick check over my shoulder let me know they were charging towards me.\n\nAnd there was Eila, waving desperately, trying to get their attention. A couple broke off towards her, but it was obvious that they had judged me the same as she did. Growling, I put on a burst of speed, tearing towards the trees as fast as possible. A horse or two I could handle, but this was an entire battalion. The trees were still a few hundred meters away when the first spell hit. A typical fireball, and it just washed over me like a warm breeze. Everything hit me now, stone, water, ice, even a group of vines ripped free from the ground to tangle my legs. Once they came in contact with me, they lost their magical support and failed. The spells breaking up and elements washing over me, even the vines just went limp. It's funny, all it would have taken was to pull a stone from the ground and throw it with telekinesis and it would have brought me down. Physical objects after all aren't magical in nature. But all this summoned stuff... Just falls apart.\n\nI grinning ear to ear as I passed within meters of the forest edge. That's when an arrow shaft hit me in the back. I couldn't help the snarl that came out, but I managed to force back the red tinges in my vision. It wasn't long until I was lost amongst the trees again. It wasn't often I got out on my own. But I tried to enjoy every opportunity. But first... Arrow in my back... It was in an easy enough spot to reach, just above my shoulder blade. I was even lucky enough to pull it free with the arrowhead still intact. Troll skin is pretty tough, so it didn't go very deep. Make a nice memento.\n\nI kept up the speed for the next few hours, just to make sure nobody was following me. But soon I came into familiar lands. It truly is a beautiful place to be ravaged by Gods damned goblins... But... Since I'm here, may as well do some foraging. I detoured slightly, looking in my usual spots for mushrooms and other edibles that I couldn't grow myself. I even managed to find a spot of wildflowers that would look lovely in my library... Don't judge... I'm allowed nice things.\n\nBy the time I'd made it back to the cove, it was still deserted, and I could hear the shouts and jeers from inside the tomb. Glad to see the party still in full swing, means I wasn't missed. Swinging back inside, I dropped the arrow in my workshop. Figured I'd make a nice box for it later. Mount it on my 'mistakes' wall. There were a few things there. Bear claws from the first time I confronted one and it nearly ripped my arm off. The club of a bandit who's group thought my cave was a good place to hide their loot. Even the antlers of an overzealous deer that got in a cheap nut shot while trying to chase him out of the cove.\n\nTaking my time, I pulled off what remained of my clothing. The spells from the elves left what's left of my pants in tatters. Too far damaged to be of any use, they went in the fireplace as kindling for this evening. Heading back to my workshop, I made the finishing touches to my breast plate. It was a hodgepodge of metal plates. Whenever I inspected the goblins loot, I occasionally got my hands on metal plate. These, I welded together into a large whole and hammered it into the shape I wanted. I'd been at this for fifteen years now. So far I had a suit that covered everything except my head... Well... Once I finished up with the straps for my breast plate. I was also fairly confident that the thickness of the metal would make up for it's shoddy design.\n\nOnce I'd knocked the last strap into place, I figured a wash, and then to try it on. Heading outside, I didn't even realise how late it was. The moon was already high in the sky. Shaking my head, I quickly scrubbed myself down and went back inside. Another cold meal later, and I decided to get some sleep.\n\n... Chapter Three...\n\nThe cawing of crows woke me. Fucking crows, they'll be in my crops! Scrambling to my feet, I tore out of my room and out my door. What greeted me was a sight of carnage. Goblins laying dead a pile, with two elves stacking on more bodies. Before my eyes, another pair heading towards the entrance to the tomb, vanished with a spell. There were several more searching bodies. This was an extermination...\n\nJust then, my door swung closed with a thud. I grimaced for the briefest moment as I noticed several sets of eyes look in my direction. Spinning on my heel, I tore back into my home. Slamming the door shut, I dropped the bar in place. Hopefully it will keep them out long enough for me to get my armour on...\n\nA loud explosion told me otherwise. Now remember when I said that magic doesn't affect me, but objects will? Well the explosion washed over me like a lovers caress. The splinters of wood and nails however, shredded my skin like paper, causing me to howl in pain. Before I could regain my footing, I felt a sharp stab of a spear pushed into my side. Now I saw red... Spinning in place, the spear shattered against the wall. The elf before me jumped back, drawing a shiny sword made of glass like material. I charged... The elf managed to cut into my chest before I slammed him into the wall on my way past. The elf behind him launched a bolt of lightning into me... He met a similar fate. There were three more between me and my limited freedom. I hit them like an avalanche. Pure brutality, smashing it's way without thought or reason. It was outside that things went all wrong...\n\nMomentarily blinded by the sun, I didn't notice the pair of elves hiding outside my door. They darted forwards slicing both my achilles tendons. How I wanted to rage and eat them, but as I made a move, I simply collapsed. Snarling like a beast, I clawed my way towards them, as a pair of daggers were sunk into the joints of my shoulders. Before I could start wriggling again, I felt a sword pass through my spine, pinning me to the ground... All these wounds could be healed... I'm practically indestructible... But the blades would have to be pulled free first...\n\nTwisting my head around, I found myself staring at a young elfin man. He was sneering at me like I was filth... Spose he wasn't far wrong. I couldn't help but death stare at him as he raised his sword. Like the pictures in one of my books... I knew what was about to happen... Fuckers couldn't take me one on one, had to sneak around behind me to put me down... Well fuck you... And I spat on his boots. The immediate reaction was for him to kick me, the pointed metal tip of his boot, splitting my eyebrow. As my vision blurred red, I heard a voice.\n\n\"Stop!\"\n\n\"Princess, I'm following orders, this monster needs to be put down like the rest,\" the young man called back.\n\nFucking elf...\n\n\"He's the one who rescued me, Darjl. I want him spared.\"\n\nGreat... More fucking experiments probably...\n\n\"I cannot do that-\"\n\n\"You're going to defy a royal order?\"\n\n\"I... Princess...\" The elf was stumbling over his words.\n\nI couldn't help but chuckle.\n\n\"And what are you laughing at you filthy animal!\"\n\nMy ears rang as his foot connected with the side of my head again. I wondered briefly if I could goad him into killing me. But the sound of a sharp slap caught my attention.\n\n\"You're going to pay for that,\" the young elf growled.\n\n\"My father hasn't promised you anything Darjl,\" Eila snarled back. \"I'd drink poison before I ever let you touch me, even if you somehow manage to convince my father to give you my hand.\"\n\n\"You'll come round sooner or later, Princess,\" the tone, immediately making me realise why she hated the word.\n\n\"I'm sure, after you're done fucking my corpse. Now, I am ordering you to spare this creature, as a personal favour to me.\"\n\n\"Fuck the both of you, just kill me already.\" I snarled.\n\n\"See... Even the monster knows what's best!\"\n\n\"Darjl...\" Eila hissed.\n\n\"Fine... Fine... But you have to explain to the King why I wasn't able to finish my job,\" Darjl spat, before walking off.\n\nI laid for several moments, unsure if Eila was still nearby, before soft hands touched my cheek. \"I'm sorry, they shot you with a tracking arrow. I tried to stop them... But this is the best I could do.\"\n\n\"Eila... As a future monarch, you need to understand the big picture. Here, I'd have been executed, quick and easy. Now I'm going to be tortured and experimented on for years before someone goes too far and kills me...\" I waited for her to take a sharp intake of breath. \"Thanks for that, now fuck off...\"\n\n\"I'm sorry,\" Eila whispered and left.\n\nI was left laying on the ground with a sword in my spine for hours. Completely unable to move, I found myself hating these elves. It was humiliating enough that I'd been left impaled in the dirt. But as they quickly emptied the tomb of goblins, they decided to search my home. Before I could twist around, sets of hands roughly yanked me free from the ground. They didn't remove any of the blades, but they dragged me out of the cove. Here, I was dragged into the back of a large cage, mounted on a horse drawn cart. They set me up, so I was sitting, staring back at my home, as flames licked their way out the front door... All my books... Minutes later I found myself bound still, with the blades still firmly in place, I was barely conscious of the fact we were moving.\n\nIt was a long day of travel, being spat on and cursed by passing elfin soldiers. But my misery wasn't complete until I passed beyond a set of stone walls. And that was it... My freedom was forever forfeit. I gave up at that point, dropping my head I let sleep take me. The next thing I knew, cold water was thrown over me, snapping me awake. I glared forwards as Darjl put down the bucket. The sneer on his face made me want to eat him. I watched as he unlocked the cage and climbed in with me... I'd have loved to grab him and feel his body squish between my fingers, but I was still unable to move.\n\n\"Just wanted to give you a bath before we bring you inside,\" Darjl sneered, squatting down in front of me. \"I figured a filthy beast like yourself would appreciate it.\"\n\nI glared at him silently, while his power trip went on. He sighed softly, and closed his eyes. Just as he went on to say his next words, I flicked my head forwards as hard as I could, crushing his nose into his face with a solid 'pop'. Darjl squealed a moment, falling back, clutching his face. I fell back into position, begging silently for him to kill me. The surrounding elves chuckled amongst themselves as Darjl scrambled out of my cage and out of sight.\n\nThe next few to enter however, were not amused. After stabbing me a few more times, they finally dragged me out of the cage. It wasn't far, but down a flight of stairs into some kind of dungeon. Inside was a multitude of other beasts, including what I thought were trolls. I was led to a quiet corner, away from the other creatures and dumped into a cell with thick bars. It was only here that all the blades were roughly pulled free of my body, to allow me to heal. I fell into a fitful sleep...\n\nLoud clanging woke me. I cracked open my eyes, and before me was a middle aged elf banging on the bars.\n\n\"Rise and shine, troll boy!\"\n\n\"That's original,\" I grumbled my reply, as I climbed to my feet.\n\n\"Oi! Don't get smart with me!\" The jailer growled.\n\nI found myself momentarily blasted with a haze of ice magic. Momentarily because I darted forwards and grabbed his arm. Yanking him hard, I heard all of his ribs crack as he was forced through the confines of the bars. Grabbing his head, I pulled his torso around and threaded him back through the next set. A quick check of his pockets let me know he wasn't carrying keys. I decided to leave his corpse in place for the foreseeable future. It was probably an hour before a pair of guards came down looking for the dead elf. When they approached my cell, I threw my weight against it. If I was going to be treated a monster, they would get a monster.\n\nEvery time they approached to pull free the dead jailer, I rushed forwards to try and snag another one. They even tried to use magic, which did nothing except momentarily distract me. It also cost one of them an injury as I managed to snag a few of their fingers and crush them. That was apparently the last straw and the pair retreated. Soon, there was a new group. This time almost twenty of them. They tried at first to use spears to force me back, but I disarmed one of them and impaled another as I hurled it through the bars with all my strength. Their only option at this point was to pepper me with arrows until I collapsed.",
        "\"Finish it you pansy little fuckers,\" I managed to choke out, with a mouthful of blood.\n\nBy the time I'd managed to pull out all the arrows piercing my lungs, they'd freed the body and were moving off.\n\n\"COWARDS!\"\n\nThat was met with a series of fireballs, which just set me off laughing. It took me a couple hours to pull free the rest of the arrows. By the time I was done, exhaustion from healing had set in. If I could keep this up, they'd probably kill me out of anger... But first I had to recoup some strength.\n\nThe sound of heavy boots woke me this time. The dungeon slowly filled with hundreds of heavily armoured elves with crossbows. As I watched them form up, a gap emerged, and an older, more refined, but familiar looking elf approached. I just watched in silence as the man came to a stop, just out of reach of my arms. He was almost six feet tall, with dark wavy hair and pale complexion. I'd describe him as elegant, more so than most others I'd ever seen. He was clearly Eila's father.\n\n\"You killed seven of my men, and the jailer, why?\" he asked in a calm an even tone.\n\n\"You burst into my home, attacked me, burnt it to the ground. Then had me thrown in a cage, why?\" I replied just as evenly.\n\n\"You cocky-\" An elf stepped forwards, only for the elder to hold out his hand, silencing him.\n\nHe sounded pretty familiar too, \"that you Darjl?\" I chuckled, \"how's the face?\"\n\nDarjl made to move again, but the elder silenced him with another wave.\n\n\"What are you, beast or man?\" Asked the elder.\n\n\"Better question, is what am I not?\" I replied cryptically.\n\nThe elder regarded him a moment, \"do you know the current whereabouts of a wizard known by the name of, Henry?\"\n\n\"I'll need a map, I can mark the spot I took that shit, yes,\" I chuckled.\n\n\"You are his creation then?\" The elder asked, his eyebrows raising.\n\nI shouldn't have opened my mouth... Bastard came in asking questions, treating me with dignity and I answered... Fuck... I just sat down against the wall and glared at the elf in silence.\n\n\"What can I offer you, for your cooperation?\" He asked.\n\n\"My immediate release and escort to the nearest forest,\" I grumbled.\n\nThe elder elf smiled sadly, \"I'm afraid that cannot do.\"\n\n\"Then I'm afraid I'll kill anyone who comes within arms reach of the bars.\"\n\nHis eyes narrowed slightly, before he simply turned and walked back through the multitude of guards. I watched them leave, before a small opportunity arrived. An elf stumbled over their own feet in the direction of the bars. In a flash, I had them by the wrist and yanked them firmly into the bars. The sound of shrieking metal being forced to deform drew the attention of all the surrounding soldiers. It took them a moment, but before I could thread the soldier back through like the jailer, I was pelted with dozens of steel bolts. These went deeper than the arrows, but not by much.\n\nI fell to the ground, coughing up blood as I slowly pulled the bolts free. It was a few minutes in, when I realised the elder elf was back, staring hatefully at me, while another pair were pulling free their dead comrade. I just smiled and spat a glob of blood at him, earning me another bolt. They'd have to kill me before they'd get any civility from me.\n\nAs expected there were no meal times. Either they were irregular, or being withheld from me as punishment. But that was ok... Eventually I'd just start eating my victims. So it was a surprise when Eila appeared before me. And I'm not going crazy, she just appeared.\n\n\"I'm sorry,\" Eila said sadly, resting her head on the bars.\n\n\"If you'd just let Darjl kill me, I wouldn't be in this mess.\"\n\n\"I... I couldn't let him just kill you like that... You didn't deserve it... You didn't deserve any of this,\" Eila sighed, before softly sobbing.\n\n\"Oh cry me a river, maybe I'll drown and be done with all this.\"\n\n\"Darjl is being credited with your capture...\"\n\nI cocked an eyebrow, \"and?\"\n\n\"And he's been granted a royal boon... He's going to ask for my hand.\" Eila shuddered. \"I don't want to die... But it's better than letting that filth put his hands on me.\"\n\n\"Sucks to be you then doesn't it... I actually WOULD like to die, so unless there's something you can do to help that...\" I just let the statement finish.\n\n\"I can get you out...\" Eila whispered.\n\n\"Fuck you,\" I snarled back, \"either this is a ploy from your father for cooperation, or you're dangling hope in front of me for your own sick pleasure.\"\n\nEila choked back a sob, before dropping to her knees. \"How can I convince you to trust me?\"\n\nI thought about it for only the briefest moment, \"open my cell, come inside and strip off naked,\" I growled.\n\nAs expected, she dropped her head, and simply vanished. Good fucking riddance... She's nothing but trouble. I was still contemplating how many ways I could cause mischief when the lock on the cell clanked. It opened itself as if by magic, and I couldn't help but tense up, thinking something was about to go very wrong. When Eila popped back into view, standing before me I jumped again.\n\n\"Fucking... Gods... Again!\" I growled.\n\nShe simply smirked again... Bitch... But then it dawned on me... She was in my cell... A moment later she bent down, grabbing the hem of her gown, she slowly started to wiggle it upwards to remove it. She was serious after all.\n\n\"Stop... I believe you,\" I cursed myself, her moonlight legs were on display. Flesh so soft I wanted to beg for a taste ...\n\nShe smiled softly as she slowly lowered her gown. \"Will you help me, if I can get you free?\"\n\n\"You're a pain in my ass you know that?\" I grumbled, \"you get me out, I'll take you with me, deal?\"\n\nEila's face lit up, it was a strange feeling watching her. She was truly the most beautiful creature I'd ever seen. Beauty straight from one of my books... \"Deal. You really don't have a name... Do you?\" She asked softly.\n\n\"Nope... I'm the creation of a mad wizard. He never bothered to give me one, and I never asked.\" It was an honest reply.\n\n\"I'm going to call you Frelser. In my native tongue, it means saviour.\" Eila smiled.\n\n\"You realise I've killed three people since being locked in this cage, and I ate the man who created me...\" I chuckled.\n\n\"And yet, you are still willing to help me,\" she smiled back. I tried to glare at her, but all that did was make her smirk. \"Can... Can I ask you something real quick?\"\n\n\"Mmm?\"\n\n\"Can you hold me a while?\" She asked softly.\n\n\"Ah... Why?\" I wasn't opposed to the idea, but the request threw me a little.\n\n\"Because... The cell door is open, and I'm standing before you. Either you're the gentle giant I think you are, or you'll crush me and escape. Either way, I'll be done with... Darjl.\"\n\nI stood still for a few moments, before going with my gut instinct. I stooped over slightly, and gently pulled her into a close embrace. As she laid her head on my chest, she stiffened.\n\n\"Oh gods...\" Eila pulled back slightly.\n\n\"Sorry, did I hurt-\"\n\n\"No! No... Gods... This must be what my father wanted...\"\n\n\"Eila... You're making me uncomfortable...\" I grumbled.\n\n\"Frelser, you're full of energy. Imagine, if I were to describe the amount, I'd be comparing you to the sun, where I would be a candle...\" She said slowly.\n\n\"I'm no mage, so how does that work?\"\n\n\"That's just it... Any mage that was able to get to your power, would be almost invincible... A magic power source like none other.\" Eila chirped excitedly.\n\n\"Well... Not that I'm particularly keen on being an object owned by a mage, but how exactly do I get the power out, and how would I give it to you. Seems kinda handy if we're getting out together...\"\n\nEila's face dropped for a moment, before she grimaced. \"My father was talking about a machine that drained blood and distilled it.\"\n\nI couldn't believe what I was hearing, \"I'm not completely comfortable with that...\"\n\n\"Uh huh... The other way I can think of... Is the 'old way' of sharing power,\" Eila wash blushing now. \"Elves usually marry for power. Sometimes that's power between houses, sometimes that's power between sorcery. When two mages... Unite... They share their power. Weak mages become stronger, strong mages have their power weakened, their offspring are generally stronger as a whole.\"\n\nDid I honestly just hear her right? \"So what you're telling me... Is-\"\n\n\"That if I sleep with you, I might be able to gain some of your power...\" Eila was slowly going brighter shades of pink.\n\n\"Ok... How about we put a pin in that for now... I'm sure you're not keen on sleeping with a monster like me anyway...\" I said slowly.\n\n\"Not to mention you might actually kill me... Look at the size of you...\" Eila smirked.\n\n\"Well... About that... Wait, no, not important, won't happen anyway,\" I grumbled softly.\n\nThe distant sound of a door opening drew our attention. Eila immediately vanished, and I sat in silence as I watched the door to my cell close and lock. I couldn't help but hope this wasn't some elaborate ruse to get me to behave. My mood however, immediately dropped when I saw who was coming towards me.\n\n\"Darjl, how's the face, lad?\" I called.\n\nDarjl came to a stop before me, he had a large basket in his arms, \"oh, troll boy. I'm here by order of the king to 'coerce you into cooperation', so to speak.\"\n\n\"Why don't you come a little closer then, and I'll tell you everything I know,\" I smiled sarcastically.\n\nDarjl didn't answer, merely placing the basket before him. Plucking off the lid, he dropped it on the floor and reached into the basket. What he pulled out was some kind of recurve bow. Holding it up for me to see, he reached in and plucked out an arrow.\n\n\"Y'know Darjl... I'm gonna get out of here one day. And when I do... I'm going to eat you alive... And not in the fun way that Eila let me.\"\n\nDarjl went a funny shade of purple in just a few moments. His anger clearly got the better of him, and a short draw later, the first arrow slammed into my liver. He didn't stop there however, another twelve arrows found places around my chest. All over again, I was choking on blood. But that wasn't the worst part. I was pretty sure these were coated in something, because other than the obvious pain of a fucking arrow in my gut... They felt like they were on fire...\n\n\"Now, while you're pulling those out of your lungs. Would you be so kind as to answer my questions?\" Darjl asked, walking back to the entrance to collect a chair. \"First question, did you really have relations with my betrothed?\"\n\nI couldn't help but grin. \"Said I was the best she ever had, had her screaming for more-\"\n\nDarjl cut me off with another arrow. \"Where is the location of Henry the Just?\"\n\n\"Told the king, get me a map, I'll mark where I took my favourite shit,\" I chuckled. Darjl however, shot me again. This time in the stomach. \"Gods, just bring me a fucking map already. He's dead, I killed and ate him. I can mark on a map where I shit him out.\"\n\n\"So he's dead? Why didn't you just say that?\" Darjl snarled.\n\n\"You asked where he was, not whether he was dead. How the fuck am I supposed to know what you're think-\" Darjl shot him again.\n\n\"You will accept the king's invitation to be assessed by his physicians for the purposes of study,\" Darjl ordered.\n\n\"Fuck no,\" I growled back.\n\nDarjl just took a deep breath, pulled another arrow and fired it into my shoulder. \"You will accept the king's invitation to be assessed by his physicians for the purposes of study.\"\n\n\"Not happening you sick fuck,\" I spat.\n\nThis time he shot me twice, before making his demand. I refused again, only to be shot another half dozen times. Every time I refused him, Darjl became more irate. He began aiming for my hands, stopping me from being able to pull arrows free. By the time he'd run out, I was a pin-cushion of arrow shafts and could barely breathe. Darjl took one last look at me before he left, and I managed to spit a mouthful of blood in his direction. But by this point, he was probably used to my defiance and he quickly left. Now... How the fuck am I going to pull out all these arrows when I don't have hands...\n\nEila popped back into view standing before me. Making me jump again, this time all I could do was gurgle a small, illegible curse. But I stopped, seeing her face, I could make out tears. She was crying... Hell, she hid inside my cell instead of escaping... She'd been there the whole time...\n\n\"I'm sorry...\" She cried softly.\n\nBefore I could react, she pulled an arrow free of my chest, making me wince in pain. Quickly I held out my hands, hoping she'd pull those arrows free. Thankfully she got the hint and pulled those first. It wasn't long before the two of us had all the arrows removed. Now all it took was to rest and heal. By that I mean pass out until morning. It was still early hours when I started to come too. But I had a strange pressure on my lap. Cracking open my eyes, I couldn't see anything. That's when it dawned on me that Eila was curled up, invisible on my lap, leaning against my chest. I was genuinely shocked, I had no idea what to do. So I just sat still. In the silence I could hear the soft sound of her breaths. I tried to match them with my own and eventually fell asleep again.\n\nThe slam of a distant door woke me this time. The invisible weight that was Eila suddenly moved off. I had no idea where she had gone, but if it was Darjl with his bow again, it was best she wasn't around me. So it was a mighty surprise, when a slightly plump young elf came into view. She was beautiful, not in the same way that Eila was ravishing. She had similar features, dark hair, but straight, pointed ears and moonlight skin. Just built in a more, comely and warm way. It was also quickly apparent that she was heading this way.\n\n\"Excuse me, sir...\" She started, nervously.\n\nI cocked an eyebrow, did she really call me sir?\n\n\"Might I bother you for a moment?\" she continued, shifting from side to side.\n\n\"No need to call me sir, but I suppose... My friends call me Frelser, who might you be?\" I decided politeness was the way to go. Giving the name Eila gave me wasn't going to make my situation any worse.\n\nShe seemed to react to my name a moment before she collected herself. \"My name is Ally, I'm the handmaiden to Princess Eila... She's missing sir... I'm worried, the king is searching the grounds. He thinks she's run off to avoid marrying that pig, Darjl. But she told me she was coming to see you... You didn't... Eat her... Did you?\"\n\nI chuckled despite myself. \"No... I'm afraid not. Though I'm sure she'd be delectable. I haven't seen her since I was originally captured.\"\n\n\"Do you swear you did her no harm?\" Ally asked, her demeanour shifting suddenly. There was almost a dangerous edge to her stance.\n\nBefore I could respond, a series of soft thumps rang out. Eila must have been stamping her foot. Ally however, had an immediate reaction. She hiccuped and tried to stifle a sob. She herself, quickly stomped her foot, playing a quick beat. Before my eyes, Eila reappeared.\n\n\"Oh Ally, I'm sorry, I had to be certain,\" Eila ran to the bars, throwing her arms out.\n\nAlly immediately rushed in, taking Eila in her embrace... And pressing their lips together like lovers... Gods damn it... I mean, sure, that's certainly a turn on to watch. Hell... She wouldn't have been interested in me anyway...\n\n\"Ladies, please...\" I groaned.\n\nThey pulled away quickly, before darting in for another quick kiss, before Eila turned back to me. \"We're taking Ally with us.\"\n\n\"No kidding...\" I couldn't suppress the sigh. \"So when are we doing this?\"\n\nEila and Ally exchanged quick glances, before Ally spoke up. \"Your... Engagement... Is tonight, dearest.\"\n\n\"It will have to be tonight then, before the party,\" Eila said quickly, glancing at me for approval. I nodded my agreement, the sooner the better as far as I was concerned.\n\n\"You better go make an appearance then, Eila.\" I said evenly, \"don't want to arouse suspicion, they might set guards here.\"\n\nEila stood still for a few seconds, clearly lost in thought. With a quick nod, she turned to face me. \"Take this, be ready for us to come back. If we don't... I won't hold it against you for leaving.\"\n\nI held out my hand and took the key she offered. Without a word, I got up and moved to the door, unlocking it and letting Eila leave. Her face a mask for the briefest moment before she simply vanished. Ally gave me a quick smile, before quickly leaving on her own errands. Again, I was left alone in my cell... My sticky blood stained cell.\n\n... Chapter Four...\n\nIt had been several hours. The dim light that filtered into the dungeon was replaced with torches some time ago. Every now and then I could swear I could hear music, and yet... No sign of Eila or Ally... I have to admit I was starting to worry. Something didn't feel right about just leaving the two of them behind... Even if Eila did tell me too. I seriously doubted that anyone would be down to check on me any time soon, but I wasn't liking my chances if I were still here by sunrise.\n\nI was anxiously, pacing around my cell, when I heard a door slam closed. My immediate reaction to seeing Ally was... Surprisingly, joy. But the look on her face quickly changed my mind.\n\n\"Frelser!\" Ally cried, she looked like she'd run the whole way here, in a ballgown no less. \"Darjl, he's got her... Tonight was supposed to be their engagement, but the king wed them an hour ago.\"\n\nI was surprised by my reaction. Vision streaking red, it took me three goes to fit the key, before Ally overcame her fear of me and helped.\n\n\"Most of the guards will be at the feast, the place should be pretty quiet.\" Ally said quickly, already moving off towards the door.\n\nI moved in behind her immediately. I had no idea why I felt so strongly about this, but the thought of Darjl putting even his hands on Eila just felt... Wrong... Wrong in a way that made me want to hurt people... Unfortunately, the first person we came across was a guard. The three of us pulled up immediately. He flicked his gaze from Ally to myself a few times before opening his mouth to yell. I chose that moment to stuff my hand into his gaping jaw.\n\n\"Turn away Ally, you won't want to see this,\" I said softly, as I dragged the man towards a nearby window.\n\nBy now the elf was choking, making strange gurgling noises. I could feel him working his jaw, trying to bite and hurt me, but my skin was too tough to damage. I peeked out the window, just to be sure nobody would see what I was about to do. By luck, there was a nice set of bushes below where I was standing. Without further ado, a quick twist of my hands and the guard went limp in my grip. I lowered the elf as far as I could, I didn't really want anyone to hear a crash as I dropped the corpse. But with a surprisingly soft 'thud' I turned around... Ally... She was standing perfectly still, staring at me with a strange expression.\n\n\"I... You won't kill us will you?\" She asked softly.\n\nI wasn't really sure how to respond, but I grimaced softly. \"I'm sorry you had to see that. And no, by this point you and Eila are the closest things I've ever had to friends. I'm no threat to either of you.\"\n\nAlly seemed to find her resolve hearing my words, and with a short nod, she turned and continued down the hall. We were lucky enough to avoid the next set of guards. They had been speaking amongst themselves and Ally ushered me into an empty servants quarters, while they passed. A few corridors down however, we had a little problem. Ally had ducked around to take a look before informing me the door to Darjl's room was guarded. There were two of them, just around the corner. Beyond the door, we could both hear the muffled sounds and cries as Eila was being whipped and beaten.\n\n\"Ally... I'll need you to distract the guards. I'm sorry, but this will be messy.\" I sighed, not knowing if she would be mentally prepared for what I was about to do.",
        "I was surprised however, when her tear streaked face turned to face me. The pure raw determination mixed with anger was all I got, before she wiped away her tears. In a flash, she reached up and tore the cleavage of her gown slightly. Her ample bust threatening to spill out into the night. Being momentarily distracted by the sight of her flesh, I completely missed the small smile she gave me. But just as quickly, she darted back around the corner.\n\n\"Help!\" She cried, sounding convincingly distressed, \"Some drunken bastard is trying to hurt me, I just got away.\"\n\n\"Go take a look,\" one of the guards said, \"I'll escort her to the servants quarters when you get back.\"\n\nI didn't bother hiding my grin as the guard walked around the corner... Straight into my arms. My plan worked perfectly. By wrapping him in a bear hug and crushing him in my grip, the guard was unable to cry out, but was able to struggle in his last moments. The dull thump of his lifeless body hitting the floor was the last straw for the second guard. The sound of steel being drawn was all the warning I got before the second elf tore around the corner. His eyes were immediately drawn to his partner's corpse, following immediately to the sight of my hand slamming into his face. Spinning around, I simply cracked his skull on the stone wall and dropped him. He may have survived, but I doubt it.\n\nStepping around the corner, Ally was waiting for me at the door. \"It's locked, one of the guards should have the key,\" she hissed.\n\nI just smiled... And planted my heel into the door, shattering the fragile wood. What I saw before me made my blood boil... There was Eila, stripped naked, face up on the bed. Red lines and welts covered her entire body from her orb-like breasts to her thighs. But what really set me off, was the equally naked Darjl squatting above her, poised to drive himself between her legs. Quicker than the elf could react, I charged. Tackling him to the floor, I pinned him with a knee, and went to town on his upper body. The first few hits sounded like hard slaps. The next few sounded like the crunch of breaking bone. But I completely avoided his face... I wanted him to be conscious of what came next.\n\nA quick check behind me showed Ally had already freed Eila and was helping her dress. She met my eyes for a split second, and she nodded her consent, before turning herself away and taking Ally with her. Turning back to Darjl, I could practically smell the fear pouring out of him. The expression on his face was somewhere between agony and hysterics.\n\n\"I warned you it would come to this,\" I growled.\n\nClamping my jaw over his left shoulder, I tore a mouthful free. Sitting up, I made sure to slowly chew and swallow while staring directly into Darjl's eyes. He just lay still gasping in agony, unable to struggle or scream in any meaningful way. Unfortunately however, I knew I didn't have the time to savour my meal, so after a few more chunks from his upper arms, I simply tore out a mouthful of his neck. Climbing to my feet, I watched as the light slowly went out from the bastards eyes, while his lifeblood pooled around him. I quickly wiped myself down on the sheets from his bed and turned to leave.\n\nEila and Ally were waiting just outside the room. Ally was staring at me wearily, but Eila managed a quick smile.\n\n\"Earning your name already, you great brute,\" she smiled, hiding her pain behind humour.\n\nI couldn't help but chuckle in response. But I quickly sobered to the fact she was injured, and we were trying to escape. \"Where to Eila?\"\n\n\"Darjl's personal armoury. It should be unguarded right now,\" Eila grinned.\n\nBefore I could ask why we were making a stop, she sauntered away, arm in arm with Ally. I still had it in my head to argue with her, but I figured, there was probably a war hammer or something in there I could use. I just wished I still had my armour.\n\nAlong the way, we avoided two more sets of guards, and I killed a further lone wanderer. But soon enough, Eila led us to an unguarded reinforced door. I was about to ask if it were locked, but Eila quickly produced a key and opened the door with a quiet 'click'. The ladies slipped quickly into the room, and I had to duck through the doorway. What lay before me just about made my heart stop. The room was filled with every weapon and piece of armour you could imagine. But right there... At the forefront, like it hadn't been placed in its final position... Was my armour.\n\nI couldn't stop a laugh escaping as I strolled up. It was the full set. Even my shield. The only thing missing was my club. With the ladys' help, I was dressed far quicker than I could manage on my own. As I thanked them and turned to decide on a weapon, I was immediately assaulted by the sight of more womanly flesh. Eila immediately stripped to her undergarments, before flashing me a grin.\n\n\"Nothing you haven't seen before you great brute,\" she smirked.\n\nA moment later, Ally appeared in my vision holding a breastplate. It immediately dawned on me, when I first met Eila, she attacked me... She was probably better trained than I was. Shaking my head, I turned and started examining weapons. The first stop was the axes. Most were small, designed for elfin warriors, but there were a couple larger two-handed varieties that could serve my purpose. I had the same issue with the war-hammers and maces. Doubling back to grab the largest of the maces, Eila coughed to catch my attention.\n\nShe stood, wearing a full set of plate armour. Beside her stood Ally, wearing a mix of leather and chain. Strapped to Eila's hip was a short, slender sword, but on Ally's, was to my great surprise, a pair of long daggers. What caught my attention, however, was the massive greatsword they held between them.\n\n\"My people have a long history of reneging on their deals. Doing the absolute bare minimum to prevent breaking them outright. But leaving the opposing party short in some way. Darjl's father tried it on a dwarven smith. Why he decided to pay a dwarf of all things, with hollow gold coins, I have no idea. But dwarven pride had them follow through with this.\n\n\"This sword was forged in the heart of a volcano, from a rare metal collected from a fallen star. It should have been a gift for Darjl when he married...\" Eila gagged slightly, \"me... But the Dwarves twisted the meaning of their own contract, by making a weapon too large and heavy for any Elf to consider using.\" She smiled, a satisfied grin plastered across her face. \"I personally think it would be perfect for you, considering the circumstances of my late husbands demise.\" Those last words came out like venom, and I couldn't help but agree.\n\nI simply stepped forward, and took the proffered hilt. Lifting the sword from their hands, I drew the blade in one motion. Marvelling in it's perfect sheen, and it's heft. While it may have been too heavy for an Elf, it was a toothpick in comparison to my old club.\n\n\"Are you sure Eila?\" I asked, just confirming she wanted me to take what was obviously a priceless, albeit useless, artefact.\n\n\"I'm sure, Frelser, maybe just grab something smaller to use indoors.\" She smiled.\n\nIt took me another few minutes to locate a large enough sword belt. I ended up using two smaller ones and attaching them to one another. This gave the added advantage of having a second placement for the mace now swinging on the opposite hip. Together with the ladies, we set off from the armoury. Eila leading the way, with Ally close behind me, while I held my shield at the ready.\n\nIt was a complete surprise when we met our first set of three guards. It was over in a blur of motion. Eila lifted her hand and fired a solid slug of ice into the face of the first guard. But It was Ally who really took me by surprise. This humble woman, who looked soft and plush, like a handmaiden should, simply... Reacted... Before the first guard hit the ground, Ally slipped past me like a wraith. In the blink of an eye, she sidestepped a hasty punch, before driving one of her, apparently glass, daggers, under the guards chin. In the same motion, she flicked out a wide kick, driving the final guard to the ground with a thump. Extracting her dagger from her first victim, she simply drove it into the base of the skull of the final guard.\n\nPulling the blade free, she wiped the blood on the guards tunic before finally looking up and meeting my gaze. She looked almost embarrassed, like I'd caught her in the nude, as she slipped her daggers back home.\n\nShe let out a small cough, collecting herself, \"well... Let's go,\" she said nervously.\n\nI had questions... Hell, at this point, I had a LOT of questions. But now wasn't the time, and we had to get out. Jogging down the corridors, I was now in the rear position. Eila was leading with Ally just behind and to her right. I couldn't help but admire their... Physique... As we went. Which as entertaining as it was... That kiss they shared reminded me firmly which way they both batted. My thoughts were interrupted as we came into a familiar looking courtyard. Lo and behold, before us was the gate, and beyond I could see trees. It would be a fair run to make it to the forest, but if we could get out undetected, it wouldn't be an issue.\n\nThat's when a shrill whistle let out...\n\n... Chapter Five...\n\nThe reaction was immediate. Dozens of guards suddenly swarmed out of a nearby barracks. They were heading for the gate, either to block it or close it.\n\n\"Follow me, NOW!\" I snarled.\n\nCharging past the ladies, I levelled my shield. I kept my pace even. I knew over open ground I was almost as fast as a horse. Then the spells started... Typical... The spells that hit the shield detonated as expected, but didn't really do anything once the power washed over me. The spells that hit me directly did a fat lot of nothing. From the sounds of it, Eila and Ally were both behind me taking cover. Drawing my sword, I twisted my shield out of the way to give more cover to the left. To my right, I made it a very bad place to stand. Those delicate looking glass swords were barely half the length of my own. It was no effort at all to cleave large groups of elves in half as I ran.\n\nThat's when it went to shit. The portcullis was dropped... Putting on a burst of speed, I managed to get under it just before it slammed home. Instead it slammed into my shield, dropping me to my knees. Unfortunately, I wasn't quite underneath it, the weight of the cold iron was causing me to slide back, and the portcullis was slowly slipping free of my shield. Eila and Ally caught up a moment later, ducking under it and into freedom.\n\n\"Come on, quickly!\" Eila cried, stopping to wait.\n\nI was straining to even breathe with all this weight pressing down on me. But I managed to wheeze, \"Can't... Get.. To forest...\"\n\nAt that point, my footing slipped from under me and the portcullis slammed home into the ground.\n\n\"Frelser!\" Eila cried.\n\nI just smiled sadly at her, \"You have your freedom princess.\"\n\nTurning away from the ladies, something caught on my arm. Turning back, I was surprised to see both of them were pressed hard against the bars. \"We'll meet you in the forest... Okay?\"\n\nThe looks in both their eyes, gave me pause, \"okay.\"\n\nAlly let go first, Eila gave me a small smile, before she let go. Turning back to the guards, they were forming up. I took a measured breath, before bellowing my war cry. At this point, I was done. I'd enjoyed my solitary existence. And now that was stripped away, I found myself for whatever reason, drawn to the ladies now fleeing across the fields denied to me. If I wanted out... First I had to get through this...\n\nThe spells started just as my war cry fell silent. I still couldn't believe nobody could comprehend that their magic simply didn't work. Still, it's hard to judge the distance to your enemy when all you can see is flames. All the more satisfying when from those flames, leaps a massive greatsword that cleaves you and two others in half. Yeah... I wasn't stuck in here with them... They were stuck in here with me... I was a whirlwind of death, for every elf that stepped up, I cut two down. The spells soon stopped, either due to lack of stamina, or they realised their error. Either way, without the flames and other distractions, I could see a lot better.\n\nIt wasn't all going my way however. Elves were fast, as I hacked and slashed through dozens of guards, some slipped past. First a scratch or two. Then as the fighting drew on, a legless torso managed to slip his sword into a gap and spear into my lower stomach. An arrow grazed my cheek just below my eye. And more were coming. I had to make a decision and make it quickly. Spinning about, I quickly cleared the area immediately surrounding me. As expected, beside the gatehouse, was a door.\n\nLowering my shield again, I ploughed through dozens of elves. Several cries went out, all directing the elves to stop my advance. That just spurned me on. I didn't even stop for the door, a shoulder check and it simply shattered. Sliding my sword back into its sheath, I drew my mace. It was a dark, brutal thing with metal spikes poking out around the top. I located a set of stairs, just as the first elves entered behind me. I didn't spare them a second and simply ran, leaving them behind.\n\nOn the second floor, I found some guards. These must have been asleep when the call went out, as only a few of them were fully armoured.\n\n\"Where's the stairs!\" I roared.\n\nThe nearest elf drew his sword. My mace slammed into his chest so hard he flew and hit the opposite wall. The second elf lamely pointed to a corridor to his left. I charged through it without a second thought. Sure enough, stairs... The third floor was basically empty. It looked like a staging area, and on the far side, I could see another set of stairs. These thankfully lead me to the top of the wall. Unfortunately, there was a squad of guards waiting for me. One managed to bash me on the back of the head as I appeared. I swept him clean off the wall with a shield bash. The next few met similar fates to the guard downstairs. Crushed bodies sent flying on contact with my mace.\n\nJust as I pulled my mace free of the last elf's crushed skull, I heard the others rushing the stairs. With a silent prayer to whatever gods were currently listening, I hoisted myself over the wall into the darkness. I managed the count of three before I hit the ground. It hurt... It really... Really hurt. But I don't think anything was broken. At least not badly. It was a struggle to climb back to my feet, but every step I took felt better. Soon I was jogging. That's also when I heard the cranking of the portcullis being raised, and the twang of multiple bows.\n\nI managed to throw my shield over my head a split second before impact. Dozens of arrows landed all around me, while dozens more bounced off the reinforced wood of my shield. I gritted my teeth and slowly picked up the pace. Ahead, I could see Eila and Ally still running across the field ahead of me. They really weren't all that fast, probably worse while wearing all that armour. Then I heard a familiar rumble... Cavalry...\n\nThere wasn't any time for weakness any more. Slipping my arm out of my shield, I slung it over my back, and picked up the pace. I spared a quick glimpse behind me, the cavalry were only just mustering outside the gate... It would be close, but I could probably make the trees before they caught up. That was however, without the ladies... I didn't give them the chance to react, merely scooping them into my arms as I overtook them. Eila shot me a dirty look, but Ally couldn't help but scream in surprise.\n\nAlly noticed the sound first... The thundering of hooves approaching. She twisted around to check, and my glimpse in her direction told me everything I needed to know. Putting on a surge of speed, I accelerated towards the approaching trees. Eila twisted around to check herself, looking somewhat nonplussed.\n\n\"It's a small detachment, the main force is lagging behind,\" she called out with a grin.\n\nI continued to run, only barely aware of either of the ladies doing anything. But in the final moments before I imagine being run down with horses, I heard the whoosh of a fireball. Moments later, the screams of dying horses filled the air and we finally reached the trees. I kept running, carrying my precious cargo... Shit... Did I really just call them precious? I digress... I kept running until the trees were thick enough for me to believe we weren't going to be immediately followed.\n\nSliding to a stop, I placed the ladies back on solid ground. \"Let's go,\" I said with a grin.\n\nThe three of us didn't waste any time, turning and sprinting through the trees away from the fort. We didn't stop until sunrise, and even then, it was Eila that forced us too. She stood, leaning against a tree, puffing and exhausted. Honestly, Ally didn't look much better. Armour was armour, and unlike me, they just weren't built to run for long periods with such weight.\n\n\"I'm sorry,\" she gasped, between breaths. \"Maybe we should ditch the armour?\"\n\nI thought about it a moment, it was time for a few answers, after all. \"Where are we going?\"\n\nEila practically flinched, \"I have no idea... Anywhere that isn't friends with my father.\"\n\n\"Actually, about that,\" I started, \"why would someone like you be so casual as to kill your own people?\"\n\nAlly turned to me in a huff, before Eila hushed her. \"He deserves an honest answer, Dear. Frelser, as I mentioned earlier, elves are notorious for their deals. In short, I'm a political bargaining tool. I was born for the sole purpose of opening my legs to the next king. Unfortunately, my father didn't count on one thing.\" She stared lovingly towards Ally. \"Love trumps loyalty...\"\n\nI felt a small spark of jealousy rush through me hearing her words. These were the first women I'd had real contact with in decades. They were both drop dead gorgeous in their own ways... And completely unobtainable...\n\n\"So what... Was Ally supposed to keep you in line or something?\" I asked, sarcastically.\n\n\"... Yes...\" Ally sighed. \"I was trained from childhood in espionage and assassination, long before I was trained as a handmaiden. I was given to Eila as an 'indentured servant'. What I was really doing was keeping an eye on her... Making sure she never tried to cause trouble or escape. I was to... in her father's words... Put her down, at the first sight of betrayal.\n\n\"Days turned into weeks, weeks became months, and during Eila's birthday celebration, she asked me when mine was. That was the first time I'd ever received a present,\" Ally undid part of her armour. Pulling it aside, I could see a silver brooch in the shape of a lily. Eila moved up, wrapping her arms around her 'keeper'. \"Yes, dearest, I still have it after all this time,\" she said, pressing her lips to Eila's. \"First was the gift, then the talks, then games. The day Darjl made it known he wanted Eila's hand, she tried to escape. She made it as far as the stable when a horse panicked and kicked her.\n\n\"I walked in just as she was knocked unconscious... And I stood above her holding this knife,\" She patted one of her daggers. \"I... I couldn't do it... My orders were to kill her if she so much as tried... And I couldn't...\"\n\n\"I woke up, staring at her, while she was crouched above me,\" Eila continued. \"She had the knife to my throat but was crying her pretty little eyes out. That's when she told me what she really was. We've been together ever since. She's the only person I've been able to trust until I met you.\"\n\n\"Well...\" I really wasn't sure what to say. \"That certainly answered most of my questions. I'm glad you found one another. Everyone needs someone special, I guess.\"\n\nEila gave me a strange look for a moment, \"Frelser, I-\"\n\nI quickly interrupted her before she could continue, \"no, no, it's fine, I get it, really.\"",
        "\"No,\" she frowned, \"I'm not sure you do.\"\n\n\"Please... Just look at me... I'm practically a monster. Even if you were interested in men, I'm hardly your best bet.\" I grumbled, turning away from the happy couple.\n\nUnfortunately for myself, turning away, just gave Ally a huge opening. I'm not quite sure how it happened, but she managed to both tackle me at waist height, AND tangle my legs enough I fell over. Rolling over to defend myself, I was surprised when Eila deposited herself on my lap. She was soft, yet firm, and had a nervous glint in her eye.\n\n\"In all your books, you never found much information on elves, did you?\" I shook my head, honesty seemed like the best option. I couldn't see Ally and I knew she was good with her knives. \"So you aren't aware that elfin birth rates are three or four females to every male?\" Again I shook my head. \"And you're unaware of standard elf family structures?\" I felt like I was getting a crick in my neck from shaking it. \"So you're also unaware that elf women are almost exclusively, bisexual as it is common for a man to have several wives?\" This time I didn't shake my head, for lack of a better term... I was stunned... The only part of me not so, made itself apparent beneath Eila's firm posterior.\n\n\"Our meeting was quick and violent on my part. I have led you to no end of pain and suffering. You deserve more than anyone to scorn and hate me. And yet, here you are, helping me... When my own people sat outside a door, listening to my torture.\"\n\nI was gobsmacked... Even more so as Eila raised herself up enough to press those impossibly soft lips against my own. Even more again when Ally made her appearance, replacing Eila's with her own.\n\n\"But... I...\" I stammered.\n\n\"But nothing... I was destined to be a sexual plaything to a tyrant until such time as I could find a way to kill myself. Ally would have most likely either been sent away, or executed. You saved me from a life worse than death, and you kept us together.\" \n\n\"But...\"\n\n\"You still don't get it you silly man,\" Ally growled, \"elves have powerful intuition. Ignoring all you have done for us, our senses are screaming for us to stick by you. So pick a direction and let's go!\"\n\nAlly's revelation hit me like a slap. I still wasn't one hundred percent sure where this was all going, but apparently they were going with me. \"Ok, I'm going to carry the pair of you as far as I can. I can go without sleep for a few days. North of here is the human lands, south is back towards the elves. Either preference on east or west?\"\n\nEila climbed to her feet, a smug smile on her face. \"The ocean is east, the mountains and wilderness are west.\"\n\n\"If we go east, we're likely to end up in a major city.\" Ally gave me a good look over, \"I don't think you'll be able to blend in to a large city. But there could be smaller towns heading west, before the true wilds anyway.\"\n\nI exchanged looks with Eila and she shrugged. She shrugged, obviously unfazed by either option. \"West it is then.\"\n\nI quickly foraged around the nearby area, coming across some leafy greens and a few wild mushrooms. I shared them amongst the ladies, gaining appreciative smiles. It wasn't a lot, but it beat starving. When we'd all finished, I crouched down, and had Ally climb onto my back. She found a comfortable position sitting on the straps for my shield. Eila, I simply scooped into my arms like a bride. It was the easiest way I could think of carrying them both.\n\n... Chapter Six...\n\nI'd been running for two and a half days straight. Eila and Ally occasionally stopped me so they could stretch and swap positions. Currently I had Ally curled up against my chest. It was early evening and the weather was cool. Eila was slumped against my shoulder, her arms draped over my chest. I was finally starting to flag. Slowing down slightly, I realised I could hear running water. I adjusted my course slightly and moved towards it.\n\nIt wasn't long before the trees cleared and the river was before me. It was a beautiful sight. The bright moonlight let me see the delicate flowers lining the bank on either side. It also showed me there was a lot of tall grass... Perfect for impromptu bedding. Moving into the tall grass, I shuffled around, pressing a large area flat. More than enough room for the three of us to get comfortable. Softly depositing Ally on the ground, I gently tapped Eila's arm until she stirred. I helped get her comfortable beside Ally. I took a step aside and got comfortable, myself. Just as I was starting to drift off, I heard soft footsteps. Suddenly, I had a warm mass drop beside me and throw a leg over my hip, followed by the words, \"stupid man.\" Before I could respond, a similar warm mass dropped on the opposite side and wrapped an arm around me. Stunned into silence, the pair of them quickly went back to sleep, and I soon followed.\n\nA strange sensation brought me back to wakefulness. I wasn't quite sure what was going on, so I pretended to still be asleep. But there it was... Someone had pulled the remains of my pants free of my cock. The strange sensation, was pairs of hands taking turns giving my morning wood, firm squeezes.\n\n\"It's firm in the middle, but soft on the outside,\" Ally was whispering. \"It would be close, but I think it would fit.\"\n\n\"You think so? I don't want to end up damaged.\" Eila whispered, with a strange lilt to her voice.\n\n\"Dearest... Babies come out of there... He's not THAT big...\"\n\nI chose this moment to open my eyes. Both ladies were crouched on either side of me. Both had a hand each on my throbbing erection. Both were staring at the tip... Both noticed me watching them at the same time...\n\n\"Morning... Should I be part of this conversation?\" I asked nervously.\n\nThe ladies exchanged a quick look, before Eila smiled mischievously. \"Considering our discussion last night, and your attempt to sleep alone. I'm thinking about taking matters into my own hands, Frelser.\"\n\nBefore I could respond, Eila gripped me firmly by the base, and pulled her hand firmly to the tip. The sudden sensation caught me by surprise and I groaned without thinking. Regaining my composure, I watched as the ladies took my member in both their hands. Eila holding the base, Ally the tip. Together they firmly twisted and rubbed up and down. Now... I've been alone for forty odd years. I know how this is supposed to work... But oh my gods... This feeling was something I couldn't comprehend with words.\n\nI rolled my eyes back and collapsed back into the grass. Content with their ministrations. It was a little surprising when I suddenly felt something wet envelop the tip. My eyes snapped open, and my breath caught in my throat. Eila was naked from the waist down, still gripping the base of my cock. But she was now squatting above me, with Ally guiding the tip into her warm entry. I had a perfect view of her delicate folds, slowly opening and gripping my shaft as it slowly slid inside her. At this moment, I truly hated Henry... This experience would have been denied me, had he gotten his way... This magical experience would never have come to pass, and Eila would live her days in misery with that bastard Darjl.\n\nI snapped back to attention, listening to the words, \"Ready Eila?\"\n\nI came too, just in time to watch Ally pull Eila down firmly, impaling half my length inside her. As she slid, I felt a firm 'pop' and I realised that Eila had just given herself to me. I couldn't stand it any more... These women... Who after so long, could bring out a side of me that I didn't know existed. I slowly pushed myself into a sitting position. Moving slowly as to not jostle Eila and cause her unnecessary discomfort. As I drew closer, Eila's eyes opened, a strange look on her face, between bliss and bewilderment. And I took her in my arms. It only took a split second before Eila registered me holding her, and she melted against my chest.\n\nWe sat quietly for a few minutes, while Eila got used to my girth. Before she gently pushed away from me. I was disappointed for just a split second before she pulled me down into a firm kiss. The feeling of her small mouth on my own, reminded me as strong a woman as she was... I still had to be careful with her. But even as our lips met, Eila began to wiggle and bounce softly in my lap. Soon she was outright moaning into my mouth. Pulling away, I looked down, and I could clearly see Ally's hand, moving vigorously between Eila's legs, rubbing just above where I was penetrating her.\n\nWithin moments, Eila cried out. Pushing herself down as hard as she could, I was surprised when almost my entire length fit inside her, before she stopped. Here, I could feel her muscles pulse and contract around me in ecstasy. I just held her until her rigid posture, went soft and I lifted her limp form from my throbbing member. I laid her down gently beside me and gave her a gentle kiss. I grinned as I swore she muttered the words, \"so good.\"\n\n\"I'm not like Eila,\" Ally said, catching my attention.\n\nI frowned slightly, \"in what way?\"\n\n\"Part of my training was in seduction. I... I can't GIVE myself to you... Not like Eila just did\" Ally whispered, sounding ashamed.\n\nIt took me a moment to realise exactly what it was she was saying... And you know what... I don't care...\n\n\"Do you want this, Ally?\" I asked.\n\nAlly dragged her leather pants down, before stuffing a hand between her legs. When she withdrew, her fingers were glistening with womanly dew. \"Eila is everything to me. When she decided she wanted you, it only reaffirmed what I wanted as well. If you'll have me...\"\n\nI immediately realised Ally was a different kind of woman. But like I said before, I don't care. Rolling forward onto my knees, I gently took Ally in my arms. Giving her the same passionate kiss I gave Eila just minutes before. This time, however, I pushed Ally onto her back. A split second after I let her go, she violently twisted, ripping off every scrap of clothing she wore. Gods... I wasn't wrong. While Eila was cut like a marble statue of some long forgotten goddess. Ally was all soft curves and comfort. Nobody in their right mind would ever suspect she could be capable of an assassination... And here she was, terrified I would reject her sexual advances because of her past.\n\nRunning my hand up her side, I cupped one of her gorgeous breasts. She practically squeaked as I tweaked her nipple, and while I hesitated, the look in her eyes told me to do it again. Leaning down, I was able to take most of her breast into my mouth. I grazed my teen across her flesh as I sucked more flesh into my mouth, earning a nervous smile. That was quickly covered by a small groan, as I rolled my tongue over her nipple.\n\nReleasing her breast, I sat up slightly and held Ally's attention. \"Between the three of us, the only true monster here is myself. If you'll have me, I'd be a fool to not have you.\"\n\nAlly responded by pulling herself up against me for a kiss, which I responded to eagerly. Hell... These women were gorgeous, I'd have to be a fool to pass this up. I gently pressed Ally back to the ground with a firm hand, before shifting into a more comfortable position. Before I could release Ally, she reached down herself, grabbing me and placing the head of my cock at her silken entrance. It was strange, that such a woman, clearly wanting, couldn't meet my gaze, while blushing like a tomato. But I started off slow. Pushing inside her, she was obviously more experienced than Eila, as she had no problem accommodating my rigid member. As I slowly began thrusting in and out of her, I began to deepen my thrusts. Soon, my crotch was lightly tapping her mound, making her squeak occasionally with pleasure. So it was no surprise when I heard her moan, \"harder...\"\n\nNot one to take a woman's word lightly, I started pushing myself harder into her. All Ally could do at this point, was arch her back and moan incoherently. This must have been loud enough to wake Eila from her nap, as she quickly rejoined the party. While I slid myself in and out of Ally, Eila leaned over her, giving me a show as the two of them made out. I watched as Eila's hand drifted down Ally's soft stomach, before returning the favour from earlier and rubbing across the top of Ally's mound. This caused Ally to tense up a moment and force her hips up into Eila's hand.\n\nWithout direction, Eila disengaged from Ally's moaning lips, and stared at me. \"She needs it harder, Frelser.\"\n\nI thought about it a moment, but I couldn't really do any more from this angle without risking crushing Ally. So I tried something else. Grabbing her shoulder and hip, I rolled back, lifting Ally with me. She was suspended, limply in my grip, still impaled on my cock. Now I lifted her gently, before pulling her back down... Hard... I panicked for a second, hearing Ally gasp and tense suddenly. But she turned her eyes to me and said, \"More.\"\n\nThat's all the invitation I needed to turn her into a living masturbator. I held her limp form, and fucked her body against my rigid cock as hard and as fast as I could. As Ally screamed her release, I could feel her muscles clench in a similar way to Eila's, but she cried out for me to keep going. I kept up the almost brutal pace, as Ally came again three more times. The third time, she gushed warm liquid across my crotch, which set me off and I filled her womb with my seed. Ally's response was immediate. \n\nAs my seed spilled into her, she went stiff as a board, before shaking violently. If it weren't for the fact it felt so good, I'd have been worried. Her eyes snapped open, and they were glowing with bright blue light. A look of pure bliss plastered over her face. And as quickly as it started it ended. I lifted her limp form from my flagging erection and placed her on the ground.\n\n\"Are you ok, Ally?\" Eila asked, moving in quickly.\n\nAlly took a few deep, shuddering breaths, before opening her eyes and smiling. \"You have to try that, Dearest. I can feel his energy flowing through me... It feels like a small sun inside me.\"\n\n\"Which part?\" Eila chuckled, \"The part where he used you as a play thing? Or the part where he filled you with his power?\"\n\nAlly just pulled Eila into a hug and got comfortable for a nap. \"Both,\" she said simply, before falling asleep.\n\nTaking stock of the situation, I could see that Ally truly needed a rest, and Eila wasn't keen on moving. So remembering my lesson from the previous evening, I curled up opposite Eila and held Ally's soft body against me. Ignoring Eila when she chuckled and muttered, \"better.\"\n\nA few hours later, the three of us were dressed and moving. Although Ally did have a slight limp, though she refused to hear an apology, I kept catching her looking at me with lust in her eyes. I wasn't quite sure what to make of her sexual appetite, but I certainly wasn't going to complain. We decided that at this point, it was probably a good idea to follow the river. If there were any villages out here, they would need a source of water, and this was a good one.\n\nWe took a break when Ally's limp became visibly worse. I used this time to scavenge for more food. When I returned with an armful of leafy greens and some berries, I almost dropped the lot at the site of the two women. Ally was laying flat on her back, naked from the waist down, with Eila sitting on one of her legs. The other was over her shoulder, and she was slowly rocking back and forth, while stretching Ally's leg higher and higher. While I could respect Eila's eagerness to help her lover stretch, I could see glistening pearls of womanly dew forming on Ally's nether region.\n\nAt the sound of my approach, both ladies caught me staring. Ally immediately turned bright pink. Eila however, gave me a smirk and reached down towards Ally's mound. I watched in awe, as Eila expertly, slowly dragged her fingers across Ally's crotch.\n\nSmiling as she watched my gaze, Eila started up a little info session. \"While Ally is currently indisposed, I should probably point out a few things. Her pants were too tight to stretch properly. All elves have a high sex drive, so beware. And right here,\" Eila parted Ally's folds, revealing a little pink nub. \"This is the clitoris. Every woman has one, and if you do this...\" Eila started circling it with a third finger, \"it is extremely pleasurable for a woman.\"\n\nI stood, listening to Eila's speech. When she got to the last part, Ally started squirming and making cute noises. That was the last straw for me. Dropping my armful of food, I stormed towards the pair of them. Before I came within arms reach, Eila quickly placed a hand over Ally's womanhood. \"Uh uh, she's still sore.\"\n\n\"Fine by me,\" I growled.\n\nGrabbing Eila around the waist, I hoisted her into the air with one arm. With the other, I pulled her greaves and pants off, followed by my own. Lifting Eila, her smouldering gaze gave me no reason to hesitate as I pushed her body slowly onto my already erect cock. Remembering she was still inexperienced, I brought her to a stop, when I was only half way in. I stood, clutching this gorgeous woman in my arms for a full minute, before she suddenly gasped. I leaned over slightly, and I could see Ally's head buried into Eila's backside.\n\n\"Is she... Uh..?\"\n\n\"Yes...\" Eila moaned, \"I love having my ass played with.\"\n\nI filed that under 'later' and concentrated on keeping Eila as still as possible, while slowly fucking her. After a few minutes of careful thrusting, Eila tensed up in orgasm, like Ally, this time she gushed warm fluids over my crotch. I watched Ally stand up, a predatory grin plastered across her face.\n\n\"It's always nice to prove I'm not the only deviant, Dearest.\" Ally leaned into Eila's shoulder.\n\nEila turned her head, engaging Ally in a passionate kiss, before returning her attention to me. \"Frelser... Use me like you did Ally.\"\n\nI paused for a moment, \"are you sure, I could hurt you, I was worried about hurting Ally.\"\n\n\"Please?\" Eila begged, a hungry look in her eyes.\n\nA quick glance at Ally, and I saw her shallow nod... If that's what she truly wanted... Taking a firm hold of Eila, I lifted her body, and pushed her down, not quite as hard as I did with Ally. The moment Eila's hips connected with my own, she beamed and started nodding her head. \"Just like that...\"\n\nI don't know how I ended up in this situation. But I wouldn't swap it for the world. Lifting Eila back up, I brought her down hard against me, slowly building up speed and pressure. Soon I was fucking her just as hard and fast as I was Ally. All Eila was able to do was moan and writhe with each continuous orgasm. With Eila's final screaming orgasm, I finally pushed myself over the edge and filled her like I did Ally. Eila's reaction was almost identical. Suddenly going rigid, before shaking violently, almost as if she were trying to milk out more of my seed. She suddenly pushed herself upright in my grip, plastering her lips to mine. The brightness of her eyes momentarily blinded me... Not like I cared at that point.\n\nWhen we finally came down, I gently lifted Eila off myself and set her on her feet. She wobbled for a moment before beaming and turning towards Ally.\n\n\"You were right, a good stretch before hand is all we need.\" She said happily, \"but oh, Gods... You really weren't kidding with the power...\"\n\nTurning back to me, Eila leaned against my chest, before suddenly stepping away. \"Frelser, I don't know how you're doing it. But you're still as full of power as you were when we first met. Considering the power you've put in both Ally and myself, I would expect there to be a change... But there's not...\"\n\n\"Is that a problem?\" I asked, a little worried.\n\nEila just laughed. \"Frelser, If you're somehow able to keep your energy levels up, then each time we... Share... We'll simply get stronger... It's not so much a problem, as I just don't know what to do with so much power.\" She thought for a moment, before pressing her palm firmly into my chest. \"We might be together a long time... I can't feel you age.\"",
        "\"What?!\" Ally cried, rushing over to the pair of them.\n\n\"See for yourself,\" Eila pushed Ally's hand against my chest.\n\nI just stood there dumbfounded, waiting for an explanation.\n\nEila spoke up, \"Frelser, Eldritch energy that powers our magic, is also our life force. The more power we use, the shorter our lifespans. This ties all back in to couples sharing power.\" She was almost hyperventilating.\n\n\"If... If you're creating infinite energy, and... Powering us...\" Ally continued, \"We'll be practically immortal... And so will you...\"\n\nBefore I could respond, a sudden shriek cut through the air. It was a familiar sound... One I didn't think I'd be hearing any time soon. More shrieks cut into the air, followed by the sound of a large bell being rung.\n\n\"That sound was a goblin hunting party. The rest, means it's a big group. Judging by the bell, I think goblins are attacking a town nearby.\" I said quickly.\n\n... Chapter Seven...\n\nEila and Ally wasted no time quickly dressing. The three of us rushing towards the sound of shrieking goblins. Within minutes, we cleared the trees. Like expected, there was indeed a village along the water. This one was thankfully large enough to have a palisade wall. Unfortunately, they were having trouble getting the gate closed. Now, Goblins aren't slow creatures. Not usually, but they're not really sprinters either. Crossing a road to slash a man's throat before he draws his weapon, sure. Crossing several hundred meters of open ground to attack a town... Not so... Without waiting to discuss things with the ladies, I set off at a sprint.\n\nI caught up with the trailing edge of the goblins easily. It was no difficult feat to sweep them out of my way with my sword, or topple them over with my shield. By the time the goblins realised I was there, it was already too late. Those in front couldn't hear me coming, those behind couldn't keep up. As I burst through the front ranks of Goblins, I made directly for the gate. There were hundreds of goblins out here, and the town wouldn't stand a chance if they got in. Unfortunately for me, however, the sight of a fully armed, albeit small, battle troll charging for the gate, meant I was shot half a dozen times with arrows. Ignoring those wounds however, I pulled to a stop beside the gate. There were several armed men staring at me with terrified expressions. I didn't have any time to waste trying to explain things, so I simply grabbed the edge of the gate, and started hauling it shut.\n\nIt was three quarters closed when I had to abandon the attempt. Spinning around, I caught a goblins spear on my shield. Unfortunately for the goblin, it was still shorter than my sword. I stabbed him through the chest, and flicked him aside into another goblin. I knew at this point I could just charge through them. But I had to hold the gate until it closed. I just hoped those terrified idiots finished the job. Thankfully, for me, the guards in the watchtowers must have seen what I was doing. Between each sweep of my massive sword, the first row of goblins was peppered with arrows. Preventing any from slipping behind me.\n\nBut with all this carnage, the scent of goblin blood drove the others onward. In minutes, the wall of goblins before me became a mountain. Each member of this small army wanting the honour of my death. The urge to kill the one who slew so many of their kin was strong. And like before with the elves, every now and then something slipped through. A goblin threw himself at me, wrapping his arms around my chest. I felt his dagger slice into the back of my shoulder just as I threw him to the ground. Stomping on his small form, I let loose a battle cry and hacked two more in half with a single swing of my massive weapon.\n\nThe next was a spear, thrown from the back. I managed to deflect it upwards, but the tip managed to graze my forehead, snapping my head back. This allowed a third goblin to tackle me to the ground. In an instant, I knew I was dead. I wasn't going to last long pinned on the ground. I just hoped Eila and Ally would survive and escape unharmed. But that didn't mean I was going down without a fight. Driving my head forwards, I felt the crack of the goblin's skull against my own. Throwing it aside, I sat up and lunged my sword forwards, skewering the next in line. Before I could withdraw my blade, a spear slammed into my chest, driving me flat onto my back again. Before I could sit back up, a second spear found the gap at my waist and drove it home. I reached down, grabbing the shaft, in an attempt to remove it. But that just left me open for a third goblin to shove a spear into the gap at my shoulder. Together the two goblins managed to push me back, hard against the gate, which was thankfully closed by now.\n\nFlicking out my sword, I managed to catch the goblin spearing my stomach. But it was quickly replaced by another. Before I could make a second swing, another goblin stepped in and tackled my weapon. I wasn't quite pinned, but another goblin stepped in holding a curved dagger... Yup... That's it... I'm done... Sorry ladies...\n\nA warm breeze washed over me. Goblins screamed... And I just laughed... Opening my eyes, there stood Eila, palms extended, washing flames over the nearby goblins. Behind her stood Ally, holding a goblin sword and a rough shield she must have scavenged. The pair quickly exchanged places and Ally quickly washed over the gate with a flurry of water and wind. That was new, the water hit hard enough to bounce off the wood, but felt like rain to me. The moment she finished, Ally helped me pull the spears free and gave me a moment to heal.\n\nIt didn't take very long. The wounds inflicted were superficial, the main problem was that I was pinned and one had a dagger for my throat. But now I had a moment to breathe, I climbed steadily to my feet. Before us was a wave of destruction. Hundreds of either frozen, or crispy goblins littered the ground. A few more looked like they'd been drowned. Along with a healthy amount with obvious stab wounds... Ladies had been very busy getting to me. There, however, was still over one hundred of the little fuckers to deal with.\n\nStepping between my ladies, I bellowed my battle cry and slapped my blade to my shield. The nearest goblin shrieked in it's high pitch voice and charged me. I knocked it's sword aside with my shield while dropping my own sword. Ducking low, I managed to get a hold of it's ankle. Heaving upwards, the goblin squealed in terror as I swung it around my head. I used it's body to beat two more goblins into the ground before hurling it's corpse back into the crowd of goblins before me. Retrieving my sword, I took a guard stance as Eila and Ally stepped up either side of me. A split second later a jet of water shot out from Ally, knocking several goblins over. While a series of ice shards from Eila tore through some more... And the goblins' morale finally broke.\n\nOnce the one or two deserters, turned into dozens, we stopped our assault. That was it... We were done. It was a few minutes more before the last of the goblins disappeared back into the trees. When the last stragglers were gone, the gate behind us creaked into motion. Turning around, I watched the gates open just wide enough for me to spot dozens of archers aiming bows at us.\n\n\"Get behind me,\" I snarled.\n\nStepping between the archers and the ladies, I turned my shield horizontally, trying my best to cover both of them at the same time. When a voice called out.\n\n\"Shit, he talks,\" a well dressed man said, stepping forwards.\n\n\"And right now, he's wondering why he's on the receiving end of your bows. The archers on the towers could see me hold the gate for you.\" I growled, refusing to back down.\n\n\"Lower the bows, lads!\" The man called. As the archers relaxed, the man stepped forward, \"sorry about that. Thought you were a troll runt. They're unpredictable at the best of times and figured the ladies managed to train you or something.\"\n\n\"Fair enough,\" I muttered, lowering my shield. I didn't bother to enlighten him, probably wouldn't do me any favours if I did anyway. \"Who do I have the pleasure of addressing?\"\n\n\"Oh!\" The man chuckled, \"It's been a long time since a visitor has had any manners. I'm Jurn. I run this little town. We're mostly farmers and craftsmen, but we're far enough into the wilderness we have ourselves a decent little militia.\"\n\nI waited a moment in case the ladies wanted to speak, but it seemed they were comfortable with me handling things. \"I'm Frelser. These are my... Wives... Eila,\" she smiled politely, \"and Ally.\" Who gave a small nervous nod.\"\n\n\"Well, Frelser, what are you three doing all the way at the edge of the wilds?\" Jurn asked.\n\nI just shrugged, \"honestly, North is humans, who wouldn't care for my wives. South is the elves, who wouldn't care for me. East has large cities where I'd probably have a hard time proving I wasn't a troll.\"\n\nJurn looked between the three of us, \"I can see how you ended up out here then. Any of you have any skills?\"\n\n\"I worked as a gatekeeper for the last few years,\" I said quickly, \"but I'm not opposed to labour, and I'm smart enough to make this armour, grow vegetables and hunt.\"\n\n\"What about you ladies?\" Jurn continued.\n\n\"We're both powerful spell weavers,\" Eila started. \"We can hold our own, and honestly, we just want to settle down somewhere quiet.\"\n\nJurn nodded, \"not sure you'll find quiet any time soon. Back the way you came through, a goblin clan was wiped out. Created a power vacuum that's pulled in all the surrounding clans. We've pushed back a few patrol groups recently, but without your help, we'd have been swept up under that attack.\"\n\n\"If you can provide us lodgings, for the time being, we'd be happy to help out in the future.\" Ally chipped in.\n\nJurn thought about it a moment, before looking me in the eye. \"I've got a place you can stay. Old Yen's place. It's near the outer wall, away from most of the other dwellings. It's a bit old and run down, but it's warm and dry. I can take you there now, if you like?\"\n\nA quick exchange of looks with my ladies were all I needed. \"Please, lead the way.\"\n\nJurn led us through the centre of town. It was surprising to see how many different peoples we passed. A few orcs, some cat people known as fetz and a handful of humans made up the majority. I even spotted a masculine figure covered with bright green scales, that I couldn't identify. All in all, this town looked like the kind of place where outcasts and nobodies congregated... A place where people just wanted to be left alone. What really sold it for me, was the half dozen or so children I saw running around. If this were some bandit hub, I doubt we'd be seeing any children at all.\n\nWe listened to Jurn talk about the town. He pointed at the street markets as we passed. The town square held the town well and the entrance to his own home, should we ever need him. Jurn even gave me a slight nudge as we passed the barracks, making it clear he thought I should sign up as a guard. I didn't want to burst his bubble quite yet, but I really wasn't planning on it. Soon enough however, we came to the warehouse district. This area was mainly used for town storage. As such, it had a strong guard presence in the area. And there, tucked between a granary and a warehouse full of wooden crates, was a shabby looking, two story shack.\n\n\"Don't look like much from out here, but it goes right back against the wall.\" Jurn walked up to the front door and pulled it open.\n\nEila went in first, followed by Ally. I had to duck my head to come in, but I was surprised at the tall ceilings. There wasn't much, but I wasn't at risk of hitting my head just standing. Jurn led us through the dwelling. It had been cleared out after the late Yens had moved on, but all the old furniture remained. There was still a little work to be done. Patching a wall, rehanging a door, rugs to be beaten off dust. But it was spacious, had a well built kitchen and larder, and that was just downstairs. Upstairs, there were three empty rooms and a fourth that was the master. It came with an oversized four poster bed with a fresh mattress and linens.\n\n\"Now, there's a private bathing area out back, Yens had a bit of a people problem, so he had one built. I don't know much about it, so you'll have to figure it out yourself.\" Jurn said, heading back downstairs into the lounge. \"So what do you think?\"\n\nThe ladies and I followed Jurn downstairs, taking another look as we went. \"Well ladies, I'll live anywhere, it's up to you.\"\n\n\"How much?\" Ally chirped immediately, taking Eila's hand while they smiled excitedly.\n\nJurn grinned, \"considering how just about everyone here owes you three their lives, I'll do you a deal. One gold a month, paid at the beginning of the month. I'll give you three months free to get your feet under you.\"\n\nI honestly had no idea whether or not that was a good idea. I had no real knowledge of the value of currency. If I wanted it I made it or found it myself, there was never anyone willing to trade with a goblin clan. So I was paying attention as Ally pulled something from a pouch hidden inside her armour.\n\n\"Would you accept this as currency?\" She asked sweetly.\n\nJurn took the offered object. It was indeed a gold coin. Removing one of his own, he compared the two for a brief moment. \"Yours is a little larger than what we're used too. I'd feel better if you took this down to a jeweller and made a trade for local coins, that way I wouldn't be ripping you off.\" Jurn scratched his chin for a few moments, \"I better show you where the jeweller is, huh?\"\n\nThe three of us accompanied Jurn for a quick walk. The town jeweller was closer to the warehouse district than most of the other stores. Taking advantage of the increased presence of guards. Jurn explained that while the local population was relatively at ease with one another, there was occasionally the odd bandit that came through looking for trouble. Suddenly the reaction at the front gate made a whole lot more sense.\n\nJurn led us through a wide door, into a well lit room filled with glass cabinets displaying various gems and jewellery. \"Ho there, Marge,\" Jurn called.\n\nA short woman, I guessed was probably a dwarf or gnome came in from a back room. \"Don't rush me Jurn, I was getting my armour off. You know damned well I'll go down swinging if it comes to it.\" As she realised it wasn't just Jurn in her shop, she stumbled to a stop. \"Sorry, sorry, I didn't realise anyone else was here.\"\n\nAfter Jurn quickly introduced everyone, he took a step to the side.\n\n\"No harm done,\" Eila smiled. \"We were wondering if you could exchange some currency for us?\"\n\n\"Oh,\" Marge brightened, \"I'd be delighted.\"\n\nJurn handed over the coin. Marge examined it closely. \"I haven't seen elvish coinage in decades,\" she took stock of the ladies, \"displeasing your fathers then?\" Eila smiled and nodded, Ally just looked uncomfortable. Marge immediately picked up on it, \"don't worry yourself lass. From what I saw of your man here, you'd be hard pressed to find a more capable warrior. If your father was half the man, he is,\" she stuck her thumb at me, \"he'd be proud.\n\n\"So... How much are we looking to exchange today?\" Marge asked, quickly changing the subject.\n\n\"Jurn, if you were to sell to us, how much would it be?\" Eila asked quickly.\n\nJurn furrowed his brow a moment, deep in thought. \"I could let it go for fifty gold.\"\n\nAlly didn't need instructions, simply pulling free a medium sized bag of coins. \"There should be fifty like the one in your hand.\"\n\nJurn just chuckled to himself. \"Alright, I'll go get your paperwork sorted. Meet me back at my manor at the square.\" With that he walked off, leaving the ladies and I with Marge.\n\n\"So who are you really?\" Marge asked softly.\n\nAlly immediately moved to draw her blades, but Eila held up her hand. \"I'm the daughter of King Phaslo. I was wed to a monster, I'm sure you know against my will. Ally is my handmaiden and Frelser helped us escape.\"\n\n\"Ah... I'll be honest, I wasn't expecting that,\" Marge chuckled. \"I was thinking you were either a merchant's daughter, or a minor noble... To think I have royalty in my home...\"\n\n\"Please Marge,\" Eila stopped her. \"The man my father gave me too, whipped and beat me for the hour we were legally wed. Frelser found my just before he was able to rape me. I killed my fellow elves making our escape.\" Eila drew herself up, \"I am no longer royalty, so please... Just call me a friend.\"\n\nAs Eila finished her speech, Ally pulled her into a deep hug. I pulled them both into mine as I watched Marge for her next move.\n\nMarge however had a pained expression on her face. \"I'm sorry dear. I would be honoured to call you my friend. I'll not speak of your past to anyone.\"\n\nWith that, Marge quickly weighed up the coins, before filling several bags with local currency. There were smaller copper coins, some silvers and a bunch of golds. I simply handed them straight to Ally, figuring she'd be the best to keep track of it. We thanked Marge for her time and left in the direction of the square. Without Jurn guiding us, we were able to stop and look around. The town seemed just big enough to be self sufficient. There was a blacksmith, various stands selling all types of farm produce. Even a cobbler set up beside a tanner. As we approached Jurn's home, we were pleasantly surprised to see it doubled as a schoolhouse. Considering the events of this morning, it was empty, but it meant the town had planned for growth.\n\nKnocking on the door, it opened almost immediately. Jurn stood before us with a friendly smile.\n\n\"Come in come in. I just need the coins and for you to sign the paperwork,\" he said with a grin.\n\nTrue to his word, the three of us signed a very basic and straightforward writ, and the home was ours.\n\n... Chapter Eight...\n\nWe made a quick detour on the way home. Stopping by a tailor. Entering the store, it was run by an older looking orc gentleman. His puzzled expression seeing the ladies still in armour, was nothing compared to the open mouth stare he gave me.\n\n\"Good morning. I'm Grah-Sha but you may call me Grah. You must be the newcomers that turned back those goblins.\" He said in a rough, throaty voice. It was an odd sound, as he was clearly an educated man.\n\n\"We would at that,\" Eila smiled. \"Unfortunately, all we have to wear is our armour. We were hoping to pick up a few sets and get fitted for a few more.\"\n\n\"Yes, I can see how that would be a problem,\" Grah eyed me warily. \"I'll probably have a few basics in your size you can take now. But I won't have anything for your troll.\"\n\n\"Their... Troll... Has clothing under his armour,\" I growled. \"I would, however, like a few more sets of spares if you could manage it.\"\n\nGrah's eyes almost bugged out of his head. \"Gods... I'm terribly sorry young man, I judged you poorly. Please, I'll measure you first, I'll have one of my daughters bring the ladies tea.\"\n\n\"Thank you,\" we all replied in unison.\n\nI followed Grah into a well lit back room. He quickly disappeared, returning with a young woman in her early twenties, who smiled politely as she passed through.\n\n\"There now... Again... I'm terribly sorry, that was a horrible first impression I made,\" Grah said with a pained smile.\n\n\"No harm done. I expected this kind of thing. It's why we headed west and not east.\" I chuckled, diffusing the situation.\n\n\"Still... Even after you helped save the town, I should have spoken better. I'll put your order on priority. I'm sure Mrs Potter can wait an extra day for her doilies, while I get you into something comfortable.\"\n\nFrom the point, Grah was methodical and exact. He took his measurements, wrote them down and moved on. Five minutes later, I was sitting with Ally and Chit-Sha, Grah's daughter. I listened halfheartedly to their idle banter while enjoying a cup of tea for myself. When Eila returned, Ally disappeared. After a few moments of silence, I realised Chit was eyeing me. I tried to ignore her at first, but as I kept my eyes moving around the room, Chit started leaning closer. Finally I'd had enough, and I spun in my chair, snarling silently as I moved to face her."
    ],
    "authorname": "Montgomery Quinn",
    "tags": [
        "anal",
        "elves",
        "harem",
        "lesbian",
        "magic",
        "orc",
        "romance",
        "succubus",
        "threesome",
        "troll"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-beast-18"
}