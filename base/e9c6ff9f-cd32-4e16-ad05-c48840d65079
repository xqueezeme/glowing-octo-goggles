{
    "title": "How to Please a Woman",
    "pages": [
        "Sometimes I think guys just don't have a clue about a woman's body. Judging from what my past lovers have told me I would be right. After having sex with a girl a few times, I can usually have them cumming within two minutes of initiating sex. I have heard many stories about all the things that guys have to do to get a girl in the mood. The easiest way to get a girl in the mood is for her body to know that you have knowledge to make her cum like she has never cum before. Then it becomes a subconscious effort on the girl's part. You just touch her and she knows what is about to happen. The juices kick in and all that time that is spent on foreplay isn't needed. I am not saying don't have foreplay. It is a good thing. Caressing a woman's body is incredible; so is running your lips across it. There is nothing better than feeling a woman tremble at your touch. So do not stop the foreplay. \n\nLet's talk about a woman's clit. This is what it's all about. This thing only has one purpose to allow a woman to get off. They come in many different sizes. Generally speaking about the size of the tip of your pinky finger. It is location is at the top of the vagina; there is a hood of skin over it when it isn't aroused. When it is aroused then it will usually pop out of it's hood. Be careful, it is very sensitive. Don't rub it while it is dry. This will cause her pain and she will not give you anything! Make sure anything you use against it is well lubricated; whether it is a finger or a tongue. \n\nFingering a clit for most of us guys is very difficult. We have tendency to be very rough. Most girls do not enjoy this; you must be very gentle. If your finger is very wet then just try rolling your finger around the clit this should start getting to her. Stop every now and then, run your finger up and down her lips, this has two effects. One she will really enjoy it. The lips are very sensitive also. For your purpose it will rewet your finger. No need to make it obvious, by lubing your finger by putting it in your mouth. Some women find this to be a turn off, use her juices to lube your finger. She will just think the rubbing of the lips is just part of the action! \n\nSome girls can be made to cum with just a finger. However if you do this you are cheating them of even greater pleasure. There is nothing like a tongue to send her over the edge. By this time she should be getting excited. If you were to look her clit should be sticking out of the hood. Get down between her legs, from this angle her clit will be right on top. Take a moment to look at it and feel it. Start at the tip of the clit. It should be throbbing is she is responding. Take your finger and run it up the clit towards her belly button. Notice the clit isn't just a little button and it goes back into her body. \n\nNow here is the key, remember when you were a kid and you would put a rubber band around your finger? What happened? It swelled up; this is what you want to do to her clit. Take a finger above where the clit sticks out of the hood press down so that the blood supply is cut off between your finger and her pubic bone. Be careful of her hair, if she has hair, that is. If you do not press right then you are libel to pull some of her hair; she will not like this a bit. You can also try using your upper lip to do this. \n\nHowever, you will have to use some pressure and if you do it long enough you will leave an impression against the back of your lip from your teeth. You may also get some swelling of your lip. These are simply temporary drawbacks, and they are greatly outweighed by the rewards. When the blood supply is cut off then her clit will become even more sensitive. It will not take long for her to orgasm if you are licking her clit while doing this. Also try pressing then releasing while flicking her clit with your tongue. Remember each girl is different. You will have to figure out what she likes best. \n\nNevertheless, let us presume that you just simply do not have the time, or want to invest the time. You need to get her off and yourself. What is the easiest way? Oral sex, of course. There is not anything like your tongue against her clit to push her over the edge. But there is also is not any reason that you have to do it for half an hour before she responds. You have to find her G spot. She will thank you after for the time you take to find it. The way to go about finding this \"G\" spot is to take your index finger and slide it into her vagina palm up. Now curl your finger up so that it is curled around her pubic bone. Do you feel where her pubic bone meets with the top of her vagina? That is the area her \"G\" spot is in. Just start rubbing in this area, if she does not respond then move your finger a little and try again. You will have to apply pressure. This is not a spot that likes it gentle. The reason is that the \"G\" spot is not in the vagina wall; it is behind it. So you have to use enough force to push the vagina wall into the \"G\" spot. If she says it hurts then back off, but remember to use pressure. \n\nIf you tell her you are trying to find it then it should be easier. She can tell you what feels good and what does not. If she tells you that it feels like she has to pee then you have hit the mother load. Don't worry she will not give you a golden shower, but at this point it will seem that way to her. If either of you is worried about then have her relieve herself before you start. \n\nKeep rubbing this spot. The sensation she is having will soon turn to pleasure. You will not believe the difference this will make in the way she is responding to your touch. She will have an explosive orgasm. Probably one of the best she has ever had. \n\nIt is possible that she will squirt when she cums. This is normal for some girls. For those who can do squirt, it causes a wonderful sensation. The \"G\" spot causes this; much like the prostate on the man it will \"ejaculate\" when overly stimulated. If a girl is really turned on and her \"G\" spot is stimulated a lot the fluid will build up and actually squirt from her vagina. Don't worry, this is not urine. It is pretty much clear and tasteless, but be prepared because some can really soak the bed!!! \n\nWe have covered a lot up to this point. Until recently I thought this might be as good as it gets for the woman. However, I was seriously mistaken. There is another spot within her vagina that really gets them going. I have heard it referred to as the Epicenter. This spot is at the rear of the vagina along the top wall near the uterus. When I first heard about this I was very skeptical. I had never in all my days of pleasuring a woman heard of such a thing. So of course I had to see if it was for real. Let me tell you, from front line experience, it does! I have tried it and had incredible results. It makes for a fulfilling orgasm."
    ],
    "authorname": "KCBadBoy",
    "tags": [
        "blood supply",
        "vagina wall",
        "top vagina",
        "woman clit",
        "start rubbing",
        "finger clit",
        "woman body",
        "pubic bone",
        "finger",
        "spot"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-please-a-woman"
}