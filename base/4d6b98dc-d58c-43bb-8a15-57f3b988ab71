{
    "title": "Competition for 'The Top'",
    "pages": [
        "*Author's note: I recently wrote a story entitled If Things Were Different about an attractive female Marine first sergeant who fell in love with a younger, male Marine officer. I mentioned that unlike the Army, Marine first sergeants are never, ever referred to as 'Top'. Marine master sergeants, however, are affectionately called 'Top'. \n\nThere are too many subtle differences between the four branches of service to explain them all, and doing so isn't necessary, as this one, like all of my other 'mature' stories, is a tale of love, not the finer details of military service. I hope you enjoy it.\n\n******\n\n\"I'm really sorry we had to move again, honey,\" he told his daughter.\n\n\"Dad, it's okay. Really. Your career requires us to move, and I'm fine with that. I look at each move as an adventure.\"\n\n\"Are you sure you're only 14?\" he asked as he put his arm around her shoulder.\n\n\"Well, last time I checked I was,\" she told him with a smile as she put her arm around his waist and hugged him.\n\nBefore they walked into the conference room he stopped and waited for his daughter to look at him before saying, \"I am so proud of you, Sarah. And if Mom is looking down on us, I know she is, too.\"\n\n\"Thanks, Dad, but unlike you, I haven't really done anything with my life yet. Today is your day, and I'm the one who's proud. So let's go in so I Mom and I can watch you get promoted\u2014Top.\"\n\n\"Hey, that's master sergeant to you, private,\" he said in his oh-so-serious voice.\n\n\"Not yet\u2014Gunny,\" she teased back as she flipped his gunnery sergeant chevrons on his collar.\n\n\"Oh, a real smart aleck, huh?\"\n\n\"I learned from the best, Dad,\" she said with a smile before hugging him again. \"And I am very proud of you.\"\n\n\"Thank you, sweetheart. I couldn't have done this without your support. You know that, right?\"\n\n\"Come on. Let's go,\" Sarah said knowing she didn't need to answer his rhetorical question.\n\nEveryone at the RS\u2014the recruiting station in Seattle, Washington, was there to witness the promotion of Marine Corps Gunnery Sergeant Josh Haverty to the rank of master sergeant, pay grade E-8. This would be the first time in his storied career the word 'meritoriously' wouldn't be read after his new rank.\n\nHaverty was what Marines called a 'fast burner'. He'd been promoted meritoriously, meaning ahead of his peers due to superior performance, from PFC through gunnery sergeant. The only reason it wasn't happening this time was because the last rank to which one could be meritoriously promoted was gunnery sergeant, a rank he'd earned five years earlier with just 12 years on active duty.\n\nJosh married his high school sweetheart, Ann Culbertson, a week after graduation and reported to boot camp one month later in the summer of 2000. He became the platoon 'guide', the recruit who carries the platoon guidon (a small flag with the platoon's number on it) and was promoted to PFC\u2014meritoriously. When he graduated, he was wearing 'mosquito wings', as the single stripe of a private first class was affectionately called, before reporting to the School of Infantry at Camp Lejeune, North Carolina.\n\nHe left there then reported to the Second Marine Division at Camp Lejeune where, over the course of the next three and a half years, he was further promoted to lance corporal, corporal, and sergeant, all meritoriously. \n\nAlso during that tour, after just six months at his first real duty station, Josh's company was sent to Afghanistan where he completed his first combat tour.\n\nBut the highlight of his time at Lejeune was the birth of his daughter, Sarah, which coincided almost to the day of his third year on active duty. Both he and Ann had so far enjoyed military life in spite of the separations and other hardships, and she'd fully supported his decision to re-enlist.\n\nFrom Camp Lejeune, the Havertys headed south to Beaufort, South Carolina, where they lived while Josh went through Marine drill instructor school at Parris Island which was located between Beaufort and the town of Port Royal before spending three years as a DI. \n\nIn his second year of DI duty, he was selected for meritorious promotion to staff sergeant, pay grade E-6, and was wearing the rank with just six years time in service before going back to his primary MOS or military occupational specialty of 0369\u2014infantry until leader. \n\nHe returned to the infantry at Camp Pendleton, California, where he served as a platoon sergeant for one year, with eight months of one of that year back in the shit hole known as Afghanistan, and then another as a company gunnery sergeant (while still a staff sergeant) after his return home.\n\nEverything was going perfectly well in his life from his career to his marriage to raising Sarah when the proverbial bottom fell out. \n\nAt the end of that second year, he was moved to the battalion S-3/operations office (or '3-shop' as it was known) where he served as the training chief. It was about two months after that when he first noticed Ann coughing to the point that she finally went in to get it checked.\n\nShe was prescribed antibiotics but after taking them for a full two weeks, the cough not only didn't improve, it was growing worse. That's when Ann, or Annie as he mostly called her, told him she'd coughed up blood twice in the last 24 hours.\n\nPanicked, he took her straight to the base hospital where they ran tests and did a CAT scan which revealed a large mass on her left lung. A biopsy was done the next day, and when the results came back, they stunned both of them into utter silence. \n\nAnn had Stage IV lung cancer and even worse, the tumor was inoperable.\n\n\"But that's impossible,\" Josh adamantly told the oncologist who was a Navy lieutenant commander. \"She's never smoked in her life, and we don't hang out anywhere you could be exposed to asbestos. This has to be some kind of mistake!\"\n\n\"I'm sorry, Staff Sergeant Haverty, but even though this is rare, it does happen. Dana Reeve, the wife of Christopher Reeve, the actor who played Superman, also had lung cancer, and she'd never smoked, either. Sadly, there are many other similar examples.\"\n\n\"How long do I have?\" Ann quietly asked cutting to the chase with the kind of stoic bravery he loved about her so much.\n\n\"I can't be sure, of course, but with targeted radiation and chemotherapy, possibly as much as a year.\"\n\n\"Possibly. What's the minimum?\" she then asked just as directly.\n\n\"Were you to do nothing. Three months? Maybe six. Maybe,\" he said as gently as he could. \"Mrs. Haverty, I want you to know we'll do everything possible. I promise you that.\"\n\n\"No, I'm sure you will,\" she told him almost absentmindedly. \n\nAnnie managed a smile, but all she could think of was her husband trying to raise their beautiful, \n\nyoung daughter alone. They had indeed been high school sweethearts and married right after graduation, and neither of them had ever regretted the decision others told them was 'hasty' and 'ill-advised'. For them it had been anything but. Josh had been the handsome football player while was the beautiful cheerleader, and like so many others, they felt like they were meant to be together forever. Unlike most couples who married so young, they only grew to love one another more with each passing year. And, against all odds, having a daughter at 21 pulled them even closer together in spite of the added financial strain.\n\nWhen Josh went off to war, Ann had really struggled financially, barely getting by even in base housing, but she survived until he got home. \n\nWhen Sarah was born, they struggled even more until Josh made both corporal and sergeant, again both promotions coming meritoriously, for his consistently superior performance. \n\nEven now, it wasn't easy living in Southern California an E-6's pay, but money was a distant concern compared to being married to the most amazing guy she'd ever known and having a daughter she loved with all her heart.\n\nHe'd been on active duty right at nine years by then, and that meant he had to put in at least eleven more before he could retire. Yes, he could get out, but as an infantryman, it wasn't as though he had a lot of marketable skills, and raising a child required a regular, decent income. \n\nWere she not so shaken by the news she'd just received, Ann would have laughed when she thought about how many of her friends had asked her (or occasionally Josh himself) if he'd been a male model in a previous life, and as she looked over at him, she still understood why. That wasn't an option, either, although she couldn't help but think he might just be able to earn a few bucks with his chiseled body and those incredible, bright green eyes of his. When added to his very blond hair and those high cheekbones and square jaw, she understood why they said that. And then there was that amazing smile of his that still slayed her. \n\nShe did manage a wry smile when she thought about being 'slayed' by the man she loved even as she realized that cancer was indeed doing just that to her.\n\nIn civilian clothes, Josh was often mistaken for an officer, and those who'd spent time on active duty could usually tell the difference. No, not always, but most of the time, other Marines just knew. The ones that threw them off were those officers who'd been enlisted Marines or the Joshes of the world. He was so handsome it still took her breath away, and the thought of him not being able to make love with her was more than she could stand to think about.\n\nAs she looked at him, Ann noticed he was trying to fight off tearing up, something she'd only seen him do once before, and that was at a memorial for one of his best friends who'd been killed by an IED just days before the end of his first deployment. Even then he didn't cry, and Ann didn't want to be the reason he did so for the first time in his adult life.\n\nThe doctor waited for her to collect her thoughts, and when she looked back over at him, he said, \"Let's discuss all the options available, then you and your husband can go home and discuss them. But please let me know by tomorrow, if possible, what you'd like to do, as we need to get started as soon as we can. This tumor is aggressive and fast-growing and we need to stop it from getting any bigger.\"\n\nJosh promised him they would, but Ann already knew the answer; an answer that did exactly what she hoped it wouldn't.\n\n\"Annie, you can't just give up!\" Josh told her when she shared her decision with him back at their modest home in base housing. \"I love you. I need you. Sarah needs you. Every day matters, honey!\"\n\n\"Only the quality days matter, Josh. I don't know how many of those I have left, but I don't want to waste even one of them. Chemo means feeling sick and nauseous and maybe even unable to get out of bed or have dinner with you and Sarah or...make love with you.\"\n\n\"But, Annie, you can't just quit on me!\" he told her, his voice filled with exasperation.\n\n\"I'm not quitting on you, honey. I'm choosing to live for you. I'm doing this for you. And for me. And...for Sarah,\" she said as their daughter played happily with a friend outside, oblivious to the unthinkable thing happening to her mother.\n\n\"So what are you telling me?\" he asked as tears welled up his eyes.\n\nShe moved next to him, laid her head on his shoulders then said, \"Let's not pull punches, okay? We've always been honest with each other. We both know I'm dying. It isn't an 'if', it's only a matter of when. Chemo might give me a few more months, but I'd sick most of that extra time, and eventually, either way, I'll get very sick near the end. Regardless, I'm going to die, Josh. I know you don't want to hear that, but we both know it's true. So our new 'mission' is to accept reality and deal with it making the most of every day we have left.\"\n\n\"I can't lose you!\" Josh said as tears streamed down his face.\n\n\"It's not up to you, honey. Or me. We don't get a vote on that. The only vote we get is how I live the rest of my life, and in the end, I'm the only one who gets to make that decision, and I don't want chemo. So please try and understand,\" she said earnestly.\n\nHe shook his head slowly and said, \"It's so unfair. It's so...wrong.\"\n\n\"Life is unfair, Josh. Look at all the Marines and soldiers and others killed by IEDs. There's no enemy around for miles. They're half asleep or talking with someone else in a Humvee when suddenly...and just like that, it's over. That isn't fair. Horrible things happen to little children every day. Many die from cancer and malaria and other horrible diseases in too many countries. They die slow, painful, agonizing deaths. That's not fair.\"\n\nShe lifted his arm off her shoulder, turned toward him and said, \"Life comes with a death sentence, Josh. We both know that.\"\n\n\"But not when you're only twenty...\"\n\nShe gently put a finger on his lips then said, \"No, that's not true. What I heard in Sunday School many years ago is true. Death is no respecter of persons, and age doesn't matter. All we have is the day we're living, and the hope of another. The only difference between you and me is I now have a pretty good idea of when my life will end.\"\n\nShe took his hands and said, \"Look, we all want to live to be a hundred and stay healthy until we pass away quietly in our sleep one night. But that's not reality. It's just another defense mechanism, another...distortion we use to protect ourselves from the harsh truth that death is always out there\u2014lurking. It moves where it wants and takes whomever it wants whenever it feels like it, and no power on earth can stop it.\"\n\nShe waited until he looked right at her then said, \"Josh. Honey. I don't want to die. I want to live. I want to spend a long, happy life with you and watch our daughter grow up, graduate from high school, get married, have children, and spoil our grandkids rotten.\"\n\nJosh tried to smile but couldn't.\n\n\"But that's not in the cards for me. So let's not waste one more minute of one day complaining about 'fairness' or anything else that won't change anything. What's done is done. And please, please respect my decision and don't make me feel guilty for it. Please?\"\n\nSummoning all the courage he had, he wiped the corners of his eyes with his sleeves and managed to say, \"Okay. I'll support you no matter what.\"\n\n\"Thank you. Now, I'm gonna go get dinner started, and you go get Sarah and have her wash up.\"\n\nThey waited another week to tell Sarah then did so as calmly as they could. A heavy dose of prednisone helped Ann not cough too much which kept Sarah from knowing something serious was going on. The last thing Ann wanted was to frighten their little girl so she smiled and spoke in a pleasant, very matter-of-fact kind of way talking to her on a level she could understand.\n\nSarah didn't cry, and looking back, Josh knew it was because even then she was mature beyond her years. She knew it would hurt her mom so somehow she held all it inside. She also decided then and there to be as positive and helpful as she could possibly be to try and make the rest of her mother's life as pleasant as she knew how knowing it would also make it easier for her father. And she was still that way to this very day.\n\nThe last day Ann was fully herself was the day of Sarah's birthday party three months later. It was as though the thought of being strong until then allowed her to will herself not to give in. She didn't have the strength to decorate or do much of anything, so Josh, with he help of his parents, who'd flown in from Idaho and Ann's parents who'd flown in from Pennsylvania, took care of everything. \n\nAnn had lost a good 15 pounds, and was always in pain in spite of the Vicodin she ate like candy, but she never let it show as she laughed and played games and sang happy birthday before watching her daughter open her presents. She made sure Josh recorded everything she and other family members did with Sarah that day hoping it would one day be a pleasant memory for them. Ann also refused to cry even though she was fully aware this would be the last birthday or special occasion she would ever spend with her beautiful daughter or her amazing husband.\n\nThat evening, she went to bed around 7pm and didn't get up until almost noon the next day. Within days, she became too ill to get out of bed. Two days after that someone the hospital arranged for from out in town came to their home to provide any and all needed care until the end, as Ann's last wish was to die at home with her family around her. \n\nAnn Haverty lived four months, two weeks, and three more days after the diagnosis, and Josh Haverty cried for the second time when they said goodbye to her. Somehow, Sarah did not, and her father couldn't help but wonder if that might perhaps be unhealthy or harmful, but he never brought it up. Rather, he marveled at the internal strength their daughter showed in the face of so much adversity.\n\nThe one and only 'blessing' in all of it was that Josh hadn't had to pay a dime for any of the medical care.\n\nNo, that wasn't true. Ann's father sold life insurance for a living, and he'd twisted Josh's arm to get an inexpensive term policy on Ann 'just in case' as soon as they got married.\n\n\"Look, you've got SGLI if something happens to you, Josh. But in the unlikely event something happens to Annie, you're going to need the money. Especially if you have kids which I'm assuming you will. Hiring a nanny is expensive, but term life insurance isn't. For less than $15 a month you can get a policy of a hundred grand. Yes, it'll go up a little every five years, but it's dirt cheap. It's an investment, Josh. A very practical, very smart investment.\"\n\nSo, more for his father-in-law than for himself, Josh made out an allotment for $13.58 a month 'just in case.'\n\nTwo weeks after his Annie died, his father in law flew back again to personally hand his son-in-law a check for $100,000.\n\n\"It can't ever replace her, but it will help make life easier for you and Sarah,\" her father told him as he fought back tears.\n\nThe older man lost the battle and teared up when he said, \"I loved her more than anyone else on earth, and she loved you and Sarah that much, Josh. I'm sure you know that, but you and Sarah were everything to her.\"\n\nJosh thanked him and told him he did know and assured him she had meant just as much to him. They shook hands, hugged, and said goodbye. \n\nAfter that, the only times they really interacted were around Christmas when Josh took Sarah to spend the holidays with her maternal grandparents every other year. He didn't want to go to Pennsylvania, but he could only imagine how heartbroken they were having lost their daughter, and when he thought about them not being able to see their only grandchild, it was too much to bear so they made the trip no matter what.\n\nSo perhaps the money he'd never wanted or hoped to have might also be considered a 'blessing'.\n\nJosh muddled through the rest of that tour in the S-3 and after a lot of thought and consideration, requested recruiting duty as his next assignment.\n\nRecruiters work a lot of hours but almost never deploy, and while Josh felt guilty about 'not pulling his weight' in the infantry, the one thing he was sure of was that Sarah had to come first. \n\nAfter completing recruiter's school in San Diego while a full-time nanny cared for Sarah, he was sent to Mobile, Alabama, where he then sent dozens of young men and women off to the east-coast recruit depot at Parris Island to become U.S. Marines. \n\nAs it turned out, Josh was as good at recruiting as he'd been as a drill instructor. He'd had to pretend to be angry all the time as a DI, but that wasn't in his nature. He had a very easy-going personality, and, coupled with superb time-management skills, he was able to make or exceed his monthly quota of enlistees. It didn't hurt that he was also sporting some form of the Marine dress-blue uniform everywhere he went, attracting no small amount of attention from a lot of young people\u2014many of them female\u2014who found the handsome blond recruiter irresistibly attractive. ",
        "As a result, he was once again recommended for accelerated promotion and made meritorious gunnery sergeant shortly after 'going over 12' meaning 12 years on active duty around the time he turned 30 years old. \n\nAt the three-year mark of his tour on recruiting duty Josh requested a one-year extension which was granted. Knowing he would return to the Fleet Marine Force after that and once again be deploying regularly to include going back to Afghanistan, he made a decision after discussing it with Sarah.\n\n\"So you want to be a career recruiter?\" she asked, having heard him mention it as a possibility a few times before.\n\n\"I think it's smart, honey. I won't have to go back to the Fleet, and that means I won't have to deploy. And I think I do a pretty decent job as a recruiter,\" he modestly told her.\n\n\"Okay. Then let's go for it,\" Sarah had said in her usual, positive, upbeat way.\n\n\"You know it means at least one more move, right?\"\n\n\"It's part of the job, Dad,\" she replied matter of factly.\n\nNot sure what else to say, Josh sat there and once again marveled at her level of maturity.\n\nHis request was approved, and to his surprise, Gunnery Sergeant Haverty, as a new career recruiter, had been sent to the Seattle, Washington, area where he served as the NCOIC (non-commissioned officer in charge) of a recruiting station in the busy, growing city of Renton just outside of Seattle.\n\nThree years into that tour of duty, he was eligible for promotion to master sergeant, and as soon as his name came out on the promotion list a few months later, he was told that he'd be moved into the city of Seattle to work out of the newly-created 10th-district recruiting office. \n\nSo for the last eight months of so, he and his daughter had been aware another move was coming. It would be in the local area, but there was no way Josh could commute from where they lived just south of Renton into and out of the downtown Seattle area where his new office was located, and then work all day if he ever wanted to see his daughter. So they'd spent some time looking for the nicest place he could afford in the best school district he could find. \n\nAs it turned out, none of the public schools in that area were acceptable, so he used some of the life insurance money he'd never touched other than to pay for the nanny during recruiter's school to fund a private-school education for Sarah at Puget Sound Academy.\n\nShe wasn't thrilled about having to wear a uniform consisting of a white blouse, a pleated gray skirt, and an optional gray, cardigan sweater, but she took it in stride the way she did everything else.\n\n\"I'll look like Britney Spears in her Baby, One More Time video,\" Sarah told him.\n\nJosh had heard of Britney Spears, but didn't watch videos.\n\n\"I'll take your word for it, honey,\" he told her without asking any questions.\n\nJosh had been quite a hit with a couple of her female teachers, as well as with an attractive guidance counselor when they attended open house at the Academy a week before the start of her freshman year.\n\nOne of them in particular, Sarah's homeroom teacher, Ms. Quinn, a plain-but-not-unattractive younger woman, had made it very clear she was single and looking. While her heavy-handed hinting had been over the top, it wasn't so clumsy that Josh felt the need to let her know she was out of line. He only smiled, thanked her for her time, and then again when she gave him her private number.\n\n\"Just in case you ever need to discuss something about Sarah's performance,\" she'd added with a much-too-eager smile.\n\nHe had a similar, but less-intense meeting with Sarah's guidance counselor, Ms. Tomlin, who was a reasonably attractive woman a little closer to his age.\n\nHe was relieved both of them had flirted with him when Sarah was talking with other new students which meant he wouldn't have to listen to her urging him to 'go ahead and call them'. While Ms. Quinn's nearly in-your-face technique was off putting, Ms. Tomlin was someone he might actually consider going out with should he ever decide it was time. For now, he still wasn't ready making it a moot point.\n\nEven so, Sarah asked him if he'd met anyone 'interesting' and when he gave her the look, she backed off. She knew it wasn't her job, and yet Sarah worried about her father a lot. All of her friends said he was 'super hot' and yet he rarely ever went out with anyone and never actually dated any woman. Her mom had been gone for so long now she barely remembered her, and all she wanted was for her dad to be happy. \n\nWhenever she mentioned that, he always told her he was, because between her and his work, he insisted he had everything he needed. That was fine with her if he really was happy, but the older she got, the more Sarah knew he had to be lonely. It concerned her greatly that the only other thing he ever did for 'fun' was run or go to the gym. He never even went out with his fellow Marine recruiters for a beer unless it was a mandatory event because he already felt guilty about the amount of time he spent at away from her at work.\n\nFor now, she let go\u2014again. But she wasn't going to give up trying.\n\nThose and many other thoughts floated through his mind in a moment as Josh walked into the conference room where his commanding officer along with every available recruiter and staff member as well as family members were waiting. \n\nHe and Sarah were thrilled that Ann's parents had both flown in for Josh's big promotion, and they were standing there beaming with pride as he and their granddaughter walked in. \n\nHe immediately shook his father-in-law's hand and hugged his mother-in-law before hugging his own parents who were also there.\n\nAs he shook hands with his fellow recruiters, all of whom he considered friends and brothers in arms, he realized he'd found his niche as a career recruiter, and although he'd never say it out loud to anyone but his daughter, he knew he was pretty damned good at it.\n\n\"Gunny Haverty? Are you ready?\" his CO asked after he'd had time to 'work the room'.\n\n\"Yes, sir,\" he said as he reported to the colonel who was just a few years older than him. Josh was now just a couple of months shy of turning 36, and he rightly assumed the colonel was around 42 or so.\n\nJosh centered himself in front of his district commander who then said, \"Attention to orders!\"\n\nEvery Marine snapped to attention, and the room became silent except for the sergeant major's voice as he read the promotion warrant.\n\n\"To all who shall see these presents, greetings. Know ye that reposing special trust and confidence in the fidelity and abilities of, Joshua D. Haverty, I do appoint him a Master Sergeant in the United States Marine Corps to rank as such from the first day of October two-thousand and seventeen.\"\n\nOnce the warrant was read, the colonel asked, \"Who would you like to pin on your chevrons, Top?\"\n\n\"You and my daughter, sir,\" he told him.\n\nSarah had practiced putting the large, black chevrons on the utility uniform he'd worn so that she could pin on his new rank and did a very respectable job of putting them in exactly the right place. \n\nHe hugged Sarah then shook the colonel's hand who said, \"Ladies and gentlemen, I give you Master Sergeant Haverty.\"\n\nJosh wasn't longwinded, but he took the time to thank everyone there for coming as well as a generic thank you to every Marine with whom he'd ever worked before pausing and then mentioning the most important person in his life.\n\n\"My wife, Annie, has been patiently waiting for me to take my turn guarding the streets of heaven for many years now, but not a day goes by that I don't think of her, miss her, and love her.\"\n\nHe shared a couple of stories about their lives together before moving on to thanking the other most important person in his life, his daughter Sarah. Josh wasn't sure, but he thought he saw her eyes glistening as he briefly spoke about how much he loved her and what she meant to him. He could see that Ann's mother was openly crying while her father was smiling and nodding as Josh fondly remembered their daughter in front of everyone in the room, and now they were both smiling as he spoke glowingly of their granddaughter.\n\n\"She may only be 14, but Sarah is more grown up than many women I've met twice her age. I wouldn't be standing here today if it wasn't for her love and support. So, honey? This promotion is yours.\"\n\n\"Does that mean I get an increase in my allowance?\" she asked, surprising Josh and making him and everyone else in the room laugh.\n\n\"We'll talk,\" he told her before thanking everyone again.\n\n\"When's the wetting down, Top?\" one of the recruiters called out. The Army used the term 'promotion party' but the Marine Corps referred to it as a 'wetting down' when the newly promoted Marine used some of his new pay increase for a party that invariably meant a lot of drinking as well as a little chow.\n\n\"Soon. I'll let you know!\" he promised them.\n\nAfter shaking hands with everyone again, Josh told Sarah he'd be taking her home in just a few minutes so she went to spend time with her grandparents.\n\nOnce he had a moment alone, the CO asked if he had a moment to which he replied, \"Yes, sir.\"\n\n\"Top? I want to introduce you to Ms. Sierra Olsen. She's agreed to work with us on our Toys for Tots program this holiday season, and well, congratulations\u2014master sergeant\u2014you're heading it up for us this year.\"\n\n\"Oh, I see. Well...thank you, sir,\" he said with his usual smile, taking the unexpected tasking in stride.\n\nHe turned to the woman he'd just been introduced to and said, \"Ms. Olsen. It's a pleasure.\"\n\n\"Same here,\" she told him. \"And congratulations. I don't know that much about the military, but I do know that 'master sergeant' sounds very important.\"\n\nJosh smiled and downplayed the promotion even as he realized she was a very attractive woman. In fact, she was as beautiful as anyone he'd seen in a very long time, and she appeared to be pretty close to his age. However, like him, she wore a wedding ring, so any thought of well...anything...was out of the question.\n\n\"I'll look forward to working with you, ma'am,\" he told her. \"When would you like to get started?\"\n\n\"Have you and your daughter had lunch?\" she asked. \"I have the colonel's permission to steal you away for a couple of hours if now is convenient.\"\n\n\"Sarah? You game for going out to lunch?\" he called out.\n\n\"Of course!\" she told him. \"If food is involved, I'm always ready.\"\n\nSarah, who ran both cross country and track, was very thin but not skinny. She did, however, love to eat, so knowing she was onboard, Josh readily agreed.\n\n\"I just need to change,\" he told her as Marines couldn't go out in public wearing the utility uniform for other than brief stops. Sitting down for a meal while wearing it was out of the question.\n\nWhen he came a few minutes later wearing full dress blues with his newly-sewn-on rank, Ms. Olsen did a double take.\n\n\"Wow. I have to say you look very handsome, Mr...\"\n\nShe looked at him then asked, \"What do I call you?\"\n\n\"Josh is fine, ma'am,\" he told her without hesitation.\n\n\"Okay. I'll do that, but only if you'll call me Sierra,\" she replied.\n\n\"Deal,\" he told her flashing his perfect smile her way. \n\nThey agreed to drive separately and meet at the restaurant she suggested because Sierra needed to be somewhere else right after they finished lunch, and Josh needed to get Sarah home, as he'd taken her out of school for the rest of the day with the caveat she'd finish her assignments. Sierra had agreed to pay for lunch so doing things her way only seemed fair.\n\n\"She's really pretty, Dad,\" Sarah said on the way to the restaurant.\n\n\"Yes, she is, but she's also very...married, honey,\" he told her.\n\n\"Oh. I guess I didn't notice,\" she replied. \"You can't blame me for trying, right?\"\n\n\"Give it a rest, kiddo,\" he said with a smile.\n\nShe waited for a few seconds then said, \"Dad? Are you ever gonna get married again?\"\n\nHer father drew a deep breath then said, \"I don't know, honey. Maybe. Someday. But not now, okay?\"\n\n\"I know, but I also know you're lonely.\"\n\n\"You do? And how is it you know that?\"\n\n\"Dad, I'm not a kid anymore, okay? I just know, and I want you to be happy. And don't tell me you are because you have me. I know I'm awesome, but I'm not that awesome,\" Sarah told him with a smile.\n\nSarah never, ever bragged about herself even though she was very close to being a straight-A student a very strong distance runner.\n\n\"You are awesome, that's for sure,\" he told her. \"Tell you what. I'll agree to think about it if you'll agree to give it a rest.\"\n\n\"Deal!\" she said using the word he'd just used with Ms. Olsen knowing that a 'rest' could mean many years or a few minutes. She had no intention of waiting years or even months, but she was happy to give him a little time off.\n\nAs always, every head turned when Josh walked into the very nice restaurant he'd heard of but never been to, as people looked and gawked at the gold chevrons on his uniform as well as the huge stack of ribbons he was wearing on his chest.\n\nEven in very politically-liberal Seattle, Josh routinely had people shake his hand and thank him for his service, and this was no exception as two men did just that while several ladies skipped the handshake but did say 'thank you for your service' with warm, pleasant smiles.\n\nHe smiled slightly when he heard one of them say to the woman she was sitting with, \"He is hot!\"\n\nSarah heard it, too, and smiled just as they spotted Sierra walking in. The fact was, her dad was hot. The uniform just made him...radioactive.\n\n\"Have you been here long?\" Sierra asked as she walked up to join them.\n\n\"No. We just walked in,\" Josh told her.\n\nThe hostess was waiting for them and Sierra said, \"Table for three, please.\"\n\nShe was also very aware of the attention Josh was drawing and told him, \"You seem to have a fan club.\"\n\nHe laughed politely and said, \"This uniform is magic.\"\n\nSierra also laughed then said, \"I won't argue with that, but you're a very nice-looking young man, Josh.\"\n\nJosh didn't openly question her use of 'young man', but it made him look at her a second time once they sat down. Without staring he did an assessment and felt pretty sure he'd been correct the first time. He was willing to admit she could possibly be the colonel's age, but that seemed unlikely. \n\nSierra had dark, shoulder-length hair that was parted on one side. It framed her very pretty face in a most flattering kind of way, and was the perfect contrast for her deep-blue eyes. He couldn't ever remember any eyes being quite that bright, and they were even more beautiful thanks to the charcoal-colored eye shadow and black mascara she was wearing. Her smile was as perfect as his, and she had a body that wouldn't quit. Maybe she really was his age and just liked saying 'young man'.\n\nShe was wearing a very expensive-looking dress that showed just a hint of the fairly generous amount of cleavage between what appeared to be full C-cup breasts. Her arms were covered by a very dressy-looking cardigan sweater, but there were no signs of 'age spot's on her hands, and nothing but the finest of wrinkle lines around her eyes so yes, he settled for thinking she was somewhere around 40. Or maybe...40-ish.\n\nTheir server took their drink orders and Sierra said, \"Before we get down to business, I just wanted to say I was very moved by the things you said about your late wife. That was an amazing tribute.\"\n\n\"Well, Ann was an amazing woman,\" he told her.\n\n\"I have no doubt,\" she replied. \"Just as I have no doubt this beautiful young woman is, too.\"\n\nSarah was embarrassed by the flattery then even more so by her father's comments.\n\n\"She really is. Sarah is the strongest, most amazing person I know. Children are supposed to lean on their parents during tough times, but I've leaned on my daughter so often I'm surprised she isn't bent over sideways.\"\n\n\"Dad!\" Sarah said trying to get him to stop.\n\n\"It's true. You're a rock.\"\n\nHe waited to make eye contact with her then said, \"But you're my rock, and I love you very much.\"\n\nSarah did a polite eye roll at the 'my rock' quip but told him she loved him, too.\n\n\"My husband and I have a daughter. She's a bit older than Sarah, though,\" Sierra said with a fair amount of melancholy in her voice.\n\n\"She can't be that much older,\" Josh said with a smile.\n\n\"Oh, I think she can,\" Sierra told him as she smiled at both of them. \"She's on her own so...\n\n\"I think my dad is trying to say you look much too young and too beautiful for that to be possible. And I agree.\"\n\nSierra laughed quietly and said, \"Thank you, sweetheart. You just made my day!\"\n\nJosh was still looking and thinking when he finally said, \"No, that wasn't a line, Sierra. Sarah is right. I'm still struggling to make you having a grown child work out.\"\n\n\"Well, it's true,\" she told him.\n\n\"All I can say is your husband is a very lucky man, Sierra.\"\n\nShe started to answer him just as their drinks came, and the server then asked for and took their orders. By then Sierra had forgotten his comment and they moved on to something else.\n\n\"So how did you get involved with Toys for Tots, Sierra?\" Josh asked as he sipped his lemonade.\n\n\"Last year I volunteered with The Salvation Army during the Christmas holidays, and one of their permanent staff mentioned the program when we were discussing charities that help children,\" she explained. \"So this year I decided to check into it, and after several phone calls, I was put in touch with the colonel who just introduced us.\"\n\nShe smiled then said, \"I have to admit I knew you were going to be put in charge before you did, Josh.\"\n\nHe laughed then said, \"I have a full plate already, but this is a very worthwhile program, and I'm really happy to be helping out. The Marine Corps Reserve does most of the heavy lifting, but we always support the effort.\"\n\n\"How can I help?\" Josh asked.\n\n\"I was thinking about using you and one of those big red Humvees with U.S. Marines on the side as a kind of modern-day Marine Santa Claus and sleigh. We'd have all the children gathered around, and you'd pull in riding in the Humvee leading a big truck loaded up with toys.\"\n\nSierra spent the next couple of minutes sort of fleshing out the details before Josh said, \"That sounds like a lot of fun. I'm in!\"\n\n\"Do you need an elf?\" Sarah asked with a smile.\n\n\"Hmmm. You know what? I think that's a great idea! We're going to have a ton of presents to wrap, so if you'd like to help with that, I'd be very grateful.\"\n\n\"I love wrapping presents!\" Sarah told her. \"Just don't ask my dad.\"\n\nShe glanced at her dad who was doing the, \"Who me?\" thing before saying, \"Unless you want the toys to look like they were wrapped by something with ten thumbs.\"\n\nSierra laughed while Josh held his left arm out while placing his right hand over his heart.\n\n\"I'm hurt. Bad!\" he said feigning injury.\n\n\"The truth does hurt, Dad,\" Sierra teased.\n\n\"Okay, so wrapping isn't my...forte,\" he said trying to use a British accent when he said 'forte' as though it was snobbish to use a word like that.\n\nSierra laughed again as she watched them interact. It was obvious there was a huge amount of love and respect between them, and she couldn't help but feel a twinge of sadness at no longer having that with her own daughter.\n\nOnce it was quiet again, Sierra said, \"I propose we set up a competition between the recruiting district and the reservists in the area.\"\n\n\"I like it,\" Josh said immediately. \"The one with the most toys wins!\"\n\n\"Ha! My dad says that all the time only it goes, 'The guy who dies with the most toys wins'.\"\n\nSierra couldn't help but laugh even though it was more corny than funny.\n\n\"My dad has a million of them, so if you like to laugh, stick around,\" Sarah said while staring at her father.\n\n\"Hey, I resemble that!\" Josh said again feigning hurt.",
        "\"Um, that's as old as you are, Dad,\" Sarah informed him.\n\nSierra laughed again and told them, \"I'm so glad both of you were able to join me for lunch. I can't remember the last time I enjoyed myself this much.\"\n\nTheir meals came and they made small talk for the rest of their time together. When they were finished, Josh and Sierra exchanged phone numbers and agreed to touch base at least twice a week until December then 'as needed' after that.\n\nSeeing her opportunity, Sarah said, \"Why don't you invite Ms. Olsen to our house for your next meeting, Dad?\"\n\nHe went to give his daughter the eye as Sierra said, \"I'd like that very much.\"\n\nJust then she saw the look he gave her and quickly added, \"If that's okay.\"\n\n\"No, it's more than okay,\" Josh said. \n\nHe looked back over at his daughter then said, \"I know it doesn't apply to you and me, but this one is always trying to set me up.\"\n\n\"Dad!\" she said again only this time with a kind of smirk.\n\n\"Oh, I see,\" Sierra said. \"I just assumed your father would be seeing someone. It's more than a little surprising that someone so good looking wouldn't be.\"\n\n\"I know, right?\" Sarah told her as she smiled at her dad. \"He's way hot and yet he never goes out.\"\n\n\"Well, I'm afraid I'm more than a little too old for your father, Sarah, but it was very nice of you to think I might not be.\"\n\n\"You're not old, Ms. Olsen. You look amazing.\"\n\nSierra sighed then smiled and said, \"You just made my day a second time!\"\n\n\"Not that I'm flirting,\" Josh said as he glanced at the enormous 'rock' on her left hand, \"but you really are a very beautiful woman, Sierra.\"\n\n\"Well, thank you, too, Josh. My husband used to tell me that all the time,\" she said.\n\nHer comment caused more than a little confusion for both Josh and Sarah who were wondering what they were missing. Why would any man no longer tell a woman that attractive she was beautiful? Both of them wondered but neither of them asked.\n\nAfter lunch, Josh walked Sierra to her car and told her how nice it was to have met her and that he looked forward to seeing her again.\n\n\"Yes. Same here,\" she replied with a smile. \"And that goes for you, too, Sarah.\"\n\n\"Bye, Ms. Olsen,\" she said cheerfully as Josh opened her door for her.\n\nAs they drove home, Sarah said, \"Dad? Don't get mad, but why did Ms. Olsen say she's too old for you? She doesn't look old.\"\n\n\"No, she doesn't, does she? But she did say she had a daughter who's older than you. But as I said, it's a moot point. She also has a husband and that's that.\"\n\n\"I know. I was just wondering.\"\n\nSarah waited for a moment then asked, \"You and Mom were 18, right?\" \n\n\"Yes. Both of us,\" he told her. \"But don't you go getting any ideas, okay?\"\n\nSarah laughed and said, \"I want to go to college, so don't worry. I'm not really even interested in boys yet.\"\n\n\"Good,\" her father said in that way that all fathers do.\n\n\"So anyway, what difference would it make if she was older than you?\" Sarah asked pressing on.\n\n\"I'm not sure. Up to point, maybe. But what's far more important is having things in common so you get along and enjoy being with one another. But it doesn't matter, remember?\"\n\n\"I know. I'm just wondering. I mean, you and Mom got married at 18, and that's kind of unusual, so would it be unusual to date someone who's older than you?\"\n\n\"Wait a second. Are you interested in some boy who's older than you?\" he asked now not totally kidding.\n\n\"No! I promise,\" she told him.\n\n\"I thought you also promised to give it a rest,\" Josh said.\n\n\"I did. It rested until just now,\" she told him. Sarah tried not to laugh but when he looked over and stared at her she lost it.\n\n\"Okay. I'm sorry!\" she told him. \"Excuse me if I want my dad to be happy. Sheesh!\"\n\nHe started to tell her he was happy when she went, \"Uh! Shhh. Don't even say it!\"\n\nPretending to be deeply hurt, Josh said, \"Okay. Fine. I won't. I won't say...anything to you ever again!\"\n\nSarah flipped her head up and said, \"Promises, promises!\" before both of them laughed loudly.\n\nWhen it got quiet again, Josh got serious and said, \"Do you know how much I love you?\"\n\n\"Yeah, I do,\" she told him with a sweet smile. \"As much as I love you, right?\"\n\n\"Yeah. That much. Maybe even more,\" he told her as they drove the rest of the way home in silence.\n\nHome. They had a decent place in a reasonably nice neighborhood, but Josh still didn't like leaving his daughter there alone. But she was 14 now and had insisted she didn't need a nanny. \n\nHe'd reluctantly agreed then invested in a state-of the-art security system for their house, and like most Marines, he had a legally-registered weapon in it. Unlike most parents, he'd taught Sarah how to shoot several years ago, and just as importantly, how not to shoot unless it was a matter of life and death or someone with...ill designs on her person. Every six months or so they went to an indoor range to refresh her skills, and that was about the most fun they had together outside their home. In fact, they had plans to do just that on Saturday afternoon.\n\nAs an added safety precaution, they also texted one another every few hours, and that, coupled with Sarah's age and maturity level, let him get through each day without too much concern. Also, she was out of the house from 7am until nearly 6pm with cross country five days a week, making the hours she was there by herself few and far between. Even so, he couldn't help but worry.\n\nThat evening, Josh knocked on Sarah's bedroom door and asked if he could come in.\n\n\"Sure,\" she told him.\n\n\"I was thinking about talking to your principal about Toys for Tots tomorrow. There are a bunch of very well-off people who send their kids to the academy, and they could do a lot to make Christmas special for a whole bunch of kids who are less fortunate.\"\n\nSarah smiled happily and said, \"And that is just one more reason why I love you so much!\"\n\n\"So you won't mind me going inside with you in the morning?\"\n\n\"I'd say stay at least ten feet away at all times, but if you're going in uniform, you can walk with me. Maybe that way a cute guy will gravitate my way out of idle curiosity,\" she teased.\n\n\"Unless he's 18 and ready to enlist... No, wait. I better not see any boys hanging around you!\" he teased back.\n\n\"I am going to start dating one day, you know,\" she told him.\n\n\"Yes, I know, but let's not rush it, okay?\"\n\n\"Okay, but at the rate you're going, I'll be dating before you!\" she said with another playful flip of her head.\n\n\"You could be right, honey,\" he told her before saying goodnight and closing her door.\n\nAs much as he hated to admit it, his 14-year old daughter was right. He was lonely, and maybe it was time to do something about it.\n\nThe next morning Josh did walk into school with Sarah, and as always, heads turned constantly as students and teachers pointed and whispered as he walked down the hall.\n\n\"Teacher alert!\" Sarah said just as he, too, noticed Ms. Quinn walking toward them.\n\n\"Mr. Haverty! Hello, again! What a pleasant surprise. What may I ask brings you our way?\"\n\n\"Hello, Ms. Quinn. I was hoping to talk with the principal for a few minutes.\"\n\n\"If it's about Sarah, I'd be more than happy to discuss whatever concerns you have,\" she said with a very big smile as she stopped, turned around, and began walking their way.\n\n\"No. It's about a charity program the Marine Corps Reserve sponsors every year for Christmas. We active-duty folks help, too, and I'm hoping to get her to sign up on behalf of the school.\"\n\n\"Oh, I see. Well, I'd be very happy to lend my support if she okays it.\"\n\n\"Great. If she does I'll be touching base,\" he told her.\n\nShe leaned over and quietly said, \"You could touch my base anytime!\"\n\n\"Um...good to know,\" Josh said as pleasantly as he could just as they arrived at the principal's office.\n\n\"You still have my number, right?\" Ms. Quinn asked as he and Sarah stopped walking.\n\n\"I sure do,\" he told her.\n\n\"Okay. Just checking!\" she said as she began walking back in the direction she'd been heading. \"Call me\u2014anytime!\"\n\nJosh waved politely as the secretary asked how she could help. Josh explained what he was trying to do and she said, \"That sounds wonderful! Let me let her know you're here.\"\n\nJust as she was buzzing the principal, Josh heard another woman calling his name.\n\n\"Mr. Haverty?\"\n\n\"Yes?\" he said as he turned around.\n\n\"I don't know if you remember me. I'm Ms. Tomlin.\"\n\nShe smiled then said, \"Debbie Tomlin.\"\n\n\"Of course. You're one of the guidance counselors, right?\"\n\n\"That's me,\" she said almost bashfully. \"You look very handsome, by the way, and thank you for your service.\"\n\n\"Thank you, and it's my pleasure,\" he told her.\n\nLike Ms. Quinn, she asked what he was doing there, and after explaining it again, she, too, said she'd love to help out.\n\n\"Perfect. Between you and Ms. Quinn we should be able to really get things rolling.\"\n\nThe look on her face went blank when he mentioned Ms. Quinn.\n\n\"She's working with you?\" Ms. Tomlin asked.\n\n\"I haven't gotten the principal's approval yet, but she said she'd love to help out. Is that a problem?\" he asked not knowing the history between them.\n\n\"Oh, no. Just curious,\" she replied, her smile back again.\n\nThe truth was she and Molly Quinn did not get along\u2014at all. Once upon a time, they'd been best friends, but after both of them accusing the other of sabotaging a potential relationship with a man they were both interested in, the friendship came to a screeching halt. Now, the two women tolerated one another for professional reasons, but otherwise avoided each other like the plague. And when Debbie realized she was interested in Josh, it was all she could do to stay calm.\n\n\"Sir? Mrs. Winters will you see you now,\" the secretary said.\n\n\"You want to come in with me, honey?\" he asked Sarah who'd been watching silently.\n\n\"Um, no, that's okay. I think I'll go down to the cafeteria until the bell rings.\"\n\n\"Okay. Have a good day,\" he told her.\n\n\"You too, Dad,\" she said before pecking him on the cheek.\n\nAs she walked away, a girl Josh didn't know, joined Sarah and said, \"Is that your dad? He is so hot!\"\n\n\"She's right, you know,\" Ms. Tomlin, who'd also heard the comment, said.\n\nJosh had already forgotten she was still standing there and only smiled as he excused himself leaving her standing there at the front desk.\n\nIn less than two minutes, he had the principal's approval. They chatted politely for another couple of minutes before Josh thanked her and left. \n\nShe assured him she'd let the entire staff know what the program was, and that she'd set up a competition by grade level and encourage each teacher to try and bring in the most presents. The winning class in each grade would get some kind of reward, yet to be determined.\n\n\"That was easy,\" he said to himself as he was leaving. The bell had just rung and the halls were empty with the exception of a couple of tardy students running toward their homerooms. \n\nOr at least they seemed empty.\n\n\"Mr. Haverty?\" he heard a familiar voice call out.\n\nHe turned to see Ms. Tomlin again who was trying to catch up.\n\n\"I don't mean to bother you, but well, I...I was wondering if you might like to, you know, maybe...go out sometime.\"\n\nShe was either very new at asking a man out or very nervous or possibly both.\n\n\"I'm flattered, Ms. Tomlin, but...\"\n\n\"Debbie. Please,\" she said with a smile before confirming his suspicions. \"I've never asked a man out before, and I'm a little nervous, so please excuse me for that.\"\n\n\"No, I understand,\" he told her. \"I was going to say I don't go out much, but the truth is I haven't gone out at all since my wife passed away.\"\n\n\"I really am sorry you lost your wife,\" she said sincerely. She already knew that which explained why he still wore a wedding ring.\n\n\"Thank you.\"\n\n\"But I promised myself if I ever saw you again, I'd at least ask. I mean, I know you might not say 'yes', but I finally managed to work up the nerve to ask so...I'm asking,\" she said with the brightest smile he'd seen in some time.\n\n\"You know what? Sarah is always on my case about never dating, so...sure. Yes, I'd like that,\" he told her.\n\n\"Really? That is so great!\" she told him barely able to contain her enthusiasm.\n\nHe waited for a few seconds for her to let him know what she had in mind, but she just stood there smiling at him.\n\n\"What were you thinking?\" he finally asked.\n\n\"I'm sorry?\" she said so lost in her happiness that he'd said 'yes' she had no idea what he meant.\n\n\"Where were you thinking about us going?\" he clarified.\n\n\"Oh, right! Sorry, I really am nervous. I...I was thinking maybe we could, well, I...I guess I haven't actually thought about that. I think I assumed you'd say 'no' so I hadn't given any thought to the where part.\"\n\nJosh smiled but didn't laugh.\n\n\"Sarah and I have plans for Saturday. Would you maybe like to join us?\" he asked thinking that would be a way to ease back into dating, something he'd never planned on doing again.\n\n\"Oh. Sure! That sounds perfect!\" she told him without bothering to ask what they would be doing.\n\n\"Could we stop by and get you around 1:30 or so?\"\n\n\"Yes. Definitely. I can tell you're a really great dad, Mr. Haverty,\" she said, still smiling happily.\n\n\"It's Josh,\" he told her.\n\n\"Debbie,\" she said again. \"But then you already knew that, huh?\"\n\n\"I try, but Sarah makes it easy,\" he admitted. \"All right. I'm looking forward to this.\"\n\n\"Me too, Josh. I'll see you around 1:30 on Saturday then. Bye!\"\n\nAs she walked away, he saw her do a kind of shaking thing he rightly assumed was a 'yes!' of some sort indicating how happy she was to have asked and gotten a positive response.\n\nSarah was shocked but very happy when he told her that evening they'd be having company at the shooting range.\n\n\"She's kind of pretty, huh?\" Sarah said.\n\n\"Um, yeah. I guess so,\" her dad said.\n\n\"I mean, she's not...beautiful...like Ms. Olsen, but she is pretty.\"\n\nJosh hadn't thought about Sierra all day, and the mention of her name made him realize he needed to let her know about the good news from the school.\n\n\"Speaking of Ms. Olsen,\" he said as he reached for his cell phone.\n\nShe answered on the third ring and Josh said, \"Sierra? Hi. It's Josh. Haverty.\"\n\n\"Oh, yes. The dashingly handsome Marine master sergeant!\"\n\n\"Well, I am a Marine,\" he said modestly. \"Listen, I have some very good news.\"\n\nHe didn't mention the name of the school, and Sierra didn't ask, but she was thrilled with the news. She then told him she'd met with the sergeant major at the reserve unit headquarters who promised they would beat the recruiters.\n\n\"Well, no disrespect to the sergeant major, but...over my dead body!\" Josh told her.\n\nSierra laughed and told him, \"I think I'm really going to enjoy this!\"\n\n\"Oh, me, too,\" Josh told her. \"I'm going to enjoy rubbing it the reservists faces when we have a...boatload more toys than they do!\"\n\nSierra laughed again then said, \"Either way, the kids will be the big winners.\"\n\n\"Yes, indeed. I tend to be very competitive, and I think I lost sight of the actual goal here. It really is all about helping kids have a great Christmas.\"\n\n\"True, but competition is a good thing, Josh. It's very healthy.\"\n\n\"Good. I'm glad we agree,\" he told her. \n\n\"Oh, before I forget, the sergeant major told me they have a huge tractor-trailer rig we can use so if you can provide the Humvee...\"\n\n\"The Humvee is a done deal, Sierra. But...I don't have to wear a Santa suit, do I?\" he asked. He was wincing as he asked but knew he'd do it a heartbeat for the kids.\n\n\"No, I think the um...suit...you wore to lunch will make just as big an impression on them. Don't you agree?\"\n\n\"I do indeed,\" he told her. \"But I'd be willing to put on the red one for the kids.\"\n\nSierra laughed again, and said, \"You know, I really enjoy talking with you, Josh.\"\n\n\"Same here,\" he told her as he realized that was true.\n\n\"Well, I'm so glad you called,\" she said sensing there was nothing more to be said.\n\n\"I'll touch base with you again in a few days, Sierra. Take care, okay?\"\n\n\"I'll look forward to hearing from you! Bye, Josh.\"\n\nSierra hadn't met anyone who interested her since her husband passed away nearly three years ago, but she not only found this young Marine very attractive, he was just so easy to talk to you. And funny. And he had an amazing, wonderful daughter, and that reminded her of just how bad things had gotten with her own 'little girl' as she wondered yet again how things had gone so terribly wrong so quickly.\n\nWhen Saturday rolled around, Josh left work at noon and went straight home where Sarah was ready and waiting for him. At one o'clock he asked her if she was ready to leave and off they went.\n\nOn their way to pick up Ms. Tomlin, Sarah looked over at her dad and said, \"Please don't get upset, okay?\"\n\n\"Uh-oh. Did some cute boy kiss you at school this week?\" he teased\u2014hoping it was just teasing.\n\nSarah tilted her head down and to the side while glaring at her father and ignoring his comment.\n\n\"I'm really glad you're dating again. Well, I wasn't around, of course, when you and Mom were dating, but you know what I mean.\"\n\n\"Honey, I'm not dating. Ms. Tomlin asked me if I'd like to do something with her sometime, so today we're doing something together. All of us. Okay?\"\n\n\"Yep. This is very okay!\" she said with a smile.\n\nWhen they got to her apartment, Sarah got in the back when her dad went to knock on her door. She was ready and waiting, just like Sarah had been with one exception. Debbie was wearing a nice dress and heels.\n\n\"Oh, wow!\" Josh said when he saw her. \"You look very nice.\"\n\n\"Well, thank you, handsome!\" she said sweetly. \"Is it really okay?\"\n\n\"It's very pretty, but you might be a tad overdressed.\"\n\n\"Oh. I wasn't sure where we were going, and I thought I'd play it safe and be overdressed rather than underdressed. Should I change?\"\n\n\"You might be more comfortable in jeans,\" Josh told her with a smile.\n\nNot wanting to say or do anything to blow her chance with this gorgeous man, Debbie didn't ask where they were going and only said, \"Gimme a sec, okay?\"\n\nIt was closer to five minutes, but when she came back, she was still wearing full makeup, but she was wearing jeans and a nice blouse instead of the dress.\n\n\"Is this better?\" she asked.\n\n\"Much,\" Josh said. \"You ready?\"\n\n\"Hi, Ms. Tomlin,\" Sarah said when Josh helped her in.\n\n\"Hello, Sarah! How are you today?\"\n\n\"I'm great. How are you?\"\n\n\"I'm actually really looking forward to this!\" her guidance counselor said.\n\n\"Me, too,\" Sarah told her as her dad got back in.\n\nThey made small talk on the way, and Debbie was feeling great until they pulled into the parking lot of an indoor shooting range.\n\n\"Um...why are we stopping here?\" she asked.\n\n\"Because we're target practicing,\" he said with a smile.\n\n\"Can I shoot a .44 magnum today, Dad? Please?\"\n\nDebbie had a look of horror on her face as Josh said, \"No, the 9 mil is more than enough, but I might let you squeeze off a round or two with my .45 if you stop bugging me about 'the canon'.\"\n\nAs he went to get out, Josh noticed Debbie was sitting silently staring out the window, so he stopped and asked if everything was okay.\n\n\"Oh. Sure,\" she said quietly.\n\nAccepting her response, Josh went around and opened both doors and helped Debbie get out.\n\n\"Come on. This is gonna be a lot of fun,\" he told her.\n\n\"Do you do this a lot?\" she asked.\n\n\"About what? Maybe...twice a year or so.\"\n\n\"Every six months,\" Sarah said.\n\n\"Do you like to shoot?\" she asked Ms. Tomlin.\n\n\"No. Not really,\" she said. \n\nThe truth was she didn't like guns at all, and especially not handguns. She disliked 'assault rifles' even more, but she saw no reason for anyone to have a gun that was 'only used to kill people'. \n\n\"Have you ever fired a weapon before?\" Josh asked as they reached the door.",
        "\"Um...no. Never,\" she said.\n\n\"Well, this is gonna be a real treat!\" Josh told her, never having even considered she might find 'guns' offensive. To Marines, a 'gun' was a smooth-bore weapon like an artillery piece, while pistols and rifles were 'weapons' and 'bullets' were 'rounds'.\n\nAs they checked in at the front desk, the man behind the counter recognized Josh and Sarah immediately.\n\n\"Semper Fi, Guns!\" he said, unaware 'the gunny' had recently been promoted.\n\n\"Hey, Jake. What's new?\" he said without correcting him.\n\n\"Same old. Hold on, I'll go get your weapons. The .45 for you and the 9mm for the young killer, right?\"\n\nDebbie winced as Sarah said, \"I want to shoot a .44 magnum, but my pops won't let me!\"\n\n\"Well, he's the boss, young lady. Hold on and I'll be right back to get whatever the beautiful young woman here wants, okay?\"\n\n\"Take your time, Jake!\" Josh told him.\n\n\"Jake is a former Marine, Debbie,\" he told her.\n\n\"Wonderful,\" she said flatly.\n\n\"Is everything okay?\" he asked her again.\n\n\"Oh, sure,\" she told him in the same tone of voice.\n\n\"Okay,\" he replied knowing everything wasn't okay but not understanding why. Josh had never met anyone in his life who thought guns were 'bad', and it had never crossed his mind to ask Debbie if she thought they were.\n\n\"What do you want to shoot, Ms. Tomlin?\" Sarah asked her.\n\n\"I...don't think I want to shoot a gun,\" she said quietly.\n\nAnd that's when it finally hit him.\n\n\"Debbie? Do you maybe want to talk privately?\" Josh asked quietly.\n\n\"I think that would be a good idea,\" she told him.\n\n\"We'll be right back, honey,\" he told Sarah.\n\nThe two of them stepped outside and Josh asked what was bothering her.\n\n\"Guns. Guns bother me,\" she told him.\n\n\"May I ask why?\"\n\n\"Because they kill people, Josh. That's why!\" she told him as though it were something he should also intuitively know.\n\n\"Debbie, I've been around weapons\u2014guns\u2014all my life, and I've never seen a gun kill anyone. Ever,\" he told her politely. \"I've seen people use guns to protect themselves, but I've never seen a gun do anything without a person holding it when loaded.\"\n\n\"You've been to war, right? How can you not have seen guns kill people?\"\n\n\"I'm sorry, put it's people using guns, not the guns themselves. Knives, clubs, and SUVs don't kill people, either. But people can use them to do harm to other, but the guns never do anything by themselves,\" he said, trying again to find a way to help her see the difference.\n\n\"You're just not getting it!\" she told him as the anger welled up inside her. \"Guns kill thousands of people every year. The statistics don't lie!\"\n\n\"Tell you what. Let's go back inside and look at every 'gun' in the store. If any one of them can even move by itself, I'll give you a win,\" he said trying to be lighthearted.\n\n\"You're missing the point, Josh!\" she said again. \n\nDebbie was clearly very upset so Josh tried something else.\n\n\"Debbie, I didn't hide who I am. I came to school in uniform. You have to know what that represents, and yet you asked me out. Did you honestly think I'd be against guns or share your point of view? I'm not being mean or critical. I'm just asking a question.\"\n\n\"I...I don't know what I thought,\" she told him. \"I guess I was hoping it wouldn't come up. You looked so...handsome in your uniform, and maybe I just got caught up in some kind of...I don't know...some kind of fantasy or something. It's bad enough that you use them, but I can't believe you'd bring your 14-year daughter to a place like this!\"\n\n\"Sarah and I took a self-defense class together last year just in case she's ever in a situation where she has to defend herself. We come here for the same reason. If someone breaks into our house when I'm not there, how long do you think it would take the police to arrive after dialing 911?\"\n\n\"I don't know, but what I do know is guns are not the answer!\" she said coldly.\n\nJosh, who had been nothing but kind and polite said just as politely, \"Would you like me to take you home?\"\n\n\"Yes, but I don't want to ruin the day for Sarah,\" she told him.\n\n\"Jake is an NRA-certified instructor. He'll keep on eye on my daughter.\"\n\n\"You'd leave your daughter here? Alone? With guns?\" she said, barely able to contain herself.\n\n\"I don't want to argue with you,\" Josh said quietly. \"I can take you home or I'll pay for a cab if you'd prefer.\"\n\n\"I don't need your money or your charity,\" she said snidely. \"I'll get home just fine by myself.\"\n\n\"All right. If that's what you'd like,\" he told her calmly.\n\n\"What I'd like is to get rid of guns altogether!\" she told him. \"And the NRA!\"\n\n\"Is there anything I can do before I go back inside?\" he asked ignoring her comments.\n\n\"Not unless you want to join me in the 21st century where civilized people recognize the danger of private citizens owning guns.\"\n\nDebbie's hands were shaking and Josh knew it wasn't from the cold.\n\n\"I'm sorry to have wasted your afternoon, Debbie,\" he told her.\n\n\"It's Ms. Tomlin to you!\" she said before getting her phone out to call a cab.\n\n\"Please at least let us take you home...Ms. Tomlin,\" Josh asked again.\n\n\"Oh, great! My battery is dead!\" she cried before turning her back to him.\n\n\"Give me a minute, okay?\" he asked.\n\nMs. Tomlin refused to even look at him as he walked back inside and told Jake they'd have to try it again another day.\n\n\"What's going on, Dad?\" Sarah asked.\n\n\"Libertarianism and liberalism just collided,\" he told her with a smile.\n\n\"Ohhh. Okay,\" Sarah said. \"I was getting the feeling she might be anti-gun.\"\n\n\"Oh, yeah. And then some,\" he dad told her. \"But she has every right to her opinion.\"\n\n\"I know. That's what you fight to protect.\"\n\nHe put his arm around her and kissed the top of her head and said, \"I am so proud of you. Your mom would be, too.\"\n\nShe looked up at him and said, \"Dad? Thanks for trying.\"\n\n\"Trying?\"\n\n\"Well, yeah. This was a kind of date, right? Even though you said it wasn't, it really was.\"\n\n\"I guess so,\" he admitted. \"Wow. Talk about 'epic fail', right?\"\n\nSarah laughed then said, \"I guess I can wait until next time to bug you about the .44 magnum.\"\n\n\"Come on. Let's go do the right thing,\" the Marine master sergeant said as they headed back outside to an icy reception and a silent ride to Ms. Tomlin's who stopped Josh from bothering to come around to let her out.\n\nSarah said goodbye to her, but she didn't get a response other than the car door slamming.\n\n\"Well, alrighty then!\" Sarah said using the Jim Carrey line from the movie Ace Ventura.\n\n\"You coming up front?\" her dad asked.\n\n\"No, thanks. I'll wait until that seat thaws out,\" Sarah told him with a smile.\n\n\"Yeah, we may have to roll the windows down so the 45-degree air from the outside can warm us up on the inside, huh?\" her dad said before they both started laughing.\n\nBy the next morning, Josh had mostly forgotten about his failed first date, and by Monday morning it was a distant memory. He knew what he believed, and he also knew people disagreed with him on virtually every possible subject to include The Second Amendment. It wasn't his place to try and convert them or change their minds. Like him, they were entitled to their opinions and beliefs no matter how strongly they disagreed.\n\n\"But she was pretty damn cute,\" he told himself before closing the door on the memorable episode.\n\nTuesday afternoon, Josh was at a local high school setting up a booth when his phone rang. \n\n\"Master Sergeant Haverty speaking,\" he said cheerfully.\n\n\"Josh?\"\n\n\"Yes.\"\n\n\"Oh, hi. It's Molly. Molly Quinn. Sarah's teacher?\"\n\n\"Oh, right. Yes. How are you?\"\n\n\"Good. Listen, I was just calling to let you know my class has committed to bringing in 50 toys! But that's just an initial goal, okay? I'm hoping to take that to over a hundred by Christmas.\"\n\n\"Wow! That's impressive,\" he told her.\n\n\"I just wanted to let you know I was taking this seriously and that you can count on me,\" she said in a very sweet way.\n\n\"I have no doubt,\" he said with a quiet laugh. \"You're a real go-getter, Ms. Quinn!\"\n\n\"Molly,\" she reminded him.\n\n\"Right. Molly.\"\n\n\"So...anyway, I wanted to let you know that if you ever wanted to um...well, take me target shooting, I wouldn't go all crazy on you,\" she told him.\n\n\"Wow. Bad news travels fast, eh?\"\n\n\"Ms. Tomlin and I don't speak too often, but yes, 'word' spread around campus pretty quickly. I wish I'd have known. I could have warned you, and...you could have asked me instead.\"\n\n\"It's fine,\" he told her with a small chuckle. \"No big deal.\"\n\n\"Well, I'm very pro-Second Amendment,\" she let him know.\n\n\"Oh. That's...that's good to know,\" he told her, not knowing what else to say.\n\n\"So if you do need a shooting partner...or a dance partner or...just a partner, I'm available,\" she said in a very happy, upbeat tone of voice.\n\n\"I'll keep that in mind, Ms...Molly.\"\n\n\"I hope you will, Josh. And I hope to see you again very soon.\"\n\n\"Take care,\" he told her before hanging up.\n\n\"Who was that, Top?\" a young staff sergeant asked him.\n\n\"You're single, right?\" he asked the younger Marine.\n\n\"Divorced two years now. Why?\"\n\n\"Next time I go to Sarah's school, I want to introduce you to someone,\" Josh told him.\n\n\"Is she hot?\"\n\n\"Um...warm,\" Josh told him.\n\n\"I can live with warm,\" the staff sergeant said. \"Sure. Let's do that.\"\n\nA couple of days later, Josh was thinking about just calling Mrs. Winters to see how things were going, but he wanted to introduce his fellow recruiter to Molly Quinn in the hopes they might hit it off. And just as importantly, that she would forget about him.\n\nStaff Sergeant Enrique Cruz was 28 years old, and although Josh had a hard time telling where other guys were concerned, he seemed like a decent-looking guy, and his gut told him he and Molly might be a pretty good match.\n\n\"Let's head over to Sarah's school right after noon chow today,\" Josh told him on Friday morning.\n\n\"Sure thing, Top. You gonna hook me up with this 'warm' school teacher of yours?\"\n\n\"She's not mine, but she is Sarah's. And yeah, I do want to introduce you.\"\n\nThe school secretary smiled when the two Marines walked up to her wearing their dress blue uniforms. \n\n\"Oh, wow. There's two of you today! Lucky me!\" she said with a big smile.\n\n\"We may have to arm wrestle for your attention,\" Josh told her with just as big a smile.\n\n\"That won't be necessary, gentlemen,\" the older, rather unattractive woman replied, clearly embarrassed by the flattery.\n\nShe looked both ways then said quietly, \"You can both have me!\"\n\nBoth men laughed politely before Josh asked if he could see Mrs. Winters.\n\n\"I think that can be arranged,\" she told him, still smiling.\n\n\"Oh, is Ms. Quinn in class right now?\" Josh asked.\n\n\"Let me check.\"\n\nA few seconds later she said, \"No. This is her planning period. She'll either be in her room or the teacher's lounge.\"\n\n\"Give me one minute, okay?\" he asked her before leading SSgt Cruz down the hall toward both rooms.\n\nThey peeked into her room and it was empty, so they headed down to the teacher's lounge where Molly was eating a salad while going over some lesson plans.\n\n\"Hey there!\" Josh said.\n\n\"Oh, my! Hi, Josh!\" she said very happily.\n\n\"Molly? I have someone I'd like you to meet. This is my good friend, Enrique Cruz.\"\n\n\"Rick,\" he told her as she looked at him for the first time.\n\n\"Well, hello there...Rick,\" she said smiling just as happily.\n\n\"Rick is my righthand man, and I was thinking maybe the two of you could work on the Toys for Tots project together.\"\n\nSSgt Cruz winked at Josh indicating he thought she was cute, and Molly said, \"Well, I was hoping you and I could get better acquainted, but Rick seems like a very...nice person, so...sure. I'd like that!\"\n\n\"Great. Well, I'll let you two get acquainted while I talk to Mrs. Winters.\"\n\nRick sat down and started chatting with Molly, and by the time Josh got back to the front desk, the principal was waiting for him and welcomed him into her office.\n\n\"All of my teachers were more than happy to help out. Even those who aren't as supportive of the military as I am,\" she told Josh. \"We have a goal to bring in 5,000 toys from the school before Christmas.\"\n\n\"Five-thousand?\" Josh repeated.\n\n\"The majority of our students come from upper-middle class and a handful from very upper-class families. Once a few of our more...involved...moms get a sense for the kind of competition this will inspire, they'll be clawing at one another to out-raise everyone else. Trust me on that, okay?\"\n\n\"I will,\" Josh said still trying to believe any school could bring in that many toys in that short a time period. \"We try to wrap all of them, too. That's a whole lot more money and time.\"\n\n\"Don't worry. This will catch fire. I assure you. We'll have assembly lines of moms and students and maybe a few dads in here wrapping like crazy. We got this, Mr. Haverty.\"\n\nJosh thanked her sincerely before they agreed on a weekly phone call from then on unless a meeting was warranted.\n\nHe wanted to give SSgt Cruz some time with Molly, and that gave him time to call Sierra and let her know how things were going.\n\n\"Josh! I'm so glad to hear from you. I was just sitting here thinking about calling you. How are things?\"\n\n\"Um, well. I guess that depends on the thing,\" he said lightheartedly. \"I have fantastic news on the toy front. But if you were to ask me about my personal life, I wouldn't be quite as enthusiastic.\"\n\n\"Oh? Do tell!\" she said cheerfully.\n\nHe told her about the unbelievably large number of toys from school, still not mentioning the name then explained about Saturday's fiasco. \n\n\"Oh, no. It's no big deal. I tried going on a date of sorts for the first time and it kind of...blew up in my face.\"\n\n\"Oh, my. That sounds awful. I hope nothing blew up in a literal sense,\" she said playfully.\n\nHe told her very quickly about the shooting range and Sierra said, \"Well, if you'd have asked me, I'd have not only gone inside and shot with you, I'd have given you a run for your money!\"\n\n\"Really?\" Josh said. \n\n\"Yes, really. I love to shoot.\"\n\n\"You don't own a .44 magnum do you?\" he asked causing her to ask why.\n\n\"Well, the other um...woman...in my life, the 14-year old, is dying to shoot one.\"\n\nSierra laughed and told him, \"So that would...make her day?\"\n\nJosh got the Clint Eastwood reference immediately and laughed, too. \"Sierra, if you weren't a married woman, I'd ask you to come along next time. Or even better, you could just bring your husband with us.\"\n\nShe was quiet for a moment then said, \"I didn't mention it when we had lunch, but my husband passed away three years ago, Josh.\"\n\nJosh was quiet for a moment, too, before saying, \"I'm...I'm really very sorry, Sierra. I honestly didn't know.\"\n\n\"Yes, I know. That's because I just told you I didn't tell you,\" she said very sweetly. \"It's okay. I don't bring it up much anymore unless someone asks me directly or there's some reason to. I still miss him, but I don't run around talking about being a widow\u2014a word I don't much care for\u2014unless I have to.\"\n\n\"I understand. I'm not wild about the word 'widow-er' so, yes, I do get it.\"\n\n\"Yes, I know you do. I wish you didn't, but as they say 'what's done is done', right?\"\n\n\"You sound like my wife. She was very philosophical about such matters. We humans can do a lot of things, but we can't stop death. At least not yet.\"\n\nSierra laughed politely then told him, \"From what I hear, it may not be that far in the future where death can be pushed back another hundred years and eventually, who knows? So anyway, I am single. And I am a pretty good shot.\"\n\nWithout thinking Josh said, \"Why don't you go shooting with us this tomorrow?\"\n\nSierra laughed again then said, \"I am very flattered. Honestly I am, Josh. But that might not be such a good idea. I'm not saying it's a 'date', but it seems awfully close to it.\"\n\nJosh had never been 'shot' down before, then again, he hadn't asked a woman out since Annie so he wasn't quite sure what to think.\n\n\"Oh, okay. I'm not everyone's cup of tea, I suppose,\" he said at a rare loss for words.\n\n\"No. It's not that at all,\" she said immediately.\n\n\"Are you by chance seeing someone?\" he asked, assuming that would be the reason.\n\n\"No. I'm not seeing anyone. Josh, I'm a lot older than you,\" she said very politely.\n\n\"I'm almost 36, and you can't be much older than that, can you?\" he asked putting out a feeler.\n\nShe laughed again then said, \"You are so sweet!\"\n\nAs he sat there thinking about amazingly beautiful she looked, he decided to go for it.\n\n\"Tell you what. Why don't you let me decide whether or not you're 'too old' for me? Go shooting with us and let's see how things go.\"\n\n\"It's very tempting, Josh. I like you a lot, and I have to admit you're very handsome. Oh, and I think the world of Sarah, too, but if I told you my age, you'd be looking for an excuse to back out so fast it would make both of us dizzy.\"\n\n\"I'm pretty good at making my own decisions, Sierra. Why not give me a chance to do that? Unless, of course, I'm really not your cup of tea.\"\n\nSierra had been on a handful of dates, most of which were either stink bombs or just 'meh', but she'd never been out with someone more than a year or two younger than her. At 55, she was essentially 20 years older than Josh, and she felt foolish even thinking about it. \n\nAnd yet she found herself saying, \"Okay. Let's try going to the range, and if you're not scared off after that, then we can talk about dinner some other time. As friends.\"\n\n\"All right. It's a...deal,\" he said with a smile she couldn't see but could 'hear'. \n\n\"But I'm not going to take it easy on you just because I'm a...woman.\"\n\nShe almost said 'girl' and nearly laughed. And yet she had to admit whenever she talked with Josh, that's what she felt like. A girl. A girl who felt almost giddy.\n\n\"I'm really looking forward to it, Sierra. And I'll fill you in on the Toys for Tots details.\"\n\n\"Okay. Sounds good, Josh.\"\n\n\"Yes. Yes, it does,\" he told her unaware he was smiling. \"I'll text you with the details later this afternoon. Bye, Sierra.\"\n\nBoth of them just sat there smiling after they hung up. Sierra's faded first as she realized it might be fun to spend time with him and his daughter, but she knew that once he became aware she wasn't just 'a few' years older, that would be the end of it.  \n\nShe should have come right out and told him, but it had been so long since she'd met anyone she enjoyed being with, she decided to be a tiny bit selfish and have one pleasant afternoon. And spending even just a few hours with two very pleasant people was preferable to spending another day home alone doing crossword puzzles on her iPad. \n\nShe'd thought about getting a job many times, but her husband had left her in an incredibly good situation in terms of finances, so she spent a lot of time volunteering and helping those who were less fortunate.\n\nThat evening Josh was thinking about their phone call and smiled, a smile Sarah noticed immediately.\n\n\"What are you smiling about, Dad?\" Sarah asked.\n\nHe started laughing then said, \"Round Two.\"\n\n\"Huh?\"\n\nJosh told his daughter about the phone call to Sierra, but Sarah didn't laugh.\n\n\"I really like her, Dad.\"\n\n\"She says she's a lot older than me.\"\n\n\"Define 'a lot',\" Sarah said.\n\n\"I can't. She won't tell me. I was thinking 40 but I guess it's possible she could be 45.\"\n\n\"So?\" \n\n\"Right. So,\" he said and left it at that. At least as far as discussing it with Sarah as he asked himself how old would be 'too old'?\n\nThis time, when Saturday afternoon came along, Josh found himself thinking more than once, \"What a difference a day makes!\" or in this case, a week.\n\nSierra was waiting for them on her porch, and even in jeans and a sweatshirt, she looked more like a coed than...well, Josh wasn't sure, but she most definitely didn't look 45. She'd mentioned having a daughter who was on her own so even if she was say\u201422\u2014Sierra could still be around 42 or maybe 45, but she most definitely did not look anywhere close to it.",
        "\"Hey, there!\" she said as soon as he started to get out of his car. She waved him back in and also asked Sarah to stay up front.\n\n\"I don't mind riding in back,\" she said cheerfully as she buckled up.\n\nJosh noticed the leather case she was carrying and asked, \"So what's inside?\"\n\n\"Well, I decided to make someone's day,\" Sierra said.\n\n\"Oh, my goodness! Do you have a .44 magnum?\" Sarah asked excitedly as she turned around.\n\n\"Among several other weapons,\" Sierra said with a laugh.\n\n\"Weapons as in more than one?\" Josh asked as he looked at in the rearview mirror.\n\n\"Is that so hard to believe?\" she asked with a smile.\n\n\"I think I'm in love!\" Josh said causing Sierra to laugh loudly.\n\n\"I think I am, too,\" Sarah said. \"Can I shoot it?\"\n\nSierra saw the look her dad gave her and said, \"It's not up to me.\"\n\n\"I'll think about it,\" Josh said.\n\n\"Seriously?\" Sarah called out knowing that meant he was going to cave. \n\nShe reached over and put her arms around him and said, \"I love you so much!\"\n\n\"It kicks like a mule, honey,\" her dad said as he got ready to back out of the driveway.\n\n\"I can handle it!\" she told him without hesitation.\n\n\"Well, if Sierra's willing to let you fire it...\"\n\n\"On one condition,\" Sierra said. \"You have to clean it.\"\n\n\"Deal! Total deal!!\" Sarah said with so much excitement it made her dad smile with happiness.\n\nAn hour later and a total of eight boxes of .44, .45, and 9mm ammo later, the three of them were on the way back to Sierra's where Sarah would spend another hour or so cleaning the monster handgun she'd fallen in love with. (Even though it went against his grain, Josh paid to have his and Sarah's weapons cleaned by someone at the range to save time.)\n\nSarah talked about it the entire way home and never had to turn around because she'd insisted on sitting in back with Sierra so they could continue talking about shooting 'the canon'.\n\n\"I've never met another...female...who loves to shoot,\" Sarah said at one point.\n\n\"Well, now you have,\" Sierra replied. \"As I said at the range, I grew up shooting with my dad, and my husband loved every kind of weapon there was. I did, too, but he was the real gun nut. He loved taking me to gun shows or any kind of live-firing event we could watch down at Fort Lewis or anywhere else for that matter. We once watched an infantry company do a live-fire exercise at night. All those tracer rounds. Talk about impressive!\"\n\n\"Sounds like my kind of guy,\" Josh said with another smile.\n\n\"You two...no, you...three...would have gotten along very well.\"\n\nAt Sierra's house, Sarah didn't need any help cleaning the canon. She knew pretty much everything there was to know about getting and keeping a weapon clean, and she was happy to do it all herself. She also had an ulterior motive for doing so as it gave Sierra and her dad time to get better acquainted\u2014alone.\n\nWhen she knew the weapon was perfectly clean, she brought it to Sierra to take a look at it. \n\n\"No carbon anywhere. Not even in those hard-to-reach places. Nice work. Someone's been well trained,\" she said handing the empty piece back to her with a smile.\n\nAs Sarah was putting it back in the case and then in the safe Sierra had opened for her, Josh said, \"I had more fun today than I've had in years.\"\n\n\"Me, too,\" Sierra told him. \"So did I pass?\"\n\n\"Excuse me?\" \n\n\"You said you were pretty good at making your own decisions so...what did you decide?\"\n\n\"If you mean do I want to see you again, the answer is an unequivocal 'yes',\" he told her. \"And now it's your turn. Is this where you try and talk me out of it because you're sooo old?\" \n\nShe smiled then said, \"No. I won't try and talk you out of it. I'll just tell you my age so you can politely change your mind.\"\n\n\"Go ahead. I double-dog dare you,\" Josh said with a smile.\n\nSierra looked down for a moment then back at him and said, \"I'm 55, Josh. So, you see, I really am a lot older than you. I had a wonderful time today, but I know you...\"\n\n\"Dinner. This week. You and me,\" he said politely, cutting her off.\n\n\"You're serious?\" she said not quite sure whether or not he was joking.\n\n\"Yes. Very. Are you?\"\n\n\"Um, well, I mean if you're sure.\"\n\n\"Yes. I am. I'm very sure, Sierra.\"\n\n\"About what?\" Sarah asked as she walked back into the living room.\n\n\"We're going on a date, honey. Is that okay?\" he told his daughter.\n\nSarah's eyes opened wide followed by a huge smile before she ran over and jumped into her dad's lap and hugged him. Just as quickly she jumped up then more carefully hugged Sierra.\n\n\"I think she's okay with it,\" Josh said smiling at both of them.\n\n\"Um, yeah,\" Sarah said. \"Sierra...sorry, Ms. Olsen, is the coolest person I've ever met! Besides my dad, of course.\"\n\n\"Ahh! And that is the nicest thing anyone has said to me in...maybe forever!\"\n\nShe looked over at Josh and asked, \"Is it okay if she calls me by my first name?\"\n\n\"Sure. That's completely up to you.\"\n\n\"Then it's settled! Call me Sierra, Sarah. And say that three times real fast!\"\n\n\"Sierra, Sarah. Sierra Sharah. No wait. Shierra, Shaarah...Oh, forget it!\" Sarah said as everyone laughed.\n\n\"Well, we should probably get going,\" Josh said a few minutes later.\n\n\"Oh, sure. I didn't mean to keep you.\"\n\n\"No, not at all. This was really very nice, Sierra,\" he told her.\n\n\"I agree,\" she said, her pretty eyes twinkling with happiness. \"But I would like to ask you something before you go.\"\n\nSarah understood it was private and said, \"I'll wait in the foyer, okay?\"\n\n\"I'll be right there, honey,\" her dad told her.\n\n\"Josh? I really did have a great time...\"\n\n\"But?\"\n\n\"Well, I was thinking maybe we should possibly do something say, in a group the first time. You know, to kind of ease back into this...I hate even saying the word...dating thing.\"\n\nJosh agreed then said, \"Like bowling?\" \n\n\"Okay. Or maybe ask Sarah to come with us?\" she offered.\n\n\"You know what? I have a recruiter friend who just met someone, and from what he tells me they seem to have hit it off rather well. This would be a first date for them, too, so if they're interested, how would you feel about maybe going out with them?\"\n\n\"That sounds perfect! Yes, I'd like that very much.\"\n\n\"Okay. I'll check with him on Monday and see how he feels about it and let you know. If not, maybe you could come to our house for lunch or dinner or whatever you're comfortable with.\"\n\n\"That sounds nice, too, Josh. But...one more question, okay?\"\n\n\"Shoot.\"\n\n\"I believe we already did that,\" she said trying not to laugh.\n\nJosh laughed heartily for the first time in a very long time, and Sarah, who heard him, was so happy she couldn't stop smiling.\n\n\"I know this is just dinner or whatever, but are you really okay with my...well, how old I am, or were you just being nice because my answer scared you so badly you felt sorry for me or obligated to ask me out again or...\"\n\nJosh was standing in front of her, and for the first time since Ann was alive, he reached out for a woman's hands. Sierra hadn't had a man try and take hers in over a year and the last man who did so did nothing for her. But when she felt Josh take them, she most definitely felt something; something very pleasant.\n\n\"I haven't even really looked at another woman since Annie died, Sierra. And where you're concerned, it's hard not to look and want to keep looking. You're not just incredibly attractive to me, you're a wonderful person I really enjoy being with.\"\n\nSierra smiled as he continued talking.\n\n\"So, no, you didn't surprise me, and no, I didn't ask you out because I felt sorry for you or whatever you thought, and no, I don't care at all how old you are, because that doesn't matter. I like you, Sierra. Maybe even a lot. Does that answer your question?\"\n\n\"Yes,\" she said quietly.\n\n\"Then I'll call you soon, okay?\"\n\n\"Okay,\" she told him as she looked into his eyes.\n\n\"Well, goodbye,\" he told her before lowering his head and kissing her on the cheek.\n\n\"Bye. See you soon,\" she told him as the pleasant feeling grew very rapidly.\n\n\"Yes. Yes, you will,\" he assured her with a warm smile.\n\nAs she closed the door it seemed as though the universe was telling her another kind of door\u2014a metaphorical one\u2014had just closed in her life. The chapter in which her late husband was the main character was over. And it also implied the opening of a new chapter, one in which someone else would play the starring role in her life. No, she could never forget the man she'd loved for so many years, but she now knew her heart was open to loving someone again. And if the way it was beating so quickly right then was any further sign of things to come, the future looked very bright indeed.\n\nAs they drove home, Josh glanced over several times and each time he did Sarah was smiling.\n\n\"Okay. What's going on?\"\n\n\"I'm just happy. Can't a girl be happy?\" she said, the smile still there.\n\n\"Does this have to do with me asking Sierra out again?\"\n\n\"Um...duh!\" she said causing her dad to smile and Sarah to laugh.\n\n\"She told me how old she is.\"\n\n\"It doesn't matter to me, so it's only important if it matters to you,\" Sarah told him.\n\n\"No, it doesn't matter at all,\" he said.\n\n\"Okay, then it's no big deal, right?\"\n\nJosh didn't answer because there was no need to. He drove for maybe another mile without saying anything then looked back at his daughter and said, \"You were right. I am lonely. I have been for a very long time. I just didn't realize how lonely until...today.\"\n\n\"I'm not gonna say 'I told you so',\" Sarah said with an unusual bit of smug satisfaction.\n\n\"Well, you were, and I'm man enough to admit it,\" he said before they changed the subject and chatted pleasantly the rest of the way home.\n\nOn Monday, he SSgt Cruz was already in the office working the phones when 'the Top' came in.\n\nDuring a break, Josh said, \"How are things going with your school teacher?\"\n\nHe smiled and said, \"Really good, Top. I've got a good feeling about her, you know?\"\n\n\"Nice. Listen. I'm kind of seeing someone now myself, and I was wondering if maybe you and...what's her first name?\"\n\n\"Molly.\"\n\n\"Right. How about you and Molly doubling with Sierra and me?\"\n\n\"Like on a date?\"\n\n\"No. Not 'like' but actually on a date,\" Josh said with a smile. \n\nTaking no offense, the young staff sergeant smiled back and said, \"Yeah. Sure. Let me check with Molly and I'll let you know. When and where?\"\n\nThey agreed on the time and place and once SSgt Cruz had a free minute he texted Molly who answered back immediately as she waited for her class to come in.\n\n\"Yes! That sounds very nice, Rick,\" she wrote.\n\nShe thought about adding, \"This way I can finally say I got to go out with Josh\" but didn't. She didn't not only because deep down, she knew Josh Haverty was way out of her league, but because she really liked this rather nice-looking Marine who was both funny and considerate. Molly couldn't help but wonder if perhaps that was the way things were meant to be.\n\n\"She's good to go with it, Top,\" he told the senior recruiter.\n\n\"Outstanding! We'll meet you guys there at 1900 on Wednesday.\"\n\n\"Roger that!\" Rick said before getting ready to follow up on a 19-year old prospect he'd met over the weekend at a local mall.\n\nIt was unusual for Josh to leave work by 1700, or 5pm, but he was free to come and go as long as he and the RS were making mission (their monthly quota), and he and his recruiters had never failed to so, so he didn't feel guilty leaving a little early.\n\nSarah hadn't seen her dad dressed up so nicely in civilian clothes before and she told him how nice he looked.\n\n\"Wow! You really are hot, Dad!\" she said as she admired the very nice-looking, dark-gray slacks, the black shoes, and the dark-blue shirt he was wearing and the black jacket.\n\n\"You really think so?\" he asked.\n\n\"Oh, yeah. You're gonna be a big hit tonight. Now go. Have fun!\" she told him before giving him a hug.\n\n\"Text me. Every hour, okay?\" he said.\n\n\"Dad!\" she protested knowing she would.\n\nHe'd thought Sierra looked incredible when she took Sarah and him to lunch, but he was dumbstruck when he saw her that evening.\n\n\"Wow and...wow!\" he said when she let him in.\n\nSierra was wearing an off-the-shoulder, black knit dress that hugged her very toned body like a soft glove. In the heels she was wearing with it, she was within two inches of being as tall as her date, and Josh couldn't decide what looked better: her shapely legs, her firm derriere, her amazing 'upper body', her gorgeous face, or her soft, beautiful hair.\n\n\"You look very nice yourself,\" she told him.\n\n\"I feel like I should be wearing a tux,\" he replied.\n\nSierra laughed and said, \"You look fine.\"\n\nShe smiled then said, \"And I mean 'fine' in both senses of the word.\"\n\nOn the way to the restaurant, an even nicer one than they'd gone to for lunch, they were discussing the Toys for Tots program when Sierra said, \"I keep forgetting to ask you which school you're working with.\"\n\n\"Oh, it's Sarah's,\" he told her still not answering her question.\n\n\"Puget Sound Academy. Have you heard of it?\"\n\nSierra stopped smiling then said, \"Oh. Okay. My...daughter is a teacher there.\"\n\nHer voice was almost hollow as she said that causing Josh to ask if there was something she wanted to say.\n\n\"No. Not really. It's just that we had a falling out when her father died.\"\n\nShe turned to Josh then told him, \"He never adopted her because my first husband\u2014we were only married for two years\u2014was a friend of his. Don't worry. There wasn't any infidelity. I left him and met her father...well, legally her step-father, a term we never used...a year later.\"\n\nJosh sensed there was more to it so he sat quietly and waited.\n\n\"My husband. My late-husband, Robert, wanted to be cremated. It wasn't something we ever discussed with our daughter, so when he passed away very suddenly from a heart attack, our daughter wanted him to be buried so she could view him before the funeral. I told her her dad was very specific about his request, but she felt like I was denying her a last chance to say goodbye. She was so upset about it she didn't speak to me during the memorial service, and we've barely spoken since.\"\n\n\"I can only imagine how hard that's been,\" Josh said quietly.\n\n\"It feels like I lost her that day, too,\" she replied just as quietly.\n\nShe looked over at Josh then asked, \"This teacher, the one going out with your friend tonight. Her name isn't Molly, is it?\"\n\nJosh bit his lip then said, \"Um, yes. Yes, it is. Molly...\"\n\n\"Quinn?\"\n\n\"Do you want me to call and cancel?\" he asked.\n\n\"No. Don't do that. But if things are too strained, we may need to leave early, okay? I don't want to ruin their evening if, you know...\"\n\nJosh reached over for her hand and after looking at him, she gave it to him.\n\n\"I love how you always put others need ahead of yourself, but no matter what happens, I'll be there for you, Sierra. We'll get through this together, okay?\"\n\nShe nodded but didn't speak as Josh gently squeezed her small hand.\n\nAs they walked in, both of them saw Molly sitting at a table with a man Josh recognized but Sierra didn't. Both of them were laughing and obviously having a good time.\n\nWhen the hostess led them to their table, Rick looked up and smiled. Molly did, too, at first, and then the smile disappeared.\n\n\"Hello, Molly,\" her mom said.\n\n\"What...what's going on here?\" she asked looking at Josh then at Rick and finally back at her mother.\n\n\"May we sit down?\" Josh asked without answering her question.\n\n\"Top? Is there a problem?\" Rick asked him.\n\nJosh helped Sierra sit down then said, \"I hope not.\"\n\n\"That woman is my mother,\" Molly said coldly.\n\nRick sat there, his eyes open wide, not knowing what to say.\n\n\"Molly, I had no idea until just a few minutes ago. Honestly, I...\"\n\n\"Save it, Mother,\" she said. \n\nIt was deathly quiet for a few seconds before Josh said, \"Why don't we all have a drink and see if we can find a way to have an enjoyable evening together.\"\n\nMolly glared at her mom and didn't reply.\n\n\"I'm game,\" Sierra said.\n\n\"Me, too,\" Rick chimed in.\n\n\"Fine,\" Molly said just as coldly.\n\nThe conversation was very limited as they sipped their drinks.\n\nSierra finally spoke as the tension continued to build.\n\n\"Molly? I am so, so sorry. I never meant to hurt you. I miss having you in my life, and I'd do anything to change this.\"\n\nMolly didn't answer. Instead, she turned to Josh and said, \"When your wife passed away, can you imagine not being able to say goodbye to her at the funeral?\"\n\n\"No,\" he said quietly and honestly.\n\n\"That's exactly what she did with my dad. He may not have actually been my father, but I was closer to him than I was with my own biological father. And she had him cremated knowing how much that would hurt me!\"\n\nJosh waited a moment then quietly said, \"Molly? I'm not taking sides here. I don't know all the details. But having watched the woman I loved more than anything on earth quite literally wither away in front of my eyes nearly killed me. If not for Sarah, I'm not sure I could have gone on living. But I can tell you I am so thankful I did, and it's because of the relationship I have with my daughter.\"\n\nHe looked at Sierra who had tears welling up in her eyes before looking back at her daughter.\n\n\"I haven't known your mother very long, but I know how much she loves you and how badly she misses you. And if that's anything like what I have with Sarah, I'd almost rather die than live without it. So if there's any way to get passed this, can you please try and give your mom a second chance? I have to believe your heart is breaking, too, and again, without taking sides, if pride is keeping you two from talking, well, please put it aside and don't waste another day like this.\"\n\nRick had no idea what to say as now Molly was also tearing up.\n\n\"It...it just hurt me so bad!\" she said as she reached for a linen napkin.\n\n\"Oh, honey. You know I didn't mean to hurt you. I loved your dad with all my heart. And...and I love you that much, too. I was in an impossible situation having promised your dad I'd respect his wishes. We should have discussed when he was still alive, but, well, we didn't and am so sorry!\"\n\nMolly was crying as her mom stood up and moved around Josh's chair to be next to her. He immediately got up, pushed his chair next to Molly then helped Sierra sit down.\n\n\"Can you ever forgive me, sweetheart?\" Sierra asked as tears streamed down her cheeks, too.\n\n\"I...hate...not having you...in my life,\" Molly said, barely able to speak.\n\n\"Me, too, honey. Me, too,\" Sierra said as she reached out to hug her. \"Me, too.\"\n\nWhen she did, the dam burst and Molly cried so hard her body shook.\n\n\"Mom? I'm...I'm sorry. I'm so sorry!\"\n\n\"So am I, angel. I'm so sorry. I never meant to hurt you.\"\n\nMolly tried to take a couple of deep breaths before saying, \"I know that's what Daddy wanted, but he never told me that! And when he died, I had no idea that's what he wanted, and I just wanted to say goodbye!\"\n\nMolly began crying again as Josh and Rick looked on, helpless to do anything.\n\n\"Come on. We need to fix our faces,\" Sierra finally said as she cradled her daughter's face in the crook of her neck.\n\nThe two women stood up, and as they got ready to go to the ladies' room, Molly said to Josh, \"You were right. It was all a matter of pride. Thank you, Josh.\"\n\nShe looked over at Rick then back at Josh and said, \"And thank you for introducing me to Rick.\"\n\nShe smiled at him then said, \"He's a really great guy.\"\n\nOnce they were out of sight, Rick said, \"Strangest date ever?\"\n\n\"No doubt about it.\"\n\n\"Strange but nice, you know?\"\n\n\"I do,\" Josh told him. \"If this is what it took to patch things up then the drama was well worth it. I know how I'd feel if my daughter and I had a misunderstanding or just grew apart.\"",
        "\"Sarah's really cool, Top.\"\n\n\"Yeah. She really is.\"\n\n\"And Sierra is really hot!\"\n\nAgain Josh said, \"Yeah. She really is.\" Only this time he smiled.\n\nA few minutes later they were back and all smiles just talking away like the men weren't even there. \n\nJosh and Rick looked over at each other, shrugged, then started laughing.\n\n\"What? What's so funny?\" Molly asked.\n\n\"Nothing. Nothing at all,\" Josh told her.\n\n\"I think that means we're being rude, honey,\" Sierra told her. \n\nShe looked at the men, smiled, then said, \"Sorry, but this reunion was long overdue.\"\n\n\"No! No offense taken. We're beyond happy that this worked out so well,\" Josh said.\n\n\"We're pretty happy about that, too,\" Sierra said.\n\nShe looked at Molly then said, \"I got my daughter back, and I'm here with someone I find more than little interesting. That's what's called a win-win!\"\n\nMolly smiled and watched her mom's eyes as she looked over at Josh before saying, \"And I got my mom back and I'm also here with someone I find very interesting!\"\n\n\"And here we guys thought we were the lucky ones!\" Josh said.\n\nAll of the pent-up tension melted away as everyone laughed then spent the rest of the evening talking and enjoying one another's company. Before they left they all agreed to do this again soon.\n\nOn the way home, Sierra was quiet for a good while and Josh asked if everything was okay.\n\n\"Yes. Everything is fine, Josh. In fact, I'm wondering if it could possibly be any better.\"\n\n\"Oh? Why is that?\"\n\n\"Well, if not for you, I may never have patched things up with Molly.\"\n\n\"That is huge,\" he agreed.\n\n\"But it's more than that,\" she said as she looked over at him. \n\nShe offered him her hand and when he took it she said, \"I also find myself sitting here thinking I'm living in the most wonderful, amazing dream of my life.\"\n\nHe glanced over at her and smiled before asking, \"Would it be presumptuous of me to hope I'm a small part of that dream?\"\n\nSierra laughed quietly then said, \"No, not at all. In fact, you're right in the center of that dream, and I'm hoping against hope it won't come to an end anytime soon.\"\n\n\"Are you still doubting my sincerity about not caring about your age?\" he asked politely.\n\n\"A little,\" she said. \"Okay, I'm not doubting your sincerity, I'm just afraid you'll decide you made a mistake and...move on.\"\n\n\"Sierra? May I share something with you?\" he asked as they drove along in the dark, cold night.\n\n\"Of course.\"\n\n\"I never imagined being alone before Annie got sick. Never. I thought a few times I might not come home and leave her alone, but it never crossed my mind she might die first. Since then, I've made my daughter the center of my life. I've also had my work, but Sarah has been my world.\"\n\nHe glanced back at her again, squeezed her hand then said, \"I'm now at a point in my life where I don't want another child. I love kids, but I don't want to raise another one. So that's not an issue. But I do very much want someone to share my life with. Someone who'll love Sarah as much as I do. On those rare occasions where I allowed myself to wonder if I would ever love\u2014or be loved\u2014again, I had to admit I didn't have much faith. But now...\"\n\nHe turned her way again and waited for her to look back before saying, \"But now I found someone who's everything I want in a woman.\"\n\nHe paused then said, \"And not to scare you off, but in a wife, too. So unless you get tired of me or unless you're hiding some part of you that would turn everything else upside down...\"\n\n\"Like thinking guns are evil?\" she said with a smile.\n\nJosh smiled then continued where he left off by saying, \"I've found exactly what I'm looking for and I'll stick around for as long as you'll have me.\"\n\n\"Then I guess you'll be sticking around for a very long time,\" she told him as her eyes welled up with tears again.\n\nWhen he walked her to her door she said, \"I'd ask you to come in, but I know you have another...woman...waiting for you at home. But perhaps you could come in\u2014and maybe even stay\u2014sometime soon?\"\n\n\"I'd like nothing more, Sierra,\" he told her.\n\nHe stood there looking into her eyes for several seconds before leaning in and kissing her for the first time. There was a soft, slow, short, first kiss that was followed by one that was longer and deeper and much more passionate.\n\nWhen it ended, Sierra's entire body was tingling with desire, but she knew it would have to wait because she also knew 'the other woman' was the most important thing in Josh Haverty's life. But she couldn't help but finally let herself hope she might soon be the 'other woman' in his life.\n\n\"Goodnight, Sierra,\" he told her as he brushed her cheek softly with the back of his fingers.\n\n\"Goodnight, Josh, and thank you. For everything.\"\n\nShe kissed him again before going inside where the realization of all that had happened that evening really hit her. She and her daughter were speaking again. All had been forgiven and forgotten. And were she to be completely honest with herself, she'd have to admit she'd just fallen in love with one of the most handsome men she'd ever known; a man who was many years younger than her but who had convinced her he didn't care. And if it truly didn't matter to him, then it didn't matter to her.\n\nTwo days later, Sierra made dinner for Josh and Sarah at her place then two days after that, they all spent the evening at Josh's place where they not only ate together but shared memories.\n\nSierra spoke fondly of her late husband as she shared details of how they met and fell in love. She teared up more than once as she talked about their life together as well as Molly's birth and watching her grow up.\n\nBut the most meaningful moment of the evening was when Sarah opened up, and for the first time, began talking about her mother.\n\nEven Josh teared up as she spoke, but Sarah didn't until she asked if they could watch the movie they made of Sarah's last birthday party when her mom was still alive. Josh knew she was aware of it, but she'd never wanted to see it before until then.\n\nHe got it ready to show, and Sarah asked Sierra to sit on her left and her dad on her right.\n\nAs they watched it together, Sarah didn't say a word until the camera panned over to her mom who smiled and said, \"I love you, Sarah, Bearah!\"\n\nSarah began to cry as she listened then said just one word: \"Mommy!\"\n\nJosh put his arm around his daughter as she cried harder than she'd ever cried in her life, and for the first time since her mother had died.\n\nAt some point, she pulled away and turned to Sierra who also held her close and let her cry it all out. They'd missed most of the video so when Sarah finally got control again, she asked if they could watch it from the beginning.\n\nThis time she cried, too, but she also smiled and laughed as she watched her mother watching her play and have fun.\n\n\"I miss her so much!\" Sarah said when it ended.\n\n\"Me, too, honey,\" her dad said, hoping she hadn't seen him cry at one point.\n\nThey sat there quietly for a few moments before Sarah said, \"My dad always gets after me for 'meddling', but I want to say something, okay?\"\n\n\"Of course, honey,\" Sierra said just as Josh said, \"Sure. Anything.\"\n\n\"When Mom died, I never said anything, but I was so sad I wanted to die, too,\" she began.\n\nJosh and Sierra both held one of her hands as she continued.\n\n\"But I promised myself I would never let you know that, Dad.\"\n\n\"I'm glad you finally did, sweetie.\"\n\nSarah looked up at him then said, \"For a really long time, I thought I'd never want another mom. I know no one can take her place, but I'm at a point where I do wish I had a best friend who wanted to be my mom.\"\n\nWhen she looked over at Sierra, the older woman's eyes teared up again as Sarah said, \"I know it's not up to me, but you would be the person I want to be my new mom, Sierra.\"\n\nBoth of them cried and held each other for several seconds before Sierra said, \"And I would be so happy and honored if I could, sweetheart.\"\n\nSarah pulled back then said, \"Dad? I'm not trying to be pushy or anything. I just wanted you to know how I feel, okay?\"\n\nUnable to fight it any longer, Josh teared up, and a tear fell from his eye as he said, \"I know exactly how you feel, honey. I know because I feel the same way, too.\"\n\n\"You do?\" she asked, her brow wrinkled in hopeful anticipation.\n\nHe blinked a few times then looked at her and then at Sierra who smiled at him.\n\n\"I do. And I'd like that very much, too. Just give us a little more time, okay?\"\n\n\"Really?\" she said. \n\n\"Yes. Really.\"\n\nSarah stood up, turned around, then pulled on the adults arms until they moved next to each other. \n\n\"There. That's better,\" she said. \"Now I'm going to go upstairs and go to bed because I'm sooo tired.\"\n\n\"But it's only 8 o'clock,\" her dad said.\n\nSarah smiled and said, \"I know,\" before faking a big yawn and turning around and leaving them alone.\n\n\"She's...amazing,\" Sierra said.\n\n\"And smart,\" Josh told her as he gently turned her chin toward him.\n\n\"Yes. Very smart,\" she said quietly as she parted her lips for a very long and very deep kiss.\n\nIt was briefly interrupted by the sound of Sarah's voice saying, \"Yes!\" a little too loudly.\n\nThe happy couple laughed for a moment then went back to kissing.\n\nThe following weekend, Molly kept Sarah so that their parents could spend a couple of days together; days in which they made love for the first, second, third, and fourth times.\n\nFrom that day on, they spent nearly every day together and took turns 'spending the night' at one another's homes knowing that Sarah not only 'knew' but wholeheartedly approved.\n\nOn the morning of December 23rd, 'Santa Claus' Haverty drove into the parking lot of a community center in downtown Seattle where nearly 500 children were cheering and pointing when the red Humvee and the huge tractor-trailer rig pulled in honking wildly as the Marines riding in them called out, \"Ho, Ho, Ho! Merry Christmas!\"\n\nJosh, Sierra, Sarah, Molly, Rick, the colonel, the reserve commander and his sergeant major, and every available Marine and teacher from the Academy along with Mrs. Winters were there. They'd all pitched in and wrapped presents for many, many hours; presents that were passed out to the poorest, happiest children in the city. \n\nPuget Sound Academy made it's goal and then some collecting some 6,500 toys while the reservists put together a respectable 3,500. After 'making their day' at the community center, they went to a large football field where nearly a thousand other children where waiting for Christmas to arrive.\n\nA couple of hours later, the kids were gone as was all the wrapping paper that had been placed in dozens of trash bags by those who watched those kids forgot about being poor for a little while.\n\nAnd then when no one was left but Josh, Sarah, and Sierra, Josh got out a small pad and dropped in it front of him on the ground.\n\n\"And what do you think you're doing?\" Sierra asked.\n\n\"I can't dishonor this uniform by kneeling down on dirty asphalt, can I?\" he said with a smile as Sarah smiled happily as she handed him a small, fuzzy, blue box.\n\n\"Oh, my...\" Sierra said as she covered her mouth with her hands when Josh knelt down placing one knee on the small, black pad.\n\n\"Sierra, both of us love you with all our hearts. Neither of us ever thought we'd ever feel this way about anyone again. But we do. Both of us. And while the kind of love we feel for you is different, both kinds are very real.\"\n\nSierra was trying not to cry, and Sarah couldn't stop smiling as her dad asked, \"Sierra Olsen? Will you marry\u2014us?\"\n\nSierra never did say 'yes' as she couldn't utter a word. But she happily accepted the large, new diamond ring Josh placed on her finger after carefully placing the old one in the box and giving it to her when he stood up. He then took his own ring off and handed it to Sarah who attached it to a gold chain around her neck for the rest of her life.\n\nThey were married in a rustic old church on Sarah's 15th birthday. Even Sarah, who'd been around the Marine Corps her whole life, was impressed when she watched her new 'mom' and dad walk through the sword arch his fellow Marines made when they left the chapel for their honeymoon.\n\nSarah stayed with Molly that week, who hoped but didn't know, that Rick was going to propose to her once the 'Top' got back with her mother. She and her new 'sister', Sarah Haverty, became very close friends for the rest of their lives, and even more so once Molly was no longer her teacher.\n\nSarah graduated from Puget Sound Academy around the time her father called it quits and retired from active duty. As she began going to college at The University of Washington, her dad took a few months off to fix up the beautiful house he and Sierra bought together shortly after getting married then took a job as a security consultant where he worked part-time and mostly for fun. Work held little interest for him anymore and was more a hobby than a necessity as he preferred spending most of his time with the newest love of his life.\n\nAnn understood that tragedy is a part of life. She knew we all do our best to avoid them, but sometimes they're inevitable, and all we can do is try and react with dignity and grace the way she did when faced with the end of her life.\n\nFor those who remain, life offers hope, and when we're ready, other new, wonderful things can happen. One of those things is the possibility of finding new love and happiness. And in the case of Josh and Sierra Haverty, that's exactly what both of them found.\n\nAlthough several women were interested in the handsome Marine, there was never any real competition for the man his fellow jarheads called 'Top' as Master Sergeant Josh Haverty only had eyes for the beautiful, older woman he fell in love with and married and now loved with all his heart."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "marine",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/competition-for-the-top"
}