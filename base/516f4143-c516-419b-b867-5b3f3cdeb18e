{
    "title": "The Azure Rider Ch. 02",
    "pages": [
        "Agatha found herself reeling under a veritable mountain of infirmary duties for the next few days. Battalions from Luteri were still arriving thick and fast, with wounded soldiers left lying in front of the infirmary because they were out of cots. Agatha was glad for the change of the season; it kept the flies away and prevented the wounds from festering too quickly. Her evenings were spent harvesting feverfew, hemlock and poppy from her garden. She rushed to her garden before daybreak again, to lay out the herbs to dry out in the sun. On most days, the herbs were not dried fully but she had to put them in the potions and teas anyway, because time was a luxury they did not have, with scores of warriors waiting for their ministrations. Perhaps ironically, the sculleries overflowed with wine and food, celebrations were underway in the court for the successful suppression of the uprising in Luteri. \n\nAt the end of one such gruelling day, Agatha found herself conversing with Kikoma Tai, one of the kitchen maids, as she wolfed down her first meal of the day with an indecency that would have shocked the well-bred ladies of the court. \n\n\"My son is doing well now,\" Kikoma responded to Agatha's question, considering her with nearly maternal pity as she licked her soup bowl clean. \"Your potion worked very well, his fever broke the very next day. Let me get you more soup,\" she said, stretching her hand towards Agatha.\n\nAgatha handed her the empty bowl and sighed in relief; she had been too afraid to ask for a second helping. As though reading her mind, Kikoma said, \"do not dwell on it, Agatha. The amount of food that gets wasted in every feast makes me cry. No one will miss a measly bowl of pumpkin soup. Besides, you need it more than these fat nobles do.\"\n\n\"Shh,\" Agatha glanced around to see if they had been overheard, then broke into reluctant giggles. The scullery was nearly empty, most of the dishes had been taken to the Great Hall for the evening feast. Dusk was falling thick and fast outside their windows and Agatha could feel the exhaustion of the day catching up with her. \n\n\"So, I hear that the General has taken you for a bed slave?\" Kikoma asked after Agatha had started on her second helping, then surged forward to pat her helpfully on the back when she choked on a bit of a pumpkin upon hearing this. Agatha wiped her lips with the back of her hand and said, \"oh no, you are quite mistaken. He was asking about Lyla, and about Lord Mannering.\"\n\nAgatha watched impassively as Kikoma's eyes lit up at this new morsel of information. \n\n\"Poor Lyla,\" she said without any real sympathy in her voice, then asked, \"why did he want to know about Lyla?\"\n\n\"I think he intended to make her his bed slave, but cannot, now that Lord Mannering has claimed her. He saw me paying her a visit last night at the brothel, so he must have thought that I would have more information on her,\" Agatha volunteered, cautiously watching from behind her stoneware as the beginning of a scandalous gossip seemed to form in Kikoma's excited countenance. Agatha felt quite remorseless about shifting the burden of the gossip to Lyla's shoulders, particularly after her ordeal a few nights before.\n\n\"Why were you paying Lyla a visit?\" Kikoma asked, forever curious.\n\n\"She needed the barren potion,\" Agatha answered shortly before turning to her soup. However, her scant moment of reprise was not to be. Kikoma's son, Kabuta, came running up to them, out of breath and red in the face. \n\n\"Agatha! Meister Erwan needs you back at the infirmary at once,\" he panted.\n\nAgatha stared longingly at the half empty bowl in her hand, then left the scullery as fast as her legs would carry her. She found a small gathering of soldiers in front of the infirmary. She pushed through them to find Meister Erwan kneeling on the ground beside a pale, unconscious young man. \n\n\"Agatha! Where have you been?\" he snapped as soon as she edged inside the infirmary. \"You know my knees are bad, here take this, make him smell the salt. I have to go and find some leeches.\"\n\n\"Who is he?\" Agatha asked, kneeling down on the ground and taking the salt from the Meister.\n\n\"Sir Blaxton, you ignorant buffoon, now where are the leeches? A fine young man like him,\" the Meister wrung his hands, \"cannot afford to have him turned.\"\n\nAgatha started undressing the man cautiously. There was a pair of tiny indentations at the base of his neck. His pulse was too fast for an ordinary human. Agatha felt a familiar sinking sensation in her chest. She turned to the soldiers waiting in attention.\n\n\"Was he taken by a bloodsucker?\" She enquired of them, seeking to verify Meister Erwan's ramblings. One of the men nodded nervously. Agatha threw Meister Erwan a beseeching glance. Leeches were the last thing he needed. She moved a hand to his neck to feel his pulse. It fluttered under her fingers like a butterfly, and if the venom was not removed from his bloodstream, within the night he would turn into one of the creatures that had bitten him. \n\n\"We will keep him asleep and feed him so that he gains his strength back. The leeches will suck the venom out from his bloodstream,\" Meister Erwarn said, \"Agatha, move him near the fire. You lot, leave. If you are not sick, you are a hindrance.\"\n\nOne by one, the soldiers left the infirmary. Agatha moved the Lieutenant General close to the hearth and gazed imploringly at Meister Erwan. \"I can heal him now, if you give me leave.\"\n\n\"No, we will not do that. Do you want to die, Agatha? We will leech him, give him broth and milk of poppy and he will make it though.\"\n\n\"He will not survive the leeching, Meister Erwan, not with the little amount of blood he has left,\" Agatha whispered, trying to reason with the orthodox physician. \"No one will know,\" she gestured towards the rest of the ward, where most of the beds were occupied by unconscious or sleeping patients. \"Please.\"\n\n\"Would you rather have him turned than dead?\" Meister Erwan said angrily.\n\n\"I did not say that. I can remove the venom. Allow me, Meister Erwan.\"\n\n\"It is too dangerous, Agatha. I shall not allow it.\"\n\n\"Is something the matter?\" A deep voice spoke out from near the door of the infirmary. Agatha felt her insides twitch nervously. She would recognize that voice anywhere. Meister Erwan bowed as far as his ailing back would allow and said \"My Lord.\"\n\nAgatha curtsied gracefully without looking at him. \n\n\"What is going on here?\" Orion stepped inside the infirmary and walked up to them, cradling his iron headdress under one arm. He was clad in mail today, and he had sweat running in rivulets over his face. Agatha wondered why he had been sparring instead of attending the celebratory feast. It was, after all, his army that had wrought victory over the seditious nobles of Luteri.\n\n\"He has been bitten, My Lord,\" Meister Erwan said mournfully. Orion stared expectantly at Meister Erwan, raising an eyebrow. This time, Agatha stayed silent while Meister Erwan fumbled over an explanation that would explain their altercation, yet hide Agatha's abilities. Agatha watched the man trail into an uncomfortable silence after a half baked explanation, then said lucidly, \"Sir Blaxton needs magic if he is to make a complete recovery.\"\n\n\"Do it,\" Orion turned towards Agatha.\n\nAgatha threw one last, uneasy glance at Meister Erwan and knelt down before Sir Blaxton. She placed a hand on top of his chest and started reciting a spell that would work inside him to cleanse his blood of the venom that the vampire had poured in him. The spell sent out invisible strands, embedding itself insidiously inside Sir Blaxton's body, diving deep into his building cells and purging his body of all foreign objects. When she finished, she rose, feeling exhausted. \n\n\"He should come around in a few hours,\" she said. Sir Blaxton was beginning to regain some colour back into his cheeks already. Agatha could not be sure if it was a trick of the firelight, but she hoped that the spell would work. She had tried a Purging spell only once in her life, on a wayward traveller who had been bitten and had sought refuge in the Academy. He had recovered and had gone about his way the day after, blessing God almighty for his miracle.\n\nOrion regarded Sir Blaxton's face for a few minutes. Then he raised his eyes towards Agatha and said, \"come with me. There are more.\"\n\nAgatha jogged to follow him across the Keep courtyard towards the Armoury. \"Have the rest been bitten too? Where are they? Why weren't they delivered at the infirmary like Sir Blaxton?\"\n\nOrion remained silent for so long that Agatha gave up on receiving an answer from him. Then he slowed down to match her stride and said, \"Sir Blaxton's battalion was returning through the hills of Remadra. They made camp on the foothills. They were attacked by the bloodsuckers at the dead of the night. The ones that survived hauled the unconscious into the carriages and returned as soon as possible. Quite a few men turned along the way, they had to be put down. The ones who have not turned yet are in the courtyard by the Armoury. They were not sent to the infirmary because of obvious... safety concerns. I want you to try and save... as many as you can, Agatha.\"\n\n\"Is this not a breach of the Treaty?\" Agatha asked in a hushed voice.\n\n\"Yes.\" Orion hardened his jaw and gazed out into the distance.\n\n\"Is this why the Night Guards wouldn't serve anymore?\" she asked again. Orion glanced once at her before nodding. \n\nAgatha was aghast by the time they reached the Armoury. A giant iron portcullis opened to reveal a cobbled courtyard. Rows and rows of men lay immobile on the ground, their lifeless limbs and deathly pallor a clear indication of the fate that had befallen them. Another row of warriors stood near their heads in a uniform formation, keeping a watchful eye on their movements.\n\n\"O-Orion,\" she stammered. \"I cannot possibly heal all of them. My magic is limited.\"\n\n\"As many as you can, Agatha,\" Orion repeated, then laid a reassuring hand on her shoulder. Agatha was so distraught that she jumped at the contact.\n\n\"Can you take your men away from here?\" She asked. \"I do not want them to ... see me perform magic.\"\n\n\"Certainly.\"\n\nAgatha set to work after the men left the courtyard in a single, organized file. She started from the far end, working her way towards the portcullis. She felt a profound heaviness settling in her limbs by the time she was done with the tenth soldier. She made a quick headcount, her lips moving feverishly. Fifteen more were left. Orion stood sentry in one corner of the courtyard, forever watchful of her ministrations. Agatha wrapped her stole around her gown as tightly as she could and moved on into the next man. The sky had turned an inky blue and a curtain of chill was descending rapidly upon them. Winter was advancing on them yet again, the changing colours of the trees, the nip in the air and the suspicious absence of critters pointed to its inexorable progress. Dimly, as she pushed her tired body to move onto the next man, she wondered how much more difficult war would become when it started to snow. The Armoury was close to the Great Hall and faint laughter from the soiree floated up to her through the mist. By the time she reached the fifteenth man, black spots started to dance at the edge of her vision. When she was singing the spell for the twentieth, she was well aware that this would be the last warrior she would be able to heal. Her last, coherent thought was that war was always young men dying and old men celebrating. Then her legs gave way and she remembered no more.\n\n***\n\nAgatha awoke in a warm, soft bed, with plush furs thrown over her and a hot water bag by her feet. As her vision cleared, she realised that she was in Orion's bedchamber again. Too tired to move, she shifted her eyes around the chamber, but he was nowhere to be seen. Her eyelids fluttered close again, but before she could let the exhaustion claim her again, there was a dip by her side on the bed and his deep voice commanded, \"stay awake. You have to eat.\"\n\nAgatha opened her eyes and frowned at the towering form seated in front of her.\n\n\"Go away,\" she murmured sleepily. There was a clatter of a spoon on stoneware and something was pressed to her lips. She swallowed it, then realised that it was partridge soup. She opened her eyes and tried to sit upright. Orion sat in front of her with a carved bowl in his hand. His eyes never leaving hers, he raised another spoonful of soup to her lips. Agatha accepted it gratefully.\n\n\"I can eat,\" she said weakly, not knowing why she felt mortified. The partridge soup made her feel much better. Fleetingly, she wondered how he had known that she would need food. \n\nOrion did not hand her the bowl, merely continued to feed her as though she had not spoken. As her exhaustion abated with each mouthful, embarrassment started to take its place, and she repeated her request again. \"Please, let me do it myself.\"\n\nOrion smiled faintly this time, and said, \"no.\"\n\nAfter a while, Agatha felt full, and asked him to stop. Predictably, he didn't listen, merely held out the next spoonful. \"I can't eat anymore,\" Agatha protested gracelessly through a mouthful of partridge. \n\n\"You can and you will, Princess,\" Orion said.\n\n\"I am not a Princess,\" she grumbled but accepted the rest of the food meekly enough. After she had finished the contents of the bowl, Orion set it down on his study table and fetched a towel to wipe her face. Then he brought her a beaker of water. \n\n\"This is getting ridiculous,\" Agatha said, finishing the water and putting her feet down on the floor, intending to leave.\n\n\"You will stay.\" Orion's tone brooked no argument.\n\nAgatha stared at his back as he put more logs into the fire, feeling dismayed. This would certainly mean more rumours back at the Keep, and if she spent the night in the Azure Tower, she would not be able to sidestep them in any way. However, when Orion turned around and pulled his tunic off of him, revealing a finely sculpted upper body, Agatha discovered that she did not care much about the rumours.\n\n\"How many survived?\" she asked, quite distracted by Orion's methodic undressing.\n\n\"Twenty. Your little spell was quite foolproof,\" Orion said and sat down beside her. \n\n\"And Sir Blaxton?\"\n\n\"Alive and well.\"\n\nOrion reached towards her and started to untie the laces of her gown. \n\n\"Wait!\" Panic laced Agatha's voice as she tried to turn towards him. She should have known from the start that this was his intention. Orion did not speak, nor did he let her turn towards him. His hands were gentle, his fingers were quick, and within a few blinks, Agatha's dress was tossed on the ground and she was shivering in her chemise. The chemise soon followed. Agatha wrapped her arms around her torso to hide her nakedness from him, but Orion merely forced her to lie back into the pillows with a gentle push of his hand. \n\n\"Please!\" Agatha whispered, pleading, trying to reason with him, even though a part of her knew how the night would end. If she submitted to him, she would probably escape without broken ribs. Small comfort though it was, that was the only coherent thought that kept her from struggling.\n\n\"Do not be afraid, Agatha,\" Orion murmured, running his hand through her braid and opening it up. \"I will not hurt you.\" Then he reached down to brush his lips against her, gently at first, then purposefully. Agatha turned her face away from him, clamping her lips shut obstinately. She knew that disobedience would only serve to make the experience more difficult for her, for as long as she had known, men never cared for the consent of women, they merely took whoever they pleased, whenever they pleased. And if the high-born ladies of the court had to submit to the whims of their husbands in bed then who was she, a Hartelle, to dare defy a man such as the Azure Rider?\n\n\"What if I don't want this?\" Agatha asked coldly, not caring if her defiance would earn her punishment. She clamped her legs together tightly, never intending to open them again that night. He would take what he wanted, she had no doubt of it, but she would fight him until the end.\n\n\"I will not take you unless you ask for it, Princess.\" Orion raised himself up on his elbows and twinkled down at her. \"Not unless you beg for it.\"\n\n\"That will never happen,\" Agatha said defiantly. She had been with Siegel of her own volition, and Walter did not matter in her estimation, but nonetheless, she had never found anything remotely pleasurable about the experience with either of them. She had come to the conclusion that sex was intended to pleasure men, and women were merely tools meant to assist them in that.\n\nOrion did not grace her challenge with a response, merely buried his head in the crook of her neck and inhaled deeply. Agatha tried not to focus too much on how he smelled like pinewood and musk and rain soaked earth, or how his chest hair tickled her breasts as he moved down on her slowly, raining kisses on her neck and then her clavicle. His lips left a trail of fire on her skin and a gasp escaped her lips as he took one of her nipples in his mouth and sucked it gently. His fingers moved to the other nipple, rolling the hardness around under his thumb. Agatha clamped her jaw shut, determined not to respond positively to his attentions. A dull, throbbing ache was developing between her legs, and Agatha closed her eyes, reprimanding her body for betraying her.\n\n\"Eyes open,\" Orion commanded, biting lightly on her nipple. Agatha gasped and opened her eyes, glaring accusingly at the Rider, who was now struggling not to laugh at her. \"I hate you,\" Agatha hissed through clenched teeth.\n\n\"I do not doubt that,\" Orion said, his quiet voice full of suppressed laughter, and to Agatha's horror, positioned his face between her legs. When had they fallen open? \n\n\"My Lord, please!\" Agatha cried out, paralysed with mortification as Orion started to lick her nether lips with his tongue. Before she had too long to ponder on it, his tongue landed on a particular point which sent out shoots of pleasure up to the rest of her body, eliciting a moan from her. His fingers joined his tongue as he massaged around her entrance, now dripping wet with her arousal, then slipped inside her, curling upwards to press on another point. This time, Agatha had to clasp her hand over her face to stop herself from screaming. He gave her no respite, running his tongue on her now swollen clitoris at a punishing pace and stimulating the front wall of her entrance with his index finger. After some time, his second finger joined the first, building her up with finesse and pushing her over the brink. Agatha screamed, clutching the furs as a delicious pleasure seared through her body. It was everywhere, on the skin of her skull and in her spine, deep inside her jaws and on the tips of her toes, obliterating all thought, hurtling her to a place she had not known existed.\n\nAs she came down from her peak, Orion claimed her lips again, and this time, without conscious thought guiding her, Agatha responded, opening up under him with a whimper, allowing Orion to push his hard and demanding tongue into her mouth, wringing out the response that she had denied him a few minutes ago. When he withdrew, Agatha realised with some consternation that she had her arms and legs wrapped around him. Her pelvis was tilted upwards towards him, and she was rubbing herself on his erection over his breeches.\n\nAgatha let her arms and legs fall away, then turned her face to one side, reeling in her responses to him. Orion chuckled again, then slid down to the bed beside her, his manhood still pressing into her hips threateningly. Agatha waited for him to shed his breeches and climb on top of her again, but it never happened. Instead, Orion's breathing slowed as he wrapped himself against her back, with one arm draped over her waist. Agatha reached out and covered both of them with the fur that she had kicked away in the heat of passion, then she, too, fell asleep.",
        "***\n\nWhen Agatha awoke the next morning, Orion was gone, and her dress and chemise lay neatly folded on the nightstand. Agatha rose groggily, then dressed in a hurry, eager to leave the accursed place as soon as possible. Then her eyes strayed to Orion's work desk, the top of which was now conspicuously empty. Agatha tried to open the bureaus that lined the bottom of the desk, but found them locked. The surface of the desk was clear except for a scrap of parchment, the inkpot and the eagle-feather quill. Curious, Agatha turned the parchment over in her fingers. On the other side, written in Orion's nearly illegible script, was a single sentence:\n\nIt is quite rude to read another's letters.\n\nBlushing furiously, Agatha crumpled it in her hand, tossed it into the ground and all but stomped out of the chamber.\n\n***\n\nLater that day, Agatha made her way to the library, seeking the counsel of the portly, good natured librarian Fred Webster. Fred, who was a few years ahead of her, had started working in the Castle as an apprentice to Grand Meister Eustace Brickenden, and had quickly proved himself capable of supervising the Central Library of the Castle. The Central Library spanned over three levels of a colossal manor and consisted of nearly a million books, twice the number of scrolls, and an uncounted number of letters and transcripts. Rumour was that the Central Library was haunted by the ghosts of the kings and princes who had died an untimely death over the last few years, and a few moons ago a chambermaid had fainted while clearing out the chambers in the topmost level because she had allegedly seen the ghost of the assassinated Prince Elrond.\n\nFred, however, had no such qualms about ghosts and welcomed Agatha into his study with a wide smile.\n\n\"Why, I haven't seen you here lately. I began to worry that you were afraid of other-worldly creatures.\"\n\n\"With how Meister Erwan is working me, I am sure I will be the one haunting people after a few moons,\" Agatha replied as she took a seat by the fireside. Fred sat cross legged in front of her.\n\n\"I'm afraid the Library is strictly reserved for the Royal ghosts. You may haunt the scullery if you wish,\" he winked.\n\n\"No thank you. It gets very hot there during summer,\" Agatha quipped. \"How have you been, Fred?\"\n\n\"I have been well. Alice is with child, so that is keeping me busy. But you know that already. I hear she went to see you for her morning sickness.\"\n\n\"Yes, yes, she's coming along nicely. You should have a very healthy baby. How is Grand Meister Eustace?\"\n\nFred frowned at this question. \"Not well. He has this cough that simply will not go away, and he refuses to see Meister Erwan. Don't tell him, but he says Meister Erwan is a blubbering imbecile. He spends his days holed up in his chamber and keeps rambling about a prophecy.\"\n\n\"What prophecy?\"\n\n\"I do not know. He keeps saying, 'the time for the Thistle Dragon has come, Fred. I hope I live long enough to see the Rider. A new age will start once the Thistle Dragon claims its Rider; the Great War will finally end. The prophecy is coming to fruition, I can feel it in my bones, Fred'... and so on.\"\n\n\"Wait, what is a Thistle Dragon?\" Agatha asked curiously.\n\n\"Your guess is as good as mine,\" Fred said, \"I have never heard of anything other than Imperial and Azure Dragons. Vandan got the Imperial ones, we got the only living Azure one, and we are certainly disadvantaged because the Imperial lizards breed like rabbits. Now, this Thistle Dragon, well, I don't know what that is, and I have spent my whole life reading obscure texts about Dragon. As for the Great War, well, don't we all wish it would end?\" Fred finished bitterly.\n\n\"One can always hope,\" Agatha sighed, agreeing with Fred. \"Ice would surely like some respite from the red dragons. Poor Ice. Can you imagine how difficult it is spending most of your life battling your kin?\"\n\n\"Well, the Vandan dragons are nearly lizards,\" Fred growled. \"We should be happy that the Azure Dragon is nearly three times in stature compared to the Imperial Dragons. We would not have stood a chance otherwise.\"\n\n\"That is true,\" Agatha nodded. \"Maybe the Grand Meister is right, you know. Maybe the Treaty will last this time. After all, our soldiers haven't gone to battle with Vandan in nearly two years.\"\n\n\"Optimism is good, when moderated.\" Fred cautioned. \"So, why did you come to visit me, Agatha? As much as I would like to talk about Dragons, I cannot imagine this is the reason for your visit?\"\n\nAgatha squirmed uncomfortably. \"Well. I am here to ask you about the Dragon Rider,\" she confessed, wringing her hands self consciously.\n\n\"The Azure Rider?\" Fred asked.\n\n\"Yes.\"\n\n\"What do you want to know about him? He is nearly a hundred and seventy, so there's a lot of ground to cover.\"\n\nAgatha took a deep breath and said, \"I want to know everything about him.\"\n\nFred rose from his seat and went to get some books. He came back after a while, with a stack of books and scrolls tucked under his arm. He opened the books around him, looking up some information or other, brushing up some of the gaps in his memory. Then he settled on his haunches and started to speak.\n\n\"The Azure Rider was born a hundred and seventy two years ago in a village by the northern edge of the Great Southern Plains. His birth name was Orion Gervase Lanthechild. His father was a carpenter and his mother came from a butcher's family. The circumstances of his bonding with the Azure Dragon is not quite known, but whispers of a giant blue bird started circulating around the Kingdom when he was around eighteen. It would make sense to assume that Ice claimed him when he came of age, because that is when most of the Dragons claim their Riders. Exceptions have been known to happen, but that is the norm. \n\n\"At this time, Lohenstraad was ruled by the Wycoff Family. The then king, Martin Wycoff sent his emissaries to bring the new Dragon Rider to court, however, Orion refused at the time, preferring to stay with his family. He lay low for the next thirty years, during which his parents died a natural death, his sister got married off to a respectable family. In the meantime, the Wycoff dynasty was overthrown by the current rulers, the Constantine family. \n\n\"King Egbert's grandfather, Lawrence Constantine, sent for Orion again after he assumed the throne. This time, he accepted the invitation, presumably because most of his family was dead and he had no more reason to stay in his village. He served in the King's Council for nearly three decades without any perturbation, fighting for the Lohenstraad Army whenever there was a war with Vandan. Then he fell in love with a farm hand called Penelope and married her, bringing her to the Azure tower to live with him. Ballads were sung about Penelope's beauty, because till date, she remains the only woman to have charmed the Azure Rider's heart. It is said that her eyes were as blue as the South Sea and her raven hair cascaded down to the ground, that she sang like a nightingale and when she told stories, even the birds stopped chirping to listen to her.\n\n\"Lawrence Constantine died a natural death and was succeeded by his son Norman Constantine. Orion's popularity at the court was at an all time high around this time. He fathered two sons and was considered to be one of the closest confidantes of King Norman. This was also the period of the longest stretch of peace between Vandan and Lohenstraad, lasting for nearly twelve years. Rumour on the street was that Orion had played a significant role in forming the terms of the Treaty that had resulted in the ceasefire. \n\n\"Then, out of the blue, tragedy struck. Penelope was revealed to be a witch. Not a mage, mind you, but an actual witch who could possess magic in her. Just to make an example that no one was above the law, King Norman, who had been Orion's longtime friend, ordered her to be burned at the stake in the Central Market square. Grandmeister Eustace, who was but a boy around this time, recounts that he saw the Azure Rider erupt into a rage that no one had ever seen before. It took ten men to restrain him as Penelope was hauled away by the Guards. The Azure Rider was spared only because he was the only Dragon Rider the country had seen in a thousand years, in any other circumstances, the husband would have been executed alongside the witch for hiding her. The Azure Rider disappeared after this. Some say he went down to the South, hiding out in the Lands of Luteri. Some said he had gone over to Vandan. He stayed away for nearly fifty years, during which time, his oldest son inherited his estate and lived out his life in peace. King Norman and quite a few nobles died an untimely death from the consumption that struck Lohenstraad in epidemic proportions. Surprisingly, the Rider's younger son disappeared along with him too. No one knew where he had gone, and he did not ever return. \n\n\"The Rider returned after about fifty years, and this time, King Egbert was ruling over the throne. He stayed in the Azure Tower and resumed his duties, never speaking of the past to anyone. When war broke out between Vandan and Lohenstraad, he fought alongside and under the leadership of Prince Elrond, who was then the General of the Army. About twenty seven years ago, Prince Elrond was assassinated by men from Vandan, and the Dragon Rider started serving as the General. He has not taken any wife or woman ever since.\n\n\"Sir Blaxton started serving at the capacity of his Page some twenty years ago. He became a knight shortly after he came of age, and then started serving in the King's Guard. Five years ago, the Azure Rider promoted him to the capacity of Lieutenant General in the army. The decision raised some eyebrows initially, but Sir Blaxton proved himself to be a skilled fighter and a shrewd, pragmatic strategist, and no one has questioned the General's actions since. It is well known that he cares for Sir Blaxton as a son, and Sir Blaxton seems to return the depth of his affections. In private, the General is known to be a companionable man, although he stopped allowing anyone into his confidence after the execution of Penelope. Rumours say that he spends his free time in taverns and gambling houses in disguise, sometimes goading unsuspecting gamblers into playing with him, and he never loses. It is well known that if a hooded stranger asks you for a game in a gambling house, do not engage him, for you shall surely lose everything you have.\n\n\"Grand Meister Eustace holds him in particularly high regard, having seen him from a very young age. The feeling is mutual. The Azure Rider visits Meister Eustace nearly every week, enquiring about his health and spending an hour with him. \n\n\"Many Lords have approached him in recent years, offering their daughters' hands in marriage to the Rider, but he has refused all of them. And that is all I have on the Azure Rider, Agatha. I am afraid I do not know the man in person, so I cannot be more helpful to you.\"\n\n***\n\nAgatha met Sir Blaxton that afternoon during her usual duties in the infirmary. He walked into the room and introduced himself with the gentleness and chivalry of a good natured young man, and thanked her profusely for saving his life. He said that Sir Alexander Fletcher, the other Lieutenant General was grateful to her as well for saving so many of his men, and that he could not make it to her in person owing to pressing duties elsewhere. Sir Blaxton repeatedly proclaimed his undying obligation for her and insisted that she call on him if she ever needed a favour. Agatha, quite surprised and abshed at the attention provided by the dashing young knight, stammered and said that she would surely hold him to his promise. Privately, she hoped she would never have to suffer through such arduous proclamations of gratitude ever in her life. \n\nBefore leaving, Sir Blaxton turned to her and offered a final, affectionate smile and said, \"oh, for what it's worth, I believe you shall be a marvellous camp physician, Miss Hartelle.\"\n\n\"I'll be a what?\" Agatha straightened up from her crouched position beside a pallet and considered Sir Blaxton with confusion. \"You've got me muddled with someone else, Sir Blaxton.\"\n\n\"Oh no no,\" Sir Blaxton walked back into the infirmary, looking as excited as a child. \"So, our camp physician passed away a few months ago. We were nearly slaughtered in Luteri without one. It's time someone else took up that responsibility, and Orion has decided to give it to you. I am glad that our lives will be in such capable hands as yours, Miss Hartelle.\"\n\nAgatha glanced around her, startled, and pleaded, \"Never, ever say that in front of Meister Erwan, please.\"\n\nSir Blaxton chuckled good humouredly. \"I believe Orion will speak with Meister Erwan before officially offering you the position, so you need not worry about having that particular conversation yourself. I found myself in a similar predicament when Orion wanted to make me one of the Lieutenant Generals, because I didn't quite know how to tell His Highness that I did not want to stay in the King's Guard. Thankfully, Orion took care of it. Though he does not look like it, he knows how to tactfully handle difficult situations.\"\n\n\"Oh I do not doubt it for a second,\" Agatha muttered under her breath, then asked, \"why did you not want to stay in the King's Guard? Is that not a very lucrative position to hold?\"\n\nSir Blaxton hesitated. \"It is to some, I suppose. It did not appeal to me. Too little action, too many feasts. It was making me complacent and overweight.\"\n\n\"I believe you, especially as I know of the amount of butter that goes in the soups,\" Agatha winked.\n\nSir Blaxton agreed fervently, then whispered conspiratorially, \"nine out of ten nobles complain that the chairs in the court are too narrow.\"\n\nThey laughed together, guiltily and breathlessly, and Agatha decided that she liked Sir Blaxton.\n\n***\n\nInadvertently, Agatha met the other Lieutenant General, Sir Alexander Fletcher that evening. She was working in her herb garden, sawing wood for creating a raised bed for the feverfew, when she heard raised voices from near the stables. Cursed with a perpetually curious mind, Agatha laid down the axe and crept towards the stable to find the two Lieutenant Generals in the midst of a heated debate. Orion was there too, but he was standing by idly, neither offering counsel nor breaking them up. Agatha was almost certain that he was enjoying the exchange.\n\n\"Have you truly lost your mind, Blaxton? We cannot go to the Forgers, no matter what weapons they can make for us. Have you not heard of the plague that has been ailing them for a year now? The Forgers will all be dead before the winter is past, and going to them would only ensure that we carry the plague back to human civilization.\"\n\n\"And what do you suggest, Sir Alexander? That we collude with rabid dogs to overthrow the bloodsuckers? And then what shall we do once the bloodsuckers have been wiped out? Sign another treaty with the Lycans, perhaps? Hope that they do not feed on and turn our children when they are incapable of assimilating themselves in civilization? We saw how the Treaty with the bloodsuckers backfired, and they are capable of dialogue without resorting to showing fangs. We know that the same cannot be said for the Lycans.\"\n\n\"And what will you give to the Forgers in return when you ask for this weapon? You know they will not hand over the weapons without something in return. What could you possibly offer them? I hope I do not have to remind you what happened the last time they were offered gold in exchange for their services. Or maybe I do, you are perhaps too young, inexperienced and hotheaded to remember the important -\"\n\n\"I believe we should put this matter to rest for now and join the celebrations,\" Orion interjected quietly. \"His Highness will not be pleased if both of his Lieutenant Generals do not appear at the soiree. Besides,\" and this time Agatha could clearly hear the laughter in his voice, \"we have company.\"\n\nBefore Agatha had a chance to hide herself, Sir Alexander strode out of the stable and spotted her standing beside the wooden fence of the stable, only partially concealed by a honeysuckle bush. He grabbed her by the hair and all but dragged her inside the stable, where Orion and Sir Blaxton stood, looking amused and confused respectively.\n\nSir Blaxton's confusion quickly turned to rage as he considered Sir Alexander with a hostility Agatha had never would have dreamed to be possible in the even tempered knight.\n\n\"Is this some way to treat a lady, Sir Alexander?\" he thundered, his hand poised on the hilt of his sword. \"Let her go immediately.\"\n\nSir Alexander released her hair and pushed her towards Sir Blaxton dispassionately. The latter caught her in what could nearly be called an embrace before steadying her. \"Are you hurt, Miss Hartelle?\" he asked, concern apparent in his voice.\n\n\"No,\" Agatha massaged her head guiltily, not sure if she deserved to be defended so gallantly. After all, she had been eavesdropping.\n\n\"Who is she and why are you treating her like a lover, Blaxton?\" Sir Alexander sneered, clearly contemptuous of the younger man's kindness. \n\n\"That's the one I wanted to make the camp physician,\" Orion interjected, throwing no more than a careless glance at her. \"She made some potion that saved Sir Blaxton and your men yesterday.\"\n\n\"Oh, so you are the physician's apprentice,\" Sir Alexander measured her from head to toe. \"Are you wedded, girl?\"\n\n\"No,\" Agatha answered, slightly shakily.\n\n\"So this is your plan, Orion? Throw a maiden among a bunch of soldiers? She would be raped twenty times before the first day is over,\" Sir Alexander laughed mirthlessly, and Agatha was suddenly certain that given the chance, he would be amongst those twenty.\n\n\"If anyone tries to hurt Miss Hartelle I shall personally ensure that their heads do not stay on their shoulders,\" Sir Blaxton said quietly before Orion had a chance to respond. \n\nSir Alexander raised his eyebrows at Sir Blaxton, disdain apparent in his countenance. \"Well, well, someone's besotted,\" he taunted, and Sir Blaxton's cheeks turned steadily red at the accusation. \n\n\"You mean, someone has a morsel of integrity, unlike you,\" he spat, his hand inching towards the pommel of his sword again. \n\n\"Well, I'm off to the feast. I'll tell them you're late because you're busy wooing a Hartelle farm hand.\" Sir Alexander departed after a final, contemptuous glance at Agatha.\n\nSir Blaxton started apologising for his behavior immediately after he had left. This time, Orion stopped him.\n\n\"Say your piece,\" he said, staring impassively at Agatha.\n\n\"I-\" Agatha fell silent, unsure what to say, then she realized that she had been itching to provide a solution to Sir Blaxton and Sir Alexander's altercation. \"The Plague,\" she said, reeling in her thoughts. \"The Plague is curable. By simple potions, made from commonly occuring herbs and by practicing basic hygiene. You can offer them a cure for the Plague in exchange for whatever weapon it is you seek from them. I will teach their physicians how to make teas and potions to break the fever. It is simply a different form of the common cough and cold. They are dying because it is new to them and because dwarves have no resistance to it. Humans will not be harmed by the plague.\"\n\nSir Blaxton considered her with a regard and adoration that discomfited Agatha. Orion, however, was frowning sceptically. \n\n\"Are you sure of this?\" he asked.\n\n\"Yes! Ask any physician and they will say the same. Humans have nothing to fear from the Forgers' Plague.\"\n\nOrion glanced at Sir Blaxton and said, \"I'll talk to Alexander. Go to the feast.\"\n\nAfter Sir Blaxton left, quite reluctantly, Orion turned to Agatha and smirked. \"Are you certain you did not slip a love potion into his tea?\"",
        "Agatha glared at Orion, her diffidence abating now that the rest of the men were gone. \"You could try taking a leaf out of his book as far as wooing a lady is concerned.\"\n\n\"Interesting that you consider yourself a lady,\" Orion said, pushing her a little so that she was forced to walk with him. \"I am yet to find a man who swears as creatively as you. And must I remind you that ladies do not eavesdrop or try to read other's letters?\"\n\n\"They were yelling in the middle of a very public stable,\" Agatha retorted, \"I didn't exactly eavesdrop.\"\n\n\"Is that your garden?\" Orion asked as they exited the stable, nodding towards the little patch of ground to their left.\n\n\"Yes.\"\n\n\"Show me around.\"\n\n\"Aren't you supposed to be at a feast?\"\n\n\"Being a Dragon Rider allows me some leeway. Besides, ruffling your feathers is much more satisfying than listening to Lord Mannering's tall tales.\"\n\n\"Is that what violating women is called nowadays? Ruffling their feathers?\"\n\n\"I'd hardly call that violating,\" Orion shrugged. \"I'll spare your ladyship's modesty and refrain from recalling the details.\"\n\nAgatha took her time showing him around her garden, because she had an idea about what Orion had planned for her next. Orion seemed to be in no hurry, asking questions about the plants and listening attentively to her explanations. He shot a quick glance at her face when she mentioned that she was sawing logs before she left for the stables, but he did not say anything. \n\nAfter Agatha had finished describing every unnecessary detail of her garden, Orion led her to the Azure Tower. Agatha told herself that she had no choice but to follow him, but she was not sure she fooled herself.\n\n\"Orion,\" she held up her hands in front of her as he shut the door of his bedchamber behind him, \"you do not have to do this. You could have any woman you want. Please.\"\n\n\"Take of your clothes\" was the only answer he provided, moving away from the door and walking towards his desk, where a few closed scrolls lay upon the work surface. He opened one of them and started to read its contents without taking a seat. After a few seconds, without looking up from the parchment, he said, \"I asked you to do something.\"\n\n\"You are vile,\" Agatha said, and reached behind her to undo the laces of her gown. It fell to her feet around her and she inched near the fireplace, grateful for its warmth as she stood shivering in cotton shorts and a breast band. She did not wear a chemise when she worked in her garden, which was nearly every day, but that evening, she found herself wishing that she had worn something that covered more of her skin.\n\n\"The rest too,\" Orion said silkily. Agatha proceeded to take off her breast band and her shorts, glaring daggers at him. Orion placed the scroll back on the desk and picked up another, apparently unfazed by Agatha's gaul. Now that she came to think of it, she had hardly ever seen him angry, hardly ever seen him react except for suppressing a smile on occasions. Perhaps the stories of the Azure Rider's temper were merely stories, spun by idle men over meat and mead over the years, until they grew from mere tavern chatter to legends of terrifying proportions. Agatha hoped that was the case. She was risking her person by her resistance otherwise.\n\nAgatha shivered again, studying Orion's profile and wondering at her own recalcitrance. She did not find him physically repulsive nor did she find his temperament repugnant, then why did she hate him as she did now, with every fiber of her being, as she stood shivering beside the roaring fireplace? Why could she not lie down on his bed and allow herself to run her fingers through his hair, why did she have to battle her body's reaction whenever he stood close to her?\n\n\"On the bed.\" The command was sharp and abrupt as Orion moved to another letter, the crease between his brow deepening. He did not look at her.\n\nAgatha sighed and scuttled under the covers, recognizing the futility of staring loathsomely at a man who was not looking her way, and carefully chose a few adjectives to throw at him later. She had been surprised the previous night when he had not taken his pleasure with her, but she knew that her good fortune was drawing to a close. \n\nOrion finished with the letters, let loose a nearly inaudible sigh and rubbed his temples wearily. \n\n\"What is it?\" Agatha asked despite herself.\n\nOrion did not answer immediately; he organized the scrolls into a bureau and started to undress, raking his gaze down her body. Agatha watched, initially with fascination at his beautiful, lithe form, then with consternation as he slid out of his breeches to reveal a shaft of monstrous proportions. Any hope that Agatha had of escaping the ordeal unscathed quickly dissipated from her mind.\n\n\"We signed a Treaty with the vampires that they will not turn or kill any human and in return they will be assimilated into civilization and will not be hunted down. A vampire representative was incorporated into the King's Council as a sign of mutual trust and goodwill after the Treaty was signed. Unfortunately for us, Vladimir is staunchly denying any association with the bloodsuckers of Remadra, who broke the Treaty. His reasoning is that they are a different clan and he has no control over them, and thus this means that the Treaty has not been violated, because it originally covered the vampires that were strictly in his clan.\"\n\nOrion strode towards the bed and slid down beside Agatha, stroking her face gently and tucking the stray locks of hair behind her ear.\n\n\"Does that mean his clan will assist the army in subduing the bloodsuckers of Remadra?\" Agatha asked, forgetting to resist in her curiosity.\n\n\"That is the crux of the matter. Short answer, no,\" Orion ran a thumb over her lower lip. \"If you intend to distract me, you will have to try harder,\" he said, smiling a little.\n\n\"Orion,\" Agatha tried to reason with him, now that he seemed to be in a voluble mood, \" you cannot do this. You will have no trouble finding someone who is willing. Please let me go.\"\n\n\"I thought you said you were willing to do anything to keep your friends safe?\"\n\n\"And that extends to working as a camp physician for you in spite of the dangers associated with the job! Not to be your bed slave.\"\n\nOrion pushed her down against the bed and lowered himself on top of her, kissing her argumentative mouth forcefully. Agatha kept her lips tightly clamped, obstinately refusing to respond. \n\nOrion raised himself to look into her eyes. \"That is not how the world works, Princess,\" he said softly. He started trailing kisses down to her chest, sucking her nipples and stroking the sides of her breasts with his rough, calloused thumb. Agatha hated how it made her feel, how she had to fist her hands to refrain herself from touching his hair, from caressing the rippling, taut muscles across his shoulders. Orion noticed it but did not gloat. Instead, he cupped his hand over her mound and started a slow, torturous massage. Again, Agatha noticed that her legs had fallen open of their own accord. Orion reached inside her slick folds and circled his thumb around that sweet spot, carefully watching her face. Agatha turned her face away from him in a show of defiance and closed her eyes.\n\nOrion's fingers kept up the slow, languorous pace, sliding in and out of her, circling her clitoris, while Agatha tethered at the brink of a glorious precipice.\n\n\"Look at me, Agatha,\" Orion said softly.\n\n\"Go fuck yourself,\" Agatha said.\n\nOrion lessened the pressure around her clitoris and before Agatha could rein in her actions, she found herself thrusting her pelvis towards his fingers to make up for the lost sensation.\n\n\"Look at me and I will let you come,\" Orion said, moving his fingers in the same, slow unhurried pace that was starting to drive her crazy. \n\n\"No,\" Agatha said, then nearly whimpered as the pressure lessened even more, leaving her aching with need. Conceding defeat, Agatha opened her eyes and looked at his eyes, now a warm, limpid blue.\n\nOrion grunted his approval and thumbed her roughly in response. Agatha screamed as her pelvis rose from the surface of the bed, a beautiful rapturous pleasure coursing through her veins. Then she felt the nudging sensation of his cock at her entrance. Orion entered her slowly, watching her impassively as he did, and Agatha squirmed around him, unaccustomed to the size and girth.\n\n\"Relax,\" he whispered, stroking the insides of her thighs, pausing every so often to offer her a chance to accommodate herself. Agatha willed herself to relax, telling herself that resistance was futile. When Orion started moving, she found herself unable to look away from his eyes, fascinated by the flecks of azure under the light blue, and grudgingly admitted that he might be the most beautiful man she had ever laid eyes on.\n\n\"Would you ever have forced Penelope like this?\" she asked, unbidden tears pooling into her eyes.\n\nOrion did not react like she thought he would. His face remained impassive as he kneeled before her, grasped her hips and raised her pelvis from the bed. He began thrusting in long, measured strokes, finding an angle that dragged her towards ruin again. As she started pulsing and quivering around him, he reached out and clamped his hand over her mouth, stifling her cries. When her body went limp after her climax, he whispered in her ear, \"Fred Webster should be able to answer that, too.\"\n\nAgatha gaped at him as he raised himself over her, pounding into her methodically and apathetically, unperturbed by her vicious attack at his past, building her up again and pushing her pitilessly over the precipice again. This time, Agatha kept her lips tightly closed even though her back arched off from the bed. \n\n\"Why don't...\" she gasped, nearly losing her train of thought, \"why don't you tell me?\"\n\n\"You are an intelligent woman. You should be able to figure it out,\" Orion whispered, his voice unaffected by his exertions. Then there was a knock on the door of his bedchamber and Jonathan's reedy voice rang out from the other side.\n\n\"Orion! His Highness demands that you attend the feast at your earliest convenience.\"\n\nOrion stopped thrusting and frowned, then without looking away from Agatha, said, \"yes I will get there sometime later.\"\n\n\"He's sent Sir Blaxton to accompany you. He is waiting at the visitor's hall.\"\n\nA flash of irritation crossed Orion's handsome features. \"Tell him I shall be down shortly.\"\n\nOrion waited until the shuffling footsteps of his retainer faded, then muttered, \"egotistical imbecile.\"\n\nAgatha, who had clapped a hand over her mouth to stifle any untoward reaction, found Orion's baffled expression quite entertaining. A small giggle escaped her despite her anger at him, and Orion's eyes softened as they refocused on her. He started moving again inside her, and finished quickly with a few short thrusts. He drew out of her and kissed her forehead tenderly. \"I would love to spend the evening with you, but duty calls,\" he whispered.\n\nAgatha sat up on the bed as Orion started dressing, his features now carefully schooled to mask his annoyance. \"If you wish, you can sleep here. Call Jonathan if you need anything.\"\n\nAgatha had no intention of staying and it showed clearly on her face. Orion laughed. \"Don't hurt yourself trying to climb out of the window,\" he mocked. Agatha's eyes widened, once again unsettled by Orion's perceptiveness. That was exactly how she had been planning on making her exit, to avoid giving the chambermaids downstairs fodder for gossip. Before leaving, Orion locked all the bureaus in his desk. Then he turned to her and said, \"The wall by the South Window is easiest to scale, but I would prefer you left by the front door. It would be counterproductive if our camp physician ends up in the infirmary.\""
    ],
    "authorname": "Ava_fern",
    "tags": [
        "fantasy",
        "dragons",
        "vampires",
        "werewolves",
        "medieval",
        "witches",
        "knights"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-azure-rider-ch-02"
}