{
    "title": "Boston to Birmingham Ch. 05",
    "pages": [
        "Remember, this is a tribute to DQS1. Did you really think I would stop this soon? \n\n..................................................\n\nShe sat there, shocked so badly she couldn't even cry. He really was gone. She looked over at Bill.\n\n\"Is it really over?\"\n\n\"I'm afraid so. For what it's worth, there was a couple of times when I thought you two would make it.\"\n\n\"But why? I've grown up, changed into a better person, didn't he see that?\"\n\n\"Yes he did. He once told me how proud he was of how you matured, and the way you took to family down here.\"\n\n\"Then why?\"\n\nBill sighed. What he was about to tell her would be painful, but if he got her to understand maybe it would bring her some peace. \n\n\"First, let me say he still loves you, he was serious when he told you that. But Gwen, look at it from his side. You were the world to him. YOU were his validation that he had transcended his dark past, that he was a good person worthy of happiness. The fact that you chose him gave him an enormous amount of pride.\"\n\n\"Then, when you started slighting him, acting embarrassed to be in his company, his perfect world starting cracking. When you cheated, it destroyed him. He told me in his solo session that he was proof 'no one gets above their raisin'', an expression meaning that when things get bad one reverts back to their upbringing. What he did when he caught you and that man together shocked him to his core. In one second, the world he had worked so hard to create was gone.\" \n\n\"In his youth, trust was everything. You know what he did, so he had to have people around him he could absolutely depend on. A violation of trust could have very dire consequences. So he learned to be very careful who he let in, for fear of being betrayed.\"\n\n\"You betrayed him, in his mind, in the worst possible way. I know we've talked about it several times but could never get you to understand.\"\n\n\"Sign the papers, Gwen, give him some peace.\"\n\nThen the tears came. She wept for Hardy, for herself, for the future she no longer had with him. In the end she signed the papers and left them with Bill.\n\n................................................\n\nShe did what any young girl does when faced with traumatic events. She ran home to daddy.\n\nGreg comforted her as best he could, sad that her marriage hopes finally died. She stayed two weeks, visiting old friends who welcomed her back with open arms. She was experienced enough now to wonder if they were really glad to see her. Not one had called of visited during what they called her 'exile'. They seemed vapid and shallow to her now.\n\nShe couldn't bear to live in her townhouse, too many bad memories, so she took a suite in a five star hotel. The more people catered to her the more irritated she became.\n\nFinally realizing all her true friends were back in Alabama she told her dad she was taking a little vacation before she went 'home'. He understood, realizing his hope of her taking over the firm was probably gone, but glad she was finding her own happiness.\n\nThe idea came to her while she was transferring items from her old purse to a new designer handbag she had purchased in a fit of boredom.\n\nA card fell out, Capt. Anne Burnside, U.S. Army.\n\nShe called, and to her surprise, she answered on the second ring.\n\n\"Anne? This is Gwen Wil...I Mean Canaday. Remember me?\"\n\nShe could hear the smile in her voice when she spoke.\n\n\"I always remember beautiful blonds I sleep with. How are you?\"\n\n\"Divorced. Lonely. Distracted. I need a vacation, and some companionship with someone not associated with my old life. Can you get some time off? I'd love to go somewhere warm, with white sand beaches and clear blue water. Please come, my treat.\"\n\n\"Define companionship.\"\n\n\"Whatever comes. I don't have anyone to answer to but me any longer. I'm not leading you on here. Expect everything and nothing, and you won't be disappointed.\"\n\n\"Well, what an intriguing offer. Let me call you back this afternoon. When would be better for you?\"\n\n\"I'm not working right now so anytime soon is fine.\"\n\nAnne hung the phone up. It was an attractive offer. She did a little checking and found that though the divorce hadn't been officially filed, it was signed off on. Due some leave time, she decided to go for it.\n\nAfter a few calls, they decided to leave the next Wednesday for four days. Gwen wouldn't tell her the destination, wanting to surprise her.\n\nAnne wanted to know what flight they would be on, and was shocked when Gwen told her it would be a private jet, and gave her the time and runway.\n\n\"Did I mention I was a trust fund baby? Don't worry about a thing, this is all on me.\"\n\nShe was suitably impressed with the jet, but blown away by Gwen. A new hairstyle, a much shorter skirt, four inch heels. They kissed as friends.\n\nAfter she had settled in she asked where they were going.\n\n\"Oh, just a little resort in the islands I used to go when I was single.\"\n\nThe place was beautiful, everything a tropical paradise should be. The suite was impressive, two bedrooms, top of the line everything.\n\n\"What's first on the agenda?\"\n\n\"Gwen grinned.\n\n\"Shopping! I need a few new bathing suits, and we need some really sexy clothes. We'll knock'em dead in the lounge tonight!\"\n\nThe resort had several upscale shops, and with money being no object, they spent with abandon.\n\nAnne got her first surprise when they looked over bathing suits.\n\n\"Where are the tops?\"\n\nThe salesgirl and Gwen smiled.\n\n\"Honey, these beaches are topless or nude. No one wears a full suit, but if you're embarrassed, I sure they could find you something.\"\n\nThey picked out several thongs apiece, so small they may as well have been nude. Anne told Gwen she needed razors if she was going to go out with them on. She just smiled, and after hitting the shops and picking up a few dresses and lingerie, they spent the day at the spa, being waxed, massaged, and pampered. Anne decided being rich was not a bad thing.\n\nEven in a place catering to beautiful people, heads turned when the tall blonde and petite redhead entered the restaurant. They ate well, vowing to spend time in the gym the next morning.\n\nThey danced with abandon later, rubbing their partners into a frenzy, and even danced together a few times. Anne felt the heat between them.\n\nGwen was drinking hard, so Anne backed off to keep an eye on her. There were a lot of disappointed men when they went back to the suite alone.\n\nShe undressed a very drunk Gwen and got her into bed. She looked at her sleeping, stroking her hair. Gwen was still very devastated over the end of her marriage, she had to wonder if she really wanted this weekend.\n\nWhispering \"Everything and nothing\", she slipped her clothes off and snuggled into Gwen, who immediately spooned into her.\n\nSometime before daylight she felt her leave the bed, answering the call of nature. When she returned, she slid back the sheets and just stood looking. Anne wriggled and spoke.\n\n\"Come back to bed, honey. I'm cold.\"\n\nGwen slipped in and Anne immediately spooned into her. She was almost asleep when she felt Gwen slowly fondle her breasts. He nipples immediately hardened and she pushed her hand onto them, firmly.\n\n\"That feels so good, baby, keep going.\"\n\nGwen stiffened, she had thought Anne had gone back to sleep, then slowly massaged her breasts, stroking the rock hard nipples. Anne rolled over.\n\n\"Know what's better than fingers? Lips.\"\n\nGwen felt her tongue gently circle her nipple before latching on, sucking with urgency and passion. Her hand slipped between them, fondling her smooth skin. Her lips were puffy with desire, and a small amount of liquid seeped down her thigh.\n\n\"Ooh, it looks like someone is ready for some loving. Let me do you first, baby, teach you how good a woman's touch can feel.\"\n\nShe raised up, locking her lips onto Gwen. Soon they were kissing passionately, rolling tongues with abandon. Breaking off, Anne kissed her slowly down he body, savoring the feeling. Both nipples got a full working over, leaving them distended and sensitive. Her fingers had been lightly caressing her, sliding over her clit, slipping inside for a few seconds now and then. Gwen was moaning, and when her lips finally made contact with her clit, rolling it roughly, she exploded, gripping her hair tightly.\n\nAnne never stopped, using her tongue and fingers very effectively, until Gwen begged and pulled her up.\n\n\"No more, I'm so sensitive now if you blew on it I'd probably pass out. Thank you, thank you, I never knew it could be so good.\"\n\nThey lay for a moment, then Anne felt her lips on her left nipple. \n\n\"You don't have to, you know\", she said quietly, stroking her hair.\n\nGwen raised up and looked her in the eye.\n\n\"I don't have to, I want to. Anyone who can give me that much pleasure deserves a reward. It's been a year since anyone besides myself has touched me. You're a perfect fit for post divorce sex. Beautiful, caring, and most importantly, not a man. Now give me some direction, I'm new at this.\"\n\nAnne did give her directions, more with motions and touch than verbally. For someone new at it, she did a really good job.\n\nThey finally dozed off in each others' arms just before daylight.\n\n.................................................. \n\nGwen woke with a start, holding Anne in her arms.\n\nWas last night a mistake? Why did she feel like she was cheating?\n\nNo, damn it! He threw her away. She was free now, she could do what she wanted with who she wanted.\n\nShe found herself crying softly, and Anne woke to tears on her shoulder. Turning, she embraced Gwen as the crying became sobbing. She held her, whispering words of comfort in her ears. When she finally subsided she asked.\n\n\"Feeling regret for last night?\"\n\n\"No, not at all. It's just for the first time, I know it's really over. I'm single now, it shouldn't matter who I choose to sleep with, but I just feel so guilty.\"\n\n\"Baby, baby, It's understandable. It wasn't your choice to be single. I know you still love him. But it's all right, you'll get on with your life, even find love again. You're young, beautiful, and apparently filthy rich. Give it some time.\"\n\n\"I know you're right, it just doesn't feel like it right now. Thank you for being with me. Feel like breakfast?\"\n\nThey showered, ordered breakfast in. Then they talked.\n\n\"How did last night make you feel?\" Anne couldn't help but ask.\n\n\"Fulfilled. Happy. You were my first woman, you know. I never would have thought it would be so intense.\"\n\nAnne cooed happily \"Oh honey, it just gets better. I'm gonna show you so much, if you'll let me.\"\n\n\"If it gets any better, I don't think I could stand it. Ready to hit the beach?\"\n\nWhen they reached the beach and got situated, Anne slipped off her robe, twirling around for her benefit.\n\n\"Do you like it?\"\n\n\"It makes me want to have sex right here on the beach, does that answer your question?\"\n\n\"Come on babe, show me yours.\"\n\nGwen hesitated and felt foolish. Before Hardy, she was never self conscious, preferring nude beaches when she vacationed. She quickly slipped off the robe.\n\n\"Oops! Forgot to put it on. Oh well.\"\n\n\"Show off!\" Anne giggled, sliding the thong down her legs. It took her awhile to get used to, all the bronzed bodies of both sexes stimulated them no end.\n\nGwen noticed her hardened nipples.\n\n\"Now that I go both ways, it's like looking at a sexual buffet. Isn't that blond stunning?\"\n\n\"She is. And so is she, and him, and him, and her, and, oh my.\"\n\nHer eyes were riveted to a light skinned black man, muscled, hairless everywhere, shining with oil, and very, very well endowed.\n\nGwen snickered.\n\n\"If you want him, go get him, we're here as friends, remember? Just use protection, we don't need a gift that keeps on giving.\"\n\nAnne squirted some lotion in her hand.\n\n\"No, I want to be with you right now. Maybe later we can share him. Now, roll over so I can lotion you up. We won't have any fun if you're sunburned.\"\n\nThey lotioned each other, missing nothing. It drew a few admirers. They introduced themselves, flirting lightly. Promised a dance or two at the club.\n\nGwen would relax for awhile, then tighten up remembering. She wished Hardy would have come with her just once, she would have loved flaunting him, knowing he was hers alone.\n\nFor the next two days, they dined, sunbathed, danced, made love.\n\nThe last night they had a group around them. They had made plenty of friends and she was finally relaxed.\n\nStopping to sip her drink, she saw Anne dancing, grinding actually, with the black man she had been admiring. She looked over at their table and whispered in his ear. The whiteness of his smile showed all the way across the darkened room. Holding his hand, Anne brought him over.\n\n\"Last night, lover. Let's make some memories.\"\n\nAgreeing to nothing, Gwen followed them to their suite. They were both naked before the door opened.\n\nAnne dragged him to the bedroom, stroking his erection. Gwen arrived just in time to see her swallow as much of his cock as she could, bobbing furiously. Looking up, she removed her mouth long enough to speak.\n\n\"Come on over here and help me get him off quick so he'll last for us next time, then while he recovers we'll give him a show.\"\n\nGwen dropped her dress to the floor, and walked over, wearing the briefest of thongs. She dropped to her knees and Anne aimed his cock in her direction. Suddenly she had a vision of Hardy.\n\nShe shrieked and ran from the room. Anne left him throbbing and followed her into the other bedroom.\n\n\"I'm sorry, Anne, I just can't do it. It would feel like the final betrayal, and I just can't.\"\n\nAnne wisely soothed her , cuddling her to her breast.\n\n\"I understand, baby. But sooner or later, you're going to have to admit it's over. I'll send him back to his room and put you to bed.\"\n\nGwen took her hand.\n\n\"Don't. I know you've been wanting him since you saw him. I want to sleep alone tonight. Go, enjoy. We'll talk in the morning. Make him remember you for the rest of your life.\"\n\nBending down to kiss her deeply, Anne left with a parting shot.\n\n\"You're a complicated woman, Gwen Canaday. I hope someday I find someone I can love like you loved him. Goodnight.\"\n\nAs Gwen lay there tossing and turning, listening to the sounds of unbridled passion from the bedroom next door, she mentally corrected Anne.\n\n\"It's love, Anne, not loved.\"\n\nThe flight back to Savannah was quiet for awhile, until Gwen started teasing her about the night before.\n\n\"You must have destroyed that poor man. He practically crawled out the door this morning. You hot little bitch, you.\"\n\nAnne brightened.\n\n\"Don't you know it. It's a good thing you didn't join us last night, he might have had a heart attack. I bet he hurts when he takes a leak for awhile.\"\n\nThey both giggled before Anne turned serious.\n\n\"What are you going to do now?\"\n\n\"Go back to Birmingham, resume my life. Stop and smile at the memories I made this weekend. Thank you, Anne.\"\n\n\"I should and do thank you. This was the best adventure I've ever been on. The best resort, the best sex, the best everything. I could get used to this. If you ever want a kept bitch on the side, keep me in mind. I could be very submissive for the right woman.\"\n\nShe was laughing as she said it, but in her heart she hoped it sparked an idea. She found herself in the most unusual situation of her life. She was in love with two people, and they were husband and wife. She was sure being a wife to both of them would be heaven. Putting away her daydreams she asked Gwen a favor.\n\n\"If you and Hardy ever get back together, keep our little adventure a secret. Most men are uncomfortable if they know their woman is attracted to both sexes. It's hard enough to keep the male predators at bay, adding females to the mix is sometimes too much for them to handle.\"\n\nGwen reflected. \n\n\"You're right. and I'm not attracted to women. I'm attracted to you. And, I'm not ashamed of what we did. Best, though, if he never knows.\"\n\n\"You know, not to give you false hope, but I know four couples who have divorced and remarried. If you want him, find a way to chase him. Show him the new you that took so much to build. Go slow, let him get used to you being around, and gradually move in. You've got an advantage, you know him better than anyone alive.\"\n\nGwen reflected on that while the jet left Savannah, formulating a plan, vowing if this didn't work she would never try again.\n\n.................................................\n\nShe went back to her little apartment. Soon she would go house shopping, but right now she wanted the comfort of the familiar. She visited Aunt Daisy a lot, helping her with family research while Marcus was in school. She spent almost every Saturday with Joshua and Hildy, carefully not mentioning Hardy. They understood, but occasionally his name would pop up.\n\nOnce she overheard the female cousins talking about Hardy and some woman named Bonnie.\n\n\"How does he do it? First he marries a rich Yankee, now he's dating a state senator. What does he have that makes successful women swoon for him?\"\n\nGwen almost swooned herself, when she picked up a copy of the Sunday paper and saw the woman pictured in the paper at a fundraiser, Hardy standing at her side.\n\n\"Local girl and now esteemed State Senator Bonnie Parker will be hosting a fundraiser for educational endowments in two weeks at the Country Club. Dinner, dancing, and a silent auction will be featured. Only twelve hundred tickets are available, so purchase them this week, before they're all gone.\"\n\nThere was no mention of Hardy.\n\nShe made sure she had two of the best seats in the house, dressed to the nines, with a date. He was the new a.d.a. brought in to replace her. Paul took her aside when she went to visit Karen and offered her a job.\n\n\"What about the new guy?\"\n\n\"He's on probation, I can already tell he won't work out. He's, to put it politely, a pussy. Defense lawyers are running over him faster than fat people rushing a free buffet table. I couldn't get you to tutor him, could I?\"\n\nShe was bored and it seemed like a good idea. She became an unpaid 'consultant'. It didn't take her long to agree with Paul. He was a pussy. She held it as long as she could, dragged him into an interview room, and ate him up.\n\n\"Grow some damn balls, Jerry, or you'll never make it past probation! These aren't nice people, they're mostly scum of the earth, and would rape and kill their momma if the payoff was worth it. Most are past rehabilitation, and it's your job to keep them off the street and away from decent people. Grow the fuck up and do your job! Otherwise, I hear real estate lawyers make a decent living.\"\n\nShe stomped out of the room and slammed the door. Paul was standing in the hall smiling.\n\n\"Still think you wouldn't make a good district attorney? Think about it, I plan on retiring at the end of my term, and the field would be wide open. The Escobar case would still be fresh in people's mind, and you're still a hero for standing up to the drug lords and getting him behind bars. Gotta go.\"\n\nHe walked off, whistling.\n\nShe stopped by Jerrys' cubicle the next day.\n\n\"Jerry, I need a date Saturday. Dress in your best suit, get a haircut, and be waiting at seven. I'll pick you up. And Jerry, it doesn't mean anything, I just need a body for a few hours.\n\nYou don't have a chance in hell of getting lucky, but the exposure would do you good in the community. You're not bad looking, and it may attract a few ladies. Don't disappoint me.\"\n\nHe never got to say a word before she was gone.\n\nKaren was in the office when she came in and barely held it together until she left. She exploded in laughter.\n\n\"Guess she told you. Better not disappoint her, her balls are a lot larger than yours. Here's a heads up. She's doing this because her ex husband is escorting the guest of honor, and she's still hung up on him. Be careful, he's one big mean sonofabitch, and he still has feelings for her.\"",
        "He rolled his eyes.\n\n\"Oh boy, I can't wait. This is going to be a date from hell. Think I can get out of it?\"\n\n\"Not in the least, you're just arm candy. Smile, be attentive, stay in the background, and everything will be fine. Behave, and she might not make you get your own way home. Have fun.\"\n\nShe was still laughing when she sat back down.\n\nKaren talked to Paul, and he got two pair of tickets, for him, his wife, Karen, and her husband, saying he wouldn't miss this show for anything.\n\n.................................................\n\nGwen made absolutely sure she was perfect. She had Jerry wait until the dinner was about to begin before entering, sweeping in just after everyone was seated, and passing the table of honor as she was directed to her table.\n\nHe was there, with one of the most beautiful women she had ever seen. This was a state senator?\n\nShe had her hand on his arm, laughing quietly at something just said. He looked up and their eyes locked. Time seemed to slow down, and she stumbled slightly. Then they were by them and being seated. It was a miserable evening.\n\nShe had a direct line of sight, and watched as she obviously flirted with him. \n\n\"Bitch, why don't you just mount him on the table and fuck him in front of us.\" She thought as her hand clenched her wine glass so hard it cracked. \n\nPaul, Karen, and spouses were seated with her, and there was a minor scene as they checked her hand and replaced her glass. Hardy looked over, frowning slightly. Once again their eyes met and he raised his glass in salute. She refused to acknowledge him.\n\n\"Well, aren't you Miss Mature this evening\" said Karen, in a warning tone.\n\n\"You wanted to be here, so behave. Making a scene won't make his memories of you any better.\"\n\nThe advice calmed her. She made polite small talk, speaking to people at other tables, people she knew professionally. Aunt Daisy was there, attended by Marcus. People were so used to seeing them together it was almost expected. They raised their glasses in recognition, and she smiled brightly.\n\nThe dinner out of the way, they sat through the\n\ninevitable round of speeches. The keynote speaker, one Bonnie Parker, made an impassioned plea for her charity.\n\n\"Thank you for coming out tonight and supporting my cause. Everyone here is a professional in one field or another, think what your life would have been like without your education. Would you be as fulfilled? Would your family enjoy the same standard of living they have now? Knowledge is power. Take my escort this evening. By his own admission he came up hard, but he pulled himself together, got an education, and went on to be a lawyer with nationally recognized accomplishments.\n\nHe had the good fortune to have a benefactor who funded his cause, getting justice for the poor and less fortunate. Not bad for a good ol' boy from Limestone County.\"\n\n\"There must be more Hardy Wilkes in the world, let's help them achieve their dream. Now, the dancing is about to start. Enjoy the evening, bid on the items donated to our cause.\"\n\nShe left the podium to thunderous applause, stopping to shake hands and exchange greetings with well wishers. Hardy stood and held her chair, earning him a kiss on the cheek. Gwen smouldered.\n\nIt was a very nice combo, playing old classics, waltzes, fox trots, and an occasional Latin piece.\n\nGwen was an excellent dancer, and her card was full. She saw Hardy from time to time, once with Aunt Daisy for a sedate waltz, once with Karen for an uptempo number. She never failed to understand how a man so large could be so graceful. But, most of his dances were taken by the esteemed senator. Gwen almost missed a step the first time she saw them dance.\n\nThen, during a break, she found herself in front of Hardy. He smiled and took her hand.\n\n\"How are you, Gwen?\"\n\nStifling her inclination to say she was miserable, she told him she was fine.\n\n\"Good, I'm glad to see you back. Do you intend to stay here?\"\n\n\"Yes, I have family I'm fond of, and to be honest, New England winters no longer have an appeal to me.\"\n\n\"Good. I'm sure I'll see you, time to time.\"\n\nHe was about to leave, when his date appeared.\n\n\"Hardy, who is this lovely creature. Should I be watching you a bit closer?\"\n\nShe said it in a soft teasing voice, unaware of who Gwen was.\n\n\"Bonnie, please let me introduce you to Miss Gwen...\"\n\nHe almost said Wilkes but corrected himself.\n\n\"Canaday, of the Boston Canadays. Her dad is my boss.\"\n\nShe her hand out.\n\n\"I'm pleased to make your acquaintance. Do you know Hardy well?\"\n\nGwen shook, smirking at Hardy, who was suddenly looking uncomfortable. \n\n\"Oh, Hardy and I go way back. In fact, I can safely say no one has spent more time with him than I, until recently.\"\n\n\"Really? You and I should talk. I'll tell you about his wild youth, and you can tell me about his sedate maturity. It should be fun.\"\n\nShe fished a card out of her purse.\n\n\"I'll be in town a few more days, political stuff you know. Call me at your leisure.\"\n\nBefore she could reply, her handlers hustled her off to do more glad handing.\n\nHardy gave her a small smile and followed her.\n\nKaren came up. \n\n\"Cover your claws, dear. She and Hardy were kids together. There's history there you know nothing about. I don't think there's any romance there, at least on his part. She seems to like him a lot more than I remember, though.\"\n\nThe band started, and everyone resumed dancing. She ran into J.T., Will Robb, and his wife Myrtle, and she danced with both the sheriff and the judge.\n\nIt was the last set, and she could see Hardy talking to the band leader, slipping something into the palm of his hand. He stepped in front of a microphone.\n\n\"Ladies and gentlemen, it's almost time to call it a night. Give yourselves a round of applause for your support of this cause. We're going to do a few more, but by special request we're going to do this number now. All you lovers, married and single, here's your chance to shine.\"\n\n\"Ladies and gentlemen, the tango.\"\n\nA quiet came over the crowd, and Hardy appeared at her side.\n\n\"Would you allow me this dance, Gwen?\"\n\nHe held out her hand and she followed, not trusting her voice. \n\nThey had taken dance lessons together just after they married. He said as much as he enjoyed watching her move, this was one particular dance he wanted her to share with none other. They had practiced it for hours, and danced it every chance they got.\n\nA few couples joined them, but soon dropped out. She was dipped, twirled, dragged. They spun away and into each other in almost perfect movements, as though bound by invisible strings. The band leader had been doing this for a long time, knew the impact of the dance, and signaled his group to keep playing. They were on the floor almost eight minutes before the music ended, and their bodies twined together for the last time.\n\nShe was dipped, dangling in his arms like a feather. He righted her, kissed her cheek, and strode from the floor. The cheers and applause went on for several minutes as she stood alone, savoring the moment.\n\nKaren rescued her.\n\n\"Damn girl, that was hot! It was like watching you make love with your clothes on, right there on the dance floor. It'll be awhile before anyone forgets this fundraiser.\"\n\nShe sat in an exhausted daze while the band finished up. Then went to the ladies room to fix her appearance. She was washing her face when Bonnie came out of a stall.\n\n\"Miss Canaday, your dance was beautiful. I've never seen such a physical expression of love. Hardy finally told me who you were. Dad told me he had been married, but I got the impression it was a local girl. I really would like to talk to you. You have my card, call.\"\n\nShe never called.\n\nShe was in such a good mood she took Jerry home.\n\n.................................................\n\nAunt Daisy helped her find a house close to hers, needless to say in a very old, upscale part of town. Huge lot, five bedroom throwback to the old South, complete with columns and a balcony facing a circular driveway. There was a three bedroom bungalow converted from the stables, and a housekeeper and a maintenance man living there.\n\nThey had taken care of the house and grounds for fifteen years, and Gwen felt no need to replace them. It was a little spooky at first, rattling round late at night, but she came to ignore it. \n\n................................................\n\nIt didn't stay empty long, she inherited a daughter.\n\nMaybe daughter wasn't the right word, she was only fourteen years younger, but definitely baby sister. And she filled a deep void in her life, she gave her someone to love.\n\nHildy called her out of the blue.\n\n\"Gwen Marie, How are you?\"\n\nShe had lived in the South long enough to know, when both your given names were used, you had either screwed up, done something particularly outstanding, or someone needed a favor. If they used all three names, you were in deep shit. \n\n\"Fine, Aunt Hildy. You?\"\n\n\"I'm tolerable. How you like living in that big old house by yourself?\"\n\n\"It gets a little lonely sometimes, but I'm getting used to it.\"\n\n\"That's kinda why I called. I need a kindness done.\"\n\n\"Aunt Hildy, you know I'd do anything for you. What is it?\"\n\n\"Don't make promises too quick, girl. You remember Melissa Sue?\"\n\n\"Of course I do. She was one of the first cousins I met, that day you had me out for the first time. Is she in trouble?\"\n\n\"Not exactly. Her daddy died in a truck accident when she was seven, and to put it mildly, her momma is just plain triflin'. She ran off three weeks ago with some fella just as bad. Nobody has seem them since. Melissa Sue wasn't gonna tell, hopin' she'd come back, but somehow social services found out.\"\n\n\"I'd take her in myself, she's not a bad girl considerin' her raising, but you know Joshua hasn't felt good since Ronnie thumped him on his head. I'm worried about him, bad. He can't farm anymore, we're livin' off his social security and the money Hardy gives us. It's more than enough to take care of us, but it galls Josh he has to take it. If one of the family doesn't take her in\n\npretty quick they'll take her, and foster care will be her future. Can you help me?\"\n\n\"Where is she right now?\"\n\n\"The county got her in a group home. Its' got Joshua fretting bad.\"\n\n\"It'll take me about three hours to get things done and get there. Stay calm, Aunt Hildy, and tell Joshua not to worry, I got her.\"\n\n\"Stop by after you get done, you know how Joshua loves to see you. And Gwen Marie, it's good to have family like you around. Bye.\"\n\nShe called Limestone County Social Services. They would let her go if they had authorization from the courts. She called Paul, and he smoothed the way with the local judge.\n\n\"You better hurry, Social Services closes in two hours, and if they don't have the papers, she'll be there until Monday.\"\n\nShe knew she would never make it, so gathering her strength she called Hardy.\n\nShe skipped the small talk and went right to the point.\n\n\"Hardy, they got little Melissa Sue in foster care, her momma ran off. I got a judge up there willing to give me an order saying I can take temporary custody, but if I don't get it filed before the offices close she'll be stuck there all weekend. Can you help me.?\n\nHardy had more experience with foster care than he liked, so he jumped right in.\n\n\"I'll handle it. Meet me at Grandpas', I'll have her there by the time you arrive.\"\n\nHe could hear the relief in her voice.\n\n\"Thank you.\"\n\n\"Gwen, I need you to promise me, if it's family business and you need help, call me first. Promise me.\"\n\n\"I do, honey, oops I mean Hardy. See you soon.\"\n\nWhen she got there, Melissa Sue was sitting on the front porch swing, looking lost and alone. Mothering instincts kicked in, and she sat beside her, rocking gently. Soon she felt her head on her shoulder, and she put her arm around her. Before long the tears were flowing, and Gwen held tighter, promising her things were going to get better, starting right now.\n\nShe looked up to see Hardy watching them, and she could have sworn he had tears in his eyes. He turned abruptly and went back in. She had an epiphany, this could have been our daughter I'm holding, and her tears dripped into the younger girls' hair.\n\nThey ate a quiet dinner. She could tell Joshua wasn't well and Aunt Hildy was worried. She managed to get Hardy on the porch for a short talk.\n\n\"I'm worried about Joshua. Has he been to the doctor lately?\"\n\nHardy grunted.\n\n\"The stubborn old coot won't let Hildy take him.\n\nI made an appointment for next week, told him I'd drag him there myself if he didn't go. He promised, but his heart isn't in it. Damn Ronnie!\"\n\nGwen had heard nothing about the Escobar meeting, the family had clammed up, but she knew there was now more than just dislike between Hardy and Ronnie now. Roy and his old crew were actively looking for him, but he had disappeared.\n\nAfter supper, she spent a little more time with Joshua, hugging and fussing over him. He complained, but you could tell he loved it. After a kiss and hug from everyone, including Hardy,\n\nshe gathered up Melissa Sue. She didn't even have a suitcase, just two small garbage bags.\n\nAfter they got into her car, she asked if she needed to go get the rest of her things. \n\nMelissa Sue looked down.\n\n\"This is all I have, Aunt Gwen. Do you have a washing machine? I didn't have money for laundry, and everything needs cleaned.\"\n\nGwen was shocked. The poor girl had nothing! She thought back to her pampered childhood, and sighed. She made a vow that no matter where she ended up, the quality of her life was going to improve, drastically.\n\nShe pulled into the parking lot of the local WalMart. It wasn't what she wanted, but it would do for now.\n\n\"Come on, honey. I need to pick up a few things.\"\n\nThe girl was shocked that she was the object of the shopping trip.\n\n\"Just a few things right now, we'll get you a whole new wardrobe over the next little while.\"\n\nMelissa Sue objected, saying she shouldn't spend money on her. Gwen laughed.\n\n\"Baby, your Auntie Gwen is loaded. I mean money hanging out of every pocket, you can't count that high, disgustingly rich. Don't worry, this will probably give me more pleasure than you.\"\n\nNew underwear, two pair of jeans, two tops, two pajama sets, new sneakers. Then feminine products, hair mousse, shampoo and conditioner, skin cream. She held up a tube of lip gloss, looking at it longingly, before putting it down. Gwen had a feeling she didn't have a lot of experience with makeup.\n\n\"Not that one, the color is all wrong for you. These two would probably work, and you need eyeliner, foundation, oh, never mind. I'll pick for now. You can decide which you like best later.\"\n\nThe cart was getting full. They stopped last in the grocery section.\n\n\"Pick out the snacks you want, but not too much junk.\"\n\nIt was a good theory that went to hell pretty fast. Soda, popcorn, chips, ice cream. She did get a pack of yogurt and some fruit to ease her guilt.\n\nMelissa Sue was stunned at the total. She was even more stunned when she saw the house.\n\n\"How many people live here?\"\n\n\"Counting you, two. Come help me unload and put the stuff away, and we'll pick out your bedroom.\"\n\nShe picked the closest room to hers, still insecure. Gwen encouraged her.\n\n\"Good, now we'll be close, and it has a bathroom. Two women in the same bathroom gets too crowded.\"\n\nShe made sure she had her bath, brushed her teeth. She even tucked her in, normally a foolish thing to try with a fifteen year old, but she seemed to welcome it. She sat on the bed and talked for a few minutes, while Melissa held her hand with both of hers. Finally getting drowsy, Gwen eased her hand out of her grip, kissed her forehead, and turned out the lights.\n\nStanding in the hall, she tried to imagine this house full of kids. It made her feel warm for a minute, before reality crashed in. She was almost thirty, and was starting to hear the clock tick.\n\nHow foolish she was for not wanting children! Now, the only man she wanted to give her children was no longer hers.\n\nIt took awhile to fall asleep, she even got up and checked on Melissa twice, marveling at the sleep of the innocent.\n\nShe woke with a start, to see Melissa sitting on her bed.\n\n\"Good, you're awake! Mrs. Hendricks is fixing breakfast, she says you need to give her money for real food if a growing child is going to live here. Good morning Aunt Gwen!\"\n\nShe bent down to give her a kiss, and bounced out of the room. She lay there, enjoying the feeling. Mrs. Hendricks was her housekeeper, and had offered several times to cook for her, but being alone she told her not to bother. That had changed now, she wondered how else her lifestyle was going to change.\n\nBreakfast was interesting, with Melissa and Mrs. Hendricks chattering away. Gwen assured Mrs. Hendricks she would establish a household account and give her a debit card.\n\n\"I'll get one for your husband too, that way he can get what he needs for his landscape project.\"\n\nShe had gotten a really good deal on the house because of the economy and the condition of the house. It was sound, but it and the grounds had gotten run down. The owners paid for bare maintenance, but not for improvements. She saw him trying to revive a rose bush and asked him why he didn't just replace it.\n\n\"No money.\"\n\nShe asked him to come up with a landscape plan, including the installation of a pool, she always enjoyed swimming. He wanted to do most of the work on the grounds, but she talked him into a supervisory role, hiring and supervising the subcontractors. Mrs. Hendricks said it was the happiest she had seen him in years.\n\nAfter breakfast it was time for a serious talk.\n\n\"Melissa, do you want to stay here?\"\n\nShe hung her head, thinking she was going to be asked to leave.\n\n\"Yes ma'am, as long as you will have me.\"\n\nGwen hugged her.\n\n\"Good. In that case, we have to get you transferred here for school. Do you do well in school?\"\n\nMelissa blushed furiously.\n\n\"I like school, but momma had us moving around so much I ended up being held back for attendance.\"\n\nGwen frowned at her mothers' callousness, but decided a little tutoring over the summer would bring her back to her rightful grade.\n\n\"We'll go to your old school Monday, and get your records. I'm not sure what district we're in, but I'll know by then.\"\n\nShe took a deep breath.\n\nI'm glad you want to stay, I want you to stay too. But if you live with me, there has to be some rules.\"\n\n\"First, Mrs. Hendricks is our housekeeper, not a maid. I expect you to keep your room neat and tidy, and not cause her any grief.\"\n\n\"I expect you to be in school when you're supposed to, and get good grades. If you need help, ask. If I can't do it I'll get someone who can.\"\n\n\"I know you're gonna make new friends, and you can have them over and go to their houses, as long as I'm introduced to the parents and approve.\"\n\n\"If they come here, they're your guests and I expect you to be responsible for them.\"\n\n\"I not so old that I don't remember peer pressure, but if you do anything foolish, there will be consequences. I have my own commitments, so I may not always be home, and Mrs. Hendricks may not always be here, so I will depend on your word. Will you give it to me?\n\nGood.\"\n\n\"Now, the big one. You're a very attractive young lady, and I expect boys will swarm around you like flies to honey. No boys in your room, ever. No boys when Mrs. Hendricks or I aren't around.\"\n\n\"That being said, when you turn sixteen, you can go on dates, if I approve. Until then, you may go out with groups.\"\n\n\"That's about it, think you can live with it?\"\n\n\"Yes ma'am.\"\n\n\"Good, now, why don't you get familiar with the house and grounds while I make a few phone calls. Call your friends if you want.\" ",
        "She had only one call to make.\n\n\"Aunt Daisy, I need your help.\"\n\nShe explained about Melissa, and how she wanted to make her life better. Daisy listened to her for about five minutes, before interrupting her.\n\n\"I think I've got it. I'll be over in thirty minutes. Have her ready to go out.\"\n\nWithout waiting for a reply she hung up.\n\nShe found Melissa talking to Mr. Hendricks about flowers.\n\n\"Honey, go freshen up. Your great aunt Daisy is coming by and wants to meet you.\"\n\n..................................................\n\nDaisy showed up on time, with Marcus. She didn't get out. Marcus rang the bell, and told them they were expected in the car. Of course they were in his Cadillac.\n\nDaisy had Melissa sit in the back to 'get acquainted'. Gwen had no idea where they were going so she just decided to trust Aunt Daisy and spent the time talking to Marcus about history. He was lead intern on an excavation of a Civil War site, and was very excited about it.\n\nThey stopped in a part of uptown Birmingham Gwen had been through but hardly noticed.\n\n\"Why are we here?\"\n\n\"Clothes. The girl needs school clothes, and our family has been buying clothes here for six generations.\"\n\nIt was a small shop, but Gen realized they were in the hands of experts and relaxed.\n\nThey measured Melissa from head to toe, making notes. When they were done they brought out a small selection of dresses they thought would be appropriate. Gwen, who had been dressed by some of the top designers in the world, was awed by the craftsmanship. \n\nDaisy picked four without consulting Gwen or Melissa. She took Melissa by the hand.\n\nNow, child, I've picked out the basics, you pick three more.\"\n\nIt took another hour of fittings and lively discussion before she had another three.\n\nDaisy stood abruptly. \n\n\"Time to go. We got other people to visit.\"\n\nMelissa was shocked.\n\n\"Aren't we going to take the dresses?\"\n\nDaisy laughed at her confusion.\n\n\"No, they'll be delivered later. They have to be tailored to your exact measurements. If your weight is going to change, make sure you lose instead of gain, it's easier to take in than let out.\"\n\nNothing was said about payment, so Gwen decided to ask Daisy later. Marcus was dozing in the car, saying he would feel more comfortable in a cave filled with rattlers than a dress shop. They left him, walking three doors down.\n\nIt was a shoe store, and they spent ninety minutes picking out four pair, two flats, two with one inch heels. The colors coordinated with the dresses. Daisy said anything higher on a young girl looked cheap, except for formal occasions. Once again, payment was never discussed.\n\nOn the way to yet another shop, Melissa worked up the nerve to ask Aunt Daisy why she needed so many dresses.\n\n\"Because the dress code at Pleasant Hill Academy states that you can only wear slacks on Friday, the rest of the week is dresses or skirts only. And slacks means slacks, not jeans.\"\n\nMelissa and Gwen were stunned. Everybody who was anybody in the state wanted their children to attend Pleasant Hill, but the waiting list was three years long. The place was practically a leadership factory for the South.\n\n\"Aunt Daisy, how are we going to get Melissa in Pleasant Hill, you know how long the waiting list is?\"\n\n\"I'm the principal financial donor, you have no idea how expensive it is to run. If it weren't for alumni support, it would have closed years ago. Our family has been attending the school since it opened. I never thought I would get to see another family member attend, you have no idea how much it means to me.\"\n\n\"Shouldn't we ask Melissa if she wants to go there?\"\n\nDaisy snorted.\n\n\"Your generation, too soft on your children! But let's ask her, see if she's willing to crush the heart of an old lady and blow the opportunity of a lifetime. Melissa Sue Wilkes, would you like to attend Pleasant Hill?\"\n\nMelissa had her head down, and her answer was barely audible.\n\n\"Yes.\"\n\nDaisy tapped her cane.\n\n\"Speak up child, old ears aren't as good as they used to be.\"\n\n\"I'd love to go to Pleasant Hill, Aunt Daisy, but I'm just a little redneck girl with no manners. What if I don't fit in? What if they're mean to me? What if they make fun of me?\"\n\nDaisy gave her a severe look.\n\n\"No one will make fun of you or be mean for long.\n\nYou've got Howe blood and money behind you, Canaday money behind you, and if we have to pull out a big stick, we've got Hardy Wilkes behind you. Nobody is dumb enough to buck that combination for long. Now, give your old aunt a thank you kiss.\"\n\nMelissa kissed her cheek and held her hand the rest of the way home, talking quietly and listening intently.\n\nWhen they arrived home. Daisy gave Gwen and Melissa both orders. Melissa was to visit Daisy twice a week for instruction in the proper behavior of a Southern lady, and Gwen was to be there for at least one session a week.\n\n\"You've got pretty decent manners when your Yankee upbringing doesn't get in the way, this will just fine tune the details. Now that I got the important wardrobe items out of the way, she needs normal teen casual clothes. Nothing too trashy or revealing, remember who you represent, girl! You two can bond over that. Now, give me a kiss and hug, and I'll see you soon.\"\n\nWhen she left Gwen apologized to Melissa.\n\n\"I'm sorry, baby. I just wanted a little advice, I didn't mean for her to take over your life.\"\n\nMelissa looked at her like she was crazy.\n\n\"Are you kidding? I just got a whole wardrobe of custom tailored clothes, a guarantee into the most exclusive school in the South, and hopefully the love and backing of probably the two richest women in the state. The luckiest day of my life was when I met you. Thank you. I'll do my best to make you proud.\"\n\nThe hug was intense, Melissa was trying to put love and gratitude into every cell.\n\n\"Well,\" she grinned, \"what are we gonna do the rest of the weekend?\"\n\nGwen had been thinking about it. The first thing they did was take the Hendricks to a car dealership, after asking if they had a brand preference. Mr. Hendricks liked Chevrolet, so the stopped there first. When they left, he was driving a three quarter ton pickup, his 'company truck'. \n\nMrs. Hendricks had always admired her sisters' Dodge van, so they went there and bought a top of the line Town and Country. She could use it to take Melissa places when she wasn't available.\n\nThen, they tried out four wheel drive SUVs until she settled on a Range Rover. She had purchased her beloved little Focus, and she secretly thought it would make a great starter car for a teenage girl.\n\n................................................ \n\nThey managed to go to some upscale department stores for her 'casual' clothes, and she started to wonder if she could use another closet. All the clothes she had owned her whole life didn't add up the volume she had now.\n\nGwen took her to a salon to have her ends trimmed and hair conditioned. They also got manicures and pedicures while they were there, a first for Melissa. \n\nSunday night Gwen heard noises from her room and went to check on her. She was lying across the bed, crying.\n\nShe rushed to her side.\n\n\"what's wrong, baby?\"\n\nShe sniffled.\n\n\"I'm afraid. Afraid this is just a dream, and I'll wake up in my old trailer. Afraid if I wake up and I'm still here no one will like me at school. I wasn't raised rich, I won't know how to act.\"\n\n\"Honey, honey, it is a dream, but it's mine. You'll do just fine. Remember, you're representing two of the oldest families in the state, Wilkes and Howe, and their blood runs in your veins. I've read a lot of history on both sides, and cowardice doesn't seem to run in the family. Now, go to sleep, I want you rested for tomorrow.\"\n\n...............................................\n\nShe was escorted to school the next day by both Daisy and Gwen, and the headmaster all but threw roses in front of them as they walked.\n\n\"I can't believe it, a Howe back in Pleasant Hill, order is restored to the universe!\"\n\nThey reviewed her academic records, and it was agreed she would spend half the day in regular classes, half being tutored privately, to get her back in the right grade for next year. She proved to be bright, willing to work hard, and goal oriented. Her biggest fear was disappointing Aunt Daisy and Aunt Gwen.\n\nShe cautiously made friends. Aunt Daisy had developed her self confidence by taking her out to meet her friends, many of whom were grandparents or great grandparents of her classmates. She actually met some of her schoolmates at their homes.\n\nMelissa was an intelligent child, and the old maxim about being silent and thought a fool versus opening your mouth and removing all doubt stood her in good stead. She said little at first, watching and learning. Soon she had a circle of friends and was doing very well. The fact that everyone knew how much money and power was backing her, and that she was just plain 'hot', helped considerably.\n\nAfter a few months, Gwen hired a private investigator and tracked down her mother in Florida.\n\nShe appeared at her trailer door one day and gave her a choice, sign over permanent custody or come back to Alabama and be prosecuted for felony child endangerment and abuse. If she signed, a small cash exchange would take place.\n\nHer mother remembered her as an a.d.a., and quickly signed. Before Gwen left she gave her a picture of Melissa, and one of her in a group at Pleasant Hill.\n\n\"She has a good life now. If she wants to see you I won't stop her, but I will watch you like a hawk. Here's her cell number.\"\n\nAs far as she knew she never called.\n\nRight after Thanksgiving she asked her if she'd like to see her mother. Melissa didn't even look up from her homework.\n\n\"I see my mother every day.\"\n\nGwen barely made it back to her bedroom before the tears started. When she settled down she took Melissa out and bought her a top of the line smart phone with matching tablet.\n\nOne unexpected side effect for Gwen from Melissa moving in was her father. He loved her, and visited a lot more often now that she had the big house. He even took her to Boston for a holiday. She came home with a paper, showing them together at a charity event. The byline identified them as Greg Canaday, with granddaughter Melissa Sue Wilkes. She framed it and hung it in her room, and from that day forward he was grandfather.\n\nHe saw Hardy from time to time, mostly for business. He was thinking about opening his own office, and Greg talked him out of it.\n\n\"You've got a good life. Why try to fix something that's not broke.\"\n\nHardy didn't have a good life. He had family, he had friends, but he was alone. He had finally filed the divorce, when Gwen got the final notice she cried for two days. He could never seem to find anybody that measured up to what he had with Gwen, and he had pretty much stopped looking.\n\nGwen finally starting dating again, even allowing one man into her bedroom while Melissa was on a sleepover. Other than physical relief, she felt nothing.\n\nThey both wandered aimlessly through life until, as usual, cataclysmic events threw them together again.\n\n..................................................\n\nGwen was sound asleep when Melissa burst into her room crying. She immediately hugged her.\n\n\"What is it? What's wrong?\"\n\n\"Grandpa Hardy had a heart attack. Aunt Hildy called, she must have dialed my number by mistake.\n\nThey're airlifting him here, he should be arriving soon.\"\n\nThey were up and dressed in a flash, breaking speed limits to get to the hospital. Hildy was there, practically in hysterics. She clung to her\n\nlike a drowning person. It was five minutes before she could understand her.\n\nThey were having a hard time getting him admitted because he was on Medicare. The bulldog negotiator in her surfaced with a vengeance as she literally charged the desk.\n\n\"You've got my grandfather here. What's this bullshit about admissions? Never mind, here.\"\n\nShe took a checkbook out of her pocketbook and signed one, handing it to her.\n\n\"Fill in the blanks later. I want the best, top of the line, you hear me? If I find out he didn't get the best care possible, I'll pop so many lawsuits on you this hospital will go under.\"\n\nA deep voice spoke from right behind her.\n\n\"And when she gets done, I'll start. Now get your ass in gear!\"\n\nShe turned and buried her head in Hardys' chest, sobbing. He gently stroked her hair and back.\n\n\"It's all right baby. We'll get him the best care possible. Now, can you go help Aunt Hildy settle down? I think she has Melissa Sue scared to death.\"\n\nJoshua had triple bypass surgery four hours later, as soon as the team of specialist were flown in.\n\nSo many relatives showed up they almost had police direct traffic, and filled waiting rooms on every floor. The staff marveled how a simple old man could be so loved.\n\nGwen was shocked to find out he was eighty one, she thought he was much younger.\n\nHe asked to see Hildy, Gwen, and Hardy before surgery.\n\n\"I wanted to make sure I talk to you , just in case. Hildy, you were the daughter I lost, I don't know why you chose to stay with a grumpy old man, but thank you. I love you very dearly.\"\n\nHildy collapsed, it was the first time in all the years they were together he ever told her he loved her. \n\n\"Gwen, if any one ever told me my favorite granddaughter would be a Yankee, I would have laughed. But you are, and you've become very important to me. I love you.\"\n\nGwen let loose with her own torrent of tears.\n\n\"Hardy, son, I'm proud of you. I tried to teach you right, and more than once it didn't take, but you turned out just fine.\"\n\nHardy has his own tears.\n\n\"Now, just in case I don't make it, Hardy, Gwen, I need to tell you something.\"\n\n\"You guys are idiots! I've never seen two people more in love, more foolish in my life. You love each other, you're miserable alone. Why else haven't you guys remarried? I won't be vain enough to try to get you to make promises to an old man who might be about to die, but think about it. I hope I live long enough to say 'I told you so ' when you remarry. There! I've said what the whole family has been thinking since you both moved down here. Now, let me get a little rest before they gut me like a deer.\"\n\nThey were silent when they left, looking at each other with unspoken questions and hope.\n\nJoshua survived, but was in the hospital for an extended time due to infection. Gwen and Hardy spent as much time as possible with him.\n\nThey started eating dinner together, keeping conversation to safe topics, Melissa Sue, Joshua, Hildy, the family. Hardy likened the time to kissing a porcupine. Going very slowly, avoiding the quills.\n\nGwen was hopeful, Melissa even teased her about getting a new dad. Weekends at the farm became the norm, where Gwen assumed the role of Hildy while she was at the hospital.\n\n.................................................\n\nHardy was starting to smile more. He started looking forward to evenings with Gwen. Josh would grin and tell them to spend time with each other instead of a stubborn old man.\n\nGwen teased back when Hardy wasn't around, telling him he might just live long enough to say I told you so.\n\nCrystal Anne had finally given up on Hardy, and had started dating a fine young man her age, a state trooper.\n\nShe had dropped some forms by his house, and was getting her pistol, a Charter Arms thirty eight, a five shot revolver she could easily slip in her purse, out of his gun safe. Hardy bought it for her when she moved into he own apartment, taught her how to use it, and she turned out to be a pretty good shot. She and her boy friend were going to the gun range.\n\nThe doorbell rang and he called out to Crystal, telling her her beau was here.\n\n\"Don't out shoot him, girl. He'll never live it down.\"\n\nHe opened the door to come face to face with Ronnie Wilkes. He looked terrible, dirty, malnourished, wild eyed. That he was on drugs was a given. He had dropped out of sight for awhile, taking the money Don Vincente had given him and hiding in Mobile. He started doing drugs to ease the bitterness he felt and before he knew it was hooked. He fumed and obsessed over Hardy, blaming him for all his problems. When the money ran out he did strong arm robberies, picking on the old and the weak. The police were starting to look for him when an old man wouldn't let go of his wallet and he hit him a little too hard. The old man died on the street. He had to get out of town, so he knocked off a drug dealer and boosted his car, taking his drugs, money, and a nine millimeter he found in the dash.\n\nThe first thought Hardy had was to warn Crystal, but before he could speak, Ronnie fired into his body four times. Hardy fell to the floor, and Ronnie took deliberate aim at his head.\n\nCrystal had rushed to the living room after hearing the shots, and took everything in at a glance. She didn't hesitate, didn't aim, just raised her pistol and fired. She missed, but not by much. The bullet left a burn across his arm.\n\nHe ran from the house. Crystal didn't chase him, dropping to the floor beside Hardy, screaming. Flipping out her phone she called 911, and her boyfriend.\n\nHe was almost to the house when the car went flying by him. He called it in while he parked. Crystal had blood all over her as she tried to stop the flow. He knew he was looking at a dead man.\n\n...............................................\n\nBut he lived, barely. Air lifted to the same hospital Josh was in.\n\nGwen heard the chopper, she was used to it by now. She glanced at the clock, Hardy was late and hadn't called. She went down to the main lobby to wait on him.\n\nShe heard the nurses chattering as she passed their station.\n\n\"I heard they don't expect him to make it, he's lost a lot of blood. Said he'd been shot like a dozen times\"\n\n\"If anybody can make it he can. That's the toughest man I ever saw. Somebody needs to tell his ex wife, they're always in here about now to see his grandpa, that grouchy old man in 412.\"\n\nTime slowed as she turned back to the desk. One of the nurses saw her and clapped her hand over her mouth. Gwen twirled and ran to the emergency room.\n\nThey could hear her screaming down the hallways as she ran. She got there just as they wheeled him in. Despite their best efforts, blood was seeping around the bandages. \n\nShe bowled over two paramedics and an orderly, fighting savagely to get to the gurney. He was still, motionless, even he blond hair seemed listless. For one brief second she thought he was already dead, but his hand fluttered like he was reaching for something.\n\nShe immediately latched onto it, refusing to let go. He was trying to say something. They hadn't restrained his arms, and he pulled out the ventilator.\n\nHis eyes were open, but he wasn't seeing.\n\nBlood was frothing on his lips, one bullet had punctured a lung.\n\n\"Tell Gwen.............tell.............\"\n\nHe lapsed into oblivion.\n\nGwen remembered screaming she loved him over and over until she became incoherent. She felt a prick, and collapsed.\n\nAwareness found her in a bed, strapped down. Hildy, Daisy, Melissa, and countless relatives were clustered round the room and halls.\n\n\"WHERE'S HARDY?\" she screamed, struggling with her restraints.\n\nHildy and Daisy went to her side, trying to sooth her.\n\n\"Calm down, child. He's in surgery, will be for awhile.\"\n\n\"How long have I been out?\"\n\n\"Three hours, they had to sedate you to treat Hardy.\"\n\nShe started trying to get them to remove the restraints.\n\n\"Compose yourself, you're not doing anybody any good strapped down. Your young'un is scared to death, look at her. Now, be strong, be calm, and they'll let you go.\"\n\n\"You have to promise not to try to get to Hardy, he won't know you're there, and you'd just fret yourself needlessly.\"\n\n\"Go see Grandpa Hardy, I'm sure he's wondering why neither one of you has been there.\"",
        "It took an hour, but she became rational again.\n\nHer training helped her tremendously when she went to see Josh, apologizing for the lateness, saying Hardy had been called out of town on a case, and Melissa had an emergency at school.\n\nJoshua could see she was upset.\n\n\"Don't worry, girl. Hardy will be back soon, you can count on it. Listen, there's been something I've been wanting to tell you. I made a will.\n\nI didn't use either one of you because it was a surprise. I want you to have the farm, on the condition that Hildy can live there and you take care of her as long as you live. Also in my will, although I can't enforce it, is that you name your first son Joshua Hardy Wilkes. Will you do that?\"\n\nThat started a fresh round of tears, and a solemn promise she would do everything in her power to honor his request.\n\n...............................................\n\nHardy had a collapsed lung, lost a kidney, one bullet broke two ribs, another clipped his small intestines and they had to shorten it four inches. They didn't realize it until they washed the blood off, but another bullet had chipped the top of his left hipbone.\n\nDespite all these wounds, he survived.\n\nHe was in a coma for six days. Gwen, Daisy, Hildy, Greg[he came immediately when she called], and even Roy took turns watching over him and Joshua. For the first time, every bedroom in her house was full. Mrs. Hendricks was in heaven taking care of everyone.\n\nA massive manhunt was launched for Ronnie Wilkes, but he dropped off the face of the earth.\n\nWhen Hardy was finally awake and coherent, the first thing he did was beg Roy to watch over Gwen and Joshua.\n\nRoy grinned, leaned over and whispered in his ear.\n\n\"Don't concern yourself about Ronnie, cousin. I have it on good authority, to quote our Northern counterparts, that tonight he 'sleeps with the catfish'.\"\n\nHardy smiled and shook his hand.\n\nWhen he became conscious Gwen never left his side except to shower and sleep occasionally. He fussed but she just smiled.\n\n\"Oh no. I've got you, you can't get up and leave, and you can't physically throw me out. You can try to ignore me, but you've lived with me long enough to know that'll never work.\"\n\n\"No Hardy, I'm going to do something I've wanted to do for a long time. Find out who you really are. Not the stories, not the bullshit, not the evasions.\"\n\n\"You can fight me if you want, but you can't go anywhere for a while, and I'm not leaving. If you try to throw me out I'll bribe the nurses. Give me too much shit and I'll have you declared incompetent due to medical conditions and move you into my house. So give.\"\n\n\"Maybe I'll hear so much negative stuff I'll leave you alone forever, but I doubt it.\"\n\nHe sighed, hit the button that boosted his pain medication, and went to sleep.\n\nShe was there when he woke up.\n\n..................................................\n\nA week went by. Finally he caved slightly.\n\n\"Ask me one thing a week, and I'll answer.\"\n\n\"Did you really do all the things they said you did before you went into the Marines?\"\n\nThe laugh was long and mirthless.\n\n\"If I had done everything that was attributed to me, I would have had to started when I was ten.\"\n\n\"Then why did you take credit?\"\n\n\"I didn't. I just didn't deny it either. Do you know the first rule of terrorism?\"\n\nShe shook her head.\n\n\"Kill one, scare ten thousand. If people thought I was bad, I was. It worked out, the really bad guys stayed in the background, and the cops couldn't prove anything because I never actually did it. People feared me, and they left me alone. Don't get me wrong, I did bad things, but I was never much into inflicting pain, so sometimes just the hint I might do something brought them around.\"\n\n\"But I've seen you fight, you're pretty good at it. Where did you learn that stuff?\"\n\n\"My dad had a friend, a guy from the Philippines, one of the smaller islands. He was in jail with him for awhile. He was five feet tall and probably weighed a hundred pounds, but he was the scariest man I ever saw. People in prison steered clear of him.\"\n\n\"He was an expert in Kali and Dumong, two of their martial art styles. He took a shine to me and taught me a lot. He was a lonely man, and my family was good to him. Grandpa let him live and work on the farm for awhile.\" \n\n\"One thing about their martial arts, there was no show in them. Every move was designed to kill or incapacitate, and their weapon and knife work was a true art form.\"\n\n\"That's why everyone thought I was so vicious, because of my fighting style. Luckily, I never killed anybody, but I did break a few legs and arms.\"\n\nAnother week went by, and he thought he might get released.\n\n\"Did you really beat up your sister and brother in law? And did you kill her lover?\"\n\n\"Yes, yes, and no.\"\n\n\"You know more than anyone how I feel about cheaters, and I was really immature at the time. I didn't really beat her up, but I did slap her around.\"\n\n\"I beat the shit out her lover, though. And the only reason I beat up my brother in law was because he jumped me, blindsided me one night. I thumped him pretty good for that. He was ashamed to let people know he jumped me from behind and I still beat him up, so he told my sister I was going to kill him and they moved.\"\n\n\"Why didn't you tell anybody the truth?\"\n\n\"Remember, the rule of terrorism. If people thought I would do that to my own family, what would I do to them, strangers mostly.\"\n\n\"So what happened with her lover?\"\n\n\"He tried the same thing my brother in law did, only he used a bat, fractured my arm. I still nearly killed him, and told him the next time I saw him I would. He left that night, didn't even pick up his clothes. His car was being repossessed, so he left it. I took an old jacket he had left, and dropped it way out in the country by a pond. That's how that rumor got spread.\"\n\n\"Don't you miss your sister?\"\n\nHe went silent for a while.\n\n\"Yes, she was pretty much all the family I had except for Grandpa, and we were close as only siblings who had endured great personal trauma can be. I hear she has three kids now, one in her teens.\"\n\n\"Why didn't you try to make peace with her?\"\n\n\"We parted on pretty rough terms. She called me after they left, chewed me out pretty good, said she was ashamed to be my sister, and some more pretty rough stuff. I thought it best to leave her alone.\"\n\n\"Do you know everybody in the family thinks your banished her, and she's afraid to come home?\"\n\nHe bristled.\n\n\"She could come home anytime she wants. I would never hurt her again. It's that asshole husband of hers that keeps her from coming.\"\n\nThe emotional conversation was tiring him, and they stopped for the evening.\n\n................................................\n\nJoshua gave Gwen the number for his sister, and she called the next morning. It was an emotional conversation, especially when she heard about the medical conditions of both.\n\n\"Would you please come and see them? I can say for a fact it would do them both a world of good.\"\n\n\"I'd love to, but I don't have the money for gas, even if my old car would make it.\"\n\n\"Does your husband have a car?\"\n\nThere was a bitter laugh.\n\n\"I'm sure he does. The problem is I don't know where it or he is. He left me almost two years ago. Haven't seen him since.\"\n\n\"Things have changed since the last time you talked to the family. You got some rich relatives now. There will be a rental car in your name in Asheville by ten tomorrow. It will be gassed up and ready to go. Can your car make it that far?\"\n\n\"I think so, but I still won't have traveling money.\"\n\n\"There will be a debit card at the desk along with the keys. It will have twenty five hundred on it. That should cover meals and gas, shouldn't it? Please, it would mean a lot to us.\"\n\n\"I guess I could, but....\"\n\n\"Oh, be sure all the kids come. If there's one thing we love, it's more cousins. See you tomorrow night.\"\n\nShe wondered where she was going to put them, her house was actually full. Aunt Daisy came to the rescue.\n\n\"I've got nine empty bedrooms. It'll be good to hear children in the house again.\"\n\nPeggy Wilkes Smith and family were overwhelmed when they arrived. Introductions were made that they were sure they would never remember.\n\nGwen and Daisy took them in hand, taking them to dine before settling them in. Thirteen year old Peggy Jr and Melissa hit it off, so they decided 'little Peg' would share her bedroom.\n\nGreg was amazed when he saw her, she looked like a smaller version of Melissa.\n\n\"Damn, those Wilkes genes sure make pretty girls, too bad about the boys.\"\n\nLittle Peg blushed furiously, but loved the compliment. She was enthralled when Melissa told her he was her great uncle.\n\n\"He's a Yankee, but don't hold that against him. He's like super rich, so suck up to him, girl! And he's also full of bull, you'll see, we got some fine looking men in our family, wait 'til you meet your uncle, kinda makes you sorry you're related to them.\"\n\n\"Melissa Sue Wilkes!\" said Greg and Gwen at the same time, but it was too late, she was pulling her cousin along towards her bedroom and sticking her tongue out at the same time. They grinned at each other.\n\n\"You've spoiled her too much\" said Gwen.\n\n\"Like mother like daughter\", he shot back.\n\nIt was true, Gwen had officially adopted Melissa two months ago. It was one of the best days of her life. She and Melissa cried almost the whole day, smiling through the tears.\n\nThey let Peggy go in alone the next day, without introduction. She stayed for two hours before she came back out. Her eyes were red and puffy, but she was smiling, looking at peace for the first time since she arrived.\n\nGwen went in, to see Hardy with his head bowed, looking exhausted. She hugged him, softly, stroking his hair. He took her hands, kissing them gently, a gesture she remembered well. It was of his most intimate touches.\n\n\"Thank for this, honey.\"\n\nHoney? He called her HONEY, for the first time in almost three years. Her own tears came as she nuzzled his hair. He was coming back to her, she just knew it.\n\n................................................\n\nHardy left the hospital for a month in a rehab clinic. His muscle tone was almost completely gone, and the struggle to return to normalcy was horrendous. He learned to live with pain all over again. While he was there he had three surprise visitors.\n\nMajor Stein, Rabbi Bill, and Captain Anne Burnside.\n\nThey shook, commented on how each other looked.\n\n\"You look like shit, Hardy. You seriously need to develop new hobbies. If you were a cat, you'd be on your tenth life by now.\"\n\nMajor Stein smiled as he said it.\n\nBill added a few comments of his own, also in the same vein. Then they got serious.\n\nCaptain Burnside, a little privacy, please. Why don't you take his companion for coffee?\"\n\n\"Yes sir.\"\n\nShe spun on her heel and left the room.\n\n\"Miss Canaday, would you accompany me please?\"\n\nThey stopped by the restroom on the way out.\n\nOnce they made sure they were alone, they embraced and shared a kiss.\n\n\"Anne! It's so good to see you. Why are you here?\"\n\n\"Officially, I'm the new adjutant to Major Stein. Unofficially, I was dying to see you. How are you, baby girl?\"\n\n\"I'm doing great. I'm a mother now, did you know?\"\n\n\"Really? When did that happen?\"\n\n\"About a year ago. Wanna see pictures?\"\n\nBy now they had entered the coffee shop and given their orders. Once seated, she opened her purse and took out a picture of Melissa.\n\nAnne looked at the attractive young girl.\n\n\"Wow, what's in the water down here? She's gorgeous! How old is this girl?\"\n\n\"Seventeen, they grow up so fast, don't they?\"\n\nGwen giggled.\n\n\"Stepdaughter? Her dad must be a hunk.\"\n\n\"No, full daughter, adopted. Her dad died when she was young, and her mother abandoned her. I kinda got her by default, but it worked out great.\"\n\n\"No man then? I kind of hoped you would have given me a call.\"\n\nGwen took her hands.\n\n\"What we did was special, beautiful, but it was a once in a lifetime experience. I'm glad I did it, glad it was with you. But there is a man in my life now, and it's getting more serious everyday.\"\n\n\"Who? What's he like? Is he handsome, rich, is he in love with you?\"\n\n\"Yes, yes, and I think so. We've both just gotten over a failed marriage, so we're taking it slow.\"\n\n\"Does mystery man have a name?\"\n\n\"Yes. His name is Hardy Wilkes.\"\n\nAnnes' hand flew to her mouth.\n\n\"Really?\"\n\n\"Yes, really. We haven't told each other yet, but it's coming, soon, I think.\"\n\n\"I'm so happy, give me details.\"\n\nShe filled her in on her life since she last saw her.\n\n\"Wow, why can't my life be like that!\"\n\n\"It hasn't been candles and soft music. It was rough. I gave up, a couple of times, but I couldn't let go. I have great hopes for the future.\"\n\nThey were gone over half an hour. The major was frowning.\n\n\"Sorry, sir. Long line.\"\n\n\"It's all right. We're done here.\"\n\nMajor Stein shook his hand.\n\n\"Hardy, have a great life. Our sessions are over, but if you feel a need, call me.\"\n\n\"Miss Canaday, a minute of your time? We can talk while we go back to the car.\"\n\nHe got halfway there, when he stopped.\n\n\"Damn, forgot my briefcase. Will you get it for me, Captain? Good. Give us about five minutes, would you?\"\n\n\"Yes, sir.\"\n\nShe knew he was giving her an excuse to talk to Hardy.\n\nShe hugged him, hard as she felt he could handle. Gave him a fierce kiss.\n\n\"It is so good to see you, Hardy. I'm glad you're still alive. I've missed you.\"\n\n\"Anne, I've thought of you often. Is your life good?\"\n\nShe shrugged. \n\n\"You know, married to the Army. Six and a half more years. Then I'm going hunting. My soulmate is out there somewhere. Just my luck, I had two good candidates, but they're already married.\"\n\nHardy grinned.\n\n\"If they're married to each other, you should seduce them both. Think of the possibilities.\"\n\nShe had never told Hardy she was bi, so she laughed it off.\n\n\"Not likely, they've got a bad case of tunnel vision. They can only see their mates. My time is up, I have to go. If I never see you again, I hope you get the happiness you deserve. Remember me fondly, as I will you.\"\n\nIt took her a few minutes to clear her eyes.\n\n.................................................\n\nFinally, he was a functioning human being. He had caved to Gwen and Greg to stay with them, to make it easier to get to his outpatient therapy appointments he said. He wasn't up to driving, so they alternated taking him. Gwen used her time in the car to continue her questioning.\n\n\"Did you really take a couple of hookers away from Big Daddy?\"\n\n\"Yes, but not for the reason you think. I took them to piss him off and teach him a lesson. He had been easing into my business, trying to branch out. I wanted him to know what it felt like when someone started messing with his livelihood.\"\n\n\"I helped one out once, got an abusive john away from her. He was beating her pretty bad. Big Daddy beat her when the john complained.\"\n\n\"She got wind he was going to roll over on a couple of cousins, take their business while they were in jail. She took a big chance by telling me.\"\n\n\"His plan didn't work, and he put her in the hospital. I thought that was a good idea, so I put him in the hospital. She got out before he did, so I took her and his best earner and got them where he couldn't get to them.\"\n\n\"Were they grateful?\"\n\nThe beat up one was, the other not so much, she didn't like how I treated them.\"\n\n\"Did you make them work for you?\"\n\n\"No, I locked them in rooms for four weeks. He had hooked them on drugs to control them. It was cold turkey from hell. I had them way out in the country, nobody could hear them, so I just let them scream. On the fourth week I took them to Doc Thomas for physicals, both had mild VD, and he cleared it up for them.\"\n\n\"What happened to them?\"\n\n\"I took them to Montgomery, got them a place to stay, gave them some money. Told them to have a good life and not make the same mistakes.\"\n\n\"Did they listen?\"\n\n\"One did, the one that got beat up. The other showed up a month later, and was back with Homer in two weeks. Some people you just can't help.\"\n\n\"The other showed up a week after that, said she was lonely. She stayed with me for about a year, before meeting the man she married and moving to Mobile. They got four kids now. She told him early on what she used to do, and he said he was glad to know he wasn't the only one who wasn't perfect. She fell in love on the spot.\"\n\n............................................\n\nThe next time they were in the car, she asked him a question that had bothered her for years.\n\n\"Tell me the story of you and Crystal Anne.\"\n\nHe surprised her.\n\n\"No.\"\n\n\"What?\"\n\n\"I said no. You want to know that bad, get her to tell you.\"\n\nScrewing up her courage, she called her.\n\n\"Crystal, Gwen here. Would you have lunch with me?\n\nIt's about Hardy, and he knows I was going to call you.\"\n\nCrystal seemed reluctant.\n\n\"All right, but the first time you bad mouth him, I'm gone.\"\n\n\"It's not about him, It's about you and him. Please?\"\n\n\"One o'clock, be there, the Gin. Don't be late or I'm gone.\"\n\nThe Gin was at one time a working cotton gin. When cotton gave way to synthetic fabrics, it went empty for years. It was almost derelict when a chef got the building for almost nothing as part of a downtown revitalization project. Stark brick walls, uneven wooden floors, the place stayed packed.\n\nGwen was twenty minutes early, but still only beat Crystal by about five minutes.\n\nThere was no small talk, they ordered and ate in silence.\n\nGwen pushed her plate away, finally, too nervous to eat.\n\n\"Thank you for coming.\"\n\nCrystal was not going to be easy on her.\n\n\"I didn't come for you, I came for Hardy. I called him, and he said to tell you anything you wanted to know. What do you want?\"\n\n\"Everything. How you met, how long have you known each other, anything you want to tell me.\"\n\n\"Cut to the chase. You want to know if I've ever screwed him, don't you?\"\n\nGwen was embarrassed but shook her head yes.\n\n\"Short answer? No. Not ever, and look at me, I'm just as hot as you are. Why? Because he loves me.\"\n\n\"Not like he ever loved you, I became his baby sister, and I could never get him to change his mind.\"\n\n\"While you were growing up with a platinum spoon in your mouth and doting parents, I was growing up in the projects with an alcoholic mother.\"\n\n\"Things were bad but tolerable, until these sprouted out.\"\n\nShe hefted her breasts, causing the man at the next table to choke on his tea.\n\n\"Suddenly I wasn't just the ragged kid the guys had to put up with to score with my mom, I was fresh meat. The fact that I was thirteen didn't bother them a bit, and when I complained to my mom, she said I had to learn sometime.\"\n\n\"My older brother ran with Hardy some back then, so I knew who he was. My brother kept the guys at bay while he was around, but in a fit of stupidity decided to rob a store alone. The clerk pulled his own pistol, and when the smoke cleared he had a bullet hole in his leg and guaranteed place of residence for the next six years.\"\n\n\"One guy in particular was coming on to me hard every time mom passed out, and I knew one day he wouldn't stop with a few gropes.\"\n\n\"I knew Hardy had taken some whores away from Big Daddy, so I decided if I had to do it anyway, I might as well make some money at it.\"\n\n\"I cleaned up the best I could and went to see him. He remembered me, talked about my brother for a bit, then asked if he could do anything for me.\"\n\n\"That was when I hit him with my big plan to be his newest source of income, promising I would do whatever and whoever he wanted to, if he would just keep me safe.\"\n\n\"I'll never forget the look on his face. It went from happy and smiling to a look that would freeze water. He got the whole story from me, my drunk mom, her grabby boyfriends, my whole miserable life.\"",
        "\"He left me sitting there with orders not to move. He came back with a woman and told her to take me shopping. We got jeans, tops, sneakers, a whole new wardrobe. I asked the lady when were we going to get my whore clothes, and she just smiled.\"\n\n\"I did get to pick out one little sundress and some sandals. I looked at myself and thought I really looked mature. She let me wear it back to his place.\"\n\nShe stopped for a glass of water and to dry her eyes.\n\n\"When we got back, he asked her if she had gotten what he asked for. She just nodded.\"\n\n\"He looked me up and down, asking if I liked my new clothes. I said yes, of course, what woman doesn't like new clothes.\"\n\n\"Did you get new underwear too? he asked. I just nodded yes.\"\n\n\"Let me see them, he said. I was shocked. Up until now I hadn't really thought about what I was going to have to do. I had heard stories, I knew he was about to 'break me in'. But I was determined, and slowly slid my dress up, trying to give him a show, thinking he might go easier on me. I had on bikini panties, the first pair I had ever owned.\"\n\n\"He let me get the dress up to my waist when he grabbed me. I was looking down in shame and didn't see him move.\"\n\n\"Before I could move or think, he had me face down over his lap, and proceeded to beat the hell out of me. You know how big his hands are, it wasn't long until my little ass felt like it was on fire, and he never let up. I was begging, screaming, promising I'd do anything he wanted if he would just stop.\"\n\n\"He shoved me off of his lap, and I fell to the floor crying. He picked me up, put me in the chair, got right in my face, and told me if he ever heard me saying shit as stupid as the idea I came to him with again, that what just happened would feel like a kiss.\"\n\n\"Then he and the woman, I never got her name, put me and my new stuff in the car and took me to Aunt\n\nHildy and Grandpa Joshua. He got my school changed, gave them money every week to support me, and saw me as often as he could. Even after he went into the military, he sent half his pay home every month.\"\n\n\"I heard he went to visit my mother. I don't know what he said to her, but she didn't offer the first argument about me not coming home. And the guy who kept groping me? He broke all the fingers on one hand.\"\n\n\"Aunt Hildy and grandpa finished raising me, and when I graduated Hardy paid for my schooling. I decided I would become a paralegal and go to work for him so I could stay close. I love that man with every fiber in my body, but all he sees when he looks at me is a silly thirteen year old.\"\n\n\"There, now you know. One more thing, I hated you for taking him, hated you even more for breaking his heart.\"\n\n\"But I've watched you. You've changed, grown up, I guess. He's never stopped loving you, and I know you and he are spending time together. Just know, break his heart again, and he isn't the only one who knows where isolated ponds are located. Thanks for lunch.\" \n\nShe strode out without a backwards glance.\n\n...............................................\n\nFour days later they were sitting by the pool. It was the only thing she had changed about the grounds. She put it in when she thought she was going to live there alone, and had a large privacy fence put up, intending to sunbathe nude.\n\nOf course, right after she became an instant parent, she had to limit those times to when Melissa was in school. Melissa and her friends loved the pool, and once or twice during the week and practically every weekend it would be packed with screaming giggling teenagers. She only allowed boys on the weekend, and only when she could stay with them. There was always a crowd.\n\nMelissa and most of her friends were pretty so she could see the reasons the boys were there, but once one of her friends told her the boys were there to see her as much as them, she stopped wearing her traditional bikini and got a few conservative one piece suits. They still ogled her, and it gave a small thrill sometimes to see the effect she had on them.\n\nHardy spent a lot of time in the pool, the low impact exercise did him a lot of good. He tended to stay away on the weekends, despite the pleas of Gwen and Melissa. His body, already scarred, was not even worse, new bullet holes and surgery scars prominent. He once joked with Greg if the schools wanted to scare kids straight, the should show a picture of him from the neck down.\n\nHe let her rub lotion on his back, and she went slowly, enjoying the touch. Finally he had enough, turning and leaning back in the lounge chair.\n\nShe was enjoying the moment, lying with her eyes closed, hoping he was watching her behind those sunglasses. When they were alone, which happened less and less these days, she wore her tiniest suits. At first she knew it made him uncomfortable, and teased him, asking why he seemed embarrassed.\n\n\"You've seen my body countless times. Why should it bother you now?\"\n\nHe had on his sunglasses so she couldn't see his eyes, but there was no mistaking the sadness in his voice. \n\n\"Because it's not mine anymore.\"\n\nHe rose, striding into the house.\n\nShe lay there, shocked. She backed off for a little while, not teasing him and wearing conservative suits.\n\nA week or two later she came out in one of her one piece suits, and noticed he seemed disappointed. She lay for a few minutes, and got up grumbling.\n\n\"This suit has something in it irritating my back. Would you mind if I change into something else?\"\n\n\"It's your house, you don't need my permission to dress any way you seem fit.\"\n\nShe smiled when she came back in one of her more modest bikinis, and noticed the reaction she got.\n\n\"He still wants me.\" She thought as she rubbed lotion on his back, glad he couldn't see her face, and the expression on it.\n\nHis recovery was progressing nicely, and she feared one day soon he would move back into his own house. She, Melissa, and Greg conspired to make his life so good he would never want to leave. She was almost jealous of the way Melissa bonded with him.\n\n\"Don't worry, Mom. I never really had a father, so let me enjoy this as long as I can.\"\n\nMelissa even talked him into being a guest lecturer at Pleasant Hill during career week.\n\n\"Do you mind, Mom? You've there all the time, he'll be something different. You know, I had one boy flirting with me pretty hard, and then one day he just stopped. I asked Cindy[her best friend at school] if she knew what happened, and she said he found out my Dad was Hardy Wilkes, and it scared him.\"\n\n\"I'm sorry, honey. Did you really like him?\"\n\n\"Sort of, but if he can't stand up to my family, he's not worth knowing, is he?\"\n\nGwen agreed, sometimes worrying that her pedigree caused her problems. Other than that one incident she never brought it up if it did.\n\nHardy really enjoyed the moment, not objecting when she introduced him as her Dad. She insisted he stay for lunch, and they were swarmed. Melissa had gotten very popular, mostly because she remembered her roots and was kind to everyone, knowing that fate could be very fickle. One or two kids had to drop out because their parents had been hurt by the economy.\n\nShe said something to Aunt Daisy about a girl she really liked having to leave. Daisy checked out the family, checked the girls' grade, and suddenly a scholarship appeared for her and a few others. Melissa knew she was behind it but wisely said nothing.\n\n.................................................\n\nThe next time she was in the car with him alone, she asked him something that had been bothering her.\n\n\"What is your relationship with Bonnie?\"\n\n\"Why don't you ask her?\"\n\n\"Why won't you tell me?\"\n\n\"Because, just as I don't discuss you with anyone else, I won't discuss other women that are important to me, just like I did with Crystal Anne. If she wants to tell you she will, otherwise it's a closed subject.\"\n\nShe still had the card she had given her at the fundraiser. She called. At first she didn't remember her, but when she mentioned Hardy it came back to her.\n\n\"I remember you now. Have you done the tango, lately?\"\n\nGwen was glad she couldn't see her blush.\n\n\"No, not since that night. There is only one person in the world I'll ever dance that with, and he's not interested in dancing with me anymore.\"\n\n\"Don't sell yourself short. You didn't see him when she danced with others, especially your date. He WAS NOT happy. What can I do for you?\"\n\nGwen invited her for lunch, telling her Hardy said they should talk.\n\n\"All right, I have to come home next week for political business. Meet me for Sunday dinner with my folks, and we'll talk after.\"\n\n\"Thank you, where do your parents live?\"\n\nShe could hear the humor in her voice.\n\n\"Oh, I'm sure you can find it. Everybody knows where the sheriff lives.\"\n\n\"Will Rob is your dad?\"\n\n\"Yes, I thought you knew. Twelve thirty, be on time, Mom hates to wait dinner.\"\n\nThe meal was enjoyable, the company more so.The surprises kept coming. J.T. was there, he was Bonnies' grandfather. After the meal they went out to the 'Florida room' as it was called when it was built. Now they're known as sunrooms.\n\nAfter the small talk, she asked how long she had known Hardy.\n\n\"Since I was three. His mom kept me while my parents worked. I grew up with him and Peggy.\"\n\n\"Have you ever, well, been attracted to him?\"\n\n\"When I was about twelve I developed a huge crush on him. He was tall, blond, handsome, and he treated me like a princess. I was too young to know he was just being friendly. When he was sixteen and I was thirteen and he started dating I cried myself to sleep more than once.\"\n\n\"I followed him around like a puppy. One day, it was in July, the blackberries were just starting to come on, and Peggy and I were picking some for a pie while Hardy dug some post holes for a new pasture his grandfather was fencing in.\"\n\n\"We didn't see the snake until it had latched on to my hand. A copperhead, one of the biggest I ever saw. You know what a copperhead is? Anyway, I screamed and pulled my hand back and the snake came with it.\"\n\n\"I was panicking and Hardy was trying to get the snake off me. He got it loose and told Peg to get me into the Gator, a little off road utility vehicle. Hardy was only fifteen then, so he didn't have a license.\"\n\n\"He had Peg get me onto the small truck bed. He was helping when he loosened his grip on the snake. It turned and bit him. He was starting to panic a little bit, wasn't thinking clearly, and needed both hands to get me situated, so he put the shake in his mouth, holding it just behind it's head.\"\n\n\"He still had it in his mouth when we roared down the main street of town, with a deputy sheriff and a city cop on out tail, sirens blaring. He drove that little Gator right through the emergency room doors, spit the snake out, grabbed me, screaming I had been bit by a copperhead. Peggy was screaming he had been bit too, and just as soon as he handed me off to a nurse he collapsed.\"\n\n\"The local newspaper had a police radio, and when they heard some maniac kid was driving down main street with the cops on his tail, two photographers ran out of the office and got pictures. It was on the front page of the paper the next day with a headline.\n\n\"SNAKE BITES MAN, MAN LIVES. MAN BITES SNAKE, SNAKE DIES.\"\n\n\"It seems he literally bit the snake to death. If you go into Dad's office, you'll see a framed copy of the front page, as well as the tanned hide of the snake. He was the deputy chasing us, it was just before he was elected sheriff.\"\n\n\"So now you know why my father and grandfather keep such a close eye on Hardy, he saved my life.\n\nWhen he got into bad trouble, they pulled in every favor they had and owed a bunch more when they were done, but they kept him out of jail.\"\n\n\"I know you've seen his tattoo, he got it to remember the incident, and not to panic in stressful situations.\"\n\nThere was a long silence before she spoke again.\n\n\"He went into the Marines, and I didn't see him again until last year. Dad told me when you two got married, and all I could think off was what a lucky woman you were. I fell in love, got married.\n\nHe was a doctor, in the reserves, and got called up five years ago. He never came home. He wasn't supposed to be in combat situations, but was in the wrong place at the wrong time.\"\n\n\"I need to tell you something. The night of the benefit, I slept with him. You guys were divorced, and I found I still had feelings for him. We spent several days together, but I knew the spark wasn't there, so we agreed friends without benefits would be best. I'm still fond of him, though.\"\n\n\"He still loves you, I don't think he'll ever love another. Stop pussyfooting around and get him back. Stop nudging and start pushing. He nearly died, and it was all over you, damn it. Make his pain worth it!\"\n\nShe stopped talking and hugged her for a few minutes. The ride home was spent in deep thought.\n\n................................................. \n\nThe day finally came. She stood in his doorway, watching him pack. She had only one question.\n\n\"When?\"\n\n\"Tomorrow. I can't thank you enough, but it's time to stop imposing on you. You need to get on with your life.\"\n\nShe was about to start, when she felt her dad put his arms around her.\n\n\"Not now, look at Melissa.\"\n\nMelissa was standing behind her, crying quietly.\n\nGreg pulled her back into the hall, giving Gwen and Hardy some space.\n\n\"You could just stay, you know.\"\n\nHe stiffened, his back still to her.\n\n\"No I can't, it would be too hard on us.\"\n\n\"Why? You know I love you, hell, everybody in the state of Alabama knows I love you.\"\n\n\"And everybody in the family, which is probably half the state, knows you love me.\"\n\n\"Give up, honey, I'm never gonna stop trying, not even if you threaten to beat me, or move away. I'll be right behind you until you come to your senses and realize that nothing or no one will ever love you more than me. Think about it.\"\n\nShe turned and left the room. If she had gotten Hardy to face she would have seen the tears.\n\nGwen had a plan, sneaky, underhanded, probably illegal, but still a plan. She still made sure he took his medication, so that evening she put a 'little something extra' in his water glass.\n\nIt was a quarter of the sedative he had taken when the pain was sometimes to great to sleep early in his recovery. It was very powerful.\n\nShe had her dad take Melissa out to the movies and to a late dinner. Mrs. Hendricks had gone for the day, they were alone in the house.\n\nShe tied his arms and legs to the old four poster with some of his ties. True to type, he still slept nude. She lit candles, put on her sexiest teddy.\n\nShe started out slowly, kissing him gently, then more urgently. His body started responding.\n\nThey were in the midst of a deep kiss when he became fully conscious. He started to lunge up when he discovered he was restrained.\n\n\"What the hell, Gwen? What are you doing?\"\n\nThe determination in her eyes reflected in the candlelight.\n\n\"I'm taking my man back. I'm reclaiming the love you profess you still have for me. Before this night is over you'll either love me fully or hate me with an intensity that will finally break it between us. I grew up, not it's your turn.\n\n\"Scream if you want, curse me, call me the cheating slut I was. But you will pay attention to me.\"\n\nShe had propped his head up with pillows. She quickly stood.\n\n\"Like this?\" she twirled, showing him the teddy. \"I bought it for you, it's your favorite color.\"\n\nHardy did like it, very much, but he remained silent.\n\n\"You're right, I don't like it much either. I'll just take it off.\"\n\nShe slid the straps down, exposing her breasts.\n\n\"There, that's better. Ooh, look at my nipples, remember how hard they get? They're hard now baby, hard for you.\"\n\nShe swayed them over his face, just out of reach.\n\n\"I actually think they're bigger now than before, don't you? Must be a side effect from getting older.\"\n\nShe slid the teddy down, turning to slip it off.\n\nShe looked over her shoulder at him.\n\n\"Still think I've got the best ass on the planet? Know what Aunt Hildy said? She said I had the perfect bottom for bearing children, what do you think? I'm so disappointed in you, we should have had at least two by now, if you had got your head out of your ass sooner.\"\n\nHardy had screamed, cursed, ordered her to release him. Damn her, he wouldn't beg. He had calmed down to the occasional grunt and moan. His body was betraying him, he could feel the blood rushing.\n\nShe reached over, stroking him lightly.\n\n\"Part of you looks ready to forgive me? All you have to say is you love and forgive me, and I'mn all yours.\"\n\nHardy stubbornly remained silent. He stiffened from head to toe when she quickly plunged her mouth down on him, sucking furiously for about twenty seconds before pulling up.\n\n\"Still don't have anything to say? Too bad.\"\n\nShe straddled his chest, practically pushing her pussy in his face.\n\n\"Remember this? She sure remembers you, look, see how much she likes you?\"\n\nShe slid a finger inside her swollen lips, releasing juices and the sweet musky smell he remember so well.\n\n\"want to give her a welcome back kiss? No? All right then.\"\n\nShe added another finger , moving them in and out, stopping once in a while to rub her clit.\n\n\"Umm, this would feel so much better if someone else were doing it. Any volunteers, anyone? All right then.\"\n\nShe slowly slid down his chest, stopping just out or reach of his throbbing cock, grinding slowly into him.\n\n\"Anything I can help you with, baby?\"\n\n\"Damn you, you got me tied up and I'm pretty sure you drugged me. This is the very definition of rape.\"\n\nShe laughed so hard she almost fell off him before resuming her gently grinding while she flicked her nipples with the wet fingers she had sucked on slowly for a bit.\n\n\"I ought to do it, just for the fun of going to court. The mighty Hardy Wilkes, hardass, legend, defender of damsels in distress, tied up and fucked like a little bitch.\"\n\nShe paused.\n\n\"But I won't. You're going to ask for it, and it's gonna cost you\"\n\nShe leaned down, dangling her nipples within reach of his lips.\n\n\"Smell that? It's your favorite perfume. I remember how much you liked licking the flavor off me. Go ahead, have a taste.\"\n\nHis tongue snaked out before he thought, but he quickly snapped it back into his mouth, closing it quickly. She still rubbed them over his lips, moaning softly. After a minute she sat up. She had tried her best.\n\nShe got off the bed and untied one of his hands.\n\n\"Here, now you can undo the rest. I tried, I really tried. But it's over now. I'll never bother you again, if you'd rather live in pain and regret, so be it. Goodbye, Hardy. I won't be around in the morning when you leave.\n\nShe started out the door, blinded by tears, when she heard it. It was almost a whisper.\n\n\"Please.\"\n\n\"What?\"\n\n\"Please, come back. Make love to me, please.\"\n\nShe flew back to the bed, kissing him hungrily.\n\nThey seemed intent on devouring each other when she pulled back.\n\n\"No.\"\n\n\"WHAT?\"\n\n\"No. I told you earlier the price of this ride. I want to hear it now, right this minute, or I'm gone.\"\n\nA few seconds of silence, then a whisper.\n\n\"I love you, I'll always love you.\"\n\n\"Not good enough. Keep saying it until I think you mean it. Say all is forgiven.\"\n\nIt was hard to say when so much of his time was spent with a tongue, nipple, or clit was shoved in it, but he managed to get it out a few times over the course of the next hour.\n\nHe hadn't had time to untie, and was a little too busy to worry about it. When she slid down on him so hard he was sure they were going to be bruised, they both screamed. She was humping furiously, and he was matching with equal thrusts.\n\n\"That's it baby, harder. We'll make love later, right now I need to fuck your brains out. Give it to me, reclaim your woman!\"",
        "She was practically screaming at the end, when the orgasms hit them. It felt like the world imploded right into the middle of the big fourposter bed. She collapsed onto his chest, crying freely. She roused herself, reached out to cup his head in her hands and glared at him.\n\n\"SAY IT! say you love me, say it and mean it.\"\n\nHe had managed to free his other hand, and he held her head while she held his.\n\n\"Gwen Maire Wilkes, I love you. I'll scream it out in church Sunday, put a full page notice in the paper, I'll stop random strangers in the streets and bore them for thirty minutes telling them of the depth of my love for you. How about spots on the television?\"\n\nShe laughed, feeling gloriously, absolutely happy.\n\n\"That won't be necessary. Just tell me often and the family occasionally, and we'll call it even.\"\n\nThey cuddled, then joined again, in slow unhurried love, their tears mingling from time to time, until they finally collapsed, and slept.\n\nGreg and Melissa came home, laughing at the movie they had just watched. Gwen had left the bedroom door open, too exhausted to get up and close it.\n\nThey both stopped and stared, Gwen was lying on his chest sleeping peacefully. Melissa went in quietly and pulled the cover over her.\n\n\"I think the picture of a girls' parents naked is not what an impressionable young girl needs to see. Don't you think so, grandfather?\" She was smiling through moist eyes.\n\nHe held her close, hugging her tightly.\n\n\"I think the finest thing a young girl could ever see is the expression of total love between her parents. But some clothes wouldn't have hurt.\"\n\n..................................................\n\nThink this is the end?  "
    ],
    "authorname": "qhml1",
    "tags": [
        "wife"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/boston-to-birmingham-ch-05"
}