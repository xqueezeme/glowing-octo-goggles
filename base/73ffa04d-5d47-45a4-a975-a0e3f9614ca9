{
    "title": "Two Hundred Dollars Ch. 08",
    "pages": [
        "164 Dollars\n\nBailey stumbled out of her bedroom in a rush, carelessly leaving the door open when she hit the darkened hallway. She'd exited so quickly, she had to brace herself on the opposite wall before she could turn towards Kent's room.\n\nWhere is he? she peered ahead in the darkness, I need to find him.\n\nShe'd let herself get so far behind she couldn't believe it. If she could find Kent now, she might start making up for all the lost time.\n\nBailey tried to remember what she'd done with her time that had led to this, but nothing came forth right away.\n\nMust have been the midterms.\n\nShe reached Kent's door, found it wide open and undid the clasps on the green skirt she'd borrowed from Laura, thinking how nice her friend had been to leave it to her.\n\nKnowing it might take a while to make up for lost time, Bailey prepared herself, knowing she could do as many spankings as she needed to catch back up.\n\nLooking down, she realized she had put on her red panties, the ones she'd let Laura borrow once.\n\nAre these good enough?\n\nBut Kent's room lay empty and dark before her.\n\nIn a panic, she wondered if maybe Kent had found someone else to spank.\n\nPanting desperately, she put a bunch of marks on the whiteboard -- she didn't even count how many -- and left the skirt on the floor. She would tell Kent about the marks and he could spank her wherever she found him.\n\nShe rushed farther down the hall to the living room and saw Carson watching television.\n\n\"Hey, Bailey,\" he said.\n\n\"Have you seen Kent?\" she asked.\n\n\"Not lately,\" he said. \"Hey, where are your pants?\"\n\nShe waved him aside and continued down the hallway past the stairs, stumbling along and finding the walls covered in wooden crosses and pictures of Jesus.\n\n\"Hey,\" Laura's head poked up out of a door leading to a lower stairway, \"What's up?\"\n\n\"Where's Kent?\" Bailey asked desperately, grabbing her friend by the lapels of her jacket. \"Have you seen him? I need to find him.\"\n\n\"Oh, he was here a while ago,\" Laura replied.\n\nBailey looked down and saw that Laura only wore a bra under her jacket, a push-up bra that exaggerated her cleavage almost comically.\n\n\"What happened?\"\n\n\"He spanked me a whole bunch,\" Laura gave her a big grin, \"Look!\"\n\nLaura tried to turn her back to Bailey to show where Kent had spanked her, but Bailey didn't want to see her friend's pink cheeks and waved her off as she turned away.\n\n\"But I need him to spank me,\" she protested as she continued down the infinitely extended hallway.\n\n\"He probably used up all his spankings, though,\" Laura called after Bailey as she rapidly fading away in the distance behind her.\n\nMaybe he's at school, she thought, and the next doorway branched off into one of the technical libraries on campus.\n\nLaid out in front of her, the quiet study section of the library hosted thousands of private study cubicles, staggered in a way that prevented her from seeing a whole row at once. Bailey whimpered as she realized she'd have to check each cubicle one at a time.\n\nShe'd only started when she heard voices talking and laughing somewhere near by. She bumped up against cubicle wall after wall until she found the small table where Kent sat, facing away from her, talking with a crowd of other students. Bailey didn't know most of them by name, but vaguely recognized several of the other girls.\n\n\"It's that skinny girl, Kent,\" one of them pointed at her, \"She's not wearing pants.\"\n\n\"Kent,\" she called out, not caring they could all see her panties, \"I need you to spank me.\"\n\nThe girls giggled.\n\n\"Your butt's so small,\" one laughed, \"Why would he want to spank you?\"\n\nBailey shook off the laughter and pleaded, \"I made the marks on the board Kent. Come on.\"\n\n\"But, Bailey,\" Kent frowned and held up his right hand, slightly reddened, \"I already gave all my spankings to Laura.\"\n\n\"But you said you wouldn't...\", Bailey fell to the floor, gasping and nearly in tears. \"How could you?\"\n\nShe felt the floor consuming her, like some giant bean bag chair swallowing her up. Bailey lifted a hand for a moment, hoping someone, anyone, would come to her aid, but soon gave up.\n\n...\n\nA moment later, she sat up in bed, feeling her nightshirt clinging to her, soaked with sweat.\n\nOkay, then, Bailey tried to calm her breathing. Heart be still.\n\nThe panic slowly subsided.\n\nShe knew she had not really fallen behind in her debt. Contrary to that, the notebook said she remained far ahead.\n\nIt's okay. You're paying off the debt just fine. You're fine.\n\nShe took another deep breath.\n\nOnce her heart stopped thumping in her ears, she tried to take stock of the dream. She pulled her knees up to her chest and ran her hands through her hair once before massaging her temples.\n\nWell, if that wasn't every single one of my bodily insecurities all wrapped up in one nightmare. Christ help me.\n\nThe only real surprise was that none of the jerks from her high school had shown up to mock her for her flat chest or point out a spot of acne.\n\nHell. I'm having dreams about this now?\n\nShe checked her phone.\n\nThree a.m. Monday morning. It's okay. You only skipped Sunday, and that was fine because we did all those spankings on Friday with Laura.\n\nA pause in her thoughts.\n\nLaura. Right.\n\nWith her big breasts and her fancy bra, sneaking in to see Kent behind Bailey's back.\n\nThat part didn't happen. Well, it happened before, but she meant it as a favour. It hasn't happened again. Don't get angry over a dream. And besides, Laura's never shown her boobs, or even her bra, to Kent.\n\nBut Laura had stolen those two dollars. Bailey frowned, pretty sure she didn't care about that anymore.\n\nIt's just the crazy dream talking.\n\nShe took a deep breath and put her thoughts back in order.\n\nLaura counted as a good friend and had not done anything to upset Bailey.\n\nKent had spanked Bailey many times and clearly didn't think there was anything wrong with her butt.\n\nBut Bailey still thought she had small breasts and, as much as she wanted to try paying her debt off at three spankings for a dollar, letting Kent see her slim chest still filled her with fear.\n\nWhat if I take off my shirt, her babbling thoughts rolled through her, and he shrugs and tells me not to bother trying that again and he'd rather just do four with my shirt on?\n\nShe shook her head.\n\nDon't be stupid. That's your nightmare talking. Kent would never do that.\n\nBailey got out of bed and stripped out of her nightshirt and panties, used the dry parts of her clothing to wipe some of the excess sweat off. With the air in her apartment so cold, her body rapidly switched from excessively sweaty to frigidly cold. She felt goosebumps rise and, as she put on a new nightie, she felt it catch on her nipples, sliding over their tips uncomfortably.\n\nThey're nice enough nipples, probably, she decided. Just small breasts. It's probably fine.\n\nFinding a new shirt to throw on, and skipping the panties, she crawled back in to bed on her side and tried to get back to sleep.\n\n=============================\n\nBailey didn't leave her room until well after Kent had gone to his morning classes. She woke up gently and easily, taking her coffee around eleven. Monday never rushed for her anyway but every time she applied the tiniest bit of haste to her day brought her nightmare to the fore.\n\nBy noon, she'd calmed down and felt like facing the world again, so she risked the cold October air and made it to her 12:30 class, taking a corner seat in the large lecture so she could look at her classmates.\n\nI didn't realize how much I cared about this shit.\n\nSome of the girls looked overweight. Some looked skinny like she did, but most ran at least a little heavier, which she'd always known. The almost all had bigger chests than Bailey. Even with their winter layers on, she could see she had pretty much the smallest pair of breasts in the room.\n\nShe sighed, trying to concentrate on the lecture, but finding statistics dry and boring.\n\n\"Just because B happens after A,\" the old grey-haired professor droned on, \"doesn't mean A caused B. As much as we can calculate the correlation, it doesn't prove cause.\"\n\nRight, right, boring old guy, she frowned. It's been two days of this. We get it.\n\nBailey looked around again, seeing faces no more excited than her own.\n\nHow about we calculate the odds of me and Laura still being friends at the end of this year? Or the odds of me getting spanked on a Monday? What if the 'prior' is that I just had a nightmare? Stick that in your Bayesian inference.\n\nBy the end of the class, she had some scribbled notes, but the professor had spent most of the time reviewing and she hadn't gotten much value from the lecture.\n\nShe spent the next hour in an ethics class, mandatory for third year students who had any intentions towards biology or engineering, so the class hosted a mix of both faculties. Better, the course belonged to the department of Humanities, instead of Engineering, so the professor knew how to speak. Even if the material didn't particularly interest her, the presentation came through smoothly.\n\nIf I hear one more god damned trolley problem, though, I'm gonna go outside, steal a car and run over six students on two different roads. I really need to know if it's ethical to be spanked for money. Is that in your syllabus?\n\nShe suffered through something about Kant and his bullshit about never being allowed to lie before she finished her afternoon with a fairly heavy math class.\n\nThis is better, Bailey felt more relaxed later in the afternoon, nice firm answers to everything, even if they come at the end of a triple integral.\n\nNothing at all applied to her relationship with Kent. You could count spankings. You could multiply them and divide them. But, just like every other area of real life, calculus had no application in regards to having your roommate spank your ass to pay off debt.\n\nThe chemistry lab even went nicely, with all of her solutions turning the proper colours at the proper times, and her titrations working out properly. She even finished early and got home before five.\n\nKent's door lay open when she huffed her way down the stairs.\n\n\"Kent,\" she said.\n\n\"Hey,\" he turned his head to look at her, \"What's up?\"\n\nBy way of answer, she made two marks on the board, \"I'll be right back.\"\n\nIn her bedroom, she shucked off boots, jacket and backpack. She already had the right panties on, so she got back to his room quickly and closed the door.\n\n\"Turn up the stereo?\" she asked. \"So Carson doesn't hear?\"\n\nKent cranked up the volume, not enough to annoy anyone, but enough they wouldn't hear his hand slapping her ass.\n\n\"What'll it be?\"\n\n\"Over top,\" she said, \"Okay?\"\n\n\"It's always up to you,\" he held hands to her, palms open. \"Twenty over top, though? All at once?\"\n\n\"Eighteen, I was thinking,\" she tilted her head left to right while looking up at the ceiling and took a breath, \"If you wanted to, you know, see me too.\"\n\n\"Ah,\" Kent replied.\n\n\"You don't have to,\" Bailey withdrew in a panic, \"You can just do all twenty if you want.\"\n\nShe tried to ward off a gulp, but couldn't. She looked him in the eye, wondering if he really preferred to see her -- with her skinny little butt.\n\n\"Inspect you?\" he smiled.\n\n\"Yes,\" she looked sideways impatiently. \"Inspect me.\"\n\n\"Before and after?\"\n\n\"Of course,\" she said hopefully. \"Just like last time.\"\n\n\"Sure.\"\n\nShe exhaled in satisfaction.\n\nNightmare scenario one: averted.\n\n\"How should I, uh, pose?\" she asked with a roll of her eyes.\n\nKent looked away and thought about this a moment and Bailey twitched, remembering the last time they'd done this, wondering if he would ask for Laura's position.\n\n\"Remember how you took your last spanking?\"\n\n\"Oh,\" Bailey head jerked back in surprise, \"Up on your bed?\"\n\n\"Yeah, like that.\"\n\n\"Okay.\"\n\nThe trick in that position, she realized, lay in the stripping part. The rule for this included removing her panties. But she had to sit down on the bed facing him. Bailey knew if she pushed her pants and panties down, she'd be showing him more of herself than she'd yet shown him.\n\nAm I ready for full frontal nudity? she wondered, looking at Kent waiting patiently in his chair. No, I'm not.\n\nShe didn't think she had any special issues about her genitals, but she still had some modesty left, even after all this.\n\nBailey unbuttoned her jeans and pushed them down to just past her crotch, revealing the lacy red panties she'd chosen for today's session. Then she sat down on the bed, rolled herself on her back with her legs extended to the ceiling, toes pointed.\n\nOnly once she'd reached this position did reach under her body and push her panties up her thighs.\n\nNow that I'm here, Bailey squeezed her thighs together as tightly as she could manage, I'm pretty sure I'm completely exposed to his eyes.\n\nWith her thighs together, he definitely couldn't see inside her or anything, but no realistic imagining of the view from his angle excluded her lips and her pubic hair.\n\nBailey inhaled in a slow shiver, picturing Kent on the other side of her legs, taking a long hard look at her.\n\n\"Last time,\" she whispered, trying to keep the shiver from reaching her voice, \"you inspected more closely.\"\n\nI want you to touch me. Do you understand? Touch me like you did before?\n\nShe closed her eyes, hearing him move, and felt his fingertips on her cheeks a moment later. She knew how close his fingers came to touching her vagina, but he didn't intrude. Any other boy might have, but Kent didn't. He just traced circles on her cheeks.\n\n\"Is it red?\" she asked, keeping her eyes closed.\n\n\"No ... um ... lift up a little?\"\n\nBailey pulled her legs back a little farther.\n\n\"No, not at all.\"\n\n\"Good,\" she said, pulling her panties back down over herself with relief, \"a fresh canvas.\"\n\n\"Can-vas?\" Kent stammered as she stood up.\n\nBailey stopped halfway through rebuttoning her jeans, feeling her face flush red the way it did when inside-your-head words accidentally came outside.\n\n\"Um, yeah,\" she hesitated and finished doing up her pants. \"Like, for a painting, you know?\"\n\n\"Sure,\" Kent nodded his head as she turned her back. \"As if I'm an artist.\"\n\nBailey shrugged and laid her upper body on the bed, desperately needing an escape from the conversation.\n\n\"I'm ready whenever you are.\"\n\n\"Right,\" Kent snapped back on track. \"Eighteen, wherever I want.\"\n\n\"Right.\"\n\n\"Paint my canvas.\"\n\nBailey felt a small sound, something like, \"urk\", escape from her throat.\n\n\"Yes,\" she said.\n\nThe first slap landed instantly, low on the left cheek. The second hit her there again before she could even count.\n\n\"One, two!\" Bailey answered.\n\nSpankings felt so different through the denim. Kent felt free to strike so much harder, creating a completely different feeling that shook her body and the bed with it, instead of the stinging sensation of slapping bare flesh.\n\nShe felt his hand slide over to her right cheek just before he let her have two body racking shots as high as he could go and still call it a spanking.\n\n\"Three, four.\"\n\nLow and left again, two more strikes at almost exactly the same spot.\n\n\"Five, six.\"\n\nBack to the right, high.\n\n\"Seven, eight.\"\n\nKent paused at that point, laying his hand on her left cheek and rubbing her gently. He slid over, across to the right, rubbing her there, too. His hand slid back across the coarse denim and rested across both her cheeks, fingertips and palm pushing in to flesh, neither low nor high.\n\nWith a sharp inhalation, she understood what he intended and she squeezed her cheeks together as tightly as she could.\n\nThe pressure of his grip left her body and his hand cracked down against across both her cheeks at once.\n\nAnd again.\n\n\"Nine, ten!\" she moaned, feeling the extra pain brought on by the tension in her muscles. Clenched like this, her flesh had no give in it at all.\n\nHe struck her like that twice more and she groaned long and hard before she could whisper out, \"Eleven, twelve.\"\n\nShe couldn't hold her cheeks like that anymore, but Kent had finished up anyway. He returned to her left cheek, hammering on it three times in rapid succession.\n\n\"Thirteen,\" Bailey whispered, stretching her hands out as far as she could toward the corners of the bed. \"Fourteen... Fifteen.\"\n\nKnowing what came next only made it better.\n\nHis hand crashed down hard on the highest part of her right cheek.\n\n\"Sixteen,\" she gasped.\n\n\"Almost done,\" Kent said, his voice causal, almost philosophical, as he squeezed her cheek.\n\nHe's waiting, she realized, waiting for me to tell him to keep going.\n\nPhrase after phrase ran through her mind. Everything she'd ever said to him and everything she'd ever want to say.\n\nHow crude should I be? she debated. How fragile? How weak or strong?\n\n\"Well?!\" she put as much anger in her voice as she could muster. \"Finish my butt off already.\"\n\nAss, she thought, I should have just said 'ass'.\n\nIt didn't matter though, as she got the effect she wanted. Kent spanked her right cheek hard.\n\n\"Seventeen.\"\n\nHe paused again.\n\nI get a second chance, she thought, and eagerly jumped into the conversational void.\n\n\"Come on,\" she put as much irritated impatience as she could in her voice. \"Spank my ass.\"\n\nShe shivered as she said it, and shook again as he spanked her right cheek.\n\n\"Eighteen, you son of a bitch,\" Bailey gasped and stood up, rubbing at her rear as if upset. \"Thought you'd savour the last one, eh?\"\n\n\"Two dollars,\" Kent pointed out.\n\n\"Not yet,\" Bailey's expression changed, softening as her eyes widened, and she patted the bed where she wanted him to sit.\n\nThe rule they'd made said that he got to tell her how to pose. The last time they'd done this, he'd yielded the choice to her and she'd put herself over his lap. But Bailey still believed that Kent had the right to decide how to inspect her. On the other hand, she really wanted him to do it the same way as last time, so she prodded and hoped he'd follow.\n\nThankfully, he did, taking a seat and leaving her room to put herself over his lap. Carefully avoiding prodding his erection, she laid over him and unbuttoned her jeans, then pushed them and her panties down to her mid-thigh, a little farther than necessary.\n\n\"Got the look what you wanted?\" she asked.\n\n\"I think so,\" Kent showed no shyness about rubbing her swollen cheeks this time, \"A nice diagonal line of redness.\"\n\nBailey tried to look over her shoulder, but could really only see the upper part of the right cheek and a bit of the redness in the centre.\n\n\"And a couple of untouched parts,\" she reached back to touch the pale and cool upper part of her left cheek.\n\n\"Yeah,\" Kent smiled. \"I guess the wooden spoon would have worked well there, just to make a little red spot.\"\n\nBailey tried to suppress her shiver, realizing she hadn't even considered that. An artist had more than one brush, after all, so why should he use only his hand in decorating her cheeks?\n\nWell, for one, it hurts more, she noted, but maybe I could take it.\n\nShe shivered again.\n\n\"Cold?\" he asked.\n\n\"My ass is bare,\" she said. \"But... your hand is warm.\"\n\n\"Mm,\" Kent agreed, gently rubbing the more abused areas of her flesh.\n\nBailey carefully avoided grinding into Kent, as much as her hips had their own desires, and let her inaction keep him from working her over with too much enthusiasm. Instead, a warm, glowing feeling spread around her body.",
        "Anyone else in this situation would be subtly trying to get his fingers up in my pussy.\n\nBut the deal they'd made included an inspection of the swollen flesh of her ass, and she and Kent had a firm understanding of rules, agreements and courtesy.\n\nThe only difference is, I have a get-out-of-jail card I can use anytime, she turned her head to look up at the white board. One hundred sixty two dollars after today. If I want to avoid anymore of this, I can pay it off whenever I want.\n\nAs she felt his hand caressing her cheeks, Bailey knew she'd never pay him back with cash. The sensation she had right now, with just her ass exposed to him, her hips jutting up slightly while he rubbed her, made up for every bit of awkwardness, shame or pain she'd inflicted on herself through the whole history of receiving these spankings. She had no desire to take a short cut through this.\n\n\"What do you have this week?\" Bailey closed her eyes and rested her chin on her folded arms.\n\n\"Huh?\" Kent stammered. \"Oh, midterm on Friday. Physics. You?\"\n\n\"Couple of assignments, a lab report,\" she replied. \"I'm planning to take a bus home on the weekend though, my parents are back from B.C.\"\n\n\"Ah,\" Kent replied. \"When's your next midterm?\"\n\n\"Next Friday,\" she said. \"I'll have time when I get back, but I'll still have to take some stupid work home with me.\"\n\nBailey felt Kent's body moving, as if his head jogged in thought, \"When you leaving?\"\n\n\"Bus comes on Friday,\" she said, \"But don't worry.\"\n\n\"Don't worry?\"\n\n\"I'll, ah, make sure you get a shot at my butt before I leave,\" she said, squeezing her cheeks together in his hand.\n\nKent squeezed her back, sinking his fingertips deeply, deliciously into her flesh. She murmured approval and relaxed her muscles again so he could go back to his gentle rubbing.\n\nShe still had the issue of Laura in her mind, specifically her worry that Laura might visit Kent while Bailey visited her family. Her friend had promised not to do anything with Kent, and Bailey believed her. But she still worried. Looked at pragmatically, as Kent massaged her cheeks, she had no right to demand anything of Kent. She couldn't say, \"Kent, don't spank Laura while I'm away.\"\n\nWell, I could say that, but what possible justification could I have? Bailey kept her face down while she thought about it. Sure, I can demand that she not pay back any of my debt, but what's to stop her from just coming over here anyway?\n\nShe paused, arching her back as she raised her head in confusion.\n\nIn fact, why do I even care if she comes over here and gets her ass slapped?\n\nBailey turned her head toward Kent.\n\n\"Alright, that's enough inspecting,\" she said. \"I have work to do.\"\n\nKent's hand abandoned her flesh immediately so she could pull her panties and pants back up in one swoop before standing up.\n\n\"Y'know,\" Kent spoke slowly, the tone of his voice making her pause in the middle of zipping up her jeans.\n\n\"What?\"\n\n\"Isn't it up to me how you, uh, pose?\"\n\n\"Oh,\" she put surprise in her voice, waiting for a demand, \"You wanted it some other way?\"\n\n\"Not sure,\" Kent said thoughtfully, as if trying to recall how events had worked out.\n\n\"Well, that is the deal,\" Bailey let her voice go a little weak, hoping he would firm up. \"I guess I kind of assumed that, well... do you want me to... show... another way?\"\n\nShe felt her heart pounding in her chest.\n\nPlease say, 'yes'. Please say, 'yes'.\n\nFor a moment, Bailey's heart went cold, afraid that he might let her off, might let her go with breaking a rule. She lowered the zipper on her jeans and reached for the button.\n\n\"Yes,\" Kent peered into the distance.\n\nBailey unbuttoned her jeans immediately, cursing herself for doing it so fast, wishing she'd put a little more protest into it.\n\n\"How?\"\n\n\"Um, for now,\" he said, \"Just put your hands on your knees.\"\n\nWell, it is Laura's way, but I won't complain. She doesn't own it. Not anymore.\n\nShe turned and did as he wished, pulling her pants and panties down and showing him the red slash he'd made across her cheeks.\n\nBut I don't want it going on too long. He already got to fondle me.\n\n\"Are we good now?\" Bailey put all the sarcasm she could into her voice.\n\n\"Yeah, we're good.\"\n\nShe pulled her clothes back on immediately, buttoned up and tapped the whiteboard.\n\n\"Two more dollars.\"\n\n\"Of course.\"\n\nBailey unlocked his door and zipped back to her own room.\n\nFirst thing after locking the door, she filled in her notebook.\n\nFor October 15, she entered, \"$2 show 18sp\", which sufficed for everything she'd done. She had to take care of the next part right away, before the colour in her cheeks started to fade. She dropped her jeans on the floor with her panties and grabbed her phone.\n\nStep one: turn off the data and the Wi-Fi.\n\nStep two: activate the camera app.\n\nStep three.\n\nBailey turned her back to the window so the daylight could filter in through the translucent \"privacy\" curtains she'd hung up there. She had to carefully hold the phone, while in selfie mode, so she could get the right amount of light on her cheeks. She saw no point doing this if the contrast between the red parts and the pale parts didn't come through nicely.\n\nThe other trick, naturally was to get a nice angle that wasn't aimed right up her butt. She didn't want that kind of picture.\n\nIf you wanted it done nicely, you should have asked Kent. He'd do it however you liked.\n\nShe grimaced, knowing there was no way she'd let anyone know about this.\n\nAfter trying a number of different positions, she finally realized what she had to do. She put the mirror up on her bed next to the window and then knelt on her bed with her back to it. That let the daylight shine on her butt and let her use the normal camera to take a picture through the mirror.\n\nBailey took several pictures as she messed with the camera to get the focus right. She then sat down and went through them all until she found one she liked, a nice one that nicely showed the diagonal line he'd made from lower left to upper right.\n\nNailed it, she smiled at this.\n\nAll of the other pictures she sent to the trash. The good one she cropped to remove all identifying features from the room and any unnecessary parts of her body. In the final edit, it contained only her body from about mid-thigh to the small of her back.\n\nStep 4: file the picture carefully.\n\nNot every folder in her phone got backed up to the cloud. This picture went into one of those other, safer folders, where it joined one other picture: one she'd taken the night he'd use the spoon on her. She called that one up now.\n\nLate at night, with only the lighting in the room, the picture hadn't come up nearly as nice, but it did a half-decent job of showing the very fresh red marks on each cheek the spoon had made.\n\nIf I let him use that again, she thought, on my bare skin... what might he do?\n\nHer thoughts about that started her blood flowing again and she revisited her encounter today.\n\nHer inadvertent admission that she considered her ass his \"canvas\" had worked out great, as slips of the tongue went. Kent had latched onto that idea brilliantly. The spankings themselves had come through good and hard, especially those ones in the middle, across both cheeks. He'd waited for her to push him for the last two, which had thrilled her.\n\nAnd god, he'd spent so long rubbing her ass afterwards and then...\n\nThe best part had come when he'd demanded that extra look, declared her violation of the rules and made her pull her pants down one more time for him.\n\nBailey groaned then, not even realizing she'd spent the last several minutes squeezing her thighs together to physically prod herself to orgasm. Her fingers reached down to her bare lips, threading them and seeking her clitoris.\n\nPush once. Push twice. Push ha-a-a-rd.\n\nThe orgasm came that quickly, thumping through her body, twitching around the fingers that probed the edge of her vagina. Bailey held those fingers tightly in place, feeling the ring of her entrance contract and pulse, willing something to go deeper inside itself. But she held back, not quite at the point where she felt the desire to penetrate herself.\n\nWhen the contractions subsided, she relaxed on her bed.\n\nAt the very least, she had established one clear fact: Kent had chosen to look at her skinny little butt as a better treat than two extra spankings. If she had established nothing else, she felt like she could discard that one particular insecurity. "
    ],
    "authorname": "xtorch",
    "tags": [
        "spank",
        "spanking",
        "debt",
        "payment",
        "exhibition",
        "picture",
        "dream",
        "nightmare"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/two-hundred-dollars-ch-08"
}