{
    "title": "Buttfuck Buddies Ch. 01",
    "pages": [
        "Author's note: This is a work of fiction. All characters are eighteen years or older. Don't expect realism and you won't be disappointed when you don't find it! Enjoy!\n\n***** \n\nCursing under her breath, struggling with the lock until she managed to get the key to turn and the door to open, Ashley let herself inside her boyfriend Josh's apartment. She knew that he wasn't home yet, but she wasn't there for him. It was Nick, Josh's roommate, that Ashley needed to talk to.\n\nGiving the stupid lock one last withering glance, Ashley closed the door and turned around. It seemed like the apartment was empty, which it shouldn't be. She was about to call out for Nick when she heard a deep moan coming from down the hallway. Another unmistakable sound followed, that of flesh slapping rhythmically against naked flesh. \n\n\"Of course...\" Ashley sighed, rolling her eyes in resignation and running her slender fingers through her honey blonde hair, messing up her pixie cut. \"I should have known they'd be at it, as usual.\" \n\nWhile the sounds of unrestrained humping got louder, Ashley walked into the living room and sat down on the couch. Crossing her arms under her perky tits, she slumped back and grumbled: \"I guess I'll just have to wait until Nick is done fucking Mia in the ass...\"\n\nIn the last few months, after she got together with Josh, Ashley had come to know her boyfriend's roommate pretty well. From the moment she first saw him, Nick had struck her as very weird, but in a good way. Bookish, tall and lanky, with his mop of unruly brown hair and his thick nerdy glasses, Nick was the very opposite of her athletic, trendy, perfectly groomed Josh. Still, Nick had grown on her, without much trying on his part either. That was what struck Ashley the most about him: Nick was a total loner, so quiet and unassuming, still he left a strong, lingering impression. \n\nBeside being very smart, Nick was gifted with a disarming sense of humor that never failed to make Ashley smile. He was doing a PhD in Philosophy of all things, which baffled an Econ major like Ashley no end. Still, Nick was surprisingly down-to-earth, eerily perceptive and refreshingly open-minded in ways that, she had to admit, Josh could never be. Nick's intriguing vibe was further amplified by the fact that he had a steady fuck buddy, his buxom raven-haired friend Mia. Ashley was struck dumb when Nick told her in passing that the main event of his encounters with Mia was anal sex. \n\nNick and Mia had met during their freshman year, when they 'sort of dated' for a while, as they put it, before Mia started to explore her lesbian dispositions. That didn't prevent them from staying good friends though, bound by ties of true affection as they were. Besides, although Mia was into girls, as she herself told Ashley, she was unable to give up the one thing she absolutely loved about sex with guys: assfucking. Mia's passion for sodomy and Nick's willingness to fulfill her anal needs led to their agreement, which lasted for years and was still working as intended, to their mutual satisfaction. And yet, despite the matter-of-fact way in which Nick and Mia described it to her, Ashley soon realized that their ongoing relationship was far from being just about sex. \n\nAshley had learned all of this on the very first day she met Nick, when he introduced Mia as his 'incomparable buttfuck buddy, among other things' as if it was the most natural thing in the world. A sultry, snickering Mia immediately confirmed what Ashley had assumed was a joke on Nick's part, leaving the blonde mind-blown. In time, Ashley's initial shock faded and she accepted the situation as a particularly weird side of Nick's general weirdness. She also became good friends with Mia. \n\nThe voluptuous brunette's flirtatious attitude embarrassed Ashley at first, but she couldn't deny that it was flattering to be the object of Mia's attentions and frequent compliments. In truth, beside the undeniable thrill she felt coursing through her slim body whenever Mia's pale blue gaze lingered on her, Ashley genuinely liked Mia. She admired the brunette's confidence, actually envying the carefree way in which Mia expressed her sexuality and enjoyed it without hypocrisy nor guilt. As far as Ashley was concerned, the only relatively bad thing about Nick's buttfuck buddy was the fact that Josh drooled over her large tits and bouncy ass all the time, but that was Josh's fault entirely. \n\nAs she sat on the couch, her ears echoing with Mia's and Nick's lustful groans, Ashley couldn't help but grin. It was ironic that she should have come to talk to Nick about something that his assfucking sessions with Mia had inspired in the first place. \n\nAccording to Mia, there was nothing like the unique feel of a big hard cock thrusting into her anus, stretching and filling her asshole with its meaty thickness and finally pumping her rectum full of cum, all of which, Mia insisted, no dildo in the world could ever replace. Ashley listened to Mia and Nick discussing the joys of anal sex countless times, as did Josh, who had been pestering Ashley about letting him fuck her in the ass pretty much non-stop for months. Not a day went by without Josh sulking about the fact that a scrawny nerd like Nick was sodomizing a knockout like Mia on a regular basis without even having to be her boyfriend, therefore getting plenty of ass and none of the hassles of an actual legit relationship.\n\nAshley's sculpted, delicate features were marred by a scowl as she tried to dismiss from her mind the endless arguments that unfailingly originated from Josh's every blunt request for anal sex. \"If only he wasn't such a moron about it...\" Ashley sighed. \n\nThe sad thing was that Ashley had become very interested in anal sex too, but she resented the fact that Josh considered it some sort of duty she had to perform in exchange for his putting up with her as her boyfriend. That was so unfair, Ashley thought, feeling insecure and nervous. In her darkest moments, she had even found herself wondering if Josh might be right after all, if she was indeed such a bitch that she had to somehow compensate him by letting him have her ass. That was pretty much how Josh put it anyway. \n\n\"No,\" Ashley whispered to herself, shaking her head firmly. \"I'm not a bitch. Nick doesn't think so, and he's way smarter than me and Josh put together. And Mia agrees too.\" \n\nA thin, resigned smile appeared on Ashley's lips and she relaxed, letting out a long sigh. One way or another, the solution to her fights with Josh would come the next day, when she would offer him her virgin asshole as a birthday present. It was a way to bury the hatchet once and for all, Ashley knew, but it was also something that, in all honesty, she desperately wanted to try. She simply couldn't keep denying herself anal sex just because Josh was asking for it in the worst possible way. \n\nWhile the lascivious sounds echoing from the hall got even louder, Ashley's mind went back to the last week, which she had spent training her tiny forbidden hole with a buttplug to get herself ready for her anal deflowering. Recalling the many surprisingly intense orgasms she had brought herself to by flicking her clit while carefully sliding the tapered plastic toy into her clingy anus, Ashley found herself rubbing her legs together under her light skirt, a warm wave of arousal radiating from her groin. Her pointy bra-less tits were heaving in time with her labored breath and her nipples were hard and sticking out painfully against her tight cotton top as she relived the details of how wonderfully she had cum each time she touched her clit while the buttplug stretched out her tight, sensitive asshole. \n\nWithout thinking, Ashley brought her hand between her legs and reached beneath her skirt until her fingertips met her underwear. Her panties were sopping wet and wedged into the smooth cleft of her pussy, the soaked fabric grating teasingly against her puffy labia and stimulating her engorged clit.\n\n\"Damn it, Nick and Mia...\" Ashley murmured as she slowly circled her pussy mound through her panties, trembling under her own touch, biting her lips as she whimpered softly. Then, snickering, she swiftly got up and reasoned: \"Well, I guess I might as well have a closer look. Just to learn some moves from a pro.\"\n\nAn impish grin brightened Ashley's face as she padded down the hallway, getting closer to Mia's husky moans and Nick's muffled grunts. Her heart was drumming crazily in her ears and her pussy was on fire as Ashley stopped right outside Nick's bedroom. Hiding in the shadows, she tilted her head to the side and gazed past the half-open door. \n\nEven though she knew what was going on in there and she had heard them have anal sex before, Ashley had never actually seen Nick and Mia assfucking. In fact, she had never seen anyone have sex at all, except in pornos. Still, not even the anal videos she had been watching recently could have prepared her: what Ashley saw took her breath away.\n\nWith her head thrown back in pleasure and her long black hair flowing wildly across her arched back, Mia was riding Nick's cock cowgirl style, taking him deep in her ass. Sitting on the edge of his bed, his face buried in the soft jiggling valley of Mia's cleavage, Nick was slurping and sucking away at the curvy brunette's puffy nipples while she held his head pressed into her jugs, her fingers tugging at his messy hair. As Mia bounced her round bubble-butt up and down on his thick boner, Nick kneaded her fleshy asscheeks, sinking his fingers avidly in her plump juicy rump. As lost as he seemed in his voracious tit-worship, Nick never missed a bit as he humped his impressive cock up into Mia's stretched-out asshole. The way he kept thrusting into her rectum in perfect sync with her slamming downward plunges proved how practiced Mia and Nick were in the art of sodomy.\n\nAshley's eyes bugged out and she quickly brought a hand to her mouth to silence herself before a gasp of shock betrayed her presence. Her whole svelte frame was shaking with excitement. Nothing had ever looked as insanely hot as the vision of Mia's dilated pink sphincter wrapped tightly around Nick's pistoning shaft. And it must feel incredible too, Ashley realized, judging by the unrestrained groans of pleasure escaping Mia's mouth every time she slid her butt-ring all the way down Nick's pole until her luscious ass clapped against his thighs, over and over again. \n\nFor a few minutes, Ashley lost track of time. Her senses were overloaded. The smell of sex and the sounds of the rutting couple's lustful sodomy enhanced the mind-blowing visual of Mia impaling her ass on that massive cock while Nick devoured her jutting tits and bucked his girthy boner into her anus with relentless butt-splitting strokes. Aroused beyond description, Ashley reached a hand between her legs and pulled her soaked panties to the side. In a daze, her eyes glued to Mia's cock-stuffed asshole, Ashley started fingering herself. Her mind was empty of all thoughts except the need to give relief to her tingling pussy. Ashley bit her lips as she sawed two then three fingers in and out of her dripping slit, trying to match Mia and Nick's reckless buttfucking tempo.\n\nAshley's pussy was drooling juices all over her crotch when she heard Mia gasp throatily: \"I'm close, baby... Uuhh yeah, fuck my ass harder... Oooh I'm cumming, baby! Uuhh fuck fuck fuuuck!\"\n\nPressing her thumb to her clit and rubbing away with abandon, Ashley watched slack-jawed as Mia slammed her bouncy dick-crammed ass forcefully down on Nick's shaft one last time before sitting there, skewered on his pole, shivering all over with his fat cockmeat packed balls-deep inside her anus. Mia's cries of release almost drowned out Nick's tit-muffled grunts.\n\n\"Mmpfhh Miaaa... You're squeezing me so good, I'm gonna cum! Aaahhh I love your ass!\"\n\nA hot wave of pleasure crashed over Ashley as she watched Nick's ballsack tightening while Mia's sphincter kept clenching and unclenching around the thick root of his throbbing cock. The thought of Nick's spurting semen filling the depths of Mia's rectum made Ashley's lust-addled mind spin, triggering her climax. Ashley had to fight not to cry out as she came hard, her thumb circling her clit and her fingers buried all the way in her dripping slit. Panting as quietly as possible, Ashley was weak in the knees as she enjoyed her secret orgasm. While her girl-cum gushed on her digits and drenched her crotch, trickling down her shapely thighs, Ashley's hazel eyes stayed focused on Mia and Nick. They were basking in the afterglow, their arms wrapped around each other's sweaty body, their lips locked in a deep, passionate soulkiss.\n\nAshley had to strangle another gasp of shock when Mia lifted her plump bubble-butt and slowly let Nick's twitching boner slip out of her dilated anus with a lewd slurp followed by the wet thwacking sound of Nick's fat cock slapping against his abdomen. Pushing Nick down on his back, Mia smiled and leaned forward. Pressing her heavy tits against his chest, she kissed Nick languidly, resuming their make out session. While they kissed, the buxom brunette reached her hands back to spread her round asscheeks apart. Wiggling her fleshy rump, she positioned her gaping cum-oozing orifice right above Nick's softening but still impressive dick, letting his seed drip directly on his shaft. \n\nWatching Nick's thick pearly semen dribble out of Mia's slowly shrinking asshole to pool all over his cock was insanely erotic to Ashley, but not as erotic as the sight of Mia suddenly breaking their lip-lock to kneel between Nick's legs, a devilish grin on her pouty lips. Ashley's nectar-slick digits involuntarily resumed diddling her clit as she stared wide-eyed at Mia lapping up a shiny glob of cum from Nick's purple glans before taking his seed-glazed cock between her lips. Humming with joy as she went ass to mouth on him, Mia slurped and sucked on Nick's dickmeat and then licked clean his spunk-splattered abdomen, hungrily retrieving every last trace of sperm she found. \n\nIt was while the wanton brunette turned her head to scoop up a stray dollop of cum from Nick's low-hanging balls that Mia and Ashley's gazes met. Ashley felt cold all over as she realized that Mia's smoky blue eyes were fixed on her. For a second the slim blonde felt on the verge of panic, ashamed and terrified and unable to think. She definitely didn't expect Mia's surprised stare to turn into a complicit wink as she kept nursing on Nick's slippery shaft with renewed vigor. The image of Mia's cocksucking lips slowly curling up in a dick-stretched smile remained etched in Ashley's mind as she stepped back in the shadows of the hall and silently retreated to the living room.\n\nThe next twenty minutes felt agonizingly slow to Ashley, who sat on the couch fidgeting while trying to settle her thumping heartbeat and quick breathing. Despite having just cum, or maybe because of the circumstances of her climax, her pussy was still dripping wet and in need of further attention. Ashley fought with her arousal and guilt while in the background she could hear Mia and Nick go through their post-assfuck ritual of cuddling while playing a couple of cheesy pop punk tunes by one of those obscure bands from the nineties that they both liked so much. A shower together followed, as usual, and Ashley sat through it all, nervously twiddling her thumbs. \n\nWhile she waited on the couch, a stinging sense of jealousy emerged from Ashley's emotional turmoil as she realized how intimate and close Mia and Nick were, more so than any formally definable couple she could think of. \"More than me and Josh for sure...\" she heard herself mumble. \n\nThe sounds of the bathroom door opening then closing, followed by a girly giggle and some murmuring in the hallway, snapped Ashley out of her bitter reverie and warned her that Mia and Nick were done with their shower. She had regained most of her composure when, a couple of minutes later, Mia made her appearance. \n\n\"Hey, Ash,\" Mia greeted her in her lazy, husky voice. Tied back in a ponytail, her long black hair was still shining wet from the shower. Her pale face was glowing and her whole voluptuous body radiated that satisfied, freshly-fucked vibe that she got after her every visit to Nick's bedroom. \n\n\"Hi, Mia,\" the slim blonde replied, her cheeks burning under Mia's smirking stare. Ashley felt too embarrassed to meet Mia's eyes, so she lowered her gaze. She regretted it immediately: the sight of her friend's ample cleavage squeezed inside her blue tank top didn't help attenuate Ashley's nervousness at all. She was biting her lips while Mia walked in front of her, her bouncy jeans-clad bubble-butt swaying before Ashley's flushed face as the brunette came to sit right beside her.\n\n\"So,\" Mia purred, tilting her head as she patted Ashley's arm and scooted closer to her on the couch, \"you look like you enjoyed the show, eh Ash?\" \n\n\"Uhm, yeah about that,\" Ashley stammered apologetically, \"I didn't mean to... Well, I sort of did, in a way, but... Oh my god, that didn't come out right, did it? I'm sorry, it's just...\"\n\nNick's deep, calm voice came to her rescue. \"Hey Ash! I didn't hear you coming in,\" he said, stepping inside the room wearing just his glasses, a pair of striped boxers and a faded Dead Kennedys T-shirt. \"Didn't Josh tell you? They're having all the interns stay in late today. I assume one of them will be chosen to be sacrificed to their Evil Lawyer Overlord as soon as darkness falls.\"\n\n\"Yeah, he told me,\" Ashley chuckled, glad to change the subject. \"But I actually came to talk to you, Nick, about Josh's birthday tomorrow.\"\n\n\"I've said it before and I'll say it again: you're way too good for that jerk, honey,\" Mia declared, softly caressing her blonde friend's forearm from wrist to elbow one last time before standing up to leave. \"Well, time to go. I'll let you guys talk. I gotta swing by my place and I'm already late for class as it is. And I blame you for that, you know!\" she finished, pressing herself against Nick and poking her forefinger into his chest.\n\n\"Oh, really?\" Nick grinned, wrapping his long arms around Mia's waist and caressing her plump juicy ass as she hugged him tight and joined her lips with his in a tender parting smooch. \"Should I remind you the exact sequence of events that led to your being late right now?\" \n\nLaughing throatily at Nick's teasing, reaching her hand low to cup his cock through his boxers, Mia shrugged: \"Fine, I guess we could share the blame after all.\"\n\n\"That seems fair,\" Nick nodded, \"but if you want we can analyze this more thoroughly later. Around dinner time, maybe?\"\n\n\"Deal. I'll even bring pizza,\" Mia added, disentangling her curvy frame from Nick's embrace and strutting her way to the door. \"See you, guys!\"\n\nOnce they were alone, Nick took Mia's seat by Ashley's side. \"So,\" he said, \"what about Josh's party? Any change of plans or are we still going to that ridiculous wine bar he likes?\"\n\n\"No, no change of plans. I just wanted to, uhm, surprise him... I was thinking of waiting for him here when he gets back from work tomorrow, before he's supposed to come pick me up for the party and, well...\" she trailed off nervously as she met Nick's penetrating, intense brown eyes. \"I kind of need you not to be here when that happens, Nick. I have to be alone when Josh gets here, to give him my, uhm, gift, I guess you could call it, so...\"\n\n\"No problem, I won't be here,\" Nick replied. \"My Ethics professor has organized a conference about Kierkegaard with this Danish writer around that time, and I'm pretty much forced to go. In fact, I might get to the party a bit late but I'll meet you there as soon as possible.\" \n\n\"Okay. Thanks a lot, Nick.\"\n\nHe just smiled and nodded, always keeping his scrutinizing gaze on her. Then, as if he was reading Ashley's thoughts through her bright hazel eyes, he added: \"So you're letting him fuck you in the ass tomorrow, uh. That's quite the birthday present, Ash.\" ",
        "Ashley gasped and her face turned beet red. \"What!? I... Jeez, Nick, how did you even know?!\"\n\n\"I didn't, not until a moment ago,\" Nick shrugged, pushing his glasses up on his nose with his forefinger. \"You just confirmed some suspicions I've had for a while now, since I heard you guys fight about it for the hundredth time, more or less. These thin walls and Josh's awful habit of bellowing away at you are a very bad combination, as far as keeping things quiet goes.\"\n\nAshley couldn't help but snicker along with Nick. \"Yeah, I guess you're right. It's hardly a secret...\"\n\n\"Are you sure about this, Ash? You don't look too happy.\"\n\n\"I don't know, Nick,\" she exhaled, sinking back into the couch. His presence beside her calmed her and got her in the mood to talk. Staring into space, she let the words flow. \"I do want to try anal, and god knows Josh does too, he bugs me about it all the time... Plus, things haven't been exactly great between us lately, so I figured maybe this will help patch it all up again. I just wish we had what you and Mia have. You two always look so happy and relaxed together and you're not even... I mean the two of you aren't... Uhm... I'm sorry, Nick, this is really none of my business.\"\n\n\"It's okay,\" Nick smiled, \"but you should know that Mia and I are in love. That's what makes things work.\"\n\n\"Wait, what?!\" Ashley said, shocked about how casually Nick was revealing his true feelings for Mia. \"But... She has girlfriends! I thought you two were just fuck buddies. Well, and friends too, sure, but, I mean... In love?!\"\n\nNick was calm as he replied: \"Over the years, Mia has had a single one-night stand, which was technically a threesome since I was there too, and three girlfriends, who were warned that Mia and I would still be doing what we do. Whenever Mia was asked to choose, she always chose to keep having what she has with me and she dumped whoever wanted her to leave me. I'm not sure one hundred percent, of course, but everything tells me that Mia and I are in love. I feel that way at least, and it seems like she does too. Besides, how could this thing we have go so well otherwise?\"\n\nAshley was shocked as she muttered: \"Why are you telling me this? Why now?\"\n\n\"To explain that giving up your ass to someone who doesn't appreciate you isn't the solution to your problem. Josh isn't in love with you, Ash, and he doesn't love you either,\" Nick tersely stated, reaching for her slender fingers and holding them in his warm palm. Pinned to the couch by his unwavering gaze, too stunned to reply, Ashley just stared back in wonder into Nick's deep brown eyes. \"Mia is right. He doesn't deserve you, but you do deserve better. It's as simple as that.\"\n\nIn the long silence that followed, Ashley had to fight back the unbidden tears that were swelling in her eyes. It was indescribably hard for her not to break down completely right there and then. When she found her voice, it was shaky and weak, coming in between short choking breaths: \"Why are you telling me all of this, Nick? It's not fair... I'm trying to make things work and... Just why?!\"\n\n\"I didn't mean to upset you, Ash, and I'm really sorry if I did,\" he said, squeezing her tiny hand with his long fingers. \"But I just had to tell you. And yes, it's not fair, but almost nothing ever is. The good news is, it's true. Well, at the very least it's my subjective perception of what we collectively define as 'truth', but, since such perception is the closest approximation to any general supposedly shared concept of verisimilitude that I can ever hope to gather and express...\"\n\n\"Oh my god, Nick!\" Ashley shouted, interrupting his rant before he got even more tangled up in it. She was half exasperated and half glad, mildly irritated and yet deeply relieved to see Nick being Nick. \"Come on,\" she laughed, \"this is really not the time to go all Sheldon Cooper on me!\"\n\nNick smiled as he replied: \"Oh yeah, since you mentioned it, I'm afraid you'll have to catch me up on The Big Bang Theory sometime. I stopped paying attention to that show a couple of seasons ago. It used to be so much fun, but these days I just stare at the screen and try to sleep with my eyes open whenever Mia wants to watch it. Just don't tell her, please.\"\n\nAshley couldn't help but burst out laughing. Nick joined her and soon the heavy mood weighing on her lifted. Looking into his bespectacled, handsome face, Ashley felt a surge of emotion for this strange, unique guy that she had met so randomly but on whose opinions and counsel she had come to rely so much. Without thinking, she threw herself at Nick and hugged him tightly, clutching at his tall wiry body. It made her smile to feel him embrace her warmly in kind. \n\n\"Now that's something the real Sheldon wouldn't do so easily!\" Ashley giggled.\n\n\"That's his loss, hugs are the best!\" Nick quipped, making them both laugh. \"So, are you gonna be okay? I'm sorry you felt bad, but I just had to tell you this. I care too much about you to stay silent.\"\n\n\"It's okay, Nick, I actually like your honesty a lot. I always know that, whatever you say, it's never bullshit. We're good,\" she nodded before squaring her slim shoulders and saying: \"I'd better go now.\" \n\n\"You sure? You can stay here as much as you want, and Mia will be back later too. With pizza!\"\n\n\"No, it's fine,\" Ashley said, standing up to leave, feeling tingly and fuzzy as she let go of Nick's hand. \"I'm not really in the mood, but thanks. Don't tell Josh I came by, okay?\"\n\n\"Of course,\" Nick nodded. \n\nAs she opened the door, Ashley turned to see Nick sitting on the couch, looking her way and comically waving goodbye. There was a smile on Ashley's lips as she left the apartment.\n\n*****\n\nNick was late for Josh's party, but he didn't care. He had agreed to go just because he knew that Mia and Ashley would be there too. Still, he hated the idea of having to spend the evening at a wine bar full of Josh's law school buddies, fellow interns and other future lawyer types. It was with no guilt whatsoever that Nick had chosen to come back to the apartment to take a nice shower before heading out to the party, and so what if it meant getting there much later than he was supposed to.\n\nSnickering as he once again tricked the rusty old lock into opening smoothly on the first try, Nick let himself in. As soon as the door swung shut behind him, he knew something was wrong. According to Nick's estimations, Ashley should have given Josh his undeserved birthday present by then and they should be both at the bar, Josh drinking with a shit-eating grin and Ashley sitting uncomfortably, regretting losing her anal virginity to him. Nobody was supposed to be home. But clearly that wasn't the case. \n\nThe wracking sobs coming from the living room were unmistakable to Nick. He was only mildly surprised when he saw Ashley curled up dejectedly on the couch, hugging her knees and crying her eyes out. She was wearing a flimsy pink babydoll that did nothing to hide her ripe perky tits and a pair of matching see-through thong panties. The vision of Ashley's smooth pussy and the tiny tuft of blonde pubic hair on her mound distracted Nick for a second, but her desperate whimpering kept him focused.\n\n\"Ash,\" he said softly, nearing the couch, \"it's okay, I'm here now.\"\n\n\"Go away, Nick...\" Ashley sobbed, raising her head to look at him with puffy, tear-filled eyes. \"Just leave me alone, I wanna be alone now, please...\"\n\nKnowing better, Nick ignored Ashley's words and sat beside her. She flinched when he wrapped his arms around her naked shoulders. Ashley resisted for just one moment when Nick pulled her gently to him, then she let out a loud sigh and relaxed, allowing him to hold her in his embrace. For a while, Ashley just cried and cried, her face pressed into Nick's shirt while he ran his hands along her arms and through her short blonde hair. Nick said nothing, he just hugged her and soothed her while she let it all out. \n\nFinally, Ashley raised her head and faced Nick. Her lips were still quivering but her expression seemed focused enough as she murmured: \"You were right about Josh... He didn't deserve me... The bastard was cheating on me!\"\n\nAnother bout of crying followed before Ashley managed to calm down and speak again. While Nick handed her tissues and listened, she told him all about her awful evening, how she had been waiting for Josh practically naked in his bedroom, ready to gift him with her virgin ass. Too bad that when he got home from work, Josh did so with another woman. \n\n\"She's like forty or something! She's a partner at the law firm, a real badass litigator of some kind... Anyway, they were laughing and guess what he was telling her while they made out in the hall?\"\n\nNick shrugged and kept wiping the last tears from Ashley's delicate, sculpted cheekbones.\n\n\"He was telling her that he hoped she brought the lube because he was gonna fuck her in the ass even harder than last time! That's when he opened the door and they stumbled into his room, all giggly and horny, and there I was, dressed like this, ready to give that cheating MILF-banging idiot my anal cherry! After all the crap he gave me about it, after making me believe that it was all my fault if our relationship was broken, it turns out that he was cheating on me with that fake-titted intern-fucking whore-faced boss of his all along! He didn't even try to defend himself or apologize to me. When he saw me there, he just kinda laughed and said 'Too late, bitch!' and then he left, with that slutty old cunt! They were both laughing, can you believe it? Laughing at me! Oh my god,\" Ashley sobbed, hanging her head in total desperation, \"I'm such an idiot, Nick, I was so stupid...\"\n\nNick let a couple of minutes and a few more tears go by before once again drying up the sadness from Ashley's face with his fingertips and speaking. \"It's not about idiocy nor stupidity, Ash. You're trusting and sweet and way too good for morons like Josh who exploit your qualities to their advantage because they see kindness as a weakness and emotions in general as flaws to profit off.\"\n\n\"Yeah, well, I guess they really are flaws after all,\" Ashley replied with a bitter, self-deprecating laugh, \"I mean, look where they got me!\"\n\n\"I disagree,\" Nick said holding Ashley by her smooth naked shoulders and staring straight into her lustrous hazel eyes. \"Your surprise for Josh, which seemed like an undeserved reward for an unworthy partner just yesterday, turned out to be his demise. Now you know without a doubt that he's an unappreciative, two-faced, cheating piece of shit. And I know that too. So, first thing in the morning after he goes to work, I'll pack his stuff, leave it out the door and change the lock. I'm sure the landlord will be okay with it when I tell him that I'm paying for it, plus I always let the old dude win when we play chess so he kinda likes me already. Technically I'm the only one on the contract and Josh is paying me his share of the rent off the books, so by this time tomorrow that douchebag will be out on his ass. So much for being a supposedly smarty-pants wannabe lawyer, eh?\" \n\nHearing all that, Ashley pressed her svelte, almost nude body against Nick, snuggling tightly in his embrace. \"Oh, Nick...\" she murmured. She was smiling as she looked up adoringly into his kind, expressive face, her eyes sparkling with emotion. \"I don't even know what to say... You're the best. Thank you so much, for everything.\"\n\n\"Don't worry about it, Ash,\" he said, his fingers massaging the back of her neck. \"I told you, I care about you. A lot.\" \n\n\"I care about you too,\" Ashley whispered, nuzzling Nick's chin. \"You know, sometimes I thought I was staying with Josh just so I could hang out here, with you and Mia, and he was only an excuse to come by. I mean... I really like being with you, with both of you guys. Well, you mostly, but...\"\n\nFor a second they just sat there, snuggled together, their gazes locked, their mouths so close that they could feel the warmth of the other's lips. Then he leaned in and pressed his mouth to hers. \n\nAshley closed her eyes and parted her lips, shivering in Nick's arms, hesitantly accepting for a second, then actively reciprocating his kiss. The whirl of conflicting emotions raging inside her seemed to coalesce into an intense sense of warmth pervading her whole body as the first soft peck was followed by a full smooch, then by another, until they were making out passionately. \n\nWhile she sucked Nick's tongue into her lips and his hands roamed hungrily all over her back and her sides and her thighs, any uncertainty was wiped away from Ashley's mind. She felt tingly all over, her nipples stiffened and her pussy was burning with need while she rubbed her almost naked body against Nick's lanky frame. \n\nWhen his big hands slipped under her babydoll and cupped her firm pointy tits, Ashley whimpered lustfully into Nick's mouth. Her sensitive nipples were so hard they almost hurt while Nick gently tweaked them and rolled them expertly between his fingertips. Crazy with arousal, Ashley squirmed in Nick's arms, pressing her thong-clad crotch against the growing bulge in his pants, desperate to give her budding clit some relief. But that was far from enough.\n\nSitting up, Ashley tore her babydoll off and got rid of her sopping thong. Breathing hard, she grabbed Nick's hand and led it to her needy pussy. Panting as he started sliding his fingers along her wet slit, she pushed her tits in his face, pleading: \"Suck my titties, Nick, please! I need this so bad... Oohh fuck, yes! Finger my pussy like that, oh my god yeeees!\"\n\nNursing avidly on a puffy pink areola, Nick slid one then two fingers between the soaked folds of Ashley's pussy. His cock was achingly hard in his pants as he chewed and slurped and nibbled on one nipple while pinching the other with his free hand. Ashley gasped in pleasure, writhing in his lap as Nick pumped his digits inside her tight slit. Excited as she was, the slim blonde shuddered with ecstasy when she felt Nick's nectar-dripping fingers vacate her pussy and move to her clit. \n\n\"Ohhhh yes,\" she panted, tugging at Nick's unruly hair to force more of her delicate tit-flesh inside his suckling mouth. \"Rub my clit, Nick, ooohhh... Bite my nipple, aahh, harder! Oowwh, yeeess hardeeer! Aaahh I'm... I'm cumming!\" \n\nWhile a quick bursting climax rippled through her, Nick kept stimulating Ashley's trembling body, feasting on her splendid tits and working her quivering pussy and swollen clit with his fingers. He would have kept slurping on her soft perky boobs forever if she hadn't suddenly pushed him against the couch's backrest, tearing his shirt off of him before kneeling between his legs. The feverish glint in her eyes and the way she licked her full lips while she unbuckled and unzipped him made Nick's heart beat faster, his cock pulsing with excitement.\n\n\"Holy fuck!\" Ashley exclaimed as she yanked down Nick's pants and boxers, making his massively erect cock spring out and slap back against his flat belly. \"Oh my god, Nick, you're so big...\"\n\nEven though she had seen him naked the day before, having Nick's thick veiny pole twitching in her face was a totally different thing. Dreamily, Ashley wrapped her slender fingers around the base of Nick's shaft, barely managing to reach around. As she started slowly jacking him off, she couldn't tear her eyes from his bloated purple glans, shiny with oozing pre-cum. Without a second thought, cupping his heavy balls in her free hand, Ashley brought her face closer to Nick's impressive dick and parted her lips, taking him in her mouth. Ashley loved sucking cock, and she was determined to show Nick just how much pleasure she could bring to his amazing tool with one of her blowjobs.\n\nThe warmth and wetness of Ashley's mouth made Nick groan ecstatically as she started to slurp and suck on him. The sight of her sculpted, beautiful face stuffed with his fat dick was stunning in itself, and it amplified the glorious sensation of having his blonde friend lovingly nursing on his boner, suckling expertly on him and gobbling his shaft as if it was a delicious lollipop. \n\nHumming contentedly as she let her saliva drool along his fleshy hardness, Ashley blew Nick's cock with abandon, bobbing her head up and down sloppily, sliding the soft seal of her lips a bit lower at each pass. Spluttering and gagging, she kept inhaling more and more of his pole, forcing Nick's pulsating boner deep into her gullet, pausing in her relentless fellating efforts only to take some quick lungfuls of air and let a few more thick ropes of spittle dribble over that huge column of meat. Nick was moaning with pleasure when Ashley, her face streaked with gag-induced tears, finally managed to cram his entire length down her throat. The constricting confines of her gullet squeezed him amazingly, and the visual of those pretty lips stretched obscenely around his thick cock burned itself in his memory, it was just so hot. \n\nWhile she gave Nick one the best blowjobs of his life, Ashley reached a hand to her dripping pussy and attacked her clit with a whirling, feverish flurry of rubs. Her orgasm was quick, stabbing at her deliciously. Gagging and choking but refusing to quit her sloppy deep-throating ministrations, Ashley could only hum her pleasure, since her dick-clogged gullet prevented her from crying it out. In the haze of her climax, only one thought floated in Ashley's mind: the desire to feel the meaty, filling presence of Nick's cock deep inside her body, most of all in her virgin little asshole.\n\n\"Wow, Ashley...\" Nick groaned after a while as she glided her suctioning lips ever so slowly up along his huge erection. Planting a lewd wet smooch on his glans, Ashley let Nick's spit-glossy boner slip out of her talented mouth and lifted her face from his lap, breathing deeply while he went on: \"You're incredible, you deep-throated me like a pro!\"\n\nHolding his thick shaft in her tiny hands, slathering her own spittle all over his length, Ashley smiled at Nick. As much as she wanted to suck him to completion and let him cum in her mouth so she could taste him and feel his creamy sperm shooting down her throat, Ashley wanted something else even more. Her stomach was full of butterflies and her thighs were streaked with her nectar as she blurted out: \"I want to do it, Nick. I want it so badly, and you're the one I want to do it with.\" \n\nNick blinked, understanding exactly what Ashley meant. His dick throbbed with anticipation in her jacking hands as he wrapped his head around the realization that his beautiful friend was offering him her anal virginity. Nick adjusted his glasses on his nose and locked gazes with Ashley before speaking. \"Are you absolutely sure, Ash? Is this really, truly what you want?\"\n\nAshley nodded firmly, undeterred by the size of Nick's cock and by the slightly worried edge in his voice. She was actually moved by the fact that he didn't just jump at the chance of sodomizing her but asked her if she was okay with it instead, checking if she was ready. And she definitely was. \n\n\"Yes. I want this, Nick, I'm a hundred percent sure,\" Ashley declared. \n\nLetting go of his hard-on, she moved back on the couch and got on all fours, ass in the air and face down on the seat cushion. Wiggling her round tushy in Nick's face as she lowered herself on her elbows, Ashley looked back at him and murmured: \"Fuck my ass, Nick. Take my virgin little asshole and make it yours. I want you to fill my ass with your big fat cock, I want you to buttfuck me until you cum deep inside me. Please, Nick, I need it.\"\n\nThose sizzling hot words and Ashley's sincere, urgent tone made Nick's mind spin. Most of all, he was excited by the idea that, consciously or not, Ashley may have wanted this to happen specifically with him all along. At the very least, he was sure that it had been his own and Mia's passion for anal sex that instilled the idea of buttfucking in Ashley's mind to begin with. The thought of Mia brought a smile to Nick's lips. She had often talked about Ashley during their assfucking sessions, wishing their sexy blonde friend could be there with them. ",
        "\"Ash, you know I'll have to tell Mia about this, right?\" Nick warned her, his eyes never leaving Ashley's mesmerizing, flawless tiny butt. \"She's been picturing a scene like this for quite a while now. I doubted it would ever happen, but now I'll just have to tell her that she was right!\"\n\nSquirming with need, getting even more turned on knowing that Mia had been fantasizing about her getting anally deflowered by Nick, Ashley rotated her sweet ass enticingly as she looked back at him over her shoulder and replied in a pleading tone: \"Sure, tell her, I don't care. I just need you in my ass, Nick. I want to feel what Mia feels, please Nick, make me cum like she cums! There's some lube in my bag,\" she went on, surprising herself as she let out her wanton, devouring urge to feel Nick's cock inside her little forbidden hole as soon as possible. \"Give me your big cock, Nick, I need you to fuck my ass! Just stick your cock in my virgin asshole, now, pleeease!\" \n\n\"No,\" Nick said, meeting her eyes, causing her to panic. For a horrible moment Ashley thought it was all falling apart. Then his deep, calm words reached her. \"We're not gonna hurry this, Ash. It's your first time, so we'll do it right. I want you to enjoy this as much as possible.\"\n\nAs Ashley sighed in relief and tilted her ass up higher for him, Nick removed his remaining clothes and retrieved the lube from her bag. Kneeling behind her upturned little rump, Nick held Ashley's supple asscheeks in his hands, caressing them adoringly, massaging their soft unblemished skin. Enamored as he was with the fleshy sumptuous roundness of Mia's plump bubble-butt, the vision and feel of Ashley's offered ass made him tremble with excitement. Taut and curvy, Ashley's heart-shaped tushy was absolutely perfect, so juicy and protruding, like a delicious crunchy apple just waiting to be taken. Ashley cooed under Nick's devoted touch, loving how he kneaded and fondled her ass, reverently cupping her smooth buttcheeks in his hands. She felt safe in her surrender to him, trusting him to know what to do with her, sure that he would make her feel as good as he did Mia. \n\nAs he spread Ashley's firm shapely buns to reveal her pink virgin rosebud, Nick felt his rock-hard cock twitch at the sight of that tiny winking pucker. \"Whoa, Ash,\" he murmured, spellbound, \"you've got the cutest little asshole ever!\"\n\nAshley couldn't help but giggle. \"Thanks, I guess. Nobody ever told me anything like thaah-aahh!\"\n\nThe sudden feel of Nick's warm wet tongue licking her sphincter made Ashley choke on her words. Her eyes popped wide open and a sharp hiss of unexpected, naughty delight escaped her mouth as Nick treated her pouty butthole to a long slurping tongue swipe. \"Ohhh my god, Nick! What are you doing to me?!\" \n\n\"Should I stop?\" Nick teased, still brushing his lips against the tender ring of Ashley's anus, kissing her crinkled hole and lightly flicking his tongue all around its rubbery edges.\n\n\"Fuck no!\" she blurted out, already hooked on that new unusual pleasure. \"Please, don't sto-oohh-oowwhhh god!\" \n\nAshley's needy plea hadn't even been uttered in full when Nick started voraciously eating her asshole out. To the sound of her sexy yelps, he licked and slurped and lapped away at Ashley's irresistible little butt-ring, moistening her pink orifice and making her anal muscles relax enough for him to start poking the tip of his tongue into her virgin anus. \n\n\"Uhhh! Oowwwh Nick!\" Ashley moaned, her mouth agape as she enjoyed the thrill of having her asshole rimmed for the very first time. \"Your tongue is amazing... Aaahh I love your tongue in my ass! Uuhh yes lick me like that, it's soooo good!\" \n\nFor a while Ashley writhed like a snake on the couch, maddened by Nick's skillful analingual ministrations. Her mind went blank and her pleasure just kept building up to unprecedented levels as Nick expertly tongue-fucked her tight sensitive butthole. Panting like a bitch in heat as Nick wiggled his talented tongue into her ass while his lips smooched her elastic sphincter, sucking and slobbering all over it in a lewd parody of a french kiss, all that Ashley could think of was how much more pleasurable it must be to have his big cock buried to the hilt inside her tingling, needy anus. \n\nShe was about to beg Nick to just ram his dick up her ass when his deft fingers reached her overcharged clit. Ashley mewled as Nick's rimjob got even more intense and he clamped his insatiable mouth even harder onto her spittle-slick orifice, sucking avidly on her overstimulated butt-ring. His tongue sank as deep as it would go inside her snug wet asshole and he slipped two fingers in her drenched slit while he unleashed a sequence of quick thumb rubs on her clit.\n\n\"Ooohh! Ooohh my fucking god...\" Ashley gasped, thrilled by the realization of how hard she was about to cum while getting her butthole licked. \"Uuuhh fuuuuck!\"\n\nAll through her climax, Nick kept poking his tongue into Ashley's ass while slurping on the rubbery edges of her sphincter. He loved the feel of her anus tightening around his tongue, pinching him like a tiny nibbling mouth. As her gushing girl-cum bathed his pussy-diddling fingers though, Nick just couldn't help himself anymore. Unclasping his mouth from Ashley's winking little rosebud with a last sloppy kiss, he dipped his face lower and began lapping away at her juicy slit. \n\nAshley shuddered and came again while Nick tasted her smooth labia and drank up her scrumptious nectar, licking her pussy like a thirsty animal. She didn't even have time to feel any emptiness in her ass, since Nick had eased his long forefinger into her saliva-lubed anus as soon as he started munching on her snatch. His slow butt-fingering strokes coupled with the relentless assault on her drooling pussy made Ashley feel like she was experiencing a permanent state of climax, as wave after warm wave of bliss crashed over her in a continuous ebb and flow of pleasure.\n\nNick had gently worked a second finger into her asshole and was determined to drink down a lot more of her delicious nectar when he realized that Ashley's whimpering moans were coalescing into actual words. Relenting his oral assault, he listened carefully. It was like a mantra, repeated by a dopey-eyed Ashley between mewls of delight. Her sculpted cheekbones were flushed with arousal and she was slack-jawed, her face pressed sideways into the cushion as she murmured: \"Fuck... Uuhh... My ass... Please... Fuck my... Aahhhh... Ass... Fuck my ass, Nick, please...\"\n\nGrabbing the bottle of lube, Nick knelt behind Ashley's incredible ass and poured the slippery fluid generously over her pink pouty rosebud. Using his fingers in slow circling motions, he massaged the lube all around Ashley's pliant saliva-shiny orifice before worming one then a second glistening digit into her tight little hiney-hole. Gently gaping her sphincter with his fingers, Nick let a healthy amount of lube dribble straight into his blonde friend's untouched rectum and proceeded to grease her up as thoroughly as possible. \n\nAshley winced as the cold liquid coated her anal passage, but her squeals of surprise turned into contented purrs when she felt Nick's massive boner nudging against her clit and then sliding back and forth between her split pussy lips. His delicious teasing of her weeping snatch relaxed her and distracted her while he slowly pumped two fingers into her well-lubed anus, adding more and more of the slippery fluid until his digits were gliding effortlessly in and out of her clingy little butt-ring.\n\nAshley trembled with anticipation as Nick rubbed his glans on her engorged clit one last time before withdrawing his cock from her soaked cleft, saying: \"Almost ready, Ash. I'll just lube myself up a second, okay?\"\n\n\"Uh-hu,\" she nodded meekly. Her mouth widened in a perfect O a second later when she felt his fat spongy glans pressing at the entrance of her pussy and she realized what he meant by 'lubing up'. \"Oohhh! Oh my god, Niiiick!\" Ashley yelped while he slowly pushed his massive erection inside her slit, widening her tender nether lips and filling her gushing hole like nobody had before. \n\n\"Aaahh, you've got such a sweet little pussy, Ash! You're so wet and tight!\" Nick grunted, shaking with pleasure as he bottomed out inside her silky soft vaginal tunnel. \n\nStill sawing his fingers into her oily anus, Nick began pumping his throbbing boner into Ashley's dewy, enveloping folds. Leaving most of his length inside her pussy at each pass, he let her dripping nectar bathe his dickmeat, coating himself in her overflowing juices. With her asshole twitching from his persistent fingering and her pussy crammed full of his huge cock, Ashley could barely find the breath to pant as she floated away on a cloud of crackling delight. She had never felt so hot, so slutty and satisfied. The sensation of having both her holes plugged at the same time made her mind feverish with desire while Nick's slowly pistoning shaft and his slippery ass-poking digits made both her pussy and anus pulsate with pleasure.\n\nWhen she felt him leaning down on her arched back while he pushed his dick harder into her pussy, Ashley shivered and gasped. \"Touch your clit, Ash,\" Nick said, his hot breath hitting her ear and his deep calm voice going straight to her lust-addled brain. \"Touch your clit for me. Do it, now.\" \n\nAshley was already moaning even before her trembling digits made contact with her clit. Her swollen nub felt electric under her fingertips as she started rubbing it wildly. Seconds later, she was cumming again, even harder than before. While an overwhelming surge of pleasure claimed her slim body and took her breath away, Ashley wasn't even sure if her climax was radiating from her spasming asshole, her leaking dick-stuffed pussy or her throbbing clit.\n\nOnce Ashley's orgasm abated and she stopped writhing underneath him, Nick straightened up and slipped his pole out of her quivering slit while withdrawing his fingers from her well-prepared sphincter. \"Keep touching your clit, Ash,\" he said, resting his nectar-dripping erection between her curvy little buttcheeks and adding an abundant dose of lube to the layer of girl-cum coating his dick.\n\nStill hazy and glowing, Ashley suddenly felt empty. Nick's hard cock wasn't filling her pussy anymore and he had removed his long, talented fingers from her tingling asshole. Only her clit-frigging digits still remained to keep her orgasmic high from crashing down. She sighed with relief while Nick started sliding his thick shaft along her lube-shiny asscrack while he pulled the edges of her sphincter apart with his thumbs. The corners of Ashley's mouth turned up in a thin, unreadable smile as she realized that the time had finally come: she was about to get her anal cherry popped.\n\n\"Ash,\" Nick said, poking the fat tip of his cock against her slick, pliant anus, \"if you want me to stop at any time, you only have to say it. Seriously, it's okay. Just say the word and I will pull out at once, no problem. The last thing I want is to hurt you. Okay?\"\n\n\"Mmh Nick,\" Ashley groggily said, looking back at him over her shoulder with a dopey grin on her lips, \"I won't stop you, because you won't hurt me. I just know it.\"\n\nHer willingness and trust made Nick smile affectionately at Ashley. \"Okay then,\" he said, gaping her elastic butt-ring with his fingers as he wedged his bloated cockhead against that barely open orifice. \"Let's do this. Just two things: try to stay as relaxed as possible and never stop working your clit, it's really important. I'll go very slow, but it might still hurt a bit at first while you adjust. It will pass soon though, if you keep frigging your clit and you focus on not cramping up on me, okay?\" \n\nAshley just kept smiling tenderly at him, nodding in assent, a look of absolute trust painted on her face and a glint of excitement brightening her pleasure-glazed eyes. Caught in a sudden surge of emotion, Nick leaned down and nuzzled her thin neck. \"I'll be very gentle, I promise. I want you to enjoy this,\" he whispered, planting a long soft kiss on Ashley's parted lips before straightening up on his knees again, ready to take her anal virginity. \n\nHis meaty, veiny dick looked obscenely big lined up with her tiny pink rosebud, but Nick was confident that Ashley could take him. Grabbing her buttcheeks in his hands, he pulled the rubbery edges of her sphincter further apart with his thumbs, making way for his swollen glans. Then he pushed. Ashley's virgin asshole resisted him at first, but Nick calmly persisted. Nudging his fat tip against her little winking pucker, he kept pressing on her backdoor without forcing his way in, until Ashley's elastic butt-ring yielded and started dilating, allowing his hardness to slip inside her ass. Nick's groan fused with Ashley's gasp as he slowly penetrated her tight slippery orifice, his cockhead disappearing into her butthole as if sucked in by her willing, clingy anus. \n\n\"Owwhh Nick, I can feel you sliding in me! Uuuhh sooo big... Oooohh my god!\" Ashley panted as she felt her snug little hole stretching out around Nick's rock-hard girth. Her clit-frigging fingers trembled and stayed still while she was hit by a moment of panic. Nick's cock suddenly felt impossibly huge as it opened up the tiniest, most delicate, most private of gateways to her body.\n\n\"Don't stop working your clit, Ash,\" Nick calmly reminded her, stopping once he felt her sphincter clamp down right past his cockhead, squeezing his tip while Ashley's anal muscles got used to his stuffing presence. \"It's okay, Ash, just breathe deep and rub your clit,\" he continued, massaging her beautiful little ass and tickling her tailbone. \"It probably feels weird now but it will pass. Just try to relax and don't ever stop touching your clit. Breathe and relax, Ash, I'll wait until you're ready.\"\n\nAshley did as he said, desperately attacking her clit while she attempted to keep her anal muscles from cramping. Much to her surprise, it worked. Soon her asshole stopped clenching around Nick's embedded glans and the discomfort of having her sphincter so unnaturally stretched out and filled up started to diminish. It still felt strange, but in a good, arousing way. Nick's patient presence behind her and his gentle caresses on her ass soothed Ashley's fleeting worries, while a sense of naughty pleasure began pervading her, radiating from her dilated anus and her pulsing clit.\n\n\"Better?\" Nick smiled at Ashley as he felt her asshole loosening a bit while her whole body relaxed.\n\n\"Yeah, uuhh... Much better!\" she chuckled, her breathing calmer and not so raspy anymore. \"I think you can give me more now. Ooowhhh, yes... I'm ready for more cock, Nick, give it to me.\"\n\nGrabbing the bottle and pouring more lube right over Ashley's dick-stretched sphincter, Nick started feeding more of his meat into her virgin ass. He went in as slowly as possible, pressing into her anus with shallow, extra gentle strokes and then stopping, waiting, adding more lube and finally retreating a bit before restarting that gradual anal penetration all over again. Every time he drove his cock deeper inside her snug asshole, he looked at Ashley's face, taking in every nuance of her pleasure-distorted expression, looking for hints of pain. Perceiving only a devouring anal lust on her delicate features, entranced by the sexy sight of her barely open eyes and wide open mouth, Nick then pushed himself a little bit further into her untouched rectum. \n\nAs he patiently repeated his gradual butt-delving routine, unhurriedly opening up Ashley's tight dick-squeezing asshole a millimeter at a time, Nick basked in the unique, irreplaceable sensation of deflowering a virgin ass. It was a glorious, indescribable feeling, one that he had experienced just a few times in his life but that he was lucky enough to relive, to a point, every time he sodomized his adored Mia, who could work her experienced rectum around his cock in such a lasciviously masterful way that she always felt as snug as an anal virgin. Still, Ashley really was an actual anal virgin, and that notion made Nick rabid with desire and bursting with emotion at the same time. As he sank more and more of his massive shaft inside Ashley's untouched anus, Nick knew he'd be eternally grateful to his slim blonde friend for allowing him to savor the sublime thrill of being the first man to penetrate her tight little asshole.\n\nBy the time he had managed to wedge his entire length inside Ashley's steamy cock-hugging rectum, Nick was on the verge of climax. The visual of her oily distended butt-ring wrapped around the base of his dick and framed by those tiny splayed-open asscheeks was simply epic, but it was nothing compared to the feel of being buried to the hilt inside Ashley's beautiful heart-shaped ass. \n\nThe virginal tightness of Ashley's asshole was exquisite. The slippery, velvety warmth of her anal walls snugly enveloping his length resembled a barely-fitting glove squeezing Nick's aching boner from tip to root. As he enjoyed the clenching spasms of Ashley's anus massaging his pole like a soft pumping fist, Nick gritted his teeth and tried his best not to succumb too soon to the delicious pressure of her rubbery rectum holding firmly onto his dick, milking him and tugging at him, keeping his throbbing shaft cozily trapped in the hot clutching grip of her anal depths. \n\nWith his low-hanging balls pressed against her dripping pussy lips and his groin glued to her firm buttcheeks, Nick stayed perfectly still, not only to let Ashley get used to being impaled on his girthy cock but also to prevent his orgasm from exploding just yet. Caressing her lovely round tushy, Nick excitedly said: \"You did it Ash! I'm all the way inside your ass! Are you okay? Does this feel good for you? Because your asshole feels incredible, absolutely fucking incredible!\"\n\nHis words seemed far away to Ashley, overpowered as she was by the intense sensations that radiated from her amazingly stimulated anal nerve endings. At some point during Nick's careful invasion of her virgin anus, Ashley had stopped simply enduring his stretching, unnatural presence inside her ass. Without even noticing the transition from discomfort to delight, she had started to enjoy getting anally penetrated, actually reveling in the feel of absolute fullness that made her dick-crammed rectum pulse with a new, unique kind of ecstasy. For Ashley it was a revelation, both physical and mental, to realize how good it felt to have her asshole stuffed full of cock.\n\nFrigging her clit automatically, high on a sense of impending release like she had never felt before and that had been growing persistently while she got her butt filled with Nick's massive hardness, Ashley could barely speak as she opened her clouded eyes to look back at her lanky friend, whimpering: \"Uuuh yeah, I'm good... Sooo good! Uuh, Nick, this is awesome... Sooo full! So much cock in my ass... Ooohh my god, I can feel you... So deep in me... So hard and big in my ass aahh!\"\n\n\"You're fantastic, Ash! Your asshole is so hot and so fucking tight!\"\n\n\"I... Uhhh... Mmh more...\" she mumbled, trying to articulate her primal need to get assfucked. Even before Nick could start sodomizing her for real, Ashley instinctively wiggled her tiny rump back against him on her own. At first she was just gently grinding her dick-stuffed asshole into his spearing shaft, stirring her snug slippery rectum with Nick's fully sheathed pole, but soon she began rocking rhythmically back and forth, genuinely buttfucking herself while he held still. \n\n\"Uuuhh yes... Feels sooo good!\" Ashley moaned as she slid her freshly deflowered anus along Nick's tool in slow shallow strokes, trying to match the speed of her own whirling, clit-diddling fingers. \"Your big hard cock... Owwhh I love it! Stretching my asshole so much... Uuuhh!\"",
        "Wide-eyed in wonder, Nick let Ashley follow her instincts and just watched as she worked her sweet little ass on his cock. Glorying in the sight of her svelte frame shivering in delight as she sodomized herself in longer and deeper self-fucking strokes, Nick grabbed the lube and added more of the slick fluid to the increasingly longer portion of his boner that Ashley let glide out of her ass each time she rocked forward. This way, when she pushed back to gobble all of his shaft inside her clingy stretched-out butthole again, she found his cockmeat all greased up and dripping with lube. \n\n\"That's amazing, Ash... You're amazing!\" Nick exclaimed after a while, starting to gently hump into her perfect little butt. \"I mean it, you're so fucking hot!\"\n\n\"Nick, uuhhh... Please, fuck my ass,\" Ashley panted, looking back at him with an animalistic grimace of desire painted on her beautiful face. \"Just fuck my ass now, pleeease, I need it!\"\n\n\"Yeah, so do I,\" Nick chuckled.\n\nFinally sure that she was okay, elated that he didn't have to keep his anal lust in check anymore, Nick let out a contented sigh and started moving inside Ashley's warm oily asshole. He sodomized her slowly, gently, savoring Ashley's heavenly tightness and losing himself in the spectacle of her dilated butt-ring dragging along his pole when he withdrew and then surrendering to his penetration as he gradually pushed himself all the way back inside the smooth welcoming sheath of her rectum. \n\nAs Nick made love to her ass in a calm fluid rhythm, Ashley felt light-headed with pleasure. Her clit was so deliciously oversensitive under her strumming fingertips that Ashley shuddered at each touch, hit by a jolting spike of delight. At the same time, as Nick's fat butt-cramming tool slid steadily in and out of her virginal snugness, her overstuffed rectum sent such intense, blissful shocks pulsing through her body that Ashley could barely find the breath to moan out her joy. \n\nHornier than ever, high both on the debauched mental picture and on the incredible physical sensation of being assfucked, Ashley soon started wanting more. Unable to speak, drooling and groaning incoherently, she still managed to make her wanton desires clear by pushing her round tushy back into Nick's skewering shaft, urging him to cram his dick harder and faster into her slick anal tunnel. Getting her drift, Nick grabbed Ashley's firm little bubble-butt possessively in his hands and began pistoning his stiff cockmeat into her clingy anus with gusto, syncing his ass-stuffing thrusts with her needy rocking motions. \n\nWithin minutes of her anal deflowering, Ashley and Nick were buttfucking like rutting beasts, grunting and gasping together as he sodomized her at a sustained rump-riding tempo. Nick was crazy about the rubbery grip that Ashley's snug rectum had on his shaft, and he was glad he had used so much lube and took such a long time letting her get used to his girth, otherwise he doubted he'd have managed to cram his fat cock that deep into her hot bowels, she was just so insanely tight. \n\nFeeling Ashley respond well, Nick began ramming his pole into her gripping little asshole with longer and faster thrusts. He was amazed by the way she kept up with his vigorous rhythm, pushing her curvy hiney back to meet his every lustful plunge. When he picked up his pace even more and started to really pound her butthole, burying himself as deep as he could inside her steamy rectum at each pass, Ashley just moaned louder and slammed back more frantically, making her heart-shaped tushy clap against his groin. Circling her clit ever more desperately as he reamed her surrendered ass, Ashley yelped and whimpered in unrestrained pleasure, letting Nick know how much she was loving every passionate second of her very first butt-stretching sodomy. Nick found it immensely erotic to see how actively Ashley was participating in their anal coupling, her clear appreciation of their assfuck fueling his ravenous desire to mount her beautiful bottom again and again and again. \n\nAs the minutes flew by, the two friends got totally consumed by their shared anal lust. Nick was panting when a flushed, pleasure-drunk Ashley suddenly started yelling out and thrashing as if she was having a fit. Bucking back wildly into his ass-splitting cock, she looked over her shoulder at Nick with an almost frightened look in her big hazel eyes, screaming out: \"Uhhhh Niiick! I'm gonna... Aahhhh I'm... Uuuhh! Mmmhh... C-c-cuuhh-uhh-ummiiiing!\"\n\nAshley's anal orgasm was unlike anything she had ever felt. The bubbling build-up that had grown and grown while Nick relentlessly sodomized her and the delicious sense of warmth radiating outwards from her tormented clit reached an unprecedented peak, detonating in a burst of all-encompassing pleasure. The sizzling, breathtaking sense of perfect fullness caused by the stuffing presence of Nick's cockmeat thrusting into her rectum seemed to suddenly extend way past her sensitive asshole and her twitching dick-crammed anal tunnel. As she yelled out her climax, Ashley felt like her whole body was cumming. It was unbelievably, unbearably good.\n\nGrunting lustfully while Ashley's asshole clamped firmly around him and her rippling slippery rectum milked his cock in deep suctioning squeezes, Nick fought to ride out her monumental climax. Gritting his teeth and bucking his hips harder to keep pistoning his pole in and out of her increasingly snug anus, he grabbed onto Ashley's tiny tushy and jammed himself forcefully inside her ass over and over again, desperate to cum with her. \n\nLost in her toe-curling orgasm, Ashley was so far gone that she couldn't even hold herself up on her knees. Her legs buckled as Nick pillaged her twitching asshole, buttfucking her with all he had. When she fell forward, he went down with her. Holding onto her curvy heart-shaped rump, Nick plowed Ashley's enveloping anus with abandon, pressing himself onto her sweat-slick back. Spreading her legs wide as she lay on her tummy, all Ashley could do beside sobbing out in absolute bliss, was to keep frigging her swollen clit while Nick's huge cock glided in and out of her clenching rectum at breakneck speed. \n\nLying on top of Ashley, pumping his raging boner wildly into her tight slippery asshole as he rushed to his climax, Nick went rigid while he unleashed a savage flurry of butt-drilling strokes. As his balls drew up and his cock started to flex erratically in the depths of Ashley's conquered little ass, he rested his head in the hollow of her shoulder and nuzzled her neck. Panting, nearing what felt like a massive ejaculation, Nick grunted into Ashley's ear, underlining his words with his last rabid, jarring slams: \"Gonna cum, Ash... In your tight... Beautiful... Ass... Aaaahhh!\" \n\n\"Yeeees! Uuuhhh... Cum in my ass! Awwhhh, fuck me harder, hardeeer... Oohhh Niiiiick!\"\n\nWith one final brutal thrust, Nick buried his cock balls-deep inside Ashley's amazing asshole and came like a geyser, howling in pleasure. The feel of his hot cum flooding her rectum in a deluge of thick jetting spurts sent Ashley over the edge once more. She screamed as her climax reared up and exploded even more intensely, causing rivulets of her gushing nectar to dribble on her clit-frigging fingers while Nick's huge pulsating cock shot rope after rope of creamy sperm into her bowels, filling her anal tunnel with his massive load. \n\nDizzy with bliss, her ears ringing with her own rapturous squeals and his growls of release, Ashley was high on the sensation of Nick's ejaculating shaft throbbing crazily inside her spasming butthole. His cock felt even bigger and harder as he kept spraying a torrent of warm semen deep in her ass, taking her breath away and fueling her all-consuming orgasm. At the same time, the powerful contractions of Ashley's anal walls amplified Nick's pleasure wonderfully. As she milked his thick pole from tip to root within her clenching rectum, Nick basked in the incredible sensation of Ashley's already snug asshole tightening rhythmically around his spurting dick like an eager sucking mouth bent on draining him dry of his seed.\n\nOnly after Nick was done pumping her ass full of cum did Ashley's slender frame finally stop writhing in delight underneath him. For a while, the sated lovers could merely lie as they were on the couch in a messy heap, breathing raggedly. Motionless, they enjoyed the afterglow in silence, their minds floating away as the thin layer of perspiration between Nick's chest and Ashley's back glued their bodies together.\n\nWhen Nick stirred from his momentary absence, he realized that he was still lying on top of Ashley with his cock sheathed to the hilt inside her snug, cum-flooded ass. He had lost his aching rock-hardness but he was still pretty stiff, thanks to the rush of pure anal lust still coursing through his veins, not to mention the awesome tightness of Ashley's sperm-coated rectum and the delicious clamping grip of her butt-ring wrapped firmly around the root of his dick. \n\n\"Sorry, Ash,\" Nick murmured as he pushed himself up on his elbows so as not to weigh too much on her. \"I'll pull out now if you want.\"\n\n\"Mmh whaa... Oh nooo!\" Ashley exclaimed, emerging with a start from her post-orgasmic stupor at those words. \"No, Nick, please don't! I'm fine, really,\" she cooed, a satisfied smile brightening her pretty face. \"I actually like feeling you inside me, so deep in my ass.\"\n\nNick smiled back at her, stunned by the sweetness exuding from Ashley's upturned lips combined with the hotness of her words. \"Okay,\" he nodded, leaning in to plant a soft kiss on her mouth. \"But at least let's shift a bit so I'm not squashing you.\"\n\n\"That's very nice of you, but let's face it: you're way too scrawny to squash me, or anybody else!\"\n\n\"Hey! I thought I'd get some sympathy among the thin here, since you're pretty svelte yourself!\"\n\nAshley laughed along with Nick as the two of them rearranged themselves while staying connected, his thick cock still fully immersed in her seed-sloppy ass. Once Nick was sitting back on the couch with Ashley straddling him, impaled on his dick in a reverse cowgirl position, he wrapped his arms tightly around her smooth flat tummy, holding her as close as possible.\n\n\"To be honest, though,\" he said, stirring his plump shaft inside her creamy bowels, \"I'm not all scrawny after all. Some portions of my anatomy aren't, at least...\"\n\nAs he started running his hands up and down her chest, brushing his fingers against her erect nipples and caressing her abdomen, Ashley purred and let her head loll back, resting it in the hollow of Nick's shoulder. \"Mmmh it's true... A part of you is definitely very fat and meaty,\" she replied, her soft giggles turning into whimpers of delight as she felt him flex his cock deep inside her snug sperm-slippery rectum while he lightly pinched her sensitive areolas between his fingertips. \n\n\"Oh, really?\" Nick snickered, peppering Ashley's thin delicate neck with butterfly kisses while he cupped her pointy tits, tweaking her pink, pebble-hard nipples. \"And what part would that be, Ash?\" he asked teasingly, moving his right hand lower until he met her wet labia and exposed clit. \n\n\"Uuhhh it's the part that just fucked my virgin little asshole...\" Ashley murmured, biting her lips and grinding her dick-crammed butt into Nick's groin before continuing. \"Mmhh the part that made me cum so hard... And that's still up my ass, filling me so full... Opening my tight asshole sooo fucking good uuuhh! Pushing all that creamy cum deep inside mee-eeehh! Oohh Niiiick!\"\n\n\"Would it be my cock you're talking about?\" Nick grinned. As he playfully taunted Ashley, he kept licking her jaw and nibbling on her chin, gently humping up into her ass while he persistently worked her clit and nipples with his hands, driving her crazy with arousal. \n\n\"Yeeesss owwhh yes, your cock! Uuuhh... Your big fat cock!\" Ashley mewled in ecstasy, syncing her rocking motions on his pole with the slow upward bucking of Nick's hips. \"I love it, Nick! I love how your cock feels in my ass... Aaawwhh!\" \n\n\"And I love how your tiny little asshole feels around my cock,\" Nick said, spearing his chubby dick harder into Ashley's surrendered rectum, making her gasp and writhe in his arms. \"Your beautiful ass is amazing,\" he murmured into her mouth, nipping at her parted lips. \"It's so smooth and hot inside your ass, Ash, and sooo tight. Your sweet virgin asshole made me cum like crazy.\"\n\n\"Uuhh yes, so much cum...\" Ashley mumbled, her eyelids feeling heavy as the heady haze of pleasure enveloped her once more. Blindly, she reciprocated Nick's nibbling kisses, wiggling her little round tushy on his thick butt-stretching pole. \"I loved it when you came in my ass... Uuuhh! I could feel you pulsing in me... Pumping my ass full of cum... Uuhhhh it's so fucking hot!\"\n\n\"You want more, Ashley?\" Nick asked, pushing his hardening dick firmly upwards into her cum-coated anus. \"You want me to fuck your beautiful ass again, don't you?\"\n\n\"Yes, fuck yeeees!\" she yelled out, arching her back against Nick's chest as he rolled her clit between his fingers while pinching viciously on a stiff rosy nipple. \"Give me more! Uuhh fuck my ass more, mooore, mor-mmph-mmfph...\"\n\nClamping his mouth onto hers, Nick muted Ashley's wanton request with a hungry, savage kiss which she immediately reciprocated. Holding her slim body in his arms, Nick began bucking up vigorously into her slippery, willing rectum. At the same time, Ashley started rocking urgently on his dick, lifting herself to allow her dilated butt-ring to glide up along his seed-slick pole and then descending down on his shaft, taking him deep in her ass until her sphincter was clenched around the base of his cock and his balls were resting against her nectar-dripping pussy once more. \n\nSoon the two friends lost themselves in another bout of anal lust, making out wildly as Ashley rode Nick's cock reverse cowgirl, bouncing her sweet ass on his recuperated erection. Beside the sexy sounds of their passionate kissing and muffled moaning, nothing but the fleshy rhythmic slaps of Ashley's little round buttcheeks slamming down on Nick's thighs could be heard in the room.\n\nAfter a while, noticing that Ashley's self-impaling plunges were getting more erratic and slower despite her growing desire, Nick realized that his lover was getting tired. With his lips still sucking on hers and his hands still tormenting her puffy areolas and overworked clit, Nick dragged the both of them down on their side, so that they were lying on the couch in a tight spooning position. Glad to be given a chance to rest yet refusing to interrupt their intense make out session to thank her devoted buttfucker, Ashley chose instead to reach her hands back and spread her taut curvy cheeks wide open, giving Nick even better access to her cum-filled asshole. \n\nGrowling into her mouth, wrapping her even tighter in his embrace, Nick picked up his pace and slammed his dick harder and deeper and faster into Ashley's offered anus. He was glad he had already cum once up her ass, otherwise he would never have lasted more than a few short minutes pounding his cock so rabidly into her warm, clingy rectum without shooting his load. Despite the stretching she had just taken, Ashley's dick-hugging butthole had loosened just barely enough to accept him, and it was still a deliciously tight fit around Nick's girthy shaft. \n\nLuckily, the ungodly amount of spunk he had sprayed into her bowels made the delicious pressure of Ashley's slippery anal passage much easier to fuck into, without diminishing the exquisite cock-squeezing snugness of her rectum. Nick loved to feel his own sperm squishing and squelching along his ass-drilling boner as he sodomized Ashley, and the frenzied whirling rubs he unleashed on her clit reflected his excitement. As if the wonderful feel of her freshly deflowered anus wrapped cozily around his cockmeat wasn't amazing enough, the creamy slickness of Ashley's rippling cum-lubed rectal walls, combined with the spasms of pleasure that made her asshole tighten deliciously around him, reminded Nick of her previous deep-throating blowjob, giving him the lewd impression that Ashley was sucking his dick with her ass. \n\nAs Nick devoured her lips and tormented her clit, relentlessly driving his pole balls-deep into her steamy anal depths, all Ashley could do was kiss him back and keep her hands on her firm little rump, opening her ass for him to plunder harder and deeper. Her choked gasps increased in volume and pitch as Nick slid his clit-frigging digits lower and slipped two fingers in her drenched slit. \n\nMaintaining a brutal butt-splitting tempo, Nick pushed his index and middle finger inside Ashley's drooling pussy and ran them all along the upper wall of her vaginal channel, stimulating its every ridge and crevice, making her squirm in his arms. When he found what he was looking for, Nick curled his digits up and pressed his thumb on her clit, starting to circle the engorged nub on the outside while he rubbed its corresponding location on the inside of her nectar-dripping hole. A hiss from Ashley's wide open mouth and the sudden twitch that electrified her body told Nick that he had indeed got the location of g-spot right.\n\n\"Oooh! Oooohh god, Nick...\" Ashley whimpered, breaking their devouring soulkiss to moan out her pleasure. \"Uhhh don't stop! Aaahh just like that, yeees, touch meeeh!\" she begged, driven wild as the sensations from her pussy amplified the animalistic ecstasy of getting her ass royally fucked.\n\nSeeing her on the verge of a massive climax, Nick renewed his efforts, titillating her g-spot and clit faster while he hammered his cock furiously into her asshole, pushing himself as deep as possible inside her warm smooth rectum. Overwhelmed and overjoyed, Ashley came within seconds, screaming. \n\n\"Yeess uuhh Niiiick! Uuhhh! Yeeees fuck my ass harder! Oooh your fingers, your cock... Uuhh! Oohhh god, fuck me fuck me fuuuuck meehh-eeh-eeehhh!\" \n\nThe gushing stream of pussy juice wetting his fingers came at the same time as the intense spasms that possessed Ashley's asshole while she succumbed to her shattering climax. Her orgasmic cries were music to Nick's ears and the incredible dick-milking contractions of her slick rubbery rectum felt so good that his eyes rolled back in his skull. Nick's balls tingled and his throbbing cock felt ready to explode as he struggled to hold Ashley in his embrace while she thrashed and squealed, maddened by the pleasure he was giving her with his deft fingers and his powerful ass-drilling cock. \n\nUnable and unwilling to delay his climax, grunting louder at his every pounding thrust into the fabulous tightness of Ashley's anus, Nick slammed himself all the way inside her buttery bowels one last time and came. Ashley's voice broke into a guttural wail as Nick's ejaculation splashed deep inside her ass in a barrage of long creamy jets that plastered her cramping anal walls with cum. While she once again gloried in the unique feel of having her rectum pumped full of sperm by a swollen pulsating cock, Ashley's climax flared brighter, devouring her. Ripples of pure bliss radiated outward from the bundle of nerves between her clit and g-spot, clashing and mingling with the shocks of mind-blowing anal delight that her wonderfully dick-stuffed asshole sent all over her body, making her see stars and wiping her ecstatically out. \n\nSpent, the lovers stayed spooned tightly for long lazy minutes, basking in their shared intimacy. The smell of sex and sweat filled their nostrils, mixed with their signature scents. Their slowly calming breaths were all that Ashley and Nick could hear over the sound of their thumping hearts. \n\nThe quiet joy of their afterglow started fading only when Nick's wilting cock finally plopped out of Ashley's ravaged asshole with a lewd slurping sound. The sudden sense of emptiness in her gaping anus made her groan in disappointment. To make things worse, Ashley could feel Nick's warm cum oozing out of her unplugged rectum and trickling out of her body in thick gooey rivulets. Wiggling free of Nick's bear hug, Ashley rolled on her tummy with a look of determination on her delicate face. Her tiny hands were still holding her taut heart-shaped ass wide open and an ember of ever-burning lust was glinting in her eyes as she looked over her shoulder at a smiling, groggy Nick.",
        "\"Feed me your cum, Nick,\" Ashley blurted out before reason reasserted itself and stopped her from being as free as she wanted to be, from doing what she craved to do. \"I need to taste you. Please, your cum is leaking out of me, at least let me drink some. I want to keep you inside me, pleeease!\"\n\nBlinking his eyes in disbelief, Nick nodded gladly and dipped his fingers into Ashley's offered buttcrack. The sight of his seed bubbling out of her gaping asshole was obscenely beautiful and he paused to stare at it. Though empty, Ashley's slick rubbery butt-ring remained open, stretched out of proportion by the long permanence of his fat cock inside it. The edges of her distended orifice, reddened from the relentless anal pounding she had taken, were smeared all over with white dollops of cum that were slowly trickling down to her pussy. Nick panted excitedly as he took in the sight of the dark red tunnel of Ashley's exposed rectum, its smooth walls streaked with pearly ribbons of his semen. If he hadn't been so utterly spent, he would have gotten a raging erection just looking at Ashley's well-fucked, no longer virgin asshole. \n\nWith his eyes glued to her slowly shrinking sphincter, Nick proceeded to scoop up his own overflowing cum from Ashley's buttcrack. Once his fingers were covered with creamy sperm, he brought them to her mouth, letting her suck on them until they were clean and ready to go after some more thick droplets. All the while, as Nick retrieved his oozing ejaculate from her spunk-glossy crevice, Ashley looked at him over her shoulder, her lips already parted and her tongue sticking out hungrily, waiting to lick another milky treat off her lover's fingertips.\n\nBy the time Nick was done gathering all of his leaking semen from her inner thighs and ass-cleavage, Ashley's butthole had regained its normal tiny size and its cute little rosebud appearance. It still looked puffy and tender though, so Nick decided not to feed her the last few stray dollops of cum, preferring to rub them gently around her abused pucker instead, soothing it with his seed. Ashley's soft purrs let him know that she didn't mind having lost those final gooey morsels after all. \n\n\"Mmh, thanks, Nick...\" Ashley sighed when his featherlight touch left her well-fucked asshole. \"I still feel some of your cum deep in my ass. And now in my tummy too!\" she added, blushing as she realized how slutty she must have looked, asking him to feed her his cum straight from her ass. \n\nRolling on her side to face him, cooing as he wrapped his long arms around her svelte frame, Ashley met Nick's intense brown eyes and mumbled: \"I hope you don't think less of me because I asked you to... Well, you know, right now... But I'm squeaky clean back there and I really wanted to do it, even though it's dirty and nasty, but in a good and sexy sort of way, you know... Not that I was actually dirty, I promise!\"\n\nChuckling, Nick interrupted her unnecessary rant with a kiss. Ashley felt her heart swell as she got his message loud and clear. Pressing her lips hard against Nick's, she tried to convey all her happiness and gratitude and affection for him in that long, intense smooch. He made her feel so good, so free to be who she wanted to be, to do what she wanted to do, with no judgment involved and actually a lot of kindness and support on his part.\n\nSnuggled cozily in his embrace after they broke their kiss, Ashley purred: \"Nick, this is amazing. I can see why Mia can't get enough of you. And I don't mean just the sex, which was awesome, it's... It's you. You're really great, Nick, I knew that already but now...\" sighing contentedly, Ashley brushed her lips against his smiling lips. \n\nWhen Nick opened his mouth slightly, ready to speak, Ashley was quick to catch his tongue within her mouth again, sucking him languidly between her soft warm lips, eager to initiate another sweet make-out session. They were both buzzing with emotion by the time their tender kisses eventually faded out. \n\nThe first words that escaped Nick's mouth were: \"I love you, Ash.\"\n\n\"Mhh... I love you too, Nick,\" she replied, unthinkingly. As soon as she heard herself though, Ashley panicked. \"What!? I mean... What did you just say?! And did I... No, no way, I didn't... Did we just... What the hell?!\" she finally screeched, dumbstruck and freaked out.\n\n\"Ash, relax,\" Nick soothed her, smiling placidly, apparently unfazed. \"It's okay, don't be scared. Love is a good thing, you know.\"\n\n\"What?! How do you mean, 'don't be scared', jeez! I just told you that I love you, right after you told me that you love me! How can I not be scared, this is all so... So... Weird!\"\n\n\"Maybe, yes. It is kinda weird,\" Nick shrugged, planting a quick peck on her nose, \"but that doesn't make it any less true. I know the L word is a big deal, but let's face it, Ash: when was I ever going to tell you if not now? I'd have told you before, and I did too actually, in less explicit terms of course.\"\n\n\"But Nick...\" Ashley gasped, her heart beating crazily. She felt like her mind was suddenly both blank and overloaded as she tried to speak. \"I... You and Mia... I thought you said you guys were in love... And now you tell me this... How... Why...\"\n\n\"Mia is okay with it. She loves you too, you know,\" Nick smiled. Seeing Ashley's hazel eyes bug out and her mouth go slack, he patiently added: \"Look, Ash, I'm not saying I'm IN love with you, not yet at least, but I do care about you, very deeply. When I look at you, all I want to know is that you're happy and when I see that you're not, I feel the need to do all I can to make you feel alright again. I only want good things to happen to you and I want to know you're well and safe, always. Of course,\" he conceded, \"I can't repeat all of that every time I feel it, which is always when you're around or whenever I think of you. It'd just be verbose and unpractical, you see. I'd much rather say 'I love you'. It's simpler and more correct, in many ways. And, which is crucial, it's true.\"\n\nAshley couldn't speak. She simply stared at Nick, thunderstruck. \n\nThinking she needed to hear more, Nick added: \"And Mia feels the same way. Maybe you noticed it already, well, the physical attraction side of it at least. Subtlety isn't really her strongest suit, but trust me, Mia is way more choosy that you'd think, and she chose you. You really mean a lot to us, Ash, to both of us. And,\" he concluded, shaking her thin shoulders slightly to stir her from her shock, \"I'm pretty sure you feel something similar toward us too. Or have I misread you?\"\n\n\"Uhm... Well, yeah, I...\" Ashley mumbled, gathering her thoughts. Then she sighed and looked straight at Nick. His piercing bespectacled gaze bore into her, but, for the first time, she felt like she was staring back into him as well. What Ashley saw sent her heart all aflutter. Before she knew it, she was hugging him tightly, murmuring: \"Oh Nick... I love you, I do!\" \n\nAshley was scared and thrilled and overjoyed all at the same time, but most of all she was glad that the emotions that had whirled under the surface and got all tangled up inside her for so long were now finally making sense and forming into something clear and beautiful. Her attraction to Nick, her affection for Mia, the instinctive and effortless way in which the three of them clicked when they were together: it had all led to that moment, and, in that moment, Ashley understood. \n\n\"You didn't misread me,\" she nodded, pressing herself tighter against Nick, her pointy tits squashed into his chest. \"You're right, Nick, I have feelings for you too. I mean, you two, both. You mostly, but Mia as well, in a different way but still... It's just... Where do we go from here? I mean, how can all of this work out? I don't know what to say or do, Nick, I just don't know...\"\n\n\"Don't worry, Ash, everything's okay,\" Nick said, resting his forehead against hers. Softly, he stroked her delicate face, making Ashley purr. As she savored his tender soothing touch, her features brightened in a smile. \"I'm sure we'll figure it out,\" Nick smiled back at Ashley, brushing his mouth against hers, his voice deep and calm. \"We can make this work. Together, the three of us.\" \n\nRelaxing in his embrace as his lips joined with hers, Ashley lost herself in Nick's loving kiss. There were butterflies in her stomach and her head was spinning as she locked her arms around Nick's neck and pulled him closer, kissing him deeply. Ashley knew that nothing was going to be the same ever again, but that thought didn't scare her. Whatever was going to happen, she knew she wouldn't be facing it alone."
    ],
    "authorname": "ZenZerker",
    "tags": [
        "anal",
        "anal first time",
        "oral",
        "anal virgin",
        "ass to mouth"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/buttfuck-buddies-ch-01"
}