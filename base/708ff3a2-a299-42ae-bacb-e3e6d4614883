{
    "title": "The Arrangement",
    "pages": [
        "\"Are you still watching Netflix?\"\n\nPaul blushed at the implied judgement from the TV screen, and looked over at Craig, his housemate, who was mindlessly scrolling through his phone. Another wild Friday night in lockdown.\n\n\"Fuck, I'm sick of staying home, man.\" Paul grumbled as Craig looked up at him. \"Feels like it's been months since we've been out anywhere. When are they going to open the bars again?\"\n\nCraig shook his head sadly. \"I know, man. I used to think the odd weekend at home was a relief, but now...I just need to get out!\"\n\n\"Jesus, remember how we used to complain about not being able to meet any women?\" Paul asked. \"At least we knew women existed then. Now, I don't think I even know what they look like outside of porn! Even Tinder's just for awkward video wanks now.\"\n\n\"I know, right?\" Craig chuckled. \"Now my right arm's the only part of me that's getting any exercise.\"\n\n\"Well, speaking of that, I'm going to head for bed. It's getting late anyway. I'll see you tomorrow, huh.\"\n\nPaul got up from the couch and wandered dejectedly down the hall to the bathroom.\n\n\"Night, mate.\" Craig called after him as he turned back to his phone.\n\nAs he brushed his teeth, Paul tried to work out how long it had been since he'd gotten laid. He'd already been in a dry spell before lock down started back in March, so it was....ages!\n\nHe climbed naked into bed, and flicked through his favourite website, searching for some porn worth watching. After 20 minutes he finally settled on something, which gave him the vague feeling he'd seen it before. Feeling tired now, he had a quick, goal-oriented wank, and shot a lonely load onto his belly.\n\nGrabbing his T-shirt off the floor to clean up with, he heard the rhythmic knocking of bed against wall that signalled Craig was pursuing a similar pastime. Making a mental note, once again, to tell Craig to pull his bed away from the wall, he rolled over to go to sleep, just as a grunting climax sounded from next door.\n\nPaul woke the next morning with a stretch and a scratch before heading to the bathroom for a piss that seemed to never end. He made his way down the hallway in his boxers and singlet, desperate for some caffeine to wake him up a little.\n\nCraig was already up, sitting at the table with some toast and a steaming coffee in front of him.\n\n\"There's some coffee in the plunger.\" He offered Paul who gratefully poured it into a mug.\n\nHe sat opposite Craig, his head resting on his hand as his mental faculties slowly started to respond to the stimulating caffeine.\n\n\"Listen, I've been thinking.\" Paul groaned inwardly as Craig launched into another of his great ideas. It was far too early for this kind of enthusiasm!\n\nCraig continued, oblivious to Paul's mental eyeroll. \"This pandemic is fucked! We've been stuck in this apartment for months now, only going out to work or shop. I haven't gotten laid in months, and I don't think you have either.\"\n\nHe gave Paul a sideways look to gauge his reaction before continuing.\n\n\"I'd give just about anything to get my dick sucked right now. If some chick asked me home from the pub and told me I had to suck off some dude before she'd blow me, I'd kneel down, shut my eyes and open wide. Anything for a blow job, right?\"\n\n\"Fuckin-A, man.\" Paul couldn't help but agree. It'd been so long since anyone other than himself had touched his cock that he'd do just about anything to make it happen.\n\n\"Well... if you feel that way, and I feel that way, why don't we just make that happen?\"\n\nPaul looked up at him, a confused look on his face.\n\n\"Look man, if you've got some chick hiding in your bedroom that willing to suck me off, just say the word.\"\n\n\"Nah, man, you're not getting it.\" Craig explained. \"We're both willing to suck someone's cock in exchange for getting a blow job ourselves, so why not just suck each other off?\"\n\nPaul immediately started to protest, but Craig spoke over him, quickly.\n\n\"Wait, wait, wait, just let me explain.\" He rushed ahead. \"It's nothing gay or anything, just a simple transaction. We'd have to be very clear about it. If we're totally wasted, it'd be no big deal. I'd just have to put up with your dick in my mouth for a bit, and then I'd get to have the blow job I've been missing for so long. Whoever got blown first would have to repay the favour within a week. It's just a simple arrangement.\"\n\nPaul stared at him, waiting for him to start laughing or to indicate that he was joking. Craig returned his gaze without blinking. Logically it made sense, but could he really suck someone else's cock?\n\n\"I don't know if I could do it, mate.\" Paul shook his head. \"I've barely even seen you naked and you want me to suck your cock?\"\n\n\"Mate, this is a pandemic! It's a global emergency. We're all having to do things we wouldn't normally do. No one would ever find out, and as soon as we're out of lockdown, we can get out and fuck all the chicks we want. But for now, maybe we just need to help each other out.\"\n\nPaul was shocked to realise that Craig was sounding convincing. How could he even be contemplating this? It just seemed too crazy. He'd never so much as touched another bloke's dick let alone put it in his mouth.\n\n\"Look,\" Craig continued, \"We'd obviously need to break the ice a bit and get more comfortable together. Why don't we just start it slow. We've got no plans tonight, obviously, so let's get raging drunk and watch some porn together.\"\n\n\"I'm not making any promises, but I'll see how I feel tonight. I'm still waiting for you to tell me you're kidding to be honest.\"\n\n\"No way I'm kidding.\" Craig sounded earnest. \"It's been fucking months, and I need some sort of sex that doesn't involve my right hand. Let's just get some drinks for tonight and see what happens.\"\n\nThe rest of the day passed even more slowly than usual, as Paul waited with anticipation for the coming evening. He couldn't tell if he was more disgusted or turned on by the whole idea.\n\nThe thought of finally getting his dick sucked, after such a long time, was the most enticing thought he'd had in a long time. But how could he possibly suck Craig's cock? What would it even taste like? The very thought of it made him want to rinse his mouth out.\n\nIt was hard to deny the slight twitch in his boxer's though as he considered such a taboo act.\n\nThe evening finally came around, and they both wasted no time slamming back a few beers. It was hard to sound convincing as they both tried to ignore their planned activities for the evening. The pizzas arrived, and they drank some more as they sat on the couch playing Halo.\n\nPaul's reaction time was terrible, and he lost the game over and over as the alcohol-fuelled buzz took hold of him. \n\nAs Craig once again snuck up behind his character and shot him in the head, he turned to him. \n\n\"Are we going to do this thing or are you just going to let me kick your arse all night?\" he teased.\n\n\"Fuck man, I don't know.\" Paul was still reluctant. \"It's just so fucken weird! I don't know if I could even get hard in front of another guy.\"\n\n\"You just need to relax a bit, that's all.\" Craig was more definite. \"Why don't we at least ditch the clothes while we play the next round, just so you get used to it a bit. I've seen you naked at the gym change rooms a thousand times, so it's nothing new.\"\n\nPaul could only agree. He'd been naked in front of other guys frequently and it had never been weird then. Maybe he was just over thinking it.\n\nStumbling a little from the alcohol, he stood up and stripped his singlet over his head, before stepping out of his shorts. Careful not to look at Craig as he undressed, he walked into the kitchen.\n\n\"You need a refill?\" he called back over his shoulder.\n\n\"Definitely!\" Craig's emphatic reply suggested he was not quite as relaxed about this idea as he'd let on.\n\nCarrying two more open beers, Paul walked back into the loungeroom. Ever the planner, Craig had laid out a towel across the couch and was now sitting buck-naked with his legs spread. Trying to look nonchalant, he was holding the controller in his hand and adjusting some setting on the console.\n\nPaul stole a quick glance at his junk as he approached. It was a respectable size, well-groomed and thankfully no bigger than his own larger-than-average member. He handed him a beer and sat beside him, adjusting himself absently as he sat.\n\nResolutely looking straight ahead, he grabbed his controller as well, and clinking his beer against Craig's, took a few gulping swallows. This was ok. He could cope with this.\n\nHe jumped a mile as Craig's leg brushed accidently against his. Calming himself, he took another swig of beer. He tried to ignore the little pulse he could feel beating in his groin.\n\n\"Alright, another round,\" he said, feigning indifference. \"This time you're going down.\"\n\nUnable to stop himself blushing as he realised the accidental double entendre, he quickly set up the next game, flicking a brief glance sideways at Craig.\n\nTrying his best to focus on the game, he at least lasted a little longer this time before Craig once again shot him in the head.\n\nThrowing the controller onto the couch beside him in disgust, he punched Craig lightly on the arm. \n\n\"You're too fucking good at this.\" He admitted grudgingly. He decided it was now or never. \"Are we going to watch some porn or what?\"\n\nCraig shot him a slightly surprised look. \"Sure, as long as you want to. Any...preference?\"\n\n\"Nah, you just pick something.\"\n\nCraig picked up his iPad and spent a couple of minutes searching for an appropriate video. Paul couldn't help but notice him blush a little as he searched, perhaps aware that in choosing the porn he was exposing a little more of himself to his mate than he was used to. \n\nPaul's initial fear of not being able to get hard was proved immediately false, as he quickly swelled to half mast, just in anticipation of watching some porn. The exhibitionist nature of their little encounter was turning him on.\n\nFinally Craig flicked a video from his iPad up to the TV screen. A brunette with huge tits was getting noisily impaled at both ends by a couple of buff, big-cocked studs. Craig set aside his iPad on the couch, and reached a hand down into his crotch, beginning to massage himself to life.\n\nPaul was way ahead of him, already hard and leaking a little. He couldn't help but be intrigued by the movement beside him, but he stared steadfastly at the screen, trying to just pay attention to the dodgy porno that Craig had chosen.\n\nHe stroked his uncut cock slowly, intensely aware of his good mate sitting beside him. Feeling his balls a little caught in between his legs, he tried unsuccessfully to spread his thighs, but was limited by Craig on his right side and the arm of the couch on the other.\n\nMaking a sudden decision, he lifted his leg and hooked it up and over Craig's muscular thigh, linking them together. Craig tensed for a brief moment, but then rested his free left hand on Paul's upper thigh as he stroked himself with his right.\n\nThey continued like that for some time; both carefully ignoring the other while simultaneously acutely aware of their presence. Paul found himself ostensibly watching the porn playing on the TV before him, even though his attention was entirely taken by Craig's muscular figure beside him.\n\nHe tried to ignore it, but the thought kept surfacing in his mind. This was so fucking hot! It had been so long since he'd touched another human that even the hand on his upper thigh was driving him wild. The thought that it was another dude added a strangely kinky aspect that was surprisingly a turn on.\n\nHe couldn't help but take short, surreptitious glances to his right, glimpsing Craig's hard, uncut cock, his hand stroking rapidly up and down. A leaking glob of clear fluid erupted from the hole, and smeared around under his foreskin.\n\nEach time, he forced his gaze back to the woman getting impaled before him, but even then, he was checking out the guys' cocks as they fucked her, wondering how they'd feel in his hand.\n\nWithout allowing himself to think through the implications, he allowed instinct to take hold. Not saying a word, and looking straight ahead, he reached over with his right hand, and took hold of Craig's hard cock, knocking his own hand out of the way.\n\nShocked, Craig sat back on the couch, staring at the unexpected hand grasping his firm erection.\n\nPaul squeezed him firmly, feeling the spongy give beneath his grip. It was his first touch of another man's cock. In some ways, it felt remarkably familiar, almost like holding his own. At the same time, though, it seemed so foreign and...well...wrong.\n\nSomehow, despite his own bumpy, irregular shaft, he'd expected a smooth, firm rod. Instead, he felt a finely ridged, knobbly hunk of meat, a tinge of sweat moistening the surface. \n\nHe slid his hand up and over the head, sliding the foreskin along Craig's shaft. He felt every irregularity under the surface as he passed.\n\nCraig let out a long, slow exhalation as Paul stroked him, finally feeling the intense pleasure of someone else touching his cock.\n\nPaul was not surprised as he felt Craig's hand slide further up his thigh, finally taking his cock out of his hand. He continued stroking Craig as he stared down at the blissful sight of his first handjob in many months.\n\nThey sat like that for a time, both appearing to be engrossed in the porn playing on the TV before them, and trying to ignore the boundary that was being crossed.\n\nPaul focused on the sensation of the hand on his dick. There was something about having someone else stroke him that was so incredibly hot. \n\nIn a sense it shouldn't be that exciting; he jerked off nearly every day. There was something about the unfamiliar touch, though, the tentative uncertainty of the stroking that really turned him on. He never knew when the speed or rhythm was going to change or where he would be touched next.\n\nHe stole a glance down into Craig's lap, watching his own hand stroking his mate. A leaking collection of clear pre-cum was collecting under his foreskin. He moved his hand up and wiped it over the viscous fluid, smearing it along the shaft and lubricating Craig's cock. He moaned in appreciation.\n\nHe noticed Craig's breathing beginning to pick up pace now, and realised he too was rapidly moving towards a climax. He felt his hand being knocked away from Craig's cock as he took over his own stroking and Paul followed suit.\n\nWith a goal before them now, they both stroked madly towards orgasm. Paul watched engrossed as Craig jerked himself with speed and force, his head tipped back. A hand gripped tightly to Paul's muscular thigh.\n\nA low moan sounded as Craig hit the point of no return. He stroked hard and fast, his hand a blur as it ran up and down his shaft.\n\nFinally he slowed then paused briefly as a thick spoonful of pure white cum threw from the end of his cock, splattering over Paul's thigh and running back down into Craig's lap. Another and another eruption followed as Craig cried out.\n\n\"Fuck! Fuck! Oh Fuuuuuuuck!\" his body convulsed with each explosion as the orgasm rippled through him. His hand slowed down to a stop as the pleasure finally waned, and he collapsed back into the couch, his head tilted back.\n\nThe feeling of warm cum landing on Paul's leg so close to his own orgasm shocked him over the edge, and with no time to be grossed out, he turned his attention back to his own cock.\n\nStroking hard, he was barely aware of Craig watching him intently as he built to his climax. The familiar pleasure rose near the base of his cock before slowly extending along the shaft. With a grunting cry, he came loudly, cum spraying up and over his chest and belly as the dam wall broke.\n\nAfter what seemed an age, the waves of pleasure finally receded, and Paul slowly caught his breath. Suddenly aware of his leg resting over in Craig's lap, he quickly moved it, straightening himself in his seat. Suddenly glad of the towel underneath him, he felt cum running down his chest and thigh.\n\nHe looked over at Craig, who leaned back on the couch, legs spread wide, a dumb smile on his face.\n\n\"Man, that was good.\" He breathed, still panting just a little.\n\nPaul stood awkwardly, cock still hard and swinging before him.\n\n\"Yeah.\" He grunted. \"Needed that.\"\n\nWithout another word, he walked down the hall and got into the shower, washing the remnants of their activities from his body. \n\n**********\n\nHe woke early the following morning, his hangover laying over him like a layer of thick oil floating on water. It was there with every movement, like a reminder of what had happened between them.\n\nThe simple thought of it was enough to conjure the image of Craig's cum shooting out onto his leg. Dismayed, he felt the familiar twitch of an approaching erection, so he rolled over, trying to shift his thoughts elsewhere.\n\nWhat had they done? How could he have let this happen? All it had taken was one suggestion, and they were jerking each other off like a couple of queers.\n\nFuck it had felt good though. To have someone else's hand on his cock after all this time was such a relief. Imagine how good a blowjob would feel? He wondered if he'd ever be able to do it. To shut off his mind and just let Craig fuck his mouth in exchange for a few minutes of pleasure.\n\nIf you'd asked him just a week ago, there was no way he'd have ever thought last night would have happened though, so who knew?\n\nFinally he forced himself up and out of bed, throwing on some boxers and a singlet before heading down the hall.\n\nAs he approached the kitchen, he was suddenly confronted with Craig's naked form coming through the doorway, big, soft cock swinging.\n\n\"Morning,\" Craig said cheerfully as he passed him, as if nothing was out of the ordinary.\n\n\"What the fuck, man?\" Paul was incredulous. \"Put some fucking clothes on would you?\"\n\n\"What, man? We have to get more comfortable with each other if we're ever going to go through with this.\" He walked into the bathroom and threw up the toilet seat, pissing noisily into the bowl with the door open. Paul walked into the kitchen shaking his head. He needed coffee.\n\nHe was still seated at the table with some toast and a strong, black brew from the plunger 30 minutes later, when Craig walked back in fresh from the shower and still naked.\n\n\"So, are we on tonight, then?\" he asked casually, as if suggesting a trip to the pub.\n\nPaul looked up at him. \"You're still wanting to go ahead with this shit? I thought you'd got your rocks off last night and that would be enough.\"\n\n\"Yeah, right.\" Craig laughed. \"One quick handjob and I don't need sex again for another 6 months! Bullshit! If anything that reminded me what I was missing. I want my dick sucked, and if I have to take yours for that to happen so be it!\"\n\n\"Well, how do I know you're not just going to trick me into blowing you and then never repay the favour?\"\n\n\"Well, that's easy.\" Craig reassured him. \"We rock-off for the rights to the first blow job tonight, and then the other has to reciprocate within 7 days. Failure to comply after that means forfeiting all Xbox access until the deal is complete. Seems fair to me.\"\n\nSurprisingly, Paul found himself considering the proposal carefully. Twelve months ago, he was sure he would have punched Craig in the face or even suggesting it. Now, though, the thought of having some lips around his cock was nearly worth anything.\n\nHe found himself staring at Craig's swinging meat. Uncut and smooth, it didn't have the ridged, veiny appearance he was used to with his own appendage. Could he ever bring himself to swallow if? What would it taste like?\n\nCraig laughed at him. \"Staring at it isn't going to get me off, mate.\" He laughed as Paul blushed. \"You're either in or you're not.\"\n\nPaul finally shrugged. \"Well, I guess we've gone this far. But if you leave me hanging in this, you'll be fucking sorry.\"",
        "\"Look, a deal's a deal, bud.\" Craig reassured him. \"I'm good for it, don't you worry. So, Rock, Paper, Scissors then?\"\n\nWithout time to think twice, Paul held up his fist, counted down 3, 2, 1, before hastily forming the scissors sign with his hand. Craig held up his winning 'Rock' triumphantly and patted him on the top of the head.\n\n\"Better go get you a Chapstick, mate, cos those lips better be nice and soft for me tonight!\" \n\nPaul blushed bright red again as he realised the implications of what had just happened. His first experience sucking a cock would be tonight. Well, maybe it was better to get it over and done with anyway. \n\nWanting to get away from Craig's excited celebrations for awhile, he decided to jump in the car and get some supplies. Thankfully liquor stores were considered 'essential' and still open. He was going to need a good amount of vodka for tonight.\n\nHe stopped at a service station on a whim and bought himself a chocolate bar before heading on to the bottle shop. Stopped alone at a traffic light, he looked speculatively at the chocolate bar. \n\nIt was about an inch and a half in diameter and around 6 inches long. He turned the rear view mirror towards himself, and tipped his head back slightly, sliding the chocolate bar slowly into his mouth. Surprised at himself, he slid it further and further in, taking nearly the whole bar before brushing it against the back of his throat.\n\nHe gagged roughly and coughed, eyes watering. He looked beside him and saw a car that had pulled up at the lights unnoticed. Two 20-something girls sat in the front of the car, laughing at his antics.\n\nBlushing furiously, he put his car in gear and rushed forward through the intersection, running the red light. He couldn't get away fast enough. \n\nPaul was entirely distracted all day. He forgot to pay the power bill that was due, and neglected to set a timer when he was cooking dinner, resulting in a very over-cooked lasagne.\n\nCraig seemed to be taking any opportunity to show himself off in front of Paul. It seemed every time Paul looked up all he could see was Craig's big hooded dick swinging past him yet again. By the end of the day, Paul was wishing he could just hurry up and get it over with.\n\nFinally the evening came, and Paul was already several drinks into the bottle of vodka he'd bought that morning. He sat on the couch, watching the football, drink in hand, when Craig walked in and sat down beside him, strangely enough wearing pants this time.\n\n\"Look, man, we can call this off if you want. I don't want to force you into something you don't want to do.\" Craig looked concerned.\n\n\"I'm not chickening out now, unless you are!\" There was no way Paul was going to be the one to back out of this deal.\n\n\"Alright then.\" Craig said, shrugging, and quickly whipped off his pants. He flicked some porn up onto the TV and looked over at Paul.\n\nWith a sudden resolve, Paul got up off the couch and walked over to him, kneeling between his legs. This was absolutely going to happen. He was going to buy himself a blowjob, at a price he never thought he'd ever pay.\n\nCraig rested his hands awkwardly on the arms of the as his mate knelt before him. His soft cock lazed on his lap, as he looked up at the porn to get him in the mood.\n\nPaul reached up and wrapped one hand around him, stroking him firmly, kneading him to life. He looked at Craig's junk up close as he stroked, watching the hood slide back over the head of his cock. The smooth purple knob shone through as the skin retracted.\n\nSuddenly grateful that Craig had trimmed down there today, he slowly moved his head down, closing his eyes and opening his mouth. Tentatively he wrapped his lips around the end of his dick, careful to keep his teeth covered. \n\nTrying to avoid touching him with his tongue, he slid his lips down along the shaft a little and pulled back again. Craig's smell enveloped him, a mix of sweat and soap and sex. \n\nHis tongue inadvertently brushed against his cock head, and the taste hit him instantly. He'd occasionally tasted himself on the lips of his girlfriends, and this was remarkable similar, although stronger and more salty.\n\nHe pulled his head back suddenly, swallowing awkwardly and trying not to gag. This was way weirder than he'd expected.\n\nCraig looked down at him. \"That better not have been it!\" he warned. \"I've been looking forward to a decent blow job all day! Put a bit of spit into would you?\"\n\nNot one to do a job badly, Paul decided he had to improve. Craig was barely even hard yet, and at this rate he was going to have his face in his crotch all night. The better he did this, the quicker it would be over.\n\nWorking up some spit in his mouth, he leaned forward again, opening his mouth wide and taking Craig's whole length into his mouth. He pushed down firmly on the slowly hardening cock with his lips, slowly sliding back along the shaft. The cock slid along his wet, warm tongue, the taste now overwhelming him entirely.\n\nCraig rested a hand on the back of his head encouragingly.\n\n\"Fuck, man, that's better!\" he sounded like it was hard to get the sentence out.\n\nPaul felt the cock rapidly getting hard in his mouth, reinforcing the encouraging moans from Craig. This was going a little better now. He was getting into a rhythm, bobbing up and down along his shaft, massaging him with his tongue. Saliva leaked out of his mouth and slobbered down his length, pooling on his pelvis.\n\nPaul tried to slide down further along his shaft, but found he could only get less than halfway before starting to gag. Craig seemed to try to slide further into him each time, clearly wanting him to suck his entire length.\n\nKnowing this would get it all over faster, Paul decided to change position. One of his girlfriends used to do this to take him all the way into his mouth. It felt fucking incredible.\n\nHe pulled Craig up and off the couch, and then lay down across it on his back, head tipped back over the edge of the seat. Craig followed his lead, and leaned over him, directing his throbbing cock into Paul's open, upside down mouth.\n\nReaching up, Paul grabbed Craig's arse with both hands, controlling his slow penetration. Concentrating as he went deeper, Paul focused on swallowing, finding he could take him inside without gagging.\n\nHe gripped Craig's arse tight, as he deep-throated him, Craig's full length sliding into his gullet. He opened his eyes and looked up, as Craig's balls came to rest on his nose. He stared straight up into his taint, the masculine aroma of his trimmed crotch was overwhelming.\n\nPaul reached one hand between Craig's legs and grabbed onto his sack as it hung down on his face. He tickled his balls gently, just as he liked it himself when girls had done that in the past.\n\nHe felt Craig's cock twitch in response, and was surprised to feel a wet, salty fluid leak onto his tongue.\n\nHe rubbed his hands over him as he worked his cock with his mouth and tongue. He was entirely focused on giving Craig as much pleasure as he could. He was no longer sure if the goal was to get him to finish quickly or to make him feel good. It seemed not to matter.\n\nHe lay there helpless as Craig became more insistent. He slid his cock into Paul's mouth with more speed, sliding himself back and forth over his warm, soft tongue. He was moaning now, leaning over Paul and fucking his mouth.\n\nHis balls swung pendulously, slapping into Paul's face with each thrust. Paul could barely breathe. He lay there entirely focused on keeping his throat open to allow his mate to have his way. He tried to ignore the leaking erection in his own pants.\n\nCraig was moaning vigorously now, entirely lost in the fuck. He slammed himself obliviously into Paul's mouth, gripping onto his torso to give him leverage.\n\nHis cries built to a crescendo as he thrust, his muscles tensing until suddenly he pushed forward, his full length sliding into Paul's open throat, crying out as he erupted a huge load straight into his gullet.\n\nHis breathing slowed, and he suddenly roused, as if waking from a trance. He quickly pulled his cock out of his mate's throat, leaking more cum onto his tongue and smearing it across his cheek as he did.\n\n\"Fuck man, I'm sorry!\" he said, looking down at Paul's face, all red and covered in spit and cum. \"I kind of lost myself there! I definitely didn't mean to blow in your mouth!\"\n\nPaul looked up at him, wiping his face with one hand and trying to maintain some grace as he turned around awkwardly on the couch. He swallowed; the metallic, salty taste of Craig's cum would stay with him for days.\n\n\"Well, you certainly seemed to enjoy that!\" he couldn't think of anything else to say. He couldn't stop wiping his mouth. \"Not the worst blowjob you've ever had, I guess.\"\n\n\"Jesus, man, it was far from the worst! That was fucking amazing! You seemed to know exactly where to touch me and what to do! You sure that was your first time?\"\n\n\"Well yeah, first time on that end of one anyway. I guess it helps to have a cock yourself to know what feels good.\"\n\nNot wanting to continue such an awkward conversation, Paul got up, forgetting until it was too late that he was sporting a hard on himself. He looked down at the wet spot showing through his shorts.\n\nCraig looked down at it and then back up at his face, saying nothing. Paul turned, wishing him a goodnight, before heading straight to his room. The door was barely shut before he had his cock out and in his stroking hand.\n\n*******************\n\nA few days passed, and neither of them mentioned that night. Craig went back to wearing clothes around the house to Paul's great relief. As much as he didn't want to admit, he'd had some explicit dreams since then replaying the events in great detail. He worried that watching Craig wander around naked might prompt an unwelcome physical response.\n\nAs the week pressed on, though, he began to wonder if Craig was going to follow through with the deal.\n\nNot wanting to be caught out, he was showering twice a day, and made sure his manscaping was perfectly maintained.\n\nFinally, Friday night rolled around and they were both sitting on the couch once again with drinks in hand. Without so much as a warning, Craig downed the rest of his drink and turned to him.\n\n\"You ready, then?\" Craig asked, as if they'd been planning it all evening.\n\nPaul spluttered his drink a little in his rush to respond. \"Whenever you are!\" He stood up, quickly ripping down his pants and sat back on the couch, sliding his legs free of his clothes. His cock was already beginning to twitch with anticipation.\n\nCraig got up from the seat as Paul spread his legs and rested back against the couch. He knelt down between his legs, nervously running his hands up Paul's thighs before grasping his crotch and giving it a gentle, squeezing massage.\n\nPaul moaned as he felt himself leak a little. Fuck it was good to have someone touching his cock!\n\nCraig looked at his slowly growing erection uncertainly. A clear drop of fluid emerged from the opening, and clung there like a shiny little sphere.\n\nTentatively, he reached out with his tongue, and licked the head of Paul's cock, collecting the drop of precum as he went. He sat back and licked his lips. Paul watched, expecting a look of revulsion, but Craig just looked thoughtful.\n\nHe leaned forward again, licking the head of Paul's cock a second time, with a bit more force, holding the base of his now erect member with one hand. He opened his mouth, and took him inside, sliding his lips down along the shaft.\n\nPaul could feel him massaging the underside of his cock with his tongue, reminding him of a technique favoured by an ex girlfriend. It was driving him wild.\n\nHe put a hand on the back of Craig's head, encouraging him to slide further down along his cock. Craig resisted him at the halfway point, pulling back up again.\n\nHe proceeded then to bobbing up and down on him, sucking him furiously, and slobbering saliva along his shaft. As he moved, the suction would break periodically, releasing an almost ludicrous slurp as he went.\n\nPaul was in heaven. With his eyes closed, and one hand on Paul's head, it didn't matter who was sucking him off. This felt amazing.\n\nHe felt Craig's hand reach up and play with the underside of his sack, tickling his taint and venturing further back, eventually touching his hole. He was too shocked to protest as Craig stroked his sensitive opening, the saliva running down from his sloppy cock and providing lubrication.\n\nIt was only a few more seconds before he could feel his orgasm building. Holding Craig's head in place with both hands, he thrust up into his mouth, fucking him as his climax built. A low growling moan came from his mouth as it built.\n\nThe tension grew stronger until finally, a release. He cried out loudly as he came, holding Craig's face locked on the end of his cock . A few days worth of cum shot out of him, deep into Craig's mouth as he thrust into him frantically. The waves of orgasm kept washing over him as he came hard, filling Craig's mouth with his hot fluid. Cum leaked from around his cock, splashing onto Craig's chin and onto his own balls.\n\nFinally the pleasure abated, and the waves slowly receded. Releasing his hold on Craig's head, he slowly slipped out of him, stroking his cock a couple more time for good measure.\n\nCraig sat back on the floor beside the couch, wiping cum and spit from his mouth. His eyes were watering. Paul was strangely relieved to see he was sporting a hard-on of his own in his shorts.\n\n\"Fuck, man, I guess I should have guessed you'd shoot in my mouth. Only fair I guess, after I did last time.\" He licked his lips. \"Not the worst taste in the world, I guess.\"\n\nHe looked down at his own crotch. \"No point hiding this, I guess. You mind if I...?\" he trailed off, as Paul got the picture.\n\n\"Be my guest, man.\" He replied.\n\nCraig spun around on the floor with his back to the couch, pulling his pants off and freeing his hard cock. With eyes closed, he leaned back, and quickly rubbed an impressive load out onto his own chest. Paul watched him silently.\n\n\"That was actually kind of hot.\" Craig admitted as he wiped himself off with his T shirt. \"Thought it would make me want to vomit, but actually sucking you was kind of a turn on.\"\n\nPaul blushed again. It seemed to be a near constant reaction for him at the moment. \"Yeah, I guess.\" He reluctantly admitted.\n\nTaking Craig's lead, he wiped himself off with his shirt before pulling his pants up. \n\nCraig jumped up and grabbed a couple of beers before sitting on the couch again. \n\n\"So...another episode of The Mandalorian, then?\" \n\n******************\n\nFor days, Paul couldn't get the image of his cock disappearing into Craig's mouth out of his mind. It seemed every time he saw him he had to distract himself to prevent an awkward boner. Craig too seemed to look at him differently.\n\nJerking off, if was all he could think of. With his eyes closed, his mind would travel back to that night as he stroked. Occasionally, the sensation of Craig just touching his hole would come to mind. Like it had on the night, the thought of it was often enough to tip him over to orgasm.\n\nAnd was it possible that just at the moment of pleasure, Craig's spit-lubricated finger had slid inside of him?\n\nHe wiped himself off after yet another afternoon session. The towel under his bed was getting quite a lot of use lately. Wandering into the lounge room, he saw Craig on the couch with an Xbox controller in hand, so he sat down and picked up his own remote.\n\nCraig added him into the game without speaking, and they played together comfortably like that for some time.\n\nInternally, Paul struggled to find the way to express what was on his mind. Finally, as the game paused between levels, he put voice to his thoughts.\n\n\"I've been thinking.\" He began slowly. \"Maybe we should have another go at helping each other out. It was kind of a relief to get a load off, and, well, it wasn't that bad taking one for you.\"\n\nCraig kept staring directly at the screen. \"Yeah, I've been thinking the same.\"\n\nRelieved, Paul continued. \"The thing is, I kind of still miss fucking. It was great getting a blow job again...well, amazing actually...but there's nothing like really getting laid.\"\n\n\"Fuck yeah, I miss that.\" Craig said a little wistfully.\n\n\"I mean, it can't hurt that much to get fucked.\" Paul continued, shooting a quick sideways glance at Craig as he spoke. \"I sure wouldn't love it, but I guess maybe I could put up with it if it meant I'd be able to fuck someone again finally. Just have to lie there and think of something else.\"\n\nCraig carried on with his line of reasoning. \"Yeah, I'm not some fucking pussy who can't put up with a bit of pain. I'd do pretty much anything to get laid again!\"\n\nPaul breathed a sigh of relief. That had gone better than he'd expected.\n\n\"I mean, it would just be between us. No one would ever find out.\" He continued, gathering steam. \"And it's not like it's gay or anything. It's a fucking global emergency, man! A guy's gotta help out a mate from time to time.\"\n\n\"Wait here.\" Craig got up off the couch and vanished into his room, returning with a paper bag in hand. \"I thought you might think that way, but I didn't want to be pushy. I've been doing some research on how to make it hurt less, and, well, they said practice basically.\"\n\nHe reached into the bag and pulled out 2 black rubber objects and held one out to Paul. \"I got one for you as well.\"\n\nPaul took the object from him and looked at it up closer. \"What is it?\" he asked, perplexed.\n\n\"It's called a butt plug, apparently.\" Craig explained. \"I ordered them online. You lube them up and slide them in your arse, and they help you to relax the muscle a little bit.\"\n\nPaul found himself somewhere between disgust and fascination. He held the object closer, looking at it. It had a slightly curved, phallic shape, although somewhat smaller than an average cock, with a narrowing at one end that flared out into a broader base.\n\n\"That's so you can wear it under your clothes without anyone working out you've got it up there.\" Craig offered helpfully.\n\n\"So, you think I'm just going to stick this up my arse, then, do you?\" Paul asked, incredulous.\n\n\"I don't care what you do with it.\" Craig was a little defensive. \"I just thought it might help make things a bit more comfortable if my cock's not the first thing that heads in that direction is all!\"\n\n\"Anyway,\" Paul shook his head and set the plug back on the table, trying to push it from his mind. \"I feel like this is something that we have to work up to with a bit of notice. How about we book the first...encounter...for this Friday night?\"\n\nCraig nodded his agreement. \"Yep, I don't have any plans.\" He gave a wry chuckle. \"Shall we settle who goes first now then?\"\n\nA sense of inevitability seemed to descend on their discussion. Clearly this was going to happen. Paul couldn't tell whether he was more excited or petrified.\n\n\"OK, I guess.\" He agreed.\n\nThey both held up a closed fist.\n\n\"Three, two, one!\" Craig counted down as Paul frantically tried to pick either Rock, Scissors or Paper. At the last instant, he held up the sign for scissors and with as a sinking sensation washed over him he saw Craig's triumphant Rock.\n\n\"I can't believe you went for the same one again!\" he crowed. \n\n\"Yeah, well, maybe I just wanted to get it over with.\" Paul grunted. He grabbed the butt plug off the coffee table and headed for the kitchen. He tried to sound nonchalant as he grabbed a beer out of the fridge.\n\n\"Drink o'clock?\" he asked Paul as he held out a bottle.\n\n***************\n\nPaul headed to bed as soon as he could reasonably do so without seeming awkward. He couldn't stop thinking about the agreement he'd just made. What if he couldn't deal with having someone's cock in his arse? Or worse, what if he liked it too much?",
        "He had to find out what it would be like.\n\nAlways a goal driven man, he quickly stripped off his pants and grabbed some lube out of his bedside drawer. Laying out a towel on his bed, he sat propped up against the headboard, knees drawn up towards his chest. \n\nHe looked at himself in the mirrored cupboard door opposite him. He'd never really paid attention to this angle of himself before. He watched himself as he reached down between his legs and smeared some lubricant around his puckered hole. His finger glided across the irregular surface, stimulating nerve endings in a way he wasn't used to.\n\nHe rapidly felt his hardening cock press up into his stomach in response. This was certainly new.\n\nHe reached beside him and grabbed the black silicone plug Craig had bought for him. Smearing some lube over its surface, he felt the smooth, rubbery texture. This would be interesting.\n\nReaching down between his legs again, he brought the tip of the plug towards his hole, guiding himself with the mirror. He rubbed the opening gently, impressed by the reflexive twitch of the muscle.\n\nApprehensive but determined, he pressed the narrow tip firmly against his hole, trying to maintain deep, relaxed breathing. He pushed it against a firm, muscular resistance. \n\nTaking a deep breath in, he exhaled slowly, consciously relaxing the muscle while pushing the plug against himself. With a sudden give, the muscle relaxed, the plug entering through into this untouched part of his body.\n\nA sharp pain shot through him and he grunted, his arse clenching hard against the foreign intrusion. Gone as quickly as it came, the pain vanished, leaving a warm, throbbing sensation as his anus slowly accommodated to the dilating force of the silicone plug.\n\nFinally relaxing again, he slid the plug slowly inside himself, feeling the gliding friction as he was entered for the first time. After what seemed like an age, he finally felt the splayed base press up against him, moulded as it was to fit between his arse cheeks.\n\nHe lowered his legs and slowed his breathing, feeling the sense of warm fullness in his pelvis. Aside from that first twinge of pain, his virgin entry had not been as bad as he'd expected.\n\nHe shuffled himself down the bed and lay onto his back, reaching for his cock. The change in position brought the tip of the curved plug forwards within his pelvis, suddenly pushing against some magic button inside of him.\n\nHe gasped as he squeezed his cock, a shot of clear precum escaping the end of his cock and moistening his hand. Pleasure shot through his pelvis in warm ripples, extending further and further as he was stimulated.\n\nHe stroked himself slowly, languorously, enjoying the dual sensations. Incredibly he was already near orgasm. Racing towards his goal, he stroked himself hard, squeezing tight as he massaged up and down his cock.\n\nHis arse muscles contracted rhythmically as his orgasm approached, sending the plug deeper inside him with each contraction. The pleasure built and built exponentially until finally he exploded. \n\nHis arse clenched tightly against the silicone plug as it stimulated his pleasure centre. His cock throbbed as cum shot forth from him in a fountain. He cried out involuntarily as the ecstasy overtook him, spraying the hot white fluid over his neck and chest.\n\nAs the tide receded, and his breathing slowly returned to normal, he lay back, spent, onto his bed. He jumped as Craig thumped on their shared bedroom wall behind him.\n\n\"Sounds like you're enjoying that little present I got you.\" \n\nPaul blushed furiously as he wiped the cum from his body. He wiped himself off and pulled the plug from inside of himself with a final jolt. With no way to defend himself, he decided to stay quiet, lying back on the bed and enjoying the afterglow as he drifted off to sleep.\n\n************\n\nDays passed without Paul so much as touching the silicone plug again. Despite his good intentions to try it out again a few times in preparation from Friday night, Thursday suddenly rocked up without him having done anything.\n\nBy afternoon, it was clear that he wasn't going to get any spare time for a little self-experimentation. Things were too busy, and besides that, Craig would no doubt be listening in and ready to make fun of him again.\n\nTime was short, so he really had to wear it at least some of the day. Since he had errands to run, there was no option but to wear it out for at least awhile.\n\nClosing the door to his room, he ripped off his pants and quickly lubed up the plug, wiping the excess around his hole. The silicone instrument slid inside a little easier this time as he crouched on the floor beside the mirror. He stood with it inside him, wiping the clear drop of precum escaping from his cock onto a dirty T shirt from the floor.\n\nBeginning to feel himself get hard, he shook himself, determined not to focus on it. He quickly dressed, tucking himself into his pants, and checking his reflection to make sure nothing was amiss.\n\nConvinced he looked normal, he made for the door, grabbing his pack as he passed.\n\nThe walk into town took around 15 minutes. With each step, he could feel a little vibration shoot into his pelvis as the plug was pushed around inside him. It felt good. The fact that he was pleasuring himself in public added an exciting dimension to the experience, and he wandered along with a smile on his face.\n\nAs he approached the store, he checked himself in the window, trying to appear nonchalant. Still no sign of anything amiss as far as he could see.\n\nFuck he was getting horny though!\n\nHeading inside, he wandered the aisles, collecting the various goods on his shopping list. The pleasure was becoming harder to ignore. He could feel the muscles of his arse contract from time to time, setting off a chain reaction. The contracting muscles shot the plug deeper inside him, pushing against his prostate gland. This caused a pleasure to shoot through him, again causing his arse to contract. In no time, he was caught in a feedback loop of pleasure, muscle contraction, pleasure muscle contraction, etc. Although relieved it hadn't caused an erection, the pleasure waves were building rapidly.\n\nFinally in the baking aisle he could take it no longer. He leaned against a shelf, arse contracting with a rapid force, shuttling the plug in and out of him, ramming it against his engorged prostate gland.\n\nHe whimpered as he leaned against the shelf, the warm ecstasy cascading through him as his arse auto-fucked itself. He moaned with the pleasure, imagining it would last forever.\n\nFinally though, the waves receded once again. His arse muscles relaxed, ending their involuntary contractions. He stood up straight again, looking around himself hastily, relieved to still be alone.\n\nFeeling his soft cock leaking into his pants, he quickly grabbed a tissue off the shelf and stuffed it into the front of his underwear. He wiped his sticky hands absently on his pants.\n\nDetermined now to get home quickly before another event occurred, he grabbed the remaining items off the shelf and rushed to pay and get on the bus. At least going in this direction the bus was less crowded and much quicker than walking. He'd be glad to get home and take the foreign body out of himself.\n\nAs the bus finally arrived, he swiped his Myki card and headed for a seat near the back. Relieved to be heading for home, he put his shopping bags on the floor.\n\nRemembering the plug too late, he slumped heavily into the seat. The plug slammed into him with a force, pressing firmly against his pleasure button once again.\n\nHis cock responded this time, swelling in his pants. Before he could change plans, the bus departed, heading off down the street.\n\nHe panicked suddenly as he felt the engine roar to life, vibrating through the whole bus. The vibrations followed right through his seat up and into the butt plug, vibrating vigorously into his anal canal.\n\nHe cried out with the sudden shock of pleasure, blushing as an older lady turned to look at him. Attempting to relax back in his seat and appear normal, he tried to ignore the vibrating pleasure shooting deep into his pelvis.\n\nHe felt more fluid leak from his erect cock as he was stimulated. Scared someone might see a wet patch developing, he rested a shopping bag in his lap. \n\nThe bus continued on it way, now heading down a busy street. The engine roared as it pulled away from another stop. Paul could feel the familiar pleasure building in the base of his cock.\n\nDesperate not to make a fool of himself in public, he tried to lift his arse up clear of the vibrating seat. The contraction of his arse muscles to lift himself caused the plug to shoot up inside him even deeper, ramming into his prostate once again.\n\nIt was all he needed to tip over the edge. His body shook as his orgasm built with a slow, inevitable crescendo. Starting deep within his pelvis, the pleasure shot through him in concentric circles. His hard cock twitched and contracted as he shot a long, vigorous load into his pants. He writhed on the bus seat as he came, biting his lip to stop himself vocalising.\n\nHe looked around as his orgasm slowly receded. A few people shot him a sideways glance, but no one seemed too put out by his quiet display. He looked down in dismay at the wet sticky mess soaking through his pants. Why the fuck did he decide to sit down the back?\n\nHis stop finally approached, so he grabbed his shopping and gingerly got up off the seat. He held the shopping in front of him, awkwardly trying to hide the obvious wet stain on his pants.\n\nRelieved that no one seemed to notice, he raced home, rushing past Craig in the lounge to finally take out the offending plug.\n\nAs he showered himself clean, one thought kept circling through his head.\n\n\"What the fuck was that!\"\n\n**************\n\nFriday finally arrived, and Paul woke with a sense of dread thinking of the night ahead. It seemed like there was no way around it. Sure he could pull out of the arrangement, but that would be like admitting a weakness after the way he'd talked about it with such bravado.\n\nOn some level he was nervous about the experience itself. It surely couldn't be comfortable, and while he could put up with as much pain as the next guy, what if it really hurt? Or worse, what if it caused some sort of damage?\n\nMore than this, though, was an anxiety that he might like it a little too much. The episode on the bus had freaked him out. What if he really liked getting fucked? What if Craig could see that he liked it? How would he ever live that down?\n\nThe day ticked past with an agonisingly slow rhythm. He tried as best he could to distract himself from the night's pending activities, but his mind kept coming back to the thought of Craig's cock, sliding into his virgin arse.\n\nNervous about the night, he'd already showered 3 times, just to make sure he was clean. Trying to ease himself into the night, he had his first beer by 5pm, and by dinner time he had a good buzz going.\n\nThey sat on the couch once again, finishing off a pizza from their local. Craig seemed to be drinking more than usual as well. Perhaps Paul wasn't the only one anxious about their plans.\n\nTheir conversation was much more stilted than their usual easy banter. It seemed as though they were both trying to keep the conversation going just to delay the inevitable.\n\nFinally Paul couldn't take it anymore. His head spinning slightly from the beer, he turned to Craig.\n\n\"This is driving me crazy.\" He blurted out. \"We need to just get this over with. If you're going to fuck me, let's go.\"\n\nHe got up from the couch and walked to his bedroom. Craig stared at him a moment as he left, before getting up to follow him a little sheepishly. \n\nPaul was already undressing by the time Craig entered, pulling his shirt over his head. He turned to Craig and looked down at his crotch.\n\n\"You'd better be ready. I don't want to have to wait for this all night.\"\n\nHe undid his pants and stripped them off, standing naked in his room, staring at a slightly stunned Craig.\n\nCraig finally shook himself and rushed to follow suit, quickly ripping off his clothes and exposing his naked body. Already his cock was swelling in anticipation, eager to slide into a hole for the first time in months.\n\nPaul looked at him in dismay, judging the size of his cock differently now he knew it would soon be invading his most private area. His 'practices' with the butt plug seemed amateur now as he looked at the throbbing rod before him.\n\nAccepting his fate, and not wanting to admit weakness now, he turned towards his bed and bent over, leaning down on his hands. He stepped his feet apart, exposing himself to his mate. \n\nHe hung his head down, his breath coming a little fast. He was surprised to find that he was shaking, more nervous than he had imagined. He felt entirely exposed, vulnerable in this position. He couldn't help but feel submissive standing naked like this, bent down and waiting for a cock.\n\nHe heard Craig open the bottle of lube from the dresser and heard the sticky, wet slurping of his cock getting lubed. He jumped as a hand rested on his naked hip.\n\n\"You sure you're ready?\" Craig asked, his voice catching a little.\n\n\"Just get on with it.\" Paul managed to get out, his voice thick.\n\nCraig pulled back one buttock, exposing his hole. Paul felt two wet fingers slide over him, wiping lube across the tight opening. He exhaled as his opening was massaged, the slippery fingers pressing against him. One slipped inside him a little making him catch his breath.\n\nThe fingers vanished, and were soon replaced by the unmistakable 'thwack' of a hard cock being slapped against skin. Craig whipped his hole with his lubed-up dick, as if he were knocking at a door.\n\nPaul concentrated on keeping his breath slow and even, trying to pay attention to anything but the pleasurable sensations coming from his arse. The last thing he wanted was to get hard while this happened, and show Craig that he was enjoying being fucked.\n\nUnable to help himself, he snuck a glance sideways at the scene playing out on his mirrored cupboard doors. Craig looked massive, towering over his bent, naked body like this. He held his cock with one hand, lining it up against Paul's hole as he slowly increased the pressure.\n\nPaul shut his eyes, not wanting to watch. He felt the insistent pressure of Craig's cock at his opening, pushing against his tight arsehole. Pressure began to transform into pain as his sphincter instinctively fought against being invaded like this. He held his breath, every muscle tense.\n\nFinally, as the pain became too much, he remembered to push down, like he had with the plug, to open his muscle. Suddenly feeling a lack of resistance, the cock slid quickly into him, filling the opening of his hole.\n\nHe cried out at the searing pain as he was penetrated. Craig froze at his obvious discomfort, squeezing both his hips.\n\n\"Fuck, man, are you ok?\" he asked Paul.\n\n\"Yeah, man, just take it slow for a sec. Maybe some more lube?\"\n\nCraig quickly complied, rubbing more of the smooth liquid over the remainder of his cock. As Paul's breathing slowed again, he began to relax, eventually sliding himself further back along Craig's shaft.\n\nThe pain subsided as he relaxed his arse, opening up to accommodate this unfamiliar invasion. He heard a low moan coming from his own mouth as he slid further back along the hard cock. Finally his arse met the strangely reassuring sensation of Craig's pelvis, skin against skin. He was all the way in.\n\nPaul held himself there, breathing slowly, allowing himself to relax around Craig's cock. He felt Craig giving his lower back a reassuring rub as he pressed firmly against his arse.\n\nThe rest of Paul's body was rigid. It had happened. He had a cock inside of him. He'd managed without disaster. It all seemed so wrong! How could he be getting fucked? He wasn't gay! This was not something he did! \n\nAt the same time, though, the wrongness of it all turned him on. This sense of supplication was a rush. He was just here for someone else's pleasure. Just here to get used while Craig shot a load in him. The very thought of it was making him hard.\n\nHe glanced back at the mirror, looking at their naked bodies, finally linked. Before he could look away, Craig caught his eye.\n\n\"This feels so fucken good.\" Craig moaned to him. \"Your arse is like a vice! It's so fucking tight. I know I haven't got laid in a long time, but this feels fucking amazing.\"\n\nPaul looked away. \"I'm in a pretty compromising position, here, man. Maybe we could just get on with this without all the talking.\"\n\n\"Sure thing.\" Craig agreed. \"Sorry.\"\n\nIn response he slowly pulled himself back from Paul's arse, sliding his cock along the tight tube before sliding it slowly home again. Paul let out an involuntary moan, as the glorious friction rubbed his insides as they'd never been rubbed.\n\nHe caught himself, biting his tongue to that he wouldn't make any more noise. He looked down at his cock, standing rock hard, clear fluid dripping from him onto the bedspread below. This was not good.\n\nHe started to rock himself back onto Craig's cock, slowly increasing the pace and length of his strokes. He had to make him cum soon or this would start to feel too good.\n\nCraig moaned his appreciation. \"Oh yeah,\" he groaned in a low voice. \"That's it.\" He slowly began to slide into Paul's arse, fucking him slowly and gently.\n\nPaul bit down another moan as he felt Craig's cock glance across his pleasure spot. His cock throbbed another load of the clear fluid onto his bed as his prostate was stimulated. Again he felt the warm pleasure rush through him, and again, as Craig slowly slid his cock into him over and over.\n\nThis was getting desperate now. It was becoming harder to hide his enjoyment at this new found stimulation. He had to hurry things along.\n\nHe pushed himself firmly back against Craig's pelvis with a wet 'thwack'. \n\n\"C'mon man, enough of this sensual, candle-lit, romantic fucking. Now that you're in there can you just hurry up and fucking blow your load so I can get on with pretending this never happened?\"\n\n\"I don't want go too hard and hurt you, though.\" Craig countered.\n\n\"I'll stop you if you get too rough.\" Paul replied. \"Just get on with it already.\"\n\nHe rammed himself back against Craig's cock again, punctuating his point. Craig gripped harder onto his hips in response and began to fuck him harder, thrusting himself into him. Their pelvises met with a wet, rhythmic slap as he fucked with more force.\n\nPaul realised the flaw in his plan too late. The increased force just rammed Craig's cock even harder against his prostate, before plunging even deeper into his arse, sending waves of pleasure through his body.\n\nSweat beaded on his forehead. He longed to reach down and stroke his cock, but he dared not. Such an obvious display was too big a step to take.\n\nCraig rammed him harder and harder, slapping against him, thrusting deep inside him. His balls swung loose, slapping against Paul's taint with every thrust.\n\nPaul's legs could barely hold him up now against the onslaught of Craig's ramming thrusts. He collapsed forward onto the bed, Craig falling on top of him, their pelvises still linked.\n\nLegs together he lay face down on the bed as Craig straddled him. His hard, leaking cock was trapped beneath him as Craig straddled his pelvis, thrusting into him with animalistic enthusiasm.\n\nCraig reached up and grabbed his wrists in one hand, holding them above his head. He squeezed Paul's legs together between his thighs, tightening his arse even further. His free hand pushed down on Paul's back, effectively trapping him on the bed beneath his sweat covered body.\n\nPaul lay there helpless as Craig thrust into him with force, fucking his arse with a frenzied pace. With each thrust, his body pushed forward against the mattress. His trapped cock rubbed up between his belly and the bedspread, massaged with each thrusting push.",
        "A low moan punctuated each ramming blow as the air was pushed from his lungs. He was no longer able to focus, his body a tingling mass of pleasure. Unable to move his head, he stared at the mirror as Craig thrust into him. They both grunted in unison, oblivious to anything but the pleasure being generated between them.\n\nPaul heard a high pitched moan and realised it was coming from his own mouth. Unable to control himself, he writhed under Craig's body, doing anything he could to increase this incredible new pleasure. \n\nHe chased the warm, bliss centering in his pelvis, angling himself just so, as Craig rammed into him, massaging his prostate with every movement. The pleasure grew as his cock rubbed against his belly, the leaking fluid creating a wet mess beneath him.\n\nFinally he felt it build, the familiar augmented orgasm he'd had on the bus. He needed it, like nothing he'd ever needed. Only Craig's cock could give it to him. His mate's cock inside of him. His arse, invaded by a throbbing cock. A cock that was about to give him the best orgasm he'd ever had.\n\nThere it was, finally. He felt the fire kindle, and tried to feed it. The writhing man entrapping him on the bed drove into him again and again as the fire finally caught hold, spreading through his whole pelvis. It burned inside him, hotter and wider. The pleasure spread through him, in hot waves, his whole body tingling.\n\nIt centred now at the base of his cock, intense white heat. He could feel it growing, pushed into him from behind as Craig thrust again and again. His mind was blurred, there was nothing but pleasure and friction and fire. \n\nFinally, just as it was about to overwhelm him, an exploding release rocketed from him. His whole body shook, as he convulsed beneath Craig's weight, cum shooting forth from him smeared beneath him onto his belly and the mattress. His muscles contracted with a rhythmic spasm, the orgasm racing through him.\n\nHis vision cleared as the pleasure finally abated. Craig writhed on top of him, panting and grunting like an animal as he thrust deep into him with a brutal force. His arms were wrapped around him, squeezing him tight as his own orgasm finally hit.\n\nHe cried out as he came, deep inside Paul's arse. Paul could feel the cum shoot into him, filling his insides with the hot, white liquid.\n\nFinally he came to a shuddering stop, collapsing with his full weight on top of Paul, both panting and drenched in sweat. He slowly rolled to one side, cock slipping from Paul's wet hole silently. Paul could feel the cum drip from him, running down between his legs and coating his balls.\n\nThey lay there for a few minutes wordlessly, Craig with one arm still draped over Paul's prone form.\n\n\"Fuck man, that was...\" Craig just trailed off, not finding the words to describe what had just happened. \"That was just...Sorry man, I kind of lost it at the end there. Hope I didn't go too hard.\"\n\nPaul said nothing, his hard-on slowly shrinking beneath him.\n\n\"Just...\" Craig gushed on, still barely catching his breath. \"I know I haven't gotten laid in months, but...that was the best fuck I've had in so long! Your arse was like squeezing down on me near the end there and it felt fucking incredible!\"\n\nPaul lay still, still processing what had happened. He wished Craig would just shut up and go.\n\nCraig suddenly looked at him. \"Hey, I can give you a quick stroke if you want to cum. It's only fair!\" He pushed Paul over to one side, revealing the wet pool beneath him.\n\n\"Jesus, man, did you cum or something?\"\n\nPaul blushed furiously. \"No way, man. I must have just pissed a bit when you pushed against my bladder.\"\n\nHe sat up quickly, another glob of Craig's cum escaping from him. Embarrassed he stood and ripped the quilt from under Craig's naked form. \n\n\"This will need a wash anyway. I'll chuck it in the wash while you get me another beer.\"\n\nHe left the room, trying desperately not to run, and ignoring the trail of liquid running down the inside of his thigh.\n\n*************\n\nPaul spent the next few days doing his best not to talk about that night, preferring to go on as if nothing had changed. Inside though he was in complete turmoil.\n\nHow could a dick in his arse make him cum? He had no frame of reference for this. Nothing like it had ever happened to him. He'd never fantasised about sex with another guy before.\n\nNow, though, every time he closed his eyes, he could see his reflection in the mirror, lying face down while Craig sweated and moaned on top of him, reaming his arsehole with that big, slick cock.\n\nAnd every time, it got him hard.\n\nHe resorted to watching as much straight porn as he could, figuring if he immersed himself in images of naked women, it would sort itself out. The trouble was, though, that he kept finding himself watching the guy in the scene, wondering what his cock would feel like sliding up inside him.\n\nFinally the week passed, and Friday night swung around again. He could see Craig getting nervous, much as he had at this point in the week. He found himself watching him closely, wondering if he was perhaps practicing with the butt plug as well. Was that a slightly awkward posture on the couch? Did he seem to be walking just a little funny?\n\nThe night rolled out much as it had the week prior. They got some takeaway and both hit the booze, aiming for just the right amount of disinhibition.\n\nOn a certain level, Paul found himself hoping that Craig enjoyed getting fucked as much as he had. Maybe it was something all guys would like if only they tried it sometime. That seemed a little easier to take.\n\nIt was Craig that moved things along.\n\n\"Look, I know I went pretty hard on you last week, but, well, be gentle.\" He got up off the couch and walked towards Paul's bedroom, unbuttoning his shirt as he went. He reminded Paul of someone on death row, walking slowly towards their fate.\n\nThe vague anxiety he'd had over the day that he wouldn't be able to get hard vanished immediately as his cock instantly started to swell in his pants. Everything else aside, he longed to be able to fuck something after such a long time.\n\nHe walked into his room to find Craig stepping out of his pants. He'd never really paid attention to Craig's body in the past, but the sight of his naked, muscular form was worth admiring. He'd lost a little tone during the lockdown, but he was extremely well built. \n\nHe admired the firm, round globes of his buttocks as he bent over, looking in Paul's bedside drawers for some lube. He turned around, butt plug in hand.\n\n\"I see you've been giving this a bit of a workout.\" He laughed. \"Me too! Anything that might help.\"\n\nHe threw it onto the bed as Paul quickly undressed. He had already leaked a collection of sticky fluid into the front of his underwear.\n\nCraig walked over to him, lube in hand, and squeezed a generous dollop of the cold liquid onto Paul's stiffening cock. He stroked him slowly, spreading the lube around and coaxing a nice, firm erection.\n\nPaul took over the stroking as Craig turned and bent down before him, knees leaning against the bed. He reached up between his legs with another helping of lube and smeared it roughly around his hole.\n\nPaul took the lube from him and squeezed some onto his finger. He wanted this to go well, and more lube certainly couldn't hurt. Pulling Craig's buttock aside with one hand, he looked at the puckered, tight hole, smearing the additional lubricant around.\n\nCraig grunted softly at the unexpected touch, but made no complaint. Paul centred on the opening itself, and slowly slid his finger inside, dragging more lube along with him. \n\nThe hole was so tight. How would he ever get his cock inside that?\n\nAs he finger fucked him slowly, he felt a subtle relaxation. He turned his finger, making sure to lubricate it all the way around.\n\nHis cock was aching, as hard as it had ever been. A drop of precum gathered at the opening before dropping lazily down in a long, viscous string towards the floor.\n\nCraig was looking off to one side, lying still against the bed, his arms spread wide on the mattress. Paul removed his slick finger and grabbed onto his cock, giving it a final couple of strokes for good measure.\n\nLeaning forward, he lined up against the tight, wet opening, pushing forward with some gentle pressure. He felt Craig's breathing get slower and deeper as he concentrated on relaxing, allowing entry to his mate.\n\nCraig lifted one knee up onto the bed, his other foot on the floor, spreading his arse wide to allow Paul better access. His balls squished against the mattress, the head of his cock just poking out underneath.\n\nPaul pushed forward again, meeting strong resistance. Craig was so tight, he couldn't see how he'd ever push his cock in through the opening.\n\nHe tried again, with a little more force, still to no avail.\n\n\"Try pushing down a bit.\" He offered Craig. \"Like you're pushing something out. It helps you to relax a bit.\"\n\nHe shook his head at himself internally. Fucked for the first time only a week ago and already he was offering advice!\n\nHe rested a hand on Craig's lower back, massaging him gently, trying to help him relax. He pushed forward once again, slowly. With a sudden shift, Craig seemed to open up, and the head of his cock slid inside the tight opening.\n\nCraig let out a cry and clamped down hard once again. Paul stood still, moving neither forward nor back as Craig adjusted to the new sensation. Slowly, he felt the tight ring squeezing the head of his cock relax a little.\n\nTiming himself carefully with Craig's breathing, he inched himself slowly further and further inside. Both hands were now massaging Craig's back and arse as he impaled him with agonising slowness.\n\nPaul could feel the muscles surrounding Craig's virgin passage start to loosen now as they accommodated to their new role. He started to slide himself slowly in and out of Craig's hole, getting a little deeper with each tiny motion.\n\nFinally, he felt the firm, round globes of Craig's arse pushed up against his pelvis, signalling his completed goal. He was in!\n\n\"Fuck that is tight!\" he said in awe, stating the obvious to the sweat-sheened man doubled over before him.\n\n\"I swear your cock must have grown about six inches since we agreed to this. It felt like you were going in so far I'd start to taste you on the back of my tongue!\"\n\nPaul laughed, the tension breaking somewhat. \"You doing ok down there?\" he asked.\n\nCraig gave a wry chuckle. \"Well an agreement is an agreement, right? Actually it hurt a lot to begin with, but it's getting easier now. Just go slow, though, yeah?\"\n\n\"You bet.\" Paul reassured him.\n\nHe began to slowly move again, sliding himself out of the tight opening and slowly back in again. As Craig accommodated, he began to move even more, sliding in and out, relishing the delicious friction over his cock that he'd been missing for so long.\n\nWith every push forward, the tight muscular tube pulled back his foreskin, exposing his more sensitive head to the stimulation. It felt fantastic.\n\nPaul moaned, watching rapt as Craig's arse swallowed the full length of his cock over and over. This was amazing!\n\nHe looked down at Craig face down on the bed, eyes closed and sweat glistening on his forehead. He wanted to make sure that he was going to enjoy this.\n\nAngling himself slightly forward, he aimed his cock at where he imagined his pleasure gland would be sitting, deep inside his pelvis. With a thrust forward, he tried to glance across it, stimulating the sensitive area with his cock.\n\nCraig's eyes shot open in surprise as Paul finally found his target. He moaned softly as his pelvis rocked back against Paul's. Paul thrust forward again, hitting his prostate a second time. Craig moaned again, a little louder.\n\nA couple more thrusts had Craig moaning with some enthusiasm, pushing himself back against Paul's advancing cock, tilting his pelvis just so, to maximise the pleasure ricocheting through him. \n\nCraig looked back over his shoulder at him as Paul fucked him. \"Jesus, man, no one told me that this actually feels good!\" He looked incredulous. \"How have I missed out on this my whole life?\"\n\nPaul grinned, confident now that he'd won him over. It wasn't just him that enjoyed getting fucked.\n\nHe gripped him with both hands around his waist, thrusting forward again.\n\n\"Maybe it's just my magic cock that you like.\" He joked. He pushed forward again, eliciting another involuntary moan from the muscular man sprawled before him. \"Maybe I'm just so good even straight men love to get fucked by me.\"\n\nCraig rolled his eyes. \"Just shut up and fuck me, would you?\" he asked.\n\nHappy to oblige, Paul turned his attention back to the muscular arse gripping tightly onto his neglected cock. Taking Craig's cue, he started to up the pace, pulling back and ramming home again, slapping against his taut buttocks. \n\nHe adjusted his feet further apart, giving himself some swinging room, and reached forward, grabbing Craig by the shoulders. A wet slap marked out his rhythm as his balls swung against Craig's taint with every stroke.\n\nFinally he was getting the fuck he had long awaited. It felt different to fucking a woman; tighter of course, but also somehow more athletic. He felt powerful looking down at Craig's splayed body, submitting to him as he took his pleasure.\n\nSomehow, though, he still felt that something was missing. He lacked the deep, warm glow that he'd felt while Craig had fucked him the week before. He missed it. It felt great getting his cock wet like this, but at the same time he felt strangely empty.\n\nLooking at Craig's blissful expression as he impaled himself back onto Paul's cock, he felt a sense of confidence. He had nothing to hide from him now. Everything was open between them.\n\nHe stopped his energetic thrusts, keeping his cock buried deep inside Craig, and leaned forward picking the butt plug and lube up off the bed. He poured lube over the rubbery object and smeared it around.\n\nMoving one foot up onto the bed next to Craig's, he leaned forward, aware that Craig was watching him in the mirrored cupboard door. Somehow it seemed to turn him on even more, putting on a show like this.\n\nLining the plug up carefully, he inserted it into himself with a practiced ease. It slid home sending off a familiar pulse of pleasure as it rested up against his prostate.\n\nCraig said nothing as he put his foot back to the floor and took a few experimental strokes. As he slid forward into Craig's hole, his pelvic tilt moved the plug up against his pleasure zone with a force, glancing across his sensitive gland. Paul felt an eruption of fluid escape him, lubricating Craig's tight tunnel even further.\n\nThis was it! This was the feeling he wanted. A complete pleasure encompassing his arse and his genitals, one fanning the flame of the other.\n\n\"Oh God!\" he moaned, his legs shaking as he thrust into Craig again.\n\nKnowing that he would not last long, he decided he wanted to watch Craig's face while he was fucked. \n\nHe pulled slowly out of him, gripping the base of his cock, and rolled him, wordlessly, onto his back. Gripping one ankle with his hand, he lined his cock up with the other, and watched the look of bliss cross Craig's face as he was entered once again. Dilated and lubricated as he was, there was no look of pain on his face this time, just the instant pleasure of being filled.\n\nWrapping Craig's legs around him, Paul began to fuck him hard, gripping his waist with both hands. With every thrust, the butt plug rammed further home, sending ripples through his pelvis and out his cock. He could feel the fluid spilling from him into Craig's arse as he fucked him. A wet slap punctuated every lunge as their pelvises slammed together.\n\nPaul's whole body was electric, almost on fire with blissful pleasure. When Craig reached up and grabbed his nipples, he cried out and nearly collapsed as his knees buckled with the unexpected sensation.\n\nThey were both covered in sweat, staring wordlessly at each other as their bodies writhed together. Incoherent vocalisations accompanied the rhythmic slap of their endeavours. Had a fire alarm sounded at that moment, neither of them would have heard, so lost were they in their blissful encounter.\n\nSensing Craig's moans starting to climb, Paul reached down and grasped his cock, stroking him in time with his thrusting advances. Craig was a wet mess, precum covering his cock and belly.\n\nIt only took a few strokes to bring him to the edge of orgasm. Throwing his arms back above his head, he arched his back, his body rocking with the force of Paul's cock. A guttural moan rose from his throat as he built to the inevitable eruption.\n\nPaul could feel Craig swell further in his grasp, the throbbing head of his cock growing in his hand. Finally, with a gushing vibration, he erupted, shooting cum in a high arc into the air. Paul watched as it splashed down over Craig's body, landing on his face and neck before streaming down onto his chest.\n\nImmediately it was followed by a second, third and fourth shot, coating him in the hot, white mess.\n\nShuddering spasms rippled through Craig's body as he writhed on the bed in orgasmic ecstasy. The rhythmic clenching of his muscles spread to his arse, gripping and massaging Paul's invading cock with a new intensity.\n\nIt was enough to tip Paul over the edge as well. He felt it build in him, a tiny spark deep in his pelvis, rapidly growing as the intense stimulation fed its hungry flames. He grabbed hold of Craig's writhing body firmly, fucking him with greater force.\n\nThe fire spread through his whole pelvis, an intense pleasure like none he'd experienced. The tip of his cock buzzed, but so too did his balls, his arse, and his whole body.\n\nThe inevitable orgasm took hold of him, overtaking any sense of control over his own body. He fucked with a furious, fevered intensity, barely even registering now the orgasmic bliss on Craig's red face.\n\nHis knees buckled as the first eruption of cum shot forth deep into Craig's belly. He collapsed forward onto him, the force of it ramming him even deeper inside. As he came, his own arse spasmed, shooting the butt plug into him with a rhythmic force, stimulating his exquisitely sensitive prostate gland.\n\nIt was like a self-sustaining loop of pleasure. He shot cum, his arse spasmed, the butt plug rammed forward and he shot cum again. He writhed with incoordinate movements on top of Craig, ramming into him again and again as cum hosed out of him. His grip on reality faded briefly as he was surrounded only by pleasure.\n\nFinally, after what seemed like an age, the waves of his orgasm slowly receded. His body jerked randomly as residual spasms coursed through him.\n\nHis consciousness returned as he found himself lying face down, wrapped in Craig's arms and legs. His softening cock slipped from his no-longer virgin arsehole, accompanied by a wet torrent of spent cum, pooling on the bed beneath them.\n\nHe lay there catching his breath, unable to speak. Craig absently ran a finger up and down his back. With a monumental effort, he lifted himself up, and rolled to one side, off Craig's recumbent form. The unmistakeable smell of sweat and cum permeated the room.\n\nHe lay with one arm draped across Craig's chest, his breath finally returning. He searched his mind for some comment to break the obvious tension, something to explain away the obvious pleasure he'd just experienced from this gayest of sexual encounters. He had nothing.\n\nCraig broke the silence with a single syllable.\n\n\"Wow!\" he whispered. \"That was...wow!\"\n\n\"I know.\" Was the best that Paul could muster.\n\nCraig looked up at the ceiling. \"How is it that no one's ever told us how good it feels to get fucked?\" he questioned. \"There should be some sort of community awareness campaign or something. So many straight men all over the world missing out on...that!\"",
        "Paul flushed with relief. He wasn't alone in this pleasure he'd just experienced. His mind reeled with the implications. This was the best sex he'd ever experienced, by an awfully long way.\n\nWincing slightly, he pulled out the butt plug and dropped it on the floor. With a force of will, he rose from the bed, and reached out a hand to help Craig up as well. He laughed as a gush of cum dribbled down the inside of Craig's thigh.\n\n\"Well I guess we've both been thoroughly broken in now.\" He chuckled. \"Looks like lock-down just got a whole lot more interesting.\"\n\nHe gave Craig a playful push on the shoulder as he herded him towards the shower, ignoring the smeared mess all over his bedspread.\n\n \n"
    ],
    "authorname": "BluePill",
    "tags": [
        "straight",
        "bareback",
        "friends",
        "first time gay",
        "fucking",
        "cock sucking",
        "swallow",
        "roomates",
        "dildo",
        "cum"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-arrangement-25"
}