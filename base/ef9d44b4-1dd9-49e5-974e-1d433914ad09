{
    "title": "Big Flipping Deal Ch. 06",
    "pages": [
        "[The story so far: Thanks to an odd provision in a will, Nick begins remodeling a house with the gorgeous transsexual Lindsey, whom he finds increasingly attractive even after learning that she has the same thing between her legs that he does. In a hostile encounter with Lindsey's bigoted father, Nick is knocked silly and ends up kissing Lindsey while he's incoherent. A few days later, after a short workday on the house, the two go bowling. Nick then works up the courage to ask her to attend his cousin's wedding with him, where sparks unexpectedly fly over desert. Lindsey takes Nick back to her place, and they wind up dry-humping spectacularly. The experience overcomes most of Nick's reservations, and he decides to ask Lindsey out on a real date.] \n\nThe next couple of days went by with no weirdness whatsoever. \n\nWell ... \n\nUnless you count me spending about half the day at work with a raging boner Monday. And again Tuesday. And again Wednesday. \n\nAnd unless you count me spending a hundred percent of our remodeling time with an even raging-er boner. \n\nAnd unless you count me fantasizing about sucking Lindsey's cock every night as I went to bed. \n\nSomehow, up until our post-wedding dry-hump, I'd managed to do all my whacking off to porn. Yeah, I did my best to find videos of t-girls who looked like her, and yeah, I spent a lot of those videos thinking, Does her cock look like that? \n\nBut after that Saturday night, when I agreed with her suggestion that we shouldn't go to bed, when I let her drive me back to my place with her cum staining my slacks, I didn't even turn on the computer. I had no interest in watching other trans-women and wondering how much Lindsey was or wasn't like them. I'd gotten within one flight of stairs from sliding under the sheets with her, just one conversation from seeing her naked, from knowing, and being with, and touching the reality. And now I couldn't get it out of my head. \n\nHow much different would it be, to put my hand on her bare shaft instead of feeling it through her dress? How much different would it be taking her in my mouth, compared to that dream I'd had where I sucked her off? \n\nI noticed her glance at my crotch and smirk more than once during Monday and Tuesday's renovation work. But she had the decency to not rib me about it - and once, out of the corner of my eye, I thought I saw her look and briefly touch her tongue to her upper lip. \n\nTuesday got us through re-flooring the master bedroom, and it also got me a text from Sam: Sorry I was a dick about your date Saturday, man. Anything I can do to make it up to you? \n\nI texted back: Pick me up on your way to work tomorrow and let me borrow your car for a couple of days. \n\nSurprisingly, he agreed, and when Lindsey got ready to head out for the night, I told her I'd collect her at her place around six the next evening. She looked puzzled and asked if I'd gotten my car fixed, I told her about Sam trying to make amends, and I think we both parted for the night feeling a little better about humanity. \n\nThen I walked to the grocery store and bought myself a package of bratwursts and spent about half an hour working up the courage to see how many inches of sausage I could take into my mouth. \n\nIf our date hadn't been for Wednesday night, there's no telling how far I would have gone with those bratwursts. \n\n* * * \n\nIt's a good forty-five-minute drive from Dallas to the Modern Art Museum in Fort Worth. Forty-five minutes for me, I mean - Lindsey would probably have shaved five or ten off of that in her BMW. Most of the trip was the Irving/Euless/Bedford corridor along 183, wall-to-wall metropolitan area except for the vast tract of DFW airport right in the middle. Lindsey fiddled with the radio in Sam's Nissan until she found something danceable, then kind of relaxed into a nodding groove, looking over at me occasionally and smiling. She talked about an indecisive client who was giving her fits with one change of plans after another, back and forth and back and forth. \n\n\"I swear, I've returned and re-bought the same bathroom tile four times. The tile contractor is going to stop taking my calls.\" \n\n\"His loss,\" I said, with a glance her direction. I meant it to show how much I thought she deserved to be appreciated, and I think her smile said she caught that. But she looked out the window at the traffic and the suburbs sliding by and twirled one finger slowly in her hair, so I couldn't tell for sure. \n\nFort Worth is called Cowtown (among other things), and Dallasites tend to think of it as a rural bump over on their far western border. But it's the sixteenth-largest city in the country, and the Modern Art Museum there is a pretty respectable institute of higher culture. Not that I was over there every weekend or anything, but I'd been a few times and always enjoyed it. Well, except the one time I took Carmella and she bitched through the whole thing. \n\nWe pulled into the parking lot maybe half an hour from sunset under late September skies, just a few high, sparse clouds overhead. I killed the engine and got out first. She didn't wait for me to get her door, but opened it and climbed out into the still-warm air of early evening, which moved her hair with a hint of breeze. Watching her round the corner of the car to join me, I marveled at the absolute perfection to which she'd dressed herself - casual enough to say she wasn't trying to knock me off my feet, sexy enough to let me know she could if she wanted to. She had on a blouse of deep rose with the crisp, pointed collar unbuttoned to mute its formality. Her dark grey skirt hit a couple of inches above her knees, and I think her boots were the same calf-high stilettos she'd worn the first day I met her. A simple golden chain spanned her throat under the collar. \n\nI thought she had a bit of an odd expression as she drew even with me. \n\n\"You're not nervous, are you?\" The idea of someone who looked like Lindsey being nervous about a date with someone who looked like me - it felt good, to tell the truth. \n\n\"Surprisingly, no,\" she said, half-bursting my bubble - though I don't know why she'd say 'surprisingly.' She turned her face away, and I got ready for the full bubble-burst. But what she said was, \"I'm kind of ... trying not to be giggly?\" \n\nGiggly struck me as a thousand times better than nervous. \n\n\"Oh, that's bad,\" I said, lowering my eyebrows dramatically when her face came back into view. \"We're supposed to be going for a disaster date, aren't we?\" \n\nBy this point, we'd joined the flow of people approaching the museum entrance - a combination of highbrow socialites and granola types, with scattered mundane sorts like myself here and there. Maybe it was just my imagination, but Lindsey seemed unique in the crowd. I felt like everyone ought to be turning and looking at her in amazement, though of course, no one did. \n\nI caught some guys ogling, though. \n\n\"It doesn't quite have to be a disaster,\" she said as we neared the door. \"Just nothing special. A couple of friends at the museum. Ordinary.\" \n\n\"Gotcha,\" I said, holding the door for her. \"You know I'm never going to think you're ordinary, don't you? I mean that in a good way.\" \n\n\"Don't play dumb,\" she said once I'd let a few old ladies in and gotten through the door myself. \"We don't need to be ordinary ... you and me. You're weird and I'm transgender. But that's me and you. What needs to be ordinary is us, together.\" \n\nThe Modern seemed busy tonight - we had some lines to deal with, probably because this exhibit was new. But it gave us time to talk as we waited and shuffled forward place by place. \n\n\"How exactly am I weird?\" I asked. \n\nShe laughed. \"You're a straight guy crushing on a t-girl, for one thing. That's weird. And you're weirdly nice - nobody's that nice. Like the way you apparently spent so much time hanging out with my crazy old aunt and her cat. That's pretty weird.\" \n\n\"Mrs. P wasn't cra -\" I stopped myself. \"No, I guess maybe she was. This whole thing was her idea, you know.\" \n\nShe gave a puzzled frown in the sedate crowd-hum of the museum. \n\n\"What do you mean?\" \n\n\"I'm not supposed to tell you, but part of the reason she gave us the house together was that she thought I needed a girlfriend.\" \n\nThat tickled enough of a laugh out of her to make the other patrons turn in line and look at us. Lindsey gave a wave of apology, working to swallow her giggle-fit. \"Oh God,\" she said. \"That is so Neena. She really didn't understand how the whole transition thing works. I'm sure she thought I was all girl and you'd never know the difference.\" \n\n\"Maybe,\" I said, shrugging. \"Or maybe she thought I'd get to know you and it wouldn't make a difference.\" \n\n\"Uh-huh, sure. Let me tell you some stories about Neena.\" \n\nShe proceeded to narrate a series of anecdotes about her silly aunt's naive side. I listened and watched the way her expression lit up with happy fondness for the old lady. A few stories in, she seemed to have forgotten that her purpose was to show the unlikeliness of Mrs. P having an accurate bead on how the two of us would hit it off. She might have circled back eventually, but we made it into the exhibit hall before that could happen. \n\n\"Indecorous Object,\" read the banner above the archway into the gallery. We passed beneath it and found ourselves surrounded by the paintings of Diego Carvalos, to the vocal accompaniment of that peculiar art-museum muttering - the kind that manages to sound reverent and analytical and baffled all at once. \n\n\"Damn,\" Lindsey whispered to me, \"this guy's a fucking loon. Really good, though.\" \n\nAt a glance, I could see a dozen or so paintings in this bend of the gallery. Other patrons partially blocked my view of some, but Lindsey's assessment was spot on. Even from a distance, even with a column in the way here and a tall guy's cowboy hat in the way there, Carvalos showed an incredible versatility of media and styles - oils, watercolors, impressionism, expressionism, pontillism, photorealism, collage, glasswork ... \n\nAnd all of it toilets. \n\nThe first one had the look of the Dutch Masters - dark tones and bold shapes, colors in deep, earthy contrasts. It showed a fine ceramic chamber pot in the corner of some Enlightenment-era mansion bedroom - smooth-grained wainscoting behind bright, clean porcelain that created a sense of art in front of art within art. \n\nFlowing onward with the crowd, we passed a sun-drenched watercolor of a bathroom done in white tile with hints of daisy hues, centered on an impeccably clean domestic toilet. Then a chiaroscuro masterpiece appeared, devoted to some nineteenth-century train station stall full of splendid brass and dark wood paneling. Next a men's room Monet. Then a Lichtenstein loo. \n\nI spent as much time watching the mixture of perplexity, awe, and amusement on Lindsey's face as I did looking at the paintings. She just couldn't get over the guy's obsessive devotion to toilets as high art. \n\n\"I mean, these are not cheap knockoffs of a bunch of famous painters' styles,\" she said in a hushed tone. \"This guy really knows what the fuck he's doing. Look at that color blending! But what the hell is going on in his head when he's painting these things?\" \n\n\"Maybe he owns stock in a plumbing company?\" I joked, but found myself as impressed and confused as she was. Or almost as impressed. \"Some of these would have been better if he'd been painting one of your bathroom designs, though.\" \n\nShe rolled her eyes and we moved around a bend into the next section of the exhibit. The couple ahead of us pointed and murmured at the first painting there. \n\n\"Huh,\" I said as we came up to the piece and looked it square on. It had a certain Degas quality to it, ethereal and light, a blue tile bathroom decorated in a '40s or '50s style - but a tiny yellow circle on the rim of the bowl pulled my eye in as soon as I looked. \n\n\"That's a piss drip,\" I said, startled to realize that every inch of every bathroom in every painting before had been immaculately clean. \n\n\"Yeah,\" Lindsey agreed. \"Huh.\" \n\nAs we proceeded around the room past cubist and pop art and post-modern renderings of gas station bathrooms and rest-stop shit-cans, the toilets grew steadily dirtier, stained, hard-water streaked, even cracked. The phantasmagoria of art styles continued, and every painting popped with technique, but by the end of the room, you could almost smell the filth. The last one before the corner gave a harrowing view into an ill-kept rustic outhouse with corn cobs for wiping. \n\n\"Okay, gross,\" Lindsey said. \"I don't know if I want to see what's in the next room.\" \n\n\"Well, we've come this far.\" \n\nSo we rounded the bend and entered the home stretch. Here, the paintings hung farther apart, and depicted washrooms and sanitary facilities long past use. First, a spiderwebbed stall within an unlit building, presumably abandoned or condemned. Then the remnants of a mobile home bathroom seen through a hole ripped by a tornado. Then a single toilet standing half-destroyed amidst the rubble of a bombed-out building in a war zone. By the end of the hall, we found ourselves looking at a pile of shattered, crap-stained toilet parts in a junkyard, rendered in stark slashes of paint that gave everything a thick, clotted, decayed look. \n\n\"I'm starting to wonder if this was really the most romantic date idea I might have suggested.\" \n\n\"Hmmm.\" \n\nWe turned the final corner of the exhibit. At the end of about a twenty-foot hallway hung a single painting - striking blue sky over an uneven, dusty field where stands of green grass swayed to some unseen wind or breeze. As we got closer, a cracked rim of porcelain showed itself, peeking up through mounded dirt and rocks near the painting's center. Within its oval curvature, a single pale-petalled wildflower grew, the leaves and blossom raised patiently toward the cloudless vault of sky overhead.  \n\n\"Holy fuck,\" Lindsey said. It was exactly what I was thinking. \n\n* * * \n\nOn the way out of the exhibit hall, we both stayed quiet, except for me checking my watch and suggesting we head to the museum cafe. \n\n\"I reserved a table.\" \n\n\"Oh, good thinking.\" \n\nWe still had to wait a bit. Once Lindsey's ideas about Carvalos' work settled down, she started talking. \n\n\"I wasn't expecting that last flower painting at all,\" she said. \"It was so sad.\" \n\n\"Sad?\" \n\n\"Yeah, didn't you think so? I mean, the whole point of the exhibit came out there. People make things and use them, and for a while they take care of them, and then they let them go to hell. Everything rots and falls apart and turns to crap, and it's not until you get the people out of the way that something nice happens again.\" \n\nI opened my mouth, but she kept going, one hand closing on air as she looked off through the floor-to-ceiling cafe windows at the wide reflecting pool beyond. \n\n\"Or it's like our lives - we start fresh and clean and bright, and things seem nice even if our spot in life isn't the most glamorous. But then time goes by and the dirt and nastiness piles up. Things get uglier and uglier. We realize how shitty everything is, and we break down, and eventually we've got nothing left. We're done. And once we're gone, maybe, nature can come back in and make something out of our bones.\" \n\nI could buy those theories. And Lindsey's expression as she rolled them out - intense, disturbed, wounded, but also strong in her commitment to her own ideas and interpretations - put such awe and fascination in me that I could easily have nodded and agreed. \n\nExcept that Lindsey had come into my life now, and as believable and familiar as those cynical, nihilistic ideas were, I no longer wanted to think that way. \n\n\"Maybe it's simpler than that,\" I said, carefully. She looked at me and waited, and I tried my best to keep her eyes on mine, where maybe she could see what I was seeing. \"Maybe he's telling us there's this thing, and it's surprisingly pretty as long as people take care of it. Only they don't take care of it. They piss and shit in it. But eventually it gets past those people and finds the right place to fit in. And once it does, something really beautiful can grow inside it.\" \n\nFor a few beats after I finished, she kept her eyes on mine, blinking a little, breathing, and nothing else. Then she took a half-step closer, put her hand on my cheek, and leaned in to kiss me - a soft, brief touch of her lips to mine - and when she stepped away, her hand found mine and she took it. \n\nAlmost perfectly in time for the hostess to tell us they had our table ready. \n\n* * * \n\nDinner went very date-ishly. We compared favorites from the exhibit (we both liked the daisy-themed watercolor in the first room), talked about which paintings did the best job of capturing their respective styles (I voted for the Degas-esque pee-stain picture, Lindsey couldn't decide between a surrealist port-a-potty and a urinal schematic patterned after one of DaVinci's notebook sketches), and then stumbled across the fact that we'd both had the same professor for Art Appreciation at UT. I had some pan-seared scallops, Lindsey ordered vegetable lasagna and hated it. \n\n\"Why the hell did I order this?\" she asked, a couple of bites in. \"Lasagna is not supposed to be healthy.\" \n\n\"Do you want to trade? I think yours looks good.\" \n\n\"You're a liar,\" she laughed. \"I halfway think I ought to teach you a lesson by taking you up on it.\" \n\nI egged her on a little more until we ended up switching entrees. She definitely got the better deal out of it. But I enjoyed watching her eat scallops as the final light of dusk reflected off the pool outside the cafe windows. \n\nBack at the car, I was able to get ahead of her at the last minute and open her door, which she smiled at. Once I settled into the driver's seat, I looked at her and asked what she'd like to do next. \n\n\"Get a drink somewhere? Find a place to do a little dancing?\" \n\n\"No,\" she said. \"I want you to drive me home, and on the way there you can talk to me about what you said earlier - that if you got to know me, it might not make any difference what I have between my legs.\" \n\n\"Sure,\" I replied, starting the car and getting it into reverse. \"If I'm convincing enough, do I get to come in once we're at your place?\" \n\n\"You get to come in whether you're convincing or not. I'm pretty sure even if I don't buy a word of it, you're going to be so cute trying that I'll want to fuck the shit out of you.\" \n\nWith the car out of the space, I took a second to eye her for signs of sarcasm. \n\n\"What?\" she asked. \n\n\"I'm trying to see if you're serious.\" \n\n\"Ha,\" she said, smirking. \"You're looking in the wrong place.\" \n\nI followed her eyes downward and saw her slouch and roll her hips to momentarily break the flat lap of her skirt with a telltale bulge. \n\n\"Geez, Lindsey,\" I said, heading for the parking lot exit. \"Does art always get you this hot?\" \n\n\"It's the shellfish,\" she said wryly. Then she turned a little in her seat to watch me as I drove. \"It's not the shellfish. So come on, tell me why any straight guy ever would say me having a cock might not make a difference.\" \n\n\"Okay,\" I said. \"So obviously, I have to start by saying of course it makes a difference.\" \n\n\"Damn, I was hoping you wouldn't give up that easy.\" \n\n\"Ha, ha. Anyway, a lot of things make a difference. You're blond, and my dream girl's always been blond. That makes a difference. But I've dated lots of women who weren't blondes. The hair color thing didn't make enough of a difference to keep me from dating them.\" \n\nShe snorted in a congenial way. \"Blonde, brunette, vagina, penis. Really, it's hardly worth noticing which one a girl comes with.\" \n\n\"Hey, I'm going somewhere with this,\" I said, heading up the street toward a traffic light. \"We're not even out of the room where I've hung up all my pretty toilet paintings yet, much less to the one where I make my flower-toilet point.\" ",
        "\"All right, go ahead.\" \n\n\"So let's say I settle down with a brunette chick, and she's not the type to dye her hair. I might have to give up on the idea of ever having sex with a blonde again.\" \n\n\"Uh-huh.\" \n\n\"Or,\" I said, ignoring her skeptical tone, \"suppose I settle down with a woman who's black, and have to give up ever having sex with a white girl again. Or maybe I fall for someone fat, and for the rest of my life, I'm never having sex with a skinny girl again.\" \n\n\"Nick, there's kind of a difference between being not racist or not a shallow asshole, and being not straight.\" \n\n\"No argument about that,\" I said. \"But what if I meet someone really special, and she's in a wheelchair? Then I'd be looking at going the rest of my life knowing I'd never get to dance with my girl again.\" \n\nShe cleared her throat and patted her crotch. \"This isn't a handicap, buddy.\" \n\n\"That's exactly my point. If you were paraplegic, you might not get much out of sex at all. You might not even be able to feel below your waist. Hell, depending on how you got that way, there might not even be anything below your waist. If I met the right girl, and then she got in a car accident and severed her spine, I'd have to deal with a future where sex wasn't anything like what I spent my whole life expecting it to be. So considering the alternatives, and considering how many things about you are so amazingly perfect, I should count myself lucky that you've got anything down there that works at all. And frankly, not only do I know it works, but I'm getting pretty fucking obsessed with it. Enough to start wondering if I'm not nearly as straight as I always assumed.\" \n\n\"Hmm,\" she said, putting the end of one pinky between her teeth. \"That was actually pretty good. So ... new subject.\" \n\n\"Yeah? What is it?\" We'd reached the traffic signal at the highway, so I spared a glance over at her. \n\nShe batted her eyelashes enticingly. \"Tell me some of these things you think are so amazingly perfect about me.\" \n\n* * * \n\nAt Lindsey's, I followed her up the stairs to her apartment without saying anything. She stopped me on the doorstep and kissed me, holding me by the collar with both hands, her eyes filled with hope and uncertainty as she let go and pulled away to unlock the door. The need to reassure her made an ache in my chest; the desire to hold her put my heart into a breakneck gallop. I felt on edge between my own insecurities and wanting to banish hers. \n\nWas I really just here Saturday? I thought as I followed her into the apartment. The orange couch looked the same, the hardwood floors, the distant, unlit kitchen hinting of lemons and banana pudding, the red-brick wall with the fireplace. \n\n\"Come on,\" she said quietly, taking my hand and heading toward the stairs. \n\nWow. This is really happening. \n\nWhen we reached the top of the stairs, I found myself in a cute loft bedroom that overlooked the living room below. The walls and carpet and bed had been done in snow-pure white, with pastel accents in the form of green and pink pillows, a checkered throw rug to match, and several unframed canvases covered in abstract designs. \n\n\"Did you paint those?\" I asked, pointing to the paintings. \n\n\"Yeah. Help me get my boots off.\" She towed me over to the bed, where she sat and unzipped a black-leather calf-boot while I went to one knee and felt my palms start to itch. With her leg up to remove the boot, I could see straight into the shadowy depths of her charcoal skirt. But she had on black panties, and my brief glance didn't catch much detail through them. \n\nI took her foot by the heel as she offered it to me, sliding my other hand into the unzipped leather to cup and caress the back of her lower leg, easing my grip lower and lower and tugging at the boot-heel until I got the whole thing past her ankle and off. A soft pink ankle-sock clothed her foot. I took that off too, and she wiggled her toes and smiled. She had long toes, like her fingers, with the nails painted to match her rose blouse. \n\nI massaged the instep of her bare foot with one thumb before letting go. She grinned and put an index finger between her teeth as she offered me the other foot. \n\n\"God, I'm so horny,\" she breathed at the sound of the boot zipper descending. I ran both hands down her calf, peeling the leather free. \"Mmm ... take your shirt off.\" \n\nWith the second boot gone, I leaned back and unbuttoned my shirt. Lindsey reached around beneath her hair to fish for the clasp of that gold chain necklace, her raised arms lifting and accentuating her breasts within the raspberry silk of her top. Then she tossed the necklace aside and leaned forward to push my open shirt back from my shoulders, palming and then grasping the muscles there to pull me to her as I squirmed free of the sleeves. \n\nWe kissed, eyes closed, her on the edge of the bed, me on the carpet, hips between her spread knees with the hem of her skirt gliding across my now-bare stomach. Our hands searched and explored - hers with fingertips and nails drawing gentle paths around my shoulder blades, mine with palms and fingers settling into the soft hollows of her at the waist, the small of her back, the nape of her neck. I dipped into the waistline of her skirt, tugged her shirttails up and out, brought my hands around to work at her buttons. She murmured agreement without breaking our kiss. \n\nAs her shirt fell open, I returned one hand to the small of her back, skin-to-skin now, the glossy fabric of her blouse loosely brushing my knuckles, wrist, forearm. The other hand, my right, traced and then cupped her breast through the lacy curve of her bra. Flickering my eyes open, I saw that it was black and sheer and filled to perfection. I shifted my left hand up and my right hand around and felt for the catch of her bra in the back. \n\nLindsey's hands weren't idle either, running firmly down the sinews on each side of my spine, teasing into my waistband with a single finger, wandering up to lace through my hair - and then down to find my belt-buckle about the same time I unhooked her bra. We pulled back from our kiss and opened our eyes, and hers were so blue and knowing as she undid my buckle, pulled the whole belt free, let it swing out and drop to the floor behind me. I took advantage of the movement to get her blouse over one shoulder and down the arm, revealing a smooth, pale curve of flesh with only the loose black strap of her bra adorning it now. She obliged me by shucking out of the other sleeve and discarding her top entirely, then crossed her arms as I brought both bra straps down over her shoulders and past the elbows. When I leaned in to kiss her, she relaxed her arms and let the bra fall away. \n\nEven though my chest wanted to implode from the hunger to feel and lick and suckle those breasts, I put both hands to her cheeks and kissed her deeply first, hearing and feeling her give a moan of want at my touch. Gradually, while my tongue kept a tight dance with hers, I brought my hands down along her graceful neck, out and over her shoulders, then in along her pectorals to the soft swells they found there, bare and waiting. \n\n\"Ooh, Nick ...\" Breathing heavily, she put her forehead to mine and turned her eyes downward. Her hands found the button on my slacks, slipped it loose, slowly ran the zipper down. I cupped and lifted her breasts, weighing their perfect, silken gravity in my palms, circling one areola with the tip of my thumb, marveling at the lush and surprisingly natural shape and form of both her breasts and her nipples. \n\n\"These are fucking amazing, Lindsey,\" I said. The awe must have been clear in my voice, because she laughed. \n\n\"I responded really well to hormones,\" she said, \"So I didn't need much in the way of implants to get me well into a decent cup size. You like them, huh?\" \n\n\"Definitely.\" To show it, I lowered my head and kissed one nipple, ran my tongue around it, teased it with my teeth. Lindsey put a hand behind my head and used the other one to toy with the elastic of my underwear in the gap where she'd opened my pants. I took a break from kissing her nipple and said, \"Feel free to go there anytime now ...\" \n\nShe laughed again, a little throatily this time, and slid her hand forward and down, tickling her way through my pubic hair until three fingertips found the root of my cock and stroked it in small circles. I groaned around her nipple. Lifting up, I gave her another kiss as her hand dove deeper, circling itself around my engorged shaft. I pushed at the hem of her skirt, then clasped her derriere two-handed to encourage her nearer the edge of the bed. She moved about half as far as I would have liked, legs spreading wider to either side of my pelvis, gorgeous naked thighs revealing themselves as the skirt climbed higher and higher. \n\nHer lips left mine and went to my ear. \n\n\"I want you in my mouth.\" \n\nMy cock surged even harder within her grasp. \n\n\"I can get on board with that plan,\" I said, letting go of her to work my pants down. Freed from confinement, my dick sprang up into her welcoming hand, which squeezed and then opened, so that my erection lay revealed across her palm. \n\n\"Mm, that looks nice,\" she said. I became intensely aware of her bunched skirt forming a ledge beneath her hand as she held me - intensely aware that the swollen head of my cock now jutted just an inch or two above what that skirt concealed. \n\n\"So do I get to see what yours looks like too?\" \n\nShe looked up at me, a flash of something in her eyes, her lips momentarily compressing. \n\n\"Or not,\" I said, spreading my hands. \"We can get there whenever you're comfortable.\" \n\nLindsey sighed, smiled, shook her head slowly. Then she said, \"Come on, then.\" \n\nHer hands tugged at my waist as she rose up from the bed, skirt falling back into place. I stood with her, got my pants the rest of the way off and stepped out of them. If my heart had turned into a hummingbird, it might have been beating faster.  \n\n\"You're sure?\" Her eyes held mine very seriously as she undid the catch of her skirt. \n\n\"Uh-huh,\" I said, lowering my gaze to those long fingers of hers where they waited at her zipper. \"In fact, I wouldn't mind turning up a light or two.\" \n\nAt the moment, the only illumination in the place came from the hanging fixture in the entryway downstairs, shining up along the stairs and across the half wall that overlooked the living room. It was plenty to see by, but not enough to show off the gold of Lindsey's hair, the blue of her eyes, or the bright decor of her bedroom. \n\nBut she blushed at the suggestion and said, \"Can you let me be just a little shy this first time?\" \n\nI tipped forward and kissed her, then touched my nose to hers. \"You can be as shy as you want.\" \n\n\"Okay,\" she whispered. And she slid out of her skirt. \n\nThe world became hazy and hot, like I was experiencing it through a window fogged by steam. \n\n\"Wow.\" \n\nShe waited, arms at her sides. Then she turned her palms forward, questioningly. \"Wow? Good wow or bad wow?\" \n\n\"Good wow...\" \n\nI reached down to the black lace of her panties, strained outward by a bulge that part of my brain said shouldn't be there and part of my brain had been dying to see for weeks. Grazing that distended fabric with just my fingertips, I marveled at its rigid certainty, so at odds with the feminine curves of her breasts and belly - yet beautifully part of her at the same time. I pressed more firmly with my hand, making her gasp. \n\n\"Yeah, good wow for sure,\" I said. \"Even though I'm used to a woman's panties giving me a really different signal that she's ready.\" \n\n\"Feel lower,\" she whispered. \n\nRaising my eyebrows, I let my fingers slide southward on the tense beam in her lingerie, and then lower still, feeling the softer bulge of her cockhead - and then a slick, damp spot right at the tip. Lightly, I took hold with my thumb and middle finger, then rubbed the very end of my index finger in slow circles against the wetness of her precum. \n\n\"Ahh-hnn,\" she breathed. \n\n\"Can I take these the rest of the way down?\" I asked. \n\nHer grin wavered between mischief and bashfulness. \"I'm being shy, remember? How about if I take them off in a minute after I'm in the middle of something that will keep me from thinking too much about it?\" \n\nShe grabbed the still-waving flagpole of my erection and wet her lips with a swipe of tongue to make it clear what she meant. \n\nI said, \"Okay.\" \n\nTurning us sideways to the bed, Lindsey sank to her knees, folded her legs beneath her, and settled her ass on her heels where I could just see the black arc of panties past the crown of her head. Her hand milked my cock with slow strokes of paradise as she looked from it to me to it to me, lips parting and tongue peeking its pink tip alluringly forward. \n\n\"This is going to take longer than it did in the car,\" she said. \n\nI gasped at a squeeze from her hand and replied, \"I'm not so sure about that ...\" \n\n\"Hmm,\" she said with a wicked look. \"How little you know.\" \n\nThen she leaned forward and sucked me in. \n\n\"Oh my god.\" \n\nWith one hand around the base of my hard-on and the other clutching her breast, she held me in her plush, hot mouth and stared up at me with those eyes. Scattered light from the entryway fixture fell across half her face, creating a subtle play of shadows on the other side. \n\n\"Lindsey, you are so beautiful.\" \n\nShe slurped off of me and smiled, then gave a couple of lollipop licks to the underside of my glans before enveloping me again. \n\n\"Ahhh, fuck ...\" \n\nHer tongue swirled side to side, drenching my cock in pleasure while her lips suckled at a point about three-quarters of the way to my root. I put one hand against her cheek, and she tilted her head to meet it, closing her eyes and running a finger in a spiral from her nipple around and around her breast until it traced a path down her sternum, between her tits, and out of sight beyond her forward-tipped ribcage. Though her upper body blocked my view, I could tell when the hand reached her panties, because she made a long \"Mmmm\" around my shaft as she worked her tongue and lips, not yet moving her head or neck. \n\n\"Shit, that's so hot,\" I breathed. \n\nShe looked up at me and gyrated her hips, a motion that traveled up her spine and neck to bob her mouth just slightly around my dick. I could tell the hand within her panties had hold of its contents, both from the rolling of that shoulder and the tension between her eyebrows. \n\nTake it out, I thought, not saying it aloud because I didn't want to make her feel pressured. Instead, I just bit my lip and said it with my eyes. Take it out, Lindsey. \n\nAnd then she rose up a little, came forward along my cock, sucking all the way down to its foundation, burying her nose in my pubes. \n\n\"Oh, god ...\" \n\nAs I watched, her free hand went to her waist, easing her panties first down over one hip and then over the other, then down one thigh, then the other, until she could lift each knee in turn and flick the black lace away behind her. All through this, her face remained tight against my crotch, her lips around my root and my tip all the way down her throat. The undulation of her spine side-to-side carried through to her head, rotating the wet embrace of her mouth around me. And while her hair and shoulders blocked my view of her groin, I could see over them to her ass switching right to left with each step of her panties' descent. Full and smooth and pale and naked, it drove me almost as crazy as the anticipation of seeing what she had between her legs. \n\nThen, when she'd fully undressed herself, her sweet mouth and throat retreated from my shaft, sweeping slick pressure along it on all sides until her lips popped free and she looked up at me and licked them. Her hand returned to my root in their place. \n\n\"How do you want to see?\" she asked, still leaning forward so that her upturned face obscured my view. \n\nI bent and kissed her lips, then got down on the floor with her, face-to-face, mouth-to-mouth, my hands stroking her cheeks, her hair, her shoulders. She kept hold of my cock the whole time, milking and pumping. I could feel the low heat of orgasm hovering some distance off, coaxed forward by the blowjob and now kept from retreat by the action of her hand. \n\nWith my palms at the juncture of her collarbones and shoulders, I eased her back, leaning with her at first to hold the kiss, then pulling just far enough away to look her in the eyes and see her move her lower lip between her teeth. \n\nI raised my eyebrows to ask her permission. She nodded and let her lips part. \n\nAnd I looked down. \n\nMostly, I had expected my recent she-male porn habit to prepare me for this moment - though I also feared that it wouldn't, and that I'd be shocked or queasy or disgusted by the reality of a beautiful woman with a penis. \n\nBut neither one turned out to be the case. \n\nNestled in the valley between Lindsey's sleek and wholesome thighs, stiff and swollen with her arousal, rested something I hadn't seen before at all. Not a cock ... her cock. \n\n\"Jesus, Linds.\" \n\nA nervous titter escaped her, and her free hand went up to cover her mouth. \"Is that good?\" \n\nMy hands left her shoulders almost without conscious thought on my part, trailing down her breasts, her ribs, her gentle belly. They turned as they went, so that my knuckles caressed the crests of her pelvis and came to rest at the tops of her thighs, both palms up and parallel to the rod that now lay between them and gave a small surge at their nearness. \n\nShe kept it completely hairless down there, which gave her a fresh and pink and clean appearance that struck me as feminine in spite of her virile rigidity. Turning my right hand over, I ran the index finger from her pubic arch down the length of her almost to the head. She stiffened at my touch - both her erection, which lifted free of her thighs, and her body, which shivered a bit before she returned to milking my rod. Before her hard-on could relax back into place, I slipped two fingers beneath it and ran them up the underside all the way to the base, lifting and angling her as I went, only to find that she still had her balls trapped between her legs, out of sight. It seemed modest and girlish and made me burn even hotter. I circled my whole hand around her then, and just let myself absorb how she felt - familiar, and normal, because she was about my size in length and girth - but strange and exotic at the same time, because I had never taken hold of myself from an angle like this, and because the movement and touch of my fingers gave no corresponding sensation to my shaft, which instead responded to the tugging, massaging grip she maintained on me. \n\n\"That feels good,\" she said. \"So ... it's okay?\" \n\n\"It's way better than okay,\" I said, caressing and staring at the sculpted object in my palm. \"I'm in awe. I don't even know what to do with it first.\" \n\n\"Well,\" she asked, \"can I pick, then?\" \n\nI looked up into her eyes. A tiny male neurosis urged me to be worried about what she might suggest, and I actually felt my asshole tighten reflexively, which pissed me off. Fuck you, asshole, I thought at it. If she wants in you, you're just going to have to suck it up and let it happen. And I got a giddy kick out of telling my own anus off - because I knew I wanted to trust and please her much more than I feared anything that might happen. \n\n\"Sure,\" I told her. \"What do you want me to do?\" \n\n\"I want you to stroke me off until I come,\" she said, which momentarily struck me as tamer than I'd been hoping for - until she went on. \"But I want you to bury your cock in my ass while you do it.\" \n\nShe gave me a little squeeze for emphasis, so I squeezed her in return, felt the erectile rush of her response, and suddenly burned to know what her cock would feel like going off in my hand. ",
        "\"How do you want to get started?\" \n\nHer smile flashed, and she released me, then pushed up from the floor to stand. I followed, letting go of her too, reluctant about that but thinking she'd signaled for a moment of separation. \n\n\"I'm going to make a quick trip to the bathroom,\" she said, nodding over her shoulder toward an open door deeper in the room. \"There's lube in the nightstand drawer, and condoms. And if you really want more light, you can turn on that lamp there.\" \n\nI nodded but didn't move, watching her instead as she started for the bathroom door, her aroused prong waving with the motion, then disappearing as that lovely moon-white ass presented itself and swayed away atop her luscious legs with each distancing step. At the door, though, she turned and looked at me, gnawing her lip in thought. \n\n\"If you want to ...\" She breathed out and then in again. \"If you want to, we can skip the condom. I always made Max use one, and I got myself tested a couple weeks ago, so I'm safe if you trust me. Either way is fine.\" \n\nThen she disappeared into the bathroom and I went to the nightstand to open its drawer with a hand that wasn't entirely steady. Besides lube and a package of condoms, the drawer held a box of tissues and several sex toys, everything tidily arranged. I let my fingertips brush across a couple of dongs of different colors and sizes and features before taking out the big, half-full bottle of lubricant. Setting it onto the nightstand top, I eyed the condoms and then slid the door closed. It wasn't just that I trusted her - it was that the offer said she trusted me. And apparently, more than she had trusted her previous boyfriend. \n\nThe bedside lamp had a dimmer switch on it, so I set it on low and turned to look at the bed. It had a fluffy white duvet with a big mound of airy pink and green decorative pillows at the headboard. I decided to take charge of something and tossed all the colored pillows to the floor. Then I fluffed the two sleeping pillows, laid them flat, pulled back the duvet and climbed in under the sheets. \n\nWhen she opened the bathroom door, I lay on my side, propped on one elbow to face her. She smiled and bounced over with a sexy and girlish glee. \n\n\"All cleaned up,\" she said, sliding beneath the covers with me. \"But why did you turn on the light if we're just going to hide everything under the sheets?\" \n\nI took her in my arms and pulled her close, getting an unexpected but not unpleasant dick bump against my hip in the process. \"Because I love cuddling under sheets,\" I explained. \"It beats out almost every other kind of foreplay, in my book. We can throw them back when things get going and there's more to see. \n\nWith a smile, she poked my nose and kissed me. \"You're cute.\" \n\n\"And you're gorgeous,\" I said, \"And your eyes are the most amazing color, which is another reason I need the light on.\" \n\nThen I sealed my mouth to hers and kept my eyes fixed on her blue ones until she closed them and lost herself in kissing me. Shifting my weight and pressing against her, I encouraged her onto her back and positioned my legs between hers. Gravity and chance left her cock trapped between our stomachs, a warm, cozy cylinder running up alongside my bellybutton. My dick nestled into her crotch and came to rest where I could feel the delicate skin of her scrotum against my shaft. \n\n\"This is so incredibly hot,\" I said, breaking the kiss. \n\nLindsey looked into my eyes as if searching for something there. \"You're not wigging out? Even a little?\" \n\nI shook my head. \"Maybe I'm just riding a wave of hormones and lust, but everything is great so far.\" \n\nShe grinned with narrowed eyes. \n\n\"Then why don't you ride that wave into my ass, Nicholas?\" \n\nFor a moment, all I could do was swallow, hard, then I flung back the sheets and stretched an arm over to grab the lube from her nightstand. She brought her knees up and open, watching as I knelt between them, uncapped the bottle, ran a glistening bead along the top of my shaft and worked it all the way around with my free hand. \n\n\"Has anybody told you you have a fabulous-looking cock?\" she asked. I glanced at it, sturdy and straight out and gleaming. \n\n\"No,\" I admitted. Running my still-wet hand along her pinkish pole's belly, I felt it rise at the attention and asked, \"Has anyone told you?\" \n\n\"Ooh,\" she said, fluttering her eyelids. \"A couple of times, but I don't mind hearing it again.\" \n\n\"Lindsey Moss, you have a fabulous-looking cock.\" \n\n\"Thank you!\" She raised an eyebrow and added, \"Now why don't you pour about twice as much lube on and try hiding yours somewhere nice?\" \n\n\"Done and done,\" I said, tipping the bottle to gush it across myself and then drizzle some down into the crevice below her balls. I ran one finger up her ass-crack and circled it around her tight and fleshy iris, making sure the lube all got to the right place. After getting her as damp and slick as the lube's viscosity allowed, I lined my fingertip up and pressed it inward. \n\n\"Uh-huh,\" she said in an encouraging tone. \n\nI pressed harder, and she glided open to receive my finger to the first knuckle. \n\n\"Yesss ... more ...\" \n\nGently but steadily, I drove it all the way in, feeling the ring of muscle grab at me. As I bottomed out with the whole finger inside her, she groaned and murmured. \n\n\"Ah! Ngh -\" \n\n\"Is that okay?\" \n\n\"Mm-hmm. Okay and then some.\" \n\nI finger-fucked her for a few strokes, then prepared to add a second finger in - but she shook her head. \n\n\"I'm ready for you, Nick. Come down here and kiss me and let me feel you slide yourself inside me.\" \n\nAnd she lifted her feet free of the mattress, knees up by her breasts, beckoning me to her with the fingers of both hands. Leaning forward, I put one arm down to support my weight, kissing her once, twice, three times with eager lips and guiding myself into position with my lube-slick hand. \n\nWhen my crown brushed her ready, hungry exit, she gasped and nodded. The need and happiness in her eyes all but made my chest hurt. I pushed forward with my hips, felt the valley of her ass-cheeks clench and try to enfold me. After a patient moment, I pushed again. The guardian muscles of her inner reaches bowed concave at the pressure of my insistent tool. Then her eyes flared and she relaxed and let me pop through. \n\n\"Guh! Oh, mmm, fuck, Nick!\" \n\nI waited to be sure I wasn't hurting her, and when her eyes rolled and made her tight expression look like bliss, I eased my way in deeper. The fierce grip of her sphincter rose in a ring along my glossed shaft, sweet and clinging and resistant and welcoming all at once. The further my cockhead explored into her soft, constraining hollows, the louder she gasped. \n\n\"Ohhh ... ah! Ah, Nick ...\" \n\nAt last, I pressed my root to her rim, wholly and mind-blowingly inside this beautiful woman. \n\nHer voice gave a series of wordless, breathy quivers, her eyes closed, and she said, \"Yes, fuck me. Fuck me, Nick.\" \n\nI put my lips to hers and gently rocked out and back in, no more than a half-inch of motion. Her tightness made me tremble. I took another stroke, a little longer. \n\n\"Mmm! Mm-hlmm,\" she hummed around my tongue. \n\nMy single thrusts continued through another few repeats, each one less tentative, more powerful, more erotically pleasurable. \n\n\"God, Lindsey, you feel so good.\" \n\n\"Uhhh, yes, stuff it deep in there, fill me up - oh!\" \n\nI fell into a rhythm, and my hand searched between us and caught hold of Lindsey's dick to work it. \n\n\"Oh, yes - mmn, Nick!\" She'd drooped and softened while letting me in, but at the touch and pump of my hand, she quickly thickened back to full erectness. \"Yes ... oh ... yes ...\" \n\nHearing a woman orgasm has always given me an ego rush. But I had no idea feeling a cock swell and stiffen in my grasp would have the same effect. Dude, said the stupid corner of my mind, this is pretty fucking gay. \n\nWell then I guess I'm gay, I told the voice, because it's awesome. \n\nStupid me had no comeback to that - and how could he, anyway? Sure, I was balls-deep in someone else's asshole, trying my best to milk the cum out of a penis that wasn't my own ... but everything about the way Lindsey moved and sounded beneath me told me she was a woman: the touch of her breasts against my chest, the pitch and melody of her moans, the sensuous lightness of her heels where she'd hooked them behind my thighs, the kindness in her lips and tongue as they played joyfully with mine. \n\n\"Fuck, Lindsey,\" I gasped, easing back on my thrusts and trying to put the perfect pressure and swirl into the slick strokes I gave her with my hand. \n\n\"Don't stop - it feels so good ...\" \n\n\"I know, I just don't want to come before I get you there ... uhh ...\" \n\nShe worked her hips to urge me back into action. \"Keep going - ooh, nf - so close ..\" \n\n\"Already?\" \n\nShe gasp-laughed, \"Yeauhhh, ooh ... you've been ... uhh ... plowing my prostate ... this whole time ... shit, come on - hump me!\" \n\nI gave myself over to her and went all-in - hand jacking frantically along her swollen length as my cock plunged in and out of her lush, angelic hole. Every facet of her merged into me, sexually. The taste of her mouth. The heat of her breath on my face. The tiny roughness of taste-buds on her tongue as it tangled with mine. Her hands in my hair. The slippery sheen of perspiration that exertion drew out of her. \n\nForward and back and forward and back, I pumped, laying into her dreamy rectal squeeze over and over again. In my fist, she was a wand of ecstatic vitality, firm and magical, a handhold on the reality of passion's true might - of human connection so wonderful and intimate it could brush aside a lifetime of assumptions and expectations, to replace them with an overwhelming desire to create in someone else a moment of joy and pleasure. \n\nAnd then she cried out, \"Ah - ah - ah, shit -\" \n\nWith all five fingers and my palm, I felt her swell and stiffen and then explode in my grasp. \n\n'AH! FUCK! NICK!\" \n\nHeat splashed wetly against my chest. Lindsey groaned again, her head thrown back into the pillow. The second pulse of her shaft in my hand sent a glossy white streamer all the way up to her neck. \n\n\"Holy crap, Lindsey ...\" \n\nThe miraculous thing I held jolted again, blasting viscous delight onto my ribs. \n\nI could feel the throbbing around my cock, too, and it hurled me over the edge just as her largest expulsions subsided. I thickened gigantically in the heavenly tube of her bowels, milked and mashed by her quivering anal ring. With a groan, I lunged as hard up against her bottom as I could, the machinery of my balls and prostate ramping up heat and pressure into a saturating wave of ecstasy that rose and blew forth from me in shuddering spouts. \n\nI said something - probably her name, probably really loudly - but I couldn't hear over the roar of orgasm through my head. \n\nFluid and fiery and relentless, climax disgorged itself from me into her receptive purity, smooth and deep and pulling the lifemilk of desire into itself with a sure, sleek hold on my soul. \n\nEventually, I collapsed, panting and kissing her - her mouth, her throat, her earlobes, her shoulders. In gradual stages, reality came back to me. I understood the leaf-light touch of her hands caressing my back, then the sound of her breathing, the warmth of her shape against mine. After a lot more kissing and holding and fondling, I finally regained awareness of the bed underneath us and the cool air of her apartment drying the sweat from our bodies. \n\n\"So,\" she said, looking and sounding spent but happy, \"that was good, wasn't it?\" \n\n\"Yeah,\" I agreed. \"We really fucked up the plan of making this date an awkward mess.\" \n\nShe laughed and kissed me, then kissed me some more."
    ],
    "authorname": "IanSaulWhitcomb",
    "tags": [
        "art museum",
        "anal sex",
        "blowjob",
        "transsexual",
        "toilet paintings",
        "hot taxi ride"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/big-flipping-deal-ch-06"
}