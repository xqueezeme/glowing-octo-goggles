{
    "title": "Filling the Circle",
    "pages": [
        "I had the idea for this story a couple years ago, but for some reason it never got written after I sketched an outline. Go figure. Astute readers will remember Nicole Cross as a bit player in a few of my other stories; to jog your memory, she's got a sister named Natalie. This tale takes place long after she and all the other seniors in the story have turned eighteen.\n\nI'm entering this in the 2021 Halloween Contest, so make sure you read all the great entries and then vote for your favorite.\n\n* * *\n\nAgain, it was happening: the empty seat in the back of the classroom was mocking me. \"Where's Nelson?\" I demanded. In my mind, I was struggling to recall whether Nelson had even asked for the bathroom pass. It bothered me that I couldn't remember, but then I'd been right in the middle of one of my favorite lectures: Beowulf.\n\nLeila, from the desk in front of Pete Nelson's empty seat, stirred and glanced up from her phone. \"Nelson?\" She twisted in the seat, her big eyes squinting back. She paused. \"Like, he's not there, Mr Deemer.\"\n\nYeah, no shit. That's what I wanted to say. \"Thank you, Leila\" I said instead, my voice Sahara-dry. Leila just grinned smugly, and it occurred to me yet again that Honors-level English was probably too much for her. Although, if her brains were even half the size of her tits, she'd have been having no trouble at all.\n\n\"You let him go to the bathroom, Mr Deemer,\" Aaron added helpfully from his spot near the pencil sharpener. Good kid, Aaron. Dependable.\n\n\"I remember,\" I lied, \"but that was like ten minutes ago. What, did he fall in?\" There came the usual ripple of laughter, dutiful from most of the kids, genuine from a few, and I sighed. \"Whatever. Anyway. Let's get back to Grendel's mom, huh? How does she relate to our discussion of the uses of irony?\" I smiled to myself. I tried to work that phrase into every unit at least once, just because, well, irony. Very few kids ever placed the quote, though, few enough that I used their knowing grins as one of the factors that played into who I recommended for the AP class the following year.\n\nI was wrapping up, the kids already packing their laptops away and willing the hands of the clock around faster, before my AWOL student chose to darken my door again. \"Nelson!\" I barked. Shit, I'd forgotten him again. \"Where've you been dude? You missed the whole class!\"\n\nHe was moving with easy confidence, almost strutting, his arms and legs completely relaxed. Like a marionette on meth. When I stared at him, he just arched an insolent eyebrow. \"What?\"\n\nI made a big show of peering at the clock by the room's PA. \"What? You've been gone the whole period, that's what.\" I thought of pointing out that his grade was already subterranean, and that he probably couldn't afford the missed time, but there were already students milling around getting ready to leave and I bit it back. \"Where were you, Nelson?\" He just smiled, his stupid little pig-eyes sparkling oddly, and stretched his hand toward me with another little slip of purple paper in it. \"Again?\" I thought I caught a sharp smell, just on the edge of my nose, something I'd never caught before.\n\n\"Guidance pass.\" He jerked his head, tossing his hair insolently out of his eyes. \"I had a thing with Ms Anthony.\"\n\n\"A thing.\"\n\n\"Yeah.\" His smile flattened out into a conceited line, sickly-smug. \"A thing.\"\n\nThe slip was a deep purple, almost a black, and I'd been getting them with alarming frequency for the past month or so; Alex Anthony had been a late hire for the Guidance Department, moving smoothly into Kathy Lorean's old office once the disagreeable old bat had finally left the building (on a stretcher, with a badly broken hip; too bad, but at least she was gone). I'd only barely ever seen Alex, once, by chance at the Oktoberfest in town last weekend, and now here I was getting these annoying passes with her name on them in silver pen. \"A thing.\" I fingered the pass, eyeing Nelson with what I hoped was icy coolness.\n\nThe bell rang.\n\n\"Later, Mr Deemer,\" he shrugged, that goofy grin surfacing once more, and as I watched the kids sluice out into the hall, I decided it might be time to send a friendly email to Ms Anthony down in Guidance.\n\n* * *\n\nHer reply came back off the official server, my politely cautious inquiry pasted neatly into the top of her email.\n\nMy dear Mr Deemer,\n\nThank you for your question about Peter Nelson's visit to my office during Second Period today. He was in deep need of my assistance, but even so, I regret taking so much of his valuable time. Think of a way I can make it up to you.\n\nAs always, if you need anything, please do not hesitate to come to me.\n\n-AA\n\nI was struck, aside from Alex Anthony's slightly stilted wording, by the density of the woman's email sig beneath the initials. It was some arcane graphic, thick with pixels, a long electronic strip of purple art-nouveau curves spanning the entire screen, an underline that I could not ignore even if I'd tried. I blinked, the shapes seeming to twist and whirl as they marched across the screen, intricate and mischievous. Beneath was a line of little electronic flowers beneath her name, Alexandra Anthony, M.Ed, and last but not least came some sort of motto in a language that looked like... Greek? Russian? Weirdo letters, anyway, and I was at a loss; I teach English, which is hard enough even with a normal fucking alphabet.\n\nOnce again I pondered her message, but always my eyes kept dropping to those swimming violet whorls at the base of the message, confusing and fascinating and somehow exhausting as I blinked at it.\n\nI creaked back in my office chair, tired all of a sudden, wondering about the new guidance counselor. Emails back from Guidance were usually... well, let's call them \"curt.\" Some of them were downright insulting, and I'd expected more of the same from the new hire:\n\nYeah, I needed to talk to Peter. It took awhile. Catch ya.\n\nThat was more like what I'd gotten from my old adversary Kathy Lorean, or from Cheryl or Matt. Guidance usually kept things short and sour, like they were doing you a favor by replying.\n\nBut not Alex Anthony, apparently.\n\nI rubbed my eyes, looking once more at the thickly scrolled sig line under her tidy email, then shook my head and realized it was time to get ready for my next class.\n\n* * *\n\nNext day it was Julius Taylor, towering over me in his football jacket just after the first bell rang. \"I need to go to the bathroom, Mr Deemer,\" he said with that quiet confidence he had. His big brother Lashawn had been the same way, always a hulking but dignified presence in the back of the room. The Taylors would never be academic superstars, but they were workers. And they could run, too; they were very popular during track season.\n\n\"Sure thing, Jules.\" I glanced up at him, preoccupied as always by my difficulty with getting the goddamn smartboard all booted up. \"Nice haircut.\"\n\n\"Thanks.\" He'd been in a jheri curl until yesterday. Now, his head was egg-bald. \"I'll be back.\" He disappeared, walking tall with his shoulders squared, and he did come back... with two minutes to spare before the dismissal bell rang, moving a lot more fluidly now. And, I was shocked to see, with a smile on his face.\n\n\"Good lord, Julius!\" I shook my head. \"Dude. You missed a quiz.\"<br ><br >His eyes found mine slowly, wavering back from someplace far away, glittering darkly. \"Huh?\"\n\n\"A quiz,\" I enunciated. There was a smell coming off his clothes, sort of like a spicy flower. \"A quiz on Beowulf. You'll need to make it up. You, uh, weren't in the bathroom this whole time, right?\"\n\n\"What?\" He shook his head dreamily. \"Naw, man. I was down in Guidance.\" I wasn't terribly surprised when he held out a dark purple slip with silver script on it. \"Ms A, you know,\" he muttered, and as he said the name his thick lips curled into a wider grin.\n\n\"Oh, I know,\" I sighed. \"I know. You can take the quiz after school. Don't forget, dude.\"<br ><br >\"I won't.\"\n\nAfter lunch, during period four College Prep, it was TJ Rowe. That one barely even bothered coming into class, arriving an incredible fifty minutes tardy. He sauntered in, backpack slung over one shoulder, his Ken-doll mouth smirking. \"I marked you absent for the period, TJ,\" I frowned. \"You'd better go get a pass.\"\n\n\"I've got one, Mr Deemer.\" He had that kind of whiny voice you hear a lot in '80s movies, the kinds with an exaggerated nerd character, but that voice hardly matched his big lacrosse-goalie body. He was moving now with a strange lassitude, and I wasn't surprised at all when I scented a sort of flowery spiciness.\n\n\"Let me guess.\" I arched an eyebrow. \"Ms Anthony. Guidance.\"\n\nHis smirk twitched up on the right just a little too smugly. \"How'd you know, Mr Deemer?\" He held up a purple hall pass, rolled like a cigarette and held like one between two impertinent fingers.\n\nMy own smile was a lot thinner than his. \"Lucky guess. Bell rings in ten minutes. Worksheet's on your desk, TJ.\" I had last period off that day, and I figured it was probably time to pay Ms Anthony a visit.\n\n* * *\n\nShe'd been clear across the parking lot at the Oktoberfest, separated from me by like five haybales and a long picnic table full of craft brews at nine dollars a bottle, so I'd not gotten a good look at her. \"That's Alex,\" my buddy Jake had pointed out helpfully. \"She's the new guidance bitch, coming in for that old hag Lorean.\"\n\n\"Yeah?\" Jake's wife Katie was rolling her eyes at his language. She spent a lot of time doing that. \"Where?\"\n\n\"Over there. With the boobs,\" and that had been all of it: I'd gotten a quick glimpse of above-average cleavage as the dark-haired woman across the parking lot turned away, but by then my attention was lost to Katie smacking Jake and the two of us laughing loudly. Katie didn't like it when Jake talked about other womens' tits.\n\nMy ex-wife had been the same way.\n\nGuidance was a warren of little caves opening off a central office with a conference table, the four counselors each wedged into their own little space where they could shut the door during parent meetings. Right now, they had a fake jack-o'-lantern on the conference table and a stale bowl of last year's candy corn beside it. I made a habit of being down there as seldom as possible, which was why the secretary eyed me suspiciously as I strolled in. \"Oh.\" She squinted over her glasses. \"Hi, Sean.\"\n\n\"Lisa.\" A student slunk furtively past, seeking Matt in the second closet from the left. \"Um. I'm wondering whether Ms Anthony is available?\"\n\nThe secretary's reaction puzzled me. Her face took on an instant, spastic mask of such loathing that I flinched. \"Oh, sure. I bet she'll be ecstatic to see you,\" Lisa spat, but when I looked closer I thought I saw something else in her eyes, rolling right along with her hatred.\n\nI saw fear.\n\n\"Head on in there.\" Lisa jerked her head toward the closed door that still had K. LOREAN stenciled on the outside of it. \"She's not busy with anyone. Her Highness likes privacy, though.\"\n\n\"Uh, thanks?\" I felt her eyes on me as I walked off, and not because I had an ass worth looking at; no, this was about that spiteful spasm I'd just seen on her face, and I knew she was mentally classing me as some lesser creature, just because I'd asked to see the new counselor.\n\nWomen get jealous like that sometimes, when they work together. That's what I told myself, anyway.\n\nI knocked at the door with knuckles that trembled unaccountably, something weird nagging at the corner of my brain. A smell, maybe? Faint, but there? The voice that came from behind the door was a sweet lilt. \"It's open, Sean.\" I frowned, looking suspiciously for a peephole in the door and finding none.\n\nNot that it would have told her who I was, I reflected as I pushed the door open: the woman was sitting at her desk a good five feet back. \"How'd you know it was me?\" I managed as I stepped in, the faint tickling smell becoming a strong pulse. I was smelling Julius Taylor and TJ Rowe, that strangely fetching scent, all cinnamon and roses.\n\n\"Who else would it be?\" Alex Anthony sat on her office chair, not in it. Most people slouch at work. They look up at visitors with a tired look in their eye and a stained coffee mug at their elbow. Not this one. \"You may shut the door behind you, Sean. It's never fun being disturbed.\" She'd turned off the fluorescent above her, preferring a standing lamp in the corner that left the whole room in shadows.<br ><br >Suspiciously, I eased her door shut with my foot, trying not to be too obvious as I studied her. Alex perched with a duchess' posture, straight-backed like she was waiting for some cavalry officer to come ask her to dance. She was wearing a long black dress in something heavy, like velvet or thick silk, but it was so black it was hard to tell in the low light without staring.\n\nAnd I certainly wasn't going to do that: the dress was low-cut, though not scandalously so, but in line with Jake's commentary at Oktoberfest it didn't need to be. The way she was sitting pushed an impressive chest into the world, the smoothly swelling flesh at the top of two perfect tits swooping down from a long, graceful neck. On top of it all waited a heart-shaped face, serenely tipped to the left, her gaze direct and attentive from a big pair of bold, near-black eyes. Dark auburn hair lay coiled thick over her porcelain forehead.\n\nShe was breathtaking.\n\n\"I'm glad you're here, Sean,\" she said, her voice a low nibble at the edge of some deep part of my brain I was more comfortable ignoring. She folded her hands on the desk before her, and for a moment I had the strong impression it wasn't the cheap, angular institutional desk the school had put in; for an instant, just a fleeting moment, it seemed she was sitting with relaxed grace behind one of those mahogany monstrosities you'd see in Victorian drawing rooms.\n\nI blinked.\n\n\"Nice to meet you,\" I said after taking a deep, flowery breath. I made myself smile and extend my hand. \"What with Lorean leaving so fast and you getting hired, I don't think I've had the pleasure.\"\n\n\"No, you haven't. Yet.\" Her smile was a mystery, a darkly perfect lift of her full lips, gone almost immediately. It was the kind of smile that went straight down to my gonads. \"I'm Alex. And you're Sean.\"\n\n\"Yep.\" I was having a hard time putting my eyes anyplace. I'm a guy, and her cleavage challenged me; this was a school, dammit. It's not like I could go around making a habit of staring at tits. The obvious choice was her eyes, but I was finding to my shock that those were having the same effect on my dick that her boobs were. I'd never seen eyes like those. I forced my butt into the chair she had on my side of the desk, trying to make headway. \"So, I don't want to take up too much of your time, Alex.\"\n\n\"My time is yours, Sean.\" It came out as a purr, the smile creeping back along that mouth of hers, that mouth I could suddenly see puckering, opening, swallowing the tip of my cock...\n\nI shook my head. It wouldn't do to go thinking like that. \"It's just that I've had a lot of my kids miss a lot of class time lately, and...\"\n\nHer hand swept up off the desk, one finger stretching up. The nail was long and purple. I had a sudden image of it, trailing along my chest hair, and I swallowed. I could feel my forehead prickling with sweat, her eyes serene on mine. \"Let me stop you there for a moment, Sean,\" she began pleasantly, and my mouth snapped shut like a ring box. \"Did you think of a way I could make it up to you?\"\n\n\"A way that what now?\" I had no clue what I was saying. I felt like a fucking idiot. This was not normal for me; I prided myself on being quick-witted with my words. Alex nodded, her neck exquisitely controlled, her eyes alive.\n\n\"My email, Sean. The response I gave to you after I kept young Peter Nelson.\" She smiled again, the mysterious one. \"Do you not remember it? Most people find it hard to forget my emails,\" she went gravely on, and suddenly there it was, twining through my brain: those thick violet whorls from the bottom of her email. I felt like I could almost see them on the desk before me. \"In that email, I advised you to think of a way I could make his absence up to you.\"\n\n\"You did,\" I nodded thickly, like my head was in jello. \"It's just that I wasn't sure what that meant. It's his absence; he's the one who needs to make it up to me.\" I understood suddenly that my gaze had dropped, inevitably, to those smooth tits of hers, but I didn't realize that until I was already trying to drag them back up to her eyes. Fuck! \"I hadn't thought of you making anything up to me, to be honest.\"\n\nShe paused until I found her eyes again, then let the silence build there in the spicy air of that odd, gloomy little cave of hers before she gave a dry little chuckle. \"But you're certainly thinking of it now. My words make it so.\"\n\nI strained to clear my throat, some part of my brain screaming at me: I had to get out of there, fast, because suddenly my penis was giving every indication that it was about to spike out into a monster hard-on, for in that moment I made up my mind: her eyes. Definitely, incredibly, her eyes were sexier than her breasts. Already, like a guilty college sophomore at a sorority function, I was wondering frantically whether I'd be able to tuck my erection up under my waistband long enough to elude not just Alex's piercing gaze, but also Lisa's judgey one.\n\nI was doomed.\n\n\"Well.\" I willed myself to relax, but I might just as well have tried to stop plate tectonics. My whole body felt hot, tight, crimped. I had to get out of there. \"I mean, I just wanted to check in and, you know, make sure we were on the same page as far as like passes and stuff.\"\n\nShe nodded regally. \"You're the teacher, Sean. I am but a humble guidance counselor. It's your page. I just turn it.\" I felt my jaw go slack as she winked and nodded smoothly toward the door. \"Please, don't let me keep you. Even though I've enjoyed our visit.\"\n\n\"Um.\" If I could just get up and spin around quickly, I told myself crazily, if I could do it fast enough, I could say goodbye with my back turned, over the shoulder style, and she might not see the tent raging in my slacks. It had been decades since I'd felt so out of control. \"Yes, Alex. Thanks.\"\n\n\"I'm at your service, Sean. Always.\" She smiled, that indulgent and saucy curve of her lips, a plucked eyebrow arching as I made my move. I lunged awkwardly around, pivoting straight out of the chair and up, my hand finding the doorknob as my brain struggled to resurrect my dead mojo. \"Oh. And, Sean?\"\n\nI twisted, taking care to keep my guilty dick pointed against the door. \"Hmm?\"\n\n\"Keep thinking, Sean. About what I can do for you.\" Her smile pursued me out of her office as I threw out a weak smile, barreling back out into the conference area and past the secretary's disapproving gaze with the odd feeling that something was laughing at me.\n\nIt didn't occur to me until I got back to my room that I'd solved nothing at all with my trip down there.\n\n* * *\n\nMy problem, as should never have surprised me after my less-than-forceful treatment of Ms Alex Anthony, did not go away the following week. On the contrary: now the issue had spread beyond the quiet Julius and the cocky Nelson. Even boys like Brayden Hobbs and Mike Choi had started taking lengthy bathroom breaks, the rest of the classes as oblivious as the vacant looks in the boys' eyes when they came back, each with a purple slip in his hand. \"Dude.\" Brayden was getting straight As. \"What could Guidance possibly have to talk to you about? For an hour?\"\n\nHe'd just glanced at me, lax-limbed and dreamy, his eyes taking their sweet time focusing. \"What can I say, Mr Deemer?\" He'd sighed happily, that faint scent of flowery spice washing toward me. \"Ms Anthony is, like, super-dedicated to my success. Y'know?\" I thought about that, and it must have led to a scowl because Brayden laughed. \"Relax, Mr D. She's just really... uh, really helpful. That's all.\"",
        "It occurred to me that I should go back down there and have another chat with her, but then I remembered that the first time down there hadn't really been a \"chat\" at all. She'd intimidated me thoroughly. When I thought about my visit now, I saw it like one of those movies where the orphan kids get owned by nuns or schoolmistresses or something. Only, in this case, the nun was a smokeshow.\n\nI was muttering to myself at the tail-end of lunch period, my coffee mug balanced carefully in my left hand as I marched back toward my room. The halls were deserted, so I could hear the low burble of a conversation coming from the boys' bathroom by the teachers' lounge. I paused and listened; you can hear a lot of good stuff, eavesdropping on bathroom conversations.\n\nThen, you can boot the fucking door in and scream at the kids to get back to class. So, catharsis. Every teacher needs to blow off steam every now and then, you know?\n\nI slunk just outside the door, sipping at my coffee. There were three boys in there, by the sound of it. \"Dude,\" one of them giggled. \"Quit hogging that shit. Pass it here.\" I felt my jaw tighten: vaping. Little fuckers.\n\n\"You can kill it, bro. I'm heading out in a sec.\" This second voice sounded confident, self-assured. TJ Rowe! \"It's my turn in Ms Anthony's little Circle.\"\n\n\"No shit!\" The third voice I didn't recognize: it had a definite surfer vibe to it. \"I was down there this morning, man. Been feeling swaggy ever since.\"\n\n\"Aw, I know that feeling.\" Rowe laughed, then a slapping noise advertised a high-five. \"Dude, that shit they do...\" The silence that followed had an air of awe to it, before the first kid spoke again.\n\n\"Fucking insane shit, dude.\" Another high five, some giggles, and then I noticed my coffee was slopping out onto my hand, I was shaking so much. I was fucking pissed. So I cocked my leg back and kicked hard at the metal scuffplate on the bottom of the door, swinging it hard into the bathroom.\n\n\"Okay!\" I yelled. I liked this kind of thing. Made me feel like R. Lee Ermey. \"What is this, party time in the bathroom?\" One of them had already made the vape stick disappear, but it would be found once I marched these assholes down to the vice principal. I shook my head. \"It amazes me that you people actually enjoy hanging out in a high school bathroom.\"\n\nTJ met my eyes with badly-disguised hostility. \"Just peeing, Mr Deemer.\"\n\n\"No, you're vaping,\" I snapped. \"That's a three-day suspension.\"\n\n<br >\"Fuck, man,\" the third kid began. He was tall and lanky, his blonde hair flopping over his forehead. \"Whatever. We'll just go back to class,\" and then I knew he had to be the one with the contraband on him.\n\n\"Sure,\" I smirked, \"as soon as you give me the vape pen and your name.\" These were all seniors, but it was a big school and I'd never met the other two. TJ's feet shuffled nervously. \"Got someplace to be, TJ?\"\n\n\"Well, honestly, Mr D,\" he said slowly, with a useless grin forming on his face, \"I kinda do. I was just finishing up here.\"\n\nI remembered his voice... it's my turn... I smiled coldly at him and laid down my trump card, a big-ass purple one with silvery script on it. \"Before you go down to... what was it? 'Ms Anthony's little Circle?'\" He gaped at me then, the hostility right out in the open, and I jerked a thumb at the Surfer Dude. \"Tell me all about it. Or I have Mr McCarron suspend you all for vaping after he searches your homie here.\" They watched me carefully, three cornered foxes, shifting guilty glances at each other. \"Well?\"\n\nThe first kid, who had carefully stayed silent, nodded grimly over at Surfer Dude. That one hesitated a moment, then swept his flop of hair up out of his eyes and fixed me with the kind of look an inmate gives a correctional officer. \"So have McCarron suspend us for vaping,\" he told me flatly, lifting up a ratty tanktop so that he could slip the vape stick out of his back waistband. He held it out to me, almost proud, and I'm sure I looked shocked, if not impressed.\n\nKids at Glen Avery High didn't take three-day suspensions. We were the wealthiest high school in the district; the little darlings in our classrooms had vocal parents. \"You sure?\" I narrowed my eyes. \"You don't have to. I just want TJ here to tell me where he's been disappearing to during my class.\"\n\n\"Too bad, Mr Deemer.\" TJ's voice came out as a flat bark. \"Kyle's right. We'll take the suspension.\"\n\n\"You're seniors,\" I warned. \"Suspensions don't look good on college apps.\"\n\nThey traded one more look, and this one surprised me: I didn't see fear there, or anxiety, or anything else like that. I saw contempt. For me. \"We're not worried about it,\" the first kid said quietly, and that's how I got a hearty pat on the back from Vice-Principal McCarron for breaking up vaping in the second-floor bathroom.\n\nBut I wasn't after a hearty pat on the back.\n\n* * *\n\nI was brooding about all this the next day, my mind racing toward an unthinkable universe where a senior would rather take a three-day suspension instead of answering questions. Even with a lie; that was the weirdest part. TJ and Surfer Dude should have been able to come up with a plausible story quickly enough to satisfy me, and what I'd seen of Ms Anthony told me she'd definitely back them up no matter what they said.\n\nBut they hadn't.\n\nI was still pondering that the next morning before the homeroom bell rang. Students milled around in the halls, trading texts and high-fives. The hall was a smorgasbord of humanity: Geoff Jakes, being casually bullied down the hall. Grant Yoshi and his girlfriend Petra (last name, regrettably, unremembered) necking before the day began; Petra was visibly straining to keep her hands on top of his shirt. Leah Fuller, whom I'd had the year before, striding down the hall with the best ass in the senior class. She'd changed her hair color, I noticed. I glanced up from my attendance when a stocky shadow fell over my keyboard. \"Oh. Hi, Nelson.\"\n\n\"Morning, Mr D.\" I could barely hear him over the morning announcements. He looked a little agitated, like he'd just run a red light and barely gotten away with it. \"I need to use the restroom.\"\n\n\"The restroom?\" I squeaked back in my chair. \"Truly? Or, you know, Guidance?\"\n\n\"Yeah,\" he nodded, and at least he had enough shame to look away. \"That too. Just for, like, a few minutes.\"\n\n\"Oh really.\" I scowled once his eyes found my face again, then sighed. I could say no, but I knew I'd never get any backing from Administration for stopping a senior from going down to Guidance. Not if his parents wanted to push it. \"Fine,\" I said flatly, a new idea slinking into my brain. \"Make it quick.\"\n\n\"Yeah,\" he nodded again, and then he was making for the door. I smacked the enter key to submit my attendance and rolled my chair quickly over to the door that connected my classroom to my neighbor's.\n\n\"Jake!\" I called into there; he had a free period this morning. \"I just got called down to a special ed meeting. My kids will just be working on journals. Mind if I keep the door open?\"\n\n\"Sure, dude.\" Jake was polishing one of his endless geometry powerpoints. \"I'll keep them from killing each other.\"\n\n\"Great.\" I called it over my shoulder as I skedaddled from the room to the surprise of my students. \"Response journals!\" I rapped out. \"I've got a meeting I forgot about. Comment on the characterization of Wiglaf and his admonishment of the Geats, and we'll discuss when I get back!\" I was already out the door, headed for the stairs down to Guidance and hoping I'd catch sight of Nelson before he went down.\n\nThis was stupid, I knew. I was leaving my class to chase down a snide little brat and his patron down in Guidance. I don't know what I thought was happening, but I remembered Alex' eyes and the memory of that strange smell and I stopped thinking much more about it.\n\nI paused at the hallway intersection near the science wing, listening, and when I heard the quick clomp of Nelson's Timberlands heading toward the back of the school, I stole off that way. Somehow I wasn't all that surprised he wasn't heading for Guidance, near the main office; no, the only thing back this way was the stairwell leading to the athletic offices, the place where the custodians sold weed, and the boiler rooms.\n\nMy chest seemed to take on an odd stillness as I padded down toward the back stairs and into the mildewed kingdom of the building's various support personnel, the dust in the corner of the landings looking like it had been there for decades. It was like a different world back here, an eerie one, but Nelson's footsteps on the stairs sounded bold enough.\n\nMine did not. I was being as stealthy as I could.\n\nHe stepped calmly through the big steel doors at the bottom, back in a part of the building I'd only ever used as a shortcut to the locker-room bathrooms. So, maybe twice. I was seeing cigarette buts and vape cartridges, even a nip bottle crushed into the corner under the last flight of stairs, the students knowing this was a no-go zone for teachers and, predictably, taking advantage.\n\nI scanned around briefly, wondering how many used condoms had found their way down here.\n\nI waited at the foot of the stairs, peering down the chipped-tile service hallway, seeing Nelson's retreating back turn to pass through the fire doors leading to the boiler room. I stole quickly along the corridor after him, my heart pumping now, and just as I passed a peeling sign on the wall advertising the route to a Cold War fallout shelter I caught it, prickling at my nostrils, stirring everything from brain to balls.\n\nThe spicy-flowered scent.\n\nIt dragged me instantly back to Alex' little lair in the Guidance Department, into the web of her voice, the pit of her cleavage, the twin pools of her eyes. I felt myself holding my breath just outside the door, feeling the obscure gnaw of some sort of dread growing in the pit of my stomach, just above my groin. It was a weird feeling, both terrifying and intensely, almost irresistibly curious, drawing me toward the boiler room almost against my will... and yet?<br ><br >I had to know. I had to see.\n\nThe lights were off in the boiler room when I peeped around the doorway, but as my eyes grew used to the dimness I saw bleared light filtering through high, skinny transoms, warring with the warmer glow of something else from behind the far boiler. The smell grew stronger now, pulling at me, and once I was sure Nelson had disappeared at the far end of the room I tiptoed through the doorway after him. I was just one quiet step into the room when a rich, low voice shook me.\n\n\"Behold!\"<br ><br >I stopped short, the deep tones of that voice tolling through my head, my eyes finally picking out a flickering orange glow beyond that far boiler. Candles, I told myself suddenly; the light rose and fell that way, and I knew with a sudden certainty that they were the source of that cloying smell.\n\nHuh. Scented candles. Who'd have thought?<br ><br >The voice rang on into the gloom. \"He is here, my ladies of the Circle.\"<br ><br >\"He is.\" I was surprised at that; the reply came from two or three other voices, all female, all hushed. What the fuck was this? I crept closer, the flickering light drawing me.\n\n\"Who is he?\" That same ringing voice, deep and husky, and I knew suddenly by the lurching of my balls that it was Alexandra Anthony's.\n\nAgain, that chorus in reply: it seemed weird, unearthly, a chant that sent a chill all the way down my spine to my asscrack. \"He is a man.\"\n\n\"He is.\" Alex' voice was soft and lilting in agreement, a nurse soothing a patient who has done well. \"Whose turn is it today?\"\n\n\"It's my turn, Mistress Alexandra.\" The voice was quiet, but determined.\n\n\"Ah. Lady Nicole, dear. You may take charge. Remember the spell.\"\n\n\"Yes Mistress.\" Spell? I frowned to myself, the voice familiar, as I snuck around the boiler. Nicole Cross. Her sister had been the terror of the school. I was close enough now to hear the shuffling of many feet on the far side. Take charge? This sounded like some kind of initiation? Some rite of passage? Nicole's sister Natalie, I remembered, had played soccer when I'd had her a couple years before: did Nicole play? Was Alex coaching? Was Nicole some kind of team captain? And what did spelling have to do with anything? Nicole's voice had a rush of excitement in it when she cleared her throat and spoke. \"Before us stands a man!\"\n\n\"Before us stands a man,\" droned the other two voices, joined now by Alex' deep tones. I was heading for a patch of shadow behind the shelf where the custodians kept all the paints and solvents. From there, I decided, I should be able to catch what was going on.\n\n\"A man of strength!\" Nicole's voice was confident, somehow harsh.\n\n\"A man of strength,\" murmured the rest of the voices. I'd almost passed my side of the big boiler, the shelf just ahead. They wouldn't be able to see me in the shadows over there, I told myself.\n\n\"A man of passion!\" She delivered the line with feeling, and the response had an unmistakeable tension in it.\n\n\"A man of passion.\" I held my breath and waited until she spoke again to cross behind the shelves.\n\n\"A man who needs a woman!\" I shook my head as I shuffled through the gloom. What the fuck was this?\"\n\n\"A man who needs a woman!\" The others were louder now, and the eerie silence that followed left the hairs standing up on the back of my neck as I slunk behind the paint.\n\nThe silence stretched. I could almost see around the boiler now: just a couple more feet. I shuffled forward, then stopped uncertainly when Nicole's voice came lashing out once more. She was practically hissing now. \"I am that woman.\"\n\nThe response, too, was a low, sibilant whisper. \"You are that woman.\"\n\n\"Yes.\" I caught sight of the first candle now, stuck in an ornate silver candlestick on top of a rusty 55-gallon drum, and I squinted over its glow. I felt my jaw drop at what I saw.\n\nNelson was standing in a chalked circle on the concrete floor. His back faced the boiler tank, and he stood calmly in his letter jacket, with an oddly feral look on his face. On either side of him were two girls in what looked like... robes? Almost like graduation gowns, but these were a pale sheer white. It took me a second look to realize two things.\n\nThe gowns were almost transparent in the candlelight. And the girls weren't wearing anything underneath.\n\nThe near one, I was shocked to see, was sprightly Brianna Riley, tall and with all those eighteen-year-old curves that had brought her the Homecoming Queen crown at the side of her boyfriend Franco Lattner. I looked at her near-nudity, then at the way she was standing so close to Nelson, and decided she and Franco probably were no longer dating. Her nipples were a pair of dark-pink bullet-tips tenting the gown above a soft blur where the silky material showed dark pubes.\n\nI peered past the two of them and, amazed, caught sight of none other than Leah Fuller on his far side. She had the same kind of robe and, I noted cynically, the same kind of nipples; it must have been cold over by the boiler. She had a weird expression on her cute, blue-eyed face, a flushed look of rapture as she stared straight ahead at short, slender Nicole Cross.\n\nShe was the kind of young woman people sometimes describe as mousy, never the hottest girl in any crowd, nondescript brown hair, a dusting of freckles. But there was quite a bit of sex appeal in that athletic little body of hers, especially now that I could see just about all of it where the white silk draped her. She stared fixedly at Nelson. \"Prepare my man,\" she ordered, then watched as Brianna and Leah began to move.\n\nThey knew what they were doing; I could see they'd done this before, and of course Nelson had too. Leah, her mouth twitching into a smile, stood directly in front of Nelson and, her face smouldering into his, reached to his waist and without ceremony dropped his pants and boxers straight down. Or she would have, anyway, if the boxers hadn't gotten hung up on his stiff, stubby erection. She giggled, her hands disentangling his penis while Nelson raised his arms so Brianna could whip his shirt up over his face.\n\n\"Hi there,\" I heard Leah whisper. She was looking straight down his hairless chest at his groin.\n\nBrianna knelt, pulling off Nelson's Chuck Taylors, handling each one with practiced ease. She wrinkled her nose a bit as she did so. All the while, Nelson stood relaxed, every part of him calm and slack. Except for his dick, that is, not terribly long, but with pretty impressive girth and a loose, quivering pair of balls. Leah gave the whole thing a fond little tug.\n\nThe candlelight drew my eyes back toward Nicole, flashing off an ornate silver charm that had found its way between her tits, hanging from a fine chain. I squinted at the pair of hands that were fastening the pendant around her neck, and I was not a bit surprised to see that they belonged to Alex Anthony.\n\nI thought she was in silk too, though it was difficult to tell, her body draped in a black so dark it seemed to swallow the candlelight. I saw long, drooping sleeves, but then nothing else but her gorgeous face seemingly suspended in the darkness from behind her. Her hair was a luxuriant spray of curls in all directions, as if an electric charge was passing through her. Her face showed pride and lust and an ecstasy of a kind I'd seldom seen since I'd caught my ex, mid-orgasm with her coworker. She finished fastening the necklace and then laid her hands on Nicole's shoulders, trembling slightly as they watched Nelson's slow exposure.\n\nI could hear Alex' low, soft murmur to Nicole as Nelson's firming cock came into view. \"Look at that!\" she sighed. I glanced up to see dark lipstick curved into a gloating smile.\n\n\"Yes.\" Nicole sounded calm and unruffled, though there was definitely some thickness in her voice. She cleared her throat again. \"His balls...\"\n\n\"Hanging low,\" Alex agreed. Her fingers caressed Nicole's arms and shoulders, the rasp of her nails on the silk filling the room's flickering silence. \"He's loaded for you, Nicole.\"\n\n\"I'll drain him,\" the girl said with quiet confidence, and Alex gave her biceps a brief squeeze.\n\n<br >\"Yes. You will,\" she chuckled. \"Keep going. The spell,\" she prompted gently.\n\n\"Yes, Mistress.\" Nicole's voice rose, still husky. \"Is my man prepared?\"\n\n\"Hell fuck yes,\" came Nelson's wry voice, and sprightly, carefree Brianna wasted no time; she reached out a lazy hand and brought it sharply downward onto the shaft of his cock. \"Ow!\" Nelson whined, bending slightly as his erection bobbed.\n\n\"Shut the fuck up, Nelson,\" Brianna snapped. \"We told you. Just keep your mouth shut and let us work.\"\n\n\"Candle!\" Nicole called, and I watched spellbound as Alex wound her fingers beneath Nicole's hair, working a knot at the base of her neck; the sheer robe swept down off her body like a magician's trick, leaving Nicole naked as the day she was born, every sleek muscle outlined in flickering flame with her pert little tits high on her chest. She spread her legs slightly, a finger passing down the smooth skin of her belly, past her smooth-waxed mound, and into her slit without a hint of self-consciousness. \"Mine is the power,\" she muttered, her eyes closing briefly. When she pulled her hand away from her crotch, her finger shone.\n\n\"Yours is the power,\" Brianna agreed, stepping forward with one of the candles. Nicole took it in her left hand, her right still glimmering with her juices, and walked slowly forward as Leah slid close behind Nelson. I realized, suddenly, that I could no longer see any trace of Alex.\n\n\"Greetings, lover.\" Nicole extended her shining finger toward the waiting young man's lips, touching the lower one gently. \"Accept my offering.\"\n\n\"Tell her, 'I accept,'\" Leah stage-whispered to Nelson. She rolled her shoulder down, reaching boldly between his legs from behind; I gaped as her fingers gripped his deep-dangling ballsack. Nelson gasped.",
        "<br >\"I accept!\" He nearly shouted it, but Nicole was already tracing her finger down through the sparse tuft of his chest hair, all the way down his body to slip through the coarse forest of his pubes. She ran her finger slowly along his straight, pulsing dick, tracing the vein at the top, feeling him. I caught movement down between Nelson's legs; Leah was rolling his balls together, massaging them, Nelson's chest rising and falling.\n\n\"Do you offer your seed?\" Nicole asked him softly.\n\n\"Say yes,\" Leah giggled, and given what her fingers were doing to his scrotum, he was quick to agree.\n\n\"Yes!\" His eyes were riveted to her tits.\n\n\"Then I accept, as well,\" Nicole sighed. She cleared her throat again, her skin ruddy in the light of her candle as she passed it along the front of his body in an intricate series of whorls. There was something familiar about the pattern made by the intoxicating flame, I thought, staring at it, and then I realized: it was the same as the whorls on Alex' email sig. The smell of spicy flowers filled the entire space, making me light-headed, as Nicole took Nelson's gaze and held it hard, bringing the candle down below his hanging balls.\n\nHe went dead still the moment he felt the heat between his legs. She left it there a second or two, her eyes fixed on his from where she knelt beside his stiff cock, letting the orange glow reflect off his hairy thighs. The only motion in the silent room was Leah's fingers, methodically pulling at his sack. Nicole smiled grimly. \"Feel the heat in your loins,\" she purred.\n\n\"Feel the heat in your loins,\" echoed the other two girls, and Leah gave his balls one final tug before she crouched suddenly and took the candle back from Nicole between Nelson's stunned and apprehensive legs. Whatever sketchiness he was feeling, though, disappeared in a gloating grin as, with Leah's hands drifting coolly across his ass, he looked down to see Nicole's conquering smirk moving steadily toward the head of his trembly cock, her little fingers wrapping around his shaft with steady confidence.\n\n\"I claim you,\" she murmured, pursing her lips to blow steadily along his cock. I watched, breathless, the candles playing off the muscles of her naked back as she twisted. On his far side, Brianna returned with her mouth open in raw, unstated lust, trailing her fingers along his groin while Leah continued to toy with his balls behind him. \"Let's play,\" Nicole whispered to his dick, her fingers resting lightly on his head as her mouth opened slowly, wetly, to take his rampant penis.\n\nThat's when I nudged one of the paint cans.\n\nIt didn't fall off the shelf, thank God; it just slid an inch or so across the metal surface, but that was enough to produce a faint squeaky grating noise. None of the four writhing seniors seemed to notice, but I was already moving: in a panic, I shuffled silently off just as Nicole kissed Nelson's head, bolting for the distant boiler-room door with a strangely compulsive sense of shame. It wasn't until I was almost out, the candlelight fading behind me, that I realized I was popping the biggest boner I could remember in years.\n\n* * *\n\nI really did get called down to a special ed meeting about two days later, only to be greeted by a frown from Jake when I begged him to watch my class again. \"Man,\" he shook his head, \"the other day, you were down there for like twenty minutes and came back up all freaked out.\"\n\n\"What do you want me to say, bro?\" I sighed. \"It was a hellacious meeting.\" I'd been bone-pale when I'd come back up from the boiler room, totally shaken by what I'd seen down there. At the end of the period, when Nelson had come sauntering back in, I'd just taken his purple pass without speaking. The couple of days in between hadn't made me feel any better about what I'd seen, which I was starting to convince myself was something that couldn't have possibly actually happened. No way.\n\nCould it?\n\nBecause if it had, I'd definitely have to report it. Definitely. So, of course, it was easier just to pretend I'd seen nothing.\n\nStill, just today, after lunch, Mikey Choi had come back with that smell on him and that loose-limbed sluggishness as he dropped his purple pass on my desk, and I'd been catapulted straight back there. So, slowly, I was coming around to some uncomfortable realizations.\n\nThat was my state of mind as I came down to the conference room off the main office, where they liked to have the special education meetings; the idea was that they brought together parents, teachers, special ed liaisons, and Guidance to figure out how our problem children were faring. The email advertising the meeting had specified 1:15, and normally they only kept the classroom teachers for a few minutes, so I'd shown up a little late.\n\nIt was like an Old West saloon scene when I walked in, where the piano stops tinkling and everyone cranes their heads toward the door as the gringo walks through. I stood nervously in the conference room doorway, looking at a table full of people and one empty seat.\n\n<br >The one right next to Alex Anthony, the Guidance representative.\n\nLast time I'd seen her she'd been a disembodied face, floating backward into the shadows of the boiler room after disrobing Nicole Cross. Now she sat upright with a demure pair of hands crossed in her lap, making the cheap office chair look like a throne. I tore my eyes away and offered a handshake to the parents. \"Hi. Sean Deemer. I teach senior English?\"\n\n\"Take a seat, Sean,\" trilled the liaison, a bubbly little thing who'd been hired about two years ago. She looked and acted like a twelve-year-old. \"We'll have you out of here in just a sec.\" I forced a smile and took the vacant seat, trying hard not to look at the hint of cleavage Alex had allowed herself.\n\nI passed at once into a cloud of beguiling perfume, all musk and citrus with a subtle thread of that spice I remembered vividly from the smell of the candles in the boiler room. It was heavy in my nostrils, moving in like a troop of boyscouts and then setting up camp in there, and right away I found myself blinking thickly. I glanced over at Alex. \"Are you okay, Sean?\" she asked, her voice the faintest whisper as she leaned close to me.\n\n\"Fine,\" I mumbled back, and then I blinked away my sudden confusion and launched into my spiel, the one I normally trotted out at these meetings: your son/daughter is capable of being a hard worker, but there are definite problems with his/her work ethic that are jeopardizing his/her term/semester/final grade; however, it's not too late to salvage a passing score if he/she gets that Chapter Five study guide for Beowulf turned in by next Tuesday/Wednesday... These things went like clockwork, which was good because Alex was leaning into me the entire time, her scent wrapping around me.\n\nIt seemed, almost, that I could hear her voice in my ear, drifting into my consciousness on her warm breath: Are you sure you're okay, Sean? All at once I felt her leg moving against mine, my slacks plucking at the texture of what felt like fishnet stockings. Are you sure? Do you need me to help you with anything? I risked a sideways glance to catch her eyes squarely on me, looming massively, seeming to swallow me. I'd love to be there for you, Sean...\n\n\"Great! Is there anything else, Mr Deemer?\" The liaison was gazing brightly at me, the parents across the table studying the scratches in its surface. I shook my head, conscious of her voice in my head and the rhythm of her foot against my leg.\n\n<br >\"Uh, no. I'm good.\" The corner of my eye showed me Alex, a silver pen scratching busily across a little piece of purple stationery in curious looping whorls that, as she slid the paper over to me, resolved into ornate calligraphy.\n\nI wish to join you for lunch today in your classroom. 12:30 seems acceptable.\n\n-AA\n\nI blinked down at the slip, thinking about the presumption it implied and the faint, insistent stirring in my dick as I realized what it meant.\n\n* * *\n\n\"When I was a little girl,\" she began, her voice a low and soothing murmur, \"I used to like to find things out. I was a digger. Curious. I liked knowing things.\" Alex turned those huge eyes of hers on me, and I felt myself falling into them already.\n\n<br >\"Uh-huh,\" I replied dumbly. It seemed like I was supposed to say something. She'd come sweeping into my classroom as though she owned the place, striding boldly through my door in the knee-length skirt and fishnets she'd worn at the meeting this morning. The stockings, as I looked at them surreptitiously, weren't really fishnets: no, they were lace, in an obscure and unsettling pattern of loops and swirls. I had a hard time looking at them, despite the excellence of her legs as she stretched them confidently beneath a student desk, crossed at the ankles.\n\nShe obviously wanted me to look.\n\n\"Perhaps,\" she'd said as she settled in and placed a navy blue plastic tiffin box on the desk she'd selected, \"we should shut the door?\"\n\n\"Oh.\" I'd started to get to my feet, but she'd just smiled sweetly and nodded toward the hall, the two of us watching as the door swung slowly shut on its own. After that, I'd decided it might be best just to shut up and let her talk.\n\n\"Curious,\" she repeated slowly, setting her lunch meticulously out on the desk. She was wearing a button-up blouse, and she'd popped one of the buttons open since the special ed meeting. Her breasts glowed creamy white, peeking past the dark purple of her top. \"I loved detective stories. Mysteries. I was a big-time Agatha Christie fan for awhile.\" She cocked her head serenely at me across my own desk. \"Do you assign Christie?\"<br ><br >\"It's not on the curriculum,\" I explained, feeling an obscure need to try to get on her good side. \"Unfortunately.\"\n\n\"Mm. That is, indeed, unfortunate.\" She pulled out small silver fork and speared a green bean from one of her blue containers. \"The point is,\" she went on, examining the bean, \"I understand secrets.\" She placed the food past those full lips of hers and chewed slowly, staring at me. \"You know a secret now, Sean.\"\n\nAgain, that strange sense that I needed to say something. Anything, just to fill the silence. \"I do,\" I said shortly, nodding. I'd not even thought about touching my turkey and Swiss on rye. I had other things to think about: the lush curve of her lips. The smooth skin arching down to her tits. The mystery of the shadow where her legs went out of sight beneath her skirt. I cleared my throat. \"It's a pretty fucking big secret, too,\" I finished, faking a laugh.\n\nShe nodded gravely, forking a fragment of tomato into her mouth. \"Pretty fucking big,\" she agreed. \"Like your hard-on when you left my office the other day,\" she added with a whimsical smirk. \"Since we might as well be honest, given what you saw.\" She permitted herself a chuckle. \"Did you know what kinds of things went on in the boiler room? I think, if you had, you'd have stayed away,\" she added, shaking her head. \"That was bold, stepping in during my ritual.\"\n\nI coughed, my penis already lurching to a repeat performance under my desk. I knew she knew it. \"When did you know I was there?\" I managed.\n\n\"Oh, immediately.\" She arched an eyebrow, chewing. \"It wasn't difficult to sense you. I am Mistress of the Circle,\" she shrugged, as if that explained everything. \"If I didn't know everything that was going on during my rituals, I'd be useless. Right?\" She winked at me, her mouth set in a speculative line. \"I think you're like me,\" she breathed. I had to lean forward to hear her. \"You want to know more secrets.\"\n\nI nodded, dry-mouthed, totally intrigued. I could think of nothing at all to say.\n\nShe ate a Pringle, then licked at her fingers with a small wet tongue, darting it out like a puppy's. The entire time, her eyes remained on mine. \"Many women think they're magical,\" she began, recrossing her ankles. I watched her legs move, powerless to do anything else, the whorls on her stockings writhing, impossible to focus on yet impossible to look away from. Like her email sig. She waited to speak until I dragged my eyes back up to her face. \"But some of us? Well, some of us actually are.\" She gave a wry smile. \"Very magical, some of us.\"\n\n\"Yes,\" I nodded, speaking very quietly. \"I can see that.\"\n\nHer smile widened, growing pleased. \"You can indeed.\" She was sorting carefully through her lunch, deciding what to move to next. \"I'm going to make those girls just as magical,\" she went on. \"It's what I do. I wander around, making magic.\" She winked now, slowly, huge lashes to go with her huge eyes. \"You liked the magic I made down in the boiler room.\" She didn't bother waiting for me to say anything, which was just as well; she knew she was right. \"If you want to see me make more magic down there, just ask.\" Her eyebrows arched suddenly, her mouth breaking into a snicker. \"Oh! Or, don't bother asking. Just think it.\" She dabbed at her lips with a small handkerchief. \"Or barge on in and hide behind the paint shelf again. I'll let you see more.\"\n\n\"Wow.\" I felt my own mouth twitching into a smile, but I kept it from breaking out. \"Uh, thank you.\"\n\n\"You're always more than welcome, Sean.\" She winked again. \"Let me tell you a few more secrets, shall I?\"\n\n\"Whatever you're comfortable with.\" It was like I was speaking through cotton. My cock was a surging column in my pants.\n\nShe laughed gaily. \"You might regret that statement one day.\" She was reassembling her tiffin, fitting everything together with practiced fingers. \"So. Everything in the world, dear Sean, is a circle.\" Wordlessly, I held up my very square sandwich; I was obscurely gratified when she giggled. \"Funny. But the turkey had a life cycle. The blade that sliced it is round. The holes in the cheese. Look closely at the bread; you'll see holes there as well, each one a circle, each one endless.\" I made a show of studying my bread, and she chuckled once more. \"The circles needn't be perfect, as the universe is imperfect. But they are endless, all of them. Eternal, like the universe.\"\n\n\"Eternal.\" I sampled the word, for I had no idea how it would come out; as a croak, as a dry squeak, as a whisper. It came out sounding mostly like me, thank God.\n\n\"Like me. Like my ladies, the ones you saw.\" She paused. \"Like you, perhaps.\"\n\nI just stared. Something told me I should bite into my sandwich; when I did, I tasted sawdust.\n\n\"All things are circles, ultimately. And my ladies and I, we celebrate the Circle. We stand together, holding hands. We draw circles on the ground; we place our candles that way.\" She winked. \"Other circles, we fill.\"\n\n\"Fill.\"\n\n\"Mouths. Assholes. Cunts.\" She stared straight at me on the last word, saying it flatly, boldly, no shame. She watched it take effect; I didn't move in the kinds of crowds where women enjoyed that word. \"I move around. I make Circles.\"\n\nI made myself smile, strangely shaken. \"Then you fill them.\"\n\n\"I do not.\" She leaned forward slightly, her breasts on display. \"I find men to do that for me. Men have circles of their own, of course.\" Her voice was rhythmic, floating with an odd, rolling lilt, almost a song. \"Men have mouths. Assholes, too, but others: the curls of their pubic hair. Their pissholes. Their nostrils, flaring when they cum. Their eyes, wide with passion. Their nipples.\"\n\nI was making a circle, I knew, my cock in hard, straining cross-section.\n\nShe grinned wickedly. \"Of course, we've got those too. And the full, rounded breasts they crown. And?\" She leaned further forward, the next button straining hard on her blouse, her eyes glittering, \"sometimes, Sean, when the candles glow and the spirit moves us, our circles meet your circles.\" She paused, letting that hang in the air, then leaned back and stretched her legs back out. \"If you'd stayed in the boiler room just a few minutes more, Sean, you'd have seen some of that.\" She closed her eyes, a flutter of her lashes, and took a long breath. \"There was something sublime that day about the circle of Nicole Cross' mouth closing over the circle of Peter Nelson's testicle.\"\n\nHoly shit. I took another wordless bite, the mustard puckering my lips.\n\n\"You could have stayed, Sean, and watched with me.\" She arched a plucked eyebrow. \"I am proud of my ladies. They've come so far in such a short time.\"\n\nI coughed again. \"You work fast,\" I pointed out. \"You only got hired, what, six weeks ago?\"\n\n\"About that.\" She looked hard at me. \"Unfortunate, Kathy Lorean's sudden injury. Such a shame.\" She kept up her stare until I shuddered. \"But yes. I don't believe in working slowly. My standards are simple: I seek strong, able women. Women capable of being shaped. I mold them.\" She shrugged. \"Adults, all of them. I only seek out eighteen-year-olds, both my Ladies and their boys; wouldn't do to get into legal trouble. Willing, all of them.\" She quirked her lips into another smirk. \"Well, I say 'willing;' others might use a word like 'horny.' A lot of girls just love sex. The boys too, of course, but they know I've got the power to change their grades. So compliance hasn't been an issue so far. But I like to think my Ladies and their men are seeking something greater.\"\n\n\"Eternal,\" I coughed. \"Like the universe.\"\n\n\"Mmm.\" Her eyelids flickered orgasmically. \"Such a joy to find a colleague with some wit. I give them a way to empower themselves within my Circle.\"\n\nI forced a pun. \"Within your Circle.\"\n\nShe laughed loudly, her breasts shaking delightfully. \"Why yes! Mine does, indeed, get filled at times. I'm impressed, Sean. Most men don't make puns when I'm clearing the air with them. Not that I usually bother to do that, but hell. You know the secret already, regardless.\" She sighed. \"And you won't tell.\"\n\n\"Won't I?\"\n\n\"No. You won't.\" She shrugged. \"I know men. I know you. You want to know more. You're curious. I don't even need to ask whether I'm right about that; I know I am.\" She was, of course. \"The Circle gives so much to my Ladies. I'll tell you a story; it might make you understand things a bit better.\"\n\nI started in on the second half of my sandwich. I couldn't even taste it now, my whole body numb but for the nagging sensitivity of my cock against the inside of my boxers. She smiled warmly. \"It's okay, Sean. Go ahead and adjust your penis. Don't be shy; I have little use for shy men.\"\n\n\"I thought not,\" I muttered. It was amazing, how normal it felt to reach calmly into my slacks, my dick warm and firm and moist, and drag it up straight while my coworker watched calmly. \"Better.\"\n\nShe nodded. \"Feel free to do whatever you wish with your cock. It's only natural.\" She winked. \"You want to see a couple of my circles, I think.\"\n\n\"Jesus.\"\n\n\"No, he's the wrong person,\" she giggled. \"But here's my story. You saw Brianna the other day, helping to prepare Peter. You must know she's dating Franco Lattner.\"\n\n\"Since they were sophomores,\" I nodded. They were Glen Avery's great love story, a self-contained soap opera.\n\n\"So. They're both eighteen now, young and beautiful and in love. And he's fucked her a dozen times, perhaps, in all sorts of different ways. He's good; he satisfies her, but one day I had him brought down here. She claimed him while the Circle watched. Know what she told me after he filled her circle?\" She smiled, remembering. \"The words she used were profound. Transcendent. An English teacher should appreciate words like that, I hope.\"\n\nI felt myself smiling, a most un-Sean-like smile. This was the oddest conversation of my life, bar none. \"Filled her circle,\" I murmured. \"I do appreciate the power of euphemism, Ms Anthony.\"\n\n\"Alex, please.\"\n\n\"Alex.\"\n\nShe was nodding to herself. \"I don't have to use euphemism, of course,\" she cooed. \"I can tell you about the way his thick cock twitched while it sent his load deep inside her able young cunt.\" She tittered when I reached for my dick again. \"His balls shook most beautifully. No, it's not euphemism, Sean. It's ritual.\"",
        "I shook my head, incredulous. \"Deep inside, huh?\"\n\n\"Always.\" She smoothed her blouse over her swelling tits; I wasn't terribly surprised to see her nipples poking at the silk. \"That's a sacred commandment. No matter which hole, it always goes inside.\" She was putting her tiffin away. \"We don't do bukkake.\"\n\nI snorted a laugh despite myself, then looked her in the eye. She didn't like shy men, after all. \"No worries about STDs? Pregnancy?\"\n\nShe glanced at me, amused, as she got ready to leave. \"Mandrake root and eye of newt. Henbane. No. Don't be a moron, Sean. These are 21<sup>st</sup> century girls; they're all on the pill.\"\n\nI sat back in my squeaky chair, incredulous. \"I don't know that I believe any of this, Alex.\"\n\n\"I'm happy to introduce you to my Circle, Sean.\" She sauntered close to me, her hips swaying, smiling broadly. \"No pun intended.\" She laughed and touched my arm, her fingers warm and full of life. \"I can prove it. All of it. Be open to me.\" We both stared at where her hand stroked my wrist, seeming to leave sparks in its wake. I shuddered.\n\n\"Magic, you said,\" I managed. \"You... you're saying you're a wit -- \"\n\n\"Shh.\" She laid a long-nailed finger on my lips, the sparks glowing there now too. I tingled. \"Don't use the word. It's too simplistic. Fuck that shit.\" She turned away toward my door, showing me how the skirt fell over the generous curve of her ass. \"That's the kind of word that gets people burnt at the stake in Monty Python movies. Or hanged in real life in Salem.\" She smiled gently over her shoulder. \"If it'll make you more comfortable, I can put on a pointy hat from the Dollar Store and paint my face green.\"<br ><br >I swallowed past a hard lump in my throat, my erection an unwavering presence in my mind. \"Not necessary.\"\n\n<br >\"Good.\" The door opened, though I couldn't remember her touching the knob. \"Halloween is this month. The hats will probably be sold out anyway. Thank you for having me, Mr Deemer.\"\n\nI nodded. \"My pleasure, Ms Anthony.\" It did come out as a croak this time, but she'd already drifted off without a backward glance.\n\n* * *\n\nMy phone twinkled a couple days later, leaving me in frowning suspense: nobody ever called me while I was in class. I sent my most vicious glance over my hunched kids, busy taking their Beowulf chapter quiz, and then dragged my feet off my desk and pulled my phone out of my pocket. The text had come from an unknown number.\n\nBoiler Room. Enter from the loading dock. You may come at 10:05. \n\n-AA\n\nI arched an eyebrow, not sure quite how the fuck she'd gotten my cel number. Not that that prevented my dick from twitching the moment I saw her initials, of course, because her mentioning the boiler room could only mean one thing. I'm happy to introduce you to my Circle, Sean...\n\nI took a peek at my watch and started to do some math. No way could I get there at 10:05; Jesus, this woman had no concept of the bell schedule at her own school. I hesitated, my thumb knowing it was probably a bad idea to text her back, but then I remembered her blatant invitations, the curve of her tit where it fell into her blouse, and I tapped out a reply. Something to the effect that class ended at 10:12, and that there was no way I could cut out early.\n\nCome when you can, then.\n\nBe open to me.\n\n-AA\n\nFuck.\n\nThe kids, finishing up their essay on the symbolism of heorot, surely had no idea what was going through my brain, still less what was going through my balls. They might have guessed, though, by my abnormal grumpiness as we all sat around waiting for the bell to ring. \"What if we don't finish in time, Mr Deemer?\" Ashley Kimbrough, frantic, rushing as always to get her work done.\n\n\"Finish in time,\" I snapped, and I didn't miss the rolled eyes from a few of the kids. The bell turned me loose, barreling down the hallways toward the back stairs ahead of the thronging kids percolating toward their next classes. I was off this period, but I wasn't fooling myself; if I'd had a class, I'd have found an excuse and ditched them.\n\nThe Circle was pulling at me. Alex had known it would.\n\nThe boiler room door was closed when I passed it, but that was fine; she'd told me to come in from outside, the loading dock, and I knew why. The loading dock doors opened into a far corner of the room, out past the back boiler. She was sneaking me in. The custodians probably wondered why the tall, grim-looking English teacher was hurrying past their office on his way out the back of the building, but I couldn't even begin to care less as I emerged into the brisk chill of the October morning and picked my way among the oil stains toward the old doors.\n\nI saw, as I reached them, that they were wedged open. By a silver candlestick. I smiled at that, my confidence growing.\n\nThe gloom inside was absolute, that aged dry darkness of dead moths and rat shit, but I knew what else there'd be: the flickery shadows of orange candleflame, the thick scent of flowers and spice, the fog of lust in the air as the Circle did its work. I stood a moment in the doorway, my eyes frantically trying to adjust, calming my breathing down; I thought about texting Alex, but decided the glow from the phone would be a bad idea. Around the far side of that last boiler tank I could see, once again, that ghostly orange flicker, my straining ears searching for the sounds of sex.\n\nA dry hand soon found my fingers from out of the darkness, my eyes slowly picking out the smiling face of Alex as she drew close to me. \"Welcome, Sean,\" she whispered in my ear, the heated smell of her moist breath sending another surge to my groin. As though I needed one. Her fingers twined around mine. \"I'm glad you're here. Come. We've already started.\"\n\nShe led me crunching over the gritted floor, to the edge of the last boiler. \"I'd just as soon my ladies not know you're here,\" she breathed in my ear. \"They're doing well, but they need work on their discipline.\" She finished by trailing her lips along the side of my face, their brushing touch leaving sparkles behind them. I stopped at the boiler while Alex stood with her arms crossed just in front of me, blocking me from view. When I peeked around the rusty metal tank, then, I was peering through the tumbled curls of Alex' lush hair. Her citrus smell and the heat off her body drew me closer to her as I strained to catch what was happening within the circle of the candles. \"You missed the spell, alas.\"\n\n\"I heard it last time,\" I whispered, and it seemed the most natural thing in the world to stretch my hand out, brushing across her ass beneath the cool, smooth fabric of her black gown, and curl it around her hip. She chuckled as she melted into my side.\n\n\"You seem to have heard everything I've said,\" she nodded approvingly, her hand finding mine, and we stood there for awhile watching the show. The chalked circle on the floor was scuffed by Brianna's knees, for Alex had apparently placed her in charge of this morning's ritual. The girl knelt straight-backed on the concrete before her man, and I held my breath in a shuddering gulp as I was treated to the sight of her smooth, bold ass, naked and perfect in the reflected flames her friends held aloft. Alex squeezed my fingers and leaned back, her whisper slipping gently toward my ear. \"They say Leah's butt is the best in the school,\" she said coolly, \"but I prefer Brianna's.\"\n\n\"Fuck.\" Her hip was a hot, solid presence in my palm. \"This is unbelievable.\"\n\n\"Again,\" she sighed clinically, \"they need discipline. They tend to get carried away still. You'll see.\" She kissed my cheek. \"I'm sorry. Maybe you won't. I'm like a sculptor who sees nothing after my piece is made except my own errors.\"\n\nThere were scant errors that I could see in Brianna Riley as she rested her palms on the muscled thighs of her choice for today's ritual, none other than Julius Taylor. He loomed over her, dark as the shadows around us all, his bald scalp making him look fierce, older, more experienced. He had a truly fantastic body, I noted soberly, every muscle in place, moving liquidly beneath hairless, polished skin as he glared down at the girl servicing him.\n\n\"You'll see his meat soon enough,\" Alex gloated. \"He's really hung. She's never taken him before. Usually, Nicole does.\"\n\n\"Yeah? She seems so small.\"\n\n\"You'd be surprised,\" Alex gloated.\n\nI thought a bit. Nicole stood off to the side now with Leah, the two of them staring silently down between the two lovers, each with a candle underlighting their rapt faces and the way their nipples, like before, tried to make twin holes in their gowns. I cleared my throat, feeling bolder as I stayed longer. It was obvious the girls were way too interested in Brianna and Julius to pay any attention to Alex and me. \"Like, how do you pick?\"\n\nShe leaned her head back to my shoulder and rolled her head slightly, smiling at me with dancing eyes. \"Why, Sean!\" She chuckled, low and wicked. \"If I didn't know any better, I'd think you were starting to become interested in my little Circle.\" She paused, making certain my eyes weren't budging from hers, before her left hand snaked calmly down to the front of my slacks. \"Ooh! Yes. Definite interest there.\"\n\nI'd known, somewhere in the reptilian little part of my brain that had thought it was a wise idea to essentially sprint down here, that she was going to grope me. Or maybe it was just the sex-stenched air of this place, of this time; either way, I wasn't a bit surprised at the vibrant feel of her fingers as they folded over my hardening cock. They felt like they belonged there. I was proud when my hushed voice came out normally, my hand pulling slowly around to feel the curves of Alex' lush ass. \"You heard what I said.\"\n\n\"So insistent!\" She sighed, her body relaxed. \"There's a rotation. The girls know whose turn it is. The boys?\" She reached low, squeezing at my balls a moment. \"I just look at their schedule and decide whose class they can miss.\"\n\n\"Mine, often,\" I muttered.\n\n\"Often, yes.\" She winked in the dark. \"You hadn't complained yet to the principal about me. Which led to me calling your boys down more often which, praise the Lady, has led to this.\" She jiggled my dick. \"Full circle.\"\n\nI felt light-headed, and it wasn't just the scent of the candles. I felt like a contest winner. \"Why me? For this little invitation.\"<br ><br >\"Because. You chose to keep a secret.\" Her hand moved smoothly up and down the outside of my slacks, flagrantly enjoying how hard she'd made me. \"You could have told McCarron. Should have told McCarron. And also? I still need to make it up to you for taking your boys so often.\" She made a little sound in her throat, a funny little gasping squeal. \"Look at Julius' face, Sean. Look at the power she already has over him.\" I looked, and she was right; I still couldn't see what Brianna's mouth was doing to his cock, but he was gazing down at the top of her head with a look of awe? Reverence, perhaps. She had his soul in her hands. \"She needs to begin to fuck him soon...\" Alex did a strange little pulse of her hand on my meat, the other hand flicking in the air before her in a complicated series of circular flutters.\n\n\"What's that?\" She'd gone back to petting my dick, seamlessly.\n\n\"Just a small spell. Nothing major.\" She sounded careless, but I could feel a surge at my side, where her body was pressed to mine, her flexing muscles running through the curves of her ass under my own hand. She stirred, then smiled back at me with her voice another whisper in my ear. \"Discipline, as I said. Brianna enjoys sucking cock, but at her level within my Circle, I need her to focus on the power of her cunt.\" She giggled when my dick flexed in her hand. \"I thought you'd enjoy thinking about that. But why just think?\" She nodded toward the Circle. \"Watch.\"\n\nBrianna unfolded her body, rising to her feet by the strength of her sleek thighs. She took one step back, waiting, only the rise and fall of her shoulders as she breathed betraying her eagerness. As she moved back, I got my first look at Julius' naked body. \"Holy fuck,\" I whispered, and Alex nodded beside me.\n\n\"Uh huh. I told you so.\" His dick was big, a fat foreshortened log trembling stiffly out in front of his belly, long and fearsome and thick, with huge balls crowding each other between his legs. It was a stupendous piece of meat, and Julius obviously knew it well: he stood with his legs spread slightly, his hands on his hips, a gleaming tower of dark, hard muscles in the guttering light. His face showed confidence, skill, strength, and as my gaze shifted to Leah I caught a look on her face of sheer admiration, even devotion, where she stood with a hand on his butt. I saw her glance from Julius to Brianna, then she got up on her tiptoes and whispered something in his ear.\n\n\"She's giving him the words Brianna needs,\" Alex breathed, and I could hear the tense excitement lacing her voice. \"They're different every time.\" Julius bent his smooth head to listen once more, ignoring Nicole on his other side as she ran her little sharp-fingered hands incessantly in complicated patterns across his skin... patterns, I realized suddenly, that were circles, endlessly entwined.\n\n\"What -- \"\n\n\"Hush.\" Her hand tightened on my balls, cupping me hard through my trousers. \"We must all focus when he says the words.\"\n\nI clammed right up, for the first time sensing something else here, some mystique, an eerie feeling at the top of my spine, arrowing down toward the base of my cock and making my whole body tingle along the way. She was right: there was magic here. Magic in her fingers on my crotch, in the smell of her hair, in the flicker of the candles. And there was magic when Julius drew himself up, his cock bouncing high before the waiting Brianna, and opened his mouth. \"Today,\" he began, his voice sounding nothing like the kid I knew from class, \"I enter the Lady Brianna.\" If he felt embarrassed by the flowery words, his hard-on sure didn't. \"I am ready to give you my seed.\"\n\n\"And I,\" Brianna husked, \"am ready to accept it.\" She held out a hand and drew him close when he took it, pulling him into her arms. Their kiss was immediately passionate, that deep wet kind of spin-the-bottle kiss you only get from two horned-up teenagers, and she pulled apart in a thick string of spit. \"I want you, Julius,\" she told him, a thrill of smiling excitement burring her throat. \"Lay him down, my Ladies.\"\n\nShe ran a hand smoothly through her long hair, and as she turned I caught the rest of her body, lushly curved. Alex heard me catch my breath. \"I chose her because she reminds me of myself,\" she cooed quietly. \"She looks like a woman should.\" Another dry chuckle. \"I can tell that you agree.\" Brianna stood proudly as Leah and Nicole urged Julius to the floor, the three of them giggling and whispering as he playfully tried to grope them; this, I told myself, would be the discipline Alex was talking about, but as soon as I thought about leaning in to tell her so, she nodded. \"Yes. They're learning control, Sean. Of themselves first.\"\n\nBrianna was a goddess, a Renaissance image of female form and perfection, her breasts big yet firm, her hips wide and generous, her bush trimmed to a cone of perfection pointing the way toward where the flickering light showed me glistening moisture clinging to her curls. The girl was drenched. She gazed down at Julius with a knowing look as the others seated his naked body on the cold floor, smudging the chalk still further, and then his head was pointing toward Alex and I as Leah and Nicole stepped aside and nodded at each other. \"He is ready,\" they intoned, their own eyes filled with lust as his cock shuddered above his molded abs.\n\n\"Yes, he sure as shit is,\" Brianna whispered, almost to herself, and then she smiled greedily as she straddled him. The silver necklace, I noticed, glimmered between her tits. She cleared her throat. \"I claim you, Julius,\" she called, unable to stop a wink, and her eyes were squarely on his dick as she squatted over him.\n\n\"She looks gorgeous when she fucks.\" It was a sighing whimper from Alex, her hand on me finally stilled. When I glanced sideways, it almost looked like she wanted to jump into the Circle and elbow Julius out of the way. \"We all do, but her? Special. You'll see.\"\n\nBrianna settled herself on Julius' legs, his hands reaching for her automatically; they stayed that way for a few moments, running their fingers along thighs and abs and tits while her smile spread. I couldn't see his face, but she craned down to listen as he said something quietly. Her nipples dragging along his chest, she laughed and kissed him before nodding and straightening back up. I watched as she lifted his dick, holding it against her body with reverence, his dark skin twined in her curls before, her lower lip clamped between her teeth, Brianna rose on her knees and steered his flaring head to her slit.\n\n\"Jesus.\" The word found its way out of me somehow, a cold hiss as I watched Brianna's eyelids flutter, but Alex kissed me again.\n\n\"I told you earlier,\" she murmured, \"wrong person. This has nothing to do with him.\" We watched, our own fingers tight on each other's bodies, as Brianna let herself slip down Julius' cock, his hands spread along her hips to guide her: once she dipped down, then twice, deeper, until she at last sank all the way down, her bush resting on the bold muscles of his abs.\n\n\"Fuck,\" she marveled, her face and breasts bright red even in the candleflame, and her smile now had a look of abandon to it. \"You're so fucking big.\"\n\n\"Sure is.\" Leah was stooping slightly, watching where he split her. \"So hot.\" Brianna was ignoring her though, already rising and falling, the two lovers falling at once into a rhythm as bold and insistent as the air in their lungs and the blood in their veins. They arched and slid, faster and faster, his hands creeping up to stroke her ribcage. I grew aware that Alex' hand had resumed stroking my package, lightly, her fingertips tracing my length in time with the rhythm of Brianna's legs driving her up and down Julius' pole.\n\nI wondered what my face was showing. One glance at Leah and Nicole gave me a good clue. We were all completely enthralled, bound up with the two writhing bodies on the floor, all of us part of the act now. I felt Alex' moist breath once more alongside my face. \"You feel it now, Sean,\" she breathed. \"The magic.\"\n\n\"Yes.\"\n\n\"We all do. All the time. The magic of life, moving in its circle just like Brianna's hips. Like her tits; look at her nipples.\" She was right, the motion of that sexy body making twin loops of her breasts as she bounced on Julius. \"He'll reach up soon to cup them. He won't be able to help himself, they're so fucking sexy.\"\n\n\"I'd cup them too,\" I admitted, sighing, and then the curls of her hair against my shoulder shifted as she nodded.\n\n\"Of course. And you can feel them in your hands, can't you?\" She let my imagination work, then her curls shifted again. \"Now.\" As she said it, Julius gripped Brianna's swinging tits, black fingers on white flesh, the beauty breathtaking. \"Just like he can. That's the magic.\" She snickered. \"You can't quite feel her pussy gripping your hard-on, Sean, but you will. If you wish it.\" She laughed, the four of us watching rapt as Brianna sped up. I wondered whether I should ask my next question, but suddenly the idea of holding back made no sense.\n\nAlex, her hair around my neck as firmly as her fingers around my cock, wanted to answer.\n\nSo I took a breath, my hand sliding back off the cheek of her ass to rest once more on her waist. \"Are the girls always on top?\" I asked softly.\n\n\"No.\" She stirred. \"They're people, Sean. They fuck like other people fuck, however their needs drive them. You heard her command the Ladies to lay him down; Brianna often likes it that way. The Lady usually decides how it begins, and cowgirl's an easy start.\" Alex paused, staring hard. \"Soon, Sean, it'll be time for you to leave.\"",
        "\"What the fuck?\"\n\n\"I am Mistress of the Circle.\" Her hand gave my balls one more squeeze, then she let go. My dick felt suddenly colder. \"I have a role to play once they finish. Which they will, soon.\" Even I could tell, the two of them thrashing together now in a wild tempo, Brianna's ass crashing down onto his firm thighs with a fast, light clapping noise. The silver pendant danced on her chest. \"The magic is strongest when they orgasm simultaneously. That's what I train my ladies to achieve.\" She looked over at me. \"You'd like to visit again.\"\n\nDry-mouthed, I nodded in the dark. I was completely captivated.\n\n\"Perhaps.\" She leaned up and kissed me once more, lightly, on the lips. My whole mouth tingled. \"I'll think about it. Go, Sean.\" She smirked, her face softly beautiful in the flame. \"At least let go of my butt.\"\n\n\"Fuck. Sorry.\"\n\n\"No you're not. And neither am I.\" She nodded toward the loading-dock door. \"Merry met, merry parted, yadda yadda. Leave now. You're not ready for what comes next.\" She shoved me gently toward the door, but as I heard Brianna start a series of high-pitched moans, I didn't need the push. The whole room had taken on an obscure stuffiness, a thick foggy warmth that left me short of breath until my bulging cock led me out into the October morning sunlight once more.\n\nI jacked off that night, cumming harder than I had in weeks, spurting a massive load that shot all the way up my body and glanced off my chin. It left me drained, panting, and it came from nothing but the memory of the smell of flowers and spice. Took about two minutes, zero to sixty.\n\nI stared at myself in my bathroom mirror before bed and thought about what kind of trouble I'd found. And that I hoped I would find again.\n\n* * *\n\nI was tapping my feet, antsy while grading my AP essays during my prep period early the following week when I heard a diffident knock at my door. \"It's open!\"\n\nThe bold, chopping strides that brought Nicole Cross toward my desk left me squirming a bit in my squeaky chair. I'd always been a little nervous around her. There'd been rumors about her older sister; definitely, Nicole had inherited a little of Natalie's cool, smooth confidence. And now I was even more nervous: when I looked at her in her typical school outfit of yoga pants and a loose hoodie, all I saw was her, naked on her knees before Peter Nelson's needy dick. And I'd heard nothing at all from Alex since that day by the loading-dock door.\n\nI cleared my throat. \"Hi, Nicole. To what do I owe the pleasure?\"\n\n\"I'm just the messenger, Mr Deemer.\" She smiled with no warmth at all. \"I was heading up this way from Guidance, so. Here.\" She tossed a plain white envelope on my desk, sealed, with the school's return address pre-printed. \"It's from Ms Anthony. I guess.\"\n\n\"Ah.\" Not that I needed her to tell me: I knew the loopy cursive on the front of the envelope, spelling out Mr Sean Deemer, esq in bold purple ink. \"Thanks, Nicole. Need a pass or anything?\"\n\n\"Nope.\" She let her gaze linger on me a moment or two longer than necessary, but that was just the kind of thing she'd always done. \"Okay. Bye.\"\n\n\"Later.\" I watched her go, the envelope shaking slightly in my hand, waiting until she was all the way gone before I slashed the envelope open with my thumb. I was not surprised when a piece of purple stationery, folded intricately into a flower shape, fell out.\n\nI smoothed the paper and began to read the silver script I found there.\n\n* * *\n\nAnd so it was that I was standing there awkwardly under the bright fluorescents in the dank boiler room, feeling a little foolish, when a sudden clang from behind me made me jump. I heard the voice of the lively Brianna, all full of laughter, and a sudden stab of memory showed me the smile on her face as she'd ground the trimmed hairy glory of her pussy down hard over Julius Taylor's abs. \"I dunno. She said she had a surprise for us today. That's all I know.\"\n\n\"Crazy.\" It was Nicole. \"She never has us come down here after school like this.\" She chuckled. I heard the rustle of a plastic shopping bag. \"Good thing she fucks the janitors. It would be weird if they found us in the Circle.\"\n\nBrianna laughed, a sudden braying burst. \"You really thinks she does them?\" she snorted. \"Nah. She's got standards.\" The voices had been getting louder, the lump in my throat rising, and then suddenly there they were, the two girls in their normal school clothes with shopping bags full of thin gowns, smelly candles, and the other weird little implements of their ritual. \"Oh my god!\" Brianna stood there, the shock on her face morphing slowly into a mischievous smile as she realized who I was. \"Well well! Mr Deemer. Hi there.\"\n\n\"Why are you here?\" Good old Nicole, always direct, just like her sister had been. No fucking around. \"Who told you to come down here?\"\n\nBrianna, her grin spreading, turned shrewd eyes on me. \"Don't you see, Nic?\" She set her bags down carefully. \"You're our surprise, aren't you?\"\n\nI crumpled Alex' stationery in my pocket. \"Seems so.\"\n\nBrianna nodded, the grin staying right where it was. \"Well then.\" She let her eyes roll slowly down my body.\n\n\"Interesting.\" Nicole was pursing her lips, nodding slowly. \"So. I guess you kinda know why you're here.\"\n\nI forced a steady tone. \"Kinda.\"\n\nThat surprised a quick smile out of Nicole, gone as soon as it had appeared, and she arched an eyebrow. \"Very interesting.\" She pulled out her phone to check the time. \"Fuck. We need to get ready.\" She squatted on the ground, rummaging in her shopping bag, setting out candlesticks with practiced motions.\n\n\"We sure do.\" Brianna's voice was a dangerous purr. \"You just stand there, Mr Deemer. We'll handle everything.\" She winked. \"Mistress Alexandra's on her way then, right Nic?\" she asked\n\n\"Beats the shit out of me.\" Nicole dropped a box of matches on the floor by the candles, then fixed me once again with that dull, unreadable gaze of hers before she rose nimbly to her feet and, with no shame at all, began to strip. She did it quickly, as though she was getting ready for gym class, and despite everything I'd seen in this room already I instinctively tried to obey my programming and look away to give her the modesty she didn't want.\n\nOnly to find my view dominated by Brianna, who was doing exactly the same thing her friend was doing. \"You can look, Mr Deemer,\" she winked, the gleam in her eyes rather wild as she swept her shirt off over her head.\n\n\"You wouldn't be here if you didn't want to,\" Nicole added mildly, peeling her yoga pants down her legs. \"I know you didn't just randomly walk into the boiler room after school for fun. This was that message I delivered for Mistress Alexandra yesterday.\" It wasn't a question, her eyes daring me to disagree as she pushed her thong down past her knees.\n\nI paused, then pulled my eyes from her waxed pussy up to her grave eyes. \"I know why I'm here, Nicole.\"\n\n<br >\"You're here,\" Brianna put in, \"to help me with my fucking bra.\" She'd turned her back to me in her underwear, a matching burgundy set that looked expensive. \"Give me a hand?\" She collected her long hair and gathered up off her neck, bowing her head so I could get at the clasp. I hesitated, then took her brastrap between my fingers and snapped it apart. Her skin was warm and smooth, totally unmarked by anything but the straps themselves as she stepped away with a smile.\n\n\"You two are, um, remarkably free with your bodies,\" I ventured as Brianna's underwear joined Nicole's on the floor. Nicole turned grave, calm eyes on me as she pulled their things from the bags, seeming totally at ease. \"Is it weird, undressing with me here?\"\n\nNicole shrugged into her gown. \"Mistress Alexandra tells us we've got nothing to worry about. That our bodies are our power and our strength, our sword and our shield.\" She said it flatly, the rote words of a ritual written somewhere in whorled script, and I felt a chill go down my spine once more. She was staring at me with that unsettling look she had. \"We have nothing to be ashamed of, Mr Deemer.\"\n\n\"You certainly don't,\" I muttered, Brianna naked beside me. Nicole tossed her one of the diaphanous gowns.\n\n\"No,\" she agreed, scratching calmly at her pubes. \"These things are true because we say them. The words make it so.\" She peered at me as she smoothed the insubstantial garment over her full breasts. \"That's what she says, anyway.\"<br ><br >\"And you believe her?\" I was proud that I kept contact with her eyes.\n\n\"You do, too,\" she shot back. \"It's why you're here.\" I nodded; that was a tough one to argue with.\n\n\"Here,\" Nicole echoed quietly, \"in our Circle.\"\n\n\"'Sup, bitches!\" The doors clanged again. \"Sorry I'm late, but let's get going, am I right?\" Leah Fuller stopped short, her mouth agape, as soon as she saw me. Her backpack dropped to the floor unnoticed. \"Holy shit. Why are you here?\" She stared over at the others.\n\n\"Mistress Alexandra,\" Nicole smiled coldly, \"has sent us a surprise.\"\n\nLeah blinked. \"Sent?\" She glanced around into the shadows. \"She's not here? Fuck!\" She looked at her phone. \"It's almost time. What do we do?\"\n\nBrianna nodded thoughtfully. \"We light the candles,\" she said, low and even, her voice taking on that chanting quality I'd heard here before. \"We make the Circle. We feel our power.\"\n\nNicole's gaze pried me apart. \"We claim the man,\" she added softly. I hoped she didn't see my shudder.\n\n\"Oh yes.\" Brianna's smile was back. \"We certainly do.\"\n\n\"No shit,\" Leah giggled. \"Sounds like a plan.\" She had her shirt off before she was through with the sentence, a lycra number bottomed by a pair of tight shorts. She'd just come from PE, apparently. She sighed in relief as her firm little tits came free from the sportsbra, bouncing delightfully behind her big brown areolae. \"That feels nice,\" she gusted, hefting each breast; she giggled when she caught me looking. \"Glad you like the view, Mr Deemer.\"\n\nI went to look away again, obscurely, but then I thought about what Alex had told me: I have little use for shy men. So I decided I wasn't in the mood to be shy, looking meaningfully at her chest. She noticed, giving me a thin-lipped smile while she jiggled them for me. Nicole tutted off to the side. \"Get a room, you two,\" she grumbled, but then Leah was laughing loudly. \"Enough playtime. Get your robe on and let's light the candles. The sun will be out of alignment in like seven minutes,\" she went on, glancing again at her phone.\n\n\"Relax, Mr D,\" Brianna winked. \"You just need to stand in the Circle and keep your mouth shut until one of us tells you what to say, right?\" I nodded, my mouth shut; they didn't know I'd seen any of this. \"There's a ritual. Some words. There will be an explanation.\"\n\n\"Afterward,\" Nicole put in firmly. She had two more candles to light.\n\n\"Afterward. Yes.\" Brianna waved her hand impatiently. \"Mistress Alexandra is, like, super-cool. She helps us so much.\" She glanced down to where my cock had already begun to poke at my fly, suppressing a smile. \"She'll help you too, Mr Deemer, if you need it. No pressure.\" She took a deep breath, her eyes still on my package, then muttered to the others. \"It'd be better to wait for her.\"\n\n\"We've done this like a dozen times.\" I turned to see Leah with her back to me, sliding the gown over her garish hair; below, I didn't bother stopping my eyes from taking in the senior class' finest ass, naked and perfect, its symmetry stirring me deeply. \"She wants us to feel our power,\" she went on, pulling the flimsy garment down and turning, her hair in waves down her back. She strode toward me, looking down briefly to make sure the chalked circle on the concrete was still visible, then stopped facing me.\n\n<br >\"Good point,\" Brianna murmured. She nudged a candle to its final place with her foot, the air starting to take on an expectant air freighted with the smell of the candles.\n\nI stood there, gawking, Leah's thick nipples growing visibly hard within the big rings of her areolae as the candles lit her thin gown. She was eyeing me with an air of tough, eager excitement, nodding. \"Well, ladies,\" she purred, nodding at the other two, \"I'll be honest. I'm kinda amped. I'm definitely feeling my power.\" Her eyes found my dick, already beginning to tent my slacks, and she produced an extremely confident, womanly smirk. \"So is he. Good thing it's my turn today.\"\n\n\"No.\" The voice was sudden, ringing out low and husky from the shadows behind her. Leah turned. \"It's mine.\" Her face seemed to shimmer in the gloom as she appeared, prancing coolly into the light of the candles, her black gown drifting as she moved. \"Behold,\" she went on steadily, reaching out an arm to rest gently on Leah's hip. \"He is here, Leah.\"\n\nThe girl looked from me to her, her face unreadable, then sighed and bowed her head. \"He is, Mistress.\"\n\nI felt my jaw drop, Alex' hair corkscrewing in a living pile atop her lovely face. She looked up at me, her hand still resting lightly on Leah's robed hips. I heard the breathing of the two girls beside me, felt the heat of their bodies. The candles mesmerized me already, my thinking going all sluggish. \"Who is he, my ladies of the Circle?\"\n\n\"He is a man.\" The ritual was on track now, the three girls chanting together in that weird harmony that made my neck prickle.\n\n\"He is.\" I watched Alex' mouth form the words, her lips tempting me, my balls lurching at their fullness, the pleasure they promised. She nodded, her gown swishing as she stepped forward. \"You may prepare me, Lady Leah, when the time comes.\"\n\n\"Yes, Mistress.\" Leah moved behind Alex, passive now, engulfed in the power of the ritual just like the rest of us. My senses sharpened slowly; I scented the girls beside me, the coffee breath from Nicole, the faint sweat smell Leah had left behind from her last-period gym class. Riding over all of it, like a white thread on black lace, came the faint whiff of four vaginas, slick and hot.\n\nFeeling their power.\n\nShe stood, regal and gorgeous and very much present, some six feet away from me. At her nod, I felt Leah take my left hand, Nicole my right. Hers felt cold and small. The flicker of the candles made it look like Alex' hair was in coiling motion, Medusa-like. She fixed her massive eyes squarely on mine, her forehead wrinkled in concentration. I felt a tingling all through my limbs, a lightness of the body. When Alex spoke, her voice was a ringing challenge. \"Before us stands a man.\"\n\n\"Before us stands a man,\" came the girls' excited voices. The sound washed over me. I inhaled the smell of candles and pussy, my head lightening oddly.\n\n\"A man of strength.\" Alex waved one hand in a tight, controlled circle, her dark sleeve rippling like a flag.\n\n\"A man of strength!\" Nicole's fingers tightened painfully in mine, and I was amazed to find I was squeezing hers just as tightly.\n\n\"A man of passion.\" The other hand shot out, waving in a complicated pattern that reminded me of email sigs and the movement of Nicole's candle across Nelson's bare chest, seemingly ages ago now.\n\n\"A man of passion!\" Brianna drew closer to me, her breast heavy and hot against my arm.\n\n\"A man,\" she went on, her voice falling to a near whisper, \"who needs a woman.\"\n\n\"A man who needs a woman.\" Leah, behind Alex, stared at me with blazing eyes, and she followed boldly when Alex began to take heavy, determined steps toward me, passing through arms' length, her face and body coming into sharp focus from out of the gloom. I thought I could feel the hair on my head waving and twisting, my whole body vibrating. The head of my penis was a dull, painful ache as it shoved insistently up against the front of my slacks. Alex stopped when I could smell her breath, nodding up at me through lidded eyes as her voice became a savage whisper. \"I am that woman.\"\n\nThe girls were both nodding at my side. \"You are that woman.\" They were completely enraptured, the energy from their hands almost tangible against my palms.\n\nAlex licked her lips. \"Yes,\" she hissed, her thick lips curling into a sensuous smile. Never once had my eyes left hers, and nor would they. Until she took hers away. I was definitely feeling it now, the magic she claimed was hers, and she nodded once more as she understood my new awareness. \"You see now, Sean,\" she murmured softly, her voice like falling water, and I didn't even need to nod. She turned to her Ladies. \"Prepare my man,\" she commanded, almost curtly, and then at last I blinked as she whirled away to stride back to Leah.\n\nI shook my head, clearing it, and by the time I was able to think again Nicole had stepped in front of me. She had that same grave look she'd always had, but this time it seemed less cold than tense. \"Stand still, Mr Deemer,\" she whispered, that quick smile of hers flashing as she began to work on my necktie.\n\n\"Yeah.\" Brianna's tits pressed into my back, her hands sliding along the top of my pants until she began to unbuckle my belt. \"We'll take care of you.\" The belt fell aside around the time Nicole started on my shirt-buttons, and for an instant I lifted my eyes over her head to see Alex, boldly facing me while Leah, solemn now, chained the silver pendant around her neck. She seemed to be listening, Leah whispering as they watched me undress; I gasped as Nicole pulled my shirt apart, her hands plowing with unexpected tenderness over my chest. When I looked back at her, her eyes had gone wide.\n\n\"So hairy, Mr Deemer,\" she murmured, fascinated, her fingers light on my nipples for a moment before she moved them regretfully up to free my shoulders. At my waist, Brianna was busy undoing my slacks, and then with a seamlessness that spoke of long practice the girls switched places, Nicole dragging her fingertips down to take over my fly while Brianna stripped off my shirt from behind. \"Remember to breathe,\" she added, her nimble fingers sliding my zipper down. Bare-chested, I stood as Brianna went to her knees and began working at my shoes.\n\n\"Definitely breathe,\" she advised, and when I glanced down at her she was looking back up, both girls waiting to see my dick pop out. And I knew it would; I was rock-hard in my boxers, and Nicole found another tight smile as she let my slacks fall. \"I've never seen that much hair,\" Brianna whispered, smiling as she gazed up at me.\n\n\"He's a man.\" Nicole placed her little fingers just inside my waistband, my cock tenting the boxers ludicrously, waiting for her companion to get my other shoe and sock off. She glanced into my eyes to make sure I was ready, then let her eyes trace once more down my chest. \"I like it,\" she admitted, and then she was pushing my boxers down along my hard penis, slowly, both their mouths open. The elastic dragged along my root, then across the veins at the top of my dick; when I looked down, all I saw was a delighted look from Brianna as my cock sprang up, hard and firm, already at my full length. \"Yep,\" muttered Nicole as she nudged my boxers to my ankles with her foot. \"A man.\"\n\nI lifted my foot as Brianna removed my clothes, laying a confident hand on Nicole's hip to keep my balance. She was staring critically down at my cockhead, nodding thoughtfully with her lip between her teeth. Now, when I looked at Alex and Leah, my eyes were bold, the two of them whispering at the sight of my nude body.\n\nI had nothing to be worried about. And I knew it; I'm no Julius Taylor, but I keep myself in decent shape. And the Circle had no need of a shy man. So I stepped my feet slightly apart as Brianna collected my clothes and shoes, Nicole moving smoothly back to my side. I waited in the cool, flickering air of the old boiler room, on display.\n\n<br >Alex' eyes roved along my body, her head cocking in a half-nod. \"My man is prepared,\" she purred. \"Candle!\" and Brianna was ready by the clothing pile we'd all left; she glided toward Alex, her gown swishing, as Leah unleashed her Mistress' robe. It fell to the floor in thick darkness, leaving Alex standing there as nude as I. The woman waited two or three heavy breaths, then brought her hand to her closely-trimmed bush and slipped her finger inside herself.",
        "Then another finger.\n\nI know I gasped, Nicole nodding beside me. \"She's so fucking sexy,\" the girl breathed, and I felt my face slackening as Alex held her finger toward the ceiling.\n\n\"Mine is the power,\" she husked, and as Brianna repeated the incantation into a hushed silence, Alex gave me a small smile. She strode toward me on bare feet, sweeping the candle from Brianna's hand as she came, her eyes capturing mine once more. She paused at arm's length, her body lush and pale and ready for me, searching my face. She took a deep breath, her lips parting. \"Greetings, lover,\" she said, her voice a sibilant hiss. I watched, my eyes crossing, as her pussy-slicked hand rose to my mouth. \"Accept my offering.\"\n\nNicole leaned toward me to whisper in my ear, but I ignored her. \"I accept,\" I told them loudly, my mouth already opening; Alex and I kept strong eye contact as she rested her fingers on my lower lip. Just as I stretched my tongue out to taste her, I felt the glorious urgency of Nicole behind me, lithe and certain, reaching between my legs to cup my scrotum in her capable hand. Just the faintest tang of her vagina did I get on my tongue before Alex, her face impassive now, ran her finger slowly down through the forest of my chest, leaving her pussy juice and my spit shining on my hair.\n\nBoth she and I inhaled involuntarily when her fingers reached my root, paused there, then drew slowly along the full length of my reaching cock, every movement of her nails on my sensitive skin a slow fire as Nicole, smiling from over my shoulder, kneaded my balls. \"So,\" Alex began, her voice barely audible through the pulse pounding in my temples, \"do you offer your seed?\"\n\nNicole knew now that she didn't need to prompt me, the clever little vixen. \"Yes,\" I replied, my voice even, and Alex raised her chin. Her dark nipples reached for my chest, straining.\n\n\"Then I accept,\" she smirked. She leaned back then, releasing my meat, and Nicole cleared her throat behind me.\n\n\"Open your legs, Mr Deemer,\" she murmured, her voice strangely formal now as her hand warmed my ballsack, and I pushed my feet wider apart. \"Good.\" The candle was already moving, the flame drifting along my skin, that intricate pattern captivating my eyes and making my brain swim. I was paying attention to nothing but the flame, Alex being cautious not to singe my hair even as the candle fell lower, and by the time she had it down along my penis I could see the scarlet flush reaching down from her face to dapple her full tits, the heat of the candleflame passing between my legs as Alex knelt. I trembled with need, looking down at where her face craned up toward mine.\n\n\"Feel the heat in your loins, Sean,\" she whispered, and Nicole from behind my ear joined her two friends in the chant.\n\n\"Feel the heat in your loins,\" and then I felt Nicole crouch behind me, the warm glow passing swiftly beneath my crotch as the girl whisked it away. And then she rose, stepping back with her candle, leaving just me and my hard-on with Alex on her knees before me; Alex wasted no time, her rich body arching, her breath drifting along my veiny cock as her fingers replaced Nicole's on my balls.\n\n\"Mmm,\" she moaned, looking up at me intensely. She gave my head a kiss, my precum dappling her mouth. \"I claim you.\" She said it clearly, distinctly, and I felt a surge of pride and lust as, in the corner of my view, the three girls gathered behind their Mistress, each with a candle. I took this as a sign that I could move, and within a second my own dry fingers were drifting along her high cheekbones, sweeping back her luxuriant curls, then twining in her hair as she swept my dick straight into her mouth.\n\nShe was wet and hot and welcoming around my shaft, her glossy lips closing firmly just beneath my head, sucking hard as her tongue lashed my slit. The girls smiled at each other when I groaned. I felt my dick spasm, the euphoria beginning as a warm wave of peace that swept over me: I was in control, riding a sexual wave, and doing it skillfully. The woman whose hair was wadded in my hands? She and I were in tune, synched up, both of us wanting the same thing and both of us knowing we could give it to the other.\n\nAll this, in her first suck.\n\nShe tickled at my balls, her other hand creeping around to feel my ass as she took me deeper. When she swallowed my head, her eyes locking on mine, I felt no strain and heard no gag; no, she just gulped me down, the pressure of her throat a gentle vise around the tip of my dick. I know what she saw in my eyes, gazing down at her, because I saw the same thing in hers.\n\n\"Holy fuck,\" one of the girls muttered low. \"Look at them!\"\n\nI threw my head back, grinning beatifically, then lowered a languid arm to cup her solid, heavy breast. It was hot in my palm beside the twinkling silver pendant. She keened around my cock, moving one shoulder forward to give me more of a handhold, and I sighed as the promise of that unbuttoned blouse in my classroom during lunch was finally fulfilled. I felt her nipple, hot and stubborn in my fingers, then the ripple in her mouth on my penis when she giggled at my touch.\n\nShe held me there, deep, for a pregnant few seconds before sliding slowly back off me, my cock a glistening pillar emerging from her mischeivous lips. She was smiling up at me as she kissed my tip, the drool running down her chin. \"Yum,\" she told me with a wink, her voice low, and then she was running her tongue swiftly down the side of my shaft to dive beneath, her mouth hot as it surrounded my sack.\n\nI love having my balls sucked. And, of course, I hadn't had to tell her. That's what her magic was all about, and as she curled her tongue back behind the wrinkled surface of my nutsack and sucked me powerfully into her mouth, Leah broke off from the group and came sauntering over.\n\n\"I'll just help keep this out of the way,\" she whispered with a greedy smile as she stood aside and reached boldly down to lift my dick off her Mistress' face. Her hands held me softly, almost tenderly, the heat of her body a glow in the chalked circle as Alex serviced my balls. Leah spoke again as her spit rolled down my inner thighs. \"Um, Mr Deemer? She gave me some words for you to say. Like, when you're ready to do it?\" Her breath was moist in my ear, her hand gentle as she pulsed her fingers gently beneath the head of my dick. Her other hand drifted along my chest, the pattern complicated. \"She wants you to say, 'Lie down, that I may fill the circle.' Got it?\" I nodded, and she squeezed my butt. \"Okay. Nice and loud, right?\"\n\n\"Right,\" I grated, her Mistress' mouth slithering up my shaft to displace the girl's fingers. She kissed me on the cheek one time.\n\n\"Remember the words,\" she winked, and then, her work done, she headed back to rejoin the other two. Just in time, too, for as I looked down at Alex, her nipple stiff in my palm, I knew suddenly that this was enough. I allowed her to take me one last time, down to the root, her chin a salivated weight against my balls while she buried her nose in my pubes, and then she looked into my eyes and we knew that it was time. She backed slowly off me just one more time, then rose and stood tall with her spit all over her chest.\n\nI drew myself up, my voice ringing out. \"Lie down,\" I commanded, that same feeling of arrowed lust driving down toward my balls, \"that I may fill the circle.\"\n\n\"And I,\" Alex called, her voice clear, \"am ready to be filled.\" She was sex incarnate, her curving skin ruddy and moist and inviting, her own thighs already sheeted with her juices. She turned to face her ladies, then backed into me. I looked down, holding my breath at the sight of my cock nestled between the soft cheeks of her ass.\n\n\"Today, I wish for this man to claim me,\" she called loudly, and even through the haze of my lust I heard the girls gasp. \"This is a new ritual for this Circle, and a rare one.\" She reached behind herself, her fingers fierce on my wet balls. \"Pay attention, my Ladies.\" She leaned her head against my chest, our hair tangling, and murmured up at me. \"You'll know what to say,\" she told me confidently, and then with a final squeeze she released me and strode forward to lie in the center of the circle of candles, her body perfect and quiescent and ready on the swept concrete.\n\nI stood, facing the girls, feeling for the first time that I was a part of them. Their eyes accepted me, and some of them did even more: Brianna had her hand buried in her own snatch, rubbing hard. I gazed down at Alex and she was right: the words came. \"I claim you, Mistress Alexandra. To close the Circle.\"\n\n\"To close the Circle.\" The girls sounded awed as they repeated my words, and Alex laid her head back, her hair billowing out around it, and opened her legs for my body. I saw her, spread wide and wet and red, her hand stroking lazily at her clitoris as she awaited me. My cock led the way, feeling like it never had before; I could feel it pulsing, alive and virile, ready to burst into this woman and make her mine, and I knew every eye in the room was riveted to its hardness. I knelt, not even caring that the floor was filthy.\n\n\"She... she is ready,\" Leah gasped, completely forgetting her role here, but since nobody else was paying attention to anyone but Alex and I, her words fell into the thick silence. \"Obviously,\" she added, her own face scarlet.\n\nAlex stared at me hard, feral, needing no words as her fingers found the raw pink lips of her pussy and spread them wide. I heard a sigh from one of the girls when, nodding with my teeth clenched, I propped my arms alongside Alex' sweaty face and felt my heavy penis thud gently against her belly. I wanted her to kiss me, and as if I'd said it she nodded, arching her head up, those sensual wet lips opening to receive my tongue even as her other lips opened around the blunt purpled head of my questing dick.\n\nDimly I was aware that the Ladies had drifted around us, a loose three-way circle as I thrust deeply into Alex. Her face curled up in ecstatic strain as she felt me hilt myself, her fingernails digging deeply into my forearms, and she couldn't stop a low, hard moan into my mouth. She tasted like my dick as I stayed within her, feeling the firm walls of her pussy holding me, caressing me, then pulsing against me as her body urged mine to cum.\n\n<br >She ripped her lips from mine. \"Claim me!\" she hissed fiercely, her eyes wide and her arm locked around my neck as my butt rose to drive back into her. That second thrust was savage, a brutal meeting of our bodies that pulled gasps from all five of us, her hips already arching to meet mine. I remembered Brianna and Julius, the speed and ease with which they'd found their beat, and it didn't surprise me now as the Circle seemed to provide my lover and I with a metronome of our own, our skin meeting in hard, eager claps as we strove to please each other.\n\nShe fixed my face on hers, our bodies grinding together as close as possible, her hand clamped to my straining ass as I pounded into her. \"Take it,\" I grunted, and she just laughed breathlessly, her body meeting mine. She felt good inside, her pussy clinging to me as if she never wanted to give me up, but then welcoming me back with each insistent thrust.\n\n\"Give it,\" she winked back, the joy bubbling up in her voice, both of us locked into each other. I heard one of the girls crying out, the joy of a worshipper in a church; I felt the hands of another one resting on my ass, her shape crouching beside me, all three of them wanting to feel a connection to the two of us as we bucked together. <br ><br >She was right. There was magic here.\n\n\"Yes. There is,\" she whispered, again as though I'd said it, her voice coming in huffed rhythms dictated by my thrusting cock, and then as our lips found each other again and my swinging balls battered her pussy lips, I knew it was time: there was something in the sway of her tits, the wetness of her mouth, the demanding warmth of her glorious pussy that commanded me, telling me the time was now.\n\nI looked into her eyes, my straining head managing a nod, the warmth and the smells and the sounds and the flames melding together in my head as her feet rose high above my ass, opening herself fully. My hips swung slower, more fully, deep-dicking her in the closing stages as her eyes fluttered closed and her mouth opened in a soundless circle...\n\nHer body devoured my cum, sucking it powerfully from my balls in a series of white-noise spurts that rocked me to my core. I'd never been so eager to inseminate a woman, her body needing me, deserving me, and my body craving hers... claiming it, truly. Her throat started working soon after mine did, my sobbing moan and her keening wail broadcasting our orgasm to the hushed Circle, the girls around us staring down in adoration.\n\nFour, five, six times I sent my semen deep into Alex' body, each time a strong pulse as powerful as the one before, overwhelming her pussy as it fluttered madly along my length. She tightened herself against me, every muscle taut as she fought through her own climax, the two of us battered and sore with the intensity of what we'd done to each other.\n\nShe craned up, her eyes fluttering open, and I saw something warm in there I'd not expected, the clutch of her fingers on my flesh more tender than I'd have imagined. In her kiss now I felt wistful passion, with a sense of deep abandon that humbled me even as my own kiss gave it back to her. Vaguely I grew aware that someone was weeping, someone else's hand on my back trembling with emotion.\n\nAll of us shared this.\n\nAlex took a deep breath, her body still holding tight to mine. \"Ladies. I've told you that every Circle has a Mistress.\" She looked up at me, her chest shining with sweat, her nipples still thickly engorged as she pulsed her pussy strongly around my still-twitchy cock. \"What I've not told you is that some Circles, the strongest Circles, also have a Master...\"\n\n* * *\n\nThank you for reading. I hope you enjoyed it. Please remember to vote for all your favorite contest entries!"
    ],
    "authorname": "Voboy",
    "tags": [
        "not scary",
        "enchantment",
        "halloween",
        "high school",
        "magic",
        "ritual",
        "supernatural",
        "witches"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/filling-the-circle"
}