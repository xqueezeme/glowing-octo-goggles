{
    "title": "Mary and Alvin Ch. 29",
    "pages": [
        "Nina\n\nAlvin stood on the deck of the Annie Mac, looking up at the rigging. Bonita sat on the top spur, her legs wrapped around the main mast.\n\nMoosie sat at his feet and looked up as well. He gave out one sharp bark.\n\n\"Easy, bub,\" Alvin told him, \"she's just fine.\"\n\nBonita unhooked the tangled line and the sail fluttered down.\n\nLaura walked out of the boathouse and toward where Annie Mac stood on her trailer.\n\n\"Jeezum, Alvin,\" she said, \"you do know it ain't legal to have an eleven year old kid working in a boatyard, right?\"\n\n\"She ain't working, she's taking sailing lessons.\"\n\n\"Uh huh, even though she's known how to rig for a couple of years. Anyway, I've got Eli Littlefield from Rockport on the line. Figured you best talk to him.\"\n\nBonita shimmied down the mast and hopped on to the deck next to Alvin as he took the phone from Laura.\n\n\"What's it about?\" he asked, holding his hand over the phone.\n\n\"A boat rental,\" Laura said with a shrug.\n\n\"It's October. Wicked late for a rental, ain't it?\"\n\nLaura shrugged again. Alvin raised the phone to his head.\n\n\"Hey, Eli, how's the boatyard business down in Rockport?\"\n\n\"Good,\" Eli told him. \"But I got a bit of a situation, though. Family of leafpeepers, here on vacation. They took a mind to seeing the color from the water side. I thought, well alright, a little last bit of income for the season, so I booked them, but when I put my boat back in the water, I found she must have gotten banged or something coming out, sprung a leak in the hull.\"\n\n\"You ain't got another boat to rent them?\"\n\n\"Nope, everything is wrapped and put up for winter. So, I thought if you still had anything in the water, you might like the business. You renting out that ketch you bought off Skip Moody?\"\n\n\"Well, in fact, we were just putting her up. These folks experienced?\"\n\n\"Husband says he's licensed by the state of Ohio.\"\n\n\"Ohio? So this is some dubber been rowing on a pond?\"\n\n\"No, says he's got extensive experience on the Great Lakes.\"\n\n\"Hold on a second, Eli.\" He held the phone against his chest. \"He run this by you?\" he asked Laura.\n\nShe nodded. \"Long as they stick to the bay, I don't see the harm.\"\n\nHe spoke to Eli again. \"How long they looking to rent?\"\n\n\"A week, they said. Talking about cruising the coast around MDI and what not.\"\n\n\"How's the weather outlook?\"\n\n\"Well, there was that tropical storm coming up from Bermuda, but that's veering off to the east.\"\n\nAlvin scratched his head and looked at the sky. There was not a cloud in sight. \"Alright then,\" he said, \"send them up here.\"\n\nHe handed the phone back to Laura. \n\n\"Guess what?\" he said, turning to Bonita, \"That sail we just took down? Let's get her back up.\"\n\nThey rehung the sail and Alvin and Laura hooked the trailer to Alvin's pickup, and drove it to the town landing. With Bonita as his guide, Alvin backed down the launch ramp and put Annie Mac back in the water. They had just finished when a tan SUV pulled on to the landing and parked.\n\nThe man who got out was tall, slightly paunchy. He walked around the vehicle and opened the passenger door for his wife. As she stepped out, the rear door opened, and a boy of about ten climbed out as well.\n\n\"Are you Mister Faulkner?\" the man asked as Alvin and Bonita walked up the ramp.\n\n\"Yes, sir,\" Alvin replied, extending his hand, \"And this is my granddaughter, Bonita.\"\n\n\"Bonita Maria Ortega-Faulkner,\" Bonita said with a tone of pride that made Alvin grin.\n\n\"I'm Jim Mitchell,\" the man said as they shook hands. \"This is my wife, Elaine, and our son, Jamie.\"\n\nAlvin shook hands with the two of them, then he led Mr. Mitchell into the harbormaster's shack to go over and sign their contract. Mrs. Mitchell wandered over to the railing and looked out across the harbor.\n\n\"I saw you on the boat,\" Jamie said to Bonita, \"Do you sail a lot?\"\n\n\"Yeah, I'm my Papa's first mate.\"\n\nJamie looked impressed. \"How old are you?\"\n\n\"I am eleven. My birthday was last month.\"\n\n\"My Dad takes his boat out on Lake Erie a lot, but I only went a few times.\" He blushed. \"I don't really like it.\"\n\nBonita shrugged and looked over her shoulder toward the shack, hoping to see her grandfather come out. She was getting hungry and would much rather go home and get lunch than stand here listening to this flatlander kid.\n\nJamie cleared his throat. \"Can I ask you a question?\"\n\n\"Sure,\" Bonita said reluctantly.\n\n\"Are there sharks out there?\"\n\n\"Yeah, of course. It's the Atlantic Ocean, right?\"\n\n\"You ever see one?\"\n\n\"I've seen blue sharks a bunch. And one time a honkin' big basking shark swam right under our boat. They just eat plankton and stuff though.\"\n\nJamie shivered, and Bonita briefly considered teasing him, telling him that he ought to be more worried about giant squids or poisonous jellyfish, but she knew her grandfather would not like that, and there was nothing she dreaded more than Papa's disapproval.\n\n\"Sharks don't come close to shore much,\" she reassured him, \"and they won't bother you. It's not like you're going swimming. That water is wicked cold.\" \n\nAlvin and Mr. Mitchell came back out of the shack, followed by Ralph Ennis, the harbor master.\n\n\"I want to say again,\" Ralph was telling Mitchell, \"Keep a close eye on the weather. If you stick close to shore, you'll never be more than an hour or so from a safe harbor.\"\n\n\"I think we will be okay, but thanks,\" Mitchell replied. He called to his wife and son, who came to join him.\n\n\"Hey!\" Bonita called to Jamie as he walked away. He turned back to her. \"Stay out of the water, bub. You'll be fine.\"\n\nHe waved at her and disappeared down the ramp.\n\n***\n\nMary took a bite of cinnamon doughnut, then brushed the crumbs off her sweater. Jennifer was collecting money from a young couple. Their two little boys were dancing from foot to foot at the entrance of the maze, eager to explore it's depths.\n\nThe corn maze had been Theo's idea. He had seen one over in Kennebec County, and thought it might be a good idea for the farm, a way to bring in some extra income after the crops had been harvested. Mary was skeptical at first, but had to admit that he had been right.\n\nWhen the last ears of corn had been picked, she sat down with Jennifer and plotted out an intricate pattern of pathways, which Theo and Yusef cut through the brittle brown stalks with riding mowers. At every dead end, they mowed a small clearing. The whole family gathered for a scarecrow making party, and each clearing had it's own straw stuffed guardian. The pathways were decorated with hay bales and pumpkins and pots of chrysanthemums in many colors. Placing the flowers had been one of Mary's tasks, and she did not let anyone in on a secret; the red mums marked the most direct path through the maze.\n\nJennifer had set up the farmer's market stand beside the entrance. In addition to admission to the maze, there were pumpkins and gourds for sale, cups of fresh apple cider, and Jessica's doughnuts.\n\nThe maze was a hit from the first day it opened. Alvin and Tim had put up signs at crossroads all across the county, and the girls had handed out flyers at school. Mary and Jennifer were already kicking around ideas for how to make it even better next year.\n\nAlvin's truck bounced into the driveway. He stopped and let Bonita hop out. Moosie had been sleeping under the table, and ran to her. \n\n\"Where's Hannah?\" Bonita asked Mary.\n\n\"She's up at the house, reading a book, I guess,\" Mary said.\n\n\"She always wants to be inside,\" Bonita frowned. \"Come on, Moosie,\" she called, and ran into the maze with her dog at her heels.\n\nAlvin parked in the dooryard, then walked back down to the maze.\n\n\"I thought you'd be home sooner,\" Mary said when he approached.\n\n\"Would have been, but we got a call on a rental, so we had to put Annie Mac back in the water.\"\n\n\"Really? In October?\"\n\n\"They wanted to see the fall colors from the water side.\"\n\n\"Oh, that's kind of a nice idea.\"\n\nAlvin looked at Jennifer. \"Can I steal your helper for a while?\"\n\n\"Sure,\" Jennifer said.\n\nAlvin held out his hand to Mary. She took it and stood. He picked up a chocolate doughnut from the table and took a big bite as he led her into the maze. They walked along, holding hands and swinging their arms.\n\n\"You seem in a mighty chipper mood,\" Alvin said.\n\n\"I love autumn in New England,\" she said. \"I love the color and the cool nights and the smell of wood fires. And you, I love you.\"\n\nThey passed a turnoff and Alvin pulled her toward it.\n\n\"That's not the way out,\" she said.\n\n\"Good.\"\n\nHe led her into the alcove in the corn and wrapped his arms around her. They could hear a child laughing and Moosie barking, but both sounded far away.\n\n\"How can it be,\" he asked her, \"that when I married you, you could not have been more beautiful, but now, you are?\"\n\n\"Oh sweetheart.\" She leaned in to him and they kissed deeply. Alvin ran his hand down her back and over her hip.\n\n\"Now, don't get handsy\" she admonished him, \"There are kids running in and out of here.\"\n\n\"Later?\" he asked her.\n\n\"Sure, baby, tonight.\"\n\nBut by then, they would be concerned with other matters.\n\n***\n\nAlvin called up the stairs. \"Hannah, supper is ready, come on down.\" \n\nHe went to the kitchen and sat at the table. Mary set a plate in front of him; roasted pork loin, baked acorn squash and steamed broccoli. He wrinkled his nose at the broccoli but said nothing. It was a fight he had lost long ago. \n\n\"What's keeping her?\" she wondered, putting Hannah's plate down at her seat. She waited a few seconds, then went to the bottom of the stairs and called. When she heard no answer, she told Alvin to go ahead and start eating, and climbed the stairs.\n\nThe door to Hannah's room was locked. She rapped and said, \"Hannah, supper's ready, come eat.\"\n\nShe heard a muffled response, but the door did not open.\n\n\"Come on, honey, it's getting cold.\"\n\nThe door opened and Hannah brushed past her without a word. Mary followed her down the stairs.\n\n\"Honey, why was your door locked?\"\n\n\"To keep people out,\" Hannah muttered. She flopped into her chair and stared at her plate. Mary sat down across from her.\n\n\"Something wrong with your food, honey?\" she asked.\n\nHannah shrugged and took a bite of her squash. Alvin reached over with his fork and stole a bite from her plate.\n\n\"You got your own, Papa,\" she scowled.\n\n\"I'll eat 'em both if you ain't careful,\" he said.\n\n\"Go ahead,\" she muttered.\n\nMary sighed. \"You don't have to eat your supper if you don't want to,\" she said, \"but don't think you're getting a snack later.\"\n\n\"Don't care.\"\n\n\"Well, alright then,\" Alvin said, \"If you ain't going to eat your supper, you might as well go back to whatever is more important.\"\n\nHannah pushed her chair back and left the kitchen.\n\n\"She's practicing for being a teenager,\" Mary said.\n\n\"Oh yeah. When Charlotte was about her age, she decided she would only eat white food. That didn't last long.\"\n\nAlvin's phone began to buzz. He took it from his pocket and looked at the screen.\n\n\"You know I told Hannah that we didn't do phones at the table, right?\"\n\n\"Good thing she went away then. It's Laura, I better take it.\"\n\n\"Alvin, you checked the news?\" Laura asked immediately when he answered.\n\n\"No, we're just having supper.\"\n\n\"Turn on the TV. They are talking about Nina.\"\n\n\"Who's Nina?\"\n\n\"Hurricane Nina, the one that slammed Bermuda.\"\n\n\"That's downgraded, and moved out to sea.\"\n\n\"Well, the bitch turned on a dime and is barreling right into the Gulf of Maine.\"\n\n\"Jeezum.\"\n\n\"Yeah.\"\n\n\"Meet you at the wharf.\"\n\n\"What's the matter, honey?\" Mary asked after he had hung up.\n\n\"That hurricane. Nina. Supposed to be headed out to sea, but it's turned and is coming our way.\"\n\n\"Oh dear. Is it going to be bad?\"\n\nAlvin shrugged. \"Hard tellin', not knowin', but we ought to get everything battened down in any case.\" \n\nMary cleared the table while Alvin went into the living room and turned on the television. \n\n\"She's moving fast, \" he told Mary, repeating what he learned, \"She'll be in the bay by morning.\"\n\n\"What can I do to get ready?\"\n\n\"We'll be fine here, we've got a generator and plenty of food. Just make sure anything you want to keep ain't out where the wind can take it.\"\n\nHe put on his work shoes and jacket, kissed Mary and went out to his truck. He thought about fetching Bonita to go with him, but decided she'd worked plenty that day. Let the little girl be a little girl.\n\nLaura was already at the wharf when he arrived. They cleared the yard of anything that might blow away and checked the wrapping and supports on all the stored boats. They put tape on the windows of the boathouse and the diner.\n\n\"You think we ought to pull SeaJay out of the water?\" Laura asked.\n\nAlvin nodded, then stopped. \"No,\" he said, \"Let's make her snug but leave her at her berth.\"\n\nLaura frowned. \"I don't see why we don't get her out. The season's over.\"\n\nAlvin shook his head. \"I might need her.\"\n\nAs he looked out over the still calm water of the harbor, all he could think of was that the Mitchell family was still out there somewhere.\n\n***\n\nIt was nearly midnight when Alvin got home. Mary was dozing on the couch, but sat up as he entered. He kicked off his shoes and sat down beside her.\n\n\"You must be so tired,\" she said, holding his hand and stroking his forehead.\n\n\"Well, we got everything locked down. Should be in good shape.\"\n\n\"Well, that's good. But you still look worried. Do you expect it to be that bad?\"\n\nHe shook his head. \"No, not really. But Mary...that family from Ohio...They are out there on Annie Mac.\"\n\n\"Well, I'm sure they will know to get to shelter, won't they?\"\n\n\"I'd sure hope so. Ralph got them on the radio and warned them. But you know, I'm not sure that he understands that he isn't on Lake Erie now. I just hope he's taking this as seriously as he should.\"\n\n\"Did you try to call him on the phone?\"\n\n\"Yes, but you know how hard it is to get a connection out there.\"\n\n\"Well, sweetie, all we can do now is wait it out. Let's get to bed.\"\n\n\"Sounds good. How's our moody princess?\"\n\n\"Still hiding in her room.\"\n\n\"You think there's something serious going on?\"\n\n\"I don't know. She knows we are here when she's ready to tell us. I don't want to push her and make her defensive.\"\n\nAlvin agreed and stood up, wincing a little bit as he did so.\n\n\"Your back bothering you, honey?\"\n\n\"It's a touch sore.\"\n\n\"You go on up, I'll be along in a few minutes and give you a back rub.\"\n\nShe plugged in her phone and tablet to charge. They had the generator, but there was no point in drawing on it any more than they needed. She shut off the lights and looked outside. The trees were swaying in the wind, but there was no sign of rain yet. By the time she got upstairs, Alvin was fast asleep.\n\nShe did not sleep well herself. Her mind would not shut down. She thought about Hannah. Something was upsetting her little girl, and she could not get her to say what it was. And she worried about Alvin. She knew that he would fret constantly about the Mitchells, even though there wasn't anything he could do. But he was Alvin Faulkner, he had to be the one who made all things right. That has to take a toll on a person, she thought, emotionally and physically. \n\nEventually she drifted off to sleep, but it was not yet dawn when the sound of the rushing wind woke her up. Alvin was standing by the window, looking out.\n\n\"Come back to bed, baby,\" she whispered.\n\n\"I told him to keep close to shore. So did Ralph. Ralph told him right out to watch the weather.\"\n\n\"And I'm sure he did, honey.\"\n\nAlvin sat on the edge of the bed. \"I hope to hell he did.\" He stood up. \"I'm going to check the news.\"\n\nMary laid back and sighed. After a minute she got up, pulled on her robe and followed him downstairs.\n\n\"You want some coffee, love?\" she asked.\n\n\"All right,\" he nodded, scanning through the TV channels.\n\nShe brought him a cup, then curled up on the end of the couch. The early news came on, and Nina was the lead story. Rain began to patter against the windows as they watched video of high waves crashing over the Rockland breakwater and of fallen trees blocking roads on Mount Desert Island. \n\nHannah came down and stood at the bottom of the stairs. She watched the news for a minute.\n\n\"There's not going to be school today, is there?\"\n\n\"Definitely not,\" Alvin said.\n\n\"Good,\" she muttered, then went to the kitchen.\n\n\"First time she ever didn't want to go to school,\" Alvin chuckled.\n\nMary grinned, but Hannah's remark troubled her. She always wanted to go to school. In a few minutes, she came back, eating a slice of toast with peanut butter and carrying a large glass of orange juice.\n\n\"Can I go down and see Bonita?\" she asked, \"I don't want to be here alone all day.\"\n\n\"Don't we keep you entertained?\" Alvin asked, feigning offense.\n\n\"Well, can I?\"\n\n\"No,\" Mary said emphatically.\n\n\"Why not?\"\n\n\"Hmm. I don't know. The hurricane, maybe?\"\n\nHannah heaved her shoulders, then stomped up the stairs. When she reached the top, she shouted down, \"It's only a tropical storm.\"\n\nMary stretched out on the couch and dozed. When she woke up, Alvin was asleep in his recliner. She got up and went to the kitchen. There was ground beef in the refrigerator. She decided she would make a big pot of chili. It seemed like a good day for it. While she was cooking, the power went out. The generator came on automatically a minute later, but the lights were noticeably dimmer.\n\nAlvin came into the kitchen.\n\n\"The generator wake you up?\" Mary asked.\n\n\"Yes it did. I suppose it's meant to.\"\n\nHe went through the mudroom to the barn. Rivulets of water were running under the door. He had stacked a good supply of firewood against the wall and he gathered up a large armful. He lugged it into the house and started a blaze in the fireplace. Once it was burning well, he turned down the thermostat and shut off the television. No use wasting the fuel in the generator, he thought, there's no way to know how long we'll be without power.\n\nMary let the chili simmer and pulled the rocking chair close to the fireplace. She had been waiting for a chance to start Rachel's latest book, and there were worse ways to spend a stormy day than sitting by the fire with a book.\n\nHannah and Buster came down the stairs. \"It's cold in my room,\" she whined.\n\n\"Your father turned the heat down,\" Mary said without raising her eyes from her book.\n\n\"Why?\"\n\n\"He thinks the hurricane might blow away all the oil in New England and we will freeze to death this winter.\"\n\n\"I just think it's prudent to conserve what we've got,\" Alvin said.\n\n\"And how much have we got?\"\n\n\"Three quarters of a tank.\"\n\nMary shook her head and rolled her eyes.\n\n\"Can I watch TV?\" Hannah asked.\n\n\"Sure, go ahead,\" Mary said. Alvin started to object, but shrugged and sat back in his recliner.\n\nThe rain continued all day. Occasionally the wind would die down, but soon, it would begin to roar again. Every now and then, a loud bang or a dull thump would come from outside. Mary would startle each time, but Alvin showed no concern. \"This house has stood here for more than a hundred and fifty years,\" he said, \"It's seen plenty of storms worse than this.\"\n\nLate in the afternoon, as the gray sky was fading to black, there was a rap on the door. Alvin opened it, and Moosie ran in and began to shake, spraying him with water.\n\n\"Bad Moosie,\" Bonita said, following him in. Jennifer was behind her, holding an inverted umbrella. Danni brought up the read, wearing her rain slicker and plastic wrapped deputy hat.\n\n\"The wind fucked up my umbrella,\" Jennifer grumbled, stashing it in the corner. \n\n\"Would you like some chili?\" Mary asked, \"I made a huge pot.\"\n\n\"Hell yes, that sounds great,\" Jennifer said, \"Danni has to go on duty in a little bit. I thought maybe Bonita and I could hang out here.\"",
        "\"Mama Jen is scared of the storm,\" Bonita said. \"I'm not.\"\n\n\"I'm not scared of it,\" Jennifer replied, \"I just don't like it.\"\n\nThey crowded around the table and filled their bowls. \n\n\"I hate to think you'll be out in this all night,\" Mary told Danni. \"You know, I could fill a thermos with chili, you could take it with you.\"\n\n\"That would be great,\" Danni said, smiling.\n\nAlvin sighed.\n\n\"What's wrong, Daddy?\" Jennifer asked him.\n\n\"Just worried about those folks rented Annie Mac.\"\n\n\"Nobody has heard from them?\" \n\nHe shook his head. \"Harbormaster has tried a couple of times.\"\n\n\"Maybe they got to port and checked into a hotel, so they aren't hearing the radio,\" Mary suggested.\n\nAlvin shrugged and finished his chili. When everyone had eaten, Danni prepared to go out into the storm.\n\n\"It seems like it let up some,\" Jennifer said.\n\n\"It's a lull,\" Alvin said, \"It ain't ending anytime soon.\"\n\nAfter Danni left, they gathered in the living room. Hannah lugged pillows and blankets down from her room and she and Bonita, along with their dogs, nested on the floor near the fireplace. Alvin made a big bowl of popcorn and the family spent the evening watching movies. When the girls fell asleep on the floor, Alvin and Mary turned off the television and the lights. Jennifer bedded down on the couch, while they went upstairs to bed.\n\nIt was chilly in their room and they cuddled close together. Mary kissed the side of Alvin's face and ran her hand across his abdomen, but she could tell that he was not in an amorous mood, so she settled for snuggling.\n\nShe woke up several times during the night. The sound of the wind was louder than ever. She had a sense that the whole house was swaying and was not sure if it really was, or if it was only in her half awakened imagination.\n\nShe finally fell into a deep sleep, and when she awakened, there was bright morning sunlight in her eyes. She sat up. Alvin was not in the bed, but she could hear the shower running. She got up and went downstairs.\n\nHannah was sitting at the kitchen table, eating a bowl of cereal.\n\n\"Where are Jennifer and Bonita?\" Mary asked her.\n\n\"They went to go check on the animals.\"\n\nMary opened the front door, saw the pig on the porch and slammed the door shut again.\n\n\"Honey, there's a pig on the porch,\" she called up the stairs.\n\nAlvin stuck his head out of the bathroom. \"Did you ask him what he wants?\"\n\n\"You're not as funny as you think you are,\" she muttered as she turned back to the door. The pig was still there when she looked out the window. It was munching on a small pumpkin.\n\nHannah walked up beside her and looked out. \"What happened to the maze?\" she asked.\n\nMary raised her gaze and saw, with a sinking feeling, that the storm had destroyed the corn maze. Here and there, a few ragged stalks still stood, but most had been flattened to the ground by the high wind and driving rain. The dooryard was strewn with dead brown corn leaves and clumps of wet hay, sprinkled with dots of red and yellow that Mary realized were the petals of the chrysanthemums she had so carefully placed along the passageways.\n\nShe opened the door and stepped out. Buster squeezed by between her feet and began yapping at the pig. The pig ignored him and kept gnawing at his pumpkin. Mary poked him with her toe.\n\n\"Shoo, piggie,\" she said, \"go back to your pen.\" He paid no more attention to her than he had to the dog.\n\nHannah came out and jumped down off the side of the porch.\n\n\"Come on, Buster,\" she called, \"Let's look around.\" Buster cautiously rounded the pig and hopped down the steps to follow her. \n\n\"Mama, look,\" Hannah cried. Mary turned to Hannah pointing at the front wall of the house. It was spattered with a what she quickly realized was smashed pumpkins. A dozen broken shells lay on the ground below. If they had hit the window, they'd have gone right though it, she thought.\n\nAlvin came out and put his foot against the pig's read end and shoved. It shifted it's weight, but didn't leave the porch. Another pig trotted around from the side of the house with Jennifer following behind it. Her clothes were caked in mud. \n\n\"Found this dubber trying to dig his way into the alpaca pasture,\" she said. As the second pig trotted by, the one on the porch rose to his feet and followed it.\n\n\"Danni get home yet?\" Alvin asked.\n\n\"No, she's still on duty. Probably will be all day. She called a while back, they got her directing traffic out in Searsmont. Lot of flooded roads that way.\"\n\n\"Where's Bonita?\"\n\n\"She's clearing some of the debris out of the alpaca pasture.\" \n\nShe slapped the pigs on their rumps and marched them toward their pen.\n\nHannah picked up a pumpkin that was almost too big for her to get her arms around. \"This one is not broke, so we still have one for Halloween,\" she said.\n\n\"Jesus, that thing got blown at least a hundred feet,\" Mary exclaimed. She looked at Alvin. \"Are you going to check things at the wharf?\"\n\n\"Thought I ought to.\"\n\n\"Why are you wearing your raincoat?\"\n\n\"It's like to rain again. Maybe even get a few bad squalls in the aftermath.\"\n\nShe started to say that if it rained, he could just come home, but then she realized what he had in mind.\n\n\"You're going out to look for the Mitchells, aren't you?\"\n\n\"Well, Ralph's been calling all around, no one has seen or heard from them.\"\n\n\"Baby, let the coast guard take care of that. It's too dangerous. You said there could still be squalls.\"\n\nBonita and Moosie came around the house. Bonita was carrying a bright red windbreaker. \n\n\"Anybody know who this belongs to?\" she asked.\n\nHannah ran over to look at it.\n\n\"I don't think it belongs to any of us,\" Mary shrugged.\n\n\"I bet the hurricane blew it a hundred miles!\" Hannah said.\n\n\"It was hanging from a tree by the road,\" Bonita said, holding it up. On the back there was a picture of a truck and the words \"Big Al's Hauling, Lowell Mass\".\n\n\"It blew all the way from Massachusetts,\" Hannah said.\n\n\"More likely, from a bag of donations outside the Goodwill,\" Alvin muttered.\n\nMary put her hand on Alvin's arm. \"I really don't like the idea of you going out there, baby. But I know that you think it's what you have to do.\"\n\n\"It is what I have to do.\"\n\n\"No,\" she shook her head, \"it isn't.\"\n\n\"Where you going, Papa?\" Bonita asked.\n\n\"Oh, I'm just going to go have a look around, see if I can see Annie Mac.\"\n\n\"I'll go with you.\"\n\n\"You will not,\" Mary snapped.\n\nBonita frowned at her. \"I'm a good sailor.\"\n\n\"You're a great sailor. You are also an eleven year old girl. You aren't going out when the storm might not be over. Bad enough I can't talk sense into Papa.\"\n\n\"I'm gonna go ask Mama Jen!\" Bonita shouted. She ran off toward the pig pens, where her mother was shooing the last of the escapees back through the broken fence.\n\n\"Good luck with that,\" Mary muttered. \"Come on inside,\" she said to Alvin, \"I'll make you some sandwiches to take with you on your fool's journey.\"\n\n***\n\nThe parking lot at the wharf was spotted with puddles but there was no significant damage. The kayak rack had blown over and Alvin scowled when he realized he would need help to stand it upright. Twenty years ago, I'd have hoisted her right back up, he thought. Hell, ten years ago.\n\nHe unlocked the boathouse and went inside. A little water had blown under the door, but his attention was drawn to a shaft of light filtering down from the ceiling. He looked up to see a patch of sky where a piece of the roofing had blown off. He'd have to get that fixed before winter.\n\nIt only took a few minutes for him to get SeaJay cast off and underway. The harbor was littered with debris. Alvin had to cross over and skirt the far shore to avoid a large tree that was slowly turning as it floated toward the sea. There were smaller obstacles; pieces of lumber, plastic trash cans, the carcass of a deer. As he passed the city park, he saw a small motorboat run aground on the rocky beach.\n\nHe crossed the ledge into the deeper bay and the water grew rougher. He set a course down the eastern bay. In his last transmission to the harbormaster, Jim Mitchell had said he was heading for shelter in Vinalhaven or Stonington. Alvin figured that if he made for Vinalhaven, then searched back and forth across the channel between them, he would have his best chance of finding them. \n\nThe wind picked up as he cleared Cape Rosier and it began to rain, but the sky cleared again by the time he reached Green Ledge Island. There were dark clouds in the southeast, but the water before him was rolling gently. He decided it would be safe to lock the wheel and go below to make coffee. Then he would begin his search in earnest.\n\nAs he ducked into the cabin, he heard a soft scuffling sound. Rats were always a problem around the waterfront and he wondered if they got gotten aboard the boat. It was autumn, the time they looked for winter shelter. He turned on the coffee maker, then listened carefully. He thought he might have heard something from the storage closet, so he stepped in front of it, gripped the door handle and paused. He heard nothing, but yanked the door open quickly, hoping to surprise whatever might be lurking inside. \n\n\"Jeezum crow!\" he shouted, jumping back.\n\n\"Hi, Papa,\" Bonita said in a meek voice.\n\n\"Come on out of there,\" he said, \"You been hiding in there this whole time?\"\n\n\"No,\" she said as she climbed out of the closet, \"I hid when you locked the wheel.\"\n\n\"How did you know when I locked the wheel?\"\n\n\"It makes a sound. You can hear it in the cabin.\"\n\n\"Jeezum crow,\" he muttered. She knew something about his boat that he didn't.\n\n\"Don't be mad, Papa, I came to help you.\"\n\n\"You think I need help, huh?\"\n\nBonita shrugged. \"I don't think you ought to come out alone. You said there might be more squalls.\"\n\n\"Honey, I was sailing through storms before your mothers were born.\"\n\n\"Well, yeah, back then, but...\" she bit her lip.\n\n\"But what,\" he asked, crossing his arms and raising one eyebrow.\n\nBonita shrugged and said nothing.\n\n\"But, I'm old now, is what you're saying.\"\n\n\"Well, you are old, Papa.\"\n\n\"I'm too old for this shit and you're too young, so together we are just right. So make yourself useful. Fix me a cup of coffee. And Mama Mary made ham sandwiches. Bring a couple up on deck. I got to radio the harbormaster and have him call the house.\"\n\nHe started up the stairs, then turned. \"And Nita...thank you for wanting to help. But the next time you stow away on my boat, I'm going to keelhaul you.\"\n\n\"What's keelhaul?\"\n\n\"Look it up. It's worse than it sounds.\"\n\nWhen he was out of Bonita's sight, Alvin sighed, then chuckled. He took the radio handset from under the wheel and called in to the harbormaster's office. It took a while for Ralph to respond. No doubt he was as busy as popcorn in a skillet, he thought. When Ralph did answer, Alvin explained that Bonita was with him, and asked Ralph to call the house and let Mary know. Mary could tell Jennifer and Danni, he sure as hell didn't want to do it.\n\nBonita came up top with the sandwiches, a cup of coffee for Alvin and a juice box for herself.\n\n\"So, what's our plan?\" she asked.\n\n\"Our plan?\" Alvin chuckled. \"Well if you agree, we'll head south to the bottom of the bay, then zig zag our way across. So, eyes wide open. Let me know if you see anything in the water. We have to keep a lookout for debris as well, alright?\"\n\n\"Okay, Papa.\" She took her sandwich and climbed out to the end of the bow, where she sat crosslegged and scanned the water. Alvin watched her and grinned. He had to admit that he probably had a better chance of finding Annie Mac with the help of her sharp young eyes. And he couldn't deny that he relished her company.\n\n***\n\nMary thanked Ralph and slipped the phone into the pocket of her sweater. She sighed and shook her head. It didn't surprise her that Bonita had snuck off to follow her grandfather. I shouldn't worry, she thought, she's with Alvin, she'll be safe.\n\nShe went out to tell Jennifer where her daughter was. She saw her with Yusef, stacking corn husks into a wagon. So much for our maze, she thought, but at least we are all safe and sound.\n\nYusef smiled at her approach.\n\n\"Hello, Yusef,\" she said, \"I hope you came through the storm alright.\"\n\n\"Oh, yes,\" he nodded, \"we are well sheltered.\"\n\nMary told Jennifer about Bonita.\n\n\"That little shit,\" Jennifer chuckled, \"She sure is her Papa's girl.\"\n\n\"Yes, she is,\" Mary agreed. \"Well, let me go find mine and see what's going on with her.\"\n\n\"I saw her with the dogs a little while ago, heading down toward the beaver pond. Is something wrong?\"\n\n\"I don't know. She seems...off. Not herself.\"\n\n\"Problems at school, you think?\"\n\nMary shrugged. \"I hope not. She loves school.\"\n\n\"Yeah, I don't think I ever knew a kid who liked school so much.\"\n\nMary smiled to herself. I have, she thought. I was just like that myself.\n\nShe walked down the path under the trees. The storm had stripped the leaves from the maple and birches, but the pines still shaded the path, and she pulled her sweater tightly to her chest against the chill. \n\nHannah was sitting on the bench beside the pond. The dogs perked up their ears at Mary's approach and trotted over to greet her.\n\n\"Mind if I join you?\" she asked her daughter.\n\nHannah shrugged. Mary sat next to her. For a minute, she just looked out at the pond. \n\n\"I guess the ducks have all gone south,\" she said.\n\n\"Or the storm blew them away,\" Hannah replied, looking down at her feet.\n\nMary put her arm around her daughter' shoulder. \"Talk to me, sweet girl, tell me whats bothering you.\"\n\nHannah mumbled something that Mary could not make out. She leaned down closer. \"What was that, sweetie?\"\n\n\"I got my period.\"\n\nMary smiled, but felt a tear form in her eye. \"Oh, baby, that is nothing to be upset about. Why didn't you tell me?\"\n\n\"It's embarrassing,\" she said, shrugging. \"It's too soon.\"\n\n\"Well, you're a little early, but that's okay. It means your growing up.\"\n\n\"It's not fair.\"\n\n\"Well, everyone grows at different rates. You and Bonita were born at almost the same time, but she's three inches taller than you.\"\n\n\"I'm not ready to be a grown up.\"\n\n\"Well, honey, it doesn't make you grown up, you've still got some growing to do.\"\n\n\"It means I can get pregnant.\"\n\n\"Well, honey, you don't get pregnant like you catch a cold.\"\n\nHannah rolled her eyes. \"I know all about that stuff, Mama.\"\n\n\"Well, let's talk about that sometime, just to make sure that what you know is right, okay?\"\n\nHannah groaned. Mary squeezed her and kissed her head. \"Well, when you have questions, you come ask me, okay?\"\n\n\"Alright, Mama.\"\n\n\"But we need to talk about this now. It's a matter of health. What have you been doing about it? Did you get pads somewhere?\"\n\n\"I made pads out of toilet paper.\"\n\n\"Oh, honey, that won't do.\"\n\n\"Well, I think I'm done for now.\"\n\nMary stood up. \"Come on, baby, let's go up to the house. It's cold down here. You want some lunch? I was thinking we'd have tomato soup and grilled cheese.\"\n\n\"Okay, Mama.\"\n\nThey walked back up the path and into the pasture. Buster and Moosie ran off to where Jennifer and Yusef were working. Mary wondered if Hannah had Moosie with her because she had known Bonita's plan, but she decided not to ask.\n\nMary put the soup on the stove to warm, then went into the living room and turned on the television.\n\n\"Papa said don't turn on the TV anymore. He said we were using too much fuel,\" Hannah said.\n\n\"Papa's not here. And I want to watch the local news and see if they say anything about when the power will be back on.\"\n\nHannah heard a sizzle and walked over to the stove. The soup was bubbling hard and spattering drops on the burner.\n\n\"Mama,\" she called, turning down the heat, \"the soup is boiling over.\" \n\nMary did not answer, so Hannah went into the living room. Her mother was standing in front of the television, one hand covering her mouth. Hannah looked at the screen and saw a weather map, captioned with the words, \"Severe squalls heading into lower Penobscot Bay.\"\n\n***\n\nAlvin took SeaJay to within a hundred yards of Gunning Rock on the eastern side of Vinalhaven, then turned and crossed the bay to within sight of Isle Au Haut. He brought the boat around and made the pass back on a slightly more northern course. As they neared the Halibut Ledges, Bonita jumped up and pointed. She'd spotted a boat in the distance. Alvin turned toward it, but before long he recognized that it was a lobster boat. Nonetheless, he steered toward it and drew up alongside.\n\nThe lobsterman introduced himself. \"Natty Benoit, out of Southwest Harbor.\"\n\n\"Alvin Faulkner, Londonderry. This is my granddaughter, Bonita.\"\n\nNatty tipped his hat to her. \"You folks out looking for that lost family?\"\n\n\"Yes sir,\" Alvin said, \"Feel a duty. It was my boat they hired.\"\n\n\"Well, I come out to see that my traps made it through, but I'll be keeping my eyes open.\"\n\nAlvin thanked him and moved on. They were halfway across on their next pass when Alvin began to feel apprehensive.The sky was getting dark to the southeast and he detected a slight change in the wind. \n\n\"We need to get going toward home,\" he told Bonita, \"That's a wicked squall looks to be heading our way.\n\n\"Okay, but I'm going to keep looking.\"\n\n\"You do that, honey.\"\n\nBy the time he could complete a broad curve to starboard and point the bow toward home the squall was bearing down on them and he felt the first drops of rain on his skin. The mainsail filled with wind and SeaJay picked up speed. The rain stopped and Alvin felt confident that they would outrun the storm.\n\nSuddenly, Bonita jumped up and began to yank on his sleeve. \"Papa, Papa, look over there!\"\n\nAlvin looked where she was pointing, but saw nothing but white capped waves.\n\n\"I don't see anything, Nita.\"\n\n\"There is something in the water! I saw it!\"\n\nAlvin scanned the water intently, but still saw only rough water. He looked over his shoulder. The darkness had crept closer.\n\n\"I still don't see it, honey. What did it look like?\"\n\n\"I don't know but I swear there is something there, Papa. I know I saw it.\"\n\n\"I believe you, Nita, but we need to make speed to harbor.\" He looked at her and saw that she was near tears.\n\n\"Papa, we have to look.\"\n\nAlvin stared at her for a minute, recognizing the surety and determination in her eyes. He drew in a deep breath, let it out slowly, then spun the wheel and began to run across the face of the oncoming storm.\n\nBonita leaned over the rail, peering ahead. Alvin didn't have to turn his head to see the storm, it filled his vision on the starboard side. Raindrops began to streak across the deck, driven sideways by the rising wind. I can't hold course long, he thought, there will be swells behind this wind large enough to swamp us.\n\n\"We need to get out of this, Nita,\" he shouted.\n\nShe did not take her eyes from the water, but held up one finger to him. \"Wait, Papa, please,\" she pleaded.\n\nAlvin shook his head but held course. Another minute, maybe two, and then he'd have no choice.\n\n\"Now, Papa, hard to port,\" Bonita shouted. Without a thought, Alvin obeyed. \n\n\"Keep turning, Papa! Keep turning!\"\n\nAlvin saw something in the water, but before he could get a good look at it, he felt the boat rise.\n\n\"Nita, hold on tight!\" SeaJay tipped and for a few seconds Alvin feared they would capsize. The wheel tried to spin out of his hands, but he gripped it until his wrists ached, and the sails caught the wind and pulled the boat into line.\n\nBonita climbed on to the foredeck and stood, gripping the mast and peering out at the heaving water.\n\n\"Nita, get the hell down from there!\"\n\n\"I can see better from here,\" she replied. She pointed straight ahead. \"Hold course, Papa.\"\n\nI used to be the captain, Alvin thought, amused despite the tension of the situation.",
        "\"Right over there!\" Bonita shouted. Alvin looked where she was pointing. He saw an object in the water, and then a motion. It was a waving arm. It's the boy, he realized in a rush of anguished excitement.\n\nBonita jumped down to the deck and went to the starboard rail. Alvin turned hard, putting the boat between the boy and the wind. His mind was racing, trying to figure out how to handle the situation. If he left the wheel to try to fish the kid out of the water, the storm would overwhelm them. But he didn't think Bonita had the strength to hold course against so much wind. \n\n\"Nita,\" he shouted, \"I'll try to get close. See if you can toss him a line.\"\n\nShe crossed the deck towards the rope locker, but another swell struck and her feet went out from under her.\n\n\"Baby, are you alright?\" Alvin called out, but by the time he'd gotten the words out, she was on her feet. She fetched a rope and half walked, half tumbled back to the rail.\n\nThe next swell was the biggest yet, strong enough to turn the bow. SeaJay dove into the trough and the next wave broke across the deck. Alvin was momentarily blinded by the spray of salt water, but he could feel the boat plunge sideways. He wrestled her back into line, only to feel the stern veer. Again, SeaJay rose and plunged. Another wave crashed against her and swept across the deck. \n\nHe saw Bonita leaning over the rail. \"Nita,\" he shouted, \"Get below deck!\"\n\nOrdinarily, she obeyed him without hesitation, but she did not respond. Alvin wondered if she could hear him. Sheets of rain obscured his view. \n\n\"Bonnie! Goddamn it, Bonnie, answer me!\" \n\nHe held the wheel with one hand and turned to try to see her in the dim light. His wrist strained to hold the boat in line, but he had to know she was all right. He could see the rail through the rain, and she was not there.\n\n\"Bonnie!\" he yelled, as loud as he could, \"Bonnie!\" She can't be gone, he thought, fighting against panic. A series of short swells rocked the boat, but he fought through them by instinct. All he could think about was his granddaughter.\n\nThe wind began to taper off, the main force of the squall moving away to port. Alvin heard an odd wailing sound and looked to the stern. Bonita was huddled on the deck, her back to the rail. She gripped the anchor chain with one hand and had her legs and her other arm wrapped tightly around Jamie Mitchell. The boy was holding her as if his life depended on it, and crying in loud wracking sobs.\n\n\"Nita, are you alright?\" he yelled over the wind. Without letting go of the boy, Bonita wiggled her fingers in affirmation.\n\n\"Get him below and warmed up.\"\n\nThe boat was still rocking, but it's motion was smoother, gentler. Bonita unwrapped her legs from around Jamie and tried to nudge him forward, but he would not let go of her. Alvin could hear her speaking to him, but he could not make out her words. Finally, Jamie let go of her and slowly crawled on his hands and knees to the cabin door.\n\nWhen Alvin saw Bonita duck into the cabin behind Jamie, he let out a deep sigh of relief. He realized his hands were shaking. He had been sailing these waters for almost fifty years, and he could not remember a time when he had been so frightened. \n\nThe clouds were soon behind them and the water lapped gently against the hull. Alvin locked in a course for Londonderry Bay and unhooked the radio handset from behind the wheel. \n\n\"Londonderry, this is SeaJay. Over.\"\n\nRalph Ennis spoke on the other end. \"Hey there, Alvin. Hope you missed that squall.\"\n\n\"We caught a bit of it. Ralph, we found the boy.\"\n\n\"Jeezum crow. He all right? What about the parents?\"\n\n\"Can't tell you much yet. I'm about to go down and see what I can learn. The granddaughter's got him below warming him up.\"\n\n\"Well, get back to me quick as you can. His folks might still be out there in the water. Meantime, give me the co-ordinates where you picked him up and I'll contact the coast guard.\"\n\nAlvin estimated the location where they'd found Jamie, and gave Ralph the info.\n\n\"Alvin...\" the harbor master said in a quiet tone.\n\n\"Yeah, Ralph?\"\n\n\"Just wanted to say bless you for rescuing that boy.\"\n\n\"I ain't the one earned that blessing, Ralph. I'll get back to you in a little bit.\"\n\nHe rehung the radio and went down to the cabin. Jamie sat on the edge of the bunk, wrapped in blankets. He held his life vest on his lap. I wouldn't feel like letting go of it either, Alvin thought. Bonita stood in front of him with a bottle of water. \"Only sip a little bit at a time,\" she was telling him, \"Otherwise you'll just puke it out.\"\n\nAlvin sat down on the bunk next to the boy. \"He drink much?\" he asked Bonita.\n\n\"Just a few sips. I made him take off everything but his underwear. His skin is all puckered like when you're in the bathtub too long.\"\n\n\"You done right. You done way more than right. Have you still got one of those juice boxes in your kit?\"\n\n\"I think so.\" Bonita rummaged in her backpack and pulled out an apple juice.\n\n\"That might be better for him. More nutrients.\"\n\nHe rubbed the boy's back while Bonita opened the juice and handed it to him.\n\n\"Listen, buddy,\" Alvin said to him, \"can you tell us what happened?\"\n\nJamie sobbed and shook his head.\n\n\"I know you don't want to talk, but if you can tell us just a little bit, maybe it will help us find your Mom and Dad.\"\n\nHe sipped the juice for a minute, then shook his head and said \"Too late.\"\n\nAlvin shrugged. He didn't know what to do. He was afraid that pressing the boy to talk might further traumatize him.\n\n\"Please tell us,\" Bonita whispered.\n\nJamie stared at the floor for a moment, then spoke in a rush of words. \"Daddy said that the storm was coming and we had to go back to land. He said we were going to go to Stony Town and eat lobsters. But then he fell down and he wasn't breathing. Mommy tried to wake him up, and he wouldn't wake up and it was starting to rain and I didn't know what to do. I tried to steer the boat, but I never did that before. Mommy said go find the radio and I went downstairs to look for it. The boat was rocking back and forth and I kept falling down.\"\n\nAlvin glanced up at Bonita and saw tears flowing down her cheeks. He put his hand around the boy's shoulders. \"Did the boat tip over, Jamie?\"\n\n\"Yeah.\"\n\n\"But you got out. And you had your life vest on.\"\n\n\"Mommy said I had to wear it all the time. There was all kinds of stuff in the water. I grabbed hold of a cushion from one of the chairs and I held on to it.\"\n\n\"You're a smart boy,\" Alvin said. He hesitated a minute, then asked, \"Did you see Mommy after the boat tipped over?\"\n\n\"I saw her when I was swimming out of the boat.\"\n\n\"Where was she?\"\n\n\"Way down below me.\"\n\nAlvin stopped breathing for a moment. \"Alright,\" he said, \"You don't have to talk no more now. You want to lay down and rest?\"\n\n\"Okay,\" Jamie said. He laid back on the bed and clutched the life vest to his chest like it was a favorite stuffed animal.\n\nAlvin stood up, \"Let's let him rest,\" he said quietly to Bonita.\n\n\"I'll sit here until goes to sleep.\"\n\n\"Alright, baby.\" He put his hand on her shoulder and looked into her eyes. He could not articulate his thoughts to her in that moment, so he just kissed her head and left the cabin.\n\nThere was a helicopter hovering over the water back in the direction from which they had sailed. Alvin got Ralph on the radio.\n\n\"It's bad, Ralph,\" he said. \"Sounds like the father had a heart attack or a seizure or something as he tried to outrun the storm. The boy says they were headed for Stonington. When the storm hit, it swamped them.\"\n\n\"Christ,\" Ralph groaned. \"The mother?\"\n\n\"Boy saw her floating below the surface.\"\n\n\"God damn it. What a christly bad thing for a kid to see.\"\n\n\"Alright, Ralph, we're on our way in.\"\n\n\"There's an ambulance here, waiting to take the kid to the hospital for a look see. Oh, and a TV crew from Bangor.\"\n\n\"A TV crew? Jeezum. Alright, well, we are about an hour out.\"\n\nBonita came on deck. She hopped up on the forecastle, and sat down, dangling her legs, near where Alvin stood at the wheel.\n\n\"He asleep?\" Alvin asked.\n\n\"Yeah.\" She fished a protein bar out of her pocket and took a bite. \"Eck,\" she spat, \"This is all wet.\"\n\nAlvin chuckled. He reached over and squeezed her foot. \n\n\"Papa, can I ask you about something?\"\n\n\"Of course, you can.\"\n\nShe furrowed her brow. \"When we were, um, when you were hollering at me in the storm...\"\n\n\"What about it, honey?\"\n\n\"You kept calling me Bonnie.\"\n\n\"Did I?\"\n\n\"You never called me that before.\"\n\nAlvin realized that she was right. \n\n\"That was your wife's name, right? Before Mama Mary?\"\n\n\"It was.\"\n\n\"She was my grandma.\"\n\n\"Yes. You were named for her.\"\n\n\"But she died?\"\n\n\"She did.\"\n\nFor a long moment, Bonita looked lost in thought. \n\n\"You thought I was going to die.\"\n\nAlvin dropped his eyes. \"You scared the shit out of me, Nita.\"\n\n\"I'm sorry, Papa. But I had to try to get him.\"\n\n\"Come here, baby,\" Alvin held out his arms and Bonita jumped down into them. He gritted his teeth to keep from sobbing as he held her.\n\nAn air horn sounded and Alvin looked up to see a coast guard cutter heading outbound on their port side. Bonita dashed to the rail and waved as Alvin sounded SeaJay's horn in response. A crewman on the deck of the cutter waved back and raised his hand in the air in a thumbs up gesture.\n\nA mile out of Londonderry, Alvin's cell phone made a connection and started to buzz. He looked at the screen. He had more than a dozen voicemails. He skipped past the unknown numbers from Portland and Bangor and clicked Return Call when he saw the first one from Mary.\n\n\"Why don't you go check on Jamie?\" he asked Bonita while he waited for her to answer.\n\nShe nodded and descended to the cabin. Mary picked up on the fifth ring.\n\n\"Alvin, honey, is everything okay? Ralph says you rescued the little boy. Is he alright? What about Bonita?\"\n\n\"Slow down, sweetheart. We are fine. Yeah, we fished out the boy.\"\n\n\"And the parents?'\n\n\"I think they are gone, honey.\"\n\n\"Oh no. Baby, it's not your fault. You know that right?\"\n\nIt was partly his fault, he thought. He should have told Jim Mitchell no, that it was too late in the season. \n\n\"Alvin? Honey?\"\n\n\"I'm sorry, Mary. We are coming into the outer harbor now. Be home in a few minutes.\"\n\nHe slipped his phone back into his pocket and called for Bonita to come back up top.\n\n\"Let's trim sail and take her in, matey,\" he said when she popped her head out of the cabin.\n\n\"Aye aye, Papa.\"\n\nAs Alvin docked SeaJay, he saw that the landing was crowded with people. An ambulance and a sheriff's cruiser blocked the top of the gangplank. Mary and Jennifer leaned over the railing and waved. He waved back as Bonita tied the boat to the floating dock.\n\nThere were loud footsteps on the wooden planks. Alvin saw Danni rushing toward them. The harbormaster was right behind her, along with a man in a coast guard uniform.\n\nBonita looked up and saw Danni, then looked at Alvin with a worried expression. Alvin shrugged and thought, you're on your own with this one, kid.\n\nDanni jumped down to the deck. Bonita took a step back but Danni pulled her into her arms and hugged her, then squatted in front of her to look into her eyes.\n\n\"You know you're in big trouble, right?\"\n\n\"Yeah,\" Bonita said in a scared, tiny voice.\n\n\"Okay, well, we'll talk about it later.\" She stood up and looked at Alvin. \"Where's the Mitchell boy?\"\n\n\"He's down below in the bunk.\"\n\n\"He hurt?\"\n\n\"No, but he was in the water a long time.\"\n\nThe harbormaster and the coastie came aboard, while a pair of paramedics wrestled a gurney down the gangplank. Alvin and Danni stepped aside to allow one of them to descend into the cabin. \n\n\"I'm Commander Montgomery,\" the coastie said, extending his hand to Alvin. \"You're Andy's uncle, aren't you?\"\n\nAlvin nodded and shook his hand, then stepped aside as the paramedic led Jamie up from the cabin. He and his partner helped the boy on to the gurney, wrapped him in warm blankets and strapped him down. As they lifted him up to the dock, Jamie turned his head and looked at Alvin and Bonita. He spoke in a voice so weak that neither or them could hear him, but they both knew that he had said \"Thank you.\"\n\n\"You and the girl most likely want to get home and get warm and dry, get some hot food in your belly,\" Montgomery said to Alvin. \"You think you can come down to Rockland tomorrow and we can write up a report?\"\n\n\"Sure,\" Alvin said. They all climbed on to the dock and walked up the gangplank to the landing. Andy was waiting at the top. \n\n\"Just radioed in, chief,\" he said, but turned to Alvin, \"chopper spotted Annie Mac about two miles off Cape Rosier. We've got a cutter on the way, it will tow her into Rockland.\"\n\n\"Alright then.\" Alvin said. \"Is anyone going to be there for the boy?\"\n\n\"He's got an aunt flying in from Ohio,\" Danni told him, \"We'll have someone stay with him until then.\"\n\nMary and Jennifer came from around the ambulance. Mary hugged Alvin.\n\n\"You had us all scared, love. When we heard about that squall coming through...\"\n\n\"Now, Miss Mary, you need to have faith in my sailing skills.\"\n\n\"I do, baby, but I was still scared.\"\n\nJennifer wrapped her arms around Bonita. She kissed the side of her face and the top of her head. \"I'm so mad at you,\" she said, while sniffling back tears. He took hold of her daughter's shoulders and held her at arm's length.\n\n\"Bonita, do you have any idea how worried we were about you?\"\n\nBonita shrugged. \"I was safe, I was with Papa.\"\n\nJennifer shook her head. \"That's not the point. You know, you are lucky that I don't believe in spanking children.\"\n\nDanni bent down close to Bonita's face. \"Just so you know,\" she said, \"I'm not sure I agree with that policy.\"\n\n\"Now, don't be too hard on her,\" Alvin said.\n\nJennifer turned and wagged her finger at him. \"Now, you, I might hit.\"\n\n\"Excuse me, Captain Faulkner?\"\n\nAlvin turned around to see a short blonde woman in a blue pantsuit. She was holding a microphone and a small plastic step stool. A few feet behind her, a scruffy looking man was pointing a video camera at him. The woman put the stool down on the ground, stepped on it and stuck the microphone in Alvin's face.\n\n\"Captain Faulkner, I'm Carly Cameron, Bangor Action News. I understand you rescued Jamie Mitchell.\"\n\n\"No, I didn't rescue the boy,\" Alvin said.\n\nShe frowned. \"I spoke with Harbormaster Ennis, and he told me...\"\n\n\"I just steered the boat,\" Alvin shrugged, \"My granddaughter's the one spotted the boy. She navigated us over to him, and she fished him out of the water. She rescued the boy, all I did was steer the boat.\"\n\nDanni and Jennifer both stared at him, and then at Bonita.\n\nCarly Cameron stepped off the stool. \n\n\"What's your name, dear?\" She asked, holding out the mic to Bonita.\n\n\"Bonita Maria Ortega-Faulkner.\"\n\n\"How old are you, Bonita?\"\n\n\"Eleven.\"\n\n\"Can you tell me how you rescued Jamie?\"\n\n\"I saw him in the water, but it was storming wicked bad and Papa couldn't see him, but I guided him and I got a rope and I had to throw it to him a couple times. I almost fell over the side, but he caught it and I pulled him over and hauled him in.\"\n\n\"That was very brave of you,\" Carly said, \"How did you know what to do?\"\n\nBonita turned her palms up and shrugged. \"I just did whatever I thought Papa would do.\"\n\nCarly returned to Alvin. \"You must be a very proud grandfather.\"\n\n\"Yes, Ma'am. But I think right now her mama's want to get her home.\"\n\n\"Right. Well, thank you.\" She turned to her cameraman. \"Let's get a shot over there by the boat. I'll do the wrap up in a voiceover.\"\n\nMary took Alvin's hand and they walked across the landing to her car. \n\n\"We had a little drama at home as well, honey,\" she said.\n\n\"Oh? What happened?\"\n\n\"I found out what has been bothering Hannah the last few days. She got her first period.\"\n\n\"Jeezum. I guess I'd rather deal with the storm.\"\n\nThey got in the car and Danni and Jennifer climbed in the back seat with Bonita between them.\n\nAs Mary turned on to Front Street, Bonita tugged at Jennifer's sleeve. \"Mama Jen,\" she said, \"don't be mad at Papa. He didn't know I was stowed away.\"\n\n\"Maybe not,\" Jennifer said, glaring over the seat at Alvin, \"But as soon as he found out, he should have turned around and come back.\"\n\n\"No,\" Bonita said emphatically, \"He let them take his boat, so it was his responsibility to go try and find them.\"\n\nJennifer stared at Bonita, then at her father. \"Did you tell her that?\" she asked.\n\nAlvin shook his head. \"Nope.\"\n\nDanni took Bonita's hand. \"Bonita, honey, you may not understand this yet, but sometimes people can do the right thing, but in a wrong way. I am very, very proud of you for what you did, but you shouldn't have been out there in the first place.\"\n\n\"If she hadn't been out there,\" Alvin muttered, \"That boy would be drowned.\"\n\nJennifer sighed and stared out the window.\n\nMary cleared her throat. \"Can I...maybe make a suggestion?\"\n\n\"Oh god, please do,\" Jennifer said.\n\n\"Well, first of all, Bonita, do you understand what Mama Danni was saying?\"\n\n\"I guess so.\"\n\n\"If I robbed a bank and then used all the money to buy food for poor people, I would still be in trouble for robbing the bank, right?\"\n\n\"Well, yeah.\"\n\n\"Okay, so you understand that you need to be punished. What I think is that to make sure you learn this, your mamas should not let you go sailing with Papa for a while. I'd say six months is about right.\"\n\nJennifer looked at Danni. \"What do you think?\"\n\n\"I think that sounds about right,\" she nodded.\n\nBonita scowled but didn't say anything. \n\nMary turned into the driveway. Before she could shut off the car, Hannah came running from the house, with Buster and Moosie at her heels. As soon as Bonita stepped out of the car, she was surrounded, Hannah hugging her tight, and both dogs jumping up on their hind feet to lick her hands and face.\n\n\"Come on, sweet baby,\" Danni said, \"Let's get you home.\" She draped her arm over Bonita' shoulder. Jennifer put hers around her waist. With Moosie dancing at their feet, they walked together toward their house. \n\n\"Let me get you something hot to eat,\" Mary said. She kissed Alvin, then went into the house. Hannah and Buster were running in circles in the dooryard, kicking up leaves.\n\n\"Hey, Sweetie,\" Alvin called. Hannah stopped, looked at him for a minute, then ran to him. He wrapped his arms around her and kissed the top of her head.\n\n\"How are you, honeypie?\"\n\n\"I'm okay, Papa.\"\n\n\"You're growing up so fast.\"\n\n\"Mama told you, huh?\"\n\n\"Yes, sweetie. It's nothing to be embarrassed about.\"\n\n\"Yeah, it is, a little bit.\"\n\n\"You know, you ain't the first girl I raised.\"\n\nShe hugged him tight. \"I'm glad you didn't drown, Papa.\"\n\n\"It'd be a pisser if you weren't. Now, go ahead, play with your dog.\"\n\n\"Good, cause you're all wet.\"\n\nAlvin chuckled and went into the house. Mary was at the stove, stirring the leftover chili. \n\n\"Why don't you take a hot shower and put on some dry clothes,\" she said, \"I'll have your food ready when you finish.\"\n\n\"Sounds good,\" he replied. He started up the stairs, then went back down.\n\n\"Mary?\"\n\n\"Yes, love?\"\n\n\"You know I am about to put the boat up for winter, don't you? I don't expect to take her out again till spring.\"\n\n\"Of course I do, honey.\"\n\n\"Jennifer and Danni ain't numbies, they'll figure that out, too.\"\n\n\"Oh, I'm sure they already did.\"\n\nAlvin shook his head, then clomped up the stairs and into the bedroom. After pulling off his damp shirt and t-shirt, he sat down in the chair by Mary's dresser and pulled off his shoes. He dropped them on the floor and then sat for a minute looking at his hands. They were trembling. \n\nHow long have I been out on the water, he asked himself. Damn near fifty years. Have I ever done anything so foolhardy as turning a boat into the path of a storm? If we had lost the wind, we'd have gone ass over teakettle, just like Annie Mac did. And if one of those swells had been just a touch bigger, we might have swamped anyway. And I took that chance with the most precious cargo in the world on board. ",
        "He stood up and finished undressing. He took his bathrobe from the closet, put it on and walked into the bathroom.\n\nBonita knew, he thought, leaning on the sink and staring at his reflection in the mirror. She understood. He had let them take his boat, it was up to him to try to save their child if there was even the slightest chance of success. Jeezum crow, the one person in the world who understood him best was an eleven year old girl.\n\nHe got in the shower and nearly dozed off under the warm spray. He heard Mary call his name, and turned off the water. He dried himself and got dressed. Mary and Hannah were sitting at the table when he entered the kitchen. The room was warm and filled with the aroma of the chili. He sat down and looked at his wife and his daughter. He spooned up a bite of the chili and thought that it was very good to be alive."
    ],
    "authorname": "MelissaBaby",
    "tags": [
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/mary-and-alvin-ch-29"
}