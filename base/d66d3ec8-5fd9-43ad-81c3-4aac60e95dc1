{
    "title": "Fishing with My Daughter Pt. 04",
    "pages": [
        "Fishing With My Daughter: A New Chapter\n\nI want to thank the readers who left kind remarks and words of support for the earlier chapters of this story. You encouraged me to go forward with this effort.\n\nThis may be the final installment in the series \"Fishing With My Daughter\". I honestly don't know. I contemplated two different ways this story might evolve, but in the end there was really only one way it could go. This opens up the series to possible future stories if the ideas come to me. For now, this is the closure that I needed.\n\nOh, and there is no sex in this story in any form. There's not even the suggestion of it. If that's what you're looking for, I suggest you keep looking.\n\n* * * * *\n\nSpring comes slowly here, and the snow under the trees and in the shadows lingers as it resists the approaching warmth of summer. Fishing season opened a week before, but this was the first chance that Julie had to get out on the stream to see if the big browns had yet come up from the depths of the lake. The stream that is fed by glacial runoff is always cold, but in early spring the cold penetrates the waders with a fierceness and determination that is hard to believe until you've experienced it. Later in summer, when the sun is warm and high in the sky, the cold stream will be inviting. She will dip her hands into the water and relish the refreshing chill, but today is not that day.\n\nJulie is no longer the young girl that fished this stream with her father, asking him the big questions about life and love while chasing after the big trout that they both knew inhabited these waters. Her father had been her guide, her instructor in the ways of fly fishing. For them both, fishing was a metaphor for life. She learned early on that both her mother and her father were there to help her navigate the turbulent waters of life, protecting her from the rapids and setting her free to explore the safety of the pools, and that each could help her in their own way. She married ten years ago and is now a wife and mother herself with all the joys and responsibilities that come with it. Her own marriage had taught her lessons, too, and she now saw how her parents always came together to be a team that built a family and raised their children. They had built a web of love around their children so that wherever they turned they found support and understanding. Looking back, there were so many lessons she had learned from them both without the need to ask, and still there were times when she needed to return to the safety of those years when she was a little girl fishing this stream alongside her father. These few minutes with rod in hand always took her back to that time when life was simple, and her dad was there to guide her.\n\nBut time moves on and life brings change. Julie looked upstream about twenty yards and watched her own daughter, Cathy, casting the backwater where the fast-moving flow of the rapids slowed and turned as the stream widened to form the pool that Julie fished so many times as a young girl. Cathy was smiling and she had that habit of letting her tongue stick out ever so slightly between her lips when she was concentrating on the task before her. Julie smiled and returned to her efforts to drift a nymph along the bottom where the earliest fish would wait. She had caught two small browns already today, but returned them to the stream with the order, \"Go get your big brother and tell him I'm waiting.\"\n\nLunchtime came and she called Cathy to join her on the bank. \"We're too early, mom.\"\n\n\"Give them time. They're still waking up.\" She knew that when the water was this cold you needed to put the fly right in front of the fish's nose to get it to bite.\n\nCathy shivered a bit and Julie was reminded that the little ones can't hold their heat like the adults, but Cathy was a determined fisherman and would stay on the stream until her legs froze stiff.\n\n\"Tea or cocoa?\"\n\nCathy grinned. \"Cocoa, please.\"\n\nJulie thought back to how her father always carried two thermoses when they fished. One was tea for himself, and the other was cocoa for her.\n\nMother and daughter split a sandwich and let the sun warm them as they gazed across the water.\n\n\"Mom, I saw you get two and I haven't had a nibble. What are you using?\"\n\n\"Sweetie, when in doubt, I throw a brown nymph with just a touch of color, and I let it bounce along the bottom. Summer or winter, the current will stir up a bug from under a rock and there's always a hungry fish downstream watching for it.\"\n\nCathy reached into the pocket of her vest, drew out her small box of flies, and began to debate the appeal of various nymphs.\n\n\"Mom, when did granddad teach you to fish?\"\n\nIt was such a simple question, and yet it brought a flood of memories that overwhelmed Julie until she was brought back to the moment at hand.\n\n\"Mom?\"\n\n\"Yes, dear. I was just thinking. I guess I was about two years younger than you are now when your grandfather started taking me out on the lawn. He would cut away the end of the hook and teach me to cast on the grass.\"\n\n\"Did you catch anything?\" Cathy was giggling now.\n\n\"Not then, but once he knew I could cast a fly without hooking my ear he started bringing me out to the stream.\"\n\n\"This stream?\"\n\n\"Yes. In fact, we used to sit right here and eat our lunch.\"\n\n\"When did you catch your first fish?\"\n\n\"It wasn't until my fifth or sixth trip to the stream. The first few were spent trying to manage the current and not let it drag the fly into my legs. You know how you need to keep your line straight? Well, it took me a few trips to get the hang of that. In fact, the first trip I was mostly just trying to stand in the stream and not fall in. I had a few close calls that first time. Then one day, when everything worked out just right, I felt the pull on my line, and I got so excited I almost got dunked! I started yelling, 'Dad, dad, I got one!' It was a six-inch brookie, but I caught it in my net and to me it was the biggest fish in the whole river.\"\n\n\"I bet granddad was laughing.\"\n\n\"He was, but I think he was even prouder than I was. He had to help me get the fish off the hook and then I held that little brookie in the stream until it recovered and swam away.\"\n\n\"Have you ever kept a fish you caught?\"\n\n\"No. Keeping a fish was never your grandfather's way. We would let them go so we could catch them again and then we'd go to the store and buy some fillets to cook for dinner.\"\n\nThere had been many fish fries over the years and Julie already had a lifetime of memories of the family sitting around the table on the back deck with fried fish, potatoes and fresh vegetables on their plates, each trying to outdo the other with tales of daring exploits on the stream.\n\n\"Do you ever think about granddad?\"\n\n\"Every day, Sweetie. Every day.\"\n\n\"Why do people have to die?\"\n\nJulie wiped a small tear from her eye and struggled to answer one of life's big questions for which there are no good answers. \"People have been asking that question since the beginning of time. I guess if people didn't eventually die it would get too crowded on Earth.\"\n\n\"I miss him a lot, mom. I miss the way I used to sit on his lap when he read me stories before bed. I miss his silly jokes and the big kisses he would give me on my neck that tickled me and made me scream.\"\n\n\"I know, Sweetie. I grew up with those stories, and those silly jokes, and all those big, ticklish kisses. I'd give anything to have just a few of those kisses again.\"\n\nJulie had tears in her eyes as she thought and weighed her options. There was really only one answer to Cathy's question that had ever brought Julie any comfort. \"Sweetie, you know how we all go to church on Sundays?\"\n\n\"Yes.\"\n\n\"At church they teach us that we will see the people we love again someday.\"\n\n\"When will that be, mom?\"\n\n\"Oh, Baby, hopefully not for a very long time. You have so much to do first. You need to grow up, decide what you want to do with your life, find someone to spend your life with, and raise some children of your own. You won't see your granddad again for a long time, but for now we keep his memory alive and remember all he taught us and how he loved us all.\"\n\nBoth young women sat quietly for a time, reflecting on the man they both loved and missed.\n\n\"Have you found that nymph, yet?\"\n\n\"No, but I have a few here.\"\n\nAs Cathy was absorbed in searching her kit for the perfect nymph, Julie looked downstream to where her husband was fishing below the line of rocks at the bottom of the pool that added a little turbulence and some much-needed oxygen to the flow. David had become a very adept fly fisherman since marrying Julie. Her father had seen to that, and David had applied himself eagerly to the lessons. Upstream, her mother was fishing the fast water with all its challenges. It occurred to Julie that she had too often underestimated her mother's skill with a rod. She knew where the big fish lurked and how to reach them. Those big browns knew that food would be carried directly to their waiting mouths if they waited in just the right place in the shadow of the boulders where only the biggest fish could hold. It took someone with skill and determination to fish those rocks.\n\n\"What do you think of this one, mom?\"\n\n\"I think that should do the trick.\"\n\nLooking across the stream at Rob, David's younger brother, the two women smiled. He had succeeded in snagging a bush on the bank behind him and was patiently extracting his line from the branches and leaves. Cathy tried not to giggle. \"Uncle Rob just can't get the hang of casting, can he mom?\"\n\nSmiling, Julie said, \"No, sweetie, but your Uncle Rob tries very hard. He really does.\"\n\nAs Cathy giggled and began the process of patiently and expertly tying the nymph to her leader, Julie glanced one more time at her family fishing the stream that she knew so well. She knew that come what may, Cathy would always be surrounded by love, protected by the hearts and arms of two families that had come together to make one. For just a moment, lost in her own thoughts, Julie said a silent prayer. \"I love you, dad. We all miss you. We'll make you proud.\"\n\nJulie heard the quiet snip of the clippers as Cathy dressed the knot at the end of her leader and looked at her daughter.\n\n\"Ready.\" Cathy said.\n\n\"Go for it, kiddo.\" With that, Julie watched her daughter walk back upstream to take her position at the backwater's edge. As she watched her daughter prepare, Julie smiled and understood what her father must have felt all those years ago as he patiently directed and molded the fisherman in her. She knew that he had used fishing to teach life lessons in patience and discipline and that conservation was really just a way of showing consideration for others. With one last prayer of \"Thanks for everything, dad.\" Julie stood and continued her own search for the elusive big brown that would be the basis for her story over dinner that evening as they all sat around the table enjoying the approaching night and the love of family."
    ],
    "authorname": "Just_Words",
    "tags": [
        "father",
        "daughther",
        "fishing",
        "metaphor",
        "life lesson"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/fishing-with-my-daughter-pt-04"
}