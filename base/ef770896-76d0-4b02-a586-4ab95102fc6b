{
    "title": "Love Among the Elk",
    "pages": [
        "\"Damn it, Les, you know how I feel about reporters. After the last time I said I'd never take one again!\"\n\nMy boss looked at me wearily over the piles of papers, maps, and samples of antler on his well worn GSA desk.\n\n\"I also know that the budget axes are being sharpened in DC. Saving elk has to compete with everyone else's pet program for funding. A dramatic photo feature in a national magazine will go a long way toward keeping your program going next year.\"\n\nLes knew he had me there. He pulled a scrap of paper from one of the piles- don't know how he does it, but he can find anything on that desk effortlessly- and held it out.\n\n\"Here's the number. I spoke to her a little on the phone and she seems like a decent enough gal. Go call her and make plans to take her on the roundup next week.\"\n\nNo matter how many sexual harassment seminars the Civil Service sent him to in his 30 years with Fish & Wildlife, Les could never break the Westerner's habit of referring to any female under the age of 70 as a \"gal\". I don't think he cared, and since he was a perfect gentleman to every woman he encountered in his work the PC Police gave up making an issue of it.\n\n\"Les, come on...\"\n\nWhen you reach the limit with Les you know it for sure. His eyes turned to ice.\n\n\"I ain't asking, son. Go make the call.\"\n\nThe he smiled a little.\n\n\"Hell, you might be lucky. Like I said, she sounds like a decent gal, and she may even be pretty. No way to tell on the phone. Lord knows there's not many cute single gals around here.\"\n\n\"Yeah, not since you grabbed up the last one!\"\n\n\"Hell, son, that was twenty-seven years ago come next June. Which reminds me, Sharon said to tell you to come over to supper Sunday. She thinks you're looking too thin again from eating your own cooking.\"\n\nSharon may have been a bit plump and answered to \"mom\" when I jokingly called her that, but there was no question she had been a beauty in her day. Still was, as far as Les was concerned.\n\n\"Tell her I have all the buttons on that microwave figured out.\"\n\n\"That's what she's afraid of. Be there about four.\"\n\nHe knew me well enough. A choice between Sharon's home cooking and microwaving whatever I had stocked up on the last monthly trip to the Costco seventy-five miles away was no choice at all.\n\nThe number Les gave me started with \"212\". Great, a city girl from New York. This was looking like a disaster already. I got passed through several operators before I got to the right desk.\n\n\"Miss Erskine?\"\n\nThe voice, a musical contralto, was decidedly cool.\n\n\"This is MS Erskine. Who's this?\"\n\nMaybe I exaggerated my Western drawl just a little.\n\n\"My name's Jim MacNeil, ma'am. I was told you wanted to come report on the elk roundup we're planning here in Oregon next week.\"\n\nShe warmed up just a little.\n\n\"Oh, right, I was expecting your call. I mainly want to take a lot of pictures of the process, and interview you and the other wildlife biologists about why you do this. I'm hoping the magazine will turn it into a feature that will grab the armchair adventure crowd.\"\n\n\"Well, that sounds just fine. I want you to understand what you're getting into, though. We spend long days way out in the mountains wrangling scared wild animals that can weigh up to a thousand pounds. It can get dangerous in a hurry, and I don't have a catering staff for reporters.\"\n\n\"Don't worry about me, Mr. MacNeil. Just let me know when and where to be there.\"\n\nSo I had pissed her off. Who cares, I don't like reporters anyway. We arranged for her to meet us at the parking lot where the crew was gathering to head up into the hills and hung up.\n\nMy crew wasn't any happier about her than I was.\n\n\"Another one? Christ, remember that bimbo they sent out the last time? Who the hell goes out in the mountains in a miniskirt and high heels?\"\n\n\"I didn't mind that, since she did have nice legs, but I didn't appreciate her attitude. I haven't seen that much whine since the Yamhill Harvest Festival!\"\n\nWe all groaned, and Chuck tried to give Ben a knuckle rub. The worse the pun the better Ben liked it. I stepped in.\n\n\"All right, guys, knock off the grabassing. This could make or break our funding for next year, so give this gal a chance. I already told her it could be dangerous and uncomfortable and she still wants to come.\"\n\nThe guys settled down and we got on with planning the movement of fifty elk from an overpopulated area to an underpopulated one.\n\nWhen we got to the grocery store parking lot where we were meeting to start the roundup the next morning, a teal Taurus was already sitting in the lot. A long figure in jeans and a fleece pullover unfolded itself from the front seat and walked over.\n\n\"Mr. MacNeil? I'm Wendy Erskine.\"\n\nI took the hand she stuck out. Tall, slender, with dark red hair (is that what they call \"auburn\"?) and green eyes, she was the type you might pass over on a first glance, but a second one would definitely stick. Classic beauty with no hint of flash. Tall works for me, too; I got dumped in college by a little cutie who explained that she didn't consider herself short at 5'3\", but couldn't see spending the rest of her life standing next to a man a whole foot taller. The \"Mr. MacNeil\" drew a chuckle from Ben.\n\n\"Call me Jim, please.\"\n\nBen's voice from behind me:\n\n\"Or do like the rest of us and call him oof, damn it, Chuck....\"\n\nI turned.\n\n\"It's too damn early to be starting this crap, guys. How about letting us get some coffee first?\"\n\nI turned back.\n\n\"Sorry about the language, Ms. Erskine.\"\n\nShe laughed. Reminded me of a carillon ringing.\n\n\"Wendy, please. And I'm from New York, remember? I didn't know there were still men who are embarrassed to swear in front of women.\"\n\n\"Well, we try to act a little better out here. Look, let's put your stuff in my truck and you can ride with us. No sense taking more vehicles than we need, and that Taurus isn't built for rough roads.\"\n\n\"Yeah, and the rental agency wants everything but my first born child if I bring it back dinged up. Let me grab my stuff.\"\n\n\"Need a hand?\"\n\n\"Well, if you don't mind, sure.\"\n\nPoints to her; the last one had just said \"please have your people load those cases\" and gone off to apply another layer of makeup or something. My guys will pitch in on anything if asked politely, but they didn't appreciate being treated like dude ranch waiters.\n\nFollowing her across the lot, it struck me that her hiking boots looked well broken in. Good sign. Something else struck me as she reached into the trunk: her well worn jeans fit her trim hips VERY nicely, and she appeared to be wearing the world's smallest string bikini panties under them. Bless me, Gloria Steinem, for I have sinned: I was checking out a pretty woman's panty lines. Pathetic, I know, but attractive women were few and far between out where we worked and lived. She straightened and handed me a well used Kelty Redwing backpack. \n\n\"Would you mind holding this while I grab something out of the back seat?\"\n\nWhy, no, I wouldn't mind watching her bend into the back seat at all. The Redwing was a good sign too: it's a classic piece of gear for serious hikers, and I had one myself. She came up with a couple wide, flat white boxes and walked over to where the guys were pouring coffee out of Thermoses on the tailgate of my truck.\n\n\"I passed a Krispy Kreme on the way from the airport, and they had the 'hot and fresh' sign lit. No way I can eat all these by myself. Can you guys help me out?\"\n\nThis gal was one smart cookie. She knew that the way to a man's heart is through his stomach, and these guys would be falling over themselves to help her the rest of the day. The residue of hostility the last reporter chick left was vanishing as fast as the donuts. I didn't even get any attitude when I told the guys that she got the shotgun seat next to me in the Suburban. Once we were out on the road she pulled out a notebook and turned to me.\n\n\"Can you explain to me from the beginning what you're doing here today?\"\n\nI took a sip of coffee from my oversized travel mug and got started.\n\n\"Did you get the AAA map of this area before you came out here, or do you rely on GPS?\"\n\n\"I don't rely on GPS.\"\n\n\"Smart woman. Every winter we have to rescue some city people whose GPS led them up a closed mountain road. Anyway, when you look at the map you focus on the roads, right?\"\n\n\"Pretty much, yeah.\"\n\n\"If elk could read maps they would do the opposite and focus on the roadless areas. The unsettled mountain areas are the elk habitat. People settle and build roads along the valley floors, and that breaks up the traditional elk migration routes. Once a farmer plants crops he doesn't want a herd of elk tramping through eating everything in sight, even if they've been using that route for the last thousand years. He's going to fence them out, chase them off with dogs, or sometimes do something even shadier to get rid of them. Same with the Roads & Highways people; they fence off major roads to avoid car-game collisions. If you colored in the elk habitat on your map it would look like a chain of islands.\"\n\nShe pulled a map out of her backpack and unfolded it without jostling me. \n\n\"OK, I see what you're saying.\"\n\n\"Now, sometimes the elk population on one island, so to speak, will get bigger than the habitat can sustain. They start eating everything down to the ground, which causes erosion, and wander into populated areas where they get into trouble. Come winter, they die off from lack of food and stored body fat. The solution is to capture a bunch of them and move them to another 'island' that's underpopulated. That's what we're doing today.\"\n\n\"Hey Jim!\"\n\nI sighed.\n\n\"What, Ben?\"\n\n\"Did you bring the barrels of Margaritas and suntan lotion for them elk on islands?\"\n\nScattered chuckles.\n\n\"Don't laugh, you guys, it just encourages him.\"\n\nWendy shook her head, but I could see a faint grin. Cute dimples, too.\n\n\"How exactly does it work?\"\n\n\"We have a long set of fences set up in a V shape near a meadow where they like to graze. We use horses and ATVs to push the elk into the funnel, and before they know it they're in the corral at the point of the V. Once they settle down a little we pull them out one at a time, sedate them, give them a quick checkup, ear tag, and vaccination, and put them in a horse trailer. Once the trailer's full another crew hauls it to the release area, unloads them, and watches them until they're on their feet and walking steady again.\"\n\n\"Why do they watch them?\"\n\n\"Until they can take care of themselves they're easy prey for coyotes and feral dogs. Cougars too, but a cougar generally won't try for a kill in front of a bunch of humans. Some places have had problems with two-legged lowlifes trying for an easy kill, so we want it known that there's guards with rifles sitting right there.\"\n\n\"You guys would actually shoot someone for poaching?\"\n\nUncomfortable silence. A couple years before a \"guide\" from the next county had started letting it be known that for the right price- well over $50,000- he would guarantee a world record trophy, without worrying about little details like licenses, tags, seasons, or National Park or Game Refuge boundaries. When he didn't return from one trip, the locals had unanimously claimed they were too busy to help with the search- something totally unheard of. I suspected that one or two of the guys in this very truck knew exactly why he was never found, but we never talked about it- especially not in front of a reporter.\n\n\"In these parts the only thing lower than a poacher is a child molester. I have no problem with honest hunting- I couldn't keep this program going without help from hunters and hunting organizations- but no one hates a poacher more than an honest hunter. Anyway, it's never come to that. It's just easier to run them off when it's clear that they aren't going to poach an elk without a fight. They wouldn't poach if they wanted to do things the hard way.\"\n\n\"So how do I fit into this?\"\n\n\"I thought we'd start by putting you behind the fence near the mouth of the V, where the drive will go right past you and you should get some good action shots. Then you'll be close to the corral and you can move over there to follow the action. From there you can watch us process the elk, and if you want to go with one of the dropoff crews that shouldn't be a problem. Let's see how things develop.\"\n\n\"If you think you're going to just set me in a corner out of the way, you can think again.\"\n\n\"I'm not trying to do that. Sometimes an elk will panic and try to bolt out of the trap, and the riders scramble to cut it off. If you're out in the middle only watching what you can see through a lens one or the other will run you over. I just don't want anyone getting hurt.\"\n\n\"Well, OK, let's see how this works before we start fighting over it.\"\n\n\"Makes sense to me.\"\n\nWhen we got there I showed her where I wanted her to stand and went to deal with the real work of the day. Once we had the elk in the corral we broke for lunch while they got a chance to calm down from the chase. I found Wendy sitting on a log with a small laptop in front of her and a one person audience. Lindsay Collins was one of my favorite people in town. A precocious, twelve year old bundle of bones and hormones, she still played with dolls when she wasn't driving our lone teacher crazy trying to keep up with her prodigious intellectual hunger. They were flipping through pictures on the screen and exclaiming over them.\n\n\"Isn't Uncle Jim handsome? All the moms think he needs a girlfriend, but he's too busy with those dumb animals.\"\n\nI couldn't let her answer that one.\n\n\"Did you get some good pictures?\"\n\nWendy greeted me with a bright smile.\n\n\"Hey, you were right, I did get a great view of the roundup from where you left me. Come have a look.\"\n\n\"Glad it went well. Hi, Lindsay, how are you doing?\"\n\n\"I'm helping Ms. Erskine, and she's showing me all about photography. I think I want to be a photographer myself when I grow up!\"\n\n\"That's great, kiddo, but I think your mom's wondering where you got to. Why don't you go show her you're still alive and then come see if Ms. Erskine needs any more help this afternoon?\"\n\nThe roundups had developed into a family event years ago when the original volunteers started bringing their wives and kids. The younger women tended to jump on their own horses and ATVs and dive in as enthusiastically as the men, while the older generation sat in the shade, gossiped, and kept the little kids out from underfoot. \n\n\"Oh, all right. Hey, isn't Ms. Erskine pretty? Why don't you ask her for a date while I'm gone?\"\n\n\"Lindsay, remember that talk we had last week about asking grownups personal questions? I think I just heard three or four too many. Don't you want to be my girlfriend anymore?\"\n\n\"Don't be silly, Uncle Jim, you can't be my boyfriend. You're old!\"\n\nI ignored Wendy's chuckle.\n\n\"I bet Johnny Smith will be glad to hear that.\"\n\nLindsay blushed and stuck her tongue out at me.\n\n\"He's just a dumb boy. I don't need any boyfriends!\"\n\n\"You sure don't, young lady, and I hope you remember that. And it's unladylike to stick your tongue out at people. I bet Ms. Erskine doesn't do that.\"\n\nWendy promptly stuck her tongue out at me, sending Lindsay into fits of giggles.\n\n\"I should have known better than to take on two women at once. Run along and find your momma and give me a fighting chance.\"\n\nLindsay scampered off and Wendy turned to me.\n\n\"I keep telling her to call me Wendy, and she just ignores it.\"\n\n\"Kids around here aren't allowed to call adults by their first names. You shouldn't put her on the spot by telling her to- she knows she'd get in trouble for it later.\"\n\n\"Now it makes sense. She's a really bright kid.\"\n\n\"Yeah, she is. I think she's read every book I and every other adult around here own. Answering her questions about things I haven't read since college gets to be a real strain.\"\n\n\"I noticed there's some you didn't answer.\"\n\nWas she flirting? Suggesting that she'd like me to ask her out?\n\n\"I'm a Federal employee, remember? At the last sexual harassment seminar I was told that I'm not allowed to notice if a woman's pretty or not while I'm on duty.\"\n\nShe gave me a Mona Lisa smile and retreated to safer ground.\n\n\"So Lindsay wants to be a photographer?\"\n\n\"Last week she wanted to run for Congress. I think she's just impressed with the glamorous, globetrotting New York City reporter.\"\n\nWendy rubbed at a streak of dirt on her \"New York City Marathon\" t-shirt.\n\n\"I'm hardly glamorous today.\"\n\nI rapidly pulled my thoughts back from the track her gesture sent them down- healthy B cup at least, hint of lace, this gal has good taste in lingerie and would feel great against my chest...\n\n\"I doubt your sister gave you that haircut in her kitchen, you didn't buy those jeans at Wal-Mart, and you smell of Joy. By our standards you're pretty glamorous.\"\n\nHer turn to blush a little.\n\n\"Thanks, I think. How are you related to Lindsay?\"\n\n\"Technically I'm not. Her bio father disappeared a couple months before she was born. Said he had a job offer fishing in Alaska, but who knows? Never came back, anyway. Her momma worked her way up to being one of the local forest rangers. Good woman, but she's got her hands full. I met Lindsay when I came to town and started using the basketball hoop behind the ranger station in the evenings. Before I knew it I was coaching the pee wee basketball team. Somehow the ones that don't have a father in their lives kind of stick out, you know? I got in the habit of doing stuff with her once in a while. It's not like there's a lot going on most evenings around here.\"\n\n\"Well, she seems like a great kid.\"\n\n\"She is. Thanks for letting her follow you around.\"\n\n\"My pleasure, believe me.\"\n\nWe smiled at each other and I heard a yell from the fence line.\n\n\"Hey, Jim, no romancin' on government time! Let's get 'er done!\"\n\nWendy shook her head, grinning.\n\n\"How do you put up with that Ben character?\"\n\nThere was a startled shout from the corral.\n\n\"Watch this.\"\n\nA cow elk had wiggled loose and made a break for freedom. Ben straightened from his lean on the fence and made what looked like a casual gesture with his right hand. A lariat snaked out and looped itself around the animal's flying front legs, and Ben brought it crashing to the ground unhurt with a pull on the rope. Before the elk knew what had happened its legs were tied together, it had a gunnysack over its head, and it was being gently loaded into a horse trailer. Ben casually looped up his lariat and went back to leaning on the fence.\n\n\"Ben makes it look easy, but even out here there's not a cowboy in a thousand that could have done that. I'd put up with more than dumb jokes to have him on my team.\"\n\n\"I thought you roped animals around the neck?\"\n\n\"Do that to a wild elk and it's either going to fight the rope until it strangles or charge and kick you half to death. Roping the legs is harder, but it's safer for all involved.\"\n\n\"I wish I'd had my camera ready for that.\"\n\n\"If you ask Ben he'd be thrilled to show you what he can do with a rope. He's won national championships. Look, I do need to get back to work. Feel free to watch anything as long as you're not underfoot, and if you leave here please let me know so we aren't searching for you half the night. Otherwise, meet me at my truck about 5:30.\"\n\nShe winked.\n\n\"Sounds good. See you later.\"\n\nI went back to work slightly dazed, but shook it off fast with the amount of work we had to do. Wendy was around with her camera constantly, shooting on the edge of the action but never having to be told to get out of the way. I noticed that I wasn't the only man there who was slightly distracted by those long legs and well filled T-shirt, but any ruffled feathers among the women were quickly smoothed by her unpretentious manner and genuine interest in what we were doing. Before I knew it the shadows of the mountains were getting long and the corral was empty. Wendy met me at my truck as ordered, looking tired but happy.",
        "\"You get what you needed?\"\n\n\"A lot of it, yeah. I should have this assignment done right on schedule.\"\n\n\"Not sure if I should be happy about that or not.\"\n\nShe gave me a speculative look but didn't answer. Back at the parking lot, I helped her toss her Redwing back in the rental without being asked.\n\n\"So where you staying?\"\n\n\"The closest motel I could find was the Shady Dell, so I got reservations there.\"\n\n\"Christ, that's forty miles down the state highway and it's a dump.\"\n\nNothing ventured, nothing gained.\n\n\"Look, don't take this the wrong way, but I have a spare bedroom at my place. It's not much but it's clean and it will save you a lot of driving.\"\n\n\"Said the spider to the fly?\"\n\nHer smile took the sting out of it.\n\n\"Hospitality is sacred out here. I swear nothing's going to happen that you don't want.\"\n\n\"I believe you. Will you help me get the rest of my stuff in your truck?\"\n\nMy house isn't much more than an old fire lookout tower, originally built by the CCC in about 1932. The work I had put into it went more into modern plumbing and electricity than d\u00e9cor. She carried her backpack into the one main room and looked around.\n\n\"This is cozy.\"\n\n\"I live in a very small house, but my windows look out on a very large world.\"\n\nHer eyebrows shot up.\n\n\"A cowboy who quotes Thoreau? That's new.\"\n\n\"A reporter who recognizes Thoreau? I'm impressed.\"\n\nShe grinned.\n\n\"You win. Do you have a shower around here?\"\n\n\"Right this way. Here's your room, and there's clean towels in that cupboard. The washer and drier are in that closet if you want. Help yourself.\"\n\nI left her to it and went to fix dinner, trying not to imagine hot sudsy water sluicing all over her bare curves. She eventually reappeared in an oversized sweatshirt and a pair of running shorts, rubbing a towel through her hair. It fell precisely into place even wet- clearly it had been cut by a genius.\n\n\"Smells great!\"\n\n\"I don't often have an excuse to cook, living alone. Hope you like Pasta Carbonara. Grab a glass of wine.\"\n\nShe picked up the bottle and saw the note.\n\n\"Good luck, Sharon? Who's Sharon?\"\n\n\"My bosses' wife. She left that here this afternoon.\"\n\n\"How did she...\"\n\n\"Cell phones don't work out here, but the bush telegraph sure does.\"\n\n\"She has a key to the place?\"\n\n\"A key? Oh! No one locks their doors when they're only gone for the day.\"\n\n\"That sounds really nice.\"\n\n\"Can you watch this stove while I take a quick shower?\"\n\n\"Sure, no problem.\"\n\nI showered in record time, ran back, handed her a plate of food, and we chowed down. When we were done I stood up.\n\n\"Come out on the deck and catch the last of the sunset.\"\n\nThe deck is why I live there; you can see three major volcanoes from there, and their glaciers were turning all the colors of sunset. The smells of sage and pine perfumed the air, and the crickets were chirping. I pointed out a golden eagle circling over a meadow down below us.\n\n\"This is amazing!\"\n\n\"Yeah, I love it out here.\"\n\nShe flopped into the hammock I keep out there. \n\n\"I could get used to this, too. Look, there's the first star! You making a wish?\"\n\nI looked at her.\n\n\"Yep, I sure am.\"\n\nMaybe she blushed, maybe it was just the sunset...\n\n\"We don't see stars like this in New York. Do you recognize the constellations?\"\n\n\"Sure. There's the Big Dipper, and if you follow the line of the last two stars out you get to Polaris, the North Star. Useful for not getting lost.\"\n\n\"I'm not seeing it.\"\n\nI knelt beside her and pointed, grunting slightly.\n\n\"See the Dipper? Look for the bright star out there...\"\n\n\"You OK? You look uncomfortable on that deck.\"\n\n\"No problem. Just some sore muscles from a long day.\"\n\n\"Will this thing hold two?\"\n\nI grabbed the old quilt out of the tote box under the hammock and joined her without hesitation. Put two people in a hammock and they inevitably end up lying against each other. I got us both wrapped in the quilt, and we found that it was easiest to point out constellations if she put her head on my shoulder and I pointed with the arm I had around her. She did feel delightful, all the more so because she apparently hadn't bothered to put on a bra after her shower. We did that for a while, swinging gently in the hammock. \n\n\"You learn a lot today?\"\n\n\"You wouldn't believe how many women made a point of telling me that you're single and a really great guy.\"\n\n\"Those women don't have enough drama in their lives.\"\n\n\"Why is it such a big deal to them?\"\n\n\"Perspective. They look at me and see one of the few men around here with an education and a steady job, and wonder why I'm single. Most single women, on the other hand, see a scientist who lives in the middle of nowhere on a government salary and spends his time studying wildlife. They don't exactly knock down my doors.\"\n\n\"Not many single women around here?\"\n\n\"Not unless I want to compete with a dozen other men for the cocktail waitress down at the Dew Drop Inn, which I don't.\"\n\n\"New York City isn't that much better, in my experience.\"\n\n\"Really? A beautiful woman like you?\"\n\n\"Now you comment?\"\n\n\"I'm off duty now, so I'm allowed to notice the obvious.\"\n\n\"Well, it's nice of you to say that.\"\n\nShe thought for a second.\n\n\"The men I meet in New York are obsessed with either getting or spending money. I finally decided that I'd rather stay home than spend another first date listening to some blowhard talk about how much money he made last week day trading or his house in the Hamptons. I notice that you'd rather talk about elk and your friends.\"\n\n\"Hell, I'm a government scientist. A smart reporter like you can find out what I make in about thirty seconds. What more is there to say about it? I do all right, but if you're looking for a man who's hell bent on getting rich you're in the wrong hammock.\"\n\nShe leaned over and looked me in the eyes.\n\n\"That's why I think I'm in exactly the right place.\"\n\nThe kiss was long and slow and sweet, an acknowledgement of our intense mutual attraction and our desire to see where it might lead us. When I tried to deepen it and started sliding a hand under her shirt, though, she put a hand on my chest and pulled back.\n\n\"\"Jim, I'm obviously incredibly attracted to you, but I have a couple rules I never break.\"\n\n\"Uh oh.\"\n\n\"I don't do one night stands, and I don't sleep with the subjects of my stories.\"\n\n\"Could you stay an extra day or two?\"\n\n\"I'm not into two night stands either! And what about being the subject of my story, wise guy?\"\n\nShe was smiling, so I wasn't worried.\n\n\"How fast can you finish your story?\"\n\n\"Probably a week or two after I get back to New York.\"\n\n\"That doesn't really help, does it? Look, all I can say is that I don't want this to end when you leave here.\"\n\n\"Neither do I. For tonight, though, I think it's time we head to our own beds.\"\n\nAt the door of her room she paused, turned slowly, and slid her arms around my neck.\n\n\"From the neck down there's nothing I'd like more than to spend the night in your bed. That's why we have rules, though, isn't it? For times when we're really tempted?\"\n\n\"And I would love to toss you on my bed and spend the night ruining you for any other man, but I have to respect your principles even though it's frustrating. You're still my guest.\"\n\nOne long last kiss, and she pushed me back.\n\n\"I have to stop this before I do something I might regret. Good night.\"\n\n\"I promise you wouldn't regret it, but OK. Good night.\"\n\nThe next morning she wandered into the main room looking tousled, sleepy eyed, and totally adorable.\n\n\"Morning. Sleep well?\"\n\n\"Yeah, that was a long day yesterday.\"\n\nShe stretched her arms wide and yawned. Apparently she had lost the shorts sometime during the night. She really did have great taste in lingerie. She caught my look and rapidly pulled down the hem of her sweatshirt.\n\n\"Oops, sorry!\"\n\n\"For what? You just made my morning!\"\n\nShe blushed. \n\n\"Well, might as well do it right, then.\"\n\nShe came over and kissed me before scooting off to get dressed. That really was a terrific way to start the day. Then I noticed that the little minx had swiped my cup of coffee. I grinned to myself. Cheap at the price. I went and poured another.\n\nShe came back in jeans and hiking boots, ready to go.\n\n\"So how did a city girl get so comfortable in the woods?\"\n\n\"I wasn't born a city girl. I grew up in Vermont and moved to the city to go to J-school at Columbia. I had a job waiting when I graduated and stayed there. So what's the plan for today?\"\n\n\"We have about half a day's work left to do on the roundup. Once we're done, we usually have a potluck supper over at the grange hall. These folks live so far apart, they grab any excuse to socialize. I'll take you with us for the rest of the roundup to finish any pictures you still need. If you still want to interview people, they'll all be at the potluck.\"\n\n\"Makes sense. Lead on, MacNeil!\"\n\n\"I thought that was 'lead on, MacDuff?'\"\n\n\"Close enough for Government work.\"\n\n\"Hey, cheap shot!\"\n\nShe laughingly dodged my swats at her rear end all the way to the Suburban and didn't fight when I caught her at the door and kissed her before getting in. She did warn me to cool it before we picked up the rest of the crew.\n\n\"I know. Lay a hand on you in front of anyone else, and they'll be talking about it until Christmas.\"\n\n\"That, and those ladies won't be half as friendly if they think I'm some sort of hussy.\"\n\n\"Honey, you've got elegance out the wazoo. But you're right, let's cool it.\"\n\n\"Nut!\"\n\nThe morning chores went quickly enough, and we headed over to the grange hall. Wendy was going from table to table, listening to the chatter, asking questions, and taking the occasional picture. The men posed cheerfully, the women were reluctant until they saw that she had a real eye for the inner beauty under their hardworking faces. I hung out with my crew, chatting and joking.\n\n\"Ya know, Jim, that Ms. Erskine is one heck of a nice gal.\"\n\n\"I notice you bums didn't try to make her cross the creek on a wet log.\"\n\n\"Hell, we didn't tell the last one to do that either.\"\n\n\"You sure didn't tell her about that new footbridge just around the bend, did you?\"\n\n\"Well, after what she called Ben when he told her that the restroom was behind the third bush on the left, we didn't think she wanted any more advice.\"\n\n\"Yeah, and you didn't hear from DC when she squawked about getting soaking wet!\"\n\n\"That's why they pay you the big bucks, Jim.\"\n\nThere was a sudden stir as the guys got to their feet and took off their hats. Cowboys still show respect the old fashioned way. Wendy gave them all a bright smile.\n\n\"You guys have been great, and I hope my story helps what you're doing here. I'll send you all copies when it gets published. Jim, could you give me a ride to my car?\"\n\nNeither of us knew what to say when we got there, so I tried.\n\n\"Wendy, I meant what I said last night. I don't know what we're starting here, but I don't want this to be the end of it.\"\n\n\"I meant it when I said I didn't want this to be the end of it either.\"\n\nShe unsnapped my shirt pocket, pushed a folded piece of paper into it, and snapped it again.\n\n\"Now you have all my phone numbers and e-mail addresses. If you don't call me I'm going to have Ben after you with his lariat!\"\n\n\"It won't take that, believe me.\"\n\nShe kissed me, we hugged for a long time, and with one final kiss she got in her rental and drove off. I felt lower than an August snowpack.\n\nI got about half a mile back down the road when a blond head popped up in the mirror. I jumped about a foot.\n\n\"Uncle Jim! I saw you kissing Ms. Erskine!\"\n\nThis was all I needed. First things first.\n\n\"Lindsay, get your little butt up here and put a seatbelt on.\"\n\nI had a little time to think while she did so.\n\n\"Lindsay, if I tell your momma you were sneaking around spying on me she's gonna ground you until you're in high school, right?\"\n\nThe excitement left her eyes quickly. \n\n\"Yeah, she would. You gonna tell?\"\n\n\"Tell you what. You keep your mouth shut and I will too. It's not about your safety- it's not about you at all- so it's an OK secret. All right?\"\n\n\"All right.\"\n\nWe shook on it. Now for the hard part.\n\n\"Look, there's nothing wrong with grownups who really like each other kissing. It might even be all right for you once you turn, say, twenty-five.\"\n\n\"Gross! I'm not going to kiss any boys.\"\n\n\"Good plan, kiddo.\"\n\nShe thought a little.\n\n\"Ms. Erskine says she's twenty-six.\"\n\nTwo years younger than me. Perfect age.\n\n\"Then there's nothing wrong with her kissing me, is there? Those dumb cowboys I work with might tease her about it, though, and no girl likes to be teased, right?\"\n\n\"I hate it.\"\n\n\"So don't put your friend in that position, OK?\"\n\n\"Is she my friend?\"\n\n\"She already told me she really likes you.\"\n\nLindsay beamed.\n\n\"I really like her too! She's so smart, and pretty, and she lets me help with important stuff and talks to me like I'm not just a kid who doesn't know anything...\"\n\nShe thought for a couple minutes.\n\n\"Uncle Jim?\"\n\nMy mind was a long way away with a certain long-legged redhead.\n\n\"Hmm?\"\n\n\"I think you should marry Ms. Erskine.\"\n\n\"You know, Linds, that's an interesting idea. Grownups don't get married after they've only known each other for a couple days, though. Besides, she lives three thousand miles from here. We have a lot to work out before we start thinking about anything like that.\"\n\n\"Well, you like her, don't you?\"\n\n\"I sure do. I wish that was all there was to it.\"\n\nOf course I called Wendy as soon as she was due back in New York. We got in the habit of talking every other day or so. It stayed light, sharing our day and what was going on with our work while avoiding the issue of what we were going to do next. She had a bunch of follow up questions as she finalized her big article on the roundup, and I did my best to help. \n\nShe sounded more excited than usual when I talked to her a week or so after the article was due.\n\n\"Guess what, Jim? My editor likes the article but she says it needs follow up. She wants me to come out there again and do a report on how the transplanted elk are doing.\"\n\n\"Hey, that's great! When will you be here?\"\n\n\"Well, I'm going to Alaska on another assignment in about six weeks. How will the elk be looking then?\"\n\n\"Should be the ideal time. Listen, how about you take a few days off while you're here and you and I go play tourist? There's some incredible parts of this state you've never seen.\"\n\n\"That sounds great, but my schedule's too tight for that. I have to get the Alaska thing done.\"\n\nMaybe I was sounding desperate, but I had to try.\n\n\"What if I took a few days off and came to Alaska with you?\"\n\n\"I can't bring a date on an assignment, Jim, it's unprofessional. Don't get me wrong, I'd love to have some serious time alone with you, but let's make the best of what my calendar allows for now.\"\n\n\"How about I meet you at the airport? That gives us at least a little time to ourselves. \"\n\n\"Sounds good to me.\"\n\nI'm sure I was grinning like a damn fool while I waited for her flight, but I was too excited to care. When she appeared at the gate she looked even better than I remembered, and her grin made the whole drive worthwhile. The hug made my year. As I waited for her to get her carryon stuff organized, I heard a mutter from the gate agent:\n\n\"I see now why you were so excited, son. Good luck!\"\n\nI got her single piece of luggage collected and into my truck in record time, and we started the long drive back to my place. Wendy napped in the passenger seat for the first hour or so and then yawned and looked around.\n\n\"You clean this truck just for me?\"\n\n\"Well, I had to search it for hyperactive twelve year olds anyhow.\"\n\nI started to tell her about Lindsay, but she stopped me.\n\n\"Lindsay already fessed up. Don't bother. Sounds like you handled it pretty well.\"\n\n\"You talk to her?\"\n\n\"She e-mails me whenever she gets close enough to civilization, and I write back.\"\n\n\"What about?\"\n\n\"Girl talk. Mind your own business.\"\n\n\"If you're hiding anything serious from me, you and I have a real problem!\"\n\n\"Don't be stupid, Jim. Don't you think I'd be on the phone to you in about two seconds if I thought that little girl was in danger? What do you think I am?\"\n\nI took a deep breath. She was absolutely right.\n\n\"You're right, and I'm sorry. I don't always stop to think when it comes to that kid.\"\n\nShe smiled at me.\n\n\"I like your instincts if not your judgment. I pity the first boy who tries to take her on a date!\"\n\n\"I just hope she keeps thinking boys are icky for a while longer. How old were you when you stopped?\"\n\n\"Stopped? I still think boys are icky. Present company excepted of course, most of the time.\"\n\n\"I said I'm sorry! They all ARE icky except for me. Keep that in mind the next time some slick New York City stockbroker hits on you.\"\n\n\"Believe me, I've seen all of those I want to.\"\n\nWe smiled at each other, the small tiff forgotten, and she held my hand most of the rest of the way.\n\nAt Fish & Game headquarters, we were greeted by a small blond blur that flung itself at Wendy. She hugged it and then held it at arms length.\n\n\"Hmm, who's this?\"\n\n\"You remember me! Stop being silly!\"\n\n\"Lindsay? You look so much older than the last time I saw you! Hmm, I think I saw that name on something...\"\n\nShe pulled a package out of her backpack and handed it to Lindsay.\n\n\"Better open it, kiddo.\"\n\nLindsay tore it open and pulled out a T-shirt with a picture of some skinny dork I vaguely recognized as the lead singer of a popular boy band. Then she held it up and noticed the Sharpie writing on the back.\n\n\"To Lindsay, with love, keep up the good work? Oh my GOD, he signed it? You KNOW him? Oh my GOD!\"\n\nWendy was chuckling.\n\n\"I know people who know him, anyway, and when you said you liked the band I thought you'd like the shirt.\"\n\n\"This is just the coolest thing EVER! Thanks, Ms. Erskine! Wait, there's something else in here?\"\n\nShe pulled out another shirt. This was a polo with the logo of Wendy's magazine on one side of the chest and \"Lindsay Collins, Staff Reporter\" embroidered on the other. She was so overwhelmed she started crying, and Wendy knelt and hugged her.\n\n\"What's wrong, sweetie? You helped me so much with my story I thought you'd like it.\"\n\n\"I LOVE it! You're the best friend ever!\"\n\nWendy rubbed her back until she caught her breath and then stood up.\n\n\"Jim, I know you need to check in at your office. I'm going to take my girlfriend here for a cup of tea and meet you back here in, say, half an hour?\"\n\nI shook my head as they walked off hand in hand with Lindsay chattering a mile a minute. When they reappeared, Lindsay was proudly wearing the \"Staff Reporter\" shirt and the boy band was nowhere to be seen.\n\nThat evening was a lot like the first one once we got to my house. Without the initial awkwardness, it was even less time before we were wrapped in a quilt in the hammock on my deck.\n\n\"Hey, look, there's a shooting star!\"\n\n\"It's the right time of year for them. Keep watching. You know, I think you've convinced Lindsay that she's adopted the world's coolest big sister. How did you get that shirt?\"\n\n\"Our music critics get sent more of that type of stuff than they know what to do with. One of them owed me a small favor so he got the autograph. It's no trouble for them. Personally I think the band sounds awful, but I hated grownups saying that about bands I liked when I was her age. I had the other one made up in the building gift shop.\"\n\n\"Well, that's about the most thoughtful thing I've ever seen. I think she's going to get Membership #2 in your fan club.\"\n\n\"If she's #2, who's #1?\"\n\n\"I am, of course.\"\n\nThis kiss was a lot more passionate than the first time, and we got wrapped around each other in a lot of interesting, complicated ways. She was wiggling against me when she suddenly gasped and her head rolled back.",
        "\"Wendy? You OK?\"\n\n\"yeah...yeah...hold on...omigod...\"\n\nHer fingers dug into my shoulders and she gasped and convulsed again and relaxed with her face buried in my chest. The light dawned suddenly.\n\n\"Honey? Did you just...\"\n\nShe nodded without lifting her head.\n\n\"Twice. Oh God, I'm so embarrassed...\"\n\n\"Why? I think it's great that you got so excited just making out, and I hope that's the first of many, many times you do that with me.\"\n\nShe pulled herself up a little, smiled, and kissed me.\n\n\"What did I do to deserve a man like you? I'm kind of leaving you out, though, aren't I?\"\n\nShe unzipped and unbuttoned my pants quickly and reached inside.\n\n\"Wow! I am lucky. Is that because of me?\"\n\nHer hand moved exploringly, and it was too much for me.\n\n\"Oops! I made a mess, didn't I?\"\n\nShe pulled her hand out and licked it.\n\n\"Tasty one, though!\"\n\nOh Lord. This girl was going to kill me, but at least I'd die happy.\n\n\"I usually don't...\"\n\n\"Hey, no embarrassment allowed, big guy! You've already made me a very happy girl.\"\n\nShe pushed herself up.\n\n\"We better get cleaned up and get to bed.\"\n\n\"Sounds good. Yours or mine?\"\n\n\"Both, I'm afraid. This may sound silly under the circumstances, but you're still the subject of my story.\"\n\n\"Yeah, it does sound silly.\"\n\nI ran my tongue from her collarbone to her ear, and she tilted her head to help out. I could feel her shudder when I nibbled her ear.\n\n\"You sure you want to stop?\"\n\n\"Stop it! I have rules, remember?\"\n\n\"Oh, all right.\"\n\nSo we spent the next day driving and hiking around getting pictures of the elk in their new habitat and the way the overpopulated sections were recovering now that the pressure was off. After a stop in town to say goodbye to Lindsay, I drove her to the airport.\n\n\"When do I get to see you again?\"\n\n\"I don't know, but we'll talk. I'll miss you, Jim.\"\n\n\"I'm going to miss you too. Be careful in Alaska.\"\n\nShe kissed me and headed up the jetway. Damn, this was getting harder every time.\n\nLes came into my office about 4:55 one afternoon. I was staring at the clock, trying to will it to move to 5:00 so I could be off work and talking to Wendy.\n\n\"Son, go ahead and call that filly. You're no use to me until you do anyhow.\"\n\n\"Is it that obvious?\"\n\n\"Sharon says you look at that little reporter the way I looked at her when we were courtin'.\"\n\n\"Hell, Les, you still look at Sharon like she's the only woman in the world.\"\n\n\"In my book she is. Twenty-seven years, and I'm more in love with her than the day we got hitched.\"\n\nHe sat down and propped a well worn Tony Lama on the edge of my desk, studying the toe absently.\n\n\"Son, you ain't asked for my opinion, but here it is anyhow. Life goes by damn fast, and fellers like you and me don't get a lot of second chances at real happiness. Wendy Erskine is one hell of a fine young lady, and she seems to feel the same way about you that you do about her. She sure did have a lot of questions about you, and of course the ladies talked you up something fierce. You're a good man, whether you want to admit it or not.\"\n\nHe stood up.\n\n\"Wise up, son. It's time to stop foolin' around and get a ring on that gal's finger while the iron's hot!\"\n\n\"Damn it, Les, she lives in Manhattan!\"\n\n\"Where there's a will there's a way. Figure it out, son.\"\n\nIt didn't take me long after I went to work for him to realize that Les's \"old cowboy\" routine covered the sharpest mind I had ever met. Hearing that from him gave me a lot to think about. First things first, though.\n\n\"So how did your editor like the article?\"\n\n\"She's making me rewrite it a little bit. She said she sent me out there to do a feature on wildlife conservation, not to develop a crush on an elk-chasing cowboy scientist.\"\n\nI tried to laugh.\n\n\"What did you say?\"\n\n\"I told her I thought I had done a pretty good job of both.\"\n\n\"Damn it, Wendy, I hate this! I mean, talking to you is the high point of my day, but it doesn't feel like enough anymore, you know?\"\n\n\"I know, Jim. I miss you like crazy too.\"\n\nSo there it was out on the table. We thought a bit.\n\n\"You would never be happy in New York City, would you?\"\n\n\"What would a wildlife biologist do there? Count squirrels in Central Park? Are you all that thrilled with big city life?\"\n\n\"Well, it's the center of the publishing world, and my career is here...Look, we've got a lot to think about. Let's call it a night and talk later.\"\n\nWe avoided the subject a while longer. One Saturday night my phone rang.\n\n\"Jim?\"\n\n\"Hi, Wendy, what's up?\"\n\n\"Not much. My girlfriend dragged me out on a double date with some guys she met at work.\"\n\nI suppressed a pang of jealousy- I didn't have a formal claim on her, after all.\n\n\"And?\"\n\n\"So they took us to Tavern on the Green, and it turned out to be the same old thing if not worse. This guy is a lawyer at some big Wall Street firm, and he kept talking about how he outsmarted the other side in some lawsuit so that one bank had to pay another bank a bunch of money. How boring is that? I was sitting there in one of the fanciest, most expensive restaurants in New York, dressed to kill, and all I could think about was how much more fun I had counting falling stars on the deck of an old lookout tower in Oregon. I said I had a headache and went home. Now it's 10:00 on a Saturday night in New York City and here I sit in my jammies talking to my favorite elk herder and trying not to think about what all this is trying to tell me.\"\n\nI couldn't resist.\n\n\"You weren't much on pajamas as I recall.\"\n\nShe giggled.\n\n\"Oh, you don't know the half of it. Some of my girlfriends say this black lace nightie I have on is too revealing, but I wouldn't mind getting your opinion...\"\n\nI groaned.\n\n\"I deserved that. Wendy, what it should be telling you is that you belong out here with me.\"\n\n\"You may be right. That's a big change in plans for me, though.\"\n\n\"Who was that German general who said that no plan of battle survives contact with the enemy? A lot of plans don't survive contact with real life. Think about it.\"\n\n\"I will. Talk to you Monday?\"\n\n\"Sounds good. I love you, Wendy.\"\n\nI didn't realize what I had said until she gasped and hung up. Thinking about it, though, I meant every word.\n\nShe called me a few weeks later so excited she could hardly speak.\n\n\"Jim! Jim! Guess what?\"\n\n\"Slow down a little, sweetheart. What's up?\"\n\n\"I'm getting a National Journalism Award for my story on the elk!\"\n\n\"That's great, honey! You deserve it!\"\n\n\"I'm glad it went over so well. Listen, it's being presented at a formal dinner here in New York in about two weeks, and there's only one man I want for my date. Can you make it?\"\n\n\"I have so much vacation time stockpiled it's not funny, and Les is going to love this. Nothing could keep me away.\"\n\nWendy sure looked different when she met me at LaGuardia. I wondered later if anyone thought the sight of a professional woman in a business suit tossing herself into the arms of a big cowboy was odd, but I told myself that stranger things can be seen there hourly. At the time, I was too busy kissing Wendy for the first time in far too long to worry about anything else. Under the suit she was still the beautiful, talented young reporter I had fallen so hard for. More beautiful than ever, in my opinion.\n\nI was yawning by the time we got to her apartment.\n\n\"Listen, Wendy, I'm kind of jet lagged. Would it be OK if I took a shower and a nap and we started playing tourists tomorrow?\"\n\n\"Sure, no problem. Bathroom's right over there.\"\n\nI was luxuriating in the hot water with my eyes closed when I felt two warm hands slide around me from behind and turned. Wow. Wendy naked in the shower was about ten times better than my wildest dreams.\n\n\"What's this?\"\n\n\"I seem to recall a certain scientist threatening to ruin me for all other men.\"\n\n\"You remember that?\"\n\n\"Oh, I recall that whole evening in great detail. I've decided that emotionally you have ruined me for any other man, so you might as well finish the job.\"\n\nWith that her arms tightened around my neck, bringing her lovely pale pink nipples flat against my chest. She giggled as she kissed me.\n\n\"Is that a sausage in your pocket or are you glad to see me?\"\n\n\"I don't have any pockets at the moment and I'm very glad to see you.\"\n\n\"I better check this out.\"\n\nSo she slid down my body. A couple minutes later I cleared my throat.\n\n\"Uh, honey?\"\n\nHer \"Hmmm?\" sent a shock through my whole body, given where her mouth was when she said it.\n\n\"Not that I'm complaining at all, but I thought I was going to ravage you, not vice versa.\"\n\nShe straightened for a second and kissed me again.\n\n\"You're going to get your turn, believe me. You're here for a week, right? I hope you've been eating your Wheaties! Now shut up and let me get back to what I was doing.\"\n\nCan't argue with that. Eventually she straightened up again.\n\n\"You really have been missing me, haven't you?\"\n\n\"Darling, I had no idea what I was missing. My turn now. I seem to recall threatening to toss you on a bed, but this shower seems to work pretty well too.\"\n\n\"I'm all yours, Jim, and you can take me wherever you want to. I have to tell you that a man who can manhandle me is pretty sexy to a girl as tall as I am, though.\"\n\nSo I carried her into her bedroom, giggling delightedly in my ear the whole way, and tossed her on the bed. Then I started kissing at her toes and worked my way up, pausing just below her neat dark red racing stripe until I felt her whole body convulsing in orgasm. Then I started upward again, trying to kiss each individual faint freckle. By the time I got to her face she was panting again.\n\n\"You weren't bluffing, were you?\"\n\n\"I wouldn't bluff about something this important, sweetheart. How you doing?\"\n\n\"There's only one thing missing to make this perfect.\"\n\nShe wrapped her long legs around me, grabbed that one thing, and guided it to where she wanted it. Sliding into her felt like coming home after a long, difficult journey. She was incredibly enthusiastic and responsive, each move one of us made spurring on the other until we reached a blinding simultaneous climax.\n\nSnuggled up against me in the afterglow, I could feel her smile against my chest between the aftershocks.\n\n\"That really was perfect, wasn't it?\"\n\n\"I think so, but we can try to improve on it later.\"\n\n\"I'm looking forward to it. You still interested in sharing that lookout tower of yours?\"\n\nI looked at her, startled. I hadn't pushed the idea of her moving to Oregon, fearing that if I forced her to choose between me and her career I would lose out either way.\n\n\"Hell, yes, but what about your career?\"\n\n\"This award changes everything. It makes me a star, not just another new journalist trying to prove herself. That means I can negotiate my assignments and working conditions. I'm already getting more freelance assignment offers than I can keep up with. If you're willing to get me a good Internet connection and drive me to the airport once in a while, we can probably make this work. I'd rather watch golden eagles than crackheads out my office window any day.\"\n\nAn overwhelming feeling of warmth and happiness was spreading through me. \n\n\"Damn, honey, this is turning into the best day of my life.\"\n\n\"We got a lot of days left to go, cowboy, and you ain't seen nothing yet!\"\n\nI felt funny wearing a tuxedo for the award dinner. 'Socks on a rooster,' I could hear Les saying. Wendy said I looked sexy, though, and proved it in a way that left no doubts in my mind. Of course Wendy was heart-stoppingly beautiful in her formal gown. All the people who were there to congratulate her seemed fascinated to find her on the arm of the big cowboy biologist who had starred in the story. Nice friendly folks, though, and they all thought the world of her. Toward the end of the speeches they asked me to say a few words. I talked about the value of preserving wild spaces and wild animals, and tossed in a plug for preserving the program's funding. \n\n\"I can't add to what's already been said about what a great job Wendy did with this thing, since you all know good journalism better than I do. I just thank my lucky stars that the assignment landed on her desk. Lucky for the elk, and especially lucky for me that I got to know this incredible lady. I'm only one step short of being the luckiest man in the world.\"\n\nI turned to her, took a deep breath, and pulled a small light blue box out of my pocket.\n\n\"Wendy, they tell me they haven't engraved your trophy yet. How about we make it say \"Wendy MacNeil?'\"\n\nShe stared at me in incomprehension for a second, her lips moving over the unfamiliar words. Then she screamed \"YES!\" and jumped into my arms, and the room erupted in cheers.\n\nWe had the wedding at a small white clapboard church in her hometown in Vermont. Les and Sharon brought Lindsay out to be a bridesmaid, and Wendy's adult girlfriends alternated between spoiling her and treating her like one of the girls. She thought she was in heaven. A good part of the honeymoon we spent driving across the country in a truck and horse trailer, hauling all her stuff to set up housekeeping with me. Sounds like a chore, but we had a great time. Les and Sharon threw one heck of a welcome home party down at the grange hall once we got there. Les got up toward the end.\n\n\"OK, folks, listen up! I told Jim that Wendy was one in a million and he'd better grab her while the grabbin's good, and I'm sure glad he listened to me for once!\"\n\nThe room cheered ironically.\n\n\"Settle down, folks! Now, we called this a 'welcome home' party because as far as all of us who know her are concerned, Wendy's one of us and this is her home. We sure hope she'll be here a long time! And just to help her settle in we got her this.\"\n\nHe reached under the table and pulled out a box marked \"Resistol\". Wendy got up and kissed the old cowboy on the cheek, causing him to blush for the first time I had ever seen. Then she pulled out her new cowboy hat and put it on, winking at Sharon.\n\n\"Sorry, Mom, I couldn't resist. Look, folks, I know Jim's been bragging about some award I got back in New York for the story that first brought me out here. None of it makes me prouder, though, than being welcomed as one of you. I just hope I can make you proud, too!\"\n\nBen's voice from the back of the hall, made louder by a few shots of Jack Daniels:\n\n\"Sweetheart, you already did!\"\n\nAnd for once the room cheered instead of booing him.\n\nWhen we got home that night I went out on the deck and laid in the hammock to get some fresh air and make sure the stars were where I had left them. Wendy followed me a few minutes later, wearing her big sweatshirt. I pulled her into the hammock for a long kiss, discovering in the process that she had nothing on under the shirt. She propped herself on an elbow and ran a finger down my chest.\n\n\"You know, Jim, I spent a lot of lonely nights back in New York fantasizing about you and me in this hammock.\"\n\n\"Well, I intend to make all your dreams come true. Might be a little tricky to do in a hammock, though.\"\n\n\"I thought you had learned your lesson, big guy. Where there's a will there's a way!\"\n\nAnd sure enough, we found a couple."
    ],
    "authorname": "Thucydides",
    "tags": [
        "oregon",
        "elk",
        "reporter",
        "wildlife"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/love-among-the-elk"
}