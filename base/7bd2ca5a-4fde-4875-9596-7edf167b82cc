{
    "title": "Salesman Enjoys Trip Of His Life Ch. 04",
    "pages": [
        "Back on ship, we jumped into the shower to get rid of all the salt and remaining tanning lotion. Even though we got interrupted in the middle of a hot sex act, we kept our hands mostly to ourselves and didn't make any signs that anyone needed some sexual relieve. \n\n\"Crap, I need to piss,\" said Sara suddenly who was covered in soap head to toe.\n\n\"Go ahead, I don't care if Cindy doesn't care,\" I said and she didn't have to be told twice as a stream of hot pee hit the shower floor. Cindy didn't even give us a warning and went ahead as well. I just chuckled and did the same. \n\nOnce we made sure that our bodies were rinsed well, especially our feet, we all got out and noticed that it would soon be time for our dinner. It was a formal event because I booked a chef's table dinner for 7 o'clock and it was 5:30 already. \n\nI took my time getting a purple dress up shirt put on along with black slacks while the girls were putting on yet another new outfit which I am sure I paid for. While waiting, I looked up the reviews for the pills Dan bought for me and I was excited with the prospect of increasing the women's sexual levels even higher.\n\nIt was almost 6:30 when they finally came out and I could easily get used to these moments. I started looking at their feet first and noticed that Cindy must have been wearing Sara's black heels with Sara wearing a pair of white heels that were the tallest ones yet. They must have raised her at least 6 and a half inches if not 7.\n\nCindy was the one wearing black stockings this time and they had a very elegant design on them that made them look Asian I guess while Sara was wearing white silk stockings that were plain but were slightly opaque showing off just enough of her sexy tanned legs underneath. \n\nBoth wore party dresses that took my breath away. Sara's dress was tight and form fitting with a white lace corset looking material drawing more attention towards her slim figure and her cleavage that was just covered up barely above her nipples. The corset piece must have allowed the dress to stay in place holding up her tits as there were no straps in sight. \n\nThat outfit would have definitely been impossible for Cindy so her all black dress was held up with a thick strap around her neck. The strap was attached to two divided pieces of cloth that individually covered up her tits. \n\nWhat she was covered up from the top (compared to a push up type dress such as Sara's) the gap in the material between her tits was so wide that the inner quarters of each breast for clearly exposed. To add to the sexiness of the split, it went down to right below her belly button that had a diamond stud piercing it. \n\nWith me still trying to catch my breath, she spun around and there was very little material above her mini skirt waistline. I almost couldn't decide if her front or back was sexier as I caught a glimpse of the top edge of her stockings peeking through the hem of the dress. I was up to boner number eight or nine for the day at that point I believe. \n\nI knew they wouldn't mind but I also wanted to be a bit sneaky so I emptied the contents of the pills that Dan bought for me earlier that day in a cocktail that I had ordered from room service. I was afraid it might water down too much so I put two pills in each one of our drinks. We said a toast, gulped down the majority of our drinks and went on our way.\n\nWe were greeted by a butler in front of a conference room that served as tonight's dining room. Inside was a large rectangular oak table with 8 seats around it. We were the first ones to arrive and our butler/server Ivan was barely able to remain cool as he kept staring at the two girls. He even stuttered with his Russian accent when he offered us a drink. We all accepted a glass of champagne and he stepped out of the room. \n\nShortly after, an elderly couple probably in their early 70s arrived. Then another younger couple arrived and by younger I mean the female was around 35 and the male in his late forties. 'What a stud' I thought to myself since the Brazilian woman, who turned out to be his newly wedded wife, was a stunning woman to look at despite some excessive curves. Her shiny bronze skin was glistening with some glittery moisturizer that smelled heavenly. \n\nWhile a bit more modest than my dates, she still wore an exquisite short white summer dress and wedge heels which accentuated her strong legs. She definitely had some extra meat on her bones especially around her hips which would make any ass man drool. I put more of my brief focus on her tanned legs and cleavage before she sat down.\n\nWe all introduced each other and we were finally joined by chef Mueller from Austria. He was cracking jokes from the beginning and with all of us enjoying a glass of champagne the atmosphere was light hearted. With Cindy sitting to my right and Sara to my left, the chef and other males did their best to keep their eyes off of them including the older guy. \n\nProblem for chef Mueller was that he was sitting next to Cindy and that poor guy just couldn't help it. Every five seconds or so, even in mid-sentence, he would stare at her chest from the side possibly hoping to get a glance of her right nipple. And Cindy, of course, was loving the attention.\n\nI was busy rubbing both girls' legs underneath the table and I could sense goose bumps first on Sara and then on Cindy's skin. When I looked up the reviews for the pills, most women raved about the tingling skin effect followed by uncontrollable desires and multi-orgasmic love making. The increase in their level of lust was made clear when both their hands landed on my crotch at the same time. \n\nAt this point, boner number 10 or 11 for the day was way on its way. After a lot of explanation about the kitchen's work, its staff and where the food comes from, we were led to the main kitchen. The elderly couple went first followed by the Brazilian honeymooners and us.\n\nCindy picked up a conversation with Gabriela, the Brazilian guest. \n\n\"I love how your skin glistens. What do you use?\" she asked her.\n\n\"Well thank you. Carlos got it for me at the salon on the ship,\" she said with a very heavy but sexy accent.\n\n\"I love your dress. Very naughty,\" she added pointing at Cindy's dress. \"I also like yours,\" she said looking back at Sara.\n\n\"If Annie doesn't work out this week, this one would be ok too,\" Sara whispered seductively into my ear referring to Gabriela as a potential love pet alternate. I knew she was joking but I still couldn't believe she would even go there.\n\nAll of us had a great time tasting different things and Carlos and Gabriela even volunteered to mix the ingredients for our dessert which was some chocolate mousse creation. When Gabriela was shaking her arm while mixing, it became clear this woman wasn't wearing a bra, catching the attention of all the men within eye sight.\n\nWe soon went back to the dining room and dinner was served. We got to taste different wines and whenever I had a chance, I got my hands under the table to keep teasing the girls and clearly myself. The effect of the mixture of the liquor and whatever I drugged them with became very apparent. Sara was biting her lip, Cindy rolling her eyes and I was only barely brushing the side of my hand against their thongs.\n\nWe were completely stuffed when the clock read nine. We said our goodbyes and Sara made sure to invite Gabriela to hot yoga the next day after having learned that they both raved about it. As we excited, we saw Annie stand in line for her late dinner reservation. \n\n\"Where is Ben?\" asked Cindy.\n\nIt was then when we saw that Annie had a rather sad or mad look in her face. \n\n\"He's puking his guts out again in our room. He just doesn't know how to stop drinking and the motion of the ship last night and again this evening caused instant nausea,\" she explained.\n\n\"But he seemed fine last night,\" said Sara.\n\n\"He was sober until we started playing the card game at the bar. You guys saw him drink 4 or 5 cocktails and he even stayed after you guys had left and had another few drinks. By the time we got to the room, he was completely sick. That much for trying some of those positions we learned about last night,\" she said angrily.\n\n\"So you are going to have dinner by yourself?\" I asked.\n\n\"I'm starving. I don't really have a choice. The cafeteria food doesn't sound good at all.\" \n\n\"Do you guys want to give her company?\" I asked turning to the two girls.\n\nThey both agreed.\n\nProblem was that when we asked if all three of us could join her, the hostess told us that there was no room around the table. I almost started an argument when I just realized that there was nothing she could do. It was then when Ivan our server walked by scanning the three sets of female babes behind me.\n\n\"Ivan, my friend. We have a little dilemma here. Can you do me a favor and ask the chef if it would be ok to have a meal be brought to the conference room before you guys clean it completely?\"\n\nIt was a long shot but I thought knowing that chef Mueller virtually fell in love with Cindy's tits, he might find any excuse to come back and help out. Ivan said he'd try and after about three minutes, he came back with a smiling Mueller in tow. \n\n\"I would gladly help you and your three companions. You are an honored guest on this ship and your pleasure is our business,\" said the chef. The way he said the pleasure part sounded a bit funny to me and I knew he wanted to partake in that pleasure.\n\n\"Ma'am, look over the menu and make your selections and Ivan will make sure it will be taken care of,\" he said to the server.\n\n\"I feel so underdressed,\" announced Annie. \"You are all wearing these hot outfits and I am wearing jeans and a shirt.\"\n\nWhile she was definitely not wearing anything fancy, her tight jeans and even tighter shirt showed enough off her hot body.\n\n\"You are fine,\" said Cindy.\n\n\"Do you have anything quick to put on?\" Sara asked.\n\n\"I think I have something that would make me fit right in,\" replied the Asian. \"Ivan said it will be about 20 minutes for the food to come out, I might even have enough time to do my hair.\"\n\n\"Let me come with and help. I am really good at fixing up hair,\" replied Sara which reminded me of her story when she did the hair for a bunch of hot bridesmaids last year.\n\n\"Let's go,\" said Annie and that left Cindy and I alone.\n\n\"I think she likes Annie,\" said the blonde referring to our third wheel. \n\n\"You jealous?\" I teased.\n\n\"Hell no. She is sexy and other girls have come into the picture before without any issues. To clarify, when we were dating our dudes we had no interest in each other,\" she explained.\n\nMy dick was throbbing again as I started picturing them in an all-woman sex party. I just came ten hours prior and my level of horniness felt like I haven't had any action in days. Whatever was in those pills was definitely working and made me wonder how long it would last for me and the women. \n\nI remembered reading something about the zenith being reached within an hour which had well passed so I was afraid that I might be missing the boat. I still had a few more pills in my pocket for both the women and me so I tried to think of a way to give us all another dose. Taking mine was easy as I just turned away from the blonde for a second and washed it down with my drink.\n\n\"Anything else I can get for you?\" Ivan asked as he walked in.\n\n\"No thank you Ivan. Would you mind actually closing the door behind me and just leave us alone until the food is ready?\" I asked.\n\n\"Sure, no problem,\" he said and had a slight grim on his face as he closed the door.\n\n\"I like where this is going,\" teased Cindy as she was squeezing her tits underneath the black material. \"I am so fucking horny. My clit has been tingling since we got here. Every time you touched me, I got goose bumps all over and my pussy hasn't stayed dry yet.\"\n\n\"So you are telling me you are wet and ready to go right now?\" I asked.\n\n\"Yes sir,\" she said and jumped on the table, laid on her back and threw her legs in the air with her wet crotch right in front of me.\n\n\"What are you waiting for? Shove that big cock inside me already.\"\n\nI didn't have to be told twice. Pulling her black thong aside, I unbuttoned my pants, pulled out my raging member already entirely covered in my precum and I went straight for her cervix which immediately caused her to moan in pleasure. She felt amazing and based on her facial expression I think she was in heaven as well. \n\nI attributed the heightened sensation to whatever drugs were pumping through our bodies and knew that I never wanted to have sex without it again. \n\nI couldn't decide if my hands would be more fired up playing with her tits or stroking her stockings but since she was busy pinching her own nipples, I settled one hand on her thigh while the other started rubbing her clit. I only fucked her that way for a minute or two when she was close.\n\n\"Wow, holy crap. What the f..., I'm cumming,\" screamed Cindy who muffled her scream by putting her arm over her face. I just held onto her calves lifting her slightly off the table as I kept deep drilling her delicious cunt.\n\n\"I'm still cumming, what in the world...\" Cindy kept going. Her orgasm ended up lasting at least twenty seconds and she was shaking uncontrollably throughout. I pulled out my soaked pipe and set her back down on the table. \n\n\"This was fucking amazing. And I am still feeling something.\" She said and as I looked down, I saw her muscles all around her labia contracting. I hate to admit that I myself was close to exploding right before I pulled out. That pill definitely overstimulated my senses and I was wondering if I could get used to that. I still wasn't convinced it would stay in my system for the next few hours when I hoped to have fun with all three of them.\n\nNow that she finally calmed down and me touching her stocking clad legs didn't make her jump anymore she offered \"I think my pussy is too sensitive right now. You want to fuck my mouth instead? And don't tell me you want to wait till the other girls are around.\"\n\n\"Lie on your stomach and face me,\" I ordered in response.\n\nShe was still weak in her knees as she got on all fours first, briefly showing her bare tits as her dress hung a bit low and then she brought her head forward holding onto the edge of the table and looking straight at my cock. \n\n\"Like this?\" she asked.\n\n\"Almost, let's have your tits hang off the table and grab your heels,\" I replied.\n\nI undid her strap and exposed her bare tits while pulling her towards me. She put her hands behind her and grabbed the 6 inches of each heel. \n\nI kneeled down and looked straight into her eyes from only about a foot away. \n\n\"Don't let go of those heels until you are done drinking my cum,\" I ordered her.\n\n\"Bring it on Don.\"\n\nI got back on my feet, grabbed the bottom of her throat to bring her head to the right height since my cock was a couple of inches too high for her mouth. She arched her back and pulled on the heels a bit more so her entire body was nicely bent backwards. Before a drip of precum fell to the ground, Cindy caught it with her tongue and off we went. \n\nI still had my hand on her neck when I drilled her throat feeling the head of my cock pushing against my fingers. She gagged immediately but was definitely in control of her reflexes. With my other hand, I caressed her naked back and tried to slide my hands down the bottom of her dress but it was way too tight. Instead, I pulled up the bottom of her dress exposing the top of her gartered stockings and her sexy thong. \n\nI just held onto her right ass cheek as I rammed my cock further down her throat. The wet, hot and tight sensation of her throat felt incredible. This girl was a pro at this and had no issue taking a 7th inch down her gullet. \n\nI took my eyes off her bottom half and tried to get a gauge of her limit by looking at her face and was surprised to see a small puddle of saliva collecting on the hardwood floor. Whatever was left of her dark red lipstick was now smeared around her lips and my dick. \n\nShe rolled up her tear filled eyes trying to look at me and I think it was the increased swelling of my member that caused her to struggle more all of the sudden. I think we were hitting her limit and I knew for sure we were hitting mine. \n\n\"Arghhh, don't let go of those heels baby. I am sooo close. Don't let go,\" I said as I finished my last few throat strokes before hosing down her esophagus. The pill enhanced sensation was so strong that it almost seemed that I could feel each of the however many hundreds of millions of sperms racing to the finish line which in this case was her stomach. I felt a burning sensation as the beginning of the stream shoot through the tip of my dick. \n\nI think my thickness combined with the amount of cum spurting out was too much for her to handle. She kept holding onto the heels but was contorting her body as if she was trying to aim my cum into a different direction than down her throat. She coughed as the second stream made its way and at this point she had her eyes shut forcefully with more tears appearing. \n\nI had a couple much smaller shots escape my body as I almost matched the amount of shuddering that Cindy had experienced minutes earlier. While she swallowed all my fluids like a champion, the puddle of saliva tripled in size during my orgasm.\n\nI finally pulled out of her mouth and with my dick still stiff, it quickly sprung up and hit her in the eye. I felt so bad for her. She looked like such a mess and as soon as she could, she took a few deep breaths which were interrupted by painful sounding coughs. \n\nShe still hadn't said a word since I started violating her face and when she finally let go over her heels and composed herself, she gave my dick a kiss and said: \"That was fucking hot.\"\n\nI couldn't believe what I heard but was more than glad she was ok.\n\n\"I was afraid you were going to slap me after all that,\" I responded.\n\n\"Don't get me wrong, I had to swallow my own puke towards the end of that one but at least you had my throat completely shut so it couldn't go anywhere. But this was the first time I did the whole holding my heels thing and I just loved being at a man's mercy,\" she confessed.\n\n\"Hey, that works for me. That was the hottest BJ I ever received. Whenever you want to do it again, I will be there. Just imagine we do that with my balls actually filled.\"\n\n\"Don't get carried away stud. I am not sure if I would be brave enough to do that again. You definitely hit my limit,\" she said. \"How in the world is he still hard?\" she asked looking at my cock.\n\n\"Uhm, I think the vision of what just happened is still in the forefront of my mind,\" I lied knowing very well that whatever the active ingredients of those pills were must be avoiding me to go flaccid. \n\nI used my napkin to wipe myself clean as Cindy started climbing off the table and got herself cleaned up. She had to scrub her face hard to get rid of the smeared makeup that covered her face. I got another napkin and wetted it with some water and helped her out a little. \n\n\"Thank you babe. How do I look?\" she asked.\n\n\"Hmm, fine. You definitely need some new makeup though.\" I said as I tried to not pay too much attention to her red eyes.\n\n\"I have the makeup in my purse,\" she said as she walked up to the mirror that covered the opposite wall from us.\n\nIt took her a while to fix herself up again but once she was done, she looked like new except for her eyes which will probably take a while to get back to normal. I used the time to clean the saliva off the floor and get 4 more pills ready for the girls. I figured I would double up Annie's dose so she can get caught up with the other two so I made sure that I selected the right wine glasses that Ivan filled up prior. I popped the pills open and distributed the white powder into the glasses.",
        "Just when Cindy got done touching up her makeup the other two girls returned. Annie looked stunning in her blue mini dress which somehow made her already tiny frame appear even smaller. She wore some white fuck-me heels and Sara did a fantastic job retouching her brown hair. \n\nThere was a bit of awkwardness while Annie started eating her dinner and I wasn't sure if it was because of what Cindy and I just got done doing or if Annie and Sara did something while gone. Annie wasted no time eating her chicken dish and cheesecake while downing the drink I prepared for her. I made sure all women drank the entirety of their drinks before it was too late.\n\nWith Annie now fully satisfied at least on the food part, we got ready to leave.\n\n\"Now what?\" Sara asked. \n\n\"Our suite?\" I suggested.\n\n\"Yeah, it looked like a perfect spot for us to hang out,\" replied Annie.\n\n\"You guys stopped by the suite?\" I asked confused.\n\nBoth girls hesitated and Sara responded with an ashamed look on her face. \"Yeah, I forgot to grab something earlier and it was easier to help Annie with her hair there.\"\n\nI didn't know what she was leaving out and I was trying hard to figure out what she was trying to hide.\n\nSpeaking of hard, I was the last one to leave and watching these three beauties walk in front of me with their perfect rears swaying back and forth, I got another boner that ached like crazy. I adjusted myself before leaving the room and as I exited, the girls involuntarily put on a show for all the guests that happened to be in the area. I am pretty sure I saw a kid take a picture of their legs with his cell phone.\n\nAll three women were clearly under the influence due to the handful of drinks each one of them enjoyed the past hour which came became apparent when we stepped into the elevator and all of them gave me a horny but glazed look. I could actually feel some tension during our brief descend which I was sure was due to the anticipation of what was to happen next.\n\nCindy and I stepped out first and the blonde quickly put her hand into my back pocket as we talked side by side down the long corridor. \n\n\"Don't get him all worked up before we get a piece of him,\" teased Sara who was walking alongside Annie behind us.\n\nWe walked past Anna who just left our suite and her blushed face told me that either she just stole something out of my place or she discovered something that made her uncomfortable. \n\n\"I delivered the extra towels that you requested,\" she told us. \"Is there anything else I can get you?\"\n\nNot knowing what the heck she was talking about, I just told her that we were ok.\n\nOnce I walked inside I decided to take a quick leak before my erection came back and would probably make it impossible to use the bathroom for a while to come. As I walked into the bathroom I saw that there were about 10 large towels stacked on top of the counter.\n\nAfter I finished my business I asked \"What are the towels all about?\"\n\n\"Patience,\" ordered Sara. \"Just wait and see. While you wait, would you mind going into the bedroom and close the door?\"\n\nI obliged without hesitation knowing that she must have some naughty planned. Before I made it to the bedroom I saw that some of the sex toys had been pulled out before which was probably what caught Anna off guard.\n\nAs I laid on the bed, the anticipation drove me wild and consequently rigid hard. I was truly feeling pain and actually decided to take a few ibuprofens to hopefully ease the ache. I ended up watching basketball for at least fifteen minutes wondering what they were up to. I heard them giggle every once in a while and knew that Annie fit in well with the group.\n\nI finally heard a loud knock on the door. \"Open the door.\" Yelled Cindy with an authoritative voice. \"PPD, open the door!\"\n\n\"PPD? What the hell is that?\" I replied with a worried voice playing along.\n\n\"Pussy police department. I have a warrant for your arrest.\"\n\n'This should be fun' I thought to myself as I got up and opened the French door. Before I had a chance to glance past Cindy, she pushed me back to the bed forcefully.\n\n\"Did I say you could come outside?\" she asked as she climbed on top of me in what turned out to be a police uniform. As I tried to lift my head to take a better look at her, she pushed my head right back. I did get a good enough look though to see that either the top was too small or was meant to nearly let her entire tits hang out. \n\n\"You have the right to remain silent. You have the right to get an attorney. You look like you got money but no lawyer is going to get you out of this one.\"\n\n\"What am I charged with?\" I asked playfully.\n\n\"There have been numerous complaints about indecent exposure, taking pictures of women without their consent, violating numerous throats and for fucking in public.\"\n\n\"It wasn't my fault. These women made me do it,\" I fought back jokingly.\n\n\"Save it for the judge. Hold on. I am the judge tonight...overruled,\" she responded.\n\n\"That's not how it works,\" and before I had a chance to finish my sentence, she grabbed the bottom of my chin with her glove covered right hand. That was the first time I smelled the black fake leather. She actually grabbed me pretty rough and said \"My city, my rules. Like I said, you are guilty as charged so you should just accept your punishment.\"\n\n\"What would that be?\" I asked halfway mumbling through my teeth since she had my mouth forced shut.\n\n'Whack' went my right cheek as I felt her hand slap my face. \"Did I say you could talk?\" she wasn't holding back on that one. Maybe this was payback for the throat fuck I gave her earlier. She then reached her hand behind her and brought a black ball gag to sight. \n\n\"Maybe this will help shut you up.\"\n\nI actually got a bit nervous since I have never had my mouth gagged like that. She quickly put it on and tightened the strap while leaning over me giving me a good look at her tits that just fell out of her top. Once she had the strap tightened, she licked the ball and my gaping lips. I hate to admit that my boner definitely indicated that I was getting turned on. Feeling my pants rise she said with a spiteful tone: \"Just what I thought; a pervert.\" \n\nI was ninety percent sure that she was joking but her good acting could have fooled me.\n\nShe grabbed me by the strap and brought me to my feet. I finally got a good look at the rest of her outfit. Both hands and forearms were covered with gloves up to her elbows leaving her upper arms exposed before the dark blue uniform did a good job of covering her shoulders but did nothing to cover until the middle height of her tits which she tucked back in again. \n\nIt was a button up one piece uniform and the shiny 3 inch belt squeezed her midsection together like a corset. The bottom was nearly as tight and was short enough to end before her stockings started showing what must have been the same pair of stockings and garter belt she wore at dinner. What changed was her footwear. She was wearing high heeled boots that ran up to right below her knees and as she was standing straight in front of me, I guessed that the heels must be about 7 inches or more as she was standing taller than ever before.\n\nLooking at my lustful face, she continued the scene, \"turn around so I can cuff you.\"\n\nShe put on metal handcuffs behind my back and kept sniffing my neck as she constraint me, \"let's get you to booking.\"\n\nAs we walked out of the room I noticed the other two girls were absent. One of the bar stools was placed in the middle of the living room and I also noticed a blanket spread out over the couch. The towels had been moved on top of the coffee table that was pushed aside leaving a fairly good sized area open in front of the couch. \n\nShe ordered me to walk towards the stool and had me take a seat. She grabbed the camera and took a few pictures of me in my helpless position. \n\n\"Alright, before we book you, you need to be examined to make sure you are not going to spread any of your perverted diseases around. Miss Sara, I got another one for you here,\" yelled out Cindy.\n\nI was turned away from the bathroom but I could see a reflection of the hot brunette in the window and it was clear that she had changed into a nurse outfit. Instead of walking to my front, she stayed behind me and pushed herself against my cuffed hands which meant my fingers were at the right height to play with her love triangle. \n\n\"I can see why he would fuck himself into trouble,\" said Sara. \"This is a hot one.\"\n\n\"Focus on your task Miss,\" hissed Cindy. \"We got all night but we need him cleaned quickly so we can start his sentencing.\"\n\n\"Yes officer,\" obliged the nurse.\n\nShe started undressing me seductively while still standing behind me. She slowly unbuttoned my shirt pulling it off as far as she could with my hands behind my back. I was still wearing my white t-shirt underneath which she started pulling up. \n\n\"This isn't going to work,\" said the officer. \"We need to blindfold him first.\" After a few seconds, Sara came back with what seemed to be one of Cindy's sheer stockings. Despite them being fairly see-through, I could not see a thing once she tightened it around me and forced my eyes shut.\n\n\"That's better,\" said Cindy and all of the sudden I felt cold metal against the bottom of my stomach. I got scared for a moment before I realized that she was cutting my t-shirt in half with a pair of scissors. \n\n\"What the h...\" I tried yelling through the ball gag but it was completely inaudible. I wasn't really concerned about the shirt itself but I felt more than vulnerable at that point. \n\n\"Now the pants,\" said the officer and for a second I was afraid she meant to cut them off of me too. Instead, I felt Sara's hands undoing my belt and pants. I think it was Cindy that actually pulled down my pants while Sara proceeded to stroke my hard cock through my underwear.\n\n\"We definitely got the right guy,\" said Cindy possibly referring to my hard-on.\n\n\"I know. Look at the pervert's excitement.\"\n\n\"I was referring to the size of his organ. The report said it must be at least eight inches long,\" and before I knew it, she pulled down my underwear as well and removed my shoes and socks too.\n\n\"I hate to admit that it's beautiful,\" said Sara who was still stroking me with her latex gloves.\n\n\"It's filthy, I don't think he has shaven it in days,\" countered Cindy. I remember that I trimmed and partially shaved my privates a few days ago wondering why it mattered. \"Is Miss Annie still here?\"\n\n\"Yes ma'am,\" confirmed Sara.\n\n\"Annie, we have someone here for you. Make sure to bring the kit,\" yelled Sara and then the sound of heels clicking in the bathroom as she walked into the living room could be heard.\n\n\"Well, well. What do we have here? Is that the one you warned us about officer?\" the Asian asked.\n\n\"Yes, he needs to be cleaned well. See those stubbles there? According to the eye and mouth witness account, those can scratch up a poor females face if he pushes it too far.\"\n\nI had no idea what kit she was talking about or what was about to happen next. First I heard a subtle squirting sound and the next thing I knew I had whatever it was spread all over my balls and pubic area. The scent of what turned out to be my shaving gel entered my nostrils. I was about to experience the first shave by a woman; or in this case women. \n\nIt seemed that if Annie was the one doing the lathering she must have be wearing some sort of vinyl gloves as well. Sara was still standing behind me while groping the rest of my upper body when Annie placed a razor blade on my sack. I jumped slightly partially because I was terrified and also because the cold metal caught me off guard. \n\n\"Make sure you get every single hair, he has a few on his cock right by the base,\" hissed Cindy. My member was in a stage of constant stiffness and I was in no mental or physical position to determine if I was turned on by what was happening. The process seemed to take forever when I felt a wet towel wiping my balls clean.\n\n\"All done,\" said Annie.\n\n\"Not even close,\" countered Cindy. \"Shave the pubic hair on top too.\"\n\nI have never completely shaven myself there and I wasn't sure if I really wanted that but I knew that there was no point in fighting. I was so focused on what was happening in front of me that I didn't realize that Sara must have lifted one of her legs to stimulate her clit on the metal of my handcuffs.\n\n\"What are you doing Miss Sara? We haven't finished processing the criminal yet and you are already starting the sentencing?\" asked Cindy.\n\nIf that what she called sentencing, I was definitely getting excited. From the wetness that was starting to cover my wrists I could tell that someone else was getting excited too. But she listened to the officer and stepped back a little.\n\nAnnie had now finished my pubic area and called it done.\n\n\"Not yet. There is more,\" said Cindy. \"Let me get him into the right position.\" And with that, I felt her glove covered hands around my hips as she pulled me further off the chair. I could hear Annie backing off to make more room. Then she grabbed each foot and placed it on the couch. With the little room there was between the chair and couch, my crotch must have been right in Annie's face. \n\n\"Get rid of all the hair below his sack and in his crack,\" ordered Cindy.\n\n\"Yes ma'am,\" was Annie's response as she lathered me up some more. This was the most uncomfortable position for my back, stretched arms and legs and the fact that I tensed up more with Annie's hands and razor in the most intimate crevices of my body didn't help.\n\n\"All done,\" said Annie after a good five minutes of excruciating work.\n\n\"Much better nurse,\" agreed Cindy. \"Let's get him cleaned up now.\" \n\nCindy removed my handcuffs temporarily so I could strip completely naked and put them right back on. They escorted me to the shower and rinsed me with cold water at first which was yet another uncomfortable moment. Sometimes I prefer to shower with cold water to wake me up but handcuffed and blindfolded wasn't one of those moments where I needed that. With the shower door left open, I got lathered up by a set of hands at a time not being sure whose it was.\n\n\"Bend over,\" ordered Cindy which clarified whose turn it was to clean me. I leaned forward at almost a 90 degree angle with my head coming to rest against the wall. Then I felt one set up hands stretching me cheeks and shortly after felt something pointy penetrating my virgin ass. \"What the hell,\" I yelled out through the gag ball immediately.\n\n\"Now he complains. I told you that you are filthy and I am sure your ass isn't exempt. Don't worry, nurse Annie here has lots of experience with this which she proved to us earlier today,\" explained Cindy.\n\nAt the time, I wasn't sure what she was talking about. All I knew was that I felt warm liquid squirt inside of me which I was then asked to push out. It couldn't have been a pretty sight but someone was sure to hose me down continuously as we went through a couple of rounds of that part of my punishment.\n\nThe sound of a pair of heels clanking on the marble floor told me that someone left the bathroom. The shower got turned off and I was led out by someone and immediately dried off. From the living room, I could hear Annie pleading with someone: \"My pussy is drenched. This has been fun and all but I have never been this freaking horny in my life. Let me have his cock or I will grab that dildo and take care of myself.\"\n\n\"Relax,\" responded Cindy. \"I am drenched too which is so crazy because I was taken care of earlier. My clit is tingling each time the thong is rubbing against it.\"\n\nI didn't hear the rest of the conversation because Sara started attacking my mouth with her tongue. I knew she was touching her clit since she was moaning as if she was about to explode. These pills definitely worked and I was worried that doubling up on the dose might have been a bit much for three lightweight girls.\n\n\"I can hear you from out here,\" yelled Cindy which caused us to break off our make out session.\n\n\"Sounds like Annie needs to be first one to get a good fuck from you,\" said Sara. \"Ben has yet to take care of his woman this trip.\"\n\nPutting the whole role play on pause for a second, I mumbled through the gag and asked her \"are you sure you are ok with that? I mean...\" and before I could finish my sentence, she put her finger on my ball covered mouth. \"Fuck her Don. Make her cum, cry out of joy, pain, whatever. I am getting wet just thinking of your big cock penetrating her tight Asian body.\"\n\n\"You are such a freak,\" I said. \n\n\"I promise you I am not like this usually. I don't know what has overcome me this week,\" she said almost with an apologetic voice.\n\n\"Don't worry. This clearly turns me on but even if you only had a fraction of this sense of sexual adventure in you, I would still fall for you.\" While I wasn't quite proud of how I explained myself, my message didn't have time to sink in as Annie walked in.\n\n\"Time for you to actually serve your time, if you know what I mean,\" said the Asian before she grabbed me by my cock to led me back to the living room. She took me straight to the couch and seemed to bend over in front of me and stuck my cock straight into her pussy. This was the wettest pussy I have penetrated in a long time and she was almost as tight as Sara. \"Fuck, yes,\" Annie screamed out. \"No need to warm me up. Start pounding me.\"\n\nI definitely wasn't in full control of the situation being blindfolded and without free hands but I was still able to thrust her hard. Her vagina felt a bit shorter as the others' as I started ramming against her cervix without her love tunnel swallowing me entirely. \n\n'Whack' went my ass as someone just swatted some rubber or leather material against it.\n\n\"She said she wanted to be pounded, not made love to,\" hissed Cindy. She whacked me one more time before I could feel her hands pushing me from behind. I picked up my pace and something told me that Sara was busy rubbing the Asian's clit as she started cumming only a minute after I started my assault. \n\n\"Yes, arghh. Don't you fucking stop. Oh my..., holy shit. Yes, yes...\" I could feel her pressure building up around my cock so I pulled out and she immediately squirted all over. \"Holy crap. What the...\" she cried out surprised. Then she started crying hysterically and with me being chained up and blindfolded, I had no idea what was going on. \n\n\"Are you ok?\" asked Sara seemingly worried.\n\n\"Wow girl. You clearly haven't gotten any satisfaction in a while,\" joked Cindy and with that Annie's cry to turn into laughter. \"Look, you are still shaking from the aftershocks.\" At that point I wished I was able to see.\n\nAfter she finally calmed herself down, she was able to speak. \"I will never ever hold out for a week just because my man is too sick or too tired to make me cum. This was the biggest orgasm I have ever experienced. I don't know if it's the teasing the last few days, the warm weather or whatever but that was absolutely mind blowing. I feel like my hormones are off the charts.\"\n\nI was starting to feel guilty for giving her a double dose of those pills but I think even if she knew she wouldn't mind. But my guilt was erased by the ache in my jaw and trouble getting enough air due to the ball gag. \n\n\"I don't know if it was seeing you explode or there being something in our food or drink, but I am beyond horny as well,\" said Sara.\n\n\"He is clearly ready to please,\" responded Cindy before grabbing my cock with both hands and jerking me off. \"Look how hard he is.\"\n\nShe led me back on the chair and straddled me facing away from me. Still without sight, my other senses were heightened. Besides smelling the women's sex and hearing Sara's breathing behind me clearly, the sensitive tip of my dick felt the burning sensation of a different set up pussy lips. Cindy was slowly descending on me and also seemed surprised by the immediate satisfaction she was experiencing. I felt like I was inches bigger that night even though I knew that was impossible. Without being able to see or touch myself, I just went by the women's reactions and my senses below.",
        "\"What the hell? Your cock feels so good. I don't think I am going to last long either,\" moaned Cindy and started to bop her body up and down. \n\nWhile not as tight as Annie, she still felt beyond great and I was wondering if my heightened senses would cause me to not last as long. I definitely benefited from having cummed down her throat a couple of hours earlier but even with the relief, I wouldn't bet on my regular stamina. Sara stepped to our side and must have started touching her blonde playmate all over since she was begging the brunette to continue what she was doing.\n\n\"Yeah, squeeze my tits and pinch my nipples,\" ordered Cindy before her speech was impaired by Sara's mouth sucking hers. \n\nAll of the sudden, I felt Annie spreading my legs apart which was also forcing Cindy's legs which were wrapped around mine to be spread even further. She found a way to contort herself to lick my balls that were hanging in front of the chair. Her tongue was amazing and found my trigger points right away. I think she was also rubbing the nearby clit as Cindy's bounce became more aggressive and her moans grew louder with each breath. \n\nHer pounding started pushing me off the chair a little and I was trying my best to keep pushing the other direction with my feet. Now my ass was completely hanging off the chair and each thrust pushed my lower back into the wooden edge forcing me to lift my hip a little to avoid getting hurt. \n\nI knew I couldn't hold that bridge posture for too long and was hoping she was close to cumming. Then I finally sensed that she was getting close as her pussy muscles desperately tried to hold on to my penetrating cock while she nearly pulled all the way out before plunging balls deep towards me. \n\n\"Yes, that's it. Fuck, I am ready to...ohhhh\", and once again her mouth was muffled by Sara's lips.\n\nCindy's fast rhythmic bouncing turned into shuddered jerks indicating that she had reached the climax. What came next was unbelievable. At first, I heard Annie slurping up whatever juices were dripping down straight into her mouth and I realized that she was leaning backwards with her head tilted back because once all juices were licked off of my balls, she ran her tongue towards my ass until I felt her lick my sphincter. \n\nAt that moment, I knew we had been joined by an Asian slut that night. I never had my ass licked before and have only been on the giving end of it. In my previous relationship, I accidentally slipped my tongue towards Sara ass out of drunken lust and at first she jumped off of me while riding my face but after joking around about it for a while we tried it again and she fell in love with it then. \n\nWe briefly discussed her rimming me but both agreed that it was only hot for a guy to do to a girl. How wrong we were. Feeling the wet flesh of her tongue running against the sensitive entrance of mine was a sensation I immediately appreciated. I could feel hardening even more with the lustful thoughts running through my mind trying to picture a close-up of seeing the Asian burying her face into my crack with her tongue sticking out. \n\nIt took Cindy a few moments to come back to earth and once she did, she realized what was happening below. \n\n\"You like your ass licked Don?\" asked Cindy as she started to ride me slowly. I just moaned in response still not able to speak with my jaw nearly killing me at this point.\n\nShe finally climbed off of me and forced me to stand up and lean over the couch. I couldn't see who stood behind me but I was sure I was now being licked by both the blonde and the Asian. My intuition was confirmed when Sara leaned into me and started kissing me. At first through the ball gag, which was weird I must admit, but then she finally undid the strap and just as I was trying to stretch out my jaw she smothered me with the wildest kiss yet. I could never confuse her scent, tongue or lips with another woman.\n\n\"I cannot believe they are licking your ass,\" whispered Sara after she broke off the kiss.\n\n\"Not your thing, is it?\" I confirmed with her.\n\n\"Nope. But you can lick mine all day long if you dare.\"\n\n\"As long as you clean yourself like I was cleaned I would love to.\"\n\n\"Trust me, Annie made sure all of us girls are clean down there,\" teased Sara.\n\nNo one was touching my dick so all the tongue action that was happening didn't do much from a sexual fulfillment level even though the thought itself was a huge turn-on. Then I felt a glove covered finger entering me. It was lubricated but still had one heck of a hard time getting inside of me.\n\n\"Sara, suck his cock so he can keep his mind off his ass and relax it a little,\" ordered Cindy. \n\n\"Be right back,\" said the brunette before lying down on the couch and scooted back underneath my body.\n\nMy eight plus inches were probably hanging about a foot over the couch so her head was in perfect position to rest on the couch while I started penetrating her mouth. She could barely open her mouth enough to allow the swollen head of my cock to make its way towards her throat. I could sense that she was a bit afraid and tensed up and things didn't improve for her when the other two started pushing my hips down into her.\n\n\"That's it baby, take him deep,\" cheered Annie. When I was finally able to get the tip of my dick into her throat, she was gagging nearly uncontrollably. \n\n\"You ok baby?\" I asked with sincere concern.\n\n\"She is fine, we will tell you if you go too far,\" answered Cindy. \n\nI was actually fighting back against their weight they applied to my hip so only about an inch was going into her throat. That went on for a while and before I knew it, someone's finger was buried deep inside of me. I actually jumped up when I realized what had just happened giving Sara a much needed breather. \n\n\"Don, your cock looks so swollen as if it's about to pop,\" said Sara. \"Are you ok?\"\n\n\"Sure, are you ok? I don't want to choke you to death,\" I replied.\n\n\"I'm fine. I know I can do better for you.\" promised Sara.\n\n\"I bet I can take it all the way down my throat,\" chimed in Annie.\n\n\"You can ask Don. I already managed to take his entire length,\" announced Cindy proudly. \"Actually, I will just prove it to you guys tonight.\"\n\nI was trying to think hard if what Cindy said was really true as I didn't remember her lips making it all the way to the pubic bone while I was fully erected.\n\nI was finally allowed to stand up but that finger was still up my ass. Once I was on my feet, Annie licked my neck and asked: \"Do you like me finger fucking your ass? I cannot wait for me to try to stick that huge dick of yours up mine.\"\n\nCindy had walked off to get some champagne from the kitchenette and handed each woman a glass. \"You thirsty, convict?\" she asked me. \n\n\"Yes officer,\" I responded.\n\n\"Nurse Annie, do you think you can use nurse Sara's pussy as a temporary champagne glass? We could have the prisoner drink out of it.\"\n\n\"Of course I can,\" she responded.\n\nI was forced onto my back with my head, arms and back resting against the towel covered floor. The girls were up to something which included some slurping and squirting sounds. \"Holy crap that's cold,\" cried out Sara.\n\n\"Ok, squat over his face,\" Annie directed. \n\nI felt her crotch approaching until my lips met her smooth pantie-less pussy lips and neither of us hesitated to force the champagne mixture into my mouth. I immediately started sucking her dry as she was seemingly squeezing her vagina muscles to get every last drop out. I could hear the clicking sound of a camera during the whole process.\n\n\"Want more?\" asked Annie and three more rounds followed. \n\nOnce I sucked the last bit out of her, she leaned forward to get into the sixty-nine position causing more pictures to be taken. She tried to immediately go for the gold medal as she forced my cock nearly three quarters way down before she gagged all over it. She lifted her head and spit on my dick and it was enough slimy saliva to cover most of my cock. Her attempt turned me on so much that I was eagerly licking her clit. Her hormone levels must have been off the charts as well as she came within seconds. \n\nWhat came out of her mouth was completely inaudible and sounded like a combination of shrieking, moaning, crying and whimpering. She just grabbed my member with both hands like a hand rail as she was holding onto her dear life as wave after wave of orgasm overcame her. I knew she had no control over her bodily functions since she not only grinded her hips into my face but flat out bounced off of my head with each brief contact of my tongue with her clit causing her to jump up and immediately plummet down again. A few times, my nose was crushed which wasn't the most pleasurable experience at the time.\n\nI finally realized that aside from my head getting tortured my wrists, arms, and shoulders were killing me due to having been constrained for about an hour at this point. \n\n\"It's been fun, but I really need to get out of these cuffs,\" I begged once Sara calmed down and lied down next to me.\n\n\"You promise to stay composed?\" asked Cindy.\n\n\"Hell no,\" I quickly responded.\n\n\"Good,\" she said smiling as she pulled off the stocking from my eyes first. My first view was of Cindy who was leaning over me. \n\n\"Get up stud,\" said Cindy as both Sara and her helped me onto my feet. I finally got a good look at all three women. All of them were model caliber babes dressed into the hottest outfits. Just as I thought, Sara was dressed in a nurse outfit. It was a one piece suit that was held up by straps that went around her upper arms and a red zipper line went from her cleavage all the way down to the tight fitting hem of her white costume. \n\nShe was wearing white gloves that went up past her elbows and white thigh high stockings which were met by her white open towed high heels. Annie was sitting on the couch with the camera in her hand and her outfit was very similar to Sara except for that while Sara's was covering her entire body between her tits and ass, Annie's had a large opening on each side exposing her sexy abs a bit. She also wore fishnet stockings compared to Sara's opaque set. \n\nI turned around to look at Cindy and her look definitely resembled that one of a woman with confidence and earned authority. \n\nShe wore a 2 piece costume with a shiny Carolina blue top which was a few sizes too small for her big tits and a black mini leather skirt that barely went low enough to cover her ass. She wore black fishnet stockings held up by garters and her legs were covered up to her knees with a pair of the sexiest black boots I have ever laid my eyes on. They were laced up the entire length and were as shiny as her gloves she wore. The height of the heel must have been flirting with seven inches as she stood nearly face to face with me. \n\n\"Damn,\" was all I could muster up at first. \"What did you guys have in mind?\"\n\n\"Have us fuck till dawn,\" responded Annie causing us all to laugh.\n\n\"Hey I'm serious. This woman here has some catching up to do. I want his cock down my throat, up my ass and have the same done with the toys we have,\" she said pointing to the table that had the toys I had already seen and used on the girls along with a couple of new ones. \n\n\"I am the only one that hasn't gotten fucked yet so I am first,\" said Sara.\n\n\"You were the last one to cum,\" countered Cindy.\n\n\"Alright stop, I know these two love birds need to get it on. Why don't I warm your holes up with some toys while they take care of each other?\" asked Annie looking at the blonde. \n\nHer response was made clear by her walking up to the table and grabbing a strap-on dildo along with a few other toys. \"Come on, let's give them some room,\" she said as she walked into the bedroom. Annie got off the couch and placed the camera down and gave both of us a quick tongue kiss before taking her sexy body up the stairs.\n\n\"Now what?\" asked my brunette babe as she bit her bottom lip.\n\n\"Before I make you cum again, do you mind if I get a quick drink of water and wash my face? I loved quenching my thirst with your pussy temporarily but I am definitely overheating,\" I asked.\n\n\"Of course, I could use some ice water too.\"\n\nI walked up first and heard the camera click behind me. \n\n\"I swear you got the sexiest butt I have seen on a man,\" she said.\n\n\"Thank you. It's definitely clean right now,\" I said jokingly.\n\nShe sat up on the kitchen counter as I brought a glass of water to her. This all seemed like a dream to me. Even taking the other two babes out of the picture, having this perfect brunette eagerly waiting for my return sitting in her nurse outfit was more than I could have wished for. \n\n\"He is still hard as a rock,\" she said as she stroked me gently. \"I swear to you I will make you the happiest man as long as you let me.\"\n\n\"Trust me, I am already there but you can do to me whatever you want tonight,\" I replied before leaning in for a kiss.\n\nShe bit her lip again which stopped me in my tracks. \n\n\"What's wrong?\" I asked looking at her cutest impression.\n\n\"I mean I will make you the happiest man far beyond tonight. I am not like this and have never done anything like this with another guy or women for that matter and everything seems so, so, natural with you,\" she said sincerely.\n\n\"I think I know what you mean,\" I said while rubbing her thighs. \"This may sound really weird, but if there is such a thing as love at first sight, I fell for you at the airport.\"\n\n\"Fall how?\" she said teasingly but also somewhat demanding.\n\n\"You know,\" I said shyly.\n\n\"No, I don't. Please tell me,\" she pleaded while letting go of my penis.\n\n\"I think I am in love with you,\" I confessed with my heart racing at its peak. \"No, scratch that. I am in love with you Sara. And I know it may not make any sense to you or anyone who knows about the past few days but this isn't just my horny self speaking. I have been in love before and know what it feels like.\"\n\nThere was a moment of silence as she stared at me with a tear filling her right eye. She then held me by my cheeks and kissed me. It was just our lips touching at first and while I usually don't open my eyes while kissing I briefly opened them to see her other eye tearing up through her eye lids. I closed my eyes and gently held the back of her head pulling her closer to me. \n\nI also pulled her closer to the edge to allow me to slowly penetrate her. At the current height, I was only able to go about 3 inches inside of her but even that was enough to get her going. She started moaning slightly at first but then I must have found just the right angel to push the tip of my cock against her g-spot. \n\nOur soft kisses turned into a battle of our tongues and Sara's moans got increasingly louder. She let go of my face to pull down the straps of her costume to reveal her bare tits. Not too many women can get away with not wearing a bra and keep the mounds in perfect shape but hers were just pointing straight at me with the nipples leading the way. \n\nShe quickly started pinching them and rolling her thumb and index finger over each. That took her to the next level and she began to thrust her hips against me so she could get more g-spot stimulation. I wanted to take her slowly but she seemed to want something more aggressive. She broke off the kiss, leaned back and put her heel covered feet against my shoulders. \n\n\"Don, you're hitting the right spot. Don't you stop. Ahh, you are going to make me cum baby,\" she moaned while I kept a steady pace. \"Don't change the angel, just fuck me harder please,\" she continued moaning.\n\nI grabbed her by the hips to get a better hold of her and started pounding away more belligerently. The bottom part of her costume was hiding her pussy so all I saw when I looked down was my throbbing cock disappearing between her sexy legs.\n\nShe was still pinching her nipples when she finally came: \"I'm cumming baby. Yes, that's it. Fuck yes...,\" it was her longest orgasm yet and it came from only a few minutes of penetration; those pills worked like magic. I was very close to cumming myself but pulled out before I went too far. Having cummed earlier that evening made me think that I would possibly wear myself out with the second one in a few hours. Man, was I wrong.\n\nAt first I was going to lean in for a kiss and help her calm down but she was still breathing so hard that I stepped back and let go of her legs so I could just watch the beauty bestowed in front of me. I have never had sex with someone dressed as a sexy nurse and just watching her lay there with her pussy and entire body still pulsating, I couldn't think of another situation that could look hotter at that moment.\n\n\"Holy crap,\" she finally said. \"What is going on with me? Or better yet, with all of us girls? Don't take this the wrong way, you are a great lover with an amazing cock but we don't just cum that quickly.\" \n\nI stepped up to her, grabbed her and lifted her off the counter. She was leaning against the bar as I looked her straight into her beautiful eyes as I was overcome with the urge to be completely honest with her. \n\n\"Remember the convenience store where we went shopping for some stuff for the beach?\"\n\n\"Yeah,\" she answered.\n\n\"Well, Dan showed me these pills for men and women that help both to multiple orgasms and heightened senses,\" I confessed afraid of her reaction.\n\nShe thought for a moment and then said \"I knew something didn't feel right, I mean it feels very right but definitely different. Is it safe?\"\n\n\"I looked it up online. It's made in the US and has really good reviews.\"\n\n\"Then why hide it? I am sure all of us would have been willing to take it. Is that why your cock has been going non-stop?\"\n\n\"Yeah. I wasn't sure about how you girls would react. Do you mind if we keep this to ourselves just in case they get offended?\"\n\n\"Ok but I don't think you need to worry. You are talking about two nymphomaniacs in there,\" Sara said jokingly.\n\n\"What about you? Are you a nymphomaniac?\" I teased.\n\n\"Only around you,\" was her response as she kissed me and started stroking my cock again. \"What do you want?\"\n\nIt was the sexy tone in her voice when she asked that question that got my hormones racing again. Right then I heard loud moans coming out of the bedroom which also caught Sara's attention. \"I got an idea. Would you mind playing the camera woman for a little bit while I take you from behind? You can stand right there and switch between filming them and us in the mirror right there,\" I said pointing at the tall wall mirror by the French door right outside the bedroom.\n\n\"Sure, don't expect me to hold still while you stick that monster inside of me.\"\n\n\"That's part of the challenge. I have faith in you,\" I joked.\n\n\"No promises,\" she said grabbing the camera in one hand and my cock in the other.\n\nI helped her adjust the setting on the camera before she leaned her chest against shelf causing her to bend over. She grabbed the camera and filmed away. Before I bothered penetrating Sara's drenched cunt, I finally took a good look at the scene unfolding in front of me. Neither girl had removed any garment. Their tits were hanging out and skirts hiked up to their waist as they were going at it in a 69 position with Annie's petite body on top. \n\nShe was teasing Cindy's clit with the remote control vibrator while dildo fucking her with the biggest toy available. On the other end, Cindy was licking the Asian's clit while poking an anal toy up her rectum. Both Sara and I just stood there for a minute getting turned on by the sight, smell and sound. \n\n\"Fuck, you are going to make me cum again,\" cried out Annie not realizing they were being watched. \n\n\"Me too,\" muffled Cindy into her partner's crotch.\n\nI finally decided to start taking Sara and lifted the bottom of her outfit to show the perfect ass nestled around my cock. How I wished she was up to some anal play. Instead, I slowly pushed myself into her pussy inch after inch causing her to bite her lip in what I hope was not pain but pleasure. She panned the camera towards the mirror for a while as I started picking up my pace slightly slapping my hips against her rear. ",
        "The view in the mirror was priceless. Watching Sara's endless legs lifted by six plus inches of high heels, seeing my cock slide in and out of her while her left tit was hanging off of the shelf below and having the entire package wrapped in her sexy outfit pushed me to the next level.\n\nIt was the \"fuck I'm cumming\" cries from the lesbian scene that forced Sara and I to look back at the two girls. They each remained on their zenith of sexual pleasure as they continued their stimulating movements. Annie finally pulled out the entire length of the dildo after pulling off the vibrator. Cindy sucked out the Asian's juices for a few seconds longer before Annie finally lifted her hips off of her partner below leaving the anal plug in her ass.\n\n\"Can I pull it out?\" asked Cindy.\n\n\"Yeah, slowly,'\" responded Annie.\n\nI was keeping up a steady but rather quiet pace while fucking Sara from behind when we watched the purple anal plug pulled out which was much longer and a bit thicker than I would have guessed. I was glistening with some type of lubricant which must have come from the bottle that was lying on the bed next to them.\n\n\"Taste it,\" said Annie nonchalantly as the turned around to be face to face with Cindy. I immediately stopped my thrusting to make sure I didn't miss a beat.\n\n\"Hell no,\" responded Cindy with disgust.\n\n\"We didn't clean our asses for nothing. Look at it, there isn't anything dirty on it,\" responded Annie.\n\n\"It doesn't smell clean,\" replied the blonde.\n\n\"Here, let me show you,\" and with that she grabbed Cindy's wrist and pulled the toy to her mouth licking it seductively. \"See, not bad. And trust me, it would be a huge turn-on for Don. Right?\" she said speaking up towards the end of the sentence since she saw us behind the glass door.\n\nSara chimed in: \"Lick it baby. You know you want to.\"\n\nAfter thinking about it for another moment, she finally gave in and put the tip of her tongue against it. \"I can definitely taste something funky. It's not overbearing though.\"\n\n\"That's why we need to lick it clean before we stick it up your ass,\" replied Annie before forcing the entire toy down Cindy's throat causing her to gag a little. They then went exchanging the plug a few more times licking and sucking it before Cindy was asked to get on all fours to get ready to be penetrated next.\n\nThe whole situation got me excited beyond comprehension that I was now fucking Sara with a furious pace. Cindy got up and took the camera out of Sara's hand taking over as the camera woman. Meanwhile, Annie grabbed another vibrator kneeled in front of us and started teasing Sara's clit with the black stick. \n\n\"Oh my god, yes, ohhhh, I feel another one coming soon,\" moaned the brunette as she kept getting pounded and stimulated. Annie raised her head a little so she can catch one of Sara's firm tits with her gaping mouth. \n\nShe was now getting her tit sucked on, her clit stimulated and pussy fucked balls deep. I think my level of excitement increased knowing that she was getting satisfied in so many different ways. I looked over at Cindy who had the camera pointed straight at Sara's head which was hanging down with her hair covering her face. Knowing that her facial impression must have been picture worthy, I bundled up her hair before forcing her to look straight up by pulling her hair back.\n\n\"Yes, oh fuck. Pull my hair baby. Slap my ass. Ohhhh...\" she begged. Happy to listen to my lover, I whacked her ass a few times while pulling her hair even harder. I got turned on even more and knew I may only last another few seconds.\n\n\"I'm cumming. Yessss. Oh shit...\" she groaned and she kept going as long as her climax was continuing which seemed to have lasted at least twenty seconds. That's all it took for me to hit the point of no return. I pulled my cock out of Sara's cramping pussy and squeezed the base of my cock with all my strength to prevent any of my impeding explosion to miss its target. \n\n\"Get on your knees baby, quick,\" I ordered Sara who was barely able to balance herself as she was still overcome by aftershocks. I finally had both hotties kneeled in front of me when I let go and the first shot partially hit Annie's mouth and upper lips with a lot of it splattering all around. Then I quickly pointed at Sara who was still a bit in a daze and was caught off guard by an equally strong stream hitting her right cheek, eye and part of the forehead. \n\nI wasn't even close to done as I pointed back at Annie who was already licking her lips clean before getting splattered all over her face again by my third pulse. This one wasn't as pointy but spread more over her entire face. The next blast went straight onto Sara's tongue before I returned my dick to Annie's opened mouth and shoved myself a good 5 inches down her throat letting the few last drops exit into her throat and mouth. \n\nInstead of jerking the last few waves with my hands, I just used her skillful lips and tongue to make sure each last drop got sucked out of me. I thought I released buckets of cum based on the strength of each sensation I just experienced. When I looked down at the babes, I knew that it definitely wasn't as thick or voluminous as the one I emptied into Cindy's bowls earlier that evening. My cum was definitely a lot clearer than usual but the sight of two cum covered faces was still breathtaking. \n\nWhen I pulled out of her mouth finally, she choked a little but quickly said \"thank you.\" \n\nShe kept scooping up more cum from her face and sucked her fingers clean before leaning into Sara who sat back on her heels and just seemed out of it. \"Come here baby,\" said Annie before starting to make out with her and after a few more seconds she finally got into it returning the favor and kissing and licking her friend's face clean. \n\n\"That was fucking hot,\" said Cindy as she placed the camera onto the bed. \"What the hell has come into you Don? I felt like you hosed down my throat with a gallon of cum after dinner and now you sprayed another load a couple of hours later? And what the hell. He is still stiff?\" she said referring to my still somewhat erected member.\n\n\"Can you blame the guy?\" helped out Sara. \"Look at us. He has three sexy sluts making any man's fantasy come true.\" \n\nI couldn't believe she was referring herself to a slut. \n\nProud of my accomplishments thus far, I announced \"let's get you girls cleaned up and see who else might have outstanding needs.\"\n\n\"I think I'll be good for a while,\" said Sara exhausted.\n\n\"Good, then you can help out while he fucks Cindy and me in the ass,\" suggested Annie.\n\n\"I am not sure if I can take him quite yet,\" said the blonde.\n\n\"Trust me. With the right tools and patience, you can fit about anything back there,\" teased Annie taking Sara to the bathroom.\n\nCindy and I sat down at the bar while waiting and shared a glass of champagne. I was rubbing her stockings clad thighs when she said \"I have had anal sex before with a much smaller dick and it hurt like hell back then. Please be gentle. Annie makes it sound like you can shove a fist into anyone's ass and I can definitely tell she has had more action down there than me.\"\n\n\"Don't worry. Just communicate with me,\" I assured her.\n\n\"I have never been this horny my entire life and trust me, I have done some crazy shit in the past but this outweighs it all.\"\n\n\"I agree. I think my first of order of business when we get back to Seattle is to book another cruise for next year,\" I joked.\n\n\"Sounds like a plan,\" she replied before stepping off the bar stool and started giving me a blowjob while standing up. I was probably three quarters way back to life when the girls returned.\n\n\"Not wasting any time, I like it,\" cheered Annie. \"About getting fucked in the ass Don; let's show the other girls how it's done.\"\n\nShe leaned back on the ottoman and spread her legs into a split showing her hairless Asian pussy. \"I think I'm ready. Don't you?\" she said as the nurse grabbed her legs and pulled them back even further until the white heels were next to her ears. Cindy released my cock and walked towards the living room. Annie handed her the lube and asked her to prepare her butthole. She greased up her glove covered index finger and it quickly disappeared in her anal canal. \n\n\"Mmmm, that's it. Get it loosened again. Don's toy is a bit thicker than the toy from earlier,\" moaned the Asian. \"Sara, baby. Why don't you set the camera down for a moment and grease up his dick for us.\"\n\nI looked down at my semi stiff member and even at this state there was a hint of throbbing pain.\n\n\"Take it easy on him, he's a bit sensitive still,\" I said.\n\n\"That lube actually has a numbing ingredient to it. That way anal doesn't hurt as bad at first. It should actually take some of your discomfort away too,\" explained Annie.\n\nBefore applying the lube, Sara licked and gently sucked me back to life. Seeing her kneel in front of me and virtually making love to my cock with her mouth quickly helped my cock get rejuvenated. Once finished, she poured a little oil straight onto my cock with some of it dripping on the towel below. As soon as she started stroking it in, the familiar painful ache reappeared. After a few seconds Sara finished me with a few more violent jerks and placed one last kiss on the swollen opening before I helped her up to her feet. \n\nShe immediately embraced me with a kiss and whispered \"I am kind of excited about watching you guys.\" \n\nI quickly asked: \"Does that mean that you might let me play with your...,\" I didn't get a chance to finish my wishful thought before she shushed me \"Nope. Keep dreaming.\"\n\nCindy had a big grin on her face when I kneeled next to her. \"Can't wait to see you fuck her dirty hole,\" she said and then licked the finger she stuck up Annie's ass and concluded \"actually, it's relatively clean\"\n\n\"You guys done messing around?\" hissed Annie with her legs still bent back.\n\nI didn't want to wait and also didn't want her to wait any longer so I pushed forward with Cindy's hand wrapped around the base of my pole as I pushed passed her sphincter and the entire length into her forcing Cindy to move her hand out of the way and Annie to yelp \"Fuck. Holy crap. Ease your way into it a little bit...shit that hurt.\"\n\nI pulled out slowly quickly apologized and my looked at my nearly dried off dick. While the first couple of inches were well lubricated, none of the lubrication made it into the depths of her bowls. \n\n\"Cindy, baby, just put more of the lube on his dick, lots of it and Don just ease your way into it and let Cindy keep adding a bit more lube.\"\n\n\"Sorry about that,\" I said sincerely.\n\n\"Don't be, she asked for it,\" joked Sara causing all of us to laugh a little. Meanwhile she started taking some more pictures of us after wiping off her greasy hands.\n\nWith a freshly greased piston, I pushed about 4-5 inches in and instead of getting a yelp, I was welcomed by a sensual moan and a tunnel that gripped my cock tighter than my virgin girlfriend years back. I pulled out a few inches allowing Cindy to pour a little more lube on me before pushing in further each time. \n\nI don't even remember how long or quickly I got to the point that my balls were resting against her tail bone as I saw my entire 8 inches disappear in the Asian's ass. She was as tight as her athletic body and I definitely knew I was having an effect on her as she let go of her heels and kept throwing her legs around with each thrust.\n\n\"Fuck that feels so good. Cindy, grab the vibrator and I guarantee you I will cum within seconds,\" moaned Annie.\n\nAs soon as the blonde placed the vibrator against Annie's clit, I could feel her ass tighten around me as if spasms were overcoming her entire body. She held true to her guarantee as she was overcome with an orgasm almost right away. What turned me on was watching her look straight at me as she spread her legs and with her arms behind them, she was reaching for her tits squeezing the nipples as I kept pumping into her. She finally pushed Cindy's hand out of the way to release the vibrator from her but I wanted to fuck her through her aftershocks.\n\n\"Fuck yes, keep going. Arghhhhh, split me in half baby.\"\n\nHearing her asking me to split her just got me even more motivated as I leaned over her with her feet next to my head and I just plunged into her ass as I forced her flexible body to bend upwards so her asshole was now pointing nearly perpendicular. I don't know how she was able to handle most of my weight and all of my cock's length as I barely put a bit of weight on my feet and hands virtually bouncing off of her hips. \n\nHaving gone through all the different sexual adventures the past few days made it difficult for me to decide which one was the best but at that moment, I would have placed that one at the very top for sure. Annie was trying so hard not to show and admit that I was starting to hurt her as she kept begging for me to keep going. Seeing her grimace and seeing even Cindy in shock by the violent anal assault she was witnessing only inches away gave me even more reason to keep going.\n\nIt was my body that was starting to get tired in the awkward position we were in so I picked her up as I stood up and used my arms to lift and drop her a few more times before my biceps were completely spent. As I finally pulled out of her, it was apparent that I burned through most of the lube; my cock was barely glistening anymore and I only hoped I didn't rapture anything inside of her. \n\n\"That was fucking hot guys,\" said Cindy. \n\nI was still waiting for a verbal confirmation from Annie when she finally spoke up: \"That was the best anal sex I ever had. Thank you,\" and she gave me a passionate kiss which I believe actually made Sara a bit jealous.\n\n\"Now what?\" asked the brunette.\n\n\"Cindy needs it up the ass still,\" replied Annie. \"But before we can do that, let's make sure he's clean and lubed up again.\"\n\nI was expecting someone to grab a towel or lead me to the bathroom, but instead Annie got on her knees and spit on my dick and quickly rubbed it in with her hand. 'That's one way to clean it' I thought. Then all of the sudden she pushed my cock down into her mouth and started to suck me clean. I have seen ass-to-mouth online before but never in person. I wanted to ask her if she tasted anything but I was too busy enjoying the view and sensation despite my member being in pain even with the numbing lubricant. \n\n\"Your turn. Since it's going up your ass, you want to make sure he's clean,\" said the Asian to Cindy as she stepped aside.\n\n\"Two tongues clean better than one,\" suggested Cindy and with that both girls were licking me clean. I grabbed Sara and started to make out with her as my cock was getting cleaned below. I took the camera out of her hand and simply pointed the video mode towards the floor hoping it was in focus. Even though I enjoyed two tongues wrapped around my dick right after fucking someone in the ass, the sensual kisses with Sara fired me more up in that given moment.\n\n\"Enough of that. Time for you to get your hole stretched,\" said Annie.\n\nI found it interesting that not too long ago, Cindy was in full control and played the dominant role but now she had that 'I am terrified' look in her face.\n\n\"I hope you understand that I don't have the same level of experience so go easy on me,\" she pleaded before she got on all fours in front of me.\n\n\"Just tell me if you want more or if I am doing too much,\" I told her.\n\n\"I gotta grease up the hole first,\" said Annie as she grabbed the bottle.\n\n\"Let me do it,\" I asked. \"You already had a chance to play with it tonight.\"\n\nSomewhat disappointed, she handed me the bottle. I pulled up her uniform to expose Cindy's entire ass and not only poured some right onto her anus but all over her ass crack and cheeks. With both of my hands oiled up, I started to penetrate her with my index finger. I could tell with the tip of my finger that this was going to be a completely different experience than Annie's ass. \n\nI could barely get my finger past its first knuckle and after a good minute of probing, little stretching and reapplied lubrication, she was still too tight for me to even consider putting another finger inside of her let alone my cock. I tried to listen to her reaction as I kept loosening her up but even though I only heard positive reinforcement primarily through her moaning, I just couldn't fathom stretching her any further.\n\n\"That's it. She is ready for another finger,\" said Annie.\n\n\"I am not so sure. What do you think Cindy?\" I asked.\n\n\"Yeah, I don't know. It feels good so far,\" was her response.\n\n\"Here, let me try,\" requested the Asian as she quickly replaced my index with her middle finger. \"Oh yeah, she's ready for more.\" She then quickly added her index finger before adding her ring finger seconds later. \n\nI knew her petite hands and fingers were much smaller than mine but three fingers definitely stretched the blonde to new levels.\n\n\"Damn, ouch,\" said Cindy.\n\n\"You are alright girl. Just a little more and then we can have Don's cock here do the rest,\" reassured Annie.\n\nI wasn't sure about that but she had definitely made her mind up. She started stroking me with one hand to get me more lubed up and kept finger fucking the blonde in front of us. As she pulled her fingers out, Cindy's sphincter quickly forced her ass to close up as if it was trying to make a point. I couldn't believe what I was about to see next. Annie grabbed the bottle of lube and carefully stuck the tip into Cindy's hole. \n\n\"There is no hole that cannot be penetrated as long as you use enough lube,\" she said before squeezing the bottle forcing an unknown amount of oil up her ass. Some of it dripped right out but I was sure at least an ounce remained inside of her.\n\n\"Now she's ready,\" proclaimed the anal expert.\n\nShe grabbed my cock and slowly guided it towards the Promised Land. Sara has since moved and was now shooting a close-up of me penetrating her besty's ass for the first time. \n\n\"Wasn't the last dick up your ass about half this size?\" asked Sara somewhat jokingly.\n\n\"Don't remind me,\" pleaded Cindy.\n\nWhen my cock finally reached its goal, I was pleasantly surprised that all the oil made the initial entrance a lot easier than I thought. It only took about half a minute to get the head past the sphincter and since the head is slightly larger than my girth, her ass virtually swallowed the tip of my cock. She was only slightly tighter than Annie but much more lubricated making the thrusting actually a bit easier. I didn't see or hear anything from Cindy at first but once I started going in deeper, I finally got the confirmation I was looking for.\n\n\"Mmmm. That's it Don. Your cock feels so good up my ass.\"\n\nKnowing that she was getting used to it made me more comfortable in the situation and I decided to get everyone involved. \n\n\"Sara, why don't you sit down on the couch right in front of Cindy and let her eat you out? And Annie, why don't you squat over Sara and have her do the same to you?\" I knew neither would disagree.\n\nWithin seconds, I was watching my cock disappear fully in Cindy's ass, watching her face disappear underneath Sara's uniform and watching Sara's tongue disappear inside of Annie's pussy. All of us were moaning away and I felt that I was controlling the shockwave as my increased thrusting caused Cindy to lick more aggressively which caused Sara to go more at it. Annie was turned away from me but the reflection in the window was clear enough for me to see that she was enjoying herself. \n\nThe numbing agent in the lube was definitely doing its job as I felt the intense tightness of Cindy's bowls but it wasn't causing me too much pain. I think it also helped her enjoy my entire width and length as I could feel her approaching an orgasm. I decided to grab her tits and just like a chain reaction, Cindy started doing the same to the Sara and Sara to Annie. ",
        "I was so lost in the moment witnessing myself fuck a babe dressed in the hottest police uniform and seeing the world's two hottest nurses in some lesbian action that I didn't realize that they were all coming at the same time a couple of minutes later. I closed my eyes and with all the cries and moaning that was taking place, I was not able to tell who was moaning or saying what. The entire room was filled with the smell of sex and women at their zenith of sexual pleasures.\n\nOut of nowhere, I felt my own orgasm approaching. \"Fuck, I'm close,\" I was barely able to moan as my balls were reaching their boiling point causing me to grip Cindy's skirt's waistband with all my might. I pulled so hard on her skirt as if I was trying to pull her even closer into me as I plunged into her deepest and dirtiest corners of her tight body. My eyes rolled back and I arched my back when I felt my cock stretching her tender flesh to the widest point only to be greeted by the tightening of her sphincter. \n\nI knew the head of my cock was purple during the last moments before my orgasm. Then I came: It was the kind of orgasm where my body was getting a head start and started to shake profusely even before I started to ejaculate into the deepest ends of Cindy's bowl. Each joint in my body was tensed up and the swollen tunnel of my cock finally started to attempt to push out whatever ejaculate was left in my balls when the first shot escaped the tip. \n\nThen I felt someone's hand grab the base of my cock and in the midst of another shot and place me into someone's mouth. The hand gripped me so hard that the second shot was delayed for a brief moment before releasing me again. My mind was racing as quickly as my sperm and that it took me a second to realize that Annie had jumped off the couch to suck me dry. My last few painful drops went straight down her throat as I just stood there in shock. \n\nI had no control over my own body and besides needing to catch my breath I realized that my entire body was overheated and that I was covered with a layer of sweat. I could feel my heart beat and right before Annie let go of my finally deflated cock, I could feel the racing heart beat as far as the tip of my dick. \n\nMy back finally relaxed and I tipped my head forward to watch the scene below me. Annie was still licking my dirty rod and seemed to enjoy herself like a kid licking an ice cream cone. I knew she did a good job of flushing out Cindy's ass but I knew it wasn't perfectly clean so I was even more convinced that I was in the presence of an absolute nymphomaniac. \n\n\"Ouch. Holy shit,\" cried out Cindy who was slowly standing up. \"Damn you Don. I told you my ass wasn't ready for that kind of assault.\"\n\n\"I am so sorry baby. I thought I did a good job composing myself until the very end when I just lost control. I am really sorry,\" I said sincerely. \n\n\"Let's put some warm water on there to relax it a little. I also have some ointment you can use,\" suggested Annie.\n\n\"Ok, let's go,\" agreed Cindy and they both left to the bathroom leaving the brunette nurse alone with me.\n\n\"Is she mad at me?\" I asked Sara.\n\n\"I think so. But if she is she will get over it soon,\" she responded.\n\n\"Now what?\" I asked\n\n\"Not sure. I just came again so I think I am done for the night unless your pills have some delayed release action of some sort.\"\n\n\"Yeah, I don't know about that. It's not that late so we might still be up to something else.\"\n\n\"You should clean him up. If you want to get him anywhere near me tonight I don't want any of Cindy's ass on him,\" she said referring to my still flaccid member.\n\nI decided to go to the bathroom to possibly apologize again and get cleaned up. When I walked in, I saw all of their apparel on the floor and the two girls were busy lathering each other up with some soap.\n\n\"Wanna join us?\" asked Cindy which was a sentence that immediately put me at ease.\n\nOnce I was on the shower I was greeted by a kiss from both women and they quickly got busy scrubbing me from head to toe. I couldn't believe it when I felt life regaining in my penis. It didn't help when I felt Annie's soapy index finger up my ass.\n\n\"You are one nasty bitch,\" said Cindy to the Asian.\n\n\"I take that as a compliment,\" was her response and she quickly followed with an aggressive slap on Cindy's ass with her free hand. \"And I know you like it,\" she grinned.\n\nI came out of the shower first and without driving off I hurried back to Sara who was sitting on the couch with her legs crossed. I wasn't sure how much longer she wanted to keep the uniform on but I didn't mind seeing her in it for a while longer. \n\n\"All clean now?\" she asked.\n\n\"Yep. Wanna check?\" I jokingly suggested.\n\n\"Sure. Bring him over here and let the nurse take a closer look at it,\" she responded unexpectedly.\n\nAs soon as I stood in front of her with water still dripping down my skin, she picked up my semi erect dick and pushed her face right against my pubic bone while my cock slid towards the back of her mouth. I was completely caught off guard so I just did my best to stand straight when my blood started flowing towards my now growing member.\n\nThen she pulled her head back and said: \"See, now I can claim that I took your entire dick down my throat.\"\n\n\"Well, I think that's cheating. But I got an idea,\" I said and sat down next to her. \"You and I just need to work on it so in no time you will be able take my erect cock down your throat in your sleep.\"\n\n\"You better not literally try that,\" she joked.\n\n\"Nothing without your permission of course,\" I answered\n\nWe were then joined by the Asian and blonde who didn't bother drying off or putting on any clothes.\n\n\"You like being a nurse?\" Annie asked jokingly. \"Maybe it's time for you to receive a full medical exam.\"\n\n\"I am not sure,\" I cummed plenty tonight.\n\n\"Well, Cindy's ass is off limits for the rest of the night and Don's cock may be done as well but my pussy could use another round and I bet both you two could as well.\n\n\"Speak for yourself,\" chimed in Sara doubtfully.\n\nWithout responding, Annie walked off and grabbed a strap-on set along with a couple of dildos.\n\n\"Ok, who wants to do me?\" she said holding up the big black dildo that was compatible with the straps.\n\n\"I'll gladly help you out,\" said Cindy and before we knew it, she had skillfully put on the contraption and got into position to fuck Annie who in the meantime got comfortable on all fours on the couch right next to Sara and I. \n\n\"I'm wet already but lube up before you take me please,\" asked the Asian and before Cindy could oblige, \n\nSara stood up to grab the bottle and poured the liquid on the ten inch rubber toy. She started stroking it from base to tip acting as if she was trying to make it cum. She was still wearing her white gloves and if the remainder of the scene wasn't already hot enough, seeing the contrast between her white hands and the black dildo which was glistening with oil was an added turn-on. \n\nBefore Annie could grow too impatient, Cindy positioned herself behind her awaiting snatch and without much warm-up plunged into the depths of her tight body. She must have quickly hit the dead end of her love tunnel when her continuous thrusts came to a sudden stop with a good hand's width of dildo still left not penetrated.\n\n\"Yes, that's it baby. Fuck me good. Oh, don't stop. Keep pounding it straight into me, ohhhh,\" she moaned while Cindy picked up her pace. \n\nSara in the meantime started kissing Annie's neck before settling on making out with her. Looking back, I cannot believe myself for not having pulled out the camera to take some more pictures. Instead, I just sat there with my hand on Sara's thigh stroking her stockings ever so gently and my penis still contempt hanging around lifeless. Even the slapping sound of Cindy's hips running into the rock hard ass of Annie didn't help him come back to life. \n\nI was looking at Cindy whose tits were freely bouncing up and down with each thrust and I am pretty sure while her skin dried off slowly after the shower, some moisture was replaced with sweat she was accumulating with her exercise level fucking. Annie was still egging on to be fucked hard but still showed no signs of approaching an orgasm. Sara had moved on to suck on Annie's tits which she accomplished by lying down on her back and scooting underneath her hanging tits. \n\nShe placed her legs over mine allowing me to stroke her from hip to toe. I gently spread her legs so I could attempt to stroke her clit and with the initial contact she jumped a little and pushed her legs together. But it didn't take long for me to stimulate her without resistance and before I knew it she was bucking her hips to grind against the palm of my hand. \n\nI decided to replace my hand with a vibrator egg that was nearby and I was becoming more confident that another orgasm would be imminent for my brunette girlfriend. Just when I thought she was getting close she grabbed the egg out of my hand and placed it on Annie's awaiting clit. Sara must have known that's all she needed to cum and if anyone thought Annie wasn't holding back before, she pushed it to another level with her approaching orgasm.\n\n\"Fuck, fuck, fuck me harder,\" she literally yelled out on top of her lungs while she hammered her ass back into Cindy's hips. Cindy in return grabbed Annie's hair and pulled on it harder than she might have appreciated but with her entire body convulsing through an enormous orgasm she had no way of fighting back and her yells turned into whimpers while her convulsions turned into sudden quivers as she rolled to her side away from us causing the black toy to slide out for the first time in the past ten minutes. She was still shaking when she placed her right hand on her crotch and biting the fingers of her left hand.\n\n\"Who is next?\" asked Cindy jokingly causing a \"hell no\" response from Sara.\n\nThe last scene caused me to get to a semi-erect state which caught the attention of Sara who just smiled at me after staring at him for a second but made no specific gesture or comment. I just thought to myself that this may be the one and only time in my life I could experience something like that so I was a bit frustrated that men are limited to how many times we can perform in a given time period while watching women cum over and over again. \n\nCindy undid the strap and placed the wet dildo on the couch. Annie finally calmed down but still had her crotch covered by her hand. There almost was that awkward moment of silence when Sara spoke up.\n\n\"So both your asses are done and Annie's pussy is definitely done for the night and I am not sure if mine can handle anything either so we may only be down to your pussy Cindy.\"\n\n\"Not sure about that one either,\" was her reply.\n\n\"The night is still young but there is no shame in calling it,\" I suggested looking at the clock which read 10:50 pm. \"I think we accomplished more than anyone could have hoped for.\" \n\n\"I think we should go to the pool area and relax in the hot tub,\" said Cindy. \"Who knows what the hot water might do to us.\"\n\n\"I definitely need to relax my body after the torture from you three,\" I responded.\n\n\"Torture? You didn't get fucked in your ass or choked by a cock,\" countered the blonde.\n\n\"Let's think. Hand-cuffed and ball gagged for an hour. Oh yeah, slapped on the ass by whatever rubber piece. Cum squeezed and sucked out of me that had no business being there anymore. Yeah, I think torture is the appropriate term. How about I call it welcomed torture?\" I suggested.\n\n\"Alright, point made. I would love to but I don't have a bathing suit with me and my fear is that if I go back to the cabin, Ben is awake again. I made sure I gave him double dosage of the meds to knock him out but you never know,\" said Annie.\n\n\"You can have one of mine. God knows Cindy's top would cover up too much of your tiny tits,\" said \n\nSara.\n\n\"Whose tits are you calling tiny?\" asked Annie seemingly offended.\n\n\"Ok. I know she is carrying upper Ds around with her. What are you, B?\" said Sara while cupping one breast of each girl in her hands.\n\n\"Sometimes I have to get a C to feel comfortable,\" said the Asian which was probably a lie as I tried to verify her claim with my eyes.\n\n\"Alright, enough. Yes, Cindy's tits are the biggest in the room. Sara, no offense, but your tits are barely bigger than Annie's but all three pairs are equally hot. If you had me choose, I couldn't. I guess it would depend on the day,\" I said.\n\n\"What day is today, stud?\" asked Cindy jokingly.\n\nIt took me a second to come up with a fair response: \"Tonight is the 'get fucked by two hot nurses and one hot cop' night so I would have to say all three.\"\n\nI don't remember how we were finally able to end that topic and get dressed for the pool but I do remember seeing each babe in their respective suits. Sara decided to give the less seductive set she wore to our last hot tub trip to Annie while she wore her black under cup bikini with a sexy bottom. For some reason Cindy decided on her triangle bikini again which I am sure will draw some possibly unwanted attention. With looking at three babes at once, my cock all of the sudden started looking for more attention but was still far away from a full erection. \n\nWe made our way up the pool area and passed by a handful of mostly drunk people most of which stared at the three girls in rather obnoxious ways. The pool itself was closed so the people that were there were crammed into the hot tub so we decided to check out the outdoor hot tub instead and we were happy to see that there was no one in it.\n\nAs soon as my body felt the hot water goose bumps of relief ran through me. It's interesting how much sexual hormones can cover up other discomforts. The handcuffs did their number on my shoulders and wrists and all the different awkward positions irritated my back and legs. Based on the facial expressions of each woman I could tell that they enjoyed the warmth as well. None of us said anything but just sat down and relaxed. Sara came up next to me and Cindy and Annie sat across from us. It was probably a good idea for the Asian to keep her distance not only in case Ben walks by but also to keep Sara's jealousy in check. \n\nDespite there being no need for sexual relief, my right hand was drawn to Sara's toned legs so I started massaging each one while my left arm held her close to me. In response, she just used a hand of hers to rub my leg gently. All of our eyes were closed for a while as the wind kept our faces cool. When I finally opened my eyes with my head tilted back I realized that the sky was perfectly clear and with no city lights washing out the dimmer stars the sky was crowded by bright stars of different sizes. Sara joined me when she opened her eyes and nestled her head next to mine and if a picture depicted romance, this could definitely be it.\n\nWe were soaking our bodies for at least fifteen minutes when Annie spoke up: \"I'm not sure about you guys, but I am freaking hot.\" \n\nWe all agreed and went back to the suite. Once inside Cindy and Annie immediately went into the shower to rinse themselves off and I was tempted to follow them but Sara stayed in the living room which was a sign for me to stay as well. As soon as the bathroom floor closed she walked up to me and kissed me passionately. I think it's fair to say that with each kiss her tongue got more aggressive and with butterflies still left from our romantic moment on the deck I was glad we had a moment to ourselves. \n\nI grabbed her ass through her wet black fabric first before squeezing my hand through the tight waist band which she welcomed by flexing her gluteus making them rock hard. Her hand quickly moved down to my waist band and with one big scoop she pulled down my shorts. My cock was at least semi-erect and it wasn't until she grabbed and stroked him when I noticed that any full erection will be painful for sure. I knew she saw my facial expression when she squeezed me especially tight.\n\n\"Is he ok? I am sorry. I just really. I don't know, I really need this right now,\" she said rather shyly.\n\n\"I told you before. Whatever you need me to do to make you happy,\" I responded.\n\n\"Isn't he sore though? If he is, that's fine,\" she said.\n\n\"He is a little bit. I would never say no to this though,\" I said while squeezing her ass with both hands.\n\n\"Can it just be the two of us please, in the bedroom?\" she asked.\n\nI didn't need to be asked twice. I picked her up and carried her through the French doors like a newlywed couple. As soon as I laid her on the bed, she took off her swimsuit; first her top then the bottom. As soon as the bottom came off she was rubbing her clit after licking her fingers. I just stood in front of the bed stroking myself waiting for the moment to be fully erect. \n\nDespite the hot scene unfolding in front of me I didn't quite get there yet which was a bit frustrating. Then Sara leaned forward and got on all fours and instead of sucking my cock right away, she tilted her head sideways and started licking my shaven balls with all her might. She held onto my hips with both hands as my dick was resting on her cheek while she continued her tongue lashing. \n\nAll of the sudden I saw the first drop of precum appear since my last orgasm and while my cock still wasn't fully inflated that little sign gave me hope that I might have more in me. She finally decided to take my rod into her mouth and at that point I was probably a soft five inches long. She immediately took me balls deep and had no problems keeping me there. It was definitely an added turn-on to have my girl taking me entirely even if not while fully erect. As I stared at her lips hitting my pubic area I brushed her hair with my hands and started thrusting my hips towards her. I finally was feeling more blood flooding my organ below causing Sara to pull back. \n\n\"There you go baby. I can't wait to have you make love to me,\" she said and went right back toward my pubic bone. \n\nMy heart was definitely pumping the life back into him as my cock grew while nestled in her mouth and throat. I don't think I was holding her too forcefully while my cock, as far as I could tell, was nearly fully erect. Suddenly, she slapped my hips with both hands and pulled back allowing us to see my erection for the first time. He wasn't yet all the way there but her ability to swallow me even at that size was more than impressive.\n\n\"You are amazing baby. I think that's all I needed to be ready,\" I said still a bit fearful that I wouldn't be able to keep it up for too long. \n\nI knew she said something about making love which made me think of tender missionary penetration but instead she turned around, put her head onto the bed, reach behind her, and spread her ass for me. I wanted to make sure that she was wet enough to take me and I also wanted to take her up on her offer to lick her ass so I got on my knees and ran my tongue from her clit all the way to her tailbone a few times. \n\n\"Mmm, yes baby. Lick me all over. That feels so nasty,\" she said giggling partially because it was ticklish I am sure. \n\nOnce I was convinced that she was wet enough I stood up and aimed my pride at her youthful entrance. As soon as our bodies made contact I tilted my head and rolled my eyes back. This feeling, these types of moments, could never get old. I was in love with this woman and no other female felt more right than this. I was going at a love making speed when my hands met hers while they were still spreading her ass cheeks. I was actually tenderly stroking the top of her hands while I penetrated her deeper.\n\n\"Oh Don. Please don't stop. Give me all of you please baby. Your cock feels amazing,\" she moaned quietly into the pillow next to her while her eyes were closed. I then felt another woman's hand on my shoulder and when I looked over I saw Cindy standing there with a smile. As she got close to me I whispered into her ear to give us some time and she simply nodded and walked off. ",
        "I increased the lengths of my strokes and almost got to the point where I pulled out entirely before penetrating her all the way. It was those long strokes that helped me stay fully erect. I was disappointed when Sara leaned forward forcing me out of her. \"My turn. Lay down so I can ride my man for a little bit,\" she ordered. Once she climbed on top of me my dick slid straight into her pussy as she descended her slender body onto me. We quickly engaged in passionate tongue kissing while I was cupping her ass. I kept my eyes closed the entire time she was on top of me and I can't remember how much time went by as Sara kept thrusting me with more desire than another woman ever has. \n\n\"May I cum?\" she moaned.\n\n\"Huh? Why not? Of course you can,\" I responded confused.\n\n\"I want this to be my last one tonight. Please don't fuck the others anymore, ok?\" she begged while she kept moaning and grinding. I wasn't sure if she meant 'tonight' anymore or 'forever' anymore but if she meant tonight I couldn't do anything with my cock even if fifty playboy models were eagerly waiting for me.\n\n\"Yes, cum baby. I am close too,\" I responded but wasn't sure if that was really true; I couldn't trust my sensations below anymore at that point. In response, she hugged me tight and started a bit faster pace. I knew that grabbing her ass wouldn't do anything to help her orgasm so I went straight for her nipples which turned out to be pencil sharp. She immediately jumped at my contact and it turned out that was the added stimulation she needed to cum on me.\n\n\"Yes, I'm cumming. Yes, baby. Please don't stop,\" she moaned as she kept grinding her hips in a circular motion. \n\nI guess she was talking about me not stopping sucking on her nipples so I sucked her right one nearly as hard as I could while the left one was being stimulated between my thumb and index finger. While all of this was happening, I felt her pussy practically cramping around my cock in waves. Even though I wanted to watch her body and facial reaction I was so lost in the moment that seemed to keep on going forever. She finally slowed down her grinding which told me to immediately stop touching her nipples. She hugged me tight which I returned as well and we just sat there with my cock still inside of her.\n\nI started caressing her naked back with my fingers tips and I quickly felt goose bumps covering her skin. She just kept holding on tight and it wasn't until I was flinching my erect cock a little that she remembered that I still had to be finished off. I still had my eyes closed when she gave me a tender kiss.\n\n\"I am all yours babe. Just tell me what you want me to do so you can cum deep inside of me,\" she whispered in my ear. I actually had no idea what I wanted.\n\n\"Hmm, good question. I really don't know,\" I responded.\n\n\"Do you want me to throw on a pair of heels so you can take me from behind by the mirror?\" she offered.\n\nThe thought definitely excited me which the quick jerk reaction of my cock made apparent. \"You don't have to do that. I think we should stay close to each other and continue our love making,\" I said but wasn't sure if I believed my own words.\n\n\"I felt him jump up when I mentioned the heels so don't be shy. Are you telling me you cannot make love to me from behind?\" she asked seductively. \n\n\"Uhm, I don't know. Don't blame me for lusting over your sexy body in heels,\" I said.\n\n\"Don't be silly. It is good to know that after rounds of fucking you still get this excited about me. Alright enough talking,\" she said and climbed off of me allowing my throbbing member to breathe for the first time in at least 10 minutes. My eyes were at first glued on her ass as she strolled towards the corner of the room where hers or Cindy's pair of black heels laid. My eyes quickly moved down and checked out her sexy legs that even without heels seemed endless. \n\nThe dim lighting also made her look even tanner. I was expecting her to put on the heels and come back to me but instead she walked in front of the bed, leaned against the wall that was about 3 feet apart from the foot of the bed and placed her outstretched left leg on the edge of the mattress. I think I knew where she was going with it and scooted towards her until her heel met my crotch and my feet were hanging off the bed. She handed me both shoes and even though I was enjoying the cock rubbing by her left foot, I wanted to get into to the \"fuck-me\" heels as soon as possible. Just as I was about to lift her foot, she stopped me:\n\n\"Na ah. Not so quick. My foot wants to play more with your cock,\" she teased. Just as she finished her sentence, she started playing with her set of perfect tits turning me on even further. I just sat there amazed and held the heels in each hand. \n\n\"Stroke your cock with the shoes,\" she ordered. \n\nI wasn't sure where she was going with it but I had no room to complain or resist. I pointed the tip of each shoe towards my throbbing member until the two inch platforms were touching me from both sides. I was really lost at that point as she kept squeezing her tits.\n\n\"Start stroking,\" she said again as her toes were wrapping the tip of my cock. Once I started obeying her orders I knew while this did nothing from a sensation standpoint, it was hot as well. Her long slender leg seemed to be a bridge between her hot body and mine and I couldn't decide which part to focus on. Her tits looked amazing between her hands and once she was attempting to lick her nipples I knew where to look. She struggled to make contact between her tongue and nipples but the attempt was hot no matter what.\n\nAfter a few minutes of playing she finally allowed me to put one of the heels on her. It took me a few seconds to tighten the strap because she kept rubbing the bottom of the shoe against my cock. Before she switched legs she raised her foot in front of my face. \n\n\"Kiss my sexy feet,\" she said and I didn't have to be told twice. I kissed her well-manicured toes and her sexy arches. \n\n\"Now lick,\" she then added and again I quickly obliged and started licking her from toe to heel.\n\nBefore I knew it the other foot was in my crotch and I focused on getting the other heel on. When I was done I looked at her and saw that one of her hands had moved onto her hairless pussy and was feverously rubbing her clit.\n\n\"I think she's ready. Are you baby?\" she moaned. I quickly got up and attacked her mouth with mine. It didn't dawn to me until now that all this teasing brought me to a level of uncontrollable excitement. My large hands touched her all over going from squeezing her ass to stroking her back to grabbing her hair.\n\nLooking back, I almost acted as if I was a horny teenager getting a chance to make out with a hot girl for the first time. I moved my mouth from her lips down to the crevice of her neck which caused her to grab my head and hair pulling me in even tighter.\n\n\"Make love to me already please,\" she finally said and walked over to the other side where the mirror hung. She leaned against the wall right next it offering a breathtaking side view or her lengthy body. \n\nI quickly joined her and pointed my throbbing rod towards her drenched entrance. I plunged right towards her cervix causing her to raise up her upper body which was leaning forward. I was waiting for another sign to see if I could continue but with no further reaction I just started pulling out only an inch or two before pushing forward again. My cock was fully erect which meant it was in absolute pain. It was the side vision of the thick glistening rod disappearing in this perfect babe that made me ignore most of the discomfort. \n\nI don't know what it is with women in heels that just makes me want to fuck the crap out of them. This situation was no different. I soon increased the length of my strokes which created more momentum when my hips collided with her ass. Since she had to brace herself against the wall, her tits were free hanging and kept swaying with each hit against her body.\n\nSara was just moaning with her eyes closed and I knew I only needed another minute or two of this stimulation to completely drain my balls that night. Through her moaning she finally spoke up: \"I thought you were going to make love to me,\" which caused me to stop mid-stroke.\n\n\"Uhm, what do you mean?\" I asked confused.\n\n\"You are fucking me like the other girls right now. Make love to me. Touch me with your hands, kiss my back, whisper into my ear. You can still enter me the same way,\" she explained.\n\nI wasn't sure how to react to that. At first I was a bit ticked off that she would stop me in the middle but then I remembered that she has made her intentions very clear from the beginning and I just couldn't resist this cute babe.\n\nI grabbed her hips tightly as I was slowly picking up the pace again. After a few strokes I pushed my hands up her back and to her shoulders. I put my right hand around her neck and pulled her towards me gently until her back was touching my chest. Instead of plunging forward I was now bending me knees and extending them to start penetrating her upward. In the meantime, I started nibbling on her ear and was breathing right into it. \n\nWith my eyes closed I was again getting lost in the moment and when one of her hands started stroking my cheek, I was in a complete daze as I felt both of our bodies melt into each other.\n\n\"I love you Sara,\" I said suddenly catching me by surprise and seemingly Sara as well. She didn't respond verbally. I did, however, feel her clench her pussy muscles and she changed the way she was stroking me but I was in no mental state of mind to read into her reaction any further. I felt my climax approaching and just cupped her tits as I was overcome with emotions which I haven't felt in a long time. During the last few strokes my legs and cock were burning and once I started cumming it felt like fire was escaping the tip. I was not sure if much came out at all but the overwhelming sensation was the closeness I felt to her. \n\nWhen I finally pulled out and opened my eyes I saw her staring at me through the mirror. She still didn't say a thing and I started to get a little nervous. Instead, she turned around and we just kissed for minutes. With all horniness satisfied, there was no more groping or thrusting, just tender kisses. \n\n\"Are you guys done yet?\" we were suddenly interrupted by Cindy.\n\n\"Where is Annie?\" asked Sara.\n\n\"She had to go. She didn't want Ben to wake up and her not being there,\" explained Cindy.\n\n\"Are we done?\" I asked jokingly looking at Sara.\n\n\"I'm good. I am ready for bed,\" she said.\n\n\"So am I. I am sore as hell and need a good night's sleep,\" explained the blonde. \n\nAfter brushing our teeth we found ourselves in bed and since Cindy fell asleep within minutes, Sara and I were able to cuddle for a few minutes but still didn't say a word to each other about my confession earlier. I don't remember falling asleep but I knew that Sara was resting on my chest and all I could think about was everything which meant that my mind was racing all over the place."
    ],
    "authorname": "milerdan2",
    "tags": [
        "nurse",
        "uniform",
        "police",
        "anal",
        "rough",
        "sore",
        "stockings",
        "enema",
        "facefuck",
        "gag"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/salesman-enjoys-trip-of-his-life-ch-04"
}