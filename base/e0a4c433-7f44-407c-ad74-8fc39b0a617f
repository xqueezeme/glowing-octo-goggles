{
    "title": "Loopholes Ch. 02",
    "pages": [
        "Author's note: This is a work of fiction. All characters are eighteen years or older. Don't expect realism and you won't be disappointed when you don't find it! Enjoy!\n\n***** \n\nEven though he didn't attribute any strictly transcendental meaning to it, Sunday still felt somehow sacred to Nick. It was the day when he allowed his lazy side free rein, the morning when he slept in and stayed in bed till noon feeling neither guilty nor compelled to do anything at all except relax and nap or maybe, at most, sit up and read, possibly while listening to music. Luckily for him, his aunt Leslie had never had a problem with any of that while he was growing up, which Nick deeply appreciated.\n\nThat particular Sunday morning, the first since Nick had returned home for the summer holidays, was going to be no exception. In fact, since his aunt had left early and would be gone all day to attend a friend's wedding in a nearby town, Nick's cherished day of rest looked particularly promising. Not that he would have minded spending time with his cool aunt Leslie, but having the house all to himself opened the gates to pleasures other than just enjoying a relaxing day of doing nothing at all, pleasures such as those he had sampled just a couple of days earlier in Tessa's bedroom during her father's birthday party.\n\nIn truth, fucking his sweet ex girlfriend's beautifully plump booty had been a much more meaningful experience than Nick had expected. Even though in theory it was supposed to be just a way to show her little sisters that anal sex was a perfectly viable and very pleasurable way of keeping their virginities intact, Nick and Tessa's passionate sodomy had stirred a whirlwind of affection and emotion in both of them, reaffirming their obvious compatibility in bed and once again demonstrating their ability to make each other cum like crazy through butt sex.\n\nInspired by their steamy reunion, Nick and Tessa had been texting all through Saturday, joking and chatting and teasing each other playfully all day while he spent time with his aunt and she was busy helping out with the organization of a church event. Seamlessly shifting into naughty mode, they had ended up sexting late into Saturday night, with Tessa sending him pics of her juicy bubble-butt and close ups of her dainty fingers teasing her tiny pink rosebud while Nick replied with images of his rock-hard cock as he stroked it all over its massive veiny length. Eventually, their sexting session reached its peak when Tessa gifted Nick with a video in which she got on all fours on her bed and then proceeded to lustfully masturbate her anus with a robust dildo while furiously frigging her nectar-drenched clit until she reached a squealing, gushing climax. \n\nEven though he knew that he couldn't hope to match the insane eroticism of that video, Nick still sent Tessa a few shots that captured the orgasmic effects that her unexpected virtual show had had on him. Those pics, which depicted Nick's huge meaty truncheon lying on his toned abdomen in a gigantic pool of his creamy and insanely abundant seed, were actually so gratifying and arousing to Tessa that she had kept caressing her virgin pussy long after their interactive masturbatory session was over. Meanwhile, as he drifted off to sleep with a smile on his lips and afterimages of Tessa's glorious bubble-butt lingering in his mind, Nick felt a stirring in his semi-hard cock as he pondered on the final text she had sent him, the one in which she said good night and suggested that he should get some rest to be ready for a 'surprise' she had in store for him the next day. \n\nUnderstandably, as he celebrated his Lazy Sunday in bed, napping and listening to music, Nick couldn't help but linger on Tessa's promising text. Since he had mentioned to her that he would be home alone all day, Nick assumed that Tessa's 'surprise' would probably involve her showing up at his door after church so to he could make love to her fabulous booty. The mere idea of immersing his huge boner in the warm, dick-hugging snugness of Tessa adorable little asshole was enough to make Nick's chubby schlong stiffen to aching rock-hardness, but he stoically refrained from jacking off, deciding to save every drop of cum for his ex girlfriend's curvy bubble-butt instead.\n\nKnowing that Tessa would be in church for most of the morning, Nick didn't bother texting her nor did he expect her to text him during the Sunday service. Nonetheless, he did decide to strategically end his lazy time a bit earlier than he would have done under difference circumstances. Getting out of bed with a spring in his step, Nick smiled to himself as he took an invigorating shower right around the time he estimated pastor Jay's service to be almost done. \n\nMuch to his satisfaction, Nick's predictions were confirmed moments after he stepped out of the bathroom with a towel wrapped around his midriff, when an incoming text made his cell phone chime. Grinning broadly, Nick barely had the time to read Tessa's message, which simply said 'Your surprise is here', then the doorbell rang. Not bothering to reply via text since he would see her within moments in person, Nick simply dropped his phone on the desk and rushed downstairs to welcome Tessa in, remaining naked except for his glasses and the towel around his waist. \n\nHis semi-hard boner was visibly tenting the towel as Nick opened the front door with a genial smile and said: \"Hey there, Tess-uhm-ssa's sisters?! What the...\" \n\nChuckling and grinning as they enjoyed Nick's befuddled expression at seeing them instead of Tessa, Sharon and Sally shared a complicit grin before turning to Nick and chirping in unison: \"Surprise!\"\n\nBlinking in stupor, understanding by that reference and by the suggestive looks on the twins' faces that they were indeed there at Tessa's prompting, Nick was so blindsided that he just stood there at the door, almost naked and with a prominent boner which the towel wrapped around his waist actually highlighted rather than hide. For their part, the twins seemed to be quite comfortable with the situation they had orchestrated with the blessing and help of their cool big sis. Dressed in their Sunday best, Sally wearing a light green sleeveless dress and Sharon sporting tight fitting black pants with a white blouse, the pastor's younger daughters giggled impishly as their identical blue eyes kept shifting between Nick's obvious erection and the priceless look of genuine shock, eager anticipation and glad surprise painted on his thin, handsome face.\n\n\"So, are you gonna let us in any time soon, Nick?\" Sharon finally said, tapping her sensible pumps on the doormat and grinning impishly while she drank in Nick's tall, lean physique beaded with trickling water droplets. \"Your aunt is not home today, right? Tessie said she had a wedding to go to or something.\"\n\n\"Uh... Yeah...\" Nick mumbled, his brain gradually adjusting to the fact that Tessa had actually sent her gorgeous blonde sisters over to his house as her 'surprise' for him!\n\n\"We're not too early, right?\" Sally asked, fixing her blue gaze onto Nick's bespectacled eyes as she anxiously bit her soft lips, inadvertently making him recall just how amazingly skilled at sucking his big cock that mouth had proved to be just a couple of days before. \"Like, we didn't wake you up, or anything? Tessie said you'd probably still be in bed but you'd be awake by this time, so...\"\n\n\"Oh he was awake alright, probably imagining Tessie's big booty making a surprise visit and bouncing away on his boner! Look at that big thing there, it's literally holding up the towel!\" Sharon chuckled, elbowing her twin. \"You were expecting Tessie to be here instead of us... Right, Nick?\"\n\n\"Yeah, well, I guess you'll just have to settle for our subpar asses instead...\" Sally interjected with a sort of timid yet sexy shrug and a swift smiling glance at Nick that managed to make his boner flex harder and prevented him to come up with a reply. Her half-apologetic and half-playful tone turned to a teasing purr as she stared straight into Nick's inquisitive eyes and concluded: \"Our butts are not big and juicy like Tessie's, but at least you're getting two. And we're both anal virgins, as you know...\"\n\n\"Hey, easy now. Your asses aren't subpar at all, girls!\" Nick firmly stated, snapping out of his aroused befuddlement for a moment, only to immediately stop dead in his tracks as the implied meaning of Sally's words fully sank in. \"Whoa... Wait a second, what do you mean exactly by 'you get two'? I get two asses?! Your virgin asses?! Seriously?\"\n\n\"Let's get inside, Nick,\" Sharon chuckled, winking at a bug-eyed Nick while she stepped past him and walked into the house, followed by a giggling and enticingly flustered Sally. \"You may wanna sit down for this one...\"\n\n*****\n\nAs calmly and composedly as possible given that his raging hard-on was tenting up the towel in his lap in such a ponderous way as to look borderline comical, Nick sat back in the armchair and let out a long-drawn-out sigh. \n\n\"So, let me recap this just one more time...\" he said slowly, looking at Sally and Sharon as they both smiled playfully at him from their seats on the couch in front of him, \"You two want me to pop your butt cherries. Right here, right now. Both of you. Correct?\" \n\n\"Yeah, that's exactly right!\" Sharon nodded with a grin. \"Of course we're talking strictly anal here, our pussies remain totally off limits. I mean, we're still good girls after all...\" the pastor's daughter concluded, winking teasingly at an ever more aroused Nick. \n\n\"After watching you and Tessie the other day, well, we made up our minds. We really want you to be the first guy to fuck our virgin assholes, Nick,\" Sally declared, playing excitedly with her long blonde hair, her blue eyes sparkling with evident desire even as her sculpted cheeks blushed an adorable rosy hue. \"Will you do it, Nick? Please... It has to be you, we wouldn't do it with just anyone.\"\n\n\"Holy fuck! I can't believe it...\" Nick mumbled to himself before meeting the twins' expectant stares. He had to take a steadying breath before he could finally say: \"Yeah. Yes, of course I'll do it. As long as you're both absolutely sure about it. Are you?\"\n\n\"Yes!\" the twins confirmed in eager unison, nodding their blonde heads vigorously in agreement before Sally added: \"Sharon was already pretty much ready to do it any time, but for me it was your little demonstration the other day that did it... I mean, you made Tessie cum so much with your big cock pounding her ass, it looked so hot... Now I actually can't wait to try it!\"\n\nAt the mention of his amazing ex girlfriend, Nick couldn't help but murmur: \"Wow, Tessa knows and she's okay with this... She actually set it all up... Incredible!\" \n\n\"Oh yeah, Tessie approves one hundred percent,\" Sally confirmed with a giggle, going so far as to extend her slim arm to show Nick her cell, letting him have a glimpse at her latest chats with Tessa. \"We were just texting about it. See?\"\n\n\"It was kind of her idea, really...\" Sharon mused, distractedly twirling her blonde chin-length hair around her slender fingers as she spoke. \"She even helped us train our buttholes yesterday. We used her dildos and her buttplugs all day, and she gave us all kind of tips and stuff... It was nice of her, really, and she was even super okay to let us use you as our first!\" Sharon concluded with a chuckle, looking at the rigid, towel-hidden pole between Nick's legs.\" \n\n\"Tessie is so nice...\" Sally chimed in, turning to her twin as she pondered. \"I don't know if I'd be so cool about letting my ex boyfriend fuck my sisters in the ass. I'd probably be all mean and resentful and jealous, I think.\"\n\n\"Oh me too, definitely,\" Sharon agreed. \"But Tessie is not like that at all. She's, like, super generous about everything. Tessie's really great... I mean, look at the awesome dick she got us for our first time doing anal!\"\n\nAfter giggling at her sassy twin's quip, Sally regained her composure and looked at Nick with a half-naughty and half-guilty smile on her lips that only made his erection flex with eagerness under the towel. \"Sorry, Nick... I guess we're sort of objectifying you a bit too much, uh?\"\n\n\"No, it's okay,\" Nick chuckled along with the pastor's twin daughters before concluding in his characteristic matter-of-fact tone. \"I can definitely live with being objectified if it means that I get to deflower your sweet little asses. I'm all in for it.\"\n\nDespite the honest seriousness imbuing Nick's words, or maybe because of it, Sharon and Sally burst out laughing and kept tittering for a bit, meanwhile looking knowingly at each other and unashamedly stealing glances at their big sister's ex boyfriend's toned body and blatantly erect albeit still towel-clad pole. Eventually, once that tension-breaking fit of laughter was over, Sharon exhaled and spoke for both herself and her twin.\n\n\"Alright, then. Now that we've cleared everything, we might want to get started. Tessie's gonna cover for us with our parents for a bit, and today there's this big meeting thingy at the community center. There are lots of people from other churches and stuff, so we probably can get away with disappearing for a couple of hours. We'll have to get back there at some point though, so we can't waste too much time on, like, formalities and such.\"\n\n\"Right,\" Sally agreed, straightening her dress and smiling brightly as she stood up, immediately imitated by Sharon. \"So, Nick... Shall we go to your room?\"\n\nGrinning goofily as he pushed his glasses up on his nose with his forefinger, Nick took a moment to admire the twin paragons of youthful, wholesome beauty standing before him before he replied. Then, staring into Sharon and Sally's expectant faces in turn, he stood up too, letting the towel fall to the floor to reveal his massively erect cock in all its imposing, meaty hardness. \n\nOver the pastor's daughters' matching gasps of awe and desire, Nick grinned broadly as he enjoyed the way their twin blue gazes instantly shifted to his crotch and locked onto his overswollen dick. As Sharon licked her gorgeous lips and a long lustful moan escaped Sally's O-shaped mouth, Nick calmly said: \"Okay, girls. Let's do this.\"\n\n*****\n\nThe thought of calling Tessa or at least texting her to thank her for the insanely hot surprise she had arranged for him did cross Nick's mind more than once as he watched Sharon and Sally nonchalantly shedding their clothes and letting them drop on the floor of his bedroom, giggling and casting him impish glances all the while. \n\nLeaning against his desk and distractedly stroking his huge boner, his bespectacled eyes hungrily drinking in the twins' long toned legs, flat tummies and flawless alabaster skin, Nick couldn't help but chuckle as he realized that he was caught in a weird sort of paradox. The less clothes Sharon and Sally wore, the more grateful he felt toward Tessa; at same time though, he was thinking about the pastor's eldest daughter less and less the more of her gorgeous little sisters' naked bodies he was being allowed to see. All things considered, Nick thought while his smile broadened, that was a very good paradox to be stuck with. \n\nBy the time Sharon and Sally had removed their bras to reveal their perky tits and then swiftly turned around with their backs to him to slowly peel their white cotton panties down their athletic legs, Nick's attention was entirely focused on the priceless vision of the twins' taut, heart-shaped butts being unveiled for his visual pleasure. Though smaller than their big sister's gloriously plump booty, Sharon and Sally's asses were masterpieces in their own right, as far as Nick was concerned. The most exciting detail about them was the fact that, albeit on a smaller scale, the twins' perfect little bubble-butts showed the same cock-hardening roundness and protruding fullness that he had always love about Tessa's epic booty. In truth, all three of the pastor's daughters had been blessed with an ideal waist/hips ratio, which was always associated with the type of mouth-watering butts that a devoted ass man like Nick couldn't help but adore and lust after. \n\nLooking over their shoulders to see a panting and entranced Nick intent on stroking his massive pre-cum leaking boner more vigorously as he devoured their sweet asses with his bespectacled eyes, the twins nodded at each other before proceeding with the final move of the plan they had concocted to blow the mind of the lucky assfucker they had chosen to pop their anal cherries. Tittering excitedly, still facing away from him all the while, Sharon and Sally climbed onto Nick's bed and got down on all fours side by side, their elbows resting on the crumpled sheets, their backs arching as they tilted their round little bubble-butts up, docilely offering them to him. \n\nA lustful gasp escaped Nick's mouth at that sight, and it wasn't just because of those two curvy asses presented to him so invitingly, nor because, in that position, he could fully see the treasures hidden in the twins' buttcracks and thus feast his eyes on their smooth virgin pussies and their pink little assholes. No, it was more than all that: much to Nick's glad surprise, both Sally and Sharon had preemptively thought about getting their untouched rosebuds ready to be deflowered by his huge cock, as was revealed by the image of their rubbery little sphincters stretched tautly around the bases of a pair of buttplugs. \n\n\"Holy shit! Oh fuck, girls, that's so hot\" Nick panted, walking closer to the twins' bent over bodies as if in a trance. \n\nHis rock-hard schlong was pulsating with need and his brain was sizzling with horniness as he immediately recognized the silver buttplug stuffed in Sally's anus and the jeweled one dilating Sharon's orifice. Both toys belonged to Tessa, as Nick knew very well, having seen them jammed inside her ass many many times, especially in the early days of their relationship, when they were both lewdly invested in the hyper erotic task of preparing her virgin little butthole to accept his massive truncheon. \n\nUpon recognizing the bases of those two specific buttplugs embedded within Sharon and Sally's hineyholes, Nick didn't only get even more wildly aroused than he already was, but he also felt like the emotional connections between himself, the twins and Tessa were being strengthened. Nick was well aware that his ex girlfriend had developed quite the collection of toys during their relationship after she discovered how much she liked anal, so he knew instantly that her choice to give the twins the very first two buttplugs she had purchased did carry a deeper meaning, which wasn't lost on him. It was a silent yet unequivocal way for Tessa to give him her blessing, her ultimate seal of approval on his taking her little sisters' anal virginities.\n\nFeeling at the same time fluffier and hornier as he kept staring at the twins' plugged pink buttholes, Nick eventually chuckled as he asked: \"You had these up your asses in church too, right?\"\n\n\"Oh yeah, Tessie insisted on it!\" Sharon confirmed with a mischievous grin and a wiggle of her heart-shaped rump.\n\n\"She told us that she used to do it all the time when you two were together,\" Sally went on, swaying her gorgeous little bubble-butt side to side, gently brushing her sister's protruding rear in the process, \"so that you could fuck her ass right after the service was over. That's so naughty and hot!\"\n\n\"Yeah, that was always one of her favorites...\" Nick musingly commented as he rested his right hand on Sally's perky ass and his left on Sharon's taut tushy, instantly starting to caress and knead their smooth, perfectly round buttcheeks. \n\nAs Nick's fingers roamed all over the flawless curves of their identical booties, Sharon and Sally couldn't help but purr in unison, thrilled as they were to feel the hungry yet reverent touch of their sister's ex boyfriend's hands massaging their asses. Unsurprisingly, the girls' soft coos spiked up into full blown moans of pleasure as soon as Nick's digits reached the bases of the buttplugs stuffed into their virgin rosebuds and he started playing with them. ",
        "Slowly twirling the embedded toys and working their tapered lengths gently back and forth inside Sharon and Sally's snug anal chutes, Nick couldn't help but smile while he watched the girls' untouched pussies getting rapidly wet, a shiny glint of nectar almost instantly coating their puffy, smooth pink labia. At first Nick just teased the twins' receptive sphincters by shallowly sawing the buttplugs in and out of their anuses, which made their bent-over bodies shiver with delight at the prospect of soon having a much bigger and meatier intruder sliding into their hineyholes. Then, as the girls kept moaning sexily, Nick continued pumping Sharon's anal toy with one hand while with the other he slotted Sally's buttplug firmly back into place up her receptive ass and then reached down across her soaked pussy lips with his thumb, so that he could rub her engorged clit. Sally's gasps got immediately louder and her juices flowed ever more profusely, egging Nick on to continue his manipulations on her for a little longer before imparting them on Sharon too. \n\nMewling and panting, both Sharon and Sally were on the verge of climax by the time Nick reverted once again to simply masturbating their assholes with gentle in and out motions of the buttplugs. The slow but steady butt-stretching tempo that he set was drawing such languid and sexy squeals from the twins' O-shaped mouths that Nick felt his already rock-hard boner flex almost painfully while dollop upon dollop of precum formed on his bloated purple knob and trickled down his veiny shaft. Anxious to move to the next step almost as much as Sharon and Sally were, Nick tried not to betray his anal lust too much as he asked: \"Are you doing okay, girls? Feeling good and relaxed?\"\n\n\"Fuck, yeah... This feels good!\" Sharon mumbled as she looked at Nick over her shoulders, her pleasure-hooded eyes instantly zeroing in on his massively erect dickmeat. \"My asshole is all tingly and my pussy is sooo wet... Oohh this is gonna be so much fun!\"\n\n\"Uhh Nick... Will you lick us like you did with Tessie, please?\" Sally requested as she panted and wiggled her heart-shaped ass, rocking back and forth to match the maddeningly exciting rhythm at which Nick was driving the buttplug in and out of her clingy anus. \"I guess we're good to go already, but it looked so hot when you rimmed Tessie's asshole! I've been thinking about it, like, all the time since the other day... Can you do it to us, pleeease?\"\n\nSmiling broadly Nick nodded at Sally, making her smile with wanton joy even as he turned to Sharon and instructed her in his calm, deep tone: \"Keep prepping your ass with the buttplug like I was doing, Sharon, and feel free to rub your clit too. Your sister asked first, so I'll start with her, but I'll be right back to do it to you too, okay?\"\n\nChoosing to consider Sharon's playful grin as a good enough answer, Nick chuckled and leaned down until his face was wedged in the cleft of Sally's butt, his palms meanwhile cupping her round, flawless asscheeks. Pausing for a moment to inhale the intoxicating scent of Sally's arousal, Nick avidly drank in the sight of her soon-to-be-deflowered hineyhole clinging tautly around the silver base of the buttplug while glinting drops of her sweet juices dribbled from her little virgin pussy. Egged on by that awesome vision, without wasting another second Nick dove in tongue first into Sally's slit and started lapping away as he slowly and deliberately pulled the buttplug out of her anus. \n\nA stream of sexy moans erupted from Sally's slack mouth as the ass-stretching toy was extracted from her sensitive rosebud, her vocalizations reaching a squealing peak when Nick stopped his withdrawing of the tapered dildo right while its largest part was about to slide out of Sally's distended anal ring. Holding the buttplug in place as her pink twitching orifice remained dilated to the max, Nick eagerly attacked Sally's engorged clit with a devastating flurry of tongue swipes that made the slender girl tremble all over as a stabbing climax snuck up on her, making her pussy gush her liquid pleasure all over his slurping mouth. \n\nAs Sally enjoyed the throes of her blinding orgasm, Nick resumed the removal of the buttplug, making the pastor's daughter cum even harder on his clit-sucking lips, her climax flaring brighter thanks to the delightful mixture of stretching and friction radiating from her clingy sphincter. As soon as the plastic toy popped completely out of her elastic asshole, Sally couldn't help but bemoan the unnerving sense of emptiness suddenly pervading her winking butt-ring. Her languid sigh of displeasure was cut short almost immediately though, replaced by the sharp trembling gasp of delight caused by the feel of Nick's wet warm tongue leaving her pussy and diving straight into the slightly gaping yet rapidly shrinking entrance of her pink, rubbery hineyhole.\n\nThe unprecedented, incredibly pleasurable sensation of having a wet wriggling tongue push its slobbering way into her pulsating little butthole and starting to lap away at her ass hit Sally like a thunderbolt, making her scream out in ecstasy. Her rolling orgasm exploded yet again and grew even stronger while Nick began voraciously licking and devotedly tongue-fucking her pristine anus, blowing her mind completely and forcing her to yell out in naughty bliss. \n\n\"Oohh shiiiit! Ooowww yesss, Nick, lick my aaass! Uuhh yeeaah, like thaat!\" \n\nSmiling between Sally's smooth round buttcheeks, with his lips clamped wetly around her adorable virgin sphincter and his tongue buried as deep as possible into her steamy anal passage, Nick redoubled his efforts and began rolling her slippery clit between his fingertips while he gloried in the slim blonde's obvious appreciation of his rimjob. As he gluttonously feasted on Sally's ass and teased her clit into climax after crashing climax with his talented digits, Nick was glad to notice from the corner of his eye that Sharon too was having quite some fun. Her husky moans and the desperate intensity she put into masturbating her ass with the buttplug while furiously diddling her clit showed that Sharon wasn't just mechanically doing what Nick had instructed her to do in preparation of her anal deflowering. In truth, watching her twin get her ass eaten by Nick was stoking Sharon's anal lust immensely and thus increasing her desire to get sodomized for the first time. \n\nBy the time Nick removed his skilled tongue from the snug confines of Sally's nibbling little anus and pulled his face back from between her shapely buttcheeks, the pastor's usually timid daughter was writhing and panting in ecstasy, so pleasure-weakened that she was barely able to remain in position on all fours. Treating himself to a long girlcum-scooping tongue swipe on Sally's drenched pussy that made the moaning girl shudder all over, Nick swiftly retrieved the silver buttplug, lathered it in Sally's trickling juices and then gently inserted it back inside her twitching, saliva-slick anus before her rosy pucker could seal shut on itself once again. \n\nAs Sally purred and let herself fall forward to lie on her tummy so that she could rest and savor her sizzling afterglow, Nick turned toward Sharon. With her ass tilted up and her face pressed sideways on the bed, Sharon was feverishly working her clit with one hand while with the other she methodically worked the jeweled buttplug back and forth into her rubbery little asshole. A litany of soft moans escaped Sharon's parted lips as she pulled the tapered toy all the way out of her anus until it escaped her gripping butt-ring with a lewd pop only to then swiftly be pushed back in until it was jammed completely inside her tiny orifice. As he admired the slim girl so intently pumping the buttplug in and out of her virgin asshole over and over again, Nick felt his rock-hard boner flex powerfully between his legs, rearing to get some action. \n\nA lustful grin broadened on Sharon's gorgeous lips as she looked over her shoulders at Nick, her impish gaze meeting his bespectacled, inquisitive eyes. Still savoring the scrumptious sweetness of Sally's girlcum saturating his mouth along with the fruity aftertaste he had encountered while devouring her cute little asshole, Nick chuckled as he asked Sharon: \"Did you guys use cherry flavored lube, by any chance? Because it would be very appropriate if that was the case...\"\n\n\"Yep, you got it! We used one of Tessie's edible lubes when we put the buttplugs in. It was her idea, she was sure you'd like it,\" Sharon said with a wink. \"The bottle is in my bag. I'm sure we'll need some more to get that monstercock of yours into our poor little assholes!\" she concluded with a giggle, unconsciously running her tongue over her lips as she stared at Nick's monumental erection.\n\n\"There will be time for lube later,\" Nick replied as he positioned himself right behind Sharon's offered little booty, \"but for the moment I'll just moisten you up like I did for Sally. Sounds good?\"\n\n\"Yeah, definitely!\" Sharon agreed enthusiastically, shaking her curvy rump and purring with eagerness as one of Nick's hands covetously cupped her round asscheeks while the other grasped the base of the jeweled buttplug and slowly but surely pulled it out of her clingy anus. As the plastic toy was removed completely from her clutching anal sheath with a sexy popping sound, thus leaving her pink sphincter gaping and twitching, Sharon let out an unhappy groan. Instantly missing the satisfying sense of fullness in her ass, Sharon wasn't disappointed for more than a couple of seconds. A thrilling shiver of anticipation ran up her arched spine as soon as Nick's hot breath hit her dripping wet pussy, while the awareness that she was about to feel his pleasure-gifting tongue on both of her virgin holes made her head spin with arousal. \n\nCasting a quick glance to her side to take in Sally's heavy-lidded eyes and goofily smiling face, Sharon couldn't help but snicker. \"Well, Nick, she sure seems to have liked what you did to her, a lot! I mean, look at her: she's totally owwhh... Oohh fuuuck... Uuhh yeess, Niiiick!\"\n\nThe sudden feel of Nick's warm tongue replacing the lifeless toy inside her anus and the slick rubbing motions of his fingertips on her drenched clit instantly interrupted Sharon's train of thought, her words breaking into long husky moans that matched the lapping and slurping and munching attentions that Nick's mouth was devoting to her virgin pink rosebud. Just like her sister, Sharon was joyously overwhelmed by the delicious naughtiness and by the sheer forbidden bliss of getting her gummy sphincter dutifully licked and her virgin little butthole tongue-fucked by a devoted booty lover like Nick. \n\nUnlike Sally though, Sharon didn't abandon herself completely to the pleasure of getting her ass eaten by Nick, managing to keep her mind more or less focused on the main event ahead while she enjoyed his masterful rimjob. Still, as impatient as she was to finally get her virgin anus deflowered by his impressive dickmeat, Sharon allowed herself one big butt-centered orgasm that sent her sphincter spasming around Nick's skilled tongue before she brokenly blurted out her raging desire to be properly sodomized. \n\n\"Uuhh fuck, Nick! That's so good, but... I want your cock in my ass now. Your tongue is driving me crazy, my asshole is sooo tingly! Just lube me up and stick your big dick in me, Nick, I want you to fuck my ass so bad!\"\n\nThrilled to the core by that wanton invitation, Nick extracted his tongue from Sharon's pulsating little orifice and peeked over her heart-shaped tushy to smile and nod at her as she looked back at him with hooded, lust-glazed eyes. Without wasting a second, Nick darted across the room and retrieved the bottle of lube from inside Sharon's bag. As soon as he was once again positioned behind her upturned little bubble-butt, Sharon reached eagerly back to spread her taut round asscheeks open for Nick, who immediately uncapped the bottle and pressed it against her well-licked, saliva-glinting backdoor and then squeezed, pouring a generous amount of the slick fluid straight into Sharon's winking anus. \n\nThe sudden cold feel of the lube squirting into her anal passage made the pastor's blonde daughter groan, but her momentary discomfort dissipated as soon as Nick clamped his mouth onto her engorged clit and started suckling lewdly, meanwhile sliding first one then a second digit into her tiny, slippery hineyhole. Smoothly pumping his fingers in and out of Sharon's asshole to properly coat the inside of her snug chute with lube, Nick kept nursing on her clit until he heard her mewls spike up into unmistakeable squeals of climax. Then, as Sharon's gushing pussy juices flooded his slurping mouth, he slipped a third finger into her twitching, oily butthole and resumed steadily masturbating her ass. Focused as he was on making those clit-nursing and sphincter-stretching preparations as pleasurable as possible for Sharon, Nick was caught by surprise when the bent-over track star managed to turn her broken moans of pleasure into a trembling yet determined plea for more. \n\n\"Uuhh Niiick... I'm ready, I'm so fucking ready for your cock! Do it, Nick, pleeease... Stick your big cock in my ass! Fuck my ass before I go crazy... Oowwhh yeesss! Sooo good!\"\n\nStill sucking away on her girlcum-drooling slit and nibbling on her engorged clit, Nick waited until Sharon's climax abated before removing his face from between her round taut buttcheeks to stand up behind her, his fingers still jammed into her warm pink orifice all the while. Sharon's begging invitation to get sodomized also managed to snap Sally out of her post-orgasmic grogginess, convincing her to sit up on her knees on the bed right beside her mewling sister so as to have a better look at her imminent anal deflowering. \n\nBefore Nick could reach for the bottle of lube, Sally's eyes locked with his bespectacled gaze and she started to speak, blushing adorably while casting him a half-timid and half-seductive smile: \"Don't worry about this, Nick, I'll uhm... I'll lube Sharon's asshole for you. We practiced together with the buttplugs yesterday, so I think I'll do it right. Besides, well, I wanna be involved too, kinda... Is that okay?\"\n\n\"Sure, absolutely!\" Nick nodded in glad agreement. Resting his free hand on Sharon's flawless booty, he gently directed her to lie on her side, meanwhile taking good care to keep his three sphincter-stretching digits always crammed inside her snug, well-lubed anus. \n\nMewling and cupping her pointy tits in her hands, her fingertips playing feverishly with her stiff and super sensitive nipples, Sharon docilely followed Nick's instructions and rolled onto her side, with her legs drawn up to her chest and her round perky ass hanging off the edge of the bed. The sight of Sharon's virgin holes offered to him so docilely, her little pussy dripping with juices and her pink saliva-slick asshole stretched tautly around his fingers, sent the umpteenth jolt of arousal to Nick's massively thick and painfully hard boner, coaxing yet another glob of runny precum to ooze from his purple glans. \n\nBefore Nick even asked for it, Sally was already extending her arm and turning the lube bottle upside down right over his meaty erection, letting a long dribble of the slippery fluid splatter on his veiny shaft. To the sound of Sally's excited giggles and of Sharon's urgent moans of anticipation, Nick rubbed the lube all over his huge pole and then aligned his well-greased length with the pastor's daughter's offered asshole, meanwhile always stimulating Sharon's clingy sphincter with his fingers. The lewd image of Sharon's rosy orifice dilated around his three butt-prepping digits got even better when Nick pressed his bloated cockhead against the distended rim of her pink gummy pucker. \n\nThat sexy picture improved even more when Sally cupped one of her twin's round buttcheeks with her dainty hand and pried her taut globes apart a bit more, much to her own and Nick's visual pleasure. In response to the irrepressible chuckle and questioningly arched eyebrow that her facilitating gesture induced in Nick, Sally just shrugged and raised the hand in which she held the bottle of lube, tittering as she said: \"Well, I need to a have a good view of the action to squeeze this stuff on the right spot!\"\n\nAs Nick and Sally shared a quick complicit laugh, Sharon groaned in antsy frustration: \"Come on, you two, stop wasting time! You got me so fucking horny, Nick, I want your big cock in my ass now!\"\n\n\"Okay, Sharon. Here goes...\" Nick said in his deep calm voice, slowly withdrawing his digits from her clingy anus even as he pressed his fat glans more firmly onto the dilated rim of her asshole, so that it was pushing against the very edge of her finger-plugged backdoor. \"You're all lubed up and clearly willing, so it should go in easy. But I'll take it slow anyway, and you can stop me any time you want. Ready?\" \n\n\"Yes, yes! Do it, Nick... Put it in my ass!\"\n\nWhile Sally held her breath and stared in rapt anticipation, Nick completed the removal of his butt-stretching fingers from Sharon's slippery orifice, leaving her adorable virgin asshole to gape and twitch as it almost instantly began to shrink. Before her pink little sphincter could wink shut though, Nick eased his bulbous purple glans into that quickly closing hole, managing to wedge his whole lube-shiny cockhead inside Sharon's snug, quivering anus. A long gasping mewl from Sharon marked the moment her asshole was invaded by a real dick for the first time. A jolt of pure excitement coursed through her body as Nick's fat tip filled her delicate rosebud full and forced her tiny anal opening to widen and accept him, her quickened breathing matching the intense pulsations of her butt-ring clamping firmly around his girthy shaft. \n\n\"Wow! It's in, Sharon!\" Sally exclaimed, her mouth open in naughty awe as her eyes refused to move from the memorable sight of her twin sister's overdilated sphincter gripping desperately onto the very first cock entering her body. \"Whoa, it's really in there... Nick's got his huge dick in your ass, Sharon! That's sooo hot!\"\n\n\"Well, it's just the tip actually...\" Nick pointed out with a shrug even as he brought his hand to Sharon's dripping little slit and started gently circling his fingertips on her engorged clit to help her mitigate the unavoidable discomfort of her anal deflowering. \"How are you doing, Sharon? Everything okay? I know it's gonna sound ridiculous, but try to stay as relaxed as you can. You're doing great so far.\" \n\nLooking up to meet first Sally's smiling face and then Nick's bespectacled gaze, Sharon panted as she savored the feel of having his massive cock jammed inside her super tight asshole. The feeling was incredibly intense and weird but not actually painful, plus the slow caresses that Nick was treating her pussy to were doing a great job of keeping an undercurrent of delightful clit-centered wavelets rolling, making Sharon's whole body hum with pre-orgasmic joy. Trying to keep her pleasure-glazed eyes open as her dick-crammed sphincter twitched and lewdly suckled on the very first inches of Nick's meaty pole, Sharon shared a quick but meaningful glance with her twin before letting out her halting reply. \n\n\"Uuhnghh Nick... I'm okay I guess... Uuhh fuck! It d-d-doesn't really hurt but... Uuhh your cock is just sooo big! Oowhh you're stretching my ass so fucking much, Nick! Ooowh yeahh, rub my pussy like thaaat... Uuhh my god, yesss, that feels so good!\" \n\nFor a while, as Sharon's clingy little butthole slowly adapted to being dilated to the limit by his huge boner, Nick just held himself perfectly still and enjoyed the potent glans-nursing squeezes that the slim blonde's anal muscles were imparting on his firmly embedded cockhead. Soon enough though, helped by his incessant clit-frigging manipulations and by her eagerness to be sodomized, not to mention the preparations provided by Tessa's buttplug and Nick's own tongue, Sharon's gummy pink sphincter stopped cramping around his swollen tip and began accepting him within the slick, extra tight grip of her forbidden orifice instead. ",
        "Feeling her anus meekly capitulating to his invading shaft, well aware of the incessant trickles of sweet nectar overflowing her virgin pussy and drenching his nub-frigging fingers, Nick estimated that Sharon was ready to take a few more inches of his throbbing schlong into her asshole. Not wanting to rush things but rather choosing to err on the side of caution, Nick was about to ask her if she was okay enough to let him push his dick a little bit deeper up her butt, when Sharon preceded him by brokenly voicing her wanton anal lust through sexy, panting moans.\n\n\"Mm-mmh-more, Nick... Go slow but uhh fuck... Uuugnh fuck my ass, Nick, I need more!\"\n\nBlinking in glad surprise as he took in the cock-hardening expression of mind-numbing pleasure painted on Sharon's sculpted features, Nick didn't actually move yet but instead shared a silent glance with Sally. Getting a rapid nod and a complicit smile in reply from the keeling blonde, certain that Sally of all people would be a perfect judge of her own twin's readiness, Nick inhaled deeply, grabbed onto Sharon's round heart-shaped rump with one hand as he kept diddling her clit with the other, and then gently pushed his hips forward.\n\nA long, breathless gasp from Sharon punctuated the slow but firm motion that forced another good couple of inches of Nick's enormous boner to slide into her butthole, increasing the strange yet satisfying sense of stuffing fullness in her ass that was making her hairless pussy drool and her whole svelte body shake in unprecedented delight. Pausing his penetration and savoring the intense suckling squeezes that Sharon's amazingly tight anus was treating him to as it molded around his shaft, Nick only had to glance at Sally to signify that he wanted her to apply more lube on her sister's cock-gobbling, overdilated butt-ring. \n\nGiggling and nodding before focusing her bright blue eyes on the amazing sight of her twin's dick-stuffed asshole, Sally poured a big dribble of lubricant right where the pink elastic ring of Sharon's tautly stretched sphincter was gripping Nick's shaft in an obscenely sexy chokehold. With his cock and her butthole greased up to perfection, sure that the pastor's daughter was as ready as she was going to be, Nick took a deep breath and focused on the glorious task of opening up Sharon's virginally tight ass while her twin sister watched, helpfully holding the bottle of lube for him. \n\nWhile his fingers kept methodically rubbing her nectar-squishy clit, Nick started humping Sharon's round little bubble-butt with exaggeratedly slow and intentionally shallow back and forth motions, stirring his enormous truncheon inside Sharon's super snug chute while barely moving in and out of her dick-clenching anus. Still, even if it was only by minimal increments, Nick's huge precum-oozing glans was in fact advancing, drilling a tiny bit deeper into the slim blonde's untouched rectum every second. Inexorably, Nick's enormous pole kept sliding further up Sharon's ass a millimeter at a time through micro thrusts so gentle that she barely felt any additional discomfort at all, a naughty buzz of delight instead growing inside her as more and more of his thick dickmeat was crammed into her exquisite little butthole. \n\nThe sedated rhythm of that anal penetration was crucial for Sharon, who was getting her anal cherry popped by a monstercock as impressive as Nick's, but he too was profiting from it. Sharon's asshole was so virginally tight and sinfully warm, so alive with the incessant shaft-tugging pulsations of her capitulating anal muscles and so incredibly soft and hugging as its velvety walls enveloped more and more of his meaty length that Nick didn't really have any choice but to ease his way up her ass at the slowest pace possible, otherwise the pastor's blonde daughter's narrow forbidden orifice would have sucked the cum right out of him in a matter of seconds. \n\nStill, other factors were in place as well, making it extremely difficult for Nick not to blow his load too soon, namely Sally.\n\nLewdly keen on helping her twin sister take Nick's enormous dick up her ass, Sally quickly got very involved in providing additional lube for that steamy anal coupling. Instead of squeezing dribbles of the slippery fluid onto Sharon's dilated sphincter to reduce the friction of Nick's truncheon gently easing its way into her snug anal passage, Sally decided to take a more direct approach. While Sharon mewled constantly in dazed lust-addled delight and Nick kept patiently stuffing her virgin little asshole full his swollen dickmeat, Sally began squirting lube directly on the palm of her own tiny hand and then applying it on Nick's butt-humping schlong by stroking and rubbing the significant portion of his shaft that was still outside of her twin's cock-gobbling anus. Massaging the oily gel onto his pole with slow tugging caresses, Sally was soon jacking Nick off as he jammed his veiny horsecock into Sharon's sweet ass.\n\nGroaning and grunting and doing his best not to cum just yet, Nick had half a mind to tell Sally not to stroke the lube onto the exposed part of his boner by giving him what was in fact a deliciously devoted handjob, but he simply couldn't bring himself to stop that unexpected masturbatory treat. So, gritting his teeth even as his breathing got more and more labored by the second, Nick focused stoically on his primary goal: to properly deflower Sharon's adorable pink rosebud and bury his whole raging hardness deep inside her cock-hugging rectum before he pumped her bowels full of cum. \n\nAs Nick's huge, incessantly delving schlong filled her ass up and stretched her butt-ring out more and more, sinking slowly but surely deeper into the smooth warmth of her super tight chute, Sharon started to feel something new and intense and mind-crushingly pleasurable happening to her.\n\nIt was something that overrode even the sweet, soothing flow of clit-centered wavelets that Nick's talented fingers were gifting her. It felt like a deep pulsing vibration that radiated outward from her dick-jammed anus and electrified her whole body with unprecedented jolts of anal bliss that were much more delightful and heady than the naughty buzz she had previously received from masturbating her asshole with Tessa's buttplugs. The weirdly good sensation of having a real cock sliding deep into her ass, which at first had been mixed with a hint of discomfort, was now solely pleasurable for Sharon, and it was actually becoming better and more intense the deeper Nick pushed himself into her narrow, rippling anal passage.\n\nHaving her tiniest and most sensitive hole filled by a big hard dick wasn't affecting Sharon just physically, but also mentally. Beside the fact that the forbidden thrill of getting fucked in the ass was driving her crazy with delicious excitement, Sharon was loving the indescribable sensation of finally having sex and having a man inside her body for the very first time. On top of it all, the emotional safety of being near her twin and the calming awareness that Nick was totally nice and trustworthy, meaning that he would never hurt her even though his cock was so huge and her asshole so tiny, allowed Sharon to really give up control and thus let herself freely savor the whirling storm of new, powerful pleasure coalescing deep inside her. \n\nAs Nick's meaty truncheon sank deeper and deeper into Sharon's snug anal depths, her cock-packed rectum rippled with constant shocks of ecstasy, which unavoidably merged with the pulses of clitoral delight that his talented fingers were causing. To experience such an amazing clash of pleasurable stimuli during her first assfuck caught Sharon by surprise, especially because that delicious combination rapidly grew into a bubble of pre-orgasmic build up so mind-shatteringly big that she could barely even find the breath to moan out her awestruck joy. \n\nBy the time Nick managed to slowly stuff half of his humongous horsecock inside her insanely tight asshole, Sharon was on the verge of such a gigantic climax that she was almost scared to feel it burst. The massive orgasmic wave looming over her surrendered body roared even more fiercely when Nick seamlessly shifted his rump-skewering pace and started gently pumping half of his massive boner in and out of her slippery little asshole with steady back and forth butt-stretching thrusts. \n\nOn the out-strokes, when he pulled out of her snug anal sheath until just his huge glans remained locked within the clingy suctioning vise of her butt-ring, Sharon felt her eyes roll back in her head as she gloried in the slick friction that Nick's veiny pole caused along her buttery anal walls while sliding out, stimulating nerve endings and pleasure centers that she didn't even know she had. Similarly, the slim blonde couldn't help but gasp and pant and melt inside in toe-curling delight when Nick pushed his ass-jamming shaft back into her quivering rectum, making her see stars just by wedging half of his thick dickmeat up her ass before gliding back all over again to repeat the delicious cycle of his measured yet breathtaking sodomizing routine. \n\nIt took barely a couple of minutes of having her sensitive anal passage gently fucked by half of Nick's fat schlong before Sharon succumbed to the colossal build up that had been accumulating inside her since her virgin little orifice had opened up to accept his incredible monstercock into her ass. Nick had just finished cramming his meaty length halfway inside her dick-squeezing chute when Sharon's velvety anal walls started spasming erratically around the embedded part of his truncheon, trapping him within the warm, slippery tightness of her anus. At the same time, a gushing overflow of girlcum bathed Nick's clit-frigging digits while Sharon, gasping for air and trembling like a stranded fish, brokenly yelled out her breathtaking orgasm in a trembling, almost disbelieving voice.\n\n\"Oowwhh! Uuhnghh... I'm c-c-uhh... Uuhh fuuuck! Oohh shiiit yeahh! I'm uuhnghh... C-c-cuhhm-mmiiiing!\"\n\nAs she heard her own climax-shrill words dissolve into squealing gasps of release, Sharon felt her whole body sizzle and shake under the impact of the devastating orgasm that suddenly smashed full force into her, exploding outward from her cock-stuffed asshole to wrack her very being. Rivulets of liquid pleasure gushed from her virgin pussy while the steamy walls of her snug rectum tightened their already desperate grip around Nick's half-buried boner even more, tugging so intensely on his fat shaft that they milked glob upon spurting glob of precum from his spongy glans, making him growl with pleasure as he strained not to cum just yet.\n\nStill holding the exposed half of Nick's fleshy truncheon in her dainty, lube-rubbing hand, Sally couldn't help but feel her own pussy get wetter and her tiny asshole get even itchier to get fucked as she witness her twin cumming spectacularly from anal sex right before her eyes. Despite her having merely half of Nick's raging erection stuffed up her ass, Sharon's brain-melting orgasm seemed so obviously intense and all-encompassing to Sally that she was barely able to contain her need to trade places with her screaming sister and have her own pristine anus deeply sodomized by Nick's ass-stretching monstercock. \n\nTwitching and shivering uncontrollably all through her glorious climax, while her convulsing rectum sucked avidly on the massive slab of dickmeat plugging her narrow tunnel and her pussy wept joyous dribbles of girlcum all over Nick's clit-pinching digits, Sharon inadvertently shifted from her position on her side. Through erratic movements and orgasm-induces spasms, she somehow managed to twitch and roll until she ended up lying flat on her tummy, with her trembling legs sliding messily off the edge of the bed. Even though that unexpected repositioning forced Sally to let go of his well-greased schlong, Nick went along with Sharon's movements, maneuvering with care to make sure that the swollen half of his fat cock that was jammed inside her shaft-tugging asshole remained always firmly buried there, much to her mewling delight. \n\nOnce the most devastating part of Sharon's climax was finally over, Nick removed his nectar-drenched fingers from her sweet virgin pussy and placed both hands on her round little bubble-butt. Caressing and kneading her cock-impaled booty as he held possessively onto it, Nick guided a panting and still shivering Sharon into a proper doggy position with her knees planted firmly on the floor and her upper body pressed into the crumpled sheets, her flustered face resting sideways as her slack mouth still let out long, sexy moans of anal bliss.\n\n\"Wow! Sharon, that was awesome!\" Sally exclaimed as her twin's panting mewls gradually diminished in volume and the constricting spasms of her overstretched butt-ring became less desperate around Nick's half-embedded pole. \"You have no idea how hot it was to watch you cum like that, sis! That giant dick sliding into your asshole was totally epic, better than any porn!\" \n\n\"Mmh, Sal... Oowhh my god, this feels sooo fucking good!\" Sharon mumbled groggily as she turned her head to look over her shoulder at Sally, a dopey grin dancing on her lips. \"Uuuhh shit, Nick's cock is so big and hard... He's sooo deep in my ass, it's so amazing! Oowhh fuck, I never came like that, I'm still all tingly... You're gonna love it, Sal, I promise.\"\n\n\"Oh, I'm gonna love it alright!\" Sally giggled in reply, blushing adorably even as she winked at Nick, who couldn't help but grin broadly at her. \"And by the way, Sharon, just so you know...\" Sally pointed out, taking a dramatic pause before concluding: \"Nick is only halfway up your ass right now!\"\n\n\"What?! Seriously?\" Sharon gasped, craning her neck in an attempt to see over the protruding mounds of her curvy tushy to get a visual confirmation of that shocking revelation. \"Oh my god, it feels like I have a baseball bat up my ass and he's only halfway in?! Unbelievable...\" \n\n\"Yep, unbelievable but true!\" Sally nodded, smiling as she anticipated the moment when she would be the one screaming in climax with Nick's incredible horsecock jammed up her ass. \"But that's good news, isn't it? I mean, you already came like crazy with only half of it inside you, so...\"\n\n\"So I want it all! Not just half, all of it!\" Sharon brusquely interrupted her sister, her lust-thick words ringing as needy as they were determined. Tucking her chin-length locks behind her ears, Sharon turned to look Nick right in the eyes and continued speaking, trying to steady her trembling voice even as she kept incessantly cooing from the pleasure of having his thick veiny dickmeat wedged halfway into her overdilated butthole. \"Nick, I want you to ram all of that fat cock of yours up my ass! Come on, I can take it! You opened me up real nice and I need to feel you balls-deep inside me. Can you just do it, please?\"\n\n\"Yeah, if you're sure... Your asshole should have loosened up enough now, plus that big orgasm seems to have relaxed you a lot. I'll try to go all the way in, if you really want me to,\" Nick concluded with a shrug, getting a vigorous nod of assent from Sharon. \n\nFilling his palms with her toned round buttcheeks and splaying them wide apart to clearly reveal the thick half of his shaft sticking out from her pink cock-stretched orifice, Nick frowned as he added: \"Sharon, I've got to warn you... If I go balls-deep and I start fucking you, I won't last long. It's a miracle I haven't cum yet, really. Your little asshole is so fucking tight, it's crazy how hot it is and how hard you're squeezing me.\"\n\nCooing in anticipation as she rested her head on her forearm while reaching to her drooling pussy with the other hand, Sharon just closed her eyes and smiled languidly as she replied. \"Mmh, I don't care, Nick. Just do it. I want you balls-deep in my ass, and I want your cum too. That sounds so nasty and hot... Fuck me, Nick, fuck my tight little asshole and fill it with cum!\"\n\n\"Whoa, sis, that's so hot... I'm gonna want that too, Nick,\" Sally mumbled, her voice weirdly shaky. \n\nTurning away from the mesmerizing vision of Sharon's clingy dick-crammed sphincter, Nick glanced at Sally to find that she had repositioned and was now sitting back against the headboard with her legs drawn up to her chest and her virgin holes lewdly exposed to him. The most enticing detail, upon which Nick's bespectacled eyes instantly zeroed in, was that Sally had retrieved Tessa's silver buttplug and was now sliding the tapered toy in and out of her adorable pink butthole. Smiling with slutty joy as she noticed how intently Nick was watching her dainty hand pumping the buttplug into her own tiny anus, loving to see that her little masturbatory sideshow was making his half-buried cock flex and swell against the tautly stretched ring of her sister's gummy orifice, Sally mumbled in a soft sexy tone: \"Fuck Sharon's ass, Nick. Fuck her fast, so you can stretch my tight virgin asshole too!\"\n\nGroaning with arousal as a huge dollop of precum spurted from his butt-jamming glans to further lube up Sharon's smooth slick anal walls, Nick took a deep steadying breath and temporarily put aside the mind-blowingly hot thought that he had another pristine ass to deflower, willing himself to concentrate on the task at hand instead. A big grin was painted on Nick's thin face as his hands grabbed possessively onto Sharon's perfect little bubble-butt and his hips pumped forward, driving his overswollen boner deeper into her warm, dick-hugging rectum.\n\n\"Uuhh! Uuhhnghh yeess!\" Sharon squealed as she felt the meaty thickness of Nick's massively hard cock push further up her ass and widen her deepest and previously unplumbed anal depths, making her sensitive chute light up with sinfully pleasurable stimuli. \"Oowwhh yeees, Nick! Keep pushing into my ass, go deep in meee... D-d-don't stop, pleeease! Sooo fucking good... Uuhhh fuuuck!\" \n\nGritting his teeth and straining to delay his ejaculation as he plunged deeper and deeper into Sharon's freshly deflowered anus, Nick took advantage of the insane amounts of lube that Sally had rubbed onto his shaft by jacking him off, while at the same time he also capitalized on Sharon's moment of complete post-orgasmic relaxation. Pleasure-loosened and adapted to his invading girth, Sharon's asshole resisted his penetration only with the delicious natural snugness of her narrow chute, which barely slowed the advance of Nick's huge yet perfectly greased schlong while actually making it even more satisfying thanks to the warm dick-hugging caresses that her rippling rectum was imparting on his rock-hard pole. To the sound of her squealing moans of anal bliss, Nick determinedly wedged inch after veiny inch of his throbbing truncheon into the soft, scorching hot sheath of Sharon's buttery bowels, packing her ass full of his thick boner in one long, uninterrupted butt-cramming push. \n\nGleefully lust-crazed, hooked on the super intense thrill of feeling her ass get stuffed increasingly fuller the deeper Nick's massive dick slid into her tight rectum, Sharon all of a sudden found herself gasping then panting then yelling and cumming all at the same time when she finally felt his huge seed-laden balls bump into her hairless labia, signaling his complete penetration into her sweet little asshole. Nick's hefty scrotum was brushing against Sharon's clit-flicking fingers as her pussy overflowed with girlcum, her tautly stretched butt-ring meanwhile twitching erratically around the very base of his enormous shaft, trapping his entire length within her quivering, steamy anal sheath. \n\nUp to that moment, the process of having her clingy anus gradually filled with more and more of Nick's boner had already been pleasurable beyond Sharon's expectations, but having his whole monstercock jammed balls-deep inside her tiny forbidden hole instantly pushed her to a whole new level of naughty exhilaration. Getting her ass packed full of cock was such a magnificently brain-melting feeling that Sharon knew right there and then that she would crave it again and again in the future, it was just too insanely good, so much so that she couldn't help but scream out her slutty joy.",
        "\"Uuuhh fuuuuckk! Oohhh Niiiiick! Ooowwwhh my god, yeeeeeesss!\"\n\nGladly surprised to see Sharon suddenly succumb to a sneaky yet obviously powerful climax, Nick exhaled in pleasure as he gloried in the slick, shaft-engulfing warmth of her narrow rectum constricting his boner from tip to root in a series of smooth, potent orgasmic spasms. The delicious cock-tugging squeezes that Sharon's virginally tight anal passage was imparting on his fully buried length were just incredible, they made Nick grunt with pleasure just as much as the sight of her pink gummy orifice stretching out to obscenely beautiful limits around the thick root of his embedded pole. Ironically though, the very awesomeness of that heady combination of visual and physical bliss forced Nick to quickly find some kind of distraction, so that he could avoid spraying Sharon's dick-milking anal depths full of cum before he even got a chance to properly sodomize her. \n\nUnfortunately, Nick's idea to shift his gaze away from Sharon's dick-impaled asshole turned out not to be so useful in terms of diminishing his arousal and fighting back his simmering ejaculation. As soon as he looked to the side, Nick's bespectacled eyes were met by the super sexy sight of a panting, softly mewling Sally lying back with her shapely legs spread wide apart as she determinedly fucked her own virgin little asshole with Tessa's silver buttplug. The image of Sally's smooth untouched pussy glinting with juices and glazed with the trickles of sweet nectar that drooled down her taint to lube her adorable pink butt-ring would have been cock-stiffening enough in and of itself in any other situation, but it became even more enticing right there and then as it enhanced the vision of her adorable rosebud clinging slickly to the tapered toy that Sally's dainty hand was driving relentlessly in and out of her tiny sphincter. That hyper erotic spectacle immediately sent a further jolt of arousal to Nick's already flexing truncheon, making his meaty length swell even bigger and harder inside Sharon's rippling, extra tight rectum.\n\nAware that he was only going to last another minute or two at the very best, horny beyond description and past the ability to contain his buttlust, Nick growled deep in his throat as he pulled almost all the way out of Sharon's quivering anal sheath and then swiftly rammed his massive pole balls-deep into her ass again, only to withdraw and thrust in all the way immediately after, then again, and again, and again, quickly setting a strong butt-pounding rhythm.\n\nDizzy from the climax that her first full anal penetration had just gifted her, Sharon felt her whole body ignite with incapacitating pleasure all over again as Nick began hammering away at her twitching forbidden hole with unbridled fury. Sliding out until only his huge precum-oozing glans remained trapped in the rubbery grip of her butt-ring and then slamming his entire pulsating horsecock into her rectum again until his beefy balls slapped against her girlcum-drooling slit, Nick took Sharon's breath away with his lustful assault on her freshly deflowered asshole, making her cum like crazy in the process.\n\nGlad to have taken his time earlier when he had gently lubed and prepped her anus and gradually stuffed her virgin rosebud so that her narrow anal tunnel submitted willingly to his massive schlong, Nick made good use of Sharon's orgasmic mellowness to complete his conquest of her snug slippery butthole. Booty-plundering and relentless, each of his powerful balls-deep thrusts into her receptive ass made Sharon scream out with lewd ecstasy as her buttery bowels got stuffed to the limit over and over again, making her afterglow light up into a new fiery, blinding anal climax each time Nick's rampaging boner plowed full force into her tiniest, most sensitive hole. \n\n\"Fuuuckk! Uuhhh fuck y-y-yeaahhh Niiiick! Ooowhhh f-f-uuh-uuuhh-uuhck!\" \n\nYelping out brokenly, gasping for air as her vision faded to white and her pussy gushed away all over her own trembling clit-flicking fingers, Sharon could barely believe how violent her back-to-back climaxes were and how incredibly awesome it was that she was managing to cum non-stop like that while getting lustfully assfucked by Nick's raging horsecock. Still wedged in the soft clef of her labia, Sharon's digits were twitching out of control as her velvety soft rectum sucked and spasmed around Nick's enormous dickmeat, her fingertips automatically flicking and pinching her clit even though her ability to focus on frigging herself properly was pretty much gone thanks to the savage orgasm-triggering assault that Nick's throbbing truncheon was imparting on her oily little butthole. \n\nFast and deep and wild as his sodomizing thrusts were, Nick's final rump-impaling barrage was super intense but unavoidably short-lived. Egged on by Sharon's pleasure screams and by the incessant squirts of girlcum cascading on his huge scrotum when he plunged balls-deep into her ass, Nick pounded the slim blonde's cock-clenching rectum with all he had, recklessly rushing to his climax. Lust-high as he was, Nick couldn't have stopped slamming his achingly swollen schlong into Sharon's tight anal sheath even if he had wanted to, and he didn't. \n\nSnug and clingy like only an anal virgin's tiny forbidden orifice could be, Sharon's asshole was engulfing Nick's massive shaft divinely, suckling deeply on his length and treating him to an incessant sequence of dick-massaging squeezes brought on by the ripples of delight that his relentless rump-riding rhythm was triggering non stop in Sharon's narrow, sensitive rectum. In truth, each of Nick's ass-pummeling in-strokes ignited a new orgasmic burst deep inside Sharon's bent-over body, and each gliding out-stroke overcharged her anal nerve endings once more, rigging them to explode in climax moments later when he crammed his flexing boner all the way into her warm, well-greased anus all over again. \n\nAs Sharon was wracked by orgasm after earth-shattering orgasm, Nick's only wish was to enjoy the smooth heat of her snug anal walls clutching slickly around his pistoning boner for as long as possible. Still, as much as he strove to continue fueling the delicious cycle of their shared sodomizing bliss by keeping up his furious butt-drilling tempo, he soon had to capitulate before the warmth and softness and tightness of Sharon's slippery little asshole.\n\n\"Ahh fuck! Fuck, Sharon... I'm gonna cum!\" Nick grunted over the mixed sounds of his groin clapping against her taut round buttcheeks and her breathless, mindless yells of pleasure. \"Ohh fuck, here it cums! Aahh fuuuck yeaahh!\"\n\nWith a final butt-jamming thrust, Nick let out a bestial growl while he buried his whole enormous boner to the hilt inside Sharon's exquisite ass and let his long-denied first ejaculation of the day explode deep within her rectum in a torrential spray of dense cum. As rope after huge rope of warm seed blasted out of Nick's pulsating cockhead to paint her bowels white, Sharon threw her head back and opened her pleasure-glazed eyes in delighted shock, a new overwhelming orgasm meanwhile crashing into her with the tidal force of the deluge of jetting cum that was quickly flooding the deepest anal depths. On top of every other new forbidden pleasure she had experienced that day, the unique feeling of having her tight little asshole forcefully pumped full of spurting semen by a huge throbbing cock undid Sharon completely, overdosing her with more physical ecstasy than she had ever experienced or was ready to endure.\n\nGasps, moans and increasingly weaker and less intelligible sounds tumbled out of Sharon's O-shaped mouth, her heavy-lidded eyes meanwhile slowly closing again as a big dopey grin illuminated her flustered face. Noticing all of that even as his overswollen schlong kept hosing her cock-tugging rectum with an ungodly flood of surging cum, Nick grinned with satisfaction, his hips still rocking and grinding into Sharon's thoroughly dick-impaled rump as if trying to push his veiny hardness impossibly deeper inside her heavenly ass. \n\nAs her immense climax burned through Sharon's slim body, Nick gleefully basked in the sperm-slick warmth and unbelievable tightness of the pastor's daughter's quivering anal tunnel lewdly suckling on his shaft and massaging his thick length from tip to root, milking him beatifically dry. Exhaling as his final gooey spurts plastered her buttery bowels with his potent seed, Nick felt his goofy smile grow even broader as he realized that Sharon was close to passing out from the sheer brain-shattering pleasure of her very first anal coupling. As if in response to that super erotic thought, a soft trembling voice resounded beside Nick, calling him back to reality. \n\n\"Oohh my god, look at her... She's cumming so much that she's, like, fainting or something! Wow, Nick... I want that too, I want it sooo badly!\"\n\nTurning to the side, Nick felt his butt-stuffing pole flex with renewed arousal inside Sharon's constricting anal chute as he took in the sight of Sally reclining back against the headboard with her shapely legs held together and raised straight up to reveal her pristine juicy slit and her tiny, adorably pink rosebud twitching with need around her ass-probing fingers. The bottle of lube and the silver buttplug lay discarded on the sheets right beside Sally's rounded little booty, but Nick could tell that the girl had made good use of both. Although there was definitely a component of trickling girlcum, Nick was certain that most of the glinting sheen of wetness coating Sally's puckered sphincter was in fact lube, and, based on the the ease with which the pastor's usually timid daughter managed to slide two and even three digits into her clingy hineyhole, it was safe to assume that she had prepped her anus intensely while he was busy sodomizing her twin sister. \n\nAs Nick's bespectacled gaze met Sally's pleasure-hooded blue eyes, the slender blonde spoke with a sexy languidness in her voice that made his fully hilted shaft flex with renewed horniness inside Sharon's seed-flooded rectum. \n\n\"Please, Nick, tell me that you're still hard for me... I need your big cock, I'm dying to feel you inside me... Can you fuck my ass now?\" Sally pleadingly cooed, sliding both her forefingers into her rosy butthole and gently pulling its gummy rim apart, gaping her miniature anal opening for him. \"Mmh... My asshole is so horny for your cock, Nick...\" Sally murmured while biting her lips and stretching out her delicious little sphincter with her dainty digits, maddeningly excited. \"Come here and fuck my ass, Nick, pleeease! It's yours, my tight virgin asshole is all yours!\"\n\nIf under any other circumstances an invitation like that would have made Nick's cock instantly rock-hard, right there and then it just made him even harder than he already was. Moreover, some of the words Sally chose and the position she was in, on her back looking up at him with an expression of pure lustful need painted on her flushed face, reminded Nick of the circumstances of his very first time doing anal with Tessa, which only added to his excitement about popping Sally's willingly offered butt cherry. After taking one final look at Sharon's barely conscious and weakly moaning form, Nick simply nodded at Sally, who reacted with a huge beaming smile that was made even more beautiful by the further reddening of her sculpted cheeks and by the twitch of anticipation that made her finger-stretched little butt-ring visibly wink at him. \n\nLetting go of Sharon's heart-shaped rump, Nick extracted his ass-cramming boner from the passed out blonde's overdilated orifice with deliberate slowness, thus letting Sally appreciate just how much of his massively thick length was tucked deep inside her sister's no-longer-virgin rectum. Once his huge bulbous glans finally slipped out of Sharon's distended sphincter with a slurping, obscenely beautiful popping sound, Nick couldn't help but take a moment to feast his eyes on the delightful spectacle of the unconscious track star's stretched out pink butthole instantly starting to twitch and pulsate hungrily in response to that unnerving emptiness, while at the same time thick dribbles of his creamy seed bubbled out of her suddenly unplugged orifice. \n\nMoments later, as Sharon's tender sperm-leaking rosebud already started to shrink shut on itself, Nick stepped closer to the head of the bed and held his mighty erection at the base, pointing it right at Sally's round, meekly offered ass. As his bespectacled gaze met Sally's lust-glazed blue eyes, Nick looked intently at the horny, softly cooing girl and spoke in his deep calm voice.\n\n\"See, Sally? I'm still plenty hard for you,\" Nick simply said, smiling at her even as his enormous, juice-shiny truncheon flexed with unyielding buttlust and his fat purple glans began oozing precum, as if salivating at the idea of plunging deep into another virgin asshole right away. \n\nMuch to his glad surprise, Sally didn't show any sign of intimidation at the sight of the veiny, sperm-lathered slab of dickmeat that was about to deflower her miniature asshole, but instead she pushed her butt-plugging forefingers deeper into her slippery rosebud and pulled them a little further apart, dilating her pink anal opening a bit more. Her breathing was ragged as she ran her tongue over her gorgeous lips and spoke in a sensuous purring tone, her eyes never leaving Nick's overswollen schlong. \n\n\"Oooh fuck yeah! Mmmh look at that monster, all covered in cum... Oohh, Nick! I'd suck you off right now, but my asshole is just dying to get fucked! Come on, stick it in me, Nick. I'm ready, I'm sooo ready...\"\n\nPanting with anticipation himself, Nick placed his hands on the taut, perfectly round buns of Sally's bubble-butt and gently dragged her reclining form toward him until her delicious little booty was hanging off the edge of the bed. Tittering while Nick positioned her to better plunder her hineyhole, Sally let out a cooing gasp as she felt his bloated cockhead pushing up against the soft nectar-drenched cleft of her labia, soon followed by his meaty shaft sliding slowly back and forth between her slippery pussy lips for a couple of girlcum-gathering strokes that teased her engorged clit and made her shiver with anticipation even more. Once Sally's sweet juices had been added to the sheen of lube and cum already coating his boner, Nick finally aimed his meaty schlong lower, wedging the very tip of his fat purple knob into the little opening of Sally's anus, which the purring blonde was still trying to gape with her forefingers. \n\n\"I'll take it from here, Sally,\" Nick said with a smile as looked into Sally's lust-glazed eyes. \"You just worry about keeping your legs up like this and rubbing your clit, okay? I'll handle the rest.\"\n\nChuckling and nodding urgently, Sally removed her fingers from her well-greased asshole, bringing one hand to her pussy while she hooked her other arm around the back of her knees, pulling her long legs back toward her pert tits while still holding them tightly together, enhancing their shapeliness while increasing the enticing roundness of her flawless little bubble-butt. Offered and accessible like that, Sally's curvy ass was as irresistible as a fresh crunchy apple, which made it impossible for Nick to wait another moment before he savored it. \n\nSally's dainty fingers had barely started circling her engorged clit and the tiny gape she had imposed on her elastic butt-ring was trying to seal itself shut around the tip of Nick's spongy knob, thus nibbling and squeezing lewdly on it, when he gave a firm forward push and swiftly eased his whole huge glans into the slick, warm grip of the pastor's daughter's docile sphincter.\n\n\"Ooohh yeees! Oh my god, Nick, yeaahh!\" Sally exhaled in lascivious joy as her well-prepped asshole stretched out around his bloated cockhead. Much to her delight, the gummy rim of her forbidden orifice widened with surprising ease around Nick's fat glans, accepting him so eagerly in fact that he managed to also slip a couple of thick inches of his shaft inside her anus with that initial deflowering thrust alone.\n\n\"Everything okay, Sally?\" Nick asked as he enjoyed the steamy squeezes that the gasping blonde's tight butthole was treating him to as it molded tenderly around his invading dickmeat. \n\nEven before she answered though, Nick could tell that Sally's anal muscles were quite relaxed and far from cramping. In a way, it felt like her virginally tight sphincter was intent on sucking his bulbous cockhead into her asshole, actually drawing him in instead of resisting his penetration. Reminded once again of the spontaneous docility of Tessa's sweet little rosebud and of how deliciously willing she had been when he had taken her anal cherry, Nick felt his boner throb with excitement as Sally dreamily smiled and nodded in response between squealing moans.\n\n\"Mmhh yeah, Nick, I'm okay. Oowwh it's weird... It doesn't really hurt, it's just sooo intense... Uuhh god, you feel so big in my ass but... Uunggh it's super fucking good!\"\n\nGrinning back at an ecstatic Sally, Nick gave a couple of shallow back and forth strokes, testing the receptiveness of her miniature backdoor. Despite feeling her anus respond with as much relaxation as could be expected from an anal virgin taking a huge pole like his as the first cock ever to delve into her hineyhole, Nick chose to play it safe and pulled all the way out, causing a sexy slurping sound as his ass-stretching glans popped out of Sally's eager butt-ring.\n\nThe expression of dopey, pouty surprise painted on the slim blonde's face was comical enough to make Nick chuckle, but not enough to distract him from his pleasurable task. Before Sally's groans could actually coalesce into words of protest, he had already grabbed the bottle of lube, pressed it against the dilated pink opening of her anus and started squeezing a liberal dose of the slippery gel straight into her warm anal tunnel. The cold feel of the lubricant squirting into her butthole made Sally wince for a second, but her lips curled up into a beaming smile moments later when she felt Nick's huge cockhead wedge itself into her pink winking orifice again and then gently slide inside her steamy chute. Helped by the added lube and by Sally's joyous acceptance of her anal deflowering, Nick's shaft pushed deeper than before into her narrow rectum with minimal effort, plunging fluidly up her ass until a good third of his massive truncheon was embedded within her buttery bowels. \n\nAgain, Nick decided not to force his penetration of Sally's virginally tight albeit clearly willing asshole, so, after a few short and careful in and out butt-stirring strokes, he withdrew all the way again, exiting her gummy orifice with another loud squishy pop. Much to Nick's delight, Sally giggled instead of protesting as she heard the obscenely exciting sound of his bloated glans escaping the clingy, suckling grip of her little anus. Purring mewls of anticipation replaced Sally's laughter moments later, as Nick squirted another generous amount of lube right into her velvety soft anal passage and smoothly slipped his massive dick inside her oily asshole again, making her exhale with bliss while her clit-rubbing fingers trembled and frigged her engorged nub with increased zeal. \n\nTo the sound of Sally's naughty giggles, lustful moans and rapturous sighs, Nick methodically repeated that pattern of pushing then withdrawing then lubing up before an even longer push, so that at each pass he was jamming his meaty truncheon deeper and deeper inside the slim blonde's untouched anal depths. While he drilled his fat boner further up Sally's ass with those increasingly longer yet always gentle butt-cramming thrusts, Nick never failed to reverently cup her round little booty in his hands and pay homage to her soft curvy buns with his kneading and caressing touch. ",
        "Despite her virginal tightness, Sally's warm rectum was so perfectly prepped and slippery and her relaxation was so complete that in just a few iterations of that ass-stuffing routine Nick managed to bury himself balls-deep inside her exquisitely snug butthole, leaving nothing but his huge balls outside of her shaft-gripping, overdilated sphincter. As soon as that happened, Sally's svelte frame was hit by a sizzling jolt of delight. Rivulets of nectar were overflowing her pristine pussy and drooling all over the broad root of Nick's boner as Sally realized in full that she had actually done it: she had taken Nick's big fat monstercock all the way up her virgin ass! \n\nThe mental happiness of accomplishing such a significant feat of naughtiness and of doing so with minimal effort gave Sally an incredible thrill, as did the newfound awareness that she simply loved getting her asshole stretched out and filled up by a massive slab of dickmeat. And yet, the physical side of her very first sodomy was even more satisfying. The sensation of having her narrow rectum stuffed so impossibly full of cock that she could somehow picture Nick's gigantic boner poking his way into her stomach made Sally's slim body shake with orgasmic bliss, it was such a powerful feeling, capable of gifting her with more pleasure than she had ever imagined she could feel.\n\nIn truth, ever since Nick had first started moving in and out of her slippery anus, Sally's mind had gone ecstatically blank, except for the obsessive desire to feel more of his veiny truncheon pushing inside her sensitive little butthole. Still, as great as it had been to feel Nick's huge schlong delving deeper and deeper into her warm dick-hugging bowels, Sally's anal ecstasy truly reached its peak only at that moment, when he was finally embedded to the hilt inside her ass. \n\nRipples of anal delight were radiating outward from Sally's cock-jammed chute and mingling with the sweet undercurrent of clitoral bliss that her own clit-circling fingertips were granting her. As she let out a long husky moan and forced her pleasure-dopey eyes to open and focus on Nick, Sally whimpered in disbelieving joy at her patient buttfucker, who just smiled back and flexed his enormous and fully buried pole deep within her slick anal sheath, sending more delicious tremors coursing through her smooth, dick-crammed chute. \n\nThe broad blissful smile painted on Sally's O-shaped lips grew even more radiant and her digits accelerated their erratic clit-frigging tempo as she mumbled softly: \"Oohh Nick, don't pull out this time... Please, stay in me... Uuhh fuck, stay in my ass... Ooowhhh it's so good, I'm sooo close! Uuhh fuuck, I'm, gonna... Uuhh yeees, I'm c-cuh-uuhhhm... Cummiiing!\"\n\nA series of powerful, shaft-choking contractions coincided with the detonation of Sally's first anal orgasm, squeezing Nick's swollen truncheon from tip to root within the velvety warmth of her rippling rectum. Dribbles of girlcum streamed down from her pussy, lathering her twitching butt-ring and drooling further down to wet Nick's beefy ballsack. Overwhelmed by the most awesome climax of her young life, Sally squealed and gasped in pure brain-melting exhilaration as her impossibly snug anal passage massaged and tugged and suckled on Nick's massive erection, making him groan in delight in turn. It truth, the feel of Sally's exquisitely tight asshole squeezing him like that was so pleasurable that Nick was silently thankful to have already blown a load up Sharon's ass, otherwise he would have been pumping Sally's cock-clenching bowels full of cum right there and then.\n\nBy the time her toe-curling orgasm abated, Sally was panting and purring and smiling beautifully, giving Nick a very clear idea of how crucial and positively life-altering her first anal experience was turning out to be. Somewhat weakened by her crashing orgasm yet visibly overcharged with lust, Sally began speaking as soon as she could catch her breath, her legs still trembling while she visibly struggled to keep holding them back with her arm. Much to Nick's delight, her words were dripping not just with satisfaction but with a lewd need fore more.\n\n\"Niiick, oohh Nick... That was awesome! I wanna cum like that again, I need more! Oowhh fuck, this is so good, I can't believe how much I like it!\" Sally giggled even as she teased her swollen clit and moaned through the final aftershocks of her roaring climax. \"I came so much with your cock in my ass... This is so awesome! Now fuck my ass, Nick... I want you to really fuck me and make my ass cum again!\"\n\nGrinning and nodding as his overswollen boner involuntarily flexed with anticipation inside the steamy confines of Sally's dick-caressing anal passage, Nick decided to shift the pleasure-wracked girl into an even more comfortable position before he started plowing her ass for real. Letting go of Sally's juicy little bubble-butt, Nick ran his hands over the flawless curve of her asscheeks and up along her gorgeous thighs until he reached her shapely calves, which he grabbed and began spreading apart. Getting the hint, Sally stopped holding her arm around the back of her knees and cooed eagerly as she allowed Nick to spread her long legs wide apart until her ankles were resting on his shoulders. Mewling languidly and enjoying the feel of Nick's fingers running up and down her legs as he caressed their smooth skin, Sally was still smiling ecstatically as she met her talented buttfucker's bespectacled gaze and answered his unspoken question with a soft languid purr.\n\n\"I'm ready, Nick... Do it, fuck my ass! I want to feel your big cock pounding my aahh-aaahh-ass! Oowwhh yeahh! Fuuuuck yeeeesss!\"\n\nSally's unnecessary attempt to further entice Nick into boning her butt immediately degenerated into a joyous litany of mewls and gasps as he began withdrawing his thick schlong from her dick-engulfing rectum only to then push his full meaty length balls-deep into her ass again, starting to truly fuck her tiny forbidden hole. \n\nGiven how well-lubed and receptive Sally's anal passage was, Nick had no problem setting a fluid, sustained sodomizing pace right away. Long and fast, Nick's out-strokes allowed more than three quarters of his veiny truncheon to slide out of Sally's slippery anus before he plunged all the way inside the snug warmth of her rectum again with the kind of quick ass-jamming thrusts that never failed to make Sally's rippling anal walls squeeze him more intensely as loud moans of ecstasy tumbled from her O-shaped lips. \n\nInstantly overcome with pleasure and enthralled by the orgasm-triggering rhythm of his enormous boner sawing in and out of her tight little asshole like the perfectly oiled butt-stretching tool that it was, Sally involuntarily accompanied the strong tempo of Nick's back and forth rump-skewering motions with a sexy mixture of gasping, breathless vocalizations. On the out-strokes, the slick friction of his girthy dickmeat stimulating her anal walls during its momentary retreat coaxed trembling groans of delight from Sally, which invariably turned into panting, broken squeals of disbelieving pleasure as his massive pole surged forward again and rammed all the way into her deepest anal depths, filling her snug asshole to utter brain-melting perfection. \n\nA constant ebb and flow of back-to-back anal climaxes crashed into Sally's eagerly offered body as Nick plowed her sweet bubble-butt with incessant fervor, making her see stars not just because of the physical pleasure she was getting from her very first sodomy, but also because of the mind-blowing realization that she truly loved anal sex. As staunchly skeptical as she had been at first, Sally was now one hundred percent sure that butt love was hands down the best way for her to keep her virginity and still have great sex. In truth, the pastor's blonde daughter was experiencing pleasures such as she had never even dreamed of before having Nick's huge boner crammed balls-deep up her ass, stretching and filling her tight little hineyhole over and over again and making her cum like crazy in the process. \n\nDizzy and overjoyed and high on the constant feel of orgasmic bliss radiating from her cock-tugging anal passage, Sally was still lucid enough to keep diddling her drenched clit with one hand while she brought the other up to her perky tits, so that she could pinch and pull on her achingly stiff nipples when she wished to further turn up the intensity of her toe-curling pleasure. Still, as much as she loved the added jolts of delight she could give herself by teasing her sensitive titties and rubbing her girlcum-squishy clit, Sally was glad to realize that, even without other stimulation, the mere feel of Nick's enormous truncheon sliding incessantly in and out of her tight slippery asshole was more than enough to make her liquid pleasure flow freely from her virgin slit. Along with all the other wonderful sensations assailing her while Nick sodomized her with gusto, the naughtily satisfying notion that she was a natural buttslut prevented Sally's blissful smile from ever fading from her lips even for one single second.\n\nAs he kept pumping his thick schlong balls-deep into Sally's delicious clingy orifice with relentless rectum-cramming thrusts, Nick's buttlust did nothing but increase, making his steady assfucking pace grow faster and harder and more intense by the moment. Already rabidly aroused by the warm slick tightness of Sally's anal passage enveloping his fat boner like a powerfully dick-tugging yet velvety soft vise, Nick got even more turned on by the sight and sound of the pastor's blonde daughter lying there on her back with her legs spread wide open and her virgin pussy drooling streams of sweet nectar all over her overstretched, cock-clenching sphincter. All the while, Sally kept diddling her swollen clit and pinching her rosy nipples, moaning in pure undeniable anal pleasure and looking raptly at him, smiling both with her parted lips and with her lust-glazed blue eyes as he relentlessly stuffed her heart-shaped ass full of cock, over and over and over again. \n\nInflamed with arousal, thrilled to the core by the similarities between Sally's instant love of assfucking and the ecstatic devotion to anal that Tessa had shown ever since he had first claimed her majestically plump booty by popping her butt cherry, Nick seamlessly shifted gears and accelerated his rhythm more and more with each new rump-skewering thrust. In no time, he found himself pounding away at Sally's no-longer-virgin asshole with all he had, plunging fast and deep into her rectum and quickly sliding out, withdrawing his full veiny length until just his bloated glans was wrapped within the gummy snugness of the blonde's slippery butt-ring, only to then ram his overswollen pole balls-deep into her anus all over again. \n\nAs he repeated that ass-cramming cycle as rapidly as he could, aching to enjoy the heat and smoothness and tightness of Sally's slippery anal chute, Nick growled with satisfaction while his sizzling booty-plundering frenzy burned hotter and hotter with each of his increasingly faster and harder balls-deep thrusts. At the same time, he was also fueling the string of back-to-back anal climaxes crashing incessantly into Sally's surrendered body, causing each butt-centered ripple of pleasure to hit her more intensely, coaxing ever louder and higher-pitched squeals of appreciation to escape her O-shaped lips and merge with his deep lustful grunts of delight, thus creating a lascivious chorus of shared anal pleasure.\n\nEagerly enjoying the added intensity of Nick's ass-pounding pace, Sally actually egged him on with her languid nods and unrestrained moans, the willingness of her body language more than compensating for the fact that she was way too far gone to form actual words of encouragement. Intoxicated beyond description by the feel of Nick's rampaging horsecock plowing furiously into her oily anus, stretching and filling her little pink asshole to blissful perfection, Sally moved her ankles off their perch on his shoulders and deftly wrapped her long legs around his midriff, locking them tight so that she could hold him as close as possible to her, wishing only to help his enormous boner pump as deep and hard and fast as possible into the dick-caressing, constantly climaxing tightness of her warm anal passage. \n\nGrunting in appreciation of Sally's willingness, Nick redoubled his sodomizing efforts and leaned down toward her offered body, lowering his face until he could capture one of her wobbling tits into his mouth. Immediately, Nick started to suck away on Sally's perky boob like he was starved for it, the taste and feel of that soft mound of breast-flesh instantly pushing him to add even more speed and force to his assfucking rampage.\n\n\"Uuhhh y-y-yeaahhh! Uuhnghh fuuhh-uhh-uuuck! Ooowhh N-n-niiiick!\" Sally brokenly screamed at the top of her lungs as Nick's lips and tongue and teeth went to town on her sensitive tit. Unsurprisingly, Sally's asshole squeezed and twitched even more erratically around Nick's butt-reaming boner and her anal walls suckled desperately onto his pistoning truncheon, her pleasure spiking further up due to that unexpected tit-centered addition to his furious sodomizing assault.\n\nStirred awake by Sally's yelps and by the sound of flesh clashing frenziedly against naked flesh while Nick's breakneck ass-drilling rhythm keep picking up momentum, Sharon was completely called back from the rapturous drowsiness of her afterglow when she felt the bed shaking underneath her. Still bent over in a doggy position with her knees on the floor and her upper body pressed on the crumpled sheets, Sharon groggily raised her head and opened her eyes to the sight of Sally lying submissively on her back as Nick recklessly fucked her overstretched little asshole missionary style like his life depended on it, meanwhile suckling wetly on one of her pointy tits while she pinched the nipple of the other between thumb and forefinger.\n\nWeak yet radiant with satisfaction, naughtily happy to feel Nick's abundant cum still slowly leaking from her well-fucked sphincter and dribbling down her taint to glaze her smooth labia and mix with the sheen of girlcum coating her virgin pussy and streaking her thighs, Sharon had to appeal to her very last energies to slowly climb onto Nick's shaking bed and lie there on her side. As sated as she was after getting her anal cherry popped in such a spectacularly pleasurable way just minutes earlier, a renewed sense of gleeful horniness pervaded Sharon as she silently admired her twin sister's tautly stretched butthole clinging and pulsing and suctioning greedily around the massive thickness of Nick's booty-plundering dickmeat as it flew at full speed in and out of her ass.\n\nPropped up on her elbow, her eyes never moving away from Nick and Sally's wild anal coupling, Sharon languidly reached a hand back toward her heart-shaped rump and dipped her dainty digits into her asscrack until she made contact with her puckered, seed-glazed little rosebud. Tender but once again sealed shut into its usual tiny puckered state, Sharon's hineyhole immediately responded with twitches of delight to the gentle touch of her fingertips caressing its pink gummy rim with slow circular motions. As she started massaging the gooey rivulets of Nick's cum into her tingling sphincter like a sexy yet soothing post-buttfuck lotion, Sharon sighed softly under her breath, her virgin slit meanwhile getting wet all over again. \n\nWithin moments Sharon was moaning in quiet pleasure as she pushed her index finger into her cum-slippery orifice, pumped it in and out a bit to masturbate her freshly deflowered anus, and then removed the now seed-glazed digit from her ass so that she could bring it to her mouth and lick off all the savory cum she had gathered with it. To the sound of the increasingly louder and more ecstatic screams of her sodomized sister, Sharon purred lewdly as she fed herself dollop after heady dollop of potent ejaculate retrieved straight from her own ass, enjoying each of those creamy globs even more as she realized that they were the perfect slutty treat to go with the amazing demonstration of savage missionary buttsex that Sally and Nick were offering her.\n\nOblivious to Sharon's activities or even her presence, unable and unwilling to care about anything other than the thunderous shocks of insane pleasure coursing through her shaking body, Sally could barely focus on playing with one of her tits while Nick devoured the other. All the concentration she could muster was put into frigging away on her pulsing, overcharged clit while her cock-stuffed rectum radiated incessant pulses of mind-numbing, deliciously intense anal delight in response to the ass-pounding barrage of balls-deep thrusts that Nick kept imparting on her tight, slippery little sphincter. \n\nTime lost meaning for Sally as she happily drowned in the new, unprecedented full-body bliss brought on by that final butt-hammering stage of her very first sodomy. All she knew was that she was cumming incessantly, that she was in love with the sensation of overstretching fullness she felt deep inside her ass when Nick's cock was crammed all the way into her buttery bowels, and that she could have enjoyed forever the oily dick-clenching friction that made her needy butthole sizzle with incapacitating pleasure while his big fat schlong slid fluidly in and out of her tiniest, most sensitive orifice. Ultimately, anything beyond the blinding glow of her anal rapture was irrelevant to Sally.\n\nFor his part, Nick was loving every moment of his lust-addled assault on Sally's heavenly asshole just as much as she obviously was. Unlike her though, he was well aware that their shared anal ecstasy was very close to reaching its peak and therefore its end. Sally's narrow anal passage was just too hot and tight and simply awesome for Nick to resist much longer. A constant stream of girlcum from her virgin pussy was drooling down her smooth labia to further lube up her slippery, cock-stretched asshole as he kept pummeling her butt-ring over and over and over again, egged on by the priceless symphony of her pleasure mewls mixing with the squishy sounds of her trembling fingers desperately strumming away on her nectar-drenched clit.\n\nWith his hands grabbing onto the firm, flawlessly round globes of her buttcheeks and his tit-suckling lips glued to one of her deliciously swollen nipples, Nick managed to prolong his all out ass-wrecking frenzy for just a couple of wildly intense minutes longer before he felt his ejaculation rush forcefully along his throbbing, achingly hard boner. Grunting through the mouthful of soft boob-flesh he kept avidly slurping on, sinking his fingers into the curvy fullness of Sally's sweet little booty, Nick burned the last of his buttlust as he thrust into her super snug rectum once, twice, three times before finally cramming his overswollen pole all the way up her ass and letting his orgasm explode inside her deepest anal depths.\n\nThe humongous spray of warm cum that suddenly inundated her rippling rectum and filled her already cock-crammed bowels with rope upon thick creamy rope of surging semen was such a intense and unprecedented sensation for Sally that it instantly triggered a new burst of pleasure on top of the ass-centered string of climaxes already thundering through her body. As Nick's meaty horsecock flexed and throbbed and pumped more and more powerful jets of his liquid essence deep inside her convulsing anal passage, Sally's eyes rolled back in her head, her umpteenth scream of release rapidly devolving into a raspy whimper that barely managed to tumble out of her smiling lips. Her whole dick-skewered frame twitched all over one last time before Sally lay totally limp, her consciousness leaving her for the moment while she embraced the indescribable brain-frying storm of anal ecstasy that was sweeping her blissfully away. ",
        "Letting Sally's pointy saliva-glinting tit pop out of his mouth, Nick straightened up and threw back his head to growl in release as his overswollen truncheon kept spewing more and more cum into the blonde track star's velvety soft rectum, hosing her narrow chute with more seed than he thought he still had in him after having already painted Sharon's bowels white. \n\nWhile he held himself jammed balls-deep inside Sally's delicious anus, savoring the series of dick-milking spasms that her monumental orgasm was inducing in her cum-plastered anal walls, Nick smiled with satisfaction as he noticed the gushing rivulets of nectar overflowing her virgin pussy and trickling down to bathe the very point where the thick base of his schlong was being desperately gripped and clenched and nursed on by her gummy, overdilated butt-ring. Realizing that Sally was cumming even more copiously than her twin sister had earlier, Nick didn't just feel his present pleasure grow, but he also gloried in the certainty that, far from being skeptical about anal any longer, in the future Sally would be at least as horny for buttsex as Sharon, most likely even more. \n\nLulled by those enticing thoughts and by the superb cock-tugging squeezes offered by Sally's climaxing asshole, Nick kept cumming for what felt to him like ages inside the purring, barely conscious girl's buttery bowels, unloading so much sperm into her snug chute that he felt dizzy from the sheer intensity of his torrential climax. With his legs wobbling and his head spinning, Nick exhaled with deep satisfaction when his fat butt-stuffing dickmeat finally deposited the very last runny glob of cum within the warm depths of Sally's constricting rectum. The abundance of Nick's geyser-like ejaculation was so impressive that a white frothy crown of seeping seed was starting to form around the sphincter-jamming root of his meaty truncheon by the time he finally began pulling his veiny horsecock out of the barely conscious blonde's semen-flooded anus.\n\nStill lying quietly on her side, awestruck into uncharacteristic silence by the amazing spectacle she had just witnessed, Sharon was still masturbating her hineyhole and licking her fingers clean of any milky dollop she could retrieve from her backdoor when her blue eyes caught the sight of Nick's massive schlong slowly sliding out of Sally's overstretched pink butt-ring. The thickness and hugeness and sheer virile awesomeness of Nick's unyielding boner made Sharon moan with arousal and instinctively lick her lips as she kept avidly watching inch after chubby cum-coated inch of his pleasure-gifting slab of dickmeat vacating her twin sister's clingy, well-fucked orifice. \n\nWhen Nick's fat purple cockhead popped out of Sally's rubbery anus with a lewd slurping sound, a glinting rope of pearly white cum was still connecting his dick to her gaping, pulsating pink asshole. That thin dangling line broke within moments as Nick groggily stumbled back from the bed and slumped down on the swivel chair by his desk, panting in glad exhaustion. Still, both Nick's and Sharon's eye stayed firmly focused on the yawning hole of Sally's sperm-glazed and lewdly dilated butt-ring. Unsurprisingly given how thoroughly flooded with cum it was, the mewling blonde's unplugged anal opening immediately started leaking Nick's potent ejaculate in big gooey globs. \n\nThe sight of those dense, creamy rivulets of fresh seed oozing from her twin sister's pulsating orifice jolted Sharon out of her languid silence, forcing the first words from her mouth in quite a while: \"Fuck, that's so fucking hot. Look at all that cum... I can't believe you came like that again, Nick! You totally pumped her ass full of cum, even though you've just filled mine too!\"\n\nWhile Nick's dismissive chuckles echoed in the room, Sharon simply couldn't resist the temptation to reach her cum-scooping fingers toward her sister's twitching sperm-drooling hineyhole, her desire to gather up some of his freshly unloaded cum overwhelming her completely. Unfortunately for Sharon, before her digits could make contact with the pearly dribbles of Nick's seed, Sally emerged from her rapturous afterglow and instinctively darted both hands to her own cum-coated sphincter, her fingers immediately starting to play with her tender little butt-ring to retrieve the precious milky fluid bubbling out from deep inside her rectum. When Sharon's gaze turned toward her sister's satisfied face, Sally flashed her a dopey yet triumphant grin which broadened even more as she brought her sperm-coated digits from her ass to her mouth and suckled gleefully on them, savoring Nick's liquid essence before swallowing it down with obvious pleasure.\n\n\"Meh, I guess that's fair...\" Sharon shrugged as she watched Sally's fingertips return to her rapidly closing orifice to gather more of Nick's abundant seed. \"I've already had my big load, after all. Well, a part of it at least... I feel like there's a lot more deep inside me, and some of it is still leaking out of my asshole!\"\n\n\"Mmh so good... This is awesome...\" Sally cooed dreamily, speaking mostly to herself, her slim body sizzling with the aftershocks of her latest massive climax. \"Tessie was so right about anal!\" \n\n\"Yeah, totally!\" Sharon promptly agreed even as she pushed her own slender forefinger back into her cum-slick anus to coax out some more dribbling spunk. Laughing and smirking while she twirled her dainty digit inside her sensitive little hineyhole, Sharon added. \"I guess it wasn't such a bad thing that you were so doubtful after all, Sal, otherwise we wouldn't have done this!\" \n\nGiggling as she licked Nick's cum off the fingers of one hand while she lasciviously circled her shrinking sperm-glazed sphincter with the index of the other, thus rubbing some of that sexy soothing cream into her gummy butt-ring before bringing the rest to her lips, Sally just mewled happily in response as her heavy-lidded eyes locked with Sharon's. Without even speaking, the twins only had to share one long intense look to convey to each other the sense of awe and excitement they both experienced during their first assfuck. No words were needed for the pastor's blonde daughters to agree that they both loved anal and were now more than ready to follow in their buttslut sister's footsteps.\n\nSitting back in his chair, smiling and recuperating, Nick kept quiet as he admired the twins lying languidly on his bed, Sharon on her side and Sally on her back, both fingering their freshly deflowered assholes to gather up his leaking seed so that they could feast on it like the proper little cumsluts that they were, humming and purring in delight all the while. As drained and sated as he was, Nick couldn't help but get aroused all over again by the sight of those young twin beauties masturbating their adorable little rosebuds while slurping down his sperm like it was the sweetest treat they had ever tasted. Sally and Sharon's actions were in fact so sexy and genuine that they kept Nick's fat dick in a state of unyielding semi-hardness.\n\nSoon, due to their zealous cum-scooping efforts and to the fact that their cute pink orifices had sealed tightly shut on themselves and resumed their tiny puckered appearance, Sally and Sharon were left to simply lie on the bed in repose, murmuring conspiratorially to each other in hushed tones, nodding and tittering and laughing at some private joke that Nick couldn't hear, their untouched pussies and freshly deflowered assholes always exposed to him in all their pink, seed-glazed glory. Surrendering to the persistent stiffness of his chubby pole, unable to remove his eyes from the twins' flawless naked bodies while his thoughts kept dwelling on the cock-hardening sense of achievement born of knowing that he had now taken all of the pastor's daughters' anal virginities, Nick had barely just grabbed his thick boner and started jacking off when suddenly Sally and Sharon stirred from their sensuous laziness and turned to look intently at him. \n\nGiggling and staring at his impressive schlong as they climbed off the bed, the twins made a big show of getting down on their hands and knees and then slowly moving toward the chair Nick was sitting on. As Sally and Sharon drew closer to him, Nick slowly stroked his fat rod, exhaling and smiling goofily, mesmerized by the undulations of the girls' firm pointy tits jiggling underneath their athletic frames in sync with the mouth-watering wiggle of their identical heart-shaped asses swaying side to side at their every crawling motion. By the time the twins settled docilely on their knees between his spread legs, Nick's girthy boner was fully raging hard again, a fact that brought matching impish smiles to Sally and Sharon's faces and egged them on to swiftly lower their mouths toward that mighty slab of dickmeat. \n\n\"Oohh my god, girls... You're amazing!\" Nick panted in bliss, immediately letting go of his boner as soon as Sally wrapped her soft lips around his bulbous glans and started suckling wetly on it. Meanwhile, Sharon glued her warm mouth to his shaft, treating is massive pole to a series of suckling, licking smooches that swiftly coated his veiny length in her wet, glinting saliva. \n\nAs one twin's mouth gobbled down his swollen purple tip and the first inches of his fat length while the other girl's gorgeous lips glided fluidly up and down along his throbbing schlong to worship it with a series of lewd slurping kisses, Nick relaxed against the backrest of the chair and let his head loll back in delight, feasting his bespectacled eyes both on the image of Sally and Sharon giving him yet another awesome double blowjob and on the beautiful sight of their round little bubble-butts wiggling excitedly in time with their incredible cock-pleasing ministrations. \n\n\"Girls, seriously... You two have a real talent for this. I'm not even kidding,\" Nick couldn't help but say, awestruck by the insane pleasure that the twins were gifting him as they worked their soft mouths in flawless concert on his meaty truncheon.\n\nLetting his fat glans slip out of her suckling mouth but still tenderly rubbing her gorgeous lips against it to slurp every trickle of precum oozing from it, Sally looked up at Nick with a mix of naughty excitement and honest gratitude painted on her face as she purred: \"This is our special way to thank you, Nick. You did a great job of popping our butt cherries, you know... You didn't hurt us at all and we both came like crazy and now we know we can do anal and have a lot of fun with it. Thanks, Nick. For real.\" \n\nHearing that, Nick couldn't help but shake his head in disbelief and chuckle: \"I'm the one who should be thanking you! I just had the pleasure of fucking two of the tightest, hottest, most amazing asses ever! So thank you girls for letting me do that!\"\n\nUngluing her shaft-smooching lips from his fleshy pole while a mischievous grin danced on her talented spittle-shiny lips, Sharon giggled as she added: \"Well, actually... We're kinda doing this also because we're dying to taste more of that creamy cum of yours! So less thanking and more cumming, Nick! Come on, give us your jizz already! We need more!\" \n\nAfter all three of them shared a laugh, the twins went greedily back to sucking Nick's massive cock, making him moan at their every glans-gobbling suction and shaft-slurping kiss. Only when the girls switched duties, so that Sally began focusing on lapping and slurping up and down his length while Sharon feasted on his bloated precum-oozing tip, Nick finally snapped out of his pleasurable trance for a moment, hit by a thought that compelled him to reach toward the desk and grab his phone.\n\nNoticing his movement and seeing him with his cell in hand, Sharon bobbed one last time on his boner before letting his fat tip slip from the soft grip of her lips. Then, turning to Sally, Sharon said with a half-joking and half-serious pout: \"Damn it, Sal! We totally forgot to make a video of our anal first time!\" \n\nNot even bothering to stop smooching and nursing on Nick's veiny schlong, Sally just chuckled through a mouthful of dickmeat and rolled her eyes at her twin before focusing once again on orally pleasing the incredible monstercock that only minutes earlier had introduced her to the sweetly forbidden delights of buttsex. The shrug of her slim shoulders that made her pointy tits wobble and the dick-muffled scoffing sound that she let out also reinforced the idea that, if Sally had actually bothered to use words to reply, she would have opted for a dismissive \"Whatever...\" at the very best. \n\nChuckling while Sharon made a funny face at Sally before resuming her own glans-nursing routine, Nick explained: \"I'm not recording this, girls, I'm just texting Tessa. Since we're all thanking each other now, I think she deserves some credit too. This really was a great surprise, and she was the mind behind it all, so...\"\n\nGiggling and nodding, acknowledging that if it hadn't been for their awesome big sis they wouldn't have just had the best sex of their young lives, the twins chose to express their agreement with Nick by increasing their cock-sucking efforts, which in turn made Nick's moans resound louder and his sense of gratitude toward his amazing ex girlfriend grow even bigger.\n\nAlmost instantly after he had sent Tessa a short but heartfelt text to thank her for her general awesomeness and more specifically for her crucial role as the orchestrator of that incredible morning of anal first times, Nick got the pastor's eldest daughter's reply. She wrote: \"You're very welcome! Just make sure to have something left for me later. My big butt needs some loving too, you know...\"\n\nReading Tessa's enticing text and the winking emote that concluded it, Nick exhaled in delight as he enjoyed the masterful fellating attentions that her little sisters were devoting to his throbbing boner, a warm fuzzy feeling meanwhile spreading inside him. His double-sucked cock flexed with excitement as the twins kept blowing him like pros, yet his eyes remained focused on the screen of his cell, drinking in Tessa's promising words. \n\nNodding slowly to himself, Nick smiled broadly before replying that yes, of course he would have some loving left for Tessa's beautiful ass. \n\nOf course. Always."
    ],
    "authorname": "ZenZerker",
    "tags": [
        "anal",
        "anal creampie",
        "anal first time",
        "anal virgin",
        "virginity",
        "ass to mouth",
        "oral",
        "threesome",
        "mff"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/loopholes-ch-02"
}