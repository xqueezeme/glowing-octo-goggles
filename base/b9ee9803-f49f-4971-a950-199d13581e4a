{
    "title": "Down the Rabbit Hole",
    "pages": [
        "\"In another moment, down went Alice after it, never once considering how in the world she was to get out again.\" -Lewis Carroll\n\nChapter I: Opportunity\n\nZack considered himself an average guy. At 23 years old, he worked a steady job in IT, had his own place, and was fairly fit and healthy. The only thing that stood out was his love of stockings.\n\nHe'd gravitated towards adult films featuring women wearing them, realizing that he enjoyed seeing them in them rather than being totally naked. But after a few years of this, it awakened a sudden desire in him.\n\nHe realized he wanted to wear them himself.\n\nBeing too nervous to go out and buy them in person, he had decided to order several pairs online. On the day he knew the package would arrive, he hurriedly rushed home from work to find the box on his doorstep. He snatched it up and headed inside his apartment, locking the door behind him.\n\nHe quickly stripped out of his work clothes, getting completely naked. Ripping open the box, he peered inside. There were several pairs of stockings; one white, one black, one fishnet, and one rainbow-striped, all thigh highs.\n\nHe selected the pair of black stockings, sitting down in his computer chair and setting the box down next to the monitor. He leaned over, slipping one of them up his right leg until the lace at the top snugly fit around his thigh. He took a moment to appreciate the feel and run his fingers over the fabric, and his cock began to grow.\n\nZack then took the other, sliding it on until both legs were encased in the sheer, black fabric of the nylons. He ran his hands up and down his legs, his cock now fully erect, just from the feeling and the kinkiness of it.\n\nHe stood up and walked into the bathroom, looking at himself in the full-length mirror. Being a fit, modern man, he trimmed regularly and so his figure was rather feminine. He had jet black, neatly trimmed hair and emerald green eyes. He admired the look of the stockings on his legs, and the feeling of the fabric clinging to his skin.\n\n\"I can't believe I'm doing this,\" he whispered to himself.\n\nTaking another moment to admire the look of the stockings on his legs, he wrapped his fingers around his cock and began to pump. He moaned, his eyes fixated on the nylons. He'd never once considered crossdressing before in any capacity, so this made him hornier than he'd ever been up to this point. He thought he'd need to watch a lewd video to get off, but just the sight and the feel of the stockings on his legs was enough.\n\nHis hand became a blur over his cock as Zack felt himself approaching orgasm. He lurched forward slightly and let out a low, long moan as spurts of cum shot forth, landing on the mirror. He stood there, breathing heavily and staring at his reflection, the lower portion now stained with his seed.\n\n\"Best orgasm ever.\" He muttered to himself, before cleaning up the mirror and stripping back out of the stockings.\n\n-\n\nThe next day, Zack was still so thoroughly turned on by the thought of wearing stockings that he decided to wear a pair to work. He settled on the pair of fishnet thigh highs, slipping them up his legs and admiring them before pulling his pants on over them.\n\nMost of the day turned out to be uneventful, until lunch when a coworker decided to sit with him.\n\nHer name was Brandi. She was a secretary to one of the higher-ups in the company, and the two had only ever spoken in passing before now. She was a gorgeous young woman, only 21 years old. She had straight, blonde hair that she kept up in a neat ponytail, and her blue eyes were bright and sparkly. She wore a white, button up blouse and black pencil skirt, along with black stockings and heels. Zack had always taken notice of her stockings, but of course said nothing of it.\n\n\"How's it goin' today, Zack?\" She asked, taking a seat at the table across from him.\n\n\"Nothing out of the ordinary. Another boring day in the office,\" he replied, trying desperately to think of something more interesting to say.\n\n\"So um, I know this is a personal question but...do you have a girlfriend?\" Brandi asked hesitantly.\n\n\"What? Er, no. No I don't. Do you?\" He asked mindlessly. \n\n'Do you?' he thought to himself. 'Why would you say that?!' To his surprise, Brandi giggled.\n\n\"Not since college.\" She said.\n\n\"O-Oh. Well then,\" Zack said, clearing his throat. Just the thought of this vivacious young lady with another woman made his cock twitch.\n\n\"I was wondering if maybe you wanted to go out after work for a drink.\"\n\n\"I'd love that!\" He replied, perhaps a little too fast, though Brandi still didn't seem deterred.\n\n\"Great! Meet in the lobby at 5?\" She asked, standing up so that Zack got another great glimpse at her black thigh highs.\n\n\"Definitely,\" he replied, trying his best not to stare.\n\nChapter II: Syntax\n\nZack couldn't wait for 5 to roll around, and as soon as it did, he clocked out and rushed to the lobby. Brandi was already there, little black purse slung over her shoulder. She smiled as he approached.\n\n\"I was thinking maybe we could try Vizzini's, that new bar just a few blocks away.\"\n\n\"That sounds great, it's only a block away from my apartment.\" Zack said, trying to contain his excitement. He'd had several girlfriends in the past but the last year or so had been quite a dry spell, so this was his first actual date in a long time.\n\nThe pair traversed the few blocks to the bar and took a seat at a booth inside. Within moments a waitress approached. She was tall and slender, her work uniform consisting of a black skirt and green blouse. She had fiery red hair that hung down well past her shoulders, and her already impressive height was boosted by the three-inch heels she wore. Brandi gasped.\n\n\"Hannah?!\"\n\n\"Brandi!\" The waitress squealed.\n\nThe two hugged before Brandi sat back down next to Zack, who was beginning to feel a little out of his element.\n\n\"Zack, this is my friend from college, Hannah. Hannah, this is my coworker, Zack.\"\n\n\"Oooh, he's cute,\" Hannah said with a sly grin.\n\n\"Hannah!\" Brandi chastised her friend with a laugh.\n\n\"Alright alright. I'll leave ya alone. What would you like to drink? They're on me.\"\n\n\"Mojito for me,\" Brandi answered, eyeing her college friend as she in turn was looking over Zack.\n\n\"Crown and Coke for me, please,\" Zack requested.\n\n\"I'll bring 'em right over,\" Hannah replied before disappearing to fill the drink order.\n\nBrandi leaned close to Zack and whispered.\n\n\"That's my girlfriend from college.\"\n\n\"Her? W-Wow,\" Zack whispered back, amazed. He tried his best not to immediately fantasize about the two together but failed spectacularly, and felt himself getting hard. He was suddenly very grateful to have a table to help hide his erection.\n\n\"You sound so impressed,\" Brandi laughed.\n\n\"Oh er...sorry. That just...I mean the two of you...together...\" Zack stammered, desperately trying to keep his cool. Brandi laughed again.\n\n\"Stop worrying so much. It's totally fine. I haven't been with a woman since college. I kind of miss it, honestly.\"\n\nZack felt his heart sink and nodded his head, but luckily didn't have to reply as Hannah reappeared with their drinks. She set each down on the table with a napkin, and both Zack and Brandi's had her phone number scrawled across it.\n\n\"Don't be a stranger, you two,\" Hannah winked and moved away to handle other customers.\n\nBrandi snickered at the napkin, but nevertheless folded it up and placed it in her purse. Zack absentmindedly picked at the edge of his, thinking maybe she'd rather have her than him. Brandi seemed to notice this though, and edged closer to him in the booth. He felt her hand on his thigh and his eyes widened.\n\n\"Don't worry, Zack. I'm bisexual. And I wouldn't have asked you out with me if I didn't think you were hot, too.\"\n\nZack felt his cheeks grow warm at the compliment, and the hand on his thigh. He fidgeted in the booth a bit.\n\n\"Th-thanks,\" Was all he could think to say.\n\nThe two continued to talk for a long while, sipping their drinks and discussing everything from work to home life. It turned out that Brandi also lived alone, and like Zack, hadn't been in a serious relationship in a long time.\n\nAs they finished their drinks, Zack suddenly felt Brandi's hand on his thigh again. This time it was only inches away from his crotch, and he gulped. He felt hot, from her touch and the drink he'd consumed. She edged closer to him, leaning over and whispering in his ear.\n\n\"How about we...\" she paused, groping his crotch through his slacks. He nearly jumped out of the booth but tried his best to remain calm and appear normal. \"...go to your place? You said it's real close, yeah?\"\n\nZack gulped. He could feel himself getting hard as she caressed his bulge. He nodded excitedly. \"Check please,\" he called out, his voice breaking as if he were going through puberty. This gave Brandi another laugh.\n\nBrandi took him by the hand and led him from the booth. She blew a kiss towards her college friend and said, \"I'll call you later, Hannah.\"\n\nZack and Brandi were both so excited they jogged the distance from the bar to his apartment. He fumbled with his keys and threw open the door, and the minute he did, Brandi was all over him, kissing him deeply and slithering her tongue into his mouth. Her arms wrapped around his neck and he in turn wrapped his around her waist. Their bodies ground together in a primal lust as he kicked the door shut and the two moved awkwardly in tandem further into the apartment.\n\nAs they stumbled into the bedroom, Brandi shifted her arms between them and began unbuttoning her blouse. Zack helped push it off her shoulders and she threw it to the floor. Between their impassioned kisses, he managed to get a glimpse of her bra, a sexy white lace number with a floral pattern that was mostly see-thru. He began to grope the soft flesh of her breasts through the bra as they continued to make out, lips locking and tongues slithering across one another.\n\nBrandi then unbuttoned his shirt, and he let it slide off and fall to the floor with hers. He then felt her fingers on the clasp of his pants and a sudden realization hit him.\n\nHe was still wearing the stockings.\n\nHe panicked and reached down, grabbing her hands and holding them within his own.\n\n\"H-Hey, wait a sec.\"\n\nBrandi seemed insatiable though and managed to slip free from his grasp. Before he knew it his pants were undone and she yanked them down quickly, exposing the thigh high fishnets.\n\nAn awkward silence fell upon the room. Brandi took a few steps back, looking Zack up and down, whose cheeks were now flushed. His erection began to wane from the embarrassment of being caught.\n\n\"I-I can explain,\" he began.\n\n\"Please do,\" Brandi responded, far too calmly, which made Zack more nervous.\n\n\"I uh...I uh...um...\" Zack coughed. He desperately tried to think of an excuse, any excuse that would make sense.\n\nBrandi crossed her arms over her chest, still only covered by the bra. She wasn't making any move to put her blouse back on or try to leave, and Zack was having a hard time gauging her as a result.\n\nZack sighed and gave up trying to think of an excuse. He looked down and spoke quietly. \"I just really like stockings.\"\n\nA grin crept across Brandi's lips. She unzipped her skirt and let it fall to the floor, stepping out of it, revealing a set of panties matching her white lace bra, and the tops of her thigh high black stockings.\n\n\"I bet you love the look of these then,\" she said, placing a hand on her hip.\n\nZack slowly looked up, and right away he began to harden again. Seeing her stockings in their entirety now, not to mention the heels that emphasized their look, gave him a second wind.\n\n\"You're...not weirded out or anything?\" He asked quietly, unable to stop staring at her sexy figure.\n\n\"I'll admit, I've never been with a guy in women's clothing before but, it is pretty damn sexy. I like stockings myself.\"\n\nHe felt like a weight had been lifted, hearing that. He was suddenly very horny again, realizing that he was about to fulfill his fantasy of having sex in stockings, while his partner wore them as well.\n\nBrandi took a few steps forward and pushed him so that he fell back onto the bed. He lifted his head and watched as she reached behind her, unclasping her bra and letting it fall to the floor with the rest of her clothes. Her breasts were just the perfect size, not too big, not too small, a perky, well-rounded 36C. At the center were pink nipples, already hard.\n\nShe then hooked her thumbs in the sides of her panties and pulled them down, letting them fall so she could step out of them. Now she stood before him, dressed in nothing but a pair of black thigh high stockings andheels. He too was completely naked, save for the fishnets on his legs.\n\nBrandi sauntered over to the bed, crawling up on top of it and slithering up his body until he felt the heat of her pussy on his dick, which was now achingly hard. It twitched in response. She kissed him passionately, thrusting her tongue into his mouth once more. As she did, she began to grind her hips downward, and Zack felt his dick slip in between her pussy lips. They were already moist, and the feeling made him moan into the kiss.\n\nShe continued like this for a time, rubbing her pussy up and down the length of his cock as they kissed, their stockinged legs rubbing together and sending tingles down Zack's spine.\n\nFinally, Brandi sat up so that she was sitting on his cock, her wet folds clenching the sides of it. She slid along the length of it a bit more, smiling down at Zack as he looked up at her in awe.\n\nShe lifted herself up, reaching down and pulling his cock up so that the head rested against her heated opening. Zack ran his fingers along the tips of her stockings as she slowly slid down his length, her hot, wet pussy engulfing the entire thing.\n\nBrandi came to rest against his pelvis and remained there for several moments, just enjoying the feeling of his cock filling her up. She wanted more though, and eagerly began bouncing up and down. Zack watched as his dick, now shining with her juices, disappeared into the pink tightness every time she brought her hips down.\n\nHe couldn't believe this was happening. Just the night before he'd settled in for a lonely night of wearing women's stockings and masturbating, and now here he was in a pair of fishnets while this gorgeous blonde woman bounced on his cock, wearing black thigh highs and heels.\n\nHe couldn't stop running his fingers over the fabric of her nylons as she continued to thrust her hips downward, her tight cunt engulfing his throbbing shaft with each pass. Although she was very tight, the wetness made it easy for his dick to sluice in and out, and he groaned as he felt her walls clenching him, bringing him closer to orgasm.\n\nBrandi began to buck her hips faster. She leaned back slightly, giving him an even better view of his rock hard cock disappearing into her wet pussy. She balanced herself on his legs as she continued to bounce, her fingers gripping the fishnets.\n\nThe sensations were just too much for him. Her stockings rubbing against his own, their hands caressing the nylon fabric that encased each others legs, and most of all the tight tunnel that was clenching him. Zack began to thrust his hips up in time with her movements, and moaned as he felt his cum pulse deep into Brandi's dripping wet hole. At the same time he could feel her muscles contracting as she had her own orgasm, her pussy clenching him tightly and milking him dry.\n\nShe collapsed on top of him and the two shared another intimate kiss. Finally she slid off of Zack, laying beside him, and placed her arm over his chest. He lay there, catching his breath, still in disbelief at what had just happened. Brandi too took a moment to catch her breath, but she was the first to speak.\n\n\"Fuuuuuuck that was hot. I never thought about a guy in stockings before but you definitely have the legs for them.\"\n\n\"Thanks,\" Zack replied breathlessly. \"You do too.\"\n\nBrandi rolled on her side so that she was looking at him as they spoke. Zack turned his head to meet her gaze.\n\n\"Have you ever thought about going further?\" She asked curiously.\n\n\"What do you mean?\"\n\n\"Like dressing up like a woman. Wearing panties, a bra, skirts, dresses. That kind of thing.\"\n\nZack shook his head.\n\n\"Not really. I just really love stockings, they're so sexy and they feel so great. To be honest, I only put a pair on for the first time yesterday. Today is only my second day in them.\"\n\nBrandi considered this for a moment before replying.\n\n\"Well you can wear them anytime we're together.\" She smiled coyly. \"We should do this again tomorrow.\"\n\nZack excitedly agreed.\n\n\"Definitely.\"\n\nChapter III: Old Habits\n\nThe next morning, Zack decided to again wear a pair of stockings to work, this time in anticipation for his second date with Brandi. He decided on the rainbow-striped pair, and was excited to hear what she'd think of them.\n\nThe day at work seemed to drag by until lunchtime had arrived. He got up from his desk and began making his way towards the cafeteria, but as he passed by the boss' office, he was suddenly yanked inside.\n\nBrandi closed the door behind him and locked it, smiling. She was in her usual secretarial outfit of a white blouse, black skirt, and the trademark black stockings and heels.\n\n\"Where's Ms. Granger?\" He asked, looking around the office.\n\n\"She took a half day, so I figured we could borrow her office. Fucking you in those stockings last night STILL has me worked up. I want more.\"\n\n\"Well I'd hate to disappoint,\" Zack said with a smile.\n\nTheir hands suddenly became a blur as they worked to undress each other again. First tops, then bottoms, until they were left in just their undergarments. Today Brandi had on a sexy white strapless bra and a black satin thong. Of course, Zack's favorite part of the ensemble were the thigh high stockings and heels. He stood in just his blue boxers and rainbow thigh highs.\n\n\"Oh those are just too adorable,\" Brandi giggled. She dropped to her knees, rubbing her fingertips along the fabric, which made Zack moan.\n\nShe slipped off his boxers, setting his hard cock free, before taking it in her mouth. He moaned again as her soft lips enveloped his meat, slipping all the way down, trapping the length of it in her warm, wet mouth, before slowly sliding back up so that barely more than the head remained. She repeated this, her hands still caressing his legs, clad in the rainbow stockings.\n\nZack placed a hand gently on her head, running his fingers through Brandi's silky blonde hair as she gave him the best blowjob of his life. Her mouth felt so good, with her soft lips wrapped so snugly around him as they worked their magic. All the while he could see her hands running along the length of his stockings, which enhanced the image and brought him even closer to orgasm.\n\n\"I'm about to cum,\" he warned Brandi with a strained whisper.\n\nShe continued to bob her head however, sucking his dick even faster, slurping it deep into her mouth and slobbering all over it as it suddenly throbbed and shot several jets of thick spunk into her mouth. She swallowed his salty load and released his cock with a pop, licking her lips.\n\nThough he'd gotten off, he still wanted Brandi to as well, and so he leaned down, taking her hand and helping her stand on those sexy black heels. He led her over to their boss' desk and slid her panties off while she unclasped her bra. He then helped her sit on the edge of the desk as it was his turn to sink to his knees.\n\nHer pussy was completely shaven, and this was the first time he'd gotten an up-close look at it. The aroma reminded him of fresh-cut roses, and he licked his lips in anticipation, before pushing his head between her legs and latching onto her soft folds. He ran his tongue through them, savoring the sweet flavor that washed over it.",
        "He could feel Brandi's hands on his head, her fingers running through his hair as he ate her out with abandon. His tongue traversed the soft folds, deep into her pussy, and up to her sensitive clit. He was enjoying the sensation almost as much as she was.\n\nWhile he worked, he ran his fingers over her black stockings, occasionally glancing sideways so he could admire them wrapped around her thighs. Before long she began to buck her hips, pressing her pussy against his face as she came, her entire body shaking from the intense feeling of the orgasm.\n\nZack stood up and Brandi leaned in to kiss him, tasting herself on his lips and tongue. After a moment of this, she lay back on the desk and spread her legs.\n\n\"Fuck me, baby,\" she said in a sultry voice.\n\nZack needed no further invitation. He'd gotten hard again while going down on Brandi, and was more than ready to keep going. He stepped close to the desk, grabbing her ankles and placing them on his shoulders. He loved the feelings of her stockings against his skin as he placed his member at the edge of her opening and pushed in. He sighed in pleasure as the lips stretched around his cock, until her dripping wet pussy had swallowed the entire thing.\n\nHe began to pump in and out of her quickly. Both were having trouble keeping their moans down to an acceptable level. Zack stared down, watching his dick disappear into her tight cunt, while her shapely legs wrapped in black nylons rested upon his shoulders. Below that he could see the rainbow nylons still on his legs, and the sight of both pairs made him pump even faster.\n\nHe was thrusting harder into her now and Brandi was clutching the desk, groaning in pleasure. She arched her back as her body shook from an intense orgasm. Zack could feel her tight muscles contracting and squeezing his cock as this happened, driving him to his own orgasm, his cock releasing its payload of hot, white cum for the second time today.\n\nWith a long, low moan, he slowly slid out and helped Brandi up. She immediately fell to her knees again, hands finding his rainbow stockings as she slurped his cock back into her mouth, cleaning it of her juices. Afterwards, she stood up and they kissed again.\n\n\"I have no idea why I waited so long to ask you out,\" Brandi said breathlessly.\n\nZack smiled at this.\n\n\"I feel like I should be thanking you. I mean, you're totally cool with the stockings and everything.\"\n\n\"Well of course I am. They're sexy and feel great,\" Brandi giggled, spanking his ass before gathering up her clothes.\n\n\"I've got a girls night planned with Hannah tonight, but how about we get together again this weekend? Say Saturday afternoon?\" Brandi asked with a coy smile.\n\nZack nodded excitedly. \"That'd be great.\"\n\n-\n\nThat night, Brandi and Hannah went out for dancing and drinks. After a few hours of this they retired to Brandi's apartment. Brandi was clad in a little black dress, with a black thong and strapless bra on underneath, and a pair of two inch heels. Hannah was dressed in a cropped t-shirt that was cut off halfway down her midsection, exposing her toned tummy. She also had on a red, plaid miniskirt and strappy red heels.\n\nThe two sat on Brandi's sofa to relax and catch up. They had both had several drinks and were feeling no pain.\n\n\"I'm so glad I ran into you again,\" Brandi said with a smile.\n\n\"Me too. I haven't had this much fun since...well, since we were in college.\"\n\nBrandi noticed that Hannah was staring at her body, her green eyes examining every inch and curve as they spoke. An idea suddenly crept into her mind.\n\n\"We did have a lot of fun in college...it was my first time with a girl, y'know,\" Brandi said, grinning.\n\n\"Mine too.\" Hannah replied, licking her lips.\n\nBrandi edged closer to her friend, placing a hand on her bare thigh.\n\n\"We could relive that time,\" she whispered.\n\nHannah shuddered excitedly at the thought. She was already turned on from the dancing and the drinks, but was unsure if Brandi would still be up for this.\n\n\"But how about, if we do, we let Zack join us? We always used to talk about trying a threesome.\"\n\n\"Zack is pretty hot, too,\" Hannah said, considering it for a moment. \"I'm in.\"\n\n\"Great!\" Brandi exclaimed happily.\n\n\"But I've gotta have you now,\" Hannah said hungrily. She climbed onto and straddled Brandi's lap, leaning in to kiss her passionately. Brandi returned the kiss, running her hands along Hannah's exposed sides.\n\nBrandi took the initiative now, lifting Hannah's shirt and quickly unclasping her bra, tossing them both away. She took her college friend's right nipple into her mouth, gently grazing it with her teeth. She then did the same with the left, while Hannah ran her fingers through Brandi's shiny blonde hair.\n\nHannah moaned, both of her copper colored nipples achingly hard at her friend's moist lips and tongue. Suddenly, Brandi groped her ass and stood up, holding her. Hannah wrapped her legs around her waist for balance as Brandi carried her into the bedroom. She dropped Hannah onto the bed and slid on top of her, pressing their lips together once more and parting them so that their tongues met.\n\nAgain Brandi worked her way down Hannah's body, kissing her breasts and suckling on her nipples, before moving down further. Hannah lifted her hips off the bed so that Brandi could slip off her skirt and panties in one swift motion, leaving her in nothing but the red heels.\n\nHannah's pubic hair was neatly trimmed, with only a small amount above her slit, and it was fiery red just like the hair on her head.\n\n\"God I've missed this,\" Brandi said. She lowered her head in between Hannah's thighs and stuck out her tongue, running it along the length of her slit. Hannah moaned, her fingers again finding their way into Brandi's hair.\n\nBrandi began to lap at her friend's pussy. It tasted as good as she remembered, and she wanted more. She began to push her tongue deep into the hole, getting a stronger flavor as she wriggled it within.\n\nHannah however tugged on Brandi's hair, pulling her head up. Brandi pouted, her face shiny with nectar.\n\n\"I want some too,\" Hannah demanded. Brandi slid down the straps of her dress and began to take it off as Hannah sat up to unclasp her bra. She then stood to slip out of her thong, so that now she too was only left in her heels.\n\nCrawling back up on the bed, she positioned herself above Hannah in a 69 position. Almost immediately she felt her friend's tongue pressing against her pussy, already wet and hot. She thrust her head back down between Hannah's legs and resumed eating her out as well, suckling the sensitive little clit into her mouth.\n\nBoth girls feasted on each other's wet pussies, savoring the flavors and warmth on their tongues. It wasn't long before each came, their body shaking from the orgasm. Hannah still hadn't had enough however.\n\nAs Brandi slid off of her, Hannah turned around and slid closer so that her left leg was beneath Brandi's, and her right was above. She pulled Brandi in closer by the hips so that their pussies, still heated and wet, were rubbing against one another. Brandi moaned.\n\n\"Oh god, I'd forgotten how good this felt,\" she moaned, holding onto Hannah's knee for support.\n\nHannah gyrated her hips so that they rubbed together, the wetness making them glide easily against one another. Their clits connected and Brandi felt as if sparks were flying. The two found a rhythm together like this. The heat and wetness felt amazing to both of them, and each felt another orgasm fast approaching.\n\nTheir hips began to move faster as they ground against one another, and finally, Brandi felt herself orgasm for the fourth time today.\n\n\"Fuuuuuuuuuck,\" she moaned.\n\nHannah continued to work herself against Brandi for a few more seconds until she too came. Her body shook until it was over, at which point she pulled Brandi in for another kiss. Then the two collapsed on the bed, laying in each others arms.\n\n\"We are gonna blow Zack away Saturday,\" Brandi whispered with a giggle.\n\n\"Can't wait,\" replied Hannah.\n\nChapter IV: Duty\n\nZack and Brandi both arrived for work excited that Friday. Zack merely thought he was going to get lucky again, while he and his insatiable blonde girlfriend both wore stockings. Brandi however, was excited for the surprise she knew was in store; not only was Zack going to get lucky in stockings, but he was going to get lucky with not one but two lusty ladies.\n\nMidway through the morning, Brandi approached Zack's desk with a concerned look on her face.\n\n\"What's up?\" He asked curiously.\n\n\"Ms. Granger wants to see you. She didn't say what about. She sounded weird, though.\"\n\nZack gulped.\n\n\"You don't...think she knows?\" He whispered.\n\n\"How could she? We were the only two in that office. I'm sure it's nothing.\"\n\nZack stood and took a deep breath, before proceeding to his boss' door and knocking.\n\n\"It's open,\" came the reply from within.\n\nZack creaked open the door and slowly stepped inside. Sitting behind her desk was he and Brandi's boss, Harley Granger. At only 30 years old, she seemed almost too young to be the boss, but she'd always done her job well. She had straight, light blonde hair that went several inches past her shoulder, though at the moment she had it pulled up in a neat pony tail, so that only her bangs remained framing her face. Her brown eyes seemed timid, but everyone knew she was anything but. She was dressed in a knee-length black pencil skirt, red button-up blouse, and a black ladies suit jacket. Beneath the desk, she had on a pair of black thigh high stockings and sensible two-inch heels.\n\n\"Close the door and sit, please,\" she said plainly.\n\nZack gulped again, trying to hide his nervousness as he shut the door. He slowly walked forward, moving around the chair in front of her desk before sitting in it, folding his hands in his lap.\n\nHarley stared at him for a long time, and neither of them said a word. Zack was having trouble keeping his eyes on hers, feeling more nervous by the second. Finally, she broke the silence.\n\n\"This is a very nice desk, wouldn't you say?\"\n\nZack slowly looked down to her desk, remembering Brandi being firmly planted on it the day before.\n\n\"I think so, yes,\" he responded quietly.\n\n\"Is there anything you'd like to tell me?\" Harley asked calmly.\n\n\"N-No,\" Zack replied, trying to sound confident.\n\n\"Hm,\" Harley said simply.\n\nShe turned her computer monitor around so that Zack could see it, and his eyes went wide. On the screen was Brandi laying on the desk, with him pistoning in and out of her. His jaw dropped. He then realized the angle was from above the desk and his eyes traveled upwards, until he saw it. On the bookshelf behind the desk, mostly obscured by books and knick-knacks, was a camera.\n\n\"How long have you been a cross-dresser?\" Harley asked. Her voice still sounded strangely calm.\n\n\"C-Crossdresser?\" Zack gulped again, and shook his head. \"N-No. I'm not. I just like stockings, that's all.\"\n\n\"Stockings are for women, so I'd still call that crossdressing, sweetie.\"\n\nZack remained silent, unsure of what to say. Harley's eyes returned to the screen for a moment before she turned the recording off. She then stood up and walked around her desk, leaning against the front of it, just feet away from Zack.\n\n\"I suppose you like these then?\" She asked, before raising the hem of her pencil skirt up just far enough so that he could see the lace pattern at the tops of her black thigh highs. His cock gave a little twitch.\n\n\"I uh...I uh...\" he stammered.\n\nHarley laughed.\n\n\"Don't worry. Your little fetish is safe with me, as is your job, if you do what I say.\"\n\n\"Ma'am?\" He squeaked out.\n\n\"You see Zack, I have a secret of my own,\" she paused and lifted her skirt up higher so that it was bunched up around her waist, and through her black lace panties he could see a bulge. His eyes suddenly widened.\n\n\"I think your little fetish is sexy. It's a shame you don't wear more women's clothes, I think it'd look good on you,\" Harley spoke as she slid the fabric of her panties aside, letting a natural, half-erect cock bounce free.\n\nZack had never been attracted to men before, and had never considering any kind of sex acts with them. But he had to admit Harley was sexy, and something about this turned on him, though he still felt uncomfortable.\n\n\"I uh...\" he stammered again.\n\nHarley stepped forward and moved close to Zack, so that her cock was now only inches away from his face.\n\n\"Just give it a little kiss, and you and that little blonde slut get to keep your jobs, and I won't tell anyone about your little secret. C'mon darling, I know you want it,\" she purred.\n\nZack still felt uncomfortable, but he also knew that some part of him did want this somehow. He had never once entertained the thought of sucking a cock, or even a shemale for that matter, but here one stood before him now, with her semi-erect member just inches from his face. After a moment of hesitation, he leaned his head forward, and place a soft kiss on the head. Harley shuddered.\n\n\"Mmmm. That feels nice. You have really soft lips.\"\n\nZack repeated the kiss again, this time parting his lips just enough so that his tongue could flick across the slit. Harley moaned again and he felt her fingers in his hair.\n\nHe shyly raised his hands and placed his fingertips on the lace tops of her stockings. Harley couldn't help but smile.\n\n\"You really do love stockings, don't you?\"\n\nZack nodded his head silently before giving her head another little kiss. He parted his lips a little further this time, taking just the tip between them. It felt spongey and soft, despite the fact she was getting fully erect and hard from his attention. He grew bolder, and opened his mouth, taking the entire head within now.\n\nA tiny droplet of precum leaked out and a salty taste washed over his tongue. Zack found that he enjoyed the flavor, however. He slid his lips further down her shaft, managing to take about half of it into his warm, wet mouth until his gag reflex triggered. \n\nHe coughed and slid his head back up for breath, realizing he wouldn't be able to take the entire thing. Harley didn't seem to mind though, as she simply stood there, happily watching him work. He raised his right hand, wrapping his fingers around the bottom portion of her cock as he placed his lips back around the top half. He moved his mouth and hand in tandem, simultaneously jerking her off and blowing her at the same time.\n\nHarley moaned again. The feeling of his nimble fingers and warm mouth wrapped around her cock gave her tremendous pleasure, and she knew it wouldn't be long before she came.\n\nZack's head and hand became a blur as he now expertly worked his boss' cock. He'd grown used to the feeling and the size, and was actually enjoying it. He'd grown hard in the process, his own member straining against his boxers. Regardless, he continued sliding his lips up and down Harley's cock, his hand pumping what he couldn't take between them. All the while with his free hand he continued to caress her stocking-clad legs.\n\n\"Oooooh god. Don't stop, don't stop...oh Zack don't stop!\" Harley repeated, clutching his head tightly as spurt after spurt of thick white spunk shot into his mouth. It took Zack by surprise at first, but he found that he enjoyed the taste, and managed to swallow most of it, though a tiny amount dribbled out of the corner of his mouth and down his chin.\n\nAs he released Harley's cock, she leaned down and licked off the little bit of seed that had escaped his mouth, before kissing him, shoving her tongue past his lips. He kissed her back, his head swimming with disbelief over what he'd just done.\n\nHarley slid her cock back into her panties and smoothed out her skirt before moving to sit behind her desk again.\n\n\"Very good work, Zack. You're a natural cocksucker.\"\n\nHis cheeks flushed at this. Though he had just done it, and quite happily, he still felt a twinge of shame at being called that.\n\n\"I know you have plans for Saturday already, but this Sunday I want you to come to to my suite. How does 2pm sound?\"\n\n\"I'll be there,\" he replied, as if he had much of a choice.\n\n\"Excellent. You may return to work now.\"\n\nZack stood up and slinked out of the office, quickly returning to his desk.\n\n-\n\nThe rest of the day dragged by without incident, but Zack had trouble concentrating on his work. He'd gone from having a simple stocking fetish to fucking his new girlfriend while they both wore stockings, and then sucking his shemale boss' cock. When the time to leave had finally arrived, he stopped by Brandi's desk.\n\n\"Want me to walk you out?\" He asked politely, wondering if he should tell her about Harley.\n\n\"No, Ms. Granger said she wanted to see me before I left today. Speaking of which, how did it go?\"\n\nZack gulped. She wanted to see Brandi too? He again wondered if he should warn her, but thought better of it and shook his head. \"Oh it was fine. Um, nothing really. I've got to go, I'm sure it'll be alright. See you Saturday, yeah?\" He said, before departing in a hurry.\n\nBrandi watched him leave suspiciously, raising a brow. After she'd finished straightening up her desk, she entered Harley's office, who was once again sitting behind her desk.\n\n\"Come in and close the door.\" She said calmly.\n\nBrandi obeyed and moved closer to the desk; the same desk she'd gotten fucked on just a day earlier.\n\n\"So I understand you and Zack are an item now,\" Harley began.\n\n\"I suppose you could say that,\" Brandi replied, clearing her throat nervously.\n\n\"You suppose, do you?\" Harley chuckled.\n\nAgain she turned her monitor around, and Brandi stared at the screen. She saw the same image Zack had earlier; her laying on that very desk, getting fucked hard and fast.\n\n\"You and your stocking obsessed boyfriend seem to be a very active couple. Couldn't wait til you got home?\"\n\n\"Ms. Granger, I'm so sorry,\" Brandi began, as the monitor was turned back around. \"It'll never happen again, I swear.\"\n\n\"Now now, let's not be hasty here,\" Harley said calmly, standing up from behind her desk. She moved around in front of it to face Brandi, smiling. \"I'm willing to let it happen again...if, we could work out a little deal.\"\n\n\"A deal?\" Brandi asked, fear fading into curiosity.\n\n\"I'd like to have you in that same position.\"\n\n\"I er...\" Brandi thought about it for a moment. Harley was rather attractive, and after her romp with Hannah, she was definitely ready for more girl-girl action. \"Do you...have a strap-on here at work or something?\"\n\nHarley laughed.\n\n\"Oh no, Brandi. Something much, much better.\"\n\nFor the second time today she hiked her skirt up around her hips and pulled her panties aside, letting her cock spring free. Brandi gasped, staring at it.\n\n\"You have a...so that means...you're?\"\n\n\"I'm the best of both worlds, sweetie,\" Harley responded with a wink.\n\n\"It's...I mean...I've never been with...that's kind of hot though,\" Brandi mumbled.\n\n\"I'm glad you think so. Are we on, then?\"\n\n\"If I get to keep my job, sure.\"\n\nHarley laughed again. \"Of course you get to keep your job. Might even get a raise.\"\n\nHarley picked Brandi up, setting her on the desk. She slid her skirt up like she'd done to her own, and pulled Brandi's little black thong aside to reveal her shaven pussy. Harley took hold of Brandi's stocking-clad knees and knelt down just as Zack had done the previous day. She inhaled deeply, and then leaned forward, sucking Brandi's clit between her lips.\n\nBrandi began to moan immediately. Like Zack, she'd never considered being with a shemale and yet she was extremely turned on by the possibility. She felt herself growing wet with ease as her boss' tongue explored her nethers, delving deep within her and flicking over her sensitive clit.\n\nOnce she'd gotten nice and wet, Harley stood up and easily slid her cock into Brandi's tight pussy. She groaned at the tight, warm feeling, the pink walls clenching her member as she thrust deeper.",
        "For the second time Brandi was getting fucked on this desk, this time by a hot shemale. She wouldn't have guessed Harley had a dick in a million years and yet here she lay, with it pounding into her, making her wetter by the second.\n\nHarley continued to pump into the tight, wet pussy. She was running her fingers along the fabric of Brandi's nylons at the same time, enjoying the feeling and look of them just as Zack had. Her tempo increased as she thrust harder within Brandi, until her second orgasm of the day overtook her. She pumped her seed deep within her secretary's snatch, groaning in pleasure as she unloaded, while Brandi came simultaneously.\n\nAs she pulled out, Brandi sat up on the desk and leaned over, sucking Harley's cock into her mouth and cleaning it of her juices, just as she'd done to Zack the previous day.\n\nOnce she'd finished, Harley tucked her member back into her panties and smoothed out her skirt, giving Brandi a kiss.\n\n\"You're free to go, Brandi.\"\n\n\"Thanks,\" was all Brandi could think to say. She felt lightheaded and was having trouble concentrating. She began to wonder if the same thing had happened to Zack, and if he were simply too ashamed to say so. For now however, she decided to keep the matter to herself, as she was still looking forward to the surprise threesome she and Hannah had planned.\n\nChapter V: Three of a Kind\n\nFinally the big Saturday had arrived and Zack was more excited than he'd ever been in his life. He'd taken a nice, long hot shower, put on a pair of black thigh high stockings, and then a pair of shorts and a t-shirt. He was so worked up he considered jacking off before the ladies even arrived, but thought better of it and decided to wait.\n\nIt wasn't long until there was a knock at the door. Zack ran so fast to open it he nearly tripped on the way there. He pulled the door open and there stood Brandi and Hannah, arm in arm, both wearing long trenchcoats that were securely buttoned up in the front.\n\n\"Hey there, sexy.\" Brandi said with a smile. She and Hannah stepped inside and Zack shut the door behind them. As he spun to face them, he saw that they were both removing their coats, and his jaw dropped.\n\nAs Brandi's coat fell away, Zack could see she was wearing a sexy schoolgirl out. She wore a white button-up shirt, tied in a knot just below her breasts to expose her midsection. Below that was an extremely short, pleated red plaid skirt that barely covered her thighs. Her legs were encased in a pair of sheer white thigh high stockings, and on her feet were a pair of strappy black heels.\n\nEven with her schoolgirl getup, Brandi was nearly outdone by Hannah. As she slid her coat off, Zack caught sight of her outfight; she was wearing a black corset with red trim, garter belt, thigh high black stockings, impossibly high red stiletto heels, and a black see-thru thong.\n\nFor a long time, Zack just stood there staring, wide-eyed and mouth open. Both girls laughed and took him by the hands, leading him into the bedroom.\n\n\"I take it our outfits are to your liking?\" Brandi cooed as she pushed Zack back onto the bed. He nodded quickly, still speechless.\n\nBrandi unbuttoned Zack's pants and pulled them down, and Hannah followed suit with his boxers, leaving him in nothing but the black thigh highs.\n\n\"I told you he liked stockings,\" Brandi said with a giggle.\n\n\"Well who doesn't?\" Hannah replied, running her fingertips over the soft nylon.\n\nZack was already rock hard from observing the two insatiable ladies in their sexy outfits, and at Hannah's gentle touch his cock gave a twitch.\n\n\"Shall we?\" Brandi asked Hannah, placing her hand on Zack's other leg and caressing the stocking.\n\n\"Fuck yeah,\" Hannah said with determination.\n\nBoth girls climbed up onto the bed now and began to lick all over Zack's throbbing member. He moaned right away and watched as his hot blonde girlfriend and her redhead college friend slobbered all over his dick. He felt the entire thing, as well as his balls, grow moist with their saliva as they worked, licking it all over like a lollipop.\n\nBrandi paused for a moment as Hannah continued running her tongue all over Zack's cock.\n\n\"You should sit on his face. He's really good.\"\n\n\"Oh really?\" Hannah said with a big grin. She stood up for a moment, and as she did Brandi immediately leaned over and took Zack's cock in her mouth, sliding her soft lips up and down the surface, taking the entire thing into her hot, wet mouth. Hannah slipped off her thong, and Zack caught sight of the small patch of fiery red hair as she climbed back on the bed, positioning herself over his face.\n\nZack wasted no time in beginning to eat her out. He ran his tongue along the length of the slit several times, getting the soft folds nice and wet, before he began fucking her with the wriggling pink muscle, pushing it as deep as it he could before returning to lap up the sweet flavor.\n\nBrandi's tempo had increased, and her head was a blur as it bobbed up and down on his dick. The sensations were beginning to be too much for him to handle. He lifted his head just enough to say \"Oh god, I'm gonna cum.\"\n\nTo his surprise though, Brandi didn't stop. She continued expertly blowing him, until he felt his dick begin to spasm. With a groan, he shot a load of sticky spunk into Brandi's mouth.\n\nBrandi then suddenly grabbed Hannah, pulling her down across Zack's torso. Zack watched as she deeply kissed the redhead, and he could see that she hadn't swallowed his load. Instead she passed it to Hannah as they kissed, and between the sloppy, impassioned kiss, both women swallowed a portion. This was almost enough to make Zack hard again right away. Almost.\n\nBrandi released Hannah and wiped off her mouth, then smiled at Zack.\n\n\"Don't worry baby, we're not finished. To get you nice and hard again, we're gonna give you a show.\"\n\nZack nodded excitedly, still at a loss for words.\n\nThe two women stood up now, and Hannah untied the knot in Brandi's shirt, sliding it off her shoulders and letting it fall to the ground, revealing her perfect breasts. She then slid down the skirt and Brandi kicked it off, leaving her in nothing but the heels and sheer white stockings.\n\nHannah leaned down and began to kiss all over Brandi's breasts, making her nipples rock hard. She took one of them between her lips, nibbling on it with her teeth before repeating this process with the other. Then she left a trail of kisses down the blonde's stomach, finally sinking to her knees. She didn't hesitate to bury her head between Brandi's legs and Brandi threw her head back, golden hair cascading over her shoulders as she felt Hannah's tongue wriggle inside her.\n\nHannah lapped at Brandi's opening with abandon, hungrily, excitedly eating her friend out. She ran her tongue through the soft, moist folds, deep into the hole, and then up around her clit. The flavor washed over her tongue and she found herself always wanting more, passionately lavishing Brandi's pussy, which was now dripping wet.\n\nZack meanwhile was smiling ear to ear watching this unfold. Even though he'd already cum once, he could feel his cock twitching, watching the sexy show being played out before him. He watched as the redhead in the corset and black stockings sat on her knees, ravishing the blonde in her white stockings and heels.\n\nBrandi had trouble balancing on those heels as her entire body shook from the result of her orgasm. Hannah knew what she was doing, and it took no time at all for Brandi to cum. As Hannah smiled up at her friend, Brandi giggled at the juices shimmering on her face.\n\nShe pulled Hannah up and pushed her onto the bed next to Zack. Brandi then slithered on top of her friend, kissing her deeply, tasting herself on Hannah's soft lips.\n\nAs she began to kiss and suck on Hannah's breasts, she slid one hand between her thighs, inserting two fingers into her friends sopping wet pussy. Hannah moaned at the dual sensations of having a warm mouth on her chest and fingers pumping in and out of her tightness.\n\nAs Brandi did this, she positioned herself so that Zack could see her pussy. Her lips were still moist and glistening from Hannah's work. His cock was beginning to grow back to it's full length. As Brandi fingered Hannah, he began to rub his fingers over her white stockings, and this was all the extra edge he needed to return to action.\n\nBrandi grinned when she saw he was fully erect again. She slid down between Hannah's legs, latching onto her pussy and delving her tongue deep within, all the while wiggling her ass at Zack.\n\nZack took this as an invitation and got up on his knees. Taking hold of Brandi's hips, he slowly slid into her pussy, moaning as he felt the lips come apart around his member as it disappeared inside.\n\nBrandi moaned as well, the vibrations carrying into Hannah's pussy and giving her even more pleasure. As she felt Zack begin to fuck her, Brandi again inserted two fingers into the sexy redhead while she wrapped her lips around her clit.\n\nZack couldn't believe his eyes. Here was his hot blonde girlfriend in her white stockings and heels, on her hands and knees as he fucked her doggy style, while her face was buried between a sexy redhead's legs, who was wearing black stockings that matched his own, as well as a pair of stiletto heels.\n\nHe became thankful that he'd already cum once, knowing that this sight would've made him explode again far too soon. Instead he enjoyed the feeling of Brandi's pussy as he continued to thrust within, his entire member now slick with her juices.\n\n\"I want some of that dick,\" Hannah suddenly pouted.\n\nBrandi giggled and pulled her hips forward so that Zack's cock slid out. He pouted as well, having the hot, tight feeling suddenly leave him. He was only sad for a matter of seconds however as Hannah opened her legs wider, inviting him in.\n\nHe crawled between her legs and she wrapped them around his waist as he slid his cock, still wet with Brandi's juices, inside her heated sheathe. The feeling of her tight pussy and the stockings on his back drove him wild, and he began to pump hard and fast.\n\nBrandi meanwhile crawled up to sit on Hannah's face, facing Zack so she could watch him fuck her friend. For the second time today Brandi felt her friends tongue delve into her, and she moaned in tandem with the other two as the fuckfest continued.\n\nZack now felt the familiar feeling of his balls churning. His pumping became more erratic as he thrust into Hannah's tight tunnel.\n\n\"Oh god...I'm gonna cum again. You're so tight...and wet...and hot!\" He moaned.\n\nHe felt Hannah's legs wrap tighter around him pulling him deeper as he approached the point of no return. With a shout, he felt the first jet of cum shoot deep inside her. With a few more thrusts he emptied his entire thick, sticky load deep within the redhead's soaked pussy.\n\nHe slid out and collapsed on the bed next to the two women, trying to catch his breath. In another moment, Hannah's experienced tongue brought Brandi to orgasm as well, but she still hadn't had enough.\n\nBrandi slid back between Hannah's legs, hands gripping her black stockings as she again drove her tongue deep within the redhead, scooping out her and Zack's combined cum in the process. Once she'd finished, she licked her lips and crawled up to cuddle between Zack and Hannah.\n\nThe three lay panting and catching their breaths for a long time.\n\n\"I have to admit,\" Hannah finally began, \"The stockings on him are a nice touch. They feel great.\"\n\n\"Thanks,\" Zack said, and even after all they'd just done, he still felt his cheeks grow warm at this compliment.\n\n\"He'd probably keel over if he saw me in my bodystocking,\" Hannah giggled.\n\n\"Oh my god,\" Zack moaned, considering the possibilities.\n\n\"I need to get myself one too,\" Brandi pondered.\n\nZack nearly fainted.\n\nChapter VI - Zack & Jill\n\nThe three exhausted lovers all slept in together in Zack's bed that night. Once the morning arrived, they got dressed and Zack held the door for them once the two vixens were ready to leave.\n\n\"See you Monday, hot stuff,\" Brandi said with wink.\n\nZack waved them off and then checked the time. Even with everything that happened last night, he still knew he had to be at his boss' house in the afternoon. As he took a shower to get cleaned up, thousands of thoughts raced through his mind. What was she going to do to him today? Was he scared? Excited? Or both? He thought back to that fateful day in her office, when he'd so easily become accustomed to having a thick cock in his mouth. He still didn't find himself attracted to men, but there was something about Harley's sexy body and the combination of her member that did it for him.\n\nAfter drying off, he wondered if he should wear a pair of stockings, and decided on the black fishnets. He took the time to slowly roll them up his legs, running his fingertips across the lace tops as they fit snugly against his thighs.\n\nOvertop of these he pulled up a pair of cargo pants, and slid on a simple black t-shirt over his torso. After lacing up his shoes, he was ready to face whatever lay ahead.\n\n-\n\nHalf an hour later, he'd arrived at Harley's apartment building. He approached the desk and cleared his throat. The clerk looked at him over his glasses.\n\n\"Can I help you, sir?\"\n\n\"I'm uh...here to see Harley. Harley Granger,\" Zack replied, somewhat nervously.\n\n\"Ah yes, she's expecting you.\"\n\nThe clerk paused and turned to the key wall, removing one and sliding it across the top of the counter.\n\n\"Floor 40, room 410.\"\n\n\"Thanks,\" Zack replied, taking the key and moving to the elevator. It was a relatively short trip up until he arrived on the fortieth floor. As soon as the doors opened, he could see that 410 was the room at the very end of the hall. He proceeded down the hallway until he reached the apartment, then paused, looking down at the key in his hand.\n\nFirst he tried to knock, unsure if it was wise to barge right in. There was no reply. He waited several seconds and knocked again. Still nothing. He again looked at the key and shrugged. He placed it in the lock and turned the knob, opening the door. Immediately he could smell an earthy incense burning. And then his eyes fell upon her.\n\nAt the far end of the suite, Harley sat on the sofa in a reclined position, one leg crossed over the other. She was dressed in a pair of black thigh stockings, which were held up by a black garter with pink ribbons on the sides. Covering her intimate areas was a matching set of bra and panties, black lace with pink trim and little bows, that matched the garter. Her feet were clad in a pair of hot pink three-inch heels, and her brunette hair, usually kept up neat in a ponytail, hung down and framed her face perfectly.\n\nZack slowly closed the door behind him, staring at the stunning outfit. \"W-Wow,\" He whispered.\n\n\"Get undressed,\" Harley said simply.\n\n\"Er...yes ma'am.\"\n\nZack stripped out of everything but his stockings, his cock already half-erect just from seeing Harley in her sumptuous attire.\n\nHarley smirked, seeing he was already in a pair of stockings.\n\n\"Take those off,\" She commanded.\n\n\"Oh, er...alright,\" He replied quietly, leaning over to slide both of the fishnets down, leaving them on the floor where he stood.\n\n\"Now then,\" Harley began, the slightest hint of a smile crossing her crimson-painted lips. \"Take this box in the bathroom with you. You'll know what to do.\"\n\nIt was only then Zack noticed that on the stained glass coffee table sat a small black box, covered in ornate silver etched patterns. He raised a brow, and Harley simply stared. Finally he nodded his head and retrieved the box. Looking to his left, he saw the bathroom door open, and went inside, shutting it behind him.\n\nHe set the small chest down on the counter next to the sink and clicked opened the locks. Slowly opening the lid, he peered inside.\n\nThe box was chock full of items. On one side there was a razor and shaving cream, as well as an assortment of makeup. On the other was a set of clothing. He dug through, examining the items. There was a white lace, diamond-patterned camisole with breast inserts, a white lace thong with pink trim, white thigh high stockings with pink bows at the tops, and a pair of three-inch white heels. Underneath all this was a black wig that perfectly matched Zack's natural hair color.\n\n\"She...wants me to wear all this?\" He whispered to himself, removing the razor and looking it over. \"Oh my god...she's trying to make me a woman,\" He realized.\n\nZack stared at himself in the mirror, thinking. Was he really going to do this? Up until this point in his life, he'd only ever had a fetish for stockings. Then again, he remembered, up until a few days ago he'd never had a dick in his mouth either. He ran his fingers over the white stockings, looking down at the contents of the chest again.\n\nThe premise did seem rather kinky, and he couldn't think what harm it could do. After all, his boss was gorgeous and how different could it be from wearing just the stockings, really? Besides, he knew his job was still on the line, and that added extra incentive for him to follow through.\n\n\"Let's do this,\" he nodded to himself in the mirror. He took the razor and shaving cream and turned on the shower. He slowly went through the process of shaving what little body hair he had and then cleaned and dried off.\n\nHe first selected the little white thong and stepped into it, sliding it up so that the fabric fit snugly between his cheeks and the front encased his cock. He had to admit that right away, he enjoyed the feeling of the fabric, and upon looking in the mirror, thought it looked just as sexy as the stockings he loved so much.\n\nHe then took out the makeup and spread it across the counter. Having never worn any before, he knew this would be trial and error. To his surprise though, he found it surprisingly easy to apply, and before he knew it, his face was dolled up with just the right amounts of mascara, liner, pink lipstick, and a hint of blush. He smiled at his dolled up reflection, and was surprised at just how much of a woman he was beginning to look like. The awkward feeling was beginning to wear off as he fitted the wig to his scalp, the black strands perfectly framing his face.\n\nFinally he put on the camisole, and found that the breast inserts made him appear to have a modest B-cup chest. After toying around with them for a moment, he slid on the white thigh highs, and as he felt the familiar silky soft nylon running up his legs, his cock began to harden and stretch the front of the thong.\n\nLastly, he slid his feet into the heels and practiced walking back and forth across the bathroom floor. He stumbled a few times, trying to get used to the added height and balance requirement. He managed to get used to it fairly quickly however, and in no time was walking in them like a pro.\n\nHe took one last look in the mirror to admire his reflection. He could barely tell there was a man underneath the makeup and negliee. He looked just like a sexy virginal woman, dressed in all white with pink accents. He blew a kiss at the mirror and took a deep breath, then exited the bathroom.\n\nHarley still sat comfortably on her couch, her arms now stretched along the back. A smile crept over her features again as she saw Zack emerge, fully shaved and dressed in the sexy attire she'd picked out for him.\n\n\"My oh my Jill, you make one sexy bitch.\"\n\n\"J-jill?\" Zack squeaked.\n\n\"Yes, Jill,\" Harley repeated firmly.\n\nShe uncrossed her legs and slowly spread them, revealing the bulge in her black panties.\n\n\"Come on, Jill. I know you've missed this,\" she paused, running her fingers over the lace, across her panty-clad cock. \"Come get some.\"\n\nZack, now apparently Jill, crossed the short distance to where Harley sat on the sofa and knelt down between her legs. He raised his hands to caress the nylons covering her legs, admiring the silky black material clinging to her perfect skin.",
        "He looked up at Harley, who was simply watching him expectantly. He brought his gaze back down to her panties, looking at the curves her member created in the fabric. He finally reached up and pulled the panties aside, so that Harley's cock was freed of it's confines. He leaned it and kissed the underside of it softly with his pink-painted lips, and Harley moaned.\n\n\"Oh that's nice, Jill,\" she said sweetly. \"I knew you couldn't wait to have more of this.\"\n\nZack was too turned on at this point to be embarrassed any further. He'd dressed up in sexy white lingerie and was now being called Jill, and he didn't even care. All he cared about was this vivacious shemale sitting in front of him, and her growing member in his face.\n\nHe opened his mouth and wrapped his lips around just the head, running his tongue all along the surface. Once it was nice and wet, he brought his head down further, enveloping more of her cock in his warm, wet mouth.\n\n\"Oooh Jill,\" Harley purred. She brought one hand down from the back of the sofa, caressing his cheek.\n\nZack began having the same issue as the first time, only managing to take half of Harley's thick meat before his gag reflex kicked in. As a result, he wrapped one hand around the bottom portion of her dick, pumping it as he continued to slide his lips over the top half. All the while his free hand was still on her leg, rubbing the black stocking.\n\n\"Oh baby, I think you can do better. You're just not trying hard enough. Come on Jill, you're a better cocksucker than that,\" Harley said with a devious smile.\n\nShe grabbed a fistful of the wig hair, and managed to get some of his actual hair in the process, and proceeded to push his head down further. Zack's body convulsed as he gagged and tried to get used to having a cock in his throat. His mouth felt so full and he began to struggle to breathe, but finally Harley pulled him back up so that only the head remained between his lips.\n\nHe took a deep breath and found his head immediately thrust back down. This time it felt like his gag reflex was completely broken as he suddenly felt Harley's cock in his throat, and his lips pressed against her pelvis. Again she held his head here, until he began to have trouble drawing breath, at which point she again let him come back up for air.\n\n\"See Jill, I knew you could do it,\" Harley giggled.\n\nShe released her grip on his hair and Zack took an extra moment to catch his breath. He was now more confident in his ability though, and once he felt ready, he again slid his lips down the soft skin, taking a full third of it within before he had trouble. He found a rhythm, taking the majority of Harley's rock hard cock into his mouth. Saliva began to drip down his chin.\n\nHarley suddenly stopped him however, and he pouted, his mouth feeling so empty now that there was nothing to fill it.\n\n\"Don't worry you little cockslut, we're not done. Not by a long shot,\" Harley said, devious smile still adorning her features.\n\nShe finally stood up, and brought Zack to a standing position with her. She turned so that her back was facing him.\n\n\"Be a dear and take this off, would you?\" She asked, her voice sickeningly sweet.\n\nZack fumbled for a moment with the clasp of the bra before he managed to unhook it. Harley turned back around, slowly slipping the straps off her shoulders. She teasingly held the cups over her breasts for a moment before finally pulling the garment away, casting it off.\n\nZack stared hungrily at her breasts. They were just slightly bigger than Brandi's, with hard, copper-colored nipples. He licked his lips and Harley snickered.\n\n\"Go on. Have at them, Jill,\" she invited.\n\nZack lowered his head and wrapped his lips around her left nipple, biting it gently while he cupped the other globe of soft flesh with his hand. She caressed his cheek while he went to work on her breasts and rock hard nipples, ravishing them both in equal measure and kissing all over the tender flesh.\n\nHarley took his head in both hands and lifted it up. He stared into her brown eyes as she leaned forward and pressed her lips to his. The two shared a passionate, intimate kiss, as their tongues found each other and entwined. Zack could smell her perfume, and the sweet scent perfectly complicated the smell of the incense.\n\nHarley broke the kiss and wrapped her arms around Zack's neck now, staring into his eyes.\n\n\"Are you ready for more, Jill?\" She asked in a tone barely more than a whisper.\n\n\"Yes ma'am,\" Zack whispered back. His head was swimming.\n\n\"Mmm, that's a good little slut,\" Harley purred. She took Zack's hand and led him into the bedroom, where Zack finally realized the scent of the incense was coming from. The room was immaculate. In the center was a king-size bed, covered in red silk sheets. Off to the side was what almost looked like an altar, with several sticks of lit incense in ornate, decorated holders perched on the top. Several candles surrounded these, their flames flickering. On the opposite wall was a closed door, which Zack figured either had to be a closet or master bathroom.\n\nShe led Zack and gently pushed him so that he sat on the edge of the bed.\n\n\"Get me nice and wet again, Jill,\" she commanded.\n\nZack leaned forward without hesitation, taking her cock back between his lips and sliding them over the soft skin. Once he'd thoroughly moistened it, she again withdrew from his mouth, this time pushing him back so that he lay on the bed with his stockinged legs hanging over the edge.\n\n\"Take off your panties,\" she said in a commanding, yet sultry tone. Zack obeyed, slipping the thong down his legs and catching it on one of the sexy white heels, before kicking them off completely. His cock was so hard it pressed against his belly.\n\nHarley moved to the little shrine and unscrewed the lid off of a small jar. Zack could just barely make out the silhouette of a naked woman on the jar but nothing else. The shemale took some of the material from within and slathered it all over her shaft. As she returned to the bed, he could see it now shone with his saliva and the lube she'd applied.\n\n\"Time to make you feel like a woman, Jill,\" Harley said as her devious smile returned.\n\nSuddenly, Zack felt a twinge of fear. He knew what was about to happen, but he realized he wanted it. It was a very conflicting feeling, even after all the events that led up this point. He had never considered going this far, and it never crossed his mind that it would progress to this, even after he'd donned the white lingerie and heels.\n\nStill, deep down, he knew he wanted to feel the sensation. The fear however made him tense up, as he realized it was going to hurt at first, and this made him nervous. Harley however seemed to notice this, and the expression on her face turned softer as she began to run her fingertips along his white stockings.\n\n\"It's alright Jill. It'll only hurt at first. Then you'll love it.\"\n\nZack nodded and took a deep breath, trying to prepare himself for what was to come. The gentle touches on his stocking-clad legs helped him to relax as Harley stepped forward, pressing the slicked head of her shaft against his virgin hole. She was being extraordinarily gentle now, which he was definitely thankful for, as he felt the head slowly slip inside him. Right away he felt like he was being split in two, as his asshole stretched to accommodate it's new visitor.\n\nHarley gave him time to become accustomed to having her head within before she slowly pushed another half inch inside. She could see him wince and knew that he had to get used to the feeling. \"You're so sexy Jill, so tight,\" she encouraged him.\n\nZack could feel his ass opening up as she slid another full inch in, and a searing pain shot up through his spine. \"It hurts,\" He whimpered.\n\n\"Sssh, it'll be alright, baby,\" Harley whispered.\n\nShe slowly slid another inch inside, and while she knew Zack was having trouble growing accustomed to having her thick member inside him, she felt nothing but pleasure as his super tight anus clenched her.\n\nThe pain was finally beginning to wane for Zack. As she slid more and more of her hard cock inside him, he began to enjoy the feeling of it filling him up. The pain slowly subsided and gave way to pleasure as Harley finally reached the brim, her entire length buried in his tight ass.\n\n\"See, that wasn't so bad, was it?\" She cooed, staring down at Zack, dressed up as sexy virginal Jill, still in her white camisole, stockings, and heels.\n\nZack shook his head but remained silent. Even though it was beginning to feel good, he was still having trouble wrapping his head around the fact that his shemale boss' dick was now buried balls deep in his asshole.\n\nHarley slowly, teasingly slid her length out until only the first inch still remained within the tight confines, before pushing back inside, the combination of saliva and lubrication making the tight tunnel feel moist and wet, delivering even more pleasure.\n\n\"Oh god,\" Zack finally let out a moan, unable to hold it in any longer as Harley fucked him. She began to thrust a little faster, pumping in and out of his tight ass. She grabbed his ankles and placed them on her shoulders so that she had a prime view of her cock disappearing into him. The white nylons felt heavenly on her shoulders, and she enjoyed seeing the heels strapped to his feet, right at eye level.\n\nZack was going into sensory overload. He could feel every last inch of the thick cock sliding in and out of his ass, as well as the soft nylons on his legs and the material of the camisole on his chest. He was rock hand himself at all the sensations, and more turned on than he'd ever been in his life.\n\n\"Fuck me, Harley,\" he whispered.\n\nHarley giggled as she continued pumping deep into him.\n\n\"I knew you'd like this Jill, you little slut.\"\n\nJust when he thought it could get no better, he felt her nimble fingers wrap around his cock. She began to jack him off in time with her thrusts, and he groaned, already close to the edge. Precum dripped out over her fingers.\n\n\"Oh Jill, you're so tight, I'm about to cum. Oooooh here it comes!\" Jill shouted, pumping harder into his ass. After a few more rough thrusts, she felt her cock spasm and unload thick jets of cum deep inside him, his tight anal walls clenching her, milking her dry. As Zack felt his ass fill with the hot cum, it became too much, and he arched his back, shooting his own load across Harley's hand and his own stomach.\n\nHarley leaned down, scooping up his cum with her tongue, then she lay on top of him, her cock still lodged deep within, and kissed him deeply, pushing his own cum into his mouth. He was so lightheaded he easily accepted and swallowed, kissing her back.\n\nFinally, she slowly withdrew from Zack's thoroughly fucked ass and lay beside him on the bed, caressing his stockings.\n\n\"I think someone deserves a raise,\" she mused. \"And perhaps a promotion to my personal concierge, as long as you're willing to dress the part.\"\n\nZack turned his head to look at her. He felt so fulfilled after everything that had just happened. He'd gone from a kinky threesome one day, to crossdressing and getting fucked in the ass the next. But now he was being asked to dress up like this in public.\n\n\"I don't know if I'm ready for that,\" he replied hesitantly.\n\n\"Take some time to think it over, Jill. Either way you know your job is safe, and you're welcome to come over any time you want.\" She kissed his cheek and snuggled up next to him. The gentleness of the situation was a definite change from before, when she acted more like a mistress than a lover. Zack enjoyed it nevertheless.\n\n\"I'll think about it,\" he finally answered.\n\nChapter VII - Revelations\n\nZack had trouble falling asleep that night. After he'd stripped out of the lingerie and put his own clothes back on, he felt a strange feeling, almost like he was leaving something behind. Now that he'd made it home and settled into bed, his thoughts kept him awake.\n\nDid he feel guilty about letting his boss dress him up and fuck him? Did he push the boundaries too far, by letting it all happen? He'd always considered himself to be a straight, mostly normal person, aside from his love of stockings. But now, he'd fully dressed as a woman, gone by Jill, and gotten fucked in the ass, and he'd loved it.\n\nStill, something felt off. A nagging feeling gnawed at the back of his brain as he tried to sleep. Had he cheated on Brandi? They were a new couple but with the threesome that had happened, they seemed to be in an open relationship.\n\nHe just couldn't put his finger on what was bothering him. After a lot of tossing and turning, he managed to finally fall asleep, though his alarm woke him just a few hours later. Now Monday morning, he knew he had to return to work, and face both Harley and Brandi.\n\n-\n\nThings seemed to be normal enough however. He barely saw Harley, as she typically remained in her office for most of the day, and Brandi seemed unchanged as well. As the end of the day rolled around, he came around to Brandi's desk.\n\n\"Hey, wanna go out for a drink after work?\"\n\n\"Ms. Granger requested another meeting with me babe, I'm gonna have to take a rain check for now,\" Brandi replied, straightening up her desk.\n\n\"Oh...alright then,\" Zack replied. He gulped, thoughts racing through his mind. Was she going to tell Brandi what had happened? He thought about coming clean right then and there, but couldn't bring himself to do it. \"Have a good meeting.\" He offered before quickly departing.\n\nAfter Brandi had cleaned up her work space, she entered Harley's office. As usual, she sat behind her desk, staring at her computer monitor. Seeing her secretary enter, she paused the video she'd been watching and stood up.\n\n\"Ah Brandi. Thank you for meeting with me again.\"\n\nHarley wasted no time for any further pleasantries. She began unbuttoning her shirt as soon as she'd finished speaking. Brandi was excited to be with her sexy shemale boss again and followed suit, stripping down to nothing but her heels and black thigh highs.\n\nAs Brandi approached, Harley bent her over the desk and began to rub the head of her cock along the slit, which was already moist and warm.\n\n\"You're so wet already,\" Harley remarked.\n\n\"I've been thinking about this since you told me about the meeting this morning,\" Brandi admitted.\n\nHarley easily slipped her throbbing member into Brandi's hot snatch. Even though she was dripping wet, it was still super tight, and Harley moaned as she felt the vaginal muscles contract around her cock as it slid in deeper.\n\n\"Oh fuck yes,\" Brandi moaned.\n\nShe couldn't believe how insatiable she'd become lately. Between her new boyfriend Zack, her college girlfriend Hannah, and her shemale boss Harley, who was currently thrusting in and out of her from behind, she just couldn't get enough. She moaned, fingernails digging into the desk as she gripped it tight, an orgasm rocking her body already.\n\nHarley slowed her thrusts, but continued to pump in and out at a steady pace. Her trademark devious smile crept over her lips as she began to speak. \"Brandi, turn my monitor around and press play.\"\n\n\"Right now?\" Brandi asked, unbelieving.\n\n\"You're going to want to see it,\" Harley replied, giving a particularly hard thrust deep into Brandi to drive her point home.\n\nBrandi lifted her hand to turn the monitor so that she and Harley could both see it. She then pressed play and watched as Harley fucked a raven-haired beauty in white stockings and heels on a large bed covered in red silk sheets. All the while Harley continued pumping into her pussy, digging her nails into her hips as she held on tight.\n\nThen it hit Brandi like a truck. That wasn't a woman. It was Zack! There he was with his stocking-clad legs over their boss' shoulders, in a wig, camisole, makeup, and heels, while she thrust hard into his ass.\n\n\"What the fuck?\" Brandi asked, bewildered.\n\nHarley stopped pumping temporarily, but kept her thick cock firmly lodged deep inside Brandi's clenching pink tunnel.\n\n\"It would seem Zack enjoys a little more than simply wearing stockings,\" Harley thought aloud, slowly pulling her soaked shaft out and then slipping it right back in.\n\n\"That's actually...kind of hot,\" Brandi admitted. \"He looks really sexy dressed up.\"\n\nHarley laughed and began thrusting with earnest again, making Brandi moan.\n\n\"I was hoping, nnngh, you'd say that,\" Harley moaned as she felt her cock spasm. In a few more thrusts, she deposited a sticky load deep inside Brandi's pussy, before slowly letting her cock slide out, a little bit of cum still on the head.\n\nBrandi turned and dropped to her knees, taking it into her mouth and cleaning it off as she'd done the first time they'd done this. She found that she loved the taste of herself on a cock, mixed with the remnants of Harley's own cum.\n\nOnce she'd finished, Harley helped her up and the two began to get dressed. As Harley slid her skirt back on, she spoke.\n\n\"I'm thinking I have him dress up again, while you lie in wait ready to catch him. Then the three of us can have fun together.\"\n\nBrandi thought about this as she slid her shirt back on and began to button it up.\n\n\"I'm on board with this all the way. I bet my friend Hannah would be too.\"\n\n\"Oh, another kinky slut to join us? The more the merrier,\" Harley grinned. \"You and Zack both have the day off work tomorrow. I'll make sure he comes over. You just bring your friend along and be ready for action.\"\n\nBrandi couldn't wait.\n\n-\n\nThat night, Zack sat on his sofa, mindlessly watching tv when his phone rang. He saw that it was Harley calling, and answered nervously, \"Hello?\"\n\n\"Jill, darling,\" Harley began, using a seductive sultry tone, \"You have the day off work tomorrow. I expect you at my suite at noon. Understand?\"\n\n\"Yes ma'am, I'll be there,\" Zack agreed without hesitation.\n\nAs he hung up though, he still felt the familiar nagging feeling picking away at him, as though something were wrong.\n\nLittle did he know that things were actually about to be very right. He had no idea what lay just around the corner for him.\n\nChapter VIII - Down the Rabbit Hole\n\nIt was hard to pinpoint just who was the most excited for the day. Harley of course, as the architect of the orgy, was worked up from the moment she woke up. As the time quickly approached for Brandi and Hannah to arrive, she showered and got herself ready. She slid on a teal, satin thong, tucking her cock neatly into the front. Instead of a bra, she opted for a see-thru, sheer black camisole. She then took the time to slowly slide black thigh high stockings up her legs, and finished with a pair of stiletto heels that matched her thong.\n\nAfter she'd styled her hair and applied makeup, she patiently sat on the couch, waiting for the first arrivals. She'd told the clerk to follow the same protocol as before, and so she simply had to wait for her door to swing open.\n\nHer timing was almost impeccable. Just as soon as she'd gotten comfortable on the sofa in the same pose she'd waited in for Zack, the door opened and there stood Brandi and a sexy redhead, whom Harley had to assume was Hannah.\n\nThe two entered, wearing the same trenchcoats they'd donned the night of the threesome with Zack. After closing the door, they both looked Harley up and down hungrily. Hannah licked her lips.\n\n\"She IS hot,\" she remarked. \"Do you really have a dick?\" She then asked bluntly.\n\nHarley simply smiled and uncrossed her legs, revealing the familiar budge in her thong. Hannah licked her lips again.\n\n\"That is so fucking hot.\"\n\nWithout waiting another moment, Hannah slid off her coat. She stood before Brandi and Harley now in nothing but a pair of black heels, and a black fishnet bodystocking, with holes at the breasts and crotch.\n\n\"Very, very nice,\" Harley said approvingly.",
        "Brandi was next. She slid off the trenchcoat, revealing a very striking outfit. Her bra and panties were black with a pattern of stars across them, and her stockings and garters matched. Her heels however, were standard black stilettos.\n\n\"That is the hottest, nerdiest thing I've ever seen,\" Harley laughed.\n\n\"Hey you said hottest, I'm happy,\" Brandi laughed too.\n\n\"You two better hide. Jill should be here any minute,\" Harley said, leading them into her bedroom.\n\n\"Who's Jill?\" Hannah asked.\n\nHarley laughed again, as she opened up the master bathroom door, letting them inside. Once there, they could see that on one wall was a one-way mirror, and behind it was a camera, no doubt where she'd recorded the scene with herself and Zack.\n\n\"That's what I christened Zack.\"\n\n\"You guys are so fucking kinky,\" Hannah butted in, examining the camera and mirror.\n\n\"You two stay here. When she gets here, I'm going to dress her up nice and pretty, and when we get started, you can pop out and say hello.\"\n\n\"Sounds great,\" Brandi nodded.\n\nHarley returned to the living room, just in time to see the door open and Zack walk in. She wrapped her arms around his waist and pulled him in for a kiss, pressing her lips to his and forcing her tongue between them.\n\n\"I've got your clothes all laid out in the bathroom, Jill. Go get dressed, then meet me in the bedroom,\" she ordered, before spinning on her heels and walking away.\n\n\"Yes ma'am,\" Zack replied with a whisper, before heading into the bathroom and closing the door. Sure enough, laid out on the counter next to the sink was the same set of makeup, as well as a new set of clothing.\n\nHe started with the undergarments first. Today's selection was a hot pink thong and bra, and a pair of white thigh high stockings. After taking a few extra moments to admire his smooth legs in the sheer white nylons, he picked up the sundress that had been left for him to wear. It was pure white, with a floral pattern across it. He slid it up his body and adjusted the straps on his shoulders, seeing that the skirt portion just barely covered his thighs and the tops of the stockings. He then put on the black wig, straightening it and getting it nice and neat so that it looked natural. The final touch was a pair of hot pink heels, that matched the bra and thong. He slid his feet into them, and felt much more comfortable than the first time he'd worn a pair.\n\nHe looked at himself in the mirror and smiled. He was really starting to fall into the role of Jill, an insatiable cockslut who loved wearing soft nylons, pretty bras and panties, and now a sexy little sundress. The uneasy feeling he'd been suffering from since leaving this apartment the first time was finally beginning to subside as he saw himself as a sexy woman who wanted nothing more than to get fucked.\n\nHappy with his appearance, he exited the bathroom and trotted on the sexy pink heels the short distance to the bedroom, where he found Harley laying on the bed. She was sitting with her back against the headboard, with one knee bent to accentuate the black stockings.\n\n\"Oh you look gorgeous, Jill,\" she cooed.\n\n\"Th-thanks,\" Zack replied, trying to make his voice sound more feminine.\n\nHarley spread her legs, showing off the teal thong and the bulge beneath it. Zack eyed it hungrily and crawled onto the bed, slithering between her legs. His bright pink lipstick drew a stark contrast to the dark red color on her lips as they kissed. Zack could feel her nails on the back of his neck, pulling him deeper into the kiss as their tongues met and danced.\n\nZack broke the kiss and lifted up the camisole, which Harley then tossed to the floor, where it lay forgotten. He ravaged her breasts, kissing all over the soft mounds and sucking the nipples into his mouth, making them hard and wet. He then kissed down her toned stomach, his hands finding her stockings, fingertips caressing them gently, loving the feel of the fabric clinging to her legs.\n\nHe finally came to lay between her legs. He kissed her growing shaft through the satin fabric, loving the color and feel of it. He then continued to kiss farther down, along her thighs, to the tips of her stockings. Once he was sure Harley had had enough of the teasing, he worked his way back up, and finally slid the front of the thong aside. After his soft trail of kisses, it had grown to it's full length and sprang free easily.\n\nBrandi and Hannah stood watching through the one way mirror. Seeing it on the tape was one thing, but now seeing it in person, just feet away from where they were hiding, Brandi was having trouble wrapping her head around it. Hannah however was extremely horny watching the scene unfold, and sank to her knees in front of her blonde friend.\n\nBrandi felt her panties being slid aside and then the familiar feeling of a warm tongue on her pussy. She bit her lip to stifle a moan and ran her fingers through Hannah's fiery hair.\n\nMeanwhile Zack had taken Harley's cock between his lips and was working his head up and down, so happy to have her length filling his mouth once again. Harley moaned and thrust her hips up to push deeper into his throat, which he surprisingly took rather well, overcoming his gag reflex.\n\nFinally, while Zack was preoccupied with swallowing her meat, Harley motioned towards the mirror. Behind it, Brandi nudged Hannah's head from between her legs, and helped her stand, kissing her and savoring her own taste on her friend's lips.\n\n\"She's ready for us,\" Brandi whispered.\n\n\"About time,\" Hannah said with a huge smile, licking her lips.\n\nBrandi opened the bathroom door and emerged into the bedroom, with Hannah right next to her. Zack's head shot up and his eyes went wide.\n\n\"B-Brandi! H-H-Hannah!\" He exclaimed.\n\n\"Well hello there, Jill,\" Brandi giggled. Both girls approached the bed as Harley looked on.\n\nZack sat up and his head slowly swiveled to face Harley, who was smiling sweetly.\n\n\"What's going on?\" He asked.\n\n\"I let our little secret slip, and these two kinky sluts wanted in. Oopsies,\" Harley replied with feigned surprise.\n\n\"Y-You aren't mad?\" He asked, looking at Brandi again.\n\n\"I think we both know what we were called into her office for. And besides, you're really hot, Jill,\" she replied.\n\n\"Enough babbling, I want some dick,\" Hannah said bluntly. She crawled onto the bed and lifted Zack's sundress, revealing the hot pink thong.\n\n\"Nice,\" Hannah smirked, pulling the front aside just as Zack had done to Harley's. She then took his cock into her mouth, swallowing the whole thing in one fluid motion.\n\nZack moaned and placed his lips back around Harley's cock, taking it as deep into his throat as he could.\n\nNot to be left out, Brandi slipped out of her panties and bra and crawled on the bed. She stood in front of Harley, who leaned forward and delved her tongue deeply into the blonde's already sopping wet pussy. She lapped up the juices, readily available as Brandi moaned and looked over her shoulder to watch Hannah suck Zack's cock, who in turn was sucking Harley's.\n\nEveryone was beginning to sweat as the sloppy blowjobs and heated cunnilingus continued. Harley pulled her head from between Brandi's thighs and asked, \"Who's ready to get fucked?\"\n\n\"Oh fuck yes, me!\" Hannah volunteered quickly.\n\nEveryone laughed as Zack moved out of the way to allow Hannah access to Harley's cock. The shemale slid down so that she was now comfortably laying on the bed with her head on one of the pillows as Hannah straddled her lap. In another moment she felt as Hannah's slit slid apart as her cock slid inside the tight, wet pussy. Hannah finally came to rest against Harley's pelvis, letting out a sigh of relief as she felt filled to the brim. After a moment of this she began to lift her hips up and down slowly, so that Harley had an excellent view of her cock slipping inside the tight, wet confines of Hannah's cunt.\n\nBrandi watched her friend mount the shemale and begin fucking her like no tomorrow, and she desperately wanted to be filled as well. She lay down on the bed next to Harley, spreading her legs invitingly.\n\n\"Come on Jill, fuck me,\" She purred.\n\nZack slid off the sundress, and tossed it away before crawling between Brandi's legs. He slid his rock hard cock easily into her wet pussy, beginning to thrust excitedly, already worked up by the events that were playing out. What started out as another tryst between himself and his shemale boss had turned into a full-fledged orgy.\n\nThe scene was unbelievable. Harley lay on her back with Hannah bouncing on her thick shemale cock, head thrust back, red hair cascading over her shoulders and back, their stockings rubbing together. Just next to them lay Brandi, with Zack pumping hard and deep into her pussy, their stockings colliding as well as he thrust within her.\n\n\"Fuck yeah!\" Hannah suddenly shouted, thrusting her hips down and remaining squatted on Harley's dick as she felt her orgasm tear through her, her entire body shivering. Not long after this Brandi came as well as Zack, dressed as Jill, expertly pounded her pussy.\n\nHannah slid off of Harley's dick and lay next to her, catching her breath, watching Zack fuck her hot blonde friend. Harley stopped them however. She nudged Zack, who whimpered but nevertheless got the hint, slowly pulling his cock, now shiny with Brandi's juices, from her tight slit.\n\n\"Get on your hands and knees,\" Brandi commanded, biting Zack's earlobe. He did as he was told, moving to the center of the bed. He still had the pink bra on, as well as the thong, which had simply been pulled aside. He felt hotter still having it on than he would've felt naked, realizing he enjoyed being dressed up as much as he loved stockings.\n\nHe felt the familiar feeling of Harley's cock pressing against his asshole, and this time he was so excited he pushed back to meet it. It was slick with Hannah's nectar and easily began to slide into his tight tunnel. Brandi and Hannah both watched as Harley pushed her thick cock deep into Zack's ass, before pulling back and beginning to thrust in and out.\n\n\"This is so fucking hot,\" Hannah said breathlessly.\n\nHannah and Brandi were both still thoroughly worked up as well, and seeing the gorgeous shemale fuck Zack, who looked more like Jill, as he thrust his hips back, helping to impale himself on the thick shaft, only made them hornier.\n\nHannah shoved Brandi onto her back and crawled on top of her in a 69 position, and the two wasted no time in ravishing each others' pussies. Tongues delved deep into the soft pink folds, gathering the sweet nectar that lay within.\n\nZack was already rock hard from crossdressing and Harley pounding into his ass, but seeing Brandi and Hannah 69 drove him wild. He carefully balanced on one hand and brought the other beneath him, and began to jack off rapidly. Harley saw this however and smacked his hand away.\n\n\"Not so fast, Jill,\" she said between heavy breaths, as sweat was forming on her supple body. \"You'll get your turn.\"\n\nHarley began slowing her thrusting, until she was teasingly sliding her cock almost all the way out, and then ever so slowly pushing it all the way back in. After a few strokes like this, she pulled out completely, and spanked Zack's ass.\n\n\"Hannah dear, why don't you lay down and let Zack have a piece of that tight pussy?\" Harley purred, stroking herself.\n\n\"I could go for some more dick,\" she replied happily. She gave a kiss to Brandi's clit before rolling onto her back. Zack was so hard he thought he might explode, and so he quickly crawled atop her, his aching member driving easily and deeply into her cunt.\n\nHe felt like he were in heaven. Here he lay atop a vivacious redhead, clad in a hot pink thong, bra, and heels, as his sheer white nylons rubbed against her fishnet bodystocking. And it was about to get even better.\n\nAs he continued to pump into Hannah's tight, wet pussy, he felt Harley's cock on his asshole again. He kissed Hannah and moaned as he felt the shemale's cock enter him again and begin thrusting. Each time she thrust into his ass, it caused him to pump deeper into Hannah.\n\nBrandi sat next to them as the three fucked, still clad in her black heels and star-pattern black stockings. She feverishly rubbed her clit. She was so wet her fingers were drenched, and she ached to be fucked again. Luckily, she didn't have to wait long.\n\nZack could hold on longer. The combined feeling of Hannah's tight muscles clenching his cock and Harley pumping into his ass, with their stockings all rubbing together drove him over the edge. He groaned and thrust deep into Hannah's pussy. It felt as if a shotgun blast of cum exploded from his cock, drenching the already wet tunnel. Hannah arched her back, cumming almost simultaneously as she felt his sticky load deposited within.\n\nAs Zack lay on top of Hannah, with the pair catching their breaths, Harley slowly slid out of Zack's ass.\n\n\"You didn't think I was going to leave you out, did I?\" She asked, smiling at Brandi.\n\nBrandi quickly took her cock into her mouth, getting it nice and wet again. Then she lay down on her back, pulling her ankles up over her head and gripping her stocking-covered legs.\n\nHarley easily slid her cock into the tight, wet confines, and had a great view of it as Brandi held her legs up. The blonde moaned as the shemale fucked her. She felt so kinky, and after only a minute or so she her body quaked as a powerful orgasm tore through her.\n\nHarley it seemed was finally approaching orgasm as well. Her thrusts became erratic as she pumped into Brandi's pussy.\n\n\"I want you to cum on me,\" Brandi said suddenly. \"I want to feel your hot cum,\" she begged.\n\n\"Oh fuck, you dirty little slut,\" Harley moaned.\n\nAfter just a few more thrusts, she quickly pulled out and began pumping her sticky cock, shooting jets of thick, white cum across Brandi's stomach and breasts. Brandi released her legs, stretching out on the bed and sighing happily. She then felt Hannah and Zack's mouths and tongues all over her body though, lapping up Harley's cum. She laughed and ran her fingers through their hair.\n\nThe four snuggled up together on the bed, all sweaty and thoroughly spent. It took them a long time to catch their breaths, but when they did, Harley spoke.\n\n\"I've never met a more kinky group of sluts.\"\n\nHannah and Brandi laughed.\n\n\"And we've never met a kinky shemale before either,\" Hannah replied.\n\n\"We should get together this weekend, maybe do this again. Make a full night of it. What do you say, Zack?\" Harley asked.\n\n\"Call me Jill,\" he responded, smiling.\n\nHarley couldn't help but grin.\n\nFin"
    ],
    "authorname": "ThighhighMellie",
    "tags": [
        "crossdressing",
        "stockings",
        "blowjob",
        "cunnilingus",
        "heels",
        "lesbian",
        "shemale",
        "tribbing",
        "threesome",
        "orgy"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/down-the-rabbit-hole-3"
}