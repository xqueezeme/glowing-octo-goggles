{
    "title": "Powergasm",
    "pages": [
        "Introduction:\n\nJust like Dr. Herbert Benson's groundbreaking book \"The Relaxation Response\" made Transcendental Meditation more mainstream in the 1970s, we now in the new millennium do the same with the growing popularity of Tantra and concepts relating to sacred sexuality.\n\nAlthough to the dismay of many, Tantra, is not only about sex. Sex really plays a small part in the Tantric universe as many genuine teachers of the subject have pointed out. Therefore, to fully enjoy concepts relating to sexuality, orgasm, and masturbation, without the complexity and confusion of Tantric lore, Powergasm has been streamlined to offer the practitioner an easy and concise technique she or he can use to access the vast cornucopia of extended, and healing orgasm technologies.\n\nIf one wants to study Tantra that\u2019s fine, but using Powergasm one can skip all the esoteric intricacies and get down to the nitty gritty of it all - which is mainly to feel good!\n\nOur philosophy is that anyone can reap the benefits of mind shattering orgasms without having to commit to a rigorous program, or as in the case of \"Tantra\" - shelling out hundreds to thousands of dollars to so called \"Goddesses\" or \"Tantrikas\" that are nothing more then shrewd business persons who have exploited an ancient art in order to make a fast buck for themselves. \n\nThe Powergasm technique can be learned very easily by people of all ages no matter what your ethnic, educational, religious, or financial background is.\n\nActually, the Powergasm technique is as old as time itself. It wasn't invented by anyone because its always been there within the mechanism of the universe, God, our minds, and body. The author of this article did not create it, nor did the mentor who taught it to him. Powergasm is a natural and beautiful phenomenon that can be accessed by all persons attempting to bring it about. It's really been passed down for thousands of years - sometimes know as one thing, and other times know as another. Powergasm is only the current name used in order for people to become more familiar with it in their daily lives.\n\nThink of Powergasm as a meditation practice, as well as a creative visualization exercise that if done every day (at least three or more times a day for some) can greatly expand a persons orgasmic acumen to greater heights. We are not really interested in its mechanisms or how Powergasm works \u2013 we are only here to teach it.\n\n\"Remember, sexual energy and spiritual energy come from the same source. The creative power of sexuality ignites the fire of passion to fill your body with life. You and vitality that accompany this energy connect you with your Eternal Self. Allow your sexuality to be the passion that becomes a powerful spiritual link combining love for yourself and love for your partner with love for the Divine.\"\n\nThe actual Powergasm technique:\n\nStart to masturbate as you normally do. Guys and gals you know what I mean here. The ladies can play with their clits, or use a vibrator. Continue masturbating and don\u2019t focus too much on climaxing at first. Enjoy yourself. Accelerate the experience by fantasying, moaning, and moving around, just have fun. Liberate yourself \u2013 if you fancy your next door neighbor or sister in law, go for it, or if you want to watch a video, do that too \u2013 it\u2019s only in fantasy! So, pleasure yourself in the normal way.\n\nWhen you begin to feel the tinge or wave of orgasm approaching \u2013 stop! This is very important and what most people find hard to do. Although it\u2019s difficult at first to stop your self from cumming, practice makes perfect, and in the long run, the ability to ward of your first orgasms will be a great payoff. Let all orgasmic sensations slowly subside and begin to masturbate again.\n\nKeep on masturbating and when orgasm feels like it is just about to fill your body, stop again!\n\nThis time we are not going to waste that delicious and healing pre orgasmic energy but instead we are going to use it to intensify the super Powergasm we are all working towards.\n\nSo masturbate, feel orgasm approaching, stop don\u2019t come, don\u2019t ejaculate just yet, and then hold that energy and feeling and visualize it as a healing and divine white light - see it spreading from your genitals to all parts of your body. Visualize the pre orgasmic energy as a white light traveling to your heart \u2013 engulfing it with healing, love, and erotic energy. After it has conquered your heart, visualize it going to your head, then to your mind, and then lay there visualizing your whole nude body surrounded by that wonderful white light.\n\nThe trick to achieving the Powergasm technique is to start \u2013 stop \u2013 start \u2013 stop \u2013 start\u2026your masturbation until you have built up enough energy within your genital area. It\u2019s not easy, and many of us are tempted to climax when the first orgasm approaches. If this happens, enjoy it, don\u2019t be so hard on yourself, and remember that you have not failed, but instead that you need a little more practice. One can try and squeeze the PC muscle to stop a premature climax.\n\nA good starting point is to start, feel orgasm approaching, and stop three times then climax. After this, or a little more practice you can increase the number of times you are able to hold on to your climaxes. The more one holds on, say 5, 10, or 20 times in one masturbation session, the better and more explosive your climaxes will be.\n\nSo what happens after you have masturbated, stopped, visualized, and started up again for 5, 10, 20, or more times? Well, by this time you have had stored up enough orgasmic energy that you are ready to let go and release all that goodness thus bringing intense pleasure to your whole body. You will probably feel the greatest orgasm ever followed by a long and loud moan of pleasure. When one finishes climaxing a surge of joy usually comes over your being, and if the Powergasm technique is done correctly you will start to smile then laugh. Why does the laughing happen? Beats us, but we figure it has something to do with the orgasm triggering the release of some chemical in the brain that makes you feel happy and ecstatic. It's like taking a drug - but in this instance, the drug is not harmful but helpful!\n\nOverview of Powergasm technique:\n\nStart to masturbate as usual.\n\nWhen you feel like you\u2019re going to cum, stop!\n\nTake the feeling of the remaining pre orgasmic energy, and visualize it as a white light traveling to your heart, brain and entire body. Visualize the white light of orgasm as a healing modality and pleasure device.\n\nRepeat this as many times as you can. Three, five, ten, twenty or as many times as possible. Start, stop, start\u2026don't forget to bring the energy up to your heart.\n\nWhen you are satisfied with the amount of times you have held your orgasms, or when you can\u2019t resist the urge\u2026climax, let go, release all the energy!\n\nFeel exquisite, congratulate and love yourself for being a lovely erotic being.\n\nRepeat as often as you like.\n\nTell, and teach others this wonderful technique!\n\nKeep it free! \n\nGive freely and see how you will be rewarded. What goes around, come around!\n\nStart the cycle!\n\nWe wish you and your loved ones many happy orgasms!"
    ],
    "authorname": "ErnstBlofeld",
    "tags": [
        "stop start",
        "start stop",
        "orgasmic energy",
        "fill body",
        "white light",
        "orgasm approaching",
        "feel orgasm",
        "energy",
        "time",
        "orgasm"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/powergasm"
}