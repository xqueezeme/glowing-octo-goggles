{
    "title": "My Little Ventrue Pt. 03 Ch. 13",
    "pages": [
        "~~Jack~~\n\n\"No!\" Fiona got up from the corner by the rubble. In all the chaos and commotion, Jack hadn't noticed, but she'd been hiding. Perfectly understandable, he'd be hiding too if he hadn't nearly died twice before; already becoming jaded, ha. But Fiona, normally smiling and bouncing, ran over to Damien, and stood beside him as she pointed her hands at the monster. \"Triss, get out of the way!\"\n\nJack twisted around underneath the spider, and got to his stomach, facing Fiona, as the madness started. The spider goddess appeared, and all eight of her spider legs were pointed at the creature. It was enough to make the monster give pause as Fiona ran at the creature, tiny little Scot woman, frizzy red hair bouncing as she sprinted up to its waist where the beast's human stomach met the spider body, and punched it.\n\nThe spider goddess that shared the same space as the little redhead punched as well, with all eight legs. From so close, Jack could hear the sickening crunch of flesh and exoskeleton being pierced by a host of sharp limbs. And the shriek that followed was just as sickening. For a moment he felt bad, like they were picking on some sort of animal that didn't know better, didn't know it was a menace, didn't know it was being hunted.\n\nFiona didn't seem to feel the same way. Screaming out, she punched the spider again, and again it stumbled, body almost collapsing on Jack as its many legs pushed and dug at the ground around him. Blood poured, trickling down its body, and splashed over Fiona, soaking her jeans and jacket in black and red. And she punched again, as if the very idea that she was taking this thing head on wasn't a concern.\n\nShe took a few steps back, and pointed both her hands at the enormous spider. The demon woman appeared where she was, and Jack could see its many great horns, including the ones that jutted out and backward from where her eyes should have been. He could see the hovering body, the spider dress, the odd limbs, and above all could see the eight blades she sank into the animal.\n\nThe creature shrieked as its endless blood began to pour over the concrete. Jack couldn't see it, not in the dark and the flash of light from the one flashlight, but he could hear it, and feel it as the huge waves of disgusting black liquid splashed over his back and hands. In the flailing and swinging of limbs, the creature vaulted itself toward Fiona, and Jack froze as the titan ran over him at the small girl only three feet before him.\n\nThe beast leaned down and swung its arm outward at her, the bone scythe nearly as large as her whole body. It clubbed her with the back side thank god, but the small woman was still sent through the air like a rag doll. In the flickering black, it looked like nothing more than a ball of moving colors, until Jack heard the crunch of flesh on rock.\n\nFiona landed. She didn't get up.\n\n\"Fuck you! Die!\" Triss, somewhere above him with the spider still between them, started tearing and clawing. He couldn't see it but he could feel the vibrations and weight, feel the rampage of the creature as it started throwing its body around to dislodge the Nosferatu. And the more she slashed and bit and screamed, the more the giant spider monster towering over Jack thrashed around.\n\nAnother minute and he was going to be paste. He picked himself up to a foot and knee, and threw himself along the tunnel path as best he could. Kindred legs sent his tiny body flying, and he landed with a hard bounce as rock and metal greeted his suit and bones. Rolling, rolling, he came to a stop maybe twenty feet from the spinning monster, the Azlu now between him and his friends.\n\nTriss was on top of it, on top of its grotesque and massive human half, with her claws around its neck and her crocodile mouth biting into its skull. Black blood gushed over her teeth and down her clothes, along with bits of spider, and bits of human flesh from the hybrid. Too hard to see, too hard to see a damn fucking thing in the darkness with only the one flashlight, but Athalia still had the light up, and was trying to get up as well.\n\n\"Athalia, stay down! Stay still!\" he said. If she moved it might attack her, and maybe, just maybe, this thing would focus on the things dashing about instead.\n\nHe ran around and looked for his pistol. Nope, gone, he dropped it somewhere, where where. Fuck. Still had the knife though, better than nothing.\n\nNot better than nothing. Running was better than nothing. In the chaos Jack had a moment to peek over at the body on the tracks, Damien's body. He wasn't moving, but he wasn't ash. The monster had put a hole through him, actually through him, clean through his fucking body. There'd been a moment where Jack could see withered things fall out of him; withered was normal, they were Kindred, but to see the things fall out of him, spill, and turn to ash, was not the same thing as knowing they were there.\n\nIf Jack was still alive, he'd be vomiting. But he didn't need to be alive to feel shock, to feel the muscles and brain refuse to work together. That moment of hesitation that'd get you killed, that\u2014\n\nNope, fuck that, fuck that and fuck this. This thing wasn't Viktor or Lucas, this thing was just a thing. A mindless, really big fucking scary thing, but just a thing. Just a fucking thing. Wake up and move!\n\nHe turned around, and sprinted down the tunnel. \"Triss, keep it busy! I'll go get the wolves!\"\n\n\"What the fuck do you think I'm doing!?\" A gargled mess of sounds came out of her mid yell; a mouthful of spider parts and human flesh. But as Jack looked over his shoulder at the raging monster, he could see the thing wasn't slowing down even as the vampire started to get deeper into its meat.\n\nThey couldn't kill this thing. Maybe the Uratha could.\n\nHe sprinted around the bend of the tunnel, toward the sounds of howling, roars, and screams. And fire. Mason had molotovs and a flamethrower, and both would be nigh-instant death if they got him. But a fucking spider monster straight out of a monster flick was behind him, ripping and tearing and killing his friends. He needed their help.\n\n\"Avery! Clara! Fucking someone!\" The only answer he got was more wolf howls, deep and loud enough to echo in the tunnel and shake his brain in its skull. But there was some light around the curve, some orange and red, some fire light. \"Someone, there's another one of these fucking spider things! Someone I\u2014\"\n\nThe walls looked like a Jackson Pollock, covered in splatters of blood of red and black, and mixed with hundreds of immense claw marks. The subway tracks were gone, just shards of metal ripped up and tossed everywhere. The wolves still had their lanterns lying around, but they weren't the biggest source of the light. The biggest source was Mason.\n\nThe wolves were still transformed, still in their Goliath bodies, except for Mason. The man's sack of molotovs was empty, and he held the flamethrower in his hand. A stream of fire left the oddly shaped gun, and while it wasn't the grand explosion of fire Jack had come to expect after seeing them in a hundred movies, that didn't change that the rampaging creature they were dealing with was covered in fire.\n\nCovered in fire and still not dead.\n\nEven as the spider half \u2014 more like spider nine tenths \u2014 of the monster hybrid burned, the werewolves threw themselves at it, at its bone claw arms, at its spider legs, and one of the wolves threw themselves onto the flames of its back. Avery.\n\nThe pack leader sank her claws into its spider back, through the flames that flicked upward along her body, and deep through the exoskeleton. Where there hadn't been enough light to see anything before with the other spider, now Jack raised a hand to block out the flashing waves of amber that scarred his vision. Seeing spots with his eyes closed, and the death cries yanked them back open.\n\nHe was supposed to be doing something, supposed to do more than just stand there and gawk at the nine beasts unleashing hell underneath Dolareido, fire included. But, before the thoughts could break through the shock seared into his eyes, the creature started to move toward him. The giant creature currently covered in werewolves and fire was moving toward him.\n\nHe took a step back. It was all he could figure out, could muster, as the hellfire ran at him. But before the heat devoured him, Avery jumped onto its human half. Big as the creature's human, mutated half was, Avery was just as big in her werewolf body, and she sank her claws down and into the monster's shoulders and neck. Fire continued to spread over its body, over the Uratha, and many had to jump off to stop from catching fire themselves.\n\nNot Avery. The fire enveloped her, over her, encompassed her as she bit down onto the creature's face. Her enormous, monstrous wolf mouth took the spider by the head, and sank its fangs deep. The cry of pain from the abomination mixed with the roaring flames, until it was enough for Jack to flinch. Flinch was good, flinch was a reaction, and he needed more of those. Get back, get the fuck back from the fire you idiot before it catches you. This isn't like with Viktor, there's no explosion to push you away, just pure flame.\n\nAs he took a few more steps away from the chaos, the creature fell onto its stomach with a loud crash, the weight of its body vibrating the tunnels and concrete. It'd fallen forward like someone had tripped it, and a glance around it showed multiple werewolves biting and clawing at its legs, enough of them to yank the creature down onto its stomach while Avery continued to wrestle with its human half. The bone scythe arms couldn't reach her, and thrashed around with less and less ferocity as Avery ripped, tore, and clawed at its shoulders.\n\nSomething. Supposed to be doing something, not watching. Fucking say something!\n\n\"There's another one!\" was all he could manage before the rumbling behind him came to join the rumbling before him.\n\nSeveral of the wolves got up from their death grips on the creature's thrashing legs, and stared at him with a weird mix of confusion and aggression, as if he'd dropped a water balloon on them in surprise. But their surprise turned to shock as the second spider came around the corner with all the grace of a steam train gone off the rails. The creature's mass, unhindered by the paltry damage Jack and his friends had done, crashed into the wall on the outside of the tunnel turn, but the spider pushed its legs against the wall as equally as the floor and catapulted itself toward the group of new targets.\n\nWas Damien still alive? Where was Beatrice? She wasn't on the creature anymore. Was Fiona alive? Were any of them going to live through this insanity? Stop thinking and move!\n\nJack threw himself onto his stomach. The slam of his weight against concrete and metal was nothing compared to what would have happened if the creature hit him. And the creature ran over him toward the wolves, ignoring him, bleeding and hairy spider body flying over him. All Jack could do was stare on toward the wolves as the new creature bowled them over.\n\nIt didn't care about its companion, or the fire. It cared about killing, far as Jack could tell, and as the monster crashed into the body of its fellow monster, the werewolves did their best to compensate. But Jack could see it in their eyes, their movements, even Avery's as she jumped off the defeated and almost-still creature. None of them had expected this.\n\nHow Avery was not on fire, Jack couldn't tell, but the woman's claws had a strange glow to them, almost amber like the fire. And the glow vanished as the new monster ran her down, titan body colliding with hers and sending her flying backward until Jack heard her meat and bone crack and crunch against the tunnel floor.\n\nThe pack stood there for a second, and many of them cast quick glances at each other. A second too long, and the spider charged over them, feet and mass pushing aside the wriggling, burning body of the other. The new spider slashed out with its scythe arms while its giant legs shoved the flaming body of its companion aside, wreaking destruction like breathing. And sure enough, one of the werewolves didn't dodge.\n\nThe sound of blade cutting down through bone, muscle, organs and skin, all in the blink of an eye, was familiar. Jack had heard it before, when Viktor had cut him from forehead to crotch, sank a blade an inch through his body. Only reason he survived was because he was Kindred. But no Kindred could survive getting cut in half, not vertically. The wolf woman fell apart, two sides collapsing inward with the momentum and mass of the creature's blade arm, and splattering guts over the concrete.\n\nThe body parts began to transform back into a human, clothes and skin and organs and all.\n\nThe pack freaked. Howls turned into weird, half-roar half-scream mixtures. Their eyes opened wide and bloodied chops drooled havoc as they threw themselves at the new enemy.\n\nJack looked on. Hard to tell what was going on, with two spider monsters fighting for space, one nearly dead and on fire, but at least the far more lively one had gone past Jack and now stood between the wolves. Stood, spun, slashed, screamed, the creature was insane, ripping the walls apart as much as its new prey.\n\nBut the werewolves didn't care, they'd gone berserk. Blood filled the air, burnt flesh, ash, and it whipped everyone into a frenzy of bloodlust. Not the sort of bloodlust a Kindred had; Jack new what that felt like. This was different, this was the bloodlust people got when every fiber of their being wanted to kill, was going to kill, when the primal instinct takes over and the whole of your existence focuses into a single thought and action. The slaughter.\n\nMason joined them, dropping the \u2014 now probably empty \u2014 flamethrower, and erupting into his transformation with all haste. Seven titans of claw threw themselves at the monster, two companions missing, Avery a broken mess in the darkness, and now a friend dead. It was not a good night for the Uratha, and it was only getting worse.\n\nOne of the wolves started to climb the creature's side, but the Azlu spun around and caught the wolf alongside the body with a claw. It cut deep, maybe six inches through flesh and bone, and sent the werewolf spinning through the air, adding to the red that decorated the lacerated walls. Another wolf jumped it, and again the creature spun. How could something so massive move so quickly? It got this wolf through the guts with its scythe arm, skewering them out through the back before tossing them aside.\n\nThe tunnel started to shake. Vibrations ripped through the walls and ceiling, cracked them like kitchen plates, sent dirt and rubble down on the madness around Jack. Down onto the pack and their target.\n\nLike a whip crack for the brain. Get back, go find the others, see if Damien survived, if Fiona survived, see where Triss was.\n\nHe almost turned around, but a single step back summoned bad luck like a reaper to the door. The creature's frantic movement came his way again, spinning and turning, eight legs and two blade arms stabbing and crashing against the walls and ceiling. Each wolf that managed to get onto its back earned more death cries from it, and it responded with claws flinging wild, cutting deep into the concrete and metal. And it was all coming Jack's way.\n\nThe ceiling began to collapse. Rocks fell onto them, all of them. Gigantic slabs cracked open against the floor around Jack's feet, and the tiny Ventrue threw himself to the side as one bigger than him nearly crushed him. He was becoming intimately familiar with concrete, and sighed as again the hard surface greeted him with all the softness of... concrete.\n\nThe creature turned to him. With all the wolves and chaos going on, how it noticed him and him specifically, Jack couldn't fathom, but in the tunnel barely wide and tall enough to fit the monster, it turned to look at little him sitting against the wall, and it screamed. But the ceiling was falling in, caving in, and the wall Jack had his back to started to collapse backward. The spider's arms raised again, and for a moment Jack thought it was going to slice him in half like that woman he'd seen before. But it tried to stop the ceiling instead, arms catching an immense chunk of rock the size of a car.\n\nAnd it succeeded. Easily. But it was the chunk after that, and after that that beat the monster down, ripped into both its bodies, and made the creature fall forward toward Jack.\n\nThe world went black as it fell onto him. Something behind him gave way, but in the ear-splitting destruction and carnage, he couldn't hear it. He could feel something though, feel a wall crumble, feel the brick-shape of it fall backward, and him with it. And then the excruciating pain of having his back pressed to slabs of the hard material.\n\nBut it was enough to get moving, even as the spider collapsed and pressed its abdomen down against him, where the human and spider mutant merged. Heavy, oh god so fucking heavy. He poured his vitae into his limbs, and pushed, pushed until he thought his wrists would snap and his elbows would pop. But with some wiggling and shifting, he pushed against the monster's body hard enough to get himself out from underneath its stomach.\n\nAnd into darkness. The wall collapsed; hell, everything was collapsing. And the flickering light from the fire was buried in rubble in moments. Only the lanterns the wolves had brought with them still lit the area, but all Jack had of that was minor reflections against stone. He was in a new area.\n\nHe kept backing up, a glance over his shoulder proving his fear. There was nothing, just black, just empty black. The ground beneath him wasn't level, no smooth surfaces, and as far as he could tell the collapsing tunnel was in front of him only, not in the new room he'd been pushed into. So, something carved into the earth then, dug out. Like a den.\n\nOh good fucking god he was in something's den.\n\nHe squeezed his left hand. Knife, the knife was there. Somehow he'd managed to pick it back up the half a dozen times he'd fallen. He put it into his right hand, and continued to back away from the large opening the spider creature was tearing through.\n\nThe wolves were relentless. They bit and chewed and clawed at the creature, even as rocks fell on them, even as the tunnel continued to crumble around them. Jack stared on as slabs of concrete and steel rods rained on them, crushed some of them, their limbs, their bodies. They didn't stop. They sank their fangs into the spider, and one of the large wolves managed to rip a leg twice as long as the werewolf was tall from the spider's body. The monster's shrieks echoed in the chamber Jack had backed into, that the monster was crawling into, that the werewolves were being dragged into.\n\nEventually Jack's back found rock and dirt. So much softer than concrete. He touched it with his open hand, and gulped as he felt something too soft. Spider silk. No need to look, not that he'd be able to see it in the darkness. But after having touched, tripped on, gotten stuck in, and unfortunately tasted spiderweb in this unfortunate and, as predicted, suicidal mission into the tunnels, he was starting to recognize it on contact.\n\nAnd as a tiny ray of light managed to break through the crumbling walls, he noticed some white shapes, hanging from the ceiling. Cocoon shapes. Human bodies, wrapped in webbing.\n\nThe wolves hadn't predicted this had they? They seemed just as surprised and confused as he was. They'd expected a spider monster, but they hadn't expected two. Though they'd long given up caring about the confusion, far as Jack could tell, as the wolves threw themselves onto the monster and tore into it.\n\nBut the monster wasn't getting slower. Maybe that's why they needed fire? Jack had stabbed this thing, him and Damien had sunk easily a hundred bullets into it, and now it had half a dozen titans of carnage ripping into it, and it still wasn't going down. Worse, it was still heading toward him, slashing and cutting into the werewolves while dragging its enormous body through the rubble and rock toward the little Ventrue.",
        "So he turned and kept moving. Occasional flashes of light from above exposed the dug tunnel ahead, bits of moonlight or streetlight maybe showing through some old drain pipes or cracks in old, abandoned tunnels that were still lit. Just enough light for him to see, if only for the split moment it occasionally streaked his surroundings. Nothing but rock, with the occasional bit of root or vine, the occasional worm, occasional insect.\n\nA flicker of light let him see movement below him, and he stepped on it with a quick snap. A spider. For a moment, he expected to hear the animal shriek louder than it already was. Either it didn't care about a random spider, or its shriek volume was already maxed out.\n\nMore of the webbing greeted him, but in the dark he couldn't see shit, just shadows and dark colors. Enough to at least dodge a few of the webs, but others found his feet, his legs, and one cut across his chest, big webs, enough to give his body pause before his weight pushed through. The texture was all wrong, like nothing a spider would make, and touching it made him shiver worse than a spider crawling down his back. It was all wrong. What the fuck was this thing?\n\nShrieking yanked his head back, and he choked on a scream as the creature jammed its body into the dug tunnel. It fit, just barely, and from how it moved, it looked like it was familiar with the den tunnel, familiar with the pressing walls and the height of the ceiling. Guess it was the one that dug it then.\n\nBut the spider didn't get far. It cried out and turned its human half around as much as it could to slash out at the wolves biting and clawing at its body. One of them climbed over its spider back onto the human half, and did her best to grab its shoulders, pin it, shred and tear open its neck. She succeeded, and human flesh came off in chunks, only to heal. Not heal in seconds, but fast enough Jack could see the wounds close between each flash of light that managed to reach them.\n\n\"Go! Run!\"\n\nIt was Clara. She barked at him, the words almost lost in the inhuman shape of her mouth.\n\n\"Where the fuck do I go!? I can't see anything!\"\n\n\"Try\u2014\" Her voice came to a sudden halt as the monster's claw managed to reach up and over her, and come down, a giant trying to throw a pest off its back. It succeeded, and the titan wolf landed in front of Jack on her back, head closer to the creature than him.\n\nShe got up and turned to face it, backing up and snarling, barking, roaring at the spider as it came closer despite the host of wolves slashing and clawing at its body. But, at least now Jack had her between him and the animal coming to kill them all.\n\n\"Get back.\" Her arm came out, and she reached down with her hand \u2014 fucking god a giant hand of claws and blood \u2014 to push back against his chest. \"You found. Nest.\"\n\n\"Wonderful! Fucking wonderful! I thought the nest was the tunnel we just came from!\" He did as she asked, and kept backing up. The spider lunged at them, but the tunnel couldn't fit the motion. Big enough for the creature to crawl through, but it was smaller than the subway tunnel, small enough to keep the creature from leaping.\n\nClara ducked the sideways slash, and stepped beside the following vertical slash. Big bad wolf was doing a dance, but Jack could only see freeze frames of it as they backed away through the tiny lights that managed to reach them.\n\nThe light! Fuck, the light coming from above meant there had to be some way to get to it, break through the layer, get up and out of the spider's lair. It had to mean that. Fucking had to. He was due some good luck right about now.\n\n\"Climb!\" He reached out for the wall beside him, and fell.\n\nA strange sensation when you reach for something expecting to go up, but you go down. Vertigo. Whole world flips upside down and you feel every instinct for what's up or down just vanish. Dizzy to the bone. And if you're falling for longer than you think you should, it's like the world has just imploded in your brain.\n\nAnd it exploded when his back and skull collided with the ground, after cutting through a couple inches of water.\n\nHe sat up, panic gripping him, wrenching his heart up through his throat as he prepared to sink. But the water was genuinely only a couple inches deep, and he forced himself to stand as he looked around.\n\n\"... mother fucking hell.\"\n\nA waterway. A really, really, really big, old waterway. A vertical one that cut nearly a hundred feet up, like some sort of enormous drainage sewer, something that could handle flood levels of water if Dolareido ever got hit with that much rain. And as he stood, he turned around to look at their new area; like a fucking arena, round walls surrounding them, and a sky-high ceiling.\n\nThere were some tunnels that connected to the top of the vertical drain, way out of reach, with grating blocking them off no doubt. Course Clara would be able to open them, if they could climb up to reach them. The concrete bricks around them were smooth-ish, and not something he could climb, but werewolf claws could climb them probably, if she could sink her claws into the concrete.\n\nHis new partner in this chaos fell into the water with him, but at least she managed to turn and land on her feet. Like a cat. If he was Triss, he'd make the joke.\n\nTriss. Fuck, Triss, was she alive?\n\n\"Did you see if any of my friends were alive?\" he said.\n\nClara, still in her werewolf form, walked over to him, water and blood dripping down from her fur. He could see again thank god, now that the very old, very large manhole above cast some light down the massive tunnel hole to them. In the dark for as long as he'd been, a little light went a long way. And from so close, he did a double take on Clara's body. Much as she was a tall, muscular werewolf, she had the curves of a woman too. Weird thought to have, but there it was.\n\n\"No.\" The she-Goliath stared up at the hole they'd fallen down from. The hole was ten feet up, something that'd been dug out of the wall, based on how weirdly the concrete was broken, and claw marks where the wall was opened up. \"You. Escape?\"\n\nHe pointed at the drainage holes around the base of the main drainage tunnel, near their feet. All of them were quite short. The grating covering them would be no problem for a werewolf to remove, but only a foot wide meant the small exits were just there to taunt them.\n\n\"Maybe the drains above us? They're much bigger, we can\u2014\"\n\nScreams cut through their reprieve. The spider creature reached the tunnel exit, or entrance, and vaulted toward them. Or at least it tried to. Three of the wolf titans were at its side, and with claws wrapped around the beast's arms, they braced their feet against the walls to keep it from escaping the tunnel. Easier prey, Jack imagined, when the giant creature couldn't turn around very well.\n\nJack stared up at the menace trying to get them. Him. It was trying to get him. The fuck did he do? He did go into its nest, and he was the first one to do that, maybe that was why? The crazed monster's human eyes were staring death into him, and its mismatched arrangement of spiders eyes over its temples and forehead looked more like nebulae of obsidian death than eyes.\n\n\"Let's go.\" Clara reached out, picked him up, and threw him onto her back like throwing on a book bag, with about as much grace as well. But the impact of his small body against her fur was surprisingly nice, compared to all the concrete he'd been hitting lately. Soft.\n\n\"Wait, your friends. Shouldn't you help them? I can take care of myself.\"\n\n\"Idiot. Shut up,\" she barked. The words were harsh, guttural, a struggle for her chops to say. But good enough to get the point across. The giant wolf ran up to the wall of the vertical tunnel furthest from the spider, and slammed both hands into the concrete. Inertia hit Jack hard enough to flatten him against Clara's back, and bounce, before the wolf started to climb. She got up a foot, and slammed her claws into the concrete hard enough to sink them into it an inch.\n\nIt was like a scene from a cartoon. She made a grunting sound for each foot she climbed, and they grew louder as she her feet lifted off the floor, and she had to carry all her weight and his weight on one hand at a time between each new hold she made. He'd half expected her to just jump, or maybe throw him up there first. But neither would have been a sure thing. Climbing up there was a sure thing.\n\nThe spider landed onto the sewer drain floor, its thrashing weight sending dirty water splashing along the walls and high up to where Clara was scaling the concrete. Werewolves jumped in after it, three of them. Not seven or six, just three. And those three were covered in blood, leaking it, even as their wounds were closing with some insane healing only an elder Kindred could match. Staring down at them, with his hands hooked around the werewolf's shoulders, Jack could only wince as the three remaining wolves shrank as Clara took him higher and higher.\n\nKindred generally lost their fear of heights after a while. You'd need to fall a couple floors to hurt an ankle, and a couple more on top of that to even risk injury. But the higher he and Clara went up, the more he found himself terrified of falling as the spider started crawling after them.\n\nAgain, it didn't get far. As its spider legs started to dig into the concrete, and its scythe arms cut into it like soft dirt, the three wolves still chasing it sank their teeth into its spider limbs. Big as the creature was, it wasn't strong enough to climb after him with three werewolves biting and clawing at its legs.\n\nBut the three wolves lasted only moments. The spider swung its legs outward, hard, and now with more than enough room in the huge drain tunnel, it put its weight into the throws. Each wolf landed against concrete with a thud hard enough Jack could hear the bones break. And each wolf slumped down onto the water like broken toys. Still in werewolf form though, and guessing from what happened to the one that'd been split in half, if they died they turned back into a human.\n\nMemory whip cracked his brain. One of them had died earlier, split in half, like a fucking tomato under a knife. Fuck, this was bad. So bad, bad for so many more reasons than just him coming down into the tunnels.\n\nClara reached the edge of the alcove above them, and pulled them both up with a quick hop before setting him down. Sure enough there were metal grates blocking their path, but without so much as a skipped beat, Clara ripped them out of the tunnel walls and tossed the metal bars aside. Too hard maybe, as the bars broke apart and shattered over the small tunnel floor.\n\n\"Go!\"\n\nHe started toward the tunnel. Typical sewer tunnel, which meant the city was above, which meant manholes and some ladders up ahead.\n\n\"What about you?\"\n\n\"Must stay. Kill. Azlu must die.\"\n\n\"It's going to kill all of you!\"\n\nThe titan stood over him, glared down at him with animal eyes, and set her blood-soaked hands on his shoulders. So fucking huge, she seemed more like a standing grizzly bear from so close.\n\n\"Our hunt. Go.\"\n\n\"What about my friends? They might be dead! I have to go back and get them.\" Because stupidity levels were sky high and any semblance of intelligent decision making was thrown out the window.\n\n\"Maybe. But if Azlu lives...\" She sighed and shook her head before leaning down toward him. The breath of a werewolf; smelled like spider and blood. \"Stay out of way.\"\n\nAnother roar pulled both their attention back to the tunnel, and they looked down as another werewolf jumped from the hole the spider monster had carved. Avery. Her claws were glowing amber again, her eyes too, and she had a subtle flicker of red on the tip of her fur. And she threw herself up toward the spider already halfway up the wall.\n\nApparently being tossed hard and far enough to break every bone in the body wasn't enough to bring her down. She roared at the prey before landing on it, and her glowing claws sank through the shell of the creature's spider body like someone cutting metal with a blow torch. He almost expected to see flames as Avery's claws dug in, and started to drag down through the creature's body from her own weight, before at last stopping after a few feet of evisceration. The monster screamed the whole way, but did not stop crawling upward, toward little Jack and his new bodyguard.\n\n\"Um... her claws look like they're on fire.\"\n\nClara snorted, put her hand against his chest, and started pushing him down the tunnel again. \"Go!\"\n\n\"I can't just go! This thing is in the fucking tunnels, what the fuck happens if it escapes?\"\n\nClara snarled and shook her head. \"No time! Go! Tell Prince!\"\n\nThe Prince could help, right? She'd march a hundred humans down here under her spell with torches, and they'd purge the whole damn place. Yeah, good plan, go get the Prince. And hope to god in the mean time his friends didn't die? It'd take the Prince a day at least to get that set up, and two of his three friends would be sleeping helpless during the day. He doubted the Azlu gave a shit about night cycles.\n\nClara shook her head and shoved him again. \"Stop thinking. Can't save friends. Go!\"\n\n\"And what about you? There's two of you left!\"\n\nShe leaned in, put her werewolf face two inches from his, and licked him. Fucking. Licked him.\n\nFor an infinitesimally small amount of time, he wanted to laugh. A dog was licking him. Humor shattered as the snarling and roaring and screaming howls filled the background while the giant werewolf in front of him stood upright again, and pat him on the shoulder.\n\n\"Get Prince. Kill Azlu.\"\n\nAnd then she turned around, and jumped down. Her screams mixed with Avery's a second later, but Jack was some ten feet down the exit, away from the tunnel's opening where it connected with the drainage sewer the monster was in. Couldn't see, could only imagine Clara getting ripped to shreds.\n\nLeave. Do what Clara said. Everyone had gone haywire when a second monster showed up. Not one of the wolves looked even slightly prepared for dealing with a second one of these monsters. And it'd cost one of them their lives. Their hunt was ruined, and Jack's attempt to find Natasha ruined along with them. Fiona being proved innocent was of little comfort at this point. \n\nMore screams yanked his eyes away from his exit, and back toward the main drainage shaft. Painful screams, from wolves, more than just two as well. Maybe some of the others had joined in from the subway? Or the Uratha the spider had thrown into the walls of the sewer were back on their feet? Judging from the sounds, they weren't helping very much.\n\nHe crawled over to the tunnel edge that looked over the sewer. Literally crawled, on hands and knees, dirty water joining the mess of dirt and dust on his clothes. The suit was ruined anyway. He poked his head out over the edge, and bit down on his teeth. Fuck, his teeth! Pain racked his brain, and he squeezed his eyes shut until he forced it down. The teeth would regrow far better once he slept come the morning, if he lived until morning.\n\nFour werewolves circled the spider. The three it had thrown into the walls were still down, but breathing, moving, struggling to get up. One of them managed, but his leg gave out from under him, shin bending almost ninety degrees in a spot very much not a joint. He tried again, and with an audible crunch, the leg snapped into place.\n\nThese fucking werewolves were practically immortal, healing in seconds and refusing to get beaten down. Barring getting split in half, how the fuck did you kill one of these things? Fucking silver?\n\nJack reached for his knife, and considered\u2014where the fuck was his knife? He fumbled around for it, pulled back and crawled around on his knees through the dark, hands swiping left and right in the inch-deep water. Knife knife where the fuck was the knife. \n\nGritting his teeth\u2014fuck his teeth! Not gritting his teeth, but grimacing hard enough to hurt his cheeks, he poked his head out over the edge of his escape route into the death pit below. Something was glimmering, shiny in the water, catching the rays of light that came in from above. His god damn fucking knife.\n\nAvery waited until the spider turned to face one of her pack mates, and then she threw herself at the bleeding creature. But it was ready for her this time and her burning claws, and spun around to face her, back of its claw arm hitting her head. Or at least it looked like that, but the spider found itself unable to turn as easily as a werewolf dangled from his arm. The woman had taken the ridiculous blow in the mouth, the same blow that had sent her flying earlier, and bit down.\n\nAnd Jack thought his mouth hurt. Hard to see from such a height, eighty feet up at least, but he was sure bits of her teeth shattered and went flying. But she bit down and didn't let go, even as the monster threw his arm around left and right hard enough to swing her like a cat latched onto a sleeve. She managed to get her hands around the weird bone weapon of the creature, but that was it, all she could manage as it rampaged around the base of the sewer.\n\nThe other wolves jumped in, going for its seven remaining spider legs. Maybe too shocked by the fact one of the wolves had latched onto its arm, the monster could only stomp around, and did little to stop the other wolves from latching onto its many limbs. They pulled at them with claw and tooth, and with enough legs yanked out from under it, the creature fell onto its belly.\n\nThe others continued to pull and bite, doing their best to try and rip more of its legs off; no good, whatever this monster was made of, it refused to break. But it was down, unable to stand, unable to spin and attack nearly as easily. Queue for Clara to jump the spider's side, and start digging into its hairy exoskeleton once again.\n\nAvery couldn't let go of the arm though. Her claws and eyes glowed with that strange red that seemed to make her claws cut with fire, but she couldn't use them. Every attempt to slash and swipe at the monster's human half was futile as the spider creature kept her at arm's length. It was up to Clara to kill it, and she wasn't having the same effect Jack had seen Avery cause when she'd mounted the last one.\n\nAt least the creature had forgotten about Jack. Hard to enjoy as he watched the monster start to rip itself free of the werewolves, spider limbs tossing aside the wolves that clung to it, one beast at a time. Clara was on its back, trying to reach its human half, trying to get to its head to start clawing, but the creature bucked so much she had to latch onto its spider body with all four sets of claws. And the spider, perhaps getting smarter as the fight went on, slammed its captured bone arm against the sewer floor.\n\nWater and blood splashed as Avery's body collided with the floor. When the water settled, she was still holding on, and her claws started to tear at the monster's bone arm. No good, even her glowing claws couldn't do much to whatever this creature's weapons were made of. And again, it slammed its arm down so Avery's body swung through the air before crashing into the concrete beneath her. And again, and again, and again.\n\nThe glow in her eyes vanished, and the glow of her claws soon after. When the spider lifted its arm again, the werewolf leader was no longer attached to it, and the arachnid screeched its triumph as it started to swing its human half around with full speed, full freedom.\n\nFirst it went for the Uratha pulling on its legs. They were faster to dodge this time, now that one of their friends had died earlier to them. But faster wasn't fast enough to completely avoid this thing's ridiculous speed, and the first wolf took the slash down the side, almost halfway through the torso. The wolf fell away, half curled up in a ball in the sewer water, half dragging itself to a spot away from the rampage. Another wolf tried to replace Avery as anchor, and leaped for the bone scythe, but the spider spun its torso to catch the wolf in the back with the flat side of its other arm. The crack was audible, nauseating, and the wolf fell over like a bag of sand. And the other wolf still on its spider leg did her best to keep the creature from turning around completely. But the monster was too big, too heavy, too strong, and once back to standing on its seven other legs, had no trouble flicking her away and sending her into the concrete once again, again hard enough Jack could hear things break and see the concrete crack.",
        "Only Clara was left, and she roared her frustration as she lunged for the human half of the body. She managed it this time, and got her claws into its back before trying to get her teeth into its skull. She really, really wanted to get its head.\n\nBut the monster was bucking around again and throwing itself against the walls. The werewolves may have had a hard time colliding with solid concrete at such velocities over and over and over, but it barely phased the spider. It crashed into the wall again, and then galloped into the wall on the other side with more speed, angling its human half so both it and the werewolf slammed into concrete, hard enough to crack, and dent it.\n\nOne final crush was too much for Clara, and the werewolf fell to the ground, on her back and butt against the cracked wall around her. She stared up at the spider, even as it glared down at her in return with its myriad of spider eyes, many of them cut open or destroyed, and regenerating in front of her.\n\nThe spider reached forward with two of its spider legs to pin the woman against the wall, limbs skewering through her shoulders and into the concrete behind her. She howled, a defeated sound, a whining dog sound that made Jack's heart fucking break, even if it was deeper and halfway to a roar. What the fuck was the spider doing though? It brought in the tail of its spider body's abdomen, and set it against the pinned wolf's stomach.\n\nOh god it was going to cocoon her and eat her.\n\nOk ok ok, what to do what to do. Fuck what to do. With Viktor and Tony, he'd just reacted, dragged his bleeding ass across the floor until he found something he could do to stop them. With Lucas, he'd just reacted, threw himself in front of Damien before the man could kill the love of his life. Blind luck had saved him with Viktor and Tony; they hadn't expected an explosion, hadn't expected fire. Blind luck had saved him with Lucas; Damien was a broken man before Jack laid eyes on him, and found the man easy to dominate. Try to avoid the blind luck approach this time.\n\nHe got up, and looked around. No knife, but Clara had ripped the bars that barred the tunnel path behind him. He ran over to them; yeap, totally broken apart. And one of the broken off parts was a good three feet long, a thin metal bar maybe an inch wide, with the ends jagged and sharp.\n\nBest he was going to get. He picked up the bar and walked back to the edge of the tunnel. Clara was barking at the spider, but for all her struggling and wriggling, the huge creature was layering her in enough webbing to blanket her legs completely, and wrapped too. Just like Fiona had done to Athalia's leg, but in much thicker layers. And her howls turned into screams as the creature plucked its legs from the wall, but still skewered through her shoulders, and started to rotate her. Like a scene from the nature channel.\n\nLast chance Jack. Do what she said, get out and tell the others.\n\nFuck that, the other Kindred would figure out what happened when a bunch of their members were gone, and so were the werewolves. They'd come to the tunnels, find all this crap, and take care of it. He didn't need to go back and tell them about it, Clara was just trying to save his life.\n\nAnd if he left, Triss and Damien and Fiona and even that bitch Athalia were as good as dead. And so was Clara. And he really wanted to save Clara.\n\nHe touched his cheek where she'd licked him, and looked down at the drop. Sixty feet, seventy, eighty feet? Fuck it could have been a hundred feet for all he knew. He looked at the bar in his hand, squeezed it a few times, got a good grip on it. Him against this thing? This thing that'd been shot a hundred times, cut open, stabbed, bitten, clawed into, ripped and shredded and refused to go down. Even as it regenerated before his eyes, its regeneration wasn't enough to cover all the wounds, and the spider bled black and red everywhere it moved; still didn't go down though.\n\nMaybe an ancilla could fight this thing in its wounded state. Maybe. Julias would probably get his ass handed to him; Ventrue were talkers, rarely doers. And here he was, with a piece of metal in his hand, about to do something really, really fucking stupid.\n\nWhat happened to him? What happened to that kid that just wanted to go through life playing it safe? He could still remember the conversation he had with Julias, that night the man proposed to him the deal of a lifetime. What was he willing to do to destroy his enemies? At the time, the worst he could imagine doing to someone was ruining their life financially, leaving them broke and without an asset to their name. To his enemies? Maybe kill someone in self defense. Apparently he was willing to do a lot more, if it was for a friend.\n\nFuck, Antoinette was going to kill him if this monster didn't do it first.\n\nHe squeezed the metal bar a few more times, and looked down. The spider wasn't moving much, human half holding still as the spider half was raised up slightly, legs twisting and turning Clara over and over as he cocooned her. Now or never, now or fucking never.\n\nHe jumped.\n\nOn the way down, he remembered a conversation with Fiona. She'd been nervous about seeing the Primogen, and it had her in smiles. Said it was how she dealt with it, with anxiety and fear, like with skydiving.\n\nJack was most definitely not smiling on the way down. It was an interesting sensation, free falling. He'd expected his gut to shoot up into his throat even though he knew that wasn't how gravity worked. Instead, just weightlessness, and some air resistance against his wet suit as he plummeted down toward the spider. He'd been smart enough to manage his jump so he'd come down feet first at least, and he pointed the bar down at the spider as he plummeted, held between his feet like a pogo stick.\n\nA whole two seconds. A fucking eternity. Don't move don't move don't move don't move don't move.\n\nEvery muscle in Jack's body tensed as the bar landed on the creature's head. He squeezed the bar with everything he had, every fiber, every ounce of blood he had into his hands, every bit of vitae he could pour into his grip, all into squeezing a bar, squeezing until his fingers felt like they'd break.\n\nThere was a moment of sickening crunch, and then there was chaos.\n\nJack's grip remained, even as every bit of his weight coming down at a pretty insane speed drove the metal down through his target, forcing his feet apart. Even as his hands ripped at the palm, dragging the dried insides of his vampire skin along the metal, he kept his grip tight. Even as the metal kept going down until his hands met the head of the creature, scalp pushing against his grip.\n\nThe shrieks were loud, only two feet away from his ears, as he held on for dear life while the spider freaked out. It bucked, screamed, twisted and stomped. It threw itself against the walls, human half swinging around in the air, and Jack holding on to the metal bar he'd stuck a couple feet down through its skull, neck, and into its chest. How it was still alive Jack had no idea. How he had managed to even hit the target, Jack had no idea. But there he was, holding onto a metal bar sticking out of the spider monster's skull, blood flowing and splashing everywhere, while it crashed itself against the walls.\n\nAnd Jack held on. Fucking god he held on, even as the creature drove itself into a wall onto its side, and Jack felt concrete embrace him yet again. Something broke in his shoulder. Didn't matter, he held on. More screams, higher pitched, panicked, and another toss of its insane weight against the other side of the drain pipe. And Jack, swinging around like a tether ball, hands still squeezing the metal bar, crashed into the wall right along with him, breaking what Jack was sure was every rib in his torso. Didn't matter, he held on. The wall cracked, splits in the concrete rising a couple dozen feet; anymore of this lunacy and the creature was going to collapse the Dolareido streets above onto them.\n\nBut, after a couple more thrashes, it collapsed. The seven enormous spider legs gave out so the bloody mess of its hairy, fat, monstrous abdomen fell to the wet floor beneath it. The human half slumped forward, arms dangling, and Jack's weight pressed against the back of it. He still held on, squeezing, even as the agony shot through his broken shoulder for it. Didn't matter, still held on.\n\nAnd then the platform Jack stood upon, the spider's exoskeleton and abdomen, gave way.\n\n\"Fuck!\" He fell through it, the cloud of gray and black, the blackness that surrounded him for a brief moment before his body fell forward onto the leaning human half of the spider. He still held on, even as the angle forced him onto his side, holding the metal, and staring at a bag of skin. \"Fuck me!\" The pain of broken bones vanished as he stared at the corpse, the human corpse, red blood all over it, and its spider features gone.\n\nAnd as he looked to the gray cloud, he froze. Not a cloud, most definitely not a fucking cloud. It moved, scattered, spread out over the shallow water, and poured out everywhere. Spiders, large spiders, tarantula-sized spiders and hundreds of them, crawling and swarming and running to the small drainage pipes connected to the main one Jack sat in.\n\n\"Kill... Azlu...\" Clara said.\n\nOk, sure, a couple hundred spiders, he'd get right on that. He groaned through his pain as he forced himself back up, and did his best to not stare at the mangled remains of a human's body. Ignore that he'd just skewered said human through the skull a couple feet into its torso; at the time it'd been a mutated monster and a couple feet wasn't much. But now that he looked down at where the bar stabbed through into the fleshy, ruined remains, he realized just how much he'd impaled his target with metal.\n\nIgnore it, ignore it. Get up, squash some spiders. Pushing off his good hand and onto his feet, he stomped around after the spiders, and squished them under his foot, each stomp threatening to break his already broken ribs. Crunch and splash as his boots crushed arachnid, and they went splat with a stomach-turning sensation, the texture of an exoskeleton giving way to pressure. Like crushing hard grapes, so the guts came out from the impact. Very gross.\n\nBut after killing maybe twenty in a panic, the majority by far escaped through the small drain pipes that connected to the base of the main drainage shaft.\n\n\"Well fuck,\" he said.\n\nThe other werewolves groaned, and Jack jumped around with a startle. They were awake, and looking at him, something between exhaustion and frustration in their animal eyes.\n\n\"You... killed... Azlu's... body,\" Avery said. Even the pack alpha, beaten to a pulp and lying down on her side in the water, managed to force herself to sit up a little, palms to the water, enormous muscles struggling to lift her weight.\n\n\"That uh... that was the plan, right? Kill it? I didn't think it'd turn into a bunch of smaller spiders though...\" He managed an awkward shrug, sucked in his breath between his teeth, and walked over to Clara. Holy fuck the holes in her shoulders were already closed; probably not fully healed, but not gushing blood anymore. Jack took the webbing and yanked on it with his good hand, but not only did it feel like trying to rip apart hard leather with the strength of a normal human, it also stuck to his hand. He had to put his leg to the wall to push himself away, abandoning Clara. Fuck his god damn fucking ribs. He screamed, and the werewolves laughed.\n\nHe walked around to the others, frowned at each of them for laughing at his pain \u2014 sorry he wasn't a masochist like these wolves apparently were \u2014 and checked their injuries. Bones snapping into place, wounds closing before his eyes, many joined by sickening crunches of what must have been painful super healing. His broken arm and ribs would take hours to set, and a good day's sleep to heal right, young as he was. He'd wake up from his daily slumber fully restored, but still, it'd be nice to not be walking around in agony, with every step sending scorching misery through his ribs, his arm, his skull.\n\nWith time, the wolves got to their feet, and one of them walked over to Clara to rip her free. Once done, they all reverted back to their human form, clothes reforming, fur disappearing, sizes shrinking, and shrinking, and shrinking some more until Avery was once again her tiny self and Jack could feel a little better about himself staring down at her.\n\n\"The goal was to kill the Azlu, not its body,\" Avery said. \"It escaped in one of those spiders.\"\n\nWell. Fuck.\n\n\"Considering the circumstance,\" she continued, \"killing the body was the best any of us could have hoped for.\"\n\nWell. Not so fuck then?\n\n\"Kid, I told you to fucking leave.\" Clara walked over to him, human again, and glared down at him with furrowed brows. But, Jack could see a smile break through the expression. She was a very pretty woman Clara, and he really did like the box braid hair and tan-colored skin.\n\nHe shrugged his working shoulder, and focused his blood into his bad one. Heal faster damn it. \"Saw an opportunity. Had to take it.\"\n\n\"Azlu could have stepped to the side one fucking foot and we'd all be dead, you included.\"\n\n\"Seemed pretty focused on wrapping you up for lunch,\" he said, smirking up at the woman.\n\n\"You should have run\u2014\"\n\n\"Someone would have come anyway, whether I ran for help or not! I needed to\u2014\"\n\n\"You could have gotten yourself\u2014\"\n\n\"I wanted to save my friends! Hell I wanted to save you too.\"\n\nHer dark eyes faltered, and she looked down as she grit her teeth. But before she could say anything, Avery walked over to them and pat Jack on the back.\n\n\"Things did not go as planned, Jack. As you no doubt guessed, we didn't expect two fully evolved Azlu. These creatures don't work together like this, or hide their tracks nearly so well; they're mindless animals, instinct driven. All evidence suggested one Azlu, but it looks like another one was working with it, and probably feeding from a different section in the city. That... that is not something hosts do.\"\n\nJack sighed, but nodded. \"Animals do have this nasty habit of evolving instincts complicated enough to suggest intelligence.\"\n\n\"To imagine Azlu changing with time is a scary thought,\" another wolf said, a man now in human form.\n\n\"So,\" Jack said as he gestured to the small drain pipes at the base of the wall surrounding them, \"it uh... broke into a bunch of little spiders? And fled?\"\n\nAvery nodded again, and walked over to the tunnel-hole dug into the wall. She had to climb and jump a little to reach it, but she got up there and turned around to motion for them to join her. \"It's why we brought fire to kill the other one. It can't survive and spread if it's covered in fire.\"\n\n\"So I shouldn't have killed it, er, its body. The Azlu thing escaped in one of those spiders.\"\n\nAvery shook her head. \"It was either that or the pack dies. And Stephanie, she... she...\" The leader winced, closed her eyes for a moment, and took a deep breath. \"Come on, let's go see if anyone else survived.\"\n\nSo it was Stephanie that died then. Fuck. Jack nodded, and walked over to the wall.\n\n\"Uh... little help?\"\n\nClara and the other wolves laughed, and helped him scale the wall, one acting like a step while the others pushed his feet and butt upward until Avery could grab his good hand.\n\n\"Much as I'm pissed at you for disobeying my order,\" Avery said as she turned around and started to walk the dark, dug tunnel, \"I'm happy you did. If we'd had to fight both Azlu at the same time, we wouldn't have survived.\"\n\nWell, big bad alpha woman wasn't too proud to admit fault or weakness. Kind of surprised him, he'd expected some defiance and denial.\n\n\"We wanted to find it, prove Fiona wasn't it, and when I called to see if Natasha would help, I couldn't get through to her.\"\n\n\"So you assumed she was down here?\"\n\n\"Well, it is Natasha. She wouldn't turn her phone off, even at gun point. Too addicted to technology and schedules.\" She wasn't the social addict type, that was for sure. \"And Damien said she'd been making friends with some Uratha.\"\n\n\"Fucking Arturo and Matthew.\" Avery sighed and shook out her shoulders while stepping around one of the cocoons. She'd probably have to get rid of the evidence, if the tunnels hadn't been abandoned and blocked off from kine by the Kindred. \"Yeah, we smelled all three of them, behind those rocks. Didn't expect another fucking Azlu.\"\n\nThe two of them stepped into the subway tunnel again, and found several other werewolves sitting around a corpse. Stephanie's corpse.\n\nJack approached them, softly as he could, and winced as each of them offered him a glare, a blaming glare, but Avery stepped in and shook her head.\n\n\"We owe the boy our lives, all our lives. Show him some respect. And Stephanie some respect.\"\n\nAnd they did. A word from their leader and their glares broke, sadness replacing it, long faces as they looked down at Stephanie's corpse, two pieces that someone had brought together. Guts, organs and all.\n\nHe didn't say a word, not a single word. He had no idea what sort of death rituals they had, hell what sort of attitude they even had toward the death of a pack member. Foot in mouth enough times to know to shut up in this sort of circumstance.\n\nHe looked over at the burnt body of the Azlu. It too was just a husk of human flesh now, the top half a bag of skin, and the spider parts gone. All around it were the bodies of spiders, incinerated, some burnt to ash, most turned onto their backs with legs coiled inward, bodies burnt to a crisp. So that was the plan then, kill it while it was on fire. And if it'd broken into its smaller spiders while on fire, then the chances of catching the thing were higher.\n\nSo one of them was still alive, still in the city. Fuck fuck.\n\nNoises from down the tunnel drew his eyes, and Avery nodded as she motioned to Clara.\n\n\"Go with him.\"\n\n\"Right right,\" Clara said, nodding and walking in stride with Jack as he made his way toward where his friends had been.\n\nStill be alive still be alive please still be alive. Athalia dying would be an annoyance. Damien dying would suck. Fiona dying would hurt and hurt bad. Triss dying would hurt worse, and ruin Julias. Christ, he hadn't even thought of Julias in all this. What would the man do if he found out Beatrice was dead? If he found out it was Jack's fault? Bad, bad bad so bad. Bad\u2014\n\nOh thank god they were alive. This far back in the tunnel, the wolves' lanterns didn't reach, but Athalia still had her flashlight, was still sitting against the tunnel wall near the rubble, and was still shining it around. Fiona was sitting beside her, injured, beaten, bleeding, and no doubt soon to be bruised, but alive, and smiling.\n\nTriss was sitting over Damien, and as Jack approached, she pulled her wrist away from his mouth.\n\nShit.\n\nDamien, unconscious, eyes closed and body slumped in Triss's arms, stirred and groaned. A giant hole still cut through his clothes, remnants torn and shredded over his stomach, but the hole in his guts was sealed.\n\nHealing a wound like that would have taken a lot of blood, a lot lot lot of blood, and a good day's sleep, or week's sleep. Or a few mouthfuls of vampire blood.\n\n\"Jack, you're alive.\" Triss picked Damien up and carried him over to the wall to set him beside Fiona. \"Fuck, we've been trying to just get the fuck up for the past ten minutes.\"\n\nHe looked between the Uratha and the Begotten. None of them seemed to care that Triss had just given Damien some of her blood. They must not have known then. That was good, saved them from having a horribly awkward situation.\n\n\"Yeap, alive. You're all alive too.\" He walked up to her, and hugged her. \"Fucking hell. Damn thing chased me and then we were in a sewer drainage shaft, and then it was beating the Uratha and\u2014\"",
        "\"And this little twerp skydived right onto its head and killed the Azlu.\" Clara smirked and shook her head as she hooked an arm around him. Thankfully, avoiding the broken shoulder. The bones were aligning themselves, but it'd take sleep to set them healed.\n\n\"Really? You, mister Ventrue?\" Triss hugged him again, arms fighting for space on his body with Clara.\n\n\"Girls, please, I have so many broken ribs and a fucked shoulder.\"\n\n\"Ha, sorry.\" Triss backed off and got back to the wall of rubble. The spider had torn through it, so a pretty damn large hole was open. Still a lot of rubble around and in their way, but it was cleared enough they could walk through it if they wanted.\n\nBut not yet. Clara let go of Jack's shoulder, and he walked over to crouch down by the two Begotten.\n\n\"Fiona, I think you'll have your work cut out for you in the monster world. This thing was fucking terrifying.\"\n\nAthalia snorted and shook her head. \"That wasn't a monster, that was some fucking animal. A weird animal, not entirely flesh.\"\n\nClara nodded but said nothing, only combed her braids back as she paced. Guess she didn't like sharing details about what these things were.\n\n\"I'm awright,\" Fiona said, reaching out to touch Jack's arm. \"Need a week or two in bed though, heal some of this shit.\"\n\n\"Tell me about it.\" Jack nodded, pat her on the arm in return, and looked over at Damien again. He'd drunk Triss's blood, enough of it to heal a huge wound like that.\n\nJulias had warned him about it, about the addiction, and the Vinculum. The love, the adoration, the devotion that came with it. But it took more than one dose, right? Took three, according to his sire. Three doses, but... was a belly full of it a single dose? Triss must have given him a good amount to heal a wound like that; though, Jack knew it was only healed on the surface. Damien would need days, maybe weeks to heal from a wound like that, even if the man had half a century under his belt.\n\nHe glanced Triss's way, and she winced when she looked back over her shoulder and caught it. Ok, they could deal with that later. For now, look for Natasha.\n\n\"We uh... we should probably keep an eye open and ear to the ground for any more of those Azlu,\" he said.\n\nClara shook her head. \"One makes sense, two adult Azlu sharing a tunnel has never been heard of. If there's a third, well, we're all fucked. But, yeah, keep our eyes open.\" The werewolf walked over to Athalia and held out her hand. The monster handed the flashlight over with a grunt.\n\nArmed with a flashlight, the two vampires and werewolf continued past over the rubble. And found another wall of rubble.\n\n\"Shit, Fiona, I uh... think we could use your help. Place is collapsing in here.\" Not that sticking a bunch of webbing to the underside of a collapsing ceiling was going to make it safe, but it was better than nothing.\n\n\"Aye, I'm coming.\" The redhead came up over the mound of rubble into the new area, and sighed with the groans of injury. But even injured, she braced herself with feet apart, pointed both her hands toward the rubble, and unleashed the spider monster inside.\n\nClara jumped back and stared at Fiona, eyes wide as the horror faded into existence, sharing the same space with the little redhead. She'd seen it before, but Jack guessed you never got used to it; he wasn't. Like sewing a giant sweater, the huge blade spider limbs poked at the ceiling like needles, each layering white thread along the crumbling concrete. While she did that, the rest of them got to work, rolling down rubble, and letting Fiona stabilize wherever they created space.\n\nThe werewolf was strong, even in human form. Not as strong as Triss though, who continued to throw giant rocks that weighed as much as Jack. Maybe not with as much energy though, and Jack caught her grimacing more than few times to lift something she could toss before. Drained, from saving Damien's life no doubt. She was probably starving.\n\nSure enough, as they opened up a hole at the top of the rubble, they found hands in there to greet them.\n\n\"Art! Matt!\" Clara slapped a rock, and reached in to grab one of the hands sticking through. \"God damn you fucking assholes, the fuck is the matter with you? You knew better than to come down here without the rest of us.\"\n\nThe hand pulled back and a face stuck against the hole, Matt's face. Comical.\n\n\"Sorry! Tash wanted to prove this Fiona girl's innocence, and some other stuff. So we came down to help her.\"\n\nTash. Certainly getting friendly with her. Well that was cool, a nice change of pace from Uratha and Kindred getting in each other's way.\n\nJack smirked and gestured down to Fiona. \"Mission succeeded. And two Azlu dead, though one of them went full swarm mode and escaped.\"\n\n\"... two?\" Matt's eyes opened wide, and he pulled his head back from the hole to look behind him. \"Kid says there were two.\"\n\n\"Yeah.\" Clara grabbed some of the rocks and started sliding them down while Fiona kept at the ceiling. \"Pretty fucking weird right? Whole fucking thing is fucked. David will probably have something to say though.\" Every so often they heard rumbling, and heard some rocks crack or shift above their heads as they moved more of the rubble down.\n\n\"C-Careful!\" A squeaky little voice came through, and soon Natasha's head popped up to look through the hole. \"We... we couldn't dig out, cause the ceiling started t-t-to collapse.\"\n\n\"Shit.\" Triss touched the ceiling of the tunnel where it connected with the wall of rubble. \"Yeah looks like it's being held up by the shit we're tearing down.\"\n\n\"Awright, guess I've got work that needs doing.\" Fiona, panting and almost falling over, pointed her hands up at the ceiling and started laying more webs. And more, and more.\n\nArt brought his head to the hole, and blinked as he watched the spider goddess work. \"Well no wonder everyone thought you were Azlu. Look like there's a spider monster thing inside you. Should see a doctor about that.\"\n\n\"Sounds awfully coincidental doesn't it?\" Clara said.\n\n\"Or the spiders are getting smart.\" Art sighed and stepped away from the hole so only darkness remained, at least until Natasha came back up with her flashlight.\n\n\"Who came?\" she said.\n\n\"Triss, Damien and me. And Fiona.\" Jack nodded and gestured to Fiona as she worked. \"Ran into the werewolves while we were down here, digging for you guys. But there was another collapse, and one of the Azlu was trapped in there. Everything went sideways. And\u2014\" Clara flicked out her foot to get him in the shin with the toe of her boot. Right, foot in mouth. Don't mention Stephanie. \"We managed to kill them.\"\n\n\"We?\" Natasha raised a brow at him. \"Thought w-we were supposed... t-to stay out of it?\"\n\nTriss laughed and shook her head. \"Didn't have much choice. It jumped us and tried to kill us on sight. Damien nearly died.\" The Nosferatu tossed Jack a quick glance. Enough for him to know to keep his mouth shut about that too. He'd talk to her later about it, but for now no one needed to know what she'd done.\n\nNatasha nodded, and sighed. \"Y-You shouldn't have... shouldn't have come down here.\"\n\n\"We had too many reasons not to. Finding you was a big one,\" Jack said. \"Almost called Jessy, but I figured she might make things worse.\"\n\nNatasha smiled at him through the hole. \"You came d-down here for me?\"\n\n\"Friends do shit like this, apparently.\" Jack reached for what seemed like a safe rock to move, and slid it down the rubble.\n\n\"Jessy is going to k... k-kill me.\" She chuckled, a tiny sound in her cage. \"About now, she hasn't gotten my m-message, and is about to go on a war path... looking for me.\"\n\n\"Then we better get ye out of there.\" Fiona put up another web, and gave the ceiling a few taps with one of those massive spider legs. Enough to make Jack shiver, seeing them, seeing what the spider legs could do when controlled by something that wanted to kill you with them.\n\nWith some time and patience, a rock here, a web there, they created a hole big enough for the little vampire girl. Creating a hole big enough for Arturo took another thirty minutes, and a hole for Matthew took another thirty minutes. It was not a pleasant hour and a half of worrying about a tunnel collapsing on their heads, and by the time they were done, everyone was tired; Fiona was destroyed. She reached out to put her hand on the wall, and started to limp her way back to the first wall of rubble. Poor girl couldn't even climb it, and Triss smiled at the redhead before jumping over to help her.\n\n\"Hungry,\" Fiona said. \"And tired.\"\n\n\"Well I got nowhere to be. Let's get you back to Athalia, and the three of us can head back to Azamel's. See what she can do.\"\n\n\"Is Azamel... nice?\"\n\n\"Not even a little,\" Triss said. Fiona snorted on a chuckle, and hugged her arm around Triss's shoulders as the taller woman leaned down to hook her arm under Fiona's. \"Hey Jack, can you check on Damien? Maybe get him some place safe?\"\n\nJack nodded, a lingering second of eye contact carrying some weight. Check and see if the man was suffering the Vinculum as well, right. Better that she wasn't around for that.\n\nJack, Clara, Natasha, and her two friends followed after them through the hole. Sure enough Triss had Athalia's arm wrapped over her shoulder too, and she helped both limping women along out of the tunnels. Natasha tried to walk closer to the Uratha, to move with them like friends would, but Jack grabbed her shoulder and shook his head.\n\n\"Wha\u2014\"\n\nHe brought a finger to his lips. Clara kept walking, and the two wolves kept walking with her without breaking stride, just like a marching family. Good, gave them some distance.\n\nOnce the wolves had disappeared beyond the turn of the tunnel, Jack motioned toward Damien sitting against the wall. Natasha still had her flashlight; Athalia took Jack's with her. He really disliked that woman. Sighing, he leaned down over Damien and checked the man up and down, pulled aside where the flap of his shirt exposed his stomach, and moved his limbs around a little to make sure everything was connected and solid. Ready for transport.\n\nJust as he started to pick the man up, the sound of rock cracking against metal rang through the tunnel. Curses followed, some yelling, some shouting, and a few more thrown objects.\n\n\"... Stephanie died to the creature,\" he said.\n\n\"... oh.\" The tiny Mekhet rubbed her arms as she hugged herself, and looked down the tunnel, the tunnel they'd have to walk through in order to leave. \"Should... should we wait?\"\n\n\"I get the impression they'd be more annoyed if we stuck around.\" Nodding to no one, he scooped Damien up into his arms and slid the man over his good shoulder. Damien wasn't a large man, and even a Ventrue, a young one like Jack, could still muster some vampire strength to carry him.\n\nAnd carry him he did, silent as a monk as he walked past the werewolves. They were sitting around the corpse, squatting or kneeling, and Avery was giving a speech. Well, maybe speech was too strong a word, but she was saying something about Stephanie, something powerful, enough to have the rest of the pack nodding.\n\nAnd she gestured to Jack as he walked past, and without stopping to call his attention, made comment about how he was the one who killed the second Azlu, or at least killed its body. That earned some glances from everyone, weird glances, raised eyebrows, shock, confusion, and after a few seconds, what Jack could only imagine was an animal's form of respect. Horrible way to get it, the wolves looking over the body of their comrade, their family member, but they gave it nonetheless.\n\nIt wasn't long before him and Natasha were past the wolves, and into the lit tunnels where Nosferatu hung out, where Damien liked to hide, where he was at least slightly sure they wouldn't be jumped by anymore spider monsters. They found an old platform, a place where he and Natasha could sit down, and lay Damien down beside them.\n\n\"I'd rather he wakes up before I leave him back at one of his hideouts,\" he said. \"Or I'll have to take him back to my place.\"\n\nNatasha nodded and smirked down at the unconscious man. Well, unconscious but not really; torpor wasn't about brain activity, it was a whole body healing and sleeping experience. He'd wake up once he'd healed enough.\n\n\"He... he came with you.\"\n\n\"He did.\" Jack glanced between the two Mekhet a few times, and made it obvious he was doing so.\n\n\"... Damien and I... it is a little weird.\"\n\n\"Yeah, you two have this weird thing going on and I can't quite place it.\"\n\n\"I... I told D-D-Daniel to spare him.\"\n\n\"And I told Antoinette to spare him. Aren't we a couple of saps?\" he said, smiling. It got a smile out of her too.\n\n\"I t-told him we'd talk after, but... we... we never really did. I avoided it, and he d-d-did too. He... probably feels guilty, about helping Lucas kidnap me.\"\n\nOh, that.\n\n\"Yeah I'd feel guilty about that too. But, I can imagine doing whatever Viktor told me to, if he'd taken it upon himself to order me around. Ever heard of the Milgram experiment?\"\n\n\"Mmhmm.\"\n\n\"I was out of my element and told that this man was my boss, my boss's boss. That he was basically my new general and if I didn't do exactly what he said, I'd end up in the shitter, or ash. If he told me to do something horrible, in a situation like that experiment, I can guarantee I'd do it.\" Jack motioned down to the sleeping Kindred beside him. \"I can only imagine how fucked up that is when taken in a religious context.\"\n\nNatasha nodded and sighed some more, pulling her knees up to her chest and looking out to the train tracks below where the platform ended. \"I guess being around him makes me a bit nervous. I'll have to get p-p-p-past that.\"\n\n\"So, you've been down here for over a day now? Must be hungry. You go on without me. I'll get him back to his hidey-hole and make sure he wakes up fine.\" Thankfully she wasn't asking about how Damien healed from his injuries; he'd left the description vague for a reason. He couldn't see himself lying to Natasha, but avoiding some details was at least doable.\n\n\"Ok... thanks.\" She got up, dusted herself off, and smiled down at him again. \"N-Not hungry, the wolves let me feed.\"\n\n\"Really? What was that like?\"\n\n\"Very... energizing.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Damien~~\n\nHe awoke to a pleasant sound, a familiar sound, the near silence of concrete, but the distance and gentle hum of vibrations moving through the earth and metal. The drip drop of water leaking from a pipe rang like a church bell. His favorite hideout.\n\nSo he was alive then. He looked down at his stomach and touched the wound. Tender, very tender, and pain shot through him as he struggled to sit up. No, don't do that, lie down and rest. He recognized the pain signs well enough to do that.\n\n\"Awake,\" a voice said, someone sitting beside him.\n\n\"... Jack. Glad to see you live as well.\"\n\n\"Ha, barely. But both Azlu are dead and so are our friends. One of the Uratha died though, Stephanie.\"\n\n\"Stephanie... Right, I remember her. Aggressive woman. Quick to accuse Fiona.\"\n\nJack put up his hands. \"Let's not speak ill of the dead.\"\n\nDamien nodded, and set his head back to the concrete. Everything was alright then. Mission successful.\n\n\"... wait, how am I healed so? That creature, it... you saw it, it'd take me weeks to heal from that, if I even survived.\"\n\n\"About that.\" Jack, sitting on his butt on the concrete with one leg on its side, the other with knee up to his chest, rocked back and forth a little as he rubbed his buzzed hair. \"I didn't see how it happened; I got separated from the group. But when I finally got back to you guys... Triss had fed you her blood.\"\n\n\"... no.\"\n\n\"Yeah.\" The boy winced and nodded a few more times, sealing the truth in with each grimace. \"She probably thought it was too risky asking a Begotten to do it. Who knows how we'd react to drinking monster blood? And we know vampire blood does better than human blood.\"\n\nDamien raised his hands up to look at them, before letting one fall to rest on his forehead, the other collapsing to the floor.\n\nHe could already feel it, already feel little nudges in his mind. How was Triss doing? Was she ok? He should go talk to her. Remember the tank top you saw her wearing? Could see the piercings of her nipples and everything. You should go see her, see if she needs help with anything.\n\nHe'd be punching the floor right now if he thought his insides wouldn't rip apart, or his spine disintegrate. He didn't like Triss. She was brazen and brutish, and unlike Jessy, had the nerve to consider herself as deeper, more emotionally self aware, lending to all the stereotypes of brooding and depressed; that all conveniently went poof the moment someone's dick got between her legs.\n\nNo, no, stop. Stop, this isn't you, swinging from one emotion to the next about her.\n\n\"... how much blood did she give me?\"\n\n\"Enough to heal a giant hole that'd been blown through your guts and out your back, spine and organs included.\"\n\nA lot, then.\n\n\"Not... completely... healed.\"\n\nJack snorted on a laugh. \"Maybe with another two hundred years under your belt. Viktor healed from some pretty ridiculous shit.\" The kid shivered and shook his head. \"But, yeah... I didn't know how to tell you, but I figured I should. Fiona and Athalia saw it, but they probably don't know why we're not supposed to do that, or even that we're not supposed to.\"\n\nWell, at least there was that. No pity glances from Fiona.\n\n\"And Natasha?\"\n\n\"She doesn't know how we healed you. And to hear it from her, werewolf blood is quite potent, so maybe she thought we gave you some of that.\" He shrugged, got up, and started to pace. Not much room for pacing in the little hideaway, the pipes and old, dead computers built into metal casings provided little in the way of living space. \"But it might come up. If she asks me, I'll say Triss took care of it and leave it at that.\"\n\n\"Half truths are worse than lies.\" He sighed, sighed, and sighed some more, before holding out his hands in front of himself again and flexing them, analyzing the shape of his fingers clutching the air. \"But, thank you.\"\n\n\"You may want to talk to her anyway. Not about this of course, and I'm sure Triss will keep it a secret. But Natasha and you... well.\" A shrug and nod later, Jack reached for the door and readied to open it. \"You Mekhet really suck at approaching your problems head on.\"\n\n\"... we do at that.\"\n\nJack laughed. Damien didn't, lest his insides rupture, but he managed a small, and a tiny wave for the man.\n\n\"Thanks,\" Damien said, \"for getting me home.\"\n\n\"Dude, this isn't a home. Julias tells me Maria is going to help you out? She could hook you up with a real home easy enough.\"\n\nA real home? The thought had never occurred to him. So used to sleeping in underground holes and hiding in shadows, it'd become second nature after fifty years of it.\n\n\"... I shall ask her.\"\n\n~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~\n\n~~Beatrice~~\n\nFuck she was tired. What a night, what a fucking horrible, bad, weird night. Her laptop was still at Jack's being charged, no doubt fully charged by now, but the sun would be coming up soon and she just wanted to get somewhere to sleep.\n\nFor a second she considered going back to the Circle, telling everyone what happened, filling in Jacob on the details. Man loved his details, the scheming asshole. Devil's in the details he'd say, blah blah.\n\nBut, as she ran the memories of Damien's skewering through her mind, a chill danced on her spine and skin. No, she didn't want to go back to the circle to sleep in her new home. Awesome as it was, she wanted something warmer. She wanted to let the day knock her out while in Julias's arms. Maybe ask Julias to brainwash her an easy meal, someone she could drink, and then get under the blankets with her man, get comfy in the nook of his shoulder, and fall asleep.",
        "After sex, of course. God damn she was tired, but god damn tonight had been such wild ride, part of her felt energized. She'd jumped a giant spider monster, fucking tore into it, gotten dirty with its blood \u2014 still on her \u2014 and had hurt it. She'd hurt some horrible monstrosity thing that came straight out of a nightmare. Well, not technically, according to her new monster friend, but still, the thing was nightmare-ish and terrifying. She pitied the poor sap who it'd possessed; if you could call it possession.\n\nAnd all that post-life-threatening-situation-but-you-kicked-its-ass energy made her want to go back to Julias and snuggle into his arms. Let the energy dissipate, fade away before the sun came up, Julias's chest pressed to her back, arms wrapped around her... maybe lying on top of her, giving her that deep grind, balls deep inside her, and she'd be soaking\u2014\n\nFucking god she had a problem. Couldn't go five minutes without thinking about sex.\n\nCourse all of that tasty sex goodness would have to wait. She still had Fiona hooked with one arm, Athalia with the other, and she was carrying them to Azamel's place. Azamel, grandma monster, the weird person in all this. Fiona, Triss understood. The werewolves, she understood, especially now. And she understood the Kindred and their games. But Azamel, the fuck was her game?\n\n\"I think, after this, I'm needing to find a boyfriend,\" Fiona said.\n\nHa, wasn't just Triss then, thinking about boyfriends.\n\n\"Cute girl like you doesn't have one?\"\n\n\"No, it's... it's hard.\"\n\n\"What's hard?\"\n\n\"Being around folk, humans. It's...\" The redhead sighed, and her body grew heavy hanging off of Beatrice's shoulders. Course heavy was subjective and the girl was as light as a feather to a Nosferatu, but still, felt like the girl was getting weighed down by something. Which was very odd for Fiona, normally so damn uplifting and fun, Triss figured she was full of helium.\n\n\"Kindred don't usually date kine, humans,\" Beatrice said. \"Recipe for disaster. Sometimes we change them into ghouls, so they live forever and can be a persistent source of food. And sometimes we date them.\" Though, far as she knew, if there were any Kindred ghoul relationships in Dolareido, they were strictly sexual. Romantically, it'd be a pretty weird thing, considering what drinking Kindred blood did to a kine's mind.\n\nConsidering what it did to Kindred mind's too, Triss. Fuck, she was going to have to talk to Damien, apologize or something. Saved his second life, sure, but that didn't change she'd done something really, really fucked up to him.\n\n\"I cannae do that, that's nae a thing Begotten can do. And with humans, it's... I... I'm so hungry. If there was someone I could punish, someone Vrall could punish right now, I'd... I'd...\" She shook her head and let it hang all the more.\n\nJudging from the sounds of it, Fiona had done some pretty bad things when Vrall got hungry.\n\n\"You need to learn to feed correctly,\" Athalia said with a snort. \"You'll get us all killed attracting unwanted attention.\"\n\nTriss twitched a little at that, unwanted attention. Jacob mentioned the concept of hunters to her before, humans who knew about vampires, or werewolves, or she supposed monsters. Hell monsters were an even older concept, more well known idea than vampires or werewolves. Been around since nightmares had been around, Triss imagined. And so too were humans who thought they could fight those nightmares.\n\nHard to imagine a human standing up to the spider monster hiding inside Fiona, but humans had this nasty habit of being really, really smart when properly motivated.\n\nFiona shook her head as she turned to look at the woman next to her. \"Vrall... she... doesn't ken that. She's from a time when folk feared her, but also worshiped her.\"\n\n\"Then this will be rough, because you're going to have to learn how to not kill every target. You'll have to learn how to take a sip, not guzzle. A nibble, not devour the whole thing. You need to learn to accept a little hunger as a normal, every day thing you'll have to deal with from now on.\"\n\n\"How do I do that? I... Vrall, she needs to punish folk, bad folk, folk who deserve it.\"\n\n\"Well for starters, instead of killing them, try letting them live.\"\n\nFiona groaned but nodded. \"I'll... I'll have to eat almost every day, if I can only hurt folk, nae kill them.\"\n\n\"Welcome to the club. You gorge yourself, and you'll invite trouble... but, stop eating or starve yourself, and you'll invite trouble. I don't know what sort of insane history Vrall has, but you're in the modern world now, and you have to find a balance. Too much, and someone will show up to kill you, your horror, in her sleep. Too little, and your horror is going to spread nightmares to the edge of the city.\"\n\n\"... what do ye feed on?\" Fiona said. \"Ye're Eshmaki like me.\"\n\nAthalia sighed and shook her head. \"Let's talk when we're back with Azamel.\"\n\n\"Yeah yeah, keep your secrets.\" Triss shrugged, which lead to comical results with both girls hanging off of her. \"Whatever, we got out of that shithole alive, so ain't nothing you can say to kill my mood.\"\n\nFiona laughed too, but it died off as she let her weight drag again. \"Noo don't tempt fate like that!\"\n\n~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~\n\n~~Natasha~~\n\nShe considered waiting for Matt and Art. They spent over twenty-four hours together, trapped in that pit, thinking they were dead, goners. Not long enough to get all weepy and think their lives were over. But long enough for her to talk about personal stuff, tell them about Vivi, and how she regretted siring her; too young and immature to have a childe. They laughed at her, said she was an idiot, and other indirect compliments like that.\n\nShe enjoyed their time together. A lot. She hadn't laughed like that since she'd gotten to know Jessy. They were a couple of fun, silly but intelligent guys. Who were good at cards.\n\nThe memory of playing cards in the dark, with their flashlight their only source of light, and their doom on their doorstep, was too funny, and she laughed again as she sneaked out of the abandoned section of the subway and back onto the streets. And of course the moment she did, her phone beeped with a lot of messages. Jack, and Jessy trying to get in contact with her.\n\nFirst things first. She messaged Jessy back, said she was fine, that she'd fill her in tomorrow night. Then a message for Jack that he'd get once he was out of the tunnels: thanks for everything. The kid was proving to be everything Julias said he would be, and more. She'd have to visit Julias later, and thank him.\n\nJulias and Jessy, her old companions, her fellow right hands. Now she was hanging with werewolves and monsters instead. Well, not entirely true. She was having orgies with Jessy, so that was... well, even more weird. She laughed to herself as she stepped into the crowd of South Side, and began a long walk home. What was it she couldn't quite settle her mind on, something in her brain running hamster wheels and making her turn recent events over and over again, in random order at that.\n\nNearly dying might have something to do with it. Meeting new friends and making huge changes in her life probably did more.\n\nShe looked down at her phone, and settled beside a lamppost as people walked past. Vivienne's number. She used to stare at it and sigh to herself, about how that relationship had been weakened by the embrace, and broken by Vivi joining Lucas for a while. Broken beyond repair when Natasha left the Invictus?\n\nShe sent her a text. Something short, nice, simple: hope you're doing ok.\n\nShe put the phone away. Not going to stare at it waiting for the response, nope. She wasn't that person now. She'd grown up. A little. Maybe. Smiling, she shook off her shoulders and headed back to her apartment. She'd tell the Prince about what happened tomorrow night, and Jessy, and maybe tell them about her two new friends Art and Matt.\n\nArturo Ibarra and Matthew Wilson. Not a word to them as she walked past them in the tunnels, and saw everyone sitting around Stephanie's body. Barely a body anymore. Split in half from the skull down, and the spider creature's weird scythe arms weren't sharp enough to do that cleanly. The werewolves had been mourning a pile of flesh. Sickening. Depressing.\n\nDid she know them well enough to comfort them? No idea, no idea at all. For all she knew, the werewolves would get over their friend's death in a single day, or less. Or maybe they'd respect her death with song, and be glad for it to be in battle, on the hunt, like something an ancient Spartan might do.\n\nShe nodded to herself, and headed home. Sun would be up soon, and she was too old to be caught unawares by impending sunrise. But, as she walked the path home, she brought out her phone again \u2014 not checking for a message from Vivi, nope nope \u2014 and updated her to-do list: get Matt and Art some phones.\n\nShe wondered how Antoinette would react to the news. Not that she didn't probably already know; she generally knew everything going on in her city. But, she wouldn't be too upset, right?"
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "monster",
        "paranormal",
        "paranormal romance",
        "slow",
        "squirting",
        "vampire",
        "vampire romance",
        "violence",
        "werewolf"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-03-ch-13"
}