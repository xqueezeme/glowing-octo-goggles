{
    "title": "In The Grace of Liars",
    "pages": [
        "Any constructive feedback is welcome. Incest is a pervasive theme throughout the story so if that's not your bag then please find another story to enjoy that suits your tastes. This story is being published on Literotica.com. If you find it elsewhere, it's very likely because it was stolen.\n\n*\n\nIt was a beautiful day. The sun was out, there was scarcely a cloud in the sky and the mercury was just barely touching seventy six degrees. I had the top down on my Jeep, weaving my way through traffic to get to the mall. And yet, in spite of all of that, I was in a right foul mood.\n\nMy girlfriend Jennifer and I had been fighting for weeks now and there seemed no end in sight. Not only was she turning me inside out emotionally but I was walking around with a seemingly perpetual case of blue balls that no amount of jerking off would fix for long. Sexual frustrations aside, my life was in turmoil as long as she and I were fighting. That's why I was headed to the mall. I figured a large bottle of her favorite (and very expensive, might I add) perfume would be a suitable peace offering. We needed a reset and she was never the one to initiate that kind of thing -- it had to be me. It always had to be me.\n\nI had just pulled into the parking lot when I got the call. I'm not sure why I even answered. I have a strict personal policy of ignoring calls from numbers that I don't recognize. I certainly didn't recognize this one. I swiped the green button on my phone and held it to my ear.\n\n\"Hello?\" I said, half way expecting to hear a recorded response.\n\n\"Chris, it's Andrea.\" Her voice sounded distant, like she was talking through a tin can but it instantly cheered me up to hear from her.\n\nMy cousin Andrea and I had been close growing up. So close that we were pretty well inseparable. That was right up until her mother moved them out of state for a job offer. We still talked on the phone every few months but lately Andi had been busy with school and work while I had been busy trying to keep my relationship on track. I was really glad to hear from her. I needed my old friend right about then.\n\n\"Hey, Andi! What's this number you're calling from? I almost didn't answer.\"\n\n\"Yeah, I know, I didn't think you would. It's a go-phone. My old one got stolen about a week ago. I've been trying to get in touch with you but you wouldn't answer.\"\n\n\"Sorry, Andi. If I'd have known -\"\n\n\"I know; forget it. Just keep this number for now, it'll be a while before I can get another one. Chris, I need your help with something.\" She was quick, to the point, and all business. There was clearly something very wrong.\n\n\"Yeah, sure. What can I do?\" I asked.\n\n\"Aunt Marjorie mortgaged the camp. She hasn't been making the payments and the bank is going to foreclose. She's going to lose the camp, Chris.\"\n\nThe camp was our childhood stomping ground. We spent summers there together as kids and got into no end of trouble. It had been in the family for untold years. When my mothers parents died, the camp passed to my Aunt Marjorie. No one really understood why it went to her in the will but it didn't really matter. She didn't horde the place. Rightfully, she didn't really feel it was hers alone. Aunt Marjorie, my mother Terri, and Andrea's mother Janice all shared the camp, and we all spent time there together. That came to an end after my mother died in a drunk driving accident when I was sixteen. Neither me nor Andrea really knew why but no one ever went back to the camp after that. I tried a few times but Marjorie would put me off, telling me it was being renovated, or she didn't have time to meet me to drop off the key. She came up with any and every reason to keep me away from there, so eventually I just gave up.\n\n\"When?\" I asked.\n\n\"The foreclosure process has started. Aunt Marjorie was served notice to vacate yesterday.\"\n\n\"How much time do we have?\"\n\n\"I don't know. I talked to the bank but all they do is demand the money. They won't tell me anything because I'm not Marjorie, and Marjorie won't call them because she's too ashamed. Chris, I've tried to talk to her but she just breaks down in tears whenever I bring it up. I don't know what to do.\" I could tell by her voice that she was near tears.\n\n\"OK. I've got something that I've really gotta do right now. Give me a few hours to get this out of the way and I'll call you back at this number.\"\n\n\"OK,\" came a weak reply.\n\n\"Andi?\"\n\n\"Yeah?\"\n\n\"We'll work it out, OK?\"\n\nI heard her take a deep breath on the other end of the phone. \"Thank you, Chris.\"\n\n###\n\nAn hour later I was pulling in the driveway at my girlfriends house. She lived with her parents who were pretty well off. It was a really nice place. Four wide columns rose from the ground floor to the top of the second story, giving the place an air of formality and high brow snobbery. Jennifer and I had been dating for three years on and off, so her parents knew me well and liked me. I never knocked as they would just ask me why I didn't let myself in.\n\nI pushed the front door open and walked through the big house to the kitchen -- the most likely place to find Jennifer's mother Anne. The kitchen was empty so I continued through to the study which had an expansive view of the back of the property as well as the pool and pool house. Standing at the full length windowed french doors that led to the patio and out to the pool, I saw her.\n\nAt the time I wished it was just her that I saw. In hindsight I'm glad things worked out the way they did. It took me a few minutes to recognize who I was looking at. My best friend Brad was laying back on a patio lounger, his swim trunks sitting in a heap on the ground, while Jennifer was on her hands and knees between his legs. From the angle I couldn't see her face but after fucking her for three years I would recognize her ass from a hundred yards. She really had a great ass. Anyway, there she was, head bobbing up and down in Brads lap.\n\nMy blood ran cold and my hair stood on end while watching the double betrayal. 'What the fuck?' I though to myself. 'She hasn't given me a blow job in months.' My anger grew with every dip of that blonde ponytail. I could have walked away. I could have turned around and ended it and never looked back. But I was angry beyond rage. I took a deep breath and felt an queer kind of calm wash over me. It wasn't that I wanted to hurt either of them, but her betrayal couldn't go completely unanswered.\n\nI pulled out my phone, and just for posterity took a quick snapshot of Cheating Bitch and her Boytoy. Then I waited. I watched Brad carefully, gauging his progress by his facial expressions. I had to time this just right for full effect.\n\nI watched as her head went up and down, over and over again. He was laid back in the chair with his hands gripping the arm rests while she worked his cock. She was really getting into it to -- with a degree of enthusiasm that I hadn't seen from her in at least the past year. Sex with Jennifer was OK but after the first year or so things really tapered off and she just wasn't the adventurous, enthusiastic lover that she had been when things were fresh. She had to really be on fire for him because as she sucked him off she reached a hand between her legs and buried two fingers deep in her cunt. I watched for a little while longer while she plowed her own pussy with her hand.\n\nBrad threw his head back, groaning in pleasure and I knew the time had arrived. He was cumming, filling her mouth up with his back stabbing cock cream. I opened the door -- not bothering to be quiet and walked outside. He was still in the middle of his orgasm when I stopped five feet away from the patio lounger. I looked at my girlfriend with her mouth still stuffed full of cock.\n\n\"Sorry to interrupt, you two.\" I wasn't.\n\nBrad and Jennifer were both jolted from their sexual tunnel vision and Brads rapidly softening cock fell out of Jennifer's mouth with a plop. They both looked up at me, wide eyed. I only regret that I didn't still have my phone out to take a picture of my beautiful whore of a girlfriend with a huge load of cum streaming down her chin as she choked and struggled to either swallow what she had in her mouth or spit it out. It was quite the sight.\n\n\"FUCK! Chris, this isn't what it looks like!\" Brad was reaching for a towel to cover himself as Jennifer was trying in vain to clean her face up.\n\nI summoned up all of my exasperation and poured it into my best 'you gotta be kidding me' look. \"Well then what the fuck do you call it when you catch your best friend with his cock in your girlfriends mouth, Brad? Shut up. Fuck you.\" Then I turned to Jennifer. \"And I would say fuck you too but it looks like Brad has been beating me to it for quite a while now. This is why you don't want to hang out anymore? This is why I haven't had a blow job in months? Is your fucking jaw too tired from sucking Brads dick? This is what I get in return for putting up with your bullshit for the past three fucking years?\"\n\n\"What are you doing here, Chris?\" she said, angry at the indignity of having to speak while still wiping the slimy white froth from her mouth and chin.\n\n\"I came over to give you this,\" I tossed the almost forgotten bottle of perfume at her. She tried to catch it but it slipped through her cum slicked fingers and clattered on the concrete below. \"It was supposed to be a make-up gift, but go ahead and consider it a consolation prize. Don't call me. Don't text me. Don't show up on my doorstep. Ever.\"\n\nI knew I had seconds to get out of there before she started crying. I could see it in her face -- the transition from panic, to anger, to regret. Even under these circumstances I couldn't bear to see her cry. Not because I was still in love with her -- I think that died somewhere around the second or third bob of her head. It's just a thing for me. Even today, I can't stand seeing a woman in tears. I turned and walked back into the house, passing Jennifer's mother in the kitchen.\n\n\"Oh, hi Chris! How are you sweetie?\" she chimed.\n\n\"Hi Mrs. Matthews. I'm much better now, thank you, but I think Jennifer needs you by the pool. I think it's important.\" I said, smiling wickedly to myself on the inside.\n\n\"Oh, OK. Is she alright?\"\n\n\"Um, I don't think so. She was crying when I left.\"\n\nConfused, she looked at me as if to say, \"Then why are you leaving?\"\n\n\"You better hurry, she's really upset,\" I said in response to her unasked question.\n\nShe turned and started running as I turned the opposite direction to head back out of the house.\n\n###\n\nOver then next few hours I felt every negative emotion there is a name for and I think I felt some emotions that don't have names. I gathered her things from around my apartment. A couple of night shirts, a few travel mugs, an umbrella, even a couple of pairs of panties -- just the bullshit things that get left lying around. I packed them all up in a cardboard box and dropped them rather roughly on the side of the road.\n\nI called my landlord and explained that I needed my locks changed immediately if possible. She was sympathetic to my situation. She would be - I always paid my rent early and had a good working relationship with her. She sent someone over right away and in a matter of a half an hour I had new locks and new keys to go with them.\n\nThen I took a shower. A long, long hot shower. Three years of my life I had spent with her. I didn't view it all as a waste. We had our good times otherwise we wouldn't have bothered. In the beginning she was a firecracker in bed. She wanted to try everything and we went through just about every fantasy either of us could think up. She was adventurous, uninhibited and fun to be around. Then one day things just dried up. Her enthusiasm was gone, her hunger for sex satiated. She had become asexual. She just didn't want it anymore.\n\nOr that's what I thought. I know now that enthusiasm and hunger for sex weren't gone -- they had just been directed at another target. I stood in the shower, the hot water drumming rhythmically on my skin; washing away the Jennifer. It wasn't all about sex. She was sweet and fun and kind -- or so I thought. At one time I thought I would marry that girl. I had been the perfect boyfriend. I did everything right. Her family liked me. I had money -- showered her with gifts. I was kind, sweet, caring. Stupid fucking girl. My flesh stung and turned bright pink from the scalding torrent. Steam clogged the air and I could taste the water vapor on my tongue and feel it in my lungs.\n\nI opened my eyes and stared at the floor. In my peripheral vision I noticed something that suddenly didn't belong. There was a pink shampoo bottle on my tub. Then I realized just how irritating it would be to continue to see reminders of her. I boxed up her things but there's no way I got everything. We'd been together for three years and she practically lived here. No, it was going to take a long time to rid my life of her. I had to get out of here. This apartment, this town, this life that I had been living that was so intertwined with and structured around her presence.\n\nI shut the water off and got out, not bothering with a towel. I collapsed on my bed dripping wet, with steam rising from my skin. I must have laid there for an hour rolling it over. I was pissed at Brad but I never really put it past him. He was just that kind of guy. Not an all around bad guy but not someone you could trust around your girl. I'd always known that about him but I had more faith in Jennifer than I did him. So I was right about him and wrong about her. That was just salt in the wound. What the hell was she thinking?\n\nMy thoughts were interrupted by my phone ringing. 'Probably Jennifer calling to try to explain this shit away..'\n\nI picked up the phone and swiped the face with my thumb without bothering to look at the caller. \"Fuck you. We're done. I told you not to call me. Now fuck off.\"\n\n\"Um, Chris?\"\n\nFuck! It was Andrea. The camp! I'd forgotten all about it.\n\n\"Oh, shit, Andrea -- I'm really sorry. I was going to call but things got all messed up here...\"\n\n\"It sounds like it. Jennifer?\" she asked.\n\nI sighed, heavy and slow. \"Yeah.\"\n\n\"Well. I'm glad it's not me that you're done with,\" she teased.\n\n\"I meant to call. I'm really sorry.\"\n\n\"Stop it. You need me right now and I need your help. Can you drive up?\" she asked.\n\nI thought about it. You know what? Yeah. Yeah, I could drive up. That's exactly what I needed. I needed to get out of here -- take some time off and get out of this town and this apartment that was so full of Jennifer memories.\n\n\"You're buying the whiskey,\" I said.\n\n\"Sweetie if that's all it takes, I'll buy a case. You can stay at my place. You remember how to get here?\"\n\n\"Yeah, sure.\"\n\n\"Then get on the road already. It's a long drive.\"\n\n\"OK. I'm leaving in 10 minutes.\"\n\n\"Chris?\"\n\n\"Yeah?\"\n\n\"I really miss you.\"\n\n###\n\nIt was a four hour drive across the state line to the town that Andi lived in. Aunt Terri had moved them there after Mom died. That was around the same time she divorced Uncle Dave and used the money she got in the divorce to buy a house and start her new job, and her new life. Unfortunately Andi was along for the ride. She felt like she needed to be there for her mom. The divorce really did a number on Aunt Terri and Andi was worried about her. I wanted her to stay -- begged her to stay. She was my best friend and after just losing my mother, I felt like I was losing much more. But Aunt Terri wasn't about to leave town without her little girl in tow.\n\nWe talked on the phone pretty regularly at first. We emailed, chatted online and when technology caught up we did video chats. I missed her so much. It was like someone cut off my right arm. She was my friend; my confidant; the rock that my tears splashed against. We shared everything together. She knew all my secrets -- even the dirty ones, and I knew all hers.\n\nAfter some time we both got a little older and started having lives outside of each other. She started dating and so did I. Our daily talks turned into every few days, then weekly, then monthly. A year or two of that and we were only talking every three months. I would visit as often as I could. She had a car but it couldn't be trusted to make the trip, so the only time I got to see her was when I would drive up to visit -- which I did as often as I could.\n\nAndi and Aunt Terri didn't get along very well by the end of it all. She never really filled me in on all the details but they fought a lot. I helped her move out of her mothers house on her 20<sup>th</sup> birthday. I tried to convince her to come home but she wouldn't have it. As much as she was at odds with her mother, she still felt like she needed to be close. She didn't have much to move, but we scrounged some furniture and I bought a few things to fill in the gaps so she could feel at home. Aunt Janice wasn't much help as all the divorce money had dried up years ago and she was only just getting by. But by then I was getting my monthly stipend from my trust fund that Mom and Dad had put in place before they died so it really wasn't a big deal. Andrea made it out to be much more than it was.\n\nThese were the things I was thinking of as I made the four hour drive. These things and something else. The last thing she said to me on the phone before she hung up. It could number in the thousands the times that we've told each other, \"I miss you.\" It wasn't the words though. It was the sincerity in her voice. Her tone was almost urgent, pleading even. Like she really needed me to know that she missed me. I was worried about her -- something was wrong. Something that didn't have anything to do with the camp. Even with everything that happened to me that day, I was worried about Andrea.\n\nThe sun was going down now and the air started to get a bit of a chill in it. It was nice, crisp, fresh air and I was glad that I kept the rag top off of the Jeep for the ride in. It was about 10:00 by the time I pulled into a parking space and walked up the stairs to number 216. I smiled as I recalled when she moved in, she made such a big deal about the apartment number. Our birthdays happened to fall on the same day -- did I mention that already? Anyway -- you guessed it, February 16<sup>th</sup>.\n\nI hardly knocked on the door before it swung open and Andi rushed me. She threw her arms around me, pushed her body hard against mine and planted a wet kiss squarely on my lips! Oh, there was no tongue or anything but even so, this wasn't how we usually greeted each other. My eyes went wide, but hers were shut. When she finally ended the lip-lock she looked at my face and immediately blushed.\n\n\"Oh, shit. I'm sorry. I shouldn't have done that. I've just been so anxious for you to get here and I was just thinking about you and here you are!\" she said it all in one breath.\n\n\"No, no. It's fine, really. I was just... I didn't expect it is all.\"\n\nShe looked at me and I could tell she was feeling a little awkward so I figured I'd break the tension.\n\n\"OK, now is when you invite me in and pour me a whiskey.\"\n\nAndi smiled at me and led the way into the kitchen where she did just that.\n\n###\n\nWe sat at the small table in her kitchen and talked and drank taking turns pouring the whiskey into two glass tumblers. Andi and I always had a thing for cheap whiskey. It was all my father ever kept in the house in the way of alcohol so naturally it was the first alcoholic drink Andi and I ever tried. For whatever reason it stuck with both of us. I still remember that first sip. It was awful and horrible and burned all the way down. We were a sight to see -- drinking whiskey and trying to keep a straight face to prove to the other that we were grown up and could handle a real adult drink. It didn't work. We both made faces every time we took a sip of the stuff but it was what we had. After faking it enough times I guess it just grew on us and became our preference.",
        "It had been some time since our last real conversation so there were plenty of details to fill in. I wanted to know more about the camp but there would be time for that. Right now I needed to vent a little and she was soaking up everything I had to say about my recently failed relationship with Jennifer. I told her about the troubles that we had been having for the past weeks and the slide in our sex life that took place over the past year or two.\n\nAndi listened. She was good at that. She stayed quiet when she was supposed to, asked the right questions at the right times and offered an insult to the offending parties when it was appropriate. She even laughed when I'd make a bad pun to lighten the mood a little. During the course of the conversation, I noticed that she seemed to be getting closer to me. I was sure I hadn't moved my chair but Andi on the other hand seemed to scoot a little closer every time she reached for the bottle. I kept talking but was suddenly aware of her proximity to me. There was something off. Something different. There was just something about the way she was acting that didn't feel like the old Andi.\n\nI suppose it could have had something to do with her outfit. She had on a T-shirt and panties. No bra, no shorts, nothing else. I knew that's what she usually slept in and it was late when I got here so I hadn't thought much of it when she opened the door. I was certainly used to seeing Andi in various stages of dress (or undress). She wasn't a terribly modest person, especially around me -- We were much more like brother and sister in that respect. Though I'd never seen her naked, she didn't think anything of stripping down to her bra and panties in front of me if she needed to change her clothes. I was always aware that she was a pretty girl but we just didn't think of each other in a sexual way.\n\nMaybe it was the alcohol? Maybe my body was responding to the visual stimuli from earlier in the day? I didn't know why but I was noticing Andi. The way she moved -- not the way that little girl that I grew up with moved, but the way this grown, adult, woman moved. I noticed her thighs, soft and creamy skin that disappeared beneath her T-shirt. I noticed the small peaks of her nipples that tented the front of her shirt. I noticed the graceful, sweeping contours of her shoulders where they met her neck. And the lingering feeling of her lips on mine when she opened the door.\n\n\"You're kidding me?! You caught her going down on him?\"\n\n\"No shit. Look, I got a picture.\" I showed her the picture that I snapped at Jennifers house earlier that day. She grabbed the phone from my hand and studied the image.\n\n\"So then what happened?\" she asked, still looking at the picture.\n\nI laughed a little and she put the phone down, grabbing her glass and taking a sip of the cheap stuff. \"Well, I waited.\"\n\n\"For what?\"\n\n\"For her to finish him off,\" I said.\n\n\"Chris, what the hell? Why give him the pleasure?\"\n\n\"Well, call me an asshole, but I wanted to wait till she had a mouth full of cum before I confronted her. It wasn't about him. Fuck him.\"\n\nAndi's eyes went wide when I said that. \"Go on.\"\n\n\"I walked out there just as he finished shooting in her mouth. He tried to explain himself but I shut him down. Then, while she was trying to wipe his cum off her chin, I gave her an ear-full. I told her to come pick up her shit and never speak to me again. Then I walked back in the house and sent her mother out to comfort her.\"\n\nAndi threw her fists in the air over her head. \"Justice! That's awesome! I wonder what Mrs. Matthews thought when she found her.\"\n\n\"Yeah, I kinda hated to do it, but I figured her mom would get past it a lot easier than Jennifer would so I don't feel too bad.\"\n\nThen the room went quiet and for the first time since I arrived here things felt awkward. Talking about everything that happened -- saying those words out loud and looking at Andi's body throughout the conversation had an effect on me. My cock was hard and straining under my jeans. I mentally chastised myself for the thoughts I was having about my cousin and decided it was probably best to call it a night. We could talk more in the morning over a cup of hangover coffee.\n\n\"I think I better hit the sack Andi. It's been a crazy day and this whiskey's got me tired.\" I stood up from the table and stretched, then headed for the sofa in the living room.\n\n\"That sofa is awful to sleep on. You'll be hurting tomorrow. Want to share the bed like when we were kids?\" She smiled her innocent Andi smile.\n\nIt was tempting. Her mattress was one of the things I bought for her when she moved in here. It was expensive and comfortable. I thought about it and then thought better of it. We had consumed most of a bottle of whiskey together and things were already weird enough. I didn't want to take responsibility for what might happen if one or both of us let the liquor get the better of our good sense. If things happened - if we let things go too far -- she was my rock. She was my friend. And never far from my thoughts was the fact that she was my cousin! I didn't want to throw that away for a night of drunken... whatever this was. There was no doubt that she was sending signals, but I just couldn't make it right in my head.\n\n\"Uh... I think I'll be OK Andi. Thanks though.\"\n\n\"Suit yourself,\" she said as she stretched in the doorway. Her arms reached up to the door frame and her shirt rode up to above her belly button, exposing her pink cotton panties and pushing her breasts against her t-shirt. I watched, transfixed by her shape as she twisted her body to stretch her back muscles. And with that, she turned in place and disappeared into her bedroom.\n\nI collapsed on the couch and pulled a blanket over me as I rested one foot on the floor to try to slow down the carousel that I boarded at some point earlier in the evening.\n\n###\n\nMorning came too fast, as it always does after a night of drinking. I woke to the smell of fresh coffee and a blurry vision of Andi in the kitchen, still wearing the same t-shirt from the night before. I rubbed my head and held a hand to either temple in a futile attempt to still the throbbing. Andi noticed me stirring and poured me a cup of coffee.\n\n\"G'morning. How'd you sleep?\"\n\nAs I sat upright the ache in my head seemed to spread down my neck and into my back. I was hurting all over.\n\n\"Uhg,\" I mumbled. It was the only response I could muster.\n\n\"Back hurt?\" she asked.\n\n\"Uh-huh.\"\n\nI think she laughed at me then but I can't be sure. She probably did. \"I told you so, dummy,\" she chided. \"Here, drink some coffee and go get yourself cleaned up. You'll feel better after a shower and some food. I'm making breakfast.\"\n\nBy the time I finished showering I was already feeling much better, if not more than just a little ashamed that I had stood in my cousins shower and rubbed one out while thinking about her silky smooth legs and those fuck-me hips. I thought I must really be desperate. The months without sex with Jennifer had my libido cranked into overdrive such that thinking about my own cousin was stimulation enough for me to drop a load of cum on her shower floor.\n\nI choked down my guilt like a bitter pill and focused on returning to the land of the living. The hot water did it's job and washed the whiskey-sweat off of my skin and though my tongue still felt too big for my mouth, the coffee was working its magic as well. I dried off and slipped my jeans on. It was hot and steamy in the bathroom from the shower running and I didn't much care to put my shirt on just yet.\n\nI walked out of the bathroom and headed down the short hallway, intending to go to the kitchen to see what Andi was cooking when I heard a strange voice. Andi was talking to someone. I slowed down and stopped at the end of the hallway, not eavesdropping on purpose but I didn't want to interrupt.\n\n\"...just don't have it right now. I just need a couple more weeks. Mr. Dempsey hasn't paid me in a month but he promised he'd have all of my back-pay on my next check.\" Andi's voice was strained and pleading.\n\n\"I'm sorry. You too far past due -- I couldn't take a payment from you at this point if I wanted to. You have a week to have everything out. Which, so you know, is six days longer than I would give anyone else. I'm really sorry Andrea, I like you, I really do -- but I'm not running a charity. I have to answer to the owners and they want to know why I'm allowing a tenant to stay when they aren't receiving any rent payments. I can't keep making excuses for you.\"\n\nI heard the door thump closed as I walked out into the living room. Andi was sitting with her back to the door and her head in her hands. I crossed the room and knelt in front of her.\n\n\"Hey,\" I said.\n\nShe looked up at me then, tears streaming down her face. Uhg. It got me right in the heart.\n\n\"What's this all about?\" I asked.\n\nI brought her over to the table and walked into the kitchen just in time to save the eggs that were about to burn on the stove. I served us a breakfast of toast, eggs, and more coffee while she explained the trouble she had been having at work. John Dempsey was the owner of the Black Jack Bar and Grill where Andi worked. She was his head cook and came up with the recipes and ideas for most of the items on his menu. Since she had been working there food sales had gone through the roof and Dempsey was making money hand over fist for a while. In the beginning he took good care of Andi, giving her bonuses based on the volume of food sales.\n\n\"It all worked out really well for a while. He's a good guy to work for. He's fair and honest and he's really gone out of his way for me,\" she said.\n\n\"Then why did he stop paying you? That doesn't sound fair and honest to me.\"\n\n\"About three months ago his son Jimmy was diagnosed with cancer. He's sucking the bar dry to pay for his treatments. He needs me, and he's been there for me in the past,\" she said.\n\nAndi always had a generous heart. I felt bad for her boss -- it was a sad story -- but she had to be able to pay her rent.\n\n\"Andi, I know you want to help him out but you need a job that pays.\"\n\n\"I know that. He knows it too. I've already told him that I'm looking for something else.\"\n\n\"How much do you owe?\" I asked.\n\n\"It doesn't matter. You heard her, I'm too far past due. Even if I had the money, I need it for tuition when school starts up again.\"\n\n\"So what are you going to do?\"\n\nShe shrugged her shoulders and picked at the cold eggs on her plate. \"I don't know.\"\n\nI thought about it for a while. She didn't have many options. She wouldn't go back to her mothers house. After the falling out that they had when she moved out, I doubted that she had even spoken with her mother much since. Then I had an idea.\n\n\"Well, why don't you move in with me?\"\n\n\"Chris that's really sweet of you but it's too far away from school. My car won't make that drive once a week, much less three.\"\n\nShe was right. This was more complicated than I first thought.\n\n\"When do you go back to school?\"\n\n\"Eight weeks. But the way things are going, I'll probably have to skip a semester.\"\n\nI rolled it over in my head. I wanted to help Andi but I just wasn't sure how.\n\n\"Well, we've got a week to figure this out. Let's go see Aunt Marjorie. I need to talk to her.\"\n\n###\n\nIt was another pretty day and another day to keep the rag-top off of the Jeep. After prodding Andi to get dressed, we got in the Jeep and made the half hour drive to Aunt Marjorie's house. She lived in a small house on a large piece of land just outside of town.\n\nDuring the drive over, I played a few tunes that I knew Andi liked from when we were younger. That seemed to cheer her up a bit. It was nice to see her smiling. At one point in one of our favorite songs, she started singing. Her hair whipped around her head from the wind until I gave her one of my baseball caps to tame her tresses. And then I noticed her again. She had such a simple, delicate beauty. None of her features overpowered her appearance, they just seemed to fit in perfectly with the rest of her; everything in it's place as if each feature had been sculpted deliberately and with the sole purpose of adding to her beauty.\n\nAnd once again I found my eyes drawn to her body. Wearing a short pair of shorts, she continued the theme from the previous night of showing off her smooth, toned legs. Her hips were nearly as wide as her shoulders and combined with her slender waist she had a beautiful and very shapely -- though trim, figure.\n\nShe's you're fucking cousin! I thought to myself. Stop it! It's Andi for crying out loud!\n\nI think she caught me looking a couple of times but made no indication that it bothered her. She just smiled at me and continued singing along with the play list. I couldn't help it. It was as if I had suddenly woken up to the fact that my cousin was smoking hot.\n\nWhen Andi's song ended she reached over and turned down the volume on the stereo. \"So how long has it been, cousin?\" She asked.\n\nI almost flinched at the last word. \"Since what?\"\n\n\"You told me that you and Jennifer hadn't had sex in a while. By the way you've been looking at me all day I'd guess it's been a long while, so how long?\"\n\nYep. I was caught. My face turned a bright shade of red as I recalled what I'd done in her shower just a few hours ago. I started to stumble over an apology. \"I.. uh... I didn't mean to..\"\n\n\"Christopher Mason, don't you dare apologize to me for that,\" she said, doing her best to be stern. Then, her tone softened just slightly, \"You can look all you want. It's kind of nice that you finally noticed I have tits.\"\n\nI don't know what I was expecting to hear her say, but it certainly wasn't that. She wanted me to look? This was surreal. From the moment she answered the door I felt like I was in the twilight zone. I didn't ever remember her being so overtly suggestive; it was all so very strange.\n\n\"So how long has it been?\" she repeated.\n\nI did a little math in my head. I remembered the last time Jennifer and I were together. It was after a party and she was drunk and horny. I took advantage of the opportunity as I wasn't sure when it would come along again. When I realized how long it had really been it surprised me.\n\n\"Uh, well. Going on three months. Something like that.\"\n\n\"I can't believe you put up with that. You can have pretty much any girl you want. She had to know that. I'd think she'd have been more careful to keep you happy.\"\n\n\"Yeah, well. I thought I loved her. She told me she was just having a hard time with some things. I was trying to be the good guy, you know? Trying to be sensitive to her needs. All that shit. Turned out to be bullshit anyway.\"\n\n\"You thought you loved her? What do you mean by that?\" she asked.\n\nI thought back to those few moments standing in her parents study, watching her and Brad. \"I don't know. It's weird. When I was watching her and Brad out by the pool, something just clicked. It was like, one minute I was head over heels for her, then when I saw them together I got really mad. I got so angry that the love just... stopped. Like one minute I loved her and the next... just... nothing.\n\n\"I've thought about that a lot since then. Other than you and the camp, it's been the only thing on my mind. The only thing that I can come up with is maybe I wasn't really in love with her. Maybe I thought I was because she stuck around and mostly kept me happy, you know? I mean, how else could I just all of the sudden not feel anything for her? Does that even make sense? It's sounds kind of dumb now that I say it out loud.\"\n\nAndi shook her head, \"No, I know what you mean. It was like that for me and Tom. We were together for almost a year but when things ended I just kind of kept going. Almost like nothing changed. I cried for a couple of days. I was pissed at him but it didn't really matter to me that he was gone, it was just another day.\"\n\n\"Yeah,\" I said.\n\n\"Anyway, I think it's really sweet that you put your needs on hold for her like that. I'm sorry that she fucked you over, but for what it's worth, I don't think she deserves you.\"\n\n###\n\nWe sat at Aunt Marjories kitchen table sipping coffee and trying to breath through the smokey haze that emanated from the ash tray sitting by her coffee cup. She covered her face with her hands as she sobbed through the story of how she mortgaged the camp to catch up on some debts that had gotten out of control. All of that would have worked out just fine -- she was back on track financially and had almost all of her debts paid off except for the camp. That's when she lost her job at the post office.\n\n\"I'm so sorry. Your grandfather would be so ashamed of me. That camp has been in our family for over a hundred years and now I've lost it!\"\n\n\"Wait,\" I stopped her. \"It hasn't been foreclosed on yet, right?\" I asked.\n\n\"It doesn't matter Chris,\" she said through her tears. \"I don't have the money to make a payment on it even if they would take one. They're asking for the full balance on the loan -- not just a payment.\" Her face was a ragged display of desperation and remorse.\n\nAunt Marjorie was the oldest of the sisters but she was also arguably the prettiest. She was in her late fifties but aside from her smoking habit had taken exceptionally good care of herself. The wrinkles on her face cut perhaps a little deeper now than I remembered but her features were still deceptively young and she kept her hair dyed to further the illusion. Her tears made her look worse for wear and tugged at my heart strings.\n\nA thought occurred to me. A solution that might work out for everyone. \"What's the balance on the loan Aunt M?\" I asked.\n\nShe met my gaze briefly then looked down at her coffee cup. \"Sixty-seven thousand.\"\n\nI leaned over to Andi who was holding Aunt Marjorie's hand and whispered to her, \"I'll be back in a few minutes. I need to make a phone call.\"\n\nI walked outside and over to my Jeep where I had left my cell phone. I quickly dialed one of my fathers old friends -- Jesse Markham. Jesse maintained the trust that my parents had started for me many years ago. I started receiving payments from it shortly after Mom died. It was a requirement that the trust start paying out on my 21<sup>st</sup> birthday or else in the event of a tragedy -- like both of my parents passing away. Dad died when I was really young and Mom was killed in a drunk driving accident when I was sixteen. With her passing, the requirements had been met so I started getting payments. I had no idea how much money was in the trust but I knew it was a lot. I wasn't allowed to touch the bulk of the money until I turned thirty five but there were exceptions. I didn't know what any of those exceptions were -- as part of his duties as executor he wasn't allowed to tell me. But I had an idea that this might qualify.\n\nJesse checked in on me from time to time. I guess he felt that he had some obligation to my father after my mom died he did his best to see to it that I was OK. We'd go have lunch or dinner whenever he could make time for it. He took care of just about anything that I needed. He made sure I had a place to stay, money in my pocket, and kept me on the straight and narrow in school. Aside from a disagreement we had about me attending college (that we later smoothed out) he and I were friends. I had his cell number but he asked me years ago to call him on his office line if it was during the work day.\n\nFinally, I got the receptionist at Jesse's office.\n\n\"Markham, Jones, and Dunn, how may I direct your call?\" piped a voice that I didn't recognize.\n\n\"Jesse Markham, please?\"\n\n\"Mr. Markham is in a meeting at the moment, can I direct you to his voice mail?\"\n\n\"No ma'am. My name is Chris Mason, Mr. Markham handles my trust and I have a time sensitive issue that I need to speak with him about.\" Jesse and my father were very close and I never had trouble getting through to him, even when he was busy.",
        "\"Mr. Mason, I'm sorry but he's in a meeting. The best I can do is have him call you back.\"\n\nNow I was getting annoyed. The normal receptionist was Bonnie. I knew her well and she never gave me any flack about putting me right through. She must have been out for the day.\n\n\"I see. What's your name, Miss?\" I asked, as politely and casually as I could manage.\n\n\"My name is Rita,\" she responded, her tone softening just slightly at the inquiry.\n\n\"OK, Rita?\"\n\n\"Yes, Mr. Mason?\"\n\nI wasn't sure this was going to work but I figured I'd give it a shot. \"I've got Jesse's cell phone number but I know how much he hates being bothered on his personal line for business matters. Now, I could just call him on that line, or perhaps if I read the number back to you that would be sufficient to convince you that I have legitimate, and very pressing business?\"\n\nThe phone went silent for a moment as she thought about my proposition.\n\n\"I wouldn't have his cell number if I didn't know him personally, right? Rita, I promise he won't be angry. He was a close friend of my fathers before he died and has been a close friend of mine since and I really need his help right now.\" I asked, prodding her further.\n\n\"Read me that number?\" she asked after another moment of hesitation.\n\nI knew the number by heart and rattled it off to her.\n\n\"Hold please, Mr. Mason.\"\n\nI had to give it to her -- she was certainly professional. Not once during the conversation did she sound like she was going to lose her cool. A minute later the line clicked as the call transferred and I heard Jesse.\n\n\"Chris?\"\n\n\"Hi, Jesse. Sorry to interrupt your meeting.\"\n\n\"Holy shit, Chris. I've always said you have a silver tongue, my boy! Fine work getting past Rita there. I've got billion dollar clients that can't get her out of her chair,\" he said, clearly amused by the situation.\n\n\"Hey, be nice to her. I told her she wouldn't get in trouble. Where's Bonnie?\" I asked.\n\n\"Bonnie got a promotion, she's my personal assistant now.\"\n\n\"Oh, good for her! And good for you for finally giving that poor woman a raise,\" I chided him.\n\nHe snorted, \"Poor woman my ass. So what's up Chris? I don't mean to rush you but I've got a few balls in the air right now.\"\n\n\"Yeah, um. Well, I've got kind of a situation here. I need to dip in to the trust.\"\n\n\"Chris you know I can't let you do that yet. What kind of situation?\"\n\nHe listened quietly while I explained what was going on with the camp. When I finished he remained quiet for a moment. A long enough moment that I had to make sure he was still there.\n\n\"Jesse?\"\n\n\"Yeah, I'm here Chris,\" he said.\n\n\"What do you think? Can you help me?\" I asked.\n\n\"This camp you're telling me about -- I assume it has a dwelling on it?\"\n\n\"Well, it's kind of old but yeah it does.\"\n\n\"OK, well here's the deal. One of the very few provisions that are written in to the trust that allow a withdrawal outside of your monthly stipend is the purchase of a residence. Meaning you have to actually buy the place from the your Aunt. You could probably get it for a song though. I know she's your Aunt but she's the definition of a motivated seller.\"\n\nVictory! I thought. \"So you can do it?\" I asked, excited that things were working out.\n\n\"Now hold on,\" he cautioned.\n\n\"What?\"\n\n\"Chris, the word residence implies that you're going to actually reside there. I can only do this if you're going to live there.\"\n\nAnd there was the rub. I thought for a moment about what this would mean. It wasn't that I loved my apartment -- hell, I could take the place or leave it. My original intention was to buy the place from Marjorie and let Andi live there. She could go to school and not have to worry about paying rent. She wouldn't be living the high life there, but at least she wouldn't have to answer to a land lord. But being required to live there myself would change the dynamic a bit. I'd have to get out of my current lease and quit my job.\n\nThen I though about Jennifer. If I moved out here I would be just about as far away from her as I could reasonably get. I wouldn't have to see memories of her every where I looked. Moving out here would make it easier to move on. A change of scenery for a time certainly wouldn't hurt anything.\n\n\"How long would I have to live there?\" I asked.\n\n\"Knowing how your dad used to think, it's probably tied to the capital gains penalty cut-off. I'm guessing two years. I'd have to get back to you on it to be sure, but I think it's a pretty safe bet.\"\n\n\"Alright, I want to do it, but I've got to float the idea on my Aunt. It's her only way out of this mess so I'm sure she'll go for it but I need to make sure before we get the ball rolling.\"\n\n\"Sounds good Chris. Just let me know.\"\n\n###\n\nI went in the house and explained the situation to Aunt Marjorie. It didn't go over quite as well as I expected it to.\n\n\"Chris, I can't let you do that. That's your money, sweetheart. I couldn't take it.\"\n\n\"Aunt M, you're not taking my money. It's a legitimate transaction, I would be buying the camp from you. It would be mine, but it would still be in the family.\"\n\nMarjorie slowly nodded her head. Her eyes were distant and she seemed to become slightly detached. \"OK,\" she said.\n\n\"Alright. I'll have Jesse call you. He'll take care of everything. Don't worry Aunt M. We can fix this.\"\n\nFinally she looked at me. \"Chris, you've always been such a good boy.\" She gave me a half-smile but there was no cheer in it. \"It's not the money I'm worried about. No one has been to the camp since your mother died.\"\n\n\"You've been keeping me away from the camp for years. Why, Aunt M? And why did everyone stop going there when Mom died?\" I asked.\n\nShe shook her head in reply as fresh tears welled up in her eyes. \"I can't talk about it with you sweetheart. I'm sorry. I just can't. You have Jesse call me. We'll do the paperwork and then I'll give you the key. Then you'll have all the answers you want.\"\n\n\"Aunt M--\"\n\n\"No. No, Chris. That's all right now, OK? You two should go now. I have some things I need to do.\" She rose from the table and started shooing us out the door.\n\n###\n\nOn the ride back to Andi's apartment, I made a few calls. If I was going to be staying here for a while I needed to tidy up a few loose ends. I called Jesse back and told him to get started with the purchase and gave him Aunt Marjorie's phone number. I told him to work into the purchase price a little extra so that she could walk away from the deal with something and have some spending money. I also told him that we were on a tight time line and I needed the deal done inside of a week. He didn't like to be rushed but he told me he'd do his best.\n\nThen I called my boss and let him know that I wouldn't be working for him anymore -- at least not for a while. He was sorry to hear that I was leaving but understood once I explained everything. The last phone call I made was to my landlord. My lease had been on a month to month basis since my original six month lease ended. As long as I kept paying rent, I got to stay in the place. I let her know that I wouldn't be staying after the first of next month and that she should start looking for a tenant.\n\nAfter my last phone call Andi asked, \"So, are you going to explain to me what the fuck just happened?\"\n\nI grinned. \"Well cousin, it's like this. I wanted a change of scenery, you needed a place to live, and Aunt M had some property that she needed to sell quick. So if you're up for it -- that makes us room mates.\"\n\n\"You want me to live with you?\" she asked.\n\n\"Why not? I mean that solves everyone's problems, doesn't it?\"\n\n\"We're going to live at the camp?\" I guess she was still trying to wrap her head around the whole thing.\n\n\"Why not?\"\n\n\"No, I'm not saying it's a bad idea, I'm just surprised. You just snapped your fingers and just like that it's done?\"\n\n\"Well, its going to take some time to get all the paperwork done. Jesse will take care of that though. I'll just need to be there to sign all the final documents. Once that's done we need to make getting your stuff moved a priority. That's the smallest time line that we have to deal with now. Jesse has worked miracles for me in the past but to get this thing finished inside of a week is going to be tough. After that, I'll have to go back to my place and make arrangements for moving all of my stuff. But after that, yeah, it's done.\"\n\nIt was hard to tell with the wind blowing the way it was in the Jeep but I thought I saw Andi tear up. \"Thanks, Chris. I don't know what to say.\"\n\n\"Don't say anything. Just tell me where you want to eat, I'm starving.\"\n\n###\n\nAndi and I had a passable lunch and decided to spend the evening in. Still recovering somewhat from our cheap whiskey binge we opted for a couple of bottles of wine and finger-food for dinner. She changed into an outfit similar to the one she wore the night before but her t-shirt didn't cover nearly as much. Had it been any shorter I'd have easily been able to see her belly-button. Though her flat, smooth stomach was nice to look at, I was having a hard time keeping my eyes off of the rest of her. The way her ass filled out a pair of panties just had me mesmerized.\n\nOf course the wine wasn't helping me keep my eyes pointed at something that wasn't her, but I kept thinking of the comment she'd made earlier in the day. \"Look all you want,\" she had said. I was certainly doing that but I was also aware that I might be making her uncomfortable. I didn't want to come off as a creep but I kind of felt like one with the way I was leering at my cousin.\n\n\"So what was Jennifer like?\" she asked, abruptly.\n\n\"What do you mean? I've told you a lot about her. You probably know her better than any other person who's never met her.\"\n\n\"No, I know. You've told me a lot about her but there are some things you've never really talked about.\"\n\n\"Like what?\" I asked. I couldn't for the life of me think of anything that I'd kept from her regarding my relationship with Jennifer.\n\n\"Well, was she a good lay?\" she asked.\n\nI almost spit out my wine but choked it down as best I could. I wiped my mouth with a napkin and cleared my throat, buying a little time to formulate an answer. \"Uh... why do you want to know that?\" I asked.\n\n\"Because I'm curious.\"\n\n\"Curiosity killed the cat,\" I quipped.\n\nAndi smiled her devious little grin that I just loved. \"Maybe so, but I'll bet hard cash that it licked that pussy first.\"\n\nI almost lost another sip of wine. \"You gotta stop doing that while I'm drinking!\"\n\nShe giggled but quickly got serious. \"So c'mon. Spill it. Did you guys have a good sex life? When you were still having sex, I mean.\"\n\n\"Yeah, I know what you mean, I just don't understand why you would want to know that kind of stuff. We're almost like brother and sister, you know?\"\n\nShe sat back in her chair and hugged her knees to her chest, resting her chin between them. She was quiet and her pensive expression didn't indicate that she would reply any time soon. I must have said something wrong. Maybe she was upset that I didn't want to share? It didn't matter. If she wanted to know that badly, I'd share.\n\n\"It was good.\" That got her attention and she seemed to perk back up a bit when I started talking. \"I mean, she was OK I guess. It wasn't the wildest sex I've ever had but she was sexy and pretty much always willing. At first anyway.\"\n\n\"Did she go down on you a lot?\" she really wasn't pulling any punches. She wanted details. I wasn't sure how many details I wanted to share but she was my best friend after all.\n\n\"At first she did it all the time. I thought I was in heaven. After a while though, she'd make excuses. Her jaw hurt. She just brushed her teeth. One time she told me she had a dentist appointment and wanted to be 'fresh'. Didn't take me long to get the picture. That honeymoon was over before it started, you know?\"\n\n\"Maybe she was just waiting for you to return the favor.\"\n\n\"Oh, the favor got returned, trust me!\"\n\n\"So you ate her pussy a lot?\" I couldn't believe how Andi was talking! This was really out of character for her but she was certainly having an effect on me. Talking about this stuff was making my cock stiff -- as if her outfit wasn't doing enough of that. I wasn't fully hard but things were starting to get tight in my jeans.\n\n\"Oh yeah. She tasted great, I used to love going down on her.\" Then I realized that I really was going to miss that. Not Jennifer herself, but she did have a great pussy. Tasted great, smelled great, and damn sure felt great.\n\n\"So what's going on here? You've never asked me these kinds of questions before. In fact I remember you telling me out-right that you didn't want to know these kinds of details. So what gives?\" I asked.\n\n\"I dunno. I guess it's been a while for me too. I'm kind of wound up,\" she said.\n\n\"How long?\" I asked.\n\nWithout hesitation she responded, \"Eight months, two weeks and three days.\" She tipped her head back and drained her wine glass, then refilled it.\n\n\"Holy shit, Andi. Was that when you and Tom split?\"\n\n\"The day after. I pretty much attacked one of my co-workers after close one night. I just kinda went crazy and jumped him.\"\n\n\"Things didn't work out with him?\" I asked.\n\n\"No, he was terrible in bed. I wasn't looking for anything steady anyway, I just needed a fix. Unfortunately he didn't get the message that it was just a one night stand. He's been hounding me for a date ever since.\"\n\n\"So, what, you don't ever...\" I trailed off, hoping she would get my meaning.\n\n\"What?\"\n\n\"Well, you know... there's ways to get a fix even when you don't have a partner.\"\n\n\"Christopher Mason, are you asking me if I masturbate?\" she teased, obviously thoroughly amused by my sudden timidness.\n\n\"Well?\" I prodded.\n\n\"I'll answer your question because you've been so good about answering mine. But you have to say the word first.\"\n\n\"Fine. If you need a sexual fix, why don't you just ma-stur-bate?\" I asked, making a show of saying the word.\n\n\"See, that wasn't so difficult. And I do. Frequently. But it's not the same and you know it.\"\n\nI nodded in agreement. \"You got me there.\"\n\n\"So what about you?\"\n\nI arched my eyebrows at her, \"What about me?\"\n\n\"Well, do you?\"\n\nMy face turned a furious shade of red as she inadvertently reminded me of my incestuous little fantasy from this morning in her shower. I could never tell her about it. She would never speak to me again.\n\n\"Oh my God! You're blushing! When was the last time you did it?\" she asked, clearly excited and by my way of thinking, overly amused at her discovery.\n\n\"I don't really like this game anymore.\" Now it was my turn to drain my glass. I did so and she quickly refilled it with the remainder of the first bottle of wine.\n\nAs she turned the corkscrew on the second bottle she forged ahead with her line of questioning.\n\n\"C'mon Chris. It's me. You can tell me anything, I won't judge you. You know that, so c'mon. I wanna know!\"\n\nI heaved a sigh and gave in. \"This morning,\" I said and immediately dropped my forehead to the table. I couldn't see her expression but I was imagining one of shock and disbelief.\n\n\"So that's what took you so long in the shower,\" she casually replied. Maybe I hadn't surprised her. Maybe she didn't care. Either way the reaction wasn't as bad as I was expecting. In fact it wasn't bad at all, simply matter-of-fact and rather flat. But now it was my turn.\n\n\"OK, cousin. Like your mother always says -- turn-about is fair play. Answer your own question.\"\n\n\"What? When was the last time I did it?\" she asked.\n\nI nodded.\n\nShe grinned wide and seemed to blush a little herself, though she didn't blush nearly as easily as I did. \"This morning,\" she said quietly. Then, after a long pause, \"While you were in the shower.\"\n\nNo way! While I was in the shower she was out here. Doing what I was doing. At the same time! My cock flew to full mast as quickly as I'd ever known it to and immediately I had to shift in my seat to relieve the pressure.\n\n\"See? We're pretty much in the same boat.\" She finished opening the bottle of wine and plopped back in her chair, pulling her legs up to her chest as she did before but leaving them separated this time as she rested her arms on her knees. I couldn't help but glance down at her crotch -- her pink panties pulled tight against the cleft of her pussy. Was that? A dark spot on her bright pink panties? She was wet!\n\nI guess my eyes lingered too long as she snapped her legs shut. I made the mistake of looking up at her eyes to see if I had been caught -- again -- looking at her intimate parts. Sure enough, she sat straight back in the chair, smug, smirking, and confident.\n\nI was starting to feel the wine by then. I hadn't had a lot to drink but I didn't want to wake up in the same condition that I was in that morning. I decided that I'd better be careful not to get there. Aside from that Andi seemed to be teasing me relentlessly now and even though she was smoking hot, she was still my cousin. She was obviously going somewhere with this but I wasn't sure that it was a place we needed to go. I needed to call it a night. I still had this raging hard-on that I needed to take care of if I was going to get any sleep at all.\n\n\"Andi, I should probably turn in. I don't want to wake up hurting tomorrow like I did this morning.\"\n\nShe frowned at me. \"Really? Right now?\"\n\nI shot her a look that said, \"Yeah, really.\"\n\n\"Fine. But you're not going to sleep on the couch again, are you?\" she asked.\n\nI shot her the same look.\n\n\"One of these nights you're going to get tired of punishing yourself like this, but go ahead. You think it was the hangover that made you so sore this morning. Now you'll see.\"\n\nI got myself settled on the couch but not before grabbing some tissue from the bathroom. As soon as Andi disappeared into her bedroom I tore at the zipper of my jeans and reached for my cock. Sweet release was a short number of strokes away with images of pink, wet panties floating in my head. I came hard and drifted off to sleep in record time.\n\n###\n\nIt was my phone that woke me the next morning. Well, in fairness, I probably would have ignored it if it weren't for that most eye opening of odors filling my nose with fresh brewed goodness. I reached over to the coffee table where I had left my phone the night before. Habit took over when I saw Jennifer's name come up on the phone display and my thumb swiped the screen to answer. All too late I realized what I'd done. I cringed as I put the phone to my ear.\n\n\"Hello?\"\n\n\"Chris, I know you probably hate me but just hear me out, OK?\"\n\nHad it been later in the day I would have hung up the phone. Had she sounded a little less pleading I would have hung up the phone. Had any number of things just been slightly different, I wouldn't have even spoken to her. But I did.\n\n\"What do you want?\" I asked.\n\n\"I went by and picked up my stuff. You didn't have to leave it on the side of the road, you know?\"\n\n\"I was pissed. I'm still pissed. Did you call because you wanted to fight? Because if that's the case, I'll take the opportunity to remind you that I don't have to put up with your bullshit anymore.\" I said. It was true. I didn't realize how angry I still was with her until I heard her voice on the other end of the phone.\n\n\"No, wait! Don't hang up!\" Again with the pleading.\n\n\"Then what do you want?\"\n\n\"Look, I don't know if maybe someone stole it out of the box that you left on the side of the road or if you just forgot to put it in there but I couldn't find my jump drive.\"\n\nHer jump drive. She had been working on a term paper for school for months. It was one of the few things that she actually gave a shit about. She would come over to use my computer, complaining that hers was too slow. For weeks I had been looking at the back of her head while she sat, click-click-clicking away doing research and roughing out her paper. Her drive was probably sitting in the USB port on my laptop, which was on my desk in my apartment.",
        "\"Yeah, it's probably plugged in to my laptop.\"\n\n\"You're out of town, right?\" she asked.\n\n\"What the fuck Jenn, are you stalking me now? How would you even know that?\"\n\n\"No, I'm not stalking you -- I've been by your apartment twice and you're not there. I figured you went to see your cousin. I tried my key but I guess you changed the locks already.\"\n\n\"Looks like that was a smart move on my part. Were you just going to walk in? Maybe give Brad another blowjob on my dining room table?\"\n\n\"Chris, please! I just need my drive. You know how hard I've worked on this paper. I'm almost done and it has to be turned in soon. Like really soon.\" Her voice was cracking. I knew Jennifer. I knew how much she didn't want to be making this phone call. I knew how desperate she must be to call me and ask me for something after everything that happened.\n\n\"Jennifer, what makes you think that after all this, I'm just going to hop in my car and run back to town to help you with anything?\" I asked. I knew what she was doing. And I knew she would be successful. But I wasn't going to make it easy for her.\n\nA long, uncomfortable moment of silence preceded her response. \"Because you're a better person than I am Chris. Because I need your help right now and you've always been there for me.\" Now she was crying out-right. Maybe she did know how to play me. Maybe it was all fake and she was just saying the things she knew I needed to hear to get what she wanted. But I made her say it. And maybe -- just maybe, having to say it out loud would make her realize just how badly she screwed up.\n\n\"I'll call you when I get in town. You can meet me at my apartment and I'll give you the drive. There's some shampoo in the bathroom that's yours too. Be thinking of anything else that you've left because I'm not doing this again.\"\n\n\"Thank you, Chris.\"\n\n\"Whatever. This is the last favor I'm doing for you. Ever.\"\n\nI tapped the red square on the phone display and tossed it back onto the coffee table where it almost knocked over a fresh cup of coffee. I didn't remember that being there. I looked up just as Andi sat down next to me, her own cup in hand.\n\n\"So I guess we're going on a road trip?\" she asked, somewhat solemnly.\n\n\"No. I'm going on a road trip. You're going to stay here and start packing your shit.\" I said, more gruffly than I had intended. She looked a bit hurt and I realized my mistake. She wasn't the enemy. She was my best friend.\n\n\"I'm sorry Andi. I didn't mean to snap at you. That's not exactly how I was hoping to start my day today.\"\n\n\"It's OK. I wouldn't be in a very good mood after a conversation like that either,\" she said.\n\nI winced as I sat back on the couch with my coffee in-hand, suddenly aware of how sore my back was. Damn it. She had been right -- my back and neck were killing me and I hadn't had enough to drink to blame a hang-over.\n\n\"Toldja,\" she said.\n\n\"Shut it, you.\"\n\nThat made her giggle, which made me smile. Her laugh was contagious; it lightened the mood a bit.\n\n\"Chris, I don't really have that much to pack. I don't have much stuff. It's just me here, you know? Let me come with you. You need me.\"\n\n\"I need you, huh?\" I asked.\n\n\"Of course you do. For moral support if nothing else. It's eight hours on the road and I don't think you can be trusted to be alone with your thoughts for that long. That girl is bad news and I intend to keep you on the straight and narrow.\"\n\n\"My benefactor?\" I asked, openly amused at the sudden juxtaposition.\n\n\"Your guardian angel!\" she responded. \"It's about time I start returning some favors anyway. You've been bailing me out of tough spots for years.\"\n\n\"OK. You can come. But breakfast first.\"\n\n###\n\nSeveral hours later we pulled up in the parking lot of my apartment. I hadn't called Jennifer yet. I wanted to make sure I found her jump drive before bothering to get her over here. There was still a small chance that it wasn't there and I didn't want to see her if I didn't have to. We walked up the stairs to my door and went in.\n\n\"Yep, this is your place, alright.\" Andi said as she surveyed my living space.\n\n\"What does that mean?\" I asked.\n\n\"Would it kill you to hang a picture or something?\"\n\nAndi wasn't the first person to comment on the bare walls. I wasn't much for decoration, preferring function over form. I didn't feel like my place was particularly unwelcoming or uncomfortable but I regularly got comments on it which was perhaps why I didn't do much entertaining.\n\n\"It works for me. Don't knock it,\" I said. \"Besides, I've got pictures on the shelf. Over there.\" I pointed to a book shelf that stood in the corner of the living room. Andi walked over to it and started looking at the few framed photos I had that was pretty much the extent of my d\u00e9cor. Meanwhile I started scouring the place for the second time now looking for any signs of Jennifer.\n\nI found her jump drive and tossed it in the center of the table that dominated my tiny dining area. I added to that a pink shampoo bottle and her spare razor that she kept in my bathroom along with a few other things that I ran across. I sent her a text to let her know that she should come by and get her things.\n\n\"I can't believe you still have this,\" Andi said as she picked up on of my framed pictures. She handed it to me. \"I remember that day,\" she said.\n\nIt was a picture my mother had taken at the camp when Andi and I were teenagers. We were in the lake, in the canoe about to head out on an 'expedition'. That's what my mother called it when we would take off in the canoe. We would be gone for hours, exploring the lake and getting away from the grown-ups for as long as we could.\n\n\"That was the whiskey trip,\" she said.\n\nI smiled, remembering the day she was referring to. \"Was it?\" I asked. I'd never put the photo together with that memory.\n\n\"Yep. See the green backpack in the canoe?\" she asked.\n\nSure enough. We always carried a few things in a backpack -- snacks, towels and the like, but the bottle of whiskey wouldn't fit so we needed an extra bag. Andi emptied out her green backpack that she kept her clothes in and re-purposed it for booze smuggling. It was so clandestine and dangerous; we were like spies on a top-secret mission. We were both about ready to jump out of our skins when Mom called to us to smile for a picture.\n\n\"No shit. I never realized.\"\n\n\"Our parents were so pissed when we got back!\" she laughed.\n\nShe was right. We were really drunk by the time we managed to paddle back to the camp, long after dark. Mom and Aunt Janice smelled the booze on us and we were both grounded for a month after that. Shortly after that they started keeping a lock on the liquor cabinet. From that point on any drinking that Andi and I did together had to be much more discrete.\n\n\"Yeah. I remember.\"\n\n\"Did you ever figure out how to pick the lock on that liquor cabinet?\" she asked.\n\n\"Nah. I almost had it though. A little more time was all I needed. Mom died the next summer and I never got another crack at it.\"\n\nI handed the picture back to Andi.\n\n\"Can we bring this back with us?\" she asked, hugging the frame to her chest.\n\n\"Yeah, sure. It's all going to get moved eventually. Or put in storage. There's plenty of room in the unit where all of Mom and Dads stuff is.\"\n\n\"I'd forgotten about that. You still haven't gone through it?\"\n\n\"Nah. Jesse told me years ago that the trust would pay for the storage unit as long as I wanted to keep it. I've only been the one time when everything was moved in, but I remember there being plenty of room left over. I've been meaning to get over there and clear it out.\"\n\n\"Well, why haven't you?\" she asked.\n\n\"Just busy with things. I never seem to have a free weekend.\"\n\nThe truth of the matter was that I didn't want to. My parents whole lives were stored in that storage unit. Furniture, clothes, papers, and God knows what else. It would feel like I was letting them go to get rid of anything. What had meant something to them? What was just stuff? I didn't know how to tell the difference and couldn't bear the thought of letting something go that was important to one of them. I felt like I would be disappointing them.\n\nJust then, Andi threw her arms around my neck, hugging me tightly. \"I've missed you so much, Chris. I'm glad we're going to be able to spend time together again.\" I hugged her back, feeling her body pressed against me. Her hair was soft against my face and smelled good and her body was warm under her shirt. I felt myself, again, reacting to her closeness. My pants started feeling tight as my cock started to stiffen. I broke the embrace for fear of embarrassing myself.\n\nIt wasn't much longer before Jennifer arrived. I answered the door and let her in, directing her to the small pile of things on the dining room table.\n\n\"There's the rest of your stuff. Your jump drive is there too.\"\n\nShe eyed the items on the table, then looked over at Andi. \"Did you really need to bring back-up?\" she asked.\n\n\"Just get your stuff. I have somewhere to be.\" I lied.\n\n\"I was hoping we could talk?\" she said, looking at me with those puppy dog eyes that used to work so well.\n\nI looked over at Andi. She sat on the couch with that picture in her hand. That picture of her and I together, smiling, about to go on an adventure. Now I understood why she came. I couldn't leave her here and run off with Jennifer and have a 'talk'. She knew I couldn't do that to her. That's why she wanted to come. To make sure I didn't do something stupid like take Jennifer back, or... something else. In that moment, just then, she was indeed my guardian angel.\n\n\"I don't think that's a good idea. You need to go.\"\n\n\"Chris, please,\" she pleaded, tears pooling in her eyes. \"I'm sorry. Can we please just talk about it?\"\n\nNow she was getting to me. This girl that I'd spent the previous three years with. This girl that tied me in knots when we first met. But I thought again of Andi. I thought about the past two days that we'd spent together. Her smile. Her laugh. That look on her face as she sang along to the radio in the Jeep with her hair whipping around her beautiful face. She was here for me no matter what. She was my rock. And I wasn't going to let her down by caving in and taking Jennifer back.\n\n\"Talk about what, Jenn? Talk about what I saw at your house the other day?\"\n\nShe flinched.\n\n\"Talk about how long you've been fucking Brad?\" I asked.\n\n\"Talk about how sorry you are and how bad you fucked up?\"\n\nTears were streaming down her face now. Slowly she nodded her head. \"Yes,\" she said. \"Yes, I fucked up. And yes, I'm sorry.\"\n\n\"Jennifer, lets say for the sake of argument that I went along with this and took you back.\" Andi's eyes went wide. \"How long do you think it would be before I could look at you without thinking about the other day? You sat there and acted like I had no business being at your house.\"\n\nShe was quietly sobbing now. Andi had regained a bit of her composure though, having figured out where I was going with this.\n\n\"While you were by the pool with your bare ass in the air, giving head to someone who was supposed to be my friend, I was at the mall trying to find a gift for you that might help patch things up between us. I was thinking about you. About us.\"\n\n\"I'm so sorry...\" she sobbed.\n\n\"I'm sorry too. I've given you three years of my life Jennifer, and in return I get lies and betrayal. So no. We can't talk. No, we can't get back together. And while I'm sure I'll forgive you one day, it's going to be a long time before I can see your face without thinking about your lips around another guys cock. So unless there was something else you wanted to say, I'll ask you one more time to please leave.\"\n\nWithout another word she stepped to the table and gathered up her things and made a quick exit, the door slamming shut behind her.\n\nMy knees were weak and my heart was racing. I found the couch and sat, just inches away from Andi. And then the tears came. I cried. I had loved that girl. So much of my life the past three years was just gone. It didn't matter for anything now. It was wasted time. Wasted effort. And perhaps most painfully, I realized that it was wasted love.\n\nThen Andi was there. Holding me. Comforting me. Wiping my tears away and telling me that it was going to be OK. She told me that I did the right thing. She told me that it would feel better in time. She told me that there was another woman out there somewhere that would treat me right. She said that Jennifer was a fool to do the things that she did to me. She said all the things a friend is supposed to say. She was my friend, my cousin, my rock. I rested my head in her lap and just let go.\n\nIt took me some time to regain my composure. Mostly I lay with my head in her lap, crying some, sleeping some, thinking a lot. We would have to get moving if we were going to get back to her place at a reasonable hour. It wasn't my intention to stay as long as we did and it was getting on into the second half of the day. I gathered up a few things that I thought might prove useful, not the least of which was another bottle of whiskey and shoved them into a bag.\n\n###\n\nBack at Andi's place, I poured myself a whiskey as she disappeared into her bedroom to change. When she emerged, she wasn't wearing the t-shirt and panties that I was expecting (and if I'm being honest -- hoping for). I sat at the table, sipping my whiskey and rolling my shoulders, trying to work out the kinks that had taken up residence in my back muscles. It was little wonder I was sore after having spent eight hours in my Jeep and the entire previous night on a couch that must have had bricks woven into its cushions.\n\n\"Want me to help with that?\" Andi asked as she pulled up a chair and poured herself a glass.\n\n\"Whatcha got in mind?\"\n\n\"Come over here. Spin your chair around -- sit in it backwards with your back to me.\"\n\nI complied, resting my chin on the back of the chair. I felt Andi's hands on my shoulders as she began kneading them. It wasn't long before she said, \"Take your shirt off , I can't feel where my hands are.\"\n\nAgain I complied and lifted my shirt over my head. The cool air in her apartment made her hands feel very warm. She pushed her warm palms into my back and raised goosebumps all over my body. I melted in her hands as she rubbed the knots out of my muscles.\n\n\"You're not sleeping on the sofa again. It's fine if you're not comfortable sleeping in bed with me. I get it, you know? I'm your cousin and being close like that... well I guess I can see how it might weird you out a little bit. We're not kids anymore. I'll sleep on the sofa tonight.\"\n\n\"No, Andi, I-\"\n\n\"Not a word about it, Chris. After the day you've had you need a good nights sleep.\"\n\nI closed my eyes and enjoyed the feeling of her hands on me. Her fingers gently but firmly worked my sore muscles. She touched every one of them from my shoulders down to my lower back, pushing and pulling my torso this way and that, in a steady, hypnotic rhythm. It was a small piece of heaven that she gave me. A level of relaxation that I hadn't felt in ages.\n\n\"This is really nice. I haven't been this relaxed in a long time,\" I said.\n\n\"It's the least I can do,\" she replied.\n\n\"What do you mean, the least you can do? You've been taking care of me all day.\"\n\n\"You've been taking care of me our whole lives,\" she said quietly.\n\n\"No I haven't.\"\n\n\"Please don't make me sit here and go down the list of times that you've been here to bail me out of some bullshit or another. It's a long list and I'm getting tired. Need I remind you of my own personal little housing crisis that's just recently come up and how you swooped in and saved the day?\"\n\nShe was still rubbing my back. \"It's really not as big a deal as all that. If you think about it, what we're doing is really the only solution.\"\n\n\"Yeah, but it's got you moving all the way out here for two years. That's a long time for you to be stuck with me.\"\n\n\"Huh!\" I snorted. \"I'd rather be stuck with you for two years than stuck with her for another day. Believe me, I'm getting as much out of this arrangement as you are. Look, don't make a deal out of it, OK? I'm glad that I can help you out.\"\n\n\"Well, thanks.\"\n\n\"Nothing to it.\"\n\nShe stopped rubbing my back and leaned herself against me, wrapping her arms around me as she did it. I could feel her breasts against my back and her cheek resting between my shoulder blades.\n\n\"I'm always going to be here for you, Chris.\"\n\n\"I know Andi. I'll always be here for you too.\"\n\n\"You ready for bed?\" she asked.\n\n\"Yeah, I think so. You?\"\n\n\"Yeah. Just let me grab my pillow and a blanket out of the bedroom.\" She got up and headed for the bedroom.\n\nI felt bad about kicking her out of her bed. I knew she wouldn't take no for an answer this time but I didn't want her to have to sleep on the sofa.\n\n\"Andi,\" I said, following her into the bedroom, \"you don't have to sleep on the sofa. We can share the bed. I'm sorry for being weird about it.\"\n\n\"You're sure?\" she asked.\n\n\"Yeah, yeah. It's fine, just let me change.\"\n\nI went into the bathroom and put on a pair of athletic shorts that I brought from my apartment. I was getting tired of sleeping in my jeans, regardless of whether it was on the sofa or anywhere else. When I got to the bed, Andi was already under the covers. I slipped in beside her and was wrapped in softness. I smelled Andi everywhere. In the sheets and on the pillows there was a sweet, delicate smell that was her shampoo, her perfume, her body. It was intoxicating. Contented and comfortable, I sighed.\n\n\"More comfortable, huh?\" she asked.\n\n\"Oh yeah.\" I said.\n\n\"G'night, Chris.\"\n\n\"G'night, Andi.\"\n\n###\n\nAndi slept in her night clothes that she had put on just before she sat down to rub my back. I again silently lamented her change of attire from the previous nights but thought it was surely for the best considering that we were now in bed together. Although I slept much better than the previous two nights put together, I still found myself awakened a couple of times during the night; both of which I remember quite clearly. I don't know if I was just hyper-aware of her because she was my cousin, or if I really just wanted her so badly that I was picking up on everything that was happening but any little movement from her woke me up.\n\nThe first time seemed innocent enough. A sleepy mistake, I thought. I woke up to the feeling of Andi's arm on my chest. At some point during the night she must have turned towards me and put her arm over me. I didn't think anything of it and drifted back to sleep; more comfortable now that she was closer to me than before when she was all the way across the bed.\n\nThe second time was slightly more interesting. Again, I thought for sure she was just moving innocently in her sleep. I felt her stirring next to me but when I came to I felt her body pressed against me and her leg draped over mine. She was all but laying on me, her soft, smooth leg resting on top of mine. Her arm was still draped across my chest, but now her shoulder rested on my chest, her breast pushed against me. My arm was trapped beneath her and I realized that my hand must be just about level with her pussy.\n\nMy cock stirred at that thought, which I quickly put out of my head. I had enough to worry about without embarrassing Andi with a hard-on when she woke up. It was for naught though, as when morning finally did come we were in another position all together. This one I didn't remember. Perhaps my brain was finally letting my body rest.\n\nWhen I woke, Andi and I were spooning. I had my arm wrapped around her at her waist, pulling her close to me as her ass pushed against my morning wood. I panicked. Was she awake? Did she feel it? Dare I move away from her or would that just wake her up? A million excuses flew through my head in those terrifying few seconds after I woke up.",
        "And then Andi grabbed my hand and lifted it to her lips, my arm pressed between her breasts as she kissed my knuckles.\n\n\"Good morning,\" she said.\n\nShe didn't move. There was no doubt in my mind that she could feel my hardness pressed against her. But she didn't move.\n\n\"Good morning,\" I returned.\n\n\"You're up early this morning,\" she joked. I felt her body shake a bit as she laughed to herself.\n\n\"I'm, uh... well, it's a morning time thing, you know?\" I awkwardly tried to play it off.\n\nShe pushed her ass against me ever so briefly before turning over on her back to look at me.\n\n\"So it's not me?\" she asked.\n\n\"Well, I...\" Shit. How was I supposed to answer that?\n\n\"Chris.\"\n\n\"What?\" I asked.\n\n\"I'm fucking with you. Lighten up,\" she said as she rose from the bed and headed for the kitchen. I watched as she walked out of the room, her hips swaying in that deliciously hypnotic dance that kept me leering at her until she was out of sight. My cock ached. It was already promising to be an interesting day.\n\n###\n\nI was still having some guilt issues surrounding the feelings that I was having for her -- the things I wanted to do with her. The things I wanted to do to her. There was no longer any question about attraction -- I wanted her. I wanted her badly. Yes, she was my cousin and my friend but she was also a woman. A very beautiful, very sexy woman. I was a man -- not a saint. And it wasn't like she was making it very easy for me to ignore those qualities. She was quite obviously doing this on purpose. It took me a bit to catch on to it but I wasn't dense; I just wasn't expecting it from her.\n\nBut was it just lust? If it wasn't just lust wouldn't that be worse? We could blame a one night tryst on alcohol, or over stimulation, or any number of other things but I couldn't have a real relationship with her. What if we got into a fight? She was the person that I always went to to vent. Would I lose my friend if things didn't work out? Was I even ready for this? I thought that I didn't love Jennifer anymore but after the way I reacted to her the day before, I simply wasn't sure anymore. Did I really need to involve Andi in my rebound?\n\nAndi and I were weaving a tangled web. I was at once apprehensive about where things might be heading and brimming with desire for her. I had to put it down for a while. I'd pick it back up and look at it again but we had work to do.\n\nThe time line for getting my things out of my apartment wasn't really pressing, so I could put that off. I phoned Jesse to find out how things were coming along with the purchase of the camp.\n\n\"Chris, I'm glad you called. I got some things expedited with the purchase. If you're up for it we can meet with your Aunt today and sign the finalizing documents.\"\n\n\"You saved my ass again Jesse. One of these days I'm going to have to return the favor.\"\n\n\"Forget it. So how do you want to do this?\" he asked.\n\n\"What was the final purchase price?\"\n\n\"Well, I padded the offer a bit, like you asked. She'll be able to cover the mortgage and walk away with about ten thousand in her pocket. That's still significantly under appraisal so you're coming out way ahead if you ever sell it.\"\n\n\"I wouldn't ever sell it,\" I said.\n\n\"No, I know it's a family property, I just want you to know where you stand.\"\n\n\"Ten thousand is perfect. So where do I need to be and when do I need to be there?\"\n\n\"Let me call your Aunt and make sure it works with her schedule, but lets say three o'clock this afternoon at her place? It's a long drive for me so afternoon works best. I've got a few other things to take care of before I get on the road. We'll have to hurry the process along a bit I'm afraid. I'd love to visit with you a bit but I've got to be on a plane for seven.\"\n\n\"Yeah, where you headed?\"\n\n\"The fatherland my boy. I've got a client in Germany that needs some personal hand holding. Kinda like you only his English is better.\"\n\nWe both laughed at that.\n\n\"Alright, three o'clock sounds fine, I'll see you there.\"\n\n\"Great. I'll call you if anything changes.\"\n\n###\n\nIt was time to start getting Andi packed and ready to move out. She was right -- she didn't have a lot of stuff to move but I had wasted a whole day crying over Jennifer and we still needed boxes. I suggested going to the grocery store and begging some from the manager but Andi said there should be plenty for the taking at the Black Jack Bar.\n\n\"With all the money that Dempsey owes me he won't care if I lighten his trash load,\" she said as I pulled the Jeep around the back of the building.\n\n\"They keep the trash locked up so I'll need to get the key. I don't know who's... damn it!\"\n\n\"What?\" I asked.\n\n\"It's Collin.\"\n\nA tall, lanky guy with a black mop-top wearing an oversized hoodie closed the gate behind him and locked it with a padlock and chain.\n\n\"Who's Collin and why is it a bad thing that he's here?\" I asked.\n\n\"Remember I told you about the guy that wouldn't leave me alone after I slept with him?\" she asked.\n\n\"Oh, no. That guy?\" I couldn't believe she slept with this guy. He looked like he just fell off a skateboard into a vat of grease.\n\nAndi sighed. \"C'mon. I gotta get the key from him.\"\n\nI followed behind her as she took the lead and approached him. He leaned against the gate and lit a cigarette, grinning widely as he saw Andi approaching. He glanced at me briefly but otherwise didn't acknowledge me.\n\n\"Hey Collin. I need some boxes, can you open the gate for me?\" she asked.\n\nCollin shook his head, \"Dempsey said you quit.\"\n\n\"I haven't yet but it won't be long,\" she replied.\n\n\"Sorry Andrea, I can't. Dempsey said you don't work here anymore. I don't think he'd be too happy with me letting you dig in the trash, you know?\"\n\n\"Jesus, Collin. It's not like he's paying you. Why are you even here?\"\n\n\"Are you fucking kidding me now? Do you know how much free booze he gives me just for bar-backing? Tip-outs from the bar tenders too. I don't do too bad here if you add it all up.\"\n\nAndi was getting impatient. \"I just need some boxes. With as much money as he owes me you can tell him he can take it off my tab. Trust me, he won't care. Can you please just unlock the gate?\"\n\nCollin took a puff from his smoke before answering. \"Depends.\"\n\n\"Here we go,\" she said. \"What do you want?\"\n\n\"Whatcha doin tonight?\" he asked, smugly.\n\n\"Give me a break Collin. I told you I was seeing someone.\" That bit was news to me but from what she told me about him she was probably just trying to get him off her back.\n\n\"Yeah, that's right. What'd you say his name was? Tim?\"\n\n\"Collin, I really don't have time for this.\"\n\n\"No, it was Ken, right?\" he was prodding her and amusing himself greatly in the process as evidenced by the toothy grin on his face. I should have stepped in right then but I thought I'd let her handle it.\n\n\"Collin, just give me the fucking key.\"\n\n\"No, no, no. Chris! It was Chris.\" That caught me a bit off guard.\n\nAndi put her hand to her face, but her back was to me so I couldn't see her expression.\n\n\"So is this Chris?\" he motioned to me.\n\nAndi didn't answer right away. I thought I should break the uncomfortable silence, if for no other reason than to spare Andi this embarrassment. As it turned out, there was no need as she eventually answered Collins question. \"Yeah,\" she said slowly. \"Yeah, this is Chris,\" she turned slightly to me. \"Chris, Collin. Collin, Chris.\"\n\nHe looked at me now. \"So you two are... together?\" he asked.\n\nI knew Andi well enough to figure out what was happening here. I had no choice but to play along. Honestly, I'd have done it for her even if she hadn't spent the last few days teasing me. It's what friends do.\n\n\"Yeah, we're together,\" I said.\n\nHe puffed on his cigarette again and slowly shook his head. \"Nope. I don't think so.\"\n\nI was at the end of my rope with this moron. I was ready to tear into him for putting her on the spot like this. I stepped forward to up the tension, \"She doesn't have to prove shi-\"\n\nMy sentence was cut off as Andi pressed her lips to mine and I forgot all about Collin. For days now, I had been thinking of the way she kissed me when I first showed up at her door. That kiss lingered with me and haunted my dreams, both day and night. Those feelings of her lips on mine, her body close to me, her arms wrapped around me -- they didn't compare to how she was kissing me now.\n\nHer tongue shot into my mouth, it's soft, warm, wetness exploring mine; seeking it out. It may have been for show but I decided if it was happening, I might as well go all in. I poured all of my pent up lust from the past three days into that kiss. I kissed her back, fiercely and tenderly and without another thought in my head other than making this woman melt on my lips. It lasted a short, few seconds and was over far too quickly.\n\nWhen she broke the lip lock my head was spinning. She turned back to Collin as I tried to steady myself enough to go back to acting tough. \"Does that spell it out for you clearly enough? That night between me and you? It's never going to happen again. Now give me the fucking key and get out of my way, Collin.\"\n\nCollin looked deflated, defeated, and suddenly very tired. \"Fuck. Whatever,\" he said as he tossed the keys to her. \"Leave the key in the lock. I'll come back for it later.\" With that he walked off towards the bar, puffs of cigarette smoke following him on his way.\n\nI thought of saying something to Andi about the kiss. She was already embarrassed and it wouldn't make her feel any better to put her on the spot. I had no idea if she knew how very much I wanted what happened. I decided the best thing to do would be to play it off. Be cool. The pained look on her face told me that we should get busy with something or get into a very deep and uncomfortable conversation. I opted for the former.\n\n\"We were getting boxes, right?\" I asked.\n\n\"Chris, I-\" she started.\n\nI didn't let her finish. \"Forget about it Andi. It's cool. Hopefully that guy will leave you alone now, right?\"\n\nAndi stared for a moment and seemed to be lost in her thoughts, but then came back to reality and seemed to perk up some. \"Yeah. Exactly.\" she said. \"Thanks, Chris.\" I'm not sure if she was thanking me for playing along with her ruse, or for changing the subject so that we didn't have to talk about what just happened.\n\nWe loaded as many boxes as we could fit in the back of the Jeep and headed back to her apartment.\n\n###\n\nLater that afternoon I left Andi to pack her things and drove over to meet Jesse and Aunt Marjorie over at her place. It was then that I discovered that Jesse and Aunt M. knew each other. I knew that Jesse was a friend of my fathers but I never put it together that he was also a friend of the family. During the paper signing those two exchanged a few glances and more than a couple of apparently inside jokes that I didn't catch on to. I felt a bit like an outsider as I realized that they probably knew far more about each other that I did about either of them.\n\n\"Marjie, have you been to the camp to check things out and clean up at all?\" he asked her as we were finishing up the paperwork.\n\nAunt M, who had been pretty laid back and casual throughout the process visibly tensed and her tone darkened. \"No, I haven't. Not since Terri.\"\n\nJesse glanced at me briefly and then back at Aunt M, questioningly.\n\n\"Alright,\" I said, \"enough of this. Would someone tell me what the hell is going on? Why has no one been to the camp since Mom died? Why have you been keeping me away from there?\"\n\n\"Christopher, you watch your language in this house. I know you have questions but you'll not sit at my kitchen table and disrespect me, young man.\"\n\n\"I'm sorry Aunt M.,\" I said. And I was. But there was something going on here and apparently Jesse knew something about it but had never let on. Maybe I could get some information from him when Aunt M wasn't around. \"But there's some big secret here that everyone seems to be in on except for me,\" I glared at Jesse. Jesse, who had always been there for me, sat back in his chair and looked at me apologetically, but held his silence.\n\n\"You're exactly right about that Chris and it breaks my heart that it has to be that way.\" Then, to Jesse, \"Are we done here? Is there anything else to sign?\" she asked.\n\nJesse shook his head, \"Nothing left to sign. I have to file some papers at the court house to make it all official but for all intents and purposes -- Chris owns the camp now.\"\n\nAunt M pulled a small key ring out if her purse that sat in the chair next to her. Four keys dangled from it, jingling as she hefted them in her hand. She reached across the table and pressed the keys into my hand. \"Chris, I love you. I don't know if you'll find your answers there or just more questions but the camp is yours now.\"\n\n###\n\nWhen I arrived back at Andi's apartment, I was surprised to see that she had boxes stacked in the living room. She had been working hard while I was gone. Before I left we had at least a dozen boxes half filled but she topped those off and closed them up while I was gone and was now working on filling several more.\n\n\"I'm in the bedroom,\" she called.\n\nWhen I walked into her bedroom where she was still busy packing, her back was to me. I admired her ass as she leaned over to put something in a box that sat on the floor. \"You've been busy, huh?\" I asked as I enjoyed the view.\n\n\"Yep, and I found something,\" she said, suddenly turning on me and firing a shot from an old wooden rubber band gun.\n\n\"Gotcha!\" she yelled as a rubber band hit me square in the chest at high velocity. It didn't hurt much and the only way she managed to hit me was because she caught me off guard. It was an old game we played as kids and though I usually came out on top, she made it count when she did hit me.\n\n\"Hey, haven't seen that thing in a while.\" She handed me the gun, sans rubber bands of course. \"I can't believe you still have this,\" I said, turning it over in my hand and smiling as I remembered the fun we had as kids firing barrages of rubber bands at each other.\n\n\"You don't still have yours?\" she asked.\n\n\"I don't know where it is. Haven't seen that thing in years. Mom took it away from me one day for shooting rubber bands at her butt. I haven't seen it since.\"\n\nAndi laughed, \"Buyers remorse, huh?\"\n\n\"Probably,\" I said as I handed the wooden gun back to her.\n\n\"So how did it go? Is the deal done?\" she asked.\n\n\"Yeah, it's done. It went... well strange to say the least.\"\n\n\"What do you mean?\"\n\n\"Well, remember how Aunt M was acting all weird the other day when we were over there?\" I asked.\n\n\"Yeah, how she rushed us out of there?\"\n\n\"Yeah. So I asked her again why no one has been to the camp in all this time.\"\n\n\"What did she say?\"\n\n\"She gave me the brush off again. Then she handed me the keys to the camp and sent me on my way.\"\n\n\"That's so strange.\" And it was strange. Aunt Marjorie was always the one that told us things. She was the one that had 'the talk' with Andi and I. She had given us our first drink of alcohol. She was always the one slipping us money with a wink and a nudge to buy candy with. She was the 'cool Aunt', and now she was clamming up on us. \"What do you think it is?\" Andi asked.\n\n\"I don't know, but it's obviously got something to do with Mom. I have a feeling we'll find out something when we get to the camp. Do you feel like taking a ride up there?\"\n\n\"Now?\"\n\n\"Yeah, right now. Looks like you've got a good jump on the packing.\"\n\n\"Sure, I could use a break anyway. Why don't you grab the box of cleaning stuff out of the kitchen. I'm sure the camp is pretty dusty if no one has been there in a while.\"\n\nI nodded and turned to walk out of the bed room, heading for the kitchen. I hadn't made it through the doorway when I heard the snap-pop of the rubber band gun and felt a sudden stinging sensation in my butt.\n\n\"Gotcha!\"\n\n###\n\nThe camp was a nice place. Between my father and Andi's dad it had been updated and renovated over the years and though there were few 'modern' appliances it had a wood burning stove for heat in the winter and a few window units scattered about to keep it cool in the summer. A conventional oven and a microwave rounded out the kitchen but no dishwasher. That was our job when we were kids. There was talk of installing central heat and air some years back but I guess they just never got around to it. It did have running water and fully featured bathrooms though and a small gas powered back up generator for when the power went out as it was want to do during a storm.\n\nEven though it wasn't far from town, 'far' was still a relative term. What it lacked in distance it made up for in solitude. Sitting not far from and facing a small lake it was the only structure for miles around, the nearest neighbor being Mr. Gebhardt, a good three miles down the road. During the day it was quite picturesque, sitting just off the lake with an old wooden boat dock extending about thirty feet into the water. A thick mass of shrubs skirted the house, planted just under the eves. At night time, with all the lights off it would have been foreboding and even creepy if it wasn't such a familiar place to me.\n\nWe pulled up in front of the camp and parked in front of the enclosed garage -- an addition that Andi's father built just a few years before my mother died. I had to work the key into the lock on the front door. Six years of neglect didn't leave the mechanism in very good condition but eventually with enough jiggling and waggling of the key, the lock finally turned and the deadbolt slid back into its home with a loud clack. I pushed the door and it swung open, the hinges screaming in protest the whole way.\n\n\"I hope Aunt M has kept up the light bill at least,\" I said as I reached inside and felt along the wall for the light switch and flipped it on. The room lit up and I was transported back in time. Everything was exactly as I remembered it.\n\n\"Wow!\" Andi said as she followed me into the house. \"I can't believe it's all the same.\"\n\n\"Well, Aunt M said no one has been here.\"\n\n\"She wasn't kidding.\"\n\nThe front door led to the living area -- an old TV sat on a small table next to the wood burning stove surrounded by two couches and an old rocking chair. All the furniture was covered with sheets, presumably to keep to keep the dust off. Farther in, the living room was separated from the kitchen by a large island that doubled as a snack-bar. Behind the kitchen there was the largest of the three bedrooms along with it's bathroom and off to the side of the living room, a stair case that led up to the second floor where there were two more bedrooms. Under the staircase there used to be a closet but that had been removed to accommodate a doorway to the add-on garage.\n\nAndi and I made our way through the living room, pulling sheets off the furniture carefully to minimize the clouds of dust that they shed. We both walked around the room, taking it in and silently reminiscing while looking at old family pictures that hung on the walls. I turned the old tube TV on just to see if it still worked. It did, but only barely and made a high pitched background noise as long as it was on. Slowly we made our way to the kitchen, where we encountered the first of several mysteries that would present themselves.\n\n\"What's this about?\" Andi asked as we reached the island.\n\nWhoever had been here last was apparently having a drink. An open wine bottle covered in dust sat near the edge of the island, its cork sitting neatly beside it accompanied by a delicate and expensive looking, if dusty, wine glass on either side of it. Through the dust I could see the purple-black stains of dried wine on the inside of each glass about a quarter way from the bottom of the glasses.\n\n\"Someone didn't finish their wine.\" I said.\n\n\"Two someones,\" Andi corrected as she walked past me. She flipped on the kitchen light and walked over to the far corner of the kitchen. \"Aunt M give you the key to this?\" she asked, regarding the liquor cabinet and grinning widely.",
        "\"Uh, you know, I'm not sure. Here, you check,\" I said as I tossed her the keys. \"I'm gonna start getting boxes out of the Jeep.\"\n\nI made two trips in and out of the house, depositing boxes against the wall by the front door as I did so before Andi had any luck with the lock on the liquor cabinet.\n\n\"Haha!\" Andi said. \"Success!\"\n\n\"You got it open?\" I asked.\n\n\"Yep. You joining me for a drink?\"\n\n\"Uh. Yeah, I guess.\"\n\n\"I don't know about you Chris, but it's been a hell of a long day for me.\"\n\n\"You got that right.\" Indeed, it had been a long day. From the Collin fiasco to my tight lipped Aunt and my old friend that was holding out on me -- a drink was surely in order.\n\n\"So what, are we getting drunk?\" I asked.\n\n\"Why not?\" She held up two bottles of whiskey. \"Jimmy or Evan? Or did you want something a little easier on the palate?\" she asked, smiling. God, she was beautiful, holding those bottles up, one on either side of her, almost touching her shoulders and framing her breasts with amber colored alcoholic flourishes.\n\n\"Chris?\" she asked and I realized I was staring at her. \"Jimmy?\" she swirled the liquid in the Jim Beam bottle. \"Or Evan?\" swirling the Evan Williams on the other side.\n\n\"Is there any wine in there? I don't know if I can do whiskey tonight. We still have to drive home anyway.\"\n\n\"Why? There's a bed and a bathroom here. We finally got into this liquor cabinet, and I would remind you that from now on, when you say things like 'drive home', you'll be talking about coming here.\"\n\nIt struck me then that she was absolutely right. \"Yeah, fuck it. You're right. But you pick the poison, I don't really care which it is.\"\n\n###\n\nAndi and I sat at the snack-bar, just like when we were kids only this time instead of Kool-Aid we were drinking something a little stronger. Memories came flooding back as we sat in that old house, smelling the smells and seeing all the old pictures on the walls. We must have spent an hour or more walking down memory lane, laughing and enjoying each others company. By then we were both buzzing along quite nicely and I was doing my level best to keep my eyes from fixating for too long on Andi's girl parts -- and failing about as often as I was succeeding.\n\n\"Chris?\" she asked.\n\n\"Yeah.\"\n\n\"Earlier today? With Collin,\" she started. I flinched at hearing his name. I didn't like the guy but I was starting to wonder if that was because he was a douche bag or if it was because I knew that Andi had slept with him. The fact that I was possibly getting jealous of some other guy being with my cousin wasn't lost on me and that too left a sour taste in my mouth.\n\n\"Yeah, what about it?\"\n\nAndi swirled her drink as she searched for the words. \"All day, I've been thinking about when you kissed me.\"\n\n\"When I kissed YOU?\" I asked. \"The way I remember it I didn't kiss you. You kissed ME.\"\n\n\"Well, that's true. But Chris, I've kissed lots of guys. And of all the guys I've kissed, I don't ever remember it being like that. I may have started it, but you definitely finished it.\"\n\nMy face flushed. I was both a little embarrassed for being called out on it and relieved that I wasn't the only one that felt it.\n\n\"It was amazing,\" she said.\n\nI couldn't disagree with her. \"Yeah. I felt the same way. How weird is that?\"\n\n\"Is it weird?\" she asked.\n\n\"Andi, you're my cousin. How's it not weird?\"\n\n\"Wait, hold on. You've been checking me out since you got here, but you think it was weird that we kissed?\"\n\n\"Well, what do you expect Andi? You aren't exactly modest you know? And the way we've been talking to each other -- I mean the things we've been talking about -- they aren't really the kinds of things that make me think of puppies and unicorns.\"\n\nThat made her laugh. \"Puppies and unicorns? So should I cover up?\" she asked, making a show of being modest, covering her chest with one arm and draping the other across her lap as if it would hide her bare legs.\n\nThat was the last thing I wanted! \"No, I'm not saying that.\"\n\n\"So you do like to look at me.\"\n\n\"Well... yeah!\" I sputtered, \"Shit Andi, I'm a guy and you're... you know...\" I knew that answer wouldn't fly though.\n\n\"What?\" she asked. \"I'm what?\"\n\n\"You're... sexy. OK? Happy? My cousin is sexy.\" That took a lot out of me. I drained the little bit of whiskey that I had left in my glass and looked for the bottle. Andi had it cradled between her breasts, hugging it to her as if it were a teddy bear to give her comfort.\n\nAndi suddenly turned smug. She sat back in her chair and sipped her drink, handing me the bottle as she did. \"My cousin is sexy,\" she said, finally.\n\n\"That's what I said. And yes, it's weird.\"\n\n\"I wasn't repeating you. I was saying that MY cousin is sexy.\"\n\nI looked over at her and suddenly I wanted to tear her clothes off. I wanted to touch her in all the warm places that I knew I shouldn't touch her. I wanted to feel her flesh give beneath my hands and gather up all of her softness and roll in it. But that's not what I said out loud.\n\n\"You think I'm sexy?\" I asked, more than a little surprised. I figured she was just having fun with all the teasing she was doing. I had no idea that she was actually attracted to me.\n\n\"Mad sexy, cousin.\"\n\n\"And you don't think that's weird?\" I asked.\n\n\"Maybe a little. But it's never stopped me from thinking it.\"\n\nI shot her an inquisitive look. \"How long have you been thinking it?\"\n\nAndi looked thoughtful for a moment. \"I may tell you that one day. But it's not going to be today.\"\n\nThings got quiet for a moment and I realized how awkward I felt. I wasn't usually this clumsy with women but this was new ground and I didn't quite know what to say. Andi, mercifully broke the silence.\n\n\"Chris?\"\n\n\"Yeah,\" I said, thankful that we were talking again.\n\n\"Did you like kissing me?\" she asked.\n\n\"Yes,\" I answered without hesitation.\n\n\"Would you like to do it again?\"\n\n\"Yes.\"\n\nAndi got up from her chair and sat on my lap, straddling my torso with her legs. She leaned in close to me and put her lips to mine and I was sent to a place of bliss. The softness of her lips pulled me in as the warmth of her tongue slipped between my lips and into my mouth. I could feel her body against me, her butt on my thighs and her breasts pushing against my chest.\n\nI put my hands on her waist and felt her body, her ribs, her back. My cock was crushed beneath her and getting harder and harder with each passing second that her lips were against mine. The sensation was gloriously agonizing. I grew bolder, palming her butt and feeling her breasts in my hands, seeking out her nipples through her bra and rolling my palms over them. Every time I moved my hands or touched her in a new place, her kiss and her embrace became stronger and more urgent.\n\nI knew that I shouldn't. I knew that we shouldn't be doing this. But she was beautiful and I was just a man. She made it very clear that this was what she wanted and despite the fact that I still wasn't sure if this was the right thing to do, I knew damn well that this was what I wanted. I had always needed Andi as a friend but now I needed her in a very different way -- a very primal and animal way.\n\nAndi pulled her mouth away from mine and I saw her shirt briefly cover her face and then fly away behind her. I immediately put my hands on her chest, still covered by her bra but only for a few more seconds and then that too was ripped away. I leaned back to admire her. She had an amazing chest. Her breasts weren't large but they were perfectly shaped. They were stunning. Those nipples that teased me so mercilessly just a few nights before through her t-shirt were here in front of me now and begging to be touched and pinched and suckled.\n\nAndi watched me as I studied her. \"What's the matter?\" she asked, suddenly self conscious.\n\n\"They're as beautiful as the rest of you,\" I said as I reached up to hold them.\n\nAndi smiled and kissed me as I felt her breasts and then pulled away and replaced her mouth with her nipple. I sucked it into my mouth and played my tongue across it. Andi moaned in pleasure as I dragged my teeth gently over the apex of her nipple. My cock was leaking precum into my pants as I gently sucked and pulled on her with my mouth. I savored the suppleness of her skin, the delicate texture of her nipple, the feeling of her breast against my lips as she cradled the back of my head, rocking her hips against my hardness.\n\n\"Lets go to the bedroom,\" she said.\n\nI hated to stop but she was right. We could only go so far on this stool and I had every intention of going as far as she would let me. Something inside me had changed. It wasn't just lust but it wasn't exactly love. It was something that had been bubbling under the surface since she kissed me at her front door. Something caged up in the back of my mind. She had opened the cage and it was out there now, in the open, and it wasn't going back in without a fight.\n\nShe backed off of my lap, glancing down as she did so to admire the damp bulge in my jeans. I followed her through the kitchen to the doorway of the master bedroom where she turned around and again pressed her lips to mine. I moaned when her hand reached down and squeezed my hard cock through my pants. Still kissing her, I began pushing her back, quickly cocking one eye open to make sure the bed wasn't too far away. It wasn't, so I kept walking her backwards, guiding her around the foot board, intending on pushing her down onto the bed.\n\nBut just a few feet before we got there, she fell. And she took me with her. I guessed she tripped on something, walking backwards like she was and I was the only thing she had to hang on to. It was a miracle that her head missed the wooden nightstand at the side of the bed. I wasn't so lucky though and cracked my head squarely on it as I fell on top of her.\n\nAndi, not realizing that I had hurt myself burst into laughter. \"What the fuck!\" she said from underneath me, still laughing. I rolled off her and put my hand to my head which was already throbbing from the pain.\n\n\"Oh, shit, Chris! Are you OK?\" she asked.\n\n\"Ah... yeah. I'll live. Maybe.\" I said when I found my voice again. I pressed my hand to my head to feel for damage. \"What about you? You alright?\" I asked.\n\n\"Yeah, I'm fine. Landed on my butt pretty hard but that's what it's there for, I guess.\"\n\n\"What happened? Did I run you into something?\"\n\n\"I don't know, I think I tripped on something. What's that, over there?\" she asked, pointing.\n\nSlowly I sat up and looked on the floor next to the bed. \"You tripped on your purse?\" I asked as I spotted it in the pathway.\n\n\"That's not my purse.\"\n\n\"It's not?\"\n\n\"Seriously, Chris? Does that look like something I'd carry around?\" she asked.\n\nI looked at the purse again. It looked vaguely familiar. I knew I had seen it before, but if it wasn't Andi's then how could that be? As I grabbed it from the floor a puff of dust rose from it. Like everything else in this house that wasn't covered up for the last six years, it had accumulated it's share. I opened it and dug around briefly for a wallet that I knew must be there. I found it and pulled it out, opening the catch and flipping it open to look at the clear-window id holder.\n\nSitting there, still on the floor, my mouth went dry and I instantly sobered as I stared at my mother's face looking back at me from her drivers license.\n\n###\n\nI put the wallet back into my mother's purse and stood up -- too quickly. The knot that was forming on my forehead throbbed and I leaned on the wall for support as the room spun around me. Maybe it was the alcohol or maybe it was the bump on the head but I wasn't steady and the wall behind me was my best chance to stay on my feet.\n\n\"You, OK?\" Andi asked, crossing her arms across her bare breasts in a sudden display of modesty.\n\n\"Yeah, I just need a minute.\"\n\nOur little tryst was called to a halt, at least for a while. Seeing my mothers face evoked feelings of shame in me for what we were doing. Shame that up until this point, I managed to bury with the help of some alcohol and an unhealthy dose of lust for my cousin.\n\nLooking around the room, I realized that it was probably best that we didn't make it to the bed. Unlike the rest of the house, the furniture here -- which is to say, the bed in this room, had not been covered with a sheet to keep the dust off. What's more, the bed looked as if it had been left unmade and forgotten all together when the house was locked up six years ago. It wasn't just unmade though; the bed cover and sheets were strewn about the bed as if... well, let me just be honest. I've seen beds that have been slept in and beds that have been fucked in and this one definitely resembled the latter more than the former.\n\nWith the bed in the state of disarray that it was in, and the sudden discovery of my mothers purse sitting next to it, I started to try to put the pieces together.\n\n\"C'mon, lets get you sitting down.\"\n\n\"Hang on,\" I said as I spotted something out of place among the mess of sheets. Reaching down, I pushed the sheet aside and picked up an opened prescription bottle, several pills dropping from the open end as I did so.\n\n\"It's my mother's,\" I said, more to myself than to Andi.\n\n\"What is it?\" she asked.\n\n\"It's her heart medication.\"\n\nI bent down and retrieved her purse from the floor. When I came back up, my head started swimming again and I wobbled a bit, still unsteady on my feet. I reached out to hold Andi's bare shoulder for support. She put her hand over mine, forgetting her modesty for a moment.\n\n\"Chris, you really need to sit down.\"\n\n\"Yeah, you're right,\" I said as I let her lead me back into the kitchen.\n\nI sat on the bar stool and turned the bottle over in my hand as I turned the rest of it over in my head. Andi disappeared from my view for a moment, then reappeared wearing her shirt. Even with the pain in my head and the confusion of the past few minutes, I couldn't help but notice that she hadn't bothered with her bra.\n\n\"What are you thinking?\" she asked, sitting down on the seat next to me.\n\n\"I don't know, but I think it's pretty obvious that someone's been lying to me about how Mom died.\"\n\n\"How do you figure that?\" she asked.\n\n\"Andi, Mom died in a drunk driving accident.\"\n\n\"I know, but what makes you think that someone's lied to you?\"\n\nI lifted her purse off the counter and presented it to Andi, \"When you go somewhere in the car, do you leave your purse behind?\"\n\nAndi thought about it for a moment before replying. \"Yeah, actually sometimes I do. It depends on where I'm going. There's plenty of reasons I'd leave my purse at home.\"\n\nI reached into the purse and pulled out a key ring. \"But how would she be driving without these?\" I asked, jingling the keys in the air.\n\n\"Maybe someone else was driving?\" she suggested.\n\n\"Fine. If someone else was driving, and her keys and purse are here, then where is her car?\"\n\nAndi didn't have an answer for that. I think it must have dawned on us both at the same time. We had been here for over an hour but in that time we had only just discovered Mom's purse because we hadn't been anywhere in the house except for the kitchen and living room. As one, we both looked over to the doorway under the stairs.\n\nI got up from my seat and walked to the door. I spun the knob and walked through it, brushing my hand along the wall in the dark garage to flip the light switch on. There, in the center of the room, under a thick layer of dust sat my mother's black BMW. The tires were low on air and the gleam of the clear-coated black paint was muted and dulled by the dust, but it was definitely her car.\n\n\"So someone else was driving,\" Andi said from behind me.\n\nI turned around to face her. \"Andi, do you ever remember anyone telling you that? Because I don't.\" Now that I thought about it, no one had really told me anything about the circumstances surrounding my mother's death. 'She died in a drunk driving accident.' That's all I ever got from them. Being sixteen at the time, I didn't think to ask any questions. My Mom just died, why would I? I was angry. Not with Andi, but with the rest of our family. Angry at Aunt Janice, Aunt Marjorie, Uncle Dave. And Jesse too -- he obviously knew something about all this that he wasn't telling me. They had all let me believe something that wasn't true. At best they let me make assumptions and didn't bother to correct them. They deceived me and I wanted to know why.\n\n\"So lets say for the sake of argument that the drunk driving story is true, and she was riding with someone and they got in a wreck.\"\n\n\"OK,\" Andi said.\n\n\"So, who was she riding with? Did they die in the accident too? Why did she bring them here when she was supposed to be out of town on business?\"\n\nAndi shook her head, \"I don't know Chris. This is all news to me too.\" She was as bewildered as I was, but also clearly upset. I could tell she wanted to help me, but looking back I can see how futile that effort would have been. She knew it too.  \n\n###\n\nWe slept on the couches that night. Andi suggested that we could go check the upstairs bedrooms to see if they had dust covers on them but I wasn't in the mood for any more surprises that I might find. I was having a hard enough time with what I had already learned and so elected to stop exploring the place and stick to a room that I knew was safe. I wanted answers but it was too late to start making phone calls.\n\nThe next day Andi and I made a few more trips to her place to move boxes. During one of the trips I took advantage of the driving time to call up Aunt M. I was still angry but not nearly like the night before. The physical effort of moving, along with having time to cool off had put some slack in my sails. I decided I wouldn't push Aunt Marjorie for information, but I had to talk to her. Anything she could give me would be better than what I had.\n\n\"Hello?\"\n\n\"Hi, Aunt M,\" I said.\n\n\"Hello Chris. Are you and Andi getting settled in at the Camp?\" she asked. Her tone was even and cautious.\n\n\"Well, we're moving boxes over there from her place right now.\"\n\n\"Good, I'm glad the place is finally going to be useful to someone.\" she said.\n\n\"Aunt M. you were right.\"\n\n\"Right about what, dear?\"\n\n\"When you said to me that you didn't know if I'd find answers there or just more questions.\"\n\n\"Hmm. So you're calling me to see if I can answer your questions, are you?\" she asked.\n\n\"Well. Yes. To start with, I'd like to know why -\"\n\n\"Chris, please, honey. I -\"\n\n\"Aunt M, no. I need to know what happened to my mom. You all told me one thing but you didn't give me the whole story. I have a right to know.\"\n\nThere was a long moment of silence before she replied.\n\n\"Chris - \" her voice was broken and cracking -- she was obviously crying, \"please don't do this sweetheart. I can't, dear. Please don't ask me to go through all this again.\"\n\n\"Aunt M, I'm sorry. I don't mean to upset you. I just want to know what happened.\"\n\nA moment passed before she spoke again, still sobbing. \"We never lied to you Christopher. The night your mother died she was in a drunk driving accident. That's the truth. The rest doesn't matter.\"\n\n\"It matters to me, Aunt Marjorie.\"\n\n\"Chris, you need to let this go. You're going to cause a lot of pain if you keep pushing this. You already have, but you didn't know. There's no way you could know.\"\n\n\"Aunt M -\"\n\n\"No, listen to me Chris. I love you. I always have loved you. You're like the son I never had. But don't call me about this again, and don't call you're Aunt Janice about it. You'll get as much from her as you've gotten from me. Your mothers death was harder on her than it was on anyone else -- maybe harder than it was on you, so leave her alone. Do you understand?\"\n\n\"Aunt M, I -\"\n\n\"No sir. I said, do you understand?\" she chastised.\n\nHumbled, as if I were still a child. I loved my Aunt M. and still felt that I deserved to know what happened, but it was clearly something very painful to her and I didn't have the heart, or enough disregard for her dignity to push her any farther than I already had."
    ],
    "authorname": "monkeyman057",
    "tags": [
        "cousin",
        "drama",
        "incest romance"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/in-the-grace-of-liars"
}