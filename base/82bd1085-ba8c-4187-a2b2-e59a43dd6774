{
    "title": "When We Were Married Ch. 02D",
    "pages": [
        "Lew Unleashed...or The Other Side Now\n\n(Author's note: I am still stunned by the response this story has gotten. And I apologize for the wait between installments but I'm grinding them out as fast as I can. I hope this chapter answers a lot of questions readers have had -or maybe sparks some more. If you're still interested, in some ways what I think is the best part of the story is still coming.\n\nDQS1)\n\nThursday July 7, 2005\n\nMy name is William Maitland. I'm an Assistant State Attorney in Jacksonville, Florida, the Chief Assistant in fact although there are two other Assistants under State Attorney Austin Edwards who are level with me on the organizational chart.\n\nI thought I was happily married to the gorgeous, big breasted and long-legged Debbie Bascomb who was helping me raise our teenage daughter and son, when she made a four-word Freudian slip that wrecked our marriage. My suspicions roused, I used a spy program to go back and check on her emails for the past six months and learned that she was falling in love with a young stud assistant professor at UNF, where she was also employed as a Professor of Business.\n\nShe wound up falling into his bed, filing for divorce from me and tossing our lives together into the trash. Now I'm working longer and harder than I ever did, which was one of the main reasons she implied our marriage had gone on the rocks, exercising and working with a boxing coach friend to rehabilitate a flabby midsection and a prematurely middle-aged body. Why I don't know, because I can't even work up a respectable hard-on.\n\nAs I prepare for a particularly unpleasant court case, Debbie is driving me crazy with alimony (now sometimes they call it maintenance but it will always be alimony to me) demands and I have very nervously unleashed a pit-bull friend of mine named Lew Walters to wield the previously hidden e-mails in an attempt to blackmail her into giving me the kind of divorce I want.\n\n#################### \n\nThursday July 7, 2005 -- 12:30 p.m. \n\nThe phone rang as she was getting ready to leave her office to go to her next class. She had tried calling Doug twice but he wasn't answering. Since he had caller ID, it was pretty obvious he didn't want to take her calls. How in the hell had she wound up getting the cold shoulder from the man who was the father of her children, whom she was divorcing, and the man who had swept her off her feet and given her the best sex she'd had in years?\n\nIf there was one thing in this world she would have said would NEVER happen, it would be to get the cold shoulder from the two most important men in her life. Or any man, for that matter. She glanced down and took in the bulge of her breasts in her blouse and shook her head. She had never had trouble finding or getting men. \n\nEven in the years when she'd been happily married, she'd always known if she crooked her little finger at a guy he'd be at her feet panting like a puppy. Men were so damned simple in a way. No matter how old or professional or respectable they were, they were all just walking penises. Unbutton a few buttons, show a little titty, and they all turned to mush.\n\nShe'd flirted at parties, let a few of them pet or grab her ass, but it was never serious. Bill had been what she wanted then and she just flirted to remember what it was like to have that kind of power over men. Of course that was before he got so damned flabby and MIDDLE-AGED. \n\nShe got angry all over again. The sorry bastard had the nerve to be angry at her when he'd all but shoved her into another man's bed. He'd never know about all the parties, the campus events, where tall, slim men danced with her and rubbed their hard cocks all over her pussy, felt her breasts and left her so wet she had to retreat into bathrooms to finger herself to quick, messy climaxes.\n\nIt would have been so damned easy to slip out to cars, or into the shadows, lower her panties and let them pound her into unending orgasms. But she hadn't. She'd been the good wife. She'd never tell her loving husband about the men she'd let get her hot and wet and then denied sex to. \n\nHow could she? She could control herself, but she couldn't control how men reacted to her. If she had complained to Bill every time a man touched her inappropriately, grabbed her ass, tickled her titty to feel her nipple harden suddenly, they would have had to stop going out, have no social life, and Bill would probably be in jail after killing somebody.\n\nAnd she couldn't tell Bill that men touched and petted her because, while she could tell Bill she had never let another man have her, it wasn't the kind of thing you could brag about.\n\nOf course, some of her friends would have been scandalized, but they were the homely, flat-chested women that men weren't going to pursue with flattery and presents and charm and insinuations of how big their dicks were. They could afford to be virtuous, because nobody but their husbands wanted them. She was the kind of woman men had always wanted, and she couldn't help that. She was made that way.\n\nShe had caller ID too and when she saw who was on the other end of the line, she picked up and said, \"Hi, Lew. Has your client come to his senses and decided to avoid a nasty court fight and give me what I'm asking.\"\n\n\"Hi, Debbie. We do need to talk. Something has come up about the case. I think we can get these matters straightened out and move the divorce along. Could you meet me at Linder's office today at 5?\"\n\n\"I have a class that doesn't end until 4 p.m. and I don't think I can make it in to Joyce's office by 5 p.m.\"\n\n\"This is fairly important. Couldn't you cancel one afternoon class or get someone to cover for you.\"\n\n\"It's that important?\"\n\n\"Yeah, Debbie, I think so.\"\n\n\"And it will-\"\n\n\"I think it will make things much easier for both you and Bill.\"\n\nAt five minutes past five she was pulling into the parking lot at Linder and Howe PA in downtown Jacksonville about a half mile from the courthouse complex. There were bunches of legal offices clustered in this neighborhood, far enough away from the courthouse to allow privacy and better parking and close enough to be there in a couple of minutes.\n\nAs she slid out of her 2010 Nissan 370Z, she smoothed her skirt down and took a deep breath. Her breasts swelled and just the contact with the fabric caused her nipples to pop up. Men loved them. They stood out an inch high from the three-inch wide pebbly areola, thick as pencil erasers. Men couldn't' resist sucking on them. She wondered sometimes if every man in America had been weaned from the tit too early. She had left her bra discretely folded n her glove compartment.\n\nAs she walked in Joyce was waiting for her. Joyce was a slender brunette, five-eight with a nice ass and relatively small breasts. Of course, Debbie thought with a tiny twinge of conceit, almost every woman had relatively small breasts when measured up against hers. But she had been nice, and supportive.\n\nJoyce took one look at her and smiled. \n\n\"And what is the effect we were going for here, girlfriend?\"\n\nDebbie took a depth breath, pushing her chest out and making the nipples pop up noticeably.\n\n\"Lew is a nice guy, and married, but it never hurts to dazzle them a little bit, whether it's an academic meeting or a divorce hearing.\"\n\nJoyce smiled again.\n\n\"You planning on trying for that at the divorce hearing before the judge?\"\n\n\"We do have a male judge, right?\"\n\n\"I feel sorry for your ex.\"\n\nJoyce led her into a small conference room and as Debbie was sitting down asked if she wanted coffee or a soft drink? \n\n\"Just a bottle of water, please. Too much coffee keeps me awake at night and every damned ounce of non-diet soft drink adds about a pound to my ass. I have to spend about an hour at the gym for every regular soft drink I consume.\"\n\nJoyce looked her over in a comfortably non-sexual way and said, \"Well, it's obviously paid off. I'll get you that water and Lew just called and said he was about five minutes away.\"\n\nWhile Joyce was out Debbie checked her cell phone, but no messages from Doug. Shit, why did he have to complicate things. It was just simple, great sex. His damned dick...but she stopped herself. She could feel herself begin to moisten up and she didn't want to be hot and bothered when she was meeting with Lew.\n\nNo, not with Lew. Why the hell hadn't Bill hired somebody else. Lew was young, tall, good looking but it was more than that. He was funny and smart and conceited, and that made him even more attractive. And worse of all, dammit, her tits and her body had never gotten to him.\n\nIt was stupid and it was high school, but when Mona was around, dark haired, small breasted (but weren't they all), swivel hipped Mona, there was no other woman in the room for Lew. Debbie had worn low cut blouses a few times when Lew and Mona had visited, and guys always, always, ALWAYS looked down into the valley and if they could, got hard. Lew never even glanced that way.\n\nIt was so stupid because she hadn't decided to leave Bill at that time and she wasn't interested in Lew that way. It was just....dammit, guys were supposed to stare and get erections. She wasn't used to being ignored. It wasn't natural.\n\nLew was standing at the door, sandy haired and with a slight smile on his face, a briefcase in his hand. He was dressed for the heat, in a lightweight, pale gray business suit and he was still sweating. \n\nShe took a deep breath to expand her rib cage, stood so her breasts would sway and jiggle gently with the motion, and smiled at him. She knew her nipples were sticking out like some whore looking for action. So much the better.\n\n\"Hi, Lew. This is the first time we've gotten together, in the flesh, in how long? A year? You're looking good.\"\n\nHe did a quick survey of her with eyes and, satisfyingly, his eyes lingered for a moment longer than was necessary on her nipples. She drew in a quick breath that made them dance on her rib cage but he just completed his once-over and then grinned. \n\nShit, he didn't even need to add the words to know what he was thinking, but he put his thoughts into words for her.\n\n\"I am flattered, Debbie. You took your bra off just for me? I thought you'd save the heavy artillery for the judge.\"\n\nShe couldn't help grinning back at him. He was a likeable guy.\n\n\"What can I say. If you got 'em, flaunt 'em.\"\n\nJoyce stepped in behind them with a bottled water she handed to Debbie and a mug of something steaming. \n\n\"You take yours black with sugar, right Lew. Black and sweet I think you say.\"\n\n\"That mind of yours is an iron trap, Joyce. You're going to make some man a fine partner some day.\"\n\n\"I know,\" she said looking down at the floor for a second as she added, \"I have a lot of fine qualities, not all of which are immediately visible.\"\n\nThen she blushed and sat down beside Debbie without giving Lew a chance to respond. She had a folder lying on the table in front of her.\n\nShe coughed nervously and then tried to recover, saying, \"You said you had something you needed to discuss, Lew. I think things are pretty clear cut, at this point. Has your client decided to see reason and accept our requests?\"\n\nLew sat down at the table and after giving Joyce a speculative glance, said, \"No, and that's why I'm here. We're spinning our wheels because Bill has already made an exceptionally generous offer to settle this matter. He's given more than most men would in a divorce before we even begin arguing. It's Debbie that has to do some hard thinking about what she wants.\"\n\n\"I want what's due me, Lew. I was married to the man for nearly 20 years. I gave him two children. I raised those kids, if not by myself at least doing most of the hard work. I kept a good home for him while I was building my career.\"\n\n\"Come on, Debbie, you're an established professional. Your major earning years are ahead of you and while you're not earning what he is, you're in the same ballpark. You're not some little homemaker who is going to be destitute if you don't get maintenance every month.\"\n\n\"Not pertinent, Lew,\" Joyce said. \"He does make considerably more than she does and your client's actions have damaged her future earning potential and her career. The law is on our side in this one and you're smart enough to know that. The only reason for your client to even make an issue of maintenance is to continue to try to punish her for seeking a divorce.\"\n\n\"That's not the way he sees it. We could fight this out, draw things out, let it get very ugly.\"\n\n\"And you'd still lose, Lew,\" Joyce said briskly. \"I bow to no one in my admiration for your legal skills, but you have a dog of a case here. You'll lose and all your client will do is spend more of his money fighting the inevitable.\"\n\nLew looked down at the table for a minute as if thinking, then raised his gaze to Debbie. \n\n\"Debbie, can we talk privately for a minute?\"\n\n\"Why?\" Debbie and Joyce said simultaneously.\n\n\"I'd rather not go into that, Debbie. It's personal. No offense Joyce, but I'm not sure and I believe that Debbie is not going to want you around for this discussion.\"\n\n\"Debbie, I'd advise you against-\"\n\nDebbie waved her hand and said, \"It's okay Joyce. I'm not going to sign anything or commit to anything before I get your input. I'm not stupid. I am curious about all this cloak and dagger. Bill's already warned me he had some heavy artillery of his own and I'm curious to see what he thinks he's got. Give us some time, okay?\"\n\nWhen Joyce had left, the two of them stared at each other. Debbie took a deep breath and let it out, her breasts jiggling with the motion. She watched his eyes. He noticed. She had to fight to avoid looking down to see if she could spot his lap. Was he getting hard?\n\n\"It's a waste of time, Debbie. Even if I got hard, I can think with an erection. Or are you , or have you become, so much of a fucking slut that you automatically work on guys' dicks without a second thought?\"\n\nShe smiled at him and made her titties jiggle some more. Was he sweating a little more heavily?\n\n\"Why don't you be honest about your feelings, Lew? You're mad at me for divorcing your friend?\"\n\n\"I'm mad at you for breaking his heart and cutting his balls off. He's a good guy and he doesn't deserve what you've done to him.\"\n\n\"He's a good guy? He's a good guy? Oh, he's a saint. Defender of the oppressed and downtrodden, bringer of justice to the violated? You want me to sing a hymn? How about his role as a husband and father? How about being away from home more than he's been home in years. How about putting everybody's life ahead of the people he says he cares about the most.\"\n\n\"I spend a lot of time away from home, and Bill's got obligations and duties like nothing I could imagine. People's lives depend on what he does and what he decides.\"\n\n\"When you are home, Lew, you ever slip it to Mona? You ever come up behind her, pull her panties down and fuck her until she screams? Care to guess how long it's been since Bill did that to me? When Mona is underneath you and you're pounding your dick inside her, does she feel the roll of fat around your stomach rubbing on her. That's a real turn-on, you know.\"\n\n\"He got fat and out of shape, Debbie. It's not a crime. You were able to make time to keep yourself in shape. You couldn't have pushed him, or lured him, into a gym? I got a feeling, you could probably deliver a blow job that would convince any guy to do anything you wanted.\"\n\n\"Would you like to find out?\"\n\nShe stared at him and she wondered if he could tell if she was serious?\n\n\"Lock the door and unzip and I'll let you judge for yourself.\"\n\nHe shook his head, but he did seem to be sweating more.\n\n\"Why do you do that, Debbie? You think I didn't notice you showing your tits off to me when I'd come over with Mona? I never did think you were serious, but why? You're a gorgeous woman, a walking wet dream. Why do you have to prove to yourself that every guy wants to fuck you? To answer your question, if Bill wasn't my friend and I wasn't married, I'd be in your mouth right now. But he is and I am. So can we stop the game playing?\"\n\n\"You know that Mona doesn't know how lucky she is?\"\n\n\"I hope she does.\"\n\n\"In answer to your question, I tried, Lew. I tried for years. I asked him to go with me. I made appointments for him with personal trainers. Fuck, I tried to get him jealous by flirting with young hunks on the rare occasions when I could get him to go with me. But there was always something that needed doing downtown, some case that had to be attended to, something more important to him than me.\n\n\"Finally I accepted the fact that his job was more important than I was. A woman I could compete with. Any woman. But how do you fight a job?\"\n\nShe looked down at the floor for a minute then up at Lew sitting in his immaculately tailored suit.\n\n\"Stand up, Lew.\"\n\n\"Um why?\"\n\n\"Just stand up.\"\n\nAfter a moment, he did.\n\n\"Turn around.\"\n\n\"Why?\"\n\n\"Please, just do it.\"\n\nHe did and then turned back to face her.\n\nShe got up and walked around the table toward him. He looked like he was going to back up but he held his ground. Finally she was standing in front of him and she reached out with her left hand. He looked like he was going to flinch but he stood still. She laid her palm flat on his abdomen, then ran it down his stomach but stopped well above the swell that was developing between his legs.\n\nShe pushed with her hand and he took the unspoken command and turned. With his back to her, she reached down and grabbed his ass. He almost jumped but stood still again.\n\n\"Turn around, Lew.\"\n\nWhen he was facing her again, she said, \"You've got a flat stomach. Maybe a little bulge but not much. And your ass, God it's tight and firm. Bill's told me you're out and on the road and away from home more than he's away. I know you're younger than him, but how do you managed to keep your stomach and ass that way?\"\n\nHe shrugged. \n\n\"There are gyms anywhere. And aerobic exercises you can do anywhere. And like you said, Bill's got 10 years on me.\"\n\n\"Why do you do it? Why stay in shape? It's not for other women, I don't think. Bill says you're a one-woman man and the fact you could ignore my tits convinces me he's telling the truth.\"\n\n\"I do it for Mona, I guess. For myself but I want to keep her hot.\"\n\nShe backed away from him, continuing to look up into his eyes. She took her hands cupped her breasts held them up to him and pinched the nipples between her fingers. She hefted them, then ran her hands down her legs and cupped her groin and ran her fingers under her skirt and between her legs.\n\nWhen she brought her hand her there was an oily sheen on her fingers.\n\n\"Just this little bit of talking nasty has got me wet, and to be honest I was thinking about Doug's big dick before you got here. Look at me, Lew. I'm what the kids at UNF call a MILF, a mother you'd love to fuck, and I am what my generation would call a prime piece of ass. \n\n\"This is what Bill had in his bed every night for years. He could have fucked me, up the ass or any other way he wanted it. He could have been stuffing my mouth every night, or at least a lot. There are some nights when no woman is going to be in the mood, of course, but there were a hell of a lot of nights this was available and willing and horny as hell and he was nowhere to be found.\n\n\"There are guys that would climb naked over barbed wire just to sniff my panties and HE COULDN'T GET UP THE ENERGY TO GO TO THE FUCKING GYM AND STAY IN SHAPE!\"\n\nShe hadn't realized she was screaming the last until she heard steps and Joyce stuck her head in the door with a worried expression.\n\n\"Everything okay.\"\n\nDebbie backed away from Lew and said, \"Yeah, I'm sorry. I kinda of lost it for a minute.\"\n\nWhen the door shut she walked back to her seat and said, \"It wasn't my responsibility to get him hot enough to get off his ass and stay in shape. He should have done it for me. For himself.\"",
        "\"We could argue that, Debbie, but you got a sweet young stud, his house, his kids and the life he used to have. He's got his job and a place he sleeps. He came out with the short end of the stick. And he's not going to pay you alimony.\"\n\n\"That's where you're wrong, Lew. He is, whether he wants to or not.\"\n\nLew looked at her funny.\n\n\"It's not that cut and dried, Debbie.\"\n\n\"Oh, so you've got his secret weapon? Unfortunately for you, I never screwed around on him. There are no photos of me leaving Doug and our love nest. There are no love letters, no tape recordings of hot whispered nothings. He and you have shit.\"\n\n\"That's something I've wondered about Debbie. He told me about that 'when we were married' slip and about your kissing Doug that night coming back from UNF. And about the way you acted with Doug at UNF that night. You still swear up and down that you guys were just platonic friends?\"\n\nShe took a sip of her bottled water and suddenly felt very tired.\n\n\"Once again, Bill has a screw loose. I made a simple slip. I don't know what I was thinking, but only Bill would have blown that up into an accusation that I was cheating on him. And I didn't kiss Doug that night, or at least I don't think I did. I might have reached over and given him a peck on the cheek, but I've given hotter kisses to neighbors at Christmas parties. It was nothing.\n\nShe looked down at the table, thinking about that Friday night at UNF.\n\n\"Looking back, I guess it did look pretty bad, that night at UNF. Doug was excited and happy and since I was his mentor, I was kind of basking in his glory. Bill had been acting like a shithead for weeks, we hadn't had sex in months, and a young handsome guy was treating me like his date for the prom. I plead guilty to acting like a stupid young girl. But it wasn't anything more than that.\"\n\n\"And that kiss?\"\n\n\"That was a big mistake. That wasn't planned. They had called him up to receive his plaque and he wanted me beside me and all of a sudden he was kissing me. I shouldn't have done it. God knows I shouldn't have given him tongue, but I was so damned horny all of a sudden it's a wonder I didn't drag him down on the podium and have my way with him. If I'd been getting what I needed at home, if you were in my bed instead of Bill, I would have laughed that kiss off.\"\n\nShe stared at the briefcase he had pulled up onto the table and said, \"Don't leave me in suspense, Lew. Hit me with your best shot.\"\n\nHe snapped the briefcase open and pulled out a manila folder. He flipped it open and she saw a thin stack of papers. He glanced through the pile and then pulled one out and put it on the table and shoved it in her direction. She picked it up and looked at it curiously.\n\nWhat in the world could-\n\n- Deb to Lance: That's indelicate, Lance, you pig. :) But you're right. Consummating is like....what Bill and I do. Oh, God, I can't believe I wrote that. But...it's been so long since I've been really FUCKED that sometimes I forget what it was like. I think we used to have that, if I can remember that far back. But now...Bill was never huge to be honest, but the last few years I think he's shrunk. I'll kill you if you ever let a word of this slip. And he gets winded in five or six minutes.-\n\nShe closed her eyes and tried to shake off a feeling of vertigo, as if the building were spinning around her. She had never fainted in her life, didn't even know what the feeling would be like, but it must be like this. After a moment she opened her eyes warily and looked down. The paper was still there. The words were still there. She grabbed her bottle of water and emptied it in gulps. \n\nHer eyes skipped down the page until she found: \n\n- Deb to Lance: \"No, and he never will. How can I tell him he doesn't do it for me in bed anymore; hasn't for a long time. That I have to use a big vibrator and shove it in there way further than he ever gets to climax. I fake it with him, but sometimes I think he must be able to tell the difference.\" --\n\n- \n\nAnd...\n\n- Deb to Lance: \"I know you could have. You could have had me a month ago if you were an asshole like a lot of the younger guys around here are. But you've been a gentleman, a good man. That's why I like you so much. I'll just say that I hope you know just how special a friend you've become. And now I'll sign off.\"-\n\n- \n\nShe felt like she was waking from a dream, or falling into a nightmare.\n\n\\ \"How -- what -- where did you...\"\n\nShe took a deep breath and tried to grab onto something, anything, to stem the rising feeling of panic inside her.\n\n\"Those were my private, my personal-\"\n\n\"Oh yeah, very personal e-mails Debbie,\" Lew said flatly with no discernable emotion. He shoved another paper toward her.\n\n- \n\n-- \"The worst of it is, I feel so much closer to you than I do to Bill. He's my husband, but he doesn't even know our marriage is dying slowly. He's clueless. Such a smart, smart man, so skillful in the courtroom, but in real life, in our marriage, he's a loser. He's lost my lust, and my respect and slowly he's losing my love.\n\n\"I feel like an animal caught in a trap. I've tried a thousand times to think of some way to start breathing life back into our relationship, our marriage. I've thought about trying to invigorate our sexual life. But...dammit, I'm not that good an actress. I fake orgasms all the time, but I can't fake excitement. And he doesn't excite me any more.\u2014\n\n-\n\nShe looked across the table, and for the first time she had a feeling for why Bill had called him a shark. There was a cold, hard expression on his face and he didn't' look like the man who had been smiling at her before.\n\n\"Those were my personal messages. I deleted them all. How could he-\"\n\n\"I'm not going to give you the details, but he did. All of them. Going six months back until just before the Friday night blowout. You remember the message where you told Doug -- sorry that's 'Lance' - that you were getting ready to end your marriage but you would take time out to help him celebrate his big night?\n\n\"Well, I can understand that. What's a little thing like a nearly 20-year-marriage compared to a chance to go out and have a blowout with your new boyfriend?\"\n\nHer mind was spinning. Somehow the question that came out was, \"How long...,\"\n\n\"He trusted you, Debbie: shows you what an idiot he was. It was an automatic monitoring system. He'd never ever looked at your emails. Until that weekend you stayed out all night and he eventually found out you'd gone to your parents. He was alone all that weekend and he'd gotten suspicious and he started poking around. That's what investigators do.\"\n\nThere was an emotion in his eyes deeper than contempt and harder than anger.\n\n\"He were there all alone in that big house of yours while he learned what you really thought about him and his shrinking dick and read those messages talking about how hard lover boy's dick was and those fabulous abs of his. He was alone while he learned how you were going out dancing with friends and guys because you just didn't like being around him. \n\n\"He was in that house that he paid for and worked his ass off for surrounded by pictures of the life he used to have. That's why he left you that bloody ring. I'm glad he was able to get it off. I think he would have chopped it off if he had to. He didn't have much love left in his heart for you that night.\"\n\nShe didn't know what it was, maybe it was that image of him hunched over the big computer off their bedroom reading by the light of the computer screen in the dark house, but she lurched to her feet and mumbled something about being sick and raced out the door of the conference room and barely made it to the toilet in the closest bathroom. She was hunched over it heaving, but nothing coming out, when she heard the door open and Joyce say, \"Debbie, what's the matter? What happened\"\n\nShe tried to shake her head. Tears ran down her face and she gasped for air. Finally, she got out, \"Sorry. Must have....been something...I ate. I'll be okay.\"\n\nJoyce finally backed out and closed the door and Debbie took deep breaths until the queasiness passed and the tears stopped. She tried to get her head straight. He had known. All the time since that weekend. It was as if he had opened a hole into her heart and soul and knew what she was thinking while she was pretending to be someone other than who she really was.\n\nWho she was, was a woman getting ready to walk out of a marriage where she felt trapped and unloved. She had thought she was wearing a mask around him, and in truth he had seen her as she really was. \n\nWhy hadn't he said anything? And then she understood his anger. For the first time. He really did think she had been fucking Doug all that time. She remembered the words she had read. If she'd intercepted emails from Bill to a woman with the same kind of language, she would never have believed he wasn't having sex with her. \n\nThey were the words of lovers, even though she would have sworn at the time that they were just friends.\n\nShe walked back in to see Lew swallowing the last of his coffee. He looked up at her with eyes that were neither friendly nor unfriendly.\n\n\"Could I see them? All of them?\"\n\nHe passed her the folder. She opened it and began reading. It was like opening a door into the past. She had never read them as a whole. She had gotten them, read them and deleted them day by day. Now they told a story.\n\nFinally, she put them in the folder and closed it.\n\n\"Can I have a copy?\"\n\n\"Keep that one. I've made other copies.\"\n\nShe finally raised her eyes to meet his. She noticed, not for the first time, his were a peculiar gray green combination. They were attractive, now cold eyes.\n\n\"I understand now why he's been so angry. But, Lew, they weren't...it wasn't...\"\n\n\"They are there in black and white. They are what they are.\"\n\n\"I never meant him to see any of those. I never thought -- that he would spy on me.\"\n\n\"Because you could go anywhere, party with your friends, come back drunk, and he never asked you questions. I'll bet my life he never checked your panties to see if you had any unusual deposits in them. He trusted you, even knowing what a hot piece of ass you are. I don't know how many men would be that trusting, or stupid.\"\n\n\"Whether you or he believe it, I was never with any other man, since we got married. I went out and I drank and I let men touch me, but I never touched them back. I never gave handjobs or blowjobs or went out to their cars.\"\n\n\"Well, aren't you the saint yourself, Debbie. Never gave any blowjobs but you did let men rub you and play with your tits. I know I'd be proud of you if you were my wife. Especially since you were doing it behind my back.\"\n\nShe made herself stare back at him although she felt like crawling under the table. \n\n\"I'm not a slut, no matter what you say or what these emails might make you think. You're away from home more than you're home and Mona basically lives alone most of the time, just like me. I know she travels all over. She dances with men. She has drinks with them. She goes out to dinner with them. \n\n\"And she may not be as hot as me, but she's pretty damn hot. You really think guys don't rub their dicks on her when they're slow dancing. You really think no one ever brushes or touches her breasts? You really believe she doesn't get wet when some young, good looking guy is hitting her with everything he's got? If you do, you're the idiot.\"\n\nHis expression didn't change.\n\n\"I know she goes out for drinks and dancing with men. I know they hit on her. I would if I were single. I wouldn't be surprised if guys get her hot. She's human. But I know this. She would never physically or emotionally cheat on me. And if she fell in love with somebody else, she'd have the decency to tell me we were through. She wouldn't let me find it out the way Bill did.\"\n\n\"I'm not in love with Doug and I didn't cheat. Not till the weekend of the UNF blowup.\"\n\nShe stopped. What he had said was true. They were what they were. The rest of it didn't matter. She forced herself to bring her mind back to the now, instead of going back six months.\n\n\"So. They're embarrassing. But what I said was true. I didn't cheat on Bill until our marriage \n\nexploded and there's nothing in there you can use in court. Joyce has already told me that having\n\nsex with Doug before we crossed the 't's and dotted the 'I's and made it legal is no big deal. Bill had already humiliated me and damaged my career. I didn't owe him fidelity.\"\n\n\"You're wrong.\"\n\nAnd he proceeded to explain how.\n\n\"You can call Joyce in here, and she'll try to blow smoke, but in the end you'll see I'm right. Doug is history when I file the suit against him and you'll be right behind him when I file the workplace environment lawsuit against UNF. Doesn't matter what protections you have in place, if they want you gone, trust me, you'll be gone.\n\n\"And when that happens, you're going to need Bill's maintenance. Being a mentor is not an administrative position, not in the chain of command. But it does place you in a semi-supervisory position over a younger colleague. \n\n\"And you, an older and more experienced staff member, took advantage of your position to trade emails about how big and hard your mentee's cock was, to exchange intimate secrets about your married sex life and how frustrated you were with your husband, and basically told your mentee that he could fuck you if he just tried a little bit harder.\n\n\"That's not normally the type of behavior universities, or any organization, expect from their mentors. In fact, if you were male and Doug was female, you would be very much in line for a sexual harassment lawsuit. It doesn't matter if he was chasing or trying to seduce you. It was your duty to keep things from getting out of hand. Even if all UNF does is cut you loose, good luck finding a position similar to the one you have at any other teaching institution.\"\n\nHe smiled at her and she finally knew why Bill had said he was a shark. There was something very cold and cruel in that smile, almost as if he were enjoying the thought of what was awaiting her. Maybe the emotion wasn't real and he was just twisting the knife for effect, but it felt real.\n\n\"So when you get that maintenance check, you'd better kiss it and hold it tight, because while you're looking for a new job in a new field, you're going to find it hard to maintain the standard of life you became accustomed to before you started looking around for greener pastures.\"\n\nShe surprised herself.\n\n\"No.\"\n\nHe looked at her in surprise.\n\n\"No what?\"\n\n\"No deal, you bastard. Tell Bill that for me. Let him do what he wants with those emails. Doug was planning on leaving anyway and this just means he'll bail sooner. He's young and talented and he'll find another job. \n\n\"And if I wind up washing dishes in a Sonny's barbecue joint, or handing out hamburgers at McDonalds, so be it. I wouldn't give him the satisfaction of thinking he beat me down, forced me to let the alimony go. If he hates me that much, tell him I'm going to rub every single damned check he sends me all over my pussy before I cash it, and that's the closest he's ever going to come to getting inside me again.\"\n\nLew just stared at her for a moment, and then he smiled. And this time she did shiver.\n\n\"You're a pretty tough broad, Debbie. Tougher than I thought. So the last thing we're going to do with the emails won't bother you.\"\n\n\"What else could you do?\"\n\n\"Copies will be posted on the Internet. There are cheating wives sites, and places like that. Plus copies will be anonymously emailed or hard copies will be sent to your parents, his parents, your friends, your colleagues at work. Pretty much anybody you've ever known.\"\n\n\"He couldn't hate me that much.\"\n\n\"Doesn't matter if he does or not. It will happen. You remember how you reacted. How do you think your parents will feel when they read how enamored you were with a colleague's abs and dick when you were still married to Bill? Your friends? Well, I don't know if any of them will drop you, but expect to have every married friend you know watch you very carefully anytime you're around a husband.\n\n\"Oh, and this shouldn't bother you at all, but expect every husband and boyfriend of every friend you've got to start calling and coming around when their significant other is otherwise occupied. Because they're all going to think you're just another very hot and very fuckable MILF. I imagine your son's friends- what are they, fourteen or fifteen - will start hitting on you too.\"\n\nHe stopped and looked down at his hands. He didn't look at her as he spoke.\n\n\"There won't be anything sent to your kids. But they'll find them. Friends will see that they do. And no matter how grown up kids act like they are, how do you think they're going to react to finding out what you really thought of their father, how you treated him, when you were still married to him? \n\n\"How do you think they'll feel when they find out that you were lying through your teeth about your feelings for Doug, that you were lying when you said their father was paranoid and crazy to be suspicious of you two. You lied through your teeth to your children and your parents.\"\n\nNow he looked at her, and worse than the threat was the pity in his eyes.\n\n\"But, it really doesn't matter what they think now. They're going to grow up. Kelly will be a grown woman with a husband and kids, Bill Jr. will have found some woman he loves and wants to have children with. And someday they'll run across these e-mails again and they'll read them with grown-up eyes. They'll understand what you did, and how terribly you betrayed their father. Even if you didn't touch Doug, you still engaged in an emotional affair.\n\n\"You've lost Bill. And someday, you're going to lose your children. They may still be polite and still let you be around your grandchildren, but your relationship with them will never be the same.\"\n\nThey sat together in the small room in a curdled silence.\n\nShe wasn't even aware that she was crying until she felt tears run down her cheeks.\n\n\"He wouldn't do that to me. I can't believe that. Even hating me, I can't believe he would do that.\"\n\n\"No, he wouldn't.\"\n\nShe lifted her head and looked into his eyes, not believing what she had heard.\n\n\"He-\"\n\n\"He wouldn't use the emails against you that way, Debbie. He wouldn't even let me threaten you with sending the emails to family and friends. The poor bastard loves you and he's willing to let you screw him yet again rather than hurt you that way.\"\n\n\"Then-\"\n\n\"He loves you. I don't.\"\n\n\"I don't understand, Lew. You're his attorney.\"\n\n\"I was his friend before I was his attorney. I was his friend, I am his friend, and I will be his friend. I'm not going to let you rub salt into the wounds you've already inflicted on him.\"\n\n\"I still....how can you do what he ordered you not to do?\"\n\n\"Easy, I just have to violate virtually every aspect of the duty an attorney owes to his client. I have to go against his wishes and take actions that will kill his soul. But, I'm going to do it anyway.\"\n\n\"Those are his emails.\"\n\n\"He gave them to me. I made copies.\"\n\n\"But he -- if he didn't want --\"\n\n\"He'll be royally pissed at me, furious. He'll threaten to take legal action against me, bring me before a review board. Maybe try to get me disbarred. And all I'll do is tell him that if he does I'll fight it and it's such a juicy, sexy scandal that it will get tons of publicity -- I'll make sure it does because I know how to work the press - meaning even more people will know what a miserable cheating slut he was married to. In the end he'll back off. Because he loves you.\"\n\n\"But, I thought you were his friend.\"\n\n\"Oh, he won't want anything to do with me for awhile. Maybe a long time. But like I said, whether he's my friend or not, I'm his friend.\"",
        "He tapped his fingers on the table, saying, \"But, all that said, the question is what are you going to do. I've told you what I'm going to do.\"\n\n\"You're blackmailing me.\" \n\n\"Of course.\"\n\nShe closed her eyes and tried to think. So many thoughts swirling through her head. Her whole world had been turned upside down in less than an hour. Everything had changed.\n\n\"I - I need some time, Lew. I can't make a decision like that so quickly.\"\n\n\"You've got until I get up and walk out that door. Five minutes after I'm gone they will be winging their way through the ether and the genie will be out of the bottle and none of us will ever be able to get him back in again.\"\n\nShe just sat there and stared at him and wondered how she could have ever thought he was a nice guy.\n\n\"How can you do that, Lew? We were friends. You're willing to destroy me. Take my kids away from me in a very real way. To stop me from getting alimony?\"\n\nHe shrugged. \n\n\"When couples split the friends take sides. I happen to be on his side. As to hurting you, well, Bill said that I know no limits and I know no bounds when it comes to winning. I take no prisoners. I like winning. I won't take any pleasure out of hurting you, despite the fact that you're a stupid, cruel bitch, but I will if I have to.\"\n\nHe looked at her again and grabbed his suitcase and snapped it shut.\n\n\"The clock is running, Debbie. Make up your mind. I'm going to be leaving in a few minutes.\"\n\nJoyce walked back in after Lew had stepped outside for a moment. She looked at Debbie with unease in her eyes.\n\n\"Lew said you wanted to draw up a stipulation that you've have given up all rights to maintenance, for all time? That you want it notarized? Is that right, Debbie?\"\n\nDebbie just nodded.\n\nJoyce glanced from her reddened eyes to Lew, then said, \"What the hell did you do, Lew? It can't be legal. Debbie, can't we talk about this?\"\n\nDebbie just shook her head.\n\n\"You're wasting time, Joyce,\" Lew said. \"Just draw up the papers. I have an appointment across town in a couple of hours.\"\n\nJoyce looked at her without words and then stepped out of the office.\n\nDebbie took a handkerchief out of his purse and wiped at her eyes. The tears had wiped away \n\nher mascara and looking at herself in the mirror she thought she resembled a blonde raccoon. She wiped \n\nthe smudges off and then looked up at Lew, standing near the doorway.\n\n\"I wish he were more like you. You just royally screwed me over, and I wish we were in a hotel \n\nroom somewhere and you were doing me. Isn't that crazy?\"\n\nHe looked her over, his eyes lingering on his breasts, and somehow she knew he was visualizing them together in that room, and deep down he would have liked to have been there.\n\n\"The funny thing is, Debbie, that I wish I were more like him.\"\n\n\"Why? You're good looking and young, but it's more than that. You take what you want. If you weren't attached, weren't spoken for, you'd have me in that room and make me scream. You're not a\n\nnice guy, not at all, but then, I never did like nice guys. Before I met Bill.\"\n\nHe came back to the table and sat down across from her.\n\n\"You don't know your husband at all, do you?\"\n\n\"I know him a hell of a lot better than you. I've known him longer.\"\n\nHe shook his head.\n\n\"That's probably the reason why you guys are splitting. I think it happens that way sometimes. If I'd had any idea, I'd have talked to him, although I doubt he'd have taken any advice from me. You know what he does, but you have no idea what it's like to live in that world. I think he did it deliberately. Like a cop who never tells his wife what his daily life is like, or a soldier home from the war who can't \n\ntalk to his wife about what he went through. And so you have no idea who or what he is.\"\n\n\"He's a fucking lawyer, Lew. He wears a suit and stands up in front of juries, but he's done that for a long time. Don't fit him for a halo.\"\n\nHe stood up suddenly, shoving the chair back and came around the table in one fluid motion. He grabbed her hands in his and yanked her to his feet. \n\n\"Listen to me, you stupid bitch. Bill is the best man I know, the best man I've ever known, and he deserves better than a woman who'd throw him over for a flat belly and a big dick. \n\n\"You know what makes him special? You know why Edwards picked him to run the State Attorney's Office when he had a dozen lawyers older and more experienced than Bill who wanted the job? It's simple. He does the right thing. Always. No matter what. \n\n\"You can't scare him off. You can't buy him off. You can't fuck him off. If you had a gun to his head and he was going to die in the next minute, he'd do the right thing. He could be a millionaire today if he'd taken any of the offers coming his way from big name firms. He's had death threats, none of which I imagine you know anything about.\n\n\" The reason Edwards respects him is that he knows if he ordered Bill to do something wrong, Bill would tell him to fuck off and quit a job he loves.\"\n\nHe let go of her hands and she fell back into her chair.\n\n\"You are hotter than hell, Debbie, and that's the truth. But he could fuck around on you every day if that's what he wanted. I don't have that much power, and I have clients and the wives and daughters of clients offer me pussy -- maybe not every day -- but it's a slow week when I don't have it waived in my face. \n\n\"He holds people's lives in his hands, their fates. If he was a two-headed dwarf, he'd have women offering to blow him. It's not legal, but anybody will tell you desperate wives meet prosecutors before deals are made and grateful wives of clients make arrangements to see prosecutors after their husbands get a good deal. Nothing you can prove, but everybody knows it happens.\n\n\"You see him as a fat, soft guy and it's obvious you don't respect him. But the people in his world, the women in his world, see him as the man who runs that office. The Big Man is a politician who likes getting his picture in the papers. Bill is the guy who makes executive decisions, who decides who moves up and who doesn't. He's the spine of that place. Any smart woman knows you get him in bed and \n\nyou've got a straight shot to the top.\n\n\"Care to guess how many woman have climbed out of his bed to a higher position in the last five years? There's a reason why his nickname among women that work there is the Iceman.\"\n\nShe just shook her head. The vision of Bill, poor soft pudgy Bill, romping in bed with some younger woman, or even an older woman, wouldn't come into focus. She watched Doug flirt at the college and felt twinges of jealousy even if theirs was a strictly sexual relationship, but she had never worried about Bill at all. And maybe that was part of the problem.\n\nLew must have read her expression.\n\n\"I know he's hurting, but sometimes divorce can be a good thing. He's a good man with a great career, good earning potential. He could have kept sleepwalking through a life with you for another few decades but if you hadn't jumped into bed with Doug, you'd have been cheating on him with somebody.\"\n\nAgain he read her face and said, \"I'm not accusing you of cheating, Debbie. In your mind you're probably not right now. I'm just saying he obviously doesn't meet your needs and you'd never have been able to stay straight. You're too hot and you obviously need more sex than you're getting. This is going to be painful for him, but he's already changing. He needed a good kick in the ass and you gave it to him. He's going to be better off without you.\"\n\nJoyce came back in with the paperwork and a secretary. Lew read it, nodded at Joyce and passed it on to Debbie.\n\n\"Last chance, Debbie, \"Joyce said, casting a hard glance at Lew. \"Please don't sign it like this. Whatever Lew said, or whatever he used to make you do this, we could deal with it. You can always go back to a judge months or years from now and try to modify it. But, it's not like child support. Child support is like Play- Doh. It's very flexible. This isn't. \n\n\"You're making a statement, without any apparent coercion that you're voluntarily relinquishing any claim to maintenance --for the rest of your life, no matter how your circumstances or your needs change. It's to all intents and purposes, irrevocable. Unless you can prove that Lew here did something illegal or legally reprehensible or just plain unethical, a judge isn't likely to throw this away. Please think about it. At least give yourself a day to consider it.\"\n\nDebbie glanced up at Lew. She didn't have any choices.\n\nShe took the paper and glanced over it, then signed. The secretary signed and notarized it with her personal Notary stamp. She left the room with it.\n\n\"We'll keep the copy and you'll have the original,\" Joyce said to Lew. She looked at him with an expression made up of equal parts of anger and admiration.\n\n\"You earned your fee today, Lew. I hope you can sleep with yourself tonight.\"\n\n\"Won't have to,\" he said with a slight smile. \"Mona's home.\"\n\nA glance between the two of them made Debbie smile. He might be a one-man woman, but he liked the vibes Joyce was sending out. As for her, if she hadn't been in the room, Debbie was sure Joyce would have been doing everything but rubbing his dick. At least she had good taste. \n\nAfter another long, meaningful glance, Joyce sighed and said, \"Well, if you see him, would you give that good looking partner of yours a hello from me?\"\n\nLew nodded and said, \"Sure. Just...\"\n\nHe gestured to her and they walked together to the side of the conference room, but Debbie could hear them.\n\n\"I'll tell him hello, Joyce. He's dating a few girls right now but he might surprise you and call. It's just-\"\n\n\"I'm a big girl, Lew. I'd rather it was you, but you're off the market. I'd just like to have a little fun.\"\n\n\"Joyce, I love the guy, but be careful. He's catnip, but...he chews women up and spits them out. He's not a long term guy, never has been. And you're a nice lady.\"\n\n\"Who's going to be home alone watching a Cinemax after dark sex movie that will just depress me, or going to a meat market, which will depress me even more. He is so...gorgeous. I wouldn't mind being treated like a sex object...once in a while.\"\n\nHe leaned over and gave her a brotherly peck on the cheek, saying, \"I'll give him your number tomorrow. Just don't get your hopes up and...be careful.\"\n\nHe walked back over to Debbie and opened his briefcase, putting the signed statement inside.\n\n\"With this taken care of, there shouldn't be any reason why we couldn't get the divorce papers finalized and ready to go in the next month or so, right?\n\nShe nodded.\n\n\"And joint custody with you primary is okay?\"\n\n\"He's their father, Lew. Even if we really hated each other I could never keep him away from them.\"\n\n\"I guess we're done then. I'll see you, Debbie.\"\n\nBefore he got out the door she said, \"Lew.\"\n\nHe stopped and looked back at her.\n\n\"Two things. First, when you see him, tell him 'sometimes the rats win.' I shouldn't have underestimated him.\"\n\nHe looked at her with a puzzled expression.\n\n\"He'll understand. A private joke. And...just a little warning. You told Joyce to be careful. You be careful too.\"\n\n\"What?\"\n\n\"You leave Mona alone too much. With Norman.\"\n\nHe stared at her.\n\n\"The guy is a machine. He moved in on me once, until I told him that if I told Bill there'd be an accident or an assault by unknown assailants and he'd lose his balls and be singing soprano. He's left me alone ever since. I think he's really afraid of Bill. But, he hits on everything. And from what I hear, he connects more than he misses. I'm probably cutting my own throat, because like Joyce, I'd kind of like you back on the market. But-\"\n\n\"Thanks for the warning, Debbie. Really. I know the kind of guy Norm is. I wouldn't trust him around anyone else. But he's been my friend since 8th grade. We went to UF together. He's had my back in some bad situations and I've saved his ass from beatings and worse. I wasn't always an alter boy. We got into some bad things growing up. But I'd trust my life to him, and I trust him with my wife. He would never go behind my back, even if Mona was willing. And she never will be.\"\n\nHe walked out and Debbie shook her head. Amazing how men could be so smart about some things and so dumb about others. Norm was tall, dark and gorgeous and had a huge cock judging by the way he'd rubbed it all over her at a few events where dancing was on the agenda. She had been committed to Bill then, and it was still the hardest thing she'd ever done to push him away and finally drive him away with the threat of Bill's vengeance. How the hell could Mona be around him year in and year out and never give in?\n\nShe shook her head and got up and prepared to leave.\n\nIt wasn't her problem. And if it happened, then maybe...\n\n\"Shit, I'm not even divorced yet. Get control of yourself, girl.\"\n\n################ \n\nThursday July 7, 2005 -- 3:45 p.m. \n\nI was waiting outside Ed White High School when the bell rang at 3:35 p.m. Summer school classes were held until the same time regular school let out. Kelly had done well enough not to need the credits, but by acting as a peer student guide and helping others, she was racking up credits for the next school year.\n\nI knew what direction she'd be coming from and I kept my eyes out. I saw her finally with a knot of four girls and two boys walking out toward the parking lot. One of them looked like a tall basketball player named Gary Anderson who was her current heartthrob. \n\nI slid out of my Escalade and stood up, waving at her. She noticed me and stopped. The rest of the group with her stared at me. Finally she said something to them and walked toward me. Two of her girlfriends walked with her.\n\n\"What are you doing here, dad?\" she asked when she got close enough.\n\n\"I just want to talk for a minute. I'll drop you off the house. Tell your friends them they can pick you up there.\"\n\n\"We were going...Okay.\"\n\nShe called the two girls over. One of them looked at me and said, \"You're Mr. Maitland?\"\n\n\"That's me. You guys are peer guides with Kelly.\"\n\n\"Yes.\"\n\nShe looked at me strangely and I couldn't help asking, \"Am I growing horns?\"\n\nShe giggled, then said, \"No, I just thought you were ...younger. I've seen Mrs. Maitland and I thought you guys were the same age.\"\n\n\"Brooke,\" Kelly said sharply. \"Stop fooling around.\"\n\nAnd then to me: \"Forget her dad, she's an idiot.\"\n\nI just smiled at the girls and said, \"It's an easy mistake to make. I robbed the cradle when I married her mother.\"\n\nThen I slid into the car and said goodbye to her friends. Then she slid into the passenger seat, put her books beside her and said, \"Okay Dad, what's going on?\"\n\nI smiled and said, \"I have to have a reason to pick my daughter up?\n\n\"Usually, yeah.\"\n\n\"Sadly, that's true. Look, Kelly, I meant to do this before, but...Your mother told me something recently.\"\n\nShe took one look and then dropped her eyes to the upholstery.\n\n\"No, no, tell me she didn't.\"\n\n\"She didn't mean to, she just let it slip.\"\n\n\"Look, it's no big deal. It was no big deal.\"\n\n\"Being raped is no big deal? I know things have changed since your mother and I were in high school, but somehow I don't think they've changed that much.\"\n\n\"It's not...yeah. It was a big deal. But everything ended all right. I --didn't' come down with anything. Mom talked to.....the boy.\"\n\n\"He shouldn't have gotten away-\"\n\n\"What were you going to do, dad? Send him to Raiford? He was a juvenile. We got drunk. He had sex with me. Nothing was going to happen to him.\"\n\n\"But-\"\n\n\"It might have made you feel better, but all it would have done if you'd done anything to him is made sure everybody knew what happened. I've have to live with it the rest of my life. I'm sorry, but I made Mom promise not to tell you. You always make a big deal out of everything.\"\n\nWe were silent together.\n\n\"Has it been that rough, having me as a father?\"\n\n\"No, no. It's just that, your job is always there. I can't get drunk, can't get stoned, can't do any of the stupid things other kids do, because I'm your daughter. It would be a big scandal. And everybody is afraid of you. I mean, they always feel like they have to be -- careful -- around you.\"\n\n\"Has it been that way for everybody?\"\n\n\"I guess. BJ likes to go to other guys' houses because -- they're looser. And his friends are nervous around here too.\"\n\n\"I guess I never thought about it. But-\"\n\n'It's alright, dad. We know you have an important job. Mom always told us that. It's just that...\"\n\n\"What?\"\n\n\"I came in from a date one night -- I think it was when you were in the middle of that toddler kidnapping and torture case and you were downstairs doing something involving documents. I was going to my room when I passed your bedroom and I saw mom lying on the bed. She was crying. I thought you guys had been fighting. So I got on the bed with her. I asked her what was wrong.\n\n\"She just hugged me and told me there was nothing wrong. And then she said, 'even when he's here, he's not here.' And I knew what she meant. But, it's not your fault.\"\n\n############### \n\nThursday July 7, 2005 -- 9 p.m. \n\nFinally at 9 p.m. Doug hadn't called or returned her four calls. Bill hadn't called or returned her six calls. Bill Jr. as was usual was spending the night at a friend's house. Kelly was out on a date. She was pretty good about getting in by midnight on school nights and at least she made an effort to stay within the timetable Debbie had set for her. Not like some of her friends who had gone completely wild by the 10th grade. Kelly had just passed out of the 11th grade and she was a good girl.\n\nAt least she was a hell of a lot more of a good girl than her mother had been at her age. Thinking back, Debbie felt simultaneous embarrassment and a burning deep inside her pussy. She had been completely a woman physically at 17 and had the judgment and good sense of a middle-schooler. It was only by the grace of God she hadn't wound up pregnant, hooked on serious drugs, or some Biker Mama in a hovel in the middle of nowhere. God, she had tested her parents. She couldn't complain about Kelly.\n\nShe tried to watch television. Tried to listen to music on her IPOD that Kelly had finally convinced her to buy. Tried to grade essays on \"The Optimum Corporate Organization Chart for the Post-Internet Age.\"\n\nWent back and read and re-read the folder of e-mails. Found her eyes misting every time she thought about Bill's finding and reading them the first time.\n\nEven though there was no one around, she felt herself blushing. How stupid could she have been? And the answer was no woman ever born could have been that stupid. She had known deep down what Doug was after, which was why his confession hadn't shocked her. \n\nIt was like kissing and petting in the 7th and 8th grades. You started with closed lips and then you opened your mouth and played tonsil hockey and then you let a boy touch your breasts outside your blouse and let him squeeze your nipples and rub that hard, mysterious rod of male flesh over your confined pussy. And then if you really liked him and he'd been working for it, you let him slip his hand in and under your bra and for the first time you felt male fingers milking you and felt a mysterious wetness between your legs.\n\nBut back then, it had been innocent, relatively. Sure, there were books and older girls to explain exactly what was going on, but you didn't KNOW. Not of your own personal knowledge. But she hadn't been an innocent virgin when Doug started to flatter her and move his body closer to hers during their lunches and she started telling him secrets that she had never told her husband.\n\nShe hadn't been ignorant when they started talking about the sex habits of UNF students and had gotten around to talking about the trend to shaved pussies. And when Doug had made the first joking suggestions that the only way she could be hotter than she was now was to shave down there she hadn't been offended. No, she'd been excited by the thought. And the vision of his fingers stroking her down there, and his tongue delving deep inside her and that hard huge cock of his sliding in there.",
        "It had been a fantasy, but looking back she realized she'd already made the decision to leave Bill. She just hadn't been able to work up the courage to tell him the truth. She told herself there would be a better time to tell him they had to talk. To explain that their marriage hadn't been working in such a long time. To tell him they'd both be happier free to explore their radically different visions of what a good life was. She wouldn't tell him she'd already fallen in lust with a young, hung hunk.\n\nShe saw them talking at some future time when she had gathered up her courage and saw the pain in his eyes. It would be like clubbing a baby seal. Because she knew he loved her, had never stopped. But was that enough? Did the fact that somebody loved you entitle them to keep you in chains, to keep you locked into a marriage where you were dying. But, at least, he wouldn't know about Doug. He could keep his pride.\n\nAnd then that fucking, fucking, fucking slip of the tongue. Only Bill, with that goddamned prosecutor's steel trap mind, would fasten on those four words and shake and tear and rip at her until their marriage started to collapse. And he'd found her emails. God, she couldn't understand why she'd never even thought of that. She knew he monitored the kids' emails, but she knew that was a good thing. There were too many dangerous people out in the world for teens to be completely on their own.\n\nBut somehow she never thought he'd do it to her. Why? Why hadn't she ever worried about that? She hadn't had sex with another man, but she was cheating on him. Looking back now, she couldn't deny it. Making a life separate from his, not telling him about the outings with friends, the dancing, it was cheating even if there was no sex involved. She knew it and had to admit it because she realized what she'd feel if she discovered that he had been doing the same thing.\n\nBut somehow, she never worried about him checking up on her. Why? It wasn't that he was stupid. Other than maybe Lew Walters, he was as smart as any man she'd ever known. Sitting there and reading the emails and seeing for the first time the way her affair with Doug -- and that's what it had been -- had progressed, she couldn't get her head around the feeling of invincibility she had enjoyed.\n\nAnd that's when the real tears started. She had felt invincible because she had never doubted Bill's love for her. As she'd told Doug, he would have walked through fire for her. He had been her champion since that day so long ago when he'd swooped in like some comic-book hero to save her sorry, wildchild ass from being gangbanged to a pulp by a bunch of horny UF frat boys. \n\nAnd she could come and go as she wanted because she knew he'd never check up on her, never check her panties to see if another man's cum was in them, never look for hickeys or bruises on her breasts and ass. And marks were there sometimes. Before she got rid of them, guys sometimes got too excited, pinched a nipple or her butt hard enough to leave marks.\n\nWas it possible to love somebody too much? To trust them too much? Had she developed a contempt for him because he was too good to her? As she had told Lew, she had never really liked nice guys before she met Bill. It was the mean ones, the hard ones who took what they wanted, that got her wet, that got between her legs, that took what she had to offer without concern for her feelings.\n\nShe grabbed her cell phone. As usual Bill didn't answer. She'd known he wouldn't answer even if he had his cell phone with him. She scrolled down and found another number and prayed she would be by her phone. It rang five times before, \"Hello. Is that you Debbie?\"\n\n\"Yes. I'm sorry to call you after work, Cheryl, but I had a question I hope you can answer.\"\n\n\"um -- okay.\"\n\n\"Relax. I'm not going to ask you to be disloyal to Bill. I just -- I want to talk to him. Face to face. He won't take my phone calls. And I know he's in the office when you lie to me and tell me he's out.\"\n\n\"Uh, Debbie, I'm sorry, but-\"\n\n\"I know, you have to do what he tells you to do. But this is important. We've finalized the divorce papers and before -- it's all over, I'd like to talk to him one last time. Can you help me. I've never been to his new place.\"\n\n\"I can give you the address of his condo, but I don't think he'd be there. It's what -- 9 p.m.? I know he doesn't spend much time there. He would probably be at the gym or that boxing place.\"\n\n\"Gym? Boxing place?\"\n\n\"I don't know much about it. Bill's been pretty tight lipped about his personal life since...you know. But we do get emergency calls or calls from deputies who want to talk to him so I've learned those are the two places you're most likely to find him at night. Unless he's at a bar or...\"\n\n\"Bill is going to bars? I had to practically blackmail him to get him to come out to a nightclub with me when....\"\n\n\"I guess things change.\"\n\nDebbie sat with the phone to her ear, head whirling. Bill was spending time at gyms and boxing places and going to bars. What the hell. Men were supposed to have their mid-life crisis BEFORE they got divorced, not afterward.\n\n\"I can give you the addresses of the gym and the boxing place. The gym is in Avondale. I can get the name. And I know the boxing gym or training place is run by an old friend of his named Carlos...something. If you go down there, be careful. It's in a really bad part of the downtown\"\n\nShe waited while Cheryl went to get the information. When she came back, Debbie wrote it down and thanked Bill's secretary. Then:\n\n\"I don't have any right to ask this, and I don't really know why I am except I'm curious. Has -. Is -- he....seeing anybody? Socially?\"\n\n\"......Uh, Debbie, like I said, he's been secret, private about his personal life. And nobody, I mean nobody, is trying to pry into his personal life. You remember that old comic strip character, the guy who went around with a storm cloud hanging over his head all the time. That's kind of the way it has been with Bill, since...He's been....a real asshole, to be honest...for months now and it's gotten worse.\n\n\"The only thing I know for sure is that just a month or so ago, maybe longer, he went out with Jessica Stephens. She's an SA-\"\n\n\"I know who she is.\"\n\nShe had meet Stephens at a few State Attorney events. She was kind of plain, but...Bill was still a married man and he was hitting on women at his office or...\n\n\"Did he-\"\n\n\"The story I heard was that she asked him out.\"\n\n\"And she knew he was a married man? She asked Bill out?\"\n\n\"Debbie, I know Bill isn't -- or wasn't -- the most physically appealing guy. No eye candy for sure. But he was a really nice guy.\"\n\nSomething about that sentence caught her attention for a moment and she almost had it when Cheryl added, \"Of course, there's that story about Myra Martinez. I'm sure it's a joke, because you know she must have a ton of guys fighting for her, but the way I heard it, she asked Helen in personnel to let her know when your divorce became final.\"\n\nThat drove the other almost-question out of her mind.\n\n\"Myra? The freak secretary of Edwards? The one that can barely stand up straight? She is interested in Bill?\"\n\n\"Yeah, that Myra.\"\n\nJesus Christ. The bitch had breasts from hell. And she was Edwards' mistress, his private hunting preserve. Everybody knew that. Bill had told her stories many times about guys thinking about hitting on her only to drop back when they learned that Myra took care of ALL of Edwards' personal needs. Shit. Debbie jumped as the pencil she held in her right hand snapped in two. The bitch was the only woman Debbie had ever met that made her feel unattractive, even boyish.\n\nShe shook her head and laughed softly. There was no way in hell a woman who looked like that, who had to have any army of studs after her, would even think about Bill's pasty, flabby body. Even if Bill was as big a man as Lew had said in that office, Myra wouldn't have any interest in Bill. She couldn't. It was ridiculous.\n\n\"Thanks, Cheryl. I won't tell Bill where I got this information. I'll tell him the kids told me. Bye.\"\n\nAs she drove toward Avondale with the address punched into her Garmin GPS, she couldn't help laughing. That bitch probably wouldn't look at any man with less than 10 inches. And poor Bill probably couldn't even lift one of those udders. The bitch was a cow. Sure, she was pretty, kind of, but what man would be interested in teats that ought to be hanging under a Jersey. It was ridiculous.\n\nShe went by his condo first. It didn't look too bad. Small. She rang the doorbell. Knocked. Rang the doorbell again. It was dark inside and there was no sign that he was around. His Escalade wasn't there. So she went for the general purpose gym first. Even hearing that Bill was hanging around a boxing gym, she couldn't' see it. She'd save that for last.\n\nThe Garmin got her to a big warehouse looking building on the outskirts of Avondale. It was an older, wooded, 100 percent residential area except for a few streets leading into the area that boasted specialty shops for clothing, food, high-end restaurants. It was one of the more well-to-do sections of old Jacksonville.\n\nThe warehouse-looking building was topped by a large sign reading, \"Hurly's\". There was a large, empty and well-lit parking lot. There were no cars there. As she drove into the parking lot she swung through and saw two vehicles parked toward the bar in what looked like a loading area. One was an Escalade. The other some kind of SUV.\n\nEven though this was a nice neighborhood, she was a little nervous. She pulled up directly in front of the front plate glass windows, looked around to make sure no one was in the lot or near the building and then got out, holding her cell phone in her left hand. She walked over to the window and peered inside. The interior was well lit, even though it was deserted. It didn't seem as if anybody was inside. \n\nThen she spotted movement toward the left side of the building. There was a row of weight training machines in front of what must have been the changing rooms and bathrooms, On the far left were weights and beyond them what looked like a fairly good sized swimming pool. With the experienced eye of someone who had spent a lot time in places like this, she decided it looked like a fairly well equipped workout center.\n\nBefore she spotted a figure on the next to last weight machine further away from her a flash of anger ran through her. She had killed herself trying to get Bill to even come to places like this, and the fucking bastard started coming after she threw him out. What was the logic in that?\n\nThe man was naked to the waist. Bald as a billiard ball. The lights gleamed on his skull and glistened on the sweat pouring off his back and arms. She watched him for a moment. The muscles in his back flexed as he pushed up on the arms of the machine and hoisted the weights on the machine up with the muscles of his arms, shoulders and back. God, he was soaked through. There was something very sexy about sweat on a male body.\n\nHe was no muscleman. Slender. The muscles weren't terribly defined, she decided as she studied him with experienced eyes. Probably some young guy in his 20s or 30s just getting out of shape and his girlfriend or wife had pushed him to get into better shape. Looking closer she could see a bulge running from his back and as he hoisted the weights she could see him from the side. He definitely would have to work that pot but working out and sweating like that would probably take care of it.\n\nShe rapped on the window. Bill didn't appear to be anywhere in sight, although he might be in the pool. Or he was in the back showering. When the guy on the machine didn't respond, she rapped harder. She hoped he didn't have an Ipod stuck in his ears, which case she'd never be able to get his attention. It didn't look like it, but it looked like he had a T-shirt wrapped around his neck and it might cover up an IPOD cord.\n\nHe stopped in mid-thrust and let the weights down as he lowered his hands to his side. He must have heard because he started looking around. When he didn't see anyone around him he finally turned and looked back toward the front of the gym. He must have seen her because he stared at the front for a moment.\n\nHe got off the machine, stood up and stretched. God, Debbie thought watching him, she had to get hold of Doug. When you start getting heated up by young, out of shape, sweaty guys, it's a sure sign you're not getting enough. After a moment he started ambling toward the front. As he approached he took the tee-shirt and wiped his face and head. His chest and arms were still wet. Debbie took a deep breath. Either she was going to get hold of Doug or she was going to give Big John, her name for her 12-inch vibrator, an epic workout tonight.\n\nHe was almost to the front door and she realized there was something....something oddly familiar about his walk. She wondered if he was one of the young guys who hung out near her whenever she went to work out, ogling her butt and breasts. Sometimes they were brave enough to flirt, which was flattering, but more often than not they just watched.\n\nHe punched in a code on the alarm behind the front desk and then walked around and unlocked the door. He pushed it open and a rush of warm, almost hot air rushed out into slightly less warm night air. He was close enough for her to smell his sweat. Jesus, even that was....stimulating. He didn't say anything, just looked at her.\n\nFor a moment she felt self-conscious. She was wearing jeans and a top she had thrown on. It wasn't particularly tight and didn't have a low cut, but she bulged out of it. She bulged out of anything she bought that wasn't strictly for school work or professional engagements. And she was alone with a guy she didn't know from Adam, a complete stranger. If he was working in the gym and he had the security codes, he was probably safe, but...\n\nShe realized he hadn't said a word. He was staring at her with an odd expression on his face. His face...\n\n\"Bill?\"\n\nShe stepped backward involuntarily.\n\nShe wondered what the psychiatrists would say, what name they'd attach to this condition. Seeing your middle-aged husband's face on strangers' sweating bodies? It couldn't be Bill, but the resemblance -- the eyes, the nose, the mouth -- was uncanny. This guy had a thinner face, a younger looking face, but other than that....\n\n\"Hello, Debbie. What are you doing here?\"\n\nShe was speechless. She stared at the sweaty, half naked stranger in front of her. Bill?\n\n\"Lew already called me and told me what happened. Thank you for agreeing to my request. I -- I'm sorry it had to go down this way.\"\n\nThe more she stared at him the more he became Bill. A younger Bill. A Bill who looked more like the man she had married. The shaved head was strange. It didn't look anything like the Bill she knew, but somehow, it looked good. Why hadn't he done that before? \n\nShe opened her mouth, but no words came out.\n\nHe looked at her strangely, then followed her gaze and looked down at his chest.\n\nHe gave her a reassuring smile.\n\n\"You haven't gone crazy. I forgot we haven't laid eyes on each other for about three months. I -- my appetite never really has come back. And a friend of mine arranged for me to starting working out here.\"\n\nHe gestured at his sweaty chest. \n\n\"They let me come in after hours and use the facilities. But they turn the air off when they shut the building down and I don't feel right using up their power. Besides, they tell me that sweating in this heat helps take the pounds off. So I usually work out in as little as possible. There's nobody around to offend. Of course, I have a long way to go. But it's helped.\"\n\nShe stared at rivulets of sweat running down his chest. The pectoral muscles were better defined than she remembered and he'd obviously built up his shoulders. The streams ran down past his nipples, his belly button and down beyond that to... For just a second she was 22 and he was standing over her in his dorm room. His cock was glistening with her spit, hard and strong and delicious. She leaned forward and took it in, inch after inch and tried to look at his face and drink in the expression.\n\nShe snapped back to the present. He was still talking.\n\n\"........know where I was. I didn't know the kids knew where the gym was, although I've talked to BJ and Kelly. But, why'd you come out here anyway?\"\n\n\"I -- I...what in the hell did you do to your head?\"\n\nHe ran his hand over his shaved head. It came off slick with sweat. He was still panting slightly.\n\n\"Well...you ever do anything just for the hell of it? I saw Kelly this afternoon when I picked her up after school. A couple of her friends made a comment about my looking older than you. They were surprised how old I was. Just another old guy with thinning hair. After I dropped her off I drove by a Great Cuts and had them shave it all off. Even polished it a little bit. I never knew they actually had cremes and oils for making naked heads gleam.\n\n\"It still looks a little bit weird when I actually look at it. I don't look like me anymore. But maybe that's not a bad thing. Anyway, my shampooing costs are going to go way down.\"\n\nShe still didn't say anything.\n\n\"Are you alright, Debbie? What's the matter?\"\n\n\"I'm sorry, Bill. It's just that -- this is -- is a shock. Jesus Christ, you almost gave me a heart attack. It's like you're a....different person.\"\n\n\"And would that be a bad thing?\"\n\nShe looked down at the sidewalk that run in front of the gym. It meant she wouldn't have to keep staring at that sweaty body.\n\n\"Bill, I...I keep saying I'm sorry. But I am. About -- the -- emails.\"\n\nIt was as if a curtain had descended over his eyes and the smile vanished.\n\n\"What are you sorry about, Debbie? That you wrote them? That you were going out behind my back and enjoying a life without me? That you shaved your damned pussy to get your boyfriend hot? That I found them? That I used them to spoil your alimony bid? Remember I'm an attorney. Be specific. Oh, and by the way, Lew told me that damned story about you guys not making it until after Friday night. I don't believe that and I never will.\"\n\nShe brought her eyes up until she was staring directly into his familiar, and yet strange eyes.\n\n\"I deserve that. I read the emails from beginning to end for the first time tonight. And if I were in your shoes I'd feel the same way. I probably won't ever be able to make you believe me, because I was cheating on you emotionally. I was making plans for how I'd leave you, how to break away, how to tell you I wanted a divorce. Maybe, probably, that was worse than actually having sex with Doug. So, if you don't want to believe me, that's okay. But I'm telling you the truth.\"\n\n\"Better late than never, right?\"\n\n\"No. But, to answer your questions. I'm not sorry I wrote them. Those were my feelings. I'm sorry they hurt you but they were the truth. I'm sorry that I didn't the courage to ask for a divorce or a separation before I started going out on you and lying to you. And again, I can never prove to you that I wasn't having sex those times. But I wasn't.\n\n\"And about my shaved pussy. I was fantasizing about sex with Doug. I don't feel guilty for doing it. I feel so damned guilty for lying to you and trying to make you believe I did it for you. I never really felt like a lying tramp until that night.\n\n\"I hate that you found them, and more than that, I hate the way you found them. I don't know if Lew told you, but when he told me, I lost it. I got physically sick. I hated you for letting our marriage go, for not caring for me more than that damned job, but I know you've always loved me in your own way. I thought about what you must have felt, what must have gone through your mind when you read what I'd written about you. I never understood why you left your ring and that bloody note. Not until that moment when I was trying to puke my guts out.\"",
        "He just looked at her and she couldn't tell if anything she said was sinking in.\n\n\"Anyway, thank you for letting the alimony drop,\" he said finally. \"I know you don't want to feel dependent on me. But you know that if anything happened, I'd be there for you. And it wouldn't be charity. You're the mother of my children. We're not going to be -- so angry -- forever. We're still raising our kids and you need to financially able to take care of them. And we were married for most of our lives. I'll always be here for you.\"\n\nShe thought for a second and made a quick decision.\n\n\"Lew was very persuasive. I know now why you like him. He is a shark. When he -- explained things to me - I just realized I couldn't take the chance of losing my job right now. I might still go job hunting in the future, but not right now. Did he...tell you about our meeting?\"\n\nBill just shrugged.\n\n\"Not in detail. He just said he convinced you it was smarter to drop the alimony. And everything else has been worked out. It's just a matter of getting the documents in the right order, and it's done.\"\n\nLew hadn't told him everything. It would be so easy to say a few words. Lew had been right. Bill wouldn't forgive him -- for awhile. It would pay them both back for being assholes about the alimony. But...\n\n\"It's history now, Bill. We can move on. Even if there are still some -- rough spots.\"\n\nShe stepped back from him and looked him up and down.\n\n\"The only thing I'm really pissed off about is that you finally went and started getting back into shape. After our marriage went into the trash. But, I guess, at least, the future Mrs. Maitland will reap the benefits.\"\n\n\"There won't be any more Mrs. Maitlands.\"\n\nShe tried to smile.\n\n\"You're going to make me feel even guiltier. I don't want to think that I put you off the idea of marital bliss forever. Just because we didn't make it, doesn't mean you won't find someone who will be in it for the long haul. Eighteen years ago we both thought we were going to be in it for life.\"\n\nHe shook his head and she got the feeling that he was dismissing her.\n\n\"I'd like to say it's all your fault. That you're just a cheating bitch. But I've had three months to think about what's happened. Right after -- you told me you wanted out -- I ran into a cop who cleared my mind. He made me see something I'd always known but hadn't wanted to admit. This prosecutor thing isn't just a job. It never has been. It's what I am.\n\n\"And because it is, it always came ahead of you and our children. I chose to put it ahead of you. I told myself you were being unreasonable, but you weren't. You only wanted what any wife wants -- to be number one in her husband's life. And you haven't been for ten years.\n\n\"I'm not going to do that again. Not going to put some other woman through that. I don't need any more children to ignore. I know what I am now and I'm content with that. I'll try to reconnect with the kids, but for the rest of it, I'm going to stick with what I do best. I guess some people just aren't meant to be married.\"\n\n\"We had a good run,\" she said.\n\n\"Better than many, Debbie. And we got two good kids out of the deal.\"\n\nShe stepped toward him, then stopped. Her eyes glistened.\n\n\"I feel like....I should say something.\"\n\nHe put his hand out and cupped her chin.\n\n\"Just say goodbye, babe.\"\n\nAfter a moment.\n\n\"Goodbye.\"\n\nHe stepped back inside and closed the door. She watched him go back to the weight training machine and begin another set of reps. He never looked back at her.\n\nShe drove home. As she pulled into the garage and stepped inside she thought, \"Things will never be the same again.\"\n\nShe went to her bedroom and ten minutes later Big John was vibrating wetly deep inside her and she was bouncing her ass up and down on the bed and moaning, and in her mind's eye she was sucking a sweetly hard 24-year-old cock in a UF dorm room and the next 18 years had never happened.\n\n######################\n\nThursday July 7, 2005 -- 10:30 p.m. \n\nI couldn't look back at her as I walked back to the Nautilus. Maybe she was telling the truth about not fucking Doug until after I smashed his face that Friday. And maybe she hadn't been fucking around on me when she was running around on me behind my back. But she had never taken back those fatal words -- I just don't love you any more. Nothing else mattered.\n\nIf you don't love somebody, what was the point of living with them, trying to make a life with them. \n\nI stopped in mid-lift. She hadn't told me about Lew's ultimate threat. The one that broke her resistance. Lew had told me everything, of course. I'd been pissed, as he'd known I would be, but deep down I always knew he'd go to the wall to win. He never stopped until he got what he wanted. And what he wanted was usually the right thing. It's one of the things I've liked about him. He did what I couldn't do.\n\nIt would have been so easy for her to tell me, assuming it would wreck our friendship. Why hadn't she? Just another surprise from a woman who after 20 years of marriage and courtship could still surprise me. Of course, the big surprise had ruined my life. \n\nStill, I had told her the truth. She had betrayed me by falling in love, or in lust, with another man. She had run around on me. But I had left her first. So now I was sweating alone in a gym while I was sure she was or soon would be bouncing under Doug's big cock in what had been our home.\n\nBut I found that thought didn't hurt me as much as it had three months before. Time does heal all wounds, or at least it helps you to scar up.\n\n#"
    ],
    "authorname": "DanielQSteele1",
    "tags": [
        "cheating",
        "divorce"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/when-we-were-married-ch-02d"
}