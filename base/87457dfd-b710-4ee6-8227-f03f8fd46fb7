{
    "title": "The Agency Ch. 15",
    "pages": [
        "*Author's notes: This is a work of fiction, hopefully that is not a word you struggle with. It is a story of fictional, consenting adults who enjoy power exchange, lingerie, heels and the like. It's in the transgender/crossdressing category for a reason, if that scares you, please back away slowly. For the rest of you, please enjoy!\n\nToday marked the 3-month anniversary of Michelle's employment, she'd now spent one quarter of the year as Michelle. Her bank account was now fuller than it had ever been, there was actually a comma in her bank balance! Her breast augmentation and the following post-op visits had given her a natural looking full C cup, she even had extensions in her normal hair giving her more options on how to dress and do her hair. All of these things had been a slow process, and while she should have been happy about all these changes, her mind was elsewhere as she stepped into her seamless black thong. Tonight, was her \"try-out\" date with Mikey. Big Mikey to be exact.\n\nThe last time she'd seen Big Mikey, he'd been in the office lobby waiting to meet with Ms. Allison. Even with 4-inch heels on, Big Mikey was still taller than Michelle. He dwarfed her in every possible way. Mikey was also her key to moving out of Ms. Allison's front office and into Her stable. After Mikey reported to Ms. Allison how the date went, Michelle would then get to meet some of the clientele, from there she would start to go on dates. Michelle knew Ms. Amy would be one of her first, which she was really looking forward to, but there were other reasons. Babette's bank account made Michelle's look small, that, on top of jewelry and the cash she was getting, Babette would be financially secure for a long time in just a few more months. Michelle had never in her life been financially secure, the opportunity in front of her was a big part of her focus.\n\nMichelle slowly pulled on a pair of black lace top stockings, which had rubber grippers on the inside to hold them in place. The stockings were long enough to almost reach her thong, which made it perfect for the dress she'd picked out. Taking the dress off the hanger, Michelle stepped into it, pulling it up her body enjoying the feeling of the satin dress against her flesh. The spaghetti straps sat on her shoulders, allowing the low-cut top to sit perfectly over her breasts. When she'd had the procedure done the Dr. had even shaved Michelle's Adam's apple minimizing it as well. This also allowed Michelle to be more daring in what she wore and how she presented herself, like this dress with its low cut back, which would certainly entice her date almost as much as her ample cleavage. Finally, Michelle stepped into the 5-inch heels she'd selected for the night. With her small clutch in hand, she waited for her date, not wanting to keep him waiting when he arrived. Michelle's stomach was fluttering, her entire body was a bundle of nerves not only because of the importance of doing well tonight, but also the fact this was her first-time having sex with a man.\n\n\"Oh geezus!\" Michelle blurted and jumped as her phone buzzed with a text alert. \"Calm down!\" Michelle looked at the phone, gulped and uttered, \"Show time!\"\n\nMichelle mindlessly straightened her dress, then grabbed her small purse and headed out, locking the condo door behind her. Babette was on a date herself, so she had the place to herself. Unfortunately, that also meant that if things went horribly wrong, she didn't have anyone to console her unless her date ended earlier than Michelle expected. It wasn't like she could call Brenda after all! They'd had a wonderful weekend at her friend's wedding, where Michelle had again shown her oral dexterity when it came to bringing Brenda to orgasm several times over. While Brenda had joked that Michelle wasn't allowed to kiss any guys at the reception, like she had during the bachelorette party, that was certainly going to be different tonight. According to Babette, Mikey was well endowed and seemingly insatiable. Walking past her doorman, who nodded politely while watching Michelle's breasts jiggle with each step, Michelle headed outside into the cool air of the city.\n\n\"Don't you look quite stunning?\" Mikey said stepping away from the car and walking to meet Michelle on the sidewalk.\n\n\"Thank you,\" Michelle blushed, looking down slightly as she replied, \"I do really love that tie with that suit.\" Close enough to touch now, Michelle placed her hand lightly on Mikey's chiseled chest brushing the tie with her fingertips.\n\n\"Thank you,\" Mikey replied before leaning in and kissing Michelle's cheek softly, \"I hope you've been looking forward to this night just as much as I have.\"\n\n\"I have!\" Michelle responded, realizing that even in her 5-inch heels she was still looking up to look him in the eyes!\n\n\"Let's go have some fun.\" He said turning and taking Michelle by the arm.\n\nHis hand dwarfed Michelle's arm as well, feeling like it was almost totally encircling her upper arm as he led her to the double-parked black car. The driver had appeared from nowhere and was now opening the door for her. He nodded politely as Michelle slid into the seat trying not to flash anyone. Slipping across the large seat, Michelle crossed her legs trying to at least look comfortable as Mikey joined her. With the car door shut, Mikey placed his hand on Michelle's right leg, giving it a soft squeeze.\n\n\"You know the place right Richard?\" Mikey called out to the driver.\n\n\"Yes, Sir!\" He replied.\n\n\"Great, I'll let you know when we're ready.\" Mikey said as he pressed a button on the door to raise the privacy divider between the front seat and the back. \"As you probably know,\" he said as soon as the divider was all the way up, \"I've been doing this for a while for your Boss.\" Michelle nodded. \"This will be like any other date you'll go on during your employment where you are an escort,\" his voice was calm and comforting in a way yet still authoritative, \"with the exception you don't get to choose if we have sex tonight.\"\n\n\"I understand.\" Michelle felt her stomach flip and sink at his words.\n\n\"We will have a conversation like it's a regular first date, my suggestion is to keep your background story mostly true,\" Mikey instructed while watching Michelle's reaction, \"if you were a jock or a geek in school share that, just not the fact that you used the men's room of the school.\" Michelle looked confused by his words. \"They know, but they don't want you to remind them in most cases,\" Mikey explained, \"they're paying for a date with a girl and that's what they want.\"\n\n\"That makes sense.\" Michelle replied. \"I guess.\"\n\n\"So, don't tell them you were a cheerleader, or make up a wild backstory,\" Mikey further explained, \"because you may see them again 8 months later and not remember what you'd told them. Keep the conversation light but close to home.\"\n\n\"Thank you.\" Michelle felt amazingly reassured by his words.\n\nJust as Mikey began lowering the divider the car slowed, pulling up to a well-lit entry way. The driver let him out, then Mikey leaned in to take Michelle's hand as she exited the car. She doubted her heard her thank him before he took her hand in his arm and led her inside. Mikey gave the Maitre'd a warm embrace before introducing her as his date. As Michelle followed the Maitre'd Mikey put his hand on her back, again she felt dwarfed as the heel of his palm touched her spine while his finger reached her side. His touch was warm and caring but reminded Michelle of his size.\n\n\"Very lovely to meet you Ms.!\" The suave gentleman said lightly kissing her hand. \"If you'll follow me, your table is ready.\"\n\nMikey held Michelle's hand lightly as she sat in the booth, and was certainly pulling out the gentlemanly charm as he ordered them a bottle of wine. Michelle had never experienced someone doting on her like this, it made her not only comfortable but filled her with a feeling of being wanted.\n\n\"So, tell me about yourself Michelle.\" Mikey said as he sat next to her again placing his hand on her thigh.\n\n\"Umm, well,\" Michelle wondered where to start, \"I guess I've been with the Agency for three months as of this week, prior to that I was working in a call center, which was just a horrible job.\"\n\n\"What was horrible about it?\" He asked with genuine interest.\n\n\"It was really a dead-end job, people just scream at you all day,\" Michelle replied earnestly, \"but it was a paycheck and I didn't have to interact with people in person.\"\n\n\"I find it surprising that you sound like an introvert.\"\n\n\"Oh, but I am!\" Michelle replied enjoying the conversation even though it was about her. \"I have always been quiet and shy,\" Michelle said as the bottle was delivered to the table and the sommelier went through his process, \"I wasn't popular, wasn't athletic, and wasn't one of the smart kids, so I just stayed in the background through high school and college.\"\n\n\"You look like this and remained in the background?\" Mikey chuckled sliding his hand further up her leg.\n\n\"I was a very late bloomer.\" Michelle giggled unconsciously giving her breasts a squeeze together with her upper arms.\n\nDinner was an incredibly relaxing experience for Michelle, while it was odd that Mikey ordered her meal, it was the one she was going to choose anyway. It all seemed to increase her feeling of submissiveness and that she was \"his\". She found her need to please him increasing with each passing moment. When the meal was over, again Mikey was quickly to her side taking her hand as she slipped out of the booth. Michelle excused herself to use the ladies' room, it was one of the first times she hadn't questioned her decision to walk into a public restroom. She also wasn't surprised that the front of her sexy little thong was moist as well as she'd had difficulty not thinking about what was going to happen when they got back to his place.\n\n\"Ready to go?\" He asked as she walked toward him.\n\n\"I am Sir!\" Michelle eagerly responded.\n\nAs they waited for the car to pull up, Mikey stood behind Michelle, pressing his body into her back. She could feel him growing behind her, his crotch pressed into her lower back as he held her waist tightly. Pushing back into him, Michelle bit her bottom lip as his cock strained to reach her.\n\n\"I'm going to fuck your brains out soon.\" Mikey whispered in her ear.\n\n\"Yes, please!\" Michelle's voice was dripping with need.\n\nThe driver came to the side of the car, opening the door and giving Michelle a wink as if even he knew what was next. Michelle settled into the seat, as Mikey got into the car and the driver shut the door. Her eyes grew wide as her gentlemanly date undid his pants, pushing them down to his knees.\n\n\"Well, it's not going to suck itself.\" Mikey looked at Michelle differently now, as if he were sizing up a race horse or something.\n\n\"Can you put the divider up?\" Michelle asked just above a whisper.\n\nMikey leaned into her, touching the side of her face, and in a stern voice said, \"Don't worry, he knows you're a slut. Now suck my cock.\"\n\nMichelle trembled at the words and tone; the mood had shifted in the time it had taken the driver to get from the passenger side back door to his spot behind the steering wheel. Still, as Mikey's hand now guided her mouth to him, Michelle did not offer the slightest bit of resistance. There had been weeks of anticipation for this moment, she licked her lips just before taking the head of his large shaft into her mouth.\n\nWhile she'd spent months practicing her oral skills, and even taken Babette's cage into her mouth multiple times, she couldn't prepare herself for the warmth of his cock in her mouth. She'd tasted plenty of Babette's precum at this point, but the warmth of her caged cock was never really transferred through the hard plastic. Mikey's hot cock now filled her mouth and eased toward the back of her throat. Michelle barely registered the fact he'd removed his hand from her head and was lightly stroking her back as she worked his cock with her mouth. Lifting her head, Michelle let it pop from her mouth before circling the head with her tongue and plunging downward again. Her left hand reached between his thighs, caressing and cradling his balls.\n\n\"All set Sir?\" Michelle heard the driver ask.\n\n\"Yes, go ahead!\" Mikey responded.\n\nMichelle suddenly realized they hadn't even pulled away from the curb yet and were still in front of the restaurant. It didn't matter, her world was now directly in front of her face. Whatever went on around her didn't matter, she had zero interest outside of worshiping his beautiful cock. Even when Mikey and the driver talked back and forth about Michelle's skills and enthusiasm, it didn't matter to her. Mikey slid his left hand further down her body, tugging the back of her dress up until his hand reached her bare ass causing Michelle to moan loudly.\n\n\"This is for making me wait.\" Mikey said as he playfully gave her butt a whack. The spank, while nothing compared to punishments she'd received from Ms. Allison, sent a bolt of lightning through Michelle's body. \"It seems someone enjoyed that, didn't you?\" Michelle went to lift her head to answer but his hand on the back of her head prevented it. \"Don't talk with your mouth full slut!\" Mikey teased while giving Michelle's butt another spank.\n\nMichelle suddenly found herself light headed with lust, she'd only read about women being in this particular situation and felt most of those stories were simply fantasy. How could they not be? Regardless, here she was in the back of a short version of a limo with a strange man's cock in her mouth while another watched and they both commented on her. Not just her oral abilities, which they both seemed pleased with, but her body and looks as well as how she reacted to being spanked. The word slut was getting thrown around like a badge of honor, and Michelle was striving to earn it. Mikey's finger now slid between her butt cheeks, causing Michelle's body to instinctively arch her back to bring her tight hole to his reach. This act elicited more comments from both Men.\n\n\"Looks like someone's ready to get fucked!\" The driver chuckled.\n\n\"I'd say she is!\" Mikey's pleasure was conveyed in his voice. \"What about it slut?\" He asked while still applying pressure to the back of her head. \"Are you ready for me to fill your pussy with my cock?\" Michelle groaned around his shaft wantonly. \"I'll take that as a yes!\" He laughed. \"Soon enough.\"\n\nMikey started to lift his hips, meeting Michelle's mouth with each downward thrust with his own upward one. Michelle struggled to focus on breathing whenever his cock wasn't blocking her airway, but it wasn't as easy now as it had been with a dildo. Then Michelle was able to control the pace, now he was controlling everything. His finger teased and rubbed her ass, further adding to her dilemma. She'd also never given a bj in this position so there was the additional feeling of her breasts hanging and bumping against the seat as she moved up and down. Michelle tensed her legs, feeling a ripple of pleasure rolling through her body. Just after, Mikey's cock swelled in her mouth, his hand clamping tightly on the back of her head as he lifted his ass shoving his cock as deeply as he could into her mouth.\n\n\"Ohhhhh!\" Mikey groaned loudly as the first fiery jets exploded from his body.\n\nMichelle could feel him oozing down her throat, almost like drinking coffee when it's too hot and you can feel it burning all the way down, but far more enjoyable. Mikey released her head enough so the next globs of salty goodness filled her mouth. Michelle felt her stomach flutter as she swallowed, while milking and coaxing more from him with her left hand. She couldn't describe the feeling, or need, but she desperately wanted to taste more of him!\n\n\"Such a greedy little slut!\" Mikey chuckled as Michelle continued to milk everything she could from his body. \"Don't worry,\" he said releasing her head, \"I'll make more.\"\n\nAs Michelle slowly sat up, she couldn't take her eyes off his now flaccid cock. Michelle physically felt disappointment as Mikey pulled up his pants and tucked his shirt back in. Looking up, she realized they were parked and the driver was again getting out of the car. With Mikey's clothing arranged as best they could be, he got out of the car, then turned to look for Michelle who slowly followed him. She suddenly felt like everyone knew exactly what they'd just done. His clothes were disheveled and her face was flush, hair was definitely a mess and her lipstick certainly a bit out of sorts. Anyone with half a brain would know she'd just sucked him off. There were a few people walking by, making Michelle feel incredibly self-conscious. It certainly didn't seem to bother Mikey as he took her hand in his arm leading her into the building. Michelle's heels felt like cannon shots each time she stepped on the marble floor.\n\n\"Good evening, Sir,\" the doorman said while eyeing up Michelle, \"and Ms.\"\n\n\"Good evening, George!\" Mikey replied with a grin.\n\nAgain, Michelle was convinced George knew why she was there as well as what she'd just done. Stepping into the elevator, Michelle was thrilled to be out of view of anyone, but only momentarily. The reflection in the elevator door did confirm her suspicion, her lipstick was a bit messed up as was her hair, she looked like a woman who'd just sucked a cock in the back of a car! Babette liked to refer to it as the \"freshly fucked look\" or FFL for short.\n\nMikey put his arm around Michelle's body, cupping and squeezing her breast through her thin dress as he stared at her in the reflection. His finger circled her rock-hard nipple as he pressed his crotch into her body again. Mikey's other hand moved down Michelle's side, over her hip then back up her leg to her ass, giving her a firm squeeze.\n\n\"You are quite stunning,\" he whispered in her ear, \"Allie must be very pleased with your progress.\"\n\n\"Thank you.\" Michelle moaned, quickly getting over the brief moment of shame and wanting more.\n\nAs the elevator door opened Mikey took Michelle by the wrist leading her quickly down the hall to his doorway. Stopping there momentarily, he quickly opened the door, coiling both arms behind her as he walked her through the door. The door was still closing when the spaghetti straps of Michelle's dress fell to her elbows leaving her bare from the waist up. Mikey swept Michelle's hair over her right shoulder with one hand while pushing her dress past her hips until it fell free of her body pooling around her feet. His mouth quickly made its way to her neck while his hands freely roamed her body, occasionally pausing to tug and roll her nipples. The feeling was wildly erotic for Michelle who pressed her body back into his. Suddenly, he spun her quickly to face him. He seemed even bigger now, even more in control, as she stood there in her lingerie and heels.\n\n\"Undress me.\" He commanded.\n\n\"Yes, Sir.\"\n\nMichelle felt an even greater level of helplessness as she stood there, with him holding her upper arms in his massive hands. Tentatively she moved her hands inside his jacket, letting her fingers touch his chiseled chest as she pushed it over his shoulders. Only then did he lower his arms, and release his grip on her, as the jacket slipped free. Michelle struggled slightly undoing his tie, but eventually unknotted it leaving it around his neck as she next tackled the buttons on his shirt. Mikey wore no undershirt, so each button revealed more of him to her. The anticipation was almost too much, but she wanted to take her time and enjoy the experience. Undoing the cuffs of his sleeves before untucking the shirt, Michelle's hands parted the front of the shirt, touching his chest. His pecs were large, his stomach flat, his shoulders broad and rounded with muscle. He was a specimen of masculinity in every sense and certainly the polar opposite to Michelle. His shirt soon joined his jacket on the floor.",
        "\"Shoes next.\" He instructed. Michelle slowly kissed her way down his chest and stomach, pausing momentarily at his crotch, feeling it stir as she nibbled at the front of his pants. \"You'll be screaming my name soon enough.\" Mikey said with a gleam in his eye.\n\nNow on both knees, Michelle untied his dress shoes, helping Mikey to step out of them before pulling off his socks as well. Michelle got up on her knees, undoing his belt. With each passing article of clothing her confidence grew. It had taken her several minutes to undo the buttons of his shirt because of how her fingers trembled, but his belt and zipper were no match for her. With his pants wide open, Michelle reached up to his sides pulling both his pants and boxer briefs down together and revealing his growing display of male perfection. Michelle lifted his shaft with one hand, slowly stroking it, while licking his smoothly shaved balls.\n\n\"You do enjoy that don't you?\" He smiled.\n\n\"Yes Sir!\" She replied before gliding her tongue up the underside of his shaft and tasting his precum again.\n\n\"Stand up.\" He ordered.\n\nMichelle complied immediately, then much to her surprise, found herself with her chest pressed against his, his hands enveloping her ass as he lifted her off the floor. Michelle threw her arms around his neck, lifting her legs and hooking them behind him, as her mouth and tongue searched for his. Mikey's kiss was as forceful as he was, he walked them somewhere, while his tongue plunged into her mouth and his fingers inched toward her waiting hole. Michelle gasped, yet pressed her body against his fingers as they teased her.\n\n\"Tell me what you want slut.\" Mikey hissed in her ear feeling her tremble at his words.\n\n\"I want you to fuck me!\" Michelle eagerly replied.\n\n\"Tell me more!\" His eyes burned into hers as he spoke.\n\n\"I want you to fuck my ass, and fill me with your cum!\" Michelle squeezed her legs tightly around him. \"I want you to ram your cock into me while I beg you for more!\"\n\n\"Such a filthy mouth.\" Mikey smiled triumphantly at her words. \"Unhook your legs and stand up.\"\n\nLowering her slowly, Mikey didn't move his hands until the last possible moment. As he'd done before, he spun her around until her back was to him. It was then Michelle realized he'd carried her into his bedroom. Feeling one of his hands on her back, Michelle gradually lowered her upper body to his bed, pushing her ass high in the air. She heard a drawer open and close, then felt his hands slowly pull down her thong. Michelle's entire body trembled as she was now laid out for him. Michelle's back arched as she felt thick fluid being poured between her cheeks. Over the past three months Michelle had been penetrated several times a day if not more. She'd used plugs of increasing size, been bent over Ms. Allison's desk a couple times a week and certainly ridden more than a few dildos at home. Her ass was more than ready for Mikey, as was her body, but nothing prepared her for the moment he finally penetrated her.\n\n\"Ohhhhhhhh God!\" Michelle groaned feeling Mikey's lubed shaft slide over her tight hole and between her cheeks.\n\nEach time he backed up, Mikey pressed the head of his cock against her ass then let the underside glide over it, like a violinist drawing his bow over the chords of his instrument. Michelle desperately tried to push back into him, to take him inside her, as he continued to tease. As she was about to whine about his teasing, Mikey pressed a slick finger against her ass, easily sliding his thick digit inside her causing her to moan loudly. Slowly finger fucking her, Michelle raised her body to meet each thrust, groaning even louder when he added a second lubed finger. Twisting and wiggling the fingers inside Michelle, Mikey gave her butt a firm swat, reveling in her response.\n\n\"Ooooohhhhhhh fuck me! Please!\" Michelle moaned sensually. \"I've been wanting your cock inside me since I saw you that day in the office!\"\n\nRetracting his fingers, Mikey smiled confidently as he pressed the head of his fat shaft against Michelle's ready hole. He felt her sink into the bed, her knees buckling as the head popped inside her, watching her arms reach far above her grabbing two fistfuls of the bedding. Watching her intently, anytime Michelle showed the slightest hint of adjusting to having him inside her Mikey pushed further inside her. His hot shaft slowly filling her tight ass, none of the toys had prepared her for the heat of him. It was indescribable.\n\n\"Oh my God!\" Michelle exclaimed as she felt his hips press firmly against her ass. \"so fucking big!\"\n\n\"And here I thought you'd been using a toy my size!\" Mikey teased while holding her tightly in place, not letting her escape his full length.\n\n\"But this is so different,\" Michelle mewled, \"it's so hot, and so big!\" Michelle flipped her hair to the left side of her head looking back at him. \"I want you to make me scream.\" She hissed then wondered where those words had come from.\n\nIn spite of what her brain was thinking, which wasn't much, her body wanted nothing more than carnal satisfaction. While her brain was scared at the idea of him grabbing a fistful of her hair, her body lifted a leg off the floor putting a knee on the bed to spread herself further for him. Her brain wanted safety; her body wanted anything but. When he backed up and slammed into her, Michelle's brain was quickly overruled. Mikey paused a few seconds between hard thrusts, he'd slowly back out then violently slam his entire body forward, then would wait again. As he continued to do this the time he paused between thrusts lessened more and more until he was continually pounding into Michelle with abandon.\n\n\"Ohhhhh fuccckkk me!!!!\" Michelle groaned loudly.\n\n\"You like that don't you slut?\"\n\n\"YESSSSSS!\" Michelle screamed.\n\nMikey paused for a moment, allowing Michelle the time to catch her breath. With his cock still inside her, Mikey moved Michelle's right leg, slowly spinning her onto her back while crossing her ankles and holding them tightly in his hands.\n\n\"I love watching tits bounce when I fuck!\" He lewdly smiled before starting to thrust into her again.\n\nIt was such an odd feeling, her large breasts moving up sharply with each hard thrust into her body. Michelle was still getting used to the fact these were a part of her now, and now they were moving inside her while he continued to assault her ass with his cock. They weren't just moving, they felt like they would fly out of her chest and hit her in the face. Her chest and ass began to ache as Mikey seemed no closer to cumming. The shuddering of her body quickly negated Michelle's discomfort.\n\n\"OHHHHHHHHH FUCK!\" She bellowed staring Mikey in the eyes as a triumphant look overcame his face.\n\n\"I guess I won't have to ask if it was good for you too after that huh?\" He said holding his cock inside her.\n\n\"No.\" Michelle breathlessly answered looking down at the pool of cum on her stomach. \"I guess not.\"\n\n\"Better clean that up before I roll you over again,\" his attitude was cocky bordering on arrogant, \"I don't want you getting my bedding messy.\"\n\nMichelle quickly wiped her fingers through the pool, bringing it to her mouth to clean off one hand at a time until she was finished. Her body was now covered with a light sheen of perspiration, Mikey and her cum coated her tongue, and while her ass was sore, she wanted nothing more than to feel him explode again. This time, deep inside her ass. The idea made her tremble with excitement. Mikey moved her still crossed legs to the side, rolling Michelle onto her stomach and lowering his body onto hers. She flipped her hair to one side, looking over her shoulder at him.\n\n\"Mmmmm fuck me and cum inside me!\" She cooed. \"I want you to fill me up!\"\n\nMikey slowly pushed inside Michelle again, this time keeping the head of his cock closer to her sore canal.\n\n\"Tell me how much you want it!\" He hissed as he pinned her body to the bed with his sheer size.\n\n\"I want to feel you explode inside me,\" Michelle moaned softly, rising her ass to meet him as best she could, \"to fill my ass with your cum and make me truly feel like a girl!\" Michelle could hear his grunting becoming more desperate. \"That's it, fuck me!\" She continued. \"Fuck my tight ass!\"\n\n\"Such a horny slut!\" Mikey grunted, rising his body off hers and plunging long and deep into her again and again. \"Beg me slut!\" He said gripping her hips tight. \"Beg me good or I'll just shoot it all over your back and ass!\"\n\n\"Oh pleassseee!\" Michelle bucked, raising her hips to meet him with each thrust. \"PLEASE cum inside me! I NEED to feel it! Need to feel YOU unloading inside me!\" Her voice was full of honest desperation. \"Please I need your cum in me!\"\n\nMichelle had not been ready for the feeling of his cum shooting down her throat or filling her mouth. The power, the saltiness, and the heat were all different than anything she'd experienced before. It felt wonderful, better than she ever could have imagined, it even felt empowering because she had been the one to make him cum. She wanted to feel that again! Pinned to his bed, his cock ramming into her, his fingers digging into her hips, his masculine body so diametrically opposed to her feminine appearance, yet she would be the one to make HIM cum!\n\n\"Ohhhhhhh yeeeesssss!\" Michelle groaned feeling his cock swell.\n\n\"All yours slut!\" Mikey grunted, thrusting deep inside her again.\n\nMichelle's legs twitched uncontrollably, her eyes and mouth wide open as the first steaming hot jet of man lava burst inside her. She couldn't speak, couldn't form a coherent word as she felt his cum fill every small space inside her colon that wasn't already filled by his cock. Michelle desperately tried to tighten her sore sphincter around him, when he backed out and thrust in again, she could feel him seeping out of her. She felt every bit the slut he'd called her as she tried desperately to will more space for his seed. Michelle lifted her right foot, trying to press her heel against his back to keep him inside her for as long as she could.\n\n\"Still horny?\" He chuckled grasping her foot with one hand while slipping the other around the base of his slowly softening cock.\n\n\"No,\" Michelle finally mustered enough energy to respond, \"I'm just trying to get all of that hot cum inside me before you pull out completely.\"\n\n\"I'll do the best I can.\" Mikey released her foot, milking his cock into Michelle's sore ass with his free hand. \"I'd hate to disappoint.\"\n\nMichelle crossed her legs, trying to squeeze her thighs and will her stretched ass closed again. She could still feel him slowly oozing from her sore hole but didn't possess the energy to do more. Mikey moved to her side, briefly sitting then collapsing onto the bed. Like her, he was covered in perspiration and still breathing heavy.\n\n\"I hope I did okay.\" Michelle said weakly.\n\n\"Oh, you did better than okay sweetie.\" Mikey chuckled giving Michelle's butt a tired swat. \"I'd say you're ready to start dating.\"\n\nMichelle felt quite proud of herself, yet something in the back of her mind questioned that feeling. Here she was, still in her stockings and heels, her hair longer, her nails far longer than a guys should be, breasts. She had breasts! And she'd not only just sucked off a guy she didn't even know but then begged and pleaded with him to fuck her ass and cum inside her! A small part of her brain asked her what the fuck was wrong with her? Michelle shook her head, trying to suppress the thought. It was an internal battle for another day.\n\n\"In the bathroom, on the vanity,\" Mikey's voice was tired and slightly strained, \"there's a wash cloth.\" Michelle nodded. \"Run it under the hot water for a minute,\" he continued as he looked up at the ceiling and closed his eyes, \"then ring it out, and come back here and clean me up.\"\n\n\"Yes, Sir.\" Michelle tiredly replied, forcing herself to stand.\n\nHer left ankle tweaked outward as she stood, almost causing her to fall. Michelle steadied herself on the bed, taking a few tentative steps forward until she could stand. As she gained some strength, she placed her left hand behind herself, pressing it against her ass to try to keep from leaking any more than she already had. She could feel his cum and what remained of the lube seeping down her legs to her stocking tops. Michelle found the face cloth, turning on the sink, then slowly looking at her reflection in the mirror. With the vanity hiding her caged appendage, Michelle looked every bit the well fucked woman she felt like.\n\n\"You are quite a sight, aren't you?\" She asked reflection.\n\nMichelle ignored her reflection, putting the face clothing under the steaming stream of water fully saturating it. Shutting off the water, Michelle rang it out before slowly walking back to the bed where Mikey lay.\n\n\"Start just below my balls and work your way up.\" Mikey instructed with his eyes still closed.\n\n\"Yes, Sir.\" Michelle dutifully replied positioning herself between his spread legs.\n\nAs she leaned forward, placing the warm cloth on his upper thighs, Michelle could still feel him seeping down her legs. Her stocking tops were now soaked halfway down her thighs, the soreness in her ass was still there but she at least felt like her sphincter had returned to normal. Michelle gently lifted Mikey's now empty balls, wiping slowly underneath before setting them back down. She slowly wiped over and around his cock before lifting it as well. It was now almost as small as her caged member, although that could change. The thought of giving his cock a quick kiss passed through Michelle's mind, but truth be told she was still struggling with the small voice in her head.\n\n\"Very nice, thank you.\" Mikey said finally looking up at Michelle.\n\n\"Thank you.\" Michelle blushed as she'd gotten caught staring at his cock and licking her lips. \"I'll go put this in the hamper.\"\n\n\"Feel free to clean up as well,\" Mikey called after her, \"I wouldn't want you sticking to the seat in the car.\"\n\nMichelle blushed even deeper, as she did, she used the face cloth to first clean up her lower abdomen out of his view as she walked to the bathroom. There, she wiped her thighs and finally ass enjoying the warmth of the face cloth against her sore and swollen hole. Deciding to relieve herself before she returned, Michelle did so, again the voice in her head questioned how she'd gotten to this point. The voice, however small, was still mostly being overruled by the rest of her. She felt oddly empowered and proud of herself, she'd gone all the way with Big Mikey and made him cum twice!\n\n\"If that's not a high level of commitment, I don't know what is!\" She said as she slowly stood and flushed.\n\nWhen she returned to the bedroom Mikey was now standing, with her thong dangling from his right index finger. Michelle blushed, taking the lace garment from him and carefully stepping into them. Still nude, Mikey led Michelle to the living room to retrieve her dress.\n\n\"I had a lot of fun tonight.\" Mikey said as Michelle stepped into her dress.\n\n\"I did too, thank you.\" Michelle replied, 98% of her mind meaning what she'd said.\n\n\"Dennis is the driver, he'll be waiting for you out front.\" Mikey said as he led Michelle to his door. \"If you decide to tip him, that's up to you.\"\n\n\"Hmmm, I don't think I have any small bills,\" Michelle said looking in her purse, \"can you break a $20?\"\n\n\"It's cute that you think he'd want cash.\" Mikey replied, leaning forward and grabbing Michelle's ass with his right hand before kissing her. Their tongues met briefly, Michelle feeling her caged member stirring at his kiss and touch. \"Just tell him you'd like to thank him for driving you home,\" Mikey instructed as their kiss broke, \"he'll let you know how.\"\n\n\"I don't think my ass could take that right now.\" Michelle replied feeling her cheeks burning red.\n\n\"No need to worry about that,\" Mikey replied, \"he doesn't consider blow jobs cheating on his wife.\" Finally releasing his grip on Michelle's ass, Mikey opened the door before saying, \"He also gives Allie a review on how he thinks you did as well though.\"\n\nThe elevator ride downstairs seemed much longer than the ride up, particularly with the voice in Michelle's head getting louder. Michelle did what she could to fix her makeup and hair in the elevator, but she knew she was doing the walk of shame as she stepped out of the elevator. In spite of cleaning herself she could still feel Mikey inside her, not just his cum but how his cock had tried to rearrange her innards as he fucked her. Michelle's hair was better but still a mess, definitely fitting Babette's crudely named FFL. The doorman gave Michelle a knowing smile, but even worse was the smile from Dennis. He not only knew, he witnessed Michelle giving her first real blow job as he drove.\n\n\"Did you have fun Miss?\" He asked as he opened the door.\n\n\"Yes, thank you Dennis.\" Michelle answered gingerly slipping into the backseat.\n\nLooking up, Michelle noticed Dennis looking over her legs and breasts ravenously before closing the door. As he passed by the driver's side Dennis adjusted his crotch before getting in. Michelle felt a sudden rush, she'd gotten him turned on just like that. It may have helped that her skirt had ridden up considerably as she sat, but that was beside the point. Pushing the voice in the back of her head back down where it belonged, Michelle sat back watching the city lights as Dennis drove.\n\n\"Dennis?\" Michelle called out somewhat surprising herself.\n\n\"Yes, Miss?\" He asked politely.\n\n\"I would really like to thank you for driving tonight.\" Michelle coyly stated looking into his eyes in the rearview mirror.\n\n\"Who am I to turn down such a beautiful woman?\" Dennis' eyes lit up as he responded. \"Just a quick detour,\" he said obviously making another adjustment, \"and we will get right to it.\"\n\nMichelle squeezed her legs, rubbing them together, feeling the anticipation of what was about to happen. Dennis pulled over, into a relatively vacant parking lot, positioning the car on the far end with the passenger side next to a brick building. No sooner had the car stopped than Dennis had shut it off and burst from the driver's seat. He opened the door on the passenger side, leaning down to take another long look at Michelle.\n\n\"If you wouldn't mind my dear,\" he softly asked as if suddenly becoming shy, \"I would love to see those perfect looking breasts of yours.\"\n\n\"I'm glad you think so highly of them.\" Michelle's voice became sultry as she slid the spaghetti straps off her shoulders. \"No one will see us here, will they?\"\n\n\"No Miss,\" Dennis replied as he undid his fly, \"we're good, but a little creativity will be needed.\" Michelle watched his cock spring free of his pants, he was thankfully not as large as Mikey but was still a decent size. \"If you lay on your back and hang your head over the edge of the seat, we'll be good,\" he said using his hand on her shoulder to guide her into place, \"it'll just look like I'm taking care of a bit of business back here.\"\n\nMichelle did as he directed, finding soon that she was throat to cock with him. The alignment of her body and head made taking the length of his shaft into her throat even easier. Bringing her hands to her chest, Michelle massaged her breasts and teased her nipples much to Dennis' delight as he slowly fucked her mouth. Dennis would occasionally pull his cock out of Michelle's mouth, rubbing it around her lips while she lavished it with her tongue. It was so different doing this upside down, Michelle was savoring the experience and the little voice was nowhere to be heard now.\n\n\"You're so fucking sexy Miss!\" Dennis growled as he started to speed up. \"I've needed this since you got in the car!\"\n\nMichelle again had time her breathing, inhaling between one thrust and exhaling after the next while Dennis fucked her face, his balls banging against her nose. Sucking and slithering her tongue along the top of his shaft, she could feel him swelling in her mouth. Michelle moaned, her throat vibrating around Dennis' cock sending him quickly over the edge.",
        "\"Oh Jesus!\" He grunted. \"That's it, I'm cumming!\"\n\nDennis thrust into Michelle's mouth, sending ropes of hot seed deep into her throat, then pulled out, thrusting his body forward until his balls were on Michelle's chin. She felt another thick glob land on her chest as he quickly stroked himself. Before she could say anything, Dennis reared back shooting another rope into her mouth but splashing some on her bottom lip and chin before ramming his cock back in her throat. He thrust five or six more times before squeezing and massaging whatever was left in his cock into her mouth.\n\n\"I'm sorry Miss,\" Dennis panted, \"after I saw those jiggling breasts when you walked to the car, I knew I had to cum on them.\"\n\nHe reached for her chest with one hand, gliding his thumb through the spurt that had landed there. Instead of bringing it to her mouth as Michelle had expected, Dennis massaged his cum into her breasts, the fluid becoming tight as it dried on her skin. Standing over her again, Dennis wiped his cock over the cum there, smearing most of it but redepositing his cock into her mouth for her to clean up.\n\n\"Thank you so very much Miss.\" Dennis smiled warmly as he pulled his cock from her mouth and zipped up his pants. \"Go on and sit up now and I'll get you home,\" he said, \"you may want to leave the dress down until that dries fully, it would be a shame to make a mess of it.\"\n\nMichelle was positive his suggestion had more to do with keeping her topless as long as possible rather than the condition of her dress. As it was, she knew the dress was destined for the dry cleaners simply based on the cum still slowly seeping from her ass, but she humored him leaving the dress around her waist until she was within sight of her building. Her walk of shame was even worse now, with the added feeling of dried cum on her chest and chin. The doorman of her building smiled warmly; it didn't take a lot of thought to figure out how she'd spent her night. He nodded his head and smiled as she got on the elevator. Finally, within the safety of the elevator she could see how bad her hair had looked when she'd walked past the overnight door man. Surely, he'd seen Babette stroll in with the FFL as well so he was used to it.\n\n\"Well, someone had a fun night!\" Babette called out as Michelle entered their condo.\n\n\"You could certainly say that,\" Michelle was relieved Babette was home, she was the only one she could confide in about her night, \"how was your date?\"\n\n\"It was a lot of fun!\" Babette replied. \"Did Dennis enjoy his thanks and cum on your jiggling breasts?\"\n\n\"Oh, you too huh?\" Michelle blushed.\n\n\"A girl's gotta do what a girl's gotta do!\" Babette said slowly getting off the couch and walking over to Michelle. \"I'm proud of you,\" Babette said surrounding Michelle in a warm embrace, \"and I'm sure Ms. Allison will be as well!\" Michelle leaned in to kiss Babette only to teasingly be pushed away. \"Oh, I know who's been in that mouth, you're gonna need to brush first!\"\n\n\"Bitch!\" Michelle giggled before pulling Babette forcefully to her, kissing her friend deeply.\n\n\"I do try!\" Babette giggled as their kiss broke. \"I'm pretty sure I can taste both of them too!\"\n\n\"I know I still can!\" Michelle responded.\n\n\"Go shower,\" Babette said as she released her friend from her hug, \"you'll feel better.\" Michelle kissed the back of Babette's hand as she started to walk to the bathroom. \"I left a weighted plug in there too,\" Babette gave Michelle a wink, \"it'll help.\"\n\n\"Oh, I know!\" Michelle replied with a roll of the eyes. \"The things I shove up my ass for this job!\"\n\nFor the second time Michelle found herself looking at her reflection in the mirror, with the voice in the back of her head returning. Her hair was a disaster, she could make out the reflection of the dried cum on her chin and breasts, and could obviously still taste both men on her tongue. Shaking her head, trying to suppress whatever feeling that little voice was trying to pull out of her, Michelle turned on the shower and started to undress. Was it guilt? Shame? Regret? Or a combination of the three? Sliding her still damp stockings down her legs, Michelle did her best to ignore the voice. She'd been warned about it by Ms. Allison as well as Babette. The \"drop\" that occurs afterward. According to Babette it would lessen over time, but the first bouts with it were the worst. Letting her dress drop to the floor, Michelle slipped out of her saturated bottoms and stepped into the shower.\n\nMichelle had to admit, there was something strangely erotic about showering now. It wasn't just the amazing shower in Babette's condo, which would soon be her amazing shower, but she still felt like she was washing someone else's body. Her tummy was toned and flat, her legs soft and smooth, her butt, well in short, was deliciously rounded and not the typical flat man ass. Then there were her breasts. She was still adjusting to having full, luscious breasts, they were very much a part of her but it had still not quite clicked in her mind. Although, tonight feeling them bounce while Mikey had his way with her, they felt much more a part of her. The thought sent a chill through her body.\n\n\"Okay, that's enough cleaning for you two.\" She giggled to herself.\n\nEven washing and conditioning her long hair felt foreign. Her hair had been longer than most men, but haircuts were expensive and Michael was broke. Monday after work Michelle had an appointment with a stylist, Michael never could have afforded a stylist, to get her hair washed, cut and colored. It was all part of the adventure that was her employment. Stepping out of the shower, Michelle went through her usual skin care routine before following Babette's suggestion and inserting the weighted plug. She felt her sphincter immediately tighten as the plug got into place. Wrapping a towel around her body, Michelle walked into the bedroom. She selected a snug peach nightgown with crisscross lace from her breasts to her hips and a generous slit up her left leg.\n\n\"I do love that color on you,\" Babette said as she walked into the bedroom, \"how are you feeling? Any drop?\"\n\n\"A bit,\" Michelle replied, \"but I think I'm managing it okay.\"\n\n\"Tomorrow we'll head to the mall and do some shopping,\" Babette said as she walked up to Michelle and gave her a hug, \"shopping always helps me!\"\n\n\"That sounds like a plan,\" Michelle answered, leaning into her friend as they embraced, \"I'm going to need a dress for my outing.\"\n\n\"Yes, you are!\" Babette smiled warmly. \"A sexy red cocktail dress to show off your rockin' body!\" Babette's hand deftly slid upward, cupping Michelle's right breast. \"And the twins here!\"\n\n\"You're such a perv!\"\n\n\"That's just one of the reasons you love me so much!\" Babette replied proudly. \"Let's get some sleep.\"\n\nSlowly leaving each other's arms, Michelle and Babette climbed into bed, where Michelle tucked herself under Babette's arm laying her head on Babette's shoulder. With her body pressed into her friend's, Michelle felt content, the voice had disappeared again, hopefully for a few days this time. Drifting off to sleep, Michelle couldn't help but think about her night and how amazing it had felt to have her first real cock inside her. Even as she enjoyed her last moments of wakefulness, Michelle could still feel Mikey's seed inside her while she listened to Babette's heart beat in her ear and felt Babette's fingers glide through her hair.\n\n\"Thank you.\" Michelle whispered sleepily.\n\n\"For what Sweetie?\"\n\n\"Loving me.\" Michelle replied hugging Babette tighter.\n\n\"Of course!\" Babette replied warmly while wiggling her body even closer to Michelle's.\n\nBoth girls drifted off to sleep, content in each other's arms."
    ],
    "authorname": "Ms_Allison",
    "tags": [
        "men in heels",
        "femdom",
        "female domination",
        "sissy slut",
        "men in lingerie",
        "forced feminization",
        "forced fem",
        "cross dressing",
        "crossdresser"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-agency-ch-15"
}