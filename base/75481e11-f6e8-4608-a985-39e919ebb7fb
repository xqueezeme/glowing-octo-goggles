{
    "title": "Rear Window Homage",
    "pages": [
        "Rear Window is a 1954 film directed by Alfred Hitchcock and starring James Stewart and Grace Kelly. This fictional story is inspired by some of the characters and events of the film. It is in no way connected to the film and any resemblance is purely coincidental. \n\nFor a while I wished I could go back and start that day again. It had all begun so well. The forecast was for a beautiful summer's day; clear blue skies and wall to wall sunshine. I hadn't taken the Norton out for a long time and this seemed the perfect opportunity. I pulled on my leathers feeling them a little tighter than the last time I wore them. It reminded me that I also needed to get back to the gym. I had been working away for the past six months and had been so busy that I had let my training regime go. \n\nI adjusted my helmet and wheeled the bike out of the garage. It had been serviced by my regular mechanic just before I went away so I hoped that it would fire up. Yes, that's good, I thought, as the familiar roar came from the engine. I didn't have any real plan as to where I was going. I had always enjoyed just getting on the bike and letting a journey unfold in front of me. Free styling it like that had taken me to some wonderful places I would never have thought of otherwise. \n\nSo, I slowly rode through South London and onto the motorway just to open her up a bit. I wouldn't stay on the motorway for long as it's just so boring riding such a magnificent bike in a straight line. Give me England's winding A or even B roads any day of the week. I was planning to take a month off after this last contract so the ride today would be the beginning of my holiday.\n\nI turned off soon enough onto a two lane A road and just let the machine do its thing. It was a perfectly balanced and powerful beast and I think I'm a good rider when I'm in the groove. Bike and man were at one with each other that day, until 'it' happened. \n\n'It' happened when I had just come round a blind corner and found a small Ford overtaking a lorry coming straight at me. The last thing I remembered was the terrified look on the faces of the young lads in the Ford. \n\nI woke up in hospital the next day with a broken collarbone, two broken ribs, a compound fracture of the right leg and a badly ruptured Achilles. I couldn't remember what had happened but they told me I was very lucky. I lost control of the bike as I tried to avoid the car and slid off the road into a thicket of bushes. The Ford and the lorry didn't stop. Thankfully, a motorist following me did stop, called 999 and the air ambulance got there pretty quickly. \n\nIt could have been much worse. \n\nStill, it was bad enough. I was going to be laid up for a while. I had just moved into a newly converted flat up on the top floor of an old four storey Victorian building in London. It had been an old workhouse with buildings built surrounding a central courtyard. It was a perfect flat for my bachelor lifestyle; two double bedrooms, new kitchen, big lounge and a wet room. The big feature was floor to ceiling windows in the living room which looked out over a shared landscaped courtyard. Perfect, aside from the fact there was no lift.\n\nI was discharged from hospital a week after surgery; they needed the bed space apparently. I had a surgical boot for the Achilles rupture, a plaster cast for the fracture and an arm sling for the collarbone. All in all, a class one screw up.\n\nAfter some wrangling between my solicitors, my company and the health insurers, it was agreed that I could get a live in carer and physiotherapist for the two months recuperation I would need. The insurance was trying to claim the accident had been my fault but the witness statement together with the police report finally absolved me of all blame.\n\nMy parents had emigrated to Australia about five years previously so there was going to be no help from them. Mum did offer to fly back over, but Dad hadn't been well recently so I told her that she should stay out there to look after him. \n\nMy sister, Mandy, a research biologist was halfway up the Wazoo, or some such river in the Amazon, so no help there either. I didn't have a girlfriend to call on as I had discovered my last one cheating on me with her personal trainer. There was an old girlfriend who had offered to pop in to keep me company from time to time but that was as far as it went.\n\nThere were mates, of course, but they were worse than useless when it came to providing help. So, it was going to be me and my live in carer stroke cook stroke physio for the next couple of months. The hospital sent me home in an ambulance and the paramedics, bless them, managed to carry me up the stairs on one of those chair thingys they have for such occasions. I had been given a wheelchair, and a commode chair, God forbid \n\nMy carer was due to arrive at lunchtime and precisely at 1200 there was a call on the intercom. I buzzed him in and several minutes later there was a knock on the door and I managed painfully to wheel myself to the door and open it. Standing outside was a weedy looking guy with his hair in a pony tail and a couple of large suitcases. \n\n'Hi, I'm Paul, I'm your live in.' \n\n'Oh. Right, I'm Jeff, pleased to meet you.' \n\nWe shook hands and I guess I was a bit underwhelmed by him. He looked a bit puny for the task of hauling me around for the next few weeks. Although I had already seen in hospital how much a tiny Filipino nurse could lift with the right technique. He had just hauled two heavy suitcases up four flights of stairs and he didn't seem out of breath, so I guess that boded well.\n\nPaul immediately took the handles of the wheelchair and pushed me back into the flat before retrieving his suitcases.\n\n'That's a lot to bring, isn't it?' I said.\n\n'Just a few things for the next couple of months,' he replied, 'it saves me having to go back for stuff.'\n\nFair enough, I thought. I showed him the spare bedroom which was only just smaller than mine. I had commissioned an interior designer mate of mine to decorate and furnish the flat before I moved in, so Paul's room had never been used and he could just move his stuff straight in.\n\n'What a lovely flat,' Paul said as he came back out of his room. 'Did you do the design?'\n\n'God, no,' I said. 'If it had been left to me I would have gone straight to Ikea and bought everything there.'\n\nPaul smiled and said, 'Well, whoever did it has very nice taste.'\n\nI looked around at the flat in a new light, and I guess it did look pretty nice. It was a conversion and my friend had left as many original features as possible but had brought the entire flat up to date with modern furniture mixed in with a few older pieces I had inherited when my parents moved to Australia.\n\n'OK,' said Paul, 'let's get the schedule organised shall we?'\n\nPaul turned out to be very efficient and it was obvious he had done this kind of work before. Before long we had a working schedule laid out for meals and physio sessions, which would be twice a day to begin with. \n\nI could just about move around in the wheelchair but I would need help with showering and the toilet at least for a while. This was the part I wasn't looking forward to but I thought I would just have to grin and bear it. \n\n'OK, what do you normally do for lunch?' Paul asked.\n\n'Pie and a pint at the pub, normally,' I said grumpily.\n\nHe laughed and said, 'Well, that might have to wait for a bit but let's see what we can rustle up.'\n\nMy old girlfriend, Lisa, had ordered a whole load of groceries from an online grocery service and had been at the flat the previous day to receive the delivery, and to pay the guy a big tip for dragging it all up the stairs to the flat. She is pretty good looking, though, so she often had men eating out of her hand, me included while we were dating.\n\n'Is a croque monsieur and some soup OK?' Paul called out from the kitchen.\n\n'Sure, sounds good,' I called back.\n\nPaul brought it through on a tray complete with a bottle of lager. God bless Lisa, she had gotten her priorities right. I pushed myself over the window so I could at least look at something while I ate and took the tray onto my lap. Paul had made himself a small salad and sat at the table to eat.\n\n'At least you have something to look at,' Paul said, nodding at the windows.\n\n'Yea, better than daytime television I guess.' I said a bit sulkily, realising this was probably going to be my world for the next few weeks.\n\nWe finished lunch, Paul cleared away and we started on our first physio session. I wheeled myself into the bedroom, and Paul helped lift me out of the chair onto the bed. He managed that with ease and I began to realise his smallish stature belied his real strength. I was wearing a very old and loose t-shirt and sweat pants as they were the only things I could manage at the moment. Paul carefully removed the t-shirt and then the sweat pants. His hands were very soft I noticed and very well manicured. I even thought his nails had some clear varnish on them. \n\nFrom the first moment he laid hands on me I could tell how good a masseur he was. His hands were strong and gentle. He was working some kind of magic on me as he carefully went through a whole set of exercises that the hospital had devised for me. I have to admit I felt so much better after the session. \n\n'Where did you train, Paul? You have wonderful hands' I said.\n\n'I trained as a physio here in London for three years after school, and then went travelling, got to Bangkok, learnt their massage techniques, ran out of money and worked as a masseur there for a while until I came back to London.'\n\nI wondered about him working as a masseur in Bangkok and what that might have entailed. Paul chatted away about his time travelling and how much he had enjoyed Bangkok. That was a city I had always wanted to get to but had never got round to visiting. He was easy to talk to; probably I realised because he was a good listener, a skill that must have come in very useful in this job.\n\nHe got me back into my t-shirt and sweat pants and wheeled me back into the living room. I had my Apple laptop on the desk in front of the window so I could do some work from home. It also gave me the chance to look at what was going on outside the window. The windows were floor to ceiling and I could see most of the courtyard and a lot of the three other blocks. It was a mixed development with some shops on the ground floor, artisan stuff mostly, bread, cheese, wine shop and the ubiquitous coffee shop in one corner. The first floor was let out as office space and the top two floors as apartments. The planning authorities had specified to the developers that they couldn't install elevators as it was a listed building so, it became literally a walk up. \n\nPaul had made some tea and we sat looking out and I explained the history of the place. I told him that families were split up once they came into the workhouse and the only times they could get together was at exercise time in the central courtyard before having to go back to their segregated buildings.\n\n'Those poor people,' Paul said, 'we can be so intolerant. I know all this has changed,' and swept his arm across the view outside, 'but we still don't accept people for what they are.'\n\nHe said this softly but with such passion I had to turn and look at him. He blinked once or twice, turned away and said he would leave me alone for the afternoon.\n\nIn addition to being a wonderful masseur, Paul turned out to be a very capable cook. Lisa was coming by this evening as a kind of one woman house warming. I asked Paul if he could cook for three tonight and he said it would be no problem.\n\nLisa barged in about 6 o'clock and having kissed me on the cheek and made a lot of noise about how she had warned me so many times about that bloody motorbike and that I never listened to her and when was I going to find a woman and settle down because the clock was running and I wasn't getting any younger and yes I was very handsome but there is no time like the present... \n\nShe could as usual have gone on like that all night if she hadn't noticed Paul standing quietly at the kitchen door. I called him over and introduced them to each other.\n\n'Paul, this extraordinary force of nature and well known windbag is Lisa, an ex of mine who is now happily married with three lovely bambinos, and Lisa, this is Paul my carer. Actually, no I can't call you that. I know, he's my new BFF.' \n\nPaul laughed and shook hands with Lisa and said, 'Pleased to meet you Lisa,'\n\nLisa said, 'Likewise, Paul, and don't take any crap from this man, he's impossible, I should know.'\n\nPaul smiled, a big natural smile that lit up his face and said, 'Oh, he's just perfect I think. If you would excuse me I have to go check on dinner.'\n\nAs Paul walked off to the kitchen Lisa watched him go and then turned to me, pulled a face and said, 'EEEuuuww that put me down didn't it.'\n\n'Stop it,' I said, 'he's just doing his job,'\n\n'Mmmm, well I have to tell you he is very pretty. He also pings my gaydar you know.'\n\n'What? Don't be daft Lisa.'\n\n'Daft? You know I'm just a big fag hag don't you.'\n\n'Bugger off and get us a drink, will you?'\n\n'Poor choice of words my sweet.' she moved off to get me a scotch and herself a gin and tonic. She stuck her head through the kitchen door and asked Paul if he wanted anything. He asked for some sparkling water and Lisa sorted us all out with drinks. Lisa and I had been an item for about a year and I never really knew why, but we just drifted apart and one day we realised it would be better if we went our separate ways. \n\nStrangely enough we became good friends and even when she married her Italian banker we had kept in close touch. She had been and still was a stunning looking woman and I sometimes regretted not trying harder back then. She is also great company and soon had me laughing with some of her very dirty jokes.\n\nPaul had made a beautiful spaghetti alle vongole with a salad and a homemade tiramisu for dessert. The three of us sat up at the dining table after closing the blinds to the outside. Paul lit and placed candles in my grandmother's silver candlesticks which I forgotten about and they really helped to create a wonderful ambience around the table.\n\nThe food Paul had made was delicious and time passed quickly. Lisa would as usual hardly shut up and I watched Paul as he listened to one of Lisa's monologues with rapt attention. In fact, he looked as if he might be falling for her. \n\nLisa looked at her watch and announced she had to go because Paolo, her Italian husband, was babysitting tonight and he was so untrustworthy with the children.\n\n'Lisa, that's scandalous, Paolo is a wonderful father and you know it.' He was too, totally devoted to Lisa and their children.\n\n'Hmmph,' was all she said as she stood up. Paul went to fetch her coat and Lisa hissed to me, 'when you're finished with him, can I have him please? He'll make someone a perfect wife.'\n\nI threw my napkin at her as Paul arrived with her coat. 'Paul, thank you for tonight, you are delightful, if you'll allow me to say so, and you two make a lovely couple.'\n\nI laughed but caught sight of Paul who was blushing furiously.\n\nLisa left after kissing both of us goodbye and it was like a summer storm had come and gone. Paul cleared up the dishes, made coffee and we sat and chatted a little.\n\nPaul said, 'I really like your friend Lisa, she's so much fun. She reminds me of Grace Kelly, you know before she got married to Prince whatshisface.'\n\n'What?' I said, spluttering on my coffee. 'She is lovely, but Grace Kelly, I can't see it.'\n\nThere was a sparkle in Paul's eye and I thought that Lisa had made one more conquest. One last task remained to be achieved this evening. Paul pushed me through to the wet room and helped me onto the toilet in the corner. I was damned if I was going to use their bloody commode. We managed to do this without too many dramas and Paul diplomatically left the room as I did what I had to. \n\nI called him back in and he got back in the chair and off to the bedroom. I have always slept naked, except in hospital where I had to wear one of their horrible gowns. Paul got me onto the bed and helped me off with my t-shirt and pants. I thought it would be more embarrassing to have a man do this but with Paul there was a strength and gentleness that was reassuring and unthreatening.\n\n'Goodnight Paul and thank you.'\n\nYou're welcome Jeff, and don't forget to use the monitor if you need me.' He had brought with him a baby monitor so I could call for help if I needed it.\n\nI was glad to be back in my own bed and partly because of that, and maybe the wine and Scotch I had consumed, I slept well and woke refreshed and ready for the day. Paul was already up and I could smell coffee brewing in the kitchen. I am not human before I have had a couple of cups of coffee in the morning, so this was very welcome. Paul knocked on the door and brought me in a mug of black coffee, putting in on the side table. He had changed into what i assumed was his professional working outfit of white trousers and a loose tunic.\n\n'Is black how you like it?'\n\n'Perfect, Paul, thanks. What's on the schedule today?'\n\n'I suggest you finish your coffee and then we should get you cleaned up before physio?'\n\n'OK, but I have to confess this is the bit that I'm not looking forward to.'\n\nI was not allowed to shower myself so a wash was all I was allowed for a while. \n\nPaul said gently, 'I understand, but I have done this many times and it will be quick and I will try not to be embarrassed.' He said this with a straight face.\n\n'No, I mean I will be emb...' I saw him laughing and I grinned sheepishly, but it had broken the tension. \n\nWe got me into my towelling robe and made the short wheelchair ride to the wet room. With Paul's help, I managed to sit on a stool and after getting rid of the robe Paul proceeded to wash me with a professional efficiency. The problem was that being washed by someone else is for me a very sensuous experience. I had once been entertained by a Japanese client to a so called geisha bath and had been bathed by a beautiful Japanese girl. That was undoubtedly one of the most erotic experiences I have ever had. \n\nPaul was very gentle and the combination of his soft hands and the warm water called up memories of Japan and my cock decided to remember it too. It began to get erect and there was no way I could really hide it. I was beetroot red but Paul didn't seem to notice. It was while he was drying my back that I asked him, 'Do you mind doing this, Paul?'\n\nHe paused and then said, 'It's part of the job really, and sometimes with clients it's not a nice experience but with some clients it can be enjoyable.'\n\nI was watching his face in the mirror as he spoke and I could see faint pink spots on his cheeks as he continued to towel me dry. I also noticed he had a small diamond stud in each ear. I tried to remember if I had noticed that last night but I couldn't recall seeing them.\n\n'I hope you don't mind, Jeff, but I have put my wash gear on the shelf in here, if you wish I can keep them in my room?'\n\n'No, that's fine, Paul. Please consider this your home while you're here.' \n\n'Jeff, thank you, that's very sweet of you.'\n\nWe fell into an easy routine, Paul would make breakfast then take me for a wash, it still gave me an erection, but he didn't seem to pay attention to it. We then had a physio session, coffee and then I spent time on the laptop or staring out the window. Lunch was followed by another physio session, tea, then work or a 'staring out the window' break, and then dinner. Paul was a great cook and twice cooked me a Thai meal which was fabulous. He was also good company and he would sit with me and chat about his life and what he enjoyed doing. He was an amateur actor in his spare time and had dreamt of turning professional but the chance had never really come along. One morning I was looking out through the window and he asked me what I watched. ",
        "'It's a bit like a human zoo out there, I guess. Look down there, for example.' I pointed to an office on the first floor. A man was just pulling the blinds and a girl was standing just behind him. 'I think they are having an affair as every day, they come into this room, he closes the blinds and half an hour later he opens them again, and she is trying to straighten her dress.'\n\n'Or that flat over there, a singer lives there and practises in front of the mirror every morning. Or that flat over there, I think she's a dancer because she does a warm up routine every afternoon, generally wearing very little.'\n\nPaul smiled and said,' Of course, not everything is what it seems.'\n\n'Yes, you're right, Paul. We don't really know what goes on behind closed doors do we.'\n\nFor some reason he blushed as I said that.\n\nWhat I quickly came to appreciate were our twice daily physio sessions. Of course, some of it was pure agony as he stretched and pulled and iced me to keep my muscles and joints supple and working as they should. Even those exercises were made bearable by the feel of his soft strong hands stroking and kneading my aching muscles. I rapidly began to look forward to those sessions as the highlight of my day. He promised one day to give me an authentic Thai massage but as that could be very tough it should wait for a while.\n\nI noticed that it wasn't just his hands that were soft, he never seemed to show any sign of beard growth and his skin seemed to be in perfect condition. His hair he kept in a pony tail but one day he came out of the wet room while I was wheeling myself to the kitchen, with his hair hanging down and he looked transformed. It framed and softened his features and I could see what Lisa had said about him being pretty. \n\nLisa had popped in briefly a couple of evenings for a quick drink, and Paul visibly brightened when she was around. I thought that he was getting a big crush on her and when he was out of the room getting our drinks I told her so.\n\n'Oh brother,' she said, 'you really don't know what's going on, do you?'\n\n'What do you mean?' I asked but Paul walked back in and Lisa just rubbed my shoulder as if in sympathy.\n\nPaul had his first day off on the sixth day he was with me. He had arranged for a relief carer to come in after breakfast and then he would be back later that night ready to start again the following morning. We had our usual breakfast of fruit, coffee and toast as he waited for the relief to arrive, before heading out the door carrying one of his suitcases. Just going to drop off a few things, he said. See you tomorrow morning. \n\nThe relief was a disaster. He thought of caring as more of a military assault course, barking out orders to me and treating me as some kind of obstacle that had to be attacked, surrounded and defeated. The physio sessions were agony. How this guy was tolerated as a carer I have no idea. \n\nHe completely ignored my wishes, not that he actually asked me what they were. It was his way or the highway as far as he was concerned. As the day wore on in increasing amounts of frustration I realised how much I missed Paul; his conversation, his smile, his soft hands and his caring personality were things that I had come to value.\n\nAt the end of the day I was praying for it to end so that Paul would be back. As I lay on my bed, unable to sleep after a horrible day, my mind started to spin. Why did I miss Paul so much? Was it just because of a rough day with someone new?\n\nI knew some patients fall in love with their nurses, is that what's happening to me? I shook my head and thought, no, I'm not gay, I can't be, I like women too much. \n\nIs Paul gay? Lisa had put that thought in my mind and I really didn't know. Did it matter anyway? I thought it must be just that I'm at a really low ebb and I'm fixating on the one person who is showing me care and attention.\n\nI heard the outside door to the flat open which must have been Paul returning. I felt a huge surge of relief at the thought of him being back and I fell asleep almost immediately. It must have been about 2 o'clock in the morning when I awoke for some reason. My leg was aching badly after the physio from Mister Bloody Motivator and I knew that I had to get a painkiller or I would not get back to sleep. I realised with disgust that the bloody relief had left the tablets and a glass of water just out of my reach. The baby monitor was on; it's light blinking in the darkness. I could call for Paul but I should be able to do this for myself, for God's sake. \n\nI bum shifted myself across the bed towards the table and reached out for the tablets, when I over balanced and fell out of the bed. It wasn't a long drop but I fell awkwardly and it felt as if I had been stabbed in the leg.\n\n'Fuck, fuck, fuck.' I heard myself saying. I needed Paul now. 'Paul, can you come? I need some help.' I shouted.\n\nPaul rushed into my room and said, 'Shit, what have you managed to do Jeff?'\n\n'Fell on the bloody floor. What's it bloody look like?'\n\nPaul ignored my sarcasm and calmly said, 'OK, let's get you back up and see what damage has been done.'\n\nPaul bent at the knees to get his arms under my shoulders to lift me back on the bed and as his face came close to mine, I suddenly noticed a touch of colour around his eyelids that looked like eye shadow that had not been cleaned off properly, and there was, I'm sure, also just the hint of lipstick in the corner of his mouth. My eyes widened and I'm sure he noticed my reaction, but all he did was to lift me effortlessly back up and onto the bed.\n\nPaul quickly checked and it didn't seem that anything bad had happened, apart from a severely bruised ego that is. He fetched me a painkiller and the glass of water, covered me with the duvet and stood looking at me for a moment. He was wearing pyjamas and as he bent over to pull the duvet up, even in the dim light I swear I could see a hint of lace as his pyjama top gaped open a fraction.\n\n'Are you OK now?' he asked gently.\n\n'Sure, thank you for getting me up so quickly. No harm done I think. I'll be a lot more careful in the future.'\n\n'OK, well I'll see you in the morning Jeff, goodnight.'\n\n'Goodnight and thank you, Paul.' I hesitated and said, 'Paul?'\n\n'Yes Jeff?'\n\n'Oh, nothing really, it can wait. G'night.' I would save that for later.\n\n'Sure Jeff.'\n\nI woke the next morning sore and angry with myself. How stupid had I been? I could really have seriously set back my recovery. After I finished feeling deeply sorry for myself, I remembered what I had seen when Paul came into my room last night. Had I really seen it, or was it a trick of the light and confusion because of the pain I was feeling? No, I was sure of what I had seen. There had been traces of makeup on his face and he had been wearing something lacy beneath his pyjamas. \n\nOh shit, I thought. What's going on? He must be gay, for sure. At that moment Paul knocked and came in with a coffee. \n\n'Jeff, I thought that after your night time adventure we should skip this morning's physio session and see how you feel this afternoon?' \n\n'Sure, Paul, if you think that's the right thing.' I was a bit short and he looked at me oddly for a moment and then left the room. Paul returned a little later to get me out of bed for my morning wash. I became much more aware of his close proximity when he helped me out of bed and into my robe. I was dreading the next step which was to get me washed. For the first time I was able to get out of my robe and to sit on the stool unaided. \n\nPaul then began to wash me and I said, 'Can I try please, Paul?'\n\nPaul handed me the wash cloth and stood back as I struggled to wash myself. I dropped the cloth and angrily said, 'Shit, bugger, arse.'\n\nPaul picked up the cloth and asked. 'OK if I do it, Jeff?'\n\nI nodded, not looking at him and he started. As usual the combinations of his hands and the gentle feel of the wash cloth across my skim had me cock hardening within seconds. I tried to think of anything that would keep me from thinking about what he was doing but to no avail. My cock was only interested in it's own pleasure, not it's owners embarrassment. I went a deep red and Paul just kept washing and making it even worse. I thought, he's enjoying this, making me have this reaction.\n\nI said, 'That's enough Paul, can we finish now.'\n\n'Whatever you want Jeff.' \n\nHe dried me off and then with my robe on he wheeled me into the living room to the desk. I opened up the Apple and started hammering away at the keys trying to get rid of my frustration. What was up with me, I knew he was gay and there I was getting an erection in front of him because he was touching me. God, what a mess. I couldn't think straight; why did I feel differently now I thought for sure he was gay? He had never been anything else but professional towards me and had not tried anything on. Oh that's fucking stupid, I thought, why does every straight guy think a gay guy is planning to grope him at the first opportunity. \n\nPaul had many opportunities to do something but he had not. I really liked Paul before this happened and I missed him a lot when he was away. Was I secretly attracted to him? Is that why I got an erection? Hell, this was so confusing. I had ended up behaving like a complete jerk this morning and I didn't know what to think. Paul came in with coffee and laid it next to me on the desk. I didn't look up.\n\n'Jeff, is there something wrong? Have I done something?' a simple question with a complicated answer. I didn't say anything.\n\n'You seem very upset with me.' \n\nI grunted and thought, I have to say something, this is childish of me.\n\nI turned round and looked up at him. He looked worried. \n\n'Paul, last night when you came in to get me up off the floor, I could see traces of makeup on your face. Are you gay?'\n\nHis face dropped and he sat down and put his face in his hands.\n\n'I thought you might not have noticed. Oh God, I'm sorry, I'll call the office and get a replacement for me and I'll pack and leave today.' \n\nHe looked as if he was going to cry. I felt something lurch in my chest.\n\n'Paul, please just answer the question.' I asked softly, and I hoped, gently.\n\nHe looked at me and said, 'do you really want me to?'\n\nI nodded. \n\nHe looked out of the window, took a deep breath a said, 'Yes, I'm gay. Have been since I was thirteen. Satisfied?'\n\n'And the makeup, Paul?'\n\nHe shrugged and said, 'Doesn't matter, I'm leaving anyway.'\n\n'Paul, please tell me, I want to know.'\n\nHe was still looking away and then as if a barrier had fallen he started to speak. \n\n'Not only did I know I was gay at thirteen, I started to wear women's clothes. First my mum's stuff, and then my sister's. I got caught, of course, and gave it up for while, but I kept getting the urge to go back. Mum sent me for treatment but that didn't work. When I went to college it was bliss, I could finally do what I had wanted to and dressed regularly.' He paused, his mind obviously back in the past.\n\n'I didn't want to dress fulltime, I was happiest when I could choose who I wanted to be. I wasn't sure whether I was gay or bi-sex at that time. I liked men and women, and then felt more and more drawn sexually to men. You would not believe the number of straight men who like to go with a guy in a skirt.' I felt myself blushing but he wasn't looking at me.\n\n'I've been the same ever since, I act pretty straight. I think, but I really like to dress whenever I can given the limitations of my job.' He stopped and looked across at me.\n\n'I will go, no problem, but believe it or not I have really enjoyed looking after you, and I think you did too. So, if that's the case will you please not tell the company what I have just told you?' 'One more question, please, Paul. What about last night?'\n\nHis shoulders dropped and he looked away again, 'Well, I've told you everything else, so why not. On my days and nights off I go out dressed for the day, I'm passable at the least, and then go to a club or a bar, where I can be myself with others like me. That's where I was last night, just didn't clean my makeup off properly. I hoped you hadn't noticed, but I knew by the way you reacted this morning you had.'\n\nHe stood and went to go back to his room. \n\n'Paul, please sit down,' I said in as neutral a voice as I could muster. He looked at me and then sat down again. I knew I should ask him to go. \n\n'Paul, thank you for being so honest with me. I have enjoyed you being here and I couldn't ask for someone to take better care of me than you. I admit it was a shock last night and I didn't deal with it well this morning. I apologise to you for that.' I took a deep breath. 'I don't want you to leave; I would like you to stay if you feel that's OK.'\n\nHe looked at me trying to see if this was a trap, 'Jeff, are you sure?' \n\nHe seemed to be near to tears.\n\n'Yes, Paul, I mean it, Will you please stay?' I smiled to show him I meant it. \n\n'Jeff, oh yes, I would love to stay, thank you.' I could see his eyes glisten and he wiped away a tear. 'I won't let what happened last night occur again, I promise.'\n\n'Paul, I really don't mind what you do. It's your life; you should live it as it you want.' He was on the edge of tears again. \n\n'Thank you Jeff, this means a lot to me.'\n\nI asked him, 'Do you have a name for when you, you know, are dressed?'\n\nHe looked very shy when I asked and said hesitantly, 'It's Paula, not very creative, but it's easy to remember.' \n\nMy heart was beating fast as I asked the next question, 'Can I meet Paula?' \n\nWhere the hell did that come from I thought to myself.\n\nHe stood dead still, I think, fearing I was having him on. 'Jeff, do you mean that?'\n\nI nodded, my voice getting a little thick as I said, 'Yes, I would like to. How about tonight? Would Paula like to come to dinner?'\n\nA big smile spread across his face, 'I'll have to check with her first, but I'm sure Paula would love to come to dinner with you.'\n\n'There's just one thing,' I said, my face and voice deadly serious, 'Can I get a fresh cup of coffee, please?'\n\nPau collapsed in giggles and said, 'Coffee coming right up, sir.'\n\nThe day passed quickly, Paul was his usual professional self and after lunch I felt fit enough for a physio session. This was the first session after this morning's confession and Paul seemed a little hesitant in his massage but he seemed to relax as he sensed I was not at all concerned. His hands and fingers soon had their usual reaction and I almost fell asleep at one point. \n\nIt gave me time to think. Why had I asked for Paula to come to dinner? Curiosity, I thought, I wanted to see him as his other self. I thought about his growing up years and how confused he must have been. Even now to have child come out at that age must be difficult for parents to handle and the dressing must have made it extra tough. I thought that he seemed to have grown into his skin pretty well. Was I worried about tonight? \n\nYes, I was a bit nervous that he would look like a bloke in drag but I would have to deal with that if it happened. I was comfortable with Paul and I hoped I would be equally so with Paula.\n\nThe session finished, Paul wheeled me back to the desk with a cup of tea. I had a brainwave and suggested that instead of Paul, or Paula, cooking tonight we should order a takeaway. Paul frowned and asked if I didn't like his cooking. I laughed and said that I loved it but it would be better if I met Paula tonight without her having to cook too. He eventually agreed and I ordered from my usual Indian takeaway.\n\nPaul left me alone after that and we agreed that dinner would be at eight, with a drink at 7.30 first. I did some work for the rest of the afternoon and then watched some mind numbing TV for a while. I was nervous and I couldn't imagine what Paul must be feeling. At 7.30 I was doing some people watching through the window as I heard the door to Paul's room open. \n\n'OK, I guess I'm ready.' The voice was somehow Paul's and then not Paul's at the same time. I turned the chair round fearing for the worst and my mouth dropped open. What confronted me was not a bloke in drag but a beautiful woman. If Paul was weedy as a man, he was just gorgeous as a woman. Holy shit, I thought.\n\n'Well, what do you think? I'm Paula, by the way.'\n\nI realised I still had my mouth open and closed it rapidly. 'Hi, I'm Jeff and I'm very pleased to meet you Paula. You're absolutely gorgeous.'\n\nPaula blushed and murmured, 'Thank you. Can I get you a drink?'\n\n'Scotch please, better make it a large one.'\n\nIt gave me a chance to look at Paula properly. Her hair was hanging loose over her shoulders and she was wearing what I guessed was called a little black dress. It was sleeveless, with a vee neck, and fell to about six inches above her knees and absolutely hugged her figure. My God, she actually has a figure, and her legs were to die for. She was wearing a small gold chain round her neck with a locket, drop earrings, a gold bracelet on one wrist and a tiny watch on the other. She had on dark tights and some very expensive looking heels. I just couldn't believe my eyes and I could feel a stirring in my trousers at was seeing and I had to shift in the chair as I was getting uncomfortable.\n\nPaula turned round with our drinks and she came across and sat on the sofa opposite me and crossed her legs. If I wasn't uncomfortable before, I surely was at that point.\n\n'Well, what do you think, Jeff?'\n\nI took a moment to compose myself, 'Paula, if I wasn't seeing you with my own eyes, I wouldn't believe it. I mean you are stunning.'\n\n'Thank you, that's very sweet of you to say so. I was so nervous getting ready tonight, I thought I might have over done it.'\n\nHer makeup was light but she had used it to highlight her eyes and mouth. I think she had plucked her eyebrows because there was a definite arch to them tonight. She had used eye shadow that drew your attention to her eyes and she had on a light pink lipstick that made her mouth look very kissable. God, did I just think that? At that moment Paula ran her hand back through her hair and that nearly did for me. It's a gesture that gets me every time when a woman does it. The stirring had definitely become much more than that.\n\nLuckily, the door buzzer went and Paula walked across to the intercom and buzzed in the delivery guy with the food. I watched her as she walked across to the door and there was no trace of masculinity in her stride or bearing. She looked as feminine as could be.\n\nPaula retuned with the food and she sorted out plates and cutlery for the food and we tucked in at the table. I asked her to open a bottle of red wine and she came back with two glasses. She said she wouldn't normally on a school night as she put it but it might settle her nerves a bit. I told her she shouldn't be nervous, I was delighted to be having dinner with such a beautiful lady. She tipped her head and looked at me out of the corner of her eye and said thank you and that she appreciated it. \n\nThe wine relaxed us both and we were soon laughing and joking as Paul and I did. From time to time I caught a glimpse of Paul in her but it was obvious that Paula was an individual and much, much more than Paul in a dress. She talked about when she was in Bangkok getting some cosmetic work done; smoothing her Adams apple and some implants on her hips. She had taken hormones for a many years but was now happy with what they had achieved so took a lower dose these days. She pushed her chest out and said quite proudly that they were entirely natural. \n\nI had already noticed she had boobs and asked how she kept them hidden as Paul.\n\nEasy, she said, they are not big enough to make it a real problem under the loose tunic Paul wore as long as she bound them up in the morning. Same with the hips, it doesn't notice in the work outfit either. Eventually, she stood and said it's late and we still had to get me ready for bed. Even that coming from Paula sounded very different. ",
        "'Jeff, I want to thank you for letting me do this, and for the way you have made me feel this evening. You have been fabulous.'\n\nShe stood and moved over to me, squatted beside the chair and gave me a kiss on the cheek. I could smell her perfume and as she moved back from the kiss she paused and we looked into each other's eyes. I felt my heart flip and suddenly this wild thought flashed into my head that all I had to do was move a little closer and kiss her, but I just coughed and said you're welcome and it had been an enjoyable pleasure. She dipped her head once more and pecked me again on the cheek. She wheeled me to the wet room and I was now getting much better at sorting this out by myself. I could feel myself healing now and the collar bone seemed to be getting much easier. \n\nPaula wheeled me into the bedroom and helped me off with my t-shirt and then pulled off the sweat pants. Needless to say being put to bed by Paula was very different to being put to bed by Paul. I had a definite erection which Paula could not have failed to notice. She pulled the cover up and leant forward to give me one more kiss on the cheek.\n\n'Thanks Jeff, you are wonderful, do you know that?'\n\nShe left the room leaving me to think about the sight of her small uncontained breasts through the vee of her dress as she had lent over me.\n\nThe next morning Paul woke me with the usual cup of coffee dressed in his work tunic and trousers. There was no sign of Paula from the previous evening. The first hurdle was to get washed. I was moving much more freely now and managed to walk from the chair to the stool. I still didn't trust myself to wash properly so Paul took the cloth. Something had changed after yesterday and the washing still felt as good as ever, but I felt no reaction as I had in previous days. All I could think of was that I wished it was Paula doing the washing. \n\nWe sat and drank coffee and watched what was happening outside the windows. The singer was practising and the guy in the office drew the blinds one more time. \n\n'Paul, do you mind me asking you some questions about you?'\n\n'No, if I'll answer what I can.'\n\n'Do you prefer living as Paul or Paula?'\n\n'Easy one,' he said, 'both. I like my professional life to be as Paul and my after work I like to become Paula. It would make it difficult to work as Paula unless I wanted to transition completely and I don't want to do that, at least not at the moment.'\n\n'So you, still have, you know...'\n\nHe laughed, 'Yes, Jeff, I have a penis, and it still works, I think that was your next question.'\n\nI turned red and said, 'I'm sorry.'\n\n'Don't worry, I would not answer these questions for everyone, but I think I can trust you, so I will. I don't want to lose my penis; I enjoy it for giving and receiving pleasure.'\n\nI went a deeper shade of red. Paul didn't seem to notice. \n\n'Paul, if Paula wants to visit again she'll be perfectly welcome to, any time. I liked her company last night.'\n\nThis time, he can't have missed the blush that seemed to cover me.\n\nHe smiled and looked me in the eyes, 'Jeff, that's nice, I think she would like that a lot.'\n\nPaula did indeed appear that night; she was dressed casually this time in tight jeans, a white fitted shirt and short boots. Her hair was in a pony tail but this time tied high on the head and with a bright red scrunchie holding it in place. Her makeup was light but still managed to highlight her eyes and those kissable lips. I couldn't now think of her lips without mentally adding the word kissable to them.\n\nWe had a nice evening, Paula cooked pasta and I had half a bottle of Chianti and Paula had a glass. Getting to bed was getting easier as well, I could now get onto the bed myself but Paula still had to slip off my sweat pants. She pulled up the covers and lent forwards to give me a kiss. It seemed natural for Paula to do this. This time though she hesitated for a heartbeat and then kissed me on the lips. The touch of her lips on mine was electrifying. She pulled back and anxiously scanned my face, fearing she had gone too far. I smiled up at her raised my head and kissed her on the lips. \n\nI said 'G'night Paula,' and settled down happily.\n\n'Goodnight Jeff, sweet dreams.'\n\nIn the morning I felt better than I had since before the accident. I managed to roll myself over and get from the bed to the wheelchair without falling over. Real progress I thought. \n\nThe next two days passed in the same way. Paul looked after me by day and Paula appeared in the evening. I was definitely making great strides and was getting more mobile. I was still heavily dependent on Paul though but I could see a time when I wouldn't need him as a carer and that made me feel miserable.\n\nLisa had texted that she was going to drop round the following evening and when I told Paul he seemed happy enough but there was something bothering him.\n\n'What is it? I thought you liked Lisa, I even thought you fancied her.'\n\nHe laughed and said, 'I don't fancy her, but she is the kind of woman I would like to be, well not actually be, but she is so funny and beautiful and full of energy.'\n\nI stared at him and said without thinking, 'If it was a choice between Paula and Lisa, I would choose Paula every time.'\n\nPaul stood stock still and said very carefully, 'Jeff, be careful what you say. You should only say things you really mean.'\n\nI looked him n the eyes and said, 'I mean it, and I will show you, why doesn't Paula meet Lisa tomorrow night?'\n\n'You can't be serious, Jeff.'\n\n'I am serious, I would be proud to be seen with Paula, anywhere, with anyone.' I was talking wildly but I knew I meant it.\n\nPaul looked long and hard at me and said, 'OK, but I warn you Jeff, you have more to lose than me.'\n\nLater that night after we had finished dinner at the table, and Paula was about to clear away, I reached over and took her hand. She looked at my hand holding hers and then back to me.\n\n'Jeff, please be sensible. You can't mean this.'\n\n'I pulled her over towards me, 'Paula, will you please kiss me?' \n\nShe hesitated and then dropped my hand and ran to her room. If I could have I would have kicked myself. You stupid, lame brained idiot, numb skull, jackass, fool. I called myself every name under the sun.\n\nI managed to get myself to the toilet and then into bed by myself. I would have cheered if it weren't for what had happened earlier. \n\nI had turned the lights off and had settled down when I heard the door open and a chink of light flashed as the door was closed. I felt the covers lifted and Paula slipped in beside me. Oh my God, I thought, this is it.\n\n'Jeff, do you still want that kiss?'\n\n'Oh yes, I do.'\n\nShe covered my lips with hers and she pushed her tongue past my lips. I kissed her back and her hands went round my head and we mashed our lips together. She broke the kiss, sat up straight and lifted off her short nightdress and placed my hands on her breasts. They felt small but the nipples hardened immediately under my touch. She bent down to kiss me again and my tongue this time pushed past her lips. Tongues fought a duel as I continued to play with her nipples. \n\nShe moaned as I tweaked her nipple and that caused her to raise up the bed and she pushed her right nipple into my mouth. I swirled my tongue around the now granite hard nipple and nipped it with my teeth. She moaned and transferred the other nipple to my mouth. I gave it the same treatment and she sought out my nipples and rolled and tweaked them between her fingers. I moaned this time and I felt her nip the nipple with her fingernails. She raised herself up and I could sense her looking down at me.\n\n'Are you sure you want this, Jeff? You know what I am and what I've got don't you?' \n\nI answered by pulling her down into a long and deep kiss.\n\nShe broke off and said to me, 'I guess I'm going to have to do all the work here.' \n\nShe sighed and then said, 'Jeff, do you know how porcupines make love?'\n\n'No,' I said, thoroughly confused.\n\n'Very, very carefully.' She replied.\n\nI laughed and then stopped as I felt her mouth envelop my rigid cock. \n\nShe was a Phd at cocksucking and she took her time; licking, sucking, nipping and stroking my cock and balls, taking me high and then bringing me back down before she finally brought me off. She kept her lips wrapped around me as I climaxed into her mouth. She gagged once and then she must have swallowed. She sucked me dry and then came up the bed to kiss me. I could taste the saltiness of my cum left on her lips. \n\nShe slipped out of the bed, said, 'I'll be back, don't go anywhere.' \n\nShe must have gone to the bathroom because when she returned she smelled of toothpaste. She came back to bed and lay down beside me. I wanted to reach out and cuddle her but at the moment that was beyond me. I found her hand and brought it up to my lips and kissed it.\n\nI whispered, 'that was awesome, Paula'\n\nShe reached out her hand, touched my face and stroked it with her fingers. I nuzzled into it and kissed her fingers. \n\nShe said, 'We'll have to talk in the morning, Jeff.' \n\nWith that we just lay together and her breathing became slower and she dropped off to sleep. I followed soon after.\n\nI awoke to find myself alone in the bed and for a moment I wondered if the events of last night had been a dream. I smelt coffee brewing and with a rush realised that last night had been real. I had slept with Paula in the literal sense of the word if not the other sense. We had kissed and she had sucked my cock. I went red at the thought of it. Did that mean I was gay? Well I had slept with Paula, not Paul. Even I realised that was a distinction without a difference. I shook my head and thought, 'You know I don't give a damn.'\n\nPaul knocked as he always did and came in with coffee. \n\n'Morning, Jeff, how are you?'\n\nI grunted something. I told you I am not human without coffee. \n\n'Ok. When you've had coffee, can you get yourself out of bed and into the chair?'\n\n'OK, slavedriver.'\n\n'Let me know and I'll come back to collect you.'\n\nHow could either of us just not say anything about last night? Are we going to pretend it never happened? Was it just a one night stand? I decided to play it by ear and see what would happen. I did get myself out of bed and wheeled myself off to the wet room. I had got myself out of the chair and on to the stool, when I saw Paul leaning against the door. \n\n'Aren't you going to help?'\n\n'Looks like you're doing a fierce job yourself. Do you need any help?'\n\n'No, probably not.'\n\n'Give me a call if you do.'\n\nI managed well today and wheeled myself out to the living room where Paul had laid breakfast. We ate in silence and then both of us began to speak at the same time. We laughed and that broke the tension.\n\n'You first,' said Paul.\n\n'Lisa,' I said. Paul smiled, 'Yes, your lovely ex who is visiting tonight.'\n\n'Will you be Paul, or Paula?'\n\n'Who would you like me to be?'\n\nI thought for a moment and I knew I should say, Paul. \n\n'Paula,' I said.\n\n'OK but Paula will need a bit more time to compete with a Grace Kelly lookalike if that's OK?'\n\nI laughed and said, 'That's fine, but don't tell her you think she's a Grace Kelly clone, because she is unbearable enough as it is.'\n\nPaul took himself off to get ready at 5 o'clock with Lisa due at 7. I amused myself by looking out the window and reading a bit.\n\nAt 6.45, Paula opened her bedroom door and shouted, 'Here I come, ready or not.'\n\nShe walked out and my heart skipped a beat. This time she had done her hair like Audrey Hepburn in Breakfast at Tiffany's and was wearing another black dress, sleeveless but with a high neck line and a flared skirt together with the black heels she had worn the first night. She wore a single string of pearls around her neck and a silver bracelet on her wrist. I was blown away.\n\nShe twirled round and the skirt filled out, 'Will I do?'\n\n'Oh yes, you'll do alright.'\n\nAt that moment the intercom buzzed and I wheeled over to let Lisa in. She blew in through the door like a yacht in full sail and stated talking straight away. \n\nI held up my hand for her to stop.\n\n'Lisa, I would like you to meet my new carer.' I motioned to Paula, who stood up from the chair and walked across to Lisa and shook her hand. 'Pleased to meet you Lisa, I have heard so much about you from Jeff.'\n\nLisa smiled and said, 'Likewise. I'm sorry, I didn't catch you name.'\n\n'It's Paula.'\n\n'Oh hi Paula, that's a coincidence Jeff's last carer was called Paul. What happened to hi...' Lisa stopped dead and stared closely at Paula.\n\n'Oh fucking hell,' she said, 'It can't be can it? Oh shit, it is, you're Paul.' She sat down, looking shocked. 'What the fuck is going on?' \n\n'Lisa,' I said, 'I always told you that you sounded like a truck driver, you still do.'\n\n'Screw that,' she said, 'I need to know what's going on. And I need a drink, a stiff one.'\n\nPaula went to fetch a gin and tonic and brought me a large Scotch. Lisa took a huge gulp and looked at me and then Paula.\n\n'My Christ, Paula, you are gorgeous. You look fabulous.' Lisa was recovering fast. 'You are one big bastard, Jeff for pulling this on me, I will never forgive you. Now, will one of you tell me what the fuck is going on?'\n\nI told Lisa about discovering Paul's secret and Paula told her about growing up and how she became Paula. Lisa was rapt and for once kept quiet for the whole of the story. She sighed and leant back in her chair.\n\n'Paula, that's one hell of a story, you must have been through some rough times.' She nodded her head towards me and said, 'and this old bastard over here didn't mind?'\n\n'No, Jeff has been wonderful. I offered to resign but Jeff said no, he wanted me to stay. He suggested he meet Paula and then he agreed to let me be Paula when I want. I'm Paul during the day as his carer and then I can be Paula in the evening.'\n\nLisa looked at me over the top of her glass and raised her eyebrows at me. I ignored her but knew she wouldn't let it go. \n\nPaula excused herself and headed to the kitchen.\n\n'Well, well, well, what a tangled web we weave. And are you two, you know, dirty dancing? I mean together?' Lisa was never subtle.\n\n'God, no. I mean it's totally professional and I guess we're friends but that's it, you dirty minded witch.' Even as I said it, I didn't think she believed it.\n\n'I can tell you, I know a whole host of red blooded men who wouldn't hesitate to fuck her brains out given half a chance.'\n\nI said to Lisa, 'Can I trust you on this, this has to be between us, I mean.'\n\n'Oh sure, I'll only tell Paolo, and naturally it'll be on my Facebook page later tonight.'\n\nShe saw my face and said, 'Oh, don't wet your pants; I will keep your secret. Anyway, I can't tell Paolo because he would be first in line to have a go at her.'\n\nSecond, actually. But I said that in my head.\n\nLisa said, 'You know he, she whatever looks like Audrey bloody Hepburn? She's gorgeous.'\n\nI smiled and said softly, 'She thinks you look like Grace Kelly, but I shouldn't have told you that.'\n\n'Huumph,' she said, normally a good sign from Lisa, 'but that doesn't make you James Stewart.'\n\n'Paula, I'm coming through to help,' yelled Lisa as she walked into the kitchen.\n\nHelp, as in interrogate, I thought.\n\nThe evening went extremely well. Lisa seemed to take a real shine to Paula and before we knew it, Lisa was grabbing her coat.\n\n'Got to go see if Paolo has been force feeding the babies pasta again.' She said as she headed for the door. She bent down to kiss me and whispered, 'Better keep your door locked tonight. Or maybe it's already too late.'\n\n'Witch,' I hissed back. \n\nLisa kissed Paula on both cheeks and sailed out of the door.\n\nI needed a Scotch to recover as Paula and I sat and chatted about Lisa. Paula really liked her and especially so when I told her that Lisa thought she looked like Audrey Hepburn. I was in the wheelchair and Paula was on the sofa, her legs tucked up beneath her. It felt really comfortable just sitting with Paula like this at the end of a lovely evening. I finished my drink and wheeled myself off to the toilet. Next big challenge I thought, what happens tonight?\n\nI came back out and Paula was clearing away. I wheeled over to her and told her to leave those until the morning. I asked if she could wheel me into the bedroom. She did so and then turned to leave. \n\n'Where are you going?' I asked.\n\n'To my bedroom, of course.'\n\n'Better stay here,' I said, 'it will save me having to wheel myself over to your bedroom.'\n\nShe smiled slowly, unzipped the dress and let it drop to the floor to reveal just a tiny white bra and knickers. She reached behind her back and unclipped the bra freeing her small but perfect looking breasts. I could see a bulge in the front of her knickers and I shivered at the thought of what that contained. What have I let myself in for, I thought, but my cock began to grow at the sight of Paula's nearly naked body. \n\nI was still in the wheelchair and she began to dance closer, her body moving and gyrating slowly and sinuously to some imaginary music. She put her hands on the arms of the chair and brought her breasts close to my face. I reached out for them but teasingly she moved away again and then dipped back into me so my mouth could just touch a nipple. I flicked out my tongue to brush the nipple and she then pushed it right into my mouth and I sucked it until it grew hard. Moving away again she turned round and brought her bum up close, wiggling it right up to my face. \n\nSpinning around she dipped the other nipple into my face and allowed me to lick that one until it must have been painfully hard. She stood up, her hips grinding from side to side and slid her hands across her belly and up to her breasts, rubbing and kneading them. I heard myself make a sound from somewhere in the back of my throat. \n\nBy this time I had a positively painful erection. She dropped to her knees and reached out to slowly ease down the sweat pants I was wearing to let me cock spring free. She looked up at me and slowly leant forward to take me in her mouth, all the while keeping her eyes locked on mine. This was even more spectacular than last night as I could see exactly what she was doing. Her mouth and tongue sucked and licked my cock and balls so expertly that it was not long before I was ready to climax. \n\nShe sensed I was close and held me back a little and then accelerated her pace until I could bear it no longer. 'I'm coming, I'm coming.' I managed to blurt out before my hips bucked and I unloaded into her mouth. She looked up at me as she sucked everything into her mouth, swallowed, then licked her lip to clean the last of the cum that had spilled from her mouth. \n\nPaula slowly stood up and I saw that she was aroused because her cock was pushing out over the top of her knickers. I felt a rush of blood through my head and I somehow felt compelled to reach out my hand to touch her. She looked down and said, 'Are you sure?' \n\nI nodded, my tongue too dry to say anything. Paula slipped down the front of her knickers and her cock stood out proudly from her groin, the purple head glistening with pre cum. My fingers brushed the shaft and I jumped as it twitched. It felt soft and warm and hard all at the same time; so much like my own, yet so different. I gently began to stroke it, circling the shaft with my fingers and she began to rock her hips back and forwards so that it slid through my fingers.\n\nI looked up and there was a look of pure bliss on her face as I started to move my hand in time with her thrusts, and I could feel it getting harder as she pushed through my hand. I was mesmerised by the sight of her cock, with its glistening purple head and slit staring at me, daring me to go the next step.\n\nMy mind was reeling at what I was doing and as if entranced I moved forward and my tongue flicked out to touch the head that was so close to me. Paula jumped a little as she felt my tongue and I heard a little gasp from her as she realised what was happening. I looked up to see her eyes locked on mine, pleading with me to keep going. I had crossed so many lines already that I thought another would not matter and I opened my lips and took the head of her cock into my mouth. ",
        "I felt her hands on the back of my head as she began to rock her hips even faster. I didn't really know what to do but I used my tongue to slide under and around her head as I remember her doing and she moaned again and her knees buckled a little. She grew bigger in my mouth and I guessed she was getting close. \n\n'OOOohhh,' I heard her say and she pulled out and her cum arched from her cock in a great spurt across my chest. Her cock twitched and more cum oozed out of the slit. Paula touched the end of her cock with her little finger and I could see strands of cum glistening in the light. She offered me her finger and I just touched it with my tongue, before sucking the finger into my mouth. That was my crossing the Rubicon moment; nothing would ever be the same again.\n\nPaula ran to the wet room and came back with a wash cloth and she cleaned up the cum on my chest. She bent down and kissed me passionately and said, 'Thank you, Jeff that was wonderful.'\n\nI tried to climb out of the chair but I just couldn't manage it. Paula helped me up and onto the bed where I lay exhausted from what had just happened. I held onto her hand and she lay gently down beside me. I kissed her and said, 'Please stay with me tonight, I want to wake up next to you in the morning.'\n\nShe had a serious look in her eyes as if she was debating something inside, 'OK, Jeff, if you're sure that's what you want.'\n\n'I'm sure,' I said, kissing her hand.\n\nShe lay back, pulled the covers up over us both and holding my hand we both drifted off to sleep. I woke to the sound of my phone buzzing on the bedside table. It was a text from Lisa.\n\n'Did u lock yr door?'\n\nMe 'MYOB'\n\nLisa 'Tht means no then'\n\nMe 'MYOFB!!!'\n\nLisa 'BJ?'\n\nMe 'Go away'\n\nLisa 'wouldnt blame u if u did XOXO'\n\nMe 'C u in next life XOXO'\n\nI turned the phone off after the last one. The woman was intolerable, but she was my best friend and knew me better than anyone else. She would always be on my team, I knew that.\n\nPaula had got up earlier and I could smell the coffee brewing, my absolutely favourite smell on the planet. Paul knocked on the door and brought a coffee in.\n\n'I think you can dispense with knocking on the door, don't you think?' Paul was in carer mode; man style pony tail, white tunic and trousers and no makeup. \n\n'Pure habit, it's just politeness. I don't want to walk in if you're doing something private.' He grinned as he said it.\n\n'That ship has sailed I think, you're in here for most of the private stuff these days.' I replied, my grin as wide as his.\n\nAt lunch I told Paul that if he wished I didn't mind if he wanted to be Paula full time while he was here. He said he would think about it but he was used to handling the dual characters and Paul suited him for work.\n\nThe day slipped past and before long we were sitting talking after diner, Paula with a coffee and me with a Scotch. \n\n'Paula, there's something I need to ask.'\n\nShe looked worried.\n\n'Do you like me Paula?'\n\n'Yes, of course I do, Jeff. You don't need to ask that, do you?'\n\n'No, I mean, do you really like me?' I sounded like a bloody school girl.\n\nPaula didn't answer for a moment and said, 'What do you really mean, Jeff?'\n\nOh shit, here goes, 'At some time soon I will be well again and you will move onto another client. I wondered would it be possible for us to keep seeing each other? I mean if you would rather not, I understand, but I thought it might be nice if we could...' \n\n'Jeff, are you asking if we could date each other?'\n\n'Erm, yes, that is what I'm asking.' I was blushing now.\n\n'Oh Jeff, that's so sweet and yes I would love to date you.' Paula stood up and gave me a kiss and a hug.\n\nI couldn't stop smiling.\n\nPaula was tidying away and I got myself ready for bed and rolled myself into my bedroom. Paula looked at me and said, 'Where should I sleep tonight?'\n\nI looked at her, 'Where would you like to sleep?'\n\nShe grinned and walked over to my room.\n\nI got up onto the bed and waited for her to finish in the wet room. She came in wearing a beautiful pink babydoll nightie that sent my blood pressure through the roof. She dimmed the lights and slipped in beside me. \n\nI had never felt as useless as I did at that moment. I wanted to embrace this woman and make love to her, but my injuries were still to awkward to do so. She sensed something was wrong. 'What's up Jeff?'\n\n'These fucking injuries, I can't do anything I want to do.' I was practically weeping with frustration. She gently stroked my face and asked, 'What can't you do?'\n\n'You know, I want to, Oh, you know,'\n\nShe leant on her elbow and looked serious. 'Do you mean you want to fuck me, Jeff?'\n\n'Yes, yes that's exactly what I mean.'\n\n'Oh if that's all, then we just need to be creative.' She grinned and said, 'Stay there and don't move, back in a jiffy,'\n\nShe skipped out of the room and was back a few seconds later carrying a small bottle. Climbing back on to the bed she carefully moved on top of me and began to kiss my stomach, little butterfly kisses that tickled and then began to inflame. She moved up to my nipples and took first one and then the other into her mouth until they were as hard as rock. She moved up to attack my neck with small little kisses and nips. This slow gentle foreplay was driving me nuts and I could feel myself getting hard. She finally reached my face and planted little kisses on my face and then nibbled my ear lobes. I was rock hard by this time and she knew it, but she kept teasing me and the first time her lips touched mine it was like they were on fire. \n\nShe started to move back down retracing her kisses over my nipples and stomach down to my groin where she also used her fingers drawing circles on my skin getting ever closer to my cock. I thought she was going to use her hands but she just blew across the head and it felt like someone had plugged me into the mains. \n\nAt last she took me into her mouth and used her tongue to get me even harder. Fireworks were going off in my head by this time and I was desperate to get some relief. I felt something cold and I looked down to see Paula smearing something from the bottle she had brought with her all over my cock.\n\nShe had straddled me on the bed and I could see reach behind her to put some around her hole. She looked up to me and said, 'I'll be careful.'\n\nRight now I would have taken another broken leg as a price to get some relief. She shrugged off her nightie and the sight of her naked except for her knickers had me gasping. She leant forward, gave me one finger to kiss and pushed it into my mouth. At the same time she moved aside her knickers and lowered herself onto my cock. I felt some resistance as the tip entered her and she grunted a little, moved up again and then down and I was inside her. She had to balance herself to avoid falling on me but she began to move up and down on my cock. I felt like a steel rod inside her by this time and she was grunting as she rose and fell on it. \n\nI was on the brink for what seemed hours and then I came deep and hard pouring my cum into her. I seemed to go on forever and she kept moving even when I had been pumped dry. She made a mewing sound, grunted and then she climaxed too, her cum splashing onto my chest. Paula slowly rose up and with a plop I came out of her. She left me on the bed as she went to the wet room to clean up and came back with a wash cloth to do the same for me. She lay down and we kissed softly and slowly, both of us winding down from the peaks we had climbed.\n\nShe looked at me for a long time, eyes scanning my face, thinking about what she was going to say next. She reached out her fingers and stroked my face, 'Jeff, you know I love you don't you?'\n\nWhoo, my world just shifted on its axis. What the hell should I say?\n\n'That's lucky because I love you too.' A slow smile broke out on her face and she put her hands to my head and kissed me. I felt my heart would burst with happiness. \n\nI woke to the smell of coffee brewing again. I swear someone should invent an alarm clock that wakes you up with the smell of coffee. It would make a fortune.\n\nI expected Paul to bring the coffee, but Paula walked into the room, put the cup on the bedside table and sat on the side of the bed. \n\n'Jeff.' I looked at her. 'This dating thing, I'm not sure about it.'\n\nMy heart dropped, 'Why?' and I think I stopped breathing.\n\nShe looked away and said, 'Well, don't you think we're a bit past the dating stage after last night?'\n\nI could hear her giggling and I called her all the foulest names I could think of and a few more I made up.\n\nI said, 'Well if that's the case then why don't you move in permanently?'\n\nShe turned to look at me and said, 'Jeff, if you'll have me I would love to'\n\nLater that day after we had made love a second time, I sent a text to Lisa.\n\n'Got something to tell u'\n\nI had a response a few seconds later.\n\n'u dirty monkey. I knew it. XOXO'\n\nIt was six months later and Paula and I were standing outside the local Registrars. Three months earlier same sex marriages had been made legal in the UK and we had just been married. Lisa and Paolo had been our witnesses and Lisa was blubbing, and so was Paolo, come to that. Paula and I were heading off to Thailand on honeymoon the next day and she had promised to show me a very good time in Bangkok. I couldn't wait. \n\nI thought I might also buy Paula a set of bigger boobs as a late wedding gift.\n\nAt the very end Lisa gave me a wedding card that read 'Gross, now you have to live with a boy' on the front. Inside, she had written, 'Told you so.'\n\nThe End"
    ],
    "authorname": "nikkiesilk",
    "tags": [
        "shemales",
        "transvestites",
        "bi sexual",
        "wedding"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/rear-window-homage"
}