{
    "title": "Taking My Darling Maria Ch. 02",
    "pages": [
        "Hello again :). This chapter is a little longer, but I promise you it still gets interesting. If you have any constructive criticism or positive comments, please comment below. Happy reading :).\n\n*****\n\nI opened my eyes to find myself standing inside the abandoned factory. It was quiet and everything had a shimmery, unreal feel to it. Sunlight filtered lazily into the decaying hallway through cracks in the boarded windows and dust motes floated around in the still air. Blinking a bit in confusion, I took a small step forward. Dust puffed into the air around my shoes as a piece of discarded plywood flattened to the ground under my weight, grinding against the crumbling concrete.\n\nWhat was I doing here...? \n\nMy gut twisted suddenly in panic, the hair on my nape standing on end as my heart rate picked up. Through the silence, that voice called my name sweetly; the sound seemed to swirl through the hallway. My body moved automatically in reaction, my legs shifting as I started to run. There was no other sound as the voice grated through the corridor like steel on concrete. Terror coursed through me as my running slowed against my control. I started moving in slow motion, like trying to move through molasses. The harder I tried to flee, the slower I became. \n\nThe peaceful, crumbling hallway had changed. It was dark now; the light was completely gone as tangible blackness closed around me. It enveloped my eyes, ears, nose, and mouth as I tried to struggle. The presence of the voice neared my ear, cold lips touching the lobe as it started to speak. A horrible wailing noise erupted from his mouth, jolting me into wakefulness.\n\nA shock of electricity ran up my spine and I bolted upright, panting hard and shaking in fear. With panic-induced movements, I tore the stifling blanket away from my face, finally taking in a deep breath of cool air as I reached back and slapped the 'off' button of my obnoxious alarm clock to silence the horrible noise. Cold sweat dripped down my temples as the hairs on the back of my neck stood stiffly to attention. My heart continued to pound in my ears as I blinked a few times and looked around, sighing and sagging in relief as I realized I was in my dorm room. The mattress creaked and a pillow fell to the floor as I shifted, pulling my knees to my chest and wrapping my arms around them, laying my cheek on top of my right knee. After a while, my breathing started to slow and I didn't feel the cold sweat as much; my heart calmed as I listened to the familiar sounds of morning dorm life. Pop music bounced through the hall, the lyrics and rhythm of the song clouded with the sound of a hair dryer or two and the slamming of doors as girls got ready and headed to class. I sighed, looking at the clothes strewn over the floor as I felt my body calming, the adrenaline filtering away. Though I was left with an uneasy feeling, my dream was nearly forgotten as I slid up off my bed, getting to my sock-clad feet on the cold tile floor. After glancing at the clock and seeing the time, 8:33 am, I groaned in annoyance. I was going to be late for class!!\n\nQuickly gathering my stuff for a shower and slipping on my old flip-flops, I hustled into the bathroom and nearly ran into another girl as she left the communal bathroom. I showered fast, not giving the water time to heat up and shivering under the cold stream as I scrubbed myself with soap and lathered my tangled, sleep-mussed hair with shampoo. Hardly taking the time to properly dry off after I rinsed away the soap and hair product, I threw on my clothes for the day: patterned blue and teal tank and pair of jeans, and wrung out the water from my hair as I hurried back to my dorm room and tossed the wet towel and nightclothes in a heap onto the floor. Not bothering to look at my reflection, I roughly brushed my hair, cringing as I forced the bristles through the knots and speedily worked out the tangles in my hair. Tossing the brush onto my messy, blanket-strewn bed, I grabbed my back pack off my desk and stuffed the necessary books inside before zipping it shut and throwing it over my shoulders. Slipping into my shoes, I grabbed my keys and hurried out the door without bothering to tie the loose laces. I ran all the way to class, cool morning air and sunlight brushed over my skin; my usual Chuck Taylors frantically slapped the sidewalk and my laces flopped about as I strode toward the sciences hall. \n\nSwinging open the door and taking the stairs two at a time, I managed to get to the third floor and turn the corner to room 309 by 8:59. I panted hard, turned the heavy handle on the door, pulled it open, and walked quickly into the room. \n\nThe other students who had arrived on time stole glances at me, one of them even raising an incredulous eyebrow as I passed. Pulling out the chair and cringing as I squealed against the worn tile floor, I flopped into my normal seat beside my friend, Becky, and began pulling out my books. It wasn't for a few moments that I realized she was staring at me. I raised my eyebrow and smoothed some stray hairs back into place self-consciously, squirming under her gaze and still panting a little.\n\n\"What...?\" She looked at me wide-eyed for a few more seconds before leaning close and smirking a little, whispering, \n\n\"Somebody had a good time last night.\" \n\nMy brow furrowed and I looked at her, confused. \n\n\"What do you mean...?\" \n\nBecky grinned and leaned over to retrieve her bag from the floor. She set it on the table top and took her compact out of her sparkly, over-stuffed, black purse. She opened it to me and held the mirror angled to my neck. I gasped, my mouth falling open in disbelief. A large, deep, dark purple hickey marred my neck by my collarbone. Immediately, my cheeks flushed and I slapped a hand over the bruise, turning away from her and dropping my head to the table top. As I tried to remember how the hell I had gotten such a mark, my brain started to buzz and a maddening humming sound rose in my ears. The sound of the professor's voice dulled and slowed as if traveling through syrup. The presence of the other students faded; even Becky was forced out of my reality as my brain went into overdrive and my focus shifted to the storm in my mind.\n\nIn the next few moments, all of the previous night's events came rushing back to me... The factory, the chains, the man, the rape... The hickey... \n\nMy face red and heart pounding with shame, I got up and left the class, stepping outside into the hall. The professor continued teaching, but I felt a few pairs of eyes follow me as I strode up the aisle between the tables. The heavy wooden door clanged shut behind me and I leaned my back against the wall just around the corner, sliding down until I was sitting. Hugging my knees to my chest, I didn't really fight the urge to make myself small on the dusty floor. I wanted to cry as all the memories from last night exploded back into my memory and spun me into a whirlwind of emotions. He had taken my first kiss... He had taken my virginity... He had even left me with a huge-ass hickey as a brand of shame... I shivered, rubbing my palms over my upper arms to calm myself. I wasn't going back into sociology class today... I was too embarrassed by my sloppy appearance and I didn't want anyone asking questions when they saw the tears on my face. I probably wouldn't do well in my other classes, either. Not today, at least...\n\nAfter a while, I pulled out my laptop and emailed the rest of my teachers for the day that I would not be coming to class. I was 'sick,' I claimed... It was half true, I felt like I was going to vomit. Closing the lid and neatly packing it back into the bag, I pulled the heavy back pack into my lap and hugged it. I rested my chin on it, the rough and durable fabric of the bag felt a little comforting, as well as the weight of it in my lap.\n\nAfter a few quiet minutes passed in the empty hallway, I finally got tired of having a pity party on the floor and stood up, throwing my back pack over my right shoulder. Turning on my heal and heading toward the stairs, I began skulking back to my dorm room. The nice thing about the Science's hall was that it was lit mostly by sunlight; warm sun rays beamed over me as I descended the stairs. Exiting the building, a cool breeze swept over me as I chose the shortest path to the dorms. I looked down at the sidewalk whenever a stray student passed; there were still tears brimming in my eyes and blurring my vision. My hair fell over the hickey, hopefully covering the dark bruise with a curtain of still-damp red locks.\n\nThe initial shock and hurt began to fade, then slowly turned to anger and resentment. I couldn't believe I let him touch me, let alone... Nevermind. I seethed inwardly, especially when I realized I was sore between my legs. My hands clenched into fists at my sides, my eyes narrowing as I felt helplessly angry. What the hell was I supposed to do now!? I couldn't tell anyone, nobody would believe me. I had showered too; my clothes from last night had also been destroyed and apparently didn't make it back to my dorm with me, so there wasn't even any evidence left to file a police report.\n\nI heard someone walking behind me and I sped up, my eyes tearing up from frustration and defeat. I wasn't about to let someone see me cry like a little girl. The steps on the pavement behind me sped up to match my pace and I felt a cold hand come to rest on my shoulder. My heart leapt in my chest with fright- it was him! The sole of my shoe ground on the pavement as I spun around, fist primed to break his jaw, but I stopped dead in my tracks.\n\nIt was Becky, my friend.\n\nI let out a sigh of relief as I saw her soft brown eyes and her concerned expression, her skin a comforting mocha color rather than deathly pale. She stepped closer and spoke softly,\n\n\"Girl, what happened? It's not like you to leave class like that...\" She pulled her hand off my shoulder and I stepped forward, hugging her. Her soft and curly hair brushed my cheek and her soft perfume helped soothe me. \n\nBecky was my dear friend; she was always honest with me and caring, sometimes reminding me of a mother hen taking care of her chicks. A little surprised, she wrapped her arms around me and hugged me back. I laid my cheek on her shoulder, murmuring,\n\n\"I don't know... I feel strange...\" I felt bad for lying, but how are you supposed to tell someone you were fucked by a vampire in an abandoned factory? She patted my back.\n\n\"Are you gonna be in class today or do you need me to pick up your homework?\" Becky knew better than to pry, just hugging me back and helping me calm down.\n\n\"Would you pick it up for me please? I'm not feeling well... I think I'm going to go lie down.\" Stray hairs tickled my face, the cool breeze stirring them into life as I looked down again. Becky was silent for a moment, before she made a little 'mhm' and began fishing around in her purse again.\n\n\"Here... If you're gonna get busy again you should keep some of these around.\" She held her hand out, a sample bottle of 'morning after' and a few Tylenol tablets in her hand. I rolled my eyes, holding out my hand as she deposited the pills into my palm. She grinned, pointing at the hickey.\n\n\"Next time girly, tell him to leave one in a less obvious place.\" With that, she shouldered her purse and turned on her heel. With a wave, she began walking back toward the main campus. I couldn't help a small smile as I began walking back to my dorm.\n\nA few minutes later, I padded down the hall toward my dorm room, the smell of heavy perfume and microwave popcorn coating the brick walls and tiles floors. Nobody else was around in the hallway; not even the custodian, who had finished cleaning the bathroom while everyone was in class. The strong smell of cleaning solution cut through the regular smell of the hallway; my dorm room was right across from the bathroom. The rubber soles of my shoes squeaked on the drab tile of the floor as I half turned, stopping in front of my door: Pulling my lanyard out of my pocket, I held up the brass key to my room and lined it up with the keyhole in the heavy old handle of the door. As I tried sliding the key into it, the heavy wooden slab slid open on silent hinges. I guess my roommate had gotten here first. \n\nAs I stepped inside, something immediately felt wrong, making the hairs on the back of my neck stand on end. A sort of cold chill whooshed past me, raising goosebumps in its wake as the door closed and locked behind me, seconds before I heard that terrifying voice...\n\n\"Hello, pet.\"\n\nMy feet seemed to freeze to the floor, my blood hardening into ice in my veins. There he sat, right on my bed as if he belonged in my dorm room. He smiled calmly at me, irises a deep, bloody crimson. The asshole was even leaning back a bit, his DC's kicked off his feet under my bed. He looked extremely casual and laid back, wearing a tight, long-sleeved, black T-shirt with grey swirling smoke patterns stained into the fabric. His jeans were ripped over one knee; probably an old, favorite pair.\n\nJust as quickly as it had come, the fear evaporated and was replaced by the growing anger and resentment brewing in the pit of my stomach. I stepped forward, muscles tensing as the rage and hurt grew. The man simply raised an eyebrow as I began to speak in a low, angry tone. \n\n\"Who the hell do you think you are, prancing around and taking what you want!? You make sick!\" \n\nThe bed creaked and I heard fabric scuff the floor; the next thing I knew, he had crossed the room in a trice, his hand was around my throat, and he pinned me roughly to the wall as his hips locked over mine. His inhumanly cold hand rested on the base of my throat, making sure I couldn't look away from him. Those eyes borred into mine and he leaned down, kissing me hard and hungrily. My racing mind halted, freezing up and going blank again as my eyelids fluttered closed. I didn't realize I was so tensed up until I started to relax, sighing softly through my nose. Even though his lips were cold... They were soft and comforting. \n\nHe chuckled quietly and pulled away, his hand moving from my throat to my cheek, the contact becoming more tender rather than dominating.\n\n\"I came because I was worried about you, darling. I do take care of my pet, you know...\" Pulling away from the wall, he pulled me into him and laid his cheek on my forehead. Though I really didn't want to be so close to him... He smelled really good and his body felt nice and solid against mine. Still, I was totally unsure what the hell to do, so I just stood there stiffly and awkwardly. It wasn't long before I decided to voice a question I had been pondering for quite some time. Speaking softly, I attempted to look up into his face.\n\n\"I don't even... Know your name...\" \n\nHe nodded, stroking my hair through his fingers in a strangely intimate gesture as he met my gaze.\n\n\"I'm sorry... I never told you, did I? My name is Kaleb.\" With a nod, I lowered my gaze from his intense eyes; even when he was relaxed, they sent shivers down my spine. I hadn't yet decided if they were from fear or something else; the second option was firmly shoved out of consideration.\n\nMy cheek nestled into his cool, firm chest and I almost laughed at how... Casual... This was. Him hugging me and stroking my hair like we were a couple. My anger quickly bubbled up again; I would be damned if I would let him win submittance from me so easily. I began struggling in his grip, putting my hands flat against his chest and trying to push him back, attempting to break the relaxed yet unbreakable embrace of his arms around me. Kaleb really didn't budge much, but it made me feel like I was accomplishing something. He looked down at me, raising an eyebrow at my fruitless struggles.\n\n\"Mm pet doesn't like my hugs?\" I glared up at him, frowning. I was sure my face was becoming flushed with irritation, because my cheeks felt hot from the rage I felt. My reply was much louder and contained a bit more venom,\n\n\"I'm not your fucking pet!\" \n\nThe vampire snorted in dismissal, his fingers threading more roughly into my hair and tangling into a tight grip on the base of my skull. Kaleb tilted my head back to look him in the face, some strands of silky black hair almost hanging over his dangerous eyes. His lips drew steadily closer to my ear as he spoke, the chill of his breath raising goosebumps over my flesh again.\n\n\"Yes you are, my girl. You said so yourself when you were screaming for me to fuck you.\" My cheeks grew even hotter at the memory, an involuntary shiver coursing down my spine and a tingling beginning to grow in the apex between my legs. I bit my lower lip, swallowing hard and looking back up at him. Those rich, crimson eyes looked back down at me, fully capturing my gaze as a small smile spreading over his lips. \n\n\"Mmm you remember now, don't you, pet? Remember how I felt inside you... How it felt to finally let go and submit to me...\" Kaleb's inhumanly cold hand began stroking down my side as he spoke, his fingertips caressing my thigh and leaving goosebumps in their wake while the other stayed firmly knotted in my hair. His fingertips traced down the side seam of my shirt and onto my hip. \n\nThey continued toward the inside of my thigh, wasting no time in sliding up and into my jeans. He gently hooked his index finger into my panties and tugged them to the side with ease to expose my sex. Chills ran down my spine yet again and my temperature rose in a mix of terror and excitement that was starting to become familiar. I shut my eyes tight, pressing my thighs together in an attempt to hinder his hand from searching any further. My voice was a small squeak when I spoke,\n\n\"Please... Please don't...\"\n\nThere was a silence for a few seconds before his hand withdrew from my pants. Kaleb's grip on the base of my skull relaxed and he combed his fingers through my hair, untangling them.after freeing up his hand, he wrapped that arm around my waist and pulled me closer, gently and lovingly. Opening my eyes, I saw his expression soften a bit before he lowered his face to mine and kissed me again, deeply. My heart stuttered in my chest and my knees went weak, trembling just a bit.\n\nHis other arm slid beneath my knees, pulling me up and laying me on my messy bed. The vampire climbed in with me, curling his body against mine and stroking my cheek as he pulled me tight against him. My scorching skin nestled against his chilled flesh. It was oddly intimate, but at the same time I couldn't have moved away if I wanted to. I was being cuddled... And dominated...\n\n\"Why are you fighting me, pet?\" He murmured quietly against my neck, nuzzling my pulse and brushing his lips over my earlobe. I closed my eyes, sighing softly and forcing myself to relax as I replied,\n\n\"Because I don't know... What to think of you...\" He began kissing down the side of my neck, his fang tips tickling my sensitive skin. His hands caressed my sides, brushing over my skin and sliding up underneath my tank top. I closed my eyes, my heart pounding in my chest and my nerves tingling. \n\n\"You're mine, darling. Your body knows it. You just need to accept it...\" Kaleb whispered against my neck, his right hand caressing over the soft skin of my stomach and his left caressing my thigh outside of my skinny jeans. \n\nI wanted to give in... What he said was true, but a stubborn, niggling part of my brain wasn't about to just submit to someone who was still more or less a stranger to me. \n\nHe nibbled on my collarbone, biting softly and scraping his sharp canines gently over my flesh. Goosebumps prickled over my skin, which was becoming more sensitive as he continued to tease it. The sound of his voice, close to my ear, back in the abandoned factory floated back into my memory,\n\n'I could kill you now if I wanted... Tear open your throat and drink your life away...'",
        "Kaleb's hand slid over my bra and he squeezed my left breast, his cold wrist pressed against my flesh over my racing heart. He was making it so hard to focus...\n\nWhy did he have to be so sexy...? The monster holding me to him was ruthless and willing to selfishly rape a girl because... What was his excuse... 'Because your scent was the sweetest I've ever smelled.'\n\nHis left hand pressed against the apex between my legs, his palm rubbing against the seam of my jeans and pressing it against my clit, using the texture of the fabric to tease me and make me more sensitive.\n\nMy eyelids fluttered shut and I must've moaned because he sighed against my nape and began kissing harder, his tongue darting out occasionally and swirling over my searing flesh. My skin was becoming sensitive enough that when a lock of hair shifted off my shoulder, I thought I felt each individual hair gliding lightly over my neck. \n\nI quickly began to forget why I ever wanted to fight this... It was so good... I didn't have any experience with sex, but I'd never known someone could totally just... Take over your own body...\n\nMy bra slid up beneath my tank and I felt him tug gently on my nipple, rubbing it and rolling the sensitive peak as he pressed on my breast. As he continued, my brain was becoming foggier as the wonderful, pleasurable sensations became my focus.\n\nThere was something... I wasn't... Supposed to do... Something I told myself... Not to feel around him... Some way I was supposed to act... Or not let him have...What was it...?\n\nMy jeans were now unbuttoned and the fly unzipped, his hand slipping into my panties and his fingertips sliding into my folds, using just the right amount of pressure in just the right places. \n\nFuck it. Whatever it was, fuck it... It was too good...\n\nI realized I had been making soft mewling sounds from his touches and moving my hips in time with his hand. My eyelids fluttered open and his tongue curled around my earlobe, drawing it into his mouth and sucking gently before he murmured into my ear,\n\n\"Close your eyes, pet... I love the sounds you're making...\" Without a second thought, my eyes closed again and I tipped my head back, laying it on his shoulder and turning my face so my forehead nestled into his neck, just beneath his jawline. His lips pressed against my temple and I felt him smiling against my skin.\n\n\"Baby girl you're doing so well...\"\n\nKaleb slipped a finger inside me and I arched my back a little, spreading my thighs and lifting my hips, inviting him in. His palm rubbed against my clit, his finger inside me quickly finding that sweet, explosive spot and rubbing at a maddening pace. Soft whimpering sounds poured out of my lips as I started panting, my mind blank as I gave in completely.\n\nI half-expected him to make some comment, but he stayed quiet and kept playing with me. His right hand kneaded my breasts, rolling and tugging on my nipples occasionally. Kaleb's hips pressed against my ass and I felt the hard bulge in his pants pressing against the back of my thigh. He began grinding on me, matching to my rhythm.\n\nIt was insane; almost like we were dancing, like sex with our clothes on. The other girls in the dorms talked about sex, but nothing like this...\n\nSuddenly, the amazing sensation withdrew as Kaleb pulled his finger out of me and moved his hand away from my sex. I groaned softly in disappointment, goosebumps rising along my hip as his chilled hand caressed over it. I felt the moisture on his fingers as he rubbed over my skin, leaving a wet trail across my hip. \n\nThe vampire hooked his thumb into my jeans, tugging them down slowly. My nerves had become so sensitive that I thought I could feel every thread in the fabric as it slid down my thighs, over my knees, and slipped off my calves and onto the floor. My panties were next, and he removed them with the same, deliberate slowness, teasing me. As my panties joined my jeans and the other rumpled clothes on the floor, the hand on my breasts stilled and withdrew, caressing over my stomach instead. \n\nThis was different than before... More couple-y. My heart began beating harder, my nerves on fire.\n\nKaleb murmured in my ear again,\n\n\"Turn around, pet.\" Nodding quietly, I lifted up on my elbow and turned, settling in to face him. His hands settled on both sides of my hips and he pulled me on top of him, hands sliding over my ass and down the backs of my thighs. He pulled my knees up, making my hips press harder against him. My palms rested flat on his chest, my nails grazing gently over the fabric of his shirt. I looked down at him, biting my lower lip and still feeling fuzzy-minded. He leaned up, kissing my flushed cheek,\n\n\"I'm going to take you again, pet.\" He murmured in my ear, speaking in a gentle but authoritative voice. My heart began racing, the need for more stimulation becoming greater as I felt the warm bulge in his pants pressing against my clit. Almost as if sensing my thoughts, he grabbed my ass again, pushing my hips down on his and making me grind. His erection rubbed and pressed against my clit through his jeans, drawing a moan from me and sending shivers up my spine. He cursed under his breath, kissing along my neck and almost devouring my skin. His fingertips dug into my skin as he gripped my hips roughly, squeezing them.\n\n\"I'm going to fill that tight pussy of yours. I'm going to make you scream my name and beg for me to let you cum.\" \n\nI squeaked a little in surprise as he flipped me over, pressing my chest into the mattress. My mind began to clear as I felt a little afraid and I looked back at him with wide eyes. His movements were fluid and almost predator-like as he undid his jeans and pulled them off, his gaze riveted to my ass. His jeans joined mine on the floor gone, his boxers rapidly joining them as he swiftly pulled them off. \n\nKaleb pressed his length against me from behind, the warm shaft of his cock nestling between my thighs. His crimson eyes flickered toward my face and caught my eye, the lustful expression on his face making me feel uneasy. I didn't dare move as he leaned down, stroking my spine gently and nuzzling my cheek.\n\n\"I won't ever give you more than you can handle.\" His cold hands rubbed my back and sides as he slid into me, slowly. I felt every inch of his cock, his shaft nearly forcing itself through my tight walls. I gasped a little, closing my eyes and spreading my knees. Kaleb stayed quiet, the only indication of his pleasure evident as his grip tightened on me while he continued slowly pushing deeper inside me. \n\nHe felt... So good... \n\nI couldn't stop a moan, my eyes closing as my head tilted back onto his shoulder. My arms and legs were shaky, trembling from both the pleasure and the growing unease in my gut. Kaleb grunted behind me, pushing in almost halfway before pulling back out and steadily rocking in deeper with experienced and smooth movements.\n\n\"Maria... You're so... Damn tight...\" He leaned down, kissing along the back of my shoulder as he began slowly and steadily thrusting in and out. I bit down on my lip a bit too hard by accident, the sting seeming to snap a little sense into me.\n\nWait...\n\nWait a second...!!\n\nWhat the hell was I doing!? \n\nI half-turned, looking back up at him with wide eyes, probably looking something like a terrified mouse trapped under the claws of a cat. My cheeks flushed with shame. He gazed back at me, a slow smile spreading over his lips.\n\n\"Oh, pet... You don't know what that look does to me...\" My cheeks flushed more as he cupped my chin, keeping my face in place as he studied me.\n\n\"Mmmm... That scared look... Those bright red cheeks...\" My stomach turned as my mind finally began to clear. How could I have just brushed aside the fact that only yesterday he had taken my virginity against my will!? I spoke out of anger,\n\n\"Stop touching me! Leave me alone!!\" Pulling my hips forward, his cock slid out of me with a muted, wet, sucking sound. My cheeks flushed a little harder as I tried to move quickly; I expected him to grab me and force me again. I scuttled out from under him, pressing my thighs tightly together and grabbing a blanket, hugging it to me to cover my nakedness from his intense eyes. I looked back at him with a mixture of disgust, fear, and sadness, becoming afraid of what he would do next.\n\nThe vampire's crimson eyes seemed to darken as he stared back at me, his pale, perfect face completely unamused as he sat back on his heels, making the bed creak in the process. His hands darted forward and he grabbed my wrists, pulling me roughly against him. I was left startled and not exactly sure what to do, as well as without cover because the blanket had slid off of me and collapsed to the floor. Altering his grip so he held both wrists in one hand, his other hand caressed my cheek with icy softness. He spoke softly, but there was no yield to his voice,\n\n\"I know I cannot force you to submit... But I will leave you with no other option.\"\n\nKaleb let go of my cheek, reaching past me and grabbing the end of my pillow. With a yank, the soft case came free and he immediately tied the fabric tightly around my wrists. I struggled, pulling in his grip and protesting weakly,\n\n\"Please...!! Don't...!! I'll be good...!\" His movements became less intense as he finished, my wrists bound and hooked on my headboard. My arms stretched above my head just like they had the previous night, though the chains and splintery table was exchanged for a twin bed and pillow case. The vampire paused and looked at me, the somewhat gentle expression came over his face again. His eyes left mine before he leaned down over the edge of the bed, his hand searching for something. I cringed, turning my face toward a bunched-up corner of my comforter and trying to hide my expression.\n\nWhy had I let this go so far...? Why had I given in so quickly...? \n\nWhy did I feel like giving in so badly...?\n\nThe bed shifted and I felt the air chill a bit; he must be leaning over me. A half second after I felt his hand brush between my thighs, my eyes popped open as I felt something cool and smooth slip inside me. Judging by the feel... It was 'U' shaped and fitted snuggly, both in and out of me. One end of the 'U' fitted snuggly around my clit, seeming to mold around it, while the other pressed along the frontal wall inside of my tunnel. I blinked in confusion, turning my gaze and lifting my head to look down between my legs. I saw just a bit of the object; it was a soft purple color and rather smooth. My heart rate began to pick up again and I started squirming with anxiety, making the bed creak beneath us.\n\nMy eyes flitted up to his face, seeing Kaleb's calm expression. He sighed quietly, reaching down and brushing his cool fingertips across the apple of my cheek, pushing aside some stray hairs that had fallen over my eyes.\n\n\"Calm down... I'm not hurting you.\" My heart beat so hard in my chest I thought it was going to explode. I couldn't let this happen again! \n\nI tugged harder at my tied wrists, hoping to loosen the knot in my pillow case and get free. \n\n\"Do you keep fighting me because you think it's wrong to give in? Like you think you're 'too easy?'\" His lips brushed my temple and his fingertips caressed over my skin, nails grazing ever so gently and raising goosebumps over my burning flesh. My cheeks redden and I nod, hoping perhaps I could try talking him out of it.\n\n\"I own you... You were meant for this, meant to give in to me.\" Kaleb shifted a little, kissing along my pulse slowly and sweetly. A little anger flashed through me.\n\n\"You sure as hell do not \"own\" me! I never said yes to you. I don't want this...!\" His lips pressed to mine, silencing my words to a muffled whimper as my eyes closed in reaction. It was the strangest thing... Kisses seemed so simple when you thought of it, but his kisses were so... Complex. This one felt firm and commanding, like a father restoring order between his squabbling children. My thoughts turned to mush once more and I relaxed, my mind calming... For the moment, at least.\n\nI felt him shift a little and he reached for something with his left hand. There was a muted 'click' and gentle buzzing sensations rippled through me. My brain realized that the 'U' shaped thing was causing it. So that's what that thing was... A sex toy. A small part of me felt sheepish for not recognizing it sooner. \n\nMy body started to relax from the pleasant vibrating, my cheeks flushing a little as I stilled underneath him. Kaleb's lips separated from mine and he pulled back, looking down at me. My eyes flickered open and my gaze settled on his face; I couldn't tell if he was angry or annoyed or upset... His expression was blank as he stared down at me, his left hand moving slowly into my line of sight. He held a small, black, round object and he toyed with it a little. With a small smirk, he angled the object so I could see the front of it; it was a remote. He circled his thumb over one of the two buttons, pressing it after a few moments. The buzzing became a little more intense and I sighed quietly, my hips squirming a bit. My cheeks felt like they were on fire and I closed my eyes. Not a second later, I felt his cool hand on my jaw, tilting my face up to his. His voice followed soon after,\n\n\"Open your eyes and do not close them until I give you permission.\" Just like his expression, or lack of, his voice didn't betray what he was feeling. It made me a little nervous, honestly... Not knowing the mood of someone who could easily harm you if they wanted was a pretty persuasive method in getting the desired behavior. My eyes opened again and I looked back up into his, biting my lower lip to hold back a small moan as the toy vibrated over both my clit and the strangely sensitive spot inside me. \n\nThe vampire's eyes were strangely beautiful... Like a sort of Wolfish beauty. His irises were deep, rich crimson. Clear and obviously intelligent. They drew you in but sent instinctual warning shivers down your spine. I did just that, shuddering a little. Goosebumps broke out over my skin; down my spine, around my ribs, over my shoulders. I thought I saw a small smile twitch at the corner of his mouth, but it was gone so quick there was a good chance I'd just imagined it. \n\nThrough the next several seconds, it became increasingly hard to keep my eyes open as the vibrations buzzed through me. My heart rate picked up, I began breathing a little harder. A soft moan escaped my lips and I started to close my eyes and tilt my face away from his.\n\nA sharp slap on the ass drew my attention real quick back to him. I groaned unintentionally, surprised that the sting quickly felt good.\n\n\"Kaleb...!\" My voice was small and I trembled a little, panting quietly as the toy pushed me perilously close to climax. I swear I saw something mischievous in his eyes a split second before the vibrations completely stopped. I was left with no stimulation of any kind and I was so close... \n\nFinally, what he said earlier made perfect sense. \n\n'I know I cannot force you to submit... But I will leave you with no other option.' My eyes widened a little and I finally understood. He was going to torture me with pleasure. The vampire's eyes sparked again and he allowed a small amused smile.\n\n\"You should never try playing poker. You will lose every time... Your eyes are so expressive, I can almost read you like a book.\" My cheeks flushed from the statement and I frowned. The tingling and needy feeling between my legs starting to fade. I don't care how long he was going to do this. There was a stubborn need I had to satisfy, I couldn't just lay down and take it... Could I?\n\nEven though that idea sounded oh, so incredibly tempting...\n\nI blinked and inwardly steeled myself; Kaleb's reaction was immediate. The vibration started up again and I gasped, shivering a little.\n\nI could feel moisture dribbling down my ass and getting into my bed sheets, my cheeks heating up. I started to close my eyes again and I felt another sharp sting, this time on the other side of my ass. The staring contest continued as I started getting closer to climax again, my knees turning to jelly and my breath quickening. I thought perhaps this time I would catch a break and come quickly before he stopped the buzzing, but just as I teetered on the edge, the vibrations cut off again.\n\nI groaned in frustration; how long was he going to keep going??\n\nHe leaned down and murmured in my ear.\n\n\"As long as it takes... I have all day and all night. We can keep going until then, Maria. It's your choice.\" I bit my lower lip, panting lightly and squirming, trying to rub my thighs together, trying to grind, anything. I was so close...\n\nKaleb gripped my knees and held them apart just enough so that I couldn't squirm. I was starting to get desperate. \n\nI felt tears well up as I looked at him pleadingly, my whole body tensed and restless. He'd only denied me climax twice in a row and I was a mess. \n\nHe sighed and kept his grip on me, looking me in the eye and keeping that same expressionless face.\n\n\"You don't have to torture yourself like this. You know what you need and your body is screaming for it.\" He leaned close to my ear, the ends of his long hair tickling my cheek. \"Just give in, pet...\"\n\nI looked back at him, almost trying to tell him just exactly why I couldn't simply 'give in' with my eyes. A few seconds passed and his shoulders seemed to sag a little. Kaleb set the remote down on the bed and he cupped my cheek, the more compassionate look coming back to his face. \n\n\"Maria... What is it that you want to hold on to so badly? I need to know.\"\n\nThat stubborn streak came back and I briefly thought about completely shutting down and not answering... I quickly realized, however, just how foolish that would be. I took a shaky breath, the aching between my legs starting to fade again.\n\n\"Because you never asked me what I wanted. You just assumed... You just... Took.\" My cheeks flushed again and I looked over at the inside of my arm, not wanting to look at him. Kaleb's fingertips pressed against my jaw and he turned my face back to his. His face was still and expressionless, but looking at his eyes told a different story. There was a lot going on in his mind. An awkward silence hung in the air for a while before I spoke again, not sure what his reaction would be.\n\n\"I don't... Well... I didn't want this, Kaleb. I can't just 'give in' because you took something valuable from me and you didn't seem to care how that would affect me... Today you came into my damn dorm room and just... Came on to me again... Without asking what I wanted...\"\n\nKaleb continued staring down at me, going inhumanly still again. Several seconds passed, the only sound of my heart beating hard and my soft breathing breaking the silence. His intent stare was pretty unnerving and I couldn't help but feel like I was wrong in what I said. I was about to look away and start tugging at my tied wrists again when he caressed my cheek, pressing a tender kiss to my forehead. He spoke quietly.\n\n\"Oh Maria... Why can't you understand that your body is mine?\" My cheeks reddened, my heart beating harder from indignation. He continued, his voice gradually getting harder. It was clear that I had angered him,\n\n\"You gave it to me when you decided to explore that factory and came into my domain. You gave it to me when you screamed my name and came all over my cock. You know as well as I do that you want this.\" His hand wrapped around my throat, not squeezing; it was more if a dominant gesture. He leaned down, murmuring in my ear, \"You are mine. The sooner you realize that, the more your situation will improve.\" \n\nNot a moment later, I heard the remote click and the toy began vibrating full speed again. My cheeks redden more and I moan quietly, biting my lower lip and pulling at my wrists. Kaleb stared down at me, his crimson eyes glowing a little. ",
        "By the time the cycle had repeated five times, I was so sensitive the vibrations almost hurt; I felt empty inside, like I needed him deep within me to soothe the aching need. There was a puddle forming under my ass from my juices as they dripped out of me. My ass was nearly bruised because I had tried to shut my eyes too many times... I couldn't take it anymore.\n\nKaleb raised the hand with the remote as he shut the vibrations off. My eyes were a little watery as I looked up at him, shaking and nearly panting with need. He raised an eyebrow, looking down at me. I licked my lips, speaking quietly,\n\n\"I can't... Take any more... Please...\" A smile tugged at the corners of his lips as he stared down at me, making me feel small and a little childish. \n\n\"Tell me what you need, pet.\" The vampire leaned down, pressing kisses over my forehead and down my temple. My flesh was blazing to the touch and the coolness of his skin was a small comfort. My cheeks stayed heated as I slowly started to say the words that I'd shoved back for the last hour. \n\n\"Please... I need you to...\" I hesitated, wanting to fight it but wanting to give in more than anything. He looked down at me seriously.\n\n\"If you don't ask, it won't happen and we will continue this cycle...\" I squeezed my eyes shut tight and received a sharp slap on the ass. I gasped and quickly said the rest. \n\n\"I need you to fuck me...! Please...\" After a second, I tagged something on the end, hoping to maybe make him less annoyed,\n\n\"... Sir.\" \n\nA small smile spread over his lips and the vibrations started up again. I started to panic, thinking he was going to keep teasing me. I started to protest, looking up at him pleadingly. He smiled down at me, one of his hands reaching down and out of my sight line. I felt his tip pressing to my entrance a second before he slid deep inside of me. I came hard, finally just getting enough stimulation as I felt myself stretching. \n\n\"You may close your eyes.\" My eyes closed gratefully and my head tipped back, my spine arching and toes curling as the best orgasm I'd ever had washed over me. I faintly heard him groaning deep in his throat,\n\n\"God, Maria... You're so... Tight...\" My spine stayed arched, a long and shuddering moan pouring out of me. He gripped my hips, changing the angle before he began thrusting in and out of me; the combination of how much he filled me and the vibrations dragged the orgasm on for what felt like forever. My heart hammered in my chest, my nerves on fire and my skin scorching, a thin layer of sweat coating my flesh. It was almost too much; I writhed beneath him, my head straining back into the pillow as my eyes rolled up in my skull beneath my closed eyelids \n\nKaleb kept moving slowly inside of me, rhythmically working his length deeper and stroking his tip over the vibrating end of the toy, resting against that explosive bundle of nerves inside me. My body was going limp as I started to come down from the climax; there wasn't any fight left in me. I couldn't form thoughts anymore. Slowly opening my streaming eyes, I realized he had been watching my expression as he kept moving within me. \n\nHe smiled, some of his long hair falling in his eyes as he reached down, pulling the toy out of me and setting it down somewhere outside my field of vision. I gasped, still feeling the echoes of the vibration in my nerves. His hand was there next, his fingertip rubbing around the sensitive little bud but not actually touching it. I was glad... If he tried rubbing on my clit, I may have screamed. Smiling, Kaleb looked down at me and kissed my forehead tenderly, planting little, soothing kisses over my temple and just beneath my ear as his hips continued the steady pace. His breath puffed against my skin like light kisses as he murmured, \"I'm not sure you should scream, pet. Other girls down the hall will hear you. Do you want them to know how good I'm making you feel?\" My cheeks reddened more and my lips parted as if to retort. I hadn't thought about that... I couldn't let them hear; if the girls heard me they would label me as a slut. As he spoke again, I heard the grin in his voice. \n\n\"But maybe you should let them know... Let them know you are mine. Let them know how good it is when you give in to me.\" He kept talking, murmuring dirty things like that in my ear. I didn't think it was possible, but I got turned on again from his words. My body reacted to his deep voice and his touch and I moaned quietly, my cheeks blazing red. He nibbled on my earlobe, flicking the tip of his tongue over my skin before continuing. He told me how good I felt and how proud he was of me that I gave in 'like a good pet.' His hands gripped my hips, pulling them back into his thrusts as he began to get rougher. \n\nHe made me come again, the pillow case stretching and the stitching creaking a bit in protest as I tugged on my wrists, my spine arching and curving my body into his, my knees spreading, my hips twitching against his. I moaned his name, panting and writhing a little beneath him as he continued, his thrusts continuing to pick up speed. Kaleb moved one hand to the back of my thigh on my right leg, just below my knee, and pushed my leg up toward my chest. I couldn't fight him if I'd wanted; my limbs felt like they wouldn't obey me anymore as I completely gave in. He thrust quickly, his head rubbing harder and faster on that sweet spot, hitting it harder and more thoroughly in the position. Mewling noises poured from my mouth as I panted and trembled under him, hoping to God the girls next door didn't hear me. I opened my eyes a little, breathing hard and looking up into his eyes, almost begging him to stop as I felt another orgasm building up.\n\nLooking down at me, a little sweat beaded on his temples; he panted quietly and claimed my lips in a hungry, passionate kiss. His cock twitched inside me and I moaned against him, shaking a bit and tugging at my tied wrists. His hands held my leg firmly in place as he thrust quickly, a few more times, before burying his length inside me and erupting. I shook, climaxing again from the sensation of my trembling inner walls expanding, trying to keep in his seed. He kept kissing me as he emptied out, nibbling my lip occasionally and using gentle but firm kisses. His cool hands left my leg and hip, letting my lower body relax. They slid up my sides, leaving goosebumps in their wake as the lovingly caressed my hot, sweat-slicked skin. He panted quietly, kissing my neck beneath my ear and purring against my hairline, \"You've pleased me today, pet.\" I closed my eyes, turning my head a little and pressing my cheek to his forehead; I didn't think I could talk anymore. I was starting to feel sore already... Raw and a bit overused. \n\nHe smiled, kissing my temple as he reached up with one arm. I felt him tugging at the fabric as the pillow case loosened from my wrists, losing all its tension as he untied it. I didn't move my tired limbs after they had been freed. I just... Laid there, nestled in the rumpled comforter and pillows as he lay on top of me, still inside of me. I stayed limp, completely exhausted and with an empty mind after getting thoroughly fucked. Kaleb stroked my cheek, supporting some of his weight on his elbows as he kept me nestled beneath him. There was silence for a bit, before he kissed the dark hickey in the crook of my neck and smiled, speaking quietly. \"You're going home with me tonight, pet.\""
    ],
    "authorname": "Tarasueme_19",
    "tags": [
        "college student",
        "tied",
        "toys",
        "vampire",
        "withholding orgasm",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/taking-my-darling-maria-ch-02"
}