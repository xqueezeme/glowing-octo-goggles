{
    "title": "Voluptus Ludum Ch. 03",
    "pages": [
        "Authors Note: It's finally done! I can honestly say this will be the longest chapter and took forever for me to write. I am also working on a new one shot for the fun of it and am hoping to have it done soon. The Goddess will be the next to continue so I hope you will check it out and give me some feedback. As always constructive criticism is appreciated and I'm willing to accept ideas. Hope you all enjoy reading this as much I did writing it.\n\n*****\n\nThe next morning Emily awoke feeling lethargic, yet undeniably great. Turning over in the soft bed, she felt someone's breasts against her's. Opening her eyes she saw the sleeping face of Rebecca Black, her cheeks and lips covered in dried cum. Memories came flooding back to her, of how she had won her first battle, of how she received Rebecca's goddess given deck, and her eternal servitude, then how she came here. There was one part of her memory that stood out, and as she remembered, her cock began to rise. The night before began to play through her mind.\n\nRebecca led her to the master bedroom, which was enormous, easily as big the living room, with a king sized bed in the middle. Emily looked around taking in the astounding beauty, yet the strange bareness of the warm, with barely any furniture around, aside from the bed, and bedside table. The walls were painted white, and had no pictures, awards, nothing to decorate them. On the wall opposite the bed, was a sixty inch tv, yet that seemed to be all.\n\n\"It's a little bare isn't it?\" She said it as a question.\n\n\"I'm, what you could call, a social girl. It was rare that I'd sleep here, so I never bothered with decorating it.\" Rebecca explained.\n\n\"Where'd you sleep?\" Emily asked.\n\n\"Wherever the guy lived.\" She stated matter-of-factly, to which Emily stared at her open mouth.\n\n\"What?\"\n\n\"How many people have you slept with?\"\n\n\"Um... about two or three dozen; they just kinda melt into one another, so I don't really know. Don't worry babe, I'm clean.\" She added upon seeing the shocked, almost horrified, expression on her mistress's face.\n\nEmily wasn't sure how to process that. During the battle she'd acted on instinct, and she liked to think that she did pretty well, but after hearing how experienced her servant was by comparison, she didn't feel too confident anymore.\n\n\"Mistress? Are you okay?\" Rebecca asked.\n\n\"Uh, yeah. I'm fine.\" She replied, not too confidently.\n\n\"If I may ask Mistress. How many people have you slept with?\" In reply Emily hung her head, her face turning bright red.\n\n\"The battle was the first time I've engaged in sexual activity with anyone else.\" She whispered.\n\n\"I'm sorry Mistress. I couldn't hear that.\"\n\n\"I'm saying I'm technically a virgin.\" Emily said louder, keeping her head down.\n\n\"Oh.\" Rebecca said flatly, then added: \"That's not a big deal. You've got all the power you need to have a good time.\" To demonstrate, she walked to her mistress, and her hand reached to caress the now deflated cock.\n\nEmily looked up at her servant. She was smiling, a spark of lust in her eyes, as she stroked the object of her desire through Emily's sweatpants. Desire began to build within Emily, but she knew there was one thing that she wanted to do, before hand.\n\n\"Rebecca.\" Her servant looked at her, lust dancing like fire in her eyes.\n\n\"Get me my deck. I'll need it to fuck you so hard; you'll never desire anything but me.\" Emily already knew that Rebecca, desired only her, and would until one of them died, but it was the only excuse she could think of. She wanted to fuck Rebecca, she wanted her to inflate with her cum, wanted to mark her every crevice with her seed. Rebecca was her servant, and she wanted everyone to know it.\n\nRebecca practically ran down the stairs, and began searching frantically for her mistress's deck, while Emily sat on the bed. The desires were somewhat terrifying, simply from how extreme and powerful they seemed, she didn't know why she wanted to fuck Rebecca so hard right then, but she knew that it was somehow right. I'll fuck her, and cum in her until she looks heavy with my child. The thought came unbidden, yet Emily accepted it, she knew that she had strange fetishes, and this was just one of them. To her inflating someone with nothing but cum was so hot that she felt her cock stand to full hardness, leaking it's own desire to fuck Rebecca.\n\nSoon the servant had returned. Handing Emily the deck, her mistress looked through it, until she found two cards. One's illustration was of a petite elven girl, stroking a cock that looked as thick and long as her body, all the while spewing a fountain of thick cum. The other was an equipment card, which changed the wearer's whole body, making it like elastic, allowing them to take more powerful blows with reduced damage. Emily smiled at the two cards, her eyes shining with lust that seemed to call out to them. She sent Rebecca to find her own mat.\n\nUpon her return Emily laid the two mats out. On Rebecca's she placed the equipment, and on her's the futanari. Emily had no idea if it'd work, but she assumed that Sors Nepellus would guess what she was up to and grant her this favour, if only this once. To her surprise, Rebecca began moaning and fell before her; Emily knew this confirmed that it had worked. Immediately after Rebecca came under the card's effects, Emily did too, crying out as she felt her cock grow impossibly large, quickly growing upwards, through her shirt, before poking into her chin, and then rising beyond. In a flurry of movement, Emily tore her shirt and sweatpants off, allowing her cock room to grow. It finally stopped at an impossible length of 32'' and a girth of 4''.\n\nRebecca stared at the pillar of sexual majesty as it rose before her and her mistress's gaze. She felt apprehensive about taking that into her body, yet she felt her pussy practically pouring with it's juices, her mouth watered as she watched a large drop of pre-cum drool down it's incredible length. Unconsciously, she licked her lips. Emily noticed her servant's lust, and didn't intend to deny her. Using a strength she had no idea she had, she stood, her cock standing high above them, before it flopped down, almost hitting Rebecca.\n\n\"Suck it.\" Emily ordered. Her slave looked to her, then the cock, fear and lust warring in her eyes. Soon her mistress's command and her lust won the war.\n\nShe kissed the tip, licking up the flowing pre-cum. There's no way I can take this thing in my mouth, she thought, even as she kissed and licked the head. A minute later her desire to take this beast inside was too much, opening her mouth as wide as possible Rebecca pressed forward, feeling, to her amazement, the head sliding almost comfortably into her warm orifice. A muffled moan escaped her as she tasted more pre-cum, as it flowed from the tip and onto her waiting tongue. Knowing what she needed to do, Rebecca began to push forward, feeling the head pressing past her uvula and into her throat. Her hand went to the bulging flesh to caress her mistress's cock through her flesh.\n\nEmily sent a silent prayer of thanks to Sors Nepellus. Thanking her for letting this work, and giving her a chance to do the impossible, speaking of which: Rebecca had forced almost a foot past her lips, and she showed no signs of discomfort, nor any loss of lust. Inch after thick inch slid past her lips, across her lustful tongue, past her uvula, and down her clenching throat, the head now poking against the entrance of her stomach. Rebecca's system tried to reject the strange object trying to force it's way into her stomach, but the clenching of her oesophagus only worked to pleasure Emily, as she began to force more in. The head now entered the stomach.\n\nRebecca's eyes opened wide, as she felt her stomach being violated by her mistress. The stomach acids had vanished, Emily noted and thought it to be a side effect of the card, or the meddling of a certain goddess. She didn't think on the subject too long, as she continued to push, aiming her cock away from her slave's body, and to her own. The elastic body happily stretching outwards as she pushed little over two feet in. Feeling a now familiar sensation in her gut, she knew her climax was fast approaching.\n\n\"You want my cum?\" Emily moaned as she forced yet another inch inside. Rebecca could only moan in reply, but the futa took this as 'yes'.\n\n\"Then get ready bitch, 'cos here is comes!\" With a shove so powerful, were she not elastic, Rebecca would've died, the impossible cock hilted inside, it's shape completely obvious as it pressed outward, the head clear as day, as was the hilt. Emily began to cum the moment her groin met her slave's nose.\n\nEmily had an idea of how much she might cum, yet that was shattered as she felt what could be an ocean flood forth into her slave's eager stomach. In an instant Rebecca's stomach looked as if she had swallowed a beach ball, and with her mistress's cock plugging the upward exit, the cum had nowhere to go, but through her lower body. Flooding her intestines, it soon forced its way into her anus, before flowing forth, coating her floor in thick semen. Rebecca had never looked so happy before.\n\nFortunately the orgasm didn't last very long. After roughly six spurts of semen, the climax petered out, leisurely drooling a near constant stream of cum as Emily pulled her slightly deflated cock from her slave's heavily distorted body; it looked as though she were heavy with twins. Once free a small fountain of cum exploded from Rebecca's freed mouth, coating her mistress's thighs in her own fluid. Despite the massive climax, Emily's cock had barely softened, and was returning to it's full glory as it's owner gazed at the lustful mess her slave had become. Her cock soon stood to full attention.\n\nEmily stared in amazement at her cock. It stood like a pillar of desire, hanging over her slave's head, whose eyes looked up lazily, unable to keep her gaze away from the object of her desire. Neither of them felt any apprehension now, only the need to fuck, and fuck, and fuck, until the sun set and rose once again, or at least until they were exhausted, though when that would be, neither of them knew. Rebecca was still leaking cum everywhere, panting as her body continued to receive pleasure, simply from being filled it's master's cum. Emily wasn't patient enough to wait though.\n\n\"Get on your hands and knees.\" She ordered. Rebecca couldn't say no, not just because she could hardly breathe with the cum still flowing up her throat, but because she didn't have the will to. Her body knew what it's mistress wanted of it, and it was all too willing, even if it might kill her, though a part of her knew it wouldn't. Soon she was on her hands and knees, presented both her ass and pussy to her mistress. Emily took it all in.\n\nNot wanting to forget, even though she knew that there'd be many more opportunities to see this, Emily basked in the sight of her servant. The cum flowing out her puckered asshole, coating her pussy and thighs in Emily's viscous fluid. Her ass was delightfully rounded, making it clear how well Rebecca took care of her body, and Emily couldn't resist reaching out and roughly massaging them, delivering the occasional smack, which brought a loud moan from the servant's mouth. Then she spied the leaking pussy. \n\nEmily had never been interested in women before, but then again, she hadn't been particularly interested in sex until recently, yet she found her mouth practically watering at the sight of her servant's begging pussy. Leaning in, she took a deep breath through her nose, basking in the scent of her slave's arousal, before taking a slow lick along her swollen labia, up to her engorged button. Both moaned in ecstasy, as Emily spread her lips apart, revealing in the sight of her servant's slick cunt, before forcing her tongue deep inside, moaning louder at the concentrated taste of Rebecca's bittersweet juices. Her cock was leaking a small river of pre-cum now, begging for attention.\n\nRebecca could feel the stone pillar of flesh throbbing against her torso. She looked down, gasping as her mistress lapped at her pleading cunt, and saw the head was practically eye level. Noticing how it seemed to beg for it's own pleasure, Rebecca obeyed it, opening her mouth wide once more, and forcing the head inside, her tongue playing with the large slit at it's tip, earning a large dose it's delightfully thick pre-cum, causing her to moan loudly, despite the large object filling her hungry maw. It didn't take long before she felt her own climax building.\n\nEmily could feel the added lubrication as her partner neared her climax. Getting a more concentrated dose of her bittersweet juices, Emily went to work with even more gusto, if that was possible; she clasped her lips over the swollen clit, lapping at it with her tongue, while she penetrated Rebecca with three of her fingers, squirming them around until she heard a particularly loud moan from her willing captive. They worked the other to orgasm with a frenzy not even animals could rival.\n\nWhen Rebecca came they both discovered that she was in fact a squirter. At that point, Emily had her mouth planted firmly over her cunt, using her nimble tongue to penetrate as deeply as she could, and as such received a mouth full of pussy juice, forcing her to swallow just before another refilled her mouth. The taste set Emily off too. She rammed her hips forward, jamming as much of her cock as was possible into the relatively small gullet of her servant, and relished the feeling of her throat stretching around her girth, just as wave upon wave of magical sperm shot forth and overfilled the slave's stomach. Once again it travelled through her system.\n\nEmily was practically in heaven. The taste of Rebecca's cunt juice, while cumming as hard as before, was indescribable. It amazed her how much cum a single human woman produce, as she continued to squirt more and more pussy juice, filling and refilling Emily's more than willing mouth. Then she received an unexpected gift. Unknown to her, the cum she was shooting had travelled through Rebecca's intestines, and now her anus mimicked her pussy, squirting a thicker fluid all over Emily's face, pasting her eyes shut and making her curious as to the taste of her cum, mixed with Rebecca's ass. Removing her lips from Rebecca's still cumming cunt, she locked them over her asshole, just as another wave of her semen came. Never before did she think such a taste existed.\n\nEmily's mind went blank. The taste of her cum, shooting into her gullet via another woman's asshole was indescribable, in fact it sent a shock wave of ecstasy through her still cumming form, sending an even greater surge of cum into Rebecca's body, which soon filled Emily's. It was a never ending cycle, that is until the climax ended, having already lasted two minutes, and never showing any signs of slowing, though the volume of cum was far lower than the last time, no doubt due to the recent orgasm. This time leaving Rebecca looking as though she were only carrying one child.\n\nEmily pushed Rebecca off, panting as the sensations of the afterglow washed over her. Rebecca was also panting, though more for oxygen then from the pleasure. Noticing this, Emily decided to see if there was a card that let her breathe even when her airways were blocked; to her surprise, there was one. Using it, she decided to test it out, her cock once more standing at it's goddess given glory. Once again, Rebecca was filled with all 32'' of cock meat, and once more she was forced to directly ingest gallons of cum, adding to her barely deflated stomach, making it seem heavy with triplets. During it however, Rebecca had no trouble whatsoever breathing. Experiment successful.\n\nIt almost seemed demonic now. Despite three orgasms, all in fairly quick succession, Emily's cock was almost at it's full glory once again. Rebecca, having caught her breath, and regained some of her motor-functions, stood and bent over, presenting her still leaking ass and pussy to her mistress, no, her goddess. She opened her mouth, letting a small river flow over her lips, and gurgled:\n\n\"Please fuck me mistress.\" There was no way in hell Emily would say no to that.\n\nLining up her cock, which still glistened from Rebecca's spit and her own cum, most of which Emily herself had licked off, needed no further lubrication to enter the leaking pussy. Without warning, Emily rammed her phallus inside, and almost came on the spot. Despite only getting ten inches in, before meeting any form of resistance, Emily couldn't believe how amazing it felt, and she wanted more. Pulling back a single inch, she punched forward, ploughing through her slave's cervix and entering her tight womb, but even then she continued to push onward, aiming her cock at such an angle that it bulged from her impossibly elastic flesh, and almost reached Rebecca's mouth, before Emily stopped, wanting to rest and take in the awesome sensations. Nothing they had done before even compared to this.\n\nThey remained still like that for a single moment longer, before Emily couldn't resist anymore and began to move. The bulge of her cock retracting, only to lurch forward, completely filling the altered woman and granting her pleasure beyond either of their imaginations, making her cum faster than ever before, her juices squirting around the impossible girth plugging her clenching cunt. Both were crying out in pleasure, though Rebecca's overshadowed Emily's, raising octave after octave. Emily felt her orgasm growing, and stopped moving briefly. Rebecca looked down, her expression one of exhaustion, yet her eyes were filled with need for more.\n\n\"M...More...\" She managed to pant out, her voice hoarse from the constant throat fucking. Emily didn't need to be told twice.\n\nDespite the fact that her cock had stretched Rebecca's stomach to her chin, there was still several inches of delightful cock meat waiting to fill her further. With wild abandon, Emily lifted Rebecca, her cock helping support her, before moving her to the bed, where she spread the slave girl's legs wide, granting full view of her impossibly stretched pussy, and of the remaining foot of Emily's cock. Without warning, Emily pulled back, before thrusting forward with all the strength she could muster, forcing inch after pleasurable inch into Rebecca's cunt and womb. The altered woman went silent as the flesh of her abdomen stretched over her eyes.\n\nSoon Emily was pulling out as much as she could then thrusting back in. Each time Rebecca would cry out in unending pleasure, she laid flat against the bed, unable to lean up due to the protrusion stretching from her stomach. Getting a sudden idea, Rebecca waited for Emily to pull out slowly before lifting her head as much as possible, and opening her mouth wider than ever before. She aimed it perfectly, and when Emily thrust in once more at full force, Rebecca's tautly stretched skin entered her mouth. She moaned at the feeling of having her mouth once more filled with something.\n\nEven through her taut flesh Emily could feel Rebecca's tongue, lapping at the tip of her cock. It was easily one of the most intense, and indescribable feelings she'd ever felt, and with it came a feel of heat, building in her body. She knew it to be her orgasm, and began using short, erratic thrusts, her cock never leaving the hungry maw of her servant. With a cry she felt her cum begin shooting up her length.\n\nShe pulled back enough that Rebecca couldn't reach it. She watched as her cock pulsed rapidly, and with pulse it would deliver at least a litre of thick cum. Her cock had created a watertight seal, meaning that no cum could escape her womb, causing it to inflate, growing and growing until she seemed heavy with twins. But even then it continued. The constant spurts always delivering a litres worth of semen.",
        "Rebecca watched through lust hazed eyes. As her stomach continued to grow, becoming monstrous in it's own right, almost seeming to contain toddlers rather than infants. She should've been concerned about this, seeing as how a normal woman would've died from the sheer amount, but she trusted her mistress with her life, and only felt pleasure as her abdomen increased in size. As the spurts began to decrease in amount, she had one last orgasm. One so powerful she fell unconscious.\n\nEmily pulled completely out of Rebecca, spraying the inflated woman with the last of her orgasm. At last she felt sated, as she surveyed her handiwork she couldn't help but feel slightly amazed. Rebecca's pussy leaked a constant flow of cum, but even then her stomach hardly shrank. Emily scooped up a handful and was once again amazed when she FELT the sperm wriggling on her hand. She probably should've been concerned about this, but the recent orgasms had made her mind almost unable to process this fact. She studied the thick, jelly like cum in her hand and grew curious as to the taste of something so absolutely thick. Sticking out her tongue, she lapped up what she could. Instantly she was taken by the taste.\n\nDespite having tasted her juices before, this was on an whole new level. It was indescribable as she planted her lips over the leaking hole of her unconscious slave, lapping up as much as she could, and almost experiencing an orgasm from the combined taste of Rebecca's bittersweet juices and her cum combined. Her cock quickly returned to it's full glory, leaking copious amounts of pre cum. Reaching a hand down, she tried her best to stroke it, her hand barely getting halfway around the demonic girth. Still she felt more pleasure, as the addictive jelly like cum coated her taste buds, a hand on her cock and the other on her breasts, kneading and pinching the sensitive flesh, she could feel yet another orgasm building. Just as it began to shoot up her length she stood, and aimed it around the room, acting on another wild impulse. After that she couldn't stay awake any longer and fell beside Rebecca, falling asleep quickly.\n\nBack in the present Emily was stroking herself to another orgasm. She felt Rebecca get up beside her, but couldn't care as pleasure raced through her entire body, until she felt a hot mouth engulf the tip, sucking up the pre-cum pouring from it.\n\n\"Oh god!\" Emily cried and thrust once, cramming a foot of her length down her servant's throat, who only looked at her with joy in her eyes. Once again Rebecca was fed gallons of semen, and she loved every minute of it. After that the two surveyed the damage to the room.\n\nThe walls were white to begin with so nothing seemed different there. However the bed, bedside tables, lamps, and other various items were painted in cum. Emily picked up a discarded shirt and found it to still be damp, dripping with her semen, and the massive tv had it's screen hidden behind a wall of drying cum. Rebecca whistled in astonishment.\n\n\"We really did a number on this place huh?\"\n\n\"Yeah.\" Was all Emily could say in reply. They sat like that in silence when Emily's stomach growled loudly.\n\nRebecca giggled lightly and said that she'd go and make breakfast. Emily offered to help, but Rebecca told her that she wanted to please her mistress through more ways than just sex. Deciding not to push the subject, Emily just nodded and laid back, feeling the bed sheets and mattress squelch beneath her. They'd have to do something about that, she thought, and remembered that she needed to reduce her cock back to normal, seeing as how it was hanging by her shins, despite it's flaccid state. The mats were strangely immaculate, as though not a single drop of cum had touched them. Shrugging it off she removed the largest futa card and replaced it with the smallest. She also removed Rebecca's.\n\nShe then headed downstairs. Upon reaching the cavernous living room she noticed Rebecca's goddess given deck, and began to look through it. All the creatures were anthropomorphic lifeforms, while the equipment cards seemed to be centred around making them stronger and immune to power reduction. Running back up stairs, she grabbed her deck intending to possibly add anything to it from the new one she'd received. As she placed it down she remembered that she was still naked and coated in cum.\n\nA quick shower later she wished for her clothes, and seeming to react to her will Emily's suitcase full of clothes was right outside the bathroom. Once dressed she went back to work on her deck, taking out a few less usual equipment cards and replacing them with new ones.\n\n\"What'cha doing?\" Emily heard Rebecca ask as she sat beside her, naked as the day she was born, though still coating in dried cum, however this didn't seem to bother her in the slightest.\n\n\"Just modifying my deck.\" She said and Rebecca leaned in closer, her large bust pressing against Emily's arm, \"A-anyway don't you need a shower?\"\n\n\"Yeah.\" She said and stood, about to leave before turning back and, with a seductive smile she asked, \"Would you like to join me?\"\n\nEmily looked at with longing, but decided that she didn't want to get so dirty so soon.\n\n\"I'll pass for now. But I'll be sure to make it up to you later, 'kay?\" She added upon seeing the disappointed expression of her servant's face, which lit up at the promise.\n\n\"I look forward to it. By the way, could you finish up with breakfast?\" With that she left for the shower. Emily could smell breakfast quite clearly, and followed the scent to the kitchen. It, like the rest of the house, was immaculate, what wasn't however was the food. Rebecca was clearly not a cook, which went with what she had said earlier about rarely sleeping here. In a frying pan were some eggs, but they were burnt beyond helping. There was also some horridly burnt toast as well.\n\nSighing, Emily went about throwing out the ruined meal and preparing a new one. She didn't quite have the energy to prepare something extravagant, so she settled for recreating the eggs and toast that Rebecca had tried at. When it was almost done, she heard Rebecca walk up behind her.\n\n\"Damn that smells good. I'm amazed you can cook this stuff.\" She noted and Emily noticed that she was only wearing a towel, one that was wrapped tight around her bust. Turning her gaze away she replied:\n\n\"It's not that hard when you have to live alone.\"\n\n\"That reminds me, why did you live alone?\" Emily looked down at the eggs, which were now ready, as was the toast.\n\n\"Breakfast's ready.\" She said, trying to dodge the subject. Rebecca seemed to understand and didn't press the matter.\n\nThey ate in silence, except for Rebecca occasionally complimenting Emily on her cooking despite the simplicity of it. When they'd had their fill, Emily went about putting the dishes away in the dishwasher, while Rebecca left to get dressed. As she did her mind wandered to the reason why she lived alone; back to those painful memories.\n\nThroughout her childhood Emily had been alone more often than not. Her parents hardly had time for her, and would often leave her alone even at the age of eight. They would call babysitters, but they were grumpy old men or women, who clearly would prefer to be anywhere but there. She was raised to be quiet, something her parents and babysitters considered very pleasant, but made her seem weird at school, where the kids were often loud, speaking their minds freely. She only spoke when spoken to and wouldn't look anyone in the eye, afraid of the only gazes she knew: contempt, disappointment, or uncaring. That was all she knew for so long.\n\nWhen she turned entered high school she had no friends nor confidence in anything except studies. Her family would buy her only the essentials, clothing, school books and bags, and food. They didn't give her pocket money, despite having more than enough money to do so, and it was more a fact that they would simply forget, and she was too timid to remind them. Around this time her parents marriage was becoming strained, which quickly turned to divorce. After this her life became slightly better.\n\nEmily's father got custody of her and they began to talk more. They chose to live in an apartment similar to her future one, however it cost far less than the house, allowing her father to work slightly less often. She couldn't remember what he did, but he was good at it. He took her out places from time to time, asked if there was anything she wanted from the stores, and how school was going. It was as though all the contempt he had exuded before just went away. To Emily this was a good life.\n\n\"Hi babe. I have something for you!\" Rebecca said as she hugged Emily from behind, jolting her from her memories.\n\n\"Wha-What is it?\" She asked surprised.\n\n\"I made reservations at this restaurant for dinner. It's supposed to be really good, and it has private booths for couples.\" She explained excitedly, licking her lips sensually at the last part.\n\n\"You didn't need to-\"\n\n\"Oh, I know.\" Was all she said, cutting Emily off. She just shook her head lightly, grinning all the while.\n\n\"Well then, what should we do now?\" Emily asked.\n\n\"I have a few ideas.\" Rebecca said suggestively. Emily's grin widened at this and she felt her cock stir in her jeans.\n\nSeveral hours later Emily and Rebecca were in the restaurant, in a private booth. Emily couldn't help but look around in wonder at it all, having never to been to such a high end restaurant before.\n\n\"This place is amazing.\" She marvelled aloud.\n\n\"Yeah I guess,\" Rebecca replied, clearly used to a place like this. She leaned closer to Emily and whispered in her ear; \"But I can think of something far more amazing.\" Before her mistress could say anything, Rebecca ducked under the table and set about freeing the monster contained within Emily's jeans.\n\n\"Rebecca!\" She whispered sharply, \"We can't do it here. This is a public restaurant!\" The last syllable came out as small cry of pleasure, as she felt Rebecca's cool hand grasp her warm, flaccid cock.\n\n\"Hello ma'am. I'll be your waitress this evening, can I get take your order?\" A private room would be nice, Emily thought as Rebecca stroked her, bringing her cock to it's full glory.\n\n\"Uh, I'll have the, uh, salad!\" Her voice rose an octave as her servant's tongue lapped at her dripping tip.\n\n\"Very good. I swear you had someone with you, will she be back soon?\" Oh god, if only she knew, Emily thought.\n\n\"She, uh, told me that she'd like the, uh-\"\n\n\"Same, but with lots of dressing.\" Rebecca whispered up to her.\n\n\"She'd like the same, just, ah, with extra dressing.\"\n\n\"Ma'am are you okay? Your face is red.\" She asked with worry.\n\n\"Don't worry, I'll be fine once I get some water please.\"\n\n\"Right away.\" With that the waitress left, with their orders, and letting Emily breathe a sigh of relief, which turned into a gasp of pleasure, as Rebecca engulfed her head in her cock hungry maw.\n\n\"We're gonna get caught if we're not careful!\" Emily whispered frantically.\n\n\"Then we're just gonna have to finish before anyone suspects anything.\" Rebecca replied and suddenly took several inches of Emily's throbbing cock in her mouth and down her throat.\n\n\"Alright if that's the way you want it.\" Emily said and reached under the table to grip Rebecca's head on each side, before she could formulate a response she was pulled done the entirety of her mistress's cock, forcing her throat to stretch around it's girth. Emily kept her there for several seconds, until Rebecca tapped her hands, signalling that she needed air. Waiting a few more seconds, which brought her servant to the brink of unconsciousness, before pulling her off, and hearing her gasping for breath, the heat of her breathing rushing over her slick cock, bringing a small moan from Emily's lips. Without warning she pulled Rebecca back down.\n\nEmily struggled not to yell out in pleasure. Rebecca was slobbering wildly over her cock, while her tongue lapped at whatever it could, combined with the swallowing motions of her throat, it was a miracle Emily hadn't cum yet. But she could feel it building quickly. She moved Rebecca so that her mouth only engulfed her head, while she moved a hand to jerk herself off, her hand flying thanks to the amount of spit that coated it.\n\n\"Here it comes!\" She whispered, her voice filled with enough passion that it seemed to echo through the room. With that she moved her hand back to Rebecca's head and pulled her back down, where she fired the first all powerful shot. It was a miracle no one heard her.\n\nThe spurts were slightly audible, despite the head being buried deep down Rebecca's throat. But that was beyond their care at that moment; all that mattered was the sensation of cumming, and being filled with cum. As the orgasm reached the halfway point, by which Rebecca was practically drowning in cum, her body no longer having the elasticity it had before, forcing rivers of white to flow from her mouth. Meanwhile, the waitress returned, carrying the two's orders.\n\n\"Ma'am, are you sure you're okay?\" She asked as she placed the meal down. Another powerful spurt further overfilled Rebecca's stomach, causing a large amount to erupt from her filled mouth. The waitress heard that and, rather than wait for an answer, she crouched down, pulled up the table cloth, to reveal Rebecca, her eyes rolled back into her head, and her lips stretched around what could be a third arm. This seemed to overwhelm the waitress, who stood back up and walked away, her expression strangely blank.\n\nSoon after Emily's orgasm had come to an end. After cleaning the delightful tool of all it's cum, Rebecca sat back on her seat, her make-up smeared with cum and sweat. Pulling out a handkerchief, she wiped herself down, and proceeded to eat her second meal, despite her stomach being so full it was slightly bloated.\n\n\"She saw you, you know.\" Emily stated.\n\n\"I know, but this restaurant and it's staff know me, and they know I often bring men here. In fact more than a few have already seen me giving head under the table.\" She explained calmly.\n\n\"I guess if you say so... What if she's new though?\" Emily asked, worry still thick in her voice.\n\n\"Did you have a chance to read the card description on the one you used?\" Rebecca asked out of nowhere.\n\n\"No, but-\"\n\n\"It says that it produces pheromones to attract the desired sex. Meaning that since you desire the female sex, your body is producing pheromones to attract them. In short, she's probably attracted to you, in fact,\" She looked over at the waitress, who was dealing with a nearby table, \"I think she definitely is.\" As if on cue, Emily looked over at her, and met the woman's eyes. They were filled with lust, so powerful that it rivalled Rebecca's, or even Emily's. An idea popped into her head.\n\n\"Wanna take her home with us?\" Rebecca simply smiled her most seductive smile.\n\nOnce we were finished, we called for the waitress. When she arrived, it was clear that she was flustered and that desire waged unending war against her control, though with us in her gaze it clearly gained strength. I could practically smell her wet heat growing.\n\n\"You know, you're pretty good looking.\" Rebecca stated, causing the waitress's blush to deepen.\n\n\"Th-thank you.\" She stuttered, her voice low and slightly husky.\n\n\"What's your name?\" Emily asked, her mind's eye seeing past her uniform, through the underwear, and picturing her kneeling before Emily's massive tool.\n\n\"Alice. Alice Fae.\" She introduced herself. Realising that she wasn't doing her job she showed them the bill, to which Rebecca pulled out a large wad of cash, no doubt more than enough to cover the bill two times over.\n\n\"I have to ask Alice,\" Rebecca said as she carefully placed the necessary amount down.\n\n\"What?\"\n\n\"How horny are you right now? After seeing my Mistress's massive cock shoved down my throat, pumping it's thick cum into my stomach?\" Alice could obviously remember the scene in detail, as her breathing sped up. Emily leaned closer, her cleavage very clearly exposed.\n\n\"I have my own question: Do you want to see it again?\" The waitress's eyes flashed at the offer.\n\n\"Oh, god yes... but I don't get off work for another hour.\" She said, obviously unhappy about it.\n\n\"Don't worry, I know your boss, one minute with me and you'll be coming home with us.\" Rebecca said, and, not giving the young woman a chance to reply, left to 'talk' with the boss.\n\n\"I'm sure you'll enjoy tonight very much Alice.\" Emily said with grin akin to the Cheshire Cat's. They sat together while they waited for Rebecca to return.\n\n\"By the way, Alice, do I know you from somewhere? You look familiar.\" Emily looked the woman up and down, while going through all the people she might have met recently.\n\n\"I was thinking the same thing. It's like I saw you in a dream.\" Only now did Emily notice the slight German accent. She thought back to the day twelve women were all gathered by Sors Nepellus, and among them was a silver haired, German girl by the name of Alice. Putting two and two together Emily looked at Alice closely, going through every detail she could remember and finding that her appearance matched the memory.\n\n\"I didn't think any other participants were in America.\" Emily said and saw the recognition flash in Alice's eyes.\n\n\"I thought I recognised the two of you. How have you been?\"\n\n\"Good. It's not easy adjusting to all that's happened, but it's been seriously fun too.\" Emily response was tinted with lust at the memories.\n\n\"Hey, have you tried any of your cards yet? Or did you choose to have the creatures be separate?\" Emily asked.\n\n\"I haven't even touched that deck. I'm almost afraid of what might happen. But I choose to turn into the creatures.\" She answered, then asked; \"Wait, does that mean you used them? Is that why you have that cock?\"\n\n\"Yeah!\" Emily answered enthusiastically.\n\nRebecca came back at that moment.\n\n\"Sorry that took so long, damn bastard tried lasting longer than normal. So, ready to go?\" She asked, turning to Alice.\n\n\"Actually, I think I'll pass tonight.\" Alice got up and went to leave, but Emily stopped her,\n\n\"Oh no you don't. I said you'll enjoy tonight, and I meant it. Don't you want to see what we can do?\" Emily asked, gesturing to herself and Rebecca.\n\n\"I-I, uh, I don't-\"\n\n\"Trust me Alice; my Mistress can make you cum harder than you've ever imagined.\" Rebecca stated, her voice husky with desire.\n\n\"Mistress? Does that mean she-\"\n\n\"Yes, we fought and I won, making her my sex slave.\" Emily said matter of factly, then added; \"Don't worry that won't happen to you, not unless we're called to play and I win... which I will anyway.\" She added under her breath, a brief shadow passing over her eyes.\n\n\"I-I guess I can then...\" Alice said, sounding young and almost lost; very different from how she had originally seemed.\n\n\"Great! Let's go.\" Rebecca said excitedly and the three left, Mistress and Servant grinning in anticipation, while Alice looked about nervously, despite the lust raging within herself.\n\nIt took all of twenty minutes to arrive back home. Alice was obviously shocked into silence as she walked up the long pathway leading to the mansion, her mouth agape and her eyes wide as she took in the scenery, despite the darkness. She had calmed down a little upon reaching the front door, but that quickly changed as Rebecca opened the door to Wonderland. Alice almost fell back at the strong scent of what was obviously their earlier activities. Though it disgusted her somewhat, another side of her couldn't help but get excited.\n\nWalking inside the place was immaculate. If not for the smell of sex, one might never have guessed the filth that had just hours earlier been committed within this place. Alice stared around in wonder, taking in everything as though it were the most beautiful sight she'd ever seen, even the simplistic coffee table seemed to interest her. Or it might have been what currently sat on that table: A Voluptus Ludum deck. Alice's eyes soon found it.",
        "Emily walked over to it and lifted the deck in her hand. She smiled down at it fondly, once again remembering the debauchery the cards had introduced her to. Turning to Rebecca and Alice she held out the deck, and said:\n\n\"Take a look. Go on, it won't bite.\" She added seeing the hesitation on Alice's face. The young German reached out with a shaking hand and took the deck, then, still shaking, she did as Emily had said, going through the deck and taking in the absurd imagery before her. All of the cards were erotic in some way, and they seemed to emit something... a scent, she thought and breathed deeply, trying to discern it, and the longer she in took the scent the stronger it became, though she came no closer to knowing what it was. What she did know was the heat building within her very being.\n\nAlice stopped shuffling through the deck. Her breathing becoming pants for air as her body heat grew too intense for her to handle, causing a need to remove her stifling clothes to overtake her mind. Emily took the deck from her, just as the German girl began tearing at her clothes, almost ripping her shirt in two with her need to be freed. Rebecca came up behind her, holding her hands down, calming Alice while she began to skilfully remove her dishevelled attire. Emily looked on, slowly stripping herself down, teasing Alice with her sensual display. Soon Rebecca was the only still clothed.\n\nEmily stepped up to Alice. The German still seemed unsure, despite the raging lust inside her, forcing her nipples to reach their peak, while her engorged pussy practically dripped with excitement.\n\n\"It's okay,\" Emily said soothingly, \"I'll be gentle.\" Alice shuddered as she felt the transformed woman's finger trace the shape of her full lips, then travel down her soft throat, to her large mounds, before reaching the sensitive bullets at their peak. Meanwhile Emily's arousal was beginning to further show.\n\nRebecca watched her Mistress as she explored the new girl. She felt no jealousy toward Alice, only a longing to be touched as she was, but knew that her turn would come in due time. The German girl still seemed to be hesitant. That's to be expected, Rebecca thought: She doesn't know the pleasure my Mistress can give her. As she thought this she noticed Emily's cock begin it's ascent, filling with blood to its full glory, though still nothing compared to what it was just that morning. Rebecca felt her pussy moisten in memory.\n\nEmily could feel her shaft filling with blood and knew what she wanted this beautiful foreigner to do.\n\n\"Alice,\" She whispered gently, despite the lustful undertone. Alice replied with a small moan, then a sharp cry when Emily forced her to her knees, bringing her eyes level with the pillar of masculinity.\n\n\"Kiss it baby.\" Those words... those... awful words... the thoughts echoed through Alice's mind, almost hurting her. She turned away from the phallus, but Emily gripped her head, turning it back to face it.\n\n\"Just kiss it.\" The pain rose sharply, and images flashed through her mind. She heard incoherent words being spoken within her mind, they sounded soothing, yet only caused the agony to rise. Silently, Alice began to weep.\n\nEmily quickly noticed something was wrong. She had expected this to be easy, with Alice only resisting slightly, before giving in, but she continue to fight back. Thinking she needed someone to be in control, Emily took hold of her head, and turned her to face the throbbing poll, then she saw it; a single tear streaming down her cheek. Instantly she let go, shock completely wiping all lust from her features. Alice fell back due to the sudden release.\n\nBoth Emily and Rebecca stared at the weeping girl, shock and concern etched into their faces. Alice laid there, still and unmoving, save for the occasional quiver that ran through her body.\n\n\"A-Alice? Are you alright?\" Emily asked, kneeling down to place what was for supposed to be a comforting hand on Alice's arm, yet it seemed to bring a very different reaction. From her frail position Alice rose, a look of pure rage on her face, yet within her eyes was a fear that neither Emily, nor Rebecca could hope to fathom at the time.\n\n\"Fuck off! Just leave me alone! I don't to do this anymore! No more...\" She trailed off at the end, simply lowering her head and sobbing lightly. Mistress and servant looked on as she grabbed her clothes and left the mansion.\n\nThe two looked at each other. Neither could think a word to say after that, each trying to figure it out in their own minds first\n\n\"I'm gonna see if she's alright.\" Emily finally said and redressed, leaving Rebecca to her thoughts. Outside she saw Alice walking down the long pathway.\n\n\"Alice wait!\" She called out, but the girl either didn't hear her or didn't want to, as she continued to down the path. Breaking into a run, Emily caught up to her quickly.\n\n\"Alice, please wait. Please, just tell me what's wrong.\" Emily said, concern thick in her voice. Still Alice didn't stop.\n\nActing on pure emotion, Emily stepped in front of the silent girl. And wrapped her in her arms. Almost immediately Alice began to struggle, but Emily held strong, soon the girl began to shout for her to let go, which faded to sobs of protest, but still Emily held her.\n\n\"Shhh, it's okay baby. I'm here; you're safe. Nothing's gonna hurt you. Shh, that's it.\" Emily said, her voice taking on a motherly tone, as she attempted to calm Alice down. The German's struggled stopped shortly, and her strength finally gave out, her legs falling from beneath her, while Emily lowered her down, never releasing her.\n\n\"I won't let anyone hurt you.\" Emily stated, though she knew that it wouldn't be possible to do so. The two stayed like that until Alice seemed to cry herself to the point of exhaustion, falling asleep in Emily's arms. She carried the unconscious girl back to the house.\n\n\"Is she alright?\" Rebecca asked as Emily laid the sleeping German on the couch.\n\n\"I don't know. I hope so, I just wish I knew why she reacted that way.\" Emily looked to Rebecca who shook her head. Glancing at the clock on the wall, they realised how late it was: 12:30AM. Deciding to take it up again after getting some rest the two returned to their bedroom, which they had cleaned during earlier, though the scent of their activities still remained, albeit very faintly. There the days events played over in their minds, before the need to sleep pulled them under. Throughout the night Emily continually woke up, feeling a chill run up her spine each time, as though she had woken from a horrible nightmare, except she couldn't remember anything. Each time she took several minutes before calming down and falling back to sleep.\n\nWhen morning came and her biological time clock told her to wake, Emily sat up. Heavy bags were under her eyes, despite the bright glow her face naturally had. She looked at Rebecca whose face was toward her, and she smiled, seeing the cat like grin on her servant's face; it eased her somewhat. Running a hand through her hair, Emily's thoughts found their way to yesterday. Instantly she sprung from bed, thankful that she'd forgotten to undress, and rushed downstairs, hoping that Alice had yet to wake. With a sigh of relief she saw her still sleeping.\n\nEmily sat on the arm of the couch. She watched Alice, who, not too long ago, had looked so distraught and filled with rage, now seemed as calm as still water, yet Emily knew this meant she could be easily disturbed, even by the lightest of touches. The comparison seemed strangely prominent to Emily, who almost believed that Alice was just like still water, calming and unmoving, but so easily disrupted. Feeling somewhat calmer, Emily went into the kitchen to prepare breakfast, assuming that Alice would no doubt be hungry when she woke, since she hadn't seemed to have eaten anything since yesterday. She quickly set to work.\n\nStretching much like a cat Rebecca awoke feeling completely refreshed, if a little horny. Reaching to her side, for her Mistress's lovely cock, she felt nothing but velvet sheet. Slightly alarmed by this, she bolted into an upright position looking around desperately for Emily. Getting out of the bed, she ran down the stairs, panic almost setting in, but then she caught the scent of eggs and bacon being made, and her racing heartbeat settled. Even though her reaction was somewhat strange, Rebecca never questioned it, knowing deep within that she needed her Mistress now and forever, yet she never consciously acknowledged this fact. Seeing Alice on the couch, she remembered the events from the day before, and understood why her Mistress had woken up so early. Walking into the kitchen, Rebecca saw Emily preparing their breakfast with quick, practised movements. It almost shocked her that someone could do that.\n\n\"What's cooking?\" She asked, breathing in deeply through her nose, her mouth watering at the scent.\n\n\"French toast, bacon, cereal, y'know whatever we want.\" Emily replied, turning to greet her servant. \n\n\"Of course, if Miss Millionaire wants something more fancy, we can order out?\" Raising an eyebrow in an teasing manner.\n\n\"Anything you make is worth the world to me Mistress.\" Rebecca chuckled and placed a small kiss on the cook's lips, who returned the favour with greater passion. Her hands moved unconsciously to the prominent bulge in her Mistress's jeans.\n\n\"Wait.\" Emily said, and pushed her back lightly, \"We'll continue this later, it just wouldn't feel right, you know? With Alice and all...\" She blushed lightly, causing Rebecca to once again chuckle.\n\n\"Alright, I can wait. But not for long.\" She added as a whisper in Emily's hear, sending a shiver of want down the Futa's spine.\n\nLess than five minutes later and the food was ready. As if in response to this, Alice began to stir, groaning and mumbling about five more minutes, as though the previous days events hadn't happened.\n\n\"C'mon sweetheart, time to wake up and eat.\" Emily said. Alice turned away and grumbled, but then she sniffed the air, her hunger manifesting in a loud growl from her stomach. Almost instantly the groggy girl was wide awake and scanning the room for food. Then she saw the two women nearby, one holding a plate of food out for Alice, while the other was seated and eating like a ravenous wolf. The memories came back to her in a flood, causing her head to spin and fall back into the soft embrace of the couches cushions. She laid there gasping for air, before calming herself and sitting back up.\n\n\"I-I'm sorry about last night.\" She said, seeming to refuse to make eye contact with either one of them.\n\n\"Don't worry about it. You hungry?\" Emily asked, putting on a small smile. The young girl took the plate with surprising speed, and was soon eating away, only pausing to say how good it was. When all the food was devoured, she leaned back, a contented smile on her face, and looked at the two expectedly.\n\n\"What is it?\" Rebecca asked.\n\n\"Aren't you gonna ask about last night?\" Alice replied.\n\n\"Not unless you want to tell us. We won't pry.\" Emily said, despite the curious look in Rebecca's eyes, she knew she must follow her Mistress's decisions. Alice sighed in relief.\n\n\"Thank you.\" A brief silence fell over them then, before Emily broke the silence.\n\n\"Do you want to play a game?\" Alice looked up, brow furrowed in confusion.\n\n\"What game?\"\n\n\"Voluptus Ludum of course!\" The other two looked at her, shocked that she'd offer such a game.\n\n\"But our decks-\" Rebecca began.\n\n\"We can go out and buy some new ones, besides we need something to pass the time.\" Emily said, but Rebecca knew that if she could, her Mistress would be plunging deep into her depths at that very moment. But she wouldn't, not with Alice there.\n\n\"I guess we could.\" Alice said, still unsure of this.\n\n\"Well then, when you're ready, let's go!\" Emily said, obviously excited by this little excursion.\n\n\"I'll be upstairs taking a shower.\" Rebecca said, blowing a kiss to her lover before ascending the stairs, leaving the German and the Mistress alone. The two sat in somewhat awkward silence for several moments.\n\nAlice was first to break the silence.\n\n\"My father would abuse me...\" Were her words, shocking Emily, who looked at the girl unable to completely comprehend the words.\n\n\"What?\" She said, unable to grasp what was just said to her.\n\n\"Before I left home for America, my father would either beat me, or force me to... you know... suck his dick.\" She explained, tears forming and her cheeks flushed red, both from embarrassment and pure, unadulterated hatred.\n\n\"Alice, I-I don't-\"\n\n\"And sometimes not just me, my mother was always a large target. But the difference was that I think she enjoyed, I could hear them sometimes, at night. The sounds of him hitting her, and her crying out in pain, yet begging for more. I think he thought I was a submissive masochist as well.\" Alice sounded strangely calm saying this, despite the tears now streaming down her cheeks and falling from her chin. Her lips began to quiver.\n\n\"When I was old enough to leave, he tried to stop me... he-he choked me, but not with his hands.\" Her hands went to her throat, as though the phantom of a cock was still lodged there. \"I fought back though, I bit him. I drew blood. Then I punched him in the nuts... the feeling of causing him pain was marvellous, but even then I was still horrified of him; he wouldn't stop shouting at me, saying I was his, that I wouldn't survive without him. And my mother just stood there, not saying anything, almost as though she agreed with him. So much happened, but I'm here now, and that's what matters, right?\" Alice finally finished, a small smile spreading on her face. Emily stared at her in stunned silence.\n\n\"I'm so sorry.\" She finally said. It was all she could think to say; even with everything that had happened in her life, that was far worse, at least Emily had been in a home, but Alice... Emily couldn't bare to imagine the hell she was put through.\n\n\"Don't be... It's in the past now, or at least, it should be.\" She said obviously remembering last night.\n\n\"If you don't mind, but you seemed so tough when I first met you, I didn't think anyone would even think of messing with you.\" Alice chuckled lightly.\n\n\"That was the plan. Not long before I left... that place... I began working out, training in martial arts and the like, but it was never enough, I was too scared of him to fight back, until the final day. I began to dress that way to scare others away, but then I found Voluptus Ludum.\" She looked up, as though her memories were playing on the ceiling and smiled fondly.\n\n\"I overheard people talking about it at a previous job. I became interested, and bought a deck. Then I played for the first time and I was hooked. I began to take longer hours at work to get more money so I could build up my deck, and finally I was good enough to travel back to Germany and win the nationals. Life was going so good for me, so much so that I'd practically forgotten about everything, but then my mother contacted me. She wanted to make it up to me apparently, telling me that she'd left my dad, and was deeply sorry for everything. The problem was that I had already heard, my dad was arrested for... shall we say, beastly deeds, and wasn't getting out anytime soon. All of their money was taken, and she had nowhere else to go. I had a lot of money after the nationals and I didn't really need that much, so I gave her some and told her to never talk to me again. Then a few weeks later after I came back here, Sors Nepellus came. You know the rest.\"\n\nWith that the two fell into total silence. With the exception of Alice, who would sniff occasionally and wipe the tears from her eyes, while Emily absorbed what she had been told.\n\n\"Why would you tell me? Don't think I'm being rude or anything, I'd just like to know.\" She finally asked.\n\n\"Because, for some reason, I feel safe around you. Like nothing ever happened.\" Alice answered. Does this have anything to with Sors Nepellus? Emily thought, knowing that real people don't just open up the way Alice did, not to someone who was essentially a stranger. Yet she couldn't care if it was the meddling of a Goddess, or the power of her cards. Emily was glad that Alice seemed to trust her.\n\n\"Alice, th-\" Just then a voice they knew all too well rang through their minds.\n\n\"The next match is about to begin: the participants are Emily Ralia, and Alice Fae.\" The two women looked at one another, before a sudden wave of vertigo hit them and they fell unconsciousness.\n\nThe two woke and found themselves in the field where Rebecca and Emily had previously battled. With the one difference being that Sors Nepellus was absent, in her place was her representative.\n\n\"Once you are ready you may begin.\" She said and Emily looked on the other side of the field, seeing Alice looking around, in awe of where she was.\n\n\"Why am I playing again already? Shouldn't it be two others?\"\n\n\"The selection process is entirely random, Miss Ralia, it just so happened that you were chosen twice.\" Yeah right, Nepellus probably had a hand in the selection process. Emily thought and returned her attention to Alice.\n\n\"What's going on?\" Alice asked, her voice small yet seeming to carry over to Emily.\n\n\"You are going to play each other.\" The representative calmly stated, \"The winner will receive the other's deck and eternal servitude.\" Alice looked to Emily in horror.\n\nShe really didn't want to do this. Emily shuffled her deck, but her mind was against this whole heartedly; Alice also wanted no part in this, but Sors Nepellus wanted them to play anyway. Despite her lack of enthusiasm, Emily was resolved to win. Alice was also shuffling, but was shaking and unsure of herself, constantly looking at her deck, as though it would leap out of her hands and attack her. Once done they placed their decks done and began.\n\nEmily went first. She now had a better idea of what she wanted to do, and went ahead with a similar strategy from the last battle, and summoned a high power monster, the same from her previous battle. The now familiar sensations coursed through her, as her body transformed from it's busty human form to a demonic beast with a feminine figure, while also sporting a phallus as long as a human's leg.\n\n\"I also equip the Lustful Armour, coursing my enemies creature to lose one thousand power if it's female or futanari. That's all for now.\"\n\nIf everything had shocked Alice before, then this blew her away. Despite feeling as though she wanted to look away, she couldn't tear her eyes from the sight before her; of what Emily had become, and the cock between her legs, hanging halfway to the floor, despite the straight legs being over four feet long.\n\n\"M-My move!\" Alice looked through her hand, and took in the cards for the first time. As she did so she felt a rush of heat shoot through her body. All the cards were of women, but they were clad in black leather, latex or nothing at all, simply holding a dildo shaped sword or whip. They were high in attack power, but none had a skull count of ten, meaning had nothing to summon. Unable to do anything, Alice ended her turn.\n\nDrawing Emily looked at the poor girl with pity. Without anything on the field, she couldn't do anything to protect herself, meaning Emily was able to go straight in for the kill. Choosing to do nothing, Emily attacked. It wasn't like before, where she fucked her target, Emily simply jumped to Alice and swiped her, dealing her one damage. The creature didn't physically attack her, however Alice could feel the wind from its powerful swipe, and was thankful that it didn't hit her. After the attack Emily ended her turn.\n\nAlice drew and breathed a sigh of relief as the card had a skull count of nine. She summoned it and cried out as a flood of sensation coursed through her form. The change was less dramatic than Emily's, the woman retaining her human form, however Alice's clothes disappeared, only to be replaced with tight latex, decorated with spikes, while her breasts, ass, and hips grew, bulging forth until the girl had what seemed like impossible proportions. Lastly a whip materialised in her hand.",
        "\"That was incredible!\" She cried, looking down at herself, a smile on face at the sight of her latex clothed body. Before the feelings could go to her head she refocused on the game.\n\nHer creature still needed more power to beat the enemy. Her's only had eight thousand, seven due to the power loss, but its ability and the equipment in Alice's hand should change that.\n\n\"My creature's ability activates. When my opponent's creature has male genitals and is more powerful that my creature, during my turn, your's loses three thousand power, however at the end of my turn I must pay one damage, or your creature gains three thousand during your turn. Next I equip it with Dominatrix Strike, this raises my creature's power by one thousand for every damage I've lost, giving it enough to attack. Here I come.\" Alice leapt through the air, cracking her whip as she did so, before landing in front of Emily and slashing the demonic futanari. Alice leapt back and ended her turn.\n\nEmily looked at Alice. The girl was completely different to how she was before, laughing quietly with glee, no doubt from the damage inflicted upon Emily. Having chosen to pay a damage counter, Alice's creature gained another thousand power, making it almost level with Emily's. Despite this Emily chose to save her better cards for later, and declared her attack on the transformed Alice. Once more Emily didn't fuck the creature, but slashed it with her claws. This put the creature up to ten thousand power constantly, but Alice was done to seven damage. Emily ended her turn.\n\nAlice drew and looked through her hand. All of the cards, besides equipment, were skull counts of six or below. Like Emily, Alice simply attacked, dealing another damage and paying another at the end of her turn. Alice's creature was constantly at eleven thousand power, making it far stronger than Emily's, who knew she had to keep pushing, in hopes for a fast resolution, at least for Alice's sake.\n\n\"I play the Incubus Armour.\" Spike tipped armour appeared and covered Emily's body, though it left her cock completely on display. \"Now, should my enemy orgasm, they take one damage and my creature gains five hundred power, however it loses two thousand during my opponent's turn.\" Alice looked at her in shock.\n\nDespite feeling somewhat sorry for the girl Emily knew what she needed to do. Her transformed cock rose to its peak, easily as long as a tall human's leg, dripping with anticipation of the hole it would soon fill. Forgive me, Emily thought and leapt, her pre dripping and leaving its mark behind her. Soon she stood before the stunned German, whose latex clothing hugged her flesh so much, that her nipples were clearly visible as they engorged with her arousal. With a single swipe of her claw, Emily tore the latex away, revealing the naked flesh beneath. She took a single second to take it all in.\n\nDespite wanting to enjoy the sight before her, Emily had a battle to win. Lifting the young woman as easily as though she were a small child. Emily brought the girl's petite pussy to her lips, where her transformed tongue stretched out, saliva dripping as much as her pre. She then lowered her prey, until her pussy and Emily's tongue met; this alone caused her to cry out in surprise and pleasure. Then the real challenge began, as Emily penetrated Alice's barely wet cunt, her saliva more than enough to lube the way, as its length travelled further and further, until reaching the door to her womb, without obstruction, which surprised Emily, who had assumed Alice to be a virgin. At that point Emily began her true ministrations.\n\nAlice could hardly believe the sensations coursing through her helpless form. She could feel the monster's tongue so deep inside, to the point where she was certain it would enter her uterus, but even then she felt nothing but pleasure. She wanted more of it, yet a side of her warred against the violation, unwilling to give in to the pleasure now surging through her. As the two halves of her mind fought for control, Alice felt the tongue begin to shift, bringing still more pleasure to set fire to her nerves, causing her surprisingly large clit to engorge and beg for attention. Emily was all too willing to oblige.\n\nSeeing the clitoris present itself to her, Emily retracted a few inches of her flexible appendage. Remaining still for seconds, causing Alice to writhe and moan in annoyance, only to manoeuvre her tongue in such a way that, upon sliding back in, it rubbed delightfully against the pleading clit, while stretching Alice's pussy to the point her G-spot was under near constant assault. Her pussy was positively pouring its juices now, and Emily could taste it all, the desire for more egging her on further. It took all of thirty seconds, before the German was announcing through screams that she was about to cum. Retracting nearly a foot of her tongue, only to fiercely thrust it back in, Emily brought the technical virgin to her first true orgasm. They both enjoyed the screams of her climax as though it were music.\n\nUpon completing her attack, Emily put Alice done, much like a doll, and leapt back.\n\n\"That's my turn. Alice?\" Emily asked, seeing that her opponent had yet to stand back up. Just when she was about to ask again, she stood.\n\n\"That was... incredible.\" She said under her breath, before drawing. Knowing that she needed to deal further damage, Alice remembered her damage count was at 5, and she knew what must be done. Selecting the most powerful creature in her hand, Alice replaced her current form, her moist pussy dripping in anticipation of the change to come. As she expected, it was incredible.\n\nEmily could hardly believe her eyes. The scared girl she knew from before, quickly transformed into a creature so beautiful, yet so terrifying, Emil had little doubt she'd probably see it in her nightmares. Whatever it was that Alice had become, it greatly resembled a succubus, but with the most ridiculous bust size imaginable, the mountains easily hiding her lower torso completely, despite this their shape was completely perfect, with hardly any sag, just enough to appear semi-real. Then her hips further grew, making Emily think about how easy it might be for Alice to give birth now, while her height increased to make her growth seem less comical, her ass also ballooned out, becoming a bubble butt, yet seeming as perky and tight as before. Still more changes continued to happen to her opponent.\n\nHer face changed the least. Losing any level of masculinity it had before, while plumping her lips up slightly. From her forehead two small horns grew, each one being no more than an inch thick at the base, and two inches long at most. Across her arms spikes and horns grew, some less than an inch long, while others seemed as long as the arm itself. Then she opened her eyes. Despite the fact that Emily shouldn't be all that surprised by what she saw, it still shocked her into complete awe and silence. Alice's once warm green eyes had turned to a blood red, that seemed to swirl as though it truly were blood, yet they seemed almost lustful, rather than hostile, and strangely hypnotic. Not wanting to take chances Emily looked away quickly.\n\nThis was absolutely amazing! Alice couldn't help but think this as her body once more underwent considerable changes, becoming impossibly more powerful. She could practically see Emily, lying before her, completely submissive to her will, ready and eager to please her Mistress. Alice couldn't hold back the smile that crept onto her face, the image in her mind already had her pussy dripping with anticipation. Alice's creature was far weaker in raw power than Emily's, boasting a mere 4000, but the futanari knew better than to assume that was all it had.\n\n\"I equip myself with the 'Submission Control Whip'. This causes my opponent's creature to lose five thousand power at all times, and gives it to mine, I also recover one damage each turn, but your creature now deals three. Now, I attack!\" She cried, her voice carrying an overwhelming amount of lust.\n\nThe following was a blur to Emily. First Alice was in front her, the German's transformed eyes gazing into her's with unbridled lust, and then Emily was on her back, cock standing to attention much like a pillar.\n\n\"Such a big cock...\" Alice moaned, as she knelt beside the futa, her hands encompassing as much cock as they could, however her fingers fell miserably short of meeting one another around the incredible girth. Her touch brought a small moan to Emily's lips, while her cock dribbled a small lake of pre-cum.\n\n\"I don't remember saying you could enjoy this.\" Alice said darkly.\n\nEmily looked at her in confusion and saw the whip in true detail. It was easily as long as a bus, if not longer, and was covered in both impossibly thin spines, much like a felines phallus, and thorns that ended in wicked looking tips. Fear shot through her then. Emily began to struggle, but found she couldn't under the German's gaze. Alice raised the whip, Emily looked away, closing her eyes in fear, and then a resounding crack was heard, followed by Emily's cry of pain. The whip had lashed at her breasts, leaving behind a trail of blood that disappeared almost as soon as it had appeared. But the pain was still there.\n\nAlice stood above her submissive whore now. Idly swaying her whip from side to side, as though contemplating where to strike next, however the futa was clearly a fast learner and was already begging her not to do it again.\n\n\"Very well. Now, I want to have some fun!\" No longer feeling she understood this woman, Emily shuddered in fear. Fortunately for her, Alice was looking for sexual satisfaction, not domination... yet. Discarding her whip and removing the latex thong, Alice groaned in lustful need. Stepping onto Emily, Alice used the added hight to position herself. Soon the futa's cock would fill her cunt completely.\n\nTaking a deep breath, Alice reached down to her dripping snatch. Using both hands she spread it wide, revealing to Emily the tantalising view of her open pussy, and then she dropped herself as best she could, attempting to impale her cunt on the phallic pillar beneath her. Unfortunately it only managed to bump against the comparatively tiny vagina, barely getting the tip inside.\n\n\"Ok... This could harder than I predicted.\" Alice said to herself, and lifted herself up, only to drop once more. Repeating the process, and progressing very little each time. This soon caused her to become frustrated.\n\n\"Just fuck me already dammit!\" She shouted. Grinning internally, Emily thrust her hips up, hard, while also grabbing hold of Alice's wide hips and pulling her down too, granting her cock a couple of inches access to the delightful treasure that was this woman's pussy. Alice couldn't hold in the scream of absolute joy at being so completely filled, despite having only two inches of cock inside her, yet its girth was enough that its shape was visible through her flesh. She looked down, seeing this, and watched in awe as she was once more pulled down, and the shape travelled up to her stomach, no doubt forcing its way past her cervix in the process. Despite this she felt no pain only absolute bliss.\n\n\"Now that's more I like it! Fuck me you whore! Fuck your cum into me!\" Alice ordered, regaining some of her vigour from before. Emily need not be told twice, as she used her transformed body's incredible strength to lift and pull the comparatively small girl, using her as little more than a masturbation tool, and gaining great pleasure as several inches of her meat speared the insides of this lustful dominatrix, repeatedly forcing itself into her womb and making its presence know by bulging from her abdomen grotesquely. Emily once more took the initiative and reached behind the crying girl.\n\nAlice had no idea what to expect when she felt the futanari's hands on her generous ass cheeks. Then she felt it, a single clawed finger forcing its way into her ass. Unable to feel pain in this form, Alice could only scream as her second orgasm that day washed through her, making her squeeze the invading cock with a vice like grip using nothing but her pussy, while feel the finger pushing inch after inch inside her rectum.\n\n\"OhGodOhGodOHGODYEEEESSSSSSSSsssss!!\" She screamed over and over, her orgasmic cries and pussy's vice like grip quickly becoming too much for Emily, who could feel her cum churning deep within, preparing for its release.\n\n\"Here it comes!\" She cried in warning.\n\n\"YES! Cum in me! Fill me with your semen!\" Alice cried in encouragement, somehow finding the strength to rock back and forth, bringing a string of orgasms each more powerful than the last. Emily joined her cries, as the first jet shot through her length and directly into her lover's womb. Where all the cum came from, neither could answer, but neither cared at that moment, as the single was enough to force Alice to swell to look heavily pregnant. Then the second came and she appeared to be carrying twins to term, then the third, fourth, fifth. Finally the pressure was too much and Alice literally shot off Emily's cock, a fountain of cum issuing forth from her gaping cunt. Upon landing, Emily aimed her cock at the latex clad woman, hosing her down in near constant jets of semen. The two could still only formulate cries of bliss.\n\nNearing the two minute mark, Emily's orgasm finally began to wane. Once the spray had lowered to a small trickle, she finally spoke.\n\n\"Where... did that... come from?\" She panted. Alice sat up, no small feat considering her still massively inflated womb, wiped the jelly thick cum from her face, licking what she could from her lips.\n\n\"Mmmm... Delicious. Anyway, that's my whips description, apparently striking someone with it makes their orgasm several times more intense, even so.\" She trailed off, rubbing her amazingly taut stomach, as though she were indeed pregnant with numerous children. The two shambled back to their positions.\n\nEach seemed exhausted by what had transpired, yet neither was willing to forfeit the game. Alice then noticed her damage count and saw it remained the same, despite her whips ability.\n\n\"What the hell? I should have recovered one.\" To this Emily chuckled lightly, \"What is it?\"\n\n\"Remember my Incubus Armour? Its effects aren't just active during my turn.\" Alice's face, despite being practically hidden behind thick, white semen turned red with anger, but she kept quiet, since nothing in the rules stated that the effects needed to be explained in perfect detail.\n\n\"Fine. Your turn.\"\n\nEmily drew her card and studied her hand. She had used none of the current cards in her hand, but after reading their effects carefully, she knew what she needed to do, however her damage was still too high to do it just yet. Instead she chose to repeat what had happened her previous turn, choosing to inflict damage via an orgasm and bide her own time until then. Once done Emily could only end her turn.\n\nAlice drew and grinned evilly.\n\n\"I equip my creature with the 'Master's Wish Armour'. Now this armour nullifies the effects of any one card I choose, so long as that card remains on the field that is, and I choose, hmmm, let me think. Oh, I know how about YOUR armour!\" Emily practically did a double take at this, realising that she had lost her best offence. \"Now I attack.\" Rather than repeat last time, Alice simply punched Emily in the gut and leapt back to where she was. Alice ended her turn then.\n\nEmily was at a loss at that moment. None of her current cards had skull counts of six or less, and her armour no longer of any use. Unable to do anything, Emily ended her turn at that. Alice simply repeated the previous attack, gaining one more damage and lowering Emily's. This cycle repeated once more, then Emily finally had the damage needed to win. Despite Alice having almost her full damage count, Emily still had an ace up her sleeve.\n\n\"Behold, this mighty futanari, as she descends from the heavens on wings of light, dripping cum as she flies over the battlefield, come forth! Angelus Urinam!\" Unlike the previous transformation, Emily a pleasurable, yet comforting, light envelop her, as her body regressed to its former state, only to grow one foot taller, while her cock grew even bigger than the demon-futas, constantly standing to full attention, jutting from Emily crotch lewdly, while wings that seemed made from light extended from her back, spanning several metres. Thus Emily's most powerful creature was realised: Angelus Urinam.\n\n\"Wh-What the hell?\" Alice out in surprise, and saw the power of the creature. It had fifteen thousand, and that was after subtracting the five thousand from her whip.\n\n\"My Angel's ability activates. All my opponent's equipment's negative effects are rendered inactive, this means I still deal three damage, though I must discard my entire hand to do this.\" Alice stared wide eyed at the beautiful creature before her. \"Then her second effect activates. Should my opponent be of the female gender and has already taken my cum into her womb, they take an additional two for each orgasm they suffer, but I will lose should I fail to win this turn.\" Emily realised it then, this was her deck, a one turn kill or nothing. Should this fail she would lose, but something told her that wouldn't happen.\n\n\"You ready?\" Emily asked out of courtesy, but didn't really care for the answer and simply attacked. The ensuing battle was like a two person orgy. Emily didn't waste time, simply forcing herself inside Alice from behind, though she was all too willing to take the cock that was as big as herself. Alice felt Emily's hands on her ass cheeks kneading them as she continued to push foot upon impossible foot within the warm embrace of Alice's cunt and womb, stretching her flesh out until it practically met the floor. After what seemed like an eternity, Emily's crotch met Alice's shapely rump.\n\n\"Now here comes the real fun.\" Emily whispered in the German's ear, who looked back in lustful shock. Suddenly the futanari angel pulled out, retracting foot upon foot of thick, veined cock meat from Alice's clenching pussy, only for the penetrated girl to scream in abject pleasure, cumming immediately, despite this Emily wasn't done, feeling a need to dominate this girl welling up within her. She fucked her relentlessly, pulling out and thrusting with the force of gun, stretching the woman's abdomen obscenely and causing her to cum over and over again. Emily then saw it.\n\nWithout Alice's knowledge Emily slowed down slightly and reached for her discarded whip. With a wicked smile, Emily hoped its side effect was still active, with that she slashed it across Alice's sizeable rump, leaving a line of blood that soon disappeared.\n\n\"Wha-\" Alice began, only for her next orgasm to silence completely. It shot through her like a nuclear blast, blasting every nerve cell alight with pleasure, only for each cell to go critical as her orgasm simply increased in intensity, never once letting up on its constant assault on her body. She soon lost all consciousness, yet her subconscious continued to suffer the eternal orgasm. Meanwhile Emily was readying herself for the finale.\n\nSuddenly struck by one last way to really show who's boss, Emily struck herself with whip, instantly feeling the pain and the sudden increase in her need to cum. She did so again, and again, and again, until her orgasm finally exploded deep within her lover, soon to be slave. She gripped the German tight, not wanting her to shoot off like last time, and let loose the sperm of war. The consistency was far thicker than before, and was in far greater quantity, swelling Alice's stomach to the size of someone carrying triplets to term, only for that to double, over and over again, until her body was less a fifth the size of her stomach, and still it grew. Emily had no worries however, knowing that Sors Nepellus wouldn't let a contestant die, even though she should have many times over now. ",
        "Speaking of Sors Nepellus, she was watching the battle with intense focus. Not even she had imagined a side like this in someone like Emily, who was still firing her cum deep within her victim. Despite having witnessed a great many sexual acts over the millennia, this was enough to force the goddess to masturbate fiercely to the scene, her hand jerking her own cock, while the other tended to her constantly gushing cunt. Miss Ralia, I fucking hope you are my consort. She thought as she sent her representative to end the battle, seeing as how Emily was now barely dribbling cum.\n\nAlice was a giant stomach with a woman attached. Her lower torso had become several times bigger than her entire body, and was completely taut. Once she pulled out, Emily was hosed by a literally fountain of her cum, and she was astounded to feel the consistency of it. It was thicker than jelly now, and... she swore she could feel something wriggling all over her body. Realisation struck her instantly; this was her semen, the whip had caused it to grow to enormous sizes, at least when compared to normal. Being surrounded by cum, Emily could only smell it and was unable to resist the tantalising scent. She stepped out of the cum spray only to kneel beside the unconscious Alice.\n\nShe reached out with her hands into the spray. They came back completely coated in her goal. With a lustful groan, Emily brought it to her outstretched tongue, and nearly came once more at the taste. With a desperate moan, she began to shovel more of her own cum into her mouth, savouring each portion before swallowing, feeling the large semen wriggling all over her mouth and throat, almost triggering her gag reflex several times. Finally she had her fill and left Alice to decompress.\n\nAbove the two Sors Nepellus's Representative once more appeared. She seemed clearly in shock at the state Alice was in, but quickly recovered, and announced Emily the winner.\n\n\"Could you return her to normal please? I don't think Rebecca'd be happy if we had to clean all of that up.\" She asked, nonchalantly, as though she weren't speaking to someone who could crush into dust with finger.\n\n\"Of course.\" A literal flash of light and Alice was no longer the size of a small whale, though both her and Emily were still covered in cum.\n\n\"Thank you.\"\n\n\"Would you like me to clean you both of your cum?\" Emily shook her head, \"Very well, then farewell for now, Emily Ralia.\" With that the field once more faded to black.\n\nEmily awoke to the sight of Rebecca stand beside her, completely naked as the day she was born.\n\n\"Hey sleeping beauty! So, you win the game?\" She asked as soon as Emily sat up.\n\n\"Of course. Who do you take me for?\" She said jokingly then asked where Alice was. Rebecca gestured to the other couch, where Alice laid, soaked from head to toe in cum, yet looking as innocent as a young girl as she sucked on her thumb, a small smile plastered to her face.\n\n\"Fuck me, that's adorable.\" Rebecca said, causing Emily to chuckle as well.\n\n\"Come on, lick me clean and I'll tell you all about it.\" Emily said, already walking to the stairs.\n\n\"You know it!\" With that the two rushed upstairs leaving Alice to sleep off the days events in relative peace."
    ],
    "authorname": "sexgundam666",
    "tags": [
        "futanari",
        "futa",
        "transformation",
        "huge cock",
        "cum inflation",
        "slave",
        "mistress",
        "deepthroat",
        "womb",
        "sexgundam666"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/voluptus-ludum-ch-03"
}