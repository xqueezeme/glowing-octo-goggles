{
    "title": "Mary and Alvin Ch. 16",
    "pages": [
        "Shapes of Hearts\n\nMary stepped out of the candy store into bright sunshine. Main Street was a slushy mess after five straight days of snow, but the sky had cleared to a crystalline blue. One of the surprises of a Maine winter was the number of beautiful sunny days there were. She had expected months of dreary gray weather. Even Alvin remarked at how snowy it had been, but between each period of snow there has been spectacular days when the light was so intense that objects seemed to come into sharper focus.\n\nShe slogged her way up the street to her car and got inside. She looked inside her shopping bag. She had bought two dozen foil wrapped chocolate hearts, enough to give a small Valentine gift to everyone in her department. More than she needed actually, so she unwrapped and ate one.\n\nShe pulled out of her parking space carefully. At the corner, the snow was piled higher than the roof of her car, and she moved forward with caution. She was getting used to winter driving, and managed to steer into the plowed center of the street with only a minimum of wheel spinning and crawled up the hill, slow and steady. She had always wondered why cars still had low gear, now she knew.\n\nShe turned into the parking lot at the bank. It was well plowed, but the mounds of snow filled some parking spaces and she had to park farther from the building than usual. As she walked to the main door, she noticed a car with California plates parked in the second row. She smiled to think that some other exile might also be experiencing their first Maine winter. As she passed the car, she saw a figure slumped down in the driver's seat, huddled under a plaid lap blanket. She stopped and thought about knocking on the window to make sure that the person inside was alright. But she still had the instincts of a big city girl. You can't be too careful, she thought. She went into the building and crossed the lobby to the security desk.\n\n\"Hi, Roy,\" she said to the guard on duty, \"There's a blue car in the second row with California plates. It looks like someone is sleeping in it.\"\n\n\"They didn't give you any trouble, did they, Miss Winslow?\" Roy asked in his thick Down East accent.\n\n\"No, I'm just concerned, with it being so cold out.\"\u2028 \"Oh, it's up to about thirty five, ma'am, but I'll take a gander. Move them off if they don't belong.\"\n\nMary thanked him and went in to her department. She stashed the candy in the bottom desk drawer. It was two days until St. Valentine's Day. She'd stop on her way home and pick up a box of Valentines to go with the candy hearts. Something friendly, not too flowery. She enjoyed making such small gestures to her co-workers.\n\nSmall gestures, though, were not Alvin's style and she had been giving a lot of thought to what to do to make Valentine's Day special for him. She had no doubt that he was planning something grandiose for her. She couldn't match his imagination for big romantic gestures, but there were always ways to express affection in a quieter but no less heartfelt manner. Two weeks earlier, for his birthday, she had invited him to her apartment for supper, and greeted him at the door wearing nothing but a large bow tied around her waist. All day, as she worked, she found herself doodling heart shapes on a note pad and trying to think of ideas.\n\nAt the end of her day she called Alvin while walking to her car, but got no answer. She stopped at Rite Aid and bought Valentine cards and a few other items, then drove home. She pulled into the small parking area behind her building, only to see that drifting snow had filled it a foot deep. She backed out on to the street, and pulled into a space half a block down from her door. As she shut off the engine, her phone rang. She looked at the screen and saw that it was Alvin.\n\n\"Hey, sweetie, where are you?\" she asked.\n\n\"Just got off the turnpike at Augusta,\" he replied.\n\n\"So you'll be home in an hour or so?\"\n\n\"Maybe a bit more. There's a few squalls out this way, and traffic is a mite slow.\"\n\n\"How's Charlotte?\"\n\n\"She's fine. Just a bit shook. Fender was stove in, but wasn't much damage otherwise.\"\n\n\"Good. You think you want me to come over? Or are you too tired?\"\n\n\"I expect I'll eat something and most likely fall asleep.\"\n\n\"Alright, love, I'll let you rest. I'll see you tomorrow.\"\n\n\"I love you, Miss Mary.\"\n\n\"Love you, baby.\" \n\nShe got out of the car, gathered her things and began to step gingerly through the slush. She heard a car door shut behind her, but thought nothing of it. When she reached her door, she already had her keys in her hand and was about to put them in the lock when she sensed someone near her. She turned and saw a figure in a hooded sweatshirt moving toward her. She stepped back and nearly fell on the slippery pavement, clutching the doorjamb to steady herself.\n\n\"Mary! Be careful!\" a familiar voice cried. The figure stepped into the dim light emanating from the hardware window.\n\nMary stared in disbelief. \"Wyatt?\"\n\nWyatt raised his arms as if to offer an embrace, then dropped them and slid his hands into the pockets of his hoodie.\n\n\"You look good, Mary, how you been?\" His voice was low, hesitant.\n\nMary struggled to think of something to say. She was shocked to see her ex-husband standing in front of her building, a continent away from where she'd seen him last, at the Los Angeles County courthouse on the day they had signed their divorce papers.\n\n\"Wyatt, what the...what are you doing here?\"\n\nHe was shivering as he answered her. \"I just wanted to see you again, just to, I don't know, just wanted to talk.\"\n\nMary put her hand to her forehead and closed her eyes. She tried to think about how to handle the situation, but her thoughts and feelings were so jumbled that she couldn't focus. She looked at Wyatt. He seemed a pitiful figure, cold, shivering, his shoulders drooping.\n\n\"Oh Christ, Wyatt, come inside and get warm.\" She opened the door and gestured for him to follow her up the stairs.\n\n\"Hey, this is kind of nice,\" Wyatt said as he stepped into Mary's apartment. \n\nMary went to the kitchen and turned on the coffee maker. She leaned against the sink while Wyatt pulled out a chair and sat at the table. \"Man, I can't believe this snow,\" he said, \"I had to stop in Massachusetts and wait two days for it to quit.\"\n\n\"You drove all the way here?\"\n\n\"Yeah. It took....uh, what day is this?\"\n\n\"Thursday.\"\n\n\"Eight days. I thought I could make it in five, but I didn't think about snow.\"\n\n\"When I moved I did it in seven, but I wasn't hurrying,\" Mary said, then realized how absurd it was that the two of them were making small talk. She poured Wyatt a cup of coffee and put it down in front of him.\n\n\"Uh, Mary, are you going to take your coat off?\"\n\nShe had not realized that she still had it on. She took it off, draped it over the back of the other kitchen chair and sat down across the table from him. For a long moment they just looked at each other. \n\nWyatt took a long slurp of coffee. \"Mary, I just wanted to make sure that you were okay, I mean, that you were doing the right thing.\"\n\nMary scowled. \"You mean getting married?\"\n\n\"Well, yeah,\" he shrugged, \"I'm sorry, but I still care about you.\"\n\n\"You could have called me instead of driving all the way across the country.\"\n\n\"I don't have your new number.\"\n\n\"Send an email.\"\n\n\"Aw, Mary, I don't want you to get mad.\"\n\nMary sat back and crossed her arms. \"How did you expect me to react? You scared the shit out of me for one thing.\"\n\n\"Yeah, sorry about that. Is it darker here?\"\n\n\"You hung out in the parking lot and watched for me to come out of work, didn't you? I saw your car.\"\n\n\"Yeah, but they made me leave, so I had to park out on the road.\"\n\n\"They call that stalking, Wyatt.\"\n\n\"This is not what I wanted,\" Wyatt moaned, putting his head in his hands.\n\n\"What did you want? You thought that I'd rush into your arms when I saw you?\"\n\n\"No, but...\"\n\n\"You thought we might reconcile? Wyatt, I am getting married in three months.\"\n\n\"Yeah, see, I ran into your sister-in-law Cindy in Whole Foods. She didn't seem like she wanted to talk to me. I think she told me you were getting married just to get rid of me.\"\n\n\"Seems like a plan,\" Mary snapped.\n\n\"Mary, we meant a lot to each other. I'd like to at least meet this guy.\"\n\nMary shook her head and let out a bitter chuckle. \"No, really, I don't think you do.\"\n\n\"What? You think he'd beat me up or something?\"\n\nMary realized that she didn't know. Alvin might beat up Wyatt, it was hard to say. She'd never seen him really lose his temper, but under extraordinary conditions, she didn't know what he would do.\n\n\"He might,\" she shrugged.\n\n\"What is he, some kind of tough guy?\"\n\n\"No, he's kind and gentle, but I think that if he thought I was in danger, he'd do anything to protect me.\"\n\n\"You aren't in any danger from me!\"\n\n\"Well, he might see it otherwise.\"\n\n\"Jesus, Mary.\"\n\nThey sat quietly, neither of them knowing what to say.\n\n\"How's your Mom and Dad?\" Mary asked, to break the ice.\n\n\"They are good. They miss you.\"\n\n\"Wyatt, have you been seeing anyone? Are you dating?\"\n\nHe shrugged, \"I went on a couple of dates, but...it just...\" He looked up at her with tears in his eyes. \"I love you, Mary, I don't want anyone else.\"\n\nMary fought to keep from crying herself. \"Wyatt, I'm sorry you're still hurting. It just didn't work. We tried, but it didn't work. I moved on, you have to move on, too.\"\n\nHe wiped his eyes and nodded. \"I had to try.\"\n\n\"I don't have any hard feelings, Wyatt, but Alvin and I are in love, and this is my home now.\"\n\n\"You really like it here?\"\n\n\"I do.\"\n\nWyatt finished his coffee. \"Do you think that maybe tomorrow, before I head back, we could have dinner or something? Just, you know, to say goodbye?\"\n\nMary sighed. \"Let me think about it, okay?\"\n\nHe stood up and looked around. \"This really is a nice little apartment.\"\n\n\"Thanks.\" She stood and ushered him to the door. \n\n\"I'm at a place called the Sea Breeze Motel. It's really a shit hole, but I'm getting low on cash. You can call me, I guess. My number didn't change.\"\n\n\"I'll think about it, Wyatt.\"\n\nHe stood in the open doorway and looked at her. She started to feel a tingle of apprehension. What if he decided not to leave?\n\nAfter a moment, he raised his hand, gave a weak wave and turned away.\n\nAs soon as the door closed behind him, Mary felt her composure slip. She began to tremble. She rushed to the front window and looked down to see Wyatt getting into his car. As soon as his tail lights disappeared up the street, she grabbed her coat, threw it on, and bounded down the stairs.\n\n***\n\nAlvin nearly tripped over Angus as he set his bowl of venison stew on the kitchen table. \n\n\"Alright, you furry bastard, I'll get you some.\" He took down a saucer from the cupboard and dabbed a ladleful of the stew on to it. The cat stood up on his hind legs, reaching for the food, and almost knocked the dish out of Alvin's hand as he put it on the floor.\n\n\"Folks would think I starve you,\" Alvin muttered, sitting down to his own stew. His Uncle Harry had brought by twenty pounds of venison, claiming that he had hit a deer with his pick up truck. Alvin was sure he had shot it out of season. It was wicked savory in either case. \n\nIt had been a long day, he had left the house before dawn. He had only a handful of customers for his informal snow plowing business, and last night's snow had been light compared to the previous storms, but he was diligent about giving them good service. Besides, he got antsy in the winter if he didn't have some kind of work to keep himself busy.\n\nHe had figured he'd catch a nap when he finished, but as he was clearing the last driveway, Charlotte called, panicked because her car had skidded on a snowy street and banged into a fire hydrant.\n\nHe quickly ascertained that she was not hurt and that the hydrant had not gone off, but she had scared herself, and he couldn't bare the sound of his daughter crying, so he agreed that he would drive the two hours to Portland and examine the damage to her car.\n\nThere wasn't much. The fender on the passenger side was dented in, but it could easily be bumped out, and the paint touched up. The headlight lens was cracked, but the light was functional. He assured her that the car was drivable, and that he could do the repairs himself. \n\nAfter checking the car, Alvin took her to get burgers at The Great Lost Bear, and they arranged for her to drive up to Londonderry the following weekend.\n\nAlvin was finishing his stew when he saw the shine of headlights turning into the dooryard. He got up and crossed to the kitchen window and saw Mary getting out of her car. He smiled at the sight of her, but as she stepped into the illumination of his porch light, he saw the distressed look on her face.\n\nHe rushed to the mud room door and got there just as she opened it.\n\n\"What's wrong?\" he asked as she rushed into his arms.\n\n\"I'm okay,\" she said, her voice muffled against his chest, \"I think I might be having an anxiety attack.\"\n\n\"Come in, sit down,\" he said, turning her towards the table.\n\n\"Angus is eating your supper,\" Mary said. \n\nThe cat looked up from Alvin's bowl, then hopped off the table and retreated into the living room. Mary sat down and Alvin went to the stove and turned on the tea kettle. He came back to the table and sat next to her. \n\n\"Just take it easy and tell me what's the matter,\" he said, taking her hand.\n\n\"Wyatt came to see me.\"\n\n\"Wyatt?\"\n\n\"My ex-husband.\"\n\n\"I know who he is, but what the hell? He's here?\"\n\nMary closed her eyes and took a few deep breaths before replying. \"He drove all the way from California to try to talk me out of marrying you.\"\n\n\"Well, if it worked, I should be the one having the panic attack.\"\n\n\"Don't joke, honey, he scared me.\"\n\nAlvin straightened his back. \"Did he hurt you, Mary? Did he threaten you?\"\n\n\"No, no, nothing like that,\" she said, shaking her head, \"but just the idea of it, the obsessiveness of driving for a week to get here, it's extreme behavior.\"\n\n\"Where is he now?\"\n\n\"He is staying at the Sea Breeze.\" As soon as she said it, she wondered if it would be better if Alvin didn't know. \"He wants to have a goodbye dinner tomorrow before he goes home.\"\n\n\"And what do you think of that?\"\n\nMary dropped her eyes. \"I don't know, Alvin. I feel like I owe him at least that much.\"\n\n\"Why do you owe him anything?\"\n\n\"Alvin, he was the first man I loved.\" Her hands twisted together on the table. \"He brought me alive again after my Dad died. And we were together all through college.\"\n\n\"I understand all that,\" Alvin said, reaching across the table and resting his hand on hers. Mary looked up at him, tears in her eyes.\n\n\"Alvin, I didn't want to hurt him, but I did. I broke his heart.\"\n\n\"You can't undo that.\"\n\n\"No, but maybe if he gets some closure, he can move on.\"\n\nThey sat in silence for awhile. Angus strolled back into the kitchen and hopped up in Mary's lap. He nuzzled her chin as she hugged him to her chest.\n\n\"He always knows when you need comfort,\" Alvin said. \"Speaking of which, did you have any supper? I can heat up the stew.\"\n\n\"That's the deer your uncle killed?\"\n\n\"Yes.\"\n\n\"I'll try some, as long as it isn't Donner or Blitzen.\"\n\nAlvin laughed as he got up to heat the stew.\n\n\"There isn't anything else strange in it, is there?\" Mary asked.\n\n\"No, just meat and onions and potatoes and parsnip.\"\n\n\"Honey, outside of New England, parsnips are considered strange.\"\n\nMary sipped a cup of tea while he stood at the stove warming the stew. She watched him and reflected on how different Alvin and Wyatt were. After ascertaining that she was alright, Alvin had put on the kettle, to make tea as a comfort to her. He hadn't given it any thought, he just knew what to do.\n\nThe hot stew and tea, along with Alvin's presence, had a calming effect on Mary. When she finished eating, she set the bowl on the floor for Angus to lick, and she and Alvin went to the living room. \n\nThey cuddled on the couch and pretended to watch a movie. But neither of them paid it much attention. Alvin's thoughts veered from notions of confronting Wyatt to sorrow at seeing Mary so distraught. He knew, though, that the matter was in her hands, not his, and he would have to support whatever she decided to do.\n\nMary drifted off to sleep before the movie was over, curled up tight, her head resting in Alvin's lap. He stroked her hair and softly woke her.\n\n\"Come on, sweetheart, let's go up to bed.\"\n\nMary sat up and yawned. Alvin kissed the side of her head and she rose, stumbling to the stairs.\n\n\"I can carry you if need be,\" Alvin chuckled.\n\n\"I'm okay, just tired,\" Mary said, clumping up the steps. She went into the bathroom and shut the door.\n\nAlvin went to the bedroom and straightened the covers. He set the alarm clock a little earlier than usual so Mary would have time to go home and prepare for work in the morning. When she came in, he was already undressed and waiting for her under the covers.\n\nMary had taken to wearing Alvin's old Boston Bruins t-shirt as a night shirt when she stayed over. She crawled into bed and snuggled close to Alvin. \"It's cold,\" she mumbled.\n\n\"Said to be getting colder in the morning, too, sweetheart.\"\n\n\"All Wyatt had was a hoodie. Not even a coat.\"\n\n\"Well, that will be a lesson to him, then,\" Alvin said, reaching to turn off the lamp. He wrapped his arms around Mary and settled in for the night. \n\nHe thought she was already asleep when she spoke.\n\n\"Alvin, you know I won't ever break your heart, don't you?\"\n\n\"I do know that, sweetheart.\" He realized that she was crying. \"And I will never, ever break yours.\"\n\nMary sniffled. \"I am not the kind of person who does that, but I did. I hurt him terribly.\"\n\n\"Honey, at some point, you have to do what is best for yourself. Don't beat yourself up over it now.\"\n\n\u2028\"I feel like I ought to see him. I should give him that.\"\n\n\"Whatever you think best, sweetheart. Just close your eyes and sleep, it will all be alright.\"\n\nIn a few minutes, Mary was sound asleep, but Alvin lay awake for hours.\n\n***\n\nMary was up early, and barely touched the french toast and sausage that Alvin prepared for breakfast. Her outward mood was cheery, but to Alvin, she seemed brittle.\n\n\"You going to be alright today?\" he asked. \n\n\"I'm fine,\" she replied, gulping down her coffee, \"I just have things to do before work.\" \"Well, alright then. I'll be around if you need me. Tim's coming by and we are going ice fishing down to the stream.\"\n\n\"Sounds like fun.\" She put on her coat and kissed him goodbye.\n\nShe rushed home to shower and change her clothes, then headed straight to work. She had the Valentines to give out, and she intended to add a short personal message to each. When she pulled into the parking lot, there were only a few cars already there. She couldn't help looking for one with California plates.\n\nThe heart shaped cards were all signed before the other employees had all arrived. When she was done she took her phone from her purse. Wyatt's number was still in her contacts, and for a minute she wondered why she had never removed it. Had there been some part of her that still wanted him in her life? If there had been it was long gone now, so why was she so conflicted about seeing him? She thought about what she had told Alvin, that she was not the sort of person who hurt people. But she had hurt him deeply, and she could not be at peace with that thought.\n\nShe stared at his number for a while, then tapped the screen. He answered on the first ring.\n\n\"Hey,\" he asked after they exchanged greetings, \"Where can you get Mexican food around here?\"\n\n\"Bangor.\"\n\n\"How far is that?\"\n\n\"About forty miles.\"\n\n\"You're shitting me? Damn.\"\n\n\"The seafood here is great, you should have that while you're here.\"",
        "\"I don't like lobster.\"\n\n\"Well, I don't know what to tell you. It's a small town, your choices are limited.\"\n\n\"So, did you decide if you want to get together today?\"\n\n\"Yes. I thought he could meet at Hurley's, it's just down the hill from my place. And I know that you know where that is.\"\n\n\"What time?\"\n\n\"How about seven?\"\n\n\"Okay. Um, you aren't going to bring, you know, him, are you?\"\n\n\"No, Wyatt.\"\n\n\"Okay, see you then.\"\n\nAfter talking to Wyatt, she found that she was having trouble concentrating on her work. As lunch time grew near, she looked over her work files. There wasn't anything pressing in any of them. She spoke with the branch manager and he agreed that it would be fine if she were to take a half day. She returned to her desk and got out the Valentines and chocolate hearts. She went desk to desk, distributing them to the other members of her department. Most of them were native Mainers, and some had been suspicious of her, \"the girl from away\" when she was sent to Londonderry to become their supervisor. But she felt a real warmth as she moved among them. She thought again that she had found a home here.\n\n***\n\nMary turned into Alvin's driveway and saw Tim's battered pickup in the dooryard. She parked next to it and got out. Two sets of footprints led away from the house and towards the woods. After a moment's hesitation, she pulled on her mittens, tugged her knit cap down over her ears, and followed them.\n\nShe had to take big steps crossing the snowy meadow, but once she entered the trees, the going was much easier. The big pines had caught most of the snow and there was only a light coat of powder on the ground. The path towards the stream was clearly visible, and she began down the long sloping trail. The meadow had been silent, but the woods were alive with a cacophony of birdsong. At every turn, she saw finches and chickadees flitting from branch to branch. She saw a small blue gray bird with a tufted head and made a note of asking Alvin what it was. Startled by a hammering noise, she looked up and saw a large black and red woodpecker tapping on a tree limb.\n\nThe trail turned and angled down to the edge of the water. The stream was only about twenty feet wide here, but as Mary followed the path along the bank, it gradually widened. It veered to the right and opened into a large marshy pond. She saw the ice shanty ahead of her, in the middle of the frozen pond. She hesitated for a moment before gingerly stepping on to the ice. As she began walking across the pond in small careful steps, a large flock of crows flew up from the opposite bank, cawing loudly. Thin lines of snow danced over the surface of the ice, combining and separating in intricate patterns as the wind swept them along. The ice groaned under Mary's feet, but did not crack.\n\nAs she approached the shanty she wondered what the proper etiquette was in this situation. Did you knock? Just open the door and go in? She decided the best option would be to call out.\n\n\"Hello? Guys? Alvin? Tim?\"\n\nThe door creaked open and Tim stuck his head out. \n\n\"Mary! Hey come on in!\" He swung the door wide and she stepped inside.\n\nThe shanty was only about sex feet square and eight feet tall. Benches ran down the sides and a couple of rough shelves were attached to the back wall. A battery powered lantern and a small propane heater sat on the top shelf. Below it, a plastic cooler sat open, and she saw several fish inside it.\n\n\"Mind the hole,\" Alvin said as he stood up and took her hand. She looked down and saw that there was a square opening in the floor of the shanty, and beneath it a round hole in the ice. She stepped carefully around it as Alvin moved down his bench and made room for her to sit.\n\n\"Is everything alright?\" he asked her, fixing his fishing rod into a holder on the floor.\n\n\"Yes, honey,\" she replied, \"I just felt like leaving early today, and I thought I'd come join you.\"\n\nAlvin looked at Tim, then at Mary. \"Any trouble from Wyatt?\"\n\nMary glanced at Tim.\n\n\"We were just talking about it,\" Alvin shrugged.\n\n\"No, I called him and told him I'd meet him at Hurley's at seven.\"\n\n\"That's good,\" Tim nodded, \"Nice and public, too noisy for him to get romantic notions.\"\n\n\"I don't think he's going to be a problem, Tim.\"\n\n\"We can make sure of that,\" Tim said, rubbing his chin.\n\n\"What do you mean?\" Mary asked.\n\n\"Nothing, just thinking, I mean, we could take him on a boat ride or something.\"\n\n\"Timothy Faulkner,\" Mary snapped, \"You are not going to throw my ex-husband in the ocean.\"\n\nAlvin laughed. \"He's just screwing around with you, sweetie.\"\n\n\"The hell I am,\" Tim said, \"If he come around my woman, I'd feed him to the lobsters.\"\n\n\"Which woman?\" Mary asked.\n\n\"Ow, that's a pisser, Mary,\" Tim laughed.\n\nAlvin wasn't laughing. \"Just be cautious, Mary. I know you think it's all very cordial and all, but the man is hurting, and you can't be too sure how a man in pain will act.\"\n\n\"I understand that,\" Mary said, \"I decided to meet him at Hurley's because it's so public.\"\n\n\"Celtics play the Sixers tonight,\" Tim said, \"the place will be packed.\"\n\n\"So, what did you catch?\" Mary asked, attempting to change the subject.\n\n\"We've got five nice trout so far,\" Alvin said, \"hoping to get a couple more before we call it quits.\"\n\n\"It's warmer in here than I would have expected,\" Mary said.\n\n\"We can get warmer yet,\" Tim replied. He pulled a pint of Fireball out of his coat pocket. He took a pull from the bottle and handed it to Mary. She sipped a little bit of the cinnamon flavored liquor and passed it on to Alvin. It did make her feel warmer all over when she swallowed it.\n\nAlvin drank and handed the bottle back to Tim. He put his hand on Mary's knee and looked her in the eye. \n\n\"What I need to know, Mary, is what you are looking to get from this meeting. I mean...\" He looked at his brother, then back at Mary. \"I assumed when you agreed to marry me that you had closed the book on this.\"\n\nMary felt a flush of shame. \"Oh, honey, I don't have any second thoughts about marrying you. I have no doubts about it at all. But, I do have some lingering feelings of guilt about how I treated Wyatt. Not that I did it, just how I handled it.\"\n\n\"Well, alright then,\" Alvin sighed. \n\nMary squeezed his hand. \"It will all be fine,\" she said.\n\nThere was a tug on Tim's line and he reeled in a shining nine inch long trout.\n\n\"That's three each,\" Alvin said, \"I think I'll call it a day.\" He picked three of the fish from the cooler and dropped them into a plastic bag.\n\n\"I think I'll stay a while,\" Tim said.\n\nMary stood up and opened the shanty door. Alvin took her hand and helped her step out on to the ice. He followed her, but as they started to leave, Tim called him back. He stuck his head into the shanty.\n\n\"Man, don't completely rule out the idea of dumping the son of a bitch in the ocean, alright?\"\n\nAlvin nodded and shut the door. He took Mary's hand and kissed her cheek. They walked across the pond toward the bank.\n\n\"How deep is it underneath us?\" Mary asked.\n\n\"Oh, it's not more than five or six feet,\" Alvin said, \"about ten where we put the shanty. It's nothing but an old beaver pond. Someday the dam will give, and it'll be a meadow with a stream through it again.\"\n\nHe helped her up the slippery side of the bank. Hand in hand they walked through the woods. Mary remembered to ask him about the little gray bird, and he told her that it was a tufted titmouse.\n\n\"I love that you know things like that,\" Mary said.\n\n\"It's not anything special,\" he replied.\n\n\"I wish I could explain to you just how special you are, Alvin.\"\n\nThey emerged from the woods and crossed the pasture. \"Are you coming in?\" Alvin asked as they neared the house.\n\n\"No, sweetheart, I think I'll go home. I think I need to be alone with my thoughts a while.\"\n\n\"I understand.\" He kissed her and watched her get into her car. \"Call me if you need me.\"\n\nMary rolled down the window. \"I love you, Alvin.\"\n\n\"I know.\"\n\n\"I'm going to marry you.\"\n\n\"I know.\"\n\nShe rolled up her window and drove back into town.\n\n***\n\nMary stood outside of Hurley's, but she could not see into the bar, the tall windows were opaque with condensation. She hesitated for a moment, wondering if she was doing the right thing, then went inside. \n\nIt was crowded, as she had expected. Garlands of red and pink paper hearts festooned the walls and hung over the bar. Mary looked around, and not seeing Wyatt, began walking through the room. He leaned out of a booth near the back and waved. Mary faltered when she realized that it was the same booth she and Alvin had shared on their first date, but she took off her coat and slipped into the seat across from him. He was drinking a glass of Shipyard Ale.\n\n\"This local beer isn't bad,\" Wyatt said.\n\n\"How many have you had?\" Mary asked.\n\nHe put his hands up in a gesture of surrender. \"This is the first.\"\n\n\"I'm sorry, I didn't mean to make you defensive right from the start.\"\n\n\"It's okay,\" he nodded. \"So, I drove around your little town a while, just exploring. It seems like a nice place when it isn't buried under two feet of snow.\"\n\n\"It's a wonderful place, Wyatt. I'm very happy here.\"\n\nWyatt stared into his beer. A waitress came to the table. Mary ordered a mug of hot chocolate.\n\n\"Mary, listen...\" Wyatt began, but stopped. Mary sat in silence, waiting for him to continue. \n\n\"You probably think I am crazy, driving all the way across the country, but when I heard you were going to get married, I just, I just wanted to see you before you did it.\"\n\n\"Did you think you could talk me out of it?\"\n\n\"I don't know. Maybe. Yeah, sometimes I did. All the way here I thought about what I would say to you. And yeah, I did imagine we might try again, but I knew it was just a fantasy. But mostly, I just couldn't stand the idea that you'd be married to someone else and I would never see you again.\"\n\nHe stopped talking as the waitress delivered Mary's hot chocolate.\n\n\"Wyatt,\" Mary said, \"I never wanted us to become strangers.\"\n\n\"You blocked me on Facebook.\"\n\n\"You know why I blocked you. You said some pretty nasty things about me.\"\n\nHe dropped his head. \"I'm sorry, Mary. I was upset about you and that guy Brent.\"\n\n\"It wasn't your business.\"\n\n\"We were still married and you were with him.\"\n\n\"I am not going to get into all that with you, Wyatt,\" Mary said, her voice rising.\n\n\"Look, let me just ask you one thing, okay?\"\n\n\"What?\" \n\n\"This guy, Alvin, I mean, I guess he's another older guy.\"\n\n\"He's forty seven.\"\n\nWyatt shrugged. \"You think maybe that's an issue? I mean, you never got over your Dad...\"\n\nMary shook her head and waved a finger at him. \"Do not go there, Wyatt. You've got no right.\"\n\n\"Okay, okay, I'm sorry.\"\n\nMary sipped her chocolate for a minute, then put the mug down and reached her hand across the table, resting it on Wyatt's.\n\n\"I decided to come here tonight, Wyatt, because what we had between us did matter to me, and it still does.\"\n\n\"But it turned out it didn't matter to you as much as it did to me.\"\n\nMary fought against losing her temper. \"No, Wyatt, I don't think that's the case. The fact is, I worked hard at trying to hold our relationship together, and you were completely indifferent to the problems.\"\n\n\"I didn't think they were such big problems,\" he shrugged.\n\n\"Well, it turned out they were big enough to end the marriage, didn't it?\"\n\nWyatt began drumming his fingers on the table. \"Well, now you have exactly what you always wanted, an older guy with money. It worked out for you, anyway.\"\n\nMary sighed. \"Wyatt, there isn't any point to this conversation. Listen, I came tonight because I felt that maybe the way I handled the situation wasn't fair to you. I don't know, really. But I do know that I did the right thing, in any case. Now, here we are, and you haven't changed at all, you didn't learn anything from the experience, and that makes me even more certain that I was right.\"\n\nWyatt stopped drumming and sat quietly.\n\n\"I will always think of you with fondness, Wyatt. And I will always cherish the memories of good times we had together. But memories are all we have left.\"\n\nShe stood up and put on her coat. \"I really do hope you find happiness, Wyatt.\"\n\n\"I guess I'll head for home in the morning,\" he said, looking up at her. With a tremor in his voice he asked, \"Can I have one last hug?\"\n\n\"Sure,\" Mary nodded. Wyatt stood and they hugged. He rested his head on her shoulder, and she could hear him sniffle.\n\n\"Goodbye, Wyatt,\" she said, and turned away.\n\n***\n\nAlvin watched Mary leave Hurley's and walk up the street to her apartment. When she had gone inside, he shut off his car and got out. As he walked across Main Street, his phone rang. \n\n\"Hello, sweetheart, how did it go?\" he asked, stepping on to the curb.\n\n\"It was alright,\" Mary answered, \"We talked, he's leaving in the morning.\" \n\n\"Would you like me to come by?\"\n\n\"No, love, I just want to sit with it a while, then go to bed. I'll see you tomorrow.\"\n\n\"I love you, Mary,\" he said as he approached Hurley's door.\n\n\"I love you too, baby.\"\n\nAlvin went inside and walked straight to Wyatt's booth. Wyatt was gazing at his phone when Alvin sat down. He looked up with a puzzled expression, but before either of them spoke, the waitress came to the table.\n\n\"Hey, Alvin. Guinness?\" she asked.\n\n\"Yeah, thanks, Carol. And another Shipyard for my friend.\"\n\n\"You got it, dearie,\" she said, walking away.\n\nWyatt was staring at Alvin with wide eyes. \"So, what do you think of Maine?\" Alvin asked him, casually.\n\n\"Seems pretty nice, I guess,\" he stammered.\n\n\"Good, glad you got to see some of it.\"\n\nWyatt looked around, nervously, as if he was planning an escape route.\n\n\"Relax,\" Alvin said, \"I'm not here to hurt you or anything. I just thought that while you're in town, we ought to meet. I mean, think about it, you and I share a bond, don't we?\"\n\n\"Yeah, I guess so.\"\n\nThe waitress brought their beers. Alvin took a long drink before continuing.\n\n\"To both of us, Mary is the most important thing in the world, isn't she?\"\n\n\"Yeah, of course,\" Wyatt replied.\n\n\"We both want what's best for her.\"\n\n\"Yes, yes we do.\"\n\n\"Well, let me tell you what I think. I think the best thing for her would be for you to finish your beer, go back to room 104 at the Sea Breeze, and get a good night's sleep, then get up in the morning and go back to California. And I will stay here and spend the rest of my life trying to see that she never has an unhappy day.\"\n\n\"Well, I just wanted...\"\n\nAlvin raised a hand to quiet him.\n\n\"Hold up. You don't need to justify yourself to me. I don't even want to think what lengths I would go to get her back if I ever lost her. But, son, she's made her choice, and we are both going to honor that, right?\"\n\nWyatt nodded, tears forming in his eyes.\n\n\"Come on, bub, buck up,\" Alvin said, reaching across the table and patting Wyatt's arm, \"When I lost my first wife, I didn't think I'd ever find someone else. But I did. You will too. And you have the good fortune to know that Mary is alive and well and having a good life. I was denied that.\"\n\n\"I guess you're right,\" Wyatt said, gazing into his glass.\n\n\"You know,\" Alvin chuckled, \"My brother said we ought to put you on the boat and take you half way to Nova Scotia and toss you over the side.\"\n\nWyatt's face turned white. \n\n\"I don't think Mary would be too happy with that solution, do you?\"\n\nWyatt shook his head. \"No, she wouldn't think that was cool.\"\n\n\"I reckon not,\" Alvin laughed. \"I wouldn't do a thing like that.\" His face turned serious. \"At least, not the first time you showed up.\" He lifted his mug and finished his beer. \"Alright, bub, you have a safe trip home.\" \n\nHe got up and walked away from the booth. When he reached the front of the bar he stepped around to the last stool by the wall.\n\nTim raised the bill of the Red Sox cap he was wearing down low over his face.\n\n\"You sure Mary didn't see you?\" Alvin asked.\n\nTim shook his head. \"She never even looked over this way.\"\n\n\"Well, alright then.\"\n\n\"Why don't you get another beer and we'll watch the rest of the game. Sixers are up four.\"\n\nAlvin thought for a minute. \"Alright, but I have to do something, I'll be right back.\"\n\nHe walked out of Hurley's and crossed Main Street to his car. He opened the back down and lifted a navy blue pea coat from the back seat. \n\nWyatt was stepping out of Hurley's as Alvin returned across the street.\n\n\"Wyatt!\" he called.\n\nWyatt jumped and, seeing Alvin approach him, took a step back.\n\nAlvin held out the coat. \"Take this, put it on. I don't wear it no more, it's gotten a bit frayed. I reckon it will keep you warm enough for now, though.\"\n\nWyatt took the coat and put it on. It was several sizes too large for him. \n\n\"Uh, thanks, Alvin.\"\n\nAlvin held out his hand. Wyatt looked at it for a minute, then put out his own. \n\n\"Take good care of her,\" Wyatt said as they shook.\n\n\"You have my word that I will,\" Alvin said. Wyatt turned and walked away, and Alvin went back into the warmth of the bar.\n\n\"I ordered for you, ordered some wings, too.\" Tim said, pushing a mug of Guinness towards his brother. Alvin sat down and took a drink.\n\n\"Frickin' Sixers are running away with this,\" Tim grumbled. \"Don't seem like it's gonna be Boston's year.\"\n\n\"For every winner, there's got to be a loser,\" Alvin said.\n\n***\n\nMary opened the door and saw Alvin standing on her landing, holding a dozen roses and a heart shaped box of chocolates.\n\n\"Happy Valentines Day!\" she said as he stepped inside. She took the flowers and candy and set them down on the coffee table while Alvin removed his coat, then held her arms out to him. He stepped into them and they held each other tightly, sharing a passionate kiss.\n\nMary was wearing a short red dress. Alvin's hands slid down her back and cupped her ass, then moved to her thighs, only to rise again beneath her hem. She threw her head back as he kissed the side of her neck.\n\n\"Mmm, you seem awfully glad to see me,\" she moaned.\n\n\"Seems like it's been a long time since I saw you when you weren't all bundled up like an eskimo.\"\n\nMary took a step back and lowered herself to the couch, pulling Alvin down with her. He lay atop her, his leg between her thighs, his hands on her breasts, his tongue in her mouth. She caressed his back and his ass, then reached under him and fumbled with his belt.\n\n\"I ought to bring candy more often,\" he said as she tugged his pants open and wrapped her hand around his penis.\n\n\"You're really hard,\" Mary said, \"I think you have some sort of alpha male thing going on.\"\n\nHe reached under her dress and tried to take down her tights.\n\n\"Hang on baby, I don't want you ripping them.\" She raised her butt from the cushion and slid the tights and her underpants down her thighs. Alvin tried to help, but only succeeded in tangling them. When she raised her legs in the air to pull them free, he slid his hand along her inner thigh and caressed her mound.\n\n\"Claiming what's yours?\" she laughed, then let out a long low moan when his fingers slipped inside her.\n\n\"Was my claim ever in doubt?\"\n\n\"Never, baby, not since the first time.\" \n\nAlvin moved forward on the couch while pulling her towards him. She was right, the pressure in his cock was almost unbearable. He shifted his hips, aligned himself and slipped inside of her.\n\nMary closed her eyes and relished the sensation of Alvin entering her. She craved the feeling of being taken, of being joined with him in a union of pure pleasure.\n\nAlvin looked down at her. He could see, even in the soft lamplight, how flushed her face and throat were. She looked up at him with half opened eyes.\n\n\"I don't think I can last long,\" he gasped, trying with little success to slow his thrusting hips.\n\nMary put her hands on his chest and pushed him back. \"Slow down, baby,\" she panted, \"slow down.\"",
        "Alvin closed his eyes and bit his lip, trying to maintain control of himself. Mary caressed his chest, then ran her hands over his shoulders and grasped his upper arms.\n\n\"Come here, baby, come to me.\"\n\nAlvin looked down at her and saw the plea in her eyes. He leaned down, lying prone above her. She took his head in her hands and pulled his lips to hers.\n\n\"You've got nothing to prove, my love, I am yours, baby, I am all yours.\"\n\nShe wrapped her legs around his thighs and pulled him deeper inside her. \"Look at me,\" she said.\n\nAlvin looked into her eyes, those beautiful dark brown eyes that had captivated him the first time he had gazed into them.\n\n\"I'm yours, baby.\" She watched all the tension leave his face as he came. He dropped his head to her shoulder and jerked his hips again and again, draining himself inside her. She kissed the side of his face and stroked his head. \n\nAlvin propped himself up, trying to catch his breath.\n\n\"Are you okay?\" Mary asked.\n\nAlvin nodded, \"I'm fine, sweetheart. You didn't cum, though.\"\n\n\"Oh, baby, don't worry about that. We have all night. Just take it easy now, okay?\"\n\n\"Yes,\" he said, blowing out a deep breath. \"You really get my heart pounding, Mary.\"\n\n\"Well, good, I have to keep you in shape. Sex is good cardio. Now, baby, let me up before my dress gets all wrinkled.\"\n\nAlvin sat back and Mary climbed off the couch. She pulled down her dress and smoothed it straight. \"How does it look?\"\n\n\"It looks fine. You going to go to supper like that?\"\n\n\"Uh, no,\" she laughed, \"But I have a little clean up to do. Meanwhile, you can dig my underpants out from behind the couch.\"\n\nShe disappeared into the bathroom. Alvin stood and straightened his own clothes, then pulled the couch from the wall and retrieved Mary's panties. He shoved the couch back and sat down. When Mary came out of the bathroom, he leaned forward and held the panties out, close to the floor. Mary put a hand on his shoulder and stepped into them. He slowly raised them up her legs and under her dress, tugging them over her hips and tucking them into position.\n\nMary leaned down and kissed him on the nose. \"That's the sort of thing that would never have occurred to Wyatt to do,\" she laughed. \n\nAlvin got up and went to the kitchen, letting Mary wiggle into her tights by herself. He found a vase in the cupboard, filled it with water and brought it back to the coffee table. Mary removed the soggy paper wrapping from the roses and put them in it. He went to the bathroom, urinated and cleaned up. While he was washing his hands, he casually looked around at all the object that made the space Mary's; her hairdryer, her makeup, her jewelry. Soon, all these markers of feminine presence would take their place in his home.\n\nOn a whim, he picked up a tube of lipstick and took off the cap. It was a bright red. He used it to draw a big heart shape on the mirror. Inside the heart, he carefully printed \"Alvin + Mary\". He put down the lipstick and left the bathroom.\n\nMary was standing in the middle of the living room. \"I'm wearing a minidress and my snow boots, do I look like a real Maine girl, now?\"\n\nAlvin crossed to her and placed his hands on her hips. She draped her arms over his shoulders.\n\n\"Best looking girl in Maine,\" he said.\n\n\"You know, I spent last Valentine's Day with my mother,\" she told him.\n\n\"I think I spent mine with the cat.\"\n\nMary laughed and kissed him. \"Well this year, we are going to go across the street and have supper, and I'm going to drink a little too much red wine, and then we'll come back here and make love until dawn.\"\n\nThey kissed again and then went down the stairs and across the street to Carlino's, where they ate a wonderful supper, and Mary did drink too much wine, then they came back to her apartment, and while they did not last until dawn, they made love for a long, long time. "
    ],
    "authorname": "MelissaBaby",
    "tags": [
        "romance novella",
        "drama",
        "love story"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/mary-and-alvin-ch-16"
}