{
    "title": "I Love You Ch. 08",
    "pages": [
        "Jezebel leaned back against the mounds of frilly pillows on the massive bead, a plate of tiny finger cakes glazed in a rich strawberry sauce lay next to her on a large silver platter. a tall glass of ice cold milk on the night stand next to her and a book in her hands. Beatrix had recommended she try reading a book to help her relax and she sent her favorite to Jezebel. It was an intricate and intriguing 'who done it' and Jezebel was instantly hooked.\n\nShe hadn't been able to relax in a very long time and she was impressed that a book could do the very thing that not even sleeping pills, soothing candles, saunas, massages, chiropractics or prescribed medication had ever been able to accomplish. She was totally relaxed.\n\nJust when she thought it couldn't get any more peaceful and she couldn't get anymore relaxed, she felt it. \n\nIt was like that little ripple in the water before the 300 foot wave crushed you 7 feet below the sand. It was like a ball of cold fusion sucking all of her vital organs together to form in the pit of her belly. She felt it growing and mounting, making her body shake, forcing her to breath fast and deep, she sat up straight as it mounted, sweat beginning to bead on her brow.\n\nShe knew what this was, only one person in this entire world could make her feel this way.\n\nJezebel looked up to see Jake enter through the door than slam it shut behind him with the ferocity of a demon. He stood on the other side of the room like a recently released beast, out for blood. She hadn't seen him since he first imprisoned her and he looked like he hadn't slept since than either. His clothes were rumpled; his usually short hair was long and messy and he was in desperate need of a shave. It was also very apparent that his rage had not subsided and his eyes were glowing platinum, his scowl already in place. He looked lethal and so fucking sexy she wanted to rip off his clothes and fuck him until he squealed. But her anger was a little more in control of her emotions than her lust and she dismissed the idea almost immediately.\n\n\"So you finally come up here and face me, you fucking coward,\" she laid down her book, frowning at him. She hated him so much right now she actually loved him. She wanted to hurt him so bad her sex was screaming in submission. \"You better be here to let me go.\" Jezebel jumped off the bed, standing her ground with her hands on her hips, she glared back at him.\n\n\"You're not going anywhere.\" He slowly stalked towards her.\n\n\"I have rites!\" she yelled stomping her foot, \"you can't keep me here it's illegal you fucking psycho!\"\n\n\"You lost all rites the minute you stepped into that fucking abortion clinic.\" He spat and she gasped, already filled with shame over the huge mistake she almost made. \"Whose peter?\" he asked coming closer towards her, his eyes shooting silver sparks of lightening, brilliant enough to make her flinch. \n\n\"Who?\"\n\n\"Don't play fucking dumb with me Jezebel, who's Peter?!\" his voice was controlled but full of a rabid rage, ready to explode.\n\n\"I have no idea who Peter is!\" she snapped back\n\n*\n\nLudvine snickered silently on the other side of the door listening to her plan unfold.\n\n*\n\nJake threw the letter at Jezebel and she caught it, opened it than silently read it. She looked up at him in confused horror.\n\n\"What is this?\" she asked holding it in her hand he snatched it back than stood toe to toe with her \"Is this one of your sick tricks?\" she accused. \n\n\"You know exactly what it is.\" he said \n\n\"I know this is you setting me up.\" she lightly shoved his chest, \"Don't forget that I'm smarter than you and I know allll of your tricks.\"\n\n\"Why would I have to set you up, I already have you exactly where I want you.\" he said in such a superior tone that she was immediately convinced that Jake was not a part of this. She knew Jake better than anyone and she knew if it was one of his tricks he would be gloating. That only left one other person.\n\n\"Its her.\" she shook her head in disbelief. That little bitch was actually smarter than Jezebel had given her credit for.\n\n\"What?\"\n\n\"She's setting me up.\" she said to him, hoping he was not past the point of reason. Wondering how deep into his head Ludvine had already gotten. \"That manipulative bitch.\" she spat.\n\n\"Whose baby is that?\" he demanded, his voice low and deadly and she looked at him in shock and disbelief. Was he actually questioning her because of a letter? She would not dignify his insulting question with an answer. She turned away from him and he grabbed her arm. \"You better fucking answer me Jezebel.\"\n\n\"Let go.\" she said her anger really growing. She had tried to be some what civil, but now she was just plain pissed off. \"I can't believe you would fall for this shit,\" she shook her head in disgust \"can't you see what she's doing?\" she attempted to reason with him.\n\n\"Who are talking about?\" \n\n\"The maid!\" she snapped and he looked at her in bewilderment for a moment.\n\n\"The maid?! What does she have to do with this?\"\n\n\"You know exactly what she has to do with this!\" she yelled at him wanting to slap the hell out of him. How could he be involved with that horrible little troll-maid? She was a sickening, spineless waste of skin! \"You fucking traitor Jakub!\"\n\n\"What the fuck are you talking about?\" he leaned down, putting his face directly in front of hers. She was tempted to head bunt him as the realization hit her. Ludvine had not been lying; Jake was having some kind of an affair with her.\n\n\"You know exactly what I'm talking about and if you let that filthy skank put her rotten hands on my baby I will kill you both.\" she said with a gleam in her eye that made him want to rein over her. The very part of her personality that deepened his hatred but strengthened his love for her.\n\n\"Like you tried to kill your own baby?\" He gave her a look of repulse, \"If you can't abort it, starve it?\" he shook his head as she gasped, \"That's low, even for you.\"\n\n\"Ludvine told you that.\" she said remembering the threat the maid had thrown at Jezebel. \"You actually believed her?\" she asked, her heart on her sleeve for a full 3 seconds.\n\n\"Yes.\" he lied, wanting to hurt her. Jezebel was crushed and had to take a deep breath to prevent her emotions from coming out. Ludvine was right, she could make Jake believe horrible things about her. Sure he had caught her at the abortion clinic, but did he really believe her to be some cruel sadistic person? Only deranged maniacal mothers slowly starved their unborn children! She had thought that he knew her better than that. Jezebel could feel her heart ripping inside of her chest and she wasn't sure why. She hated him more than anyone else in the world, so why did she care if he was sleeping with the maid? Her anxieties overcame her momentarily and for a second she feared the top of her head would fly off with the fire hot rage that was escalating inside of her.\n\nBefore she realized what she was even doing, she had slapped the side of his face as hard as she could. He grabbed her before the next blow connected. He was ready to do some damage to her but he stopped dead in his tracks, remembering that she was pregnant. Instead he grabbed her arms tight enough to leave faint bruises, but her flailing hands managed to still connect with his chin.\n\n\"You believed that lying, jealous boy looking bitch over me?!\" she ranted struggling to get free of his iron grip. She would slap him again if she could move her arms; instead she raised her leg and kneed him in his thigh, just missing a very sensitive area.\n\n\"Calm down you're going to hurt yourself,\" he held her still, but when she kicked him again he let go of her and said \"or your going to make me hurt you.\"\n\n\"Really? Since you don't fight your own battles anymore, what are you going to do, send your psycho stalker girlfriend maid up here to yell at me some more?\" she shoved at his chest. \"I bet you love that she comes in here to taunt me, standing just 3 steps out of my reach, screaming at me!\"\n\n\"Screaming?\" he shook his head, \"I've never even heard her raise her voice, she's not like you Jezebel.\" he said and she wanted to slap him again, instead she slugged him in the chest. \"She gets her point across with out violence.\"\n\n\"I bet she does.\" she tried to smack him again but he grabbed her wrist.\n\n*\n\nLudvine smiled in bliss as she listened to Jake defend her; she was half tempted to run in there and kiss him. She was ecstatic; her plan was working to perfection. She was hoping that by morning, Jake would hate Jezebel and she would have Jake all to herself."
    ],
    "authorname": "redwitch",
    "tags": [
        "drama",
        "conflict",
        "argument"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/i-love-you-ch-08"
}