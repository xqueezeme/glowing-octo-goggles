{
    "title": "Show Moms Ch. 06-07",
    "pages": [
        "DISCLOSURE: If you're looking for a sex-filled romp featuring a younger guy and an older woman, this probably isn't the story for you. Allow me to recommend \"The Accidental Gigolo,\" my attempt to write exactly that kind of story. Just click on my name above, and you'll find it on my member page under Stories/Poems. Despite the sex that introduces the following chapters and the \"Mature\" category this story falls in, this story is actually much more of a romance. \n\n*\n\nChapter 6\n\nThe announcement that Robin had won her age division wasn't completely unexpected, but she jumped into my arms like we'd just won the lottery. And that was a pretty good analogy. By winning the National MILF Show division for women with kids 18 years old and above, and becoming one of the five national finalists, Robin had guaranteed herself another hundred thousand dollars.\n\nBecca had quite clearly expected to win everything up to the national divisions. Usually I got a high five; once I'd gotten a peck on the cheek. The only time she got excited was when she won the whole thing.\n\nRobin, though, was really excited every time she won. Except for the first time, maybe. After that one, she just turned to me and asked, \"Ready to go?\"\n\n* * * * * * \n\nThat was just about the only thing she had said to me all day up until that point. I had arrived at her house at 8:30, where I dutifully pulled into the garage. She came out in the same sweats, jacket, and ball cap that she'd worn three months ago, and slammed the car door behind her.\n\n\"Morning, sunshine,\" I said.\n\n\"Kenny?\" she said.\n\n\"Yes?\"\n\n\"Shut up.\"\n\nI made several other attempts at conversation, but I was pretty clearly getting the silent treatment, the worst punishment, in my view, ever invented by women.\n\nI pulled into the parking lot of the high school and said hello to the principal (I still couldn't believe we were doing this in the high school gym, but apparently the baseball field needed reseeding). Robin hustled in ahead of me, pulling the cap low over her eyes. Fortunately, when it became clear to her that they didn't allow the general public in for this round, and that there was no one there who knew her, she finally started to relax. Not enough to talk to me, but enough her stop looking around the gym every twenty seconds.\n\nWhile the next-to-last group performed, she changed into her gown. She was stunning. And that, rather than her performance, is pretty much what got her into the next round. By the time it was our turn, the place was almost completely empty; there wasn't anyone left to applaud or even offer encouragement. In addition, the college guys who were judging had gotten their fill of twenty-somethings during the earlier divisions, and weren't all that excited about seeing the ten or eleven older women in the final group. Robin wasn't that enthusiastic either, but after her only real competitor fell over while trying to pull her evening gown over her head, they pretty much had no choice but to give her the title.\n\n\"You perform like that next time,\" I said when we were driving home, \"and you're going to be out.\"\n\n\"Maybe next time I'll try to forget that you're also fucking my daughter,\" Robin snapped back at me.\n\nI couldn't help but laugh.\n\n\"Did she tell you that?\" \n\n\"She didn't have to. I know the look.\"\n\n\"Not as well as you think you do. Although she did offer to do my head last night.\"\n\n\"To what?\" Robin asked, her curiosity getting the better of her.\n\n\"You know, I really like your daughter,\" I smiled, keeping my eyes on the road. \"Last night was our last night together, and she was so cute. She said to me, very shyly, 'I want to do your head, Kenny.' I had no idea what she meant either, so I asked, 'Do what to my head?' She said, 'You know, suck it.' And I still had no clue.\"\n\nRobin had started laughing now, too.\n\n\"So I asked her straight out, 'You want to suck my head?' And she said, no, she wanted to, you know.\"\n\nRobin was holding her sides, unable to get enough air to laugh.\n\n\"You really ought to go ahead with that birds and bees stuff,\" I said. \"So at least when she wants to offer to give somebody head she knows how to do it.\"\n\n\"So what did you tell her?\" Robin finally asked, wiping the tears away.\n\n\"I told her it was the wrong time of month,\" I said.\n\nShe whacked me on the arm.\n\n\"You did not,\" she said, laughing even harder. \"What did you tell her?\"\n\n\"I told her that I didn't want to do it in my car, parked on a road by a lake, when it was going to be her first time.\"\n\n\"She loves you, you know that, don't you?\" Robin said. \"That's what that look was, wasn't it?\"\n\n\"I think I love her, too,\" I admitted. \"Of course, her feelings may change after she finds out about me and her mother.\"\n\nRobin looked over at me with a smile.\n\n\"I think we can keep it a secret. Now, how about we head back to my house and let me do your head?\"\n\nSo Friday had been a heavenly day, Saturday turned into a heavenly day, and Sunday was hell. That's when I met my roommate, the Devil. Or the Chipster, as he wanted me to call him. As in, \"Hi, I'm the Chipster, you must be Kenny, huh?\"\n\n\"Yeah, um, hi,\" I said, looking around for a square foot of space to put the things I'd brought. \"This is my mom.\"\n\n\"Hi, how are you?\" the Chipster said, looking her up and down.\n\n\"I'm fine, thank you,\" Mom was doing her best not to laugh, bless her soul. Go ahead, mom, laugh! \"So you must have been here a while already.\"\n\n\"Yeah, football practice,\" The Chipster said. \"I'm the team's new QB.\"\n\n\"Cubie?\" Mom asked.\n\n\"Quarterback,\" he nodded. \"Team leader, you know.\"\n\nOh, give me a fucking break. We're going to be living together for a year, and this asshole's trying to pick up my mother.\n\n\"So one of these desks is mine, right?\" I asked.\n\n\"Oh, yeah, dude, sorry,\" he said. \"I been studyin' my playbook at your desk.\"\n\nHe swept his shit off and I started moving in.\n\nFrom there, it just got worse. I seemed to have landed in some football players' hallway. Only about a quarter of us weren't jocks, and of those, I got along with maybe two or three. The jocks? There was a guy named Alec who was decent enough. The rest were simply greater or lesser assholes.\n\nAlec was actually going to be a starting safety this year as a freshman. He kind of had to be friends with the Chipster, but he saw through him pretty quickly. It was Alec who told me that the Chipster was going to be redshirted this year. The Chipster explained that nobody wanted to embarrass the team's current quarterback, who'd be graduating this year. Alec's explanation seemed much more likely: The coaches thought it would take the Chipster at least another four years to mature enough to play quarterback in college, and that he would finally be the starting quarterback after the rest of us had graduated.\n\nHis having been left off the playing team didn't stop the Chipster from asserting his entitlement to everything in a skirt, though. Once classes started, and football practice got cut back, Chip (Alec also explained that everyone just called him Chip) pulled out two rubber bands, a blue one and a red one, and put them on the inside of the door handle. If the blue band was on the outside of the door, he told me, I should plan on finding somewhere else to spend the night. And, of course, he laughed, if the red one was there, he'd do the same, although he told me that Friday nights were off limits for me if the team had a home game on Saturday. He absolutely had to have that time.\n\n\"To rest up before the game?\" I asked, doing my best to keep the sarcasm out of my voice. Holding clipboards, which would apparently be his job, was probably real hard work.\n\n\"No, man,\" he laughed. \"I gotta get rid of a lot of energy before the game. So I'll always have a bitch in here on Fridays, dude.\"\n\nWell, that wasn't that bad, I figured. The team only played ten games, and half of them were away. So that was only five Fridays. And, I soon found out, five Saturdays, since he apparently had to get rid of a lot of energy he built up during the game, too. I wondered if his willingness to expend energy on something other than football was the reason he'd been redshirted.\n\nAnd apparently, my assumption that it would be limited to weekends was wrong, too. I found the blue rubber band outside the door on Wednesday night the first week, and on Monday night the second week. I found myself hoping that he'd found most of these girls off-campus, because I really didn't want there to be that many Handley coeds with that little self-esteem. \n\n\"Look,\" I told him when I finally got back into the room on Tuesday after my classes. \"We gotta come to some kind of agreement about when this room is off-limits. Now I don't mind Fridays\u2014\" even though I'd spent last Friday night in the lounge on the third floor and my back was still killing me \"\u2014but I got eight o'clock classes during the week, and I this is where I live.\"\n\n\"Look, dude,\" he laughed. \"Just 'cause you can't score any pussy doesn't mean everybody else can't.\"\n\n\"And just because you don't have to go to class doesn't mean everybody else doesn't. Dude.\"\n\n\"Hey, man,\" he said, \"I gotta \u2014\"\n\n\"You got all day Friday,\" I cut him off. \"I'll give you that. You get here first on Saturday, you can have that, too. But Sunday night through Thursday, no. Room's gotta be free then, unless we both agree, in advance. Don't make me go to the RA on this, Chip.\"\n\n\"So you don't want a day?\" he sulked. \"You and your friends do it at the Gay and Lesbian Dorm then? That's probably better all around, if you know what I mean.\"\n\nHe perked up, apparently having found the worst insult he could dredge up. And after that, of course, the longer I went without female companionship the more names I got called. When he found out that my middle name was actually Gabriel, I went from 'dude' to 'Gay-bo.'\n\nOn the third Thursday we were there, I told him that the room was his for the whole weekend, and headed out. Not home, of course. I hadn't told my mother I was doing the MILF Show again, so I decided to get a motel room near the site of the intercounty competition, about an hour from where we lived. Robin showed up the next morning, and we met in the Dunkin Donuts for coffee.\n\n\"So how's school?\" she asked as I brought my coffee and donut over to the table she'd been sitting at when I arrived.\n\n\"'Sokay,\" I said. \"Only two weeks of classes so far.\"\n\nShe didn't need to hear right before a competition that I'd failed my first quiz in Economics, or that I'd identified Thomas Paine on a Colonial History quiz as the leader of the Massachusetts Colony, or that my English Comp instructor and I didn't see eye-to-eye on my writing ability. I mean, honestly, if, God forbid, I actually found myself inside of a paper bag, how did she think that writing would ever help me get out of it?\n\n\"And the roommate?\" Robin asked. I'd e-mailed her a few times, and told her a little bit about my main problem.\n\n\"Still an asshole,\" I said. \"And since I haven't scored since I've been there \u2014 because I'm a monk, Mrs. Kennedy \u2014 he's convinced I'm gay. And he and his cronies are having all sorts of fun with that.\"\n\n\"Why don't you just tell him what a big MILF stud you are?\" she suggested, her eyes twinkling.\n\n\"Nah, that's just playing his game,\" I said. \"Who's got the most marbles, who's got the most girls, who's got the biggest cock.\"\n\nShe raised an eyebrow.\n\n\"Well, yeah,\" I said. \"I do. But that's not where I'm going with this, ya know?\"\n\nShe smiled and changed the subject.\n\n\"Do you think we're the only couple in here who's going to be performing a striptease at the MILF Show in a couple of hours?\"\n\nI looked around.\n\n\"I hope so. I don't really want to see any of these others there. Most of them look like they're regulars on the donut circuit.\"\n\n\"Do you think we're the only couple at the show where the MILF's daughter is dating the handler?\" she grinned.\n\n\"I hope that's true, too,\" I smiled back. \"I'd hate to think some other poor schmuck's got himself into something this stupid.\"\n\n\"She says she's been e-mailing you,\" Robin teased me.\n\n\"Yes, and I've been e-mailing her back,\" I said. \"I'm scared I'm gonna send one of your e-mails to her by mistake. Like the one where I critiqued the video of you and your little purple friend. The last video was excellent, by the way. Did she tell you that she invited me to come to a dance three weeks from last night?\"\n\n\"But that's the day before the state finals!\" Robin protested.\n\n\"I know that,\" I pointed out. \"But she knows it's my mid-term break. She originally wanted me to come spend the whole weekend with her.\n\nI leaned forward and lowered my voice.\n\n\"She said I could spend the nights in the men's dorms,\" I grinned. \"They have an arrangement when visitors come over.\"\n\nRobin rolled her eyes at the air quotes I put around the word \"arrangement.\"\n\n\"I thought we'd sent her to a nice religious school,\" she complained.\n\n\"Sorry. Anyway, I've been trying to figure out some way to say avoid telling her the truth \u2014 can't, babe, your mom's gonna be doing my head that weekend \u2014 and not looking like a complete dork for turning down an invitation to spend a nice long weekend with a beautiful girl that I just happen to be falling in love with. And then, thank God, she got invited to \u2014 how did she put it? \u2014 submit her name for consideration for membership in some chi-chi sorority.\"\n\n\"She mentioned something about that to me, too,\" Robin said. \"Though not all the details.\"\n\n\"Well, apparently, it involves making a good impression at this dance on Friday night. And if you do that you get called back for the interviews on Saturday.\"\n\n\"So how do you figure in?\" Robin asked.\n\n\"She says she needs me for the dance. So meanwhile I'm thinking that if she makes the cut, she won't give a damn where I am on Saturday. You and I can, uh, do our thing in Springfield, and then this whole thing will be over.\"\n\n\"Your long national nightmare,\" she touched me on the cheek. \"Poor Kenny. Too many women want his time.\"\n\n\"Too many Kennedy women,\" I chuckled. \"What are you telling your husband, anyway?\"\n\n\"At this point,\" she finished off her donut, \"I feel like telling him I'm divorcing him. I mean look at me. Am I the same woman who came sneaking into your house at the beginning of the summer?\"\n\n\"Ummmm, I'll say no.\"\n\nAnother whack on the arm.\n\n\"He hasn't said a thing,\" Robin said with disgust. \"Not about the weight. Not about the haircut. Not about the fact that I offered to give him a blowjob the other day for the first time in, like, fifteen years!\"\n\n\"So how was that?\" \n\n\"He turned me down!\" she was almost shouting now. \"The asshole said he had to go into work and didn't have time.\"\n\nShe continued after a long pause.\n\n\"This weekend I'm supposed to be meeting my sister for all-day shopping. For the state show, I told him I have to go to some church women's retreat for the weekend. I'm going to leave my car outside the Beckers and Jane's driving me there.\"\n\n\"Jane Becker? The minister's wife?\"\n\n\"She thinks it's a hoot. Of course, all this is assuming I make the state show.\"\n\n\"Oh, you'll make it. As long as you show a little more interest in me today than you did last time.\"\n\n\"Interest in you?\" she snickered. \"Who the hell are you?\n\n\"I know, I know,\" she waved me to silence as I started to talk. \"You're the screen on which those young judges will be projecting their fantasies. I'm just teasing you. Don't worry about me this time. After all, I'm the one who's so horny I volunteered to give my own husband a blow job.\"\n\nI waited until she started laughing, and then joined her. It was funny, but also sad.\n\nAnd of course, she was the hands-down winner of her age division at the intercounty contest, channeling her obvious frustration into a look that said to each of the judges that if it was a real man like him standing in front of her instead of this bozo in the smock, she'd have his cock buried inside her as soon as this striptease was over. With twice as many women competing, she won it twice as easily as she had the local show. This time she squealed and jumped into my arms.\n\nI do like naked women. Particularly when they whisper, \"So you have a motel room, right?\" into my ear while they're in my arms. Even if they are my girlfriend's mother.\n\nAnd I did enjoy the show she put on in my hotel room, and the way she delivered on her promise to relieve me of the effects of the last three weeks of celibacy. I came so much she started choking on it.\n\n\"That's not gonna be really effective,\" I told her after we'd cleaned up. \"You know, if you start gagging and coughing while you're giving me a blowjob.\"\n\nShe just smiled at me and gave my limp dick a squeeze.\n\n\"You just worry about bringing the stuff to the show,\" she said. \"I'll worry about getting rid of it.\"\n\nOur mid-term break was another three weeks away, and, if anything, those three weeks were even more miserable than the weeks before the intercounty contest. Chip really didn't bother me that much, although I was getting a little tired of \"Gay-bo.\" What really made me miserable was that I still just wasn't getting it. My last history quiz had been okay, but my last English paper had been trashed, and my last Econ quiz had been worse than the first one. Now, to top it all off, we had an Econ mid-term exam on the Friday before the mid-term break. By the time I got to Terry's dance, I was going to be in one really pissy mood. I just hoped I didn't communicate it to Terry, and spoil her chance at her sorority. Or to Robin, and spoil her chance at twenty thousand dollars.\n\nVery fortunately, I never got the chance. On Thursday afternoon, I was sitting in my room studying for the test. Alec was in the same class, and he'd hauled in his book to ask me some questions.\n\n\"What makes you think I know this?\" I asked. \"I got a 63 on the first test and a 59 on the second one.\"\n\n\"I know you know it,\" he said. \"Every time I ask you a question, you know the answer. And you explain it a hell of a lot better than Old Foreman does. You just got some kind of test anxiety, man. Don't worry, it'll come.\"\n\nChippy then almost broke down the door, bursting into the room with two of his fellow jockos behind him.\n\n\"Dude!\" he greeted Alec, \"you'll never fucking guess who I just met. Becca Roberts!\"\n\nI allowed myself a small smile. But it was clear that Alec hadn't heard of her.\n\n\"Becca Roberts!\" Chip repeated. \"MILF America! She's fucking married to Bob Roberts!\"\n\n\"The woman who won the National MILF Show?\" Alec had heard of that. \"Is married to our Bob Roberts?\"\n\n\"Fuck, yeah,\" Chip said. \"They were sellin' a new DVD of last year's show at the bookstore, and she was there, dude. You know, Roberts is gonna address our pre-game dinner tonight, right? So I asked her to sign it for me.\"\n\n\"To number ten,\" Alec read, \"best of luck for the '07 season.\"\n\nHe passed me the DVD.\n\n\"I thought Vinny was number ten,\" I said, naming our current quarterback.\n\n\"Yeah, this year,\" Chip said. \"That's why I had her put down good luck for next year.\"\n\nYeah, good luck gettin' any playing time, I thought to myself, taking a last look at the tape before tossing it back to Chip. It was a new \"Collector's Edition,\" featuring \"more in-depth coverage.\" Honestly, I wondered, I couldn't even watch this many versions. And I was in all of 'em.\n\n\"You dudes don't mind if I take a quick look, do you?\" Chip asked, not really waiting for the answer.\n\n\"Nah, if I don't know this shit now I'm never going to,\" Alec closed his book.\n\n\"How 'bout you, Gay-bo,\" Chip grinned. \"Gonna bother you to see a little hetero action here?\"\n\n\"Not at all,\" I smiled. \"Go right ahead.\"\n\nThe film wound through the first rounds and, as I should have guessed, all of their eyes were glued to Becca each time she was on the screen. These guys wouldn't have noticed if the guy she was with had been a gorilla.",
        "After that, they cut in some interviews with the five finalists. So I had to watch five minutes of Connie Templeton going on about how great she was. Finally it was Becca's turn, and when she was asked for her secrets, she allowed as how she worked out regularly, ate well, and got plenty of loving from her husband.\n\n\"And of course, having the big guy here is a big help,\" she added with a particularly hot smile.\n\n\"The big guy?\" the off-camera interviewer said.\n\n\"My handler,\" Becca answered. \"My husband's a big guy, but my handler might be just a little bit bigger. And he makes me go off like a rocket.\"\n\nShe waggled her eyebrows at the camera and waved goodbye, and Chipper decided that this was a good time for another dig at me.\n\n\"Say, Gay-bo, is that true for you guys, too, the bigger the better?\" he said as his friends joined him in laughter.\n\n\"Aw, man, give the dude a fucking break,\" Alec said.\n\nThey started showing Becca's final performance in full then, using more camera angles than I'd seen before and capturing all of the wonderful sounds she'd made deep in her throat. All the other guys were squirming in their seats; probably if there wasn't a gay guy in the room they would be engaged in some sort of mass jerk-off.\n\nChip reached for the remote when her performance ended.\n\n\"Wait a minute,\" I said. \"I wanna see this next bit.\"\n\nPuzzled, Chip let it run. They announced the winner, and I smiled as I saw myself turning toward Becca to celebrate, only to watch her run right past me, out of the arena and into her husband's arms.\n\n\"Man, look at that poor guy's face!\" Chip laughed. \"Makes that bitch cum like that and then sees her run off to her hubby!\"\n\nHe noticed that nobody else was laughing. He looked around and saw that they were all staring at me.\n\n\"Man, why didn't you ever say something?\" Alec asked me.\n\nI smiled back.\n\n\"About what?\" Chip asked.\n\nAlec grabbed the remote, hit the rewind button a few times, and then hit the zoom button.\n\n\"Recognize anybody, Chipster?\" he asked.\n\n\"Fuck me,\" Chip said.\n\nThere was a knock at the door. One of Chip's buds got up to answer it and then backed slowly into the room. I could see into the hallway from where I sat; it was Becca.\n\n\"Hi,\" she said. \"Is this Kenny Winston's \u2014 there you are, big guy. Bob's got some boring football speech to give tonight so he suggested I take you out to dinner. Are you free?\"\n\n\"Fuck me,\" Chip said quietly.\n\n\"Normally, I'd love to,\" I told him as I pulled on my shoes. \"But I got a date.\"\n\nI closed the door behind me, leaving four speechless dudes sitting there staring at my face on the television screen.\n\nChapter 7\n\nBecause the schedule at the National MILF Show called for the 18-and-over division first and the 6-9 division last, Robin and I didn't have to remain there after her victory. She could leave now, and we could hang out in Las Vegas all day. Then come back the next day for the finals. She wanted to stay, though, to assess the competition.\n\n\"Assess the competition?\" I laughed. \"Who are you now, Joe Paterno? I remember when you would have been happy with the twenty thousand dollars!\"\n\nAgain with the arm. I was going to have a real bruise there.\n\n\"I just want to see if that slut makes it to the finals,\" she said.\n\nIt really surprised me just how quickly people took an active dislike to Connie Templeton.\n\n* * * * * *\n\nWe arrived at the Springfield Coliseum for the state finals early Saturday morning. Robin's division was fourth. They generally went in order of age at the state show, but they always moved the 6-9 division to the end because they thought that everyone would leave after the younger women performed. So we had a bit of a wait ahead of us.\n\nShe'd already asked me about school, which was going great. I told her about what had happened on Thursday, and how, for whatever reason, I'd gone into my Econ mid-term with this amazing confidence. Maybe it was what Alec had said, maybe it was Becca's very timely appearance. I didn't care. I told her that I was convinced that I'd nailed it. I didn't tell her the other good news, that my English Comp instructor had been hit by a bus. Oh, she was fine, just a couple of broken bones. But she'd be out of commission for a while, and we had a really hot-looking replacement. I mean, I was sure that this new instructor was an excellent teacher.\n\nAnd she had asked about my love life. I told her that the dance was fun, and that her daughter had never looked more beautiful. I didn't tell her about the conversation I'd had with some girl named Carrie, the president of the sorority, while Terry was in a back room. Carrie basically told me that they would have dumped Terry much earlier in the process until she let slip that she knew me from high school. She told me that she knew we weren't really dating because everyone knew Terry was a virgin. And then she asked me if I wanted to join her upstairs for a private party. I very firmly told her that no, I didn't want any such thing, and that if they didn't give Terry at least the courtesy of a full interview the next day, I was going to report them all to the inter-Greek council or whatever they had here. I would have told Terry to dump them if she hadn't looked so pleased when we arrived at the dance.\n\nFinally, after we'd exhausted the chit-chat, Robin settled down with the book she'd brought. I looked up to see Connie Templeton advancing on us.\n\n\"Kenny,\" she said, inspecting Robin as she greeted me.\n\n\"Connie, how are you?\" I said. \"Robin, I'd like to introduce you to Connie Templeton. Connie, this is Robin Kennedy.\"\n\n\"Nice to meet you,\" Robin smiled.\n\n\"Sure,\" Connie said. \"Kenny, I just wanted to let you know my offer's still open.\"\n\nConnie had e-mailed me earlier in the year to find out if I was available, and then continued to send me little pictures of herself throughout the summer and fall, even after it had become clear that I was going to be handling another contestant.\n\n\"Thanks, Connie,\" I said levelly. \"That's very sweet of you.\"\n\nShe waited a few more seconds, but when it became clear that she wasn't going to get the answer she wanted to hear, she finally turned to go.\n\n\"You have my e-mail address,\" she said as she left.\n\n\"I do,\" I agreed.\n\n\"What offer?\" Robin put down her book.\n\n\"Oh, it was nothing,\" I said.\n\n\"What offer, Kenny?\" she asked again.\n\n\"She wants to drop her current handler and take me on for the national show,\" I said.\n\nRobin looked down the corridor where she could still see Connie walking away.\n\n\"And what makes her think she's going to make the national show?\" she asked.\n\n\"She made it last year,\" I told her. \"She actually lost to Becca here at the states, and then went through the regionals to get to Hawaii.\"\n\n\"And she wants you to take over as her handler, after she beats me and I don't need you any more,\" Robin returned her attention to her book.\n\n\"Uh, yeah,\" I said. \"That's about it.\"\n\n\"She should be so lucky,\" Robin never lifted her head. \"Bitch.\"\n\n\"That does seem to be the consensus,\" I agreed.\n\nAfter they finished with the 9-12 group, which Connie won, and moved on to the 12-15 division, I decided to go for a walk on the concourse that surrounded the arena floor. On my way, I saw Becca heading for her seat. She threw me a wave, and yelled out, \"I saw your girlfriend! Tracy? Terry?\" before giving me a thumbs up and disappearing with the guy escorting her to her seat. I waved back, and probably walked another hundred feet before I processed what she'd said.\n\nTerry? Here? Oh, shit. I'd kill that fucking sorority bitch. What happened to those interviews? Somebody must have figured out I'd be here and told Terry. By now she would have eagerly skipped through the program, looking for my name. And she would have found it, right next to her mother's. She might have just left, but I really didn't think so. I took off at a run, scanning all of the concession areas, and finally, about halfway around the entire coliseum, I saw her sitting by herself. She looked gorgeous, of course. But the hard expression on her face wasn't a hopeful sign. She saw me approaching and her eyes narrowed.\n\n\"What do you want?\" she sneered.\n\n\"I want to tell you what's happening here,\" I said. \"May I sit down?\n\n\"It's a free country,\" she said, looking at her watch.\n\n\"Okay, where to start?\" I began, rubbing my hands through my hair. \"Okay, your mom came to me back in June, and \u2014\"\n\n\"I called Daddy,\" she interrupted me.\n\n\"You what?\" I asked.\n\n\"I called Daddy,\" she said. \"He's on his way here to take mother and I home.\"\n\n\"What makes you think she'll go with him?\" I asked.\n\n\"Do you think she wants to hear her husband standing in the arena, preaching the wrath of God to her?\" she smirked. Then she suddenly burst into tears.\n\n\"I can't believe you did this,\" she said between sobs. \"Carrie said she heard you were doing it again this year. And I thought to myself, no, he would have told me. But she had some press release she found on the internet, and so I had to pretend that I knew all about it, and that I was one hundred percent behind you. The whole sorority came to watch you because I told them how great my boyfriend was. Do you know how embarrassing it's going to be for me when they find out that you're doing it with my mother? How could you even agree to go out with me?\"\n\nI knew instinctively that my explanation was pretty lame: \"Your mom didn't want anyone to know.\" So I shut up.\n\n\"And what if you win?\" she pressed on. \"You and my mom are going to have sex out there this afternoon?\"\n\nOnce again, \"no, it's only a blowjob\" would have sounded pretty lame, so I remained silent.\n\n\"I can't believe what a jerk you are,\" she sobbed. \"I can't believe I let myself fall for you.\"\n\nNow I was getting angry. I was a nice guy; there was nothing wrong in falling for me.\n\n\"I can't believe my mother's such a slut,\" she added.\n\nI reached across the table and grabbed her arm.\n\n\"Now you listen to me,\" I said. \"Your mother's doing this for you.\"\n\n\"Oh, yeah, right,\" Terry spat. \"Trying out my boyfriend.\"\n\n\"Your mother came to me last spring, when you wouldn't give me the time of day, because your family had absolutely no money left to pay for college. Your father has invested every penny you guys have in something that still hasn't paid a cent, so when your mom's the only one in the house, she lives on macaroni and cheese. The basement's full of fucking macaroni and cheese boxes behind those sheets she hung up. When I was there, or when your father finally makes it home for a meal, or you come home, or Wally comes home, she takes the money she's saved and makes real food. But otherwise she's been surviving on fucking macaroni and cheese.\"\n\nI was on a roll now. I'd seen the mac and cheese boxes before one of our workouts, and it hadn't taken me long to figure out what they meant.\n\n\"So last spring, when your tuition payments were due, she came to me. And I loaned her twenty thousand dollars so my best friend and his assholier-than-thou sister, who could never even remember my name, didn't have to spend this semester working in a 7-Eleven to earn enough money to go to community college next year.\"\n\n\"You're lying,\" Terry murmured.\n\n\"So she's here because first prize in her division is twenty thousand dollars. And she's gonna try to give it to me, to pay me back, and I'm going to say no, you keep it so my friend Wally and my former friend Terry can stay in college for the next semester until your father's fucking fantasy investment comes in.\"\n\n\"I don't believe you,\" she said through her sniffles.\n\n\"Yeah, well, believe what you want,\" I said. \"Just let her win the twenty thousand dollars. Oh, and when Daddy gets here, ask him where the money came from to keep you in college this year. Your mom told him you got all this great financial aid this year, but we both know you didn't, don't we? See you 'round, Theresa.\"\n\nI stormed off, my stomach doing little flips, my body shaking. I had to calm down. Robin was much too attuned to my moods now. She'd know something was up. I kept on walking. By the time I made a couple of circuits and returned to the contestant area, I'd settled down a little bit. Enough, I hoped, to be able to go through with this performance. Fortunately, I didn't have a really big role. Robin would do her striptease with all the other women, and then, after fifteen contestants, do her dildo routine. She was already in her bikini when we got back, and I changed into my smock.\n\n\"I feel so stupid in this,\" she said, gesturing at the outfit. \"I can't believe they make us wear these. And with all those people out there.\"\n\n\"Yeah, well, everyone else in this contest is wearing one, too,\" I said. \"And I've had a look at them. Not one of them has your body.\"\n\n\"Really?\" she looked into my eyes.\n\n\"Really. The only advantage they could possibly have over you at this point is that they feel really, really sexy, and you just feel embarrassed.\"\n\nShe looked around.\n\n\"And how do I fix that?\" she said.\n\nI bent down and lowered my voice.\n\n\"You remember,\" I said, \"that if you win this competition, you'll be able to suck the biggest, fullest dick you've ever had in your life.\"\n\nHer eyes involuntarily dropped to my crotch.\n\n\"And if I don't?\" she said after moistening her lips.\n\nI reached down and cupped her chin with my hands, probably the most intimate gesture I'd used in two seasons of competition. I pulled her up to look into my eyes and smiled.\n\n\"It won't come to that,\" I said.\n\nShe looked back down.\n\n\"No,\" she said quietly, a shiver running through her body.\n\nGood. Now only one of us was scared to death.\n\nThe procession went fine. I could hear Jane Becker screaming as we marched. Probably Mr. Kennedy hadn't gotten here yet. I couldn't check my watch, but the clock in my head said it must be close to eleven. I figured he couldn't get here before one or one-thirty. We might actually pull this off. At least Robin could win her division. The finals weren't until three, though. There was no way he wouldn't be here by then. But I couldn't believe that they would take away the divisional trophy just because the winner's husband was an asshole.\n\nRobin's striptease was excellent. I'd lied to her \u2014 just a little bit \u2014 about having the best body. One of the women was only thirty-four, which meant she'd had a kid at age 16, and she was in excellent shape. I found it hard to believe that she hadn't had those puppies enlarged, too. But the judges, particularly once you got to the state level, were pretty savvy about that. And there was another woman who, I'd noticed in warm-ups, appeared to have been some sort of cat in a previous life, she moved that gracefully.\n\nI wasn't watching them now, of course. I was concentrating on Robin, letting her know that her seduction was working. At this level, she needed everything I could give her. I tried to use my eyes to let her know how hard my cock was getting while I watched her untie the front of her bikini. I licked my lips when she reached for the strings of the bottom, tugging them free but still holding the fabric in place around her hips. I let my mouth fall into a shy gape when she finally yanked it free. And finally it was over. I took my place beside her as the judges began their inspection of the MILFs.\n\nAll in all, I felt pretty confident. I'd figured if Robin could finish the striptease in the top three, I could win her the money. And I couldn't imagine that she hadn't done that.\n\nThe inspection ended, and the women began their masturbation routines. They were all pretty good, some a little more obviously fake, some really getting into it. Finally, it was Robin's turn. I walked out away from the podium, the required five steps for handlers. Like all the others had, I reached into the pocket of my smock for the dildo, pulling it out into the air. There weren't any rules about dildos; the one I'd pulled out was purple, the same one that Robin had been practicing with. Holding it high in the air, I lowered my hand, stretched it out toward Robin, took a step forward, and then turned and fired it into the stands.\n\nI heard Robin gasp, and I turned to see her with her mouth opened, stunned at what I'd done. To her, that dildo was worth twenty thousand dollars. I smiled at her, and reached into my other pocket. Her eyes were locked on my hand as I pulled out another dildo, one I had ordered custom-made for this competition back in late August. As closely it could, it matched the length, the thickness, the head, the color, and the bumps and ridges of my own erect cock. Robin recognized it immediately, and her look changed from one of shock to one of sexual hunger. We had lost maybe thirty seconds. I wasn't worried about it.\n\nThe crowd was going nuts. They had no idea what my cock looked like, but they could tell exactly what I'd done from Robin's face. Plus from the way her guttural voice came out over the loudspeaker: \"Now give me your fucking cock.\"\n\nI strode forward and held it out for her. She grabbed my wrist, and used my arm to plunge the dildo deep inside of her. Grabbing hold of the dildo with one hand, she raised her leg and put a foot on my chest. Our eyes locked, and she pushed me away as I let go, falling backward onto my ass in the sand of the arena floor. Then I just watched as she began to fuck herself.\n\nThe audience never stopped cheering. At the end, when Robin finished her exquisitely timed orgasm, she became the first woman, at least in the two years I'd been attending the Illinois show, to get a standing ovation. I smiled at her and took my place back by her side.\n\nThere were some more competitors, I don't really remember how many. The audience was very polite to them. But they were all taken aback by Robin's performance \u2014 including the babe with the nice rack and the Catwoman \u2014 and when the judges came out to present the divisional trophy, the audience expectantly rose to its feet once again.\n\n\"The winner of the division for MILFs with children ages eighteen and over,\" the announcer began, \"is Robin \u2014\"\n\nI assume he said Kennedy, but neither one of us actually heard it. Apparently, the audience assumed he was going to say it, too, because the roar from the crowd almost knocked us off our feet. The judge with the trophy smiled and headed for us, and that's when Robin turned to me and threw her arms around my neck.\n\n\"Oh my God,\" she cried. \"We did it. We did it, Kenny! We did it!\"\n\n\"We did,\" I patted her on the back. \"Yes, we did.\"\n\nShe sniffled her way through the presentation, waved to the still-cheering audience, and grabbed my arm to walk out together. I saw Connie in the distance as we left the arena, and gave her a little wave. We were now officially competitors in the finals for the second year in a row. Well, she was actually Robin's competitor, but I was sure she didn't see it that way. She gave me a frosty look and turned away. I just smiled.\n\nAs the time for the finals grew closer and closer, I got more and more worried about what Allen Kennedy was planning. He must have gotten here by now; it didn't take that long to drive to Springfield. My guess was that he was standing out there, fuming, planning how to achieve maximum disruption.\n\nJust before we went out, I took Robin aside.\n\n\"I want you to promise me one thing,\" I said.\n\n\"All right,\" she agreed.\n\n\"No matter what happens out there, even if the roof caves in, promise me that you won't lose your focus. That you'll spend the entire time we're out there, from the minute we come out of that tunnel, concentrating on one thing.\"\n\n\"Your dick,\" she said.\n\n\"My dick,\" I agreed.\n\n\"I promise.\"\n\nShe did it, too. The five finalists paraded in one after another, with Connie second and Robin last. The MILFs were naked, and as they took their place on their show pedestals in the middle of the arena, their five handlers stripped off their smocks. I watched Robin's eyes lock onto my cock. Her focus was so intense that I swear I forgot about her husband, even as we waited for all of the other finalists to perform.",
        "Connie had gotten better at giving head, I had to give her that. Last year, she'd managed to get into the finals based on her body, and hadn't given much thought to the fact that the other four finalists would have bodies just as good. She'd treated her handler like she probably treated her husband, and everyone knew it. And she had lost to Becca. Now she had at least learned to pay some attention to the cock in her mouth rather than to the reaction of the audience around her.\n\nAs I said, she was good. The other three women were okay; apparently they'd all gotten their attitudes from the same store Connie had visited last year. Robin was awesome. As far as anyone in the audience knew, she really did love my cock. Up and down, in and out, sucking the balls, kissing the head \u2014 I was in ecstasy. And once again her timing was perfect. It was a five-minute blow job, and with twenty seconds left I was ready to blow.\n\n\"Robin,\" I whispered. There was a reason I'd spent the last three weeks storing semen, and it wasn't to let it run down the back of her throat. With both hands wrapped around my cock, she pulled her head as far back as she could and aimed me at her face as she rubbed her thumbs down the front of my cock.\n\n\"Oh, God,\" I groaned, firing the first salvo directly into her mouth. She used me like a hose, spraying her face, her chest, and her tits with everything she could pump out of me. The bell went off to signal the end of the five minutes, and she sat back on her haunches in dead silence.\n\nShe licked her lips and swallowed.\n\nAnd the place went nuts again. Out of the corner of my eye, I could see the woman in the 6-9 division rubbing herself, while her handler grabbed hold of his dick to try to keep it from going off. I figured we'd beat them, at least.\n\nWe all stood there for the next ten minutes, our eyes all finally fixed on the judges' box, where there was clearly an argument going on. Finally, they left the arena to go argue in private, while the announcer asked the audience to please stand by for the judges' decision.\n\nRobin leaned over to me.\n\n\"Yeah, well, they're not standing by with a monster load of cum drying all over them.\"\n\nThey'd apparently forgotten to turn the sound system off, and the audience erupted into laughter. When Robin gave them a big grin and a wave to show she didn't give a fuck what anyone thought of what she said, it changed to applause.\n\nThe judges came back during the applause, and walked out to the center of the arena with Becca, carrying the trophy and the checks for the winners. Becca handed out the check to the poor girl in the 6-9 division, and similar checks to the winners of the 12-15 and 15-18 divisions. That left Connie and Robin.\n\n\"Ladies and gentleman,\" the announcer blared. \"For the first time in the history of the Illinois MILF Show \u2014\"\n\nI had to stifle a laugh. What was that, four years?\n\n\"\u2014 and for the first time at any state MILF show,\" he continued, \"the final round has ended in a dead heat. The judges have accordingly added together the prize money for the winner and the runner-up, and will present half of the total, or eighty-five thousand dollars, to Connie Templeton and Robin Kennedy.\"\n\nThe audience applauded politely, not quite sure what to make of this turn of events. They probably didn't like ties any better than Woody Hayes had. But Robin couldn't hold it back. She turned to me with an expression of triumph, and plastered her naked, cum-covered body against mine. The applause started to grow louder, and the announcer faltered and then picked up again.\n\n\"The rules of the National MILF Show, however, permit each state to submit the name of only one contestant. For that honor, the judges have selected Connie Templeton.\"\n\nI've been to a few Cubs games. I've been to see the Bulls play. And yet, I've never heard booing like that in my life. People were going to start throwing things soon. Becca stepped forward with the trophy and a check and walked up to Connie.\n\n\"Good luck,\" she said with a catty smile, practically thrusting her burden in Connie's arms as if she couldn't get rid of it fast enough.\n\nThen she stepped forward with a check for Robin, and a big grin spread across on her face.\n\n\"Good job, MILF\" she said, handing Robin the check and spreading her arms. Robin fell into her embrace, and the audience began to applaud again. Becca came over to give me a hug as well, and with Becca on one arm and Robin on the other, both waving to the crowd, I walked out of the arena.\n\nWe were packing our stuff when Connie made one last approach.\n\n\"Nice job,\" she murmured with a fleeting glance at Robin. \"Kenny, what about my offer?\"\n\nI was speechless. Robin wasn't.\n\n\"Your offer to have him join you in Las Vegas?\"\n\nShe finished packing her bag and looked at Connie for the first time.\n\n\"He'll be happy to join you in Las Vegas,\" she smiled. \"So will I. You can buy us dinner before we perform.\"\n\nShe turned and left a speechless Connie standing there. I grabbed my bag and caught up with her as we walked down the tunnel to the entrance to the coliseum.\n\n\"You have to win a regional contest to do that, you know,\" I said under my breath.\n\n\"I've heard that.\"\n\n\"You have to have sex at those contests, you know,\" I continued.\n\n\"Yes, I've heard that, too,\" she said, slipping her hand through my arm as we walked.\n\n\"So, uh, what about the Seventh Commandment?\" \n\n\"There are ten commandments, you know,\" she countered.\n\n\"Well, yeah,\" I said. I may have been an agnostic but I wasn't a complete idiot.\n\n\"Well, I'll still have nine left,\" she looked at me with her eyes twinkling.\n\n\"True,\" I smiled back at her. \"You could still get an A-minus.\"\n\nShe laughed, and then grew serious.\n\n\"Of course, I guess I will have to tell Allen,\" she sighed.\n\nI looked ahead of us, and saw Terry waiting at the end of the tunnel.\n\n\"I think that ship has already sailed,\" I said, nodding ahead. \"You guys need to talk. If you still want to do it, send me an e-mail. The regional's in three weeks. I have had the time of my life, Mrs. Kennedy. Robin.\"\n\nI kissed her on the cheek and made a sharp left turn for a side door. I really am a coward. "
    ],
    "authorname": "MarshAlien",
    "tags": [
        "milf",
        "friend's mom",
        "girlfriend's mom",
        "dildo",
        "older woman",
        "striptease",
        "milf blowjob",
        "younger man"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/show-moms-ch-06-07"
}