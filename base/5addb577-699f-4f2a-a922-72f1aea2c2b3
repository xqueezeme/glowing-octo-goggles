{
    "title": "Three Square Meals Ch. 045",
    "pages": [
        "Rachel grinned happily as she glanced around at John, Alyssa and Jade who sat with her on the sofas in the Officers' Lounge, feeling relaxed and at ease in their company. They were chatting with Jade about her initial experimentation with shape-shifting, and Rachel listened with fascination as the Nymph talked about researching different creatures, so she could try her hand at copying their exotic forms. Alyssa suddenly turned to look at the door to the lounge, a sparkling smile lighting up her beautiful face. \n\nA few seconds later, Rachel could hear Calara and Dana's voices coming from the corridor, as they chattered excitedly about the successful upgrade of the Tactical Station. Her own face lit up with a broad grin, and her heart skipped a beat when the double doors opened, and the gorgeous redhead skipped into the room.\n\n\"Your designs are perfect!\" Dana exclaimed to the Latina, as they glided over to join them. \"You have nothing to worry about,\" she added encouragingly.\n\n\"I'll feel much happier after a field test though,\" Calara said with a frown, then leaned over the back of the sofa to give John a kiss. The brunette then sat down next to Alyssa, and the two of them smiled at each other lovingly.\n\nDana copied Calara, leaning over to give John an enthusiastic kiss, before standing and flashing a flirtatious smile Rachel's way. The redhead prowled over to join her, putting into practice all the advice Rachel had previously given, and she could feel herself flush with excitement at the look she shared with the auburn haired girl.\n\nDana sat next to her on the sofa, their legs brushing together tantalisingly as she sat and said teasingly, \"Did you miss me?\"\n\nRachel grinned as she nodded, and it was true; she did feel much better now that all of them were gathered together in a group. Being honest with herself though, she knew it was Dana she had missed most of all, and she sighed happily as she gazed at the bubbly girl's gloriously beautiful face. She looked up at the others self-consciously, and saw that they were smiling at the two of them affectionately.\n\nShe marvelled at their open acceptance of the budding relationship growing between her and Dana, and felt a surge of gratitude to these wonderful people once more, for welcoming her so warmly into their remarkable company. She had never dreamed she would ever find a person who would encourage her so enthusiastically to just be herself, and now here she was, living with five of them who seemed to love her all the more for it.\n\nDana nudged her gently with an elbow, disturbing her thoughts, and asked, \"How's it going with the Psi-detector? Are you ready to conduct that test you mentioned?\"\n\nRachel nodded eagerly and replied, \"Definitely! As long as you guys don't mind helping out?\"\n\nThey all nodded their willingness to assist, and spread out around the huge lounge, while taking pity on John, letting him relax on the sofa. Rachel proceeded to carefully study the ethereal white lines of light joining each girl with Alyssa, which she could clearly see through the holographic display on the Psi-detector. There was a recording function built into the futuristic looking ray-gun, and she pressed the corresponding buttons, which began recording everything she was seeing in the holo-display. When she had finished taking a recording from each of them, Dana hooked up the device to the large viewscreen near the sofas, so that they could view the results.\n\nThey noticed that equally intense lines of light seemed to be coming from Calara, Dana and Jade, although Jade's aura burned far brighter than those from the Terran girls. The luminescent line connecting Rachel and Alyssa was much dimmer, and seemed weaker somehow, fragile and tenuous. By contrast, the wide ethereal cable that connected John and Alyssa together was broad, strong and very bright indeed, although it still paled in comparison to the blindingly white aura coming from the blonde girl.\n\n\"You look like the girl from my dreams,\" John observed, stifling a yawn as he studied the radiant figure on the screen.\n\nAlyssa grinned at him and teased him playfully, \"I'm the girl of your dreams? How sweet!\"\n\nHe chuckled as he said, \"I'm too weary to banter with you, but yeah... you are.\"\n\nShe smiled happily at that, then walked over to sit on the sofa beside him, planting a tender kiss on his cheek.\n\nRachel meandered over to join them too, looking up at the screen in frustration. \"I can't tell if the lines are just some kind of psychic tether, or if they represent some sort of energy flow,\" she muttered, as she stared intently at the ethereal lines on the screen.\n\n\"I think they're flows of energy,\" Dana guessed as she sat down next to the brunette. She carefully pried the Psi-detector out of Rachel's hands, who was staring transfixed at the images above her. \"I'll need to make a few tweaks to be certain, and to enable us to see the direction the energy is travelling in.\"\n\nAfter the redhead had made her modifications, they spread out again to check with the Psi-detector once more, so that Rachel could observe what was happening. She zoomed in closely to the pulsating streams of light, hitting record as she did so, and stared in fascination at the ebbing and flowing psychic energy.\n\n\"It seems to be going in both directions,\" she said cautiously, as she stared intently at the display. \"Like a gentle stream that's flowing upstream and downstream at the same time.\"\n\nAlyssa pondered this for a moment and then suggested, \"Perhaps those represent our thoughts, travelling telepathically over the bond?\"\n\nRachel glanced at her and nodded, as she replied, \"It's a good theory. Whatever the real reason, there's definitely some kind of shared energy transfer occurring.\"\n\nThey gathered around to watch the recording once more, and agreed with Rachel's hypothesis. As the images changed from focusing on Dana, to Jade, to Alyssa, the brighter aura around the Nymph was immediately apparent, with the effect even more pronounced when Rachel had moved on to the blonde girl.\n\nDana pointed at the white aura surrounding her friend and said, \"Those brighter auras must represent the psychic strength of the individual. It can't be a coincidence that Alyssa is the only one with really major powers, and hers is the brightest by miles.\"\n\nAlyssa pondered this for a moment, and then suddenly blurted out, \"The Bolon could see my aura!\"\n\nDana looked at her with a bemused expression, and said, \"Sorry, I don't follow.\"\n\n\"That alien that looked like a green gelatinous blob, at the Merchant District,\" the blonde explained with a smile. \"They are Psychic, or can use telepathy at the very least. I had a telepathic chat with the one on Geniya station and he was lovely and friendly, just like the one I met at Port Heracles. Anyway, the first one called me 'Young one', and this second one called me 'Bright one', so I wonder if they can naturally see the aura of someone with psychic powers?...\"\n\nRachel looked thoughtful and said, \"So he called you that because your psychic aura is so bright?\"\n\nAlyssa nodded, \"That's what I'm thinking. I've obviously grown a lot more powerful since my first encounter with a Bolon, months ago.\"\n\nDana then looked at John in confusion, and asked him, \"But what about you? Alyssa said that the Ashanath were convinced you're psychic as well, but you've got no aura at all! Even me, Rachel, and Calara have a faint glow. You're as dark as the sofa!\"\n\nJohn shrugged helplessly. \"Perhaps the Ashanath were wrong? Alyssa and I experimented a little with telepathy the other night, but I had no luck at all,\" he said with a frown. \n\nThey glanced around at each other, but everyone wore a similarly bemused expression, not having any real answers.\n\nAlyssa frowned and said, \"I feel like we're fumbling in the dark. We need someone to really train us, and me in particular, about how all this stuff works. I'm sure it would be a lot more useful if I knew what I was doing!\"\n\n\"The Ashanath?\" Dana suggested enthusiastically, enjoying the idea of visiting the diminutive grey-skinned aliens again.\n\n\"Maybe, but I hadn't planned on going back to Ashana for a while,\" John said hesitantly, before he smirked, as he looked at the blonde at his side. \"Perhaps Irillith's mother could give you a few pointers?\"\n\nShe giggled and rolled her eyes. \"If her mother is anything like her daughter, I think I'll pass. Thanks though,\" she said sarcastically.\n\nHe was about to reply, but let out a big yawn instead, much to everyone's amusement.\n\nAlyssa smiled at him kindly and said, \"Come on, let's get some dinner inside you, and then you can get to bed.\"\n\nHe nodded wearily, and they got up and moved over to the dining area, so that they could eat dinner together. The conversation was quiet but pleasant, and John enjoyed listening to the girls talking amiably amongst themselves.\n\nJohn finally collapsed into bed just after eight that evening. Between passionate sessions with the girls in the bedroom, upgrading the Invictus, sparring with Yamamoto, and energetic races in the pool with Jade, he felt completely shattered. Alyssa tucked him up under the covers, and he smiled wearily at her in gratitude as his eyes grew heavy and he fell fast asleep. The girls then gathered around Rachel, who was studying the Psi-detector, checking to make sure the latest tweaks that Dana had made were working correctly. \n\nThe redhead looked eager and said to Rachel enthusiastically, \"OK! Let's fire it up, and see what's happening!\"\n\n\"But do it quietly,\" Alyssa whispered with a frown, glancing at John, who slumbered away undisturbed.\n\nDana nodded guiltily, but then said encouragingly to Rachel in a quiet voice, \"Go ahead!\"\n\nRachel nodded, and she pointed the Psi-detector at John, \"It's changed!\" she gasped in a hushed voice.\n\nThe other girls crowded around her to look at the image on the Psi-detector, which showed the thick pulsing beam of light that connected John to Alyssa. The stream of energy now seemed to be lazily flowing in one direction, towards John's sleeping form. Rachel urged the rest of them to spread out, and she carefully checked the glowing streams of light from herself, Calara, Jade, and Dana.\n\n\"We're all feeding energy to you,\" she said quietly to Alyssa, \"and you seem to be channelling it to John!\" \n\nThey all gathered together again, so that they could talk in hushed whispers.\n\n\"Do you remember when John got stuck through the chest with that sword?\" Calara asked, looking thoughtful. \"We were absolutely exhausted the next morning. I wonder if we all got so tired because we were giving John energy to heal.\"\n\nDana frowned, shaking her head as she replied, \"But I felt absolutely fine the next morning!\"\n\nJade tilted her head to one side and looked thoughtful as she said, \"Yes, but I fed you the night before. You had a big tummy full of cum to help you heal that broken arm.\"\n\nRachel glanced at the snoozing Progenitor in their midst and said, \"Perhaps he borrowed energy from each of you to help him heal, but left Dana undisturbed because she was badly hurt, and needed to heal herself?\"\n\nAlyssa nodded, but looked puzzled, \"That makes sense, but I'm not consciously doing anything. Whatever is happening, I have no control over it.\"\n\nRachel smiled at them and said, \"Well whatever happened, it seems like it was you girls that healed him that time. I can tell you, as a doctor, that you definitely saved John's life.\"\n\nThe girls smiled at each other with delight, finding the thought that they had helped heal him wonderfully rewarding.\n\nCalara gazed at John fondly and said, \"After the way he healed all my injuries when I joined the crew, it feels so nice to know that I finally returned the favour.\" \n\nAlyssa smiled at the others and said, \"I don't know about you girls, but I really want to give him a cuddle. Let's all go to bed.\"\n\nThere were quiet murmurs of agreement, and they stripped off quickly before joining John under the covers, being careful not to disturb his rest.\n\n***\n\nJohn woke the next morning, feeling fully refreshed after a long night's sleep. He stretched tentatively, being careful not to disturb the girls lying next to him, and he was relieved that he had no aches or pains as he stretched his muscles.\n\nThe glance down at the sleeping girls revealed one dark brown head of hair, and another with thick dark auburn tresses, letting him know it was Calara and Dana cuddled up with him. He looked across at the other girls, and a set of bright blue eyes looked at him from over the redhead on his right hand side.\n\n*Good morning, handsome,* Alyssa thought to him cheerily.\n\n*Same to you, beautiful,* he replied happily, but glanced down at Dana curiously. *Why the change in sleeping arrangements? You girls normally seem to have favourite spots when it comes to who lies where, and it's normally you lying here.*\n\nShe grinned at him, and her eyes sparkled with amusement, *Would you like to know the rules?*\n\nHe stifled a laugh, and sounded intrigued as he replied, *Sure! I bet it's very complicated.*\n\nAlyssa shook her head as she smiled, her golden blonde locks moving like waves around her stunningly attractive face. *It's actually pretty simple. We sleep next to you in order of seniority, with me on your right, and Calara on your left, with the newer girls alternating outwards from right to left. If you fuck one of us before you fall asleep, then she gets to sleep in your arms, because you stroking our swollen bellies when we're carrying your cum feels wonderful,* she told him with a wistful sigh.\n\nJohn chuckled quietly, and glanced down at Dana again, *I was pretty exhausted last night, and I don't remember getting up to anything with our adorable redhead.*\n\nAlyssa smiled as she wrapped her arms around Dana, hugging her gently, as she thought to him, *We tested the Psi-detector last night, and it seems that we feed you energy when your body needs healing. The girls send psychic energy to me, and then I transfer it to you somehow. All the talk of healing reminded Calara and Dana how you healed all their scars, and they wanted to fall asleep cuddling you, so we shuffled the deck a little.*\n\n*So I could royally mess with the sleeping arrangements by being with say... Rachel and Jade every night?* he teased her playfully.\n\n*You could, but you won't,* she replied confidently.\n\nHe raised an eyebrow at her bold reply, and said with a smile, *You sound very sure of yourself.*\n\nShe nodded and smiled at him fondly. *Whether you're consciously aware of it or not, you tend to alternate who you're with, to try and keep it fair. I think you care a great deal about all of us, and don't want anyone to feel left out.*\n\nHe smiled at her, and nodded, and she continued staring into his eyes as she held her friend in her arms. *Have you decided who you want this morning?* she asked him curiously.\n\n*All this talk of tummies full of cum has got me turned on,* he acknowledged with a grin.\n\nShe smiled at him as she said, *I know. I'd recommend Dana and Calara. They were very grateful to you last night, so I think you'll have fun with them showing you their appreciation.*\n\nHe laughed aloud at that, shaking his head as he said to her gratefully, *It sounds like I should be the one thanking you girls instead.*\n\n*That works too,* she replied with a grin.\n\nHe returned her eager smile and carefully extricated himself from the tangle of lithe limbs draped over him, being careful not to wake up the redhead or the Latina to either side of him. Ducking under the covers, he repositioned himself by Alyssa's athletic legs, finding her amongst the wide selection of toned young women that were lying asleep in the bed. He leaned down and gently kissed her calves, alternating from one smooth leg to the other, and kneading her young flesh with his hands as he travelled up her body.\n\n*Have you been taking massage lessons from Jade?* she asked him, her delighted voice echoing in his mind. *Because that feels incredible!*\n\n*No, but I've been on the receiving end of her talented hands more times than I can count,* he replied with amusement. *And I know you girls like a firm touch.*\n\nAlyssa stifled a groan as his trail of kisses proceeded up her bronzed thighs, his strong hands parting them to give him better access to her. He decided to tease her a little and began to nip playfully at the soft skin on the insides of her thighs, not enough to hurt, but a different enough sensation for the blonde to shiver with anticipation. Taking a firm purchase with his hands, he pushed her legs up and back, exposing her for him completely, and eliciting a surprised gasp from the blonde.\n\n*This is so different from the girls!* she observed excitedly, her lovely voice drifting through his mind.\n\n*Is that good or bad?* he asked her playfully, as he inched further up her legs, his tongue flickering out to taste the velvety soft skin.\n\nShe grabbed a pillow, and moaned into it to avoid waking the others, as his teasing lips got closer to her pussy. *Really good!* she replied enthusiastically.\n\nBy this time he'd reached the silky smooth folds around her sex, and he began to lap at her gently, while not moving anywhere near her most sensitive spot. *How so?* he asked her curiously.\n\n*The girls make love to me with their mouths, eager to make me cum on their tongues. You're so overpowering, it feels like you're just getting me ready for the main event,* she panted as he began to lick her with longer fluid motions of his tongue.\n\nHe smiled as he moved a little higher and spread her legs further, parting her pussy lips and exposing her throbbing clit. *Getting you nice and wet so I can fuck you?* he prompted, as he took an experimental taste of her pulsating bundle of nerves. \n\nThe feel of his mouth made her gasp, and she let out a long sigh as he began to lap away at her clit, slowly dragging his wet tongue over her again and again. *Are you going to fuck me?* she asked him pleadingly, as she let out a whimper.\n\nJohn shook his head, and the horizontal movement of his tongue made her writhe under him as he held her in place. *No,* he replied firmly. *I'm going to make you cum, and wake up the other girls with your cries of pleasure. Then, when I'm done with you, I plan to give each of them the same treatment.*\n\n*Are you going to feed your cum to all of us? Share it out, so we all have your spunk in our stomachs?* she asked him eagerly, their lurid telepathic conversation turning her on almost as much as his darting tongue. \n\nHe grinned as he let go of her right thigh, moving his finger to her slick pussy instead, while maintaining his relentless attention on her clit. He slipped one finger inside her, causing her to gasp, and then wormed in a thick second finger beside it. Alyssa began to her hunch her hips up at him, her body desperate for the penetration, so he let go of her left thigh, and he placed a firm hand across her slim stomach. He could feel her strong abdominal muscles underneath her deliciously soft skin, and he revelled in the sensation as he pinned her to the bed. The two fingers of his right hand were being rhythmically squeezed by her snug grasp, so he crooked them and made a beckoning motion, stroking the ribbed skin with an accomplished touch.\n\nWhen he found her G-spot, Alyssa arched her back, her strong athletic body pressing hard against his restraining hand. She cried out at the intense pleasure as he sucked and licked her clit, moving in sync with the strong motion of his fingers, and John could feel the other girls waking as he worked the blonde closer to a thunderous climax.\n\n*I heard what you said earlier,* he thought to her, finally answering her question. *I realise I've been going about this all wrong, sharing out my cum between each of you. You all relish the feelings of submission when your bellies are stretched with a full load, and when I stroke your cum-packed stomach, it reminds you who you belong to,* he added knowingly.",
        "*Fuck!* Alyssa replied, her thoughts becoming more rambling and incoherent as he built her up to a crescendo with his tongue, fingers and words. Her thighs began to tremble, as her body reacted to his touch, and she quivered helplessly as he fucked her with his fingers.\n\nJohn smiled confidently as he continued, *So when I've finished showing my appreciation to each of you, you're going to kneel in front of me, and stare into my eyes as you suck my cock. I've decided I want to start every morning with one of you blowing me, and you're going to be a good girl, and show them how it's done.*\n\nAlyssa shrieked and bucked under him, her hypersensitive clit sending her body into pleasure overload. John was merciless and kept her pinned down with his left hand on her stomach, while stroking her with his right fingers, and sucking lovingly on her clit. She wailed through her long, drawn-out climax, until he finally relaxed his strong grip and slid his fingers from her overheated pussy. The blonde curled into a ball, and let out a bewildered moan as she reeled from such a strong climax. John threw back the covers and sat up, beaming a broad smile of satisfaction at the titanic orgasm he had brought forth from his blonde lover.\n\nFour more beautiful young faces stared at him with excitement, and he asked them playfully, \"So, who wants to go next?\"\n\n***\n\nJohn spent a very enjoyable couple of hours showing just how grateful he was to Alyssa, Calara and Jade for saving his life, to Rachel for making the discovery about the psychic healing, and to Dana, because he always loved showing her his appreciation. He was as good as his word, and he resisted the urge to fuck any of the gorgeous girls, no matter how much they begged and pleaded as they writhed on his tongue. He finally finished with all of them kneeling on the floor at the foot of the bed, staring up at him with flushed, aroused faces, while Alyssa worshipped his cock. \n\n*This isn't a game now,* Alyssa told him lovingly as she sank his cock down her throat. *No one's pretending this time, we're all completely devoted to you.*\n\nHe stared into their eyes as they gazed up at him adoringly, and as he went from shining emerald, to sky blue, deep dark brown, stormy grey, and back to Alyssa's piercing cerulean, he could see that she was telling the truth. For the first time, he truly accepted the complex symbiotic relationship he had built with each of these amazing women, and his own place as their leader. \n\n*As our Lion,* Alyssa corrected him, her voice ringing with satisfaction and triumph. *We're your pride of beautiful lionesses.*\n\nHe stared into her eyes for as long as he could manage, but eventually the blinding intensity of that look was too much for him to take. He let out a roar as his quad blasted a huge load down her rippling throat, and she moaned with delight as she sucked him hungrily.\n\nThey showered together afterwards, with the girls all wearing blissful smiles as they lathered up, and got each other clean. Alyssa's belly was enormously rounded with the heavy weight of his cum resting in her stomach, and she let out happy little sighs as they lovingly stroked her swollen tummy. It was ten in the morning by the time they finished showering, got dressed, eaten breakfast, and were ready to start the day. They sat around the dining table, drinking coffee as they discussed their plans. \n\n\"We're meeting Irillith at noon,\" John reminded them. \"So we've got a couple of hours to kill before we rendezvous with her. Plans everyone?\"\n\n\"Field test!\" Dana and Calara exclaimed exuberantly at the same time.\n\nThe others laughed at their eagerness to test the new upgrades to the Invictus, but they could all feel the same sense of excitement.\n\nAlyssa looked at John, and said enthusiastically, \"We're right near the border to Terran Space. Quick detour to go and murder some asteroids? There's a belt of them nearby, so it'll only take twenty minutes to get there.\"\n\n\"It does seem to have become a tradition,\" John agreed with a grin. \"Let's go and gallantly vanquish some hunks of rock!\"\n\nThey all stood and strolled briskly out of the Officers' Lounge, then stepped into the grav-tube, so they could float up to the Command Deck. Everyone fanned out immediately to take their places on the Bridge, and John couldn't help but grin at what a well-oiled machine his crew had become.\n\n\"Take us out of here, XO,\" he said to Alyssa.\n\nShe smiled at him, with a mischievous glint in her eyes, and then looked over her console at the Pilot's Station directly in front and below them. \"You heard the Commodore. Prep for takeoff, Jade,\" she said to the Nymph.\n\nThe green-skinned alien girl grinned at the two of them on the Command Podium, before turning back to the console in front of her.\n\nRachel glanced up at them from the Comms Station, and informed them promptly, \"Clearance granted to leave the Docking Bay.\"\n\nJohn nodded to the brunette approvingly, and sat back in the Command Chair, watching Jade at work. She had an air of confidence about her as she used retro-thrusters to lift the Invictus off the deck, easing them smoothly and cleanly out of the Geniya Space Station. Once the five hundred metre long assault cruiser was completely clear of Docking Bay Twenty Four, pivoting gracefully under her skilful hand, she powered up the ship's massive engines, and gently brought them up to port speed. \n\nThey cruised away at a steady pace, on a course that led them past 'The Warning', on the way to the Nav Beacon. John couldn't help but glance at the catastrophic damage that had devastated the ancient freighter, and it made him feel ambivalent about their upcoming expedition. Being able to get their hands on such incredible firepower would be a game-changer, but did he really want to expose his ship and crew to potentially hostile ships that could wreak such destruction? He looked down at the normally exuberant Nymph, who was staring intently at the console in front of her, her hands moving precisely over the controls as she piloted their ship with great care.\n\n\"Textbook departure Jade, well done,\" he praised her, and she beamed a delighted smile at him as she transferred control of the Invictus to Alyssa.\n\nHis beautiful blonde Executive Officer had brought up the local sector map, and had already plotted a course for them to travel to the asteroid belt she had mentioned. The ship was swathed in a blue aura for a moment, before the Tachyon drive surged into life, and launched them into hyper-warp.\n\nDana rubbed her hands together with glee and said, \"Alrighty then! Time to see if you guys managed to install the sensor array correctly!\"\n\nJohn laughed apprehensively and admitted, \"I'm actually feeling nervous! I hope I didn't let you down, Chief Engineer.\"\n\nShe smiled at him affectionately, and her mouth widened into a massive grin when the sensors began to perform the long range scans, displaying the results on the sector map. Information was appearing much further out than John was used to seeing, and he frowned at the map, checking the scale to see if he could figure out just how much they had improved.\n\n\"Fuck yeah! You guys aced it!\" Dana exclaimed, clapping with delight.\n\nShe turned to face one of her consoles, and tapped away on a few buttons, until a moment later a wide ring appeared around the Invictus on the sector map. The size of the ring looked familiar, and John realised that was the distance he usually expected to see contacts on the long range scans.\n\nDana confirmed it a moment later when she said, \"That circle shows you the long range sensor radius we had on our shitty old Terran Federation sensors.\" She tapped a couple more buttons and a new circle appeared, but this one now encompassed a vast amount of space. \"This is our new sensor radius. Nearly four times bigger!\" she added, looking overjoyed.\n\nCalara stared up at the screen in awe, and said, \"The tactical advantage this gives us is immense! Unless the enemy has some form of cloaking device, we'll be able to get the jump on practically anyone.\"\n\nDana sat up and told them all proudly, \"You guys did a great job installing that sensor array. It must have been a real chore to finish, but it's performing perfectly. Thanks for mucking in everyone.\"\n\nThey smiled at her gratefully, and she turned back to her console, looking very excited once again. \"Okay, so that's one badass upgrade out the way! Let's fire up the shields!\" she said eagerly.\n\nWith the press of a button, the shields on the Invictus were activated, enveloping the assault cruiser in their protective embrace. John and the other girls waited with eager anticipation, but the damage control hologram looked exactly the same as before, with the Invictus swathed in shields, depicted in green.\n\nDana turned to face them looking bashful. \"Well, that one wasn't quite so visually impressive,\" she said jerking a thumb at the holographic representation of the ship. \n\nJohn smiled at her and said, \"Not to worry, we can't be wowed by everything. Is the new shield modulator working as you hoped?\"\n\nShe smiled back and nodded. \"It took a few hours for the mass fabricators to crank out all the parts I needed, so I had a bit of time to kill and made a few tweaks to the design. I managed to lower the power draw, not because it's an issue for us, what with our Ashanath power core, but it just wasn't efficient and I couldn't leave it like that. I also slightly improved the stabilisation effects of the modulator, so our overall shield strength has been boosted by nearly eighty percent,\" she explained helpfully.\n\nCalara grinned at the redhead, and said excitedly, \"Well, that wowed me! Almost doubling our shield strength is a phenomenal upgrade to our survivability!\"\n\nDana smiled at her joyfully, and nodded as she said, \"We'll be able to take quite a battering! But unfortunately it won't do anything for the shield recharge rates. If we lose our shields, it's going to take a long time to regenerate them all back up to full strength again.\"\n\nJohn shrugged, and said, \"Well the main thing is it's a huge increase in shield power. That could give us more time to survive an ambush and fight back, for example.\" He then grinned at her and said appreciatively, \"Superb work as usual, Dana.\"\n\nShe returned his happy grin, and then they all turned to look at the sector map, which showed that they were fast approaching the system with the asteroid belt they were planning to pulverise. The Invictus raced into the system and the safety protocols kicked in, dropping them out of hyper-warp before they got too close to any gravity wells, but near enough to the field of unwitting chunks of rock.\n\n\"Bring us within weapon range,\" John said to Jade, and she nodded firmly as she carried out his orders.\n\nCalara took a deep breath, and then powered up the gunnery chair for the Tactical Station. There was a bass hum of power as the lights came to life around her, and with a click of a button the holographic targeting matrix appeared, casting a soft blue glow over that corner of the Bridge.\n\nThey could see at once there had been major changes. Calara was now positioned inside the interface with a holographic shell surrounding her, rather than just a glowing panel in front of her eyes. The softly glowing blue sphere curved out from both sides of her chair, and she sat at the rear end of the globe, with a holographic representation of the Invictus directly in front of her. She pressed a button activating the ship's weapons, and the armoured sections of hull plating slid back, revealing the lengthy barrels beneath. As each of the gun batteries came online, the weapon controls in her hands began to illuminate, the buttons beneath her fingers flickering before glowing brightly. \n\nFiring arcs were shown on the holographic sphere, displaying the fields of fire for each of the different ship based weapons at her disposal. The Mass Drivers and Beam Lasers could only face forward, with narrow, but very long fire arcs. In contrast, the laser cannons and the Gatling lasers were all turreted, and their numerous overlapping fields of fire criss-crossed each other in a complex latticework of broad cones.\n\n\"Everything looks good with the weapon integration to Fire Control,\" Calara said to Dana, before carefully moving the weapon controls in her hands. \"All weapons are fully active and tracking correctly.\"\n\nThey could see the fire arcs shifting as Calara moved each hand, the dozens of weapons responding to every movement.\n\nDana nodded, and then turned to her console, before replying, \"Hooking up the data from the sensor array, and feeding it to the Fire Control System.\"\n\nThe faintly glowing blue sphere flickered briefly, and then just like that, it was as if Calara was floating in the middle of the asteroid belt. Exact replicas of each hunk of rock were faithfully displayed; from tiny ones no larger than a man's head, to the absolutely enormous ones that were as big as the ship, all shown spinning and drifting gently.\n\n\"I'm picking up the local objects. Now testing the data overlay and optical targeting,\" Calara informed them calmly.\n\nShe activated a control, and all the asteroids in the vicinity were immediately tagged with a variety of information from velocity to heading. As none of the asteroids were shielded, all the information was displayed in red. The Latina glanced at each potential target, cycling through dozens in seconds, and leaving each one displaying a targeting reticle.\n\n\"OK, commencing fire test,\" Calara said, her eyes shining with anticipation.\n\nCalara lined up the front weapons on the hulking rock formations in front of the assault cruiser, and began to go to work. She pressed both thumb buttons on each control, and the ship trembled as the two hundred metre long magnetic rails accelerated the heavy shells to hyper-warp. The shells slammed into the huge asteroids ahead of them, which exploded in a tremendous explosion a moment later, sending smaller chunks ricocheting off their untouched compatriots. By that time, she had quickly moved on to the next set of rocks with the Beam lasers. She carefully activated the port and starboard weapons, sending coruscating lances of energy into several more asteroids, and slicing them in half.\n\nNext she opened up with the laser cannons, and laser bolts arced out before slamming into the smaller remnants of the shattered asteroids, blasting them into tiny chunks. Finally she pressed a button on the control, and unleashed the defence grid that vaporised the rest, leaving a glowing field of gravel in their wake.\n\n\"Very impressive field test,\" John said nodding appreciatively. \"It looks like the new Fire Control System has connected seamlessly to the Invictus' weapons and sensor array.\"\n\nDana bounced up and down in her chair excitedly, and clapped with delight as she cheered, \"Yay! It all worked perfectly!\"\n\nThey all looked at Calara, expecting her to have an equally jubilant reaction, but instead they were surprised to see her sitting quietly, staring off into the distance.\n\n\"Calara? Are you alright?\" John asked her with concern.\n\nThe brunette didn't answer, as she was far too absorbed in her introspection. The fire test had felt like she was just going through the motions, and as improved as the new system was, it still felt horribly sluggish. She knew she was capable of so much more.\n\nCalara darted a fevered glance towards Dana and said sharply, \"Increase the sensitivity of the weapon controls by five hundred percent.\" She then turned to look at Jade and said, \"Take us deeper into the field.\"\n\nJohn and Alyssa darted concerned looks at one another, while Dana looked shocked for a moment at her friend's abrupt command, before hurrying to obey the Latina's orders. Jade powered up the engines, and pushed the Invictus forward, sending them further into the vast field of tumbling asteroids.\n\nCalara cracked her knuckles, before taking hold of the weapon controls once more. They felt fluid at last, and moved effortlessly as though extensions of her own arms. She thought back to something Dana had said yesterday, \"Just relax, and let it flow through you,\" and she closed her eyes, letting go of the rigid self-control she normally maintained.\n\nWhen she slowly opened her eyes once more, everything seemed sharper, and she knew that she was ready. She focused purely on the targets, letting her remarkable mind guide her hands by instinct alone. She took a deep breath and then unleashed the full firepower of the assault cruiser.\n\nEveryone else on the Bridge watched in open-mouthed amazement, as Calara's fingers danced over the triggers on the weapon controls like a concert pianist performing a masterpiece. The Invictus continued drifting through the asteroid belt, as orange laser bolts, pulsating beams of energy, and heavy shells poured out in an unending stream of destruction. Her hands were moving independently of each other, controlling both the port and starboard mounted weapons simultaneously, as she ripped through the asteroids. She alternated between ruthlessly eliminating target after target on both sides of them, and ploughing a path directly ahead with the front facing heavy weapons. She timed the weapon cooldowns and recharge times to perfection, maximising the damage output of the ship.\n\n\"You're using the same technique Dana does,\" Rachel said in awe, \"concentrating on multiple complex tasks at the same time!\"\n\nCalara flashed a grin at the redhead sitting on the opposite side of the Bridge to her and said, \"She gave me a few pointers.\"\n\nThe Latina ceased firing, and the Nymph brought them to a gentle stop, pausing at the head of a long trail of devastation torn through the asteroid belt.\n\n\"I've never seen anything like it!\" John marvelled. \"It was like you were using all the weapons at the same time! I couldn't even tell what you were firing at half the time.\"\n\nCalara deactivated the ship's weapons, covering them behind the Invictus' protective armour plating once more, and she blushed slightly as she looked around at her shipmate's awed faces. \n\n\"Where did that come from?\" Alyssa asked the Latina, looking astonished.\n\nThe brunette shrugged and said, \"I guess it's been building for a while now. Maybe that's why I was feeling so constrained by the old Gunnery controls.\"\n\n\"Well, I think you proved the new interface kicks ass,\" Dana said with a grin. \"And that you do too!\"\n\nJohn agreed, nodding his appreciation. \"Well done everyone, that was one hell of a show. Let's make our way back to Geniya Station now, and get ready for the rendezvous with Irillith.\"\n\nAlyssa smiled wryly as she said, \"She doesn't strike me as the kind of girl who likes people turning up fashionably late.\"\n\nJohn laughed and said, \"I think you're probably right. Jade, take us out of here please.\"\n\nThe Nymph leapt to follow his order, and she brought the Invictus around in a tight arc, before travelling out of the asteroid belt back the way they came. They admired Calara's handiwork on the way out, amazed at how total the destruction was through the floating rocks, in a broad path as wide as the firing range of the laser cannons. \n\nSoon they were clear of the hazardous asteroid field, and Alyssa plotted them a route back to Geniya Space Station, the green line of her flight path on the Sector Map showing the trail through the intervening systems. She powered up the Tachyon drive, and they jumped into hyper-warp, racing at incredible speed across the huge distances between the stars. The twenty minute journey passed by in the blink of an eye, with them all chatting animatedly about the upgrades to the ship, so it almost came as a surprise when they eventually arrived in the Theta-Aquarii system.\n\nThe passive sensors almost instantaneously populated the Tactical Map with detailed information on every ship in the system, as the incredibly sensitive sensor array went to work.",
        "\"That must be her!\" Dana exclaimed, pointing up at the tactical map. \"That looks exactly like the Maliri patrol cruiser I nearly got my hands on back at the Space Station.\"\n\nThey all looked up at the Tactical Map, and Alyssa zoomed in on the distinctive ship, so that they could look at it in detail. The Maliri cruiser was smaller than the Invictus, and seemed to have an elegant look about it, constructed with an aesthetic grace unseen on any other ship they had encountered so far. The ship was all graceful curves and flowing lines, and the numerous sparkling crystal domes made the Maliri vessel look delicate and fragile. The jutting weapon barrels and multitude of turrets put to rest any thought that the ship posed no threat, and there was an aura of deadly menace about the ship.\n\nCalara looked at all the crystal domes, and shook her head dubiously, \"Those domes are like painting a bullseye on the ship's vulnerable spots. The Maliri vessel might look pretty, but I can't see that craft having any durability in a heated firefight.\"\n\nDana smiled at her knowingly, and said, \"Actually, the clear crystal tech they use is a lot tougher than the reinforced Titanium that Terrans use for armour plating. A couple of inches of strengthened crystal, could take about as much of a beating as one foot thick Titanium. The rest of their hull is armoured in reinforced crystal as well, but the rest of the armour isn't transparent.\"\n\nThe Latina nodded her understanding, and began to reappraise the exotic looking alien ship in front of them, looking for any potential weak points. \n\n\"Shall we do an active scan?\" Dana asked eagerly, looking up at John.\n\nHe glanced down at her and shook his head, saying, \"We better not. Active scans of non-friendly vessels is usually considered a hostile act, and we don't want to risk causing an incident.\"\n\nThe redhead nodded her understanding, but looked disappointed nonetheless.\n\nRachel interrupted the conversation when she warned him, \"We're being hailed.\"\n\n\"Put her through,\" John said to her, then looked up at the viewscreen as it flickered and then filled with Irillith's image. Disappointingly, for the girls that hadn't yet seen the Maliri woman in the flesh, Irillith was fully armoured once again, in her ornate golden body armour.\n\n\"I had started to think you weren't coming,\" Irillith said testily, and John smiled as he imagined the annoyed frown she probably wore at the moment.\n\n\"We had some business to take care of,\" he replied unapologetically. \"Besides, we're still ten minutes early.\"\n\nThe Maliri woman harrumphed with irritation, and then paused for an awkwardly long moment as if considering her next action. \"There's been a slight change of plans,\" she said cautiously.\n\n\"Has there indeed?\" John asked her, his eyes narrowing.\n\nIrillith nodded and replied, \"Before you can meet with my mother to begin negotiations, as a show of good faith, I require your assistance with a minor task. We will still be travelling along the same flight path, as the location for this task is en-route to my homeworld in Epsilon Aquarii. It should take us no more than a couple of hours to complete this diversion, and then we can be back on our way once again.\"\n\nJohn waited for some further explanation, but when none was forthcoming, he asked, \"So what is this mysterious task?\"\n\nShe launched into her mission briefing earnestly, saying, \"We had a research colony in the Beta-Capricornus system, which was studying the lush plant life on one of the planets there. Unfortunately the colony was attacked by a previously unknown Fungoid species that we named the Fulmanax. They besieged the scientists, and my people were forced to evacuate, abandoning the research facility to these hostile, marauding aliens.\n\nThere is valuable data stored in the internal network at that research facility, but we can't retrieve the data while the Fulmanax have the place surrounded. The Fulmanax are sensitive to sound waves, so I need to position a sonic device in their newly established nest, which will flush them out of there long enough for us to enter the base and collect the information we need.\"\n\nJohn looked puzzled, and asked, \"Why can't you just retrieve the data remotely? And why is it so important anyway?\"\n\n\"The data collected on the planetary flora was gathered there over decades, and could offer real medical breakthroughs if we can secure it. House Valaden was concerned about the very real possibility of industrial espionage, so the data repositories are not accessible from a remote connection,\" Irillith explained helpfully.\n\n\"Alright, so what do you want us to do exactly?\" he asked cautiously.\n\nShe shrugged and said, \"Just provide me cover while I manually set up the sonic dispersal device. The nest is positioned under a broad plate of igneous rock, so we can't readily cut our way through with the ships lasers to deliver a sonic torpedo from orbit. If we tried it, we might risk damaging the research base, and orbital bombardments would cause too much unnecessary collateral damage to the Fulmanax.\"\n\nJohn studied the Maliri woman for a while, but with her hiding behind the body armour, he couldn't pick up anything extra from her body language. \"I'd like a few minutes to consult with my crew before I make a decision,\" he told her firmly.\n\nIrillith nodded and replied, \"Certainly, that's quite understandable. Hail my ship when you've made your decision.\" She then looked about furtively, to check they weren't being overheard, before she added cagily, \"As a final incentive, if you assist me with this task, I will ask my mother to give you the 'friends and family rate' as it were, when you are negotiating a price for the merchandise you seek.\"\n\nHe nodded and said, \"We'll be in touch shortly with our decision.\"\n\nRachel closed the comm channel when he glanced in her direction, and Irillith's golden helmeted face disappeared from the viewscreen in the blink of an eye. He then let out a deep breath, and looked around at the girls on the Bridge, in case any of them had any advice. \n\nHe stared at their attentive faces and said, \"She seemed pretty convincing, but I'm sure you all remember Ceraden's words of warning not to trust her. What are your thoughts everyone?\"\n\nDana began, by saying, \"Well, she was telling the truth about hitting the nest from orbit at least. If we used the ship's batteries to cut through a strata of dense volcanic rock, we could accidentally cause all sorts of inadvertent seismic activity, and we would definitely risk causing accidental damage to any facility nearby. Even if we were able to eventually blast through it, we would make a right mess of the creatures beneath!\"\n\nCalara nodded her agreement, \"Orbital bombardment to break through the plate would cause significant casualties. Delivering the sonic device in person is the only way to minimise unnecessary destruction, if your objective is to quickly and efficiently retrieve the data.\"\n\nRachel looked a bit guilty, and said hesitantly, \"I think we should agree. In all honesty, I'd love the chance to study some more alien creatures. If we could get our hands on a copy of that research data as well, who knows what I could discover!\"\n\nJohn looked at Jade and she shrugged at him noncommittally. He laughed at her taciturn response and asked, \"You must have some thoughts on this?\"\n\nShe smiled at him and replied, \"Not much has changed really. We still want the weapons, and you're still looking for answers on the Progenitors. If she wants us to do some side mission for a few hours, it doesn't seem like a huge price to pay.\" \n\nFinally he glanced at Alyssa, who had plenty to say. \"Irillith seems to be an accomplished liar, so who knows what was true out of that lot. I struggle to believe a word she says, and that sounded an awful lot like a steaming pile of horseshit to me!\" she explained heatedly. \"Jade is right though. It doesn't hugely change our original agreement, and we might even be able to secure some kind of discount on the weapons, if that wasn't all a pack of lies too.\"\n\nJohn pondered their advice for a moment, before looking up and saying to Rachel, \"Put me through to Ceraden. He might be able to give us a deeper understanding of who, or what, the Fulmanax are.\"\n\nThe tawny haired brunette nodded, and then turned to her console. She pressed a few buttons and spoke into a headset, then a few moments later, the viewscreen crackled and an image appeared. Ceraden's resplendent armour filled the screen, the gems and jewels sparkling brightly. \n\nThe Maliri Merchant began to speak in a clear voice, \"I greatly appreciate your interest in contacting my humble enterprise, but it is with great regret that I must inform you that I am away on business for the next week. If you would care to leave a message, I will endeavour to call you back with all haste!\"\n\nWhen Ceraden did a bow and elaborate flourish with his hand, Rachel closed the comm channel. \"Automated message, as you might have guessed,\" she clarified with a wry grin.\n\n\"Hmm, I don't remember him saying anything about a business trip,\" John said with a frown. \"Alright, let's do this. Put me through to Irillith again.\"\n\nRachel hailed the Maliri Cruiser, and a second later, Irillith's armoured face filled the screen. \"Have you made your decision?\" she asked them immediately.\n\nJohn replied sternly, \"I don't appreciate the last minute change, it feels like extortion. However, we will assist you with your mission, but there better not be any more surprises.\"\n\nIrillith's relief was palpable when she said, \"This is the only thing I'll ask of you, you have my word.\"\n\n\"We're ready to depart when you are,\" he said, nodding his acceptance.\n\nIrillith leaned over to the side, pressing a couple of buttons on a console, and said, \"Move into formation with my cruiser, and we will sync hyper-warp signatures with your vessel.\" He could hear the condescension in her tone when she added, \"Don't worry, we'll slow down enough so your Terran vessel can keep pace.\"\n\nHe smiled back at her wryly and said, \"Don't worry about us. We're in a hurry, so gradually increase your hyper-warp velocity to maximum, and we'll adjust our speed accordingly.\"\n\nIrillith laughed derisively and said, \"I think you vastly overestimate what that ungainly crate can do. Transferring our flight path to your Nav computer.\" With that, she closed the comm channel abruptly. \n\nCalara had a worried frown on her face as she asked him, \"Are you sure it's wise revealing how fast we can travel in hyper-warp?\" \n\nHe shrugged and said, \"We've made no effort to conceal our speed so far, so I'm just surprised she isn't aware of it. Besides, as delightful as I'm finding Irillith's company, I think we probably should get this excursion through Maliri space over and done with as quickly as possible. I suspect we outmatch their maximum hyper-warp velocity, so all they'll know for certain, is that we can go at least as fast as they can.\"\n\nCalara nodded her understanding, while Alyssa glanced over at him and said, \"We've received the flightpath and the Nav data. The Navigation computer is just updating our maps with all the new stars.\" \n\nJohn nodded and gazed up at the local sector map, as their route through Maliri Space was plotted above them with a glowing green line. The route they would be taking from the Geniya trading post in Theta-Aquarii, to Irillith's homeworld in Epsilon Aquarii, was an almost straight line with just a minor deviation to the Beta-Capricornus system.\n\n\"The Terran Federation has no knowledge of these systems,\" he said to the girls, \"So we'll be the first non-Maliri to see them.\"\n\n\"Except for the Mael'nerak,\" Jade noted distractedly, looking curiously at the overhead map.\n\nJohn nodded soberly, and stared at the long channel of stars that forged a path deep into Maliri territory. \"How long will it take us to get there?\" he asked Alyssa.\n\nThe blonde girl paused for a moment as she performed the calculations. \"If we were travelling alone, with me plotting our course, and flying at our normal maximum hyper-warp speed, then nearly four days. With a regular Terran FTL drive it would take just over twelve, so let's hope the Maliri are faster than that!\"\n\nThey switched their attention back to the system map, and the Maliri cruiser increased the power to its engines, moving to flank them and escorting the Invictus to the Nav Beacon. It took them a couple of minutes to reach the beacon, which marked a location sufficiently far from the local gravity wells that they could jump into hyper-warp unobstructed. Alyssa waited for the Maliri vessel to power up its FTL drive, then activated their own a few seconds later. \n\nThe Invictus was still the first to activate, with the Ashanath Tachyon drive swathing them in the blue Tachyon field, and launching them smoothly into hyper-warp. Alyssa kept their speed at a minimum while they waited for the other ship to catch up, and when it did so, the Maliri cruiser raced past them, their Navigator obviously intending to humiliate the Invictus. \n\nAlyssa grinned as she accepted their challenge, and cranked up the power, dramatically increasing the speed of the assault cruiser. In a couple of seconds she had effortlessly caught up with the Maliri vessel, matching their velocity as the Maliri navigator pushed their ship faster. Eventually the acceleration levelled off, and Alyssa's melodic laughter echoed triumphantly around the Bridge, as she realised that was the fastest the Maliri ship could go.\n\n\"They actually have pretty good FTL tech,\" she admitted as she glanced at their current speed. \"It looks like they are using a very similar Tachyon drive to those the Ashanath fit as standard. Ours is much better, but this Maliri ship is still twice the speed of Terran military ships.\"\n\nShe enlarged the sector map, which showed their projected route through Maliri space, and began to make dozens of minor adjustments to their flight path. John and the girls watched in fascination, as the projected length of time to complete the route dropped with every change. The modifications she was making with her warp tunnelling techniques increased their velocity further, and she smiled with satisfaction when she was done, the total flight time showing six days. She grinned at him when she pushed a button, and transmitted the greatly improved flightpath back to the Maliri ship.\n\n\"Let's see what they make of that,\" Alyssa said smugly. \n\nThey were hailed a few moments later, and Irillith said in a shocked voice, \"How are you matching speeds with us?! No Terran ships are that fast!\"\n\n\"I'm not Terran,\" John said bluntly. \"Use the new flightpath we sent you, my crew have improved it. We want to wrap up our business as quickly as possible.\"\n\nIrillith stammered for a moment, clearly shaken, before nodding mutely and closing the channel.\n\n\"I wish I could have seen her face,\" Alyssa said wistfully. \"That would have been priceless.\"\n\nJohn smiled and nodded, before returning his attention to the holographic map that was hovering above them. \"It looks like it's going to take us about four days to reach the system for Irillith's detour,\" he said speculatively.\n\n\"Good,\" Dana said happily, \"That'll give us plenty of time to incorporate all our recent upgrades into the Raptor as well.\"\n\nThe others all groaned at the thought of more maintenance, and she laughed merrily, and said, \"The Raptor is tiny compared to the Invictus, so upgrading its Sensor Array will take no time in comparison.\"\n\n\"Is it still as effective?\" Calara asked curiously.\n\nDana shook her head and replied, \"No, it's just like the sensors on a regular Terran gunship compared to something big like an assault cruiser. The sensors array is smaller and not as sensitive. The upgraded one we'll install will still be a massive improvement though.\"\n\nCalara nodded and then asked, \"How soon will you need us to help you start installing everything?\"\n\nThe redhead thought it over for a moment and replied, \"About three hours? I'll need to get the mass fabricators started with cranking out all the parts we need.\"\n\nCalara smiled and then glanced up at John as she asked eagerly, \"Up for a fight Commodore? We haven't had a sparring match for a while.\"\n\nHe nodded immediately, rising from the Command Chair with a broad smile on his face as he asked her in return, \"Feeling lucky today Lieutenant?\"\n\nShe grinned at him, and began to stride up the slope to join him at the grav-tube. \"I'm going to take you down again today, I'm sure of it!\" she replied confidently.\n\n\"Again?\" he teased her. \"That last time didn't count! You know I'm powerless to resist your feminine wiles, so no cheating this time!\"\n\nThe Latina giggled, and then took his hand, and they stepped into the red glow of the grav-tube together, descending out of sight. \n\nAlyssa watched them leave, smiling in amusement at their playful banter, before she rose and began to walk gracefully down the illuminated steps of the Command Podium. \"If you're interested, I'm happy to give you a crash course in astro-navigation?\" she asked Jade in a friendly voice.\n\nThe Nymph nodded eagerly and said, \"I'd love to learn more, that would be amazing!\"\n\nAs Alyssa walked down the ramp towards the Pilot's Station, Rachel stood when the blonde passed her, and said, \"I'll be down in the Engineering Bay if you need me. I'd like to switch research, and start looking at Maliri DNA if that's alright? I think knowing more about them is a higher priority, considering our current destination.\"\n\nAlyssa paused a moment, and then nodded. \"John agrees. In fact, it's probably more useful if you work on that uninterrupted, so there's no need for you to stop your research to help us upgrade the Raptor, we can take care of that,\" she offered helpfully.\n\nDana had walked up the ramp to join them, and she bounced up and down happily. \"Yay! You can keep me company while I work on fabricating all the parts,\" she said gleefully.\n\nRachel grinned at her perky friend, and they walked up the ramp talking animatedly about the work they had planned. They stepped into the grav-tube, and sank out of view in the soft red light.\n\nAlyssa had a fond yet wistful smile on her face as she watched the redhead leave, and only became aware of Jade's presence at her side when the green-skinned girl put a comforting hand on her shoulder. \"You look a bit sad, are you okay?\" the Nymph asked her sympathetically.\n\n\"It's wonderful to see them get on so well together,\" Alyssa said immediately, with a happy smile on her face.\n\n\"But?\" Jade asked her gently.\n\nAlyssa looked a bit chagrined and admitted, \"It's irrational considering how close I've become to John and Calara, but I do kind of miss being Dana's best friend. As close as we still are, she and Rachel are so much more in sync.\"\n\nJade pulled the blonde in for a hug, stroking her back as she said soothingly, \"They share common interests in science and research, so it's not surprising they get on so well. You've known Dana for years though, so you two have history together, and that's never going to change. You haven't really been replaced, Dana's just building a new friendship.\" \n\nAlyssa hugged the Nymph tightly, and then leaned back to smile at her as she said gratefully, \"Thanks, that was lovely to hear.\"\n\nJade beamed a sparkling smile at her and said cheerfully, \"I have to look out for my twin!\"\n\nThe blonde girl laughed at that, and the two of them separated and walked down to the Pilot's Station at a leisurely pace. \"let's get the basics out the way, and then we can have a chat about what we can surprise John with next time,\" Alyssa said eagerly. \n\n\"Sounds like a great idea to me, but I suggest we discuss it in bed together, just to help get the ideas flowing,\" Jade proposed flirtatiously.\n\nAlyssa giggled and nodded, saying, \"It's almost as if you read my mind!\"",
        "***\n\nThe next few days passed by in a blur, with each of the crew keeping themselves busy, catching up on training and research. Irillith didn't contact them again, but Alyssa noted with some amusement that the Maliri cruiser escorting them deeper into their territory, was sticking rigidly to her revised flightpath. \n\nThey fully upgraded the Raptor with the appropriated Maliri tech, replacing the sensor array, adding a shield modulator, and installing the new Fire Control System. With much more limited weapon options on the gunship, they all agreed that redesigning the gunship gunnery controls would be unnecessary. In the end, it was just a relatively simple case of getting the mass-fabricators to make the parts, then for Dana to build it and install the new system.\n\nOn the fourth morning of their trip through Maliri Space, John awoke to find a warm, wet mouth sliding up and down his cock, just as he had every other morning for the last several days. The girls had embraced his request with gusto, and developed some kind of secret schedule that meant he started each day with one of them sucking him eagerly. He recognised the blowjob technique of the girl under the covers, narrowing it down to Alyssa or Rachel, and a quick glance down at the blonde hair to his right confirmed the identity of his mysterious fellatrix.\n\nHe lay back and relaxed with a broad smile on his face as Rachel bobbed up and down on him, her lips, tongue and throat working together in perfect harmony. The slight rocking motion of her energetic attention gently roused Alyssa and Calara from their slumbers, and they grinned at him when they saw what was happening.\n\n\"You look like you're having a nice start to the day,\" Calara teased him quietly so she wouldn't wake up Jade and Dana.\n\nAlyssa's bright blue eyes sparkled as she asked, \"Is Rachel being a good girl for you?\"\n\n\"Very good,\" John agreed, then stifled a groan as the tawny haired doctor sank his hefty cock down her throat.\n\nCalara and Alyssa grinned at each other excitedly, then leaned across him, and began to kiss lovingly. Their lips were flushed with arousal as they lightly touched, and he could see eager tongues darting out to tease each other playfully. He could feel the pliant flesh of their firm breasts where they brushed his chest, and he was sure he could feel their nipples growing more erect as they began to kiss more passionately. He brought his hands around to their lush mouths, and they stopped kissing for a moment, so that they could suck his fingers. They glanced at him coyly as their lips encircled the index fingers of each hand, and their tongues flickered across his fingertips as Rachel pulled back off his cock, and copied the same enticing motion. \n\nThe Latina and Blonde in front of him sucked his fingers deep in their mouths as Rachel deep-throated him once again, and the loving looks they were giving him tipped him over the edge. The girls on his chest moved back, giving him room so he could reach down and hold Rachel to his groin, as he began to unload the contents of his balls down her hungry throat. He eventually sagged back with a dopey grin on his face when she had eagerly sucked out every last drop of cum from his quad.\n\nCalara and Alyssa grinned at him and then gave him a tender kiss, before they turned to get up, making room for Rachel, who emerged smiling from under the covers. Jade and Dana had woken up too by now, and they got up as well, leaving John alone in bed with the tawny haired brunette. He looked at Alyssa quizzically as he wrapped Rachel in his arms, while the blonde and the other girls disappeared into the shower.\n\n*We'll go make breakfast, you two should have a chat,* she advised him, *Rachel's been feeling a bit guilty. I've felt it over the empathic bond we have.*\n\n*Thanks for setting this up,* he replied gratefully, and Alyssa turned and blew him a cute kiss before following Calara into the bathroom.\n\nJohn was lying on his side, spooned up behind Rachel, and she sighed contentedly as he reached around her and stroked her swollen abdomen. \"That was a wonderful way to start the day, thank you,\" he whispered in her ear gratefully.\n\n\"It was my pleasure,\" she purred, snuggling into his arms. \"This morning wake-up-call idea was inspired!\"\n\nHe chuckled as he continued caressing her, and he pondered how best to raise the subject with the lovely young woman. She seemed so happy and at peace, that he didn't want to upset her. \n\nRachel seemed to sense his hesitancy, so she turned her head slightly to look at him and said perceptively, \"I did wonder when I jumped the queue ahead of Jade. Alyssa wants me to chat with you, doesn't she?\"\n\nJohn smiled at her reassuringly and said kindly, \"We're just worried about you. I had noticed you've been avoiding any time alone with me, inviting the others into group sessions instead. Is everything alright?\"\n\nRachel let out a little sigh, and nodded as she looked up at him. \"I'm sorry for avoiding you, I've just been feeling guilty.\" she admitted reluctantly.\n\nHe hugged her tightly and said reassuringly, \"It's not your fault, that could have happened to anyone with trauma like that in their past. I'm just sorry that we let you get into that situation with the pirates.\" \n\nShe smiled at him and shook her head as she said, \"I'm not sorry about the pirates. I thought over what you and Calara said, and you were absolutely right. The pirates were vermin that needed wiping out. If they had been granted clemency and been imprisoned instead of executed, they would have probably just returned to the same life when they got out of prison. I just feel guilty that I might have compromised your reputation with what happened.\"\n\nJohn gave her a relieved smile, as he said, \"Don't worry about that, I'm certainly not. I saw the looks on the faces of those passengers from the Excelsior, when they left the ship at Port Cadmus. I didn't see condemnation in their eyes, I only saw gratitude.\"\n\nRachel looked relieved, and he leaned down to kiss her tenderly. \"Thanks for the talk, it feels good to get that off my chest,\" she said gratefully.\n\nHe nodded as he looked down at her affectionately and said, \"One of the advantages to having Alyssa snooping around in your head.\"\n\nRachel smiled at him happily and said, \"You did tell me she was lovely and would look out for me, and you were right. She's like the caring big sister I always wanted.\"\n\nJohn wrapped her up in his arms, and they cuddled together contentedly for a while, waiting for the girls to rejoin them. They didn't have to wait long before the others returned with trays full of cooked food, and they all sat on the bed to eat breakfast. \n\n\"How soon until we reach the Beta-Capricornus system?\" John asked Alyssa between bites of toast.\n\nShe finished her drink of hot chocolate and put down the mug before replying, \"We'll be there in three hours.\"\n\n\"I finished my research into Ceraden's DNA, if you guys want to hear about that?\" Rachel asked tentatively.\n\nThere were eager nods all round, so she sat back against the headboard, balancing a drink of fruit juice on her rounded belly as she quickly thought about where to start.\n\n\"Well firstly, I can confirm that the Maliri have been massively modified by Progenitors,\" she said with conviction. \"They appear to have started with the same kind of base genetic template as Terrans, but the telltale signs indicating Progenitor tampering are all over their DNA strands.\"\n\n\"So Terrans and Maliri are like distant cousins?\" Dana asked curiously.\n\nRachel pondered this for a moment before replying, \"I'd say it's almost beyond doubt that both species have some kind of Progenitor origin. It's fairly obvious when you think about it, especially when you take into account John's physical appearance. The chance of our three distinct species all spontaneously evolving into bipedal humanoids with identical numbers of limbs, and strikingly similar facial features is so staggeringly remote, I think it's safe to say it isn't coincidental. You all no doubt remember how diverse the alien lifeforms were on Geniya Station.\"\n\nJohn nodded his agreement with her conclusions and then asked, \"Did your research confirm your theories about the fairy-tale that Ceraden told us?\"\n\nShe nodded and replied, \"Certainly with regard to the skewing of the birth gender ratios. It's fairly obvious that the Maliri were modified to be... breeding stock... for use by the Progenitors in their armies. The Maliri have triple helix DNA, just like you, Alyssa, and Jade, but Ceraden definitely isn't psychic. He has lots of genes on that strand that are currently dormant, but that could be because he's male. I'd love to take a look at some female Maliri DNA, and Irillith's mother's especially!\"\n\n\"I'll ask Edraele nicely, and see what I can arrange,\" John said with a chuckle. \"Anything else you found out?\"\n\nRachel shook her head regretfully, and said, \"The Progenitors were masters of genetic manipulation. It seems like they introduced this third strand of DNA into creatures they wished to extensively modify, but unfortunately a lot of the intricacies of their modifications are too subtle, or too complex for me to be able to fully understand them at the moment. If I were ever able to perform an autopsy on a Maliri, I would be able to start identifying exactly what some of these genetic markers were designed for.\"\n\nAlyssa smirked and said, \"Perhaps Irillith will volunteer?\"\n\nThe girls giggled, and John chuckled too, none of them overly fond of the caustic Maliri woman.\n\nCalara had been quietly pondering something, and when the laughter died out, she asked John, \"Who are you planning on taking with you on this mission to the Fulmanax nest?\"\n\nHe had been giving that some thought already, so he replied immediately. \"We'll need you up here manning the big guns in case there's trouble. I'm inclined to bring as many of you as possible though, especially after seeing your incredible shooting demonstration. I think Jade should fly us down in the Raptor, then return up here to pilot the Invictus until we need an evac.\"\n\nThe girls all nodded their understanding, looking around at each other with eager expressions on their beautiful faces.\n\n\"Oh!\" Dana suddenly exclaimed. \"That reminds me, I've made some modifications to our combat gear.\"\n\nJohn grinned at her and said enthusiastically, \"That sounds intriguing! What have you been up to?\"\n\nShe returned his eager grin and said, \"Well I thought some grenades could be handy, so I've made us some explosive, flash, and smoke grenades. I've added them to the weapon racks, so when we get geared up, they'll be ready and waiting.\"\n\n\"Excellent, that will give us lots more tactical options,\" John agreed, and then asked, \"Are they the standard Terran Type-Seventeen fragmentation grenades?\"\n\nDana shook her head and replied, \"The casings are a pretty standard design, but I constructed them out of the lightweight alloy I developed from the Kirrix. That let me pack in more explosives, while keeping the weight down.\"\n\n\"So what kind of blast radius are we talking about?\" he asked her curiously.\n\nShe laughed and replied, \"I didn't go too bonkers, because we still have to throw them! About twice the lethality of a standard grenade, with most of the explosive force centred in a ten metre radius. I tried to reduce the fragmentation effects, otherwise we'd end up getting caught in the wider blast zone.\"\n\nHe smiled at her approvingly, and said, \"Alright, sounds sensible to me. Those should be very useful.\"\n\n\"I've tweaked our armour and railguns too,\" the redhead said mysteriously, flashing him an impish grin.\n\nHe leaned in eagerly and asked, \"You have? What else have you upgraded?\"\n\n\"Ahh! You'll have to wait and see,\" she teased him playfully.\n\nJohn nodded, then suddenly reached over to grab the redhead, and began to tickle her for her cheekiness. Dana let out a delighted squeal, and the other girls grinned at her infectious laughter as she writhed helplessly in his grasp. He eventually had mercy on her, and she sagged against him, panting for breath with a happy grin on her face.\n\n\"I think we deserve a lazy morning today,\" John announced. \"I have a feeling we'll be in for a busy afternoon. If you girls have anything pressing you need to get done, then by all means go ahead, but I feel like having a lie-in this morning.\"\n\nThe girls agreed that was a marvellous idea, so they cleared the trays and snuggled under the covers again. He was already flanked by Dana and Rachel, so they cuddled up against him with the others on the sides. They dozed together for a couple of hours, just relishing the opportunity to relax in bed, and enjoyed taking a break from their normally industrious activity.\n\nA soft chime from the comm interface alerted them to an incoming call, and realising they needed to get up now anyway, the girls got out of bed and disappeared into the bathroom for a shower. John sat up in bed, and accepted the incoming call, and was surprised to see that Irillith wasn't wearing a helmet and seemed to be contacting him from a different location aboard her ship. \n\n\"We're nearly th-\" she said curtly, before stopping abruptly, her eyes widening when she saw his muscular torso.\n\nJohn smiled at her brazenly and said, \"Apologies for my state of undress, you caught me having a lie-in. We're just getting up now, but we'll be ready in good time for when we arrive at the Beta-Capricornus system.\"\n\nIrillith nodded and re-established her haughty persona. \"My cruiser will stay in orbit, but I'll head to the surface in a dropship. Follow me down to the landing zone, and I'll lead you into the Fulmanax nest,\" she said imperiously.\n\n\"Just how dangerous are these 'Fulmanax'?\" John asked her, his eyes narrowing suspiciously.\n\nHer answering smile was cunning as she replied, \"Nothing you won't be able to handle, I'm sure. I'll be accompanying you in any case, and you can rest assured that I wouldn't expose myself to unnecessary danger.\"\n\nHe nodded, conceding that she was undoubtedly being truthful about that at least. \"So we escort you into the nest, activate this sonic device, and then take advantage of the confusion to enter the research base and retrieve the data. Is that everything?\" he asked her cautiously.\n\n\"Yes, that is correct,\" Irillith agreed. \"As soon as I've extracted the data cores from the facility's central computer, we will just need to evacuate to the surface, and this task will be complete.\"\n\nJohn studied her face for a long moment, wishing he could read this enigmatic woman's thoughts. He knew instinctively that she was lying to him about something significant, but he had no way of knowing about exactly what, or the extent of her deception. The Maliri woman seemed to be equally fascinated, and stared at him silently, her angular violet eyes searching his face for answers to questions only she knew.\n\nJohn fixed her with a steely gaze and said in a voice as quiet as the grave, \"It goes without saying that if this is some kind of trap intended to hurt me or my crew, there will be unpleasant consequences.\"\n\nShe smiled at him wickedly and asked, \"Is that a threat, John?\"\n\nHe smiled back at her grimly, and replied, \"No, it's a promise. You know exactly what I am, and what I can do.\"\n\nIrillith's bravado was shaken at that, and she shivered involuntarily and averted her gaze. \"Be ready in an hour,\" she said, and abruptly closed the comm channel.\n\nHe sat back and let out a sigh, as the holographic image of the blue-skinned Maliri woman blinked out in an instant. He glanced to his left, and saw five beautiful faces watching him curiously from the bathroom, where the girls had been listening in on the conversation between him and Irillith.\n\nAlyssa glided out and asked, \"What was that bit at the end about? We don't really know much about what you can do yet.\"\n\nJohn smiled at her and chuckled as he replied, \"Just bluffing a little bit, but it seemed to have the desired effect. I'd love to know what had her so worried at the end there.\"\n\n\"She was very beautiful,\" Rachel noted thoughtfully as she sat on the bed, this being the first time she had seen one of the Maliri in the flesh. \"It's such a shame she seems so unpleasant.\"\n\nJohn nodded, as he said, \"I get the impression from Ceraden that most of the Maliri women are like that. It seems like the Maliri culture twists their personalities horribly.\"\n\nAlyssa smiled at him and said, \"He was very envious of your entourage of loving Terran girls.\"\n\nJohn laughed and said, \"What man wouldn't be? Don't forget my lovely Nymph too!\"\n\nHe pulled Jade over to him and gave her a hug, which made her giggle happily. \n\n\"OK, time to get up,\" John said exuberantly. \"I'm curious to see what our industrious Chief Engineer has been up to.\"\n\nHe gave Dana a playful smack on the rump as they walked into the bathroom, and she laughed, wiggling her pert bottom at him as she sashayed into the shower.\n\n***\n\nThey split up after the shower, going into their separate rooms to quickly get dressed, then all gathered in the briefing room up on the Command Deck to get geared up. John had brought his gleaming white Alyssium sword with him, and he propped it against the weapons rack as he walked over to the equipping frames to don his suit of Phalanx armour. Alyssa, Dana and Rachel followed his lead, stepping into the plated boots for the female variant of the armour, and the robotic arms seemed to be performing a Mexican wave as they brought the sections down and fixed them securely in place.\n\nAfter a rippling series of metallic clicks, the Phalanx body armour was securely sealed, and John stepped away from the frames, fully armoured in just a few seconds. He retrieved his sword, and carefully swung it over his back, so that the magnetic fields could lock onto the hilt and hold it securely in place. When the girls had each collected a railgun, he picked up one himself, and began to go through the normal checks, powering up the supply in the stock, and making sure that the sound suppressor was active. He then slapped a hollow point magazine into the ammo slot, and a fresh magazine of sabot casings into the second slot in front of the trigger. When he was confident that they were firmly in place, he checked the ammo and sabot counters, confirming that they read 250/50.\n\nWhen he looked up, one of the armoured girls was watching him, and he could tell by the red coloured lioness insignia on her shoulder that it was Dana.\n\n\"Want a tour of the new gadgets?\" she asked him playfully.\n\nJohn laughed and nodded, then replied, \"Sure, what have you got for me?\"\n\nDana said gleefully, \"If you glance up at the top left of your helmet's GUI, you can activate the new features I've installed. I've smart-linked the railguns to the body armour, so go ahead and activate the weapon sync function.\"\n\nJohn did as she requested, and an ammo counter appeared in the bottom left of the interface, showing 250/50, just like the display on his weapon. \"That's handy,\" he said appreciatively.\n\n\"Now lift the railgun and point it across the room at something in your line of sight,\" Dana instructed him.\n\nHe did so, and a targeting reticle appeared on the GUI, showing where his weapon was currently pointing.\n\n\"Now aim the railgun at me,\" she told him, and she strode across the room and then began to walk back and forth. \"You should see the targeting reticle leading your target as I move. If I were to run faster, the reticle would lead more.\"\n\nJohn nodded, impressed at her handiwork and said, \"There's a red cross next to the reticle when I point it at you. What does that mean?\"\n\n\"That I'm friendly!\" she replied in a cheerful voice. \"The suits are all linked, so the targeting system will warn you if a shot might hit one of us.\"\n\n\"Very nice,\" he said approvingly. \"How did you add all this tracking information to the suits?\"",
        "\"I borrowed the tech from the Maliri Fire Control System, then developed and upgraded a much smaller device that I integrated with the suit. I've added things like thermal imaging and Mag-view to the helmet GUI as well,\" she said proudly. \"You can find all the menu items for those on the left hand side.\"\n\nJohn cycled through the views, seeing her highlighted faintly in red when looking at her in the thermal imaging view, and then a bright blue when he switched to the Magnetic view.\n\n\"This will be so much more useful than having to stare through the scope,\" he noted, as he switched off the filter and his vision returned to normal. \n\nHe could hear the happiness in her voice when she said, \"Great! I'm glad you like it!\"\n\nWhile Rachel and Alyssa experimented with the new functionality, John grabbed several magazines, and slotted a number of clips into his combat webbing. When he was done, he was carrying five hundred rounds in total, but the cleverly designed webbing meant that he didn't feel excessively encumbered. He finished off his loadout by grabbing a pouch of explosive grenades, and a couple of flash and smoke.\n\n\"Load up on plenty of ammo girls,\" he advised them as he stepped away from the weapon rack. \"A nest of anything sounds ominous, and we don't want to run short.\"\n\nThey nodded obediently and gathered plenty of ammunition, while he walked out of the briefing room to wait for them in the bridge. Calara and Jade were waiting for them there, and he took off his helmet so he could speak to them face-to-face. \n\n\"We've arrived at the Beta-Capricornus system,\" Jade warned him. \"The Maliri cruiser headed towards the fourth planet in the system, so I followed them in, and we're currently in a geo-stationary orbit.\"\n\nJohn looked up at the holographic view of the small planet that hovered above them in the bridge. The tag next to the lush, verdant world read \"Quanthos\", and the single continent was covered in a swathe of sprawling forests. The one major exception was a ridge of mountains directly below them, where they currently orbited the planet.\n\n\"Any sign of the Maliri base?\" John asked the two girls, but they shook their heads.\n\n\"I've tried scanning the surface, but I'm not picking up anything significant,\" Calara explained. \"If they built the facility into that mountain range, or into the huge trees down there, like they did with the restaurant on Geniya Space Station, we wouldn't be able to detect it.\"\n\n\"They could have also built the research facility underground,\" Jade suggested. \n\nCalara nodded and said, \"If that's the case, we have no chance of scanning for it. That mountain range contains lots of metal deposits, so a metal base would be very difficult to spot, even if they constructed it out of metal. The walls of the facility might be made of crystal for all we know.\" She shrugged helplessly, frustrated at not being able to give him any more solid information.\n\nJohn walked over to her, and leaned over to give the frowning Latina a kiss. \"Let Alyssa know if you get even a sniff of trouble,\" he said to Calara.\n\nShe smiled in return and replied, \"Don't worry, I'll let you know if anything changes up here. You be careful though, and look after them all.\"\n\n\"Yes, Ma'am,\" he said with a grin, before turning to the green-skinned Nymph who had walked over to join them, and waited patiently at his side. \"Everything okay, Jade?\"\n\nShe nodded eagerly, and replied, \"I wish I was going inside the nest with you, but just let me know as soon as you need me to bring the Raptor down, and I'll pull you out of there!\"\n\nJohn smiled at her, then said, \"Will do. You two stay safe up here, and watch our backs.\"\n\nThey looked serious and a bit worried as they promised him that they would. John pulled them both into a hug and said, \"Everything will be fine. Don't worry, okay?\"\n\nAlyssa, Dana, and Rachel walked out of the briefing room, now fully equipped and ready for action. They strolled over to join them, and waved goodbye to Calara as they descended in the grav-tube, leaving her alone on the Bridge.\n\nJade darted ahead of them, and hit the button to open the double doors into the Hangar Bay. The glossy white Raptor gunship was shining brightly in the overhead lighting, and seemed almost eager to get moving, where it waited for them in the huge room. The Nymph jogged up the loading ramp into the Raptor, with John, Alyssa, Dana and Rachel following close behind.\n\nWhen they caught up to her in the cockpit, Jade had already powered up the engines, and had begun opening the Hangar Bay doors. They sat in the chairs at the back of the cockpit, and watched quietly as she quickly and efficiently went through the last of her safety checks. Nodding with satisfaction, she took hold of the flightstick and then smoothly lifted them off the deck and then out of the yawning portal in the side of the Invictus. As she pivoted the Raptor, they saw the bright golden flash of the Maliri dropship, which was waiting patiently for them.\n\nA chime on the Pilot's console alerted them that they were being hailed, and when Jade accepted the call, the viewscreen in the cockpit flickered to life. Irillith's golden armoured helmet filled the image and she said curtly, \"Follow me down to the surface. The entrance to the Fulmanax nest is not easy to find.\"\n\nShe cut off the call before any of them had a chance to respond, and the golden Maliri ship rotated gracefully before it began to descend to the planet below. Irillith's ship was about half the size of their own, and it looked sleek, nimble and very agile, which proved to be the case, considering the effortless ease of its manoeuvres. Judging by the numerous weapon barrels jutting from the wings and hull, it seemed to be some kind of heavy fighter, but without an active scan, it was difficult to know more. \n\nThe flight down to the surface only took a couple of minutes, and Irillith's ship flew over the rocky mesa of the mountain range, before dipping down towards the edge of a rocky outcropping. At this altitude, they could see that the rocky shelf overhung a broad cavern entrance that disappeared into murky gloom. There was a small flat meadow area outside the entrance, before the edge of the mountainous area met the solid wall of green forests beyond. The Maliri ship swooped in and touched down lightly, its landing cushioned by the skilful use of retro-thrusters.\n\nJade brought them down beside the smaller ship, and when they landed, John and the girls rose to their feet.\n\n\"We'll be in touch as soon as we're ready to leave,\" John said to the Nymph, who stood and watched them anxiously. \"Take off as soon as we're clear.\"\n\nThey left the cockpit as Jade returned to her seat, dropping down in the grav-tube, and striding through to the front loading area. Dana hit the button to lower the ramp, and they walked out onto the surface of Quanthos a few moments later. Alyssa let Jade know they were all out, and the Raptor rose off the floor, with the loading ramp closing rapidly as the gunship climbed upwards into the air.\n\nThe back of the Maliri ship had rotated upwards and Irillith stood nearby pressing buttons on some kind of device that was built into the vambrace of her armour. A six-foot-long hovering platform floated silently out of the back of the ship, with a large and complicated looking device securely attached to the top. It consisted of four cylindrical objects, each around two feet tall, with a larger column in the centre.\n\nDana walked over to join the Maliri woman as she carefully manoeuvred the hover-sled out of the back of the ship. \"How does this sonic device work exactly?\" she asked eagerly.\n\n\"Do not tamper with it!\" Irillith said sharply. \"If you upset the calibration, then the sonic waves won't be emitted at the correct frequency. We could send the Fulmanax into a furious rage, rather than making them flee!\"\n\nDana backed away with her hands in the air, saying, \"Okay, relax! I was just curious.\"\n\nIrillith walked over to join John and the others, with the hover-sled floating obediently behind her. As she cleared the Maliri ship, it lifted straight up, the landing struts folding smoothly back into the gleaming golden hull. It raced away, and they watched it for a moment as it soared up into the heavens.\n\n\"We may proceed inside,\" Irillith said, un-shouldering a laser rifle that looked identical to the ones used by the Maliri guards back on Geniya Space Station.\n\n*Alright, let's move in,* John said to Alyssa. *You and I take point, Dana and Rachel can cover our flanks.*\n\nThey began to walk cautiously into the darkened cavern entrance, and to John's surprise, it started to get a little brighter the further they went inside, when he had been expecting the exact opposite. There seemed to be some kind of luminescent fungus lining the base of the walls where they met the floor, which started to appear with more frequency the deeper they went. There was a slight incline to the broad tunnel, and once they had walked for a couple of hundred metres, the gradient of the slope began to increase.\n\nJohn turned and asked Irillith dubiously, \"The research facility was down here?\" \n\nShe nodded and replied, \"There are natural caves below us. The scientists were researching the properties of the fungi that grow down here, before they were forced to flee from the Fulmanax.\"\n\nThey continued onwards, and according to the atmospheric readings displayed in the helmet GUI, the moisture level in the air was increasing. A layer of mist covered the ground, growing thicker as they descended, and the unseen floor began to squelch with every footfall. Eventually the mist was up to calf height, which was high enough to obscure the luminous mushrooms, giving the mist an eerie glow. \n\n*You take me to the most delightful places,* Alyssa said to him with amusement.\n\nJohn smiled in his helmet, but kept a sharp eye ahead in case any threatening targets should appear. The tunnel began to curve gently to the left, and then passages began to appear on both sides, leading off into impenetrable darkness.\n\n\"Keep following the main tunnel,\" Irillith said, pre-empting his next question.\n\nThey followed the broad passageway down, the tunnel at least thirty metres wide and the ceiling a good twenty metres above them. John began to hear damp, squelching sounds coming from further ahead, and he warned Alyssa of potential danger. She instantly passed on the message to Dana and Rachel who began to move more warily, as they scanned their rear and flanks, looking for threats.\n\nThe tunnel levelled out and then opened up into a huge, high-ceilinged cavern. They were high up on a ledge that arced around both sides, before gently sloping down to the base of the cavern, and below them they could see huge fungi growing up from the cavern floor. The colossal fungi were at least thirty metres high, and provided a moist orange canopy that obscured the floor of the cavern from sight. The sounds of creatures moving below them intensified, and their group paused, and peered over the ledge trying to find out what was making all the noise.\n\nSuddenly there was a loud thump, of something big colliding with some other equally solid object. John spotted movement on the fungi below, and one of them in the middle seemed to be trembling. There was another heavy thump, and the huge orange capped fungus shook violently from the impact. With a third bass rumble, the mighty fungus toppled over before crashing to the ground with a surprisingly quiet impact. The enormous mushroom bounced with a wet thump a couple of times, before coming to a rest. John jogged quickly up the ledge ahead of them to get a look at whatever had knocked down the fungus, but by the time he had drawn level with the gap, whatever it was had disappeared under the impenetrable canopy of fungus caps.\n\nThe rest of the girls walked briskly to catch up with him, the grav-sled following faithfully in their wake. Now that they had reached the break in the mushroom canopy, they could see bizarre, eight-feet-tall Fungoid creatures moving around below them. There were dozens down there, moving surprisingly rapidly on three stumpy legs. They had a spongy looking torso, which contained four beady eyes, a gaping fanged mouth, and two long arms that ended in sharp looking hooks. Their bodies were a pale white, but their heads were topped in bright red mushroom caps, covered in sickly yellow spots.\n\n\"Those are the Fulmanax,\" Irillith informed them. \"Hideous, aren't they?\" she added with disgust.\n\n*Those hooks look nasty. We don't want them getting too close,* John thought to Alyssa, and she nodded when he glanced her way. \n\nRipping and tearing sounds began to drift up to them, drawing their attention back to the floor of the cavern. The Fulmanax were hacking the felled Fungus to pieces, carving it into smaller chunks with hefty blows from their robust arms. The sickle shaped claws seemed to be having no problems chopping up the sturdy trunk of the fungus, and they moved up the stalk, slicing it to ribbons. Some smaller, squat-looking four armed Fungoid creatures came stomping along to join them, and they stooped over to gather up the fungus chunks that were strewn over the floor.\n\n\"What the heck are they doing?\" Dana asked curiously.\n\nRachel leaned over, straining to get a better look, and sounded fascinated as she said, \"Maybe the big fungus is some kind of food? They look like they could be harvesting them. Those bigger Fulmanax are probably some kind of warrior caste, and the smaller ones might be a worker drone perhaps?\"\n\nIrillith had crossed her arms, and began to tap her fingers against her golden armour impatiently. \"We've wasted enough time in this dreadful place, let's get a move on,\" she said in annoyance. \n\n\"Which way from here?\" John asked her curtly, growing tired of her surly tone.\n\nShe pointed ahead of them to the ramp that dropped down below the fungus caps, and said, \"We need to go down there to the cavern, work our way along for another hundred metres of so, and take another tunnel down to a bigger cavern below.\"\n\n\"Why can't we just activate the sonic device from here?\" Dana asked her thoughtfully. \n\nIrillith turned to face her, bristling with anger, and said, \"Why must you bother me with these incessant questions? If you must know, it's because the rock in the caverns up here is too dense and will absorb the sound waves. We need to go to the lower level, below the strata of rock, and then I can set it to go off once we're clear.\"\n\n\"Alright, calm down Irillith,\" John said to her firmly. \"It was a perfectly reasonable thing to ask.\"\n\nIrillith whirled to face him, and by her body language looked about to snap at him, but she seemed to control herself and then said sweetly, \"Please lead on, if you would be so kind.\"\n\nJohn rolled his eyes behind the protective helmet, and he heard Alyssa's telepathic giggle. He walked over to the ramp and began to cautiously descend, with Alyssa striding briskly to catch up with him. Irillith came along next with the grav-sled, leaving Dana and Rachel to bring up the rear. Their group made steady progress downwards, drawing level with the giant orange mushroom caps, and then eventually moving below, so that they could finally clearly see the ground level of the cavern. \n\nThe fifteen Fulmanax warriors had hacked apart the stalk of the enormous mushroom, and were now merrily carving their way through the huge, umbrella-like cap. They seemed to be completely engrossed in their task, and had either not noticed John and the girls, or couldn't care less about their presence in the cavern. The smaller squat Fungoids that Rachel had guessed might be Fulmanax drones, scurried along with their odd, rolling gait. The stumpy creatures ignored the humanoids, and made a detour around them as they carried armfuls of mushroom chunks deeper into the cavern.\n\nJohn led them cautiously across the cavern, sticking to the right hand wall, and the strange illumination from the glowing fungus. His acute hearing could detect the tinkling sound of running water from up ahead on his right, and he waved the others to a halt as he warily approached a broad tunnel on the side of the cavern, just as Irillith had described. After stepping inside and nearly slipping on the glistening floor, he listened intently for any worrying sounds. Not hearing anything alarming, he backed out, and then beckoned the rest of the group forward. \n\n\"The floor is wet, probably some kind of runoff for all the moisture in here. Watch your footing when we walk down there, it's very slippery,\" he said, warning them to caution.\n\nAlyssa moved to his side, and they began to walk further down the tunnel, the occasional scuffing sounds and muffled curses announcing when someone had nearly slipped on the slick tunnel floor. It took nearly five painful minutes of carefully placed steps to safely reach the cavern below, and they all heaved sighs of relief when they arrived on firmer footing. As they took in their surroundings, there were gasps of surprise when they looked around at the astonishing sight in front of them. \n\nThis cavern area was huge, with long stone ridges rising up, and crisscrossing the vast underground cave. It was even damper in here, and water dripped from the ceiling in long rivulets, before pooling on the ground and running over the edge into trickling waterfalls down bottomless sinkholes. The entire area was shrouded in mist, with dense fog at knee height across the floor. Above them, long silvery veins of some kind of metal ran the entire length of the cavern ceiling, while long stalactites reached down like the multi-fanged maw of some terrifying predator. Dozens of the stalactites had grown so long, they had joined with stalagmites from the ground, forming broad, mighty pillars that gave the illusion that they were struggling to hold up the colossal weight of the rock above them.\n\nThere were a lot of Fulmanax in this area; they seemed to be mostly drones, but the taller and more menacing warriors could also be seen wandering around in groups. They were walking with a shambling but rapid shuffle of their three stumpy legs, as they hurried onward with whatever tasks Fungoids deemed important.\n\n\"We need to get over those rock bridges to the far side of the cavern,\" Irillith informed them in a hushed voice. \"We have to set up the device over there.\"\n\nJohn nodded, then led them carefully into the room, being extremely wary about placing a foot in the wrong place, and potentially tumbling down one of the holes in the floor. The Fulmanax seemed to be ignoring the rocky bridges, so he led them over to one of the wider ones, measuring three metres across in most places. The footing seemed reasonable, so he cautiously proceeded up the ten metre long slope until it levelled off. He studied the hundred metre long ridgeline, and it seemed to be consistently wide and flat enough across the entire length, for them to safely proceed. \n\n\"This looks good, come on up,\" he called down to them, and Alyssa followed after him immediately, with Irillith, Dana and Rachel moving close behind.\n\nJohn waited for them to reach the top, and they began to walk steadily along the rocky bridge, darting cautious glances to the left and right at the strange alien inhabitants of this underground ecosystem. The Fulmanax seemed to be ignoring them completely, paying them no attention whatsoever.\n\n\"It seems odd the Fulmanax attacked the Maliri scientists,\" Rachel mused out loud. \"They seem to be completely ignoring us.\"\n\nIrillith snorted dismissively and said, \"Don't be fooled by their seeming aloofness. They are dangerous and unstable creatures, prone to random acts of violence.\"\n\nRachel nodded in reply, and then walked silently, making good time as they crossed the bridge. Until that is, they were nearly three-quarters of the way across and John cursed in alarm.",
        "\"Shit! There's a group of Fulmanax drones coming across the bridge the other way!\" he exclaimed to the rest of them.\n\n\"Shall we go back, and wait for them to pass?\" Dana asked him hurriedly.\n\nHe shook his head and replied, \"They're moving faster than us. They'd catch up before we made it all the way back. We'll have to stick to the side, breathe in, and hope they just walk past us like the others did.\"\n\nIrillith repositioned the grav-sled to the side of the ramp, leaving a two metre path for the dozen drones to pass. John and the girls held their railguns warily, ready for action at a moment's notice, and they waited for the Fulmanax to walk past them. The squat fungoids moved into single file, and made a detour around them stomping past with their peculiar rolling gait. There were actually sixteen of them in the group, and John breathed a sigh of relief as the last one walked past him. All seemed to be going perfectly, until the last one stopped when it reached the grav-sled, and turned to look at it curiously with its four beady eyes. It stared at the sonic device with interest and reached out to the central core with its four multi-suckered hands.\n\n\"Bzap!\" Irillith's laser rifle sounded shockingly loud in the tranquil calm of the underground cavern, and a single bright blue laser bolt burned a fist sized hole straight through the Fulmanax drone's face. \n\nAstonishingly it was still alive, and it's arms flailed around wildly, as it let out a long keening wail. Irillith stepped forward and kicked the stricken creature, sending it sailing over the edge of the bridge and into the mists below. Its death scream echoed around the cavern as it plunged to its doom, until it was abruptly and fatally silenced.\n\nIrillith chortled in amusement, as John and the girls turned to look at her in shock. \"What?\" she asked them, when she realised they were all staring at her. \"I couldn't risk it damaging the sonic device.\"\n\nScreeching cries could now be heard coming from all over the cavern, and John spun to look back along the bridge. \"Well the Fulmanax aren't ignoring us any more. We've got incoming warriors at this end,\" he warned them.\n\n\"There's a shitload coming this way too!\" Dana cried out in alarm. \n\nJohn and Alyssa crouched down at one end, sighting down the bridge as the Fungoid warriors surged up the rocky ramp, sickle shaped claws waving frenziedly. John aimed at the lead one, and fired off a three round burst, hitting it square in the torso. Massive chunks of fibrous body parts exploded outwards, leaving three big craters in its chest, but the Fulmanax warrior didn't seem phased in the slightest. It let out a shrieking cry of rage as it stormed towards them, moving incredibly quickly on its three legs. \n\nJohn readjusted his aim, and shot the creature in the face, leaving three craters in its blocky trunk where the four beady eyes used to be. Still the raging fungoid bore down on them relentlessly.\n\n\"What does it take to knock these fuckers down?\" he murmured under his breath, watching with alarm as the enraged creature stormed towards him.\n\nSuddenly feeling inspired, he aimed much lower, and with a single, precisely aimed shot, he blew out the leg of the Fulmanax warrior, sending it tumbling to the ground, and rolling off the edge. It shrieked as it fell, until it met the terminal end of a fifty foot drop.\n\nAlyssa had been merrily blasting chunks out of the next warrior along, but having similar limited success. When she saw what John had done, she copied his precise targeting, and sent the next Fulmanax tottering over the edge.\n\n\"Take out the legs, and knock them off the bridge,\" he called to Dana and Rachel. \"They seem to shrug off all other damage.\"\n\nHe heard the purring chatter of their railguns, as they followed his targeting advice, and soon Fulmanax warriors could be heard falling to their deaths from behind them as well as in front.\n\n*Well, this is working out marvellously,* Alyssa noted wryly as she shot out the leg of another warrior, then sighted another. *Might I suggest we avoid bringing psychopathic guests with us on our next journey into a nest of hostile creatures?*\n\n*Sounds like good advice to me, XO,* John replied grimly, as he sent high-velocity rounds slamming into his next target. *What has me worried at the moment, is how are we going to get off this bridge? As soon as we move down, we won't be able to use the fall to kill these warriors.*\n\n*Rachel says we need to get her to a warrior corpse so she can examine it,* Alyssa informed him.\n\n\"Hold position here for the moment,\" John said loudly so that they could all hear. \"We'll move on when we've thinned the herd a bit.\" \n\nHe fired off several more rounds, helping Alyssa knock the Fungoid soldiers off the bridge. She was methodically taking out one Fulmanax warrior after another, with unerringly accurate shots that blasted out their stocky legs, and as she mowed the aliens down, he noticed a slight flicker of movement on her shoulder. He turned to look more closely, and the golden lioness insignia changed from its wise, restful pose, to a fearsome snarl as she opened fire. He smiled, and rolled his eyes at Dana's unannounced modification.\n\n\"Watch to your right!\" Irillith cried out, and John glanced that way, then ducked, just in time to avoid a large rock thrown at his head.\n\nA group of Fulmanax drones were hurling heavy rocks at them from the bridge to their right hand side, and they were obviously a lot stronger than they looked, because the rocks were sailing their way with deadly speed and accuracy. John opened up on one of the drones, slamming rounds into its face and knocking it backwards. He then fired a single round into one of its legs, which exploded in a burst of thick fibrous white tissue, and sent it sailing over the edge of the rocky bridge. He used the same technique on the second one, and was about to move on to the third, when Irillith opened up with her laser rifle. \n\nThe stream of blue laser fire lit the cavern up brightly, and the bolts of laser energy seared straight through her unfortunate target. She was firing on automatic, and literally cut three of the angry Fulmanax drones in half. The disturbingly resilient creatures were still alive, thrashing angrily on the ground, but without any way of putting momentum in their throws, they had been effectively neutralised.\n\n*Her laser rifle packs more punch than a Gatling laser!* John thought to Alyssa, his shock coming through loud and clear.\n\n*If we ask nicely, do you think she'll let Dana take a peek?* she replied innocently, before she suddenly turned serious. \"There's a big surge of them, I'm going to need your help.\"\n\nJohn finished off the last of the drones, shooting out its legs as it stumbled backwards from a three round burst, then spun to face down the bridge again. Alyssa was quickly and calmly reloading, which meant that the Fulmanax warriors were only ten metres away from them. He opened up on the first one, sending a couple of bursts into it to slow its momentum, before he aimed at its legs. \n\nThe Fulmanax seemed to have realised the danger these leg shots presented, so they had started weaving back and forth, and his first two shots missed. He took a deep breath and concentrated intently, then pulled the trigger, firing a three round burst of hollow point ammo into two of its legs and sending it cartwheeling over the precipice. His ammo counter was reading 204/04, and he fired off the last four rounds before hurrying to slap in another mag. Alyssa had started firing again, but despite sending another falling to its death, they were coming on too fast. \n\n\"Stay down,\" Irillith ordered them sternly, and standing directly above them, cut loose with her laser rifle. \n\nBright streams of laser bolts flashed over John's head, and he had to squint against the blinding glare. She strafed the laser fire from side to side, melting huge holes in the rampaging Fulmanax warriors and cutting them to pieces. With them tightly packed in a line, the laser bolts were hitting two, sometimes three aliens at a time, and caused massive devastation to their ranks.\n\nAfter five seconds of continuous fire, she finally stopped shooting, having broken the Fulmanax's charge. When John glanced up at her, he could see steam pouring off the laser rifle as the heat sinks desperately vented all the excess heat. He stood, and looked behind them to check on Dana and Rachel. \n\n*They're doing fine,* Alyssa explained. *There were less coming from behind, and the Fulmanax had to charge over a much longer distance.*\n\nThere seemed to be a temporary lull in the fighting, with the Fulmanax forces exhausted for the moment, so John had a quick look around on the other side of the bridge. He could see shambling shapes moving in the mists, but for the moment, they were no longer being charged by Fungoid warriors.\n\n\"Let's move on,\" he said to the girls. \"We've stopped them for now.\"\n\nThey continued walking across the bridge, and John drew his sword to put the dismembered Fulmanax warriors out of their misery. He reached the first one that had been cut in half across the waist, also neatly severing its arms. He was about to strike, when he realised he didn't know where. \n\nRachel walked up to join him and said sombrely, \"Cut straight down the middle, and then do the same to the next two pieces if it's still moving.\"\n\nHe nodded, and waved them back, then brought his sword down in an overhead chop, that cleaved through the thick fibrous material. The creature was surprisingly sturdy and difficult to cut though, so it took a second blow to finish chopping it in half. The right half continued to twitch and spasm, so he got ready to cut those pieces in half too, effectively quartering the Fungoid creature.\n\n\"These things are crazy,\" Dana said in a shocked voice. \"How can they keep going after literally being cut in half?\"\n\nRachel was staring at the dismembered creature intently. \"I have my suspicions,\" she said cautiously. \"I'll be able to tell you shortly.\"\n\nJohn cut the right side into neat pieces as well, and the Fulmanax warrior finally stopped thrashing around. Rachel knelt next to the dissected creature, and carefully examined it's bizarre anatomy, gently moving aside it's bloodless white fibrous flesh. It only took her a minute of careful probing, before she found what she was looking for, and she lifted the section of torso, then turned it over. \n\nShe pointed to an odd shaped, dark red lump on the back of the creature's head, beneath the scarlet mushroom shaped cap. John's second sword strike had cleaved straight through it, and they could see the purple mass of tendrils beneath the thick red protrusion. \n\n\"That's a massively enlarged nerve ganglia. I think these Fulmanax form a hive mind, and these drones and warriors are being controlled by some higher consciousness. That's why they can keep on fighting even after sustaining horrific damage,\" she explained thoughtfully.\n\nAlyssa looked up at her and asked, \"So if we hit them in this red lump on the back of their head, we should be able to take them out instantly?\"\n\nRachel nodded and replied, \"Yes, or at the very least cut them off from the hive mind. That will probably prove to be equally as debilitating.\"\n\nJohn walked over to the next mangled Fulmanax warrior, and chopped off its one remaining clawed arm when it tried to lash out at him. He then flipped the creature on its front, and plunged his sword into the nerve cluster on its back, causing it to stop lurching around immediately. He looked up at their gifted Doctor and nodded.\n\n\"Alright, let's move out,\" he said, and took the lead, dispatching each of the fallen Fulmanax as he neared them.\n\nThey cautiously descended down the ramp on the other side of the bridge, and began to make their way across the vast cavern floor. Weaving a way across proved to be a painstaking process, as the floor was slippery and treacherous, and they had to be ever-vigilant in case of sinkholes. Fortunately they weren't attacked again, although they could hear the sound of ever increasing numbers of Fulmanax moving around in the distance. \n\nAfter five minutes of careful progress, they could see the far wall ahead of them. Many stalactites and stalagmites had merged here, forming a gallery that led through to another vast chamber. They walked through the gallery, and out onto a ledge that overlooked the next room, and looked on in awe at the sight below them. \n\nThe cave they were overlooking was colossal, and much more brightly lit. The illumination was coming from glowing fungus, which was sprouting in abundance over a huge white hill that dominated the floor of the next cavern, perhaps fifty metres below them. Silvery streaks lined the ceiling, glinting in the bright glow from all the luminescent fungus. The ledge wrapped right around the room, providing a wide natural balcony that overlooked the fungus covered hill, and dozens of unlit tunnels led into this room at regular points. \n\n\"This is the place,\" Irillith said with grim satisfaction, and she turned to the sonic device on the grav-sled and began to check it over.\n\nThe wet, squelching noises coming from the darkened, mist shrouded cavern behind them were getting louder, and the girls began to glance at each other in alarm. \n\n\"Get ready,\" John warned them. \"We're going to be attacked very soon.\" \n\nAlyssa, Dana, and Rachel, moved back to the main cavern, kneeling in firing positions behind the grav-sled, looking out warily into the gloom. John walked over to Irillith and stood by her side, but she was so engrossed in her work, she didn't seem to be aware of him. He was about to reach out, and place his hand gently on her shoulder, but thought better of it.\n\n\"Irillith,\" he said firmly, jolting her from her absorption. \"I need you to light up the area behind us. I think the Fulmanax are readying a charge.\"\n\nShe paused for a moment, then nodded as she unslung her laser rifle from her shoulder, and stood between Dana and Alyssa. \n\n\"On three,\" she warned them, and began counting down. When she reached one, she fired a quick burst, spraying the shots in a wide arc.\n\n\"Oh fuck!\" Dana said in alarm, as hundreds of Fulmanax warriors were suddenly brightly illuminated by the staccato flash of laser fire.\n\nA cacophonous shriek sounded out through the cavern, and the assembled mass of Fungoid soldiers surged forward, their sharply barbed claws raised, and ready to strike. Alyssa, Dana and Rachel began to open fire with the quiet purr of their railguns, sending high velocity bullets slamming into the enraged Fulmanax. \n\nBy concentrating their three round bursts to hit the creatures in the right side of the head, their firepower was proving lethal once more. Scores of the creatures went down, as the sensitive nerve ganglia was blasted to bits. Irillith's laser rifle was proving even more devastating, as she was able to send searing laser bolts straight through the creatures, making every hit to the right side of their head fatal.\n\nJohn snapped off three round bursts at any that were getting too close, while keeping a wary eye on the overall tactical situation. Despite how quickly the girls were gunning the Fulmanax down, more and more were surging out behind them. \n\n\"Use grenades when they get closer,\" he ordered sternly, firing a three round burst at a warrior that was attempting to sneak around on their flanks.\n\nSuddenly a rhythmic thumping sounded from behind them, along with the sound of a multitude of squelching footfalls. He spun, staring out across the huge room as a huge horde of Fulmanax began to pour out of the tunnels that fed out onto the broad ledge around the chamber. He felt a rising surge of panic, but fought it down immediately as he ran through the pillars into the other chamber. \n\nFlipping open the pouch carrying the explosive grenades that Dana had made for them, he shouldered his railgun, and grabbed a grenade in each hand. Pressing down the activation button, he lobbed one grenade to his left and one to the right, sending them bouncing and rolling around the curved walls of the cavern thirty metres in either direction. \n\nThere were a couple of thunderous explosions, as the grenades reached the front wave of the mass of charging Fulmanax. The first several creatures on both sides were blown to bits, sending white fibrous chunks in all directions, and large pieces of the ledge broke off, tumbling down into the cavern below. He quickly readied two more grenades, sending them flying in each direction, and aiming for the exact same spot, even though the lead elements of the Fulmanax were already there.\n\nHe heard explosions behind him, as the girls used their own grenades, but he didn't have time to react as several Fulmanax were on top of him. He let go of his railgun, and grabbed his sword, swinging it down in a broad arc, and neatly cutting through the reaching clawed arms of the first warrior. It tried to charge straight into him, so he was forced to sidestep, cutting away one of its legs as he did so, and sending it tumbling to the floor. \n\nThere were two more huge explosions from his own grenades, but he was far too busy frantically dodging razor sharp claws to be able to check on the results of the detonations. He just had to pray that the grenades were successful, or they were all doomed. Despite his skilful dodging, one of the Fulmanax managed to lash him with its clawed arms, cutting deep furrows in his armour, and knocking him sideways. It took him a moment to recover his balance, during which time the second warrior slashed its powerful claws across his leg, gouging deep furrows in the armour.\n\nJohn planted his feet to avoid being knocked over, and performed a quick darting slash, that cleanly cut one of the clawed arms in half. The other two warriors were moving to surround him, so he darted forward, chopping down and cutting away the front leg of the Fulmanax in front of him, making it topple forward. As it fell to the ground at his side, a plunging stab to the back of the head speared the nerve cluster and it collapsed lifelessly.\n\nThe remaining two charged forward at him relentlessly, trying to knock him off the ledge, which would mean a long and deadly drop to the floor below. He dived to the side, leaping with all his strength, and they both rushed past him, flinging themselves to their doom. One of them lashed out with both arms however, sinking them into his leg, and the weight of the hulking creature threatened to pull him over with it. He scrabbled behind him as he was dragged closer to the edge, and then punched down with his left fist, driving his armoured fingers into the rock and anchoring himself in place. Brandishing his sword with his right, he slashed out in a wide arc, cutting through the Fulmanax warrior's arms and ended its brief escape from a fatal meeting with the floor below.\n\nHe leapt to his feet in alarm, readying his sword in case there were more Fulmanax charging at him, and glanced either way around the ledge. He sighed with relief when he saw the ledges, and the five metre gaps that had been blown out on either side. His grenades had done their work, and the teeming horde of Fulmanax warriors could only flail their arms at him in anger, rendered impotent by the broad chasm he had blasted on the only routes to him. \n\nSheathing his sword, he picked up his railgun, and turned to check on the girls. *Everything alright there?* he asked Alyssa worriedly.\n\n*It got a bit hairy for a while, and one of them managed to reach Dana, but she's alright, just got knocked on her ass,* the psychic blonde replied. \n\nJohn smiled and thought to her, *Alright, let's fight this lot back, and th-*\n\nHe stopped mid tracks as the ever-present thumping sound got louder, but now he could feel the trembling vibration through his feet. He whirled to look behind him, just as a huge Fulmanax monstrosity burst out of the biggest passage leading from the chamber. It stood nearly fifty-feet tall, looking much the same as a Fulmanax warrior, but much, much larger. It's long arms were thicker than tree trunks, and ended in several wickedly sharp claws. It let out a thunderous, spine chilling roar, and then began to stomp around the ledge, as the rest of the Fulmanax scrambled to get out of its way.",
        "*Holy shit! What the fuck is that thing?!* Alyssa gasped in shock.\n\nJohn had no time to respond, he just opened up on full auto with his railgun, sending dozens of rounds slamming into the Fulmanax behemoth. He might as well have been using paint-balls for what good it did him, and his bullets ricocheted harmlessly off its reinforced hide. Alyssa had run out onto the ledge next to him, and she began to fire bursts at the behemoths face, shooting out its eyes with uncanny accuracy. \n\nThat seemed to have no effect, and it pounded ever closer, stepping over the yawning gap with ease. Alyssa backed off a little, emptying the rest of the magazine into the creature, trying to take out joints or other weak spots, but it seemed completely impervious to the railgun rounds.\n\nJohn reached for his sword and sprinted forwards, bringing his blade around in a massive chop at the behemoth's lead leg. The huge, thick leg was nearly eight feet wide, and although his mighty swing cut through its armoured hide, and several feet into the tough sticky fibres beneath, it got stuck half way through. John put a booted foot on the hulking Fulmanax creature's leg, and was about to yank the sword clear, when it swung its leg forward, sending him sailing through the air.\n\nHe slammed into one of the calcite pillars, his heavy armoured body crashing straight through, and breaking the pillar in half. He bounced off the pillar behind it, and slumped bonelessly to the ground. \n\nDana, Rachel and Irillith glanced behind them at the terrifying roars coming from the cavern behind them, but they were still being assaulted by another wave of Fulmanax warriors. All they could do was keep adding to the rapidly growing piles of Fungoid corpses, and pray that John and Alyssa could handle whatever new threat had appeared by themselves.\n\nAlyssa dashed to John's side to check he was alright. \"John!\" she shouted at him desperately. \"You have to get up!\"\n\nHe had been knocked senseless after being slammed through the pillar, and was reaching for her feebly, trying to pull himself upright. The Fulmanax behemoth roared once again, and stomped unimpeded across the gap. It raised one of its massively thick arms, and swung it around to smash into a huge calcite pillar, which sheared off at the ceiling, and toppled over directly on top of John and Alyssa.\n\n*JOHN!!* she screamed, and held her hands above them reflexively, in a futile effort to stop the towering pillar from squashing them like bugs.\n\nExcept the pillar had stopped falling. \n\nIt hung motionless in the air, inches above them, suspended mid-fall by some unknown force. The Fulmanax stepped forward and placed its colossal foot on the pillar, stomping downwards. Alyssa groaned under the strain, and with an agonised cry of pain, she collapsed as the pillar crashed down on them. \n\nDana felt Alyssa's searing pain over her telepathic link, and whirled around in horror. \"No!\" she cried out, her heart lurching as she saw her friend's crumpled body lying half buried under shattered stone. Dana raised her railgun, and blazed away at the towering Fulmanax beast that loomed over her friends, but her shots proved equally as ineffective as John's had.\n\n***\n\nIrillith glanced behind her, and saw the bullets ricocheting harmlessly off the massive white legs of the creature behind them, and felt fear grip her chest. As much as she loathed these Terran women, unless she did something, she was doomed as well.\n\n\"Hold off the Fulmanax warriors, I'll stop that thing!\" she shouted at the white armoured woman standing beside her. The Terran turned and stared at her dumbly for a moment, until Irillith screamed, \"Now, you fool! Before they overwhelm us as well!\"\n\nIrillith stood and raised her laser rifle to her shoulder, walking forward as she began to send bright blue laser bolts into the Fulmanax behemoth. The creature's armoured hide was over a foot thick, and although the laser bolts punched through the surface of the vast white tree-trunk of a leg in several places, it seemed to make no appreciable difference to the enormous beast.\n\nShe had to stop firing for a moment to let the heat vent out of her weapon, and she dived to the side when the Fulmanax reached down and lashed out at her with its long arms. The huge six-foot-long claws sailed over her head, whistling as they missed her by inches. Irillith had landed by the crumpled white body of another of those insufferable Terran whores, and she smirked when she saw how badly wounded this one was, lying crushed under a stone pillar. The Fulmanax behemoth flailed out at her again, and she had to roll and leap over the shattered stone, to avoid its cruel claws. \n\nThe laser rifle was linked to the interface in her helmet, and it let out a soft chime to let her know the heat had been fully vented. Raising the weapon to her shoulder, Irillith began to fire bright laser bolts into the Fulmanax again, the blue laser bolts searing holes through its armoured leg, and scorching the pasty fibred flesh beneath.\n\nShe spotted a slight movement out of the corner of her eye, which drew her immediate attention to whatever this latest threat could be. A massive chunk of the fallen pillar trembled again, and she backed away cautiously as it began to rise from the ground, while darting wary glances at the looming danger of the Fulmanax behemoth.\n\nShe stared wide eyed as the enormous slab lifted ponderously into the air, revealing that a figure in white armour had been trapped underneath. Rising to his feet, John effortlessly tossed aside the colossal rock, and she watched open mouthed in awe, as the huge chunk of pillar sailed through the air, before snapping her attention back to him.\n\n\"John!\" she gasped, not having realised that he'd been pinned under the rock.\n\nHis helmet had been broken in half, and his armour cracked and crushed in several places, but he looked unharmed as he turned to stare at her. She met his cold gaze, and immediately shrank back in fear, as a single contemptuous glance from him sent a shiver of terror down her spine. Not even her mother had managed to send such icy fingers of dread clawing at her soul.\n\n\"Out of my way, slave,\" he snarled at her dismissively, and Irillith staggered backwards, desperate to clear out of his path. \n\nShe kept up her stumbling retreat until she bumped into a pillar, watching transfixed, as he strode past her towards the Fulmanax monstrosity. He raised his hand toward it as he walked, and she noticed that the sword he'd been wielding earlier was now buried in the enormous Fungoid creature. The blade seemed to tremble, and then before her astonished eyes, it ripped clear of the colossal leg, and flew straight into John's outstretched hand. The impact made a resounding clang as he caught it in his gauntleted fist, and he swung it down and to the side, holding the huge sword in his right hand. The huge Fulmanax creature bellowed a defiant challenge, and John's eyes gleamed with anticipation, a sinister smile spreading across his face.\n\nIrillith stared in shock as his sword suddenly erupted in bright blue flame, flickering and dancing up the blade, as it burned with a dreadful ethereal hunger. She shrank back against the rocky pillar behind her, wishing it would swallow her up, and quivered with fear as the Mael'nerak stalked forward to go about his dreadful work. \n\nAll these years, she had dismissed Tashana's stories as the fanciful fairy-tales of someone far too naive and trusting for her own good. Irillith had only started to half-believe Tashana's nonsense when she had seen the Mael'nerak for the first time, back on Geniya Station. She had seen the pictures of course, and had instantly recognised him for what he was. However, her initial fear had turned to contempt, when he appeared so soft and trusting with his women and Ceraden. \n\nBut now here he was, unmasked at last. The devil made flesh before her terrified eyes."
    ],
    "authorname": "Tefler",
    "tags": [
        "teenager",
        "swallow",
        "submission",
        "domination",
        "cum inflation",
        "psychic",
        "fulmanax",
        "watch those corners",
        "invictus upgrade"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-45"
}