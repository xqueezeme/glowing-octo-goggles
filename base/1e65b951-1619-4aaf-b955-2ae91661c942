{
    "title": "Love Knows No Color Pt. 10",
    "pages": [
        "Shavonda and I stared at the two women glaring at us from the couch. They were a study in opposites, each wearing the same expression. Althea was an older version of Shavonda. She had the same dark complexion, almond shaped eyes, wide nose and full lips. She had the same build with a couple extra pounds. The same wide hips and narrow waist. Barbara couldn't look more different. She was a short, stout woman with pale white skin and long blonde hair streaked with gray. But both were madder than hornets. This wasn't going to be good.\n\n\"Kids, go play in your room. The grown ups need to talk,\" I sent the kids scampering off, oblivious to what was about to happen.\n\n\"Rose told me everything,\" Barbara started, staring at Shavonda, who looked wide eyed like she'd seen a ghost. Barbara turned her gaze to me. \"Every thing,\" she repeated, looking me dead in the eye.\n\n\"Shavonda Jenkins, how could you?\" Althea said in utter contempt. \"We raised you better than that. And you, Jason. I'm truly disappointed in you. You two had no right to hurt Rose like that. What would possess you to do something like that? We've lost so many in this family to the streets. I never thought you'd be one of them.\"\n\n\"I'm so sorry, Ms. Barbara,\" Shavonda said, voice cracking on the verge of tears. \"I snapped.\"\n\n\"Rose told you everything?\" I asked Barbara. \"Or did she only tell you her version? I bet she left this part out.\" I reached in my coat pocket and pulled out the certified letter. The one from Family Court detailing Rose's attempt to terminate my parental rights, based in part on allegations of Shavonda being a prostitute. I handed it to Barbara who read it and passed it to Althea. \"I'm not saying what we did was right, but at least know the whole story before you judge us.\"\n\nAlthea read the letter and gasped. \"Shavonda, when did you get arrested for prostitution?\" she asked. \"Why didn't you tell us?\"\n\n\"She wasn't arrested.\" I answered for Shavonda. \"We were set up coming home from our engagement party. Somebody called the cops, gave them Shavonda's description, right down to the clothes she wore. They also gave my license plate number and said they saw the 'prostitute' get into my car. The cop followed us, and took Shavonda for questioning. Funny thing. She was never arrested. There was never any evidence. Another funny thing, only the person who'd called police would have known what they were questioning her for. But they wouldn't have known she wasn't arrested.\"\n\n\"It gets better,\" I continued. \"The \"arresting\" officer decided that since Shavonda was a \"prostitute\" she wouldn't mind giving a freebie in exchange for her freedom. He was about to assault her, cuffed in the backseat of the patrol car, but luckily got called to the stationhouse before he could do anything. A couple of days later we get this letter, telling us they want to terminate our parental rights over that fake phone call. Funny thing, that call. We had stopped at the gas station on the way home, and Rose saw us in the store. When we came out, she was on a payphone talking to somebody. Rose has, or had, a cellphone. Why would she need to use a payphone?\"\n\n\"Mrs. Jenkins, the reason we didn't tell you about the incident on Valentine's Day was we didn't want you and your husband taking matters into your own hands. We know people down in Zone 3. They are investigating the whole incident,\" I explained.\n\nThe ladies' expressions had softened. \"Don't think I'm not still mad at you two,\" Barbara said sternly. \"But now I understand better. That letter explains a lot. I told Rose to let me handle it. I'm not going to have you two arrested, THIS time. But this isn't going to happen again, is it?\"\n\n\"No ma'am,\" I said, Shavonda repeated. \"Not ever.\"\n\n\"Because if anything like this EVER happens to my daughter again, not only will you face charges for that incident, but this one as well. Do I make myself clear?\"\n\n\"Yes, ma'am,\" we replied.\n\n\"Honey, I know she's put you through hell,\" Barbara said to Shavonda. \"I don't agree with what she's done. Especially not this.\" Barbara waved the letter. \"But she'll have her day in court. I've tried to tell her to stop. Lord knows I didn't raise her like that. And this thing with family court? I'd have probably kicked her ass myself. You sure put the fear of God into her. She's afraid every time she hears your name. I told her, 'leave that girl alone or next time she'll kill you.'\"\n\n\"You should have told us,\" Althea shook her head sadly. \n\n\"And what? Have your husband try to hurt the cop that tried to molest his daughter? A black man against a cop? We all know how that'd turn out. You can't tell him about that, ever. You'll lose him,\" I reasoned with Althea. I turned to Shavonda. \"I talked to Ziggy today. He told me some things, off the record. I can't tell you what I know, Ziggy would lose his job. But heads will roll over this.\"\n\nI turned to Barbara. \"How is Rose doing?\" I asked.\n\n\"She came home from the hospital. They don't want her doing anything for a week. Thursday, she has an appointment with the doctor. He'll determine then if she can go back to work,\" Barbara told me. \"I've known you for ten years now, Jason. I don't know Shavonda well, but she seems like a good girl. I know you two are happy together. I know neither of you would do something like this normally. That is the ONLY reason I've shown mercy. If I thought for one minute you'd be beating my daughter I'd be the first one to call the law.\"\n\nAlthea looked at us, wagging her finger. \"Y'all ain't getting off that easy. You're going to pay for a new cell phone for Rose. A good one, as good or better than what you destroyed. You are also going to pick up any costs on her medical care. And you're going to pay to fix her window. You're also going to pay her lost wages until she can get back to work.\"\n\n\"Fair enough,\" I said.\n\n\"Also, I want both of you to apologize to Rose,\" she said.\n\nShavonda scowled. \"Like HELL I will! She's afraid now. She'll think twice before she tries anything else. If I apologize she'll think I am weak. I ain't no fool!\"\n\n\"She's right,\" Barbara agreed. \"As long as Rose is afraid maybe she'll act sensibly. Rose wasn't concerned when all she got were court cases. Now that she's gotten hurt maybe she'll think before she acts out.\"\n\n\"Shavonda, baby,\" Althea questioned, changing the subject. \"It's 35 degrees outside. Why were you wearing slippers? You'll catch cold.\"\n\nI had brought one of the plastic chairs in from the kitchen so Shavonda could get off her feet. She sat down and took her slippers off. The women stared at her slowly healing soles.\n\n\"What happened to you?\" Barbara asked.\n\n\"I took my heels off for the fight. I stepped in the broken glass from the car window. Jason spent a lot of time picking all the glass out of my feet, and he's been pampering me ever since. That first night, until he could get me these slippers, he picked me up and carried me everywhere, even to the bathroom. Just so I wouldn't have to walk on my feet,\" Shavonda explained. \"We haven't been out partying like nothing has happened. We had a rough weekend trying to deal with what we did. Don't think it's been easy for us.\"\n\n\"Honey,\" Barbara asked Shavonda, \"Rose told me you said I was family now. Is that true? Is that how you see me?\"\n\n\"Yes, ma'am. You ARE family now,\" Shavonda replied. \"Since Jason's kids are my family now, and you're their grandma, that makes you family too. And Rose would be family as well if she wasn't calling me out my name every chance she gets. That's how we are. We embrace people like that. Mama did it with Jason the first day she met him.\"\n\n\"That I did,\" Althea affirmed. \"I was about to cuss that boy out and he hands me his camera and asks me to take their picture. Who does that?\"\n\nThe women were calmed down now, and we carried on a friendly conversation. Soon they got up to leave. \"One more thing, Barbara,\" I said. \"Our hearing for custody is on Friday. I want you to know that no matter how it goes, you'll have access to the kids. You want to see them, just call us. You're welcome anytime.\"\n\nThe rest of the week went fast. Friday morning, we met our attorney before the hearing in Family Court. As attorney of record, he'd gotten served with a copy of the termination papers. Since the court date was so close, the hearing would determine not only the validity of Rose's charges against us, but also determine the permanent custody arrangement. He'd done a good job with researching the added developments in the case on short notice, and had copies of the relevant police reports, and the report from child welfare. \n\n\"Rose didn't hurt Ethan physically, according to the report. Wait until the hearing and you'll see what really happened,\" he told us. \"And the prostitution arrest? There is no public record of it, so you're clear there.\"\n\nBecause of the severity of the charges made against us, our case went directly before a judge in a courtroom, instead of a hearing officer in a cubicle. We were assigned to a Judge Suber, who turned out to be a heavyset black woman. Rose had looked uneasy in the waiting room before the hearing, staring at Shavonda nervously the whole time. There was no yelling like she would have done before the fight. Barbara had told us Rose was afraid. Now we saw it with our own eyes. When we entered the courtroom, Rose was visibly shaken. We were all sworn in and testimony began. \n\nRose represented herself. She had no corroborating evidence of the arrest, because there was none. And she had failed to get a copy of the Child Welfare report as well. The judge was ready to scold Rose, but our attorney provided a copy of the report. He handed it to the judge. She read it, she looked pissed.\n\n\"Mrs. Waite,\" Judge Suber said sternly. \"Do you mean to tell me you're going to say Mr. Waite abused your son based on THIS report?\" She read out loud from the report. \"Anna Butchko, a preschool teacher, told the investigator that Ethan Waite had been told to help the other children pick up the toys in the classroom. Ethan responded by throwing a temper tantrum. When Ms. Butchko tried to hold him to calm him down, Ethan broke free and threw himself against a free-standing toy shelf placed against the wall. His impact rocked the shelf, and it fell over on top of him. There were numerous toys on the shelf when it toppled, and Ethan was pinned under the shelf and toys until help could arrive. \"\n\n\"Ms. Butchko immediately notified the school nurse via intercom, who notified the mother, Rose Waite. Both arrived soon afterward, and the nurse helped Ms. Butchko lift the heavy shelf from Ethan. During this time, Mrs. Waite loudly berated Ethan, calling him stupid and generally hindering the rescue effort. She had to be escorted from the room and calmed down by security.\"\n\n\"The nurse examined Ethan for injuries and determined that bruises and possible fractures to his legs were severe enough to require emergency care. Mrs. Waite insisted on transport Ethan to the hospital, against the wishes of staff, who wanted an ambulance.\"\n\nThe Judge peered over her glasses at Rose. \"There's more.\" She continued to read. \"Ethan was examined by Dr. Bruce Metcalf at Mercy Hospital. The doctor stated that Ethan's injuries were limited to severe bruising to the legs. He also stated that Ethan, in the presence of his mother, said his daddy hurt his legs.\"\n\nRose looked white as a ghost. The judge addressed her. \"Mrs. Waite, it is reprehensible that when your child sustained injuries requiring hospitalization, your first reaction was to yell at your son, and your second was to blame the child's father for something that happened while he was miles away. And you want me to terminate HIS parental rights?\"\n\nThe attorney asked, \"May I enter into evidence the following on behalf of the plaintiff? I have here two police reports, one from September, and one from November, detailing vandalism of both the plaintiff's personal vehicle, and the plaintiff's fianc\u00e9's place of business. Also, I have an arrest report from November detailing the felony and misdemeanor charges the defendant is currently awaiting trial for, pertaining to the incidents previously mentioned. Charges include, but are not limited to, harassment and ethnic intimidation.\"\n\nThe judge looked over the reports, and pointedly asked Rose, \"Are these all directed at the father of your children and his fianc\u00e9?\"\n\n\"Yes, your honor,\" said Rose dejectedly.\n\n\"And in light of all the evidence presented here today, you expect me to terminate HIS parental rights and award the children to YOU? It seems to me that he's done an excellent job of trying to put back together what you've actively tried to destroy. You're lucky I don't terminate YOUR rights.\"\n\nThe judge dismissed us to wait her decision. We all sat out in the waiting room along with the other pending cases. Rose sat in a single chair along the wall, while the three of us sat discussing the case, in one of the rows of chairs that filled the waiting room. \"Look,\" I elbowed Shavonda. \"We're being watched.\" Rose was staring at us intently, probably trying to hear our conversation.\n\nShavonda looked Rose directly in the eye, and mouthed the word \"Muncy.\" Rose's eyes widened and she turned white as a ghost. She quickly got up and moved to another seat.\n\n\"What did you say to her?\" the attorney asked, curious.\n\n\"Muncy. I reminded her where she was going to end up after everything is done,\" Shavonda explained. She left out the part about Rose thinking Shavonda had people on the inside at Muncy.\n\nA short time later, Judge Suber entered the waiting room, papers in hand. Spotting us, she walked up and handed us a copy of the verdict. \"Mr. Waite, I think you'll find my decision to be fair and just. You can appeal within ten days if you disagree, after that the decision is permanent. Good luck to you and your fianc\u00e9.\"\n\nWe watched as the judge walked over and handed Rose her copy. I could tell by Rose's body language she was not happy. \n\nThe verdict was all we could have asked for. The children were to remain with us. Rose would have visitation every other weekend, from 6pm Friday to 8pm Sunday. She would also have to pick up child care costs and pay $300 a month in child support.\n\n\"Let me know if Mrs. Waite is foolish enough to contest this order,\" the attorney stated. \"This is about the best possible outcome for her, another judge might not be so lenient. She could have gotten contempt of court and perjury charges for what she did here.\" We shook hands and told him we'd keep him posted. \"One more thing,\" he added. \"If I were you I would sue that daycare for gross negligence on Ethan's behalf. Those shelves are supposed to have a strap connected to the wall so they can't fall over. Ethan could have been killed.\"\n\nIn the elevator on the way out of the courthouse, Shavonda kissed me deeply. \"They're ours now, Jason. We raise them. Nobody else.\" Her eyes sparkled with elation.\n\nThat night, we took the kids out to Chuck E Cheese to celebrate. \"It's official,\" I said to the kids. \"You're going to live with me and Ms. Von. Mommy will come to visit you, but you are with us now.\" I knew, though they were too young to understand what had just happened, they had to have felt the disruption.\n\nPlanning the wedding was coming along nicely. We'd picked out the dress the first weekend, and selected the wedding party. Ziggy would be best man, and Tamika the maid of honor. We'd also picked out the wedding invitations and sent them off to the printer. \n\nThe invitations read: Mr. and Mrs. James Jenkins are pleased to announce the engagement of their daughter Shavonda Marie Jenkins to Jefferson Scott Waite. You are cordially invited to attend the wedding ceremony, to be held Saturday, May 18 at Bethel AME Church.\n\nWe had worked out the list of invitees, there were over a hundred. Most of them came from Shavonda's much larger family, but my whole family and my close friends, those who weren't already in the wedding party, were invited as well.\n\nI had noticed Shavonda had seemed moody lately. It was now mid-March and with the warmer temperatures and increased sunshine, my seasonal depression had waned, but Shavonda's had showed no change. I wondered if the stress was getting to her.\n\nShavonda had insisted on getting me an engagement ring, even though I told her simply having her say yes was good enough for me. She picked out a simple gold band, encrusted with tiny diamonds, that looked good with her rings. I wore it with pride. \n\nThe day came for traffic court. I had to contest the tickets, because they would affect my commercial driver's license. I was prepared with photos of the intersections where I'd allegedly run the stop signs, showing that the signs didn't exist. I knew I had the case won. But something told me to also take the photos I had of the engagement party. I went to the courtroom alone. Shavonda had to pick up the wedding invitations from the printer, but promised to join me when she was able.\n\nTraffic court was held in a courtroom where the spectators' seats were filled with other pending traffic cases. The police officers had their own separate waiting room. I sat in a seat and waited for my case to be called.\n\nWhen it came up, I approached the bench to plead my case, folder in hand. It was then I noticed Officer Shoemacher. I'd hoped he wouldn't have shown up, I would have won the case by default. No matter, I was on solid ground. The magistrate swore us both in, then Shoemacher laid out his case.\n\n\"The defendant was reported to be in Colver way picking up a prostitute. I observed him in a car matching the description down to the license plate, with a black woman in his car. I followed them down Colver way for several blocks, then observed them pull into a secluded parking space between two buildings. When I circled the block and pulled up in the alley behind their car, I got out and observed the defendant kissing the woman with his hand up her dress.\"\n\n\"Prostitute? Are you sure you want to go there?\" I asked the officer.\n\n\"Mr. Waite, you'll get your turn!\" The magistrate seemed pissed. This was not going well.\n\nShoemacher continued, \"I detained the prostitute and took her to the Zone 3 police station. I also wrote Mr. Waite tickets for running 3 stop signs and told him not to let me catch him in that alley again.\"\n\n\"Mr. Waite,\" the magistrate growled, \"Present your defense.\"\n\n\"How dare you call her a prostitute!\" I was seething.\n\n\"Mr. Waite, you will address the court, not the officer.\" I was certainly not making friends with the magistrate.\n\n\"Your, honor,\" I began. \"To start with, the woman involved was not a prostitute. She was my fianc\u00e9.\" I heard the door to the room softly close. My back was to it, so I didn't see who came in. The magistrate looked up to see who entered. Shoemacher looked like he'd seen a ghost. I turned around. Shavonda and Ziggy were standing against the wall next to the door. \"Officer,\" I asked, \"Do you see the alleged prostitute in this room?\"\n\nThe magistrate looked at the Shoemacher, who responded. \"Yes, she is standing against the wall next to the police officer.\"\n\n\"Your honor, may I call witnesses?\" I asked. The magistrate nodded. \"I'd like to call Shavonda Jenkins to the stand.\" Shavonda steeped forward and was sworn in.\n\n\"Ms. Jenkins,\" I started, feeling like Matlock. \"Where were you on the night of February 14, just before midnight?\"\n\n\"I was in your car. We'd just returned home from our engagement party.\"\n\n\"Did you say home?\" The magistrate's eyebrows raised as he looked at her.\n\n\"Yes, home. We were pulled into Jason's parking space, preparing to go into the house. He kissed me. Then the cop showed up, called me a prostitute and cuffed me and threw me in the back of his car.\"\n\n\"And you say that you are engaged?\" The magistrate was really interested now.",
        "\"Yes, your honor. I'd proposed that evening. We still had the cake on the back seat.\" I explained. Shavonda showed the magistrate her ring.\n\n\"Officer, did you see a cake in the backseat?\" The magistrate looked displeased. \n\n\"Well, yes there was a cake....\" Shoemacher stammered. The magistrate dismissed him with a wave of the hand and turned back to us. \n\n\"Can you prove it?\" The magistrate looked sympathetic to us now. Ziggy stepped forward from the back wall and handed me his cell phone. He had pulled up the photo of me on my knees slipping the ring on Shavonda's finger. Shavonda had meanwhile reached in her oversized purse and pulled out a box. As the magistrate looked at the cell phone photo, she opened the box and pulled out one of our wedding invitations. She handed it to the magistrate. He read it and handed it to Shoemacher. \n\n\"Officer, do you mean to tell me that you pulled this woman from her fianc\u00e9's car, while parked on HIS property, and ran her in for prostitution? Do you have a corroborating arrest report?\" The magistrate asked acidly.\n\n\"Well, no,\" Shoemacher replied. \"She was released without being charged. We had no evidence.\"\n\n\"No evidence? Seriously? You harassed this couple despite them showing you an engagement cake, with no evidence?\" The magistrate was openly hostile now. \"I suppose you can at least prove he ran the stop signs.\" Shoemacher stood silent.\n\n\"About those stop signs, your honor.\" I started, laying out my photos on the bench. \"These are the intersections listed on the ticket. As you can see there are no stop signs there. Why would there be? These are residential streets crossing an alley.\"\n\n\"I've heard enough!\" the magistrate growled. \"Case dismissed. Officer, if I ever hear another case like this from you, I am going to have you investigated. This is the laziest excuse for police work I've ever seen.\" He turned to us. \"Mr. Waite, Ms. Jenkins, the court offers our sincere apologies for the mistreatment you have endured. I congratulate you on your engagement, and wish you a long happy life together.\"\n\nWe left the courtroom with Ziggy. \"Look who I ran into here,\" Shavonda smiled. \n\n\"Thanks man,\" I said shaking Ziggy's hand. \"I still need a copy of that photo. You were a lifesaver in there.\"\n\n\"No problem, you'd do the same for me,\" he said.\n\nWe all had pizza for lunch at Villa Reale, one of my favorite downtown spots. Shavonda looked happy. She'd finally, hopefully, squashed the \"prostitution\" event. Ziggy filled me in some more on the incidents from that night, in a low voice so others couldn't hear us. \n\n\"Shoemacher has evidently pulled the same thing he did with Von, over in Zone 5. There were a couple of allegations he tried to reduce charges on known prostitutes in Garfield. They made him transfer over here to save his job. Off the record, there is an undercover officer posing as a prostitute in our zone, attempting to set him up. She looks a lot like you, Von. Evidently he has a thing for black women.\"\n\nShavonda shook her head. \"Didn't he ever try being nice to one of us? That's how Jason got me. Respect will get you everything.\"\n\n\"Evidently, he isn't smart enough to realize that,\" I said sadly.\n\n\"Wait, there's more,\" Ziggy explained. \"We were able to investigate the phone calls reporting a woman resembling Shavonda in that alley. There were 17 of them in all, from December 26 to Valentine's Day. They all came from the same pay phone, the one at the BP station. Voice prints match on all of them. And the store surveillance video shows Rose at the phone on Valentine's Day, at the same time as recorded on the 9-1-1 call. We're going to charge her with 17 counts of making false statements to police, plus another 17 counts of harassment against you, Von.\"\n\nSoon, Ziggy had to go. He had to report back to court to testify in another case. Shavonda kissed him on the cheek. \"Thank you. Not many would have done what you did to defend me. As you saw before, I have never had to sleep with anybody to get where I am. For somebody to suggest otherwise is deeply insulting and humiliating. By the way, Rose's family court case blew up in her face. We're starting to get some relief now.\"\n\nShavonda and I walked back to the parking garage hand in hand. We paid the ransom and retrieved the Cruze.\n\nWe swung by the Carson Street store and said hi to Tamika and Ebony. They were training the new girl we'd hired, Beth, who was white. Other than me, she was the only white employee we had. Beth had come in one day and applied. She was in the Art program at Pitt, and was looking for something that would work around her classes. She was hired with the intention of her working the weekends and one or two days during the week. Her presence would free up one of the other employees to drive the company van between stores. \n\nBusiness was doing well, after a post-holiday slump in early January. We'd started putting photos of individual pieces on the company website, and customers could order them for pickup at either location. Thus, the need for a driver to shuttle stock between the two stores. The driver wasn't needed full time, but having one would mean neither store was shorthanded while the van was on the road.\n\nWe'd both done our income taxes early this year. Going over the books with the accountant was eye opening. Shavonda was a shrewd businesswoman. She'd incorporated each store separately. The original was Shavonda's Creations, LLC; and the other store was Shavonda's Carson Street, LLC. Even the van was under a separate corporation, Shavonda's Transportation, LLC. She'd done this so that the failure of one part wouldn't bring down her whole empire. \n\nTaxes were held in an escrow account for each corporation, and paid out according to the returns filed. Excess was generally left in the accounts as a cushion. But this year, having built up in the original LLC for years, there was about $20K that we could tap for the wedding. I'd also donated my income tax refund to the worthy cause, and now, having beaten the tickets, there was about a $400 deposit I'd had to pay when I requested a hearing that had been refunded to me when I'd won. Financing the big day wasn't going to be a problem.\n\nWe'd arranged for the use of the church for the ceremony itself. The reception would be held nearby in Shavonda's backyard. With two acres of land, she had a backyard big enough to hold the expected crowd. Our friends Darren and Minnie offered to deejay the wedding. We could do karaoke if we wanted as well. The only problem with using Shavonda's house for the reception was its modest size. If it rained there was simply no room for over a hundred people. We would end up purchasing several canopies for the backyard, and renting the necessary chairs and tables to give the guests somewhere to sit. \n\nRose had asked for the kids for Easter. I denied her. For the first time, I had no restrictions on taking them across the state line, and they were going to visit the grand parents who never got to see them. Rose was mad and said, \"So you're going to let that bitch spend Easter with my kids.\" I noticed she didn't use the word nigger this time.\n\n\"This isn't about her. All these years, you've denied me taking them down south to visit my parents. Now you have no say so, think it's time they see where their daddy grew up. I'm willing to grant you other holidays, but this one's mine.\" I was adamant about this. My parents had waited so long to see them. The last time they'd seen the kids was when they travelled to Pittsburgh for Ethan's birth. \"Rose, when are you going to realize this isn't about how YOU feel. Your feelings are why you're in so much trouble now. Sacrifice something for the sake of the kids. They don't deserve to be caught in the middle of all this. And they wouldn't be, if you hadn't shown your ass.\"\n\nThe nice thing about having Rose take the kids every other weekend was that it gave us some time alone as a couple without having to find a babysitter. Not that Althea or Tamika ever minded watching the kids while we had some \"us\" time. The downside was that the kids, Ethan especially, tended to act up after they'd been with Rose for the weekend. \n\nSo, after Rose picked up the kids the weekend before Easter, we found out where Darren and Minnie were deejaying, and headed off for a karaoke night. Shavonda hadn't sang in public in a while. She was far too busy to join the church choir, which she clearly would have loved to do if she had more time. \n\nShavonda wore her usual winter outfit of tight jeans and sleeveless v-neck shirt. On this night, she wore black jeans, and her shirt was a red leopard print. Since we were going out, she wore a pair of red heels. She'd also put on makeup, and even curled the ends of her straight hair under for a different look. She even put the red clip on rose in her hair, just because she felt like it. As usual, she looked stunning. I wore black dress pants, and a red button down shirt with a black tie. My wardrobe, under Shavonda's influence, had undergone quite an upgrade. Before Shavonda, I'd have probably worn jeans and a flannel shirt to the bar. I used to joke about plaid being my favorite color.\n\nWe'd taken the time to book a room at the motel across the street from the karaoke, just so I wouldn't have to drive afterwards. We were free to get sloshed if we wanted.\n\nWe made our entrance into the bar, almost unnoticed. Minnie was the first to see us, and she came up to us and gave us a big hug and a kiss on the cheek. \"So glad you could make it,\" she said. \"We missed you two. God, you two look good.\" She gushed over us. Darren was behind the dj table cueing up a playlist of songs that had been requested. A drunk in a cowboy hat had the mike and was butchering \"Freebird.\"\n\nWe took a table near the dj so we could talk to Darren and Minnie, who alternated behind the dj table while the other one hung out with us. We ordered some cheesesteaks, a basket of fries, and a cold pitcher of Yuengling, and quickly got caught up on things. The deejay business was booming for them. I was glad. They deserved it. Shavonda looked at the songbooks and quickly picked out several songs to sing. As usual, I passed up the chance to make a fool of myself. I know I can't sing. Shavonda has enough voice for both of us.\n\nThe food, when it came, was excellent. The fries were hand cut, always a huge plus in my book. We ate while we waited for Shavonda's turn on the mike.\n\nWhen her turn came up, Darren introduced Shavonda as \"a dear friend with a good set of pipes.\" She quickly got up and took the mike. Her first song was Jill Scott's My Love. Shavonda sang it in a sultry manner, her movements adding to the sheer sensuality of the lyrics. The bar quieted as the patrons watched, entranced as she put on her show. She was singing just for me, oblivious to everybody else in the room. The air was electric. \n\nAfter the song was over, Shavonda grabbed my hand, pulling me out of my seat. \"Thank you,\" she said into the mike as the patrons applauded. \"I'd like you to meet my fianc\u00e9, Jason. He's the inspiration for my performance.\" Embarrassed, I took a bow before kissing her on the lips. She handed the mike back to Minnie and we sat down. \n\nSoon it was Shavonda's turn again. This time she did \"Take Me to the River,\" a song I'd first heard her perform at my parents' place, with my cousins the backing band. Her version here was almost as soulful and sensual as her Jill Scott. I was proud of her, and I remember thinking, this lady should be recorded for posterity.\n\nAs she took her seat, an older drunken man in his mid fourties came over. Staring at Shavonda, he slurred, \"You ain't supposed to be here. We don't like your type here.\"\n\nI immediately arose. \"What type would that be? I really need to know.\"\n\n\"Roger, sit down!\" A woman, evidently his lady, was trying to get him to back off. I can't fight worth a damn, and I hoped she succeeded in intervening. But he was challenging my queen, making her uncomfortable and I wasn't going to stand for it. I was shaking in my boots but I wasn't going to let him see that.\n\nFortunately, Darren saw what was happening and intervened. \"Roger, if you want to harass this lady, you're going to have to go through both of us,\" he said, flanking me. The bartender rushed over along with the bouncer, and together they escorted Roger to the door. Darren grabbed the mike from the lady who'd been singing, who'd stopped in the middle of her song when it looked like there was going to be a fight. \"Is there anybody else here tonight who feels Shavonda shouldn't be here singing for us tonight?\" he asked.\n\n\"Let her sing again,\" somebody yelled from the back of the room. The crowd murmured their approval. Darren handed the mike back to the lady whose song had been interrupted. \"Start her song over,\" he instructed Minnie.\n\nSoon, it was Shavonda's turn at the mike again. \"I'd like to dedicate this next song to the man of my dreams.\" She held out her hand to the crowd showing her engagement ring. \"This man asked me to marry him, y'all.\" The crowd clapped as she wandered over to where I was sitting, singing Macy Gray's Freak Like Me. \n\n\"Baby when you have the time, I wanna tell you what is on my mind. I gotta get it off cause it's so heavy. After what we did the other night I wanna be with you for all my life. And I'm so glad you're a freak like me.\"\n\nShe pulled me from my chair and slow danced with me, still singing. As the song ended, she said to me, still holding the mike. \"Thank you, baby, for giving my life a purpose I thought was gone for good. I love you Jason Waite.\"\n\nWe handed off the mike to the next singer and took our seat. Darren was back behind the equipment, and Minnie was sitting with us. \"Wow, just wow,\" she said, then paused. After a minute just staring at us she said. \"You two really do love each other. It's obvious the way you are together. You're totally comfortable with each other. Sometimes it's scary because it's like you can read each other's minds.\"\n\nWe didn't stay until the bar closed, but wandered back to our room just after midnight. Shavonda was in my arms the minute the door closed. \"Undress your queen,\" she ordered in a sultry voice. I lifted her red leopard print shirt over her head and tossed it to the side. Leaning in to kiss her, I felt her unbuckle my belt, and loosen the button on my pants. She gently lowered the zipper as I unsnapped her black lace bra.\n\nPulling apart, I quickly kicked off my slip-on shoes, and let my pants fall to the floor. Shavonda loosened my tie and unbuttoned my red dress shirt. She pulled the tie over my head as I removed my shirt. During our movements, her bra cups had fallen free of her breasts and hung loosely from her elbows. Even after all this time, I never tired of the sight of my ebony goddess topless, dark nipples pointing, awaiting my attention. I bent to kiss them, taking each into my mouth for a quick pull before pushing her back onto the bed. \n\nShavonda anticipated my next move, as I slid down her body. I paused to loosen the button on her jeans and carefully unzipped them before continuing down to her feet. I undid the straps on her red heels, pulling each shoe from her foot before taking each toe into my mouth. \"Mmmmmm,\" she moaned sensually. \"Nobody else has loved my feet like you do. Play with them, big boy.\" I loved the way her soles, which had healed completely, were lighter than the rest of her body. They were almost as light as I was. I gave them the massage I'd wanted to a month ago, when we were holed up in the jacuzzi room. Then, her injuries had prevented me from touching them, now they were fair game.\n\nI gently kneaded the balls of her feet, while I licked her arches. She squirmed in pleasure. I was happy I was going to spend a lifetime doing this, worshipping at her temple, bringing her pleasure from places nobody else had thought to explore. I loved that she was so responsive to my touch. We didn't always indulge in foot worship, but when we did the results were explosive.\n\n\"Baby boy, you'd better get these pants off before I nut without you,\" Shavonda pleaded. I obliged her by pulling her tight jeans down her legs and over her ankles. Quickly, I returned to gently take her lacy panties between my teeth, and tug them down. She lifted her hips off the bed to help me, her hands on mine as I slid the sides down over her hips. She lay naked on the bed, in the light from the table lamp, dark chocolate with a pink center inviting me to taste the nectar within. She reached over to the table, turning on the cd player with one of our iPods docked there. Neither of us knew whose it was, and it didn't really matter. The music it contained was the same regardless. Tonight, Angie Stone started the evening. \n\n\"Come taste it. She's waiting,\" Shavonda beckoned me between her thighs. She knew what I wanted, she wanted it too, just as bad as I did. I kissed my way up her inner thighs, her hands on the back of my head, guiding me home. Reaching my goal, I gently spread her lips apart and licked her from bottom to top, ending on her clit. She rolled her hips beneath me as I lapped up her love juices. \"Mmmm, Jason, just like that,\" she moaned. I continued my feast, poking my tongue deep inside her toward the source of her honey. Her hands held my head in place as she thrust her hips against my tongue, trying to drive me deeper inside her. I swirled my tongue deep within her, seeking her release. \n\nShavonda's inner walls convulsed around my tongue as the first mini orgasm took her. Her legs had found their way over my shoulders, and her legs and feet were urging me deeper in synch with her hands, which had ahold of my hair. \"Oh, fuck,\" she cried out, \"Oh shit. Don't stop, Jason. Eat my pussy, baby. Eat me till I come.\" I continued my licks, enjoying her wild ride on my face. My nose was buried in the tight curls of her pubic hair, and the scent of her arousal was driving me wild. \n\n\"Uhhh. God. Ohhhh.\" Shavonda arched her crotch into my face, holding me in place with her hands and legs as the big one took ahold of her body. My face was drenched with her juices as her pleasure overtook her. She held me against her pussy as my tongue continued to seek her moisture while her inner walls squeezed my tongue, trying to milk me of juices that I couldn't give her. I kept my tongue inserted in her pussy until she started to relax, and pulled away as her hips collapsed on the bed, spent.\n\n\"Jason, baby,\" I heard her whimper. \"Please come up here and kiss me.\" I slid up her body, taking a lick at her nipples, before placing my lips over hers in a passionate kiss. \"Mmmm, this never gets old,\" Shavonda purred. \"I can't believe that this is going to be mine for the rest of my life.\"\n\n\"It's already yours,\" I said. \"I made the commitment to you a long time ago. The marriage ceremony is for you. As far as I am concerned, we've been married for a while.\" I had worked my way so that my dick head was poised to enter her, awaiting her signal. \n\n\"Jason, you are so sweet.\" Shavonda kissed me again. She thrust up into me, seeking my entrance. I slid easily inside her slick tunnel. She moaned into my mouth as I felt her aftershocks shudder through her body. Slowly, tenderly I thrust my way deeper inside her, with slow deliberate strokes. She responded by meeting my thrusts with her own. We made love slow and easy, neither of us wanting it to end, until we could stand it no longer. I rolled us over so that she was on top.\n\n\"Ride it baby,\" I hissed. \"It's yours.\" Shavonda's hips glided over mine as she ground herself into me with increasing passion. She placed my hands on her hips, where I squeezed and massaged her. Her hands were on my shoulders, bracing herself as she rode me toward her climax. Her breasts bounced invitingly, tantalizingly mere inches from my mouth but her hands pinned me down so that all I could do is watch. ",
        "\"I'm gonna come Jason, I'm gonna come,\" Shavonda panted as she neared her release. Mine was building as well, but she was going to beat me across the finish line. I bucked my hips up into her, crashing violently into her body with every thrust. She arched her back and threw back her head as she went over the edge, with a long drawn out, animalistic groan. \"Ohhhhhhhhhhhhh.\" I continued to fuck her hard, as she quivered around me, then collapsed on top of me, speechless and out of breath. Still, I was not there yet. Shavonda lay limp on top of me, staring glassy eyed into my eyes as I continued to ravage her body. \n\nI could feel her walls pulse around me, seeking my seed as I pounded into her. Finally, my body decided it was time. The old familiar feeling welled up inside me. This one was going to be explosive. I thrust even harder, pushing myself over the edge. My toes curled, every muscle tensed. Then, with unendurable pleasure I could take no more. The dam burst, and I buried myself deep inside her. Flooding her pulsating pussy with my hot seed. Shot after shot erupted deep inside her, as I went limp beneath her. \n\nWe lay there in bliss, twitching and pulsing through the aftershocks, looking deep into each other's eyes. I stared into the eyes that owned me, the ones that I would do anything to make sparkle.\n\nShavonda unexpectedly burst into tears. I held her, sobbing, offering comfort, wondering what I did wrong. \"You didn't do anything wrong,\" she sobbed. \"I don't even know why I am crying.\" That's weird, I thought. Maybe she's under too much stress. She'd been moody lately. Not bitchy, mind you, but just irritable. Then the next minute she'd be giddy with happiness.\n\nI hoped it was stress. Lord knows, the past few months had not been easy. Our whole world had been upended in the past year. Hers, especially. She'd gone from being a single, childless woman to a full-time mother of two, all the while being harassed unmercifully by the kids' biological mom. On top of that, her business had doubled with the opening of the second store. And, thus far she'd held up remarkably well under the pressure.\n\nNot knowing what to say, I rolled her over on her side so she could lay her head and arms on my chest, and let her cry herself to sleep. It hurt me, seeing her this way, but I didn't know what to do other than hold her. \n\nI awoke in the predawn stillness, lying on my side facing her. She was on her side as well, her arms around my neck, her legs had mine trapped between them. When I squeezed her asscheek, she'd hump against my leg in her sleep. This was interesting. I squeezed her cheek a couple more times, just to see what she'd do. She continued to hump my leg, grinding her pussy against my trapped leg, leaving a wet trail on it. I was fully awake now, and horny as hell. \n\nI managed to slip my hand between my leg and her moist slot, working my fingers to her clit. Rubbing her there, I enjoyed the feeling of her, no our, juices lubricating my finger. The stimulation had her grinding against my hand and leg again. She was still sound asleep. I fingered her to an orgasm, she arched into me as she released, but never woke up. I was tempted to roll her on her back and fuck her in her sleep, but decided not to. She'd have probably been okay with it, but I didn't want to take the chance of offending her in her current mental state. Eventually, in the dim light of the dawn, I was able to fall back asleep.\n\nI was awakened a couple of hours later by the sweetest feeling. It started out as a dream. I was in a mountain valley, by a beautiful lake. A beautiful black woman, I never saw her face so I don't know for sure it was Shavonda, was giving me the most incredible blowjob. Her head bobbed up and down in my lap, turned away from me, while I played in her soft curls with my hand. When I opened my eyes, the mountain lake was gone, but Shavonda had taken me deep in her mouth and was throating me. \n\n\"It's not fair,\" she whispered, \"I never did get to taste you last night.\" She resumed sucking my dick, I reached out and fondled a tit as I watched her do her thing. She was so good at it. Even after all this time, she still loved the taste of me. She wasn't sucking me to please me, she was doing it to satisfy her needs. What a way to wake up.\n\nAfter I'd erupted in her mouth, and she'd swallowed every drop, she came up and kissed me. \"That wasn't fair what you did to me in the middle of the night.\" Shavonda said teasingly. \"How you gonna finger a girl then leave her high and dry?\" I'd thought she was asleep, evidently she was awake enough to know what was happening to her, and by who. I ran my fingers through her hair, enjoying its coarse feel. She smelled wonderful, a mixture of perfume and sex that I found intoxicating. Best of all, she was here with me, neither of us caring about anything else but being with each other. \n\nWe showered together, and had a late breakfast before setting out on another adventure. This time, with the help of topographic maps, I was able to locate the monument marking the spot where Pennsylvania, Maryland, and West Virginia came together. We parked the car along a country road, where a high voltage powerline crossed, and followed the catheads back into the forest. After about 1 quarter mile, we cut off into the forest to the left. We soon found the stone marker, and I took photos of Shavonda next to it. \n\nWe made our way back out to 40, and continued east. Soon, holding hands, we crossed into Maryland. At Keyser's Ridge, I turned south on 219 and soon we were at Deep Creek Lake. The highway followed the lake for a few miles, before crossing to the other side. Soon we were in Oakland, where we had dinner at the Fireside Inn. After dinner, it was getting late. Darkness would overtake us before we made it back into Pennsylvania. \n\nThe second night in the motel was a more relaxed one. Shavonda gave me a bubble bath. She really loved to sit in a tub full of bubbles. I had an idea. I left the tub and returned with my camera. We took semi erotic photos of her in the tub, lathered in bubbles. Her exotic dark brown skin contrasted nicely with the bubbles, and the effect was far more powerful than even a full nude would have been. I vowed one of these days, I'd take a photo of her face contorted in the sheer pleasure of an orgasm, just to see if it would be as powerful.\n\nOur bubble baths had a sort of ceremonial ritual to them. First, we'd wash each other, she did my back, we'd switch places then I'd wash hers. Finally, we'd wash each other's fronts, lingering on the erogenous spots. Leaving the tub, we'd dry each other off, then I'd rub her cocoa and shea butter lotion into her skin. We both enjoyed this special time together. It didn't always lead to sex, but when it did the results were explosive. Even when it didn't, it was relaxing. Shavonda would return the favor with a baby oil massage for me, and we'd finish off with her braiding my pony tail.\n\nSunday, we got up early. I had a special day planned. We got on the turnpike and drove east to Breezewood where we had steak and eggs at the Gateway. We then took 70 to Hancock, md, then 68 west. A few miles up the road was the Sideling Hill rest area, just east of the mountain itself. Sideling Hill was not only a civil engineering wonder, the roadway cut almost 400 feet deep into the top of the mountain, it was also a geologic wonder as well. When blasting out a path for the highway, the construction crews uncovered one of the best examples of a syncline in North America. A syncline is a u-shaped depression in the rock strata, and the tightly folded center of the \"u\" formed the top of the mountain. Lower rock layers formed successively broader arcs, with the various layers having slightly different colorations. The result was a spectacular look at the interior of a mountain laid bare. \n\nHaving dropped out of school on a dual Civil Engineering/ Geology major, this was just the sort of place we'd have gone on a field trip. Instead, I'd had to wait until the right companion came along to share the journey with. Shavonda, who'd shown great interest in the rock formations on our previous road trips, was that person. She seemed almost as fascinated as I was, asking me what type of rock the various layers were. One layer in particular caught her eye, it was a deep dark reddish brown, almost brick color. I told her I wasn't sure exactly what it was, but it looked to be some form of iron ore.\n\nWe continued east and wound up in Harpers Ferry where we toured the battlefield. We learned that in the years leading up to the civil war, the fort, which was in Virginia at the time, was seized by abolitionists who held out for a while before being overrun by federal troops who took their fort back. In essence, Harper's Ferry was the prequel to the Civil War.\n\nLeaving, we headed back west, opting to take 68 to Cumberland. We drove through Sideling Hill on the highway, then over endless mountain ridges to get to Cumberland. Once there, we ate dinner at Kline's in the middle of the Narrows, a mountain gorge that cut through a mountain ridge. The mountain itself was a classic textbook example of an anticline, the opposite of Sideling Hill. Here, the rock layers bent up and over the mountain in an arch, with the same rock formation forming the surface of the mountain the whole way across. \n\nThe restaurant itself sat along the creek across from the railroad tracks, with a spectacular view of the cliffs towering far above. Fried chicken was the daily special so we both had that, with mashed potatoes and gravy. It was interesting. I have mentioned how in tune we were becoming. The fact that more often than not, when we went out to eat we ordered the same things was proof. But tonight, things were slightly different. Shavonda had a sudden urge for Ice cream, and ordered a bowl of fudge ripple for desert. -\n\nWe left Cumberland driving into the sunset, over the mountain to Berlin and Somerset, and made our way back to Pittsburgh. We got to my house just in time for Rose to drop off the kids. Since everybody was tired, we opted to spend the night at my house. All of us had clean clothing in both houses, so there was no reason not to stay.\n\nAs we lay in bed, having put the kids to sleep and showered together, Shavonda had turned introspective. We talked about our life together, what our expectations had been, how our reality had differed from that, and what we would change if we could. It turns out, we were both deeply contented. Shavonda said, \"You know, it's weird. First time I heard your voice you made me horny. When I seduced you, I half expected you to run. Instead you've taken on the world for me. You've never disrespected me, or wavered in you love and support of me. It's like God created us for each other.\"\n\nEaster week soon came. I'd arranged to take both Good Friday and the Monday after Easter off. We'd have two whole days at my parents' place. They insisted we stay there the whole time instead of getting a motel for the first night like we had the previous summer. Since Easter Sunday fell on March 31, I knew that the weather would be a big question mark. It would be almost as likely to be cold and snowy as it would to be warm and sunny. I truly hoped the cold and snow would stay away. Even worse was the prospect of freezing rain. That would make the winding mountain roads extremely treacherous, along with the very real possibility of ice bringing the wires down, leaving the farm without power for a couple of days. \n\nBecause of this, we had to pack double the clothing we normally would. We'd need warm clothing in case it was cold, plus summer clothing in case the weather was unseasonably warm. Warm weather would seem even warmer with the leaves just starting to grow on the trees. Even though the farm was much farther south than Pittsburgh, the weather was remarkably similar due to the elevation. The leaves came out on the trees a couple of weeks earlier, but that was offset by some extremely cold temperatures in the winter. The added clothing we'd pack, plus all the kids' clothing and toys would make for a very cramped ride in the Jeep. Driving the Cruze was out of the question. There simply wouldn't be enough room in the trunk for all we had to take.\n\nYou'll notice another subtle distinction here. Our vehicles, while legally registered to each of us, were now interchangeable. It was no longer Shavonda's Cruze or my Jeep Liberty. Both cars were ours together, and we used them interchangeably. For better or worse, we were completely a family now. The marriage was a mere formality. We'd already had the discussions about how to best integrate our possessions.\n\nThe one big dilemma we faced was what to do about my house. It was only slightly larger in total size than Shavonda's, mainly due to being a two story while hers was a single story. The large backyard, which my house didn't have, gave the kids a place to safely run free. That was the basis for our decision to move into Shavonda's house. In reality, we'd already done that, as the only time we used my house was for train night, and as a place to meet Rose when she picked up and dropped off the kids. We didn't want her knowing where Shavonda lived. Not that it mattered, but I still didn't trust her, even though she was not as openly hostile as she had been.\n\nShavonda had gone to the grocery store and bought Ice cream, the same fudge ripple she'd had at Kline's. The kids were ecstatic. We all sat around the kitchen table eating ice cream, having a family moment. They adored her, and the fact that she'd bought ice cream for them only made us love her more. Though I'd never really had a taste for fudge ripple, I enjoyed it, simply because she'd chosen it. \"It was the closest thing I could find to swirl,\" she said with a mischievous smile. I knew exactly what she was talking about, and I'd never forget the way she'd eaten her swirl cone on our first date.\n\nTired as I was after having driven an 18-wheeler 450 miles, we packed the Liberty Thursday night. Afterwards, we had our usual bubble bath once the kids were in bed. Shavonda rebraided my pony tail after I had rubbed her with lotion, I was getting used to having her play in my hair. It felt good to know she cared enough to do that. Earlier, she'd put Brittany's hair in beads. I joked that she should open a hair salon next.\n\n\"I do this because I want to, because I love you and the kids. Doing a stranger's hair just wouldn't be the same. It wouldn't be fun,\" Shavonda told me. \"Besides, that's what mothers do, take care of their childrens' hair. And as for you, Mr. Indian brave, you need to look the part. I find it a huge turn on when you look like your heritage.\"\n\nWe were up at the crack of dawn. We had a long journey ahead of us. Instead of heading the fastest way, via 79 and 19 to 64, I planned on doing a little sightseeing on the way down. We strapped the still sleeping kids in their car seats, and headed south by way of Uniontown, past Deep Creek Lake where we'd been the weekend before. Following 219 south, we stopped at Blackwater Falls for a late breakfast. At the lodge, we took the kids to the overlook at the edge of the canyon, looking down on several hawks riding the thermals above the river far below. It was a scene of serene beauty, and once again I took Shavonda's photo. I never tired of taking her picture, she always looked so good. This time, I took one of her with Ethan on her hip, and Brittany holding her hand. Their backs were turned to me as they peered out into the canyon.\n\nWe backtracked to 219, heading south through Elkins, and over the mountains to Marlinton, and on to White Sulphur Springs. We found a diner there and had a late lunch. The kids had a small hamburger and fries, while I had chicken. Shavonda, in an unusual move, had liver and onions. I didn't even know she liked liver. She just shook her head and said she had a taste for it. She didn't know why.\n\nAfter lunch, we continued south. Three hundred miles of winding mountain roads had taken their course, and everybody but me was suffering from car sickness. I pulled to the side of the road in a wide spot, and hustled everybody out of the car. Luckily, they all made it to the rail. I felt so sad as I watched the three of them heaving their guts out. I had found a roll of paper towels, and helped clean them up. \n\nI had expected this from the kids. They weren't used to long road trips. But Shavonda worried me. We'd gone everywhere together and not once had she ever gotten sick. I hoped it was either a cold or stress.\n\nIt was almost sunset when we finally arrived at the farm. As usual, my parents and Grandma were waiting on the porch for us. Shavonda and the kids looked the worse for wear, and I had to explain that they'd all been carsick. We put the kids to bed in my sister's old room. They were exhausted and didn't put up a fight. I went out to the car to retrieve our bags, and stowed them in my old room, where Shavonda and I would sleep. \n\nWhen I came back downstairs, Shavonda was seated on the living room couch, showing off her ring. She looked tired, not her usual self. My mom had made a dinner for us, but Shavonda was not hungry. Instead she wanted to lay down. I led her upstairs to the room and tucked her in, then returned downstairs. Even if nobody else was, I was hungry. Besides, Mom had made a pot roast, with boiled potatoes in gravy. How could I resist. She knew it was my favorite. We saved some for Shavonda when she felt better. Afterward, we all talked in the living room, where I told them all about what we'd been going through with Rose, and how it had all backfired and we wound up with permanent custody of the kids. \n\n\"I'm so happy for you two,\" Mom said. \"You found a good one. Don't ever let her go.\"\n\nDad chimed in. \"A woman who will love your kids as her own is hard to find. She really loves you all. Even as sick as she was, that was plain to see when she walked into this house.\"\n\nI couldn't argue with them. They were right. That's why she got the ring I chose, because she'd loved us unconditionally.\n\nI excused myself, telling them I'd pulled a 14-hour day at work the day before, plus the long drive down. I was exhausted.\n\n\"Jason,\" Mom said as I left the room. I turned back to her. \"You're almost married now. You don't have to keep the door open this time. We knew you were intimate with her the first time she came here. You two were way too comfortable with each other.\"\n\n\"Thanks, Mom.\" I was smiling. In her mind, we were already husband and wife. My heart was light as I wearily trundled up the stairs. There would be no lovemaking tonight. Instead, I would hold my queen close, wishing her sickness away. \n\nIn the morning, Shavonda seemed better. I found her in the kitchen, helping Mom with breakfast. She'd worn the gold dress I'd gotten her for Christmas, and looked as beautiful as ever. Something about gold on her dark skin brought out the best in both colors. She was happily flipping pancakes, looking like she belonged in the kitchen I'd grown up in.\n\n\"Shavonda, I love what you've done to your hair. It looks good on you,\" Mom complimented her. She'd never seen Shavonda with straightened hair before.\n\n\"Don't get used to it,\" Shavonda replied. \"Next time you see me it will be back in its natural curls. Jason wants me to look just like I did when we met, for the wedding.\"\n\nMom said, \"You have a glow about you that I didn't see last time you were here. Are you sure you're not....?\" She let the question dangle. Shavonda's smile darkened, and she burst into tears.\n\n\"Mom, she can't have children,\" I explained. \"She's sterile.\"\n\n\"I'm so sorry, dear.\" Mom looked embarrassed. \"I didn't mean to upset you.\"\n\nShavonda sat on my lap, sobbing into my chest as I rubbed her back, comforting her. \"That's the one thing she wants more than anything in the world, a baby. And it's the one thing she can't have. Why do you think she dotes on Brittany and Ethan the way she does? Why do you think she's fought Rose for them? They are the only children she'll ever raise,\" I told Mom. She nodded her head. She understood. ",
        "The table was set, and they'd made pancakes and scrambled eggs, with bacon and sausage links for those who wanted them. I doused my pancakes with syrup until they were soggy like a sponge. It was great to be home. \n\nThe kids played in the backyard. Calvin and his family had showed up early, just in time for breakfast. His kids and mine were burning off the sugar from breakfast, running around, doing all the things country kids do. It was all new to Brittany and Ethan, and they were hesitant at first. City kids don't get the freedom that country kids do, there are just too many hazards in the city. Out here in the mountains, snakes pose a far greater hazard than people do, and snakes are easy to avoid if you know the places they prefer.\n\nAfter we'd eaten, Shavonda helped clear the table, but was suddenly taken sick. She ran for the bathroom. I felt bad for her. Maybe she was coming down with a bug. \"I told you, she's pregnant,\" Mom insisted. But I knew better. I wished she were. I'd love to have a little brother or sister for the kids, and Shavonda would be an excellent mother.\n\nI quickly went out to the Jeep and brought back a cardboard mailing tube we'd packed. I handed it to Mom and said, \"This is for you, Open it.\" She pulled the cap off the tube, pulling out the posters inside. She unrolled them. They were a set of our Love Knows No Color posters.\n\n\"These are beautifu!\" Mom exclaimed. \"You can just see the love there. Did you take these?\"\n\n\"Yes.\" I said. Shavonda had come over next to me and I stood with my hand around her waist. \"The one of us was at the New River bridge on the way down here last summer. The one with Ethan was one of the first times Von met him, they were playing in the park. We printed these and Von sells them in her stores. We can have them framed if you want, and you can pick them up at the wedding. But keep these ones as well.\"\n\nLater in the day, Shavonda got the taste for ice cream again, so we asked Mom where the closest grocery store was. \"Well, there's the general store in Paint Bank, but they may not have more than ice cream sandwiches. For a regular grocery store you'd have to go to Covington or Eggleston.\" Both were about 30 miles away. The joys of living in one of the most sparsely populated areas of West Virginia. \n\nWe opted to go to Covington, so I could show Shavonda the paper mill where Dad worked. Finding a store, we quickly acquired two half gallon cartons of fudge ripple, in case anybody else wanted some, and quickly hit the road to get it home before it melted. It was an unseasonably warm day for the end of March, with temperatures in the mid-70s. The trees had just a hint of green to them, a promise of the spring to come.\n\nSpring was always my favorite season for the same reason Easter was my favorite holiday. Both symbolized rebirth, with a promise of things to come. After a long depressing winter, that sort of upbeat holiday was sorely needed. Plus, we could run barefoot again, which was just what we did the whole weekend.\n\nAfter we each had a bowl of ice cream, Shavonda relaxed in the kitchen while I headed upstairs for my camera. On the way back down, Grandma cornered me in the hall. \"Jefferson, why are you marrying that colored girl?\"\n\n\"Grandma, we are not going into this. Better yet, come with me.\" I led her by the hand to the kitchen table where Shavonda was talking to Mom. \"Get everybody in here,\" I said to Mom. \"I'm calling a family meeting.\"\n\nSo far, Calvin and his wife Linda, and Kenny were at the house, with Uncle Walt and Aunt Penny as well as my sister Sally and her husband Bob due any time. The seven of us who were already there gathered round the table. \n\nI started, \"I called this meeting because it has come to my attention that somebody doesn't think I should marry Shavonda.\" I looked at Grandma. \"Is there anybody here who doesn't like her?\" Everybody, including Grandma, shook their head no.\n\n\"Grandma,\" I got directly to the point. \"Why do you think we shouldn't get married? She's smart, beautiful, she can sing her ass off. What's not to love?\"\n\n\"She's colored,\" Grandma replied. \n\n\"If she were white should I marry her?\"\n\n\"You'd be a fool to let her get away,\" Grandma said warily.\n\n\"I'd be a fool to let her get away. Everybody agree?\" They all nodded yes. \"That's why I am marrying her. So she doesn't get away. Lord knows what she sees in me, but she loves me. I love her. Love knows no color.\"\n\n\"Race mixing is wrong,\" Grandma persisted. \n\n\"Grandma,\" I said in exasperation, \"You're a quarter Seneca, the rest Scottish. If race mixing is wrong, your whole life is wrong. I am going to marry Shavonda whether you like it or not. You're lucky she's sterile or we would flood this family with cute brown children. And you'd have to love them, they'd be your grandkids.\"\n\n\"Oh, and by the way, she's not 'that colored girl' either. She has a name. Shavonda. It's a pretty name for a pretty lady. Do you have any idea who she is or what she does for a living?\"\n\nGrandma shook her head no.\n\n\"Von owns two stores and has seven employees. She makes and sells jewelry among other things.\" I pulled the pendant from around my neck, the one that said S Heart J. \"She made this especially for me, to show her love. It took her a month working in her spare time. Baby how many pieces are there?\" I looked at Shavonda. \"14,\" she replied.\n\nI continued, \"There are 14 individual pieces of stone and glass in there, all cut and polished so perfectly you can't tell where the seams are. It looks like one solid piece of tiger's eye but it's not. Each piece had to be cut and fit around the letters.\" I took the pendant off grandma and passed it around the room. \"She does stuff like this all the time. It's who she is. Everything she has she's worked hard for, and gotten it on her own. You need to show her a little respect. Because anywhere she's not welcome I don't want to go. You call her colored again and we will pack and leave, and I'll never set foot in this god forsaken hell hole again. Have you ever thought what would happen if you succeeded in getting me to call off the wedding, if we broke up? We are each a part of each other now. She leaves, she takes my heart with her. I'd be devastated. I'd never be able to love anybody else the way I do her. Would you rather have me miserable the rest of my life, because you didn't approve of the one I chose?\"\n\nI turned to Shavonda, \"Let's get out of here,\" I said icily.\n\nJust then. Sally walked in the room. She saw the look on everybody's faces. \"What did I miss?\" she asked.\n\n\"Jason just gave grandma both barrels,\" Calvin replied. I took Shavonda's hand and led her upstairs to the room, not caring what anybody else said. Once inside, I closed the door and sat on the bed. I ran my hand through my hair, trying to calm down. Shavonda sat next to me, embracing me, rocking me. I loved her soothing touch. \n\n\"We've been fighting Rose over this bullshit, now I gotta deal with my own grandma. Where does it end?\" I asked sadly. I wanted to cry. I couldn't. For some reason, I never can, the tears just won't fall.\n\n\"It doesn't end,\" Shavonda said sadly. \"It's like a game of whack a mole. You get one situation settled and another pop up. I've dealt with this my whole life. For me there is no escape. You don't have to go through this, but you chose to, just to be with me. That means the world to me, you know.\"\n\nThe cd player, with one of our iPod docked, played softly in the background, on shuffle play. Your Gold Dress, by the Dukes of Stratosfear, came on. I looked at Shavonda in her gold dress and started laughing. She acted pissed, but her eyes were laughing too. \"Well I guess I better take this thing off so you can work off your frustration,\" she said, lifting the dress over her head. \"Just hit it hard. I'm already horny so don't worry about me. This one's for you. But you owe me one.\" She undid her bra and slid her panties down her beautiful legs. I quickly pulled my shirt over my head and Shavonda helped me out of my jeans. She lay back in my childhood bed looking at me with smoldering eyes and said, \"Come get your queen.\"\n\nI felt a little strange as I climbed between her legs. When I lived here, I didn't dare bring a girl up to my room. Mom would have freaked. Now she had given us her unspoken blessing, by telling us we could shut the door. Shavonda spread herself for me with one hand, while she guided me into her heavenly tunnel with the other. \"Jason, Take out all your frustration on me. Don't hold back. Give it to me hard, baby.\"\n\nI placed her legs over my shoulders and thrust deep inside her. She was right, she was already aroused, and saturated with her juices. I placed my hands on her hips and drove myself into her, feeling her hips lift off the bed to meet each thrust. Watching those beautiful chocolate drop c cups bounce as I pounded into her. Hearing her moans of delight with each stroke. God I loved this woman. She knew just what I needed, when I needed it. \n\nMy hands left her hips and grabbed her ass as it lifted off the bed. My right thumb found its way into her special spot where cheek met inner thigh. I massaged that spot, hearing her moans of increasing urgency. I knew she couldn't take much touching there when she was aroused, it was aa sure fire way to bring her over the edge. This time was no different. \"Ohhh Goddd. Jason. I'm comingggg.\" I felt her convulse around me as I thrust into her even harder. I was not being gentle. And she was loving every inch of it.\n\nThe room was filled with the sound of our bodies slapping together, the headboard banging off the wall, and the rhythmic squeaking of the bed springs. \"Don't hold back, baby. Don't hold back. Give it to me, baby,\" Shavonda babbled riding her own wave of pleasure. Her eyes bored into me as she rode her orgasm, arching her back into me in a futile effort to take me even deeper inside her. I felt all muscles tighten and my toes curl as I neared my own peak. \n\n\"I want your nut Jason, give it to me,\" Shavonda moaned loudly. My body spasmed as I lost control, emptying my balls into her womb, her inner muscles sucking me dry. Spent. I collapsed on top of her. She moved her legs off my shoulders into a more comfortable position with knees bent on either side of my hips. Her hands held me in place within her, squeezing my ass. \"Don't pull out just yet. Let me enjoy you inside me for a little while,\" she purred. \"Boy, you know how to put it on a girl.\"\n\nWe lay there, listening to our heartbeats slow as I softened and fell out of her canal. I looked into her eyes again and saw nothing but love. I rolled us on our sides and we lay face to face. \"Jason,\" she said, \"Your family loves you. Don't deny them your company just because you mad at Grandma.\" She was right as usual. I did feel better though. I felt more relaxed. \"Just remember, you owe me. I want you to lick my chocolate tootsie pop until I scream, tonight,\" Shavonda \n\nWe leisurely put our clothes back on and made our way back downstairs, holding hands. \"I got him calmed down,\" Shavonda said sweetly to the family sitting on the back porch. \n\n\"So we heard,\" said Dad. Everybody looked at us funny, a look that said 'I don't believe they just did that.' Sally had a smirk on her face, like she was trying not to laugh.\n\n\"Just remember, you got to lick her chocolate tootsie pop until she screams,\" Kenny grinned. Sally lost it, convulsing in laughter as I turned beet red. \"Next time, close the window.\"\n\n\"What?\" Shavonda protested. \"It's Easter weekend. So he got his chocolate bunny a day early.\" Sally and Kenny howled with laughter. I wanted to crawl under a bush and die of embarrassment.\n\n\"I'm surprised that old bed didn't come apart,\" Sally laughed. \"I guess you two showed grandma a thing or two about race mixing.\"\n\n\"Long live the swirl,\" Shavonda said without a hint of embarrassment. She had put her bare feet in my lap and I automatically rubbed her arches. \n\n\"Where is Grandma, anyway?\" I asked. \n\n\"Oh, she's out on the front porch. It got too noisy for her back here,\" said Mom. \"Don't worry, she'll get over it. Old habits die hard.\"\n\n\"Fifty years ago, you would have gotten arrested for doing what you're about to do,\" Dad said. \"Mixed marriages were against the law.\"\n\n\"Well, they've had 50 years to get used to it then,\" I said. \"I have no problem with racial purity. If that's your thing go for it. I'm not going to stop you. But we believe in love, and love knows no color. God brought us together for a reason.\"\n\n\"You get no argument from any of us here,\" Kenny said. \"We all think it's great you two lovebirds are tying the knot.\" \n\n\"We call it jumping the broom,\" Shavonda replied. \"And for the record, everything Jason said earlier I agree with. Especially when he said I had his heart. He has mine too. This man hold me when I feel down. He rub my feet when I'm tired. He let me cry on his shoulder when I need to. Whatever I ask, he do. And he ask nothing in return but that I love him.\"\n\n\"As far as grandma is concerned, she is still invited to the wedding. All of y'all are,\" I said sincerely. \"We have my old house where y'all can stay so you don't need a motel. If we have to we can make room at Shavonda's house too. We hope you'll come up a day or two early. Shavonda's Mom and Dad are holding a cookout so everybody can get acquainted before the wedding. They can't wait to meet y'all. You'll like them. They're some of the nicest people I know.\"\n\nI continued, \"And what I said about this being a godforsaken hellhole, I didn't really mean that. It's just that while this place will always be home to me, I am no longer of this world, and Von never was. We're used to a completely different way of life.\"\n\nLater in the evening, Mom sat in the kitchen with Shavonda and me. We were discussing how we got the kids, and the stress Shavonda was under. I told her about the break in at Shavonda's store, and how we kept the kids when Rose was arrested. About the trumped-up child abuse charges, due to Rose trying to use and unfortunate accident in day care to try and get the kids back. About the phony phone calls to police reporting Shavonda roaming the alley behind my house picking up tricks. And how that ultimately led to her being detained and almost raped by a crooked cop. About how Rose had accused Shavonda of being a prostitute in order to try and permanently take the kids away from me. And how Shavonda had finally snapped and put Rose in the hospital. \"You can't tell anybody what we've told you, Mom,\" I stressed. \"Von's not a criminal. The stress we were under was unbearable. People will judge her without knowing the whole story. Rose wouldn't stop coming after us. Now, at least for the time being, she's leaving us alone.\"\n\n\"What does Rose's mother say about all this?\" Mom asked.\n\n\"Barbara was not happy about the beat down, but she's a friend of the family now, and she'll be at the wedding,\" I said. \"Althea, that's Von's mom, insisted we invite Barbara over for Thanksgiving dinner so she could see the kids. They've been close friends ever since.\"\n\nWe helped Mom hide Easter eggs all over the house in preparation for the egg hunt in the morning. Mom would hide more eggs outside in the morning before the kids got up. She didn't want animals eating them overnight. There were coyotes and black bears living in the area.\n\nAs the evening wore on, after we put the kids to bed, we brought the cd player and iPod down to the back porch, and sat there listening to music with Kenny and Calvin. We kept the iPod on shuffle play, letting it kick out songs at random. My cousins listened with an ear for songs they could learn how to play on banjo and guitar. There were surprisingly many of them. Tomorrow, at the Easter gathering, we would try to play them, with me on upright bass, and Shavonda doing most of the vocals. This would become a tradition every time we got together: an impromptu jam session, with them showing Shavonda new songs they'd learned. \n\nThey knew of Shavonda's love of R&B and soul, and made efforts to listen and appreciate the music themselves. I was impressed that they cared enough to broaden their musical horizons in order to impress her. Now if only I could get them interested in Porcupine tree. \n\nWe talked late into the night, listening to the music playing softly, and the spring peepers singing in the background from the pond. Eventually, Kenny said, \"We better let you go. You still have to lick that chocolate tootsie pop.\"\n\nAnd so, after midnight, we went upstairs. And yes, I licked the chocolate tootsie pop, while Shavonda feasted on Scottish sausage. \"Just to keep me from screaming too loud,\" Shavonda said. \"Hard to scream with your mouth full.\" We ate each other to orgasm, enjoying the taste of each other's juices. And, we were so tired after the long day we fell asleep with our heads nestled in each other's crotch. It was an odd position to sleep in. \n\nIn the morning, we made love again in the foggy dawn light, before heading downstairs to await the kids. They soon bounded down the stairs looking for \"what the bunny brung them.\" Once again, Shavonda cooked breakfast. This time she did it on her own. Mom had stayed up half the night baking a ham and getting the rest of Easter dinner together. Shavonda wanted her to rest. My queen was so thoughtful. \n\nAt the egg hunt, Ethan was getting mad as the other kids found all the eggs. Dad distracted him by stuffing an egg up his shirt sleeve and impressing Ethan with his bulging \"muscle.\" He had Ethan look up his shirt sleeve to see the \"muscle.\" Ethan saw the bright purple and said, \"That's not a muscle that's a egg.\"\n\n\"Well, then,\" replied Dad, \"I guess you found one.\" Ethan proudly ran off to show everybody his egg.\n\nFor Easter dinner, there was a honey glazed ham, candied yams, and assorted greens and vegetables. Knowing that I wasn't keen on ham, Mom served Shavonda and me the leftover pot roast and potatoes from Good Friday. As usual, they were delicious. Shavonda insisted on fudge ripple for desert.\n\nAfter dinner, we broke out the musical instruments, and played most of the afternoon. Shavonda sang her ass off. Even Grandma was out on the porch to listen. And by some miracle, I did manage to get them to play Porcupine Tree's Last Chance to Evacuate Planet Earth Before It Is Recycled. I think the banjo in the recorded version of the song had something to do with it. They only played the first half of the song, where it was a simple love song, and not the much darker second half. \n\nAfter dark, we all pulled up chairs around the fire pit in the back yard. We sat around the fire, talking and listening to the peepers. Somebody brought a bag of marshmallows and we toasted them over the fire. God I missed the country life. \n\nWe wound up packing everything that night, so all we had to do was load the Jeep in the morning. I found an old blanket in the closet, and after everybody else had gone to bed we laid the blanket on the grass and made love in front of the fire in the cool night air. Shavonda's body never looked better to me than it did in the firelight, with the flames reflecting off the sweat of our exertion, and the light flickering on the shadows of her dark skin. Even her eyes seemed to have a glow to them in the firelight. \n\n\"That was fun, being by the firelight. How come we never did that before?\" my queen inquired.\n\n\"I wanted to take you camping last summer, but there were too many festivals. We never had the time. I promise you, after the wedding we'll take a weekend and go sleep under the stars,\" I said, looking forward to having her experience nature with me.\n\nWe put our clothes back on and quietly walked back to our room. Curling up into each other, we got a few hours of sleep before morning. \n\nMom cooked us another good breakfast, before we had to hit the road. The kids were practically bouncing off the walls from all the sugar they'd ingested the past couple of days, and the pancakes with maple syrup mom had made for them didn't help matters. It was going to be a long trip. Just before we pulled off, She handed Shavonda an envelope. \"Jason loves these. Since you're going to be taking care of my baby, I thought you should have them. Shavonda opened the envelope. Inside were cards with recipes of my favorite cookies and other foods i'd loved from my childhood. The first card was the recipe for Grandma's shortbread cookies, a recipe that had come all the way from Scotland. It was in its way, a small ceremonial changing of the guard. Mom had never given Rose any recipes. That she gave them to Shavonda told us everything we needed to know. Shavonda was more than a part of my family now. Mom had handed over responsibility for my well being to her, a fact that was not lost on my queen. She thanked Mom with tears in her eyes.",
        "Arriving home just before sunset, Shavonda found a small white box stuffed in her mailbox. It had a return address for a company called JstLikeUs. I grinned, I knew what it was.\n\n\"I wonder what this could be,\" Shavonda mused. \"I didn't order anything. And I've never heard of this company.\" She opened the box. Inside was a wedding cake topper, with black bride and white groom. Just like us. \"Jason, did you?\" She saw my grin and knew. \"Where did you find this?\"\n\n\"I was browsing the web and I came across this place. They specialize in decorations for non-traditional couples. You can order these in any race or gender combination you want. Notice, the bride has hair just like yours was when we met.\"\n\n\"I love you, Jason,\" she said. \"That was sweet.\" She kissed me deeply. All was finally right with the world.\n\nTo be continued... "
    ],
    "authorname": "bwwm4me",
    "tags": [
        "bwwm",
        "bw/wm",
        "black woman",
        "bfwm",
        "white man",
        "home",
        "interracial romance"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/love-knows-no-color-pt-10"
}