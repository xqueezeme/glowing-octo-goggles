{
    "title": "What a Shortstop Does Ch. 06-10",
    "pages": [
        "Dear Reader, Welcome back! This is part 2 of my story and you'll be thoroughly lost without part 1, so please go read it if you haven't. Thank you for all of the kind words, your feedback is what encouraged me to post this part so soon. Enjoy!\n\nxo Kate\n\n_\n\n \n\nChapter 6: Halloween\n\n\"Well, we could go as ketchup and mustard? I'll wear red, you can wear yellow?\"\n\n\"I am not dressing as a condiment, Sarah,\" Ro rolled her eyes.\n\nOctober had brought a full rehearsal schedule for Roisin and more schoolwork for Sarah. This meant they hadn't spent much time together in a couple of weeks. Finally, a few days before the thirty-first, they had a chance to hang out. Roisin had invited Sarah to a Halloween party and while a costume party made Sarah a little nervous, Ro brought up the idea to dress up as something together.\n\nThat's how Sarah and Ro ended up on the floor with a few web pages open on their laptops trying to decide on their Halloween costumes. So far they'd rejected several suggestions from websites as too complicated or too uncomfortable.\n\n\"Right, look there's lots of ideas online, I just don't want to spend that much on a costume.\"\n\n\"We can wear clothes we already have?\" Ro suggested.\n\nSarah looked doubtfully, \"Like...?\"\n\n\"Oh I don't know! Come on, I'm taking us to the Halloween store they opened up in the abandoned Kmart. We'll find something cheap and use what clothes we have.\" Ro grabbed her keys in a huff and slid into some shoes.\n\nSarah smiled at her, \"Fine. But if we're going that way, you're taking me to Taco Bell!\" She jumped up off the floor and bounded toward Ro.\n\n\"No! No way. Stop, Sarah!\" Ro squealed and tried to run, but Sarah got to her first and scooped her up in a fireman's carry. She stepped into her shoes and marched out the door with a wiggling Ro over her shoulder.\n\n\"Why, umf, why are you carrying me from the building?! Ow!\"\n\n\"I didn't want to give you a chance to say no, I know how much you hate Taco Bell.\" Sarah adjusted her grip on Ro and laughed as the other woman gave up the struggle.\n\n\"I'm still the one driving, Sar, I could just speed right on by the horrible place.\"\n\n\"But you won't,\" she laughed, \"You don't like me when I'm hangry.\"\n\nShe set Ro down at her car and chuckled at the way her disheveled curls covered her face. Ro brushed her hair out of the way and playfully punched Sarah's shoulder.\n\n\"You are a child.\"\n\n\"If I'm such a child, it's probably a crime to date me.\"\n\nRo rolled her eyes again, \"Get in the car, goofball, before I change my mind and take someone else to this party!\"\n\nThey ran through a few more ideas in the store until Ro found a small accessories section where a gold witch's hat caught her eye. She found a matching gold wand and waved it at Sarah.\n\n\"Witches!\" she laughed. \"I'll be the good witch and you can be the bad witch.\"\n\nSarah snorted and reached for a powder blue witch hat on the next rung down, \"No deal. I'm going to be the good witch. You're the bad influence anyway.\"\n\nRo composed her face in mock seriousness, \"This is very true. Virgin blue, how appropriate.\" A piece of a plastic spider web whizzed by her head and she lost her fake composure as she ducked. Sarah was reaching for another piece of web to throw when Ro dodged out of the aisle, giggling. They continued their antics until a large crowd of fraternity boys entered the store and set off all the dancing skeletons at the front. Not wanting to listen to \"Monster Mash\" screaming from nine cheap plastic sound boxes, they made their purchases, each buying a pointy witch hat and matching wand, and left.\n\nOn Halloween, Carly and Sarah got ready in their dorm. David was taking Carly to an engineering school party and they were dressing as molecules. The white sweats dotted with blue paint looked comfy and cute on Carly's tiny frame. Because her costume was so simple, she begged to help Sarah do proper hair and make-up.\n\n\"Your hair looks so nice in curls, Sar. Why don't you do it more?\"\n\n\"I don't know, it's so much work,\" Sarah groaned, \"If it didn't make me look like a boy, I'd chop it shorter than yours.\" Carly giggled as she curled the last long strand of dirty blonde mane and brushed it out with her fingers. She'd applied a blue smokey eye and some pretty pink lipstick to Sarah's face and Sarah had to admit it looked good. She rarely wore make-up, but this made her hazel eyes pop and her teeth look whiter.\n\n\"Okay, done! David's going to pick me up in a minute. Do you want to walk down together?\" Carly pulled her hoodie up over her head and tied the string in a dorky, but cute bow.\n\nSarah nodded and grabbed her hat and wand. She had opted for a blue button down and tan slacks with pink ballet flats that she'd had from her youngest cousin's baptism. It was comfortable but dressy. Carly complimented the final look as she tied her tennis shoes.\n\nWaiting in the lobby, Carly saw David drive up and bounced out the door after a quick hug to Sarah. \"Be fucking responsible!\" she screamed as she hopped off the last step and disappeared into David's car. Sarah chuckled at her best friend, but it was cut short as another car door opened in the lot.\n\nRo stepped out under a streetlight wearing her version of the bad witch costume. It was a black dress that clung to her figure and ended in a little frill out right below her ass. Sarah was sure if she bent over, the other side of the lot would get a great view. It held onto her shoulders with one inch straps that seemed to lead the eye down her neckline. Ro sauntered up to the stairs in high black heels and her long, pale legs hypnotized Sarah. It wasn't until she was about three feet away that Sarah yanked her gaze back up to Ro's face and found a gold wand pointed at her nose.\n\n\"Well, I was going to cast a spell on you, but it looks like I didn't need my wand.\" Her tone was dripping in seduction and Sarah choked a bit.\n\n\"You- uh, you look amazing, Ro,\" her eyes wandered over the exposed cleavage and collarbones.\n\nRoisin finally cracked and smiled, delighted. \"Thank you, Sarah! You look great too. Love the button down.\" Her fingers reached out to graze over a few soft curls. \"Come on my little virgin witch, let's go!\"\n\n\"GOOD witch!\" Sarah emphasized.\n\nRo looked back over her shoulder and grinned, \"Same thing.\" She laughed.\n\nThe party they attended was thrown by some of Kate and Roisin's theater friends in a swanky off campus complex. Ro introduced her to a few people who were already drunk and laughing loudly. They mixed some drinks in the kitchen, whoever was hosting this party clearly loved Halloween and sprang for the good booze. There were bowls of candy on almost every surface, though not many people were eating it. Sarah got the impression most of the dancers didn't indulge in chocolate.\n\nThe night was full of good music and the drinks were plentiful enough to get them just past buzzed. Feeling the alcohol in her system, Sarah was relaxing with Tara on the couch. She'd come with Kate of course and as the only other person Sarah knew, she was happy to sit and drink with her. They were talking about the upcoming Thanksgiving scrimmage for softball while a few people were doing some organized dances to pop music, including Roisin and Kate. She and Tara smiled and raised their cups to the dancers, but stayed firmly on the couch. Suddenly, a woman dressed as Medusa slid down next to Sarah and leaned over to push her chest onto Sarah's shoulder.\n\n\"I don't believe we've met, I'm Celia.\" Her smirk and outstretched hand distracted Sarah from the distinctive smolder in her eyes. It took Sarah a full four seconds before she took the offered hand, a little clumsily.\n\n\"Uh, hi.\"\n\n\"You have beautiful eyes. I'd like to see more of you.\" Sarah jumped as the woman crawled her hand toward Sarah's shirt buttons.\n\n\"Um, thank you. Do you want to sit here? I can move, if I'm in your-\"\n\nThe woman laughed and dumped herself into Sarah's lap. Her hands wrapped up to cup her jaw as Sarah panicked, trying not to shove the woman, but to extricate herself quickly. Tara was no help, doubled over laughing at the utter shock on Sarah's face. At that moment, a throat cleared in front of them. Roisin was standing with her hands on her hips, glaring at the odd wrestling match.\n\nSarah whispered desperately, \"Help me!\" And Roisin took the hint.\n\n\"Oh Celia, I see you met my date. How sweet of you to make sure she's having a good time.\" The Celia woman glared, but rose slowly off Sarah who was grateful to be able to stand. She sighed with relief as Ro took her hand and pulled her away, out to the balcony. Several people were smoking weed in deck chairs, but didn't pay them any attention.\n\n\"Thank you for saving me. She was so-\"\n\n\"I'm not seeing anyone else,\" Ro declared shortly. Her black curls swung under her gold hat as she spun around on Sarah.\n\n\"Um, okay. Me neither.\"\n\n\"I don't want to see anyone else.\"\n\n\"Me neither?\"\n\n\"Oh,\" Ro seemed to calm down a bit. \"I didn't know how to have this conversation and didn't imagine having it here, but, well, I want to be exclusive.\"\n\n\"I mean, I already thought we were?\"\n\nRo \"oh'ed\" again. \"Right, okay. Good.\"\n\nFeeling bold and drunk, Sarah pulled her in for a kiss. \"You're hot when you're jealous.\" Ro rolled her eyes.\n\n\"Didn't mean to be jealous, just, Celia's a flirt and she drives me nuts on her good days. Seeing her sitting on you, well, it made me...\" She trailed off as Sarah caught her bottom lip in a little tug with her teeth.\n\n\"Have I mentioned how much I like this dress?\" Sarah's hands cupped under Ro's ass where the dress fabric bunched a little. Ro moaned.\n\n\"Get a rooooom!\" A shout came from the other side of the balcony door and they pulled apart to see Tara smiling like an idiot in her Snoopy costume. Sarah sobered up fast, turning bright red and jumping away from Ro. Roisin just flipped her middle finger and gave Sarah a \"can you believe her\" look before leading her back to the party. She let herself be led into the room, but kept her distance from Ro and stopped drinking. The physical side of her and Ro's relationship was probably as well known to Tara and Kate as it was to David and Carly, but Sarah didn't like the idea of the rest of the party goers seeing her affections. She'd much prefer to keep that private.\n\n_ _\n\nBy mid-November, Sarah and Ro considered themselves a little past the \"hanging out\" phase, though they had yet to leave campus for an actual date. Sarah was apprehensive about telling anyone she was dating a woman, especially her family.\n\nSarah's parents were coming to campus soon as the softball team held their annual scrimmage fundraiser with a neighboring college. This year the weather cooperated and while it was chilly, there was no snow on the ground. Her parents would come to watch the scrimmage on Tuesday afternoon then take her home for the holiday. Ro planned to be there with Kate to watch the game.\n\nSarah agonized over how to introduce her to her parents. Saying, 'my friend Roisin' felt a little too much like a lie, but what else would she say?\n\n\"What do I call you?\" She blurted out at their Sunday movie night, two days before the charity game.\n\nRo paused the show. \"What do you mean?\"\n\n\"Like, when I introduce you to my family, when I tell them about you. What do I call you?\"\n\n\"Oh, right. Well, what do you want to tell them? Like, are you 'out' yet or whatever?\"\n\n\"Technically, no. I don't think they'd really care? I mean, my mom might be a little blindsided, but we've never really talked about my love life either way, so I don't know how she'd react.\" Sarah shrugged her shoulders and leaned further back into the couch.\n\n\"My parents still think it's a phase,\" Roisin said quietly.\n\n\"Oh. When did you come out? Or, like, how?\"\n\n\"With my first girlfriend, senior year. I wanted to take her to prom and not have it be like, 'oh cute, friends going to prom together'. So I sat my parents down and told them I like girls. It was so awkward. Dad just nodded, got up, and walked away. Mom listened a bit more, asked questions like, how did I know. Then the next morning gave me a book that was all about getting through this phase of homosexuality.\"\n\n\"That's- That sucks.\"\n\n\"Yeah, we sorta haven't talked about it since. I think mom thought the book worked when my girlfriend and I broke up over the summer, but then I came back after freshman year of college with a new girlfriend and she seemed angry. I think every time I break up with a woman, she hopes I'll suddenly want a guy. We don't talk about it, but I know how she is.\"\n\n\"I'm sorry.\"\n\n\"Yeah, funny right? They are totally supportive of a daughter who wants to be an arts major and become a dancer for a living, but not so much that she's into women.\"\n\n\"Yeah, that's a bit ironic.\"\n\n\"Anyway, what do you want to tell them? It's okay to just say we're friends, or to not introduce me at all. It's not like we've put a label on this.\"\n\n\"Do you want to label it?\" Sarah asked quietly.\n\n\"Do you?\" Roisin's eyebrows shot up.\n\n\"I- I'm not sure.\" Sarah paused and tried to think about what she wanted. \"Can I take you on an actual date? Like, when we get back from Thanksgiving break?\"\n\nRoisin's cheeks flushed with color. Sarah loved to see how emotions changed her pale skin so dramatically. \"Yes, yeah, I'd like that.\"\n\nChapter 7: Thanksgiving\n\nThe snow held off for the scrimmage. Carly got the winning run in the last inning after their team was down most of the game. They presented a big novelty check to the American Heart Association and both teams smiled for tons of photos. Roisin was there to watch. She sat with Kate, the women bundled up in a big checkered blanket and cute hats. Sarah had tried not to look their way from the infield, but when she was in the dugout, she made silly faces at them occasionally. Playing again felt great, even in the cold. Her muscles fell into the familiar rhythm of tensing when a batter was up and relaxing as they switched. The batting hadn't been her best show, but she'd made it on base a couple of times. She couldn't wait for the spring season, their team was going to be good.\n\nFamily and friends waited outside the dugout as the teams gathered their stuff and said their goodbyes. Sarah saw her parents chatting with Carly's mom and brother a little ways off. But before she could gear up for going over there, Tara stepped up to her side and announced, \"Incoming!\"\n\nRoisin and Kate bumped into view, still trying to keep the checkered blanket around both of their shoulders and laughing as they tripped.\n\n\"Great game, babe!\" Kate dropped the blanket and wrapped her arms around Tara to pull her in for a kiss. Roisin greeted Sarah a little more platonically.\n\n\"Nice, short stopping!\" She giggled.\n\n\"Thanks,\" Sarah laughed as Roisin and Kate seemed to sway a bit. She noticed thermoses in both of their hands. \"Whatcha got there?\"\n\n\"Hot toddies!\" Kate dragged out the \"s\" in toddies and burst into giggles.\n\n\"Ah, I see.\"\n\n\"Okay, I'm taking you both home, then you're making me one of those,\" Tara laughed and slung her bag over her back. \"Have a great break, Sarah!\"\n\n\"Thanks, you too!\" Sarah turned to Roisin. Ultimately, they'd decided not to introduce her to Sarah's parents just now, but Sarah still felt a little guilty when it came to the moment. \"You're heading back home tomorrow?\"\n\n\"Yup! I'm hanging with Tara and Kate for a bit, then going to pack. I'll call you on my drive tomorrow?\"\n\n\"Yeah, sounds great.\" In lieu of a hug, Ro knocked into Sarah's shoulder and smiled.\n\n\"Bye!\"\n\nCarly dropped her bag by Sarah's feet as she was watching Ro leave.\n\n\"Ya good?\"\n\n\"Very.\"\n\n\"Great, let's go say hi to the parents,\" she gestured for Sarah to follow.\n\n_ _\n\n\"Who were those girls you were talking to after the game?\" Sarah's mother started in on the casual topic about fifteen minutes after they'd picked up stuff from her dorm and got on the road home.\n\n\"Oh, that was Tara's girlfriend and her friend.\"\n\n\"They're seniors?\"\n\n\"Kate is, that's Tara's girlfriend. But Ro's a junior. They're in the dance program.\"\n\n\"Row?\"\n\n\"Yeah, Roisin. It's Irish I guess.\"\n\nThe conversation lulled and Sarah tried to think of something else, anything else. Was she talking at a normal volume? Was this how she'd speak about just any friend? What was her mother thinking, did she notice something?\n\n\"Did you catch the highlight reel last week? This Thanksgiving we've got the W in the bag!\" Sarah was grateful her dad started in on the football talk. That meant her mom would quietly listen while they chatted over their team's chances and Sarah could keep the conversation far away from women she may or may not be dating.\n\n_ _\n\nSarah's cousins began arriving early the next morning for pre-Thanksgiving festivities. As a single-child family with two parents who were doctors, Sarah's family had the largest house with the most guest rooms. Her mother loved having family gatherings, so they usually started early Wednesday morning and went nonstop until Saturday night. A packed house was her favorite thing. Which was good because she had a lot of nieces and nephews.\n\nSarah's aunts and mother had been close in age. Four sisters growing up in a two bedroom house also meant they were close to each other emotionally. They'd all married and began having kids within a couple years of each other, meaning Sarah had 3 cousins almost exactly her age.\n\nSo that's how Sarah found herself smushed onto her bean bag chair with one cousin while the other two sprawled on her bed. They'd closed the door to keep the younger kids out for now and started up some video games to entertain themselves.\n\n\"How's school, Sarah? Had any illegal drunken ragers so far this year?\" Ryan was her oldest cousin, by a measly two months, but that meant he was freshly twenty-one and legally allowed to drink at this family gathering. A fact which he'd already brought up three times.\n\n\"Ryan, you're an ass.\"\n\n\"Come on! We all know that's why you chose Western. Biggest party school in the state!\"\n\n\"Actually, it was the softball scholarship more than the 'ragers', but whatever.\"\n\nNoel, her favorite of the bunch, squished into her on the bean bag chair, \"I did a keg stand last weekend for the first time,\" she giggled a little at their slightly shocked faces. Noel was in her first year of nursing school. She was the sweetest, friendliest, most intelligent person Sarah knew. Nursing would be her life and her patients were going to be the luckiest in the world when Noel finished her program.\n\n\"I cannot picture you in a keg stand.\"\n\n\"Well, it wasn't very long and I had help staying up, but I did it!\"\n\n\"Good for you, Noel! Time you started letting loose. Speaking of which...\" Hailey, the youngest and wildest of the older cousins, slipped a bottle of white wine out of her backpack on the bed. \"I swiped this from downstairs. Time to start this family weekend off right!\"\n\n\"Shh!\" They all laughed while quieting their little bad influence.\n\n\"Why the hell did you sneak white wine?\" Ryan chuckled.\n\n\"Because there's like 16 bottles of it, no one will notice.\"\n\n\"Okay, well did you grab a corkscrew?\"\n\n\"Uh...no.\"\n\nThey erupted in laughter again.\n\n\"Hailey, how were you planning on opening it?\"\n\n\"I didn't think that far ahead, you're the fucking experts!\"\n\nSarah laughed again, \"Wait, there's definitely a video online about how to do this.\" She paused the video game and yanked out her phone. They spent the next half hour deciphering various online methods of opening wine without a corkscrew. Eventually the cork ended up in pieces inside the bottle and they took turns passing it around while playing video games.",
        "Around noon, Sarah's phone rang. She caught the little picture of Roisin's face, a surprised expression with her mouth scrunched up in an exaggerated 'o'. She'd taken Sarah's phone and took a couple funny selfies when Sarah had gone to the bathroom during a recent movie night. This photo was Sarah's favorite.\n\n\"I gotta take this!\" Sarah paused the game, grabbed her phone, and hopped off the bean bag as she answered. \"Hey!\"\n\n\"Never let me drink with those two again.\" Roisin's voice sounded hoarse and agitated.\n\n\"Oh no,\" Sarah giggled as she slipped out of her room, \"what happened?\"\n\n\"Well it started as hot toddies, but somewhere in the middle Bailey's was introduced. Then it was fireball hot chocolate and I think I passed out right after the vodkachino was invented.\"\n\n\"What the hell is a vodkachino?\"\n\n\"Fuck if I know?! They tried to kill me, Sar. They really did.\"\n\nSarah smiled at Roisin's dramatics. She wandered down the hall and out the back patio door. It was chilly, but quiet. The rest of the house was bursting with aunts, uncles, and screaming cousins. \"Are you just getting on the road?\"\n\n\"Yeah, I had to tell my mom I was finishing a last minute project. I don't think she believed me, but hopefully one of my brothers will cover for me. How's your house?\"\n\n\"Loud.\"\n\nRoisin's chuckle was muffled by her car's engine. \"Sounds fun. How many cousins do you have again?\"\n\nThey chatted for an hour while Roisin drove. Sarah told her about their wine sneaking, her favorite video games, and the plot to keep Aunt Laura from attempting to make, and subsequently ruin, the sweet potatoes. Roisin said she had an aunt like that too.\n\n\"So, when we get back, where are we going on our date?\"\n\n\"Hm...\" Sarah thought, \"I've got a few places in mind. What nights do you have off?\"\n\n\"Only Monday next week. Nutcracker rehearsals start Tuesday,\" she spit the title \"Nutcracker\" like it was a dirty word.\n\n\"Why do you say it like that? I thought you liked ballet?\"\n\n\"Yes, but we do the Nutcracker every year! It's our biggest money maker for the program. I guess it loses some of the magic the third time around.\"\n\n\"Well, I'd still like to come see it.\"\n\n\"Yeah?\"\n\n\"Definitely.\"\n\n\"Okay, good,\" she could hear Roisin's smile, \"I'll reserve you a ticket then.\"\n\n\"Sounds great-\"\n\n\"Sarieeeee, we're ready for lunch come insiiiiide!\" Hailey's slightly tipsy frame stuck through the patio door to call her in.\n\n\"Okay, I'll be right there. Stop acting so drunk, dummy!\" She shooed the other girl inside. \"I've gotta go. I hope the rest of your drive goes quickly!\"\n\n\"Thanks, Sarieeee! It won't be much longer.\" Roisin's voice mocked her through the phone.\n\n\"You are NOT allowed to call me that!\" Sarah whined.\n\nRoisin's laughter rolled, \"Okay, okay, but it's cute. I'll text you later?\"\n\n\"Yup, bye!\"\n\n\"Bye Sarie!\"\n\nSarah hung up, rolling her eyes.\n\nChapter 8: A Hunch Confirmed\n\nFriday evening found Sarah and her cousins in her room again sprawled over every surface. Thursday had been hectic, fun, and full of food and football. Friday morning, the dads had attempted to organize backyard football with all the kids, which meant hyper-competitive family time along with chasing screaming children around the yard for hours. The older cousins had offered to make the store run that afternoon to escape the rest of the chaos. At the store, Ryan purchased two bottles of liquor and some sodas which they snuck up to Sarah's room in one of her softball bags.\n\n\"Ugh, I never want to see turkey again!\" moaned Hailey.\n\n\"I never want to see Aunt Laura's sweet potatoes again!\" cried Noel. The plot to pass off the sweet potato duties had failed spectacularly as Aunt Laura had started them before anyone else got up Thursday morning.\n\n\"I stopped eating those potatoes years ago. I just keep them on my plate while I go get seconds, then I dump them when no one's looking. Give me another drink,\" Sarah held out her cup as Ryan poured her more rum.\n\n\"Are you guys drinking?!\" Sarah's door burst open with the force of her ten year old cousin, Dominic, who had clearly been listening and snooping. \"Oooo, I'm telling!\"\n\nHailey leapt up and grabbed her brother by the shoulders, shutting the door behind him and pushing him against it. \"What do you want you little spaz!\"\n\n\"Hey, hey, you might wanna be nicer to me.\"\n\nRyan rolled his eyes, \"Dude, come on, be cool.\" It was unclear if Dominic actually looked up to Ryan enough for his influence to do anything, so Sarah decided to step in.\n\n\"I'll give you ten bucks to keep your mouth shut,\" Sarah pulled out her wallet, \"If you tell, I'm taking my ten back and giving you a swirly. If you tell Aunt Laura about the sweet potatoes, I'll give you two swirlies.\"\n\nDominic's eyes grew wide, \"Okay.\"\n\n\"Now beat it!\" Hailey cawed. He smirked as he took the cash and bolted out the door.\n\n\"Good thinking, Sarie. Ugh, what a twerp.\" Hailey flopped back onto the bed.\n\nSarah's phone buzzed.\n\nR: My brothers have invented a new Thanksgiving leftover sandwich. It's called the 'Dead Donald Duck'. \n\nSarah snorted, Roisin's brothers sounded hilarious.\n\nS: Why Donald Duck?\n\nR: Something about not being able to wear pants while eating it.\n\nS: Ew.\n\nR: Yah.\n\n\"Who ya texting, Sarieeee?\"\n\n\"My friend.\" Sarah didn't look up from the screen.\n\n\"You mean your BOYfriend!\"\n\n\"Shut up, Hailey.\"\n\n\"What's his naaame? Got any photos? Come on, details, Sarie!\"\n\n\"I don't have a boyfriend, Hailey.\" Sarah looked up from her phone to attempt solid eye contact. The rum made her wobble, it was a good she was sitting on the floor.\n\n\"Yes, you do. No one makes that face when they're just texting friends. Sarie's got a maaaaan!\"\n\n\"She doesn't have a 'maaaan',\" Ryan mocked. He slid drunkenly into Hailey who was now sitting on the edge of the bed, tense.\n\n\"Bullshit, she's absolutely dating someone. Probably fucking him in the dugout,\" she grumbled getting up off the bed in a huff, tipping slightly on her feet.\n\nRyan snickered, \"I highly doubt that.\"\n\nNoel shoved him over so she could have more room on the other side of the bed.\n\n\"She is! She's got a boyfriend she's hiding!\" Hailey was almost screeching.\n\n\"Sarah doesn't have a boyfriend. Sarah's gay.\"\n\nThere was a loud smack as Noel slapped her hand over Ryan's mouth. Sarah's head snapped up and Hailey whipped around.\n\nThe room froze for a solid five seconds. Then Hailey's actual screech broke the tension.\n\n\"What?!\" Hailey looked between Sarah and the Ryan/Noel combo on the bed. \"Sarah is that true?\"\n\nShe felt her face going beet red, the heat in the ends of her ears told her they were probably red too. \"How did you know?\" she asked quietly, barely daring a look at the two on the bed.\n\nNoel breathed, letting her hand fall off Ryan's mouth. \"We didn't know, but we guessed.\"\n\n\"I'm sorry, Sarah. It was just a hunch we've had,\" Ryan shrugged, \"I didn't mean to say it out loud. We figured you'd tell us when you were ready.\"\n\nHailey still hovered in the middle of the room, unsure what to do or say.\n\n\"Yeah, well, it seems everybody knew before me...I just realized it this summer. So it's still pretty new.\"\n\n\"Have you...have you told your parents?\" he asked gently.\n\nSarah shook her head.\n\n\"Are you going to?\"\n\n\"Not right now,\" she sighed. \"I'm still figuring out what I want them to know. And yeah, Hailey, I'm talking to someone. But there's absolutely no fucking in the dugout.\"\n\n\"Damn.\" There was a chorus of nervous laughter.\n\n\"Is she from your softball team?\" Ryan asked carefully.\n\n\"No, she's a dancer.\"\n\n\"Holy hell, Sar.\"\n\n\"Shut up! Don't be gross!\" She threw a pillow at Ryan. He smiled at her and Hailey sat down to lean against the desk, curling her legs to her chest. The room seemed to relax a bit. Noel suggested Mario Kart drinking relays and Sarah was eager for the change in conversation.\n\nS: Well...my cousins know now, some of them do anyway. \n\nAbout 3 minutes later, Roisin responded.\n\nR: You told them? I didn't think you were that drunk. \n\nS: No, they kinda knew already I guess. And me texting with you just confirmed it apparently. \n\nR: Oh. Are you...okay? Like, okay with them knowing?\n\nS: Yeah. I am. \n\nR: Well, good then. Congratulations on opening the closet door. Even if just a crack ;)\n\nSarah smiled. Maybe it wasn't her style to announce it in some solemn, dramatic gesture. Maybe she just needed to do it so gradually that eventually she was just...out.\n\nChapter 9: Interruptions\n\nThanksgiving ended in tight hugs and knowing nods among the older cousins and more than a few painkillers to combat the secret hangovers. Sarah was sad to see them go, but knew that if they kept tradition, Easter would be a riot this year.\n\nShe had other things to think about Saturday evening after the house was empty and she was put on dish duty. Her deal with her parents when she started school was that if she kept her grade point average up for 3 semesters, she could bring her car back to campus. Since it was almost the end of the semester, she thought she could negotiate a bit. She laid out the arguments for letting her bring her car to campus now, with 3 weeks left of the semester, her most persuasive being that her parents wouldn't have to waste a whole day to come get her. When classes ended she could just drive herself home for winter break. They didn't need to know that the actual reason was she wanted to take Ro out for a real date and not be the one bumming a ride this time.\n\nLuckily, her parents bought it and agreed that her grades were good enough that she could have her car a little early. Sarah thanked all those late study sessions for her high grades as she packed her gear and some groceries into her car for Sunday's drive back to school. After packing, the rest of the night was relaxed and quiet compared to the chaos of the previous few days. They watched a Christmas movie and played cards like they always did when Sarah was little.\n\nThen Sunday was here and Sarah hugged her parents with a promise to drive safely and text them as soon as she made it back. She felt freedom as she climbed in and took off down the street toward the freeway. Her music played and the traffic was better than she'd expected. When she finally parked outside her dorm, she texted her parents as promised and texted Carly a picture of her car on campus.\n\nC: Sweeeeet! Now we can go places without David! We're leaving this afternoon, probably see you right before dinnertime. \n\nSarah hauled her things up to her room and stashed her duffle under her bed. She had a little work to do that she'd put off over the break so she plopped down at her desk to knock it out. The early afternoon light shone across the lawn outside her dorm as more students dotted the campus sidewalks, filtering back from their short break. It was windy and cold, but still not snowing yet. Sarah had remembered to bring her good winter boots back with her because she knew it was only a matter of days before it would.\n\nAbout two hours into working on the mind-numbing paper, her phone rang.\n\n\"Hey! Did you make it back to campus yet?\" Ro's voice was a welcome distraction.\n\n\"Hi! Yeah, I did. I'm just getting some homework done. Are you back?\"\n\n\"Yup, I've got rehearsal tonight at the studio,\" Roisin paused before asking, \"Are you in your room?\"\n\n\"Yes, want to come say hi before rehearsal?\"\n\n\"Would love to, see you in ten?\"\n\n\"Okay!\" Sarah shut her books, picked up the grocery bags she'd tossed on the floor, and ran to brush her teeth.\n\nExactly eleven minutes later, there was a knock on her door.\n\nRoisin stood there with her dance bag, looking sheepishly as Sarah opened the door with a wide smile. \"Hey.\"\n\n\"Is your roommate here?\" was her only greeting.\n\n\"N- no?\"\n\n\"Good.\" Ro crashed into Sarah with her whole body, dropping the bag and letting the door swing closed behind them. Sarah's arms automatically wrapped around Ro's waist as their lips fought hungrily for each other.\n\n\"Missed. you. too.\" Sarah chuckled between kisses. They quickly ducked onto Sarah's bed with Ro pinning her down and running eager hands up her sides, over her chest, and behind her head. Sarah's hands stayed firmly on Ro's waist, massaging the exposed skin as she pushed her shirt up over her hips. Ro moaned quietly as her hands ran lower to grip Sarah's ass.\n\n\"I thought about you a lot. Watching you play on Tuesday was...hot.\"\n\n\"Yeah?\"\n\n\"Yes, I think I could be a huge softball fan, if you're on the field.\" Ro's smile pressed against Sarah's lips. Sarah blushed a bit in spite of herself.\n\n\"How was the rest of your weekend?\" She asked after their initial greeting cooled down and Ro had slid to the side, still wrapping an arm and leg around Sarah.\n\n\"It was good. My brothers continued to torment me, but it's out of love. We played some trivia last night and I won,\" she paused, debating whether or not to continue, \"My mom tried to set me up with the new media director of her church this morning.\"\n\n\"Oh?\"\n\n\"Apparently he's single, handsome, and very good at designing the weekly bulletin.\"\n\n\"I mean, what else do you need for true love, right?\"\n\nRoisin chuckled. \"Exactly. I told her I doubted his bulletin design was good enough to turn me straight.\"\n\n\"You said that to your mom?!\"\n\n\"Yeah.\" Ro sighed. \"It started a fight.\" Her brow furrowed and she rolled to look up at the bed above.\n\n\"I'm sorry,\" Sarah said quietly.\n\n\"Thanks, it's nothing that hasn't happened before. She's constantly telling me about her friends' sons or new guys at church, hell, once she even tried to give my number to the clerk at the bank.\"\n\n\"Yikes.\"\n\n\"Mmhmm. That's my mother.\"\n\n\"Do you think she'll ever come around?\"\n\nRo shrugged, \"Maybe? I don't know. She seems to think it will just take the right guy to convince me to give in. I don't know how to explain it to her that like, the hottest most successful millionaire is not going to get me to suddenly turn straight.\"\n\n\"I don't know, I could make a lot of changes for a millionaire,\" Sarah teased.\n\nGiggling, Ro turned back to her, \"Oh yeah? Well, I guess I'll have to up my game if that's my competition.\"\n\n\"Guess you will.\"\n\nThe mischievous smile that spread across Ro's face made Sarah's heart skip a beat. She could hear the wheels turning in some crazy plan Ro was forming.\n\n\"How about you help me change into my dance clothes?\" Her head tilted and her eyebrows rose suggestively.\n\n\"Fuck.\"\n\n\"Is that a yes?\"\n\nSarah jumped up to lock the door before turning back to watch Roisin sprawl on the bed, \"That's a hell yes.\"\n\nThis time she was the one to press Ro into the bed. Their kissing devolved into rapid, hard, breathless motion. Both of their shirts were off as fast as Sarah could grab at the hems, yanking Ro's up so quickly she bumped her wrist on the top bunk. Her's came off more smoothly and she was leaning over Ro again before the fabric hit the floor. She straddled Ro while the other woman leaned up to her, trying to grind her hips into any friction she could find. Sarah sank a thigh between her legs causing Ro to moan.\n\nAfter a few minutes of grinding and kissing, Ro pulled back to gauge Sarah's reaction as she slid a finger under Sarah's bra. This was a step further than they'd gone before, but Sarah nodded her consent. Ro smiled and reached around to unhook the bra, carefully pulling it down off her shoulders, slowly, almost teasingly.\n\n\"Wow,\" Ro breathed. A smile was all Sarah could manage as she sat on her, topless for the first time. Sarah had smaller breasts, but the muscles underneath were evident with every move. Her nipples were dark and pointed in arousal.\n\nIt took everything in Sarah not to cover herself at the undivided attention of those intense eyes. Instead she asked, \"You too?\"\n\nRo nodded. Sarah's hands wound their way around her back and found the clasp. It was easier taking off her own bra. This angle felt all wrong, but she figured it out quickly and the white, lacy bra fell slack over Ro's frame. She pulled it forward by hooking a finger on the center and Ro adjusted her shoulders as she let her arms slip through the straps. Sarah sighed as the other woman settled back onto her pillow. Ro's breasts were perfectly round and her nipples were small and pink. Delicately, she brushed a few fingers over one. Ro shivered.\n\n\"You're beautiful.\" Leaning over Ro, she felt their chests connect as they kissed once more. Her lips parted in a moan as she felt the other woman's body respond to the naked contact. Ro's arms wrapped around Sarah's back, forcing her closer. Her lips wandered away and found Sarah's neck, throat, clavicle, shoulder, chest, then nipple. Sarah groaned and arched her back into it. Ro's mouth was hot and wet against her breast as she began to suck the nipple into her lips.\n\n\"Fuuuck,\" was all Sarah could manage as she grabbed for the ladder slats at the headboard of her bed to support herself over Ro.\n\nMouth and hands massaged her chest as Sarah leaned into the contact and tried to remember to breathe. She'd never been touched like this. This was new and amazing and overwhelming. Ro knew just when to suck, when to massage, and how to graze her teeth so delicately over each nipple that Sarah was sure she was going to explode. Her body started grinding down harder on Ro's thigh, demanding pressure and friction over her most sensitive areas. The wetness between her legs was seeping, probably right through to Ro's pants, but she didn't care. She couldn't pull away even if she did want to. Her body was begging for this in the way she ground on Roisin.\n\nRo's grip shifted off Sarah's tit and she slowed her sucking. Her eyes flicked up to her face, \"Do you- do you want more?\"\n\n\"I want to touch you.\"\n\n\"Then touch me.\" Roisin grabbed Sarah's hands and shoved them firmly onto her breasts. Sarah dove forward to copy the pleasure Ro had been giving her. She filled her palms with soft, round flesh and parted her left fingers around the perfect, pink nipple. Her lips came down to cover it in one fluid motion. \"Yes!\" Ro cried.\n\nEncouraged, Sarah massaged and sucked, hardly daring to believe she was eliciting those gorgeous sounds from Roisin's throat. She pressed her leg into the heated space between Ro's legs and was rewarded with a beautiful groan. Ro pressed into her muscled thigh and arched her back to force a fuller grip of her tits in Sarah's hands.\n\n\"Fuck, Sarah, I want you. I want to- to-\"\n\nBut she stopped writhing, cocking her head. Then Sarah heard it too. The jiggle of a doorknob.\n\n\"Sarah? Are you in there? Ugh, she must be out. Here, help me find my key.\" Carly's voice was muffled but unmistakable through the door.\n\n\"Shit! Shit shit shit. Get dressed!\" Sarah hissed.\n\nBoth women launched themselves off the bed and clamored for their shirts. Ro got into hers a second faster and wiped her face and neck with her hands. She sank straight into Sarah's desk chair, looking too rigid to appear casual. Sarah pulled her shirt on and stashed both their bras under her blanket. Then she moved to open the door, pausing to give wide eyes to Ro.\n\n\"Oh, hey Carly, David. Didn't hear you out here. Welcome back!\" She was proud that her voice only sounded slightly breathless.\n\nCarly was elbow deep in her backpack searching for keys while David was practically buried behind armfulls of laundry and bags. \"Ugh, thank you! I swear, I can never find my keys-\" Carly froze as she saw the stiff woman sitting in Sarah's chair at the opposite end of the room. \"Uh, hi Ro?\" She shot Sarah a panicked smile, \"We didn't know you were here.\"",
        "\"Oh, yeah, well, I stopped to say hi before rehearsal. Speaking of which, I've gotta run, Sar.\" She rose from the chair. \"I'll see you tomorrow?\"\n\n\"Ye- yes! And I'll pick you up, I have my car on campus now.\"\n\n\"Great!\" Ro gave Sarah a peck on the cheek and scooped up her dance bag on the way out, waving at David and Carly.\n\nAs soon as she was out of earshot, Carly descended on Sarah.\n\n\"Fuck! Why didn't you warn me?! Or put like, a sock on the door or something? We could have gone to David's for a while.\"\n\n\"Is that something people actually do?\"\n\nCarly said, \"Yes.\" While David answered, \"No.\"\n\n\"It's fine, we were just...hanging out. She really does have rehearsal tonight.\"\n\n\"'Hanging out' is that what the kids are calling it these days?\"\n\n\"Shut up, David.\"\n\nThey all laughed.\n\n\"Okay, but we should really come up with a system. Come on, I've got, like, five more bags in the car. Help unload and I'll share my snacks!\"\n\nSarah laughed and slipped on some shoes to follow Carly down.\n\nChapter 10: A Real Date\n\nMonday night Sarah ducked out of the locker room as soon as practice ended and booked it to her room to shower and change. She chose dark jeans, a plain white t-shirt, and her favorite leather jacket. David once called it her Indiana Jones look, but maybe Ro would be into that. She brushed her hair and pulled it into a low ponytail. Mascara and lip gloss were all she could manage on her own, but she didn't want a full face of makeup when she usually went natural anyway. Pulling on a pair of short, brown boots and snatching her wallet and keys off the dresser, she slipped out of her dorm. She remembered to leave the door unlocked for Carly as she was going to the cafeteria with the rest of the team and still hadn't learned to carry her keys.\n\nShe parked outside of Ro's apartment building and bounded the flight of stairs up to the second floor apartment where Ro and her roommate lived. Her knock was cut short by the door opening easily.\n\n\"Hi,\" Ro breathed as she pulled the door inward and smiled. She was beautiful. Her natural spiral curls were tied back in a short braid that fell over one shoulder. The dress she had on was off-white with a cotton, flowy feel that dropped to mid thigh. Boots that came up over the tops of her knees met the few inches of flesh showing below the dress. She had a green velvet jacket thrown over the whole outfit, making her eyes pop with the color.\n\n\"Hey,\" Sarah responded a bit late, realizing she'd been staring. \"Ready?\"\n\n\"Yes.\" Ro threaded their fingers together and stepped out the doorway with Sarah. There was a moment of tightness in Sarah's chest as she went to open the car door for Ro. She hoped the other woman didn't find it cheesy. Ro just smiled and thanked her quietly.\n\n\"So, where are we going?\" Ro asked as Sarah put the car in drive.\n\n\"Um, well, it's called The Round Up.\"\n\n\"Wait, really?\"\n\n\"Yeah, so, they um...they have line dancing lessons on weeknights and like, good food. I thought maybe we could deal with the country music for a dance?\"\n\n\"Sarah, that sounds great. Are you going to dance with me?\"\n\n\"If you'll let me,\" Sarah slid her gaze sideways and gave Ro a crooked smile.\n\n\"Of course!\"\n\nThey sat in the restaurant for dinner. It was quiet in the dining area for the most part, but they could hear chatter and glasses clinking in the room where the bar and dancefloor were held. They talked as they ate. Ro explained the latest Nutcracker casting drama where a dancer who'd been a contender for the Sugarplum Fairy got handed a flower chorus role due to some rude comments about one of the instructors. Sarah assumed it was like when Coach made them run laps around the diamond when they got mouthy and Ro agreed it was probably similar. Their food was good and the waitress kind enough to pop back in only when needed. Sarah paid and they made their way to the bar room.\n\nSarah, still underage, got two black x's on her hands before being allowed in.\n\n\"Ugh, can't wait to be 21. These stupid marks always stay for days.\"\n\n\"When is your birthday?\" Ro asked, taking one of her hands.\n\n\"January. So close. I'm going to go nuts. Get into every place around campus that wouldn't let me in before. Then get thrown out of a few, hopefully.\" She flashed a toothy grin at Ro.\n\nThe other woman laughed, \"Okay, sounds like fun. I'll nurse you back to health when you kill your liver then.\"\n\nSarah gave her an odd smile. She liked the idea of Ro talking about things they'd do months from now.\n\n\"Alright folks! Gather up. We're starting the first lesson here. Beginners, up front!\" The short woman with the red cowboy boots and a hat to match marched around the floor pulling guys from the bar and shooing couples out ahead of her. Ro slipped her jacket off and draped it over a chair near the dancefloor. The way her shoulders shimmied bare was downright sexy. Sarah found herself picturing her in her bed as Sarah slipped her bra off her.\n\n\"Come on, Sarah! Get to the front with me.\" Ro giggled, noticing her distracted gaze.\n\nWhat followed was one of the best and strangest activities Sarah had ever participated in. The red cowboy boots led the way through the steps to the first dance. Simple, she said, perfect for beginners. Well, Sarah wasn't sure, but there had to be a step below beginner, right? Of course Ro picked it up easily. She laughed while she danced and laughed with Sarah when she went the wrong way and bumped into her. The small crowd on the dancefloor was kind and there seemed to be more than one beginner among them. The ones who knew what they were doing spaced themselves around the perimeter and pointed out the correct directions as they moved between each wall. The music was fast and pushed them through the repetitive steps. Sarah had it, mostly, by the end of the second time through the song.\n\n\"Okay, we're going to learn one more tonight! A partner dance, so pair up!\" The instructor again pulled people to the floor, stood them by each other and shoved them into place. She approached Sarah and Ro, pointing at a guy in all black and black cowboy boots to their left. \"Rodney can dance with you, hun.\" She gestured to Ro.\n\n\"Oh, thanks, no, I have my partner.\" She wrapped an arm around Sarah's waist, tightly. Sarah felt her ears turn red.\n\n\"Got it,\" the woman, to her credit, only widened her eyes incrementally before turning to the rest of the floor. \"All right, get in a circle! Come on, Charlene, you know what a circle is, right?\" The group laughed good-naturedly.\n\n\"Here we go! Gentlemen, uh,\" her eyes flickered to Ro and Sarah, \"Well, whoever's leading, left foot first!\" Thankfully, Ro took the lead for the dance and directed Sarah where to go, when to turn, and kept her from bumping into the other couples. This dance was significantly harder, but more fun since Sarah got to hold Ro.\n\nWhen the lessons were done, the music kicked up into a wider variety of country songs. Sarah and Ro got some water at the bar and sat at a table near the floor to watch the regulars dance to songs they knew. As the second one began, Ro watched intently for a minute, then leaned to Sarah, \"I think I can do this one.\"\n\n\"What?\"\n\n\"Do you mind?\" Ro's eyes sparkled.\n\n\"Of course not, I'll sit here enjoying the view!\"\n\n\"Thanks!\" Ro gave her a quick kiss on the cheek, then bounded to the dancefloor. True to her word, she could do the dance after just watching it those few seconds. Then another song played and Ro watched the dancer in front of her, picking up the steps, the turns, the stomps easily. She smiled at Sarah and laughed as the dance picked up speed and she missed a step.\n\nRo danced through several songs, always watching a dancer near her do the steps once or twice then jumping in easily. Sarah couldn't even keep track of the different ways to turn from her chair, it amazed her as Ro picked it up as easily as walking. Her dress swirled as she turned and Sarah's heart caught every time she saw more thigh or how Ro's arms wound gracefully and free under the white spaghetti straps. Eventually, she collapsed into Sarah's lap and stole the rest of her water.\n\n\"This was great! Sorry for ditching you for a bit there.\"\n\n\"I'm glad you're having fun. I like watching you. You're good, I mean, I expected you would be.\"\n\n\"Thanks,\" she leaned in to plant a kiss on Sarah's lips. \"It's a nice change of pace from ballet right now. I didn't think line dancing could be like this. How did you even know about this place?\"\n\n\"Carly dragged me here last year for the lessons. We were both terrible, but the people were so nice we had a good time.\"\n\n\"It was a really good date idea.\"\n\n\"Not bad for my first real one, right?\"\n\n\"This is your first date?\" Ro's eyes went wide and she choked on the water she was chugging.\n\n\"Yeah, well, like, date date.\" Sarah turned pink. \"I went to winter formal with a date, but that doesn't really count because there was no dinner and it was in the high school gym. I don't think it can count as a date if you've also sweated through gym classes in the same room.\"\n\n\"No, it probably doesn't,\" Ro said quietly. She was looking rather intensely into Sarah's eyes. \"Want to take me home?\"\n\n\"Yes, if you're ready,\" Sarah picked up Ro's coat for her and slid it over her shoulders. They clasped hands and waved at the instructor on their way out as Sarah slipped some cash into the tip jar that sat by her instruction books.\n\n\"Have a good night, girls. Thanks for comin' out.\"\n\nRo snickered at the unintended double meaning until Sarah dragged her out the door.\n\nAs Sarah parked to drop Ro off at her apartment, Ro leaned over to kiss her. Her lips tasted like salt and a hint of the minty chapstick she used.\n\n\"I had a great time with you tonight. Thank you for letting me be your first date.\"\n\n\"You're welcome. Thanks for saying yes.\" A hand reached up to trace along Sarah's jaw and wound into her hair. Ro pulled her face to her's, hungrily. Tongue slipped into tongue and their hands found firmer grips on one another.\n\n\"My roommate's inside,\" Ro eventually said as they came up for air.\n\n\"That's okay. We can- we should call it a night.\"\n\n\"Right,\" there was no disappointment in Ro's voice, but she seemed to be searching Sarah's face, waiting for something. Finally, she spoke again, \"Do you want to be my girlfriend? Like, officially?\"\n\n\"Yes.\" Sarah's answer was firm and didn't betray the way her heart soared.\n\n\"Good.\" Ro dipped back in to place a solid kiss on the middle of Sarah's mouth.\n\n\"Good,\" Sarah said quietly.\n\n\"I'll call you tomorrow when I get a break in rehearsal.\"\n\n\"Okay, have a great night.\"\n\nRo cocked her head as she reached for the car door handle, \"I just did.\" And she leaned in to give Sarah one more insistent kiss before slipping out the door. Sarah watched her walk to her apartment, conscious of the fact that she should have walked her to her door, but glad she didn't have to stand just yet as she was sure her legs were made of some kind of jelly at the moment.\n\nShe had a girlfriend.\n\n_\n\n \n"
    ],
    "authorname": "CreatingKate",
    "tags": [
        "college",
        "dance",
        "lesbian",
        "lesbian romance",
        "lesbian sex",
        "love story",
        "softball"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/what-a-shortstop-does-ch-06-10"
}