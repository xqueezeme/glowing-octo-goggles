{
    "title": "Senior Year Memories Ch. 33",
    "pages": [
        "(Usual Disclaimer Time: Even though this story almost entirely takes place in a high school setting, all the characters in this story are 18 years old or older, and since we're living in the wide wonderful world of porno-land here, where clich\u00e9s roam free and things might get a little unrealistic from time to time, please remember it's all in good fun. This story is highly serialized, and though it's not 100% necessary to have read the whole story up until this point to enjoy the content of the chapter, it's definitely advisable to understand the ongoing plots.)\n\n(Author's Note: So, it's been a while for a long-needed break and hiatus, but Senior Year Memories is back! After some soul-searching and review, I am working on this story once again, looking to make it leaner and more direct than it had gotten in the last handful of chapters, and back to something that's much more manageable on a regular basis. We'll see how well I hold to that, but, thank you for your patience, and I'm looking forward to sharing some of the adventures to come! As always, I want to give special thanks to fellow Literotica author Lil_kitty for her excellent work as my editor and acting as a second set of eyes on this chapter, and for letting me know what did and didn't work; if you get a chance, please check out her work and drop some stars if you enjoyed, she writes some very hot and fun stories.)\n\nPreviously, on Senior Year Memories: At the beginning of January, 18-year-old Ryan Collins made a promise to the skater he was tutoring, Jess Garza, that if she improved her grades by the end of the month, he'd have sex with her. After she made good on her end of the bargain, she took Ryan to her van to fuck, only for them to be interrupted by the school safety officer. Running off in the middle of the day, they took shelter at the apartment of Jess' weed dealer, Lana Granger, to get high and have some inventive three-way sex to celebrate. Getting home, Ryan discovered two surprises. The first, was a tray of cookies left behind by the mother of his archnemesis, Kyle Bowman. The second, was cute, meek and nerdy art student, Jennifer Cage, asking to become Ryan's sexual apprentice.\n\n***\n\nIt was the last night of January, and there I was, sitting in the kitchen of my home at a table opposite Jennifer Cage, still completely fucked into exhaustion and reasonably stoned as we ate cookies and milk. That the cookies had been provided by the mother of my longtime bully, Kyle Bowman, was another problem for another time, because I still needed to sort out the Jennifer situation.\n\nNow, if I'm being honest, if I'd thought at the beginning of this school year that I'd end it with a girlfriend, I likely would have imagined a girl like Jennifer. We were both nerds, both similarly invisible at school, and both leaning toward the average end on appearances. Even with the long-sleeved shirts and paint-splattered overalls, her hair up in a ponytail and face largely hidden behind a fairly large pair of glasses, I could definitely tell that she was leaning toward the cute side, with smooth, pale skin and big, expressive brown eyes. Her guarded smile, when she chose to show it, was actually rather bright and lovely.\n\n\"So... you want to be my 'apprentice',\" I said, the words still sounding alien to me. I was trying to process her request, which would have been odd under normal circumstances, but was outlandish in my currently high state.\n\n\"Yes, that was, uh, my general intention,\" Jennifer replied.\n\n\"Sorry, I've had a long day and I'm pretty wasted. You're gonna have to clarify your definition of 'apprentice' for me.\" With sitting up being a true challenge, I was feeling dull and direct.\n\nHer eyes darted to me, then away from me, clearly in discomfort over having to spell things out for me.\n\n\"Look, I know you barely know me and I barely know you and this is a lot to put on you all at once, and... and I'm bad at this, not doing a good job, I'm being stupid...\" Jennifer said, her words as fast and nervous as I was slow and sluggish. All I could do was gesture for her to continue.\n\nJennifer gulped, pulling herself together and explaining, \"Well... I want to have sex.\"\n\n\"I got that,\" I replied.\n\n\"A lot,\" she said.\n\n\"Okay... and that hasn't happened?\" I asked.\n\n\"No,\" she replied.\n\n\"Why not?\" I asked.\n\n\"Because it's not that easy,\" Jennifer said.\n\nI looked Jennifer up and down, and though I couldn't see much with the way she was dressed, the cuteness potential I saw seemed really at odds with this fact. With that in mind, I took a stab at what seemed the most likely explanation.\n\n\"It's a confidence thing?\" I asked.\n\nShe nodded. \"Yeah... I know what I want... I have a pretty good, you know, sex drive, and I really want to have sex. Whenever I'm at school, all I'm thinking about is how everyone else seems to be having sex but me, and I'm tired of it, but I don't want to rush into it either. I don't just want to go out there and have sex with random people like I'm whoring myself just so I can say I've done it; I want to be in a place where I can *choose*. That's the hard part. If I could learn from you, get some tips on how you became as 'popular' as you are, I think I could really start having the year I want,\" Jennifer explained.\n\n\"And it's a year full of sex?\" I asked.\n\n\"Yes... I mean yes, but not *just* sex. I want that, but I also want attention, and friends... a little popularity never hurts either... Basically, I want the experience you've had. I want to be seen! I want to surprise Regan Hills High School, like you did, and I want to do it before I miss my chance,\" Jennifer said, smiling nervously.\n\nI thought about what she said, and it was a lot to take under consideration. I'd tutored people in academic studies, but sex and relationships were something else entirely. I had gained a lot of firsthand experience in these fields, to be sure, but was still new enough at it that I couldn't think of myself as an expert. On top of that, my experience with virgins was limited, and more often than not, I was happy to let the women I was with lead the way and just enjoy the ride. Being looked up to as the one with experience felt truly daunting.\n\nI tried shaking my head to get some clarity amongst the weed haze. It didn't work, so I had to ask, \"And just to be clear, you're suggesting that we...\"\n\n\"Have sex? Oh, yes, that was part of the plan I was really hopeful for,\" Jennifer said, smiling more brightly. \"I've heard that you're really good, and, uh, big, and very caring, and I think someone like you would be very good to help me with my 'virgin' issue, if that's something you're up for, of course.\"\n\nThere was that V-word again, making me shuffle in my seat nervously.\n\nJennifer must have noticed this, because she started speaking more rapidly and nervously, \"But you don't have to worry about me; I've been, uh, training with some sizable toys, and though I'm sure they've got nothing on you, I don't think you'd actually hurt me, and I think from what I've done and what I've seen in porn and think I can do that I might be, you know, really good for a first-timer and really fun for you?\"\n\nShe bit her lip in what felt like a practiced attempt at seduction, as she got up and moved into the chair next to me. Her hand fumbled aimlessly on my crotch, before her misguided grip closed a little too hard on my balls. When she realized her mistake, she quickly backed off.\n\n\"Sorry! Sorry, that wasn't supposed to go like that, stupid, stupid,\" Jennifer muttered, looking down and shaking her head.\n\n\"You're not stupid,\" I said.\n\n\"I definitely feel stupid! If I wasn't, that wouldn't have happened and we'd be all, you know, messing around right now instead of me messing everything up!\" Jennifer exclaimed, standing up and stepping away, nervous and a little afraid.\n\nI should have gotten to my feet and calmed her down, but tired and high as I was, I stayed in my seat as I said, \"You're not messing anything up, you're just inexperienced, it's cool. And, being fully honest, my balls are so drained it'd practically take a necromancy spell to get me back. Aside from that... it took me a long time to get anything close to what I'd call confident, and I still have to battle my insecurity all the damn time. It's fine, really.\"\n\nI motioned for her to retake her seat next to me, and she accepted.\n\n\"So... you'll teach me?\" Jennifer asked, her eyes hopeful.\n\n\"I... I don't know,\" I said, and seeing her begin to react negatively, I added, \"I had a very long day and I am both high and exhausted. I don't know if I can make the best decisions right now when I can barely sit up.\"\n\n\"Sure,\" Jennifer replied, sounding anything but sure.\n\n\"I can see that you're nervous. And... honestly, I need you to be sure that this is what you really want, and that I'm the guy you want to guide you. I can barely guide myself half the time and usually rely on other people to tell me what direction's up,\" I said.\n\nShe balled her hands up, but then released them, some nervous energy dissipating.\n\n\"I did come here asking specifically for your help, didn't I?\" Jennifer said, her voice slightly firmer.\n\nShe had a point there.\n\n\"A lot of experienced people really helped me out this year when I needed it most. So... yes, it makes sense to help you. Just... let's think on it, okay? Guiding someone I barely know into this life, it's a lot of responsibility. So, why don't we both take a couple days and think this out?\" I suggested.\n\n\"A couple days? You're just trying to get rid of me, aren't you?\" she replied, skeptical.\n\nI pinched the bridge of my nose. \"I need time to recover from today, and I've got some obligations this weekend that make time a little difficult to juggle. Please don't think I'm saying no, I'm not saying no, but I want to be sure I'm the right person for, uh, the job. Does... is that acceptable?\"\n\nI reached across to her, gently touching one of her nervously balled hands. Though she nearly recoiled instinctively, she didn't fully leave. That was something.\n\nTaking a breath, Jennifer said, \"Yes.\"\n\n\"Cool. Then why don't we sit here and eat some more of these delicious cookies baked by my archnemesis' mom and get to know each other? No pressure for anything else tonight?\"\n\nNervously, Jennifer smiled at me, \"Yeah. I'd like that.\"\n\n\"Me too,\" I described, taking another cookie. \"Because these are pretty good cookies, and I've still got the munchies.\"\n\n\"I don't, but they are good,\" Jennifer admitted. \"Why did your archnemesis' mom bake you cookies?\"\n\nI laughed. \"It's a long story.\"\n\n\"Well, you're not kicking me out anytime soon, right?\" Jennifer said.\n\nCome to think of it, I wasn't either. Dipping my cookie in milk, I said, \"Well, it all begins around homecoming...\"\n\n***\n\n\"Oh, god yes! Fuck me! Fuck me harder!\" she moaned, the girl beneath me wrapping her arms around me as I rapidly slid my cock in and out of her pussy. The muscles of her cunt gripped me tightly, squeezing and pulsing as they encouraged my orgasm. Luckily for her, I wasn't a greedy sort, and though I'd already made her cum twice with my mouth, I wanted to make it happen again with my cock buried deep within her.\n\n\"So good... you're so fucking good...\" I groaned, looking down at her sweet, smiling face as I defiled her pussy. I wished that we could get louder, but given the circumstances a bit of discretion was important.\n\nWe didn't want to be interrupted, after all.\n\nHer legs hooked over my shoulders, I had her bent in half as I roughly fucked her with all ten inches of my thick cock. She might as well have been made of rubber for how easily I could twist her and bend her in any position that suited our dirty needs.\n\nOur dirty needs that were rapidly reaching their necessary conclusion. Her eyes, already looking so big behind her glasses, widened in a look I knew all too well, and with discretion in mind I put a hand over her mouth as she tensed up, crying out loudly in orgasm as she shook against me. The way she clamped down on my already quite swollen cock, I had no choice but to cum as well, releasing deep inside of her. Pleasure overtook me as I tried to give her every last drop, each thrust weakening me further but feeling oh so good.\n\nBoth of us panting, I climbed off of her and laid down beside her in her bed. It was narrow, but so were the two of us, so we could mostly manage.\n\n\"That was... wow...\" I admitted, looking over at her admiringly. Only covered by a blanket from the waist down, I got the perfect view of her firm tits, rising and falling with each breath, the flush way her cute face looked after sex that I'd come to enjoy so.\n\n\"Tell me about it,\" she replied, smiling at me. \"You know, I think we get better at that every time.\"\n\n\"You might be right,\" I said, smiling back.\n\nAfter all, who was I to argue with Sarah Kent?\n\nThe petite and toned blonde cheerleader lay back in her bed looking sublimely satisfied, her head turned to me so she could look at me with her bright green eyes behind her trademark horn-rimmed glasses. When I'd first met her this year, I thought that she was one of the shyest people I'd ever met.\n\nGetting to see her blossom over the past months had been one of my favorite parts of the year.\n\nThat getting to see her blossom also tended to involve seeing her naked and fucking her in any number of creative positions, well, that was all a bonus. She was definitely hot, with a toned body from all her years in dance, a tight ass, soft yet firm B-cup tits that looked oh so delicious right now, and a face that could brighten an entire room every time she smiled. In a way, I related to her more than most of the girls I'd met this year. I mean, she was definitely more sexually experienced than I was at the beginning of the year, but we'd both had similar levels of confidence that we needed to work through. I liked to think that we'd helped each other, and though we both still had a ways to go, we made great friends.\n\n\"We should really actually get around to studying at some point, shouldn't we?\" I asked.\n\n\"Yeah... three times enough to wear you out?\" Sarah asked in reply.\n\nI laughed. \"I sure hope so.\"\n\nThis wasn't entirely a lie. I'd come over to Sarah's house this weekend so we could have a bit of a study date, her helping me out in math while I helped her out in history. I had every intention of going through with this, but when she greeted me in her pajamas looking so cute and innocent and horny, well...\n\nOkay, I couldn't be blamed for letting her tackle me to the bed that first time, letting her suck me until I was nice and hard, then her riding me until we both came hard, right? That was just to get it out of our systems.\n\nAfter that, we really meant to study, but when she got up on her tiptoes to get a book from the shelf and I saw her pajama bottoms fall just enough to show me her ass... well, okay, I got nice and hard again, and I couldn't help but bend her over her bed and fuck her ass hard until she was screaming into a pillow.\n\nThat was the second time. We both stripped down and washed up after that, vowing to stop having sex and actually study.\n\nYou can see how well that worked out.\n\n\"Me too... I need a good grade on this test,\" Sarah said.\n\n\"You'll be fine,\" I said.\n\n\"I know, but I want to be better than fine. I want to kick that test's ass,\" Sarah said, smiling proudly.\n\nI smiled back. \"Then I'll help you kick its ass.\"\n\n\"Good,\" she said, leaning over to kiss me. \"Because if you can get Kaitlyn into shooting range of straight-A's, I know you can get me a step and a half past acing it.\"\n\n\"I'll do what I can,\" I replied.\n\n\"I know,\" she repeated, kissing me again. \"Don't get me wrong, I love the cheer squad and they've done miracles for my sex life, not that things were ever bad fooling around with Josie, Hope, Fatima and Mia, but outside of Dakota, Sasha and Brooke, they're not much help for academics.\"\n\n\"Oh? And how are things on the cheer squad?\" I said, willing my cock out of any hardness and finding it very difficult when reminiscing on the New Year's party I spent fucking the majority of the senior cheerleaders.\n\n\"Busy. Dakota rides us hard, but she's fair, and she's a great dancer and smart enough person to respect my input, which is helpful. We haven't done anything like New Year's since, if that's what you're asking, but we've been having *some* fun,\" Sarah teased, smiling at me almost shyly. \"Brooke's been introducing me around to some of the football players, and it's been... nice.\"\n\n\"Nice?\" I asked, laughing.\n\n\"Nothing like you, but you're not always available, and sometimes, sorry, a girl needs a good dick or five, and a lot of them can give good dick,\" Sarah laughed back.\n\nFuck I loved hanging out with Sarah. She was always a breath of fresh air, just happy to relax and have some no pressure fun together. She was one of the nicest, sweetest, and smartest girls I knew, which is what brought me around to a subject I'd broached earlier, but we'd been too busy with sex to actually approach.\n\n\"So, have you put any thought into what I was talking about earlier?\" I asked.\n\nSarah stroked her chin with a finger and then asked, \"Was it about how you can't believe how tight my ass stays for how much you've fucked it? Because I keep telling you, dance girls know how to keep it tight.\"\n\n\"No, I was-\"\n\n\"I know what you meant, silly,\" Sarah laughed, looking up at her ceiling as she thought. \"Jennifer.\"\n\nEver since I sobered up after my day with Jess, I'd been uncertain about how exactly I wanted to handle the responsibility of introducing Jennifer into my world. While part of me wanted to invite her in with open arms (among other things), I just wasn't sure that I was the right person to do such a thing, and that even if I was, I was afraid of messing things up. Slowly and quietly, I'd been going around to some of the people (save for Josie and Brooke, who I knew would encourage me to fuck around no matter what) I trusted the most and asked for advice.\n\nKaitlyn said I should go for it, and that if I was too afraid, she'd be happy to have another slut in training.\n\nRose said it was an interesting idea, but that if I wasn't comfortable with it, that could end messier than anyone wants.\n\nMrs. Lynn said that if it's Jennifer's choice, then I should encourage her to follow her path. Then Mrs. Lynn sent me a tit pic. Gotta love Mrs. Lynn.\n\nMrs. McNeil on the other hand said it sounded like Jennifer was uncertain and confused, and might need to talk with someone she was close to to be sure.\n\nJess texted me a couple of big thumbs up.\n\nAlice was cautious, but urged me to sit down and talk with her.\n\nDakota sounded enthusiastic for the idea, but since I think I might have interrupted her sitting on Haley's face, I couldn't be sure.\n\nNaturally, Rachel McNeil offered the best advice during one of our long-distance Skype sex sessions, telling me to talk with Jennifer now that my head was clear, and tell her how I was feeling and see if I could get a better understanding of where her head was.\n\nThat... was probably the best advice, but it didn't mean I wasn't going to keep asking around to see if someone might have had the magic bullet that would explain everything. Something within me seriously hoped that Sarah would be the one to possess it.\n\n\"I know her, a little,\" Sarah said.\n\n\"You do?\" I asked.\n\n\"She's quiet, keeps to herself mostly, and it's not like most of us quiet and shy types are all in this one big club-\"\n\n\"Or formerly quiet and shy types,\" I interjected, poking Sarah playfully.\n\n\"Hey, I'm still mostly quiet and shy, now I'm just quiet and shy and dressed like a cheerleader. The guys go crazy for it. Girls too, actually,\" Sarah admitted, rather proudly. \"I'm doing damn good for myself.\"\n\n\"No kidding,\" I replied.\n",
        "\"Thanks!\" Sarah said, smiling cutely and kissing me. \"But back to Jennifer... if *I* was shy when you met me, she's even shyer than that. I don't know what she's personally into, but I don't think she has many friends, and that makes a huge difference when you're getting into sex. I had friends. Josie, Fatima, Mia, Hope, they all helped me out, and we've had our fun...\"\n\n\"How have we not all gotten together?\" I asked.\n\n\"You're always busy with one or two or three or some number of other girls?\" Sarah replied.\n\n\"Right, that,\" I replied.\n\n\"Yeah, *that*,\" Sarah laughed. \"Anyway, they helped me with this, but if Jennifer's looking for your help with this, it's probably because she didn't have anyone else to go to. I don't think she's the kind of person you need to worry about, but if she's gotten all her sex knowledge from porn, you need to be aware that she won't be like any of the other girls you've met. She'll need a little more care, a little more caution... but I think you two can have fun. If you relax, I think you'll prove a good teacher.\"\n\nThat was the kind of answer I was looking for.\n\n\"Thanks,\" I said. \"I never really thought about being a teacher.\"\n\nRolling over onto her stomach and showing me the wonderful expanse of her tattooed back, Sarah said, \"I never really thought a lot of things would happen this year, and look where we are.\"\n\n\"Yes, look where we are,\" I mused, leaning in for another kiss.\n\nIf only things were that easy.\n\n\"Sarah?\" a female voice called from behind the door. A hand rattled the knob. My heart beat quickly.\n\n\"Tell me you locked the door,\" I said.\n\nSarah's eyes might well have been wider than mine. Quickly, she whispered, \"I was too horny!\"\n\nShe grabbed her blanket and pulled it over both of us. It wasn't a terribly thick blanket, nor was it going to cover up what obviously happened in here, but it was a little too little, too late, and here we were.\n\nThe door slowly swung open, and peering in was a woman I'd never actually met, but heard a fair bit about.\n\n\"Oh, I'm not interrupting, am I?\" she asked, her voice at once sultry and amused. \"How many times do I have to tell you, Sarah, if you've company over, lock the door! I don't want to interrupt you when you're having fun.\"\n\n\"MOM!\" Sarah exclaimed, trying to hide her blush under the blanket.\n\n\"And you must be Ryan Collins. I'd shake your hand, but, you know...\" she said, darting her eyes down at us.\n\nViola Kent. I guess this was bound to happen sooner or later.\n\nI'd been hearing about her from some of my teachers for a while now as a leading member of their \"book club\" (a.k.a. their excuse to get drunk and get each other off), and I knew she had a following there. I knew she ran a number of businesses from home; selling sex toys, craft items on Etsy, and running a dance studio out back (which also included pole-dancing and stripping classes). Come the New Year's party, though, Sarah had simply come out and asked me if I might consider hooking up with her mom, since Viola had not been on a date in a very long time, and while it had sounded and felt like a crazy suggestion, actually seeing her made it immediately harder to dismiss.\n\nThough in her early 40s, you couldn't tell that on first sight. At about 5'7\", she was built like her daughter, with a toned dancer's body, long legs, smallish B-cup tits, and what appeared to be a firm ass. She was dressed halfway between a workout and an office, with tight sweatpants and an oversized white men's shirt that was draped somewhat open, allowing me to see the lightly tanned, firm expanse of her abs, and the black bra she had underneath. Sensibly, I darted my eyes upward to her face, but that didn't help as she might well have been one of the most beautiful women I'd ever seen in my life. Her lips, not too thick but just full enough, curled into a mischievous grin, her nose dainty and pointed upward, her eyes brown and soulful. Silky black hair, wavy and about mid-back-length I'd say, spilled onto her shoulders, though she was in the midst of tying it back when she walked in.\n\nShe was stunning, and I might have been a little distracted to not hear what she said until long after she said it, but soon enough I did what I could to catch up.\n\n\"Uh, yeah, Ryan is me. I mean... *I'M* Ryan, Mrs. Kent,\" I said, my voice hitching up a few notes higher than it had to.\n\nShe laughed. I think Sarah might have chuckled next to me a little too, at that one. \"Oh, please, Ryan if I were into such formalities, it'd be Ms. Kent, not Mrs., but it's not that either. Call me Viola.\"\n\n\"Okay... Viola,\" I said.\n\n\"Thanks, Mom,\" Sarah said. \"And why are you in my room?\"\n\n\"Because I'm the one paying the mortgage and putting you through school?\" Viola chided back, though it was clearly good-humored fun. \"Actually, I just wanted to let you know that I'm teaching another stripperobics class tonight, so things might go late at the studio. I was going to offer to order some pizza for you, but since we've company, two pizzas?\"\n\n\"That'd be great, Mom, thank you,\" Sarah said, smiling at her mother as if she hadn't just taken another load of my cum deep in her pussy a few minutes ago.\n\n\"Good. One pepperoni, one Hawaiian? You're not one of those assholes, who are quite clearly wrong, who believe that pineapple doesn't belong on a pizza, Ryan?\" Viola asked.\n\nHonestly, in my current state I likely would have agreed to a pizza topped with broken glass and a live chicken, but this was easier since I actually did agree. \"I love Hawaiian.\"\n\n\"Good. I'll get some boneless wings, too; class might go late, and if it's too much I'm sending you home with some leftovers,\" she said, walking out into the hallway. Calling back to us, she said, \"It was nice finally meeting you, Ryan! And if you don't lock this door after me, Sarah Kent, I'll be greatly disappointed in you!\"\n\nNaked and blushing through pretty much her entire body, Sarah jogged on over to the door and swung it shut, locking it. Though I was intoxicated at the sight of her (and the way my cum leaked most of the way down her legs), I felt enough secondhand embarrassment for her that I was stuck hoping she was okay.\n\n\"So,\" Sarah said, clasping her hands together nervously. \"That was Mom. What do you think?\"\n\n\"She seems nice,\" I said, perhaps too quickly.\n\n\"Your eyes weren't focused on how nice she was,\" Sarah replied, strolling over to the bed and jumping onto her stomach on it next to me. \"Your eyes were like, 'Oh, Viola, won't you be my Valentine?'\"\n\nShe didn't need to make the kissy sounds for emphasis, but she did anyway. I swatted her one on the ass.\n\n\"Hey!\" Sarah exclaimed, laughing.\n\n\"I've already got a Valentine. Two of them, actually,\" I replied, realizing quite suddenly that I had no plans for that and should really get on it before it became an issue.\n\nSuddenly more serious, Sarah said, \"Seriously, though, you remember-\"\n\n\"I remember our talk,\" I replied. \"And I'm still not sure, I mean... wouldn't it be weird?\"\n\n\"Not for me. I love my Mom, but she works herself too hard and she needs some real fun. I like you, and I know you're kind, and really, really good in bed, and honestly I think you could be a lot of good for her. And she could be for you too, she's so cool,\" Sarah said.\n\nI smiled at her. \"You two are pretty close?\"\n\n\"After Dad left us, yeah, we're close. The two of us, we've been best friends, and I guess you know... I care about her a lot. I don't want her going quietly into the night, you know?\" Sarah said.\n\n\"You want her screaming?\" I joked.\n\nPlayfully, Sarah squeezed my cock through the blanket. \"I know you're good for it.\"\n\n\"We'll see, we'll see,\" I joked, though the more I thought about Ms. Viola Kent, the less insane I felt about this idea. She definitely left an impression that I couldn't quite shake, even if shaking it was probably for the best if I was naked and in bed with her daughter.\n\n\"Please, keep thinking about it? It would mean a lot to me if I knew she'd had some joy in her life,\" Sarah asked.\n\n\"I will,\" I said. \"Just... let me get through Valentine's first? It's my first one with a girlfriend, and I don't want to mess anything up. I need to keep my head... there.\"\n\nIt was an excuse, and a feeble one at that (and as it would ultimately turn out, not 100% accurate either), but it was the best I had at the time. Sarah had to know that, but she also didn't give me a hard time for it, either.\n\n\"Fair enough,\" she said, pressing up against me and kissing me one last time. I had a hard time not reaching over and squeezing her ass, feeling her groan into me as I did so. My cock twitched slightly, some life slowly being restored to it.\n\n\"We should really study,\" I said.\n\n\"We should,\" she replied.\n\n\"But...\"\n\n\"But,\" she replied, smiling at me. \"You wanna fill my ass again, don't you?\"\n\n\"Yeah,\" I replied quickly.\n\n\"Me too, but after that, then we study,\" Sarah said, retrieving the bottle of lube from her bedside table.\n\n\"Then we study,\" I said.\n\n\"Then we study,\" she replied, squeezing some lube onto her hand and proceeding to spread it on my cock.\n\nEventually we'd study (hopefully), but right now I wasn't one to mind a little more fun to take my mind off of the month unfolding in front of me.\n\n***\n\nWatching as one month transitioned into the next was always one of my stranger fascinations at Regan Hills High, mostly due to the efficiency with which how quickly things were put away and forgotten. The Christmas decorations which had been up long past their expiration date were finally being taken down around school, already being replaced with shades of red and pink and more hearts, flowers and cupids than you could count.\n\nBeing assigned to write a puff piece article on holiday decorations for the Puma Press wasn't exactly my idea of a fun time, but being the paper's Current Events writer, it was my duty to fulfill. At least it should prove a quick article to write.\n\nAnd the company wasn't half-bad either.\n\nI heard the click of her digital camera, turned to see Puma Press photographer Leah Sartori waving at another spot of decorations. \"And look! A pink heart this time! Truly avant-garde.\"\n\n\"They're doing their best,\" I said.\n\n\"Oh, no doubt,\" Leah replied, \"Sabrina makes the best of what can be done, but the school only offers so much assistance.\"\n\n\"They put this on Sabrina?\" I asked. Sabrina Singh was our senior class president, utterly gorgeous and one of the hardest workers you'd ever met, and impossible to know for the work schedule she kept.\n\n\"She took it on herself,\" Leah replied.\n\n\"Naturally,\" I answered.\n\n\"Most decorating in school she's taken on this year, doing what she can with what they've got on hand and what she can bring in. She rallies her few friends and whoever the school will allow to assist her,\" she said.\n\n\"And the work's not bad,\" I said.\n\n\"It isn't,\" Leah admitted. \"But I still like to playfully mock, it keeps my head in a healthy place about the mundanities of our school. Ooh, I think I see a paper cherub over there!\"\n\nI laughed, enjoying Leah's presence, but looking to change the subject away from our beleaguered classmate. \"It's not like there's a lot you can do for Valentine's Day.\"\n\n\"Not with this limited a mindset. Bring in some of the old goddesses and let me tell you, we can get a real party started here,\" Leah said.\n\n\"I don't think our school would want us putting up any displays following Zeus' exploits,\" I said.\n\n\"Hence why I said goddesses, not gods. The gods... they've got problems,\" Leah replied.\n\n\"I seem to remember Athena being fairly spiteful too,\" I replied.\n\nLeah rolled her eyes. \"Nobody's perfect.\"\n\n\"I think Medusa and Arachne would say this is a lot more than a 'nobody's perfect' situation,\" I teased back.\n\nShe sighed. \"You're like this all the time, aren't you?\"\n\n\"Quite frequently,\" I replied.\n\n\"Good. It's fun,\" Leah shot back, taking another picture, her sly smile sneaking out at me from behind her camera.\n\nLeah was definitely cute. With smooth olive skin and short wavy black hair, her brown eyes darted out at me from beneath her bangs with good-humored mischief. Tight bodied and almost a full head shorter than me, she wore jeans, a t-shirt and comfortable cardigan, though her other cosmetic choices added to her own unique distinctiveness. Black lipstick on full lips, a small septum piercing, pentacle necklace with additional amethyst points and bracelet of crystals and hematite, she was not one to hide who she truly felt like on the inside.\n\n\"Glad to be fun. I like working with you, too,\" I said.\n\n\"Oh? Wouldn't you rather have Josie at your side for this? She's a very talented photographer, too,\" Leah replied.\n\n\"Josie's great with film, but she's a purist in that way and won't work with anything else. Nadia wants these pictures up on our site ASAP. That means digital, and you're second to none for that,\" I said.\n\n\"Huh, and here I thought you wanted more of my charming company,\" she said.\n\nI shot back, \"I didn't mean-\"\n\n\"You're lucky you're cute, and that Nadia would have my ass if I didn't do this job, otherwise I'd be out of here so fast,\" Leah replied, grinning playfully.\n\nI smirked. \"There's no winning with you, is there?\"\n\n\"I never said you couldn't win, but never think I won't have my mischief should an opportunity present itself,\" she said, strolling slightly ahead of me.\n\nI caught up with her. \"Sounds like you've got a little Puck in you.\"\n\n\"This time of year? Always,\" she said, dropping her camera so it fell down between her modest breasts, caught by its strap before it fell down. With arms spread out at her sides, she performed a playful twirl and smiled at me brightly. \"It used to be I thought this time of year was cruel, that it was only to remind those of us who have nobody to love of what we don't have, but now, I see it only as a time of possibility! This is our time to be foolish mortals, to take new chances, forge new paths and find new loves, and I am here for it! Wherever you are, Puck, come on out and show us what you got!\"\n\nI smiled, laughing at her energy. Her bright smile behind such dark lipstick excited me in a way that I rather liked.\n\n\"You're not planning on turning me into an ass, though, are you?\" I asked.\n\nSmirking again, Leah replied, \"No, just your head. KIDDING! Kidding. I'm not that kind of witch.\"\n\n\"What kind of witch are you?\" I asked, curious and not wanting this conversation to end. It was lunchtime, and I had more than enough notes to write a puff piece, but Leah's energy made me happy in a way I wasn't ready to give up yet.\n\n\"The good kind, I swear,\" she replied, placing her hands together and giving me a light bow before laughing. \"I'm a Wiccan; I don't mess around with the darkness, if that's what you're asking. I find my peace by being at one with the Earth and putting as much good into the world as I can. I am a strong adherent to the three-fold law, not that that's the only reason I put out good.\"\n\n\"That's... pretty cool, actually,\" I said.\n\n\"Helping makes me happy, and if I can make other people happy, then that makes me happy too. There's not enough happiness in the world, and I like to spread it however I can,\" Leah said, casting her eyes down a little. Was she nervous? I'd never really seen Leah nervous. I didn't know she had it in her.\n\n\"That's awesome,\" I said, eyes drifting back towards the decorations as I hoped to make her less nervous. \"So... got any Valentine's plans?\"\n\n\"Are you hitting on me?\" Leah asked, joking yet still clearly uncertain. \"Because I saw that pile of cards from your locker you were trying indelicately to hide; methinks your Valentine's Day plans might be quite full.\"\n\nI blushed. She wasn't wrong about that; I had received a small handful of cards from girls I'd been with this year looking to be my Valentine. It was a situation that struck me as still difficult to believe, but it was one I was going to have to figure out a way of dealing with quite soon.\n\n\"No, I wasn't,\" I said.\n\n\"Pity... but perhaps for the best, since my Valentine's idea for you would have had to start significantly sooner,\" she said, cryptic.\n\nThat made me raise my eyebrow. \"Oh?\"\n\nLeah looked me over for a moment and bit her lip as if in great internal debate, then took a decisive breath.\n\n\"Alright... so this might sound crazy, but remember the other day when I said I might have a plan for the rest of the year, and that you might have a part to play in it?\" Leah asked.\n\n\"Yeah,\" I replied.\n\nTaking a breath, Leah said, \"Now, feel free to say no, but I had a ritual in mind that I've plans to do, and your... unique assistance in it would help add a lot of additional power to it. If you were willing, of course.\"\n\nNow, I was never exactly the most spiritual person in the world, but I wasn't one to discount anyone's personal beliefs either (so long as they didn't hurt anyone). While I may not have been much of a believer, I was more and more open to trying new experiences these days.\n\n\"What kind of ritual?\" I asked.\n\n\"More of a spell, actually,\" Leah said now that she could tell I was curious.\n\n\"What, a love spell?\" I joked, looking up at the decorations around the school.\n\nLeah blushed.\n\n\"It is a love spell?\" I asked.\n\n\"No, no, no!\" Leah said, holding her hands up. \"Not quite, I mean... love spells often imply a removal of will, forcing one person to love someone else, and that's not how good magic works at all, no... I'm trying more of an, I'd guess you'd call it a *lust* spell.\"\n\nA lust spell? Alright, she piqued my interest. \"Why a lust spell?\"\n\n\"Look around you. There's people all around this school having sex, falling in love, having relationships, but there are many more who want something like that yet don't have it. They lack confidence, or they've been dealt a bad hand in life. I've designed a spell that I intend to use to soften some of those barriers, help nudge those who are looking for love and lust in the right direction so they can find their happiness. There are a lot of people who could use that kind of help, and I've done similar spells before, but if someone with your particular... gifts could help out, it would go a long way toward adding some proper sexual energy to the spell,\" Leah explained.\n\nIt was an interesting pitch and explanation, and it wasn't the craziest thing I'd ever heard. Back before senior year, I'd have killed for someone to have pulled a spell like that to help me get past my own shit. I could think of a number of people I'd seen around school who could use something like that. It had me curious, though there was something I caught hiding between the lines.\n\n\"This spell requires sex, doesn't it?\" I asked.\n\n\"Requires? No,\" Leah said, blushing again slightly. \"But if I'm being truthful, it would likely improve the energies. And... you know, it would be pretty exciting, too.\"\n\nI didn't doubt that. Leah was definitely cute, and the way she smirked I could see that she might have a freaky side that we could have a good time with. The way she looked at me, she definitely seemed interested.\n\n\"Did you have a plan for when you wanted to do it?\" I asked.\n\n\"The sooner, the better, especially if we could disperse the energies to our school before Valentine's; that would help many, wouldn't it? Tonight, ideally? I've got the house to myself until tomorrow, it would prove a good opportunity,\" Leah suggested.\n\nIf something like that were to work, she definitely had a point on the timing. It was... well, it was an interesting prospect. I wasn't fully onboard with the idea, and it did sound a little out there... but Leah was someone I was friendly with, and I didn't get any bad vibes off of her. I doubted whatever she was doing would actually work, but that didn't mean it *couldn't* work, right? Regan Hills certainly had its own unique vibe that bordered on working on the laws of porn logic at times (okay, a *lot* of the time), and on the off chance that I could contribute to that and help those in need...",
        "And, let's be honest, Leah was fucking beautiful. \"I can make tonight work.\"\n\nLeah smiled. \"See you there?\"\n\n\"Yeah,\" I grinned.\n\nSpending an evening with a sexy witch. Honestly, what was the worst that could happen?\n\n***\n\nNow, being a guy who's watched more than his share of horror movies, that I'd been invited over to a witch's house with the explicit knowledge of her performing a sex-based ritual gave me some pause. It conjured up images of a burning cauldron in a dark stone room, old women in ancient robes sacrificing a small animal with their crooked daggers, though in this case that small animal would be me. It was a stereotype that was tough to kick, even as I spent my afternoon doing research into Wicca and similar neopagan practices, but it also wasn't enough to scare me off.\n\nApproaching her perfectly ordinary middle-class suburban home helped. Even though it was after dark, it was a perfectly ordinary home, a bit sterile perhaps, but with enough personality to the front yard that it had its own hint of warmth as well. I walked up the path, feeling good and checking myself over for the umpteenth time. Given this was a rare occasion where I had plenty of time to prep before a potential sexual encounter, I'd showered and dressed nicely for the occasion, wearing one of my better button-up, long-sleeved shirts and nice jeans.\n\nI pressed the doorbell, lay my bike next to the door and stood waiting for only a matter of moments before I heard it open.\n\n\"Ryan! You made it!\" she exclaimed, excited.\n\nI was going to say something smart, but getting a good look at her, words didn't come easily.\n\nThough she still wore the same jewelry and makeup that she'd had on at school, the only clothing she wore now was a short purple silk robe. A wide belt tied it around her waist, but it fell open in the middle to show a fair amount of her bare chest (if not her breasts, yet), while it was short enough only to go to her mid-thigh. I'd never seen her legs before, but they bore her olive complexion well.\n\nFor a girl who wasn't very tall, she had very, very nice legs.\n\nWhile I knew she wasn't wearing a bra, I got the sneaking suspicion that she wasn't wearing anything else under the robe, either. It was enough to get my erection stirring.\n\nThis was the perfect time to say that smart thing I'd hoped to say. \"Uh, yeah, I said I'd come, so here I am!\"\n\nThis was not smart.\n\nLeah, thankfully, didn't hold that against me.\n\n\"Come in, come in!\" she said, ushering me inside. \"I've got everything set up in the backyard, you don't have a problem with being outside, right?\"\n\n\"No,\" I said.\n\n\"Good!\" she replied, smiling at me, a bit nervously. \"I want to thank you again for your help with this. Regan Hills doesn't really have a Wiccan community, certainly not enough for a coven who'd be down for the kinds of rituals I'm into, so, I have to take what help I can get, when I can get it, and I really, really appreciate it!\"\n\n\"It's my pleasure,\" I said.\n\n\"And have you... you know,\" Leah said, still dancing around the more nerve-inducing words. \"Thought about how active in this ritual you'd like to be?\"\n\nThough there were some moments in my research that had made me genuinely wonder how much I wanted to do here, it only took a look at Leah like this to erase any fleeting doubts. \"I can go all in.\"\n\nLeah nodded, pleased, if still a little shaky. \"Alright. Good. Glad to hear it. The more involved, the better when it comes to summoning the energies.\"\n\n\"Is everything alright?\" I asked.\n\n\"Fine, it's fine...\" she replied. I looked her in the eyes, waiting for her to give me a little more than that. Finally, Leah broke, \"Okay, it's not like I've never had sex or anything like that, but I also don't do it very often, either, so, it's a little nerve-wracking working myself up to it. When you said all in, you did mean all in on the sex part, right?\"\n\nI laughed, softly. \"Yeah.\"\n\n\"Okay... so, while I want to do what it takes to complete this spell I've designed, it's been a minute since I've gotten laid, and I need to get into that space,\" Leah admitted.\n\n\"Fine,\" I replied. \"Do what you gotta do.\"\n\n\"Thanks,\" Leah replied, closing her eyes briefly and taking a deep breath. She let it out slowly, only to take another breath in, clearly centering herself.\n\nWithout opening her eyes, she replied, \"And before we get that far, I should also give you a warning.\"\n\nI nearly made a joke about her actually wanting to sacrifice me to the moon, but not wanting to offend her I held my tongue on that quip. \"Yes?\"\n\n\"I can get really into rituals, and I can really get into sex. Put them both together and, this might get a little intense. I know I'm small, but get the energies flowing and I might fucking destroy you, so, fair warning,\" Leah said, opening her eyes and smirking.\n\n\"I like the sound of that,\" I replied.\n\n\"Good!\" she exclaimed loudly, her eyes going wide with embarrassment. \"I mean...\"\n\nI had an idea I thought would help. \"Would it help break the ice if we kissed?\"\n\nLeah sighed, pleasantly. \"A lot, actually.\"\n\n\"Good,\" I replied, leaning in. I wrapped an arm around her back and pulled her in close, pressing her darkly painted lips to mine. Leah moaned softly as she pressed into me, wrapping her arms around me and kissing back. Her lips parted a little hesitantly, her tongue coming out to meet mine slowly, but after the initial kiss, she got into it. Leah kissed me with a fire that I felt growing within her, and the more she kissed me, the more I wanted to kiss her back. She was a good kisser, eager without being overpowering, soft yet so very hot. I could've stood there kissing her for a while, so it was probably for the best when she gently pushed me away.\n\n\"Okay... okay, that's what I needed...\" she said, looking up at me with wide eyes. \"Let's take this out back.\"\n\n\"Let's,\" I said, letting her lead me through her house.\n\nMost of her nervousness melted away, Leah led me through her house to the backyard, and while it was a fitting backyard to a suburban house like this, with an expansive lawn, pool, toolshed and barbeque nook, she'd made one distinct corner of the grass her own. Surrounded by backyard torches and bowls with multi-colored candles was what looked to be a large, black picnic blanket on the lawn. Painted on it in white was a large, five-pointed star in a circle, while at the head of it lay a small altar of crystals and other paraphernalia. A firepit burned nearby, ensuring that we wouldn't go cold on this evening with a slight chill in the air, while a high fence ensured we wouldn't have any unwanted guests or spectators.\n\n\"I don't put on a huge spread, but I still know how to focus well into the energies of this town,\" Leah explained.\n\n\"Cool. I... I don't know a lot about this, but I'm happy to take your word for it,\" I replied.\n\n\"I'm not an expert, and there's not really *just* one way to do this. Everyone has their own way of communing, and this is one of mine. I've designed it as a bit of a mishmash of various disciplines and spells, and so I can use as many of my toys as I want, because I've got a pretty bitchin' witch kit,\" she said, leading me to the edge of the black cloth. As I looked down at it, I saw a second, fainter white circle of the pentacle.\n\nSeeing that it appeared to be a white powder, I asked, \"Salt circle?\"\n\nLeah raised an eyebrow. \"You did your research.\"\n\n\"Seemed a wise precaution,\" I answered.\n\n\"Precautions aren't needed. I told you I believe in the three-fold law; you've read about that, right?\" she asked.\n\nI had; it was the belief that whatever energy you put out into the world, be it good or bad, you'd be returned the same energy times three. Very popular among the Wiccan and Neo-Pagan crowd.\n\nI nodded. Leah said, \"Good. I won't hurt you, but if at any moment you feel discomfort or fear, let me know and we can stop. I only mean for good to come from this, and I mean to put good into all aspects of the ritual, including how I treat you.\"\n\n\"And I mean to add good to it as well,\" I said, leaning down and kissing her quickly. \"I'll do what I can to give you three times back, but if we keep trying to top each other three times over, I think math will work against us in exponential fashion. That, or we might ascend to become sex gods.\"\n\nLeah smiled at me. \"Very well, then. Are you ready to get started?\"\n\nTaking a breath, I said, \"Yes.\"\n\n\"Good. Take your clothes off, uh, please?\" she replied, stepping away slightly to take a look at me.\n\nI smirked. \"Sure.\"\n\nI wasn't a model by any means, but working out more this past year had given me a pretty decent body by this point, at least if Leah's eyes were any indication when I took off my shirt. Lean muscle suited me well, who knew?\n\nI bent over, taking off my shoes and socks and setting them aside, outside the ritual area, then dropped my jeans to join them. Standing only in my underwear, my cock straining against it, I was rather aware of Leah's eyes on me.\n\n\"Enjoying the show?\" I asked.\n\n\"Yes,\" she said plainly. \"I've heard a lot about your skills and prowess, and even more about what you're hiding in there. Tonight is about the ritual, mostly, but don't give a girl a hard time for being lustful when she knows what's about to happen, okay?\"\n\n\"I wasn't going to,\" I replied, hooking my thumbs in my waistband and pulling my underwear down. My cock, all ten inches of its thick, erect glory, popped out as I stood nude before Leah. Her eyes widened slightly, and maybe I saw her lick her lips a little, but other than that she kept her reaction fairly muted.\n\n\"Nice,\" she said, her voice a little breathier. \"Very, very nice.\"\n\n\"As advertised?\" I asked.\n\n\"Oh, completely... but it's one thing to hear about size, another to see it,\" Leah replied. \"My turn.\"\n\nUntying the belt of her robe, she dropped it to the floor revealing that she was, as expected, save for her jewelry completely naked beneath it. Her breasts were on the smaller side of B-cup, with dark, very firm nipples. Her pubic hair was dark and curly, neatly trimmed and highlighting a rather nice-looking slit. Briefly she spun around, showing me the beautiful expanse of her back, and her round, full ass. It was a bigger ass than I would have expected on a girl of her frame, but it was a sight that was every bit as beautiful as the rest of her.\n\n\"Wow,\" I said, my cock twitching appreciatively at the sight of her.\n\n\"Thanks,\" Leah replied, pride sneaking into her voice. \"I think I'm pretty damn hot, myself.\"\n\n\"Well, you're right,\" I said, at a loss for words.\n\nLeah smirked. \"With a silver tongue like that, I can see why you're such a hit with the ladies. Ready for the next step?\"\n\n\"That's not what my tongue is best for,\" I said, taking back some of my confidence. \"And what's the next step?\"\n\nShe guided me over to her collected paraphernalia, pointing to several small bowls filled with paints.\n\n\"I've got some important symbols I think would be helpful to paint on each other; star signs, symbols of various relevant gods and the like. Nothing too frightening, believe me, but symbols that I think can help us channel energy better into the cause. The paint dries pretty quick once applied, and doesn't smudge much, so be certain of what you're doing once it's done. It's non-toxic, but it's still paint, so, I wouldn't recommend applying it anywhere you'd wish to put your mouth,\" Leah said, smiling.\n\n\"Good to know,\" I replied. \"So, are we talking about a few symbols, or are we talking about getting covered?\"\n\n\"Oh, I want to be covered head to toe,\" she replied.\n\nGetting to rub my hands all over Leah Sartori's naked body, only one word came to mind. \"Awesome.\"\n\nI don't know how long we spent painting each other, but it was a singularly erotic experience the likes of which I'd never felt before. Running our fingers over each other, painting symbols and lines and designs that just felt natural, we became very, *very* acquainted with each other's' skin. As my fingers traced over Leah's toned body, I learned where she was most sensitive and where she was most proud. I learned that the inside of her neck brought bout a particularly deep groan when she was touched there with just the right gentleness, and that she was proud of showing off her ass. Leah, on the other hand, seemed to take distinct pleasure at exploring the muscles I was still becoming accustomed to, paying particular attention to whatever made my cock twitch.\n\nThis could have easily gone too far, with the two of us having sex on the blanket once we'd gotten appropriately turned on, but somehow we managed to restrain ourselves. We kept our touches away from each other's genitals, and aside from the occasional kiss and the painting with our fingertips, we avoided making this overtly sexual. It was intense, and I had a hard time recalling ever having been that hard. I could see I wasn't the only one excited, as my glances down at her pussy confirmed she was every bit as wet as I was hard.\n\nWhen we finished painting each other, we then used the small mirror she'd provided to apply the paint to our own faces. Though my own best efforts likely had me looking something like a half-assed Halloween war paint, Leah had quite expertly applied stripes of red, black and white to give her the look of an ancient high priestess. This was soon combined with a number of necklaces bearing various talismans, and a headdress of interlocking strips of fabric and pieces of scavenged and short tree branches that made it look like she had short, if fierce, antlers.\n\nLeah Sartori had transformed from the cute photographer I worked with on the school paper to an ancient high priestess, ready to perform an old-world solstice rite in a circle of standing stones. It was an image that was simultaneously intimidating and arousing, and the power that came with her transformation clearly brought great pride to her.\n\n\"Shall we begin?\" she asked after we washed our hands, smiling slightly.\n\nA little more nervous than when I'd started, but still excited for the sight before me, I answered, \"Yes.\"\n\n\"Good,\" she said, stepping over the salt circle and onto the blanket. I followed her, standing opposite her, then mirroring Leah as she knelt on the blanket.\n\n\"We're going to start this by getting centered. Meditate if you can, but if you can't, just focus on clearing your mind of all but your intent for the spell, and your breathing...\" she said, closing her eyes.\n\nNow, clearing the mind might be easy for some people under controlled conditions, but with a naked and beautiful Leah Sartori only a couple feet away from me, I couldn't exactly restrain my excitement. I did my best, because I wanted to be here for her spell, but it was definitely difficult when I was this hard and she was this hot... but soon, I found some dark peace. I focused on my breathing, then on the intent of the spell as she had explained it. I thought of the women around school and town in desperate need of some sweaty, grunting fun... and while it didn't help with my erection, it felt like I might be getting toward the right mental space.\n\nWe were like this for a few minutes, until I heard Leah begin to move. I opened my eyes to see her alert and staring at me.\n\nLooking into my eyes as if looking deep into my soul, she explained, \"Now I will recite an invocation. I want you to keep focusing on your feelings and intent, let everything we have done wash over you while anticipating what is to come...\"\n\nHer voice had taken on a deeper, lustier tone that made me even harder than I already was, if that were at all possible.\n\nLeah continued explaining as she slowly reached her hands down between her legs and beginning to touch her slick pussy, \"...you may not know the words to the invocation as I do, but while I call on the goddesses and the energies, I will be touching myself. Feel free to join me, but don't go too far...\"\n\nWatching her touch herself, groaning and writhing on her knees, I could not help but be driven by the raw and overpowering sexuality on display. I reached down and took my cock in hand, slowly masturbating and spreading my precum up and down my engorged shaft. I groaned, not taking my eyes off of her as Leah touched herself.\n\nMoaning as she writhed on her knees, she closed her eyes and spoke her invocation.\n\n\"I call upon all who listen, attend to us as we ask this favor... we do this for those in Regan Hills who wish for love and lust in this coming month, for fun and adventure and consensual, joyous pleasure. I call upon the elements... the passion of flame and wind, the power of water and earth... I call upon you goddesses of lust, upon Aphrodite and Hathor, Inanna and Freyja, Parvati and Venus and any who will hear our plea... we ask that you accept our offering and spread the lust we share tonight to those who wish it. This is our will,\" Leah said, opening her eyes and looking into me. Her voice was quivering by this point, her knees barely holding her up as she approached an orgasm.\n\nKnowing what I needed to do, I added, \"This is our will.\"\n\nBiting her lip, Leah fingered herself harder and harder, looking down as I slowly jacked my own cock. I knew she wanted me to wait for a more dramatic moment than this to cum, but she was clearly not being held by such restrictions. After a few moments of us silently watching each other touch ourselves, I saw her body go tense. Her ragged breathing became a quiet, quick whisper of \"oh, oh, oh\", as she came. It wasn't the hardest orgasm I'd ever seen, I got the impression this was just Leah warming herself up in the earliest offering for her spell.\n\nEven so, the orgasm was almost strong enough to tip her over. Gently, I reached up with my free hand, holding her up as she came down. She looked at me gratefully, catching her breath, then took my hands in hers. Though I growled slightly at no longer being able to masturbate, that my fingers and Leah's juice-coated fingers were laced together, the two of us holding each other up as we looked into our eyes... it was a uniquely powerful moment.\n\n\"Thank you,\" she said, her voice still husky from her orgasm.\n\n\"My pleasure,\" I said. \"Are you alright?\"\n\n\"Oh, I'm perfectly fine,\" Leah replied, smiling giddily. \"I needed an early offering, and to get that out of the way... I'm always kind of quiet the first time out, but after that, I get far more unrestrained.\"\n\nI smiled. \"Sounds like fun. So, what comes next?\"\n\nShe separated her hands from mine, leaning in and kissing me quickly. \"Well, that was the most formal part of the spell. From here on out, we just need to go crazy on each other. With it being such a powerful number, I'm quite hopeful I can get three solid orgasms out of you.\"\n\nI could handle three. I challenged her, \"And you're limiting yourself to only two more?\"\n\nLeah laughed, then kissed me again. \"Oh, no, I don't have that kind of restraint, but I don't think they'll mind. Three for you is a goal, if you can't manage that, there's nothing to lose sleep over, but if you can manage more...\"\n\nI wrapped an arm around her, pulling her in close and pressing my naked body to hers without once minding some of the pointier parts of her necklaces. I kissed her passionately, letting my naked desire match our naked forms as I made out with her. My cock pressed against her belly, and though she reached around my back to hold me close with one arm, with her other I felt her reach down and grasp my cock. We both gasped slightly at the contact, but I loved the contact.\n\n\"I've wanted to touch this cock for a while,\" Leah admitted, a little sheepish.\n\n\"I've wanted you to touch it, too,\" I admitted, kissing her again. I reached between her legs with one hand, finding and finally touching her steaming slit. She was positively soaked and oh so hot, and for a good moment the two of us leaned into each other, gently touching and teasing each other.",
        "Kissing me intensely for a moment, Leah then parted and said, \"Why don't we do something more than touch?\"\n\n\"Yeah?\" I asked, slipping a finger inside of her and loving the sounds it got from her. \"Got anything special in mind?\"\n\nLaughing once through her moaning, she let go of me and pushed me onto my back on the blanket. \"I've got a good warm-up act.\"\n\nSwiftly, she rotated on her knees and crawled beside my head, then straddling my face. Her dripping pussy was a matter of inches away from my mouth, her scent filling my nose. I quite liked the way she smelled, and wanted a taste rather desperately.\n\n\"I hear you really like eating pussy,\" Leah said, rocking her hips slightly above me, flexing her glistening lips.\n\n\"You hear correctly,\" I replied.\n\nShe reached down and took my cock in her hand once more, jacking me and spreading the precum generously. Leah gently squeezed and caressed the head, causing me to hiss and groan with need.\n\n\"Well,\" she said, bending down and placing a soft, sensual kiss on my cockhead. \"Lucky for you, I really, *really* love sucking dick.\"\n\nWith that, she quickly sucked the head into her perfect lips while settling her hips down on my face. I opened my mouth to accept her, suckling on her savory pussy lips and exploring her depths with my tongue. After an achingly long period of time where we avoided touching one another, finally getting a chance to feast drove me wild. I dug into her pussy, devouring her as if she were my last meal and completely and utterly savoring the way her body conformed to mine. Every shudder, every quiver, every low moan that vibrated through her body, fuck it felt good to pleasure Leah Sartori.\n\nThe feeling seemed quite mutual for the way she was taking on my cock. Though her mouth was rather well stretched to the max, that didn't stop Leah from lavishing attention first on my cockhead, then taking in inch after inch until she managed to suck down my entire length. This, alone, would have been difficult enough to hold myself back during, but with how excited the earlier portion of the ritual had gotten me, it took the greatest restraint to keep myself from cumming deep down her throat here and now.\n\nOnly... why was I holding back? Leah had begun bobbing on my cock, her lips and tongue and throat squeezing me, caressing me, coaxing me so perfectly. She wanted me to cum... I wanted to cum... I wanted to make her cum, and I kept my efforts up at that, but it wasn't looking like we were going to get there at the same time this time.\n\nDifficult as it was to give her pussy up for even a moment, I pushed her off my mouth and warned her, \"I'm gonna cum soon...\"\n\nLeah pulled her mouth from my cock for just a second, saying smugly, \"Good.\"\n\nWith that, she opened wide again, sucking the head between her lips and lavishing attention on me with her tongue. My cock was in paradise, throbbing and ready to burst with this pagan goddess worshipping me, coaxing me, begging for my cum with her mouth as I tried to make her cum with mine. As my balls twitched and the pleasure overwhelmed me, I could hold back no more.\n\nI grunted heavily into her pussy as my orgasm overpowered me, my cock shooting off an utter torrent of cum. Leah suckled at it intently, her lips forming a nice vacuum as she swallowed every last drop, her tongue coaxing every bit possible from me as I felt myself go weak from her attention.\n\nShe was right, I could tell she really did love sucking dick.\n\nAs the last drops flowed from my cock, she sucked one last time before breaking the seal, then playfully licked the tip. I shivered at the contact, then gave a quick, firm lick to her clit in response.\n\n\"That's... one!\" she squealed, wriggling her hips as she sat up and pressed her pussy against my face. \"That is some really tasty cum, if you don't mind my saying.\"\n\n\"I don't,\" I said. Regaining some of my strength, I wrestled her off of me, planting her squealing on her back as I crawled between her legs.\n\n\"And you...\" I continued, licking her folds and enjoying how it made her groan, \"...have a pussy that tastes intoxicating.\"\n\n\"Glad to hear it,\" Leah replied, reaching up and pulling off both her crown of sticks and necklaces of stones. She explained, \"I love the look and what they add to the spell, but they're less fun for the other parts.\"\n\nI leaned in, kissing her clit firmly again. \"Like lying back while I make you cum very fucking hard with my mouth?\"\n\nAs I continued licking up her delicious juices, Leah whimpered, \"Yes... much like that.\"\n\n\"Then it's a good thing you've taken care of that already, isn't it?\" I teased, running the tip of my tongue over her clit.\n\nGroaning heavily, she wrapped her legs around my neck and pulled me in. \"Just make me cum, and try to get hard while you do it... I have delicious plans for you.\"\n\nWith my face forced into her pussy, I didn't have a hard time getting hard for Leah again. Every square inch of her lithe, olive-skinned body utterly radiated sex, and I don't know if it was the spell or simply how hot she was, but I found it very easy to recharge.\n\nThe sensation seemed rather mutual, as it didn't take very long for her to be moaning, running one hand through my hair and squeezing one of her tits with the other as I ate her out.\n\n\"I have heard a lot about you, Ryan... from friends, from colleagues, from rumors...\" Leah purred, rocking her hips against my face. \"I've heard many things, some of which sounded positively mythological, but I will say this with some... fuck... some certainty: they have understated the true power and skill your tongue possesses.\"\n\nI could have quipped back, said something playful before going in for the kill, but by this point, I was hungry. I had seen Leah have a relatively quiet orgasm from her own efforts, but with my tongue buried deep inside of her, I wanted to make her fucking scream.\n\nAnd so, I gave her everything I had. I fucked her with my tongue, I suckled at her clit while alternating between heavy pressure and the lightest of contact, I reached up and helped her massage her modest in size but perfect to the touch tits. While she may have been quieter earlier when touching herself, as she looked down at me, I could feel her walls break down. Her restraint was falling apart a piece at a time, and when she finally began to tense up for what I knew would be a big cum, I went in for the kill, nibbling gently at her clit.\n\n\"Oh, FUCK!\" she cried out, her legs tightening around my head as another orgasm overtook her. I lapped up everything I could, but with this heavy cum, she gushed, leaving me fairly helpless as she came all over my face. I didn't mind the juices, licking every ambrosial drop of her pussy juices up as if they were the last thing I'd ever taste. This, in turn, kept her cumming for quite a bit longer as I worshipped her lips, but Leah never once complained at the attention.\n\nShe calmed after a fair while, her breathing ragged as she finally let me go with her legs.\n\n\"Wow...\" Leah moaned, looking down at me with half-lidded eyes.\n\n\"You think that was a good offering for your spell?\" I asked.\n\nShe smirked. \"Let's not get ahead of ourselves here. I still mean to get two more orgasms out of you.\"\n\nSlowly, I climbed over her, taking a moment to lick and nibble at her nipples before putting us face to face. My heavy cock rested against her inner thigh as we looked at each other, the head brushing lightly against her swollen, slick pussy lips. She kissed me, licking some of her juices from my face and mouth. Our tongues battled for a moment before I finally broke away from her.\n\n\"Then we should get started on that, shouldn't we?\" I suggested.\n\n\"Yeah?\" Leah taunted, reaching down and grabbing hold of my cock, rubbing the head against her pussy. \"You love spellwork that much, or are you just interested in burying your cock in a sexy witch's tight cunt?\"\n\nI kissed her deeply again, pressing forward slightly with her guidance. I felt her tight lips open for me as her pussy slowly welcomed my cock.\n\n\"Maybe both... but I think you're loving my cock...\" I grunted, thrusting forward, pushing the head of my cock into her pussy.\n\nLeah's eyes shot open. \"Oh, GODS, YES!\"\n\nShe kissed me passionately, smiling up as she locked her legs behind my ass and forced a few more inches into her clutching cunt.\n\n\"I thought so,\" I grunted, savoring the tightness of her pussy as I thrust in and out gently, forcing a little bit more inside of her with every push forward.\n\nHer eyes rolling back briefly as her mouth fell open, Leah then looked up at me and said, \"Are you always this smug when you're having sex?\"\n\n\"Not always,\" I said with a final, firm thrust, burying the last few inches of my cock inside of her achingly tight cunt. \"But I've found more confidence over this past year, and I'm learning to embrace it... fuck, your pussy's tight.\"\n\n\"I know,\" Leah whimpered, her voice shaky as she looked down to where we connected. \"Fuck, all of that... it's inside of me.\"\n\n\"Yeah,\" I said, twitching my cock inside of her. \"You had it all down your throat a moment ago.\"\n\n\"Big difference,\" she groaned, squeezing my cock with her pussy muscles. \"Big, big difference; I've never had that much cock in me.\"\n\n\"A bad difference?\" I asked.\n\nPulling me into her with her legs wrapped around my ass again, Leah answered huskily, \"Ryan... fuck me. You still owe this spell two more cums, remember?\"\n\nI started fucking in and out of her at a deliberate pace, but with her feet, she encouraged me to go at her harder.\n\n\"Come on... you can do better than that...\" she taunted.\n\n\"Just didn't want to mess with... fuck... the sanctity of your ritual,\" I grunted.\n\n\"The part that requires focus, oh, wow, keep going, like that... that part's done; now we fuck hard enough for the gods to hear us!\" Leah roared, wrapping her arms around me as I took her cues and fucked her harder.\n\nIf she was sure we weren't going to screw with her spell, who was I to say no to fucking her harder? She had a silky, tight and oh so hot pussy, embracing my cock with every thrust and holding me every time I pulled back.\n\nThe night air was cool and peaceful, but you wouldn't have known it for how hot the two of us were fucking each other. Looking down into her lovely eyes and at her beautiful, painted face, I found a certain clarity, maybe even a greater understanding of what we were doing here. As our separate pleasures became one and our animalistic, raw and purely sexual sides took over, I could feel a strange, if familiar, energy building within me. This was something more than sex, something special... something that made me feel contentment on a profound level that made everything seem oh so right.\n\nI grunted, she moaned as I fucked deeply into her. She unlocked her heels from behind my ass, no longer needing to guide me in such a frantic, intense fuck. We looked into each other's eyes, occasionally kissing, but otherwise we were so lost in this joining I doubt either of us could have said where exactly we were. Maybe Earth, maybe some transcendent place beyond like Olympus or Valhalla. I couldn't say where, and I didn't care as long as this intense fuck was allowed to go on.\n\n\"Okay, okay, you've had enough,\" Leah said, pushing against my chest, then rolling us over so she was on top of me. \"My turn.\"\n\nThis naked pagan goddess sat on my cock like a queen sitting on her throne, with a look of abject confidence and superiority on her face as she became accustomed to my cock in this position. She ran her hands up her body, gently teasing herself before cupping her tits and flicking her nipples with her thumbs. It was a painfully erotic sight, matching quite well the sensations of her pussy on my cock.\n\nLeah stayed here like this for a moment, still and savoring my cock buried deep in her pussy. I reached for her, running my hands over her magnificent ass, up her sides, and eventually to her hand-covered tits. She let her hands drop away so I could better cup and gently squeeze her magnificent B-cups, enjoying her moans as she closed her eyes and raised her hands above her head in the most luxuriant of looks.\n\nThen, looking down at me, Leah began to writhe on my cock. I don't know a better word for it really, but she flexed her ab muscles as if slowly belly-dancing on me, squeezing my cock in unison with her gyrations and causing me to groan.\n\n\"Neat trick, huh?\" Leah said, confident. \"I was never the best student in dance class, but I picked up a few things here and there.\"\n\nOverwhelmed by the sensation as she continued to gyrate on my cock, all I could say in return was a whimpering, soft, \"Wow.\"\n\n\"Considering how many girls you've been with, I'm going to take that as a compliment...\" she replied, biting her lip. She stopped gyrating, then dropped her hands down to my shoulders, looking at me lustily.\n\n\"But I want that cum... and I'm going to have it,\" Leah continued, her eyes full of fire as she began to rise and drop down onto my cock, rhythmically riding me as if her life depended on it.\n\nIf she had any nervousness or restraint, it was long gone now, as Leah became a wild beast under the clear night sky. She howled and moaned, cried out and whimpered as she roughly rode me, fucking me so hard I could only do so much to keep up with her. Ultimately, I settled my hands on her ass, helping her ride, guiding her up and down as she fucked my cock with a savagery I never would have expected from the mellow girl I knew at school.\n\n\"Fuck me, Ryan, fuck me harder... help this cock-hungry witch finish her spell, do it, fuck me like you mean it, fuck me like I deserve it, but give me that cum, give me that fucking cum deep inside of me, put it in me, cum in me, cum in me, you know you want to, you know it will feel so good, you know it's what you fucking want, what you fucking deserve, give it all to me, every last drop, cum for me... FUCKING CUM FOR ME!\" she roared, scratching her nails across my chest in a way that didn't seriously hurt, but got my attention.\n\nI was lost by this point, consumed by passion and pleasure as she rode me with all she had. I could feel my balls swelling, boiling with another thick load of cum that she needed from me. I couldn't tell for sure how close she was to cumming, but this time I wanted to line us up together. So, holding back as best I could, I reached down to where our sexes met and fingered her clit. It was no easy task while she was riding me this hard, but with her eyes opening wide and her smile broadening in a very pretty way, I knew I was going in the right direction.\n\n\"Yesyesyes, keep going, like that, keep doing that, you'll make me cum, and if I cum I'm gonna make you cum, and we'll have all the cum... yesyesyes, do it, do it, do it, make me cum so I can make you cum, do it like that, like that, please, fuck, do it, do it... FUCK, I'M CUMMING! I'M CUMMING! CUM FOR ME!\" Leah roared as her pussy clamped down on me.\n\n\"Fuck,\" I moaned, my eyes rolling back from the bliss running through my body. I held back no more, cumming deep inside Leah's pussy. It felt like everything I had was being drained into her, replaced by a simmering yet overpowering pleasure as she milked every last drop out of me and drew it deeper into her soaked, clutching cunt.\n\nWe were like this for a while, before she collapsed onto me, sweaty and panting. Leah kissed me enthusiastically, smiling and giggling slightly as she claimed my mouth with her own.\n\n\"That's... two,\" she moaned, squeezing my cock with her pussy and holding me close.\n\nI groaned, reaching up to gently pinch one of her nipples as I kissed her back. \"Only two?...fuck...\"\n\n\"What, think you can't make three?\" she taunted, pulling off of me and lying down beside me, a river of my cum pouring from her well-used cunt. \"Fuck, I'm a mess.\"\n\n\"I never said I couldn't make three,\" I replied, \"just that I'm going to need a bit of a breather.\n\n\"Take all the time you need,\" Leah said, looking up at the sky. \"It's a beautiful night.\"\n\nI turned to look at her, and agreed, \"Yeah. It really is.\"\n\nIt took a moment of us lying together for that clarity I had during sex to return to me, but when it did, I rolled onto my side to better look at Leah. She still looked rather satisfied in her post-sex haze, tracing her fingers over some of the designs I'd painted on her chest.\n\n\"So... now that I'm thinking a little more clearly, I've got a couple things I want to talk about,\" I said.\n\n\"Fire away,\" Leah said, running her hands down to her pussy, where she played a bit with my cum. \"I'm not going anywhere for a while.\"\n\n\"Well...\" I began, not sure about the most delicate way to ask this. \"How long have you been casting this spell?\"\n\n\"This spell? This is the first time I've been able to pull it off like this. I've performed a couple simpler versions the last couple years, though. Why?\" Leah asked.\n\nI shook my head. \"It's nothing.\"\n\nShe turned to face me. \"No, now you've got me curious.\"\n\nI smiled a little uneasily. \"Well, I know I'm not the only one who's noticed some of the more... curious aspects of our town.\"\n\nLeah laughed. \"That's a diplomatic way to put it.\"\n\nI continued. \"And I've heard people speculating on it, that it might be something in the water, but I was wondering if you might have been making it happen with magic.\"\n\n\"Oh, if only I were that powerful,\" Leah replied, shaking her head. \"But I know this town's been home to big-titted and big-dicked sex maniacs since long before we were around.\"\n\nI shrugged. \"I had to ask.\"\n\n\"And I completely understand; with the limited evidence you have on hand, it would seem a natural conclusion. You said there was something else you wanted to talk about?\" she continued.\n\nThis was a bit of a different challenge to put into words, but I did the best I could. \"This past year... I've put my skills to work on occasion to meet my own ends. Like this past December, I set out to thank a lot of girls, and apologize to some of them, for things that had happened this past year. I think, though, I'd like to do more than just react. There are a lot of women out there who are lonely, or horny, and I can probably help out with that if I start more actively putting myself out there.\"\n\nLeah smiled at me with a look somewhere between amusement and warmth. \"You know, if it came from any other guy, I'd have called you one of the most conceited people in town.\"\n\n\"But I'm not any other guy?\" I asked, hopeful.\n\nShe leaned in, kissing me. \"I wouldn't have let any other guy get this far. And I think you're right. You're considerate, you're good at this, and you've got a way of making a girl feel special. Why not put your skills out there to the lonely, the longing, and the unlucky in love?\"\n\nJennifer Cage's face passed fleetingly before my eyes in that moment, but I wouldn't let it stay there, not when I had Leah's undivided attention.\n\n\"Exactly. This is supposed to be the month of love and lust; I'm sure I can help at least one woman with that,\" I said.\n\nLeah playfully grazed her fingertips over my side, causing me to shiver. \"Oh, I highly doubt you'll stop at one.\"\n\n\"Me too,\" I admitted, conscious of how this year had gone. \"But I don't want to sound too full of myself.\"\n\n\"I think you've earned the right to be a little full of yourself, the kind of year you're having...\" she said, her hand dropping down to stroke my cock. \"...I know I've enjoyed being full of you.\"\n\n\"I thought so,\" I replied, reaching behind her to grab her ass. I did this to pull her closer, but the way she groaned, I could see Leah rather enjoyed the attention.\n\nShe bit her lip, moaning softly. \"You like my ass?\"\n\n\"Yeah,\" I answered, without hesitation.\n\n\"Every guy likes my ass. I'm not as gifted up top as a lot of girls in our class, but I've got the ass to make up for it,\" Leah replied.",
        "I reached up with my other hand, caressing her one of her nipples. \"Hey, I like your tits, too.\"\n\nShe shivered at the contact. \"I'm sure you do, because you're something special... but if you like my tits, you'd love my ass... spank me, please...\"\n\nFor this last request, her voice dropped to a needy whisper, her eyes looking up at me with a hot desperation. I wasn't going to deny that request.\n\nSMACK!\n\nIt was one firm, hard slap, and she moaned lustily as I swatted her ass.\n\n\"Again... fuck...\" Leah groaned.\n\nSMACK!\n\n\"Again!\"\n\nSMACK!\n\n\"Harder!\"\n\nSMACK! SMACK! SMACK!\n\n\"So fucking good... fuck, getting me so fucking wet...\" Leah moaned, pulling herself closer and kissing me wildly. If she was wet, I was rock hard from her jacking me and the spanking, and I was feeling very ready to take this to the next level.\n\n\"You want a third out of me... I think I can provide that,\" I said.\n\n\"Good,\" Leah said, letting go of me and getting up on her hands and knees. Her pussy still dripped with our mutual juices, and looked utterly inviting.\n\n\"Because I still expect everything you promised... and more,\" she said, looking over her shoulder at me. \"Now fuck me again, Ryan.\"\n\nWithout saying a word, I got on my knees behind her, slid my cock back into her pussy, and buried myself to the hilt. Leah cried out, fucking herself back against me as I grabbed her hips and pumped in and out of her with what felt a blinding speed. There was little reason to talk, little ability to, really, as we grunted and moaned, loudly voicing our pleasure as we fucked hard enough for the ancient gods to hear our plea. At her encouragement, I slapped her ass, the sharp cracks echoing out through the night as I watched her ass jiggle and redden with every sharp strike.\n\nMore than that, I found myself looking down at her ass, between her cheeks and to her tight, winking asshole. As we fucked savagely against one another, I found myself wondering just how proud of her ass Leah truly was.\n\nShe looked back at me, almost as if she had read my mind.\n\n\"You wanna fuck my ass, don't you?\" she asked, squeezing me slightly with her pussy.\n\n\"Yeah,\" I admitted, not even considering dressing up my words.\n\nLeah reached to her nearby altar, grabbing a small bottle of lube she had stashed there. \"Then do it.\"\n\nI licked my lips in anticipation, and though it was with the greatest difficulty from how good her cunt felt, I pulled out of her pussy long enough to apply lube to my cock.\n\n\"Do it... get it nice and lubed and ready for my ass... fuck, I haven't done this in a long time, you're gonna wreck my ass, and I'm gonna love it...\" Leah said in a painfully sexy, husky voice, looking back over her shoulder with one of the hottest looks I'd ever seen on a woman's face. \"Put it in me... do it... do it...\"\n\nNow thoroughly lubed, I tossed the bottle aside and lined my cock up with her tight asshole. There was little hesitation on either of our parts as I pushed forward, but that didn't make it any easier as I forced my way inside. Looking back at me, Leah moaned and grimaced, biting her lips and looking back at me with wild, desperate abandon. I forced my way into her a little at a time, feeling her ass open for me before the head popped inside.\n\nI hissed as her tight ass embraced me, threatening to make me cum then and there. She cried out, in pain, in pleasure, something in between perhaps. Leah pushed back against me, forcing inch after agonizing inch of my cock deep inside of her tight, forbidden hole. I grabbed her by the hips, guiding myself forward and pushing in deeper until I was buried entirely within her.\n\nWe both stayed like this for a moment, savoring, understanding the fit, the two of us looking into each other's eyes in silent appreciation for what we were doing.\n\nAnd once that moment was up, I began to fuck her. Hard.\n\nI fucked her ass with a brutal speed that had her squealing and begging for more, pounding back against me as she cried out to her goddesses and we made dark, blissful magic in her backyard. I fucked her ass like I had never fucked a woman's ass before, savoring the tightness, the dark forbidden nature of it all, grunting and exclaiming and giving her everything I had.\n\nSomewhere a few minutes into this fuck, Leah reached between her legs and began to finger herself. I felt her cum at least twice after she started doing this, the second one gushing hard enough to splash my inner thighs. My balls swelled again, savoring the tightness and the brutality of this fuck as Leah kept me going.\n\nWhen I warned her that I was about to cum, she pushed herself off of me, lying on her back and encouraging me to straddle her chest. Seeing what she wanted as she stuck her tongue out and opened her mouth wide, I jacked my cock furiously until I was cumming yet again. I hosed down her face, her neck and her tits with one last, messy round of cum, an orgasm that threatened to take everything from me for how hard I'd worked for it. She kept me upright, holding me in place and even leaning in to suck on my cockhead to get every last drop out of me.\n\nPanting, I looked down at her and said, \"That's... three.\"\n\nGulping down a mouthful of my cum, she said, \"That's three.\"\n\nAs energy fled my body, I said, \"So... as spells go... how's this one rank?\"\n\nSmiling and licking her cum-covered lips, Leah said, \"Pretty close to the top.\"\n\n\"You'll have to tell me about the top,\" I said.\n\n\"Maybe while we're getting cleaned up,\" she replied.\n\nI reached down, squeezing one of her cum-covered nipples and enjoying how it made her writhe beneath me.\n\n\"Before we do that, do you mind if I...?\" I said, looking over toward my pants.\n\n\"Get a picture?\" Leah finished. \"Go for it.\"\n\nI smiled, reaching for my phone and finding myself very, very satisfied.\n\n***\n\nI walked through the front door of my house, tired and achy but happy with how things had gone. I looked at the picture of Leah Sartori, covered in the painted symbols and my cum and looking rather delightfully depraved. It brought a stirring in my pants, even though I was dead tired, one that reminded me of the long, hot shower I took with Leah afterwards to clean off the paint and our mutual juices... of fucking her against the shower wall one last time, and then in her bed afterward, filling her pussy twice more because she was so achingly hot.\n\nSo, yeah, I had a busy night, but it was worth it. I was happy, I was satisfied, and I had a drive for the month that I hadn't expected when I signed up to help her with this spell.\n\nOpening the door to my bedroom, I wasn't surprised to see Josie and Brooke lying down on my bed, though both of them being dressed somewhat was a surprise. Both of them wore tank tops and comfy panties (black for Josie, pink for Brooke), and seemed to be having a grand time chatting and going through homework. There was something so utterly casual, familiar, *home* to them that I couldn't help but feel a warmth grow through my body just looking at them.\n\n\"Hey,\" I said, smiling at them.\n\n\"Yay, he's back!\" Brooke replied, bouncing over toward me, throwing her arms around my neck and kissing me deep. \"She didn't leave you too fucked out now, did she?\"\n\nWithout looking up at me, Josie said, \"It's Leah. She left him all fucked out.\"\n\nShamefacedly, I nodded.\n\n\"Well, shit,\" Brooke pouted.\n\n\"I can still cuddle,\" I amended, walking into the room and getting undressed.\n\nBrooke brightened. \"I love cuddling!\"\n\n\"Good,\" I replied, \"Because that's about all I'm good for.\"\n\n\"Like I said,\" Josie added. \"It's Leah.\"\n\n\"It's Leah,\" I said with an exhausted, but very happy sigh. \"You two keeping out of trouble?\"\n\n\"Yup, just homework here,\" Josie said, looking up at me as I approached her and arching her neck so I could kiss her. Looking at the bed, I couldn't help but see that some of the Valentines I'd found at my locker spread out on the bed next to them.\n\n\"Well, homework and checking out your pile of cards,\" Josie admitted.\n\n\"You got some hot chicks in there,\" Brooke said, bouncing over to the bed and lying down beside Josie. \"Mallory, Izzy, Nica, Fatima, Brianna... say, how come you and Brianna haven't hooked up yet?\"\n\n\"Scheduling, mostly,\" I replied, running a hand through my hair, not wanting to disappoint Brooke for not yet having fucked one of her friends.\n\n\"Well, you better find the time soon, she's crazy hot, and not always gonna be on the market,\" Brooke chided.\n\n\"She's right you know,\" Josie replied.\n\n\"Hey, I just got fucked into oblivion, I didn't come home for this,\" I joked, lying down on the bed next to them in now just my shirt and underwear.\n\n\"No, but it's what you're gonna get, because we're, like, your girlfriends; we love you, and it's our job to give you a hard time,\" Brooke joked.\n\n\"What she said,\" Josie agreed. \"The love's there, but so is us giving you a very good-natured hard time.\"\n\n\"So,\" Brooke started, leaning in to kiss me. \"You decided on who's gonna be your Valentine yet?\"\n\nThis wasn't a trick question, right? \"Well, you two, obviously.\"\n\n\"Obviously!\" Brooke giggled.\n\n\"Obvious, and predictable. We're working on a surprise for you for Valentine's night, but there's a whole day to go first. Tell me you hadn't thought of slinging dick around town before you got down to us?\" Josie said.\n\nAh, they knew me so well, didn't they?\n\n\"What kind of surprise?\" I asked.\n\nBrooke poked me in the chest. \"Silly, it wouldn't be a surprise if we told you, would it?\"\n\n\"I guess not,\" I replied.\n\n\"You'll like it,\" Josie returned. \"Just, let us surprise you, alright? And tell us if you're planning on slinging dick?\"\n\nI shrugged. \"I was thinking I would. I did a lot of thinking tonight while I was with Leah and...\"\n\nI looked at the cards on the bed. \"Any chance you two can tell me who does and doesn't have dates for Valentines from this list?\"\n\nJosie stopped doing her homework, turning to face me and raising an eyebrow. \"I get the sense you've got another of your crazy month-long plans here, probably related to the hopeless romantics of Regan Hills?\"\n\n\"And if I do?\" I asked. \"I mean, I haven't fully planned this one out yet, but I've got an idea, and the motivation, and, I mean, I know how it sounds, but I'm not going to treat this like I'm doing them charity work or anything, I really want to give these ladies a good time...\"\n\nJosie thought about this. \"Then you know we're gonna help you, right?\"\n\n\"Yeah?\" I replied.\n\n\"Totally,\" Brooke said, kissing me again and running her hands over me. She threw one of her legs over one of mine and began to start grinding on my thigh, and I knew that if I didn't stop her, she'd probably hump herself to a good quick cum soon. But, why would I want to stop her?\n\n\"Fantastic,\" I said, reaching for my phone.\n\n\"So, you want our help, looking for the hopeless romantics, the needy and the horny with no outlets for Valentines?\" Josie asked.\n\n\"And maybe a bit after, I mean, why ruin a good month-long plan by cutting it off in the middle?\" I said.\n\n\"We can do that,\" Josie replied. \"Shouldn't be too hard. And what will you be doing?\"\n\n\"Following some of my own leads,\" I said, scrolling through my contacts before I found the name I was searching for.\n\nWhere there might have been some hesitation in the past, I now typed my message to Jennifer Cage with a quick confidence.\n\nMe: My place. After school. Day after tomorrow. We'll begin your lessons.\n\nI might have been overly hopeful still holding the screen up, but that hope was justified when Jennifer texted me back a matter of moments later.\n\nJennifer: Thank you. I will be there.\n\nSmiling, I sighed and set my phone down on the bedside table. Though I had been a student in many ways when it came to sex these past few months, I was now being looked to as the master, and while that responsibility was great and terrible in many a way, it was one I thought I was finally ready for.\n\n***\n\n(Author's Note 2: Writing this story is something I do in my spare time for fun, so if you're enjoying this, please, please, please drop some stars, reviews or shoot me some feedback, as they really keep me going (and please vote on any earlier chapters you enjoyed if you haven't already!). Though I may not always respond, I do love hearing from all of you and seeing that you're enjoying the series. It motivates me to continue writing more. You've all been wonderful and I can't thank you enough for all of your kind words and encouragement and yes, even the constructive criticisms!\n\nAnd after some recent crises and battles, I want to add one last note on a more practical concern. When it comes to mental health, I hope everyone out there is taking the time to take care of themselves. Mental health may seem like a never-ending battle, but it's a never-ending battle that is always worth fighting, and one that there are plenty of resources to be found to help with should you ever be struggling. Be good to yourselves, and to everyone else.)"
    ],
    "authorname": "aimingtomisbehave33",
    "tags": [
        "18-year-old",
        "high school",
        "slut",
        69,
        "anal",
        "creampie",
        "big cock",
        "wiccan",
        "oral sex"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/senior-year-memories-ch-33"
}