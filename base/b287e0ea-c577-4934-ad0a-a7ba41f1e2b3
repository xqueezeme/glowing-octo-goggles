{
    "title": "Dialogue: The Eternal Problem",
    "pages": [
        "Thanks are due to '3113', who, despite a heavy workload, offered thoughtful, intelligent advice and comments. Bless you, thirteen, whoever you really are.\n\n*\n\nLiterotica specializes in erotic stories. OK, we all know that. So obviously, sexual union and communication is high on the theme list, and one of the things people often do when they communicate sexually is communicate verbally as well. But a whole lot of the dialogue on Literotica pages is profoundly unreal, whether the characters are merely talking, exchanging plot information, preparing for sex or love, in the throes of lust or passion, or chilling out afterwards. Why should this be? (Yeah, I know, there are plenty of honorable exceptions, but that's not the point here... yet).\n\nWell, some of it's down to style and subject matter. Slut wives, talking vegetables, zombies, basic stroke stories, the purer adventures in fantasyland, don't demand realistic protagonists and don't usually need to develop characters into credible human beings. These stories aren't aiming for realism. But to take a theme like 'romance', or 'incest', or 'mature', or 'group sex', and to create believable people with motives and needs and reactions that will persuade the reader to suspend belief and think of them as real, if only for a moment : that takes a little more work.\n\nWhen you've got the time, try this little experiment. Rig up a recorder with a decent mike, invite a couple of friends over, and start talking. As the awareness of being recorded fades you'll begin to talk more naturally. (Better still, don't tell them). Record enough to get a whole chunk of how you and your friends sound when you're talking casually. Doesn't matter what it's about: baseball, cooking, work... (If you're really brave, tape your lover and yourself when you're preparing for / doing / relaxing after sex/love). When you play that sucker back, listen carefully. Let me make a few predictions about what you'll notice.\n\n\u2022 People don't talk in sentences. \n\n\u2022 People contract words, often whole phrases. \n\n\u2022 Words get mangled and slide together\n\n\u2022 People do not use each other's names very much. \n\n\u2022 People don't all speak the same way. \n\nLet's expand these findings, and see what we can do with them:\n\n\u2022 People don't talk in sentences. They think they do, but no fucking way. Grammar-free clauses, hesitations, corrections, repetition, meaningless interjections, sudden changes of subject... everything but clear, concise, grammatically correct pronouncements. Bummer. One of the things we could do here is just transcribe what people say. But unless you're a genius, transcription isn't the answer. You're writing a story, and your readers are going to need some help. Not too much though, or the dialogue will sound like a shopping list. Try this: transcribe part of what you've recorded and see the patterns, the rhythms, where the stress falls. Now write down what the person actually meant. There's a middle road here, and if you can identify it, so that the marks on the page echo the words in your head, you're on the way. In the following short example, stressed words are indicated in CAPITALIZED ITALICS.\n\nReal person as recorded:\n\n\"So, um, I went to her HOUSE...ah...the NEW one...um, it's got this YARD? Have you SEEN it? Well it's kinda...REMEMBER her OLD place? Well...it's like... I mean, the OLD place had all these...um, BUSHES AN' SHIT... an' THIS one...\"\n\n(No-one's going to want to read more than ten lines of this, and who can blame them? But, you've done two things. You've found the information words that are stressed in natural conversation, and therefore you've got the rhythm that this speaker uses. Now you can tidy it up without losing either).\n\nCharacter's statement as written dialogue:\n\n\"So, I went to her HOUSE, the NEW one, and before, in her OLD place she had a YARD that was just FULL OF BUSHES and stuff, and THIS one....\"\n\n(Of course, you're not going to put the capitals in, but the speech has the same rhythm and patterns as the spoken transcript, and it reads more naturally than):\n\n\"I went to her new house and unlike her old one, which had a yard that was full of shrubs, the new property...\"\n\n\u2022 People contract words, often whole phrases, a usage which is called, technically, 'ellipsis'. There isn't a single native English speaker in the world who says 'I will', or 'He is', or 'They are not'. It's 'I'll', 'He's', 'They aren't', unless they are emphasizing or contradicting a point, or the phrase is inverted as a question, or it comes at the end of a sentence ('I'm cold, are you?' ... 'Yes, I am.'). How much ellipsis you use depends on your style, the story, the characters and the context, but it happens everywhere. Try spending a half hour not using these common contractions. First, you'll find it almost impossible, and second, your friends will wonder what the hell's wrong with you. If your characters' dialogue doesn't reflect this then you're kidding yourself and shortchanging your readers.\n\n\u2022 Words get mangled and slide together. Writing this is harder. I use, e.g., 'wanna' and 'gonna', etc., when I'm writing about American characters, but I try to take care not to overdo it, or it looks like a bad attempt at dialect. Once again: style, story, characters, and context. \n\n\u2022 People do not use each other's names very much when talking to each other, unless the conversation is very heavy or formal. We use eye contact to tell someone we're addressing them. In large groups, names are used to attract someone's attention, but not nearly as much as you might think. On the other hand it's a useful tool for the author if the speaker might otherwise be difficult to identify and you don't want to use 'he said / she said' the whole time. Local call.\n\n\u2022 People don't all speak the same way. If you've got two characters conversing, and one is an old guy, grumpy, no college, been a mechanic all his life, and the other is a highly educated investment banker who's got an appointment at three and wants her car fixed now, they aren't going to sound the same. Different rhythms, different pitch, different vocabulary. Take your own voice away. Write the scene in a grossly exaggerated way, then pare it down until the essence of the characters is there in the way they speak. It's always harder to cut stuff out than to add it, but it's always the better way to attack the problem, and it nearly always leaves you with something cleaner and stronger than the unfocused page you started with. Do this right, and the characters will resonate in your readers' heads for a while.\n\nPeople talking to each other in real life get round the grammar problem by punctuating their speech with pauses and tone changes. These are hell to transcribe. (Try to forget those little green lines that your spellchecker keeps inserting. It's designed for text, not speech, and it's dumber than my dick anyway). Written punctuation marks, used carefully, can go a long way towards telling your readers what the character's tone of voice, pitch, etc. is up to. When you're offering someone a drink in an intimate or casual situation, you probably say 'Coffee?', or 'You wanna coffee?', and not 'Would you like some coffee?'. It's not grammatically correct, but it's how people speak. On the other hand, if it's Great Aunt Eliza who's gasping for a drink, you're probably a lot more formal, especially if she's rich. \n\nNow then, as we said, this is Literotica, and our characters spend a fair amount of time bopping each other's socks off, and rarely in total silence. What you and your lover say in bed is usually private, often silly, and sometimes weird. But here are some things I really don't say: maybe I've lived an unadventurous life...\n\n\"You are so hot\", \"That is so nasty\", \"Beg for it you fucking slut\", \"I'm gonna fuck your tight pussy.\"\n\nAnd here are some of the things that have never been said to me:\n\n\"I love the taste of your cum\", \"Make me your slut\", \"Fuck my dirty shit-hole\".\n\nI guess I've just never met the right people. But if I find stuff like that masquerading as dialogue in a sex scene I sigh and look for something else.\n\nLike I said earlier, if you're writing a simple stroke story, or an out-and-out (in-and-out!) fantasy, you can have your characters say what you like. But if you want them to have that third dimension, think carefully. Talking dirty does happen, and very nice too, but a little goes a hell of a long way. 'I am going to cum in your hot slut mouth you cocksucking wet cunt bitch.' isn't dialogue. It's one-handed keystroking.\n\nHere is a piece of bedroom dialogue I found that sucks. I've omitted names, for obvious reasons, but otherwise it's just cut and paste, as it appeared:\n\n\"So what do I do first for you? What would you like me to do for you to please you? You are the teacher today OK?\" \n\nI smiled and told him: \"Are you sure? You wouldn't want me to suck you off or sit on your cock and ride it until you cum? I know you like both of those!\"\n\nHe smiled and said: \"Well they both sound great, but is that what you want me to do for you? Would you rather have me eat and suck your pussy, or slowly work on your body and make it cum hard and long before we fuck? Your choice, just give me directions!\" \n\n(If you heard that in a movie, you'd rupture yourself laughing. Read it aloud to yourself and then say: 'Hey, these characters are really credible. They sound filled with lust for each other.' Now go wash your mouth out with soap for telling naughty lies). \n\nOne of the problems with dialogue in bed is that just dialogue isn't usually enough. Unless there is some descriptive text as well the characters have to say far too much, far too explicitly, and far too often. People don't usually describe what they're doing (or are going to do) to their lover... at least I don't think they do.\n\nIf I were writing this scene, and if I wanted to keep to the narrative thread, I might produce something like this:\n\n\"You're the boss, sweetheart.\" His voice was thick with desire, but still soft and reassuring, and he smiled. \"What's your pleasure?\" I shivered internally but decided to play his game.\n\n\"You sure about that? Suppose I check out how this tastes, or how it fills me up when I'm riding you? Wouldn't that be better?\" I caressed his cock and felt it throb against my thigh: he smiled again.\n\n\"Hell of a choice. Or we could turn it round.\" His hand drifted from my breast to my mound. \"A little exploration here, maybe some attention elsewhere, and we'd still have all the rest waiting.\" He was stroking me lightly as he spoke and I felt my pussy dampening under his touch.\n\nOK, it's not perfect, but you might (just) imagine a couple saying something like that during foreplay, and it reads better than the original version by a long country mile. You could chop it down more if you wanted: \n\n\"Show me.\" His voice was thick with desire and I shivered.\n\n\"You sure? I could see how you taste, how you fill me?\" His cock throbbed \n\n\"Hell of a choice.\" He stroked my mound with knowing fingers. \"Here? Or maybe here? We'd still have all the rest waiting.\" I felt my pussy dampening.\n\nThat's probably pruned a little too much, but that's not the point. Style, story, character, context.\n\nAbove all, read your dialogue out loud: or at least, read it out loud to yourself, though in my opinion genuinely out loud is better. This can be depressing at first. There's nothing more disheartening than slaving over a section of dialogue, editing, rewriting, sweating blood, and then saying it aloud and realizing that it sounds like a High School graduation speech read by a near moron. Imagine how the conversation sounds in your head, and look at the screen carefully. Is the choice of words believable? If not, change them. Is that a rising note? Put in a question mark. Is that a pause? Put in an extra comma, or suspension marks or something to show your reader what this person is doing with their voice, what their words mean, what their character actually sounds like, how they feel and think and behave. Ten words of good dialogue can tell you more about a character than a hundred words of descriptive text.\n\nRead the good ones and learn. Literotica is great for that. Check out '3113', assorted 'kittens', (Selyna, Danielle, Flame), 'Dinsmore', 'Alex de Kok', 'Colleen Thomas', 'Stella Omega': of course there are more, plenty more, and I'm not omitting anyone deliberately, but those are the first ones that spring to my mind, mainly because they're the ones I've been reading recently. They're not infallible, no-one is, but we're not looking for Nobel Prize winners here, and if you want to see how characters are built without the author's voice intruding too much....'nuff said. \n\nNow three personal hates:\n\n\u2022 Exclamation marks suck, unless there's a truly excellent reason for them. People don't talk like that. Exclamation marks are for advertisements and the funnies. Two or more consecutive exclamation marks, and you're reading a no-brainer.\n\n\u2022 Long lines of capital letters describing the noises people make at the point of orgasm are laughable. Also, lazy and unrealistic. Here, a short line of descriptive text is nearly always better. Compare:\n\n\"AAAAAAAAAARRGGGGHHHHHHHH!!!!\" I / she screamed. \n\nwith\n\n\"A wordless cry of ecstasy was forced out of me / her.\"\n\nWhich of them gets your imagination going?\n\n\u2022 Tired clich\u00e9s: 'gallons of cum', 'my white-hot jizz', 'jackhammered into her', (I truly hate that one), 'love-tube', 'man-meat', 'man-pussy', (yes, I actually read that on this site. I think it means 'rectum'), fuck-tunnel', 'fuck-muscle'... come on, people: a child of three could be more original. If I catch one of these early on, it's the back button for me.\n\nI've been advised by a proof-reader / editor type person that this piece needs some links to other 'How To' submissions where some of the general points I've been trying to make are expanded, or which cover genres that I haven't touched on. The areas suggested in the first instance are\n\n\u2022 Historical settings / period pieces: Good point. Even fifty years ago slang was different; constructions were often more complex, things that people talked about were not always what we chat about today. The occasional \"Gadzooks\" or \"Forsooth\" or \"Man, that is so groovy\" isn't going to hack it.\n\n\u2022 Sci-Fi /Future worlds: You can have so much fun here, though I have to say it's not an area that engages me much. I suppose that style, story, character, context still holds good, but beyond that... I guess there's a 'how to' piece there waiting for someone to write it.\n\n\u2022 Writing dialect: a subject in itself, as it covers vocabulary, rhythm, word order, types of contraction... too much for this piece.\n\nThere have to be other mentions that are necessary, so I'm throwing this open to you: I don't have the time or the patience to plow through all the submissions in this section looking for the gems: if there's anything that you've found helpful or which has lit up that cartoon light bulb above your head, put it in the comment section with a link. Please.\n\nOne last point: none of these rules are golden. If you overdo punctuation, or contraction, or ellipsis, or anything, it won't work. You'll have gone too far the other way, and when you read it aloud you'll blush with shame (again). But use these hints judiciously, striving for the balance between clarity and realism, and you'll feel so good when you've done it... your work will be better... and your readers (and characters) will appreciate it too. "
    ],
    "authorname": "satyricon.21",
    "tags": [
        "writing advice",
        "dialogue",
        "writing dialogue",
        "author advice",
        "author how-to",
        "writing how-to"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/dialogue-the-eternal-problem"
}