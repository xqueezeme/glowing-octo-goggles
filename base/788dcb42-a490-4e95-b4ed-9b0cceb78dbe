{
    "title": "Stamp of Approval",
    "pages": [
        "All characters involved in sexual acts are at least 18 years of age. (So get your mind out of the gutter!)\n\nStamp of Approval:\n\nEros was in unfamiliar territory... He was at his desk; working.\n\nThe sculpted God had the system fool proof. There were just too many requests. If he were honest, he could have handled all requests on site personally, but it would have been a 24 hour a day event. Gone were the days where he physically had to shoot a person with an arrow. Instead, the prayers he receives are translated into paper form and one of four stamps, all immersed in his magic with a small arrow tip that pierces the paper, just need be applied. \n\nThere were two forms of 'No'. A grey version that would let the person down easy, downgrading the prayer to a fleeting thought and the other was a solid black which provided the person with a harsh negative response, typically in public to push the point across, and usually only necessary for the overly infatuated. There was a pink 'Yes' that was reserved for people who worried about loved ones, generally parents for their children, and it offered the equivalent of a long lasting comforting embrace. Lastly, there was a red 'Yes' that when used, provided the person to have an unbreakable, irresistible, telepathic love bond with someone else, linking two people together for life while creating devotion to one another. Due to the potency, it was to be used only when the same two people prayed for each other. If used only on one individual, whoever asked for the prayer would simply get a slave devoted to them through their love; not a relationship; everything a God of Love hates. To all other matters, the humans were on their own. It was so easy, anyone could do it; even a human. His current assistant, Francesca, was a capable and beautiful woman plucked from Scafati, Italy. She was also missing.\n\n\"I swear; whichever God borrowed my assistant for the day is going to pay,\" Eros grumbled as he stamped a grey 'no' on a sheet of paper before flipping to the next page. \"It's been ages.\"\n\nEros wouldn't do anything to the Gods directly. After the Love Debacle of the year 117 when he pierced every God on Mt. Olympus with love arrows out of spite, which took three weeks to get everyone to separate from the orgy and begin functioning again; he was forbidden from using his arrows on the Gods. But the God's assistants? They were fair game. Whichever God decided to mess with Francesca, there will be repercussions.\n\n\"Except for Zeus, I suppose,\" Eros shook his head in irritation. 'Zeus doesn't have assistants because all he does is throw lightning bolts to wherever he wants a storm. But seriously, couldn't he use his left arm once in a while? His right arm has muscles on top of muscles fortified by steel on steroids while his left looks like it belongs to ninety year old woman.'\n\n\"Ah, Seth Partridge and Samantha Rose,\" a smile etched Eros' lips. It was his favorite part of the job when two hearts want each other... The rarity nowadays is one of the main reasons he prefers leaving everything to an assistant now. He grabbed the red love stamp and firmly applied it to the parchment for Seth Partridge. He then located Samantha Rose's paper from the stack and stamped his red mark.\n\n\"Adam Ratliff? Again?\" Eros's eyes went wide at the name. It wasn't what it appeared to be. Adam wasn't looking for love himself, he was truly hoping for the relationship of his parents to survive; an absolute rarity for an eighteen year old in High School. He had heard his Dad hit his Mother, again. The problem was that Brandy and Edwin weren't fighting. A pair of red stamps themselves, they love each other too much. They were having sex; and it wasn't their fault that Brandy goes nuts when her husband spanks her. \n\nEros went to set the Red stamp down when his chamber door opened, \"Francesca!\" She stumbled into the room, clothes tattered. Eros rapidly stamped the sheet for Adam Ratliff four times, just to ease his tension, before racing to his assistant. He held her up as he guided her to a couch. \"Who did this to you?\"\n\n\"Dionysus,\" Francesca mumbled before passing out.\n\n\"At least it wasn't Athena or Zeus,\" Eros sighed. Zeus because he wouldn't be able to get him back and Athena because he really didn't want to get into a chess match using each others assistants as pieces. It would be easy to get back at the God of Wine, Parties, and Madness. His assistants are going to be so preoccupied with sex, they won't bring him a single drop of alcohol. \"Rest easy, Francesca.\"\n\nEros went back to his desk and flipped Adam's paper to the completed stack, not noticing that the four stamp marks were red instead of pink.\n\n*\n\nThe alarm began to sound. Adam's hand slinked out from underneath the evergreen comforter and swiped at the nuisance and then swiped at it again, finally silencing the offending annoyance. He didn't sleep well. He just couldn't get the smacks and grunts that he heard out of his head. Together, they always seemed overly, and sometimes embarrassingly affectionate and very much in love but at night... He wiped the sleep from his eyes before running a hand through his black hair. He didn't want to get out of bed, but knew his best friend's Dad would be at his house to give him a ride shortly and that man did not like waiting. He slid on his glasses and forced himself to trudge to the bathroom. \n\nThe first time Adam woke up to an empty house, it felt odd; but after three years, it became his personal sanctuary. His parents both needed to get to work early, each needing to leave at five in the morning to ensure they would both be on time; but they were always there during the evening for whatever he needed with the lone exception being their Date Night Friday's. In this time, he allowed his mind to wander between the rest of his senior year and whether he'd even have the grades to go to college, to his lack of a love life, to his next skirmish in Call of Duty, to how he can stay invisible to the cool clique. During the first week of school, he had accidentally tripped, causing him to spill soda on the platinum blonde cheerleader, Kelly Hill and the princess of Hilldale High, Serena Fisher with his spaghetti landing on the virtual male model and resident jerk, Liam Daniels. After that, life at school became a game of hide and seek. But today was different; today's thoughts were only about his parents.\n\nAdam followed his morning ritual; a shower, a brushing of his teeth, a shave, getting dressed in a grey t shirt followed by a navy blue hoodie and a pair of jeans, before heading downstairs and unlocking the front door. He went into the kitchen and filled a bowl with Apple Jacks before adding a splash of milk. Just as he dipped his spoon into his bowl, there was a knocking on his front door before it swung open and his best friend, Nolan walked in, \"Hey, Adam.\"\n\n\"You're early, Nolan,\" Adam spoke with his mouth full.\n\n\"Sorry, Man,\" Nolan shook his head. \"My Dad had to go to New York on business, so for today, tomorrow, and Friday...\"\n\nAdam's attention was pulled to the car horn that sounded. He looked past his friend to see Nolan's sister in her car. \"Hannah, huh?\" Adam gave a slight chuckle. He didn't have a problem with the naturally curly locked brunette college sophomore; she was always nice to him. But the two siblings did tend to spend the little time they were in the same proximity of each other in irritation.\n\n\"And she's in a hurry.\" Nolan then noticed his friends haggard look. \n\n\"Be out in a minute.\" Adam turned to go put his dish in the sink when the car horn sounded again. \n\nNolan then shut the door to the home of his friend despite getting ready to leave, more to annoy his sister, \"You all right?\"\n\n\"I'm just tired,\" Adam threw his backpack over his shoulder. \n\n\"You must be worried we won't be able to repeat what we did last night,\" Nolan wrapped his arm around his friends shoulder as they walked to the white Jetta. \"We kicked some serious ass.\"\n\n\"That we did,\" Adam opened the back passenger side door.\n\nHannah rolled down the window, \"C'mon, Crotch Stain, I'm going to be late!\"\n\n\"Shut up,\" Nolan sat in the passenger seat. \"You're the reason God invented the middle finger.\"\n\nHannah slapped Nolan in the arm, \"I swear, you must've been born on the highway because that's where most accidents happen.\" She put the car in reverse with a huff and glanced in the rearview mirror, catching a glimpse of Adam. He didn't seem right, but she was too pissed at Nolan for it to register.\n\n*\n\nHannah pulled up to Hilldale High School, thankful that excursion was over. \"Get out, you Parasite.\"\n\n\"Eww,\" Nolan opened the door. \"Who would ever want to be attached to you?\"\n\nHannah rolled her eyes, \"If you were on life support, I'd unplug the machine to charge my phone.\" She then looked back at Adam as he got out of the car. He really seemed disheartened. She rolled down her window as he walked behind her car and to the sidewalk to the school. \"Hey, Adam, are you all right?\"\n\n\"He's just tired, You Waste of Good DNA,\" Nolan walked past.\n\nAdam paused in his step as his head shied down. 'That was sweet of her.' He turned and gave Hannah a soft smile. \"I'll be fine, thanks.\"\n\nIt was as if a jolt of electricity shot through Hannah's being. She put her hand to her chest as she felt warm and she suddenly knew something was bothering Adam. \"Wait,\" She put the gear shift into park and got out of the car. She stood straight, ensuring her assets were all at attention, doing her best to look her best as she smiled back, \"Whatever is bothering you, just talk to the person. It may be uncomfortable, but its better than worrying about it. No one will fault you for being honest with them. Until then, try to relax. Focus on school or try and think about something you enjoy.\" She then gave him a quick hug before pulling back. \"Well, I'll see you tomorrow morning. If you need anything, Nolan can get a hold of me.\" She finished by batting her eyes.\n\n\"Will do,\" Adam nodded back. \"See you tomorrow and thanks for the advice.\" He then turned toward school, taking a deep breath... I'll talk to my Mom after we drop off Nolan.\n\n\"Tonight's going to be epic!\" Nolan nearly jumped on Adam. \"I just wished we had a class together, or even lunch so we can strategize.\"\n\nHaving resolved to confront his Mom, Adam allowed himself the thought of tonight. \"Don't worry, man,\" Adam chuckled. \"We can't lose.\"\n\nHannah just stared at Adam until he disappeared into the building. When the door shut behind him, she shook her head. 'Did I just flirt with Adam?' She gave a slight giggle at herself before getting back into her car. She took a deep breath as she put the car in gear, \"No, that's Nolan's friend.\"\n\n*\n\nChemistry. Due to budget cuts, there were seven students each surrounding five stations. Ms. McKenna Gordon learned quite a bit in her first year and consequently, now in her fifth year, she assigned the members to each station. Unfortunately, only four of the groups could be equally populated with good students and troublemakers, though one of the balanced teams were all the boys that only signed up for her class to ogle her dirty blonde, blue eyed, curvy form and she promptly put them in the back. The fifth group, however, she knew she would have to keep a close watch. Liam Daniels and his girlfriend Kelly Hill, Serena Fisher and her boyfriend Roland Barry, as well as the indifferent Robert Powell, she only hoped that the best of her class, valedictorian hopeful April Harmon and average student, but good natured Adam Ratliff would be enough to quarantine the distractions. Yes, she'd definitely have to keep a keen eye their way.\n\n\"All right class, since Valentine's Day is just around the corner, I have a treat for you. I want you to add a few drops of phenolphthalein indicator and a drop of concentrated ammonia to 500 ml of water in your beaker.\" McKenna walked around to all the stations to ensure not only everyone was doing as instructed, but they were all still wearing their safety gear of latex gloves and eye goggles. \"Now it's time for some heat. Place the beaker on your hotplate. As the solution gets hotter it causes a shift in the equilibrium between the unionized ammonia and the ionized hydroxide. The change in pH makes the pink-colored indicator turn colorless.\"\n\nApril went to work with a steady hand, her midnight black hair with one strand perfectly braided on the left side touching the table as she leaned forward and to the side while she added the chemical.\n\n\"Umm, Ms. Gordon?\"\n\n\"Yes, Josh?\" \n\n\"Ours isn't doing anything.\"\n\nMcKenna went over to the third station to investigate.\n\nLiam thought Ms. Gordon would never stop hovering around. He smiled wickedly as he grabbed the ammonia, \"All right, Nerd, my turn.\" He went to pour the solution into the pink liquid.\n\n\"Liam, no,\" April huffed as she attempted to take the bottle from him. \"The solution is already working.\"\n\nKelly moved over to April's other side. \"Back off, Bitch.\"\n\n\"Come on guys,\" Adam pleaded. \"Just let it be and we got an 'A' for sure.\"\n\n\"Who asked you, Asshole,\" Roland shoved Adam.\n\n\"Yeah,\" Serena smugly pushed Adam as well.\n\nMs. Gordon instantly knew the issue. \"You have too much ammonia in the solution. Let's try diluting it with more water.\" She waited as Josh began to add water. \"Slowly, now. Add a little, and then add more if needed.\"\n\nRobert nonchalantly backed off ten feet and began admiring the periodic table hanging on the wall.\n\nAdam gripped his fist in irritation and then shook his head. \"April, I say we just let them fail,\" he turned to see her response. \n\nIt was not good as the struggle for the ammonia was very real. Liam was pulling his way while April was pulling hers and Kelly was pulling at April's arm. Liam's lips curled with a sneer as he simply let go, allowing all the momentum, and the ammonia toward the girls. \n\n\"Look out!\" Adam pushed both away, the force causing all three to the floor, but not before the bulk of the liquid crashed onto Adam's back. He took a turn looking at each of the girls, finishing with April. 'She tried to stand her ground... Her thirst for knowledge is admirable.' \"You two all right?\" \n\nApril stared in awe at Adam. He had saved her. If he had not acted selflessly, all that ammonia would have hit her in the face. Her eyes would have been scarred, her sense of smell obliterated, and her face would have been destroyed. Adam was her... hero. A sense of warmth began to fill her being and her body shivered as if goose bumps just ran rampant over her skin. What was this feeling? \"I'm fine,\" April smiled. \"Thank you so much.\"\n\nKelly's forehead furrowed in anger. 'Why didn't this Bitch next to her know her place and just give her boyfriend the bottle? How dare this Dork tackle her? And why was she thanking him?' \"Get off me!\" She pushed at Adam.\n\n\"What happened?\" McKenna rushed over to the three students on the floor.\n\n\"Adam got careless with the ammonia,\" Liam was quick to answer.\n\n\"That's right, Ms. Gordon,\" Serena added.\n\nRoland went over to Robert and put his fist under his chin. \"You're on our side, right?\"\n\nRobert gulped. Roland smiled and dragged the petrified teen back to the table.\n\n\"That's right, Ms. Gordon,\" Robert's voice was barely above a whisper until Roland put a tight hand on his shoulder. \"Adam spilt the ammonia.\"\n\nMcKenna helped to get the students onto their feet before grabbing Adam by the arm and pulling him off to the side, \"Tell me why I shouldn't expel you?\"\n\n\"I...\" It was the only word that Adam was able to speak before a sharp hissing sound escaped his lips as the corrosive material had saturated the back of his hoodie, was seeping onto his t shirt, and was beginning to attack his flesh.\n\n\"Oh my God,\" McKenna grabbed at the hem of Adam's hoodie. \"Take this off; and your t shirt, too.\" Once accomplished, the giggles from around the room became apparent. \"Okay, you six down to the principals office until we can figure this out. Everyone else, I know we still have a half hour of class, so I want you to clean up and start reading chapter 7 in your textbooks for the test tomorrow. Adam, come with me.\" She pulled him by the wrist as she started running for the gymnasium lockers. \"Coach Richardson, we had a chemical mishap, I need to borrow your shower room for a minute!\"\n\nCoach Richardson didn't even take his eyes off of his students, \"Go ahead.\" He then blew his whistle, \"That's travelling. How many times do I have to say you have to dribble the ball.\"\n\nMcKenna forced Adam into the shower with a small push, \"Make sure you rinse your back well.\"\n\nAdam felt uncomfortable as he stripped down in the shower knowing full well his chemistry teacher was on the other side of the partition. Still, his back felt like it was on fire so he complied quickly and turned on the hot and cold waters.\n\nMcKenna leaned up against the wall, \"You're lucky you wore a hoodie or this would be exponentially more serious. It soaked up most of the liquid. At most, your back should only be red for a couple of days with minor irritation and I'd recommend throwing the shirt and hoodie in the garbage.\" \n\n\"Remind me to thank that dickhead...\" Adam cringed before correcting himself, \"I mean Liam.\"\n\nMcKenna snickered, \"Don't worry, I feel the same way about him.\"\n\n\"Really?\" Adam gasped in surprise.\n\n\"I'll deny it if you repeat that,\" McKenna smiled. \"But that statement implies that you weren't the one acting recklessly.\"\n\n\"I wasn't.\"\n\n\"Want to tell me about it?\"\n\n\"Not much to tell, really,\" Adam shrugged. \"April already had the solution pink and when you turned around to help Josh's group, Liam grabbed the ammonia saying it was his turn. April disagreed and grabbed the bottle as well. Kelly came over to force April to stop her from interfering with Liam's fun.\" Adam turned the shower off and grabbed a towel to start drying off. \"Liam then, in spite, intentionally let go of the bottle of ammonia... and I pushed the girls out of the way.\"\n\nMcKenna poked her head around the partition, \"Despite knowing the dangers to you?\"\n\nAdam jumped at the nearness of the voice before cinching the towel as tight as he possibly could around his waist. \"I didn't think about it like that.\"\n\nMcKenna stepped forward, a folded towel in hand. \"Turn around. I need to pat you dry and determine if any other course of action is required.\"\n\nAdam complied, \"Is this really necessary?\"\n\n\"Yes, it is,\" McKenna applied the folded towel to Adam's back. It was definitely irritated. \"And now that we've talked and you knowing that this could have been far more serious than it was; do you wish you would have done anything differently?\"\n\nAdam turned to look his chemistry teacher in her eyes, \"No,\" he shook his head. \"April didn't deserve what would have happened to her.\" He momentarily paused, surprising even himself at his next words, \"And despite her attitude, neither did Kelly. And neither would Liam, for that matter.\"\n\nMcKenna's breath caught in her throat and she spun Adam around to hide her ungainliness. \"How manly,\" she whispered.\n\n\"What was that?\"\n\n\"Nothing.\"\n\n\"By the way,\" Adam continued, \"Thanks for taking your time right now. You'd be stunned at how many teachers would let me rot.\" Adam's head shied down... 'It's nice to know someone cares for you.'\n\nA swelling began to rise from McKenna's chest. Just the sight of Adam's back sent shock waves through her body. She shifted her weight from side to side, nervously. 'Am I falling for a student? No.' Her head shook before her eyes found his back again. 'He's so dreamy... And what about John?'\n\n\"Am I dry, yet, Ms. Gordon?\" \n\n'Was he?' McKenna focused on the solution to the question to find yes, he was. \"Almost.\" She dabbed the towel a few more times. 'I need to figure this out.' \"Okay, now after you get dressed, we're going to talk to Coach Richardson about finding you a shirt and then I have some cream I want to apply to this.\"",
        "\"All right, Ms. Gordon,\" Adam grabbed his clothes and made his way between the lockers. \"Sounds like a plan.\"\n\n*\n\n\"Coach Richardson?\"\n\n\"Can't you see I'm busy? You already bugged me to use my locker room; what do you want now, Gordon?\"\n\nMcKenna gave an apologetic smile, though Coach Richardson didn't see it. \"Yes, I'm sorry about all this, but I was wondering if you may have a shirt my student could borrow? His isn't really safe to wear.\"\n\n\"Geez, Gordon, what do you have your students making? Anthrax?\" He then blew his whistle, \"C'mon, hit the open man.\" He shook his head in annoyance as he took out his key, \"In my office are this years baseball jerseys.\" He then pointed at Adam, \"If I don't get it back tomorrow, you're in deep shit.\"\n\nSeveral of the girls who weren't in the game noticed Adam shirtless and laughed.\n\nA pang of anger at the girls caught McKenna off guard... 'How dare they?' She took a breath to calm herself and smiled, \"Thank you Coach. You have my word it will be returned tomorrow.\"\n\n*\n\nVice Principal Roger Carpenter stood with his arms folded as he stared down the teens before him. \"So who wants to explain why they are here first?\"\n\n\"I will,\" Liam stood with a smile.\n\n\"Yes, don't dawdle. This should be old hat to you.\" Vice Principal Carpenter opened the Principal's door revealing the absolute figure of authority, Principal Rachel Larson.\n\nLiam turned and flexed his fist with a sneer at the rest of his chemistry group before strutting into the Principal's office.\n\nRobert's head shied down, certain of the story he was going to tell.\n\n\"Yeah, right,\" April shook her head with a mock laugh.\n\n\"You better,\" Kelly stared down April. \"If my boyfriend gets...\"\n\n\"Some boyfriend,\" April interrupted.\n\n\"What's that supposed to mean? Liam's the best.\"\n\nApril went slack jawed for a moment, completely stunned. \"Do you even know what happened? No, of course YOU don't,\" she shook her head. \"Adam, the guy you want to set up so badly, just saved your prissy life as you know it. That ammonia would have blinded you, scarred your face, and eliminated your sense of smell... And it was thrown at YOU by your amazing boyfriend. The best - ha! Don't make me laugh?\" April sat in defiance, her arms crossed.\n\n\"Are you serious?\" Kelly shook the thought from her head, \"No way. I don't believe you.\"\n\nApril rolled her eyes as she Googled ammonia and its dangers on her phone. \"Yes way,\" she held the phone to Kelly. \"And that Dork as you call him, knew it too.\"\n\n\"He... He did?\" Kelly stuttered, stunned at the information staring at her on the screen.\n\n\"Shut up, you two,\" Roland harshly interrupted. \"You will stick to the story.\"\n\nApril took back her phone and crossed her arms again. \"Yeah, right,\" she said under her breath.\n\n*\n\nThe bell sounded.\n\n\"Shit, I mean shoot,\" McKenna put the cap back on the cream before moving to the sink to wash her hands.\n\nAdam laughed, \"No worries, Ms. Gordon. It's not like I haven't heard language like that before.\"\n\n\"Yes, I appreciate that,\" McKenna smirked. \"I want to see you tomorrow morning to put another coat on your back.\" 'Does Adam really need more cream tomorrow?' She shrugged. 'Probably not; but it does make a handy excuse to see him again.'\n\n\"Coat?\" Adam chuckled, \"What am I? A canvas to be painted?\"\n\n\"Kind of,\" McKenna giggled. It was easy to laugh with Adam. \"As for right now, I want you to head to the Principal's office. I'm sure Liam is going to try to pin this on you. I'll be down there as soon as I get my class situated with Mr. Poole. I'm pretty sure its his off period.\"\n\nAdam buttoned up his jersey, \"Thanks again, Ms. Gordon.\"\n\n\"No problem,\" McKenna smiled, noting that his jersey had the number one on it. 'Yes he is.'\n\n*\n\nAdam put his hand on the door to the office and took a deep breath. 'Will this be my last day here?' He shook the thought from his head and entered.\n\n\"Oh, you must be Adam,\" Vice Principal Carpenter stoically announced from the Principal's office doorway. \"We've heard from your fellow classmates already, why don't you come in and have a seat.\" He took a step to the side to allow him to enter.\n\nApril had just finished her interview and was walking toward the waiting area when she saw Adam. And he looked good in a jersey. She blushed as she offered a faint smile that could have easily been misunderstood as a cringe and a very awkward short wave. She huffed, dejected as she sat in her seat. 'Damn, I suck at flirting.'\n\nKelly's eyes fixated on Adam as he walked past. 'Did he really know the consequences? Of course the Dork knew.' Her thoughts then dwelled on the man with his arm around her. 'I know he didn't know what the liquid was, but it was chemistry class; how could he put me at risk like that? Scarred? Blind? If that would've happened, he would certainly have dumped me. And it would've been his fault.' She shook her head, becoming even more disgusted that Liam's arm was on her shoulder.\n\nMcKenna was lightning fast in her getting Mr. Poole to cover for her. She absolutely didn't want anything horrible to happen to her man... err, her student. She shook her head, \"Focus.\" She marched through the office and walked right into Adam's interview.\n\n\"I'm glad you finally arrived, Ms. Gordon,\" Principal Larson tapped her fingers on her desk.\n\n\"Yes,\" McKenna bit her lip. \"Sorry for the delay, but first I had to ensure Adam was physically safe just because of the sheer quantity of the ammonia solution on his back and then I had to get Mr. Poole to cover for my current class.\"\n\n\"Of course,\" Principal Larson smiled. \"Student safety is our number one priority.\" She then stared down Adam. \"You may wait in the lobby now.\"\n\nAdam nodded as he stood, a whole cavalcade of What if's swirling through his head. 'Is this what a defendant feels like when a jury leaves to deliberate?' He plopped into a seat and a sharp intake of air whistled from his lips proving that was a mistake. He scooted forward in his seat to alleviate all the pressure on his back.\n\n\"Don't get too comfortable.\" Roland leaned into his ear, \"This is payback for what you did to my girl.\"\n\nAdam slumped forward, head into his hands. 'Suddenly my prospects don't seem to good.'\n\n*\n\n\"Did you see what transpired?\" Principal Larson leaned back into her chair. \"Just to let you know, we have two different versions of this incident on the table. Four statements one way and three another. We are hoping for some clarity.\"\n\nMcKenna believed Adam, but that may not be enough. She couldn't lie. \"I did not.\"\n\n\"I see.\" Principal Larson turned in her chair.\n\nVice Principal Carpenter shrugged, \"Four to three.\"\n\n\"But I believe Adam,\" McKenna burst out.\n\n\"Oh?\" Principal Larson swiveled to face McKenna again. \"And why is that?\"\n\n\"Uh...\" McKenna nervously searched for an answer.\n\n\"Well?\"\n\nMcKenna's eyes lit up and a small smile appeared, \"If Adam himself was being irresponsible with the ammonia, how could he have possibly poured it onto his own back?\"\n\n\"I see,\" Principal Larson turned back to Vice Principal Carpenter.\n\n\"Four to four, with reasonable evidence.\"\n\nPrincipal Larson nodded, \"I agree.\"\n\nMcKenna let out a breath she didn't realize she was holding. \"So what's the verdict?\"\n\n\"With conflicting accounts, it will be complicated to get expulsion through the School Board. Ralph would certainly put me through the wringer if I can't get it to stick.\" Principal Larson's face grew stern. \"I despise bullies and I certainly would be disgraced in the eyes of William if I don't act appropriately. Ten weeks in house suspension. That will get us close enough to graduation to wipe our hands of this issue.\"\n\nMcKenna nodded, though she had no idea who William was and why he would matter to her boss. \"May I ask which students stories aligned with each other?\"\n\n\"Adam, April, and surprisingly, Kelly all spoke that Liam was responsible.\n\n\"Really?\" McKenna asked, shocked.\n\n\"Yes,\" Principal Larson straightened in her seat. \"Now don't you have a class full of chemistry students that require your attention?\"\n\nMcKenna smiled as she stood, \"Of course.\"\n\n\"Roger, will you be so kind to bring Liam back in here and let the others know they are free to go.\"\n\n*\n\n\"Hello? Earth to Hannah?\"\n\nHannah shook her head as she came out of her reverie to her best friend's hand waving in front of her. \"What? Huh? Oh, what's up, Maya?\"\n\n\"You dazed out, again,\" Maya snickered. \"What's the point of coming to The Roasted Bean and drinking over priced coffee and deli sandwiches for a last minute cram session for our math test if you're just going to zone out?\" She then leaned forward with a cat ate the canary grin, \"Was it Chad again? I do admit that day dreaming about Chad Riggs is far better than math. This shit is impossible.\"\n\n'Chad? Chad who?' Hannah gave a telling smirk, \"Not Chad.\"\n\nMaya sat up in her seat, giving her friend her undivided attention, \"Really? Who is it then? Any chance of some action, you know, the complete opposite of your former dream?\"\n\n\"His name's Adam.\"\n\n\"Adam, yes, I like where this is going. Tell me more.\" Maya raised her eyebrows, \"Or at the very least, tell me if he's available.\"\n\nHannah giggled, \"He is single...\"\n\n\"Yes,\" Maya interrupted.\n\n\"But...\"\n\n\"No buts,\" Maya wagged her index finger. \"A but means your going to find a way to not land your dream guy.\"\n\n\"I'm just not sure,\" Hannah tailed off.\n\nMaya rolled her eyes, \"Fine, tell me what the but is. Maybe I can help.\"\n\nHannah cringed, \"He's my brother's friend.\"\n\n\"Wait,\" Maya held up her hand. \"Isn't your brother in High School? How old is he?\"\n\n\"Eighteen.\"\n\n\"So what's the problem?\"\n\n\"He's my brother's best friend,\" Hannah exasperated.\n\n\"So,\" Maya took a drink from her latte. \"Talk to your brother if it makes you feel better.\"\n\n\"Nolan?\" Hannah shook her head. \"He hates me.\"\n\n\"Fine,\" Maya raised her eyebrows to go along with her wicked smile. \"I'll talk to the brat.\"\n\n\"No,\" Hannah waved off her friend.\n\n\"You do it or I will.\"\n\n\"Okay, okay,\" Hannah relented. \"I'll do it.\"\n\n\"Good. Can we finally get back to studying?\" Maya picked up her pen, \"I really need to pass this test.\"\n\n*\n\n\"Can I sit with you?\"\n\nThe voice was meek, barely audible over the lunch room volume of the cafeteria. Adam glanced up from his economics book, \"Oh, hi, April. Sure... Though you didn't have to ask. Just have a seat.\"\n\nApril let out a sigh of relief as she sat next to her... infatuation? She still couldn't quantify this feeling. She just knew that she needed to be with Adam. \"So what are you working on?\"\n\n\"I'm really behind on my economics paper about inflation.\"\n\nApril smiled... She had that economics class last year and, of course, she earned an A. \"I can help if you want.\"\n\n\"You want to help me with my homework?\" \n\nApril's smile went wider, and more awkward, \"For you.\"\n\nAdam let loose a slight chuckle at the sight before closing his book, \"You didn't come over here to help with my homework, what's up?\"\n\n'Why did I come over? Because I just wanted to be in your presence? No...' April gave an awkward smile, \"I just wanted to say thank you for what you did earlier. I'm ugly... I mean I could have been ugly... I mean the accident made me ugly... I mean...\"\n\nAdam put his hand over April's and smiled, \"It's all right. I think what you meant to say was that you understand the consequences of what could have been, and your grateful.\"\n\n\"Yeah,\" April beamed. \"That's it.\"\n\n\"You're welcome.\" Adam took a drink of his soda. \"And April?\"\n\n\"What?\"\n\n\"You're not ugly, nor could you ever be ugly.\"\n\nApril's eyes went wide before rapidly grabbing her slice of pizza and taking a bite to hide her ungainliness.\n\n\"So, are you going to be our valedictorian?\"\n\n\"M trng t b,\" April spoke with her mouth full. Her hand quickly covered her mouth as she finished chewing. \"I mean, I'm trying to be. It'll be between me and Albert Granger.\"\n\n\"Good luck to you,\" Adam nodded. \"Plans for college?\"\n\n'Plans? Of course she had plans... At least before today.' \"I haven't narrowed it down yet. How about you?\"\n\n\"Depends on my grades,\" Adam shrugged. \"Let's just say, I'm working on it.\"\n\nApril tilted her head with a smile, \"I'm an excellent tutor.\"\n\n\"I bet.\"\n\nThe bell rang signaling the end of lunch.\n\n\"No,\" April stood. \"I mean, I'll be happy to tutor you in any and all subjects. Just think of it as a reward for protecting me.\"\n\n\"You don't owe me anything,\" Adam stood and collected his book. \n\n\"Please?\" It came out as a desperate whine. \"I want to.\"\n\nAdam shook his head, \"You may wish you had never said that. I am not one of the smart one's.\"\n\n\"So you'll let me?\" April bit her lip in anticipation.\n\nAdam nodded, \"All right, you can help me study. When? Where?\"\n\n\"How about tomorrow evening,\" April shrugged. \"It's kind of noisy at my house, so if you don't mind, I can come over to your place?\"\n\n\"Sounds good. My Mom typically picks me up after school. You can come with us or later or...\"\n\nApril smiled, \"I actually have a car. How about seven?\"\n\n\"All right then,\" Adam scribbled his address on a piece of paper. \"Seven it is.\"\n\n*\n\n\"Hey, Adam, Nolan's already here. Where are you?\"\n\nAdam balanced his phone between his ear and his shoulder. \"Sorry, Mom. I forgot my economics book. I'll be out in a minute.\"\n\n\"All right, I'll see you in a minute.\"\n\nAdam stuffed his economics book into his backpack and secured his locker.\n\n\"I saw that it was you!\"\n\nAdam glanced down the hallway and to the commotion to notice Liam had Kelly's arm firmly in his grasp as he thundered. \"Your name was on the same side as Adam's and April's that blamed me! I have ten fucking weeks of in house suspension because of you! Obviously, you don't care about me.\"\n\nKelly smacked his arm away, \"You proved to me exactly how much you care about me; I could've been scarred or blinded or worse! How could you?\"\n\n\"You fucking deserve it!\" Liam smacked Kelly in the face, the force causing her to drop her book, papers spraying the floor.\n\n\"Ow!\" Kelly's cheek burned red.\n\nLiam balled his fist\n\n\"Hey!\" Adam jumped in between Liam and Kelly.\n\n\"Break it up!\" Henry Prill, a history teacher, came out of his room.\n\n\"Schools over,\" Evelyn Johnson, a Life's Management and Psychology teacher came from down the hall. \"All of you need to vacate the building.\"\n\n\"Adam's at it again,\" McKenna whispered as she put her hand to her chest before moving forward. \"Liam, haven't you had enough punishment for today?\"\n\nLiam stared at Adam, \"This isn't over.\" He then took in the sight of all the teachers, \"I was just leaving.\"\n\n\"You two all right?\" McKenna asked while just looking at Adam.\n\n\"I'll be fine,\" Kelly cringed as she rubbed her cheek.\n\nAdam nodded in agreement.\n\nMcKenna wanted to stay with Adam, but she also didn't want Liam coming back and causing more problems for her man... student. She quickly flanked Liam on his left to escort him out of the school, while Henry Prill was on his right hip, closer than a shadow. Evelyn Johnson shook her head at the situation and headed back down the hall and back to her classroom.\n\nKelly kneeled down to pick up her belongings and noted Adam did the same. \"Why are you helping me?\" She sniffled away a tear.\n\n\"I'm not sure what you mean.\" Adam pulled Kelly to her feet before handing over her book.\n\nKelly wiped at the tear, \"I've been so mean to you and here you are protecting me twice against Liam and helping me pick up my things. Why?\"\n\nAdam shrugged, \"Because it's the right thing to do.\"\n\nKelly couldn't hold back the tears.\n\nAdam quickly embraced Kelly in his arms and soothingly rubbed her back. 'So precious and vulnerable.'\n\nKelly fell into the embrace. A comforting, warm feeling encompassing every inch of her being. Her free hand unconsciously clenched his jersey, never intending to let go. She let loose a soft giggle as she pulled back and her eyes found Adam's, \"Thank you for that.\"\n\n\"No problem.\" Adam's eyes roamed down to where her hand was still clutching his shirt.\n\n\"Oh, sorry,\" Kelly gave a soft smile as she took a step back, finally releasing her captive. She then took a deep breath, glancing in each direction to notice an empty building. \"I guess I need to find a ride. Thanks again, Adam.\"\n\n\"I may be able to help with that.\"\n\nKelly took another step back, stunned. 'Is there anything he can't do?'\n\n\"Mom, yeah I know, I'm really sorry, but there was a situation. Do you think you can give another person a ride home? Her ride left without her.\"\n\n\"Her?\" Brandy smiled into the phone. \"Of course.\"\n\n\"Great. I'll see you in a minute.\"\n\n\"Are you sure this time?\" Brandy laughed.\n\n\"Yes, Mom, I'm sure.\" Adam shook his head as he hung up the phone. He then smiled at Kelly, \"I got you covered.\"\n\nKelly's heart was pounding. 'What is this feeling? Is this love? Being with Liam never felt like anything like this.' \"You truly are amazing; do you know that?\" She bumped playfully into his side as they started walking. 'I have a lot of ground to make up.'\n\n\"Hey, Adam,\" Nolan called out as the back door opened. \"You're Mom made me get in the front...\" His eyes went wide as he whispered, \"Kelly Hill.\"\n\n\"Mom, this is Kelly,\" Adam gestured to her. \"Kelly, this is my Mom, Brandy Ratliff and this is my friend, Nolan.\"\n\n\"Nice to meet you, Mrs. Ratliff.\"\n\n\"Brandy, please,\" Brandy put the car into gear. \"So where to, Kelly.\"\n\n\"It's not far.\" Kelly entered her address into her phone's navigation system so she didn't have to keep giving instructions and gave off a lamented sigh. Seeing the exact time was disheartening. \"It's only four minutes away.\"\n\n\"Off we go,\" Brandy called out as she turned out of the school's parking lot.\n\nFor three minutes, Kelly sat in anticipation. Brandy turned the corner onto Bassett Drive and Kelly smiled as the car hit the small bump. She overexaggerated the effect and fell into Adam.\n\n\"Careful,\" Adam caught her.\n\n\"Sorry,\" Kelly smiled as she straightened herself up just in time for the car to stop. \"That's my house.\"\n\n\"Nice,\" Adam nodded in amazement at the large house that could have easily fit two of his home inside of it.\n\n\"I never really thanked you properly for what you did in chemistry class,\" Kelly leaned in and kissed Adam on the cheek.\n\nAdam's body went stiff. \"No thanks needed,\" he squeaked out.\n\nKelly giggled, \"See you tomorrow.\"\n\nAs soon as the car door shut, Nolan glared down his friend in awe, \"What the hell? Kelly freaking Hill? Are you serious?\"\n\n\"It's nothing,\" Adam shook his head. \"In chemistry class, Liam was being an as...,\" he caught himself from swearing in front of his Mother, \"a butthead, as usual, and I just so happened to push her out of the way from the ammonia he threw. That's why I'm wearing this jersey right now. My hoodie and t shirt were ruined.\"\n\n\"Oh my God,\" Brandy looked at Adam through the rearview mirror. \"Are you okay, Sweetie?\"\n\n\"I'm fine, Mom.\"\n\n\"You got a kiss from Kelly Hill,\" Nolan chuckled. That's a heck of a lot better than how she normally treats you. I thought she'd never forgive you for that soda incident.\"\n\n\"What soda incident?\" Brandy looked at her son again.\n\n\"Nothing.\"\n\n\"Nothing? Ha!\" Nolan laughed. \"This guy, Mr. Two Left Feet, tripped over his shoelace and dumped soda all over Kelly and this other girl Serena and his spaghetti landed on Liam.\"\n\n\"Really?\" Brandy snickered. \"Why am I not surprised?\" She then stopped the car, \"All right, Nolan, see you later and thanks for the info.\"\n\n\"No problem, Mrs. R.\"\n\nAdam also got out of the car, \"Eight o'clock?\"\n\n\"Eight o'clock,\" Nolan waved as he left.\n\nAdam sat in the front seat and took a deep breath. It had been weighing on his mind most of the day, that is until chemistry class, but now was as good of a time as any. \"Mom, can I ask you something?\"",
        "\"Sure, Sweetie; anything.\"\n\n\"Does Dad hit you?\" Might as well phrase it as a question and hope it goes smoothly.\n\n\"Of course not,\" Brandy eyed her son with a curious expression. \"Why on Earth would you think that?\"\n\nAdam stared at her, stone serious, \"It's because I hear it at night.\"\n\nBrandy turned beet red, \"Um... I'm not sure how to answer that.\"\n\n\"Honesty,\" Adam's eyes pleaded the same. \"That's what you guys taught me, anyway.\"\n\n\"That's true,\" Brandy gave off a nervous laugh. \"Well, I guess you are eighteen, so here it goes. You're Father and I have a lot of fun in the bedroom. He has his likes and I have mine... And mine just happens to include spanking.\" She looked over to her son, \"You okay, Sweetie?\"\n\nAdam felt momentarily paralyzed.\n\n\"Sweetie?\"\n\nAdam shook his head before grabbing the bottled water that was in the cup holder. \"I just threw up in my mouth.\"\n\n\"You asked,\" Brandy snickered.\n\n\"Next time,\" Adam took a drink, \"Just tell me its personal... Anything but how my parents have... you know.\"\n\n\"Sex,\" Brandy blurted.\n\n\"Stop.\" \n\nBrandy reached over and ruffled her son's hair, \"How do you think you were born?\"\n\n\"Just,\" Adam shook his head, \"stop.\"\n\n\"Hey, you're the one that said be honest,\" Brandy pulled into the driveway. \"And I was.\"\n\n*\n\nHannah stared at the clock on her phone... 9:41. 'Nolan has until 10:00 o'clock on the video game and then I can ask. If I go in now, I'm sure to get a negative response to any question I ask... Or more like a fuck you, you're bugging me, and get lost.' \n\n\"Adam, he's on you're left flank.\"\n\n'Adam? Nolan's playing with Adam? Adam plays that game, too? Of course, he does. Him and Nolan do all those dorky things together. Maybe I should see what this game is all about...' Hannah knocked on the door.\n\n\"What?\" Nolan called out. \"No, not you, Adam. That guy keeps moving further to our left. I think he's trying to come in from behind.\"\n\nHannah poked her head in the door to see a heavy gun fight on the screen. She tip toed in the room, not wanting to interrupt.\n\n\"What are you doing, Cockroach?\"\n\nHannah sat on Nolan's bed, her knees to her chin as her arms wrapped around her legs, \"Nothing.\" Her eyes were in rapt interest.\n\n\"Adam, he's definitely behind us,\" Nolan's character spun and Adam's avatar briefly appeared.\n\n\"That was Adam,\" Hannah gave a faint smile.\n\n\"Seriously,\" Nolan shouted. \"What the fuck are you doing in my room?\" His avatar then ran into a wall.\n\n\"Ahh,\" Adam cringed. \"What the hell, Nolan?\" His avatar now stuck behind Nolan's.\n\n\"Shit, RPG,\" Nolan tried to escape, but it was futile. \"Damn it,\" he tossed his controller down before turning to his sister. \"Look what you did! Why are you even here?\"\n\n\"Sorry,\" Hannah's voice was meek. She scooted slowly to get off the bed. \"I didn't mean to get you killed.\"\n\n\"Wait,\" Adam tilted his head. \"Is that it? No snappy comeback? No, insult about me being an accident?\" He put his hand on Hannah's shoulder to keep her from getting off the bed, his eyes razor sharp. \"Do I have to kick someone's ass? Who hurt you?\" \n\nHannah was taken aback. \"Whoa, you care about me that much?\"\n\n\"Well, duh? You're my sister,\" Nolan gave a soft smile. \"Isn't that what all our back and forth is about?\"\n\n\"Yeah, but,\" Hannah smiled, \"You were intense about kicking someone's ass.\"\n\n\"Only I can hurt my sister,\" Nolan nodded. \"Now tell me, what's up?\"\n\nSuddenly, it didn't seem that difficult; maybe Nolan would even be on her side. \"I was wondering, if by chance, and hopefully you wouldn't mind, or care, or...\"\n\n\"Hannah,\" Nolan chuckled at her awkwardness, something he never thought he would see. \"Breathe.\" She did. \"Now what?\"\n\nHannah's head shied down, \"I'm hoping you won't mind if I pursue Adam.\"\n\n\"Pursue Adam?\" Nolan raised his eyebrows, \"Like chase him? Like tag?\"\n\n\"You know,\" Hannah's eyes met Nolan's, \"As in dating.\"\n\n\"You want to date Adam?\"\n\n\"Yeah.\"\n\nNolan's hand went to his chin, deep in thought.\n\n\"Is that okay?\" Hannah's voice raised slightly in hopefulness.\n\n\"If that's what you want,\" Nolan shrugged. \"Just know that if you two break up, you're still my sister and he's still my friend.\"\n\n\"Yes!\" Hannah fiercely hugged Nolan. \"Thank you!\"\n\n\"Wow,\" Nolan laughed. \"I love you, too.\"\n\n*\n\nApril hit the print button, thoroughly proud of herself at finding a loophole with one A+ paper on inflation filtering from her printer. 'If Adam wants to go to college, I will get him there. Instead of helping with homework, I'm just going to do his homework.' She smiled broadly before her face crinkled, \"What else does a girlfriend.\" She raised her finger in the air to correct herself, \"potential girlfriend do?\"\n\nAs in all walks of life, April turned to studying and this quandary wasn't any different. Her fingers were ablaze on the keyboard. The results came pouring in; humor, be yourself, loyal, kind; she was all giggles as she shrugged, \"I can do all of that.\" She kept scrolling and hit the death knell - attractiveness. Did she find herself attractive? No. Did Adam? He was clear she was not ugly. 'How does one become more attractive?' She stared at her computer... 'What would a typical teenage boy want in a girl?' One click later and she paused... On the screen was a picture of an eighteen year old boy and an eighteen year old girl having sex. 'Am I ready for sex?'\n\nApril thought about Adam and what he did. 'He saved her. Am I ready for sex?' She smiled at the obvious revelation, \"I wouldn't be here if Adam didn't do as he did. I am his.\" 'Now what do I do about it?'\n\nThe picture now on the screen was simply a man's penis. \"I wonder how big Adam's is?\" Her hand subconsciously slid down her body and popped the button to her jeans. In an instant, they, along with her panties were pooled on the floor.\n\n*\n\nKelly laid in bed, unable to find sleep. Her thoughts kept drifting to Adam. 'How can I possibly make him mine after I had been so cruel to him? Normally, with any other boy at school, I'd just bat my eyes, making it obvious I am available and voila, instant boyfriend. But with the horrible history between us? There's no way.' \n\nKelly rolled on her back. Her eyes shut for the hundredth time in hopes of sleep. Instead, it was Adam she saw. It was Adam holding her. Protecting her. Saving her. In her mind, he kissed her. \n\nKelly's eyes flew open at her body's response. 'Had she ever been this wet with Liam? Definitely not.' She quickly shut them as tightly as she possibly could and the feeling was well within her grasp. Her hand slipped beneath her pink pajama pants, searching for what more Adam could offer.\n\n*\n\nHannah was overly excited with her brother's permission. She knew in the morning she would talk to Adam and confess her feelings. She smiled just thinking of the possibilities.\n\nHannah's body, however, was on overdrive, an emotional high... And what would be the harm in a little release? She got everything prepared; light off? Check. Lube? Check, but tucked it back in the drawer as she knew she didn't need it tonight. And, of course, Mr... Adam as she quickly renamed her vibrator. She laid in bed and slid Mr. Adam down her body. With a flick of her wrist to the top, it hummed in her hand on the lowest setting.\n\n*\n\nMcKenna relaxed in her warm, lavender scented bubble bath, her mind cluttered with thoughts of Adam. 'Kind, heroic, and a great listener; at least in her classroom. The dilemma was the irrefutable fact that he was a student. Could she wait to pursue him romantically? Or maybe they would be able to keep the relationship a secret? Regardless, she knew her mind was determined to try.' She picked up her phone and sent a quick text to John.\n\n- I'm sorry, but I won't be able to make our date Saturday. I don't feel I'm ready to be in a relationship.\n\nMcKenna then texted her sister, Josephine.\n\n- Just letting you know I cancelled the blind date you set me up on... But don't fret, I'm working on something!\n\nMcKenna's heart was finally at peace... 'I can't believe I'm going to date a student. I wonder how it will be? Dates? Play the cute, but obnoxious new relationship couple? Will I be his first time?'\n\nMcKenna relaxed further into her bath before taking control of the detached shower head, the last thought praying on her mind. She grazed lightly over her body, rinsing the soap suds from her arms before going lower. The spray felt wonderful on her skin, the droplets tattooing her pores in bliss. Lower the shower head traversed, before, at last, it submerged in the water.\n\n*\n\nApril couldn't believe her blind luck. A video. Not just any video, but a stream in which the male lead looked exactly like Adam... in ten years; and the female lead was a dead wringer for herself. Her hand slithered down to her special button. She felt the heat radiate onto her finger for the briefest of moments before she rang her doorbell.\n\n\"Oh.\"\n\nApril continued as she always did, the only way she knew how, and began a soft tapping against her clit. Her movements, the video, her dreams becoming a cavalcade of lust as her finger strummed faster on her nub. The man before her, Adam, was pounding into the very depths of her being as she sat atop his perch, moving up and down, mimicking his flow; the picture so clear of her future. Adam groaned in pleasure through the speaker and it echoed her very animalistic call of ecstasy, \"Oh, God...\"\n\n*\n\nKelly's hand briefly played with her outer folds as she found it wasn't even necessary. Two fingers, one on each side of her chasm, unified as one pressing against her pussy. They slid in easily, delving slowly and as deep as they could.\n\n\"Yeah.\"\n\nIt felt so amazing. Adam's vision preyed upon her mind. It was his hand stroking harder and deeper. It was him whispering sweet nothings of encouragement, begging for nothing more than her euphoria. \n\n\"It is us, forever,\" he ordered as his hand, merciless in its conviction continued fueling her desire.\n\n\"Mmm,\" Kelly strained intensely before the exhilaration became too great, too intense. \"Forever,\" she moaned to fantastic heights. \"Oh, God...\"\n\n*\n\nMr. Adam eased into Hannah. \"Long, strong, and thick,\" she cooed.\n\nIt was amazing; as often as she had been in this exact position, this time felt different... She felt more alive. She used her palm to pressure the end of the vibrator, pushing it in and out while skillfully turning it to its highest setting. The vibrations, so delicious, and she felt them to her very core.\n\nIt wasn't enough. Hannah begged for substance. She wrapped her arms around her pillow, Mr. Adam pinned against it.\n\n\"Right there.\"\n\nHannah clutched the pillow, her hips driving fervently, rocking and pressing, encouraging divinity. Mr. Adam speared her expertly; the vibrations emanating against her clit in a muse of perfection. \"Fuck! Oh, God...\"\n\n*\n\nMcKenna shut her eyes and allowed her mind to reach and dream. The spray from the shower head, Adam's fingers, moved delicately with a deft touch. Every brush, every vibration electric against her body. They moved in a circle, around her depths in a tantalizing whisper of what was next. Suddenly, the feathery touch caressed her folds before moving closer and closer, the pressure mounting. \n\n\"That's it Baby.\"\n\nAt last, contact; the jubilation becoming immense as they expertly worked in a torrid pace; the touch, the vibrations... McKenna arched her back with a high pitched hiss. \"Adam... Oh, God...\"\n\n*\n\nApril, Kelly, Hannah, and McKenna all came in a ferocious climax, all begging to the heavens above... \n\n\"Oh, God, Let Adam fall in love with me!\"\n\n*\n\nIf being honest, Adam was grateful the tournament ended abruptly. After the long day at school sandwiched with his worrying of his parents, it was a blessed relief to lay down for bed. The cool sheets were feeling glorious on his back as he snuggled deeply into his dark green comforter...\n\nThe visions were intense. April was riding him, her face scrunched in pleasure. Kelly was powerless and completely under his control as he manipulated her with his words while his hand brought her to ecstasy. Hannah, writhing in sheer bliss as he pounded deep into her. Ms. Gordon, taut in euphoria as his fingers caressed every inch of his teacher's body.\n\nAdam tossed and turned before waking up, covered in sweat. He took a deep breath as he wiped his perspiration from his brow. \"That was intense.\"\n\n*\n\n\"Wake up!\" Hannah burst into Nolan's room.\n\nNolan reached for his clock. \"Are you fucking kidding me, you Skin Rash? It's only five thirty in the morning.\"\n\n\"Yeah,\" Hannah nodded. \"We need to leave early so I can talk to Adam. So get up, Duck Butter,\" she pulled the blanket off her brother.\n\nNolan grumbled as he sat up. He wiped his eyes before finally seeing his sister. \"Whoa.\"\n\n\"How do I look?\" Hannah bit her lip as she spun around, her skinny jeans tight against her ass, her red blouse form fitting, a deep v to allow an ample view of her cleavage. Her make up was impeccable; lipstick, mascara, and blush and she wore a crystal necklace with matching earrings. She only wished she could afford diamonds. \n\n\"I think my best friend's in trouble.\" Nolan grabbed his socks from the floor, \"All right, let's go see lover boy.\"\n\nHannah giggled, \"Thanks, Bro.\"\n\n\"Duck Butter to Bro,\" Nolan mused.\n\n\"You did call me a Skin Rash, Fungus.\"\n\n*\n\n\"Thanks Adam,\" Nolan hung up his phone. \"All right, I woke him up, he unlocked the door so we can get in, and he said he was hopping in the shower.\" He then shook his head, \"You do know you're going to school after this, right? Did you even sleep?\"\n\nHannah let out a deep breath, her hands shivering.\n\n\"Are you serious?\" Nolan laughed as he got out of the car. \"Come on,\" he waved to his sister.\n\nHannah nodded to herself, \"I can do this.\" She got out of the car and entered Adam's house, for the first time. It was nice, cozy; everything spoke of a family not rich, but not struggling, either.\n\n\"He's still in the shower,\" Nolan yawned. \"You see this couch?\"\n\nHannah eyed her brother quizzically, \"Yes.\"\n\n\"I'm going to pass out right here, so don't wake me up until it's time to go.\" Nolan laid down, pulling the throw blanket off the back of the couch with him, when he noticed his sister biting her lower lip. \"Upstairs, first door on the left and, yes, you still look good.\"\n\nHannah looked around Adam's room; a bed, a dresser with a mirror, a desk with a computer, and several sports posters on the wall. 'Hmm... What should I do to get my point across?' In the distance she heard the shower stop. She took a deep breath, excited and nervous.\n\nAdam had his head down, drying his hair as he entered. A small gasp escaped Hannah's lips as she witnessed everything he had to offer. He paused at the sound. His head lifted to find a woman standing before him, \"Hannah?\" He quickly moved the towel from his hair to his groin, his cheeks bright red. \"What are you doing here?\"\n\nAt just the glimpse of his nudity, Hannah's body reacted. 'What am I doing here?' She honestly couldn't remember, her mind clouded by her own personal Adonis standing before her.\n\n\"Just let me grab my clothes so I can change in the bathroom,\" Adam went to his dresser. \"You can use my room.\"\n\n\"No,\" Hannah smirked, the craziest thought traversing her head. \"I mean, that's not fair, it's your room.\" She grabbed the hem of her blouse and pulled it over her head. \"I think there is a stain on my shirt and since you were in the bathroom, I was going to use your mirror.\"\n\nAdam's eyes went wide. Hannah was only wearing a bra; and it was very sheer. \"Umm.\"\n\nHannah giggled, \"It's okay. I saw you just now, so you should be able to see me.\" She pretended to investigate her blouse, eyeing Adam through the mirror as he stared at her. \"You really are looking.\"\n\n\"I, ah,\" Adam looked away, trying to focus on what he needed for clothes.\n\nHannah licked her lips as she saw Adam's erection poking out through the disheveled towel. \"My, my,\" she turned towards her prey. \"Is that for me?\" She took the two steps between them in a half a heartbeat and her hand petted her prize.\n\n\"Uh, Hannah?\"\n\n\"Hush,\" Hannah breathed on his neck before nibbling the small amount of flesh. With her free hand, she pulled the towel away from Adam, while her other hand fully embraced his shaft, gently stroking. She pressed her body firmly against his, rubbing her tits over as much of his side and chest as possible. \"Does that feel good?\"\n\n\"Yes,\" Adam seized. \n\nHannah felt a burst of pride as a beaming smile exploded on her face and it pushed her even further. She repeatedly kissed his jawline before going in for the kill. Her lips attached to Adam's and her tongue invaded his being. She felt the swelling in her palm and increased her pace; her hand a blur.\n\n\"Ah, hmm,\" Adam groaned into Hannah's mouth.\n\nHannah positioned the towel as Adam forcefully exploded. Surprisingly, her knees buckled as she felt a strong orgasm of her own. She stared at him, stunned at her own body's reaction to his pleasure. It cemented all she was coming to understand... That her pleasure belonged to him. Forever. Her hand slowed its rhythm to a slight caress; milking all he had to offer. It was the least she could do.\n\n\"Wow.\" Adam stood paralyzed.\n\nHannah grinned like the Cheshire cat as she broke their embrace, \"I'll see you downstairs, Big Boy.\" As she reached the doorjamb, she looked back over her shoulder. It was a mistake as her body was beginning to react to his still naked form. \"Just don't tell Nolan I did that for you.\" 'Yeah, that's the last thing I want my brother to know about me.' She quickly left before she tackled Adam and spent the whole day in his arms.\n\nAdam's confusion rapidly turned to a joyous victory. The feeling of Hannah touching him so intimately; his first sexual encounter with a female. He had only wished it could've lasted forever. The feel of her breasts was exquisite. Her hand was so delicate... 'But she also said not to tell Nolan... I don't know what had gotten into her, but I will cherish the memory.'\n\n*\n\nHannah couldn't stop staring at Adam through the rearview mirror to the point that she drifted several times into oncoming traffic. Only with Nolan's petrified screams was disaster averted.\n\n\"See you tomorrow, Adam,\" Hannah's smile was ear to ear.\n\nAdam met Hannah's gaze with a knowing smile of his own, \"Yes, tomorrow I see you.\" He cleared his throat to hide how awkward that sounded. \"I mean, I'll see you tomorrow,\" he spoke as he got out of the car.\n\nHannah shook her fist with excitement knowing that she caused his fluster, \"Tomorrow then.\"\n\n\"All right, Yoda,\" Nolan teased. \"Are we playing tonight?\"\n\n\"Yes,\" Adam laughed before shaking his head, \"I mean, no. I can't. I have a tutor coming over to help with... Well, everything.\"\n\n\"Wow,\" Nolan was surprised. \"Still gunning on going to college?\"\n\n\"Maybe,\" Adam shrugged. \"Listen, I have got to get going. I have to return this jersey and I'm supposed to see Ms. Gordon all before first period.\"\n\n\"Good luck,\" Nolan waved as he left.\n\n*\n\nMcKenna couldn't believe how excited she was... Over a student, no less. She wanted to look her best for him, even picking out a slutty black dress and high heels combination, but sanity ended up winning out and instead chose an executive suit and skirt, baby blue in color. 'After all, he'll be my Baby soon enough.' Her heart skipped a beat when at twenty five minutes until school started her door opened.\n\n\"Ms. Gordon,\" Adam shut the door behind himself. No way did he want to get teased again because he was shirtless. \"I'm here.\"\n\nNo words have ever sounded so sweeter to McKenna. \"Adam,\" her voice raised several octaves in exuberance. She coughed to collect herself. \"Yes, do come in, and, please, take off your shirt.\"\n\nAdam complied, \"It actually feels much better, Ms. Gordon. Last night, it was still sensitive, but not anymore.\"",
        "\"That's great to hear,\" McKenna took off her blazer before she opened up the cream. \"You know, when we're alone like this, you can call me McKenna. I have seen you in a towel, after all.\"\n\n\"Are you sure?\"\n\nMcKenna put some cream on her hands, \"Do you not want to?\" A strike of worry furrowed her brow. It actually scared her.\n\n\"No, I mean...\" Adam chuckled as he shook his head. \"That will be fine, McKenna. I just didn't want to get you in any trouble over it.\"\n\nMcKenna let out a breath she didn't realize she was holding and started massaging Adam's back. Almost instantly, she felt the heat between her thighs. \"Wow,\" she whispered to herself.\n\n\"What was that?\"\n\n\"Nothing,\" McKenna provocatively smiled. She knew exactly what needed to be done to show her availability. \"You're right, this is looking really good. But just to be sure it didn't spread to any other areas, I want you to take off your pants.\"\n\n\"My pants?\" Adam's eyebrows raised in surprise.\n\n\"Yes, your pants,\" McKenna reached around his body and unbuttoned the denim fabric. \"Don't be shy, I already have seen you in a towel and believe me, you have no reason to be shy,\" she licked her lips.\n\nAdam unzipped his pants, \"Ms. Gordon... I mean, McKenna?\" \n\nMcKenna's hand was just about to reach around to the front, \"Hmm?\"\n\n\"Do you think we could lock the door?\" Adam nervously glanced to the entry way. \"If anyone saw this, I'm sure they'd get the wrong idea for you, and my High School life would be over.\"\n\nMcKenna put her hand to her chest. 'He really does care about me.' She went to the door and, with a soft click, it was just her and him. She returned to Adam, but kneeled in front of him. She stared intently at his form, her fingers couldn't help but to begin to graze.\n\n\"Um, McKenna?\"\n\n\"Shh,\" McKenna didn't even pause. \"I'm looking for...\"\n\nYes, she was. McKenna was analyzing every inch of his legs. Only when her head lightly bumped Adam's erection, did she remember she had something to prove.\n\n\"Oh my goodness.\"\n\nAdam closed his eyes and looked away, doing all he could to try and will it away. \"I'm sorry.\"\n\nMcKenna glanced up and realized this was her opportunity. In an instant, she unbuttoned her top and removed her bra. Her fingers deftly spread the whole in Adam's white underwear, freeing her treasure.\n\n\"McKenna?\" Adam looked down just in time to see his chemistry teacher engulf his manhood with her breasts. \"Whoa,\" he nearly shouted in surprise.\n\nMcKenna smiled broadly, \"I take it you approve?\"\n\nThe feeling was soft, and oh so, wonderful. \"Ah... yeah, but...\"\n\n\"Shh,\" McKenna cut him off. She pressed her tits together with the sides of her arms, her hands clutching them from the front. She used her back at first to create a slow rhythm. \"This is from me to you, for being a hero.\" \n\n\"Okay...\" the word came out strained at best. \n\nTime was against McKenna. She decided to help it along by spitting a couple times in between her breasts. She then picked up speed by using her arms and hands to move her breasts at double the pace; the friction becoming better with the slight lubricant, but worse with the sheer velocity she was providing the tit fuck. Her nipples were poking hard into her palms and she was surprised at how much she was falling in love with giving her Baby pleasure. She was leaking; the feeling of Adam's hard, throbbing, absolutely satisfying member... \n\n\"McKenna...\" Adam labored before moaning in delight.\n\nA sultry smile pursed McKenna's lips, \"Yes,\" she groaned in surprise as she robustly came as soon as Adam's cum began shooting across the tops of her chin, tits, and around her neck. 'MARK ME!' her mind screamed. Her orgasm proving, without a shred of doubt, that she eternally belonged to her student, and that his pleasure will be hers as well.\n\nAdam struggled to move. His chemistry teacher just masturbated him with her breasts. The soft and cushioned orbs of a woman were no longer a myth and this memory will be etched into his very soul. \n\nA knock erupted on the door, \"Ms. Gordon?\" After a moments pause, the female voice could be heard, \"I guess she's not here yet. Let's go to the school store real quick, we still have ten minutes.\"\n\nMcKenna stood with a smirk, \"We need to get dressed, Thor.\"\n\nAdam shook his head, \"I don't think I'm that much of a hero.\" He pulled up his pants.\n\n\"Mmm, tasty,\" McKenna licked what she could of her chin. \"You are to those girls.\" She then went to the sink to wash off. She got as far as her face, before a sexy thought crossed her mind and she rubbed in the rest of his cum like it was lotion, 'Parfum de Adam... the best perfume.' She tightened up her appearance and nodded to Adam who was waiting at the door. \"See you second period.\"\n\n\"Of course.\" Adam grinned, \"McKenna.\"\n\n*\n\nKelly and April arrived to chemistry class within moments of each other to discover the same predicament. At their station, there were only three chairs, each occupied by Roland, Serena, and Robert.\n\n\"I can't believe you showed your face today, traitor,\" Roland immediately started in on Kelly.\n\n\"Yeah,\" Serena piled on. \"I thought we were friend's, Benedict Eggs.\"\n\nApril's head shied down as she couldn't help but laugh at Serena's interpretation of Benedict Arnold.\n\nFor Kelly, however, this was a day of reckoning and she needed April to not interrupt. She held up her hand toward April just to get her to butt out. She stared down Serena, who she had really thought was her friend, \"Liam threw ammonia at ME; how the hell am I the bad guy?\"\n\nRoland stood, \"A woman needs to be loyal to her man. You should learn from Serena.\"\n\nKelly watched Serena smile as she wrapped her arm into Roland's. 'So that's how its going to be.' She did agree with Roland about one thing, a woman should be loyal to her man, but, \"Loyalty is earned; and putting my life in danger shows Liam doesn't deserve me. He doesn't deserve shit.\" She shook her head, 'Nothing like Adam.'\n\n\"You need to check your words,\" Roland took a step forward. \"Actually, it doesn't matter anymore. You'll be taken care of.\"\n\nKelly was scared, but wouldn't give Roland or Serena the satisfaction of knowing that. She stepped forward as well, \"Are you threatening me?\"\n\n\"A promise,\" Roland smiled.\n\nAdam arrived, just seconds before the bell.\n\nMcKenna offered a smile to Adam as she stood, \"All right class, as you can see, I have done a little rearranging with the furniture. Kelly, April?\"\n\nRoland sat down and Kelly's attention turned to her teacher. \"Yeah, Ms. Gordon.\"\n\n\"Yes,\" April turned to face her teacher.\n\n\"After what happened yesterday, I've decided to move the two of you. Kelly, I put you at station four and April, I put you at station two,\" McKenna pointed towards Josh's table, doing her best not to give away her reasoning... that they really needed her help at that station. She then waved at her future boyfriend, \"As for you, Adam, I have set up a place for you right here at my desk.\"\n\nApril lamented at being removed from Adam's side just to be placed at another table that she would be doing all the work during experiments. At least these seven weren't delinquents.\n\nKelly stared at Adam longingly from her new station. She was grateful to be away from Roland, but Adam? That was nearly heartbreaking. At least she wasn't put at the pervert table, though she felt close enough to feel their eyes from time to time.\n\n\"So is everyone ready for todays test?\" McKenna grinned as she handed out the packets. She then sat down at her desk, setting Adam's test booklet before him as she did.\n\nAdam stared at the cover page... It was a note from McKenna. \n\n- Since you were so kind to give me a pearl necklace earlier, I wanted to give you a little something as well.\n\nAdam turned over the page to find his test was completed, the answers were in a poor attempt of his own handwriting. His head started to turn toward his teacher, but was halted when McKenna nested her hand on his thigh. He nodded as he put the note in his book and then spent his time pretending to take his test.\n\nMcKenna's hand stayed glued to Adam until April, the first student, approached her desk to turn in her test.\n\nThe bell sounded, and the last stragglers turned in their tests. McKenna smiled as Adam stood, \"Have a good rest of your day, Adam.\"\n\n\"I hope you do as well.\" Adam walked behind her and whispered, \"Thank you, McKenna.\"\n\nRoland stared down Kelly, cracking his knuckles with a sneer, \"Soon,\" he mouthed from across the room.\n\nApril waited patiently at her station for Adam. As soon as he went toward the door, she made her way next to him. \"Adam, can I ask you something?\"\n\n\"What's up?\" Adam side stepped a group of freshmen in the hallway.\n\n\"Can I sit with you during lunch again?\" April bit her lower lip.\n\nAdam gave a slight chuckle, \"April, I told you that you don't have to ask to sit next to me. Just do it. I enjoy your company, though I'll still be working on my economics paper. I'm running out of time and its due tomorrow.\"\n\nApril smiled knowingly, deciding to save her big surprise for lunch. \"And we're still on for our tutor session tonight?\"\n\nAdam stopped in his tracks and turned to April, \"Seven o'clock, but are you okay with it? I'm sure you have way more better options on a Thursday night than babysitting me doing math, history, and economics. I promise you, I'm just glad you're okay and you owe me nothing.\"\n\n'How sweet.' April smiled, \"You know, that's the exact attitude that makes me want to help you more, so I'll be at your house at seven.\"\n\n\"All right then,\" Adam started walking away before turning around and pointing at April, \"See you at lunch!\"\n\nApril inwardly cheered as she made her way to her third period class.\n\nKelly had waited for Adam to leave chemistry class only to find April was with him. Her curiosity strangled her as she followed them, listening with rapt interest. When they stopped, she ducked behind some lockers. 'They're eating lunch together? And she's going to his house? I'd bet anything that's why that prissy is wearing a skirt today. Not that I blame her; I wore my tight aquamarine shirt that was open from shoulder to shoulder and to the top of my tits just to offer the best views of my cleavage as well the tightest jeans I have, all to look my best for him today, too. I'm behind to a Nerd and if I lose him, what will be left for me?' She took a deep breath, a look of determination in her eyes. \"Not anymore.\" She followed Adam until right before the bell. 'Wow, his schedule sucks; from one end of the school to the other and then back again.' She grabbed hold of her opportunity and grabbed Adam before he entered his class.\n\n\"Kelly,\" Adam was astonished. \"What's going on?\"\n\nKelly pulled Adam into a janitors closet, \"I'm sorry, Adam; I just need to talk to you.\" Her hand hadn't let go of his arm.\n\nAdam snickered, \"You could've just said something without the kidnapping.\"\n\n'Kidnapping? Not a bad idea... No, that's not a relationship.' Kelly shook her head, \"Sorry, I'm just worried.\"\n\nAdam put his hand on her shoulder, \"What happened?\"\n\n\"Roland threatened me, saying I'll be taken care of,\" A tear drifted down Kelly's cheek. \"After what happened with Liam, I don't know who to turn to.\"\n\nAdam's heart went out to the poor girl as he embraced her. \"How can I help?\"\n\n\"I think I'll be okay during classes,\" Kelly shrugged. \"But I feel exposed during lunch. Can I sit with you?\"\n\nAdam felt a sense of Deja Vu... \"Why do you feel the need to ask? Anyone can sit next to me, if they want.\" He shook his head with a chuckle, \"So, no, I don't mind.\"\n\nKelly mock slapped Adam in the chest, \"I ask because I don't want to be a nuisance. Or, if anyone you'd be with would mind.\"\n\n\"Is that how it is with you?\"\n\nKelly lowered her head in shame, \"People can change.\" She then sniffled, \"I'd like to be able to prove that to you.\"\n\n\"I'd like that,\" Adam hugged her more tightly this time, \"You're not a nuisance, and if anyone tries something when I'm with you, they'd have to go through me first.\"\n\nKelly cherished being in Adam's arms again, a swelling of warmth through her being and a dampness on her panties. 'A girl can get used to this.' She kissed his chest before doing it again. Her hands slid down from his back and caressed his ass.\n\n\"Kelly?\" Adam grabbed her shoulders to prevent her from going any further. \"I told you that you didn't owe me anything.\"\n\nKelly looked up at him quizzically, \"No you didn't... All you said was that I didn't have to thank you.\"\n\nAdam looked up in thought, 'Oops. With all that's going on, did I just confuse conversations?'\n\nKelly took this moment to slide to her knees. \"But this isn't me thanking you,\" she unbuttoned his jeans. \"This isn't because I owe you, though I do,\" she pulled down his zipper. \"This is simply me, giving you, what you deserve.\" She pulled down his pants and underwear in one pull.\n\n\"But we're in a janitor's closet.\"\n\nKelly's hand began massaging his balls as her tongue flicked at the tip of his erection. \"Do you have somewhere else you have to be?\" Her head dropped down causing his manhood to disappear in her mouth. She wasn't gentle. She bobbed immediately with rapid strokes.\n\n'Technically, I'm supposed to be in class.' But that thought quickly disintegrated as he groaned, \"Oh, Kelly.\" \n\nJust those two words from Adam made her heart pound faster. 'He's enjoying this.' It spurned her on, she began throwing her head down repeatedly, face fucking herself all for his pleasure. Saliva was spewing forth, coating his shaft. Her lips were suctioned to his member as if they were a vacuum. Her tongue danced as much as it could around the invader. She wanted to do this for him, but she desperately needed to do this for herself.\n\nAdam's cock began to expand. Kelly was eagerly awaiting the ultimate prize. She continued on her course, driving all the way down to the base, his pubic hair tickling her nose before bringing herself up, leaving the tip in her pursed lips.\n\n\"Holy...\" Adam clutched the shelf to keep from falling over as every fiber of his being seemed to be extracted from his body.\n\nKelly moaned her own ecstasy around Adam's manhood. The taste of his cum splashed over her tongue creating a divine taste on her palette that exploded all her senses; her orgasm piercing her very core.\n\nAdam was in bliss. The wet feeling around his cock was nothing unlike heaven. He knew he'd experience this every night in his dreams for as long as he shall live. It was a true fantasy come to life.\n\nKelly sat back on her haunches, confused. She just came from face fucking Adam. That had never happened in any experience prior... And she knew that his pleasure was now her own. Whatever he wanted, for eternity. She stood to face who she now knew would be her future. \"Yum,\" She licked her lips. \"You know, most other guys would put their hand on the back of my head and force me to go faster, or push me all the way down... But not you,\" she smiled. \"You let me go at my own pace.\"\n\n\"I'm not sure how to take that,\" Adam shrugged. \"Though, I have to admit, that was one hell of a pace.\"\n\n\"Thanks,\" Kelly sparkled with pride. \"And it means you're nice.\"\n\n\"And...\"\n\n\"Normally I would put boundaries on a guy, not that Liam listened. But for you, I know you'd never go overboard so, in the future, I'm giving you free reign.\" Kelly leaned up and kissed Adam. \"I'll see you later. I got to get to class.\" She put her hand on the handle to the door, raising her eyebrows at him and then to his pants before she turned it.\n\n\"Oh,\" Adam took the hint and pulled up his jeans just as she opened the door. He watched her leave, 'She said in the future... Does that mean we're friends with benefits now?'\n\n*\n\nAdam was nibbling on his chicken strips with his economics book already open as Kelly sat down next to him. \"Hey, Adam, what are you studying?\"\n\n\"I have a big paper due tomorrow and I'm not even sure I'll be able to get it done in time. I may have to hope Mr. Dugan will give me an extension.\"\n\n\"Oh? On what?\" Kelly had a slim hope that she could help, though the only economics she knew was her Father's credit card limit.\n\n\"Inflation.\"\n\nKelly's heart sunk.\n\n\"Adam,\" April nervously sat down. I see we have a guest, today.\"\n\n\"Yeah, Kelly may be in some sort of trouble with Roland or Serena, well, actually both, so she asked to sit with us,\" Adam began scribbling down some material for his paper.\n\n\"Adam is a true knight in shining armor,\" Kelly held her head up proudly as she leaned in and put a hand onto his back, rubbing it in a protective way. \"Offering to be a shield for little ole me.\"\n\nApril understood what Kelly was doing. A week ago, she would have withered, but there was just something about Adam and she did not want to lose to this upstart. She decided to be eloquent and bold, honing in on her opponents weakness and her strength - intelligence. \"Yes, I am well aware of his gallantry,\" she played on Kelly's knight metaphor with a word she doubt the blonde knew. \"And because of such, I have procured a token of my appreciation... an endowment if you will.\"\n\nKelly was surprised by the audacity of this Nerd. She was actually going to fight for Adam. She wasn't a hundred percent sure of every word that was spoken, but she got the gist loud and clear. 'Her gift can't be better than the blowjob I gave him.'\n\nApril pulled out a clear report cover from her backpack. \"Adam, I bequeath this to you.\"\n\nAdam read the cover page - Inflation and the Economic Behavior by Adam Ratliff. \"Is this my economics paper?'\n\n\"Yes,\" April smugly stared at Kelly.\n\n\"Thank you, April,\" Adam fiercely hugged her, surprising the teen. \"Thank you so much. I... I...\" He looked at the paper in his hands, the answer to his prayers, \"I can't accept this.\"\n\nKelly perked up at the ray of hope, though if it was the other way around, she would have accepted it in heartbeat and wouldn't have thought twice about it.\n\nApril sat despondent, \"Why not?\"\n\n\"It's not right.\"\n\nApril wasn't sure of what to say; so she started blabbering, \"But you're not close to done... This will help you... You need to get your grades up to get into college... You're already stressed out enough...\"\n\nAll those reasons rang true to Kelly. 'Adam really needs this.' She really did not want to help her rival, but she did want to help Adam. Maybe if she uses her rivals abilities to help Adam, but its her idea? \"Adam,\" Kelly cut off April, \"Look at her. This is obviously important to April.\"\n\n\"But I didn't write this.\"\n\n\"Let me put it this way,\" Kelly smiled. \"You are saying that it's not right that April did this because it is interfering with your schoolwork, right?\"\n\n\"Yes.\"\n\n\"But you interfered in my and April's schoolwork when you jumped in the way of that chemical for us.\" Kelly put her hand on his shoulder.\n\nAdam's eyes scrunched, \"That's different.\"\n\n\"Look, you saved us. As much as you deny it, we owe you far more than just a thank you or an economics paper. Let us do what we need to do for our conscience's to be clear, okay?\" Kelly kissed his cheek, certain that she just put the nail in the coffin of April.\n\nAdam took a deep breath and looked at April, \"Is it that important to you?\"\n\nApril nodded.\n\n\"All right then.\" Adam shook his head, \"I'm starting to know what my Dad meant when he said a woman is always right.\"\n\n\"You're Dad is very smart, then,\" Kelly giggled.\n\nApril honestly felt she lost this round with Kelly, but was still grateful the blonde changed Adam's mind. It was for the best he use her paper. All she needs is for him to stay afloat until she can get him up to speed with proper study techniques and memory enhancement; then he'll be doing this on his own. \"Thank you, Kelly.\"\n\nKelly nodded in kind.\n\n*\n\nNolan opened the back seat to the car, \"Hey, Mrs. R, how's it...\" He paused as he realized Kelly was in the back seat with him.",
        "Kelly subconsciously gave Nolan a look of disgust. Not that she had any problems with him, she was disappointed she wouldn't be sharing the back seat with Adam again.\n\n\"Not bad, Nolan. Thanks for asking.\" Brandy tapped her fingers on the steering wheel. \"Is Adam going to be on time today?\"\n\n\"Yeah, he was right behind me.\" Nolan stared down Kelly as he mouthed, \"What game are you playing?\"\n\nKelly gulped in surprise before adamantly shaking her head in the negative, \"Nothing.\"\n\nNolan's eyes narrowed as he mouthed, \"I don't believe you.\"\n\nKelly had no idea how to convince Nolan of her change in ways... 'Maybe if I hook him up he'll be more receptive?'\n\nAdam entered the car, \"Hey, Mom. Hey, Nolan.\"\n\n\"Only two minutes late; you're getting better,\" Brandy snickered. She then put the car in gear, \"Now let me see if I remember where Kelly lives.\"\n\n\"Kelly?\" Adam glanced to the back seat.\n\nKelly waved a small wave, \"Hi.\"\n\n\"Well, hello there,\" Adam smiled. \"Didn't expect to see you.\" His eyes became deathly serious, \"Are you okay?\"\n\n'I have it bad.' Kelly smiled as she realized she became wet just at that small amount of care from Adam. \"I am. Since Liam and I broke up, and with all my so called friends who have vehicles sided with him, I don't have a ride home any more. You're Mom saw me about to walk and offered me one for as long as I need. Thanks again, Mrs. Ratliff.\"\n\n\"No problem, and call me Brandy or you can call me Mrs. R like Nolan.\"\n\nAdam gave a sigh of relief knowing she was all right, but he was worried that the torment that Roland promised was going to be hell and it was going to be soon. \"I'm glad you're okay.\"\n\n\"All right, here we are,\" Brandy pulled up to Kelly's home. \"Stop number one on the Ratliff express... Choo, choo!\" She made like she was operating a trains air horn.\n\n\"Thanks again, Brandy,\" Kelly got out of the car. \"Bye, Nolan,\" she said quickly, before adding more in a singsong voice, \"Bye, Adam.\"\n\n\"I don't trust her, Adam,\" Nolan spoke as soon as Kelly went inside her house.\n\n\"She said that she's changed and all she wants is to prove to me she has.\" Adam stared out the window, \"And that's all I am doing.\"\n\n\"That's admirable,\" Brandy nodded. \"I'm glad I taught you well enough to forgive when a person deserves it.\"\n\n\"I'm trying.\"\n\n\"I still don't trust her,\" Nolan huffed.\n\n*\n\n\"Guess who's back!\" Both Hannah and Nolan turned from their phones as they ignored what was on the television to the front door to see their Father, Bill. \"Thanks for not burning down the house while I was gone.\"\n\n\"Dad, you're a day early,\" Nolan immediately removed his feet from the coffee table lest he get yelled at, again.\n\n\"Yup and that means you two have to cancel that big party you had planned for tomorrow night, sorry,\" Bill hung up his coat.\n\n\"There wasn't going to be a party, Dad,\" Hannah shook her head.\n\n\"Sure there wasn't.\" Bill sat on the couch and loosened his tie, \"Now I know it was a pain, Hannah, and I appreciate that you didn't fight with me too much about it, so since I'm back, you don't have to get up early any more and I'll take Nolan and his friend to school again.\"\n\nHannah's eyes went wide... 'If that happens how will I sees Adam?' \"Dad, it's okay. I know you have jet lag so I'll still do it tomorrow.\"\n\n\"Who are you and what have you done with my daughter?\" Bill laughed. \"You just caved worse than the company that I just facilitated a merger for.\"\n\nHannah looked at Nolan, who just shrugged, and then back at her Father, \"Can't a girl want to help her Dad out?\"\n\n\"Yes,\" Bill stood, \"But the school is on my way to work. No sense in wasting the gas, so you can sleep in. Now, if you'll excuse me, I need to unpack and get a shower.\"\n\nHannah sighed, her heart yearning for Adam.\n\nNolan laughed, \"Oh, knock it off, you Addict. It's not like you can't call him; though I don't recommend it tonight. He's got a tutor coming over to try and help get his grades up.\"\n\nHannah nodded, accepting what her brother said, but it didn't make her any less sad over not being able to give the love of her life a ride to school. She wanted to help Adam in any way she could.\n\n*\n\n\"Mom, Dad, this is April. April, this is my Mom and Dad,\" Adam gestured to his parents cuddled together on the couch.\n\n\"Brandy and Edwin, please,\" Brandy offered April a smile.\n\nEdwin tilted his head, \"So what brings you here, April?\" \n\n\"She's come over to help me study,\" Adam took a step towards the stairs.\n\n\"Now don't be rude, Adam,\" Edwin chided. \"I was asking April.\"\n\nApril glanced at Adam before turning her attention back to Edwin, \"It's just as he said, Sir. I came over to show Adam how to properly study as to retain the best possible information using memory enhancement aides so his grades can steadily improve and give him a better chance at attaining college.\"\n\nEdwin nodded, impressed, \"See Adam, that's not just helping you study. That's helping you become a better student. And April, no need to call me Sir. Edwin is fine.\"\n\n\"I would also recommend taking some refreshments up with you,\" Brandy added.\n\n\"Oh, I brought some protein bars,\" April opened her backpack to show as proof. \"As well as some water and Gatorade. I find that protein and electrolytes are more efficient for studying than potato chips and soda. Would you like some, Ma'am.\"\n\nBrandy giggled, \"No, thanks. You guys use them while you study... And also, I'm just Brandy.\"\n\n\"Okay,\" April zipped up her bag.\n\nAs the two teens left, Edwin and Brandy both looked at each other with a shocked smirk. Adam had invited a girl over.\n\n*\n\n\"Wow,\" April sat cross-legged on the floor against the bed. \"Who did you give a pearl necklace to? Aren't those expensive?\"\n\nAdam looked up from his math book to see April had opened his chemistry book. \"Uh...\" He didn't know how to answer that. There was no way that he could say, 'It wasn't a real necklace, I merely fucked Ms. Gordon's tits until I came all around her neck... And face... And everywhere else.'\n\nApril sighed at his reaction. \"I bet it was Kelly... And I bet she did something extraordinary in return.\" She tucked the note back in Adam's chemistry book.\n\n\"You know, the way you outline a chapter using bullet points, causing you to focus on key words instead of whole paragraphs makes you pretty extraordinary yourself.\" Adam did his best to change the subject... Any subject that wasn't Ms. Gordon. He focused back on math, \"Fuck, I hate word problems. So what equation do I use for this one?\" He leaned over to show the problem to his tutor.\n\nApril felt like she was going to lose to Kelly and she was unprepared at what to do next to salvage her chance for Adam. She shook her head to focus on what he had asked. \"Word problems? They aren't so bad. You just got to find the first number and then the word that tells you what your going to do with it... Like this says take way, which is just basic subtraction. That's how you break it down into your equation; and when you come across a point where there should be a number, but it doesn't give you a value, that's your X. That's what your trying to solve.\"\n\nJust being close to Adam for the past hour had been doing its own number on April's body. 'My one body times the growing heat radiating from between my legs causing my panties to soak plus Adam's one body with the fire hose that can cool down any woman's fire equals the square root of Oh Hell Yeah.' April had figured it out and she questioned why she hadn't thought of it before... She could beat Kelly at her own game. And she had meticulously studied the outline just last night.\n\n\"Adam, why don't we take a break. Those are just as important so your mind can soak in what you've learned.\" She grabbed a protein bar and handed it to him, using the opportunity to scoot closer to his person. She sat nervous. She was confident she was going to do this, but what if Adam rejects her?\n\n\"Aren't you going to have a protein bar as well?\"\n\nApril gave a slight snicker at the knowledge of what high in protein bar she was going to have... And it was in between Adam's legs. \"Stress is also a negative in studying. Like when you said you hate word problems, that negativity causes stress, a feeling that something is beyond your control.\"\n\n\"Makes sense.\"\n\n\"We've been going at this for a while, I think we both may need a stress reliever before we continue.\"\n\nAdam reached over and threw away the wrapper to the protein bar. \"You're the expert; what did you have in mind?\"\n\nApril closed her eyes... 'How did that video start again?'\n\nAdam saw that April had her eyes closed and did the same.\n\n'I remember...' April straddled Adam. He was just about to object when her lips quarantined his. She pressed her lips against his before pushing her tongue out and into... his upper lip. 'That's not right.' She knew she wasn't good; how could she be without experience, but there was no way she was relenting, not after her courage got her this far. There was just too many variables in play. Adam could say no or worse, Kelly could steal his heart before she had another chance. She was all in.\n\nAdam was surprised at the kiss, but after all that had happened today, making out seemed far more tame. He opened his mouth and took control of the kiss, corralling her wayward tongue by doing all that he was taught this morning by Hannah and applying it to the girl on his lap.\n\n'Yup, Kelly's beat me to kissing with him.' But that knowledge made April more determined. That determination, coupled with the pride she began feeling when she felt his erection through his jeans against her leg was just enough to increase her courage to reposition her body. She slid to the left, just slightly, and she felt it. She felt Adam rubbing against her wanton pussy. She moved her hips as she had saw last night and it felt nothing short of glorious.\n\nThe video was streaming in her head... 'The girl reached down and pulled the man's dick out of the sweatpants he was wearing. Adam's wearing jeans, but the same principle can be easily applied.' April's hands made contact with his t shirt clothed chest. They moved slowly, slithering down until she found what she was looking for and unbuttoned it. She lifted herself up just slightly, and unzipped the offending denim. She quickly lifted the band to his underwear, and freed his cock. She was now all caught up with the video.\n\nAdam's eyes went wide at the new found freedom. He squirmed, trying to object, wanting April to know she has done enough, nothing else is required... She doesn't owe him anything. But with every movement, he was denied. She retook control of the kiss, doing all that he had just done with her; not allowing his words to verbalize as they fell into soft nothings in her mouth.\n\n'Okay, what's next? The girl had been already naked, but knew Adam was not about to give her that chance. But the same principle can still be applied.' April reached under her skirt and shifted her damp pink panties to the side. 'What's next? In the video, she just sat on it.' She grabbed hold of Adam's cock and put it right at her pussy. 'Okay, here it goes.'\n\nApril impaled herself in a single drop of her hips. Her eyes went wide and she hissed in pain into Adam's mouth. She fought a losing battle in preventing the few tears that cascaded down her cheeks.\n\nAdam was finally able to break through April's defenses. \"Are you all right?\" He tried his best to keep his voice down with his parents down stairs. \"Why did you do that?\" His worried panic forcing his body to fidget unconsciously.\n\n'Well, that wasn't in the video.' April let out a small gasp as she held up her finger, imploring Adam to just wait... to just not move for a moment. She needed to focus. She took a deep breath and took in all that was transpiring. 'One, I did it. I have Adam's penis in me. Two, he's not screaming at me to get off. Three, the pain is receding; thank goodness. Four, wow, this feels really good.' She squeezed her over stuffed pussy around his member. 'Really fucking good. What's next? Her hips!' A smile of pure unadulterated pleasure formed as April rose.\n\nAdam took a breath of relief knowing that April was all right and then it hit him; his cock was in a woman's pussy for the first time. The warmth... the wetness... the disappointment that she was getting off of him. But still, the feeling was... \"Oh,\" he groaned as April pushed herself back down all the way to the base. \"Are you sure?\" The words, though he did not want to speak them, he needed that reaffirmation after the first time she went down was so painful for her. The last thing he wanted to do was hurt her, especially when his pleasure was going through the roof.\n\nApril rose again; the pain completely gone and leaving in it's wake was pure elation. Screw getting into college, this was the greatest exhilaration known to her world... And she wasn't going to hold back. She fell again, plunging on top of her meaning of life with reckless abandon... A flash of the video hit her mind through all her pleasure and it was of the woman rolling her hips... \n\n\"Oh fuck,\" April bit her lip to keep from crying out... 'It's hitting my button!'\n\n\"April,\" Adam couldn't put a whole sentence together. \"I'm going to... \"I'm going... I'm... I'm...\" He moaned as spurt after spurt came from his loins, a never ending promenade of his essence draining into April. His mind went blank. All that existed was an intoxication of bliss. \n\n'Is it actually getting bigger?' April was lost in heaven; not hearing Adam's strained words. She kept going further until she felt her greatest euphoria as something more than Adam's shaft was penetrating her. It was his pleasure. And it triggered something so mesmerizing and forceful in her own being, it imprinted on her very soul. Her new meaning of life was his pleasure, until the end of time. She wrapped her arms around Adam with an iron grip, biting into his comforter from the bed as his pleasure became her drug, sending her into ecstasy.\n\n\"Wow,\" Adam's smile was wider than the equator. \n\n\"You're telling me,\" April shook again from another aftershock. Her eyes drifted to Adam's alarm clock on his night stand... 9:34. \"Crap, I have to get home. My curfew is in twenty-six minutes.\" She stood slowly, on shaky legs, cum and blood leaking from her stretched pussy. \"Can't go home like this,\" she giggled. \"I'm going to use your bathroom real quick.\" She made it to the doorjamb before looking back over her shoulder. She smiled at seeing Adam so content... 'Top that, Kelly.'\n\nThe door to the bathroom awoke Adam out of his stupor. He looked around with a smile, 'no longer a virgin!' He grabbed a water bottle from April's bag. He took a drink before pouring some on his shirt and then using that to clean himself up. He got dressed and put all of April's books together and into her backpack. The last thing he needed was for her to get into trouble because she was late screwing his brains into oblivion. He then sniffed the air. 'Really?' He grabbed his deodorant and shot a couple sprays into the air. \n\n\"You packed my bag,\" April smiled at the kind gesture. \"Thanks.\"\n\nAdam kissed April briefly, \"No, thank you.\"\n\nApril giggled, \"No, I should be thanking you for that as well.\" She then looked down the stairs. She didn't want to go and if there was any way she could think of to stay forever, she would have. \"Good night, Adam.\"\n\n\"Drive safe, April.\"\n\n*\n\n\"Thanks for the ride,\" Adam got out of the back seat and pulled his backpack over his shoulder. \"Are we playing tonight, Nolan?\"\n\nNolan stared at his friend, \"What is with you, Man?\"\n\n\"What?\" Adam glanced back over his shoulder.\n\nNolan walked up next to his friend, \"Oh, I don't know... How about the fact that you've been smiling like the village fucking idiot all morning... Maybe that, or perhaps it could be that now you're hanging out with Kelly fucking Hill, the bane of your existence since the first day of school... Maybe that's what's with you.\"\n\n\"I told you that she wanted to show me she could change, that's all.\" Adam held up his hand like a boy scout, \"I promise to be careful, scouts honor.\"\n\n\"All right, just watch your back around her,\" Nolan sighed. \"And what about that dumbass smile?\" He opened the door to the school.\n\n'You would be smiling too if you got a hand job from your sister, a tit fuck from the chemistry teacher, a blowjob from one of the hottest girls in school, and you lost your virginity to the future valedictorian. No, I can't say that.' Adam chuckled, \"You wouldn't believe me if I told you. Let's just say that yesterday was a great day,\" he waved as he walked down the hall.\n\n\"Something is up with him,\" Nolan shook his head. \"And I'm going to find out what.\"\n\n*\n\n\"Hey, Adam,\" April arrived at his locker.\n\n\"April,\" Adam paused, unsure of how to greet his lover of last night. He ran a hand through his hair as he flashed a nervous smile, \"I'm not sure what to do after last night.\"\n\nApril shrugged as she batted her eyes in a most unflattering way. \"What do you mean?\"\n\n'Is that April Harmon?' Nolan's eyes went wide. 'And is she, well, I don't know what to call that.'\n\n\"Well,\" Adam hesitated, but decided it didn't matter. \"That was my first time doing that and, I don't know, when I see you, should we kiss, hug, do the chicken dance?\"\n\n'So Kelly didn't beat me and he doesn't hate me.' April beamed at the knowledge. \"No, silly. You don't have to do anything different. We're just closer now.\"\n\n\"I can do that,\" Adam grabbed his exchanged books from his bag to his locker. \"Anyways, thanks for all the studying tips last night; they're already coming in handy during first period.\"\n\n\"My pleasure.\"\n\n\"There you are!\" Kelly jumped into Adam's arms in front of April. \"So this is where you're locker is.\"\n\nAdam hugged Kelly before setting her down. \"Yup, locker 1381, that's me.\" \n\n\"Hi, April,\" Kelly shot a smug look to her rival. \n\nApril still wasn't intimidated. In fact she smiled back at the cheerleader, \"Hello.\"\n\n\"I was wondering if you'd walk me to class, since Roland and Serena will be there,\" Kelly batted her eyes and they seemed to sparkle.\n\n\"Will do. Not like the three of us weren't going to the same class, anyway.\" Adam gestured down the hallway, \"After you, ladies.\"\n\nKelly quickly wrapped herself around Adam's arm, \"Always such the gentleman.\"\n\n'I knew it.' Nolan seethed as he pulled out his phone. 'That little tramp is going to tear down my friend just for fun and what's worse, he's dating my sister.'\n\n\"Hey, Maggot Infested Road Kill,\" Hannah whispered. \"Kind of in the middle of my Nineteenth-Century America class.\"\n\nNolan ignored the insult, \"Do you remember when I said you were still my sister and Adam was still going to be my friend?'\n\n\"Yeah?\"\n\n\"Well fuck that piece of shit. I'm about to go pound his face into the wall for two timing you, but I thought you might want the satisfaction.\"\n\n\"What?\" Hannah shouted as she stood. She realized where she was, all eyes now focusing on her. She grabbed her things rapidly, and walked with speed in her step as she exited class. \n\n\"Yeah, that waste of space, Kelly fucking Hill, just draped herself all over Adam and he didn't do a damn thing about it.\"\n\nHannah then stopped in her tracks. \"No, he has every right to.\"\n\n\"What?\" Nolan couldn't believe what he just heard. \"That's it, he's dead. No one has the right to cheat on my sister.\"\n\n\"No, don't,\" Hannah took a deep breath. \"We aren't dating.\"\n\nNolan stopped, confused. \"But two days ago you said you were going to tell him that you love him and yesterday, you guys couldn't keep your eyes off each other so I thought...\"\n\n\"I never got around to it.\" Hannah sniffled. \"And now its too late.\"\n\n\"Bullshit,\" Nolan adamantly chastised his sister. Gone was his misplaced anger toward his friend; it was replaced with trying to give confidence to his sister... to save his friend. \"Do you still love him?\" It came out soft and inviting.",
        "Hannah smiled, \"I do.\"\n\nNolan laughed, \"Then don't worry, I've got your back. Who knows Adam more than me? Do you want the inside track? How about his class schedule? Aren't you done after History?\"\n\nHannah perked up, \"All right, tell me what I need to know.\"\n\n\"First,\" Nolan pumped his fist in excitement that his sister didn't give up. A rotting corpse would be better for his friend than Kelly. \"This girl's a Bitch. I don't know what her angle is, but she hated Adam up until recently.\"\n\nHannah's determination grew. If not for her sake, she couldn't let Adam be taken advantage of. \"Go on.\"\n\n\"He's walking to chemistry with her as we speak, but then they have lunch together right after as well.\" Nolan then smiled as he relayed the most important part of his friend's day. \"But you can intercept him before lunch.\"\n\n\"How,\" Hannah bit her lip.\n\n\"Near the exit on the west side of the school, by Adam's locker, there's a bathroom he uses before he goes to the cafeteria.\"\n\n\"Got it!\" Hannah hung up her phone and ran to her car.\n\n\"Sis? Toxic Waste?\" Nolan shook his head as he realized she hung up. \"Go get him, Hannah. Save my friend.\" The bell rang. \"Shit,\" he looked at the time before running to his own class.\n\n*\n\nMcKenna had an incandescent smile at the mere sight of Adam, \"Hi...\" Her voice caught in her throat as the shock of Kelly hanging on Adam's arm sent her speechless. \n\nKelly moved from Adam's arm to the pervert table. \"Boys,\" She put her arm around the ringleader of the table, Owen. All six of the boys were shocked into a stupor that Kelly even addressed any one of them. \"This is a one time offer, I want three of you to voluntarily move to my old station with Roland and them and since Ms. Gordon is allowing seven at each table, the other three of you to each find a home at one of the other three stations.\" She then slowly, and very sexily leaned forward over the table, allowing a fantastic view down her shirt. She tilted her head with a smile and winked. \"And in exchange, I will allow each of you to take pictures of me for the next five seconds. Do we have a deal? Five.\"\n\nAll six of the boys scrambled for their phones.\n\n\"Four.\"\n\nIn their excitement, it was a rough go of unlocking their phones.\n\n\"Three.\"\n\nFinally, they got their phones unlocked.\n\n\"Two.\"\n\nAccessing their cameras.\n\n\"One.\"\n\nThe flashes came pouring in as she continued her countdown, \"Zero.\" Kelly stood upright, \"Now get lost and don't stare at me anymore.\" She waved them off before turning to Adam and April... 'Now if there was only a way to get rid of the Nerd.' She thought for a second, coming up empty. \"Welcome to our new station.\"\n\n\"Excuse me,\" McKenna stepped forward. Puzzlement had replaced her grand smile from just a moment ago. \"What's going on here?\"\n\n\"Ms. Gordon,\" Kelly took the vocal lead. \"Owen and the boys offered their station to us since we were evicted from ours.\"\n\nMcKenna wasn't about to have any of this. She assigned these groups specifically. Besides, she wanted Adam up front with her.\n\n\"Ms. Gordon,\" Adam felt odd not calling her by her first name. McKenna was hanging on to every word Adam had to say. \"We really don't want to be a bother, but I'm truly worried for Kelly's sake that Roland or Serena or both are going to do something stupid. If your back is turned and my head is in my book in the front of the class, I'm afraid something horrible will happen. Do you mind if we work together?\"\n\nMcKenna looked over her shoulder to Roland's table, and he was maliciously staring down Kelly. 'Adam's doing it again.' She nodded her affirmative, \"You have my approval.\" She turned to go back to her desk, \"Class, these are going to be the new seating assignments. Now get out your textbooks and turn to page one ninety-three.\" \n\nFor twenty minutes, McKenna discussed the uses and properties of copper. \"Now that we know all there is to know about the penny, I want you guys to answer the questions on the following page. She sat at her desk and surveyed the classroom. Her eyes passed over all the stations before falling on Adam. She turned to the empty seat that was next to her, the seat she had assigned specifically for her favorite pupil. He wasn't there. He wasn't right next to her. She looked back at him to see Kelly, her arm hooked into his... 'Fuck, couldn't she ever let him go!' Not only Kelly, however, April was also sitting close to the love of her life. She decided to pace the room to ensure every group was working on the problems at hand. \n\n\"So how's my party of three doing back here?\"\n\n\"We're almost done, Ms. Gordon,\" April was writing down the answer to the second to the last problem.\n\n\"Oh,\" McKenna looked over from directly behind Adam, her tits brushing against his back as she inspected the sheet of paper. She used this opportunity to place a hand on his ass and squeeze his back side. \"Yes, everything appears to be correct. But April, I would appreciate it if you let the others pass or fail on their own,\" she gave a hard glance at Kelly. \n\n\"I helped,\" Kelly looked hurt before realizing the old her wouldn't have. \"I really did.\"\n\n\"She actually did,\" April nodded.\n\nMcKenna didn't want to go back to her desk. She was enjoying the fidgeting affect she was having on Adam, though if she stayed much longer, the other students would wonder what she was doing. She also wanted to send Kelly to the Principal's office just to keep her from hanging on to her man. Alas, she had to back off of Adam and she had no cause to send Kelly away. All she wanted was to be with Adam, and she couldn't even have that. She wanted to cry.\n\nThe bell rang and McKenna had nothing. She shook her head, \"Adam, can I see you for a moment?\"\n\nAdam looked up at his teacher and nodded. \n\nKelly collected her books, knowing exactly where she was going.\n\nApril started for the cafeteria but realized Kelly was not, \"Where are you going?\"\n\n\"To Adam's locker.\"\n\n\"Why?\"\n\nKelly looked back over her shoulder, not breaking stride, \"Because Adam always goes to his locker first and I want to be escorted to lunch.\"\n\nApril put speed in her step to catch up to her, \"Why do you like him so much, huh? Why now?\"\n\n\"Why do you?\" Kelly snickered. \"Do you really think you'll beat me?\"\n\n\"You can have any other guy in the school, come on, let me have Adam.\"\n\n\"Kelly stopped to look at her rival, \"I don't want any guy, I want a man. I want Adam.\" She turned and kept walking.\n\n\"Then, yes,\" April kept walking next to her.\n\n\"Yes, what?\" Kelly rolled her eyes. She hated not understanding what someone was saying.\n\nApril smiled, \"Yes, I really think I can beat you.\"\n\nKelly laughed before she saw the seriousness in April's eyes. \"You truly believe that, don't you.\"\n\n\"I will fight for him. I will beat you.\"\n\n\"Aw, that's sweet,\" Kelly giggled. \"I'll admit, you have your moments; you're smart, and cute in your own way. But I have everything else.\"\n\n\"So what you're saying is that together, we're the perfect girl?\" April shook her head, \"But the difference is that Adam don't care about your half.\"\n\nKelly stared April down, \"Every man with a dick prefers my half.\"\n\nApril would not be intimidated. \"I wasn't blind before Adam pushed us out of the way. You were so cruel to him. He will see past this new you.\"\n\n\"Then may the best girl win,\" Kelly leaned up against his locker.\n\n\"I will,\" April folded her arms.\n\n\"Hey, Gabriella,\" Kelly looked past April to the passing teen. If she remembered correctly, Gabriella was single and in the video game club.\n\nGabriella stopped mid stride. 'Did Kelly Hill just say hi to me?' She turned her head slowly to Kelly, cautiously. She expected a punchline. What she got was a smile. She pointed to herself in awe, \"Me?\"\n\nKelly giggled, \"Of course you, don't be silly.\"\n\n\"Oh,\" Gabriella gulped. \"What's up?\"\n\n\"What type of video games do you play? First person shooter?\"\n\nGabriella hesitated. There had to be a joke in there somewhere. She then saw April Harmon. 'If April's here, I should be okay.' She took a deep breath, \"That and other things, basically any MMORPG's.\"\n\n\"Cool.\" Kelly had no idea what that meant. \"Would you be interested in coming over to my place after school? I just got Call of Duty and was hoping you'd show me the ropes.\"\n\n\"You want me... to come over to you're house... after school... to play games?\" Gabriella stumbled through that question.\n\n\"Why, are you busy? Too short of a notice?\" Kelly was doing her best not to be intimidating, but sometimes, she couldn't help others reactions. 'Was I really that horrible?'\n\n\"I'd love to,\" Gabriella exploded in giddiness. \n\n\"Great,\" Kelly smiled. \"Meet me out front right after school, okay?\"\n\n\"I'll be there.\"\n\n\"What was that for?\" April shook her head.\n\nKelly just smiled. \"No way am I telling her Adam's passion for video games. This one's all mine... And maybe I can get Nolan off my back if I can get him interested in Gabriella.'\n\n*\n\n\"What's up, McKenna?\"\n\nMcKenna couldn't resist. She kissed Adam. She pressed her lips against his before becoming a woman passionately possessed. Her tongue invaded, swiping at every erogenous spot it could find. One hand cupped his ass while the other grabbed his hand and placed it on her breasts. His touch was stupendous, driving her further. \n\nAfter yesterday, Adam fell into these intimate situations easier. He was done complaining. He was surprised at how different McKenna kissed from Hannah. It was more carnal; but he used the only experience in his repertoire and reciprocated her desire. Besides, he now had a new found joy in life; fondling his teacher's breast. His hand molded, shaped, and prodded the massive mammary. Then he felt the hard nub poking his palm as if enticing him to do as he wished. He pinched, flicked, and torqued it. His other hand reached around and copped a feel of his teacher's ass. Then, after no complaint, he molested it. All to McKenna's moaning delight.\n\nThe bell rang and McKenna separated from her student, a wanton wreck. She felt a natural high that he took some initiative with her body. She was his. A shy smile pursed her lips, \"I saw you made some new friends and I didn't want you to forget about me.\" She took a deep breath to collect herself. \"Unfortunately, I promised to visit Principal Larson on my lunch break today so we can go over the final report of your incident that she needs to turn in to the President of the School Board by the end of the day.\" She leaned in and kissed Adam again, this time in a more compassionate way. \"Enjoy your lunch.\"\n\nAdam hurried around the corner and to the bathroom. Normally, he'd go to his locker first and double back to the restroom, but with the delay in chemistry class, he didn't have the time. He was brief, quickly taking care of his duties.\n\nHannah was watching through the doors when she saw Adam enter the bathroom. 'Nolan, you're the best Snot Encrusted Slime there is.' She entered the building and waited by the bathroom door.\n\nAdam came out of the bathroom, his head down as he took two steps toward his locker.\n\n\"I heard that students can leave for lunch if they have a ride, Adam,\" Hannah smiled at just the sight of him.\n\nAdam turned to the voice, \"Hannah, what are you doing here?\"\n\n\"I missed you today and hoped I could treat you to lunch at the Pizza Shack across the street.\"\n\n\"Will we even have time to eat it?\"\n\n\"I ordered it fifteen minutes ago and I already have a table,\" Hannah took hold of Adam's hand. \"I'll get you back before your next class.\"\n\nAdam nodded, \"Sounds good.\"\n\nHannah smiled as they walked hand in hand out of the school.\n\n\"Who the fuck is that?\" Kelly seethed at what she was witnessing. No way was this someone in High School. This was a full blown woman and they were holding hands.\n\nApril looked to where Kelly was staring. She wished she hadn't. Battling Kelly was bad enough, but this girl... woman, was far worse. She clung to the hope of what last night's sex was, but it was hard to be optimistic. \"I don't know.\"\n\nKelly gave off a frustrated growl before running toward the exit. April hesitated for the briefest of moments before her curiosity also got the better of her and she ran as well. Both students crashed through the doors to see the woman hand her car keys to Adam and they both got into a white Jetta.\n\n\"Damn,\" Kelly shook her head. \"How the hell I'm I supposed to follow them now?\"\n\nApril darted past her, \"I don't know about you, but I have a car.\"\n\nKelly's eyes lit up, \"Hey, wait, let me come with you.\" She took off running after her.\n\nApril jumped into her fifteen year old brown Cobalt. It needed a lot of work to be considered factory new, but it got her from point A to point B and that's all that mattered to her. She turned the key in the ignition when Kelly jumped in the passenger seat. \"Shit, you scared me.\"\n\n\"Come on,\" Kelly gestured to the Jetta. \"They're getting away.\"\n\nApril sighed as she pressed her foot on the gas peddle, \"No one said you could come with me.\"\n\n*\n\nKelly and April looked at each other and couldn't help but laugh. All that hurrying and they simply drove across the street to The Pizza Shack. They went into the restaurant and felt fortunate they got a table in the distance, but still within eye sight of Adam. \n\n\"Uh, Kelly, I really don't have any money.\"\n\n\"I got it, besides the only thing we have time for is the breadsticks we just ordered. It takes too long for a pizza unless you order it ahead of time, which she had obviously thought of. Consider it thanks for not leaving me at school.\" Kelly spoke all of that without even looking away from Adam's table. \"Can you believe they're sitting on the same side of the table... And where's her other hand?\"\n\n\"You really are trying to change,\" April smirked at her rival.\n\n\"Of course I am. Adam is a great guy and I won't disappoint him.\" Kelly shook her head, \"Are you seeing this? She's feeding him!\"\n\n\"I am, but I'm trying not to.\"\n\n\"What the fuck is that supposed to mean?\" For the first time she looked at April. \"Did you see what she looked like? She's gorgeous... And she's got to be in college. You're not worried?\"\n\nApril shrugged, \"Listen, I know I'm already outmatched in the looks department. You, yourself said I'm cute, which by the way is the nicest compliment I have received about my looks, ever, but that doesn't put me in the same ballpark as you or her. What I have is my ability to be myself, loyal, kind, and be supportive to all his needs; and right now, his needs are trying to get him into college. If that's not enough, at least I know I gave it my best shot. I will fight for him.\"\n\nKelly felt useless at the truth of what Adam needs... Someone to help him get into college. She now felt she was a distant third to this new girl and April. She took a hard look at April. She really wasn't so bad. In fact, she was quite nice, and kind, and friendly, and funny, and, if being honest, her new best friend. Sure, other students would hang out if she asked, but then that would be their \"guess who I was with\" story to tell their friends. April knew her; past and present and she was still sitting right across from her. 'I could live with that for as long as Adam wanted.' \n\n\"Here is your appetizer,\" the waiter just set the basket down as he passed. He remembered serving Kelly and her boyfriend several times before and knew there wasn't a tip coming his way.\n\nKelly flashed a wicked grin. \"April, I just had the craziest idea.\"\n\n\"What?\" April took a drink of water.\n\n\"Actually,\" Kelly giggled. \"You had the craziest idea, and I totally agree.\"\n\n\"Okay, about what?\"\n\nKelly sat up straight in the booth, \"You said that together, we make the perfect girl.\"\n\nApril tilted her head, \"Yeah, still not following you're rambling.\"\n\n\"Don't you see?\" Kelly threw up her hands, \"I suggest that we court Adam as a pair. You're brains and my femininity, we can have him wrapped around our finger. I mean what guy could resist two girls willing to love him unconditionally at the same time?\"\n\nApril laughed before noticing Kelly wasn't. \"You're serious?\"\n\n\"Have you seen her?\" Kelly pointed.\n\nApril glanced over her shoulder and did feel intimidated. She also felt the longing to be by Adam's side.\n\nKelly grabbed April's hand in a soft, supportive way, \"I hate to admit this, but she is prettier than me, and she's in college, so she's smart too. We need each other.\"\n\nApril didn't want to concede to it, but the cheerleader was right. But could she live with Kelly as well? 'I'd only have to live with Kelly if we win Adam.' The decision was easy to make. \"So, what do we do?\"\n\n\"Are you in?\"\n\n\"I'm in.\"\n\n\"Yes,\" Kelly shook her fist. \"And just think, when we win, we'd get to play with each other to.\"\n\n\"Play with each other?\" April thought on the unclear statement before her eyes went wide.\n\nKelly giggled at her new found partner, \"Relax, Adam will be there, and I can almost guarantee that he will find so much pleasure in it that he wouldn't be able to control himself.\"\n\n\"If Adam wants it... I won't mind.\" April had never even thought about being with a girl, but the thought of Adam having any amount of pleasure because she was with another woman, she'd be happy to oblige.\n\n\"That's the spirit.\" Kelly smiled ear to ear. She felt the same way. She could never be able to help him with school work, but the one thing she could do was think of all the slutty ideas Adam might want and she would not be abashed to do them. \"As far as what to do, it's easy. We dominate his free time at school; lunch, in between classes, and chemistry, and anything we can afterward, your study sessions and my getting a ride home with him.\"\n\n\"How do you know...\"\n\nKelly kept going, \"But only this time, we talk each other up. Show Adam we're both available for him, together. Prove we are his ideal woman. Deal?\" She held out her hand.\n\nApril looked back at Adam's table again. Without hesitation, she shook Kelly's hand, \"Deal.\"\n\n*\"Damn it,\" Kelly cursed herself.\n\n\"What?\"\n\n\"Adam just kissed her cheek.\" Kelly shook her head, \"Do you have any plans for tonight?\"\n\n\"No.\"\n\nKelly grinned a smile the devil would appreciate.\n\nApril nodded, \"Whatever it is, I'm in.\"\n\n\"Pick me up at six thirty.\"\n\n*\n\nAs soon as Adam and Hannah sat down at the table, a large pepperoni pizza was placed before them. \"Enjoy,\" the waiter made a grand gesture to the pizza, \"Your lunch.\" They both laughed.\n\n\"So, what made you decide you want to take me to lunch?\"\n\nHannah smiled, \"I missed you.\"\n\n\"I missed you as well,\" Adam leaned in and whispered in her ear, \"Your Dad doesn't even come close to giving as good of a handjob as you.\"\n\nHannah's heart grew warm at just the thought of Adam missing her, but then she erupted in laughter at his words. \"I would hope not.\" With one hand, she grabbed a slice of pizza while her other went under the table and rested on Adam's thigh. \"This is good.\" Her hand slowly moved upward.\n\n\"Yes, it is.\" Adam relaxed into the booth as Hannah felt him up, his erection pressing into her hand. \"As much as I hate to say this, but I don't think we have time for round two. I have to get back in ten minutes.\"\n\nHannah let out a pout, but it didn't stop her from stroking him a few more times. \"At least let me do this for you,\" she picked up a slice of pizza and put in near his mouth.\n\n\"That slice tasted better than the first one,\" Adam smiled.\n\n\"If the second tastes better than the first, maybe our second will be as well.\" Hannah licked her lips, \"What if I stop by tonight and we can find out?\"\n\n\"Sounds amazing.\" Adam leaned in and kissed Hannah's cheek, \"I got to go.\" He scooted out of the booth and then offered his hand to Hannah which she eagerly accepted.\n\n*\n\n\"Hi, Brandy,\" Kelly opened the back seat of the car. \"Do you mind if a friend of mine hitches a ride? She's coming to my house so we can work on something together.\""
    ],
    "authorname": "fgmntfmgnshn",
    "tags": [
        "dork",
        "eros",
        "greek god",
        "harem",
        "nerd",
        "popular girl",
        "teacher",
        "high school"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/stamp-of-approval"
}