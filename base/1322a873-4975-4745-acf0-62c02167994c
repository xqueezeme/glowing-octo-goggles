{
    "title": "Stress Relief from Skilled Hands",
    "pages": [
        "Intro - The Shift From Hell\n\nIt had been a pretty terrible day all around. I'd overslept my alarm. I'd almost killed myself slipping on some gravel in the driveway of my apartment complex. Then the AC in my car died on the drive into work in a burst of smoke and sparks. I got to work, and it only got worse from there. \n\nMy usual lunch bartending shift turned into a nightmare. A company nearby had a quarterly meeting, and they all decided to have lunch together. ALL AT ONCE. A quiet Thursday turned into a nightmare of twelve tops, delayed orders, and angry customers. \n\nEven as a bartender, it was a nightmare. It was all I could do to keep up with the drink tickets. I couldn't help any of the servers like I usually did. The bus stations overflowed, and the kitchen yelled at us with every new wave of orders. \n\nAt some point, one of the big tables started yelling about the delays. The language got heated, so I rushed over. My coworker Tracey was five feet four inches of rage as the table ranted about the service. Tracey was one of the nicest people I'd met, so I knew it was about to go sideways if she was angry.\n\nI walked to the table with my hands up in defeat, \"Guys, guys, please. The kitchen is overwhelmed, so don't be mad at her. She can't make your food appear any faster. However, I can make a few pitchers appear while you wait. The beer's on me, what do you say?\" The bros agreed. Three pitchers of the cheapest tap beer later, they stopped caring about their food. Tracey mouthed a \"thank you\" as she moved between her other tables. It didn't get better from there, but it didn't get worse.\n\nWhen the last table left, we closed for a half-hour to catch up and take a breather. Door locked and shades down, we all sat at the bar doing shots of tequila. We commiserated and complained as I cleaned the bar and poured. I chased mine with a handful of ibuprofen. Tending the bar, my back blazed in distress as I reached for a bus tray. Whatever I'd done saving my fall was made worse by the running around during the shift. I yelped like a hit dog.\n\n\"Holy shit, Jake. Are you OK?\" Tracey looked up from her drink to check on me.\n\n\"Yeah. I'll live, but... shit, I yanked my back out even before I got in today. This sucks, and ibuprofen doesn't help like it used to.\" It was true. \"I'm an old man trapped in a 24-year old body. Someone roll me to a retirement home and leave me there.\" I finished cleaning the bar and looked forward to going home to soak and stretch.\n\nOur work done, Tracey and I closed our stations and waved to the kitchen staff as we left. The night was theirs, and we wanted nothing to do with it. \n\nTracey looked at me with concern as we stood outside in the late afternoon sun. \"Jake, does your back hurt that bad?\"\n\n\"Yeah. I'm in a lot of pain.\" I shrugged. \"The tequila helps, but that's about it. This is one of those times I wished we had a health plan.\"\n\nTracey nodded. \"I tell you what. Did I ever mention my friend Maggie is a bit of a massage therapist?\" \n\nI thought Tracey's framing odd but ignored her. \"No! That would be awesome. I'm not sure I can afford a massage therapist, though.\" I mentally tallied my bank account and the wad of cash stashed in my apartment and got very depressed. \"Well, I can probably afford one visit.\"\n\n\"She's a friend, so she might give you a deal. Hold on, let me call her.\" Tracey grabbed her phone from her purse and dialed. A few seconds later, she was chatting away. \"Hey! Yeah, good, good. No, it was a lunch rush from hell. So here's the deal, a coworker of mine is in a lot of pain from throwing out his back. He did me a solid today, and I wondered if you had some time to work on him. Yeah. No, TOTALLY. I do. Well, I only know him from work, but, yeah, he's a good guy.\" I tried to piece together the other side of the conversation but came up blank.\n\nTracey looked me up and down as she spoke. \"About five-nine? Brown hair. Yeah, he's cute when you clean him up.\" Now I knew the topic of the conversation, but I was in too much pain to protest. Tracey took the phone away from her mouth and looked at me. \"Can you do six o'clock? She can squeeze you in. One hundred in cash?\"\n\nI had at least $120 in my wallet from the split tips. It seemed like a lot for a massage, but I needed something besides tequila to dull the pain. I nodded and looked at my watch. \"It's five-thirty now, so yes, if she's not too far away?\"\n\nTracey gave me a thumbs-up, \"She's about twenty minutes away, plenty of time.\" She went back to her phone. \"OK, yeah. He's in. We're at work downtown, so it shouldn't take him long to get there. Thanks, Mags, you're a sweetheart.\" She put her phone back in her purse and took out a scrap of paper and a pen.\n\n\"OK, Jake. Maggie is an old friend of mine from college, and you're getting a heck of a deal. Her rates are usually a lot higher, but she owes me a favor and a few bucks. Now we're even for you saving my neck at lunch.\" She started writing on the paper. \"She works out of her house and has an unbelievable massage studio setup. \"\n\nTracey held out the paper. \"It's a big red house. You can't miss it. Be punctual. Don't be early, don't be late. If you're early, wait at the park a few blocks away. Pull into the garage and knock at the inside door. She'll be waiting.\"\n\nThe instructions seemed odd, but I agreed and reached for the paper. My back flared as I leaned forward. Tracey winced in sympathy. \"Oh man, you do need some help.\"\n\n\"Hey, what did you mean by 'a bit' of a massage therapist?\" I asked with an eyebrow cocked.\n\n\"Oh, she's not a licensed therapist. She's more of a private... health provider.\" Tracey's eyes gleamed as with knowledge she was withholding for effect. \"Trust me, though, Maggie's gonna blow your mind. Have fun, see you tomorrow!\" Tracey turned and walked off with a wave and a giggle.\n\nPart 1 - The Red House\n\nWhy was Tracey giggling as she walked off? I didn't have time to sort it out. I looked at the paper. The address and directions seemed about right - about 20 minutes North via the highway. It was one of those McMansion neighborhoods popping up every few months. I checked my wallet before I pulled out. I had about $160 in twenties and fives\u2014no trip to the ATM necessary.\n\nI couldn't coax the AC to life, so I drove with the windows down. Sure enough, twenty sweaty minutes later, I turned into a new subdivision. All the houses were big, garish collections of windows and corners. Most were set back from the road with long, curving driveways. A few signs bore fancy lettering and titles like \"The Campbell's at Whispering Oaks\" or \"The Refuge.\" It was like someone named their house like they did a boat. \n\nI took a wrong turn along the way and doubled back in time to see the red house set back from the road. It seemed about the same as the rest, angles and windows poking out like porcupine spines. A door was up in the oversized three-car garage. I rolled in as my dashboard clock read 5:59. At least ONE thing didn't go wrong today.\n\nI parked and marveled at the size of the garage. It was bigger than my apartment. The space was pristine and organized, with storage shelving running along one wall. I walked to the door I hoped was the connector to the house and knocked. A second later, the garage door began to close, and the door in front of me opened.\n\nMaggie stood about my height in flat, spa slippers. Long, dirty blonde hair fell down past her shoulders. Her eyes were dark brown, set against her skin with the soft bronze of recent time in the sun. Her face was round and smooth. She wore a long white robe with a sash looped tight around her waist. Even cinched in a robe, her curves were striking. \n\n\"Jake, so glad to meet you. Any friend of Tracey's is welcome here.\" I shook her extended hand, and she waved me into the house. I heard a click and the garage door came down with smooth glide. Maggie closed the entrance to the garage behind us and waved me into a room off the hallway. \"The studio is in here. Step in!\"\n\nI went through a small laundry room with a washer and dryer, and closet. Maggie closed the door to the main house behind us as we went through. I stepped into the main space, and she closed the entrance to the laundry behind us. I guessed privacy was critical for a massage therapist.\n\nThe studio was a fantastic sight. It looked more like a professional spa than anything you'd see in a house. The room was cool and dark, with a soft blue-tiled floor sloping at various points to drains. A soaking tub with room for at least four dominated the far corner. An ample glass-walled shower space took up the other corner. There were tables with bottles, candles, towels, and more. A heavy massage table sat in the middle of the room, towels draped across, ready for use.\n\nI whistled as I looked around, the echo bouncing back to me from the corners. \"When Tracey said 'studio,' she wasn't kidding. This is amazing!\" \n\nMaggie smiled, \"Glad you like it. I had it custom built. The homebuilders were happy to make a little extra money when I had this customized.\" \n\nStanding in the cool air of the studio, I realized what a mess I must look (and smell) like. \"I apologize for, well, me. The AC in my car broke this morning.\" \n\n\"No problem,\" Maggie grinned, \"I'll get you feeling brand new. When was the last time you had a massage?\"\n\n\"That's an easy answer, probably years. Student loans don't leave a lot of room for self-care.\" I wished I was kidding.\n\n\"Ah, I know the feeling,\" Maggie nodded. \"That's why I stopped waiting tables: the muscle aches and the pay. Just so we're clear, it'll be a hundred dollars for today, which is less than I usually charge. With Tracey's recommendation, I'm willing to do a friends and family discount.\"\n\n\"No problem, we had a hell of a shift, but a few of the sales bros felt guilty and tipped big.\" I reached for my wallet, but Maggie stopped me.\n\n\"There'll be time for that. There's an envelope in the changing room you can put the payment in. If you can afford a little bit more, I can add a shower treatment and other upgrades. You'll leave here a changed man.\" She put emphasis on the 'changed' with a smile.\n\nI mentally rifled through my wallet. I needed twenty bucks for gas, but the pain in my back was growing. \"I know I have $160. Will that be enough?\"\n\nMaggie smiled, \"Yes, it will. Now tell me a bit about what happened and where it hurts.\"\n\nFor the next few minutes, I described my work, the shift, and how my back had betrayed me. Maggie asked some follow-up questions about how I slept (on my side,) if I exercised (some running,) and my health. \n\nInterview over, Maggie pointed to a door a few feet down marked RESTROOM. \"You can change out of your work clothes in there. Do whatever else you need to, throw on a robe, and then we'll get you cleaned up. Leave the payment in the envelope by the sink. OK? Now get moving!\" She pushed me towards the room. As I walked to the changing room, I saw her head to another door a few feet down. \n\nThe changing room was enormous, with a toilet, shower, vanity, and sink. A full-length mirror dominated the wall behind the door. I changed out of my clothes and folded them on the table under the hooks. I regretted how gross I was as I took my shirt off. I looked at myself naked in the full-length mirror for a second. My cock bobbed as I thought about the robe coming off Maggie's curves. I remembered Tracey and how she'd likely murder me if I fucked up with a friend of hers. I grabbed a robe and thought about the kitchen staff naked to kill any chance of a boner.\n\nA small stand by the sink had disposable toothbrushes, mouthwash, and face cloths. I hoped Maggie wouldn't mind and gave my face a quick swipe. After a furious few seconds of brushing and a gargle of mouthwash later, I felt a bit more human. \n\nBefore I left, I found the plain envelope next to the sink. I took the $160 from my wallet and tucked it in the envelope. I heard water starting in the studio and figured I was wasting valuable massage time, so I popped out. Maggie was standing in the large shower enclosure. Water cascaded from a shower head in the ceiling. Handheld attachments and nozzles dominated one tiled wall. Behind her, I could see a cart with bottles, washcloths, and more. \n\nMaggie stepped up to me and reached for my hands. She came in close and pulled at my wrist. I found myself lost in her eyes as she drew close. I smelled sandalwood and something else. \"A few rules for our session. First, no talking about the time when you're here. There are no clocks for a reason. If you have to be out by a specific time, tell me now.\" \n\nI shook my head in the negative.\n\n\"Second, you tell me if something hurts or I do something too hard. Don't be afraid to let me know if I use too much pressure. Third, if you want something, ask for it. I can't read your mind. We can do almost anything in here, but you have to ask first. OK?\"\n\nI nodded in agreement and interest. \"That sounds fantastic,\" I nodded to the enclosure with awe. \"That shower looks bigger than some apartments I've lived in.\"\n\nA smile spread across her face, and I struggled not to giggle like a schoolboy. My back ached, and my body complained, but I felt a lift of energy in her presence. \"OK, hang your robe there on the wall, and let's get you started.\"\n\nI had a second of panic overtaking the robe off. The idea of being naked on a massage table was nothing new, but this was a surprise. Again, I thought about Tracy whipping a plate at my head and beating me up for being rude to her friend.\n\nMaggie sensed my confusion and again came close. \"Don't worry, all part of the service. If it helps, I'll go first.\" She tugged at her sash and let her robe fall.\n\nIn retrospect, I hope I didn't emit an audible gasp. Sadly, I'm pretty sure I did. Naked in front of me, Maggie was beautiful. The curves hinted at by the robe played out before me. Her skin was a smooth bronze head to toe. Her breasts were supple and hefty, more than enough for me to get lost in. A gleam of silver in her left nipple caught my attention. Then my vision traveled down to see the bare skin between her legs. I froze in an awkward combination of attraction and surprise.\n\nMaggie waited for a second while I gawked, then tugged at my sash and turned me to face the shower. \"Staring costs more than a massage, Jake. Trust me.\" I tried to process her comment but forgot everything as I slipped from the robe and stood under the showerhead. The power of the water was instant and overwhelming.\n\nIn a few seconds, the stink of the day faded. I stood under the showerhead and sighed. \"Bigger than my old apartment, and better than any shower I've ever seen... even in Vegas,\" I muttered as I ran my hands through my hair.\n\n\"Glad to hear it,\" Maggie said as she came in behind me. She adjusted a few knobs. When done, she took a hand attachment from the wall. She used the handheld to direct water to various parts of my body, her own hand trailing the path of the water. \n\nMy nostrils filled with steam, and I noticed a smell underneath the vapors curling up the walls. I turned my head to ask, but Maggie was ahead of me, \"I always put a few drops of eucalyptus oil in the shower to start. Smells great, right?\" I nodded in approval. She moved around me, making sure to get me from all angles. I closed my eyes in bliss.\n\nA few minutes later, she turned off the water and put the attachment back on the wall. \"OK, stay as you are. Let's get you clean now.\" Maggie went behind me to the cart. Soon her soap-slicked hands returned and started roaming me again. A layer of lather formed as her hands went to work. She stood in close behind me and ran her hands from my neck to my knees. \n\nClose in and low, she put her hands around me and ran them up my legs. She paused as she reached my crotch, fondling my balls and stroking my cock in a fluid motion. The feeling of her touch made me light-headed. I steadied myself as my pulse increased.\n\nMaggie laughed as I flinched. \"Did Tracey tell you what kind of bodywork I do?\"\n\nI shook my head, \"No, she said you were a massage therapist.\" I remembered the conversation, \"No! She said you were kind of a massage therapist? It was weird.\"\n\nMaggie chuckled again as her hands worked my neck and shoulders. \"Ah, yes. I'm not a licensed massage therapist. Too much money and fees. I have other exceptional talents, though. Would you like to sample one?\"\n\nMy pulse quickened again. \"Yes, please.\" My cock rose again at the thought of the unknown.\n\n\"Excellent, I like a man with an adventurous spirit,\" Maggie said. \"I find young men can be hard to massage. You've got so much energy, you don't relax when you're on the table. I've got a technique to help get all that energy out and make the massage more relaxing. Lean forward a bit. It will help if you put your hands on the wall.\" I did as asked and bent at the waist, palms flat against the cool tile.\n\nI felt her breath on the back of my neck as she came in close again. \"Relax, keep your muscles loose. You're safe with me.\" Her voice was honey in my ears. Her hands came around again to caress my cock. I groaned at the touch, and my hips moved forward to meet her contact. She then knelt as her hands traveled the length of my ass. Her fingers slipped between my cheeks and ticked my asshole. Again I tensed at her touch.\n\n\"Relax, Jake,\" Maggie said, again now at my ear as she stood behind me. \"Take a deep breath and let it out.\" I did as asked. \"Again,\" she asked. I complied. Her voice was so soothing I couldn't help but unwind. \"I want you to do some breathing cycles for me. Breathe in for six seconds, out for six. Can you do that for me?\" I nodded and began to count in my head as my chest expanded. \n\nThere was movement behind me again and a wet snap. When I began the first exhale, a finger returned to my ass. It felt different, and I realized Maggie had put on a glove. She put her left hand on my shoulder as her other hand pressed between my cheeks. Her fingers were slick as she dabbed a thick fluid in and around my asshole.\n\n\"Jake, keep going, OK? Six in, six out.\" I nodded, feeling my muscles tense at the intrusion. \n\nOn the next exhale, she pushed a finger into me. My flesh gave way after a few seconds of resistance, lessened by the lubricant. Her finger traveled further as I fought to ignore the burning sensation. The pain faded as I focused on the count. \n\nOn the next exhale, she slid deeper, and her fingertip brushed against something inside me. I felt a jolt of electricity travel up my spine. Her finger flexed again, and I tensed from the wave of pleasure. I'd heard of guys getting their prostate massaged, but I had no idea it felt this good.\n\nAgain Maggie's voice drifted to me, \"Don't stop breathing. Inhale, exhale.\" Her voice calmed me as she stroked the back of my neck. \n\n\"I'm relaxed, but I've never had someone do this before.\" I moaned again as a second finger joined the first. She began to slide in and out of me with a wet, squishing sound.\n\n\"You've never had this before? Well then, let's hope I can make it memorable for you. Keep breathing in cycles. Focus on finding the second between where your breath changes from in to out. Can you do that for me?\"\n\n\"Yes, but focusing on anything other than your fingers seems like a tall order.\" I stuttered as another wave washed over me. My cock was hard and tapping against my chest now. Fluid rose from the tip, leaving a smear on my stomach as I twitched.\n\n\"It's going to feel better when you're focused on your breath.\" She whispered, her lips brushing against my ear. I almost jumped from her touch. \"I'll get you started. Ready? Breath in for six... five... four...\"\n\nHer voice drifted away as I closed my eyes and kept time with the count. I hit one and tried to find the second where I switched from breathing in to out. Her fingers continued to work on me as I counted another six. She began to time her motions with my breathing\u2014her gloved fingers now in to the hilt as I exhaled.",
        "I don't know how long I counted breathing cycles. It might have been less than a minute. Maybe it was longer. Time drifted as I monitored my breathing and let the rise and fall take me. My body twitched and tensed with pleasure. Maggie's fingers slid and curled inside me in gentle, deliberate motions. \n\nSoon my body was quivering, and my prostate twitching with each touch. At a second between breaths, my body was overcome. I felt the air cooling my skin as it dried. I smelled the eucalyptus in the air. I felt the touch of Maggie's hand on my shoulder and the fingers inside me. I shuddered and gave in. A low moan rose from my stomach as I climaxed. \n\nI saw stars in the back of my eyelids as my eyes squeezed shut and the orgasm took hold. My cock pulsed, and a small torrent of cum flowed out of me. I pushed back on Maggie's fingers as the feelings rocked my body. I felt helpless and reveled in the pleasure of her touch.\n\nMaggie's ungloved hand left my shoulder and reached around me. She pumped my cock in a fluid motion. I panted and grunted as she took long, slow strokes. Cum spurted each time her hand met the base of my cock. My balls ached and felt heavy. I reached around and pulled her gloved hand into me, forcing her fingers deeper as I gave in to the moment. \n\nI felt debased and depraved but couldn't help myself. I humped Maggie's hand as she milked me. I lost all sense of balance. I leaned back and let her weight keep me upright. Her lips were back at my ear, her tongue tickling me. \"Yes, Jake, yes. That's it. Let it all out. Give me everything you've got.\"\n\nHer words drove me insane with lust. I reached deep inside to do as she asked. I felt a need to please her. I wanted to give her reason to put her face to my ear again. Every muscle in my body swelled. I forced what felt like the last drop of fluid in my balls out and over her hand.\n\n\"I... there's no more... I can't...\" My brain short-circuited as I tried to recover. \n\nMaggie leaned forward, \"Hands on the wall for me, Jake.\" I did as told. Her free hand gave my cock the last stroke and a pat before moving to the small of my back. She removed her gloved hand with a pop. My asshole flared as the fingers left then the pain floated away.\n\n\"Well done. Hope that goes down as a good first time.\" She smacked my ass as she talked. \n\nI was weak but found the energy to mumble, \"Honestly? Won't I need a second, third, or even fourth to compare this to?\" I turned and looked back with a depleted grin.\n\nShe rolled her eyes as she shucked the glove off. \"Well, it's a good sign you want to come back, and you haven't even had the massage yet. Hold still. Let's get you cleaned off.\"\n\nThe warm water from the handheld shower returned. Maggie repeated the lather and wash. When done with the back, she had me turn around. Kneeling down, she lathered my crotch with slow, sweeping strokes. I looked down and enjoyed the sensations as she massaged me.\n\nShe looked up and smiled as she washed me clean. Against all logic, my cock had begun to rise again. I wasn't sure I had anything left in me, but a thrum in my chest told me it didn't matter. \n\n\"Well, now, this is a pleasant surprise. I'll have to mark in your file you recover fast.\" She came in close and ran her tongue from the base to the head of my cock. I flinched at the wet touch and sagged against the cool tile. \n\nLooking up at me, she took the tip of my cock in her mouth. I'd never seen such a lustful sight. Her tongue tapped the head of my cock and twirled around the edges. She moved her head forward and took another inch of me in her mouth. I felt pinned in place, unable to break her gaze.\n\nHer mouth pulled back with a wet pop. \"NOW, you're clean and ready for the massage.\" She stood up and waved at the massage table in the center of the room. \"Why don't you get on the table, face down. I'll be right back.\" She stepped out of the shower space and into the other door by the dressing room.\n\n\"I'll be putty in your hands,\" I mumbled as I stood up straight. Various muscle groups complained as they came back to life. It was a minor victory getting up on the table without killing myself.\n\nI stretched and put my face in the soft padded ring. Air whooshed around my face as I settled into the table. A sinking sensation rose as I went limp. I wasn't sure if I drifted off, but I snapped awake as Maggie's hands rubbed the back of my neck. I didn't remember the lights dimming or the music starting. \n\nHer voice drifted down to me. \"OK. NOW you're relaxed. Ready for the massage?\"\n\nI mumbled as close to a \"Yes, please!\" as I could. A warm pool of liquid formed on my back. Maggie's hands dipped into the oil and started to move along my body.\n\nPart 3 - Handiwork\n\nI drifted in and out of consciousness as Maggie went to work. Under her hands, my muscles released tension and pain. The pressure of her fingers coaxed knots under my skin to loosen. My spine creaked as she found ways to relax every spot she touched.\n\nShe nudged my legs apart after working on my lower back. Again, her fingers explored the crack of my ass and the flesh within. After the shower, my ass had no resistance as a fingertip brushed against me. Between my legs, my cock stirred from the attention. I murmured in wordless enjoyment as she stroked me. \n\nThe attention didn't last as she moved to my legs. For the next few minutes, she found bits of tension and smoothed them away. At some point, she was behind me and worked on my feet. I flinched and giggled with the touch on the soles of my feet. \n\nThe touch stopped for a moment, and I felt her closer by my side. \"I'm going up on the table now, Jake. The angle will be better for getting to your trouble spots on your upper back. The same rules apply. If it's too much weight or pressure, say something or tap me. OK? Give me a tap, so I know you heard me.\"\n\nI reached an arm behind and tapped her leg. A few seconds later, I felt her weight slide on top of me. Given the pressure on the small of my back, I gathered she'd straddled my lower half. Angle achieved, she focused on my shoulders and upper back.\n\nHer weight shifted, and I felt her reposition herself. From on top of me, she pressed hard and found knots deeper under my skin. I arched my back as moments of pain turned into moments of relief. I tried to speak, but my face was pressed too deep into the padded halo. All that escaped were grunts and groans of satisfaction.\n\nHaving unlocking all she could find in my back, she repositioned herself. She draped herself over me, covering me with her form. Her weight pressed against me was soothing and arousing. The arousal only increased as she moved her body up and down on mine. Her breasts slid across my back, her nipple ring dragging a trail as she went. I pressed back against her and reveled in the contact.\n\nSoon she slid off me and patted my head. \"OK, time for the front. Flip over for me.\" I complied and looked up at her as I lay face up. Still naked, her skin glowed in the dimmed light of the studio. She took a bottle and poured more oil into her hands. \"So good so far? Anything you want me to focus on?\"\n\n\"I'm so relaxed right now I can't think of anything.\" I tried not to slur my words. \"I just want your hands back on me. It's all been amazing.\"\n\n\"Excellent. I like a sleepy, compliant customer. Stay with that feeling.\" She moved behind me and began to massage my temples. Standing at my head, she leaned forward and ran her hands across my chest. Her breasts hung low and brushed my face. She looked back between her breasts to me. \"Go ahead. You've been staring at them the whole time. Be gentle now. I can undo all this work if you don't use your manners.\"\n\nFrom below, I could now make out the details of the silver hoop in her left nipple. I flicked it with my tongue and tasted the mixture of oil, sweat, and metal. Another few licks and sucked on her, taking the nipple into my mouth. At one point, each of us had the other in our mouths. Maggie rolled her fingers around one of my nipples as she sucked the other. The flash of pain and pleasure was intoxicating. \n\nShe worked the rest of my body from the front, chest, arms, and legs, all benefiting from her touch. Reaching my feet, she tapped me and asked me to adjust. \"Move down a little on the table for me and spread your legs for me.\" \n\nMy cock was aching, and my balls felt heavy as she found ways to touch them I'd never felt before. At one point, she rolled my balls in her palm as the other hand turned my cock in a similar motion. I gripped the sides of the table as more of me stirred with lust. Maggie made sure to pause at various intervals, cutting off the building orgasm. I groaned each time, but she shushed me over and over, \"Who's in charge here?\" \n\n\"You are,\" I muttered as I tried to reach up for her touch.\n\n\"... and I know what's best. Don't stretch, relax and breathe for me again. Six and six. Remember? Can you do that for me, Jake?\" I nodded and closed my eyes as I focused on my breath. \n\nMaggie timed her touch to the rise and fall of my breathing. Her palms rolled across the surface of my cock. Her hands became slick with oil and the pre-cum leaking from me. From the rolling motion, she moved on to the base of my cock. Her fingers explored the space above my balls. More pre-cum flowed as my body responded to her touch. \n\nMy cock was bobbing in the cool studio air aching for more contact. Then, without warning, my cock was warm and enveloped. I moaned in surprise and bliss. Looking down, I saw only the top of her head. Her fingers continued to prod me as she sucked and pulled me into her. The feelings were intense. Any thought of counting breaths was gone as the waves of pleasure rolled through me. \n\nAs quickly as the suction was there, it was gone. I looked up to see Maggie ducked below the level of the table. A rustle and a click, and she returned. She took me in her hands and placed a condom at the tip of my cock, rolling it down in a smooth motion. A few more strokes covered my cock with more lubricant to her satisfaction.\n\nMaggie climbed on the table again and straddled my hips. \"Now, let's get the rest of that stress out of you.\" Maggie cradled my head as she leaned forward, caressing my neck and kissing my forehead. Then she sat back up and smiled. With a smooth motion, she reached down and guided me into her. \n\nI tried to shift my position, but she stopped me, pushing the top half of my body down to the table. \"Use your hips, not your back,\" she smiled as she looked down at me. \"Don't ruin all my hard work. Easy and slow.\"\n\nI rolled my hips to meet her and reveled in the feeling. Above me, she closed her eyes and smiled. A second later, her eyes opened, and a wicked smile crossed her face. She steadied herself and reached back to fondle my balls. Her fingers rolled my balls between them and caused my whole body to twitch in excitement.\n\nThe tension in my hips spread through my body as another orgasm swelled. My hips bucked with more urgency as the feelings rose. Maggie noticed the pace increase and pressed down on my chest with her hands. She locked eyes and ordered me, \"Yes, come on. Come for me, Jake.\"\n\nHer commanding tone sent me over the edge. I gripped her hips and ground into her. Maggie met my force with her own and rolled her hips on my pelvis. The friction between our bodies was incredible. My eyes clenched tight as another round of convulsions shook me. I erupted, filling the condom as I cried out from the force of the feelings swelling and crashing through me.\n\nWhen I finished, Maggie laid down on me, tucking her head into the crook of my neck. I have no idea we lay there, still connected at the hips. Time meant nothing. I had no idea how long I'd been there. I couldn't say if I'd leave the house to the late afternoon sun or early sunset of dusk. I held her close and sighed. \n\nAt some point, Maggie sat up and gave me a peck on the cheek. \"This is lovely, but it's time to get you cleaned up.\" She slid off and reached under the table. The condom was soon gone, and a warm facecloth moved in circles around my crotch. Done wiping me off, she left my field of vision. I heard the shower start again. She returned with a grin and pulled me to a standing position. \"OK, Jake, back into the shower with you and then change.\"\n\nThe shower was brief but bracing. Maggie started with warm water and lather. Long strokes of her arms removed the oil, sweat, and other fluids. She reached for the wall controls and gave me an evil grin, \"Ready for the wake-up?\" \n\nBefore I could respond, the water turned into a blast of icy needles. I flinched and almost screamed. \"Holy fuck! Why?!? After all the nice things you did, why end with this?\" I howled in mock anger. \n\n\"Hey, who's the professional here?\" She said as she stepped into the water with me. \"See? It won't kill you. It's the wake-up you need. I don't want to hear you fell asleep at the wheel on the way home.\" A few seconds later, she stopped the flow of water. \"See? You're fine.\"\n\nAs much as I wanted to complain, the bracing burst of cold water had woken me up and brought a flush to my cheeks. I wasn't my usual post-orgasm zombie self, which was a marvelous surprise.\n\nMaggie waved me out of the enclosure and slapped my ass as I left the shower. \"Move it, buddy. Time to go back to the real world.\" I shivered as I raced for the room and the warmth of a towel.\n\nIn the changing room, my clothes sat clean and folded on the bench. Everything was still warm from the dryer. I reveled in the feeling of the clean t-shirt and jeans. I noticed the envelope was gone and wished I'd had more to put in it.\n\nMaggie beamed as I came out. She had put on the robe and flats I'd seen her in. \"The clothes wash is all part of the service,\" she said before I could speak a word. \"Thank you for the payment. Everything's taken care of.\" \n\n\"That was amazing. Thank you so much. I feel...\" I stretched my arms above me and felt nothing but the gentle pull of skin and muscle. \"Nothing! I don't feel anything like I did earlier. You're a miracle worker.\"\n\n\"Thank you, I don't mind hearing that over and over.\" She smiled. \"Speaking of clients, I'd love it if you came back, but that friends and family discount only works once. Call me sometime, and we can figure out a plan.\" She handed me a simple business card that read 'Bodywork by Maggie.' The flip side read, 'Appointment Only' with a phone number. \n\nI tucked the card in my wallet, and Maggie continued. \"I know you're a friend of Tracey's, but I still ask you to use discretion. No giving out my number and no stories. If you want to recommend someone to me, you have to call and talk to me about it. I go strictly by personal referrals. Also? I've got Tracey to keep you in line, and we both know her bad side is a cold place in hell.\"\n\n\"Good lord, I've only seen a hint of her bad side. No, this card is going in my wallet and staying safe.\" I flipped the card between my fingers. \"I wouldn't mind working a few double shifts to save up for another visit, though. I'd like to come back again.\"\n\n\"Excellent,\" Maggie gave me a peck on the check. \"I do love repeat business. Now get in your car, and I'll open the garage door for you. Drive safe and say hi to Tracey for me.\"\n\n\"Like you're not going to call her the second I leave and tell her everything?\" I laughed, only somewhat joking.\n\nMaggie looked thoughtful for a second. \"No, I won't tell her everything, Jake. She referred you, so she gets some of the dirt. The rest stays safe with me.\"\n\nMy look of shock sent her into laughter as she opened the studio door and led me to the garage. \"If you could see the look on your face! I can see why Tracey likes you. OK, no more chitchat, off you go.\"\n\nA minute later, the garage door rolled up. I reversed my car into the scorching heat of the early evening, cursing my dead AC unit. A few turns and I was on the access road, avoiding the highway traffic and stale air. I drove home with the windows down and the radio on. \n\nHome, the rush of the day's events finally faded. I decided not to fight it. I took my clothes off and crawled into bed. I pulled a sheet up to my chin as sleep pulled me under. I fell asleep dreaming of hands roaming my body and a voice whispering in my ear."
    ],
    "authorname": "luckyrednotebook",
    "tags": [
        "anal",
        "indoors",
        "massage",
        "prostate",
        "prostate massage",
        "shower"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/stress-relief-from-skilled-hands"
}