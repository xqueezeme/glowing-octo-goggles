{
    "title": "Mutual Benefits Ch. 05",
    "pages": [
        "Mother could hold a grudge.\n\n\"What are you gonna tell Taylor?\" Kevin asked as we walked together towards the front doors of the school. \"You're gonna need to think of a good way to put it. Saying, 'hey Taylor, sorry, can't study with you this week, my mommy grounded me' isn't gonna do wonders for your sex life with her.\"\n\nI shook my head. \"Can you stop saying that please?\" I asked him with an annoyed voice. \"Especially in public. It's really weird how you keep talking about that, especially when I'm not interested in her like that.\"\n\n\"I'm trying to make jokes. Lighten up, dude.\"\n\n\"How would you like it if I made jokes about you and, I dunno, Daniel?\"\n\nKevin gave me a weird look. \"Um, I'd say I'm not gay,\" he said with a weirded out voice. \n\n\"Right, yeah. So it feels weird and alien, right?\"\n\n\"Are you gay?\" he interrupted.\n\n\"No, but-\"\n\n\"Then it's not the same thing.\"\n\n\"But I'm trying to s-\"\n\n\"No, I get it. It's an analogy, super clever. I just don't think it applies here. You get stupidly tongue-tied around her.\"\n\n\"You've seen me interacting with her like twice at this point. I'm more comfortable around her when we're just alone studying,\" I pointed out.\n\n\"Whatever you say, dude,\" he huffed.\n\n\"Why is this such a big deal to you?\" I asked as we entered the school.\n\n\"I just feel like you're either lying to me or yourself. I know you better than you know you, you know. I just wanna know why you feel the need to lie to me.\"\n\nI rolled my eyes. \"Yeah, Kevin. Whatever you say.\"\n\nWe continued walking for a few more seconds before I decided to press the issue. \"Doesn't that mean she's lying to you too? How often are you talking to her, anyway? You gotta know all eyes in the school are on her. Constantly.\"\n\nKevin stopped walking as I babbled on. In a second, I noticed he stopped and turned back to see him intently looking somewhere else. I followed his gaze and noticed his friend Robyn, staring. Not at him... but at me. \n\nI looked from side to side in awkward silence. People walked by us as she stood there, staring at me with some kind of distrusting expression. Eventually, she turned and practically ran away.\n\nI turned to Kevin. \"What the hell was that?\"\n\nKevin turned to me and sported a massive shit-eating grin. \"Oh Quinn, you wonderful bastard you...\"\n\n\"What?! What did I do?\" I sputtered.\n\nOf course he never answered me. It was clear that our conversation rattled her somehow though. Was she maybe a friend of Taylor's? Did she know something? Was the word getting out?\n\nIf so, it was getting out through Taylor herself. And worse yet, Kevin seemed to know something.\n\nBut that didn't make sense. Taylor clearly didn't want any of this getting out. Did someone else know...?\n\n***\n\n\"Look, if this is about Bryce, I had nothing to do with it,\" Morgan defended herself. \n\n\"No, I know, that was all Crystal. But I think some... rumors are spreading about Taylor and myself. Some, uh, untrue rumors.\"\n\nMorgan furrowed her brow. \"Like what?\"\n\n\"I don't really want to go into that. Just... do you know something? Not that there's anything to know, but, you know, did...\" I trailed off.\n\nMorgan was getting more confused by the second. \"Huh?\"\n\n\"Is... did Taylor talk to you about me or something? I know you look at the floor and don't say anything when I'm brought up.\"\n\nMorgan's expression returned from confusion to whatever her furrowed brow was trying to express, and she just stared off behind me. Was she... blushing? \"No. Taylor didn't say anything to me.\"\n\n\"Do I need to know anything?\"\n\n\"I'm not talking about you when my friends bring you up, so clearly I'm not bringing you up to strangers. If there are rumors going around, that sounds like a you problem.\" She opened her locker hastily, despite clearly having all of her class supplies already. \"Can you leave me be please?\" \n\n\"Uh... yeah. Sorry,\" I mumbled lamely, backing up instantly. I felt my cheeks burning as I walked away.\n\n***\n\n\"What?\" Taylor asked me, in a voice clearly louder than what the study period allowed. Most of the students, and Mrs. Li, looked up at us, but didn't say a thing.\n\nI shrugged bashfully. \"I can't do it. I have to go home immediately after school every day this week. It's a... parents thing. I don't have any control over it.\"\n\n\"Well, can you make it end quicker or something?\" Taylor asked.\n\n\"...That would mean I do have some control over it.\"\n\nTaylor rolled her eyes. \"Quinn, finals are coming up soon. I don't want to lose what I've, y'know, what I've got going. I don't want to fail.\"\n\nI stayed silent for a bit before Taylor's face darkened. \"And you don't want me to fail.\"\n\nI looked up at her with a weird expression. What did that mean...? \"Are you...?\" I managed.\n\nShe sighed and her face returned to normal. \"No, I'm just... frustrated. With, like...\" She looked around instead of continuing, clearly not wanting to continue the conversation.\n\nI decided to take initiative. Raising my hand, I addressed Mrs. Li. \"Could I have maybe two minutes in the hallway with Taylor? We just need to go over binomial distributions quickly, and I don't want to disturb the class.\"\n\nMrs. Li smiled slightly in acknowledgement, mouthing 'go ahead' and pointing to the door. I smiled back awkwardly, before turning to Taylor and motioning towards the door. \n\nOnce we were outside, I promptly shut the door and Taylor and I immediately started talking over each other. After a few seconds, Taylor held up a hand, attempting to shut me up, and pressed forward.\n\n\"Look Quinn, I'm just saying, this is like an ongoing contract thing. You agreed to help me out here, and like, you clearly want to, and I definitely don't get this new unit, so... figure something out!\"\n\nIt was my turn to speak. \"I'm not a miracle worker, Taylor. You haven't met my mother. Me coming home late is the reason I'm grounded...\" I turned pink. \"I mean, for lack of a better term... in the first place.\" I felt like a child. I turned pinker still as I continued. \"She probably won't make an exception for the thing that got me grounded in the first place. Are you comfortable coming to my place?\"\n\nShe bit her bottom lip in thought. \"I mean, like, it's not the most ideal situation, but it'll have to do...\" She whipped out her phone as I was about to continue. Did she really have to be glued to her phone every second?\n\n\"Okay, because second of all, I wanted to address you about a...\" My phone vibrated. Confused, I looked at my phone and back to Taylor. Her face remained plain and emotionless, almost challenging, as I took my phone out of my pocket and read the message. \n\nPlus, i wont be able to properly pay you if your at your place with kevin, so this is in your best interest too...\n\nI looked up from my phone and couldn't help but give Taylor a sarcastic smile. \"That's not exactly at the forefront of my mind, you know. Your education is still my top priority.\"\n\nTaylor smiled at me, shaking her head in the way she always did. \"So are we good?\"\n\n\"There is one more thing,\" I confessed, looking around to make sure the hallway was empty around us before continuing. \"I think the word about us is getting out,\" I admitted in a low whisper.\n\nTaylor looked at me with concern. \"Did you...?\"\n\nI shook my head. \"And Kevin doesn't know. He teases me about it, but that's because I'm still his virgin brother. He only finds this funny.\"\n\n\"Another reason not to study at your house,\" Taylor observed.\n\n\"Tell me about it. Anyway, I think it's just because the school has seen us together a lot. And we need to make sure it stops. I've asked Morgan about it, but she says she didn't say anything. Maybe it's Crystal, but...\"\n\n\"Wait. Why do you care?\"\n\n\"Because the last time something like this happened, I was almost pulled into the air by my shirt.\"\n\n\"Right, okay.\" Taylor seemed deep in thought. I couldn't tell exactly what she was thinking, but it seemed like something clicked in her head. \"Okay, I'll try to make this go away, but only if we can study after school. ASAP. So, like, tomorrow.\"\n\nShe was bold. Bold and presumptuous. Mother would kill her. \"I'll make it happen one way or another.\"\n\n\"And in the meantime we should probably not spend so much time around each other. No more lunches, and after this, no more private conversations. I'll text you when you can approach my car. Okay?\"\n\nIt was weird how I went from wanting the popular girls to acknowledge my existence more, to being thankful when they proposed the opposite. \"Okay.\"\n\n\"And one more thing.\" She chewed on her lip again. \"Don't talk to Morgan anymore. Like, at all. At least until I have some stuff, like, figured out. I think it was her.\"\n\n\"Did you tell her...?\" \n\n\"No. But I think... it's complicated. Look, Morgan is Morgan. You don't even like her anyways, right?\" Taylor asked.\n\n\"Um, well, I think she's perfectly fine as a person, I wouldn't-\"\n\n\"Quinn.\" Taylor's face regained that same darkness. \"Trust me on this. Okay?\"\n\n\"...Okay.\" Taylor could be scary when she wanted to be. I guess Morgan really was upset with how she treated me. I guess that explained the blushing, and the looking at the floor. It kind of just made me feel bad. If Taylor hadn't been so adamant about me not talking to her, I would have wanted to talk to Morgan and make amends or something. She did seem kind of cool, most of the time. Just overprotective.\n\nBut, Taylor knew better. She clearly had a plan. Maybe Morgan was this weird mastermind or something. Before I knew it, Taylor had walked back into the classroom, with me snapping to attention and following. Nobody looked up at me, and nobody cared. You'd think if rumors started, they'd originate at, or at least end up at, the classroom we shared, but the students here really didn't seem to give a crap. I couldn't help but wonder where it originated.\n\n***\n\nOne thing was certain, I would have liked more allies. So far I had Taylor, who wouldn't explain the plan apart from \"don't talk to this popular girl,\" and needless to say, I had years of experience avoiding just that, so we were fine there. I suppose I had Kevin, but he clearly would have turned on me for a joke. Plus, he also seemed to know stuff I didn't. So, I decided to make my own plans.\n\n\"Bryce!\" I called out to the group of guys, all in a group outside the gym. Bryce turned to face me, and seemed to genuinely forget who I was for a few seconds before his eyes lit up in realization. \n\n\"What?\" he asked finally.\n\n\"Do you remember me?\" I asked. I had no idea why I asked that. Internally I cringed.\n\nHe sighed. \"Look dude, I probably shouldn't'a' grabbed you, that was my bad, so can we just be cool about it?\" He asked in a rehearsed voice, before beginning to turn back to his friends. \n\n\"No no, that's not why I'm here. You've got English next, right? With the Hamlet test?\"\n\nHe gave me a weird look. \"Yeah... why?\"\n\nOne thing the Gifted crowd loved to do was lording over the jocks, especially knowing which jocks were particularly bad with which subjects. I could recite it in my sleep - Calvin was decent at English but bad at math. Connor had a good work ethic but was deceptively dumb. And Bryce? Bryce sucked at English. \n\n\"Would you like a boost? I had the test first period.\" I held up a piece of paper in my hands.\n\nBryce stared at me, puzzled. \"What's on that?\"\n\n\"The answers.\"\n\nBryce's eyes moved from side to side, in shock. \"What?\"\n\n\"Do you want it? If not, no problem.\"\n\nA crooked grin appeared on his face. \"Are you for real? Sure, I'll fuckin' take 'em.\" I held out the sheet and he snatched it up, looking over the sheet. It seemed the answers translated to him well. \"Holy shit!\"\n\nI stayed silent until he looked over the paper fully and clapped his eyes back on me. His grin temporarily vanished. \"Wait, why me?\"\n\nI shrugged. \"We got off on the wrong foot. Just wanted to do something nice.\"\n\n\"Dude, right on!\" His grin returned. \"You saved my fuckin' life, buddy.\" He turned back to his group. \"Yo, get a load of this...\"\n\nI smiled as I walked away. That paper couldn't be traced back to me. My name wasn't on it, and I was known as a goody nobody in this school. Even if Bryce ratted me out for whatever reason, I could just deny it. And now, without a doubt, Bryce had quickly gone from not trusting me to, knowing how much his English grade meant to his scholarship, owing me his first-born. \n\n***\n\nMother was, as expected, the more difficult one to appease.\n\n\"This is a punishment for her only. I do not-\"\n\n\"Speak English,\" she barked.\n\n\"This only punishes her. I don't hang out with friends. Mother, I don't even have any. But if I can't tutor her, she might fail the class.\"\n\n\"If I just took away your video games, you would accept it and not complain. But now, I tell you no going out, and you complain. So clearly, this punishment is the one that truly impacts you.\"\n\n\"I...\" I sighed. \"This isn't about me. I just don't want to let her down.\"\n\n\"Let her down? She is failing. Her education let her down. She let herself down!\" She laughed derisively. \"Her success is not your responsibility, Quinn.\"\n\n\"But I... care about her success. Just because it's not my responsibility doesn't mean I don't want to help.\" I shuffled my feet as I stood.\n\nMother turned to me. \"You have feelings for this girl?\"\n\nI don't know what made me pause. I didn't think I did. Did I? I wasn't sure. \"Um, maybe I do,\" I replied lamely. \n\nMother took this as bashfulness and shook her head, forming a smile. \"You fell for a whitey!\" she joked. \n\n\"Mother, the entire school is white people. The entire town is white people.\"\n\n\"Isn't your class president a black man?\" she asked.\n\n\"Black woman, and student council president, but okay, bad example. My point is-\"\n\n\"Bah!\" Mother flicked her wrist as if to backhand my very sentence away. \"Your point is you fell in love. You'll do whatever she wants. You need to assert yourself, Quinn!\"\n\nI didn't recall asking Mother for romance advice. \"I tried that and it led to me staying later than usual. But it won't happen again!\"\n\n\"Of course it won't happen again. Because you're not going out at all!\" Mother laughed. \n\n\"Mother, I would-\"\n\n\"Zh\u00f9k\u01d2u,\" she replied, again with the backhand to the air. I stared at her for a few more seconds before she slowly started to smile again. \"If you promise to be a good man for her, I will give you this one. But! If you are late home one more time, this happens again and it is for eight weeks! N\u01d0 t\u012bngd\u01d2ng ma?\"\n\n\"Mother, she and I are not dating,\" I protested. \"It's just...\" It's just something I said without thinking about it.\n\n\"Ah, now!\" Mother wagged a finger in my face with a cheeky expression. \"I just gave you freedom to see her, you are no longer grounded. Do not argue with me now!\"\n\nI smiled a muted smile. \"I appreciate it, Mother.\"\n\n\"Yes you do. Now go set the table,\" Mother ordered. I was halfway done setting the table when Kevin burst through the door. \n\nI looked up at him, then back to Mother. \"Looks like I'm not the only one running home late,\" I joked.\n\nKevin pointed a finger up at me and gave me an expression I never saw him give me before. It was like a, 'you dare to say that to me?' expression. \"I just saved your ass,\" he told me.\n\n\"How?!\" I asked.\n\n\"No saying 'ass' in the kitchen,\" Mother barked, not looking at him. Kevin looked back at her, then me, then motioned with his head towards our room and walked off. I quickly finished setting the table, then followed him.\n\nAs soon as I was in, Kevin shut the door, and shoved his finger in my face. \"Are you trying to get expelled?\" he asked with a seriousness I didn't know he had in him.\n\nI couldn't speak for a few seconds. \"...What?\"\n\n\"I asked if you were trying to get expelled. Are you trying to impress somebody here? What's the story, bro?\"\n\n\"I... don't know what you're talking about.\"\n\n\"I'm talking about you, sneaking answers to, like, the entire third period English class. That sort of shit can get you expelled, dude!\"\n\nWhat the hell? \"...How did you-\"\n\n\"I got eyes all over the school, Quinn!\" He cracked a quick, breathy half-smile. It was the first positive emotion I'd seen out of him since he arrived home. \"You gotta know this by now.\"\n\n\"I... showed one student the-\"\n\n\"But why, man? That's so not you! This shit sounds nothing like you! Do you realize that you could face serious consequences for this?\"\n\nI could feel my brow furrow. \"I don't need the speech from you.\"\n\n\"Dude, I just saved your ass! And by the way, a fucking 'thank you' would be nice.\"\n\n\"'Saved me?' How did you save me?\"\n\n\"Lemme just say, they won't be questioning you about it,\" he answered.\n\n\"What, so you heard about me doing this through the grapevine, sweet-talked the teachers into letting go me accidentally starting a mass cheating, and you think I'm going to believe you?\"\n\nHe shrugged. \"Something like that. So, what the fuck's up?\"\n\nI huffed. \"I wanted to be on Bryce's good side-\"\n\n\"For what? What the fuck do you have to do with Bryce?\"\n\n\"Shut up for a second, will you?!\" I exploded. \"I wanted a freaking ally on my side because it seems like half the school thinks Taylor and I are sleeping together. And who knows, maybe that entire thing is your fault!\"\n\nKevin looked at me like I was insane. \"What?\"\n\n\"Taylor's friends didn't like that Taylor was hanging out with me so much, so I think they assumed I had ulterior motives or something. So they stuck Bryce on me, and he grabbed my shirt and stuff. And I'm getting the impression that half the school is talking about us at this point, so I wanted Bryce to see me as a good guy, and not a-\"\n\n\"Dude,\" Kevin interrupted again. \"Doing favors and being the geeky little servant for the jocks is not going to make you one of theirs. It's just going to make them feel like they can use you for more shit.\"\n\n\"I don't need them to see me as one of their own, I just want them to remember me as the guy that did them a favor instead of not knowing who I am. They don't know me yet. It's not about popularity. It's about what they know about me. And if I'm not popular and they never heard about me, I'm as good as a stranger. If I'm gonna survive whatever fallout happens from the latest drama about Taylor and I, which you may have caused, I want the most physical guys in the school, the ones most likely to bully me if things go south, to at least know me, and know me for something I did for them, instead of knowing nothing but 'destroy the shady outsider.'\" I was breathing heavily with anger by the end of my monologue.\n\nKevin was breathing heavily too, his expression still angry yet his mouth firmly closed. \"Hmm,\" he finally acknowledged. \"I see.\" He stayed silent a bit longer. \"For the record, I'm kidding when I talk about Taylor and you. And I only talk to you about it.\"\n\n\"Yeah, well, I need you to stop, okay?\" I asked him, my tone weakening.\n\n\"Yeah, okay, I'll stop. But for real, never do this again. Can we both make a promise here?\"\n\n\"What did you do exactly?\" I asked him, now curious. Kevin may have been one of the pseudo-popular types, but here it sounded like he was some sort of self-installed eye in the sky at Hazelwood. \n\n\"Look, I was in the right place at the right time, doing something unrelated. You're just lucky I happened to... do what I did.\"\n\n\"This sounds shady, Kevin,\" I replied honestly.\n\n\"Yeah, maybe it does,\" he admitted. \"But look, I feel like it'll dig you a deeper hole if I involve yourself in what I got going on. You got your shit, I got mine. I happened to cross paths with your shit once, but from this point on, no joking about Taylor, but in return, I can't talk to you about my shit either.\"\n\nI shook my head. \"This is weird, Kevin.\"\n\n\"Sure as fuck is,\" he agreed, then went to open the door. He paused. \"Do you really think I started any rumors about you and Taylor?\"",
        "I shrugged. \"I honestly don't know,\" I replied. \"Taylor thinks Morgan started it, because she's intimidated by me or something.\"\n\nKevin laughed. \"You, intimidating?\"\n\n\"You didn't talk and let me speak there when I got angry,\" I pointed out.\n\nKevin looked off towards the wall and made a thinking face. \"You know what, good point. But I really don't think it was me.\"\n\nWho was to say? I wasn't. I just knew a few things for sure. One, I nearly got in trouble and Kevin definitely found out, then may have used some voodoo magic to save me. Two, I needed to be way more careful with my plans in the future. This could have ended really poorly for me.\n\n***\n\nI never was the type of guy to lock eyes with a girl in the hallway and then immediately look down at the floor. Though, to be fair, that was mostly because my gaze was usually locked on the floor away from any eyes to begin with. I guess hanging out with Taylor really was changing me for the better, because I only noticed I wasn't looking at the floor anymore when Morgan and I locked eyes on the way to class and I immediately looked away at the wall.\n\nI remembered Taylor's instructions. Don't talk to Morgan, at all. It seemed only natural that if we locked eyes, I should look away. To not encourage her or something. And hey, if Taylor had a plan, from what I could understand, it was working. I didn't get any strange looks from people anymore, and I felt people's eyes were off of me and my name was kept out of their mouths, which suited me just fine.\n\nThough, it was annoying. I was, as far as these people knew, just in closer proximity to Taylor for a few weeks. The truly astute would see I was helping her study. Was that really worthy of drama? Didn't these people have, I don't know, lives? I didn't even have a life and I still cared less than these people.\n\nI got to my locker and started putting my stuff away when I felt my phone buzz again. Not having any friends really helped narrow things down - getting a text right before class either meant Kevin forgot a book again and needed to borrow one of mine, or...\n\nhey, so what did your mom say? \n\nTaylor. I felt myself blush a little, still feeling so very childish that I was so beholden to my mother. Thinking for a second, I began to tap on my phone's keyboard.\n\nShe understands. I'm able to help you study. I just need to make sure I don't stay out too late again.\n\nI sent the message, read it to myself (a habit of mine), and finished collecting my school supplies. By the time I was finished, Taylor had responded.\n\ncool! Are you working today? I think we should study again \ud83d\ude42\n\nTaylor sure was eager to ace her classes. Well, at least it was better than being tasked to tutor someone who hated studying. I replied, telling her I was free but outlining when I'd have to go home, and she promptly agreed.\n\nI felt more nervous than usual in my English class, remembering what Kevin told me. If Mr. Jefferson knew, he was clearly not going to bring it up. He didn't look at me any more than he usually did - which was to say, he didn't look at me at all, and like always, like with all of my other classes, I seemed to blend in with the scenery. And, hey, that suited me just fine, especially today of all days.\n\nTaylor seemed to really be taking what I told her seriously, since she didn't look at me once in our entire data management class. We weren't exactly best friends or anything, but ever since we started studying together, she at least gave me a polite smile when she came in, unless she came in halfway through a lesson. Today, she just took her seat and seemed to be glued to her phone, as were most of the students that weren't chatting each other up. The lesson went as it always did, with me being reminded of how similar and yet how different my life had become since Mrs. Li asked me to tutor Taylor. \n\nAfter school, Taylor instructed me via text to wait for her signal to start walking towards her car. So, instead of doing anything productive, I just stood at my locker like a big dumb pillar, staring a hole into the locker door in front of me.\n\n\"Long day?\" the voice of Kevin took me out of my thoughts.\n\nI nearly jumped. \"Um, yeah,\" I mumbled. \"Kinda. I was scared during English.\"\n\nKevin leaned suavely on the locker next to mine. \"Hey, like I said, it's over and done for you. You're welcome.\"\n\n\"Yeah, thank you,\" I admitted. I still had no clue what he actually did, or who knew what, but knowing Kevin, he liked having that kind of power skewed in his favor. \"Anyway, no need to wait up for me, I'll be busy tutoring... the person I'm tutoring.\"\n\n\"...The person you're tutoring?\" Kevin repeated with a slight chuckle.\n\nI looked around me to see if anyone was paying attention. \"Yeah, you know... Taylor,\" I replied in almost a whisper.\n\n\"No, I know who it is, but... don't you think you're acting a little... paranoid?\"\n\nI was mostly just following orders, but hey, if it would make him stop talking about it. So instead, I shrugged. \"I guess.\"\n\n\"No worries, I got plans anyways,\" he replied. \"Just wanted to give you this back.\" He reached around to his open backpack and fished out a textbook.\n\n\"Oh, thanks,\" I mumbled, opening my locker again and sticking it inside. \n\n\"Cool, thanks. See ya!\" He waved to me and off he went, doing whatever shady stuff he was doing. He wasn't even walking towards the exit of the school. Part of me was tempted to follow him just to see what the heck he could possibly be doing where he accidentally found out some clearly sensitive info, but Taylor was likely going to ask me to come to her car soon.\n\nDeciding to save time, I decided to walk towards the parking lot and then walk specifically to her car when she asked me to. It was nice going outside anyway - with the school year's end in sight, there was warmth and the rustling of leaves on the trees and a nice smell to the outside air. I may have been a nerd that spent most of his time indoors, but that didn't mean I couldn't appreciate the outside when it was available to me.\n\nOnce outside, Taylor's car was immediately noticeable, even at the end of the parking lot. I don't know if it was the color or just her popular aura, but there it was, sticking out like a rich, vibrantly painted thumb. I could see Taylor there, as well as three of her other friends. It looked like Crystal, Morgan, and... Milo. Poor Lexi.\n\nI dawdled around as the crowd outside thinned and cars and buses drove away, until eventually, the group of four dissipated and the other three walked away. A solid minute later, Taylor texted me, telling me it was okay to come to her car now and apologizing for the wait. When I got there, she gave me a slightly disturbed look.\n\n\"That was fast,\" she commented. \"Did you run or something?\"\n\n\"No, I just was over there,\" I replied, gesturing to the place in the parking lot where I was standing.\n\n\"Oh,\" Taylor replied, clearly not satisfied with my answer.\n\nI was accustomed to not getting social cues, so I guess that wasn't good of me to do that or something. I cleared my throat. \"Did I do something wrong?\"\n\n\"No, no, nothing. It's fine. Come on, let's go! We probably have a lot to get through.\" Her chipper demeanor returned in no time. She sure seemed stressed about the upcoming finals, but I guess outside of my perspective, that made sense. We made a quick stop at Starbuck's, because of course, but we arrived at her house in no time, chatting about finals and things along the way. Before long, we were in her basement again, which was starting to feel like a familiar place.\n\n\"I wish I got Jefferson. I've heard, y'know, good things about him. Jackson is not making English any easier for me,\" Taylor finished her thought.\n\n\"I've had both, and honestly, you're not missing much,\" I replied. \"Their teaching style is basically the same. If anything, I'd say Jackson cares more about students.\"\n\n\"Still,\" Taylor pouted, \"English sucks.\" Her little chipmunk face was just as cute when she pouted as when she smiled. I had no clue how she did that. \"I don't suppose you had the extra time to help me with English too? To be honest, I don't need any, like, tutoring, but just if you had any notes you could share...\"\n\n\"How'd you hear about that?!\" I immediately blurted out.\n\nTaylor gave me a weird look. \"What? Um, I just figured you were as good at English as you were at data.\" She squeezed her eyes shut and rubbed her forehead. \"Ugh, is this another stereotype thing? You're kind of sensitive sometimes.\"\n\nOh. Whoops. \"Oh, sorry, I thought you were talking about something else. I could-\"\n\n\"What else?\" Taylor interrupted.\n\n\"It doesn't matter. It was just something unrelated.\"\n\n\"No, come on, Quinn. If we're going to do what we're doing, it means you have to be completely honest with me, okay? No secrets.\"\n\nI blinked. \"Wait, what do you mean, no secrets? You told me yesterday not to talk to Morgan anymore, and when I asked why, you told me to just trust you on it.\"\n\n\"Yeah, but that's different. I think I know what's going on-\"\n\n\"Yeah, and you haven't told me. Isn't that keeping a secret?\"\n\nTaylor smiled in frustration. \"No, it's just not wanting it to blow up in my face if I'm wrong, Quinn.\"\n\n\"Yeah, I certainly have been understanding what that feels like for the past... week,\" I mumbled back, mostly to myself.\n\nTaylor just smiled back in response, sitting on her beanbag chair. I sat down next to it, sighing, both wanting to press on in the conversation and glad it was over. \n\nAfter a bit, Taylor smiled at me. \"So, uh, should we get our books?\"\n\n\"Yeah, probably,\" I admitted, reaching over and grabbing both of our bags. I handed hers to her and retrieved my book from my bag. By the time I was done, Taylor had her legs strewn across my lap. Gulping, I looked towards her. She had her book open and on her lap, and had turned slightly towards me so she could have her legs straight forward, going across my lap. I couldn't help but give her a look.\n\n\"What?\" she asked innocently, but gave me a wink. \"Are you okay? We're going over unit 5.2 today, right?\"\n\n\"Um...\" I cleared my throat in nervousness. \"Yeah.\"\n\n\"Hey, if you really want me to, you can ask me to stop,\" Taylor continued in a singsong voice. \"But, like, I'm just getting comfy and ready to study.\"\n\nI looked at her and cracked a smile. \"No secrets, Taylor.\"\n\nShe looked at me and her eyes slowly narrowed, a smile forming on her lips. \"Let's just get through the studying for now, okay?\" she asked, with a hint in her voice that something else really was up.\n\nNeedless to say, it was not easy to concentrate on the lesson, but I did the best I could with what I had. Inevitably her legs kept shifting and moving, and needless to say, I was rock hard. It was smack down the middle - I was halfway to heaven, finding myself panting orally from the anticipation and pleasure I was feeling from having the hottest girl in school's legs draped over me, but the other half of me felt in physical pain from my erection, let alone the discomfort from this situation being so alien to me. \n\nAfter nearly an hour, the lesson finally clicked with taylor. I was staring at her way too much to be productive, but to her credit, her gaze was nearly constantly on her book. It was weird. She was clearly being open about her flirtation with me a bit more, bit if that were fully true, I would have thought she'd be less focused on studying. Why were both showing an increase...?\n\n\"Zero point three four, with its complement being zero point five six,\" Taylor murmured.\n\n\"That's it! You got it. I think we're done the lesson for today.\" As soon as the words were out of my mouth, her textbook flew by my head. I whipped my head around to watch it hit the wall, then looked back at Taylor in confusion.\n\n\"Thank fuck,\" she practically moaned. \"God, I hate data management.\" She stretched her whole body, causing her legs to intentionally - or otherwise - graze my erection. \n\nInstinctively, my body jolted and without even thinking about it, I blurted out, \"Aiya!\"\n\nTaylor grinned. \"Okay, now you're just playing it up.\"\n\n\"So, why the legs on my lap thing? And no secrets,\" I added playfully. Taylor giggled quietly.\n\n\"Alright, here it is. My last dick appointment fell through and I'm h-... I'm guessing you'd get it if I said I'm ovulating?\"\n\nMy eyes shifted from side to side. \"Uh... your hormone levels are up?\" Taylor stared at me expectantly. \"Like, you're pent up?\" More staring. \"Your sex drive has increased?\"\n\n\"Oh my God Quinn, say that I'm horny.\"\n\n\"You say it if you are.\"\n\n\"I'm horny as fuck, Quinn.\"\n\n\"Okay!\" I replied defensively. \"Good. I guess we... we're all being honest here.\"\n\n\"Look, I tried to be good and focus on the lesson, but in exchange for that... Could we please... y'know...\"\n\nMy erection was practically jumping in my pants. The hottest girl in school was begging for me, Quinn Shen, to relieve her. Me. Help her. With sex stuff. \"You're getting, uh... more bold with these, huh?\" I laughed nervously.\n\n\"Is it making you uncomfortable?\" she asked, her voice full of sudden concern.\n\n\"No! No, I'm okay. I appreciate you asking. This is all just... new to me. If I didn't know any better I'd say you... liked doing this with me.\"\n\nTaylor rolled her eyes and a certain grin appeared on her face. A 'you big dumb idiot' grin. \"Quinn...\" she began, yet again in a singsong voice. \"It's pretty clear I enjoy this. I've even told you I kind of like teaching you all about this. How much clearer do I have to make it...?\"\n\n\"I just... it still feels fake. Like at some point you're going to reveal that it was all an elaborate joke or something,\" I admitted honestly, blushing a little. \n\nI was expecting her to reassure me again, but instead she just smiled. \"So then... what would it take to show you I really mean it?\"\n\n\"Oh, I didn't me-\"\n\n\"Because it sure seems like all of the attention has been on me,\" she purred, leaning in. She bit her lip and looked down at my crotch, slowly moving her legs up and off of me. One leg slid off, but with her other foot, she started slowly kneading my crotch. My body practically jolted with every light touch she made.\n\n\"Taylor...\" I moaned.\n\n\"Sssh,\" she commanded. \"Either tell me to stop or enjoy yourself. All the attention has been on me, and I want to repay you a little. You've been soooo patient with me Quinn, and you've put up with so much for me...\" She hung on each word for a little longer than she needed to. It was so easy to rile me up, and I felt like putty in her hands. Although, in Taylor's hands, I doubt anything could have turned to putty.\n\nHer second foot joined in and I gave Taylor an almost panicked expression, trapped in my nervousness. I really didn't know what to do, but Taylor clearly wasn't interested in what I planned to do. An almost mischievous little smirk was painted across her face, betraying both how horny she was, and how much she clearly enjoyed being the one in charge. \n\nEventually she let up, removing her feet from my crotch, though clearly only because she had plans to escalate matters. She slid off of the beanbag chair and practically crawled over to me, running her hands slowly up my pants and eventually landing on my fly.\n\n\"Taylor, are you s-\"\n\n\"Don't talk,\" she ordered quietly yet sharply, with enough to force me to shut up on the spot. She returned to her normal half-smirk immediately afterwards. \"Good boy. I want this, and so do you. No more nervous backtalk. This is happening.\"\n\nI was nervous for a billion reasons, and so many of them were coming to light. When it came to size, realistically speaking, I was probably below average. I didn't see why dick size even mattered in the grand scheme, but I had this silly paranoia about Taylor seeing how big I was - or, I guess, lack thereof - and laughing, telling me we should stop.\n\nThat didn't happen. Taylor, ever the pro, had my fly undone and my cock fished out in seconds, and once it was out, her eyes did that slight widen that people do when they're excited. \"You're so hard, Quinn... Hard and throbbing. Did I cause this?\" She giggled at her own stupid question. \"I can't remember the last time I saw a guy this excited... I guess you want this almost as badly as I do.\"\n\nShe winked at me, then turned her attention back to my cock, passing it from hand to hand, eyeing it and stroking it slowly. \"I really like the way it looks when I stroke it,\" she said aloud to herself, then turned back to me. \"All the guys I've been with have been cut.\"\n\n\"Ah, yeah,\" I managed to choke out nervously. I had to admit, out of all the things I learned about white people, circumcision was definitely one of the weirdest, but like hell was I thinking about that now. I was so pent up I practically had tunnel vision. I had to concentrate every once of my being into not shooting a load on the spot. \n\nThe sexy knowing glances I got from Taylor were certainly not helping any. I'd call them 'enchanting,' but they were definitely more bewitching than anything. That said, I only had a full view of her face for so long - before I knew it, before I could even second-guess what was even going on, she opened her mouth and extended her tongue across my shaft.\n\nI moaned and threw my head back, looking up at the ceiling, closing my eyes. The fucking hottest girl in the school had crawled over to me, complimented my cock, and was now licking it from... yup, from base to tip. This was just downright insane. And I wanted to make the moment last as long as I possibly could, but god damn, was she making that difficult for me.\n\nThe downside to not seeing Taylor anymore meant every motion her mouth made had doubled the intended effect on me. I knew exactly what her mouth was doing at any given moment. It was clear that she was definitely a pro, and likely had a lot of experience. I felt like she was both using every trick in the book on me and not even needing to dedicate conscious thought to what she was doing - she was just that experienced and good. Every movement of her lips made my hips jolt and shift, and she knew exactly how to use her lips and tongue - and even her teeth - to make me shudder and squirm.\n\nJust as I felt like I could look back at her face again, that was the moment she decided to take me into her willing, waiting mouth. I couldn't help myself from uttering, \"Oh, fuck, Taylor!\" as I felt her mouth enclose over my dick, feeling a woman's mouth on my dick for the first time. I could definitely see why guys wouldn't shut up about it, especially if they ran in the same circles as Taylor. \n\nI was amazed I lasted as long as I did, but with Taylor now fully sucking me off, I lasted maybe seconds in her mouth. I learned firsthand that, especially during your first blowjob, warning a girl before you start firing was a challenge, but I also dumbly assumed Taylor wasn't prepared for that outcome. Plus, the pants and moans that came with my orgasm were at least something of a warning. I felt like I was going to black out as I shot rope after rope of cum into Taylor's mouth - definitely more than I expected I was going to make. I felt five, then six, then maybe even seven shots fire off, and Taylor moaned in turn as she felt them firing into her mouth.\n\nAs soon as I was spent, I threw my head back again and collapsed on the floor. I hard Taylor gooily mumble, \"Holy shit,\" then adjust herself or something. I wasn't sure, my eyes were closed, but when I opened them, she was rubbing the carpet with a tissue. I guess some of my cum had leaked out of her mouth after I exploded.\n\n\"That... was... amazing,\" I panted. \"Oh my God Taylor, you're so amazing at that.\" \n\nTaylor kept up her mischievous smirk, granted with a messier mouth, and winked at me. After she finished cleaning up, she eyed me up and down, and giggled. \"So how was your first blowjob?\"",
        "\"I can't... I just... wow. Just wow.\" I laughed as my strength returned to me, allowing me to get my elbows on the ground and prop myself up. \"Was that anything like what you felt last time? Because wow.\"\n\n\"I mean, I know my way around sucking a dick by this point,\" Taylor replied, jokingly trying to make it nonchalant. \"But hey, if you wanted to, like, keep up your skills, I wouldn't mind a little repayment...\" She flipped her hair in a diva-ish manner.\n\nI didn't need to say anything. My face must have given away how eager I was. Taylor and I were like a yin and yang situation - I was pulling my pants up, she was pulling hers down. After getting them off, she sat back down on the floor, before squealing, \"Ooh!\" and getting back up.\n\nStill fiddling with my clothes, I shot her a confused expression. She moved to the back of the room, removed her panties to reveal a recently shaven pussy, and then sat down there, with her legs spread open. She smiled confidently yet almost evilly and pointed to her pussy. \"Crawl.\"\n\nI chuckled in disbelief. \"Sorry?\" I asked instantly.\n\n\"You heard me. You want this pussy? Crawl.\" She was dead serious, despite her huge smile. \n\nI could feel my face burning with shame. This was a lot to take in, but she just gave me by first ever blowjob, and no doubt set the bar high as hell for future blowjobs, so I wasn't exactly in a position to argue. \"L-like this?\" I asked, getting on my arms and knees.\n\nTaylor nodded, and motioned again towards her pussy, wordlessly telling me to hurry up. Unsure whether I should have looked in her eyes or at the floor, I started my journey, crawling across her annoyingly long floor to reach my prize, the hottest girl in school, clothed from the waist up, naked from the waist down, completely owning me for the moment. \n\nAs soon as I arrived, she murmured, \"Good boy. Now, no hands. Mouth only.\" She ground her hips once against the floor, directly my attention to her beautiful pussy. Her lips were swollen with arousal, and I didn't just see her wetness - I could smell it.  \n\nObeying her, I knelt down further and moved my face between her legs, extending my tongue out to taste her and dance amongst her folds for the first time. Taylor sighed immediately, grabbing the back of my head roughly and grinding her pussy into my face immediately. I couldn't tell if she widened her legs or tightened their grip around my head, but I could sure feel something - and it wasn't just her dominating presence.\n\nTaylor cooed and moaned and let me know just how much she appreciated my efforts as I tried using everything I learned from the last time and applying it - for now, she was my tutor, and I wasn't just trying to learn and grow, I was trying to please her directly. She wasn't teaching me, she was the goal. Her pleasure was the goal. \n\nHer hands played with my short hair and shoved my face deeper into her, emitting low guttural moans that I would have thought couldn't have come from Taylor's mouth. It was clear that her hormones could build up - she was pent up like a wild animal, and now she was taking out all of that pent-up frustration on me. And to be honest, it was new and weird, but I was also perfectly alright with it. I could get used to this. If nothing else, I didn't have to think too hard about making all of the decisions, and if nothing else, for a pairing such as us, that was efficient.\n\n\"Fuck, yesssss, Quinn, yesss, don't stop,\" she moaned as I pressed on. Her hands kept my head locked in place, and her hips told me that her own orgasm was fast approaching. I visualized the layout of her vulva in my mind and worked as hard as I could with my tongue to please all areas I could remember - the labia, the clit, and her innermost part. Just as she had done with me, I wanted to do everything I could with my mouth to please her. My tongue went up and down, side to side, in and out with a plan, a strategy, to please her as best as I could.\n\nI found a good rhythm with my tongue on a particular part of her vagina, and her thighs clamped down suddenly on my head. \"Oogh, fuck yes Quinn, keep doing exactly what... you're doing... right there... don't stop... but don't slow down... or go any faster... okay?\"\n\nI didn't reply with words, but kept up what I was doing, licking away, tasting her and enjoying her. \"Good... boy...\" she panted and moaned, starting to shift and almost vibrate in place.\n\nI swear I could feel her orgasm ripple through her. It started in her vagina and worked its way throughout her body. It definitely lasted longer than any orgasm I'd ever had - practically a minute if I had to guess. Even if her body was no indicator, I was worried her moans were going to make her mother come downstairs. \n\nEventually, her thighs relaxed their grip they had on my face and I remembered how to breathe again. Collapsing to the floor, I began panting myself, though the pants quickly turned to small laughs.\n\n\"This is so crazy,\" I laughed, both to myself and to her.\n\nI could hear Taylor smile. \"Yeah, but I think this is, like, a good kind of crazy,\" she breathed. \n\n\"I wasn't expecting you to be so... to take control like that,\" I admitted, shifting over so I could look at her.\n\nShe was putting her panties back on, and turned to me to shrug. \"Tada!\" she quipped. \"I dunno. I'm, like, trying out new things. I'm having fun if you are.\"\n\nI lay on the floor for a little bit longer and continued my breathy laugh. \"I definitely am.\"\n\nTaylor and I were quickly becoming a lot less shy with each other, her especially. We may have had more reason to hide what was going on - and even what wasn't - from prying eyes, but it was clear more and more to hide was being uncovered. I don't know why today was the first time a thought started to linger in my mind - just how far exactly was this going to go? And when will it end? - but I guessed she and I would find that answer one way or another soon, and it was going to be crazy seeing what kind of journey would lead to our answer."
    ],
    "authorname": "BashfulScribe",
    "tags": [
        "school",
        "teen",
        "eighteen",
        "high school",
        "wimp",
        "nerd",
        "popular",
        "chinese"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/mutual-benefits-ch-05"
}