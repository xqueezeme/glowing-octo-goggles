{
    "title": "Lecturer",
    "pages": [
        "Copyright Oggbashan January 2015. The author asserts the moral right to be identified as the author of this work.\n\nThis is a work of fiction. The events described here are imaginary; the settings and characters are fictitious and are not intended to represent specific places or living persons.\n\nThank you to naokosmith for academic advice. \n\n*************************************************\n\nI read the letter again. How many times had I read it? It still didn't make sense. The main paragraph says:\n\n'The Vice-Chancellor and the President of the Students' Union request your attendance in the Senate Hall at 11 am on 1 April. Your attendance is considered essential.'\n\nI could understand either The Vice-Chancellor or the President of the Students' Union wanting to speak to me. This term I had been trying to cover lectures for my senior colleague who had suffered a heart attack over Christmas. My students have been sympathetic but I think I have failed to be as effective in both roles as I ought to have been. My excuse? Two broken legs.\n\nAgainst my better judgement my husband Ian had persuaded me to go on a skiing holiday to Aviemore, with beginners' tuition included in the package. On my second day, while lining up with the other complete novices, an out-of-control advanced student had crashed into me, breaking both my legs below the knee. Even he hadn't been wholly to blame. He had been knocked off-course by an incompetent snowboarder who shouldn't have been anywhere near the novices. The snowboarder had lost control higher up the slope when he had hit an errant ball of ice.\n\nAll the costs, including loss of earnings, were covered by insurance but nothing compensated for the pain in my legs as they healed slowly. Since the accident I had been living in a wheelchair loaned by the local Red Cross branch. \n\nThey told me I was lucky. It was the only serviceable wheelchair they had, and had just been returned the previous day. They originally had three wheelchairs but two had been declared unsafe and beyond repair.\n\nI had decided to try to raise money for replacement wheelchairs, with the help of my students. They had been great but were getting me into trouble with the university authorities. \n\nEven before their fundraising I was embarrassed by my students.\n\nThe campus is hilly in places and I couldn't propel my wheelchair on my own. The Rugby and Lacrosse Clubs had decided to help me.\n\nEverywhere I went I had an escort -- at least one rugby player for brawn, and one or two lacrosse players to assist me if I needed the toilet. Of course I kissed them to say 'thank you' whenever the shift changed. But the Vice-Chancellor's Secretary quietly warned me that I was engaging in 'inappropriate sexual behaviour with students' even though I'm old enough to be their mother. They tended to kiss me anyway.\n\nTheir fundraising idea? The Student Union had decided on sponsored kissing. They had made small lapel badges marked 'Kiss'. Any student wearing one on campus would kiss another student for a donation of one pound to the wheelchair fund. The badge wearer could decline but every refusal when wearing the badge cost a pound. The students accepted the idea so quickly and so enthusiastically that the badges were everywhere. It hadn't been my idea but I was getting the blame for indiscriminate kissing all over the campus.\n\nIan had bought a cheap wheelchair-accessible adapted van. It was a wreck but had a current road worthiness certificate of dubious origin. At the start of my day he would drive me to the campus, unload me and wheelchair down the folding ramp, and collect me again at the end of the day. \n\nThe engineering students hadn't been impressed with that van. The environmental and political students hated it. It spewed oil smoke and struggled on the hills. It was neither green nor efficient. They got together as a group, had borrowed the keys from Ian every day for a week and worked on it, returning it at the end of each day. It would have been much easier for them to have it for several uninterrupted days but they managed. When they had finished with it the engine purred contentedly with no oil smoke, the brakes worked properly and the rust holes had disappeared. It almost looked respectable and it did have a new, genuine, road-worthiness certificate. Of course I had to kiss them too. How else could I thank them?\n\nNow I had been summoned to appear before the Vice-Chancellor and the President of the Students' Union. Would I receive a reprimand for inappropriate sexual behaviour? If it had just been the Vice-Chancellor, I would be sure that was what would happen. I hoped that my many years' service to the University would be considered in mitigation. But the Vice-Chancellor AND the President? That didn't make sense.\n\nIf it had been the President of the Students' Union, on April 1st, I would expect an April Fool set up. But not with the Vice-Chancellor present as well. He would be unlikely to approve of or participate in an April Fool against one of the University's Senior Lecturers.\n\nI folded the letter up and put it back in its envelope. I had replied, confirming that I would attend, the day I had received it. Today is 1st April and I will know the worst.\n\nI reached for my crutches. I could move around the house on them but I couldn't get around the hills of the campus on crutches. Carefully I swung myself to the front door. Ian was waiting with the wheelchair. He held me as I lowered myself. \n\n\"Ready, Angela?\" he asked.\n\n\"Yes, Ian, but...\"\n\nIan kissed me.\n\n\"I know. Your hospital appointment isn't until next week. Then you'll know when the plaster can come off.\"\n\n\"I itch so much inside and I think I've got very hairy legs. But my 'but' wasn't for that. It's for the summons to the Senate House. I'm worried, Ian.\" \n\n\"You shouldn't be, Angela. The University values you. Your students do well and your high Student Feedback scores are what really matter. Even if they think you have kissed or been kissed by too many students, they shouldn't worry. It's a sign of your popularity. If I had been kissing so many students -- I would be in deep shit. But not you.\"\n\n\"I wish I was as sure as you are.\"\n\n\"You have a more immediate problem. Your escorts this morning. What are you going to do with them?\"\n\n\"Julian and Evelyn? I'd like to bash their heads together. No. I wouldn't. They're nice kids, just confused and mixed up. The Rugby and Lacrosse clubs keep scheduling them together. Julian and Evelyn don't know why but it is obvious to anyone else. They love each other but think they might be gay, so behave like opposing magnets. Silly kids! Even the student LGBT community has tried to sort them out. They're not gay. They're just shy.\"\n\nI stopped talking as Ian unfolded the ramp and pushed me up into the back of the van. He clamped the wheelchair in place, shut the rear doors, and climbed into the driver's seat.\n\n\"Ready, Angela? Your usual chauffeur will drive you carefully to your appointment with destiny, or rather with the Vice-Chancellor and President.\"\n\n\"I don't feel that it's a joking matter, Ian. I am really worried.\"\n\nIan turned his head. \"I shouldn't tell you, because the whole thing is supposed to be a deep secret, Angela. What I can say is -- you have no reason to be worried.\"\n\n\"You're sure?\"\n\n\"Yes.\"\n\nA statement like that from Ian was definite. He knows me too well. As he drove slowly towards the University campus I started to relax. I was still concerned but less worried. What should I do about Julian and Evelyn? I had an idea. I searched in my handbag. Yes. I had what I needed. I would be ready for them.\n\nIan parked in my reserved parking space. It was only temporarily mine because of my current disability. Only those staff with appropriate senior status had a named parking space. Julian and Evelyn were waiting for me, standing a couple of yards apart, not looking at each other. Julian helped Ian to unload me and the wheelchair. Julian and Evelyn moved behind me. Ian walked away towards his office.\n\n\"Julian? Please put the brake on.\" I asked.\n\nHe did.\n\n\"Can you two come round so I can see you, please?\"\n\nThey did, looking puzzled.\n\n\"You know that today is the First of April?\"\n\nEvelyn nodded. Julian was still puzzled. I reached into my handbag and pulled out three items.\n\n\"Evelyn? Please pin this on Julian.\"\n\nI gave her a 'Kiss' badge. Awkwardly, trying not to look at him, she pinned it to Julian's jacket lapel.\n\n\"Julian? Please pin this on Evelyn.\"\n\nI gave him the other 'Kiss' badge.\n\n\"I couldn't, Angela. Honestly, I couldn't.\" Julian protested.\n\nEvelyn had realised what I was up to. She didn't like it but she played along.\n\n\"You can, Julian.\" She said. \"It won't hurt if you are careful.\"\n\nJulian was embarrassed. He pinned the badge to the University scarf Evelyn was wearing.\n\n\"Now...\" I held up a two-pound coin. \"This is payment for two kisses, one from each of you. Not for me, but for you two. It is April Fools' Day so you are going to show me you are NOT fools. Get on with it. Kiss each other.\"\n\nThey were embarrassed. Evelyn moved first. She stood in front of Julian and lifted her face towards him. He paled visibly. She placed her hands either side of his head.\n\n\"We ARE fools, Julian. This fool is going to obey Angela's order. So are you.\"\n\nEvelyn pulled Julian's head downwards until their lips met. I could see that Julian was resisting but actually kissing Evelyn seemed to have worked. His arms flapped at his sides before slowly they wrapped around Evelyn's waist. They were kissing properly. Evelyn's hands let go Julian's head. Her arms held his shoulders. They held that position for several minutes as I watched approvingly. When they broke from the kiss they were still holding each other.\n\n\"That's one,\" I hinted.\n\nJulian initiated the next one and Evelyn responded enthusiastically this time. They were short of breath when they finished. \n\nI gave the two-pound coin to Evelyn.\n\n\"To go in the Red Cross tin,\" I said.\n\nEvelyn put it in the tin hanging at the back of my wheelchair.\n\n\"I didn't bring any money,\" Julian said sadly.\n\n\"Then take the badges off,\" I suggested, \"and kiss each other for free.\"\n\n\"Could I?\" Julian asked. He was looking at Evelyn, not me.\n\n\"Yes, Julian, we can.\" Evelyn answered.\n\nThey did. I had to interrupt them or I would have been late at the Senate House. They took each other's badge off. My pushers were using one hand each, with the other arm wrapped around a waist. Ian was waiting for me at the Senate House. He looked at the entwined couple behind me and winked at me.\n\n\"OK, Angela. Show time.\" Ian said.\n\nJulian and Evelyn wheeled me through the doors held open by Ian. I gasped. There was a crowd of students seated facing the dais. They stood and clapped as I entered. I was embarrassed. I know I was blushing. I hadn't expected that. Ian helped the others to push me up the temporary ramp. They positioned me in the centre between chairs for the Vice-Chancellor and President who were standing to greet me. There was a lectern to one side with some papers on it. Both of them kissed me, then each handed a one pound coin to Ian. He dropped them in the Red Cross tin. Julian and Evelyn walked down the ramp to sit in reserved seats in the front row. Ian followed them, leaving me alone. I felt isolated.\n\nThe President of Students' Union went to the lectern. She picked up the radio microphone and held up her hand for silence. Then she turned to look at me.\n\n\"Doctor Angela Thomas,\" she started, \"thank you for coming this morning. The Students' Union has asked me to express our thanks for covering lectures during the absence of Professor Jenkins, despite your accident. If that were all I had to say, this assembly wouldn't have been necessary. But...\"\n\nShe paused.\n\n\"...you have also encouraged us to support the local Red Cross Branch in their attempt to replace wheelchairs. Although I know that the idea of students kissing each other wasn't yours, you have been blamed for it. As far as the Students' Union is concerned, you deserve thanks, not blame. Apart from raising money, the campaign has met with enthusiastic support because it encouraged friendly relations between students studying different disciplines...\"\n\nThere were several cries of 'Hear, Hear' from the floor and about thirty seconds of clapping. The President waited until the audience were quiet again.\n\n\"That interaction has helped not just socially but also academically, widening the cross-discipline interaction to the benefit of the University as a whole. You probably don't know, but last week we were told that three recent funding proposals for research have been approved because they were inter-disciplinary. That would not have happened without the one pound kissing. The amounts generated?\"\n\nShe turned to the Vice-Chancellor who nodded.\n\n\"Are already more than one million pounds. There are several more inter-disciplinary projects being devised now and we expect most to be approved.\"\n\nShe had to stop. The clapping had started again.\n\n\"Yet the idea was to raise money for the local Red Cross. That has happened too. As of today, the University's Red Cross fund for wheelchairs stands at three thousand and twelve pounds.\"\n\nThis time there were cheers as well as the clapping.\n\n\"The Red Cross chairs have to stand hard use so are not cheap. The normal price for one like yours would be about four hundred pounds each. One of our committee, a business student, working with the Red Cross committee, has managed to source the appropriate chairs at a discount and with matched sponsorship. From the money this Student body has raised, only one hundred and fifty pounds was needed for each wheelchair.\"\n\nMore applause.\n\n\"Even our Arts Students ought to be able to calculate that as twenty wheelchairs. That is more than the county's need for patient or carer propelled chairs, so we agreed that the bulk of the money would be used for two electric powered chairs at eight hundred pounds each, one for this Red Cross branch, and the other for the next branch. The normal wheelchairs will be provided as well, together with two bath hoists. Yet we haven't finished raising money yet. We are going on, and on -- to the end of this University year. There will be much more indiscriminate kissing on campus.\"\n\nCheers stopped her speech.\n\n\"We are raising money now for specialist disability equipment to be loaned by the Red Cross branches. If we haven't met the Red Cross's needs by the end of this academic year, I'm sure next year's students will carry on kissing.\"\n\nThis time there was laughter with the cheers.\n\n\"I've nearly finished. Thank you, Doctor Angela Thomas. As a tribute to you, and as thanks to our dedicated fund-raising students, at the end of this meeting kisses will be free until we leave the Senate House.\"\n\nThe students stood up, clapped, stamped their feet, and many took advantage of the free kissing offer. The President walked back to her seat, passing the microphone to the Vice-Chancellor. \n\nThe Vice-Chancellor stood up, waited for some order, waved his hands several times to suggest that the students sat down, before he moved to the lectern and picked up the papers.\n\n\"Thank you, Madam President,\" he started. \"and thank you, Angela, and the Student Body for your fund-raising which are in the best traditions of this University even if...\"\n\nThe Vice-Chancellor took off his glasses and mock-glared at the students.\n\n\"...some people take advantage and get more than their one-pound's worth.\"\n\nThere were more cheers and laughter. \n\n\"As your President said, the financial benefits of cross-disciplinary interaction...\"\n\nHe pursued his lips in mock disapproval.\n\n\"...even if some of that interaction has been, shall we say, indiscriminate... the financial benefits are already substantial and look as if they will continue into next financial year as well. That helps the students, the academic body and delights the Bursar poring over his spreadsheet. But I have to share some sad news with you, and some very good news.\"\n\nThe Vice-Chancellor looked serious.\n\n\"As you are aware, Professor Jenkins has been on sick leave since the start of this calendar year. Despite her temporary disability, Doctor Thomas has been covering his lectures so that his students are not disadvantaged. Unfortunately Professor Jenkins has been advised to reduce his activities. He is expected to recover to be able to lead a normal life, but not quickly enough to resume his duties at the University before the end of this Academic year. I know you will wish him well for an early recovery. \n\nProfessor Jenkins has reluctantly decided to give up his major teaching roles. Now that we have more research funding he has accepted the role of Professor Emeritus from the start of next term. He will spend much of his time on research but expects to be able to deliver several lectures a term next year.\n\nApart from expressing his thanks to the University Senate, Professor Jenkins had a final request to make. The Senate was delighted to comply with that request. What was it?\"\n\nHe paused. The students waited. I waited. The Vice-Chancellor winked at the audience before turning directly towards me.\n\n\"Professor Jenkins asked that Doctor Angela Thomas should be put forward for promotion to Reader and take up his teaching duties from now. The hall erupted. They clapped, cheered, came to their feet and gave me a standing ovation. Tears were running down my cheeks, not from the promotion, but from their reaction. I hadn't known I was that popular.\n\nThe President of the Student Union produced a tissue and helped dry my tears. She kissed my cheek.\n\n\"You deserve it, Angela. They love you -- and your lectures.\"\n\nThe Vice-Chancellor was still standing, waiting for the noise to settle. He had to wait several minutes before he could motion for the audience to sit down again.\n\n\"Today is the 1st of April. It would have been cruel to put Angela through all this for an April Fools' Day joke, but in deference to the day, even the Vice-Chancellor had to do something.\"\n\nHe held up an envelope.\n\n\"This is the application paperwork, completed and already approved, for Doctor Thomas's promotion to Reader. That is what Professor Jenkins asked the Senate to approve.\"\n\nHe paused. Then he quoted 'Who Wants To Be A Millionaire'.\n\n\"But we don't want to give her that.\"\n\nThe audience held its breath. So did I. The Vice-Chancellor held up another envelope.\n\n\"This letter, also dated today, appoints her as Professor, replacing Professor Jenkins. That she now is. Please welcome Professor Angela Thomas.\"\n\nThe Vice-Chancellor walked across to me and placed the envelope in my shaking hands.\n\nThe audience reaction was incredible. They were jumping up and down, cheering and clapping. \n\nThe Vice-Chancellor handed me the microphone. I don't know what I said. Much later Ian told me I said all the right things, thanked everyone including all the right people, and paid tribute to Professor Jenkins, even though I was crying all the way through.\n\nThe Vice-Chancellor wound up by inviting everyone to tea and buns in the canteen. \n\nThe students were reluctant to let me leave. \n\nDespite the 'free kissing' ordered by the Student Union's President, my Red Cross tin was full by the time Julian and Evelyn proudly wheeled the new Professor into the canteen. \n\nAt lunchtime Julian and Evelyn were relieved by my next escorts. Julian had his arm around Evelyn as they walked away. Whether they will develop into boyfriend and girlfriend only time will tell. My April Fools' prank on them had broken the ice at least.\n\nShould I forgive the Vice-Chancellor? Or Ian, who must have known something?\n\nI should. My April Fools' Day was perfect, not just for the unexpected promotion, but for the support from the students and the Senate. ",
        "Professor Angela Thomas will try hard to deserve that accolade."
    ],
    "authorname": "oggbashan",
    "tags": [
        "lecturer",
        "reader",
        "professor",
        "vice-chancellor",
        "president",
        "university",
        "red cross",
        "wheelchair",
        "kissing",
        "badge"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/lecturer"
}