{
    "title": "The Brush Tiger of Derven Ch. 24-25",
    "pages": [
        "CHAPTER 24: LOSS\n\n\"You're the Princess?\"\n\n\"It's your fault we're at war!\"\n\n\"Shut it, Steven, I heard she stabbed King Irron!\"\n\n\"What?! Stabbed him?\"\n\n\"Where did you learn to fight like that?\"\n\n\"Is Derven going to help us?\"\n\nMora holds out her hands for them to stop. She takes a deep breath, calming herself as they grow quiet. When she speaks, she speaks softly so that they are forced to pay attention in order to hear her, \"Good people of Sceadu, it is true, I am Princess Namora. While it has been an unfortunate chain of events that has led up to this war, believe me in saying that I was not the catalyst but a mere pawn in King Irron's game. I wish for no harm to come to anyone. As I am a...refugee...in your country, I have limited knowledge of what goes on in my homeland. Whether or not Derven will join you I do not know but you have my word that I will fight alongside of you.\"\n\n\"Did you really stab King Irron?\"\n\n\"No,\" she smiles, picking up her wine glass and taking another sip, \"I didn't stab him. I threw a knife at him. It was only fair, after all.\"\n\n\"Why is that?\"\n\n\"He tried to kill me first.\"\n\nThe crowd's growing faith in the Princess allows them to chuckle a bit. After a few more murmurs, a woman speaks up, \"Can all of the Derven fight like you? I don't think we stand a chance alone.\"\n\n\"Yes, all of the Derven citizens can fight like me but there isn't any reason to worry,\" Mora raises her voice, \"Each and every one of you-both men and women-are completely capable of defending yourselves. You just have to believe, deep down, that you will prevail.\" \n\nThinking that she is just trying to flatter them, she sees a few rolled eyes and hands thrown up in disbelief. Carefully, she sets her glass down before she hops off of the stool. As she trots to the stage, she keeps the crowd's attention by feeding their curiosity. Once there, she looks at Rick and points to a stuffed dummy, motioning for him to bring it to her. Mora is forced to raise her voice over the loud crowd, \"I will prove it to you. Who is the worst fighter in this bar?\"\n\nAfter some negotiation, someone shoves a man up to the stage. Mora instantly recognizes it as the man whose head she slammed into a table earlier. Still drunk, he climbs up the steps, defensively yelling at the crowd, \"Back off now, I'm not that bad!\"\n\nMora curses her luck, hoping that she can be as good of a teacher as Laren was to her. She hands the man a dagger, \"What's your name?\"\n\n\"Bryan,\" he spits out, taking the dagger.\n\n\"Right, Bryan, show us what you've got. Kill that man,\" she points over to the dummy.\n\nHe pulls up his pants a little, swaying confidently. Standing up straight, he faces the dummy; with a great grunt throws the dagger with all of his strength, almost toppling over in the process. It sticks, somewhat crookedly, in the dummy's forehead. Bryan throws up his arms in celebration and the men from his table start shouting praise.\n\nMora waits, arms crossed over chest, for the group to calm down. When they do, she looks at Bryan, \"That was impressive. I'm sure when we come across an army made of linen and straw, you will be a great benefit. Until then, maybe you should remember that a man's head,\" she raps his knuckles on his forehead, \"is made from bone and most likely covered with a metal helmet.\"\n\nHe shrinks a little at her insult. She looks at the dummy, thinking carefully as to what she could do to it to mimic the actual consistency of flesh. Seeing Rick watching her, she walks to him and takes his hand. He looks at her apprehensively, not wanting to replace the dummy but reluctantly he lets her lead him over to the wall. She stands him there, pressing her hands into his chest to push him up against a bare spot. \n\nHe can't help himself and grins at her. She rolls her eyes, wandering off to find something else. Finally, she grabs some of the chalk the men use to dry their hands with. Mora drags over a stool so she can trace around Rick's head and shoulders. He speaks softly to her while she is at work, \"You could own your own tavern and train men to fight.\"\n\nShe pauses, blushing as she leans her forehead against his, smiling slyly, \"I'd rather just be a tavern owner's wife.\"\n\nRick leans forward and gives her a quick peck on the lips. She takes her time tracing around his arms and legs, letting her face return to its normal color. When she is done, she lets Rick go. Focusing on the task at hand, she grabs the knife out of the dummy's head and shoves it aside before returning to Bryan.\n\nWhen he looks at her like she is dumb, she slaps the hilt of the knife back into his hand, pointing to the Rick outline, \"That wall is closer to the hardness of bone, make it stick-preferably not in his head.\"\n\nBryan takes the knife, drawing out his preparation as before. He pulls his arm back and heaves it as hard as he can. With a loud pang, the knife bounces off of the wall. The whole tavern erupts in laughter. Seeing his shoulders slump in disappointment, Mora drags over a crate with dozens of daggers. Before she can give him any instruction he hastily grabs five out of the box. Now angry, he tries, one after another, to stick them into the wall without a single success. Each failure makes the bar roar louder. Bryan grows redder and redder, now sweating from exertion. He looks at her, furious that she has succeeded in making a fool out of him twice in the same night.\n\nHe turns around trying to yell at those laughing at him. He points at Mora and shouts, \"Shut it! I bet this woman couldn't even do it if she tried!\"\n\n\"I could do it blindfolded Bryan, but trying to knock me down isn't going to help you any,\" she reaches out and touches his shoulder, trying to calm him down. He pulls back, her words having the opposite effect. \n\n\"Prove it then!\" Leaning over the edge of the stage, he pulls a scarf off of a nearby woman's shoulders. With some effort he scrambles back to his feet, shoving it at Mora. The crowd, now rowdy and unfocused calls for her to try. Looking out over them, she sees Dell, John and Eric egging them on. Though she gives them a scolding look, Dell just shrugs and keeps shouting with the rest of the people.\n\nMora looks at Rick for help. He walks over to her, smiling. Taking the scarf out of her hands, he replaces it with half a dozen daggers, reaching up to squeeze her shoulder as encouragement, \"They aren't going to pay attention to you until you recapture their interest,\" he says quietly. Walking behind her, he ties the scarf over her eyes. Mora feels herself grow irritated that she is trying to help these people but they are too caught up in the spectacle to pay attention.\n\n\"Fine,\" she huffs to Rick, \"Move the dummy back in front of the wall.\"\n\nThough her feet, she feels his soft footsteps walk away before he drags the dummy across the stage. She can tell where he stops with it through the vibrations in the wood. She turns herself around, ready to throw when she feels Rick's hands on her shoulder, stopping her. \n\n\"Listen up!\" He shouts to the crowd, instantly quieting them, \"While this beautiful, slender, young woman-\" the men hoot in agreement but stop when he scowls at them, \"while she might not seem like much, I have seen firsthand what she can do. It would be wise for you to mind her, lest you end up like that dummy.\" He leans in, lips brushing her cheek before he whispers into her ear, \"Hold on.\"\n\nShe has no idea what he means until he spins her in a circle several times, catching her off guard. He stops when she starts swaying, unsure of her footing and now completely confused as to which direction she faces. The crowd falls silent; her heart pounds so hard, she can't even hear them breathing. She has no clue what she is facing; tense with alertness, she waits patiently for a sign, hoping that Rick will move away from her or someone will shout out so that she knows which way to turn.\n\nBryan's arrogant voice gives it to her, \"What did I tell you, this stupid-\"\n\nAs soon as the words leave his mouth Mora turns quickly until he is on her right side, letting loose the first dagger. When she hears a thunk and no one scream, she knows she is pointed in the right direction. Exhaling all of the air from her lungs, she repeats her movement over and over, willing each dagger to find its mark without her guidance. All six are finally gone. The room remains quiet. She feels Rick move on her left; he unties her blindfold. Giving her eyes a moment to adjust to the light, she sees that not only did she successfully hit the dummy six times in the chest but her knives tore through him only to stop when they buried the blades into the wall. Satisfied, she secretly thanks Laren for patiently teaching her day after day. She turns to Bryan.\n\n\"Now that I've got your full attention, perhaps you'll listen to me. Never face your foe square on, instead you must turn so that your dominant arm is the furthest away from him.\"\n\nBryan closes his mouth. He nods with understanding and does as she says. \n\n\"Good. Your feet need to be shoulder width apart so that you can balance your body,\" she slaps a dagger into his hand, \"and never, ever give all that you have to one throw.\"\n\n\"Why?\" he asks curiously, taking the dagger.\n\n\"Because if you do, you won't have enough for the next. Relax and throw hard, but like you are throwing a rock through glass.\"\n\nBryan relaxes his shoulders, rolling them backwards. He looks at the silhouette, body turned away. Drawing up his arm, he throws the knife like a ball. It bounces off of the wall. He throws his arms up in anger.\n\n\"Are you married?\"\n\n\"Why, are you offering?\" He replies snidely.\n\nMora steps closer so that no one but Bryan can hear her, \"Do you love her?\"\n\n\"Yes,\" he's offended by her comment.\n\nShe looks him over for a moment, pondering. Her arm raises and she points at the outline on the wall, her voice so quiet that she knows Bryan can barely hear her, \"Last night, that man there snuck into your house when you were out with your friends.\"\n\n\"What? You're being stupid,\" he rolls his eyes at her, shoving his hands into his pockets.\n\n\"It was very dark,\" she continues, ignoring him while looking deep into his eyes, \"and he went to your bedroom. It was so dark in fact, that your wife did not know it wasn't you,\" she moves closer, her voice dropping lower, \"he grabbed a hold and took what he wanted from her and she gave it willingly...\" Mora reaches up and turns Bryan's face towards the outline, \"And now there he stands, laughing at you. But it doesn't matter, because you are strong and angry and he is weak like glass. I want you to take this dagger and throw it into his heart.\"\n\nAfter offering up one more dagger she backs off carefully. Not knowing what she said to him, the crowd waits with anticipation.\n\nBryan inhales deeply; he looks furious. His arm rises above his head, \"Like a stone through glass,\" he mumbles. He swings hard and lets go of the knife. With a loud thunk, it sticks into the wall. The tavern hoots and hollers; he looks at Mora. \n\nShe smiles and pats him on the shoulder, whispering quietly, \"Just remember, every Alumenian is a man who would sneak into your house when you are gone.\"\n\nJames, Lucas and Daniel rush on to the stage. They drag over several more dummies after removing the weapons racks from the wall. Lining each dummy against wood, it only takes them a few minutes to get situated. Townspeople pile on stage, all greeting Sari as she hands out the daggers to them. The rest of the night, until the wee hours of dawn, Mora helps Rick teach everyone, sharing the helpful secrets that Laren has taught her over the years. \n\nSlowly the crowd thins out as people grow tired and sore from the training. Finally, when the last person leaves, Todd can barely stand up straight. Rick tells him to go; Daniel, James, and Mora clear out all of the beer mugs while Rick and Sari put the weapons away.\n\nAs Rick walks their friends to the door, Mora slumps over in a chair, exhausted. She hears the locks snap shut, her eyes beginning to drift close until she feels his lips on hers, \"Not yet, Namora,\" he coaxes.\n\nGathering her up into his arms like he did the first night she spent with him, he carries her up the stairs. Feeling so at ease with her head rested on his chest, she has to try hard to keep herself awake, wanting to spend every moment with him that she can before the war brings the unknown. She has just drifted off only to wake up again when he sets her on the couch. \n\nThe tub, with steaming water, is hard to see by the dying embers in the fireplace; the screen is nowhere to be seen. She is now wide awake with anticipation. Rick kneels before her, unlacing her boots; he rubs her bare feet, leaving no part of them untouched. She reaches out to him, running her fingers through his hair when he unlaces her vest, untangling it from her body. Though she is nervous when he pulls off her ruffled shirt, she doesn't shy away. He slips his hands beneath her undershirt, sliding them all the way up her sides until he pulls it over her head. Her skin prickles from the cold air touching her uncovered body.\n\nRick wraps his hand around her waist, lifting her up until she stands above him; his lips press against her stomach while his fingers drag her pants down to the floor. Letting his hands and lips wander her whole body, he savors each inch of her bare skin. Now completely exposed to him, she feels vulnerable but in a different way-in a voluntary way, as if she is completely offering herself to him to do with as he pleases.\n\nRick lifts her up, strong arms wrapping around her as he carries her to the tub and places her in it; the warm water envelopes her body like a blanket. He locks onto her gaze when he sits down to remove his own boots; he pulls his shirt off before he stands. Her eyes look over the familiar lines of his chest, wandering down the outline of his stomach muscles before he strips his pants off. She is glad the room is dark because her cheeks burn bright red when he stands exposed in front of her. Fully nude, he walks to the tub and slides in behind her. He leans in to kiss her neck from behind, letting his hands lather up a bar of soap before they meander over her chest and down her stomach. Wet and soapy, both of them explore each other's bodies while washing off.\n\nFinally pushed to the limits of desire, Mora gets out first. She dries off in front of him, no longer embarrassed about his eyes seeing her exposed body. Letting the towel fall to the ground, she leans over the edge of the tub, giving him a soft kiss. Slowly, she walks over to the bed knowing that his eyes are following her naked figure. From there, she is barely able to see him climb out of the tub and quickly wipe dry in the almost extinguished firelight.\n\nHe follows her without hesitation, finding her lips with his in the darkness without even getting into the bed. His hands wander over her chest and up her arms; he grips her tight around the wrists and pins her down. He easily swings his body on to the bed and slides his legs between hers. When he presses his body down she presses hers up, each trying to get closer. He lets go of her wrists, sliding his fingers down her arms before he cradles her face in his hands. Pulling away from her mouth, his voice is thick like honey, \"I love you, Namora.\"\n\n\"I love you, Varickan,\" she replies breathlessly before pulling him back down to her. \n\nThey feed the flames of each other's fires: hands tracing paths, stealing each other's breath, tasting each other's skin. Slick with the sweat of restraint with their bodies entwined, no longer able to stave off their desires, Rick rubs himself against her wetness, tensing as he prepares to confirm their love for one another by claiming her as his own. He starts to push into her maidenhood, his skin burning with desire, his body trembling with need when he is halted by a quick a knock at the door.\n\nBoth of them freeze, listening to the darkness, unsure if they heard anything. When they are about to ignore it, three taps come again.\n\n\"Rick?\" The urgent voice is Todd's.\n\nThe longing in Mora's touch tells him to ignore it. Though he wants to, Rick reluctantly untangles his body from hers. He slips on a pair of pants before his soft footsteps carry him across the room. The door creaks when Rick pulls it open to greet Todd. Unable to hear what they are saying, she pulls the blanket over herself while she sits up. Mora gets a sinking feeling in her stomach that something is wrong. In the darkness she can hear the door click shut and Rick's footsteps coming towards her; the swiftness of them confirm her suspicions. \n\nShe sees his outline at the bed next to her; he hands her something. When she takes it, she discovers it is a pair of pants and a shirt.\n\nHis voice calm despite the message he delivers, \"Something is wrong with your father; Captain Franklin is downstairs.\"\n\nShe has to untangle herself from the covers. Getting dressed hastily, her hands start to shake so bad she doesn't bother trying to put on a vest over her loose ruffled shirt. Though the floor is cold against her bare feet, she leaves her shoes behind and rushes out of the room, Rick close behind her. Mora bounds down the stairs two at a time. \n\nThe tavern is almost entirely dark with one lone torch by the door. It provides enough light for her to see Franklin. His body is tense, much like the day she was captured.\n\n\"Princess Namora,\" he drops to a knee stiffly.\n\n\"What's wrong with the King?\" She says breathlessly when she reaches him.\n\nHe stands up, grabbing her shoulders like a friend, \"King Irron sent an assassin...your father killed him but...\"\n\n\"But what!\" she shouts, voice cracking.\n\n\"...but he's wounded bad. Advisor Laren doesn't think he will last any more than a few hours.\"\n\nShe covers her mouth with her hand as the tears well up in her eyes. She can't breathe, she can't think. Her body goes numb and she feels like she will pass out. Franklin keeps his grip on her shoulders, guiding her into a chair. As the tears roll down her cheeks, she begins to tremble uncontrollably. \n\nLetting go, Franklin speaks softly to her, \"You need to go to him, Princess; he asked me to get you.\"\n\nShe can barely lift her arm to point at her collar, \"I can't.\" Burying her face in her hands, her whole body shakes with her sobs.\n\nRick kneels down in front of her. Gently, he pulls her hands away from her face, letting them fall into her lap. His fingers wipe the tears away from her cheeks before holding them in his hands. \"Breathe, Mora,\" he coos. His hands slide behind her neck, pulling her to him while he leans in to kiss her tenderly. \n\nShe hears the tiniest of clicks. When Rick pulls away from her, he holds the collar in his hands with the key still in the lock.\n\nMora looks at the collar with disbelief. Tears still flow down her face. She feels panic well up inside of her, afraid of losing her father and losing Rick at the same time. Just when she started to feel happy, her world begins to fall apart again.\n\n\"But the Queen said-\" she is silenced by Rick's fingers on her lips. \n\nHe smiles reassuringly at her, \"I will deal with the Queen. You must go to your father.\" \n\nShe wraps her arms around him, holding him tight. Before she has a chance to think about it anymore, she lets go and sprints up the stairs. Her quivering hands barely allow her to lace up her boots. Her mind racing, she forgets the vest and flies out of the room. When she runs back downstairs, Rick waits for her with a cloak. \n\nThough his face is blank she knows that he shares her worries. He swings the cloak over her shoulders, tying it securely. Mora can't find words to thank him. Looking into his eyes only makes her fears deepen so she throws her arms around his shoulders, holding him tight, \"I want you,\" is all she can whisper.",
        "He squeezes her, not wanting to let go, \"Then come back to me,\" he replies with a shaky voice.\n\nForcing herself to let go, she turns away from him and rushes through the door. Todd stands outside with Greystar, tying a satchel onto his saddle. The horse paws at the ground, waiting impatiently. Though she doesn't need it, Todd gives her a boost up. The horse takes off immediately not needing direction. \n\nAs they fly through the town, Mora looks over her shoulder, trying to get one last glimpse of Rick-but she can't make anything out through her tears.\n\n\u2003\n\nCHAPTER 25: LOSS\n\nThe ride through the forest seems to take forever though she doesn't recall any bit of it. The early morning gloom of the sun behind the clouds fades quickly once she reaches the public road to Derven. Despite the tremendous amount of darkness around her heart, the bright and beautiful day serves as a picturesque reminder of her old, unhappy life. Mora hardly notices anything, counting on Greystar to take her directly to the castle. A million thoughts, regrets and guilts race through her head. She is off of the horse and running through the halls in the castle before she even realizes that she is home.\n\nTaking the twisting and turning hallways at full speed, she almost slips and falls twice on her way to her father's bedroom. With a great heave she crashes through the doors. The royal doctor and Laren stand next to his bed. Mora runs over, grasping her father's hand, \"Father? Father! I'm here now,\" she exclaims breathlessly.\n\nHe painfully turns his head towards her; his usually tan face seems deathly pale. She briefly notices the bandage on his chest, covered with blood. The dullness of his eyes tells her that he doesn't have much time left.\n\n\"Out,\" he tells the doctor and Laren. They bow, leaving quickly. Mora gets up, sitting on the edge of her father's bed so she can stroke his face. \n\nHe smiles at her, \"I've missed you, Namora.\"\n\n\"Don't talk,\" she begs through her tears.\n\nHe shakes his head at her, \"There is something I need to tell you,\" he says, \"I don't have much time so please listen carefully.\"\n\nShe tries to stifle her sobs when her father squeezes her hand.\n\n\"Your mother didn't die, she killed herself,\" he says with no more conviction than talking about the weather.\n\n\"What? I don't understand,\" Mora exclaims.\n\n\"A long time ago, when I was a little younger than you, I met the most beautiful woman. She fled here, from Sceadu. My father had arranged for me to be married to the oldest daughter of Geofen but when he caught me in the orchard saying goodbye to the woman from Sceadu he immediately called off my marriage because he knew that I loved her. That is how I came to marry your mother.\"\n\n\"I thought my mother was from Derven?\" Mora wonders if her father is losing his mind along with his life.\n\n\"No. Years we spent together, deeply in love. I began to grow old but she-she did not; she kept her beauty as perfectly as the day that we met. It was maybe ten years, when she was pregnant with you that she told me her secret.\"\n\n\"Secret?\"\n\n\"Your mother was an immortal,\" he coughs painfully.\n\nTears stream down from her face, she looks at her father like he is crazy, \"Please father, don't talk,\" she begs.\n\nHe shakes his head again, catching his breath and continues, \"No one knows why it happens but it just does. Some people are born who don't age or die like everyone else. Your mother was one hundred and ninety-seven years old when we met; I know child, I found it hard to believe too. Then she told me why she fled from Sceadu.\"\n\n\"Why?\" Even though a majority of her mind does not believe him, a small flicker of curiosity gets the better of her.\n\n\"King Irron.\"\n\n\"The previous one?\"\n\n\"No, they are one in the same. Your mother was the oldest immortal-the second oldest was born just a few years after her. That child grew to be an evil man who became a King. Irron hunted down all the other immortals and killed them.\"\n\n\"But why?\" The wheels of her mind begin turning.\n\n\"Because it is a very difficult thing to kill an immortal and only the immortals have the strength and knowledge to do so. He was after your mother so she fled her long time home in the dark forests to come to Derven. When she became pregnant with you, her heart grew very sad. She knew that he wouldn't quit until she was dead but she didn't think herself strong enough to stop him. Your mother did what she thought was right and killed herself so that you and I would be safe.\"\n\n\"No,\" Mora says firmly with disbelief.\n\nHer father points to a box on the night stand, her mother's box. Mora hands it to him.\n\n\"An immortal's bones are different from a human's; the outside of them is covered with metal. This metal is found nowhere else and the only thing that is strong enough to pierce that metal is itself.\" His voice begins to grow weaker.\n\nShe thinks of the day Irron told her he wore a metal vest to protect himself; she was only able to injure him because she cut through his muscle, where there was no bone.\n\n\"After you were born, your mother,\" the King continues with great sorrow, \"locked herself in the throne room. I can still remember the screams,\" he begins to cry. \"She cut through her chest and broke off one of her ribs so that she could stab herself in the heart,\" he opens the box, pulling out a wicked looking curved knife, \"before she died she made me promise that when you were old enough and strong enough I would give this to you, so that you could kill Irron and put an end to his cruelty.\" He hands her the knife. \n\nIt is only when Mora turns it in her hands that she realizes the hilt is made from broken bone and that the blade, a sharp, dark metal, is the size and shape of a rib. She drops it onto the bed in disbelief.\n\nHer father's breathing becomes labored, \"One more thing, quickly child,\" he reaches out to her, squeezing her hands in his with the last bit of his strength, \"An immortal's blood is infectious; anyone who drinks it becomes a mindless being who only does what the immortal demands. I have suspected for years that all of Irron's army has been infected. Since you are half immortal, I don't think it will have any effect on you but you must beware of any of the Sceadu that try to drink Alumenian blood. The only way to break that curse will be to kill Irron.\"\n\nDark, beady eyes of the Alumenian soldiers. His special wine. Blood. Drinking blood...The wine, from the tree in the cave. \"Father,\" she says quickly, \"I have been drinking Sceaduian wine since I was captured!\"\n\nHe smiles faintly, \"Your mother was a great healer in our lands, though none knew what the secret ingredient in her tonics were.\"\n\n\"I think I can heal you,\" she grabs her mother's dagger and holds it to her arm only to be stopped by her father. She looks sadly into his fading eyes, \"But why?\" she chokes out.\n\n\"It is your time now,\" he smiles. \n\nHis grip begins to loosen. Slowly, the smile fades from his face. The light soon vanishes from his eyes. Mora bursts into tears. She leans over his body, stifling her sobs against his skin.\n\nShe doesn't know how long she sat there with her father-minutes? Hours? Days? Time no longer holds any perspective for her. She forces her tears to stop, her body to quit shaking. She makes herself look away from the empty vessel that was once her father. She rises to her feet and her body unconsciously does the rest. Her arms move without direction, pulling open the door. In the hallway, the sun shines brightly through the windows, the day continuing on without her father. She holds the bone knife tightly to her chest. When her feet stop, she forces herself to look around. The doctor rushes past her into the bedroom. Mora's eyes stop on Laren. Locking the pain down deep inside, she puts it away for a time when she has the luxury of dealing with it. Her voice comes out blank, all of the emotion drained out of her, \"The King is dead. Sound the bells.\"\n\nHer body carries her over to the bench where Laren is; he stands quickly and signals for a guard to follow her orders. Mora can feel her body defaulting into the perfect posture and she sees her hands folded neatly in her lap around the knife. Laren takes a knee in front of her, placing his fist over his heart.\n\n\"What are your orders, Queen Namora?\"\n\nShe looks at her old friend. Queen Namora...yes, her father is dead, which means that she is now the Queen. She is not prepared for the responsibility but she doesn't have the leisure to find her courage; death waits for no one. She breathes deeply. Laren looks at her seriously, knowing what she is about to say. She doesn't recognize the voice that comes out of her mouth, \"I declare war against Alumenia. We need to leave tonight\u2014I have suspicions that King Irron isn't honorable enough to wait the week he said he would.\" Her body stands and starts walking down the hall, \"I should address the townsfolk now.\"\n\n\"Perhaps,\" Laren rises to his feet, his calming voice stops her, \"a change of clothing would be suitable, your Majesty?\"\n\nShe looks down, remembering that the pants and revealing shirt she grew to know over the past few weeks isn't exactly proper attire for a Queen, \"Yes, that is a very good idea.\"\n\n\"I'll let the handmaidens know. I will also have the guards announce your upcoming inauguration,\" he bows before walking away. \n\nMora turns and her body leads her towards her bedroom. When she reaches it, it seems like a place she hasn't visited in years. Without thinking, she changes into an underdress, putting her Sceduian clothing on the bed. Just as she sits down in front of a mirror, there is a soft rap on the door. Eunice enters, carrying a dark wooden box with hair items in it. She bows as best as her old back will let her. Mora smiles automatically, even though inside she is still sad, \"It is nice to see you again, Eunice. I'm sorry to say you'll find my hair a mess.\"\n\n\"Not a problem, your Highness. Shall we do something fancy?\"\n\nShe shakes her head, looking at her pale face in the mirror, \"That won't be necessary. Something quick and simple will be fine.\"\n\nAs Eunice gets to work brushing out and twisting Mora's long hair, her mind wanders far away from her castle and back to the tavern in Sceadu. She fears for what Queen Sheynne will do to Rick for letting her go. Hopefully when she sees Mora and the Derven army arrive at the Meadow she will forgive him. She hopes she will see Rick again before the war. Her heart, broken from the death of her father, desperately needs something to love. She thinks of all that she has put everyone through over the past few weeks\u2014her father, Laren, Franklin, Rick. A gentle squeeze on her shoulder brings her back to the task at hand.\n\n\"Will this be satisfactory?\"\n\nMora stares at the mirror, unsure of the woman who looks back at her. With a pale face, dark eyes and brown hair swept up, she is sure that it isn't her when she sees the tall, delicate copper crown. Her hand hesitantly reaches up her own head, the woman in the mirror doing the same. It isn't the delicate, small copper crown with blue and red gems of the Princess but the tall, slightly tarnished crown with dangling rubies of the Queen. When she touches the cold metal, reality starts to sink in and she knows that the woman she sees before her is her reflection.\n\n\"Yes, thank you Eunice.\"\n\n\"Shall I help you dress?\"\n\n\"That would be nice.\"\n\nAs Mora rises, she sees Eunice hold out a dark red dress; with its high cut neckline, tight fitting sleeves and long, billowing train. She slips easily into it and as Eunice laces up the back, Mora finds that it fits her like a glove. In the mirror, her reflection shows a woman that stands tall and confident with the elegant grace of a Queen, while Mora feels sick with worry and regret that she will do the wrong thing.\n\n\"You remind me of your mother, Namora,\" Eunice chokes out.\n\nMora smiles at her, thanking her with a quick hug. She walks out into the hallway, surprised at how the dress gives her the freedom of pants. Laren waits out there for her. A sincere smile crosses his old face when he sees Mora dressed as the Queen, his look affirming Eunice's compliment. He bows deeply, his hand floating down the hallway to the open balcony that looks over the city square, \"Your kingdom awaits your Majesty.\"\n\nMora nods at him, walking towards the balcony. Without hesitation, she takes the stairs that lead down and out the front doors of the castle instead. Finally gaining a grip on herself, she feels that what she has to tell everyone\u2014to ask of them\u2014is too personal to announce from the lofty position above. She needs them to know that she is asking them to go to war as a citizen of Derven, not as their Queen.\n\nLaren and the guards scramble to follow her, none dare asking why she is going out the doors. When Mora reaches the front steps and sees the town square, her breath is taken away. All of the people are dressed in red to show their support of their Queen. Having never lived when her mother was alive, it is a sight she has never seen. They all drop down to a knee, even the women and the children and with their hands on their hearts they look up at her for guidance.\n\nShe takes a deep breath and with the most confidence she can muster, she speaks to her people, for the first time as their Queen, \"Citizens of Derven; it is with a heavy heart that I greet you as your Queen. King Nathanial is dead. Last night, an assassin from Alumenia tried and ultimately succeeded in taking his life,\" she pauses as the crowd whispers amongst themselves. When the chatter dies down, she continues, \"As I am sure you all know, I have been stranded in Sceadu for the past few weeks. When I left you to go to Alumenia for my engagement party, a tree that had fallen across the road prevented us from getting to our destination. My escorts, Captain Franklin, Officer Jackson and Officer Gregory protected me as best as they could and for that I am grateful. After Officer Gregory sacrificed his life for me\u2014it broke my heart. No matter who I am, no life is worth any more or less than mine. That is why I agreed to stay in Sceadu, so that no one else would have to die for me,\" she takes a deep breath, hoping she is saying the right things, \"It was during my time there that I discovered King Irron had that tree cut down in hopes that I would die at the hand of Sceadu,\" the crowd gasps at the information, \"Accompanied by Queen Sheynne and her son Prince Varickan, I met King Irron at the southern Meadow. He was displeased that the wedding had been called off and even more displeased that I discovered the truth. That is when he declared war against Sceadu.\"\n\nMora clasps her hands in front of her, looking down at the ground for a moment, \"It saddens me that my first act as your Queen would be to declare war when it is against our way of being. That is why I will not,\" she looks up at the crowd's confused expression, \"Tonight, I will ride back to Sceadu to help them in their fight against Alumenia. I will not make anyone join me but if there are any of you who wish to, you are most welcome.\" She waits patiently for the unorthodox news to sink in.\n\n\"What of Geofen?\" A question comes from the back.\n\n\"I was able to convince Prince Philip, with my actions during the meeting with King Irron, that Sceadu was the just side to fight on.\"\n\n\"How did you do that, my Queen?\" The familiar voice of Officer Jackson drifts up from the crowd.\n\nMora pauses a moment, discerning if it is right to tell the whole truth to her people. She decides that it is, \"After King Irron directly threatened my life, I severed the muscles to his right arm with a dagger.\"\n\nThere is some cheering from the crowd before another voice floats above them, \"What will we do if you do not return?\"\n\n\"If I do not return, Advisor Laren will lead you until a suitable replacement can be found. I know that this is a very unusual way of doing things, but I have a debt to repay.\"\n\n\"What debt?\"\n\n\"Prince Varickan saved my life and he also was the one who set me free so that I could return to you in this time of need,\" she waits a moment for more questions, but when there are none she finishes her speech, \"I ride at sunset for any who wish to join me. For those who aren't able to get ready on such short notice, Advisor Laren will ride at dawn. Thank you, citizens of Derven, for your support.\"\n\nShe turns and goes back into the castle, letting a long breath exhale from her lungs. She isn't sure what to do for the next few hours but finds that her body leads her to the throne room. At the very back of the room, she takes a seat upon the lone chair at the top of several steps. Carved with painstaking detail, the single throne depicts images of all that is true to Derven. Sinking back into the soft blue cushions for the first time, she smiles when she sees the addition that her father had added; on the right arm of the chair is a face carved into the wood, bearing the likeness of her mother. After her death, the Queen's throne was removed from the room, placed carefully in storage until Namora would take her father's place. She wonders what carvings her mother had added to it. \n\nWhen one of the attendants comes to check on her, she has him bring the satchel from Greystar. Opening the bag carefully, it is with a very sad heart that she finds a bottle of wine that Todd packed for her, along with her old hunting knife that Eric must have dropped off. She uncorks the wine and without bothering over the pomp and circumstance of a glass, she sips directly from the bottle, staring at the portrait of her mother, wondering what other secrets she never knew.\n\nAbout an hour later, Laren enters the room. He stops before her and takes a knee while bowing his head slightly. Rising, he slowly walks up the steps, carefully reaching for Mora's wine bottle. Smelling its contents, he holds it at arm's length, \"Whatever are you drinking, your Highness?\"\n\nShe smiles, taking it back. After a long swig she speaks quietly, \"While the Sceadu seem like a very rough kingdom of people, they have found a soft spot in my heart.\"\n\nHe shakes his head, sitting casually on the steps below her, \"Shall I call for some dinner?\"\n\n\"No, thank you. It will not be necessary.\"\n\nThe silence between them grows. Though she knows he watches her, she stares blankly at the bottle in her hands. She can see his shoulders slump; Laren interrupts the silence with his soft voice, \"What has happened to the brush tiger of Derven.\"\n\n\"I am afraid I am not in the mood for poetry tonight, Laren,\" she sighs, her heart aching with unease.\n\n\"Then in plain words?\"\n\nShe sips slowly, \"I have fallen in love.\"\n\n\"Prince Varickan?\" He says, more of a statement than a question as the answer is obvious.\n\nShe nods.\n\n\"You looked like you wanted to kill him that day in the woods,\" he points out.\n\n\"I did. The heart is a strange creature,\" she looks up to see him smile.\n\n\"Did you really stab King Irron?\"\n\nThis time it is her who smirks, \"Well not quite. I threw the knife at him. He did deserve it.\"\n\n\"You'll get no argument from me,\" he winks. Looking her over, he adds \"If you are going to war, you will need to change.\"\n\nMora agrees, \"I refuse to wear a dress into battle. Perhaps my hunting pants will do.\"\n\n\"The Queen has a set of armor,\" he replies, \"I will send in Eunice to help you\u2014she is the only one who knows how to put the damned thing on. Her mother helped your great great great grandmother do so.\" Laren rises, knowing that she wants to be alone; respecting her wishes, he bows before leaving the room.\n\nShe discovers another secret, not ever knowing that there was a set of armor for the Queen, just like she didn't know immortals existed or that her mother was one. With her eyes finally open to the world, she now sees that it has lost its glossy, pristine shine, instead it is tarnished with lies and enigmas. She holds no animosity to anyone\u2014Mora doubts that before the arduous quest she would have been ready to handle all that has now been dumped on her. She drains the last of the wine from the bottle, setting it next to the throne. Briefly dozing off, she is awakened when Eunice arrives, accompanied by two soldiers carrying a large chest. ",
        "The men struggle to carry it over to her, bowing after they put it down at the base of the steps. After they leave, Eunice hands Mora a tight pair of under clothing made from dark red leather. She unlaces the back of her dress, leaving the Queen to change while she works on unlocking the chest and opening it. Even though the old woman has seen Mora naked several times over her life, she has never felt comfortable being nude around her; now, however, after Rick has explored the curves and bends of her body with both his hands and his lips, Mora finds that she is no longer embarrassed by her bare flesh.\n\nPulling the leather shirt over her head, she waits anxiously while Eunice dresses her. There is a feminine armor piece that covers from her neck down to her waist with shoulder caps and slim chain mail pants. The two are joined by a skirt of divided leather. The knee high leather boots fit over the pants well; all are a dark shade of red, even the metal is tinted such. The last thing that Eunice pulls from the box is a slender red helmet that covers all of the head but the face. The top of the helmet was molded into a crown that resembles the Queen's, with dark red jewels adorning it in the same places. Eunice quickly fixes Mora's hair, removing the regular crown and tightening it up so that all of her locks will fit inside the helmet.\n\nThough covered in metal, Mora finds that it is her anxiety that weighs her down the most. She paces about the throne room nervously after Eunice leaves, making herself wait until just before sunset to go to the royal stable. Once she is there, she finds that Greystar has been outfitted with armor of his own; matching the red metal of hers, he has a face plate that is attached to a pleated mane cover. With a broad chest plate and a metal skirt on his rump, he oddly reminds her of something that she would expect Alumenia to produce.\n\nMora busies herself with checking the straps on his saddle, armor and bridle as she is having difficulty passing the time until sunset; her body is restless and she wants leave Derven now so that she can return to Sceadu. Even though she has spent the majority of her life alone, after the past few weeks it feels odd to not be near people, not to be near Rick. Affixing her sword onto his saddle, she carefully packs a quiver of arrows on the opposite side along with her bow. It is only her hunting knife that she keeps on her person, plus a dozen smaller ones that fit in a holster on her leg. Wrapping a thin leather string around her mother's bone knife, she slips one arm through it and over her neck to keep it secure. When she mounts Greystar, she clips her helmet to the saddle horn for safe keeping. Knowing where he is supposed to go, she doesn't even need to hold the reins as the large horse wanders out of the barn and around the castle to the town square. \n\nMora isn't sure what she expects is waiting there for her\u2014a dozen men, perhaps two? Maybe a few women? Hopefully a few more will be able to join Laren in the morning. She knows that it won't be as many as Sceadu needs, but any is better than none. Greystar picks up speed and trots down the path, rounding the orchards next to the castle. As the square comes into view, she is shocked. Packed to the brim with people on horses, all clad in red, she has to stop just outside of it. Mora has no idea how many there are, but it is more than a hundred.\n\nShe scans the crowd; she sees familiar faces\u2014merchants, venders, farmers, women from the Festival. When they finally see her, Officer Jackson trots over to greet the Queen. Unable to bow, he puts his fist on his chest.\n\n\"There are more than this who will ride in the morning, your Majesty.\"\n\nMora closes her eyes and nods, \"Thank you.\"\n\nThe large group rides towards the setting sun; it is an odd sound that the hundred horses make with their hooves on the dirt and the metal of the weapons bouncing above them. Greystar must sense Mora's anxiousness because no matter how hard she tries to slow him, he lopes at a quick trot. The army behind her keeps pace without complaint, Jackson riding at her side. When Mora reaches the spot where the tree fell, she manages to stop Greystar. The road is littered with broken bark, the grass in the neutral area flattened out. The red ribbon remains forgotten, still tied between the trees. She turns to Officer Jackson.\n\n\"I will to ride into town to let Prince Varickan know we are here.\"\n\nHe nods, \"I will go with you, my lady.\"\n\n\"That won't be necessary,\" she smiles.\n\nHe shifts uncomfortably in the saddle, \"Your Majesty...Advisor Laren...\"\n\nMora understands, \"Fine, come with me. Tell whoever is next in command that they will wait here until our return, but to take care not to cross past that ribbon into Sceadu.\"\n\nJackson nods and turns to talk to another officer, conveying her orders. The two set off into the dark forest on the eastern edge of Sceadu. Mora gets a bad feeling that something is wrong; after finding the overgrown path that leads to back into town, she urges her horse to move faster. Adrenaline pumps through her veins, her heart beating in time with Greystar's hooves. They ride at a gallop for over an hour, never crossing paths with anyone. \n\nWhen they reach the town, her feelings are confirmed. While there are lights on in the houses, there is no one about and no one looks out from the windows. Greystar skids to a halt when he comes up on the Tavern. Mora leaps off, crossing the boardwalk swiftly while Jackson rushes to tie his horse to the post. She finds it unnerving that no one has greeted them yet.\n\n\"This is where the Prince lives?\" Jackson says disapprovingly, catching up to her.\n\nShe nods, \"Sceadu isn't your typical country...\" Mora pushes against the tavern doors and only to find them locked. Surely the tavern would be open and bustling with activity at this time of night; she tries again without success. Jackson takes a step back, waiting for her to clear out before he raises his foot and with a swift shove he kicks it open. Mora rushes inside.\n\nOn the other side of the door, stands Jacob, barely visible in the dim light that a single torch provides. He looks terrified and holds a sword out at Mora. Jackson steps in front of her, irritated that he would dare threaten the Queen; he quickly disarms the boy.\n\n\"You will bow in the presence of Queen Namora,\" he commands, voice harsh and unforgiving. \n\n\"Queen...Namora? Mora, is that you?\" Jacob looks shocked, not recognizing her.\n\nJackson raises his hand at Jacob, clearly angered by his insolence but Mora sets a hand on his shoulder, letting him know his anger isn't necessary.\n\n\"Where is Rick, Jacob?\" she presses the boy.\n\n\"He's...gone,\" Jacob is so terrified that he starts crying uncontrollably. Mora looks around the empty bar\u2014glasses and weapons are strewn all over the place as if everyone vanished into thin air. She turns and bounds up the steps as fast as she can. Shoving the bedroom doors open, she finds the room cold. The fire burnt out shortly after she left and was never rekindled. All she finds are Rick's clothes thrown hastily on the floor. Running back down the stairs, she sees that Jackson has set the boy down in a chair. He speaks to him softly, getting him to calm down so he can explain what happened. Mora waits impatiently for the boy to talk.\n\n\"Not long after you left we got word from the sentries that King Irron's army was on their way to the field. Rick and the others didn't have much time; everyone left a few hours ago.\"\n\nShe pauses for a brief moment, before speaking swiftly to Jackson, \"Ride back as fast as you can to the army; lead them as quickly as possible down the path we took to get to town. To reach the southern Meadow, you continue on the road, it will lead you straight to it. You must hurry, it should take you about three hours to get there with everyone,\" before he can respond she turns and walks out of the tavern, quickly mounting Greystar.\n\n\"Queen Namora, where are you going?\" Jackson runs after her.\n\n\"To war,\" is all she says before Greystar leaps into a full run."
    ],
    "authorname": "AfterDusk",
    "tags": [
        "sci-fi",
        "fantasy"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-brush-tiger-of-derven-ch-24-25"
}