{
    "title": "Ebb Tide Ch. 04a",
    "pages": [
        "High tide: The moment between the flood tide and the ebb tide\n\nThis tale is an espionage fantasy under assault by reality\n\nThe 'hero' of this tale might be considered a Libertarian, though the label means nothing to him. He is not completely sane by some people's definition of the term\n\nThe principal characters in this story are listed at the end of the chapter\n\n*****\n\n{Las Vegas, where dreams go to die ... and be buried in tombs of Gold}\n\nWhy was I standing next to Kip Churchill's gurney in an Emergency Room? Because I let myself care for completely irrational people who lead with their hearts, not their heads, and have no concept of what real violence means or costs. I was standing at Kip's bedside because Dabney's big mouth and her belief I could do anything had led to this. Amateur. This was not my friend, my place, or my damn JOB.\n\nUntil that point, it had been a 'not-horrible' day. I had started the morning by attending a meeting with the Las Vegas Metropolitan Police Department (LVMPD)'s Gang Crimes Bureau (GCB). They had wanted to talk with me on Tuesday night or Wednesday. Tuesday night was a no-go. Wednesday ... I ended up killing people again ... although unlike Tuesday, I'd killed them 'off the clock' and out of LVMPD's jurisdiction. What they wanted to see me about was the Tuesday killings.\n\nI didn't call and set up an appointment because it is not in my nature to let armed people I can't rely on know where I'll be. I showed up at 8:15 am. I let the cops at the entry way know who I was, that I was legally armed and I was not giving up my weapon in order to talk to some cops.\n\nThey knew me - no ID required (I had risked my life and killed a person to save the life of one of their own - a Sgt. Dunston.) They believed me when I said I was packing without needing to be patted down and they called the GCB for me. The GCB proved to me they were operating under the misconception that I wanted to help them fight gang violence in Clark County.\n\nThe only gang I was worried about was the LVMPD. The Playboy Bloods could attack me from surprise, except far better outfits had taken that approach and died for their temerity. The cops could disarm me, then kill me ... or try to kill me. It certainly was more legally complicated killing them back.\n\nPlayboys ... the Mayor was considering giving me a medal for the ones I'd already moved to the afterlife. I told the GCB that I had another appointment, so I'd be leaving at 10:30 am and my offer was going - going - gone in two and a quarter hours. They told me to come back at nine. I thanked the officers for helping me and left.\n\nPromptly at 8:59, I returned. The duty officer made his call, I was invited up without my firearm. I called Soledad, told her I'd honored my pledge of the night before to come by the department, I had been rebuffed and I expected her to honor her commitment.\n\nShe wanted to know 'Had I really tried?'. I handed my phone to the duty officer. He confirmed his location and this was my second appearance, he had called the GCB for me - twice and then said he didn't understand why I wasn't going up. Of course no one armed was allowed to walk around the building unless they were in law enforcement.\n\n(I neglected to mention my journey to the building Tuesday morning when I'd bluffed my way in using a stolen police ID.) The cop gave me back my phone.\n\n\"Be reasonable,\" she insisted.\n\n\"I am being reasonable. People are trying to murder me. Some of those people even carry badges, so surrendering up my weapon at this juncture isn't the reasonable thing to do,\" I countered.\n\n\"Hang on,\" she sighed with exasperation. \"Let me call 'our' guy at the GCB.\n\nSeven minutes passed before a plain clothes officer came down to retrieve me. We went through the rigmarole of him signing in my gun and knife, then off we walked.\n\n\"Why are you being so damn difficult?\" he - Officer Marquez Hermosa - asked rather angrily.\n\n\"Since you people suck at bringing crime victims back from the dead, I find your inability to help me to be troublesome. My 'difficulty' is reminding myself why I've bothered to show up at all,\" I sounded bored.\n\n\"You are killing people,\" he pointed out as he opened the door to his section.\n\n\"I haven't put a gun in anyone hands, Marquez,\" I countered. \"These are 'your' fuck-nuts criminals trying to murder me. If you were successfully protecting me and the other citizens of Las Vegas, I wouldn't have had to pull out my gun in the first place,\" I explained as we passed through the door. \"So I am hardly going to feel guilty about your complete failure to protect me from danger.\" \n\n\"Now, I don't expect you to magically appear to ward off crimes before they happen. Don't insult my intelligence by pretending you can,\" that last bit drew some stares from the people in the room. The key dude was the one Marquez directed me toward.\n\n\"Lieutenant, here he is,\" my guide grumbled.\n\n\"Mr. Vardanyan,\" he extended his hand. I ignored it.\n\n\"I go by first names whenever I can. Call me Vance,\" I regarded him. \"To clarify my visit, I promised an acquaintance I'd stop by and be as helpful as I can be without risking my life. I don't want to help you, I'm not afraid of the Playboy Bloods, or 'Florencia 13'. Within those parameters, what can I do for you?\" \n\n\"O-kay,\" he withdrew his hand. \"I'm Lt. Gor Mirzoyan. Please call me Lieutenant or LT. There is a preliminary matter to take care of. Officer Gatsby,\" the Lt. motioned to another officer. This one wasn't in the GCB. All those guys and gals had a rougher edge to them. This guy was - plainer.\n\n\"Mr. Vardanyan,\" Gatsby began, \"I would like to ...\"\n\n\"ID,\" I stated. He handed it over. I checked - he was Officer Thomas Gatsby with Vice - I handed it back.\n\n\"I'd like to talk with you about Pablo Bastos,\" he studied me.\n\n\"Dabney Curtiss's ex-pimp, short, thick Brazilian guy ~ second generation most likely ~ a brutal thug. What about him?\" I replied\n\n\"We are looking for him,\" he prodded me. \"He seems to have vanished.\"\n\n\"Funny, wouldn't that make this a Missing Person's case?\" I remained uncooperative.\n\n\"Some people think you killed him,\" he came out with the 'boom'. It was more of a bust.\n\n\"And?\"\n\n\"And ... did you kill him?\" Gatsby asked. \n\n\"Wouldn't that be a matter for Homicide?\" I kept playing along.\n\n\"Vice doesn't know if he's dead, on vacation, or retired,\" Gatsby kept trying to make me verbose on the matter. My bet was they had a turncoat, or a body.\n\n\"Right now, he's still a pimp,\" he clarified LVMPD's side of the case. \"He's also a pimp we think you put in the hospital the day before he disappeared.\"\n\nNah, they had an inside source who didn't know the particulars of Pablo and my disagreement. The four man crew that had actually killed and buried Pablo wouldn't flip on me. So this group had nothing but corroborating testimony from other known criminals, plus I'd spent the past two days showing the whole world I took care of my problems on my own.\n\nThere was also the niggling little fact the four guys had been hanging around the murder scene in the first place because they had accepted Pablo's money to kill me. I had turned that around because Pablo was an ass, and someone they hated. I hadn't even paid those men off.\n\nSomeone else had - someone they couldn't even name if they wanted to. The phone I'd been using to make all those calls was the burner phone Pablo had given me through a third party. That 'third party' was the only guy who knew for sure I had that phone and he'd rabbited. Guys like that didn't stand up to people like me, especially if word was circulating about Pablo having gone missing while I was still hanging around.\n\nThe poor sap would have to face me at trial and my non-verbal intimidation tactics were finely honed. An experienced prosecutor wouldn't try to hang a murder case on that guy's word against mine.\n\n\"Since he hasn't talked to my friend in a few days, I don't care about what has happened to him,\" I replied.\n\n\"I don't like the guy. As long as he leaves my friend alone, I don't see that his well-being is any of my business,\" I made sure to use the 'present' tense.\n\n\"What is your friend's name?\" Thomas requested.\n\n\"Since you already know it, my confirming it is a waste of breathe. Personally, I'm disinclined to help you go after a friend,\" I continued treating him like an amateur because he kept treating me like a common criminal.\n\n\"Her name is Dabney Curtiss ... she has a few prior arrests ... only two convictions ... nothing serious until now ... goes by the name 'Care-Free',\" he read off his palm pilot. I stared at him. \"Well, is that the prostitute in question?\"\n\n\"Refer to my last two sentences, Thomas,\" I stared.\n\n\"Fine, we know you've been seen with her on multiple occasions, including yesterday's shootout and Tuesday afternoon at the hospital,\" he pressed.\n\n\"Yes, I was seen in her company,\" I kept staring. \"As I said, she's 'my friend' which would suggest the possibility of us being seen together.\"\n\n\"What is your next question, or do you plan on persisting with this line of inquiry while eating through the remaining 69 minutes I'm going to be here?\"\n\n\"69 minutes?\" Gor (the Lt.) inquired.\n\n\"Yes, a few of your cohorts convinced me to spend two and a quarter hours with you today, so that's what I'm doing ~ wasting two and a quarter hours it appears.\"\n\n\"Two and a quarter? Man, you just got here,\" one of the GCB guys spoke up. \"Can't you count? That would be 125 minutes, taking into account the ten minutes you wasted signing for your weapons.\"\n\n\"I showed up at 8:15 am, which is within the legitimate business hours for your unit. You chose to send me away for 45 minutes.\"\n\n\"That's on you, not me. I even relayed my time table to you; you ignored it. Then it took you seven minutes to send your guy to get me and ten minutes to satisfy your bureaucracy that I have the right to bear arms.\"\n\n\"So, 'Failed product of the Arizona Public School System' (I knew the accent), that's - do the math with me now - 135 minutes minus 45 minutes, minus 7 minutes, minus 10 minutes, minus 6 minutes being interviewed thus far and you get ... 67 minutes now.\"\n\n\"Dude, you are starting to really piss me off,\" the guy growled.\n\n\"It might help if you reminded yourself that you are a public servant questioning a legal citizen of the United States who hasn't even been accused of violating a single municipal, county, state, or federal law,\" was my retort. \"I'm not going to spout the incorrect 'you work for me' bull crap. You work for the LVMPD, not the public in general, and not the taxpayers in particular.\"\n\n\"In theory, your job description requires you to accept that US citizens have certain rights and liberties and you are to protect said rights and liberties. Right now your actions are insulting me ~ 66 minutes,\" I added.\n\n\"You appear to be a well-read man, Mr. Vardanyan. Are you aware of 'reasonable cause' ~ you and the Mr. Bastos had a physical disagreement the day before he went missing,\" Gatsby resumed. \"Then there is law enforcement's 'power of direction' which requires you to answer questions that don't involve self-incrimination,\" he thought he was clever. \"Now I'm directing you to tell me about your relationship with Ms. Curtiss.\"\n\n\"On what grounds? I am not aware of any criminal complaint involving myself, Ms. Curtiss, or Mr. Bastos. To utilize any of your police powers, there has to have been a crime committed and you have to inform me of what that crime is. Only when you have 'reasonable cause' to think I'm involved in an actual crime do you get to apply the 'power of direction'.\"\n\n\"'Power of direction' applies if we suspect a crime has been committed, Mr. Vardanyan. A man is missing. Now, if ...\"\n\n\"Has a Missing Person's report been filed?\" I asked. \"No? Then has Mr. Bastos been sought after in questioning for another crime? If so, what crime?\"\n\n\"Mr. Bastos is involved in an investigation involving pandering,\" he grudgingly admitted. The law on this matter was vague. He had to supply me with a legal reason to question me. Otherwise I could claim his queries were of a personal nature thus allowing me to ignoring them, or even be deceptive.\n\nHe could threaten me with Obstruction of Justice and I'd come back with False Imprisonment. His accusation toward Pablo was suitably vague, yet it also gave me some wiggle room.\n\n\"Call an ADA and have them grant me, in writing, blanket immunity for any and all matters dealing with our discussion today,\" I suggested.\n\n\"Why would you want blanket immunity?\"\n\n\"Because you are a police officer questioning me about an issue so unspecific,\" I sighed, \"it borders on violating my right to privacy. You are allowed to question me about a specific crime, not my social life. Do you have a specific incident you want me to comment on?\"\n\n\"I'm trying to figure that out, Mr. Legal-Aide,\" he bantered.\n\n\"Dabney Curtiss is my friend. She is not a prostitute,\" I said.\n\n\"She has plenty of priors and a suspicious ability to have her charges reduced, or dropped entirely,\" he persisted. \"She's a prostitute.\"\n\n\"She is no more a whore for hire than you are, Thomas.\"\n\nThat bought me a momentary respite. I hadn't called him a whore.\n\n\"What do you think she'll say when we bring her in?\" he inquired.\n\n\"She'll probably think you are a whore too.\"\n\n\"Fine, what do you think she'll say after being grilled for ten hours?\"\n\n\"She'll think you are an expensive whore,\" I shook my head. That retort got me a few semi-suppressed chuckles from the other officers.\n\n\"Okay, Funny Man,\" he re-charted his approach, \"what can you tell me about Kip Churchill?\"\n\n\"I never met him. To my knowledge, Dabney only talked to him once. He believed they had some business to conduct and she corrected that misconception,\" I answered. The extent of my response confused him.\n\n\"And that was it?\"\n\n\"I don't keep track of her phone calls. I am not aware of any other communications between the two,\" I told him. \"Next two questions: I left her at my home before coming here ... an hour and forty-eight minutes ago, so I don't know where she is ... and I do not give you permission to trespass on any part of my property.\"\n\n\"Do you have anything useful to my investigation into the whereabouts of Mr. Bastos?\" he conceded he was getting nowhere with me.\n\n\"If I have this correctly, you are looking into the absence of a pimp and want to question a former prostitute about him, as opposed to doing something about him when he was actually out on the streets being a flesh-peddler,\" I glared.\n\n\"Normally that would suggest he was an informant, except in the scant few minutes I actually interacted with him, he appeared far too pig-like and sadistic to be reliable, so that means one of his stable was/is a Confidential Informant (CI) and you are trying to figure out if she's still safe,\" I studied his reaction. I was right on the money. \"Thomas, I've done some counter-intelligence work before.\"\n\n\"You've given up a whole hell of a lot more than you've learned - which is nothing you didn't already know. Now you need to trot back to your boss and let him decide to let that poor girl hang out to dry because I have neither a name, nor am I credible enough source,\" I reasoned. \"Basically, pat yourself on the back for being a thoroughly despicable cretin.\"\n\n\"Ah ... you don't know any of that,\" Gatsby sputtered. \"That's bullshit and if you end up getting some poor girl killed, I'll make it my personal business to ...\"\n\n\"Shut up,\" I yawned. \"You don't want to make this personal with me. I'm not the citizen who believes you are fair, just, or struggling in my best interest just because you have a badge.\"\n\n\"We both know you are not. To me, the LVMPD is the largest and best organized gang in this city and less trustworthy and more entitled than most. Thomas, if you stay on your side of the line, it will guarantee we don't and won't have issues. You cross it, there is always IAB and there is me. 'Nuff' said.\" That wasn't even a threat of violence.\n\n\"We are not done,\" he rose. \"If something happens, I'll come looking for you.\" I let him pass in silence. Once he was gone, I examined the five GCB officers.\n\n\"Just so we are clear, you let a fellow officer threaten me and did 'jack' and 'shit' about it. If you wanted to impress upon me your lack of professional standards, you have succeeded.\"\n\n\"He's allowed to set you straight, Vardanyan,\" Gor stated.\n\n\"Why? Because he's a cop and within your fraternity while I'm not?\" I chuckled. \"Which only increases my desire to not work with you in any matter.\"\n\n\"If the situation was reversed, you would want to protect your source,\" my guide tried to create some false empathy.\n\n\"If the person was my 'at-risk' source, I wouldn't bluster. I'd pull them out because Dabney told me this 'Pablo' character was a savage beast. If there is someone new in her life, this would be the perfect time to ease her out of the trade, instead of using them until she ends up as a Jane Doe no one really misses.\"\n\n\"How about we move this discussion along, Gor? Factoring reliability, past conduct and personal trust, why shouldn't I side with the Florencia 13,\" I asked, \"over you, or the Playboy Bloods?\"\n\n\"Why do you believe they won't turn on you in a heartbeat?\" Gor said.\n\n\"I believe they will turn on me given the right motivation. I'm not going to join their gang. I wouldn't if they offered. They are also not going to ask me to do anything stupid and thus contrary to my survival. You want me to betray Ramone Garza, which is the opposite of aiding my survivability.\"\n\n\"What about the Playboy Bloods?\" Gor prodded.\n\n\"I doubt Ramone is going to assign some guys to me to protect me. That means there won't be any people with guns that I don't know hanging around me to confuse with people meaning me harm.\"\n\n\"You can't keep running around, shooting up the city,\" a third cop spoke up.\n\n\"Funny, I see the amount of criminal mischief I've been involved with this week as more a failing on your part than any desire for violence on mine,\" I pointed out. \"You didn't save the girl kidnapped by the Playboy's, I did. I didn't start that firefight at the Hilton, I was attacked ~ and you haven't made a single arrest despite someone hiring twenty-one losers to make the attempt to kill me.\"\n\n\"It hasn't even been twenty-four hours,\" Gor grumbled. \"Besides, it is a Homicide case, not Gang Crimes.\"\n\n\"Yet you were more than capable of getting a vice cop over here, Gor,\" I shook my head. \"You have your own agendas.\"\n\n\"No, we have one agenda - putting criminals behind bars, Vardanyan,\" Gor stated.\n\n\"Why would I want to help?\" I countered. \"You have proven to me this week you are not on my side.\"\n\n\"We don't work with Officer Shell, nor do we endorse his actions,\" Gor became defensive.\n\n\"Yet you let Gatsby threaten me, Gor,\" I skewered him. \"It is that exact same attitude that lured Shell into thinking he could get away with framing me. Do you really believe Rothschild didn't have a clue what Shell was up to?\"\n\n\"Neither officer works in this unit.\"\n\n\"Stop,\" I held up my hand. \"You are embarrassing yourself. Let's get back to 'why' am I here?\"\n\n\"Had we known you would be such a selfish, inconsiderate ass,\" Gor groused, \"I wouldn't have invited you. You are the problem, Vardanyan. People ...\"\n\nSoledad walked into the GCB offices at that moment. She took in the long faces on her follow cops, then gave me a stern look.\n\n\"Vance, what's the problem?\" she chastised me. \"They look like you tossed their puppy in a wood-chipper.\"\n\n\"Gor here sicked Gatsby from Vice on me first things first,\" I related. \"He's looking into Dabney's old pimp, Pablo. Apparently one of Pablo's ladies is one of Gatsby's CI's.\"\n\n\"... Treating you like an idiot again,\" she groaned. \"Jesus Christ, Lieutenant, I didn't brief you on this guy because I enjoy hearing myself speak. He's a spook.\"",
        "I stood up.\n\n\"Been real,\" I mock-saluted the GCB crew. \"Soledad, next time you decide to fuck me over and abuse my confidence in you, make sure you forget my address first.\" I strode out of their section of LVMPD's 400 S. Martin Luther King Boulevard HQ. I would have never fallen for such an obvious ploy.\n\nLast night Soledad convinced me the past hour and a half was necessary because the LVMPD had a powerful rumor mill. To give her some cover with her fellow cops, I had to play the part of disgruntled curmudgeon, talk just enough to cause some trouble without giving anything away. Soledad would open the door and I'd slam it in her face.\n\nNow five GCB officers would publicize my displeasure with her, giving her cover to help the Disloyalists (I swear if anyone mentioned codenames, decoder rings, or team costumes, I was burying every last one of them in the desert) gain access to anti-Vardanyan investigations inside the regional police force. We couldn't use TC because, as an IAB hot shot, she was universally distrusted.\n\nIt was our division of responsibility; I handled the covert side of things. TC would ask all the tough questions inside and out of the police force. Soledad would keep tabs on both homicides and any people looking into me. Reagan ... they knew she could do things like provide information and agreed to not ask where it came from.\n\nThe three aforementioned ladies didn't think much of the other two members of the team. G ~ a sexy, used up ex-trophy wife and Dabney, the ex-escort and star of every young man's virgin-killer dream. I hadn't bothered to inform anyone, even G, that she was about to become Georgianna Norquist, multi-millionaire and one of the 100 Richest people in the State of Nevada.\n\nG would have worried too much, Dabney couldn't have kept quiet about it, Reagan would have tried to stop me from doing it, and, since it was technically robbery (in another country), the two cops might get pissed with me. Monday morning I'd give everyone the good news, provided we were all still alive.\n\nThe rest of my morning was 'fun', if you consider a primitive version of a root canal, or driving a nail through the arch of your foot to be 'fun'. I had to cut 80 square feet out of my living room to create a closet for all of Dabney's clothing. To make matters worse, my impromptu roommates decided to help me.\n\nAbsent either one of them having any kind of construction experience, I predicted this would be a bad idea. By the time I arrived with my rental panel truck and all the required materials (I'd already retrieved my required equipment, which I normally stashed elsewhere), they were awake, fed (on last night's leftovers), dressed and ready to help.\n\nBy dressed ... groan ... they meant racy pink boy-shorts for Dabney with a white, wife-beater and high top canvas sneakers. Skin-tight clothing - no bra, or underwear. I can reliably detect a thong. G wore khaki shorts (complete with pockets) sized for a third grader, an old, faded black 'Hard Rock Caf\u00e9' t-shirt that hugged her like a second skin and maroon slippers. She had panties (I could see the tops) and no bra, though she, like Dabney, clearly needed one.\n\nG was self-conscious about her presentation. Dabney flaunted it. She ran up, hugged me and humped me playfully.\n\n\"I see the two of you are dressed to help me get the lumber and equipment inside,\" I grumbled.\n\n\"Oh pooh,\" Dabney pouted. I needed to find a way to convince her she didn't have to play Sex Kitten around me 24/7. Nor, am I one to ignore life's lessons. I reached out, lifted up G's right breast, rubbed my fingers under its weight and finished up my appreciation by tweaking her aroused nipple.\n\n\"Ah,\" she gasped. My sexual advance had caught her off guard. She smacked my hand away.\n\n\"Hey, stop that!\" she protested. She was protesting with a smile.\n\n\"I told you going bra-less was the right thing to do,\" Dabney teased her.\n\n\"I'm not used to being pawed by young men,\" she teased right back.\n\n\"That makes two of us,\" I stated totally deadpan.\n\n\"Come on G, why don't we paw some young men this weekend?\" Dabney volunteered to spend more of my money.\n\n\"Dabney, you need to get a job before we have a 'Girls' Night Out',\" G reined the younger girl in. \"We can't keep relying on V's money to get us by. You need to get a job and I need to get a better paying job so I can pay off my debts before I retire.\"\n\n\"V, do you really mind me borrowing a little money?\" the young vixen turned to me, very doe-eyed and sweet.\n\n\"Yes, I mind. I'm not lending you money, Dabney. I'm gifting you because you're my friend, not because we have sex. My friendship doesn't have a price tag or expiration date.\"\n\n\"But you said you mind?\" she was confused.\n\n\"Making you dependent on me isn't my plan, Dabney. I want you to be financially independent because you've been vulnerable long enough. With me, you have freedom. I want you to have freedom away from me,\" I explained, \"so if you wish to stay with me you can do so without consideration for anything else but us.\"\n\nDabney jerked slightly while G glowed with happiness. I wanted to get to work.\n\n\"That's ... poetry, Vance,\" Dabney tear-ed up slightly.\n\n\"I think it is a wonderful sentiment, V,\" G added.\n\n\"None of this is getting Dabney's closet space built,\" I grumbled. \"Let's get to it.\n\nWe brought everything outside then set up our work stations and chores. I would measure out and mark the wood in the lengths I'd need. G would cut timber and sand the ends. Dabney would lug the old wall pieces out to the van for later disposal. I'd break down the old wall and build the new one.\n\nWe worked surprisingly well. The two girls held up the new drywall once I finished the framework. The only snags happened at the end of the project. Dabney wanted a 'softer' color for the inside of her closet, a fancier light fixture and an air vent dedicated to ventilating the space.\n\nOut we went and made the day for several Home Depot employees. Dabney teased me about these two far too young ladies ogling me ... I triple checked them for weapons and deftly evaded their phone's camera function. And, because Dabney is Dabney ...\n\n\"So, are you his sisters?\" an ambitious Assistant Manager named Chuck inquired.\n\n\"Oh no,\" Dabney corrected him. \"Me and my sister,\" she put an arm around G ... and her perky nipples, \"are his sex toys. We feed his voracious sexual appetite and kinky erotic desires.\"\n\nIn a sane world, that would have been seen for the cock-teasing bullshit it was, but this was Vegas and Dabney looked capable of crushing lightbulbs with her cleavage and bending steel rods with her thighs. The combination of her provocative lip & tongue play while sucking hungrily on her thumb caused the guy to cum in his underwear.\n\nIt was also the first time I saw G loosen up outside our home. She allowed herself to revel in the male and sometimes female attention aimed her way. Dabney could be overwhelming with her vivaciousness ~ a passionate one night stand with you waking wondering who the hell just devastated your life. G's eyes and saunter promised a long, casual weekend in bed you'd never forget.\n\nWe dumped the trash in the landfill with a short detour to the site's main office so I could pick up the grid pattern and schedule of which district was used to bury what and when. After that, it was duct and electrical work, done and done, then the primer and the first coat of paint. We used two large fans to blow the fumes outside. Dabney got to the shower first while G and I prepared an early dinner. She had to be back to work soon.\n\nThe second coat of teal paint was drying before Dabney exited the shower. She was very pleased with the way her closet had turned out. I got the drop cloth and tape guards out of the way then it was my shower time. G gave me a minute then followed me in. Sex ... warm passionate, slow-burn sex.\n\nIt was G getting into the sensuality of the act, reawakening that spark within her that triggered the kiss, the muttered word, the gentle touch of affection that was the true art of lovemaking. Penetration came later, in an awkwardness enforced by my shower's limited dimensions. We still managed it. G did the equivalent of a standing split, facing me, before my cock penetrated her.\n\nSeveral pulse-quickening minutes later, when I was close, we separated and G finished me off with a hand job. Fellatio would have been nice, but those space constraints would make the act more of a quick, face-fucking experience; not a thing with any degree of artistry or consideration.\n\n\"That was nice,\" G moaned contentedly as we were toweling off. She shot me a curious look. \"It was more than nice. It reminds me that I'm a human being and I think you know what I mean by that.\" She was looking for confirmation. \n\n\"People want to shed their masks and indulge in being themselves from time to time, G. That is something you were denied for a long, long time,\" I nodded. \"I get it.\"\n\n\"Don't you be hogging my Man,\" Dabney gave us a nervous smirk when we exited the bathroom. I wasn't angry with Dabney's territoriality. She hadn't been free a week yet. Truly understanding independence and interdependence took time. In the service, it took me several months and I had skilled trainers to help me along that path.\n\nThe modern military is a dichotomy few outsiders understand. They want you to be part of a team that has a group cohesion, yet at the core of that trait is each soldier, marine, sailor and airman being able to do their job independently. Your officers and NCO's had other jobs to do, so you were pretty much on your own in fulfilling your task.\n\nRarely does anyone pat you on the head and tell you you've done a good job. Oh, you get yelled at if you fuck up, it's true. For doing your job - nothing. Because doing your job on your own, acting free of any direction, is what you are supposed to do. \n\nMy very first combat assignment taught me and my Lieutenant that lesson. I had run to the sound of the guns to do my assigned task - taking care of the wounded. I hadn't sought out my commanding officer for permission since helping the wounded was my assignment. Only later did we both realize that.\n\nHis task was to place me where I was needed only if I wasn't doing what I was supposed to be doing. By acting independently, I had freed him up to do his job - ordering his shooters to engage the enemy utilizing his coherent battle plan. We both succeeded in our tasks. We beat the bad guys and got our worst casualty to the hospital facilities in a speedy and efficient manner.\n\nDabney and G were both in the Basic Training of this lifestyle. G was used to acting alone and unsupported. To do otherwise would have invited pain from her ex-husband. Now she had to learn to accept and work within a team ~ the Disloyalists (the name was growing on me) ~ who would back up her plays and expect to be backed up in turn.\n\nDabney had to learn that standing on your own two feet didn't mean standing alone. I had created a solid group for her to work with, not for. She'd have to pull her weight and discover what a wonderful feeling that was. She would come to know what it was like to be part of an organization that valued and trusted her. She would have to learn to be trustworthy and to trust others as an equal.\n\nI had my work cut out for me. Step one was physical training. The more your body can do, the better you can deal with fatigue. And the more benchmarks, you conquer the higher your confidence becomes. Once your body reaches a certain progressive state, your mind is ready to embrace both positive reinforcement and new knowledge.\n\nThe girls hated me for putting them through this, shooting me evil looks and flaunting their sexuality in the attempt to make me relent. The only place we could exercise was in the back yard, which was blistering hot. We stayed hydrated. G followed Dabney's lead in pouring water over her shirt in order to distract me.\n\nNah, I was adaptive. My RDC's (Recruit Division Commanders) had given me multiple techniques to motivate trainees. Pinching, twisting and plucking nipples and slapping the available buttocks wasn't in that repertoire, but no future squid I'd trained with had dressed in their manner either. They flaunted their femininity and I turned that around on them.\n\nGetting G to work was actually seen as joyous by those two after I informed them this was going to be their lives two times a day for the foreseeable future ~ and, as I assured Dabney, sex was not a substitute for exercise; it was extra credit. We grabbed an early bite to eat then I took Dabney out on our second date.\n\nShe was excited until we rolled into our destination, the Green Valley Range. Yes, Dabney was getting gun lessons. We initiated the process of getting her a Ruger III .22 Target Pistol and a Benelli M4 12-gauge semi-automatic shotgun. The Ruger would take a while to own legally, so I had her rent one from the range.\n\nShe exhibited some genuine displeasure until the third round from her pistol. The first one stung, the second was a bit of a surprise and then she fell in love. A .22 target pistol is a great starter weapon. It has a light recoil and is pretty accurate, so the shooter gets the rush of hitting (in general) what they aim at.\n\nWe did thirty minutes with the pistol and thirty more with the shotgun. She loved that too. Twenty minute of each period was basic safety with ten minutes of careful target practice. A person two lanes down went full-auto with an MP-5; lots of noise and damage down range. He knew what he was doing, as in he hit what he was aiming at, but it was really just macho bullshit for his date.\n\nDabney begged me for the opportunity, even getting playful. My glare told her I did not consider this fun and games. Dick-wad chose to intervene.\n\n\"Hey buddy, I don't mind,\" he chuckled. He was also eyeing Dabney with the intent of taking her home with him with, or without, his current hanger-on.\n\nPerhaps my ear protection and shooting glasses disguised me, or maybe he didn't watch the news. Either way ...\n\n\"She has no firearms experience, you haven't introduced yourself as a firearm instructor and I don't know you, so you are not my buddy,\" I replied.\n\n\"I'm Oliver Jackson, trained marksman and former Marine Force Recon,\" he grinned. \"You serve?\"\n\n\"None of that is relevant to your ability to train others in the use of firearms,\" I met his gaze.\n\n\"Vance is a hero,\" Dabney proclaimed. Douche-bag's woman of the moment had wavy, black hair and a complexion of the southern portion of the subcontinent; tall and cute enough to be a model. Dabney would still be a major upgrade.\n\n\"Hero?\" Oliver scoffed. He assumed I was playing his game of the bad-ass war hero and that would be one hero too many in this room.\n\n\"Dabney, this is not a conversation we are having,\" I told her. My lady was contrite. She knew I thought bravado was for the mentally deficient.\n\n\"Ah, come on Dabney, it will be fun,\" he attempted an end-run around me. I was given a reason to be proud of my companion by her response. She was merging her highly cultivated call-girl empathy and bullshit detection with her analysis of me and a sense for what Special Service operators were really like.\n\n\"Fun ... oh,\" she pursed her lip in an erotic 'O', \"who are you?\" to Oliver's date.\n\n\"Sara Patel,\" the girl said. \"I'm in town at the International Wireless Expo,\" she smiled. \"Oliver is in private security with one of the Canadian firms.\"\n\n\"Well, that's a total load of crap,\" Dabney giggled. \"Conventioneers who bring their own private security with them - Sara is it - don't give them the night off.\"\n\n\"Those who can afford them definitely don't hire private security from out of the country ~ firearm regulations are different from nation to nation. Besides, the Las Vegas Strip has its own LVMD station. It is one of the most secure areas on the planet,\" she informed the new girl. \"All the major hotels have their own private security forces ... who normally don't scout out guests at their place of business.\"\n\n\"Lady, you don't know what you are talking about,\" Oliver got defensive.\n\n\"Oliver, I'm a former professional escort,\" she shook her head. \"I know my conventions, which people are the real deal and who are the conmen. Sara, did he tell you he'd come down with a client from Canada?\"\n\n\"What's that got to do with anything ...\" Oliver stammered.\n\n\"Yes ... yes, he did,\" Sara's caution was belatedly kicking in.\n\n\"If he was an out-of-towner on the job, Honey, he'd still be working. Real bodyguards would be on the job 24/7 for the three to five days their client was in town.\"\n\n\"I'm from Vegas, Bi ... Miss,\" Oliver evaded. \"I handle overall security for ...\"\n\n\"I cry bullshit,\" Dabney laughed at the guy. \"Visitors don't need security during the day; they need it at night ... like right now.\" Sara was starting to get the creepy vibe from her 'pick-up' as Oliver shed his 'cool'.\n\n\"Celer, Silens, Mortalis,\" I said.\n\n\"What?\" Oliver turned angrily on me. Anger and guns - not good. Even unloaded, guns are bad news. There was also ammo close by. There was something else getting 'closer-by' as well. One of the real gun pros who worked for Green Valley.\n\n\"Celer, Silens, Mortalis,\" I repeated.\n\n\"What does that mean?\" Sara asked.\n\n\"Let's get out of here,\" Oliver put a hand on Sara's elbow.\n\n\"It is the motto of the United States Marine Force Reconnaissance battalions,\" the firearm's instructor answered for me.\n\n\"It means 'Swift, Silent, Deadly',\" I added. \"Oliver, I know some real Force Recon marines. I was a SARC and I served alongside them. Using their reputation to score a girl ~ that's low.\" Oliver paled. \"Dude, no Force Recon marine I know would give a damn about you because you aren't worth the mud beneath their feet. You are a sleazy loser. Put the guns down and go home.\"\n\nOliver stumbled back to his stand. He flashed a look to Sara. Sara weighed her options and went to stand by Dabney. The instructor visually made sure I was calm before walking over to Oliver.\n\n\"Mr. Jackson, why don't we check you out?\" he suggested.\n\n\"Ummm ... Sara?\"\n\n\"I think I want to go back to my hotel,\" she shook her head.\n\n\"Buddy,\" Oliver glared at me, \"I won't ...\"\n\n\"Mr. Jackson, do you even know what a SARC is?\" the instructor asked. Jackson didn't. \"Those are the tiny handful of Naval Corpsmen who serve with real Force Recon Marines and SEAL teams and I know for a fact Mr. Vardanyan did both.\"\n\n\"I'm a former US Army Ranger ~ 2nd Battalion/75th Regiment,\" he stated.\n\n\"Tree-hugger,\" I muttered. He laughed. The 2nd Battalion was based in Joint Base Lewis-McChord, Washington State, thus the 'tree-hugger' crack.\n\n\"Little Green Man,\" he shot back. SEAL's were (rarely) called the 'Men with Green Faces'. I liked this guy.\n\n\"Sara, do you want us to give you a ride back to your hotel?\" my date offered. \"I'm Dabney Curtiss and my date is Vance Vardanyan.\"\n\n\"That name ... it sounds familiar,\" Sara mused. \"Were you really an escort?\" she asked Dabney. She swept up Sara while the instructor, 1st Lt. (ret.) Jase Carson, Oliver and I checked all the ammo and weapons.\n\nIt was dark by the time we exited to the parking lots.\n\n\"Ah ... Mr. Vanyan ... I was just playing around,\" Oliver prevaricated.\n\n\"You are a Marine, right?\" I asked. That implied he'd left service with an Honorable Discharge. An 'ex-Marine' implied a dishonorable discharge. I didn't bother correcting him about my name.\n\n\"Yeah ... a 2800,\" he confessed. That was a Basic Data/Communications Maintenance Marine. Electronic systems didn't fix themselves and someone had to do the job.\n\n\"A piece of advice,\" I suggested. \"Full-auto is Hollywood. Keep your eyes on the target and use three round bursts. A three round burst to center mass looks just as nice.\"\n\n\"Oh.\"\n\n\"That would require you to practice,\" I reminded him.",
        "\"So, are we okay?\" he couldn't make eye contact. \"About that whole Force Recon thing?\"\n\n\"I'm not the Marine Corps' Mother, Oliver. And Hospital Corpsmen aren't overly emotional types. You might want to think whether, if someone thinks you are a Special Forces Operator they will come at you accordingly, trying to make their reputations by kicking your ass. I'm not sure any piece of tail is worth it.\"\n\n\"Dude, are you looking at the girl you were with?\" he scoffed.\n\n\"She's a childhood friend, Oliver. She is seven years younger than me and I used to babysit her when I partied with her sister back in High School,\" I exaggerated. \"Dabney ended up with some bad people and I want her to be able to defend herself.\"\n\n\"I could ...\"\n\n\"Oliver, if I disagree with the way you look at her, I'll break every bone in your left hand. I'll let you keep your right so you can drive your bawling ass to the hospital. Clear?\" I stressed. He gulped, fumbled with his keys and quick-stepped to his Jeep Wrangler. I caught up with Dabney and Sara ... what was wrong with me? I didn't pick up hitchhikers - ever.\n\n\"Do you really have a new, black corvette?\" Sara asked from the front passenger seat. Dabney had wisely taken to the rear so I didn't have a total stranger behind me. She wasn't impressed with my 1987 Audi 5000 Turbo Quattro.\n\n\"Yes. This vehicle is far less likely to get stolen by the local hoodlums for parts, or a joyride. Since I would like avoid utilizing the taxi companies as much as possible, I drive an outwardly crappy car.\"\n\n\"That makes sense,\" she nodded. She waited until we were back on the road before resuming her socialization. \"Thank you for that ... back there. Normally I don't walk off with guys I've just met, but ... it's Vegas.\"\n\n\"No problem, Sara,\" Dabney chimed in.\n\n\"Yeah, there was no reason for that jerk to ruin your stay in our fair city. Where am I dropping you off?\" which was my polite way of saying 'beat it' to the tourist.\n\n\"I'm at the Wynn Resort - room 5360,\" she innocently provided.\n\n\"Sara, you don't want to be telling strange people your room number,\" Dabney cautioned her. \"I love my hometown, but we have more than our share of scuz-bags.\"\n\n\"Thank you, I think. I guess I wanted to get an early start on the weekend. I'm lucky I ran into you two. What is it you do again, V ... Vance, right?\" Sara clumsily came on to me, and Dabney. She was truly trying to become submerged in the 'what happens in Vegas, stays in Vegas' fantasy.\n\nThat ignored the fact that a Clark County conviction stayed on your criminal record and followed you all the days of your life (unless you knew the right people). The same went with New Orleans and Mardi Gras.\n\n\"I'm a paramedic,\" I enlightened her. \"Dabney is reassessing her life at the moment. What do you do?\"\n\n\"I'm an electrical engineer,\" she hedged her words. \"I have a Masters in Electrical Engineering from Cal Tech. I've been working on a hardwired system that tracks and quarantines mal- and adware through wireless systems. Boring stuff, I know,\" she was already apologizing for her boring life. People should learn to appreciate 'boring' more often.\n\n\"Are you the team's project manager?\" Dabney inquired.\n\nTechnology wasn't her thing. Getting people to talk about their 'thing' was her job, or had been. Professional escorts made their 'clients' feel relaxed and in charge. It was the social side of prostitution that earned escorts the extra bucks.\n\n\"Yes,\" Sara brightened up. \"There were only three of us when we started the company ~ all Cal Tech people. We patented a few items last year and expanded to twelve employees. I know,\" she blushed, \"it is nothing big. We'd like to expand out of our Southern California marketplace, so we came to the Expo looking for investors and partners,\" she stumbled through her enthusiasm.\n\nShe was unloading dangerous information to near-total strangers. She wasn't giving us secure information. Sara was confessing to us she had data worth millions. I could 'convince' her into sharing every detail in a matter of hours and I was far from being alone in possessing those skill sets.\n\nNot wanting to care about stupid people was one of the primary reasons I hadn't ended up in private security, despite having been trained by the SEAL's in High Threat Protection Security aka body-guarding people other folks wanted to kidnap and/or kill. I soaked up Sara in my peripheral vision.\n\nThe divots on either side of her nose ridge were almost gone. What acne she'd suffered through had been cleaned up. Her boobs, butt and cheeks were all hers. That equated to some skin treatments and laser eye surgery. She was gawky, bright, socially-challenged, finally coming into money and wanted to change her life.\n\nThat also meant she had no 'man sense' ~ she was fuck-bait for the social piranhas. I hadn't developed the skills of a psychoanalyst so I could help people; it was my lie detector.\n\n\"What platform did you start with?\" I began my questioning. That opened her up.\n\nI explained to her my service required me to know a great deal about computers; both hardware and software. Her system went after imbedded hardware issues and she was a bit surprised the largish gun-toting grunt she'd met at the gun range knew what she was talking about, even if only in generalities. I didn't have her educational background and we were okay with that.\n\nDabney was lost in the minutia conversation, yet she contributed bunches by using physical contact and smiles to assure Sara she could 'geek-out' without the two of us minding. We arrived at the Wynn resort when everything began going badly. Dabney's phone rang ~ I'd retrieved her old number (the one in LA) to a new phone for her.\n\n(And Back to Helping Kip out of a Jam)\n\nThe person on the other end was one of her former co-workers. She was frantic. Bad shit had happened and Dabney was trying to make sense of it all. I advised Dabney to set up a meeting place for a face to face. All this confusion and anger was going out over an open network.\n\nSara gave Dabney a business card with her private number on the back before exiting the car. She repeatedly thanked us and dropped a few Airbus-sized hints she wanted to hang out with some locals and would be in town until Monday morning. Dabney said we'd do our best, then off we went, which led us to Sunrise Hospital and Medical Center.\n\nKip Churchill, her replacement pimp she'd never used, was in the ER. His bodyguard, Leon Kramer, was in surgery. They'd both gotten their asses kicked. Adding to this 'pimp-tragedy' was another procurer named Lorenz plus two of his 'buddies' were also in a 'serious-to-critical' condition. We got this much from the four girls that had shown up to help Kip ... the how and why wasn't really clear.\n\nThe girls were useless to me, so I left Dabney with them and went to the source. The ER technician (the doctor was checking in from time to time) tried to shush me away.\n\n\"Barbara (the tech), unless you want five ladies running around frantically like chickens with their heads cut off, give me three minutes with the guy here,\" I said.\n\n\"You look familiar,\" her brow furrowed. Ugh.\n\n\"I'm Vance Vardanyan,\" I introduced myself. The lights came on.\n\n\"The paramedic ... um ... former paramedic. One professional to another, you do good work,\" she was honest with her praise. \"Pity...\" About me being fired, she meant.\n\n\"Thanks, but that's not the problem at this moment,\" I redirected her. \"Please give me three minutes with Kip.\" Kip had been studying me. He was more bruised than broken. His left hand and wrist looked bad. Someone had stomped on it pretty bad while tenderizing the rest of his body.\n\n\"It's okay,\" Kip mumbled. Barbara left and closed the curtain.\n\n\"Why are you here?\" he inquired. \"'Care' and I are done.\" (Dabney = Care-Free.)\n\n\"I'm here because one of your girls is weeping to Dabney and she is under the misconception I can, or even want to, help the situation. What's the deal?\"\n\n\"Bad shit,\" he grunted. His pain was real enough. \"Another 'daddy' named Lorenz has this girl named Coal.\"\n\n\"Coal used to work in New York City before coming west six months ago. She had a close friend who stayed behind. That friend developed a stalker boyfriend ... a super-rich, control-freak, stalker boyfriend. New girl - Corona - ducks out on the bastard, comes out west and joins Lorenz's stable.\" \n\n\"Tonight, a local 'party promoter' contacts Lorenz for a two-day long party - says she needs six girls - very specific looks. Lorenz tosses two slots my way. I sent over Natalie and Magnolia.\" Neither of whom had called Dabney.\n\n\"Fuck all if I know why you are here,\" he groaned. \"I can't call in the cops.\"\n\n\"Situation,\" I sighed.\n\n\"The whole thing was a set-up. Corona was on the lookout for this scumbag and had already rabbited twice on Lorenz, so she was on thin ice with him. She figured being at a multi-girl gig would be safe. She was wrong.\"\n\n\"The client's people thought they had all the girls' phones, but I've given all my girls a back-up emergency 'stick' to warn me if they ever get in trouble,\" he informed me. How nice; a high-tech pimp who cares enough to give them a life-line (and an automatic GPS device should they 'get lost'.) \"She gave me the call. I tried to get up there, but it's the penthouse. I called Lorenz, he had a 'guy' let us up and ...\"\n\n\"Then his private security kicked our ass. They are hanging onto the girls as 'insurance'. I think they only let us guys go because they were afraid we might actually die from the beating we took,\" Kip frowned.\n\n\"Numbers?\" I requested. Why was I requesting this? Dabney wouldn't let this go until I gave the rescue of her two pals a chance.\n\n\"Eight ~ funky accents and they spoke a language I didn't know,\" he recalled. \"Bad ass martial artists ... and they had guns. I saw one ... looked like an MP-5. Aaahhh ...\" pain, \"We never stood a chance.\" Pimps aren't renowned combatants. Still, Lorenz probably carried around two sides of beef similar to Leon. I spoke a few words in different languages to Kip. The 'winner' was French.\n\nThe French produced all sorts of dangerous ex-military / para-military types.\n\n\"Name?\"\n\n\"Chr\u00e9tien Gris.\" \n\nI didn't know the guy, his resources, or any of his team, though odds were I was looking at French Foreign Legion, French paratroops, or former DGSE (their CIA, which included their dirty tricks crowd).\n\n\"What are the odds he's already fled the coup, boarded his private jet and is winging his way back east?\" I inquired. Kip thought it over.\n\n\"The guy is a complete sociopath and obsessed with the girl. I think he's not leaving until he's punished her by working over all the other girls. Help me up,\" he grimaced. \"I'm coming with you.\"\n\n\"What the fuck makes you think I'm getting involved with this fiasco. Call the cops,\" I directed. \"They have people who handle this type of shit.\"\n\n\"The guy has billions, a tiny army and none of those girls will make a peep against him. Especially now their men have been broken down before their eyes. I get a bad feeling if he gets any of those girls on his private plane, we'll never see them again.\"\n\nFun-fucking-tastic. Would I go? I would. Trying wasn't in my creed. Would I talk a semi-crippled Kip out of coming along? No. He'd make a great secondary target for the French to shoot at. He'd also be able to corral the girls and get them out faster than I could because I was stranger in their eyes. Allies? I couldn't bring either cop in because Kip was right. None of the girls could make a credible complainant.\n\n\"Where?\"\n\n\"You'll do it?\" Kip seemed surprised.\n\n\"Yeah,\" I coughed. \"We built Dabney extra closet space today. If she moves out, it will be a whole day's labor wasted.\" Bwahaha ... no one was buying that.\n\n\"The penthouse at the Venetian.\"\n\n'Yay!' The top three floors of the Venetian Hotel and Casino. How the hell would I get up there?' My mind went into planning mode. I could get around their security surveillance and hijack the elevator going up. Coming back down would be its own set of issues I'd have to tackle before I could create a viable plan for rescuing the girls. \n\nGuns and steel knives would be detected. I would have no true back up. I'd have to be going in blind. Hacking the Venetian's systems would either be quick and messy, or slow and quiet and I didn't have time for quiet and couldn't afford to expose my friend to messy.\n\nThankfully, elevators are mechanical devices. I could black out the security cameras, short out the computer-assisted systems then manually order the elevator's electronics to send me up the last (restricted) levels to the penthouse. Setting off the fire alarm was pointless and way too loud. If you commit a terrorist act (pulling a fire alarm could be construed as a terror action) in a Las Vegas casino, the Big Dogs come looking for you.\n\nI could tell my elevator that there was a fire though and that would take us straight to the ground floor, just like it was preprogrammed to do. The security office would get the alert, but the public would not. Security would be waiting in the lobby for me ... which was okay as well. At worst, I had vandalized their elevator and hopefully six scared women would make them want to make my indiscretion go away.\n\nMy tactical flaws were numerous. Superior enemy numbers, exceedingly skillful, I couldn't track their movements while they most likely had a system for tracking mine. They knew the layout, I didn't. They had guns, I didn't.\n\nMy tactical advantages: my enemy had three missions: protect their primary, maintain the women in captivity (a girl opening an emergency door would be unfortunate) and stopping me. I also had the element of surprise in both initiative and in enemy intelligence: I already knew they were professionals; they would have to discern my skill level the hard way.\n\nI had steps 2, 3 and 4 taken care of. Step one was penetrating the Venetian in the first place. I needed a cover and I needed it soon - something that couldn't be automatically traced back to me. Monday morning she'd be heading back to southern California. Sara would do nicely. She was up for an adventure, all I wanted her to do was rent a room on the floor beneath the penthouse and no one would associate her with me. By the time she got cold feet, it would be too late.\n\nStep Five, the exit. I needed a cop. Soledad wasn't a possibility. This might turn ugly. TC would want to know what was going on and telling her my plan was a non-starter. I did have another fish on the hook though. I gave her a call, reminded her she owed me a 'solid' for not sinking her career when I destroyed her partner's and it was my word that was keeping IAB off her back.\n\nOfficer Rothschild agreed to be my unwilling accomplice. All she had to do was wait for me to appear in the lobby dressed in her LVMPD gear. When I exited the elevators with the rescued hostages I'd let the legal ramifications take their course. Venetian Security and Mr. Gris' thugs would round us up, even in public, if we were inside the Hotel & Casino. The Venetian staff would NOT challenge the LVMPD though. Gris' boys weren't likely to be too keen on shooting at a law enforcement agent either. \n\nAll Rothschild had to do was walk us out the door. Once we were away from the Strip, I could use guns too and I knew the streets of Vegas, its chokepoints, cop hangouts and ambush sites a hell of a lot better than they did.\n\n(Carnage at the Venetian)\n\nKip had his arm put in a brace, popped one, and only one, Oxycodone then checked himself out. We sent the women home with the definite threat that they had all better keep their mouths shut. I retrieved some gear from my trunk before sending Dabney home as well. She'd have to come back downtown to get G from work, but was otherwise to lie low.\n\nKip asked me what my plan was. I asked him if he knew how to use a semi-automatic pistol. He nodded. \n\n\"Great. You won't be totally useless. Now shut up and do what you're told. I mean that. Not a God damn word. If you use my name, I'll kill you.\"\n\nHe decided to divorce his ego from the situation and obeyed. I dressed in a wet suit, he dressed in stolen hospital scrubs and then we redressed in our normal clothes. We'd use voice modulators and ski masks once we began the op. Next, I made a private call to Reagan and informed her of the 4-1-1. She wouldn't help directly.\n\nIndirectly, her boss, the Vice Lady of Lust, was winding up her counter-punch to Mr. Gris. If Chr\u00e9tien had asked Circe (through Lorenz) for Corona she would have handed the troublesome waif over. Circe wasn't in the compassion business.\n\nComing to Las Vegas, hunting down and abusing her girls and then thinking you could get away with ... that wasn't challenge she could let pass unanswered. This was 'out west', not the 'wild, wild west' and we had our own set of laws and lawmen. Six missing/dead high-end call girls vanishing in one night was an investigation she didn't need and she had two busted up pimps to account for.\n\nBasically, Gris was rustling the wrong fillies in someone else's well-defined pasturage. Had he not decided his wealth and power allowed him to kick over someone else's sand castle ... but Mr. Gris had felt entitled and now Circe had to cut off his balls and burn them before his eyes.\n\nNext I sent Rothschild in motion. She had been cautiously agreeable, since all she had to do was stand around in uniform and do nothing. She did want me to pay for the privilege of her support. I negotiated her down to $700. This was Vegas after all, you got what you paid for; and in the long-term being in the good graces of a patrolwoman might be useful beyond tonight's scheming.\n\nBlackmail earns you resentment. A payday wins you continued interest. Kip used a false ID and paid cash for a rental van from one of Circe's front companies. He knew a valet at the Venetian who would keep it close by when we parked. Sara was gleefully giddy to jump back into the excitement.\n\nI gave her the bare bones description: there was this evil, stalker boyfriend I would meet and convince to give me back the girl after a stern lecture on masculinity and the role of men as protectors. It was what she wanted to hear. I showed her we (Kip and I) had no guns, only a walking stick and a box of electronics gear plus a goodie bag of innocuous yet nasty tricks of the trade.\n\nShe would enter independently while Kip and I would hang about and join her waiting on the elevator. Our accessories would fit in nicely with her tech background if security decided to hassle her during the check-in process, seamlessly camouflaged as part of her luggage. \n\nI made sure we all wore gloves throughout the operation. DNA was unfortunate, yet not time specific (aka 'I brushed up against someone'), video was dangerous (time stamped), but fingerprints were damning if found in areas, or on things, you shouldn't have been around/holding. \n\nWe rendezvoused at the first elevator that made itself available. I let Kip ward off some anxious tourists with his clever tongue and battered visage while I, a chance acquaintance, helped her with her luggage rack - no bellboy. From there, it was step by step.\n\n(1) When I located the two security cameras, I had Sara use black electrical tape to cover the 'hidden' one while I did the same thing to the larger, public device, with the addition of a mini, egg-shaped vibrator to ruin the sound quality. We achieved the action so quickly, I was sure security guards, rarely omnipresent, had no cause to set off any alarms, or stop the elevator. They would assume a technical glitch, not criminal mischief.\n\n(2) Sara was of real help rewiring the elevator console once I popped the cover. We fried the cyber safeguards using a sawed-off cattle prod then rewired the unit so that it thought it was three levels lower than it actually was. Ta daaa ..., we had access to the penthouse. Kip and I stripped off our outer clothes, packed them in Sara's luggage then put on our heavy body armor (with plate inserts) hidden in the panels of one of the larger pieces of luggage.",
        "(3) The third part of the elevator subterfuge was killing the entire system in the second before it registered reaching the lowest floor of the penthouse. That annoying little ping that announced our arrival would have been unfortunate. We were two inches shy ~ Sara had a deft touch for all things electrical.\n\n\"Oh my God,\" Sara gasp softly. She placed a hand over her mouth. \"I'm really breaking the law, aren't I?\" she belatedly realized. \n\n\"You are helping bring law-breakers to the only justice they can't buy their way out of, Sara,\" I consoled her. Kip and I put on ski masks, booties and put on twin body spy cams (with audio).\n\nProvided we survived, I would want to review this operation for further details I may have missed in 'real time'.\n\n\"You are making sure that six women will live to see the sunrise.\" That was a tad melodramatic, yet truthful.\n\n\"If you hear people approaching the elevator that don't identify themselves as me or Kip, hit the emergency button and that will take you automatically to the ground floor,\" I stroked her cheek. \"And remember to remove the wiring stunt, or it will slam you into the basement.\" The elevator was three stories short of calculating what floor it was really on. Sara nodded, then kissed me briefly on the lips. \n\nFirst we listened intently for anyone by the door. So far, so good. Kip and I wedged the doors open enough for me to slide out. I removed the cloth faux-wood sheath from my walking stick which was a lethal weapon in its own right; colloquially called a 'Thumper'. {Thank you, Mr. C}\n\nMy 'Thumper' was a four foot section of heavy PVC, one with a sidewall over 1/4inch thick, sealed at both ends. Inside was a one inch diameter PVC pipe, also sealed. The space between the outer and inner pipe was filled with thirty weight motor oil. The VERY tightly sealed one inch tube was \u00be filled of mercury ~ dangerous, toxic stuff.\n\nThat gave me a four foot long walking stick which I could use (purely defensively) as a bokken or wooden practice sword, with a 'slight' difference. This type of tool could be used with great effect, crushing joints, dislocating limbs and causing a great deal of pain, damage and suffering.\n\nWhen I swung my 'Thumper', the inner tube moved to the other end of the outer tube, thereby re-enforcing the impact point. That is why your seal had to be 100% effective. The material inside the smaller tube became compressed and very solid making contact with any body part, say a shoulder, hip, or knee... very bad news for the object on the receiving end.\n\nTo say I'd actually trained with a sword would be unfair to anyone who has actually pursued such disciplines with knowledge and vigor. I was firmly a child of the 21st century ~ I put bullets in people, given the weaponry and opportunity. Training in hand-to-hand combat was an extension of my desire to make people whose lives mattered to me easier by making other people 'less threatening'.\n\nI stepped out into the entry way. No one was on guard. That wasn't unexpected. Eight men had to cover three floors and rotate their alert levels (bodyguards need to eat and sleep too). Why station someone at the door where they would be relatively vulnerable? They would rely on the hotel staff and the elevator itself for their front line of security.\n\nBesides those eight and Mr. Gris, I was thinking four or five flunkies would be here as well. A concierge (criminally-inclined playboys couldn't get their hands dirty), driver, butler, personal assistant and a cook (if the playboy had a finicky pallet). This (hopefully) would be the weakness I could exploit.\n\nGuardians protect the 'principle' not the staff. Interrogating a trained operative was time I didn't have. Professional staffers normally cracked a whole lot faster. After the elevator door was shut, we went searching for a kitchen. By cracking a few doors quietly and following my nose, I was able to point the way.\n\nNone of the smells were recent ~ it was past 11pm, so the room was dim. Keeping a staffer close to their post meant ... a small bedroom off from the kitchen. She was asleep when I ghosted into the room. I had Kip wait in the kitchen and set him to boiling some saltwater. Scalding water makes an excellent improvised weapon. Saltwater gets even hotter.\n\nAs for the cook - I wacked her in the shoulder. The pain was so intense that she gasped in pain instead of screaming.\n\n\"You are going to tell me what I want to know,\" I softly addressed her fearful eyes. \"How much pain you go through is up to you, but trust me, you are going to tell me what I want to know.\"\n\n\"Please,\" she hissed through her clenched teeth. \"I don't make me ...\" and I broke her right tibia then followed through by clamping my hand over her mouth. That kind of injury would make a person cry out. I gave him this much, Mr. Gris sociopathic charm inspired slavish devotion on her part.\n\nShe told herself he was emotionally damaged, in need of succor and had been hurt by anyone he dared open up to. The surreal paycheck allowed her the illusion he secretly knew of her devotion and would one day reward her ... if she just hung around long enough ... and ignored the cutting remarks and the 'clumsy' girls with bruises.\n\nShe couldn't image she'd ever betray him ... I'd heard all the variations of why people excused the evil in those they worshiped, never blaming the monster in their midst - always finding someone / anyone at fault for what their living deity 'had' to do. Misunderstood, suffering at the hands of a wickedly cruel world, or a soul in need of saving ... I'd seen it all before.\n\nStart to finish: seven minutes. This wasn't even a work out for me. She told me what I wanted to know. We had two men on single, roving patrols, three watching a soccer match in the main entertainment room, two were sleeping two doors down the hall. The eighth was outside the Master Bedroom on the third floor in case Mr. Gris needed anything. Gris had Coal and another girl with him.\n\nThe other four had been stripped naked and locked in the sauna by the concierge because she preferred hanging out with one the bodyguards watching the soccer match. The driver doubled as Mr. Gris' pilot. He gone to the airport to make sure the plane was fueled up and ready to head back to New York City in the morning. He'd be back around 3 am.\n\nMr. Gris' personal trainer (not a butler) was his extracurricular 'help mate', so he would be close to Gris. The PA was in the second floor office, probably asleep on the sofa because she was a workaholic who only took cat naps. The Venetian penthouse did NOT have its own security room, though it had a Panic Room adjacent to the Master Bedroom.\n\nLast question; did Chr\u00e9tien Gris have any weapons? Having broken both her arms with impact 'Monteggia' fractures, smothering her with a pillow was easy enough, and very frightening. She was in a constant shit-load of pain yet still ambulatory. The kind of fractures I inflicted were like that. The bones remained intact and, if you were careful, you didn't even need to go to a hospital.\n\nFirst answer - 'no'; more educationally informed pressure, then 'yes'. Finally - 'no gun, but twin 4\" throwing blades'. I gave her parting words to think about.\n\n\"I am only here to get the girls back. If you've been completely forthright with me, no one has to die tonight. If I run across a surprise, all bets are off.\"\n\n\"I'll beat to death anyone who gets in my way. I have impressed upon you how violent I can be. Do you want Mr. Gris to go through things far worse than what you've endured? Or, is there something you haven't told me?\" I let my eyes bore into her soul.\n\n\"I ... I have a Bluetooth,\" she whimpered. \"We are all linked to the same network. Don't kill him. Please, promise me you won't kill him?\"\n\n\"I was never planning to kill either of you, cook,\" I glared. \"I fed upon your insane obsession with that sick freak to make you betray him ... and I'm going to let him know how helpful you were. I'll let him determine the appropriate reward for your betrayal. Good night.\"\n\nWas that uncalled for cruelty? Yes. With four girls trapped in a sauna and a fifth being tortured so the sixth one would 'realize' how much he loved her, controlled her, would make others suffer for her wanting to be free and not returning his twisted version of love, all while she didn't call 911; I felt okay with it.\n\nI suffocated her into unconsciousness, secured the Bluetooth and slipped back to the kitchen. Kip had a large saucepot of water boiling if we needed it. He also had accessed the kitchen's POS system and that had given him the three-story penthouse layout. I told Kip to stay put; I'd be back. I was going for the bodyguard on the first floor.\n\nI didn't know where he was, but there were only so many routes he could travel. My best guess was he'd transit the main atrium off the elevator entryway, so I headed that way. I had the right idea, but bad timing. He was more surprised to see me than I was to see him. That allowed me to cover the distance and break the forearm attached to the hand quick-drawing his HK USP Tactical.\n\nThere was no manual safety on that model. A shot ricocheted off the floor followed rapidly by the sound of his pistol bouncing off the wall. The Frenchman was kind enough to have a Br\u00fcgger & Thomet sound suppressor attached. He instinctively reacted, pivoting into a piston-kick at my hip. He was good ~ I was just way better.\n\nSavate is rather nasty martial art. The kick was meant to displace, perhaps even dislocate the joint. He was also trying to distract me from noticing him yank out a flip knife with his left hand. I drove my knee into the kick before he could get any power behind it. His left hand was coming around with the blade. I noted he had one of those hyper-expensive ballistic undershirts on. It wasn't an issue for me.\n\nInstead of swinging my 'thumper', I stabbed up with the 'hilt' into his Vagus nerve right below the jaw right before his knife deflected off my body armor's ceramic plate. My blow wasn't 'light's out'; it was an epileptic seizure that left him helpless for the follow-up concussion delivered to his cranium. I could have cracked his head open like a melon if I had wanted to kill him.\n\nHis holster went on my hip. I recovered his weapon, checking the mag before putting it up. I hooked the unconscious ex-trooper by the back of his collar and dragged him back to the kitchen. Two slip-ties trapped his hands behind his back and his ankles, while duct tape went over his mouth. Time for the two sleepers.\n\nTaking Kip with me, we discovered they were asleep alright. The Bluetooth related quietly into my ear:\n\n[French] \"Germaine, I'm coming down for a coffee,\" the speaker on the other end communicated. As they say, 'when opportunity knocks ...'\n\n[French] (cough) \"... they drank it all ... I'll wake ... Jean (the cook),\" I replied in a gravelly whisper.\n\n[French] \"Why bother?\"\n\n[French] \"Do you want me to make it?\"\n\n[French] \"I choose to live,\" he laughed. \"I'll make one more circuit then be down.\" I didn't hold his lack of caution against him. He was in a secure location on a security network. Even professionals can get careless.\n\nI opened the door in a casual manner. If either of the two men were light sleepers, I didn't want to spook them by acting sneaky. A man strolling in was groan-worthy, not a clarion call for danger. I waltzed in and shot them both in the upper left torso, putting the first bullet to the quickest man to react. The second man wasn't even awake when I shot him.\n\nThe wound would be fatal if they waited too long in seeking attention. A centimeter off and their perforated lung would have added a nicked aorta to their list of woes. If I treated the existing wounds they could wait half a day before needing a hospital's urgent care ward. I wanted them to leave Las Vegas.\n\nKip shut the door behind us. I didn't want anyone to get the bright idea to start screaming for help.\n\n[French] \"Now that I have your attention, roll over onto your stomachs, cross your wrists behind your backs and after I cuff you, I'll plug those holes that are quickly killing you.\"\n\n[French] \"You have no idea ...\" he threatened through grinding teeth. I blew off his left ear. He screamed. I wasn't worried. They had spared no expense in the construction of the Venetian. Ensuring the privacy of the penthouse had been at the top of their list of 'must does'.\n\n[French] \"I'm on the clock, my friend,\" I looked at the second man.\n\nWith hate in his eyes, he struggled over onto his belly, complying with my order. Kip was over-eager so I warded him back. First I cold-cocked the screamer then circled around so when I let Kip slip-tie the guy the civilian wasn't in my line of fire.\n\n[French] \"Who are you with?\" he struggled to keep his cool.\n\n[French] \"Easter Seals. You failed to mail in your yearly pledge.\"\n\n[French] \"I'll remember you,\" he made a pledge of his own.\n\n\"Qui Ose Gagne,\" I read off his tattoo. Kip went over to the unconscious guy to bind him as well. I applied a trauma patch to the man. I wasn't a man of my word. The wounded could explain their mishap far better than a corpse could.\n\n\"You know what that means?\" he grumbled.\n\n\"You were in the 1er R\u00e9giment de Parachutistes d'Infanterie de Marine - 1er RPIMa and your motto, 'who dares wins', sounds pretty fucking poignant to me at the moment,\" I answered.\n\n\"Tonight, I let you live. If I catch you west of the Mississippi next week - or ever, I'm going to give you an IED you'll never forget. Tell your buddies,\" I explained the new reality to him. I was deadly serious. I knew their faces. They didn't know mine. If I saw them again, I wasn't going to run, play fair, or give them a second chance.\n\nI'd blow them sky-high without warning and the look in his eyes conveyed that he read me loud and clear. A sharp tap to the back of the head put him out before I did my emergency trauma to the chest wound of the one-eared prick. Without orders, Kip applied the duct tape to them both.\n\n\"Scrounge up any weapons you can find,\" I ordered Kip. He was the first pimp in my entire life I had the slightest bit of use for. The man hit pay-dirt. Two more HK USP Tacticals with suppressors, two balanced blades and two 'hell hath no fury like the ATF' HK416Cs. He also came up with a rucksack full of extra magazines for both beasts.\n\nThe HK416 was a favorite of French Special Warfare types. These two were ultra-compact variants; 5.56\u00d745mm NATO-firing submachine guns only 22.0 inches (560 mm) long when their stock was collapsed. I had little doubt these little ladies were full-auto, thus my reference to the ATF frowning on their existence in private hands. I snatched a HK416 for my personal use. I had to hurry up.\n\nThe layout had three other rooms devoted to Chr\u00e9tien's guardians. I sent Kip to gather up the booty from the other rooms the bodyguards were using while I went to ambush the second patroller. I even put the coffee-maker on percolate while keeping the lights dim.\n\nI wasn't much for talking with this guy. He came through the door with a tired smile and words on his lips that ended abruptly with a yelp. My first blow with my 'thumper' fractured both of his kneecaps, swept out his legs and flipped him face first to the floor. I planted the second blow on the back of his head before he hit the ground. I had to double-check to be sure I hadn't snapped his spine.\n\nNope. He'd be able to roll his wheelchair to the plane in a few hours. I had previously relieved Germaine of his knife, pistol and submachine gun and began his binding procedure on this guy when Kip showed up with three more HK416's, no pistols or knives, but plentiful ammo.\n\nThat meant I had one HK416 unaccounted for; I wagered that was with Mr. Gris. All four had their HK USP Tacticals and the Br\u00fcgger & Thomet sound suppressor appeared to be standard issue. I now had a small amount of breathing space. Germaine's comrade had announced he was heading for coffee, so he wouldn't be immediately missed. Germaine was theoretically with him.\n\nI took Kip back to one of the bodyguard rooms and tossed the two twin mattresses (each servant room had that set up) against the built in closet.\n\n\"Okay, impromptu firing lesson,\" I told him. I gave him the bare-bones. How to reload a magazine, how to aim and lastly, what firing both weapons felt like. I wanted him to hold the gun with confidence.\n\nIf the upcoming combatants decided to stress his resolve I wanted him to put the round in the general direction he was aiming at and to not have the recoil surprise him. I stripped down the guns we weren't using, dumping key components into the garbage disposal then we went hunting.\n\nWe went after the PA first. Pattern dictated she was either up, (she wasn't - the lights in the office were off) at the desk working on some sort of computer, or reclining on the sole sofa in the room. She swung up from a full recline to a standing position with the fluid grace of a minion who often found her boss barging in on her private time.\n\nShe ruined that millisecond of advantage by gawking at me. I dropped her like a bolt-gunned heifer. Kip was on her in a flash. He wrapped her up while I searched her for any surprises. None - good. We could hear the game from the next room. Two voices were prominent. I let my audio-spatial perception get a sense for what awaited us.\n\nBig Screen TV - 1st target: single chair (minimal movement on his part) to my left if I entered the room from the office. 2nd target: straight ahead on an expanded sitting platform (sofa, or love seat). 3rd target: far side of second target - far less vocal and occasionally spoke in a low voice. I had to imagine the female concierge, the 4th target, was beside him - which side was uncertain.\n\nThat put #3 and the woman in a love seat from the room's most ergonomic set up, thus # 2 was on the sofa. I walked Kip through my attack plan. I was coming at them through the office door. Kip was to circle round and take up a position from the behind the bar using the HK416, shoulder stock out and eyes tracking down the gun sights.\n\nWhen he heard me launch my attack, he was to rush the room, get behind the bar and keep everyone covered. I preempted his question.\n\n\"If I go down, fire and keep firing. Kill them all. You have three mags ~ 90 rounds. If you haven't killed them by the 90th round, you'll be dead too,\" I told him.\n\nI didn't ask him if he wanted to do this. I didn't appeal to his bravery, or ply him with threats. This was remorseless violence and if he didn't have the fortitude to follow through, there wasn't a damn thing I could say to make a difference at this juncture. I gave him fifteen seconds. He slunk off, scared down to his tighty-whiteys. Fear is a good thing if it doesn't unman you.\n\nNormally I'm a one-weapon combatant. I can shoot, punch, stab with my left with 95% of my accuracy with my right. Both my arms hit equally hard. That being said, I don't recommend to anyone not earning a stuntman's wage to do what I was about to do in a life-and-death situation. I strode boldly forth through the office door.\n\nWith my left hand I pumped two bullets into the man across the way (#3) with a HK USP Tactical in his center-mass. The 9mms weren't going to punch through his vest, but they'd hurt like hell and keep him in his seat. My 'thumper', in my right hand, started out resting on my shoulder; now it swung up in a lightning arch over my head and caught #2 in the face. His reaction time didn't do him any favors.\n\nHe had been springing off the sofa, clawing at his pistol and turning to face me all at the same time. The second he began pushing upwards, he lost control of his momentum. The only difference was that instead of landing the rod across his eyebrow ridge, I caught him across his the bridge of his nose and right eye socket.",
        "Odds were I'd fractured his ocular orb. His nose exploded in a shower of blood, cartilage and skin. I wasn't going to shed a tear over his blindness, or serious need of reconstructive surgery. The angle of my blow and the height he'd reached meant he almost ~ almost went sailing over the back of the sofa. I don't advise turning your back on an active opponent either.\n\nProfessionally, I would have popped the office door open, crouched in the doorway and fired three-round burst into the lot of them. I wasn't operating under my normally loose rules of engagement, fuck it all. I let the torque of my 'thumper' spin me around in a full 360 degree. #1 was suffering from his opening position of being both seated and starting with his back to me.\n\nThe 'thumper' caught him in the C7 vertebrae, rupturing it. Unlike my earlier spinal impact, this one was intentional. He could still breathe and his heart would still beat, yet that was pretty much the extent of his mobility. Until he got a spinal adjustment, he was paralyzed from the neck down. Honestly, I'd rather take birdshot from a 12 gauge than be hit by this thing, it is that nasty a weapon.\n\nNerveless, #1 stumbled forward to the ground unable to arrest his fall. I finished up the 360 kneeling as I fired two more bullets into #3. The concierge's mouth opened in shock, her lungs inflated and someone coughed to my right. I kept my eyes on the two of them; #3 was trying to focus on me while she looked toward the noise and found a masked Kip pointing a submachine gun at her.\n\n\"So much as a peep and this goes from an assault no one is going to talk about to a mysterious case of multiple murders,\" I menaced. Charisma and tone are more important than the actual words spoken. The guy looked like he was going to say something, so I tilted my pistol's aim so that he was staring down the barrel. \"Nod slowly if you understand.\"\n\n\"Please don't kill me ...\" she got out before she realized her mistake. That was okay, I wanted to club #3 like a baby seal anyway. I may have dropped him by 20 IQ points and, again, I didn't care. She squeaked as blood shot out of his nose then he slowly slumped over.\n\n\"Ssshhh ...\" I cautioned her. Now she was whimpering.\n\nI did a quick plan reassessment. The concierge was a selfish cunt. I could use that. I removed her Bluetooth then waved Kip over. He began the bondage routine starting with the paralyzed asshole.\n\n\"Roll over,\" I whispered my command.\n\nHer eyes begged for mercy, mine were pitiless so she turned around on the sofa, face on the cushions and her knees on the floor. She gave a startled 'eeep' when I stabbed her in the butt with a small 'flu' syringe.\n\n\"I have injected you with a slow acting toxin. In ... 18 minutes from 11:24 pm your lymphatic system will break down the benign compounds in your blood, releasing Arsenic into your system. After that, you will have about five minutes of agony before your heart stops.\"\n\n\"No,\" she groaned as she looked over her shoulder at me.\n\n\"I have an agent in the lobby with the antidote. They don't know you and I doubt you know them. Unless I show up in the lobby before your deadline, it's Final Judgment time for you. Do you want to live?\"\n\n\"Yes,\" she begged.\n\n\"Understood. Go with my associate here. Go to the sauna, gather up the girls, get them something to wear, take them to the elevator, help them get on, get on yourself and then wait for me. Oh ...\"\n\n\"Yes,\" she gulped.\n\n\"Pray for me. If your boss kills, or delays me, you're not long for this world,\" I let my eyes transmit my upcoming joy at her painful demise. She nodded.\n\n\"There is a pool table upstairs,\" she volunteered. \"Those two often play a game when they've got nothing better to do ... Mr. Gris likes to be left alone ...\"\n\nI didn't give her an award for treachery. Of all the staff, she had to be the most cognizant of her employer's true nature. I assisted Kip in securing the latest haul, broke down their pistols before sending Kip and the woman on their way.\n\n\"What about ...?\" he inquired quietly. I shook my head - no talking.\n\n\"Don't let her look, or get in the elevator. Tell our cohort to change clothes as well,\" I directed. They left. Before I headed for the third level, I did a spinal adjustment on the #1 guy. Leaving him in that helpless state would have fed into my sadistic impulse.\n\nFor my plan to reach the End Game, Gris had to have enough people capable of hustling the rest of his ensemble to his private plane so he could split town without drawing attention from the police. I mapped out the location of the pool table in the game room from the map in my mind. The elevator was a 'no-go'.\n\nThe main staircase dumped me out in the atrium on the third floor, which had an open view of the game room. That was too much distance to cover for hand to hand. I had no idea if the 'physical trainer' had body armor, or not. Hitting a moving target with partial cover wasn't my best option since I'd have to hit the final bodyguard first.\n\nThere were three alternate routes; two fire escapes and the access from the kitchen to the Master Bedroom's side room. There was undoubtedly a serious security device between the room and Mr. Gris. The cook's keycard would handle that nicely. Other security measures were unlikely.\n\nAll Gris' flunkies knew to leave him alone during his 'private time', even when that private time included 'guests'. Most door locks are meant to stop surreptitious entry, not brutal force. I didn't have to take on the last two. I'd grab Gris and force their acquiescence. I retraced my downstairs for the large saucepot.\n\nComing up the backside, I put the pot on a service tray, put the gun on the left side and my 'thumper' to the right. On the down side, I couldn't make out any noises from the Master Bedroom. On the plus side, no one else not in the room was going to hear what I was about to do. There was a small dolly which would make a wonderful platform.\n\nI slid the cook's key card in. Had the door not opened, I would have swung the HK416 around and shred the area around the lock ~ cutting it out with lead. It worked, I pushed the door open and let my senses soak up the sounds and smells. I detected muffled sobbing and the scent of sweat, urine and the particular odor of fear.\n\n\"I requested to be left alone, Jean,\" came this cultured male voice.\n\nI could sense the reek of this sicko's charisma and confidence without laying eyes on him. Since I was laying eyes on him, I was able to see his mask go from coldly cruel to authoritative disapproval and then to an irate cool. He wasn't afraid; he was simply far too invested into his 'I am the Master of my Universe' to give-in to something that rational.\n\nHad he done the smart thing, he would have dismounted the California king-sized bed away from me instead of toward me.\n\n\"You have made a very seri ...\" he threatened as I grabbed the deep saucepot and propelled its contents at his bare face and torso. He did have some truly fashionable tailored slacks on - no socks or jewelry.\n\nThe near-boiling salt water was on the mark, right between the nipples of his well-defined chest. He was model-sexy, with a physique meant to entice every woman he sought after; he would then deny them the pleasure they anticipated. For whatever reason, Corona had rejected his psychological and physiological mystique. That was why she was sitting in a chair off to my left. She was unbound ... by any physical restraints.\n\nBehind him, on the bed, was a very black, black-girl, tied naked and spread-eagle on the bed with a ball-gag strapped to her head. Her flesh glowed like hot embers from the thrashing she had taken. It was her terror, piss and sweat that permeated the room. I had taken extra care, taken that extra step, to make sure none of my improvised weapon splashed a single drop upon her ravaged flesh.\n\n\"Ah,\" he gasped. He was hissing through his horrific pain instead of crying out. Chr\u00e9tien Gris kept his wits about him. Screaming was pointless as he'd rendered himself friendless in a room with high tech sound-baffling construction. His confidence hadn't allowed him to even consider locking his doors. Now his willpower drove him to stagger for the main door and the help beyond.\n\nHis eyes were stinging - he'd brought up a warding arm to take much of the pain. Had he been thinking, he would have shut his mouth too. The three, or four seconds he needed to recouped that air and clear his eyes were two more than he had. I swung my 'thumper' so that it connected with his right kidney. When he fell to his knees, I gave his left kidney the same treatment.\n\nBoth blows were designed for debilitating pain and permanent damage. The only pity was that he'd be able to buy a black market replacement a few years down the road if his ego let him live that long. I was on the clock ~ I'd earmarked three minutes devoted to him for intense trauma to his internal organs and major muscle groups. No broken bones for him.\n\n\"Corona, untie your friend,\" I urged her with steady, strong words. \"Your ordeal is almost over.\" Chr\u00e9tien was in too much agony to interfere. Corona remained glued to her chair. I didn't press her, opting to work the bastard over instead. \"Free her, Corona,\" I kept with the soothing tone. \"It is time for you to say good-bye to this pathetic creature. Your running days are over.\"\n\nFifty-two seconds in, she got up and stared at him. I let Chr\u00e9tien look at her, form the words to countermand me, then nut-shot the cretin. I'd mangled my share of testicles in my career. Mr. Gris' odds of making little 'Gris-lettes' was plummeting toward zero with ever wack of the 'thumper' that was applied to his groin.\n\nThe penis is a muscle as well and every erection he was going to have over the next two weeks was going to bring him back to this time and place. My years spent with disreputable people doing unspeakable acts in the name of freedom and democracy was paying dividends for my fellow citizens now.\n\nAt 103 seconds he finally managed to eke out a question.\n\n\"Why?\"\n\nHe didn't get an answer. Dehumanizing your victim - Chr\u00e9tien was going to be left with no doubts that he was my victim tonight - could be accomplished in a variety of ways. Not using a person's name was one tool.\n\nNot talking to them at all was better. Going about your task with the same enthusiasm you show while shoveling some else's walkway for $5 was better than the first two choices. I was convincing him that he was a nameless, faceless task to me. Three of the four people in this room mattered and for the first time in his narcissistic life, he was absolutely the odd man out.\n\nCorona was the key. As she threw off the shackles he had been creating in her mind, she had reduced him in her mind ... and he knew it. His investment in her was being squandered by another man who didn't give a damn about him either way. At 180 seconds, I stopped. Now it was time to get Corona and Coal out of here. The main exit was the double doors, teak and solidly built.\n\nThey'd make excellent shelter for the girls if the two men outside got stupid. Corona had Coal standing, but the black girl would have collapsed if she let go. I secured my 'thumper' behind my back to my haversack. I retrieved my pistol, applied duct tape over poor, long-suffering Mr. Gris' mouth. Once I had hefted him up with an arm around his waist I signaled Corona to make her move.\n\nThe portal swung open and I shuffled into clear view of the people outside. They were right where the concierge said they would be - playing pool. Their looks went from attentive to ... the physical trainer face showed horror; the final bodyguard showed steely resolve. I had my purloined pistol pressed against Chr\u00e9tien's temple and was using him as a human shield.\n\n\"This side of the table - face down arms behind your back, or I start shooting at you,\" I commanded. \"En commen\u00e7ant par vous, de Parachutistes d'Infanterie de Marine,\" I directed to the Frenchman.\n\n[French] \"Team, Delta,\" the man muttered into his Bluetooth.\n\nI shot him in the left hand, between the thumb and forefinger and traversing his palm before exiting out the other side. Had it been something bigger than a 9mm, the bullet would have torn his hand in two. You have to be a fucking Iron Man to shrug that kind of wound off. He didn't.\n\nBefore he could react, I shot him in his right hand as well, putting the round a centimeter up from his middle finger into his palm. He was about to find out if his health insurance was sub-par.\n\n\"Your move,\" I pointed the gun at the physical trainer.\n\n\"I don' think ...\" he started his own cautionary tale to me.\n\nI shot the bodyguard in his right foot. It was that whole Savate thing - I didn't want to mess with that arrogant prick trying to reverse his fortune.\n\n\"What! Why did you ...,\" the man just wouldn't shut up and do as he was told, so I shot him (the physical trainer) in the shin. He screamed and fell over.\n\n\"This was easier than I thought it would be,\" I told Corona.\n\n\"Get some clothes for Coal and make your way to the first floor of the penthouse's elevator. Everyone will be waiting for you,\" I explained. \"I'll be with you in roughly two minutes. Go.\" I smashed the butt of the pistol against the back of Chr\u00e9tien's right ear in a manner designed to rupture his inner eardrum and disrupt his equilibrium for the next few days - a parting gift as he slumped to the ground.\n\nThe physical trainer was suitably cowed. Wrapping him up was easy. The ex-military Frog attempted to be more difficult. He glared hate my way, but I ignored him. I took his gun and knife, 'thumped' them both unconscious, and made my way to the elevator. Kip was attempting to be a warrior, so I called ahead so he wouldn't accidently shoot me.\n\nTo his credit, he didn't talk. By this time the concierge was frantic. She had less than two minutes left on her supposed deadline.\n\n\"Let's get going,\" she pleaded. I sucker-punched her. That made Kip edgy.\n\n\"I gave her a strong dose of Narcozep,\" I explained. He almost spoke then mouthed 'roofie'? I nodded. I broke down the last of the firearms. \"Let's go.\"\n\nAs soon as I shut the doors, Sara reactivated the elevator and down we went - one floor. She looked at me with fear filled curiosity. Five of the others looked fearful. Coal was still semi-comatose.\n\n\"You seven will get out and go to your room. No talking and no names. My associate and I will leave,\" I explained.\n\n\"Wait fifteen minutes and take another elevator down. You should be okay from here on out,\" I added. I wasn't planning to wait that long. I wanted to give them something to concentrate on - the clock in this case. They filed out reluctantly, Sara in the lead. I held one (my) piece of luggage back. I shut the door, then began stripping out of my wet suit. I then redressed in the clothes I'd been seen arriving in. Kip followed my lead. \n\nThe only thing left to do was cover up the evidence of our elevator tampering, remove the vibrator egg and spray a reagent on the electrical tape. It would fall off in about ten seconds. The door shut behind us as we made our way to Sara's room, suitcase in hand. Sara actually answered before my second knock.\n\n\"Funny meeting you here,\" I smiled. \"Ready to go?\"\n\n\"Now?\" she sighed with relief.\n\n\"Sure.\"\n\n\"Ladies,\" Sara looked over her shoulder, \"time to go.\" Sara was back to being ecstatic, reveling in the criminal conspiracy that, on her end, equated to little more than vandalism. The rest of the hookers were befuddled, yet eager to leave.\n\nThe moment they saw Kip, Magnolia and Natalie rushed and hugged him. He winced but took his punishment like a man. He shot me a look. I nodded.\n\n\"Ladies, it is good to see you,\" he greeted them. Kip had held his tongue until I gave him permission to speak - smart and disciplined for a pimp. I had to decide if that was a good thing for Dabney, or not.\n\nWe brought two elevators up this time. Sara and I would take the first one down. Ten seconds later, Kip and the call-girls would follow us. Sara was incredibly jumpy.\n\n\"Are we going to get away with this?\" she whispered.\n\n\"Thanks to you, Sara,\" I replied smoothly.\n\n\"You not only helped with the technical side of things, you made sure we can separate those ladies from any trace of the crime. If those bastards clean up the scene, any criminal case won't hold water. Juries and DA's hate rich people prepping a crime scene before the public servants show up. All you have to do is go back to your original room at the Wynn,\" I outlined for her.\n\n\"Later tonight, I'll send someone to pick up your luggage around 4 am. Then you will be gone. If anyone flashes a badge, double check their ID. If they ask you about the girls, 'you met them in the elevator, you didn't ask where they came from, the group of you went back to your room, then you agreed to meet with them later at Caesar's, but they didn't show, so you went back to the Wynn.\" \n\n\"Repeat it to me.\" She did. I made her do it five more time until she was calmer and I was sure she could pass a curiosity police check. The door opened. \"You wait outside. I will make sure the others leave, then I'll drive you back to Wynn's.\"\n\n\"Is ... is this it?\" she stammered. I studied her. \"I mean is this the end ...\"\n\n\"What do you want to do?\"\n\n\"I ... I don't know. This has been ... ah, more exciting than I thought it would,\" she panted. \"I was ...\"\n\n\"We will talk in a minute,\" I directed her toward the door as I spotted Rothschild, dressed in her distinctive LVMPD garb. I went her way, keeping my perceptions alert for Kip's crowd trying to move from the elevators to the exit.\n\nShe spotted me, saw my head toss in Kip's direction and off she went to intercept his group as the Venetian security guards were moving their way as well. Normally a call-girl, or three could pass unmolested. This group already had a history - the brutalizing of the pimps - and the security team didn't want to be embarrassed. As the closest two stopped Kip, Rothschild made her move.\n\nCasino & Hotel types didn't like the LVMPD treading on their turf, but the Law was the Law. Rothschild turned on the rational that she couldn't countenance the private cops holding seven people without due cause. They couldn't confess that they'd let some billionaire bully boys dump some battered panderers in their lap before sending them to the hospital. Things like that happened all the time. It didn't make it legal. \n\nI meandered ahead of the group while keeping close enough to double back if anyone got antsy. No one made an issue of Rothschild's random appearance, so the final stage of the operation ended smoothly. She would stick around for fifteen more minutes 'looking for someone' who wasn't us. \n\nKip and the ladies got in the van and drove off. I flagged down a taxi and 'offered' to share it with the lady I'd met at the Venetian.\n\n\"Where to?\" she, the cabbie, asked. I had to nudge Sara.\n\n\"Oh ... um ...\" she mumbled. I clearly have developed the ability to drive women mad. That was my only explanation for Sara Patel 'deep-sixing' my 'I don't know her - she didn't know me' plans. \"We are going to your place ... um ... a ... Mr.\"\n\n\"Vardanyan,\" I confessed. Cabbies are notorious for noticing everything and nothing. \"Up to the North Vegas line. We'll walk that last bit and get to know one another.\"\n\n\"I knew it,\" the cabbie laughed. \"You kick ass ... Vance?\"\n\n\"Yeah, I prefer to use first names. Call me Vance. I found Sara here wandering around horny, alone and in dire danger of falling for one of our dangerous urban predators,\" I lied to our driver.\n\n\"I'm going to take her home and spank her kitty for the next three days,\" I kept going. \"You know ... bondage ... S&M stuff ... all those things out-of-towners come here looking for.\" Our driver, Ebro, laughed so hard she snorted.\n\n\"I love you, Man,\" she chuckled. \"I wish I could talk to tourists like that.\"",
        "\"Are you two joking?\" Sara wondered.\n\n\"I'll let you figure that out,\" I responded. Ebro chortled yet again.\n\n\"I was hoping for a little chatting and something to drink,\" Sara hedged. Somewhere in the recesses of her mind she was realizing she had broken the law, she'd been dealing with some bad people, and now she was driving to my house, ... driving 'out' of Las Vegas.\n\n\"Remember, you wanted to see my place,\" I patted her hand. I didn't need her wigging out here at the last second.\n\n\"I ... yeah, you are right,\" she admitted.\n\n\"Besides, I have two roommates,\" I consoled her.\n\n\"Oh yeah ... woo ... I won't be alone with you,\" she babbled then blushed.\n\n\"If you have to be alone with a man, you could do worse,\" Ebro pointed out.\n\n\"I'm unemployed, I have trouble with authority and I've been in two shoot-outs in the past week,\" I countered. \"I'm hardly GQ material.\"\n\n\"But you are real,\" Ebro teased me.\n\n\"Yes,\" Sara leaned into me. \"You are.\"\n\nI had several difficulties ahead of me. Sara was a talker and prone to open her mouth before thinking things through. I needed to keep things quiet until Sara had a chance to calm down and let her scientific/engineering mind return to the fore. \n\nEngineers (specifically my favorite engineers ~ combat engineers) are great people. They can be sour, jokers, happy, or sad. The big thing about them is they tend to be thoughtful and introspective. If they aren't, they could end up pleasuring themselves with less than five fingers. Or, they could build a bridge that collapses, killing people; set up a camp, only to have it wash away; or have their vehicle conk out when their lives are on the line. They take a few extra seconds before they act whenever the opportunity presents itself. All Sara needed was to realize she had those few extra seconds with me.\n\nI kissed her. I kissed her on the lips, our mouths tightly closed.\n\n\"You can spend the night if you like,\" I suggested. Her eyes grew wide and she gulped.\n\n\"Oh ... okay,\" she nodded. She was living out her 'Vegas Experience': the rescued damsel, the white hat criminal and now the torrid affair.\n\nI grew up in Vegas and heard all the stories about what tourists think Vegas should be like and what they can suddenly get away with. She was rich enough to not need to 'break the bank at the Mirage'. Snookering a 'whale' (big spender) in a sinister game of baccarat would do nicely for her. She wanted to come out of this weekend feeling like a winner. \n\nWe were falling into an uncomfortable habit of helping one another. I was a loner who was never alone. The next kiss had a touch of tongue on my part. She was coltish - eager and uncertain. The third kiss was a full-blown French invasion of the Subcontinent.\n\n\"Wow,\" she grinned. \"You are a great kisser.\" A moment later she recognized her statement as a token of her inexperience as much a praise of mine.\n\n\"He was an NCO,\" Ebro play-mocked me. \"They are great at kissing ass ... and face.\"\n\n\"Don't insult Vance,\" Sara sighed. \"He's wonderful.\"\n\nThis was going to be tougher than I thought. I hadn't wanted a live-in mate. I didn't desire having two live-in girlfriends. If I developed a fan girl, I was moving back into Hell. I knew I could get back my old job killing shit.\n\n{Epilogue One}\n\nThe mid-afternoon Las Vegas Sun managed to eke streaks of luminosity through the venetian blinds. Gris was avoiding the warmth of that light. The two members of his legal team - one from his New York offices and the other, a licensed practitioner in the State of Nevada - sat, waiting for the Las Vegas ADA to arrive and give them the news that was too important to relay by phone, e-mail, or personal courier.\n\nThe two women and one man who entered the room were not who he was expecting. He gazed at them briefly, rated their influence, then looked away. The Nevada attorney was weighing her words while his mouthpiece talked.\n\n\"Excuse me, this is a private meeting between Mr. Gris and ADA Mitchell,\" he loftily informed the 'locals'.\n\n\"Yes, you are correct that this is a private meeting,\" the lead woman nodded. She was English, in her early fifties and someone used to wielding real power. \"I'm Sandra Cho. My companions are Margo Inara, of the Nevada Women's Legal Defense Fund and ... the man's identity is not relevant.\"\n\n\"What are you doing here? Mr. Gris' time is valuable,\" his lawyer bristled.\n\n\"Hush, Mr. Kowalski, while you are perfectly safe in this building, the route of any egress from this city is fraught with peril,\" the woman purred.\n\n\"Are you threatening us?\" Kowalski uttered derisively as he stood up.\n\n\"Take a second look at your client and weigh my words accordingly,\" she replied with a cruel twist to her lips.\n\n\"You are responsible for that unwarranted attack on me?\" Gris asked in a cold, remote manner that Sandra noted was belied by the hate-filled depths of his eyes.\n\n\"Oh no,\" she laughed. \"Someone got to you before I could. From what I've heard, and now see, I can't fault them on their workmanship. So I suppose I don't begrudge their impertinence. Those people, I forgive. You, on the other hand, I do not.\"\n\n\"Back to the threats,\" the female attorney from Las Vegas chided Cho's legal counsel. \"Margo, I would have thought better of you.\"\n\n\"This is the first time I have ever met Ms. Cho, Alesia,\" Margo Inara countered. \"I'm here to represent my six clients, if any civil and/or criminal actions are pursued from this point forward.\"\n\n\"Who would that be?\" Kowalski sneered. \"Six hookers with multiple counts of prostitution hardly make credible witnesses against a man who donates a serious portion of his wealth to charities every year. I will forward my request for your work product to date so that I may contact those six women as pertains to my client's and his guests' assault. Thank you for the assistance.\"\n\n\"Do you want the testimony of the four men your client's guests hospitalized earlier last night? The fifth is still in a coma,\" she reposed. \"Or, would you prefer the copy of the video of the actual crime perpetrated against your client last night. I have seen it ... the whole nasty thirty-seven minutes ordeal, with some edits before it came into my possession.\"\n\n\"Thank you for the warning. I'll prepare a court order to squash that bit of evidence,\" Alesia countered.\n\n\"By all means,\" Margo chuckled. \"I have to admit, I was getting ready to rip Ms. Cho a new asshole the moment I stepped out of this room, but I'm now rethinking my stance on that. I said copy and have seen for a reason.\"\n\n\"One of Ms. Cho's groundskeeper found this in the mail box this morning along with a note, - she also provided me with a copy of that. It spells out the motivation behind last night's incident. Those four men's - we will call them what they are ~ 'pimps' - those four pimps' affidavits confirm that motive. Ms. Cho reviewed the DVD, then contacted me with her concerns that those six women would be unrepresented.\"\n\n\"Margo, since when do you represent panderers?\" Alesia shot back. \"Normally you are trying to put them behind bars and out of business.\" \n\n\"I'm not representing them. I despise them. Seeing them all broken and bandaged up did my heart good. Watching one of Mr. Gris' female employees being tortured for five minutes was rather grueling.\"\n\n\"The validity of her testimony only made it worse, as I abhor torture and believe it is never justified. Watching the rest of your staff getting the shit ...\"\n\n\"We'll want that DVD handed over immediately,\" Kowalski interrupted.\n\n\"Sorry,\" Sandra Cho sighed. \"It has been stolen. I left it out, my daughter mistook it for another DVD, took it out with her to lunch and it was stolen out of her car.\"\n\n\"I have her written statement testifying to this mishap,\" Margo informed them. \"She's an outstanding citizen, had constant access to her mother's study and had borrowed things from her mother numerous times before.\"\n\n\"And you imagine that if you go forward with this farce it will magically appear again?\" Kowalski sneered. \"How convenient.\"\n\n\"You said it; I didn't,\" Margo taunted. \"When no charges are filed against your client ~ it would be a matter of public record ~ I am counting on it to show up again, both at my offices and on the internet.\"\n\n\"Conniving with violent criminals is even less like you,\" Alesia said.\n\n\"Sadly, allowing rich clients to beat the system is very much like you,\" Margo shot back.\n\n\"I am not a lawyer and, like Mr. Gris, my time is valuable, so I'll let know how I view the situation,\" Sandra stated.\n\n\"I theorized that Mr. Gris is going to drop the charges, get on his plane and exit this state, never to return - neither him, nor his minions. If he does that, the matter will fall into a deep slumber, hopefully never to reawaken.\"\n\n\"That's not going to happen, Ms. Cho,\" Kowalski condescended. \"Though I am going to make sure we investigate you thoroughly.\"\n\nSandra Cho leaned forward, placed her elbows on the table and steeple her fingers.\n\n\"I don't mind your insolent challenge one bit,\" she met his threat unflinchingly. \"I'm not a lawyer. I'm a rich, socially-conscious libertine with a wide variety of friends.\"\n\n\"We will see about that,\" Chr\u00e9tien spoke in is normal, emotionless tone. He even looked slightly aggrieved by the whole ordeal.\n\n\"I'm not concerned, Mr. Gris,\" Sandra grinned. \"As I said, I have a wide variety of friends. A few of them are the most dangerous predators of all. They hunt other predators - men like you.\"\n\n\"We are done here,\" Kowalski announced.\n\n\"Do what you wish,\" Sandra shrugged. \"Mr. Gris, Mr. Kowalski and Ms. (Alesia) Morton, I'm letting you all know right now, the girls, Ms. Inara and everyone she puts on this case will be aggressively protected and not just by lawyers. The people defending them can be very proactive in their zeal.\"\n\n\"I think I will let ADA Mitchell be aware of your 'suggestions', Ms. Cho, Mr. Kowalski,\" Margo said smoothly, \"along with a detailed accounting of this meeting.\n\n\"In that account, I will report Ms. Cho having a theory about the crime. That is the sum total of her confessed knowledge about the assault on your client ~ a theory that she, a longtime resident of Las Vegas, is allowed to have,\" Margo chuckled.\n\n\"Besides that, she is letting you know that she will be paying for highly rated private security because people bringing charges against your client, Mr. Gris, have had numerous misfortunes ~ careers ruined, names smeared, fearful retractions, rumored pay-offs and even a few disappearances,\" Margo enlightened them.\n\n\"Personally, I heard her declaration and felt comforted by it, because I have no intention of violating the legal process. Her words clearly expressed a desire to remove the possibility of outside coercion without expressly stating she thought anyone in this room would do such a thing,\" the female defender added.\n\n\"Ms. Inara, this may be how you handle things in the Bush Leagues, but if I have to see that an army is brought to bear in order to clear Mr. Gris of any wrong-doing, I will see that justice prevails,\" Kowalski blasted back.\n\n\"Bush leagues ... boondocks ... Mr. Kowalski, in Nevada ... in Las Vegas, we rely on the modern judicial process,\" Sandra said.\n\n\"We also haven't forgotten our roots in Old World, Biblical justice ~ Code of Hammurabi, 'eye-for-an-eye' ~ 'no one gets away with it forever' kind of stuff. I don't think it will come to that,\" Sandra gave her Cheshire smile. \"Mr. Gris, it is not too late for you to scurry away like the insignificant, abusive, narcissistic sociopathic beast you are.\"\n\n\"I promise you,\" Sandra pledged with utter conviction, \"if this goes to trial, you will not be able to escape your well-deserved fate.\"\n\n\"Ms. Cho, I wasn't aware you had such undue influence with the Nevada judicial process,\" Alesia sniped.\n\n\"Ah, Ms. Morton, I leave the perversion of the legal process to your boss, Mr. Pharris,\" her gaze on Alesia would have made a barracuda balk. \"What I'm promising everyone in this room is that justice will be done. If Mr. Gris knows he's done nothing wrong, he has nothing to fear. If you and Mr. Kowalski believe he is innocent, you have nothing to fear as well.\"\n\n\"Personally, I suggest you treat Mr. Gris as if he is gangrene. The only cure for gangrene is to cut out the tissue as well as the healthy tissue around it. \n\n\"Chr\u00e9tien, you know why you were attacked last night. You saw how effective your elite team of mercenaries were in keeping you safe. You also know that if there is a next time, all of you are going to die. You have been warned of that,\" she finished.\n\n\"It was on the DVD,\" Margo hastily added.\n\n\"Margo,\" Sandra stood, \"I suddenly no longer feel all that safe being in the same room with Chr\u00e9tien. Bad things happen to people around him. Last time it was only people in his employ. Next time, it might be harder on any innocent bystanders standing too close.\"\n\n\"Ms. Inara ...,\" Kowalski prepared his offense.\n\n\"Facts already in evidence,\" Margo pointed at Mr. Gris as she stood. \"Standing around him clearly is not safe. One of his assailants tortured his cook for information she quickly gave up ... and she clearly liked your boss. Eight armed former-French paratroopers ended up getting beaten half to death.\"\n\n\"Had it not been for the six women he was there to rescue, I have little doubt the police would have been investigating thirteen deaths,\" Margo pointed out.\n\n\"Fourteen disappearances,\" Sandra corrected. \"The criminals would have dispatched the chauffeur when he returned, smuggled the bodies out and disposed of them somewhere. That's what I would have had them do, if they worked for me.\"\n\n\"Do you know people like that?\" Margo asked Sandra as they were both heading out the door.\n\n\"I know all sorts of interesting people with unique approaches to life, asymmetrical problem solving abilities and who are paragons of the highest order.\"\n\n\"That's good to know,\" Margo responded as they departed.\n\nInside the room, Kowalski turned to Chr\u00e9tien.\n\n\"What do you want me to do, Sir?\"\n\n\"For now ... let it be. We are going back to New York to regroup. I have unfinished business here that will have to wait,\" he gingerly touched his scalded cheek. \"I will conclude matters here at a later date. Keep tabs on Corona.\"\n\n\"Ms. Morton, find out everything there is to know about Ms. Sandra Cho,\" he commanded.\n\n\"Yes sir,\" she nodded readily. She thought he was obviously a troubled soul.\n\nAt the same time, outside, walking down the hall:\n\n\"I don't know what your game is, Ms. Cho, but I don't like being thrown in front of the lions like that,\" Margo growled.\n\n\"Ms. Inara,\" Cho talked while she strolled through the back hallways of power, \"I am not abandoning you. I do not regard you as expendable. You have served my purposes admirably. In turn, if you need something you think I might be of assistance with, let me know. After all ...\"\n\n\"You know interesting people,\" Margo finished up. She didn't trust Sandra Cho. She wasn't even sure she liked her. Still ... she found Sandra alluring as a woman who exemplified influence and menace in equal measure. She wanted to know more.\n\n{Epilogue Two}\n\n\"Well Mother,\" Reagan ask her mother over their after dinner tea. \"How did it go?\" Talking business at home wasn't forbidden, though it was frowned upon. They had secure offices for that.\n\n\"You really do like that man,\" Sandra mused. \"I looked into the matter. I met Mr. Gris ... oh, he's going to spend over a year with a plastic surgeon trying to repair what happened to him.\"\n\n\"Was it that bad?\" Reagan murmured.\n\n\"No. Whoever beat him did a masterful job. The application of force was exceptionally well played. The fault lies squarely with Mr. Gris and his obsession with his own perfection. Pathetic actually. He was beaten clear down to his ego and no laser scalpel, or skin treatment will fix that.\"\n\n\"He is a control freak extraordinaire. He will definitely come gunning for us; of that I have no doubt. I've put Jessup on the matter. It will be expensive, but I so rarely get to mix business with pleasure,\" she smiled affectionately at her daughter. Sandra knew that her daughter was happier than she'd been in years. She was approaching her job with a new sense of direction and relish.\n\nShe doubted Reagan loved Vance. Vance wasn't a problem - he was a resource and the right person to put her daughter and the man she should be with back together. At that moment, Sandra missed her husband and regretted how he hadn't lived to see Reagan blossom into such a wonderful young woman. He could have talked some sense into his little girl.\n\nHe never would have allowed her to drive away the one man she truly loved, who truly loved her and most of all, she was sure she and Reagan could trust.\n\n\"What if it becomes too expensive?\" Reagan worried.\n\n\"We ask your friend to finish what he started,\" Sandra touched the back of her daughter's hand. Reagan smiled at that. They were both sure Vance would get the job done. \n\n Appearance of Principal Characters \n\n Vance (Vardan) 'V' Vardanyan - He has thick, black hair kept short. His skin is a dark brownish-olive complexion. Medium brown eyes. Square jawed. Broad chested with powerful arms, a thick neck, more body-hair than the norm. A stocky frame (six foot tall, 240 lbs.).\n\n Dabney Curtiss - She has long, wavy light-brown hair with blonde streaks and highlights. Her skin is fair and lightly tanned, it feels silky to the touch. Golden-brown eyes. Heart-shaped face. 34DD sized breasts with pale, broad areolas and puffy nipples. Athletic body type with robust buttocks, thighs and calves.\n\n Georgianna 'G' Norquist - She is a natural honey/amber-blonde. Her skin tans easily and is currently darkly tanned and smooth. Oval-shaped face. Clear grey eyes. Her body is fit, toned and statuesque; a smidge on the slender side, which suggestively renders her 32D-sized breasts looking bigger than they actually are.\n\n Detective Lieutenant Trixie Crowe Buchannan (LVMPD Internal Affairs Bureau [IAB])  -A fit, attractive woman with the quick-eyed, coltish gaze of a classic over-achieving misanthrope, hazel eyes, set in an oval face; brown hair normally worn in a ponytail that drops to the bottom of her shoulder blades. She is 5'9\" and 120 lbs. with minimal exercise.\n\n Detective Sgt. Soledad Moreno, (LVMPD Robbery/Homicide - Homicide) - Hispanic female, attentive blue-grey eyes set in a slender rectangular face. Her long black hair is thin as silk, shimmers in the light as it cascades loosely down to her mid-back. She is 5'8\" and 117 lbs. with a physique chiseled by a strict and diverse physical training regimen.\n\n Reagan Cho, daughter and designated successor for Circe, Vice Lady of Lust - She is tall, fit, with dark tanned skin hinting at Asian origins. Long black hair and black-rimmed glasses. Very serious and intense most of the time; taut in mind and body, but has a witty sense of humor about her when in good company. (If she has a flaw, it is her willingness to let less gifted people know she is smarter than they are.)\n\nThe Vice Lords\n\nCirce Lust; \n\nSycorax Gluttony; \n\nArchimago Avarice; \n\nJareth Sloth; \n\nThulsa Doom Wrath; \n\nBaphomet Envy; \n\nXaltotun Pride;"
    ],
    "authorname": "FinalStand",
    "tags": [
        "violence",
        "milf",
        "call-girl",
        "pimp",
        "flirting",
        "guns"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/ebb-tide-ch-04a"
}