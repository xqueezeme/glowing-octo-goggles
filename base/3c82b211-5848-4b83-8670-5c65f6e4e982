{
    "title": "The Silver Guardian Bk. 02 Ch. 06",
    "pages": [
        "A huge thank you to my editor Tex for his magic touch and editing expertise! \n\nThe jet was flying over Texas on its way to Mexico City, carrying Dante and Lily and their Royal Pack retinue. Returning from the Mont Royal Pack in Montr\u00e9al, they'd stopped for a few weeks at the O'Connor Compound to rest up after their recent battle against the Quebec Pack. Dante in his War God state was virtually unstoppable, but when he went there it always took a lot out of him. Also Lily's pregnancy was advancing and although she said she felt fine, Dante insisted he didn't want her to push herself too hard, and it was time for her to indulge in some relaxation. Dante also insisted that Astrid and William take a nice honeymoon. They both insisted that their proper place was with their King and Queen, but both Dante and Lily pointed out that the O'Connor Compound was one of the two safest places in the world for them (the other being at their own Order of Fenrir's headquarters, Hohenzollern Castle). \n\nSo under protest, they took the Royal Pack's jet to Cancun for two weeks. The Royals would have loved to have spent at least part of that time at their secluded and very fortified Cabin in the forest, but Astrid made them promise that with her 'being banished' for her honeymoon and therefore not present to personally oversee their day to day security, they abstain so they did, and they remained on the O'Connor Compound where it was admittedly safer. Upon their return the newly mated couple had to admit they'd had a wonderful time. But now after some time to recharge, they'd all boarded the jet early on a late April morning to make their way to Mexico City and meet with the Aztec Pack (actually la Manada Azteca) that was based there. They'd be meeting a greeting party from the Aztec Pack away from prying eyes in a private terminal at the Mexico City International Airport, and then making their way into the heart of the city and to one of the large new buildings that housed the Pack. \n\nEven though their layover had been very helpful to her, Lily was nevertheless napping next to Dante for much of the four-hour flight, as she required more rest the further along her pregnancy advanced. Dante was discussing with William their surveillance and security for when they landed, and for when they arrived at the Aztec Pack building. \n\n\"William, I want you to sweep for surveillance devices in all the rooms when we arrive in our suites. We'll be in the heart of Viktor's drug operation down there, and we never know who might be trying to snoop on us.\" \n\nWilliam nodded. \"Of course, Alpha King. I take my duties for you as seriously as my mate does, and I'll ensure we're safeguarded while we're there. And if I do find anything, I should also be able to trace where it's sending its information, so we'll know at least one location of their operations.\" \n\nDante grinned ferally at that news. \"Good, it would be nice to get ahead of the game. I don't know if there'll be anything, but I'm almost hoping there will be, so we can get some tactical intel early on.\" \n\nWith William serving as an acting member, the Hellhounds were once again preparing for their arrival to ensure their King and Queen would be safe and secure, even out in the open. They'd be landing in a couple of hours, and Lily was having more trouble getting around since she'd become truly large; she was progressing rapidly in her gravid state, since Lycan gestation periods are only six months. \n\nEveryone was wrapping up their preparations for arrival and would soon shut their eyes to get some much-needed rest before things would get busy again. \n\n*** \n\nDante and Lily were walking side by side through the terminal and into the reception area, with Astrid, Freydis and Bryn in the lead, and Hilde and William bringing up the rear. Once they entered the reception area, they saw five wolves awaiting them with a large dark-skinned hombre in the center, who was clearly in charge. They approached confidently and stopped a few yards from the party, with everyone on guard. Very little contact with this Pack had been made prior to coming here, and just like their prior visits to relatively unfamiliar packs, they exercised extreme caution until they could ascertain whether these new acquaintances would be friend or foe. \n\nThe dark large wolf in command stepped forward and bowed slightly. He stood around 6'3\", was around 215 lbs. and was clearly very competent. \n\n\"Welcome, Alpha Heirs Dante and Lily. I am Chimalli, Lead Beta to our Alpha Itzli, and we welcome you to Mexico and to our Manada Azteca. We hope you'll be comfortable here and we look forward to learning the reason for your visit.\" \n\nThe vanguard Hellhounds stood aside as Dante stepped forward to address Chimalli. \n\n\"Thank you for your welcome, Beta Chimalli, although you're under a slight misapprehension. Lily and I are now Alphas in our own right, and we lead our own Pack. This is not something you could have known, and we'll speak further on the topic with you and your Alphas upon our arrival. If you'll allow us to gather our luggage, we'll join you and accompany you to your Pack building.\" \n\nIt was clear that Chimalli was shocked by that information, as were the other wolves ... there hadn't been a new Lycan Pack formed in centuries... anywhere... but he quickly regained his composure. \n\n\"Of course, Alpha Dante, my apologies for not knowing, and I look forward to learning more at the appropriate time. Please take your time to collect your things, and we can depart.\" \n\nDante and Lily and their entourage had soon gathered their luggage and were entering a private parking lot with Chimalli and his wolves where two vans awaited them. The day was bright and clear, but Dante suddenly got a bad feeling, although he couldn't place why. His palms were itching and back when he was in the Teams, that always meant trouble was about to find them. \n\nThey rounded a corner and suddenly Dante knew fear like never before. Blocking their way in a wide arc were fifty men, all with assault rifles, waiting for them to arrive! \n\nWithout warning, they opened fire and poured round after round into the Royal Pack's leaders. \n\nDante leapt towards Lily, screaming her name and trying to shield her. \n\n\"LILLLLLY GET DOWN!\" \n\nPain bloomed into his left leg and arm as bullets tore into his flesh in midair and panic hit him and everyone else. But to Dante's horror, he saw Lily slammed backwards as a bullet ripped into her chest. She let out a bark of pain and fell to the pavement just before Dante could reach her. \n\nIn the mass confusion, the Hellhounds responded instantly, pulling out their own automatic rifles and providing cover fire into the mercenaries, trying to buy time as Dante dragged Lily to cover, everyone in horror at what was happening. \n\nLily was pale and barely breathing, as blood poured out of the wound near her heart, and blood even pooled up into her mouth as she choked and coughed. Her eyes were wide with fear as she looked up at Dante helplessly. \n\n\"Lily, stay with me baby, you're going to be alright, stay with me, baby!!\" \n\nDante was applying pressure to the wound, attempting to stem the flow of blood, but it simply wasn't helping. The world seemed to slow down, and time nearly stopped as he saw Lily smile weakly at him before reaching up her hand to stroke his face. She coughed up some more blood and struggled to wheeze out her final words. \n\n\"I... love... you... I'm... sorry...\" \n\nWith her last words, her eyes went cold, and her limp hand fell back on her chest. In that moment the world shattered, and time stood still as everything came crashing down around them. Dante looked around and saw a couple of Chimalli's wolves were either down or dead and that his Hellhounds were sorely beset. Although none of them appeared too injured... yet. But he couldn't stop his eyes from returning to his love and mate lying lifeless on the ground, taken from him forever. Their unborn cubs were lost with her, and every hope and dream he'd had for them was unforeseeably stolen and gone. Dante tried to breathe but he couldn't, and he felt rage and sadness and anguish bubbling up inside him threatening to consume him, and he couldn't stop its advance... he didn't even want to try. \n\nEven amidst the intense fire fight, everyone became aware of the darkening of the sky as a huge, angry storm cloud gathered overhead. Suddenly a piercing howl split the twilight that had descended upon them, a howl so filled with rage and despair that it shook the very ground under their feet and speared icicles of death to pierce their hearts with its deathly cold presence. The fighting stopped momentarily, causing everyone around, friends and foes alike, to turn and look at Dante. \n\nHe was stalking away from Lily's body with his hands and shirt covered in blood as he trembled and shook with his rage and despair. He stopped to throw his head back and let out another tremendous roar just as a massive bolt of lightning like none they'd ever seen before slammed down from the sky, enveloping their Alpha King and momentarily blinding them as a deafening crack of thunder split the air. \n\nIn their horror and awe, they then saw something no mortal in history had ever witnessed before, as Dante began to shift. This was unlike any prior shift, as instead of going to his wolf, he remained upright and grew several feet in height. He also piled on hundreds of pounds as his skin split open in great gashes pouring out blood, before void-black fur enveloped his arms, torso, legs and neck. His mouth and face shifted to that of a hybridized wolf, and his hands and feet became foot-long razor-sharp claws dripping with blood. Electricity was arcing across his body and swirling about him in some angry dervish dance as the Devil himself must be manifesting before them all. \n\nStanding over nine feet tall with a weight that was unimaginable was the very Destroyer of Worlds: the Grim Reaper himself, come to claim everyone's lives in retribution for the death of his most beloved Queen and Great Love. His eyes glowed a deep blood red with black fire jetting from them, and red steam poured from his mouth as he took great deep breaths to contain his rage for a few more moments. \n\nHe spoke in a low dark whisper that penetrated everyone around him as a black curse. \n\n\"Death has come for you mortals, although it will be vengeance that fills me with no pleasure.\" \n\nThe Royal entourage and all the Mexican wolves were cowering in fear of this Devil who was here to walk the Earth in retribution, and they quickly retreated as Dante strode out into the open towards the mercenaries, who were frozen in sheer terror at the midnight-colored apparition coming for them. As he bypassed his allies, they peered around from their cover to witness whatever was about to happen. \n\nThe mercenaries finally regained a sense of self-preservation and opened fire on Dante, attempting to halt his march of death towards them. But their bullets just ricocheted away from him as if he were constructed of hardened steel; some of them even melting when they encountered the electricity racing around his body before vaporizing into a metallic mist. \n\nDante reached out an arm and pointed at a group of five mercenaries clustered together and a pitch-black bolt of lightning erupted from his fingertip like a laser and incinerated the five men, leaving only a charred patch on the ground where they'd been. \n\nDante noticed several riflemen were attempting to flee in terror, and with one great leap he appeared before them, blocking their path before he swiped his claws diagonally across their torsos, cleaving them in half as fountains of blood leapt from their bodies to coat his nightmare-black fur. \n\nHis massive form moved like an agile shadow among them, grabbing each man and ripping him with his Herculean strength either clean in half, or pulling major body parts away in the most brutal display ever witnessed by anyone. The mercenaries' numbers were decreasing by the moment as this Beast mercilessly took them apart piece by piece. \n\nDante extended his hand again, and another lightning bolt leapt from his extended finger and zigzagged to completely pierce three more mercenaries as they literally exploded from the electrical torrent infused into them. Soon there was only one hostile left alive... the one Dante had saved for last... the one who'd fired the bullet that had taken his Great Love from him. The man was rooted to the spot and had wet himself in sheer horror at what had been unleashed upon him and his companions. Dante stood towering over him as he spoke. \n\n\"You took everything from me and ripped my soul from my body. For this, you are condemned to Hell, and I am your executioner. Go there now; I send you to rejoin your brethren.\" \n\nDante reached out with his massive clawed hand and speared his way through the man's neck, grasping his spine before he pulled it and his head clean out of his body, which fell jerking to the ground. Dante then added his other hand to crush the head in his massive grip and let it splat to the pavement. \n\nIt was nearly as black as night even though it was the middle of the day, and Dante stood in the middle of the lot with pieces of bodies strewn all about him as he dripped with blood. He threw his head back and let out another thunderous howl, his rage not even remotely quelled, and his thirst for blood endless. \n\nThe Royal entourage and their Mexican allies stared on in horror as Astrid cradled Lily's lifeless body to her own and tears poured down her face and from all her companions'. They had not only lost their Alpha Queen this day, but with her gone, there was no one alive who could summon their Alpha King back from the madness that had taken control of him. They knew he was lost to them. A monster was about to be unleashed upon a great and ancient city, and there was nobody and no force in existence that could temper his destruction. A silence had enveloped the area as everyone within sight who was still living watched Dante trembling with rage and despair. \n\nBut then something rapturous happened. A bright ray of silver light, as intense as the recent lightning strikes but serene, descended upon Dante like focused moonlight, illuminating him and the area immediately around him. \n\nDante looked up towards the Heavens and saw the most beautiful ephemeral being. She was cloaked in silver, and She was descending towards him with Her arms outstretched. Her long flowing silver hair and pale features gazed upon him with such grief that it penetrated to his core, and his rage began to leave him. \n\nWhen She had descended sufficiently to look at him eye to eye, it became apparent that She was clad in flowing silver and white cloth; it was wrapped around Her, but also wafting as if it were caught in some light breeze. She reached out and soothingly cupped his massive face in Her hands before speaking. \n\nShe spoke in an otherworldly voice that was inhumanly light and lyrical, yet contained unimaginable power as it penetrated the surroundings so that everyone could hear Her words in perfect clarity. \n\n\"My Champion, you have lost something today more precious than anything else known on Earth or in Heaven. You have thus been conquered by your rage and your madness. But now is not the time to lose hope, nor is it the time for you to unleash upon this world the devastation only you have the power to wreak. Your duty to Me and to your kind is not yet completed, nor yet completed is your Great Love's duty. Therefore I require you to be restored to sanity, and to be restored to your normal likeness.\"  \n\nWith that, She kissed the top of his head and Dante began to transform, returning to his human form. His clothes were shredded to the extent that it was obvious he'd endured the most brutal of battles, but he was back. However, although his rage was gone, he was still suffering unbearably. He inhaled a massive breath and began to weep as he dared to hug his Goddess Luna to his chest. It was graciously allowed. He remained thus, shuddering in agony and emitting great gut-wrenching sobs, clinging helplessly to his Goddess as She soothed him and ran Her fingers through his rich black hair, black save for an unfamiliar streak near his right temple that looked like silver moonlight: a new sign of the blessing of his Goddess. \n\nLuna took his hand to lead him as She remained in midair and glided towards the assembled wolves and specifically towards Astrid, who still cradled Lily's lifeless body in her arms. She hovered in place and Dante ceased walking. She looked around as if to confirm that everyone was weeping, which was as it should be. She touched down and gestured to Astrid, who gently lay Lily's corpse upon the pavement. \n\nAlthough the storm clouds had now stilled, they remained as thick and dark as ever, and the ambient light remained as if it were late twilight. Therefore, when Luna reached out Her luminous hand and laid it upon the mortal wound on Lily's chest, the silver moonlight pouring out of Her and into Lily was clearly visible to all, as the wound closed and Lily's lifeless body became whole. \n\nLuna cradled Lily to her breast and again spoke softly but with great power. \n\n\"My beautiful wolf, your time has not yet come to join Me among the stars; your race and your world require your strength and guidance. Your mate and King likewise cannot endure without your love and support, and your children will need their mother. I command you to return to us and walk this land once again, side by side with your mate and King.\" \n\nWith that, Luna bent down and placed a kiss upon Lily's temple and Lily's hair turned to silver where Luna had kissed her. Lily opened her eyes and took a deep breath of life. \n\nDante fell to his knees and tears of liquid silver rained down from his eyes as Luna lifted Lily and entrusted her to his arms. He embraced her with complete love and tenderness as he held her to him tightly, afraid ever to let go. His emotions, not his intellect, controlled him at this point. He knew Lily's living presence had been returned to him and although he was still intensely shaken, he was also filled with gratitude, not thought. Therefore, he had no flowery words to offer as he spoke from the heart. \n\n\"Lily baby, you died, and I couldn't take it. I lost myself to madness when I lost you and our children. I lost all hope! But you've come back to me thanks to our Goddess, and She's brought us back together again. I love you so much my Lily; I beg you, don't ever leave me again!\" \n\nReturning to her senses, Lily's first living thought was of her mate's suffering, and she soothingly stroked his hair and face before pulling him down to her and gently kissing him. \n\n\"I'm so sorry, my Dante. I'll never leave you again; and I love you too, my mate and King.\" \n\nThey remained communing and embracing each other for several minutes with Luna watching over them, before they helped each other up to stand together and face their Goddess. \n\nLuna placed her hand upon Lily's stomach. A silver light enveloped the area around her womb and she gasped in ecstasy. The Goddess Luna smiled at them before She spoke. \n\n\"My beloved Alpha Queen, you and your children, and My Champion, have my blessing and divine protection. Your children are well and have been blessed by the Moon; they will live to be healthy and strong. Fear not for their welfare, for they are still very much with you and are content.\" \n\nLuna turned to the gathered wolves and spoke further. \n\n\"My children, it is time for Me to leave. Please know that I am always watching over My children, and that your King and Queen carry My divine protection so they may lead your kind and cleanse this world of the darkness that has spread throughout it. I charge you to obey them, to support them, to love them and to counsel them as they lead My children into a new era. They are all you have on this plane, but they will lead you well.\" ",
        "With that, the Goddess Luna shimmered and dissipated away, as the ray of moonlight that had continued to light her throughout this visitation also faded away and the sky cleared back to a cloudless midday. \n\n*** \n\nThe mood in the caravan was somber and yet joyous. They had endured true horror and despair, only to be replaced by awe and love when their Goddess appeared, walking this plane. \n\nBoth Lily and Dante were inseparable, cooing softly to one another as they recovered from their experience. Dante was still slowly weeping blood from the bullets that had entered him before he'd shifted, and Lily was healing him as quickly as the bullets could work their way out of his flesh and be discarded. But his flesh was not all that had suffered, and the green glow from Lily's hands was constant as she also healed and soothed the psyche of her mate and King, who remained very troubled. \n\nAstrid and William were sharing the SUV with Dante and Lily, with Chimalli and one of his wolves in the front seat driving them towards the Pack building. No one dared speak yet, waiting to see what Dante and Lily would do. The other three Hellhounds were riding in in a second SUV and two more wolves from the Aztec Pack were in a third, sadly transporting the remains of their slain brothers in arms back home. \n\nOnce Dante was fully healed, at least physically, he turned to his head of security and spoke. \n\n\"Astrid, I need you get changes of clothes for Lily and me and for yourselves; we shouldn't present ourselves to Itzli's Pack looking as we are now. Let's get ourselves put together, and then there'll be hell to pay for whoever ordered this hit on us.\" \n\nAstrid and William nodded and dug out some fresh clothes for Dante and Lily and themselves, and they all quickly changed into them. Although unavoidably, there was still dried blood covering much of Dante's skin. When they arrived, it would undoubtably be a very interesting first meeting. \n\nChimalli spoke up once all four of the visiting wolves were put back together. \n\n\"We'll be arriving in about ten minutes, my Alpha King and Queen. I promise you that neither Alphas nor myself had no foreknowledge of what would happen, and weren't at all involved in this tragedy.\" \n\nDante nodded thoughtfully before he responded earnestly. \n\n\"I know, Chimalli. You lost some good wolves in that fiasco, and I'm able to tell that you're neither lying nor hiding anything from me. That said, except for the Alphas of our close allies only your Alpha and Pack knew of our upcoming visit, so there must be at least one traitor in your ranks, and I intend to ferret that wolf out and to dispense justice and retribution after I learn everything there is to know.\" \n\nChimalli shivered at that thought, unintentionally picturing Dante in his hybrid Devil form once again, and he broke into a cold sweat at what this retribution might look like. \n\n\"I understand, my King. After our Goddess' own proclamation, I have no doubt you will do so and that no one, least of all our Alphas, will stand in your way once they hear of everything that transpired, as well as of the ranks you and your Queen now hold . Although the tale you must tell is unbelievable, I imagine that I and the wolves that accompanied me today will be able to confirm much of what you'll have to say.\" \n\nOn that everyone could agree, and there were nods all around. It was unprecedented to have their Goddess Herself make Her presence known on this plane; to anyone's knowledge, never before had it happened. They had all witnessed several miracles that day and were still recovering. The caravan drove on in silence as they approached the large and beautiful new Aztec Pack building in the heart of Mexico City. \n\n*** \n\nAstrid had communicated via the Pack Bond to her companions in the other van, so the Royal Pack's entourage were resplendent, at least when it came to clothing, when they emerged from the two vans. The King and Queen were surrounded on all sides by their retinue as they moved across the ground floor pavilion and into the welcoming area of the Pack building. They were taking no further chances with the lives of their leaders, who had been given the divine blessing of Luna Herself. Chimalli had gone ahead for a few words with his Alpha, who was standing with his mate and about a quarter of the Aztec Pack as they awaited Dante and Lily's appearance. \n\nDante scanned the room, probing everyone around him before he gave a temporary all clear to his team of bodyguards, who then fanned out around him and his mate. He took Lily's hand in a formal forearms-forward posture and approached Itzli and his mate before halting in front of them. Itzli and his mate had been briefed on some essentials by Chimalli, so they bared their necks in submission before they, along with their Pack, went to one knee before their unexpected Royalty and the Alpha spoke. \n\n\"Alpha King Dante Silvrash and Alpha Queen Lily Silvrash, we welcome you to our Pack's home. I cannot express the sorrow we feel for the tragedy that befell you upon your arrival. I promise you that I, my mate and my Lead Beta had nothing to do with this, and we shall be looking into how this could have come to pass.\" \n\nDante and Lily nodded solemnly to the Alpha, accepting for now his statement, and Dante responded. \n\n\"Thank you all for kneeling, but please rise. Alfa Itzli and Do\u00f1a Alfa Atzi, we accept your welcome, and we're grateful for your sincere apology. Earlier today was a terrible tragedy, but by the grace of our Goddess, we emerged from it intact. If you would be so kind, we'd like to retire temporarily to our rooms so we can clean up and rest, and then we'll be more than happy to sit down and discuss many things with you.\" \n\nItzli and his mate Atzi rose, as did their Pack behind them, and Atzi responded on behalf of them all. \n\n\"Of course, my King. I can understand your need to get cleaned up and recover from your ordeal, and we'll be happy to escort you to your suites; we can meet later to discuss matters when everyone is rested.\" \n\nWith that, two Omegas (the rank and file of a Lycan Pack hold that rank) came forward and led the Royal retinue to the upper levels of the large building and into their connecting suites. When the doors closed behind them and they were alone, William raised a finger to his lips urging quiet, before pulling out a few electronic wands and handing them out to his mate and the Hellhounds so they could sweep their accommodations. \n\nAbout thirty minutes later, everyone met back in the central living room with a handful of listening devices and a couple of cameras. William dumped them all into a lead-lined box and closed it and sealed it tight before speaking to his Alphas. \n\n\"I'll begin tracing the signals back to their origins immediately. I should know shortly where our snoops are located and perhaps have a rough idea of who may be involved. Once I've learned what I can I can destroy them if you like, but for now we'll keep them silent and blind in this box. Do you think Itzli and Atzi were aware of this breach, my Alphas?\" \n\nLily glanced at Dante, who minutely shook his head side to side. \n\n\"No William, we don't think they were involved at all, at least Dante didn't sense anything from them as we met. That said, it's clear there's at least one traitor in their Pack who will pay a terrible price. \n\n\"Dante and I will clean ourselves up and take a brief rest before we all meet back here again. We can then head downstairs to meet with the Alphas and eventually their Pack. At that time, questions and answers in both directions can begin.\" \n\nEveryone agreed to her wishes, and Dante escorted Lily behind their closed double mahogany doors, through their luxurious bedroom and into the large bathroom. They stripped down while the large shower warmed up before Dante gently but adamantly pulled her naked and lithe form against him tightly. He took a deep shuddering breath as he buried his face in the crook of her neck before Lily felt warm tears of liquid silver once again falling upon her skin. \n\nShe'd seen her King endure severe pain and suffering before, but rarely had she seen him weep. She held him gently and ran her hands soothingly up and down his back as she softly cooed to him and comforted her mate and King for several long minutes. Dante finally broke the silence with a hoarse breath. \n\n\"You died, Lily. You died and our children died with you... and something broke deep inside me that I'm not sure will ever fully heal. That anguish, and that despair and rage are still inside me begging for release, begging for blood vengeance. Our Mother Luna has kept it at bay and made it bearable with your return and the restoration of our children, but I still want blood for this!\" \n\nLily tilted her head up and kissed her mate with all the love, passion and lust that she could give, seeking to ground him in the moment and wash away his pain and rage. \n\n\"I know, my love, I too am filled with anger and need for vengeance, and a time will come for those needs to be given room to rampage. But that time is not now. Right now, we need to be grateful for being given a second chance, and we need simply to love and hold each other, aware that it's a divine blessing that we're still able to do so.\" \n\nLily connected her phone to a small but sonorous speaker she'd taken from her bag so she could play some music while they showered and held each other. She felt her song choice was apropos as Avenged Sevenfold's 'Dear God' filled the steam-filled air. The beautiful and soothing rock-country song filled the room, swirling around them in the shower's mist. \n\nThe water pooling at their feet turned a ruddy brown color as the dried blood ran from their bodies. Dante and Lily carefully washed each other before Dante began to kiss his mate deeply. \n\nThey turned off the water before drying each other. Then Lily took her King by the hand and led him to the large ornate bed before she laid him down on it. She positioned herself on top of him and slid down onto his hard shaft, giving out a deep moan when she reached its base. \n\n\"Celebrate being alive with me, Dante. Forget everything else for a while and lose yourself in me like I will in you. This moment is ours alone, my mate.\" \n\nDante growled deep in his chest as his hips began moving in time with his mate's, and his hands reached up to grasp her milk-swollen breasts before his fingers danced across each hard bud. Lily moaned more loudly, and she sped up her movements on top of him. She supported herself on the balls of her feet as she squatted over him, beginning to bounce vigorously up and down on her mate's thick shaft as she began to moan and scream out her pleasure. \n\nDante grabbed her ass, muscling it up and down on him as he drove his hips up to meet each of her thrusts. Their combined efforts drove the pleasure for each of them higher and higher. When neither of them could hold out any longer, Dante sat up and clamped his teeth around the juncture between her neck and shoulder where her mating bite was, and bit down as they both howled in triumph. Lily's world froze for a timeless eternity before it shattered, and her juices sprayed onto her lover's groin as Dante pumped his seed into her hot depths over and over until there was nothing left to give. \n\nShe collapsed on top of him before finally sliding off to the side and resting in her favorite spot, even with how bulky she now was. Sleep claimed them both, and they remained in a peaceful slumber for several hours. \n\n*** \n\nDante and Lily and company were sitting in the Aztec Alphas' office with Atzi sitting next to her mate, and Chimalli sitting on the other side of him. Dante nodded to William, who pulled out the lead-lined box and held his finger to his lips, silencing everyone before he opened it and without touching the contents, showed them the devices inside. After giving the Aztecs a brief look, William quickly closed it back up and returned it to his travel case. \n\nWithout any need of explanation, the three Aztec wolves understood that these devices had been found by their guests, and they went pale at the knowledge before gritting their teeth in outrage. They had a traitor in their Pack, and now they all knew it. Itzli turned to the Royals in an attempt to appease their obvious anger. \n\n\"I'm humiliated these affronts to our hospitality were in your accommodations! What do you wish us to do? I swear we knew nothing of this, but between the attack on you and now this, it's painfully obvious there's at least one traitor in our midst. We'll do anything you ask if you'll spare our Pack.\" \n\nLily patted Dante's hand before she responded. \n\n\"We are angry, that is true. But my friends, we aren't angry at you or your Pack. We're angry at whomever plotted against us and nearly succeeded in destroying us. Whether they're working for Viktor Petrov directly, or for the Mexican drug cartel taking its orders from him, we don't yet know. But we'll find out, I assure you. That said, you and your Pack aren't our enemies. We wish instead to consider you as our allies and supporters as is required by our Goddess Luna.\" \n\nAt that, she smiled at Chimalli; he'd been present to witness their Goddess requiring precisely that. His Alphas looked to him for confirmation, and Chimalli reported, \"Our Goddess' mondato a Sus hijos was, 'I charge you to obey them, to support them, to love them and to counsel them as they lead my children into a new era. They are all you have on this plane, but they will lead you well.' I heard those very words spoken from the lips of the Goddess Luna Herself, and I'll never forget them.\" \n\nAlpha Itzli stood and placed both hands over his heart pledging, \"My King and my Queen, from henceforward la Manada Azteca is yours to command and we pledge our loyalty to the ends of the earth. \u00a1Nuestros corazones son tus corazones!\" \n\nLily also stood and replied, \"Alfa Itzli, gracias desde el fondo de mi coraz\u00f3n.\" (Thank you from the bottom of my heart.) \"In return, my King and I pledge always to care for your Manada as our own, and we will never abandon you.\" \n\nAfter a long moment, they both resumed their seats. \n\nWith that, Dante addressed the two Alphas. \n\n\"In case it needs to be said, I echo my mate's pledge to your Pack. You may have given yourselves to us, but we also give ourselves to you; alliances go in both directions, although at times I may need to give you orders for our mutual benefit. Now what I would like next is for you to assemble your entire Pack for my inspection. I won't harm or even intimidate anyone, but I will be able to identify whoever has betrayed us. When I do point out that person or persons, I wish you to take them into custody and make sure they don't have the opportunity to flee, and then to take them somewhere private for us to... let us say, 'question' them before we permanently end their betrayal.\" \n\nBoth Atzi and Itzli nodded agreement and at a nod from Itzli, Chimalli left to assemble the Pack. While they waited, Dante and Lily took the time to formally introduce themselves and their retinue, and to explain in more detail who they were and why they were here. Some of it had already been passed along by Chimalli, which was all he knew from what he'd seen and heard outside the airport, but they wished to be polite and to ensure there were no misunderstandings. The Aztec Pack was an ancient one that had grown over the centuries: they could trace their roots back to the Aztec civilization of old. They were very much grounded in the ancient Lycan ways, and by the time their discussion concluded, the Alpha Pair was even happier that they'd given their allegiance wholeheartedly to Dante and Lily, and they were glad of their welcome into the Guardians Council of North America. \n\nThey continued to talk for a while longer until Atzi mentioned that the Pack was ready for them. Dante stood, as did the rest, to walk down the hall and pack themselves into the elevator to descend to a lower level, which housed one of the great meeting rooms. \n\nWhen Dante and Lily strode into the room with the Pack's Alphas trailing them and their entourage flanking them, they looked very much the Alpha King and the Alpha Queen they were. Without fanfare, the Aztec Pack's Alpha Pair quietly seated themselves in chairs that were awaiting them while all the Royal Pack's representatives remained standing at the front of the room. Dante looked over the assembled Pack of more than 200 seated men, women and children, and could see some confusion among them. So of course, introductions were in order before he could begin his rounds of inspecting each wolf. \n\n\"Lobos de la Manada Azteca, I am the Alpha King Dante Silvrash, Luna's Champion and the Silver Guardian. With me is my mate and Alpha Queen Lily Silvrash, my Great Love. The other wolves you see with us are members of our Royal Pack, the Order of Fenrir. Although what I am about to tell you may be astonishing, your own Lead Beta Chimalli can confirm it, for he was there. \n\n\"This morning when we were departing the airport, we were attacked by a large force of armed humans, and tragedy struck our kind and me personally. My mate and Queen was killed, as were our children that she carries. Lost to madness in my anger and grief, I became Death Himself as I walked this world. I was devoid of pity and I slaughtered all who stood before me. \n\n\"But then a miracle happened. Luna, our Mother Goddess Herself, for the first time in our history descended from the Heavens and walked upon our land. With my Great Love lying slain, She was the only entity anywhere capable of bringing me back from my madness, which is what she did. She then restored my mate and Queen and our children to me and to our race. Beta Chimalli, do I tell the truth?\" \n\nChimalli stood and replied, \"Every word was true, my King,\" and sat back down. \n\nWith that, that Dante paused and let his anger and power leak out of him. It chilled the air and darkened the light within the entire room, leaving only darkness in its wake. His body then thrummed with power as he reined the dark chill back under control and the ambience of the room returned to normal. He took a deep breath as Lily stepped forward to grasp his hand lovingly, lending him strength and calm. Everyone in the room had shrunk into themselves, and they now bared their throats in submission. \n\n\"Only this Pack and my vetted Allies had any knowledge of our trip here. Which means there are one or more traitors in our midst, which is why you have all been gathered here. I shall not threaten you, I shall not harm you, but I shall speak to every wolf here assembled and discover any of you who have broken faith with Luna and betrayed our kind. I'll ask each of you two questions. Were you involved in the attack? And did you have any foreknowledge of what transpired? I will have my answers from each of you. So long as your answers to my questions are 'No,' and it is the truth, nothing will happen. I have not come here to destroy your Pack. I have come seeking faithful allies for the War that is upon us, and my mate and I, along with our Pack will prove to be your greatest strength. This examination will take a while, so I want each of you to remain seated until I approach your row of chairs, then please stand in front of your chair and await my arrival as I come before each and every man, woman and child here.\" \n\nWith that, he began his rounds through each of the 200-plus members of the Pack. Dante held true to his promise and spoke well under half a minute with each wolf, and it went rather quickly; he completed his rounds in just over an hour. Once he was finished, everyone breathed deep sighs of relief that it was over and that their King's anger hadn't been directed at them. But then he quietly directed Chimalli and a few of the other Betas to take two men and a woman into custody. The prisoners were hastily swept from the room and into the lower basement levels for questioning. ",
        "Dante returned to stand next to Lily as she now addressed the room. \"Thank you all for your patience. I'm sorry we had to do this, but it was necessary for our kind's future and for the success of our War. Your Alphas have arranged for you a great feast. Please take this time to eat, relax and be at peace.\" \n\nAtzi took control at that point and led her Pack to the Great Hall. Itzli and Chimalli joined Dante and Lily along with their associates, and they made their way to the elevator to descend into the basement and begin the interrogation. \n\n*** \n\nIn a scene that was becoming far too familiar to Dante lately, he wiped down his hands with a rag as he made his way into a meeting room after he'd finished with the two Omega men and the one Beta woman. He opened the door and sat down in a chair as everyone who'd taken part in the brutal interrogations also seated themselves and waited for him to speak. \n\n\"Luna, is that unpleasant work and something I truly hate, but it had to be done, and we got the information we needed.\" \n\nDante let his head hang back and let out a deep sigh as Lily came and sat on his lap and comforted him. \n\n\"I know baby, but we were all involved in it, and we all heard of their treachery directly from their own mouths. They were taking their directions from Jes\u00fas Flores, the head of the drug cartel in this area, which by proxy meant they were taking directions from Viktor, since he holds the ultimate reins on these gangs. We learned exactly what we needed to know, and now we can build a plan to remove them from our world. Between the information we got here, and the data William was able to hack from their surveillance devices, we now know what needs to be done and how to do it.\" \n\nItzli leaned forward to speak to Dante. \n\n\"Lord Dante...\" \n\nDante waived his hand and politely cut him off. \n\n\"Just call me Dante in private Itzli, if you please. I know I serve as Alpha King of our kind, but in private I try to be a simple and down to earth man. I understand that in public decorum must be upheld, but in private I hope we can be friends and converse as equals.\" \n\nItzli smiled genuinely at that before he spoke again. \n\n\"Dante, thank you for that. This betrayal in my own Pack angers me to the depths of my being. I've worked against that drug cartel since it first came into existence in our ancient city, and my Pack knows my harsh feelings on the matter. For members of my own Pack to have done this is an affront I cannot let go of. Now that we've gotten the information we need, I'd value it if the final strike to execute those poor excuses for wolves could come from myself and my Lead Beta Chimalli. I don't wish to dirty your hands any further, and I feel a desperate need to take responsibility and to handle this personally. Would you kindly allow me that privilege?\" \n\nDante nodded and smiled tiredly, as did Lily. \n\n\"Yes Itzli, that's fine. I've killed a lot of men already, and there'll be many more as time goes on. It's my duty and my burden and while I don't shy away from it, I don't relish it either. There'll be an ocean of blood upon my and my mate's hands by the time this is all over, but each death weighs on our soul. I'm fine with letting these three be handled by you and yours instead, and I appreciate your taking that burden upon yourself. Lily and I are going to clean up, and we and the rest of us will go grab some food from whatever is left over from the feast before we retire for the night. Tomorrow late in the morning after we've had a chance to sleep and recharge, we can meet and begin to plan what to do with the intel we've garnered.\" \n\nItzli and Chimalli smiled as they shook Dante and Lily's hands and left the room. Everyone else stood up and headed for the elevator to head back up and to eat and sleep, since it was well past midnight. \n\n*** \n\nDante and Lily awakened late the next morning in each other's arms. It seemed to Dante his mate was growing before his very eyes. She was only about six weeks away from giving birth to their son and daughter, and he held her close to him, thanking Luna once again for bringing them together in the first place, and more recently for bringing her back to him with a downright miracle. He also made a silent decision about what to do once this business in Mexico was finished, but he decided to speak with Lily about that later once things were calmed down. \n\nThey got out of bed and took a long, hot shower before dressing comfortably for the humid heat that was all around them outside. They were in the Tropics after all, so they shouldn't be surprised it was hot. Dante was in a black muscle shirt with tan cargo pants and low-rise black combat boots, while Lily had on a white flowing sundress that was comfortable for her in her heavily gravid state, and comfortable sandals. \n\nWhen they opened their door they were greeted by Astrid and Freydis, who'd rotated shifts with the other Hellhounds to guard them as they slept. There was no chance they'd leave their King and Queen without protection while they were down here with the drug cartel still active. It was highly unlikely anyone could get to them through the Pack's security, but Astrid was taking no chances. \n\n\"Good morning my King and Queen; I hope you're both well rested. Yesterday was a long day for us all, but for no one more than you two.\" \n\nLily smiled at her friend and hugged her and Freydis. \n\n\"Yes, both Dante and I are feeling much better, thank you. Let's head down to the kitchen and get a bite to eat before we meet with Itzli and Atzi. There's much to discuss, but I think we also need to build some bridges with the Pack and help them to relax. There wasn't a wolf in attendance yesterday who didn't know how angry Dante and I were, and we don't want to continue frightening them. I think there's a call for doing something fun, to show them we can just be regular Lycans when we have a chance.\" \n\nAstrid and Freydis looked at each other and smiled before Astrid spoke. \n\n\"I think that's an excellent idea, my Queen. We've both discussed it with everyone else; we were concerned about how the Aztec Pack may view you in light of the unique powers you've both needed to display because of the recent horrendous events. Initiating something they can have fun and relax with, something that makes you seem more human and less daunting would be a splendid idea.\" \n\nDante smiled at his mate, constantly impressed by how perceptive their Lead Hellhound was, before he took her hand and the four of them headed toward the kitchen. \n\nAfter filling up with a delicious huevos rancheros breakfast, they took the elevator to the upper floors where the Alphas' office was. To be polite, they knocked before being ushered in, with Dante and Lily sitting in the plush leather chairs set out for them in front of the large desk, and their Fenrir Pack members sitting on comfortable plush leather couches. \n\nTheir hosts smiled warmly at their new friends and allies as they bid them a cordial Buenos d\u00edas. Itzli addressed them respectfully to begin the conversation. \n\n\"Where would you like to start, mis amigos? There is much to discuss as we plan how to deal with the cartel.\" \n\nLily replied, \"Yes Itzli, you're absolutely right. But before we get into that, I wish to touch on something regarding your Pack. After yesterday's events at the airport, as well as Dante's anger and displays of power, we feel that the wolves in your Pack may be viewing us with caution, if not outright fear. They may perceive a need to treat us with unnecessary degrees of respect or to maintain a safe distance from us whenever possible. We'd like to mend some bridges and to build some goodwill with them, as we don't want to be feared by our allies. To be respected and obeyed yes, but not because of fear or intimidation. We don't wish to be leaders cut from the same cloth as Viktor: that path leads to ruin. \n\n\"So we'd like to do something to show everyone they're welcome to relate to us, and to invite them to see us in a positive light while letting their hair down and having some fun. Dante is a talented singer and musician, and I think a small concert in the Great Hall with your Pack in attendance might be just the ticket. What do you think?\" \n\nThe Aztec Alpha Pair had been leaning forward in their chairs, and their eyes lit up at the suggestion. They thought it was a wonderful idea, and they both looked forward to hearing their Alpha King perform for their Pack. Atzi responded enthusiastically. \n\n\"That's brilliant; we'd love that! The Pack will be ecstatic, and we think it will be just the thing to calm everyone down, to mend some fences and let them have some fun. And Dante, we have a few talented m\u00fasicos in our Pack I can introduce you to. When would you like to do this?\" \n\n\"I think we should spend the day making some plans for our approach with the cartel, then right afterwards Atzi, you can introduce me to your... how did you say it, m\u00fasicos? Then tonight after everyone is well fed, we can stage the concert. If that isn't too soon?\" \n\nItzli checked in with his mate then nodded his head in agreement. \n\n\"That should work out just fine. I'll have some wolves set up a small stage with the required equipment and lights and we can temporarily wire the hall with speakers for some sonido fabuloso... some great sound. I'll get a few wolves started on that right away.\" He paused for half a minute, obviously instructing someone through his Pack Bond. \n\nDante smiled. He was pleased Lily's idea was so well received. \n\nThey spent the rest of the day, including through a working lunch, poring over the data they'd collected. They identified their key targets, their locations and their targets' capabilities, and began to construct an operation that would address everything. Just as with their tactics in Philadelphia and Quebec, they wanted to hit each location unexpectedly and with overwhelming force, and to both start and finish everything within the space of a single night to eliminate the possibility of their opposition's scrambling to achieve any defenses beyond what they already had in place. Their offensive would take several more hours of planning and just as before, they felt the need to invest some intensive time in training with the sizeable portion of the Pack that would take part in this operation; but that training could happen over the next week; planning was first. \n\nBy early evening, it was time for Dante to begin getting ready for his performance, so he and Lily, along with Astrid, William and Freydis, went down to the Great Hall for them to check out any details missing from the preparations and for him to accompany Atzi to meet the Pack m\u00fasicos who'd be accompanying him. He discussed with them the various musical styles he wanted to use, and he was happy to discover they were on board with everything he wanted to do. Dinner, consisting of steaming hot, delicious enchiladas were brought out to them and they quickly scarfed them down (Dante passing on the queso so it wouldn't coat his vocal cords) before Dante resumed his last-minute rehearsal with actual music being played this time. Hilde and Bryn had been resting since they'd taken the lion's share of the previous night's guard duty, and would come on duty while Astrid, William and Freydis relaxed and enjoyed the concert. Thankfully they would all get to enjoy the concert, but Hilde and Bryn would be on alert throughout, and remain by Lily's side during its entirety. \n\nAn hour later the Pack was gathered in the Great Hall, the lights were dimmed, and the stage was illuminated. Dante walked out with his guitar in hand, approached the mic and plugged in his electric guitar. \n\n\"Buenas tardes, la Manada Azteca. We wanted to have a little fun tonight while we all enjoy a little concert. I mostly play country and rock, and I have a talented conjunto backing me up tonight... I think you'll recognize their faces. I hope you all enjoy it, and we can all enjoy some drinks and have fun tonight. So,\" (in a much louder voice) \"let's get this show on the road!\" \n\nThe opening lines for Luke Combs' 'She Got the Best of Me' began before Dante's deep, rich voice sounded through the speakers. \n\n... She got the best of me \n\nBroke my heart \n\nNow all that's left of me \n\nIs beating in this guitar \n\nEvery night a different town \n\nShe follows me around \n\nSo you get what's left of me \n\nYou get what's left of me \n\nBecause she got the best of me... \n\nAs the song finished, a loud cheer thundered from the Pack; the song was a big hit. Dante and the band segued into Kane Brown's 'Lose It', and the guitar sang out as Dante played, looking into the eyes of his mate sitting in the front row and singing his heart out to her. \n\nAfter that, the mood changed as they began playing the Brothers Osborn's 'Stay A Little Longer', which was a smashing success. From there they changed it up again as Dante sang a soulful rendition of the Eagles' 'Hotel California' that struck a chord with everyone there. They then launched into another Eagles classic: 'New York Minute'. \n\nThe concert lasted for over an hour, as country and rock songs were played one after the other. The program was loved and appreciated by all in attendance. By the end of it, Dante was covered in sweat from his efforts, and from the hot stage lights. He and the band wrapped up and bowed to the crowd before they left the stage, with Lily waiting for him. She rushed up to him and clung to him tightly, kissing him deeply and passionately, clearly worked up by the power (and not divinely assisted power this time) of the concert. \n\n\"That was just incredible, my love, you're so talented! I loved your singing and playing, it was outstanding! Now take me back upstairs and make love to me Dante; I need you, and it's time for us to retire.\" \n\nDante smiled at his needy mate, excited to take her up on her demand. They hurried upstairs and locked themselves in their suite and Dante took his pleasure with his sexy mate several times over a couple of hours before they finally fell asleep, Lily as always, cuddling in her favorite spot on his shoulder. \n\n*** \n\nThe next few days were spent either training with the Pack, or with the planning committee (consisting of the Royals, Itzli, Atzi, Chimalli, Astrid and William), refining their plans to annihilate the local drug cartel. Within four days everything was ready, and they scheduled an all-participants briefing for that evening. Participants were to be the Royal retinue plus fifty wolves of the Aztec Pack plus their two Alphas. There was to be one primary operation in the warehouse district of the city plus two splinter operations. All three would be completed in a single night. The irony wasn't missed that they were about to neutralize the capabilities and resources of the entire cartel, utilizing the same number of locals... fifty... that the cartel had invested and lost to a wolf in their suicidal attempt to assassinate Lily and Dante. \n\nOnce the evening had arrived and dinner was finished, the team met in a medium-sized assembly room on one of the lower floors of the Pack building and waited for the briefing to begin. Dante and Itzli co-chaired the meeting, and Itzli deferred to Dante to begin. Dante nodded to William, who clicked a few strokes on his keyboard before five faces were projected onto several screens around the room. Dante spoke. \n\n\"Welcome, everyone. This evening we'll go over the operation that begins tomorrow night at nine pm sharp. The four men and a woman displayed on the screens are our primary targets. Two of them are long-time associates of Viktor Petrov he's sent here to help run his drug operations here in Mexico City. Their names are Anatoly Krosch and Vasily Krosch, and they're brothers who have a long association with Viktor. Just like the other kingpins of his we've encountered, they're complete monsters. I won't go into details unless anyone wants to ask me about them afterwards in private; but if you do, I suggest you bring along a barf bag.\" \n\nThe likenesses of the two Russian men were highlighted in red by William from his computer. \n\n\"These two are expected to be at the main warehouse we'll be hitting, along with this next man, Jes\u00fas Flores. He's the patr\u00f3n of the drug cartel in the city and is Viktor's direct representative. This warehouse mainly processes cocaine and heroin, which they transport to numerous distribution centers in the United States. These three wolves are our primary targets. Here's a likeness of Jes\u00fas.\" \n\nA fat and greasy Spanish man was highlighted in red on all the screens. \n\n\"There are two smaller splinter operations. This woman, Mar\u00eda Sanchez, works for Jes\u00fas Flores out of a nightclub called La Luna Azul, and she's in charge of the marijuana arm of this cartel, which also consists of processing and distributing the product to the U.S.\" \n\nA beautiful but cold woman was highlighted in red on the screens, plus additional pictures showing the front of the club and a map showing where it was located in the city. \n\n\"Lastly, we have Pancho Villalobos, who works out of a smaller warehouse adjacent to the main one. He takes direction from Mar\u00eda and is her right-hand man in the marijuana ring.\" \n\nThe small and vicious-looking, heavily tattooed man was highlighted on the screens. \n\n\"All five of these individuals are our primary targets for capture. They must be taken alive, not necessarily unharmed, but they must be in a state where they can be interrogated before their termination. We want to learn everything we can about their network, their suppliers, and any hitherto unknown key players, either for Viktor of within the local region. Tomorrow night we'll be destroying these three locations and any associates of theirs present. Once that mission is completed, there will remain a large number of their outlying associates, both in Mexico and the U.S., and your Pack will play a central role during the next several months in chasing down all these loose ends. Once this long-term operation is complete, you should find far less of these lesions in your ancient city, although organized crime and government corruption in Mexico being what they are, we can't expect perfect results.\" \n\nAt that, Itzli stepped forward to address the next section of the briefing. \n\n\"My Pack will be split into two forces. A small force of ten wolves will focus on the secondary warehouse, taking out that facility and taking Pancho into custody. You will be provided with electronics support by Do\u00f1a Alfa Atzi and Beta William from the Order of Fenrir. They will jam all communications in the immediate area so nothing electronic will get in or out. We'll have adequate transport available to you for evacuating all drugs, computers, electronic storage devices and of course bodies, before we destroy the building and its remaining contents.\" \n\nMaps, pictures and intel appeared on all the screens, and printed dossiers were distributed to the ten wolves who'd be handling that part of the operation. \n\n\"The bulk of our force will focus on our assault on the main production and distribution warehouse. Flores and the Krosch brothers should be inside the warehouse at the time of our assault, and we'll incapacitate them before we take them into custody. We estimate around a hundred people will be at the facility, sixty percent of them soldiers and the rest workers. Everyone is to be terminated; this is a cleansing operation, so nobody is to be left alive. With our own forces will be Dante and a few of his Hellhounds, plus Chimalli and myself. Dante, with his experience and abilities, will be the initial leader on the ground, but once he enters his War God state, he'll be unable to communicate with anyone, so operations leadership will transfer to Lily, who'll be secured in a mobile command HQ near the area and protected by Astrid and Bryn, assisted by Atzi and several Betas from our Pack.\" ",
        "Once again maps, blueprints, intelligence and pictures were displayed on the screens as Itzli talked everyone through some further details, and dossiers were handed out to the many wolves involved. \n\nAt this point, Dante took back over to wrap up with the final operation at the club. \"This is the tricky one, since it's a civilian establishment with a lot of non-targets in the building. Luckily this is mainly just Mar\u00eda Sanchez's office, with a handful of her officers and money men who normally remain in her office at the back of the second floor of La Luna Azul. Because of these factors, we'll need to do things in a low-key fashion. Chimalli and I will enter the club through the front entrance dressed as civilians as we casually make our way to the office. Luckily, the dark lighting should mask our identities from anyone who might recognize us. We'll quietly take out the guards posted outside the office before we enter it and neutralize everyone inside. Since we're not expecting any wolves to be present except for ourselves, this should be fairly uneventful. We'll then escort Sanchez, probably bound and gagged, out through the upstairs back entrance, which is barred from the inside which is why we'll be entering through the front. There are no metal detectors so we'll be able to go in lightly armed, and this is a very small operation, just a smash and grab, so heavy weaponry won't be necessary. This operation will also be the first one; it will occur an hour before the other two operations. This timing will allow Chimalli and I to get to the main warehouse in time to take part in the main operation.\" \n\nDante locked brotherly eyes with Chimalli, who smiled and nodded his head in anticipation. Lily then wrapped up the meeting by summing up a few points. \n\n\"Normally we Lycans don't involve ourselves in human affairs, and we have strict laws against killing them. That said, this doesn't apply here. These people are a cancer on human society, are closely associated with Viktor and thus with our own kind, and they're destroying your city and your territory, as well as harming millions of people in the process with their murders and drugs. They'll all be executed in bloody combat tomorrow night, and once we can relocate their product to a suitable location, that will be destroyed as well. The boon for us is not only the cleansing of your city and the removal of revenue and existing funds from Viktor, but also our own access to a huge amount of money we'll seize from the cartel. This will be added to an already large trust for the purpose of funding the War and all the Packs aligned with the Guardians Council including of course, yours. And one final caution. Tomorrow night, anyone who sees you shift or who learns any of our secrets is to be silenced forever.\" \n\nLily paused and scanned the room, receiving nods of agreement from everyone in attendance. \n\n\"The smash and grab on La Luna Azul will begin at nine pm tomorrow night, and the two joint main operations will commence at ten. Everyone is dismissed; rest up and be prepared for some intense action tomorrow night.\" \n\n*** \n\nDante and Chimalli entered the nightclub, which was dark and thumping with party music. They were dressed as club goers with designer jeans and boots for each, with Dante in a black loose-fitting silk shirt that concealed his twin Spartans at his back, and Chimalli in a royal blue silk shirt which hid his own weaponry. They knew this had to be a fast and clean operation, so they quickly but casually wound their way across the dance floor, though they both had to rebuff (gently and courteously) several women who tried to waylay them with improper proposals. They made their way to the back of the club, which was fortunately deserted, heading for the stairs leading to the office on the second floor. There were two large men in suits blocking the way. Dante approached with Chimalli following, both of them acting as if they were tipsy and a little lost. The men reached out to stop Dante when he suddenly lunged forward, snapping his elbow into the jaw of the man on the right with blinding speed, instantly snapping the man's neck and dropping him. Before the second man could react, Chimalli surged around Dante and enveloped the man's face in his large right hand and with his left, grabbed the man's arm that was reaching for the gun in his suit jacket. He twisted his right hand, snapping this man's neck as well, before quickly lowering him to the floor. \n\nThey dragged the two bodies into a dark alcove behind the stairs and left them there, knowing by the time they were found they themselves would be long gone, and that no suspicion would be cast upon the two strangers who'd uneventfully entered the club. They then quietly made their way to the top of the stairs and to the door, where they paused and drew their weapons. Dante channeled power into his right leg and kicked the door clean off its hinges, launching it into the room, causing sudden confusion and panic as they rushed inside. \n\nDante made a snap scan and identified Mar\u00eda sitting behind a large desk. For the moment she was stunned with surprise, with one non-combatant cowering in the corner and three men slowly responding to the intrusion. Dante rapid-fired a round each into the foreheads of the three armed guards, while Chimalli turned and shot the non-combatant in the head to remove him from the action. By this time Mar\u00eda had raised a short-barreled shotgun from behind the desk and was about to fire, when Dante made a snap shot into her right shoulder, propelling her backwards as she screamed and dropped the weapon. Chimalli rushed over and slammed the butt of his pistol into the back of her head and knocked her out; she slumped in her chair. \n\nDante made a quick call to Lily to update her on the situation and so she could send transport vehicles to the back of the club. Dante grabbed the unconscious Mar\u00eda, unbarred the back door and took her down the outside stairs to a transport vehicle which had arrived moments ago; her wound was dressed and she was secured for transport. He returned upstairs. A recovery team had grabbed all the bodies including the two under the stairs and loaded them into another van for disposal. Meanwhile Chimalli had collected all the computers, storage devices and paper files in the office, and the team loaded everything into a third van for transport to the interrogation facility outside the city. That was a condemned clinic that had been closed down but quietly converted for the Aztec Pack's use. They would leave the office as is and plant evidence to make it look like it had been hit by a rival (human) gang so that again, no suspicion would be drawn their way. A total of ten minutes had passed since two large strangers had wandered into the club and ambled towards the back. \n\nDante and Chimalli loaded themselves into an SUV and began their twenty-minute drive to the staging area for the two main operations. \n\n*** \n\nDante walked into the armored trailer that was serving as the mobile command HQ for the operation. Lily rushed up to him and hugged him tight, before kissing him. \n\n\"Welcome back my love, I'm glad everything went smoothly at the club. We need to get you ready for the main operation. You've got thirty minutes to get kitted out. Astrid has all your gear ready for you in the back, so hop to it and come back and check in with me.\" \n\nDante gave Lily a hug before he walked to the back and with Astrid's assistance, got himself ready. Ten minutes later he was dressed in his black tactical gear (including his weapons harness, cleverly designed to remain intact when he shifted) and all his weaponry, including his twin katana swords Twin Moons at his hips, and his twin Spartan pistols at his back. He was going without his HK416 assault rifle this time, as he'd be entering his War God state at the start of the assault and almost exclusively would be using his close combat skills to overwhelm the enemy forces. \n\nAs in previous operations, they knew their best chance of success was by launching a simultaneous multi-pronged attack through all access points of the building, with Dante leading the assault into the main entry point to focus the enemy's initial response on him and his team. With everyone except Dante taking immediate cover from which to fire, they'd be eminently capable of handling that response. With Dante would be his Hellhounds Freydis and Hilde, as well as Itzli and five of his elite Betas. It was a small team but attention-getting, and reason they wanted that attention was so that when the majority of their forces swarmed inside from the top, back and sides of the large building, they'd catch the opposition in the open. \n\nWith five minutes until the start of the joint operation, all teams were in position outside both warehouses and Dante heard Lily's voice in his mind through their bond. \n\nStay safe my love, and bring Hell through their door. It's time once again for you to go to work and perform the duty Luna has set before us. I love you, and I'll see you on the other side to bring you back.  \n\nDante returned her a mental thumbs up and smiled to himself, inwardly preparing himself for the countdown to begin. \n\nHe closed his eyes and focused on the power slumbering inside of him, and he began bringing it to the surface. The air around him crackled and his body hummed with power before he opened his eyes, releasing his otherworldly glow and breathing out a hiss of blue-white steam. He'd entered his altered state, not yet in berserker mode, but he was ready. He crouched down and gathered his power, focusing it first in his right hand as he, along with everyone else, listened to the countdown from Lily in his comm unit. \n\n\"Three... two... one... Execute!\" \n\nUpon Lily's command, he braced his legs and shot his right arm forward, palm facing out, as a monumental crack split the night. A massive bolt of lightning impacted the bay doors at the front of the warehouse, which exploded inwards, throwing the warehouse into immediate disarray. In full War God mode, Dante surged forward, his long, powerful strides placing him well ahead of the rest of his team as he sprinted past the shattered bay doors before anyone inside could have a chance to respond. He drew his twin swords and sent pulses of power through them as he began his dance of death through the ranks of anyone he encountered inside. By the time the rest of his team had breached the entrance, he was already deep inside the warehouse, tearing through the enemy ranks. \n\nBy now the forces inside the building had begun to respond and were pouring fire into the cover that the rest of his team had taken as from the other entry points, Dante's main forces started pouring inside. Automatic weapons fire concentrated on Dante's invulnerable form as he moved like a specter between men whether they were in the open or behind cover, cutting each of them down in an instant as blood splashed around him onto the floor and walls. He was in his element and emotionless, as he battled his way through the warehouse, slaughtering everyone within reach. \n\nIn the midst of the chaos of battle he caught sight of the Krosch brothers lurking behind solid concrete cover, firing Russian assault rifles into his forces' ranks, starting to cut some wolves down. He spun, sweeping his katana as he unleashed a wave of pure power into their position. The concrete barrier exploded, the Krosch brothers diving away from the blast, dropping their rifles. In an instant, Dante was upon one of the brothers, who had drawn a large sword, blocking the downward swing that Dante directed at him. Sparks flew as Dante and Vasily exchanged several blows before Dante brought down a mighty overhead slash with his charged katana. It cut through Vasily's sword in an instant, taking his left arm with it. Vasily screamed in pain and horror. Dante ducked just in time as another sword came sweeping over the top of his head; Anatoly had come to help his brother. He spun around, sweeping Anatoly's legs from beneath him. Anatoly fell, but rolled away as Dante pressed his attack against the large Russian wolf. \n\nAnatoly was cautious as he circled Dante, looking for an opening. Dante feinted right, drawing Anatoly in to lunge with his sword into Dante's apparent vulnerability before Dante spun and disappeared below his line of sight. Anatoly suddenly fell to the floor, missing his legs below the knees: Dante had sliced right through them, thus ending the fight. A blood-curdling scream pierced the air as Viktor's long-time associate realized he was now without his legs. Then Dante's steel-toed boot slammed into his temple, knocking him out. Dante then rushed over to Vasily, who was in shock, but struggling with his remaining hand to reach for a rifle just outside of his reach. Dante delivered a similar blow, knocking him unconscious as well. Dante slapped an electrically charged hand to Vasily's shoulder, cauterizing the amputation site so he wouldn't bleed out before quickly performing the same service on the stumps of Anatoly's legs. \n\nDante scanned the warehouse and made his way to where the fighting was still thick, cutting his way through the opposition, whittling down their forces with merciless efficiency. \n\nTen minutes later, the last of the fighting was over and Dante, now clad in shining crimson, stood in the middle of the warehouse, trembling with power and bloodlust now that the battle was over. Through his haze, he heard his mate's voice in his mind as she spoke through the bond. \n\nIt's finished, Dante. Stay there, I'm coming for you; stay put, my love.  \n\nLily, Astrid at her side, rushed through the warehouse with bodies strewn everywhere; then she signaled for Astrid to remain back and now alone, approached her Warrior God. She brought her power to the fore as a green glow enveloped her and she molded herself to her King, not caring what he was covered in. She ran her hands through his hair and down his back, soothing him, and the otherworldly glows of them both faded as she summoned him back from the brink. \n\nDante's vision cleared and the blue glow left his eyes, to be replaced by the liquid silver pools she knew so well and loved so much. Lily smiled at him before she took her sleeve and gently wiped his face. \n\n\"Welcome back, my love, I missed you while you were gone. You were indomitable once again, and I'm so proud of you for doing what needed to be done. Let's go rest in the trailer while the recovery and cleanup teams wrap things up here, then it's time to leave with our captives and begin our data collection. Itzli captured Jes\u00fas, and one of his Betas captured Pancho. We got everyone, Dante.\" \n\nDante smiled tiredly, wiped out from the use of his powers during the battle. Hand in hand, Lily led him out of the warehouse and into the trailer to rest, with the rest of their immediate Pack members gathered in and around the trailer to guard their King and Queen. It would be a long and dark night of interrogations and eventually death before this stage of their operations in Mexico was over. \n\n*** \n\nDante woke up late the next afternoon, lying in bed with Lily, who was still fast asleep, recuperating from the very long night before. He lay abed, turning his thoughts over in his mind. Last night had been unavoidably distressful with the interrogation of the targets and then their disposal, but they had extracted much information that would be sent to the Guardians Council, and also for the Aztec Pack to perform their cleanup after they left, and to shut down the drug trade in their city. Once again, he recalled losing Lily and his children, and all the fighting and the close calls they'd experienced lately, and the more he thought, the more determined he became. They needed a game changer. Dante could no longer excuse himself for exposing Lily to all these dangerous situations; for placing more and more stress on her during her pregnancy. He formed some plans in his mind and was just finalizing them as Lily began stirring. She opened sleepy eyes and smiled at him before placing a few delicate kisses on the Lunar seal over his heart. \n\n\"Good morning, or rather good afternoon my love, how are you feeling?\" he asked. \n\nLily sat up a little bit, although in her heavily pregnant state it took a bit of effort, before she stretched. \n\n\"Good afternoon my own, I'm still a little tired and sore, but I'm also hungry, which is what woke me up. Our little beasties want some food, and so does their Momma. Have you been awake for long?\" \n\nDante sat up too, letting the sheets pool around his lap, and wrapped his arms around his mate. \n\n\"As you can tell, I'm still not up, but I've been awake for a bit and doing some reflecting. We need to talk baby, I've made a decision, and I'm hoping you'll support me on it.\" \n\nLily's brows furrowed and she looked worried. \n\n\"Is something wrong, baby? You're scaring me here a bit. What's on your mind?\" \n\nDante drew her to him and kissed her before running his hand lovingly over her bump. \n\n\"Nothing bad baby, nothing to be worried about. But I've been mulling over my losing you and the cubs last week, and my dying and being brought back by you before that. All our battles and close calls. I just can't forgive myself any longer for continually putting you in danger. I know it all needed to happen, and I know there's no chance of our being apart; neither of us would accept that risk even if we could bear the separation from each other. So I've decided that with you only about a month away from giving birth, we should settle down for a little while and focus on your... both of us... going through your final weeks of pregnancy in a safe place with plenty of support and protection.\" \n\nLily's features brightened and she leaned towards him eagerly. \n\n\"Dante, that's a wonderful idea, and I fully support it. We've been on the go and throwing ourselves into danger after danger for so long now that I think we do need to pull in our horns for a while. Shall we go back to our cabin and spend some quiet time there as a family and give birth at the O'Connor Compound?\" \n\nDante shook his head. \n\n\"I initially thought of that too, but we've repeatedly kicked the hornets' nest with all these blows to Viktor's organization, so he's going to want to strike back at us, and our home is the first place he'll look for us. I don't want to risk it. I've thought of a far safer place, which will also be the perfect place for our Son and Daughter to be born.\" \n\nLily was figuratively on the edge of her seat, waiting for Dante to get to the point, while she wracked her brain to think of where he was contemplating. \n\n\"Let's go to our new home, Hohenzollern Castle in Germany. We'll finally meet our Pack, and our children can be welcomed into the world surrounded by our Pack in their ancestral home and born in what will become their new home for life. It's time for us to go there baby, it's earlier than we thought, but I feel that it's time.\" \n\nLily's eyes went wide. She was speechless for a few long moments before she composed herself and spoke. \n\n\"Initially I was shocked, but the more I think about it, the more it makes perfectly wonderful sense. We're the Alphas of a massive Pack, we haven't even met them yet, and we need to. We'd be barricaded inside a castle surrounded by hundreds of Lycans... our own Lycans... there's nowhere in the world that would be safer, plus it's outside of Viktor's range of influence. It's perfect, Dante! When should we leave?\" \n\nDante smiled in relief that Lily liked the idea. \n\n\"I think we can leave tomorrow. Our sleep schedules are out of whack right now and we're still exhausted. I'll make some calls to Mom and Dad and a few others to alert them to our new plans and have them ship some of our things to the castle immediately, so we can have them shortly after we arrive. We'll talk to Astrid and the Hellhounds right away to get the plan in motion. I'm sure a surprise visit from the Alpha Queen and Alpha King will be welcome, and our Pack will want to celebrate. Let's get showered and dressed, and we can put this in motion.\" ",
        "*** \n\nWhen Dante and Lily exited their suite, William and Astrid were standing guard. They smiled at their lieges as an initial good 'morning' before Astrid spoke. \n\n\"Good afternoon, my King and Queen. I hope you're recovered after the long night we all had. What's on our agenda for today?\" \n\nDante smiled. \n\n\"We're doing much better after some sleep, thank you. We've made an important decision that will affect us all. Please gather Hilde, Bryn and Freydis and meet us in the kitchen. We all need some food, and we all need to talk. We're going home.\" \n\nNot realizing which home Dante was referring to, Astrid and William had no particular reaction as they went off to collect the other Hellhounds. A few minutes later, they all met in the kitchen and chowed down on some piping hot tamales, fresh from the pot. The two Royals proceeded to tell everyone of their decision and the reasoning behind it. All the Hellhounds were ecstatic to be heading home sooner than expected, and to be bringing their King and Queen along with them. Astrid spoke... actually she uncharacteristically squealed for the group. \n\n\"I can't tell you how thrilled we are that you've decided to come home to Germany to be with your Pack. Everyone there and we too have been eagerly awaiting this day. There will be a grand celebration upon your arrival! There is so much for us to do, we'll all need to get started right away. We can make all the arrangements tonight, and as you wish, we can certainly depart tomorrow morning and soar our way home to Hohenzollern Castle!\" \n\nAfter everyone was done eating, they split up to begin making calls and plans. Dante and Lily would be getting in touch with their parents, as well as placing calls to many of the Alphas in the Guardians Council to alert them of the change in plans and to begin organizing the next Council meeting. Since Dante and Lily would be in Germany and the Council was growing so large, it no longer made sense to have everyone meet in one location, so this next meeting would be by video conference. Besides, a noticeable number of opposition Alphas making round trips to Germany could give Viktor unnecessary clues as to Dante and Lily's whereabouts. \n\nDante and Lily next met with Itzli and Atzi in the parlor where they were enjoying some drinks after dinner. They chatted with the Aztec Alphas for a while, explaining they'd be leaving the next morning and appreciated both their hospitality and their help in eradicating Viktor's drug operation in their city. Dante also explained that the next Council meeting would be a video conference, and to that end William was assembling and programming the necessary equipment and would have it shipped to them. Lily was running down, her energy becoming more limited the closer she got to her delivery date, so Dante and she excused themselves and retired to their room where they packed all of their things before turning in for the night to catch some more sleep. \n\n*** \n\nThe next afternoon their jet was flying over the Atlantic Ocean en route to Stuttgart Airport near Bisingen, Germany. The cabin was filled with excitement as everyone was looking forward to arriving home. Astrid was cuddling and talking with William, telling him what to expect and some details about the Pack while Freydis, Bryn and Hilde were talking with Dante and Lily, doing much the same but without the cuddling. Freydis explained what would happen once the jet touched down. \n\n\"Once we finish collecting our baggage, a small motorcade will be on hand to drive us from Stuttgart through Bisingen, then through a dense forest and up the mountain before we arrive at Hohenzollern Castle, which will take a bit over an hour. Until we enter the grounds everything will be as inconspicuous as possible so as not to attract any unnecessary attention. The locals and the German Parliament know that our famous castle is now closed to the public, and we have some trusted friends in Parliament who are keeping any detailed questions about us at bay and are running permanent interference so that we're always left alone. It's quite a prominent landmark... pretty hard to hide a hilltop castle... but our Pack has always remained in the shadows. Only a few trusted friends know the castle's inhabitants are Lycans, and we intend to keep it that way.\" \n\nBryn then jumped in with more details. \n\n\"As you may remember when we first introduced ourselves and made you aware of your birthrights, the Order of Fenrir Pack is about 600 strong, and is one of the larger Packs in Europe, although not the largest. Again, most people believe us either to be mythical creatures or that we've died off, and that's what we want them to think. But over the past millennium since the Royal Bloodline was betrayed and our numbers were decimated, we've regrown very strong as with each generation our ranks grew. There are currently a fair number of pups in the Pack, so when the Royal Heirs are born, they'll have plenty of playmates. Once you arrive home for the first time, a sizeable portion of the Pack, including many of the Elders, most of the Betas that make up the Royal Guard, as well as we and all the rest of the Hellhounds will be living in the Castle and grounds so we can guard, counsel and serve you. The rest of our Pack lives in villages near the Castle or in isolated forest homes and at need, can arrive at the Castle quickly.\" \n\nHilde then took over the explanations. \n\n\"Once we enter through the Eagle Gate, it will be closed and barricaded to shut out any unwanted guests, and then all the stops can come out for an official procession as the Order of Fenrir welcomes for the first time in a thousand years, their Alpha King and Alpha Queen to their seat of power and their home. \n\n\"That would be you,\" she added playfully. \n\n\"To date we have addressed you as the Alpha King and the Alpha Queen respectively, but those aren't your ultimate titles, since you haven't yet undergone your Coronation as the Silver King and the Emerald Queen, and even though you're about to arrive home, that won't happen yet. The Coronation will take place a short time after you Lily, have given birth, so the Royal Heirs can be in attendance instead of inside your womb. That august event will take place inside the Chapel, which we call the Hall of the Moon. Your suites take up the entirety of the Emperor's Tower, which is one of four towers within the Castle walls. The majority of the Castle residents among the Pack is housed in the main residential building. Work has been done around the clock very quietly to update the interior with modern conveniences, and therefore the residents have been virtually camping out in their domiciles during the past several months since we learned of your existence; a virtual army of renovators have moved heaven and earth in an effort to render the Emporer's Tower and other parts of the Castle suitable for your occupancy. The original thrones were safely stored in secret for the last thousand years, but are now awaiting you in the Count's Hall, which is the main hall of the Castle and which connects with your Tower. Within the Margrave's Tower is your personal parlor, which knowing your love for cigars Dante, has been equipped with a state-of-the-art ventilation system so you may indulge freely without hampering Lily's enjoyment.\" \n\nAt this point, William and Astrid joined the conversation so Astrid could explain about their tower suite. \n\n\"Your suite, the Emperor's Tower, has been retrofitted and is divided into three levels. On the lowest level is your joint office where the Pack members can meet with you and where you will conduct most of your Pack business. The next level up houses a combined personal library and living room. It's just a tiny library compared to the main one in the Castle, but we think you'll enjoy it. The top level contains your Royal chambers, with your bedroom and bathroom. As much of the original architecture has been preserved as possible, but we saw it necessary to update everything with state of the art security and electronics, in addition to exquisitely modern living and bathroom conveniences. The Great Hall, originally known as the Count's Hall, serves as the throne room and the primary gathering place for the Pack. At your pleasure, this is where Pack meetings will be held and visiting delegations will be welcomed. The Chapel was originally intended for both Protestant and Catholic services, but due to its ideal suitability, beauty and location for our purposes, it has been converted into the Hall of the Moon where our worship to Luna is conducted. We stage Pack runs and hunts outside of the Castle walls, but all our formal ceremonies, for privacy reasons, must be held within the Castle grounds, and most of them are held in the Chapel. The original stained glass has been removed and preserved, and replaced by silver-tinted scenes of wolves, the surrounding forest, the Moon and us Lycans. With its high-vaulted... very high-vaulted... ceilings, I believe you'll find it beautiful.\" \n\nBy the end of this elaborate verbal presentation, Dante and Lily were both overwhelmed, and their eyes were as large as dinner plates. In spite of their astonishing achievements, during all this time they'd seen themselves as just regular people... well, regular Lycans... but from unpretentious beginnings, and they were now being thrown into the deep end. Although their Lieges commanded their deepest respect, these Hellhounds could always see their Alphas clearly through eyes of compassionate understanding. Astrid voiced their collective thoughts. \n\n\"Lily and Dante, just for now, I wish to take the liberty of calling you 'our beloveds'. For while we certainly honor and respect you, we four Hellhounds also love you with all our hearts. Our beloveds, we can tell you're finding all of this quite overwhelming. Dante, up until less than a year ago you were an orphan, and a soldier of modest means with no understanding of who you really were. Lily, you may have been the daughter of a prominent and wealthy Alpha, but you were raised for the most part as a normal girl, and you lived a simple and secluded life. It was only when you two met last autumn that things began to change for you both, but even then you were no more than Alpha Heirs, albeit unusually capable ones. It was only when we appeared seemingly out of nowhere and requested an audience did your truly Divine abilities begin to emerge and the knowledge of who you really are begin to sink in. And even now so far it's mostly been just titles, respect, duty and a few formal occasions with other Packs, as you began planning and fighting the War. \n\n\"But now is when not only your duties, but also your glory begins for the first time. Your Pack needs to honor and pamper you to degrees you've never encountered before, and it expects you to embrace your soon-to-be roles as the Silver King and the Emerald Queen. You have a duty to your Pack to embody these roles, and an even larger duty to our race to be our King and Queen. It's time for you both to embrace these honors and at least in public, to present yourselves as the Royalty you are. But as I said, we love you with all our hearts. We'll all be there to support you, to guide you, and to counsel and protect you. Once your procession goes through the Eagle Gate, your new reality begins, and there's no turning back.\" \n\nDante and Lily looked at each other, holding each other's hands, willing each other strength and comfort. They knew what they had to do and who they needed to be. It was Dante who responded to Astrid. \n\n\"Thank you, Astrid and our Hellhounds. Although for us to live up to the role you've described so eloquently there must needs be a separation between us, please know that you four, and now William as well, have earned both our respect and all the affection that we have to give. We haven't met the rest of our Pack as of yet, so this next statement may expand to include others but for now, unlike anyone else in the world except for Odin and Victoria, you five wolves are our immediate family, and I mean that with all our hearts.\" He turned to Lily, \"Do you agree, my love?\" \n\nWith tears in her eyes, Lily agreed, \"Absolutely, my love. Astrid, William, Hilde, Freydis and Brynn, you have all opened your hearts to us and given without counting the cost, and it has touched us more deeply than you can ever know.\" Despite her gravid condition, she left her seat to make the rounds, embracing each wolf earnestly and kissing them tenderly on both cheeks. \n\nAfter his mate had reseated herself, Dante continued his impromptu speech. \"The role you describe for us is a heavy burden to bear, but we can see that it's our duty and our right as bestowed by our Goddess Luna Herself. We're ready, and we'll fulfill our roles with dignity, honor and vigor. We agree with you Astrid, that this is overwhelming to us both, but we fully appreciate the gravity and importance of our roles. We're ready to step into them and be the King and Queen our Pack and our race needs. By the time we arrive it will be tomorrow morning, and we'll be ready to face our subjects by that time. But we will absolutely hold you five to your promises of support and especially counsel during this transition time and beyond. I know there'll be many times we'll sorely need it.\" \n\nLily smiled at everyone and in an effort to lighten the mood a bit added, \"I too pledge myself to everything Dante just said. Except that the dignity part may need to be restricted to those times we're not dripping in our enemies' blood. But in any case, let the games begin!\" \n\n*** \n\nThe jet landed at Stuttgart Airport, where they deplaned and collected their luggage. They'd spent time in a lot of airports recently, and they were used to the process as they made their way to their motorcade. It consisted of two BMW SUV's and an armored Maybach limousine, all three of them silver in honor of the Silver Guardian and his Great Love. This time Astrid and Hilde were in the Maybach with them as their guard, with Lily and Dante in the back seat of the luxurious car, with the other three in one of the two BMW's and their luggage in the third. Also in each of the vehicles were two wolves who looked very much like they could handle themselves in battle. The six Betas had been introduced by name, during which informal ceremony each had bared his neck in respectful submission; and even though they were Pack, Dante inconspicuously scanned their intentions, but of course could find no malice or deceit within them. When everyone was seated, the motorcade began its hour-long drive to the Castle. The Maybach was in the middle, with a BMW travelling protectively in front and behind. From Stuttgart they made their way through the countryside and eventually through Bisingen before making their way to the Castle. When they were about five minutes away and cruising through a dense forest, the hilltop castle loomed into view above the trees in the morning sunlight, and Dante and Lily received their first view of their new home. It was absolutely majestic, and it made them even more excited about this new chapter in their life. \n\nThey turned onto the road leading up the hill and winded their way up. As they drove across a drawbridge and entered Eagle Gate, an arched passage through the outer wall which must have been forty feet thick, Astrid and Hilde rolled down the back-seat windows. Once they emerged back into sunlight, the entire grounds were filled with their new Pack. Even though they'd been warned what to expect, they found it immensely startling. But they quickly found it exhilarating as men, women and children of all ages cheered and waved to them. Dante and Lily smiled and waved back as they were given a boisterous welcome to their Pack and to their ancestral home. \n\nThe tumult never ceasing, they exited the silver Maybach and were immediately flanked by the five Pack members with whom they'd already shared such horrendous and wonderful experiences. But this time not as a safeguard against any possible malfeasance, but rather as their beloved and loving honor guard. Their five dear friends escorted them to a raised Dais that had been erected so their King and Queen would have an elevated place from which to address their Pack. \n\nIn an exercise typical of the pair: utilizing whatever informal means that might be at hand to achieve a formal end, within the fairly cramped 'dressing room' of the car, Dante and Lily had changed into their Royal best. Dante had his hair pulled back in a low ponytail with his wolf's head holder in place, and he was wearing a striking silver silk shirt, beautifully tailored, and black slacks. His mating necklace was on display and his ensemble was completed with black Italian boots. \n\nThanks to Astrid and Hilde's ministrations, Lily's hair was done up in an intricate design with tendrils of her hair falling to frame her face; her hair was its usual striking red color, save for the pure silver streak growing from her temple, all of which was held in place by her jeweled combs. Again thanks to Astrid and Hilde, her makeup was done perfectly. She wore a strapless form-fitting emerald-green velvet dress that had a small train attached to it and that perfectly displayed her magnificent chest and her gravid state. \n\nA path had been cleared to the Dais, and the other sixteen Hellhounds Astrid commanded were standing at attention, resplendent in their polished matching armor, lining the way as Dante and Lily, still escorted by William and the other four Hellhounds, made their way to the platform. They couldn't hear anything over the roar of their gathered Pack, still tumultuously welcoming them home. As now unaccompanied, they ascended the platform and stood behind a lectern, the entire Pack except for pups in arms went to one knee and bowed their heads and joined in emitting a low keening sound which lasted for an entire minute before a hush fell across the Castle's courtyard. Dante and Lily had discussed this moment on the drive over and had decided that as Luna's Silver Guardian and Champion Dante would speak first and Lily afterwards. \n\nAs always, Dante's speech wasn't eloquent, but simple, unassuming and from the heart. \"Thank you for the enthusiastic welcome my Pack, I am Dante Silvrash, the Alpha King and Luna willing, soon to become Silver King. I have also been given the titles of Luna's Champion and the Silver Guardian. I am humbled to take my place here to assume leadership as your Alpha King of the Order of Fenrir Royal Pack. I see it as a grave responsibility to lead you all, with my mate and Queen Lily at my side, but it is one I assume with determination to never fail you. \n\n\"War is upon us, and several skirmishes have already been fought in the United States and one a couple days ago in Mexico. As decreed by our Goddess Luna Herself, it is my and my mate Queen Lily's duty to cleanse our race of the darkness that has infected it for too long, and we intend to do just that. Our Pack will be the rocks that our enemies will be broken upon and we must prepare ourselves for a difficult path ahead. But we are not alone: we have a growing number of staunch allies and even more: the divine blessing of our Mother Goddess with us, and we shall prevail. We'll bring the fight to those wolves that mean to continue twisting our race into something we were never meant to be. Open warfare will begin in the States before we crush our enemies there, and then bring the fight to the World at large, so we may unite our race once again as it hasn't been in a thousand years. We shall not fail you, we shall not bend or break, and we shall be victorious. \n\n\"And now your Queen wishes to speak with all of you.\" \n\nWith that, Dante stepped back a few paces as Lily stepped forward to address the Pack. \n\n\"Greetings to the Royal Pack, the Order of Fenrir. I am Lily Silvrash the Alpha Queen, hopefully soon to become the Emerald Queen. I am mate to my King Dante Silvrash and I am decreed by our Goddess Luna to be his Great Love. I too am humbled by your welcome to our Pack, and I take my leadership role very seriously. This is a joyous occasion for us all, even in the face of such terrible strife within our race. Together Dante and I shall lead you, protect you, support you and love you as our own. I shall support and counsel our King, shall fight by his side and love him for all eternity just as I already love my Pack, each and every one of you. I shall fight for our race, for our unity, for my mate and children and for all of you. As you can see, I am pregnant with the first Royal Heirs to be born in a millennium. In one month's time, Dante and I will welcome into this world our son and daughter, the First Prince and Princess of the Lycan race to be born in such a very long time. This is a joyous occasion to be celebrated. We love our Pack and we love all of you, and we look forward to getting to know each and every one of you. We shall not fail you, and we shall lead you with honor and wisdom as hand in hand together, we tread the path Luna has set before us. Thank you all, and it's good to be home!\" ",
        "When Lily finished speaking, a roar from the crowd reverberated throughout the grounds as everyone howled and yipped and cheered for the homecoming of their King and Queen. Lily mentally nudged Dante to strut his stuff. \n\nShow them their King's power, my love. They've waited for so long. Show them who the Silver Guardian is: it will bolster them and give them hope.  \n\nDante smirked, knowing how his feisty mate liked him to show off every once in a while, but he also agreed with her intent. He stepped to the open space in the center of the Dais and gathered his power, then he entered his War God state, beginning to glow a bright blue-white before letting out a thunderous roar that shook the very castle walls as it echoed through the land, proclaiming the King had come home. The Pack howled in excitement before once again going to one knee and respectfully baring their throats in submission. Dante hadn't gone completely into his altered state... he certainly didn't want to kill anyone today... so unassisted, he was able to rein his power back in and return to normal. \n\nThe Royal Couple's getting acquainted remarks completed, Astrid and Hilde came up to guide them off the platform and lead them into the Castle. \n\n*** \n\nAstrid led Dante and Lily through various hallways and into the Great Hall, then over to the entrance to their tower. The door to the tower was laminated to look like an ancient wooden door, but sandwiched within the laminate was a solid chromoly steel plate with embedded electronic sensors, making it an impregnable vault door that only Dante and Lily and other members of the Pack could open to gain access to their office. The DNA-recognizing software had already been programmed to recognize the Royals, but to be certain of this, Dante, Lily and finally Astrid took turns lightly pushing to open the door before Astrid led them up some winding stairs to their office. The round office was done in rich reds, gold and creams, making it warm and inviting despite parts of the original stone walls showing, and antique Persian rugs covered the majority of the stone floor. There was a great stone hearth off to one side for warmth when it got cool, and an ornately carved cherrywood desk in a massive U-shape, large enough for both Dante and Lily to face each other and work simultaneously while seated in plush distressed brown leather executive chairs. There were a few leather-covered chairs off to the side of the desk to accommodate anyone meeting with the King and Queen, flanked by two matching sofas for additional seating. There were several large monitors on each side of the desk for Dante and Lily's work, and banks of powerful computers as well. \n\nAstrid then led them through another door in the back of the room that was the same as the one at ground level. She explained that this one would open only for Dante and Lily and their Hellhound Guards, for security. While the office was open to anyone in the Pack, their private quarters were off limits to everyone except for Hellhounds and people being willingly escorted by Hellhounds. Yes, willingly: the sensors were even sophisticated enough to detect whether an otherwise authorized wolf was unconscious or being coerced. And the screening was thorough; even the Royals' cleaning and other personal services were provided exclusively by Hellhounds. All the windows in the tower had been covertly replaced with multi-inch thick bulletproof (and even bombproof) glass for additional security. They climbed up another course of stairs to the second floor. (This would be called the third floor in the United States, but in Germany as in much of Europe, the ground floor was called just that, and the one above it was called the first floor, or more literally, der erste Stock, the translation for Stock being 'elevated floor', a different term than the one used for a ground floor.) \n\nThey entered into the lower level of their living quarters, this level being their personal library and living room. One side of the room was lined from floor to ceiling in beautiful cherrywood bookshelves with brass railings running along the top to support the cherrywood and brass rolling ladder. The shelves were filled with books old and new, many of which were first editions and very old. \n\nAgain, much of the original architecture had been left in place, and the stone construction was again displayed as often as possible. (Well, the 1850 reconstruction original anyway, not the 1454 enlargement/reconstruction; in fact the original castle dated back as far as 1061, if not earlier.) There were ancient tapestries portraying scenes of wolves, forests, and the moon and night sky which had been preserved from the original collection which had been gathered while the Royal Bloodline had still been alive. There were beautiful stained-glass pieces mounted behind the bulletproof glass, casting a multitude of colors into the room. Once again, Persian rugs covered much of the floor for warmth and comfort. There was a large overstuffed leather couch, which caused Lily to nudge Dante and give him a sexy leer as they both recalled all the fun they'd had on their couch in their Cabin. Against one wall was a large cherrywood entertainment stand filled with the latest electronics and a massive curved UHD TV. There were also a number of high-backed armchairs stationed near the library section. \n\nAstrid led them over to one of the bookcases which doubled as a hidden door, again for security, and showed them the mechanism to open it to provide access to the final winding staircase that led to the top floor and their bedroom and bathroom. In keeping with the theme of the previous two levels, much of the original architecture and in this case the steeply pointed ceiling and dark woodwork had been kept intact. The room was done in the same colors as the office and living room below, with an exquisite and very old hand-carved canopy bed done again in cherrywood, and with black silk sheets just like they had at the O'Connor Compound. Next to it was a matching pair of bassinettes for their two children to sleep in when they were born, and a cherry changing station large enough to accommodate both children (and both parents) at once. There were matching hand carved cherrywood dressers (also ancient) for their clothes, as well as a large walk-in closet. As with the other rooms, most of the stone flooring was covered in thick, plush Persian rugs for their comfort. Mounted on the wall was another curved and massive UHD TV. There was a walled-off corridor leading to the bathroom, done in cherrywood paneling with a hand-carved and again ancient vanity for Lily, as well as the jewelry cabinet that had been shipped here from their suite in the O'Connor Compound. With it had arrived much of their clothes and other possessions as well. Astrid explained that much of the furniture here had been used by members of the Royal Bloodline until the tragedy of a thousand years ago and had been carefully preserved over the centuries until it could be used by the Silver Guardian foretold in the Prophecy. \n\nDante and Lily walked through the arched entryway to the corridor leading to their bathroom. The bathroom was done in white marble with cherrywood accents and gold fixtures. There was a large his and her sink mirror set, as well as a sunken jacuzzi tub and a walk-through shower; that included an overhead rain feature, many different showerheads, and even a towel warmer. It had been remodeled to be very like the bathroom in their Cabin back in Montana, and they instantly felt at home. \n\nOnce Astrid finished showing them everything, she gave a little speech before leaving them alone. \n\n\"Today is for you and the rest of us to rest. Take some time to unpack and get comfortable in your new home. Tomorrow is when everything really begins, although tonight there will be a huge feast in the Great Hall. Tomorrow we'll hold the ceremony when you two form your Pack Bonds with each of the Pack members. Tomorrow is also when the Pack Doctor will perform a checkup on Lily for her pregnancy. We'll see you tonight: I'll come and get you when it's time. Again, I'm thrilled that you're here, my beloveds, if I may again be so bold.\" \n\nSuddenly Dante and Lily were alone in their new quarters without much to do except to take it all in. It was overwhelming, but they were doing their best to deal with it all. \n\n\"Dante, this is just incredible, isn't it? It's almost like a fairytale in some ways. We finally have our own Pack to take care of, not just a few members living and traveling with us. And now we're living in an actual Castle! Fortunately we've had some time to adjust to being the Silver Guardian and the Great Love, and even to a degree Queen and King of the Lycan race. But now that it's staring us in the face, it feels so much more real. It's a lot to take in, and a lot of responsibility.\" \n\nDante smiled at his mate and gave her a reassuring hug and deep kiss. \n\n\"Yes it is baby, but it's one we're both up for. Our Pack needs this, our race needs this, and it is our sacred duty, given us by Luna Herself. This is something we have to do, but as long as we have each other we won't fail, and we'll grow into the rulers we need to be. We must be fair and as often as we are able to be kind, but we must also be firm and have an iron resolve. The road to eradicating the darkness from our species and uniting everyone under our banner will be a very long and bloody one, but it is ours to tread. Throughout, we'll progress side by side with our Pack supporting and fighting for us each step of the way. Yes, it's a grave responsibility and a heavy burden, and there's a piece of me that longs for the simple life we used to have, but this is our reality and we're both ready for it; Luna Herself has told us this is true, so it must be so. But on a less portentous note...\" \n\nWith that, Dante leaned down and spent several delightful minutes kissing his mate and heating her up. When they finally broke the kiss, Lily's eyes were smoky and full of lust. \n\n\"I think it's time for us to christen the room, my beloved,\" she purred. \"Would you strip me down and make love to me now? It's been far too many hours since I've had you, and we're finally alone in our new castle.\" \n\nDante smiled lasciviously at his mate before he slowly and sensually started to... as she called it... strip her down. When she was finally down to just her tiny little red G-string, he dropped to his knees and buried his face in her womanhood, breathing deeply the rich and spicy sweet musk of his lover and mate. Dante used his teeth to grasp one of the thin strings of her remaining garment and pulled the soaked garment down her legs for Lily to step out of. \n\nIt was then Lily's turn to strip her mate, and like he'd done, she went slowly and sensually as she caressed off each garment, one at a time. She unclasped his wolf's head ponytail holder so she could run her fingers through his long, black hair. She paused at his temple and lovingly stroked the pure silver streak that was there, then ran her fingers through his hair. \n\n\"We now have matching marks from Luna's blessing. It looks so handsome on you Dante, and it makes you look so distinguished, so very much my King and Champion.\" \n\nLily took his hand and led him to the large four-poster canopy bed, which she climbed onto before turning around and bending over backwards, steadying herself with one of the sturdy wooden posts at the corners. She gazed back over her head, her eyes blazing in lust. \n\n\"Come to me my King, take me and give me all your power and virility. I'm not fragile even as pregnant as I am, and I want your power right now. Own me and devour me, make me feel your desire to the depths of my soul.\" \n\nDante was past hard by this point, and he stalked into the bed as inside of him his wolf vied for dominance, wanting to take a leading role in claiming his mate. He let a bit of his power out as he ran his hands down her back and ass and little pleasurable pops of energy stroked her skin to excite her. Dante's fingers next dove into his mate's welcoming depths as her juices ran over them and out of her in a steady hot stream. He found her G-spot and began stroking and rubbing on it, tapping a complex rhythmic pattern before twisting them in and out as she began panting and moaning in pleasure. Then he did it all again. Dante kept at this for several minutes until Lily was just on the precipice, then he sent a strong jolt through his fingers directly into her G-spot and forced her over the edge. Lily's back arched as she screamed and sprayed her fluids all over her lover's hand as she lost herself to the ecstasy. \n\nDante withdrew his fingers, and without giving her a chance to come down, he sank his shaft to the hilt inside of her as once again Lily screamed in bliss. He began pumping himself into her slowly at first, before he built up to a savage pace and catapulted Lily time after time into heaven as he ripped his pleasure from his mate just as she'd asked for. He was finally getting close himself after a seeming eternity of sending his mate repeatedly over the edge, and he fisted his hand in her hair, pulling her head back as he reached around with his other hand and grabbed her breast before sinking himself as deep as possible into her depths before savagely biting her mating mark and simultaneously exploded inside of her, flooding Lily's pussy with his seed until it back-splashed through her swollen lips and around him. \n\nLily had been toppled over her final peak when Dante bit her and she felt his cum splash inside her, and her body went taut as she shrieked out her pleasure and the walls seemed to vibrate with her power. \n\nWhen they were both sated, Dante grabbed Lily and pulled her upright to his chest, holding her tightly against himself before eventually he turned them both and laid them on their sides. Still joined, Dante snuggled her head against his chest. No words were required as they held each other and drifted off to sleep. \n\n*** \n\nMany hours later, Dante and Lily were awakened by insistent knocking at their door. They got up and donned silk robes, silver for Dante and green for Lily, and answered the door to find Astrid, who had a smirk on her face. \n\n\"Well that didn't take long, hahaha. Now the entire Pack knows what my husband and I and my three closest companions already knew. Our King and Queen are passionately in love, and they have the most effective way known to Lycan kind of trumpeting their love from behind closed doors.\" \n\nLily and Dante both blushed, but were by now used to Astrid's raunchy side and could only smile at their closest friend. Lily decided she could be a bit cheeky in reply. \n\n\"What can I say? This Queen needed to be laid by her King in her new Castle to begin the christening process. There are many rooms needing to be christened, but fortunately we now have a lifetime to do it in. We'll try not to scare the Pack too often with our lovemaking, and when the children get older we'll make sure they aren't scarred by Mommy and Daddy's carnal relations.\" \n\nDante and Astrid nearly fell over laughing at the outrageous statement and could hardly breathe for over a minute as they both continued laughing loud and long. When Astrid was able to compose herself, she responded. \n\n\"Lily my Queen, don't be surprised if a few curious she-wolves come sniffing around the stud over here, wondering what he could have done to you to prompt the kinds of sounds coming from the tower this afternoon. Dante, in his very first day, is already building quite the legend. In addition to that little display of power in the courtyard, which was very hot by the way, the sounds coming from the tower where his Queen was locked away with him are bound to pique some interest.\" \n\nLily got a saucy, hot look on her face. \n\n\"I'll gladly put any bitch who comes sniffing around my man in her place. I may be pregnant, but I can still beat the shit out of anyone in our Pack except for the King. They'll do well to remember that.\" \n\nAstrid chuckled again, knowing full well Lily could back up that claim, having seen her Queen in action time and again. She got down to why she'd awakened the couple. \n\n\"Ok ok ok, back to the matter at hand. It's time for you two to start getting ready; the feast will begin in an hour, and you both need to be on time, since nobody will be permitted a single bite or nary a sip until you arrive. I've got your clothes for tonight right here.\" \n\nWith that, she handed them each a garment bag. \n\n\"I'll return in an hour with another Hellhound to escort you down. For formal occasions such as tonight's, you'll always require an escort of myself when possible, plus at least one additional Hellhound as your personal guard. Depending on the situation maybe even more, but never fewer than two. As things calm down and we begin settling into business as usual, you'll normally have either just me or another Hellhound to act as your aid and guard, and we can be more relaxed. Tonight and tomorrow however, decorum matters, so please bear with us. You have to remember that you two are THE Alpha King and THE Alpha Queen of our entire Lycan race, and you have both been blessed by our Mother Goddess Luna in person, something that's never before happened in recorded history. There'll always be some pomp and ceremony, so try and be patient. I know you're new to this, but it matters both to our Pack and to our species, so hang in there.\" \n\nDante turned and set the garment bags down before he returned and gave Astrid a hug. \n\n\"Thank you Astrid, and yes, we both understand. We aren't fully used to it yet, but I think we will be soon enough. That said, we'll rely on you just as we rely on each other to keep us grounded. We hope never to become snobbish like many Royalty become. We can't stand that, and we wish to be kind and perceptive leaders who are fair and just. Don't ever let all this pomp go to our heads. We'll be counting on you and the rest of the Hellhounds and our Pack to give us a heads up whenever we fuck up.\" \n\nAstrid smiled warmly and proudly at her rulers before she nodded her head and took her leave. \n\nDante and Lily shrugged off their robes, headed into the bathroom and turned on the massive walk-through shower, setting it to a nice steamy hot setting with the rain falling and most of the showerheads going. Once they were clean they walked out and dried each other off with the warm towels. (Man, were those towel warmers a nice luxury!) Dante went to the sink to shave with his straight razor as Lily began to dry and style her hair. Dante opened up the two garment bags and found a tuxedo made in Italy, black with red highlights, for himself, and an emerald-green silk gown for Lily, embroidered with silver details of lilies and wolves that would look stunning on her. It was form-fitting with a sweetheart neckline and it covered her shoulders and pooled around her feet. Dante made a note to be extra cautious helping his mate down the stairs and walking tonight so in her gravid state she wouldn't trip . A while later they were both dressed in their formal best and sporting all their best jewelry and were ready not a moment too soon, as they heard a knock on their door. \n\nThey opened the door to find Astrid and Bryn in their formal armor polished perfectly, and ready to escort them down to the Great Hall where the feast was set to begin. Astrid and Bryn both smiled at the couple before Astrid spoke, formally this time. \n\n\"Good evening my King and Queen, you both look wonderful. If you're ready, we shall escort you down to the Great Hall for the commencement of tonight's festivities.\" \n\nDante broke character and hugged Astrid while Lily hugged Bryn before Lily put her face back on and responded. \n\n\"Thank you both, and we think you both look wonderful as well. We are indeed ready, and we are pleased to be escorted to the Great Hall.\" ",
        "Astrid and Bryn led the way, as Dante carefully helped Lily navigate the three levels down to the Bastion and into the Great Hall. \n\nThe Great Hall, formerly known as the Count's Hall, was a marvelously grand structure that covered the entirety of the south wing and was large enough to house the entire Pack, six hundred strong. Absolutely stunning were the ribbed vaulting adorned with grisailles depicting the original Champion and his Great Love, and the birth of the Lycan race. The ribbed vaulting and arched windows were supported by eight free-standing red marble columns. Sconce lighting, plus three exquisite and grand chandeliers from Austria illuminated the entire hall. For tonight's festivities, dozens of massive long oak tables and benches filled the Great Hall, with one long grand table situated at the back of the Hall for Dante and Lily and a few others to sit. It had been decided for tonight that Dante and Lily would be joined by Astrid, her mate William, and Bryn as bodyguards and close friends, and the remaining seating would be occupied by the ten Elders of the Pack. \n\nThere was a small string orchestra off in one alcove to provide music during the evening. As Dante and Lily entered the Great Hall the whole Pack stood and bowed to them and the orchestra burst into some rousing music while Astrid signaled them to stand in place until it was over. The melody was unfamiliar, but it had hints of Wagner's 'Ride of the Valkyries'. Astrid explained quietly in their ears that the piece had been composed by a member of the Pack in their honor and she hoped they would permit it to be played in future for all their formal entrances. It was called 'Rise of the Guardians'. It was soon finished, about a minute long. They then made their way down the center aisle to clapping and cheering as William joined the procession, taking his place by his mate's side as the Royal Couple was led to the head table. Ancient and grand black walnut and leather chairs, each intricately hand carved with wolves, plus the moon at the top of the chair backs, were pulled out for them by Astrid and Bryn so that Lily and Dante could take their seats. After Dante and Lily were seated the rest of the Hall took their seats as well, with the Elders filing up and taking their seats on either side of the five sitting in the middle. Dante felt it was appropriate to say a few words so he stood, and in his deep rich timbre spoke to the Pack, his words filling the Great Hall. \n\n\"Thank you all, and welcome to the first celebration of the original Pack of the Lycan race made whole for the first time in a thousand years! We are blessed to be here with you all! Tonight is for us to feast and to celebrate as we reflect on ancient wrongs made right, and the return of Luna's Light to our kind. Long has this day been in coming, and it is finally upon us all. There are trying times ahead: it will be a long and difficult path that our Goddess has laid out before us. But we will all soldier on, united as a Pack as Lily and I lead you and the rest of our kind into a new era of peace and prosperity for all Lycans who would honor our Goddess and follow Her path! Love, strength, understanding, support and leadership will be given to all who honor Luna, and may our enemies choke on the ashes we leave in our wake, for I shall have no mercy for them. My Pack, I invite you to sing, eat, drink, laugh and dance the night away. Our Pack is made whole. Let the feast begin!\" \n\nAt Dante's proclamation, the large kitchen staff wheeled in cart after cart overflowing with delectable food, and hand-crafted treats and drinks. Within a few minutes, all tables were piled high with food and drink, and the feast was underway as the orchestra began playing again. Since it was intended as background music, hundreds of conversations almost drowned it out as they played selections of primarily Viennese waltzes and German polkas. But at one point all conversation stopped for a couple of minutes while they performed Shostakovich's Polka, which sounded very strange, yet was clever and immensely entertaining. \n\nThe head table where Dante and Lily sat was overloaded with all kinds of food. Roast turkey, rack of lamb, standing rib roast, salmon, shrimp, lobster and a multitude of delicacies and side dishes were shared by everyone at the table as with Astrid's approval (Dante quietly asked) serving bowls and such were passed around in an informal family style. Platinum goblets had been placed before Dante and Lily which were embossed with the seal of the Silver Guardian and howling wolves. Dante's was filled with a remarkable vintage of Pinot Noir while Lily's was filled with non-alcoholic sparkling blackberry cider in respect for her pregnancy. \n\nEveryone at the table dug in, although Dante and Lily also took advantage of the occasion to begin getting to know the Elders sitting with them. Well over an hour later once everyone had finished eating, the tables were moved out of the way and the dancing began. Lily and Dante started it off, showing off their skills to the delight of their Pack, although some of their normal moves had to be limited to accommodate Lily's gravid state. Once their initial dance was finished, the Pack joined in and the celebration continued long into the night before Dante and Lily finally retired, Lily exhausted from her pregnancy catching up with her. \n\nThey began heading towards the exit, but Astrid plucked Dante's sleeve to get his attention and shot him a look clearly saying, Not so fast, Buster! So the Royal Couple waited semi-patiently while Astrid waved Bryn over so they could be escorted upstairs with proper decorum. \n\n*** \n\nDante and Lily slept in after the long night of celebration, as did (to be fair) most of the Pack. They were just beginning to stir when they heard what was becoming a familiar knock at their door. They rubbed the sleep out of their eyes and threw on their robes before going over to answer it. Of course it was Astrid at the door. She acted as if she were the only one besides themselves who had access, but in truth any of the Hellhounds had clearance to come and go, since they had the duty and privilege of keeping the Royal quarters impeccably turned out. Astrid had assigned herself the job of serving as principal escort/bodyguard for the Royals partly because everyone knew she was the most bad-ass of all the Hellhounds so was the most qualified to protect them, but also because she loved looking after them. \n\n\"Good morning my lieges, we have breakfast waiting for you in the living room, and we need to get you up and running for the day. At Noon we're holding the Pack Bonds ceremony, then after that Lily is scheduled for her checkup with the Pack Doctor.\" \n\nDante and Lily both yawned before Dante responded. \n\n\"Good morning, Astrid. Thank you for the wakeup call and for breakfast; we'll be right down.\" \n\nWith that Astrid excused herself, and Dante and Lily put on some comfortable lounging clothes before making their way down a level to the living room, where Astrid and one of the kitchen staff (who Astrid had escorted up) were laying everything out. The selection was one of Dante and Lily's favorites, consisting of Eggs Benedict and hash browns with bacon, since both Dante and especially Lily this late in her pregnancy ate a small mountain of food at every meal. \n\nAs they ate, Astrid briefed them on their upcoming day, explaining that while they were in residence at the Castle, not only would she be their chief bodyguard, but she'd also assigned herself to act as a personal assistant for them, especially as they acclimated to life here. Not only was Astrid the head of the Royal Bodyguards the Hellhounds, but she was the General in charge of their forces, with Bryn, Hilde and Freydis her top Lieutenants. She took her orders directly from Dante and Lily, and otherwise was in overall charge of the security and armed forces of the Pack. Her mate William was already carving a place for himself in the Pack as an electronics expert, and as a Beta in their forces reporting to Astrid herself. She had a wicked gleam in her eye at the mention of William reporting to her, and Dante and Lily couldn't help but chuckle at some of the things she would surely put him through on occasion. Lily couldn't restrain herself from making a quip about William getting revenge in the bedroom, and that she might have to buy him a small whip to help keep Astrid in line. Astrid just licked her lips and smiled broadly, then went on to explain how the Pack Bonds ceremony would unfold. \n\n\"Once you two wrap up your breakfast and have a chance to shower, I'll have a few of the Hellhounds join us in your suite to outfit you in your ceremonial garb. All our soldiers will be wearing their military best, while the civilians of the Pack and the Elders and children will be in their personal best. Dante, for you we have specially constructed armor that our finest smiths have been working on since we learned of your and Lily's existence. We'll also have your standard weaponry laid out for you. Lily we also have armor for you, though due to your pregnancy your breastplate cannot be worn, so as a temporary measure, our best smiths have forged a titanium bodice that covers your chest and back but leaves your stomach free. You also will have your personal weaponry fastened to you just like Dante will. Several weeks after you give birth, we'll do your final fitting of your breastplate to match the rest of your armor. At formal and official functions of great importance, this is what you each will wear. Think of it as your Royal Dress.\" \n\nDante and Lily's eyes bulged a bit, not having remembered this little item of what they were to wear for official functions. But when in Rome... or Germany in this case. \n\n\"Once you're ready we'll escort you to the Hall of the Moon, where the remaining sixteen of your Hellhounds will come first; they're your most loyal and capable servants and guards, and they'll be bound to you before the rest of the Pack is. After that will come the Pack Elders, and then the rest of the Pack will cycle through. There are just over 600 Pack members, so pace yourselves; it will take a significant amount of time. Only one drop of blood from each of you for each wolf will do, especially with how many members of our Pack there are and how precious your blood is. After the ceremony is completed, you may retire for a while, I suggest you take it easy in your living room and library, and then it will be time for Lily to have her checkup. I just dumped a lot of information on you both shortly after you awakened, so would you like me to repeat anything, or do you have everything down?\" \n\nDante and Lily checked with each other through the bond, assuring each other they were good before Lily responded. \n\n\"We're all set. We'll wrap up breakfast and then we'll shower and wait in our suite for you and the other Hellhounds. Let's get to it.\" \n\n*** \n\nAfter their shower, Lily and Dante returned to their room wearing their robes and put on their underwear. Just as they finished doing that, Astrid knocked on the door before entering with Hilde, Bryn and Freydis, who were carrying their ceremonial garments and armor. They all bowed to their King and Queen before Astrid spoke. \n\n\"We all wished to be here for this moment, as the companions who've been with you since our first meeting. It's time, my King and Queen. Let's prepare.\" \n\nFreydis and Hilde helped Dante into his fitted leather pants which were heavy since they were adorned with platinum-embossed wolf's claws running down the sides with Celtic knotwork interspersed here and there. He next stepped into his boots, also heavy with steel and platinum plated full gauntlets that Freydis buckled for him in back; they fit perfectly. Hilde helped him into his silver and black tunic, which fit snugly around his arms and torso to provide a visual accent to his armor and to protect against chafing. Next they secured the platinum-plated solid steel breastplate around his chest with his hand-carved seal on the breast and angel wings on the back, plus a stylized lily near his neck representing his mate. They then secured his pauldrons to his breastplate to cover his shoulders; they were embossed with wolf heads complete with fangs. They then attached a bracer to each arm with triangular ridges in a pattern that almost looked like a spine. They then slipped his platinum-plated steel gloves lined with black leather onto his hands, and finally strapped Twin Moons on each of his hips and strapped his tanto blade to the underside of his left forearm's bracer. (No way would he be shifting while wearing so much armor, so his weapons harness was omitted.) When he was ready, they sat him down and pulled his hair back into a high ponytail, securing it with his wolf's head ponytail holder, and extracted the moonlight-silver strand from his temple to drape down the side of his face. Onto that they threaded two platinum wolf's head hand-carved beads plus a third bead carved to look like a lily, the three beads representing his two unborn children and his Great love. \n\nWhile Dante was being suited, Astrid and Bryn prepared Lily. Bryn helped her into her heavy black leather pleated war skirt. It hung down just past her knees; each pleat ended in an arrow point, and to it was attached a strip of platinum-coated steel to protect her and to accent the garment. Astrid helped draw her tunic over her head and belly; it was black with emerald green accents and was fitted close to her skin, accenting her armor, but also serving to protect her skin against chafing just like Dante's garments. Bryn next helped her step into her knee-length boots. They were covered in vertically ridged strips of steel with emerald green plating. After that, Astrid and Bryn helped Lily into her modified breastplate that was steel and coated in a beautiful emerald green. It covered her ample breasts, and also wrapped around her back. On her left breast was a hand-tooled lily, and up near her neck was a duplicate of her mate's seal. On her back, once again matching her mate, was a pair of hand-tooled angel wings. Upon her shoulders they attached her pauldrons which like Dante's, were embossed with snarling wolf heads complete with fangs. They then attached her bracer gauntlets with arrow-pointed plates wrapping around her forearms with lilies hand-tooled into them, again in emerald green. Her final items of apparel were her gauntlets. These were much daintier than Dante's, but equally protective. They were made of black leather covered in emerald-green-plated steel that allowed her full movement. Finally they strapped her twin daggers to her hips in custom tooled leather sleeves with platinum accents. Astrid sat her down so she and Bryn could weave her hair into an intricate braid down her back before teasing out the moonlit silver streak at her temple, freeing it to hang down, framing one side of her face. Like her mate's, around it they threaded three hand-carved platinum beads. Two wolf paw-print beads for her unborn children and a final bead carved into the likeness of a ferocious wolf for her mate. Astrid and Bryn then took some time at Lily's vanity to adding the final touches to Lily's makeup before both she and Dante were ready. \n\nBecause of all the armor it included, their formal garb was heavy enough to incapacitate almost anyone else, but the two Royals were able to manage walking. Not completely easily, but easily enough that wearing it for a few hours wouldn't exhaust them. Dante and Lily walked in front of a hanging tapestry depicting a battle scene and posed regally side by side while Astrid took a few pictures. \n\n\"I'll have the best one of these printed and framed for you two to hang somewhere. You both look so powerful and regal, just like the true Alpha King and Alpha Queen that you are: royal, majestic and awe inspiring. This formal battle gear, while impractical in a real battle given your unique abilities, will be perfect for the Pack and for official occasions. Now let's make our way to the Hall of the Moon.\" \n\n*** \n\nDante and Lily stood before the altar in the Chapel as the sixteen as-yet-unbonded Hellhounds in their polished red armor and gleaming weapons stood at rigid attention in front of them in a semi-circle. Astrid, Bryn, Freydis and Hilde flanked the Royals, two on each side. Lily spoke to their highest ranking guards. \n\n\"Hellhounds, you are our most trusted and loyal guards, set above all others that you may be the principal ones to protect and counsel your King and me. We shall rely on you, at times to the fullest extent of your formidable abilities, but we shall also be with you, to love and support you, come what may. We ask for your eternal loyalty and absolute trust in all situations. You are our spear and shield against our enemies, and our last line of defense; you must not fail. We require that you be fair and just at all times, and that you serve with honor and distinction. You eight wolves and eight she-wolves are the pride of the Royal Pack, and you must conduct yourselves as such. Do not disappoint yourselves or us. I say all these things to you not in reprimand, but with love and in full confidence that you're up to the task. \n\n\"When we call your name step forward and kneel, and you shall receive our blessing to form the Alpha and Pack Bonds.\" \n\nDante called out their names one at a time. \n\n\"Dane Frigard\" \n\nDane stepped forward and kneeled before his Alphas. Dante removed the gauntlet from his left hand and handed it to Bryn, who was standing on his right as Lily duplicated his action, handing hers to Astrid on her left. Dante drew his tanto and ran it across his palm, as Lily did the same with one of her daggers. Consecutively they formed their hands into fists above Dane's mouth and a single drop of blood from each of them fell into his mouth. In the backs of all three of their minds they felt the Alpha and Pack Bonds snap into place. Lily spoke her command. \n\n\"Rise Dane, and begin forming a rank at our backs.\" \n\nWith that, Dane got to his feet and went to stand at a midpoint behind Lily and Dante. Dante called out the next name and they repeated the ritual through all sixteen Hellhounds as the newly bonded Hellhounds gradually formed a new semi-circle behind their King, Queen and the four highest ranking Hellhounds. Ritually this symbolized their King and Queen's trust that these soldiers would never betray them and henceforward they would guard their backs. (Unsaid was the fact that Dante and Lily had not yet learned the names of all their Pack members, and Astrid was silently feeding them the information through the Pack Bond. Once each new Pack member's bond was established however, names were no longer an issue: it was as if everyone was wearing prominent name tags, and many other personal details about them were immediately apparent.) \n\n\"Asta Havard\" \n\n\"Balder Aze\" \n\n\"Bodil Estur\" \n\n\"Calder Gonnor\" \n\n\"Brenna Osmond\" \n\n\"Destin Rabec\" \n\n\"Eirika Ozouf\" \n\n\"Einar Varanger\" \n\n\"Fell Iyver\" \n\n\"Gunnar Turgot\" \n\n\"Gyda Turgis\" \n\n\"Halvard Hastain\" \n\n\"Hella N\u00e9el\" \n\n\"Hammond Anger\" \n\n\"Iona Harou\" \n\nWhen this stage of the ritual was completed, the sixteen Hellhounds were lined up in a semi-circle behind Dante and Lily, with their most trusted General and Lieutenants Astrid, Bryn, Hilde and Freydis flanking the Royals. At that time the ten Pack Elders, wearing floor-length academic-style robes in royal blue, entered the cathedral to stand before Dante and Lily. Again, Lily was the one to speak to them. \n\n\"Pack Elders, you are the keepers of our history and our source of wisdom in the Pack. You five men and five women shall be trusted to counsel us and to help us guide the Pack as we continue to grow and walk our Goddess' path. Your duty is to help raise the next generation and to teach wisdom and patience to all members of the Pack through careful consideration and thought. You shall keep records of our deeds, continuing our written history as the Order of Fenrir leads our kind into a new era. ",
        "\"When we call your name step forward and kneel, and receive our blessing to form the Alpha and Pack Bonds.\" \n\nAgain the ritual was conducted with each Elder as their names were called. Unlike the Hellhounds, the Elders each returned to where they had been standing. \n\n\"Elder Jarl H\u00e9rou\" \n\n\"Elder Jorunn Onfroy\" \n\n\"Elder Haskell Qu\u00e9tel\" \n\n\"Elder Helka Trudeau\" \n\n\"Elder Keld Torde\" \n\n\"Elder Nanna Onfroy\" \n\n\"Elder Kirkwood Renouf\" \n\n\"Elder Oili Youf\" \n\n\"Elder Loki Harang\" \n\n\"Elder Runa Turgard\" \n\nEach time an individual's ritual was completed as blood touched an Elder's tongue, everyone already bonded felt the newly formed Alpha and Pack Bonds snap into place. The more inclusive the Pack and Alpha Bonds grew, the more comforting it felt to everyone included and the deeper their sense of family became, especially for Dante and Lily, who were assuming personal responsibility for each member of their Pack. When bonding was completed for the ten Elders, Dante spoke. \n\n\"Please be seated in the front rows of the Hall of the Moon and observe the remainder of the Pack receiving our blessing and Bonds.\" \n\nWith that, the Elders took their seats in the front pew and the initial group of the rest of the Pack, twenty-five wolves, filed in and underwent their bonding one at a time. It took a very long time as the more than 600 men, women, and children kneeled before their Alphas one at a time. With the incredible, even by Lycan standards, healing abilities of Dante and Lily, they were required to reopen the wounds in their palms countless times to bond the entire Pack, but it was fully worth it. Once each group had been bonded, they seated themselves in the hall to observe. Even though the entire ceremony took over two-and-a-half hours, it didn't become tedious for even the smallest children as they each experienced the growing numbers of the Pack within their bond. By the end, Dante and Lily could sense every single member of their pack like a network in their minds, and this gave them a sense of comfort, unity, family and responsibility. For the first time, they truly felt like the Alphas they were, and the Royal Pack was made whole for the first time in a millennium. It was a joyous day for everyone in the Order of Fenrir Pack. \n\n*** \n\nAfter Dante and Lily had retired to their tower suite, they were assisted out of their armor, which was then mounted on two specially constructed stands in the library, and they took their lunch. Their armor had been extremely heavy to be wearing for such an extended length of time even for them, so Lily and Dante were both tired, and they took a short nap before Astrid awakened them, informing them it was time to go see the Pack Doctor for Lily's checkup. They made their way down their tower and through the bastion out into the courtyard before entering one of the other palatial buildings and walked into the Pack's medical center. Walking was so much easier without that heavy formal armor to lug around, they almost danced their way along! They were greeted by an older pair of wolves who were the Pack Doctor and his mate, who like in the O'Connor Pack, served as his Nurse and assistant. \n\n\"Good afternoon Alpha King Dante and Alpha Queen Lily. I am Doctor Sven Ericson, and this is my mate and Head Nurse Sylvi Ericson. We'll be taking care of you today Lily, checking on the development of your children the Royal Heirs. Are you ready to begin?\" \n\nLily squeezed Dante's hand excitedly; they couldn't wait to receive fresh news of their twins and to see pictures of them as they continued growing in her womb. \n\n\"Yes Doctor Sven, we're very excited and we'd love to get started!\" \n\nDoctor Sven and his mate led them into an exam room and retired to give them some privacy as Lily disrobed and donned a medical gown. Dante assisted her in climbing onto the exam table and she placed her feet in the stirrups as Dante went to her side to hold her hand as they both smiled excitedly. \n\nLily called out, \"Ready!\" \n\nThe two medics returned into the room wheeling a portable ultrasound machine of the latest make and model; this one could produce 3D images. Sven began with a pelvic exam as Sylvi took her vitals. After the two compared notes, Sven summed it up. \n\n\"Your vitals are very good; nothing out of the ordinary at all. You're in perfect health, as is to be expected. So now it's time for the exiting part: let's see how your little Prince and Princess are doing.\" \n\nSylvi took a warmed tube of jelly to coat the head of the wand as Doctor Sven exposed Lily's stomach and then placed the wand against it, and a picture on the screen came into view. \n\nDante and Lily both gasped as they saw the face of one of their children appear, perfectly formed and so incredibly beautiful and adorable. \n\n\"This is the little Prince, and as you can see, he's nearly fully developed and will soon be ready to make his entrance into the world. His heartbeat is strong and healthy, and there are absolutely no issues to worry about. Let's take a look at the other twin.\" \n\nSven glided the wand around until another face came into view, also perfectly formed and crushingly adorable. \n\n\"And here is our little Princess. You can see how beautiful and precious she is, and just like her brother, she's perfectly formed with no issues. Her heartbeat is just as strong as her brother's, and she'll be ready to enter this world shortly.\"  \n\nHe moved the wand around a bit more, dictating some measurements for his mate to jot down, doing a thorough overall check. One of the special things they saw was that the twins were holding hands within the womb, apparently already inseparable. The proud parents-to-be couldn't help but smile and shed a few proud tears each, upon seeing their children and knowing they were still healthy, whole and happy. \n\nSven rolled the machine out of the exam room while Sylvi cleaned up Lily and draped her gown back over her swollen stomach. Doctor Sven returned and summed everything up. \n\n\"As you can see, you and the babies are doing great, and you'll soon be ready to give birth. That could come as early as three weeks from now or a week or two later, we'll just have to wait and see. This is when the last of their development takes place and when they'll be infused with our race's magic. It's a critical time for them, so it's important that you continue eating enough to give them and yourself plenty of energy, and you should get plenty of rest as well. I'm sure the next few weeks will seem to you like the longest periods imaginable, but your cubs will be with us soon, so just be as patient as you can, and stay healthy.\" \n\nLily and Dante were absolutely thrilled, beyond excited to meet their children. They got up and shook the two medics' hands, thanking them before they were left alone so Lily could change back into her regular clothes. Lily spoke excitedly to her mate. \n\n\"Oh Dante, they were so precious, weren't they?! I can't wait to hold our children in our arms and nurse them and cuddle them and show them both how much we love them. I'm so proud right now! We'll have to show the printouts to Astrid and the others, they'll be delighted!\" \n\nDante hugged Lily to him lovingly as a smile as wide as the Atlantic was plastered on his face. \n\n\"They were absolutely precious, Lily, I'm so proud of you, and so proud to be a father soon myself, too! Growing up an orphan as I did, I always wished for a mother and father, and I'm determined to be the best Dad I can possibly be for our children. I can't wait to hold them in my arms and hug and kiss them for the first time! I love the names we picked out for them, but also love that we're keeping those names private until they're born. Our little Prince and Princess will be so loved and surrounded by such a protective and loving Pack and family, not to mention their Mother and Father and Grandparents. They'll be cherished and kept safe as they mature, I pledge that to be true, and I know we'll both do whatever it takes for that to happen. Let's get back to our suite. It's nearly time for dinner in the Great Hall, and we'll be eating with those in the Pack that live on the castle grounds. I love you Lily, and I'm so proud of you. I know you'll be the very best Mother ever!\" \n\n*** \n\nThank you all for your patience with me on this latest chapter of the Silver Guardian. Life got very complicated for a while, but I'm back and writing, and this is the longest chapter yet. I hope you enjoy reading it as much as I enjoyed writing it, and you enjoy all the twists, turns and surprises this time around! Please remember to vote and comment, as I can't wait to hear everyone's reactions to this latest installment. Thank you! \n\nP.S. I've created a Legend/Appendix for the Silver Guardian series, to keep track of all the characters as well as information on the books, legends, facts and all sorts of other things referred to in this developing saga. I'll be posting this legend/appendix shortly after I post this chapter. Beware that if you haven't read this, the most recent chapter of Book 2, there are a great deal of spoilers revealed, so view it appropriately."
    ],
    "authorname": "DaddyIrishman",
    "tags": [
        "lily",
        "lycan",
        "pack",
        "seal",
        "war",
        "warrior",
        "werewolf",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/the-silver-guardian-bk-02-ch-06"
}