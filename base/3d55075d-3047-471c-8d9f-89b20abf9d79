{
    "title": "The Offer",
    "pages": [
        "DISCLAIMER: If you're looking for \"quick sex\", please move along. This is a \"story\", and there's something to be said for 'anticipation'. You have been warned!\n\n\n\nThere isn't a time of year I love more than summer. Warm weather, plenty of sun, time at the shore, flowers in my garden, kids outside. I especially relish the last one. The kids are out of school, but both of them are old enough now that they spent most of their time over friend's houses. This allows me to spend less time cleaning up after the messes they always seem to create, and more out in the warmth of the sun.\n\nIt was a lovely July Saturday, and I was tending to the multitude of flowers that surround my front porch. Without fail, there is always an annoying collection of weeds, leaves, bugs, or some other hazard to my lovely flora that needs taking care of. I can quite literally spend the entire day arranging, pruning, fertilizing and pampering my prized possessions. \n\nI sighed, though. It was a Saturday, and the one thing that was missing was the familiar sound of the lawn mower running in the back yard. Actually, that had become something of a trend the last few weeks. My husband, Paul, had been doing home renovations for a couple of his co-workers since the second week of June. He spent almost every Saturday and Sunday, as well as some weeknights, doing a number of major jobs he'd been offered.\n\nNot that I was complaining. The owners were paying him an excellent salary. And Lord knew we could always use the extra money. But I still missed his company around the house. Despite being married now some eighteen years, I love him just as passionately as the first day I'd met him. And his job keeps him away enough as it is. \n\n\"Actually, that's not the biggest problem,\" I thought to myself. \"The thing that drives me crazy is that he's working for two women.\" I knew I shouldn't think that way. Paul has been faithful to me, and was completely up front with me when the two women had first offered him the job. \n\nErin and Valerie were secretaries in the government office building he supervised during the day. They were both single, Valerie having divorced once, Erin not even dating, as far as Paul knew. Add to it that both of them were in their mid-twenties, and I couldn't help but wonder sometimes. I hadn't actually met either one of them in person, but they had called the house and spoken with me occasionally on the phone. They seemed nice enough and they'd often invited me over to see the work Paul had been doing. I just didn't want to give the impression that I was jealous and/or just a bit suspicious at times, so I'd politely declined.\n\nI was broken out of my reverie by the sound of a truck pulling into the driveway. At first, it has sounded like Paul's pickup. But, when I lifted my head from the ground, I spotted an unfamiliar beige Ford SUV. The doors opened, and two young women hopped out of the doors. They smiled and waved, immediately heading over to me.\n\nThe driver was almost five inches taller than my five-six. Long straight blonde hair streamed out behind her, which looked as if it hung to mid back when still. She wore dark sunglasses and showed off a deep tan. The passenger was only an inch or so shorter than me, with a short cut, light brunette hairstyle. The style reminded me of the one wore by Catherine Bell, the star of TV's \"Army Wives.\" It didn't so much as curl under as it 'rolled' under gently, framing a graceful jawbone and piercing blue eyes. Both women wore sundresses, the blonde a beige color similar to the SUV, the brunette an emerald green number.\n\nI immediately felt somewhat self-conscious. Compared to these two attractive women, I must have looked like the typical house Frau. Knowing that I would be working in the weeds and dirt, I'd opted for a pair of grungy old blue jeans and a beat up gray sweatshirt. My hair, which was permed in a loose wave normally, was pinned back to keep the hair out of my eyes. I had mud and dirt everywhere on me. As they two approached, I wiped my hands furiously on a rag I'd kept in my pants pocket.\n\nThe blonde got to me first, removing her sunglasses. \"Donna?\" she asked in a husky voice.\n\n\"That's me. Can I help you?\"\n\nThe woman put her hand out. \"Valerie Hammond. I'm one of the women who've been making Paul work like a dog.\" She smiled easily, and I noticed now that her eyes were a warm mocha in color. \n\nThe shorter woman stepped forward and extended her hand. \"And I'm Erin Seaward. The other half of the Twins, as we've been dubbed by your husband.\"\n\nI shook her hand as well, noticing that her hands were very smooth. I grinned inwardly, thinking, \"obviously not a person used to getting her hands dirty.\" \n\n\"Yeah, I've talked to each of you on the phone recently, but this is the first time I've had the chance to meet you. You're both as pretty as Paul said you were.\"\n\nErin blushed, but Valerie took the comment in stride. \"Tell him that compliment still won't get him out of finishing the plumbing in the downstairs bathroom.\" This caused us all to laugh.\n\nI wiped the back of my hand across my forehead, removing the sweat that had collected there. \"\"So, what brings you over?\"\n\n\"Well, you know that Paul is almost finished with the work we've asked him to do. And, trust me, he's done a fantastic job! You're one very lucky woman to have such a talented husband.\" Valerie winked. \"Is he that talented in everything he does?\"\n\nI grinned and whispered, \"I'm not telling. Don't want to give away any secrets.\"\n\nErin's eyes seemed to widen with the unspoken 'yes' the comment hinted at. Valerie sighed. \"Wish my former husband had been like Paul. I'd be one happy girl if he had.\"\n\n\"Yeah, Paul has mentioned that he was a scumbag, pardon my language. You're better off without him.\"\n\n\"You're not kidding! Good thing we didn't have any kids. It just would have made getting rid of him that much more difficult.\" She looked around and admired the foliage. \"You've done a fantastic job here. Real green thumb, huh?\"\n\nI shrugged. \"I try.\" I nodded towards the house. \"Care to go inside and get something cold to drink?\"\n\nErin nodded. \"Please! Unlike the 'bronze queen' here, I'm not a big fan of heat and humidity. Give me winter and a nice warm fireplace, and I'm a happy camper.\"\n\n       ******\n\nOnce inside, I took a few minutes to clean up and got everyone sun tea to drink. We sat in the living room. I was perched on the edge of Paul's recliner, while Erin and Valerie shared a seat on the couch. \"So, what can I do for you two ladies?\" I asked again.\n\nValerie, who seemed to be the \"leader\" of the two, set her drink down on the coaster in front of her and placed her hands on her crossed knees. \"How much as Paul told you about us?\"\n\nI sat back and frowned. \"Not a whole lot, to be honest. I know you both work with him, and I know you're both single. Other than that, not a whole heck of a lot.\"\n\n\"Well, to start off, I just want you to know there's nothing going on between either of us and Paul.\"\n\nI nearly spit the soda out of her mouth as I sat forward. \"I'd never even think such a thing!\" (\"Liar!\" I thought to myself)\n\nErin tilted her head. \"It's OK, Donna. Trust me, if I had a husband, and he spent a lot of time doing work over a house with two single women in it, I know I'd be at least somewhat suspicious.\"\n\nI was about to protest again, but there was something about the honesty these two were showing me that caused me to open up to them. \"Well, to be completely honest, there have been times...\"\n\nValerie nodded. \"It's OK, we understand. We should have stopped by a lot earlier and put your fears to rest.\" She reached over and took Erin's hand in hers. \"See, Erin and I are lovers.\"\n\nFor the second time in the last minute, I almost choked on my drink. This time, however, I was able to cover my full reaction with a cough. \"So you're...?\"\n\n\"Lesbians, yes. Or to be more exact, I'm lesbian; Valerie here is more along the line of bisexual.\" Erin glanced at her partner. \"I never have understood why you can't make up your mind one way or the other.\"\n\nValerie shot her an amused look. \"Don't knock it unless you've tried it, hon. There's something to be said for both sexes in the sack.\"\n\nI waved a hand, not wanting to get into THAT topic. \"OK, I get the idea. But what does that have to do with me and Paul?\"\n\nValerie took the lead. \"Well, no one at work knows about us, and we'd like to keep it that way. Some folks don't react well to our choice of lifestyle.\"\n\nI nodded. \"Yeah, my sister once had a fling with another woman, and my mother didn't speak to her for three years.\"\n\n\"Exactly. Some people can handle it, some can't.\"\n\nI relaxed a little. \"Well, your secret is safe with me. While it's not my thing, as long as you two are happy, that's all that counts.\"\n\nValerie smiled. \"Paul has said that you don't have a problem that way. Which is why we should have come over earlier and let you know that we'd never even think about making a move on him.\" She looked sideways at her friend. \"However, by his reaction at times, I can see the idea has HIS attention.\"\n\nI snorted. \"Typical guy. There's something about lesbians and having two women at once that seems to run in the species.\"\n\nErin shot Valerie another look. \"Well, that's kinda the other reason we're here.\"\n\nAn alarm went off in my head at Erin's comment. \"I knew it!\" my mind screamed. Outwardly, I betrayed nothing. \"I'm not following you.\"\n\nValerie stood and began to move around. \"Donna, because we KNEW nothing would happen with Paul, we've had the occasion to innocently tease him about his sex life. Nothing bad, trust me. Just the usual stuff about 'Isn't it every guy's fantasy to be with two women?' Well, one day when Erin said that, he told us he'd love to, but you weren't into that sort of thing.\"\n\nAnger swelled inside of my chest. \"How DARE he discuss anything about our personal life!\" I seethed inwardly. I was going to take this up with him the first chance I got.\n\nErin picked up right away on my mood. \"Don't be mad at him, Donna. He didn't say it in a mean way. Matter of fact, I'm sure if you asked him about that comment, he probably wouldn't even remember it. We've been able to kid around about him on a lot of things. The one thing he always make perfectly clear, though, is his love for you, and the fact that he'd never do anything to hurt you.\"\n\n\"Still, that's not the sort of thing that exactly makes me happy.\"\n\nValerie stepped back in. \"You know how guys get when you tease them about their manhood. It was all in good fun, Donna. Honest.\"\n\nThe look on their faces made that point clear. Once again, their naked sense of honesty won out. \"OK, so I won't kill him right away.\" I looked back and forth between the two of them. \"That still doesn't explain what you want to tell me otherwise.\"\n\nErin looked like she has having a hard time finding the words, so Valerie came right out with it. \"We want to offer him the chance to be with two women. Sort of a 'Thank You' for all the work he's done.\"\n\n\"What?\" I was shocked and pissed at the same time. \"Did he AGREE to this?\" I spat.\n\n\"He doesn't even know we're over here, Donna! That's just the thing. Erin and I were talking about this one night, and we both agreed to come to you first. Before we even thought about making an offer to him.\"\n\nErin nodded emphatically. \"Yeah. Because, we know all too well that he'd never have the stomach to do anything behind your back, no matter how inviting the offer might be.\"\n\nI was stunned. For a lack of anything better to say right that second, I asked, \"What makes you think he'd do it, even if I agreed?\"\n\nValerie shrugged. \"That's just the thing: When Erin and I first discussed this, we thought the best thing would be for me and YOU to be his threesome. This way, he wouldn't feel any guilt at all.\"\n\nI looked over at Erin. \"You'd agree to this? Having your girlfriend sleep with another couple?\"\n\nShe nodded. \"If it made her happy, of course! I'd do anything I can to make Valerie happy.\"\n\nValerie continued. \"It HAS always been a fantasy of mine, as well. I've never had sex with more than one person before, and the thought of two strangers working on me makes me horny as hell!\"\n\nI couldn't believe what I was hearing. \"So, you're telling me you want to be with me and my husband?\" I shook my head. \"I'm sorry, Valerie, but I'm just not into that sort of thing.\"\n\n\"We kind of figured you wouldn't be. But we thought we'd ask anyway.\" I was about to get up and escort them to the door when Erin blurted out the next bombshell.\n\n\"That's why we BOTH came over here to ask you if Valerie and I would be OK instead of you and her.\" She looked over at Valerie. \"Trust me, I'm not real big on the idea of being intimate with another man, just like you wouldn't be with another woman. But if there is the chance here to satisfy your husband's fantasy, and MY lover's fantasy at the same time, can either of us really afford be that selfish?\"\n\nMy head was reeling. Erin's words held a certain ring of honesty and truth. This would allow both Paul AND Valerie to do something that might be a once in a lifetime thing. And I didn't have to actually DO anything, except allow Erin to join them. Still, the fact that Erin was willing to make that sort of sacrifice and I wasn't made me feel just a bit guilty.\n\nBefore I could respond, Valerie added another thought. \"Make you a deal. If you allow Erin and me to do this with Paul, we'll agree to allow you in there while it's happening, so you could stop anything you didn't like.\"\n\n\"I don't like the idea at all!\" I thought defensively to myself. I didn't think being a spectator would make this any better. I couldn't believe my day had gone completely haywire like this.\n\nValerie tried to sooth me over a bit. \"Look, we're not going to pressure you into anything that you're THAT against. I don't want you thinking we're monsters! If you say no, then the whole things off, and Paul will never be the wiser.\"\n\n\"Yeah. And it's not like we'd hold it against you. I mean, I have a feeling we could be really good friends, given the chance.\" Erin's gaze bore into me, an almost pleading gleam in her eye.\n\nI looked at the two of them and sighed. \"Part of me wants to throw you both out on your asses.\" She sighed. \"But the rest of me appreciates the fact that you've come and even offered me the chance to give my 'blessing', as it were, instead of just doing it and hurting me.\" I closed my eyes. I knew they were waiting for a decision, but I just wasn't ready to commit one way or the other on ANYTHING at that moment. \"Just... Let me think about it, OK? I mean, it's a hell of a lot to hit me with all at once.\"\n\nValerie smiled. \"That's all we can ask, Donna. Please, don't feel pressured into rushing to a decision. Take your time.\"\n\nErin nearly sprinted over and and gave me a big hug. Maybe it was the entire tone of the conversation, or some dark, perverted part of my soul, but I actually took notice of the way her breasts pressed against mine. \"Plus, the three of us can spend some more time together, get to know each other, maybe become friends. What do you say, sweetie?\"\n\nFeeling as if I was caught in a riptide that was pulling away my sanity, I nodded. \"OK. I'll give it an honest thought. But no promises!\"\n\n      ******\n\nThat night, Paul came home, exhausted. He'd stayed late at the girl's house to finish up the last of the work he'd been in the middle of from the previous week. He'd barely had the energy to stand in the shower, poor guy! Afterward, we'd had some of the chicken I'd made for dinner. Time seemed to speed by, and the kids slowly made there way upstairs to get ready for bed.\n\nBut all during that time, I was distracted. The events that had taken place that afternoon kept spinning around in my head, like dogs do when chasing their tails. On the one hand, the entire proposal went against everything that I believed in sexually. I mean, there had been times when Paul had joking suggested a threesome for his birthdays over the years, but he knew that there was nothing about other women that I found attractive or appealing, at least on a sexual level.\n\nStill, something Erin had said about doing something to make her partner happy, by living out a fantasy, kept forcing it's way to the front of my head. Was I that selfish of a person that I'd deny my husband an experience that most men would kill for? And I could REALLY get off easy! I didn't even have to do anything but say, \"Yes\", and that would be the end of my obligation. Erin and Valerie would take care of everything else. But could I let something like that happen, and have to live with the knowledge that I'd approved it? I couldn't help that I'd feel left out, jealous, missing such a memorable experience in his life. \n\nCould I really be so selfish and say \"NO\"? Could I really be so crazy as to say \"YES\"? \n\nWe were in bed that night. I could tell that Paul would have no problems falling right to sleep. But I was tossing and turning. This problem was starting to take up all of my time and attention.\n\nI rolled over and ask my husband, \"Honey, are you awake?\"\n\nHe grumbled and responded, \"Well, I am now.\"\n\n\"Would you ever do something for me that you knew I would love, but you would hate?\"\n\nHe rolled over and propped his head in his hand. \"What are you talking about?\"\n\n\"Let's just say I wanted to... I don't know... hold a Tupperware party here in the house, and asked you to help me, would you mind?\"\n\nHe stared at me for a few seconds. I knew it was a stupid question, and I could see his one eyebrow go up in confusion. \"Why in the hell would you want to have a Tupperware party? Does that stuff even exist anymore?\"\n\n\"That's not the point. Would you?\"\n\n\"I suppose so. Why? What's up?\"\n\nI wanted to tell him so bad, but I stopped myself at the last second. \"Nothing. I was just wondering. Go ahead to sleep, hon.\"\n\nHe shook his head and turned over. I could hear him mutter, \"And they wonder why some men turn gay.\"\n\n      ******\n\nI wrestled with the idea for the next few days. Each and every time I saw Paul, I thought about him being sexually pleasured by Erin and Valerie. I thought about how happy he would be, but I often wondered how he would feel. Would he even go through with it? Would he consider it cheating on me? It was at that point that I knew I had to make a decision one way or the other, or I was going to drive myself crazy.\n\nIt was Friday morning, and the kids were already off to their friend's houses to go swimming. I decided to take a little ride myself, over to my best friend Fran's house. As usual, I found her sunning herself on her backyard deck, her skin already a golden color. Frannie is a year younger than me, but still very much enjoying the single life. She had her occasional boyfriend here and there, but she made excellent money with the bank she worked for, and had no need for a \"provider,\" as she often called Paul. \n\nI walked up on the porch and sat down next to her. She didn't hear my approach, as she had headphones on, and the music blaring away. I took the bottle of water she had next to her chair and poured it directly on her stomach. She nearly jumped off of her deck until she realized it was me. She sat on the edge of her lounge chair and toweled herself off.\n\n\"What the hell are you trying to do? Scare the living hell out of me?\" That was one thing I knew all too well about Fran. Despite her job, and the fact that she dressed like she was a princess, she could swear with the best of people, and was a die hard sports fan. That, of course, had made Paul getting along with her very easy.\n\nI shook my finger. \"One of these days, some maniac is gonna sneak up on you and rape you right in your own backyard,\" I scolded.\n\nShe wiggled her eyebrows. \"Ya think so? It'd be an improvement over my current love life.\"",
        "I grinned. \"Dry spell, huh?\"\n\nShe nodded. \"It's to the point that I'm getting ready to ask if I can borrow Paul for a night, just so I don't get rusty!\"\n\nMy expression became somber. \"Yeah, seems to be a lot of women who have the hots for him right now.\"\n\nShe immediately noticed the change in my tone. \"What's wrong, Don? Did he cheat on you? If he did, I'll kill the bastard.\"\n\nI shook my head. \"Down girl. He's still the same old faithful Paul.\"\n\n\"Then what's with the grumbling?\"\n\nI sighed and settled back in the chair. \"You remember me telling you about the work he was doing for his two co-workers?\"\n\n\"Oh, you mean the two women that probably wanted to fuck him the first day?\" she said teasingly.\n\n\"Yep. Well, turns out I was worried for nothing. They're lesbians.\"\n\nShe burst out laughing. I waited for her to calm down before continuing. \"Actually, the one woman, Valerie, is divorced, and she's a self-proclaimed bisexual.\"\n\nShe shrugged. \"Not so unusual when you stop and think about divorces. I have a few friends of mine who have threatened to go gay after some guy screwed up their lives.\"\n\n\"Did they?\"\n\n\"Nope. They were both dating guys within the next two months. Some women just can't keep their legs closed, I guess.\" She peered down at me. \"So, you never had anything to worry about. Why do you seem so depressed?\"\n\nI couldn't keep it bottled up anymore. I told her everything that happened that Saturday, and my subsequent battle over my dilemma. When I was done, she sighed.\n\n\"Why is it that the married folk have all the damned fun? Honey, you're all worked up about nothing! Do you trust Paul?\"\n\nI frowned. \"Of course I do!\"\n\n\"Then I don't see the problem. You're not the type who would ever agree to anything like that, no offense. But you get to kill two birds with one stone! Paul gets to fulfill a fantasy most guys would have to PAY for. Then, after it's all said and done, he owes you big time! You'll be able to get just about anything you want out of him!\"\n\nI hadn't considered that. \"Yeah, you've got a point there.\"\n\n\"Then what's the problem, woman? Tell these girls 'yes' and get this over with. Because, I know you. The longer this goes on, the more likely you are to change your mind.\"\n\n\"But what about me being there? Should I or shouldn't I?\"\n\n\"Honey, I can't speak for you, but I'd be there watching in a heartbeat! Then again, I'd probably be involved. I've always wanted to try something like that myself!\"\n\nI looked at my best friend. \"Are you sure you're not part male?\"\n\nShe grinned wickedly. \"If I was, I'd rule the world!\" This caused both of us to break out in laughter. \"But seriously, if you feel like you want to be there to keep an eye on things, I'll go with you.\"\n\nI was taken aback. \"Really? Are you sure?\"\n\nFran smirked. \"Damned right! It'll be the most action I've seen in a LONG time. Plus, I'm dying to see if your hubby can perform with both of us watching him. I'm tempted to bring popcorn and an air horn!\"\n\nI chuckled at the mental picture. \"You're bad!\"\n\n\"Yeah, but I've got you laughing, don't I?\" \n\nI moved over and hugged her. \"That's why you're my best friend. Thanks, Frannie.\"\n\n\"You're welcome.\" We stood and she smacked my on the ass. \"Now, get over there and set this up, before you get all wishy-washy again!\"\n\n      ******\n\nThat's exactly what I did that night. I stopped over to the girl's house and broke the good news. They were ecstatic. They were even OK with me bringing Fran along, if I actually decided to be there to watch. We set it up for the following Saturday night, but agreed to let it be a surprise to Paul. We'd disguise it as a small dinner party to celebrate the job being done.\n\nI could barely contain myself for the next few days. Yes, the uneasiness returned once in a while, but I kept in mind that this would be fulfilling one of Paul's biggest sexual fantasies. Also, the thought of having Paul in my debt quickly brought me back around. Maybe I'd finally get that trip to Hawaii he'd always promised me...\n\nI was still on the fence about how long I was going to stay. My thinking was that we would spring the surprise on Paul, make sure he understood that I was OK with it, then head home and wait for him that night. But Frannie kept on me, urging me to stay and watch. Her reasoning was that Paul would probably find it a huge turn on for me to be there, and he would ultimately be more comfortable that way. I told her she was full of crap, and that she just wanted to be a perv and have \"front row seats\" for the sex show. Naturally, she never denied that! \n\nAround seven that Saturday night, we stopped by and picked Fran up. She was decked out in a dark pinstriped skirt and matching blazer, with a silk shirt on underneath. She was slight of build, and not exactly what I'd call curvaceous. But her true attribute was her ass and legs, and this outfit set both of them off to the hilt.\n\nI dressed slightly more conservative. It was a hot night, so I wore a loose fitting sundress, with a peach floral pattern that went well with my hair. The neckline was conservative, but still exposed enough cleavage to make me feel sexy.\n\nWe walked up to the house and the girls were already waiting for us. Valerie wore a form fitting pair of tan slacks that hugged her ass firmly. The ultra tight white tank top she had on showed off her perfect breasts. To my eye, it was hard to miss that she was going without any underwear, top or bottom.\n\nErin dressed perhaps the most comfortable of all. She wore a pair of blue jean shorts that were snug without being obscene. Her button-down powder blue top was tied at the bottom, showing of her belly ring. Her hair seemed to float around her face. I reminded myself to ask her some time how she managed to get such a short haircut to flow so easily.\n\nDinner was a blast. The five of us chatted with the ease of old friends who had known each other for years. I kept an eye on Paul, who seemed to suspect nothing. Occasionally, I did catch him staring at Valerie's breasts. But, when her nipples got hard and stretched against the thin cotton fabric, it was pretty hard to miss.\n\nWe had wine during dinner, except Paul, who had his usual beer in hand. The alcohol helped to loosen everyone up. After the first three drinks, I was even beginning to look forward to how Paul reacted. We had moved to the closed-in patio, enjoying what had turned out to be a mildly temperate summer night for the middle of July. Everyone was enjoying an after dinner drink, as jazz music floated from the recessed speakers Paul had installed for just such an occasion.\n\nValerie got up, and nodded at me. It was time. I felt butterflies in my stomach. \"Anyone up for dessert?\" she asked innocently.\n\nFrannie chuckled. \"I know Paul is. I've never seen him turn down a dessert.\"\n\nHe stretched. \"Yeah, but I still manage to maintain my girlish figure, don't I?\"\n\nThat prompted laughter all around. Valerie took Erin's hand and pulled her from her chair. \"C'mon, honey. Give me a hand, will you?\" And with that, they went back inside.\n\nI leaned forward. \"These two are a riot, Paul! I'm so glad you agreed to do the job for them.\"\n\nFran joined in. \"Yeah, and I have to admit, you've done nice work, kiddo. I'll have to keep you in mind if I ever want any work done.\"\n\nHe settled back. \"I don't know, Fran. I don't think Donna would appreciate the type of 'work' you'd expect from me.\"\n\nShe rolled her eyes. \"Typical male ego. Always thinking with the wrong head!\"\n\nAs she said that, Valerie's voice filtered from the living room. \"Paul, can you give us a hand, please?\"\n\nHe stood and grinned. \"A man's work is never done.\" And he walked back into the house.\n\nI could barely contain my excitement. This was going exactly as planned. Fran and I waited for a minute or so, allowing the shock to set into Paul's brain. Then, right on time, we waltzed in, to find two scantily clad young women rubbing their bodies all over my poor stunned hubby.\n\nHis eyes widened when he saw me. \"Honey, this isn't what it looks like. They made a move on me.\"\n\nI nodded. \"I know.\"\n\nHe did a double take and it took a few seconds for the news to filter in. \"You what?\"\n\nI moved over and hugged my husband. I pulled back enough so I could look up into his eyes, while still partially facing the other three women. \"Valerie and Erin want to fulfill your fantasy of having two women at once. They asked me about it a couple of weeks ago.\"\n\nHe was stunned. \"And you agreed to it?\"\n\n\"Not at first.\" The two girls moved in on each side of me. \"But, after thinking about what I knew you would want, how could I refuse?\" While I was saying this, the two started to let their hands roam over my body, caressing me in spots that no one aside from Paul had ever touched. This wasn't part of the plan, but I went with it, trying my best to ignore their touches. \"Consider it my present to you....\" I stuttered on the last word, as Erin's hand cupped my breast and rolled my nipple, making it stand out against the fabric. I could see the shocked look on not only Paul's face, but Fran's as well. Hell, I was surprised, especially that I had actually enjoyed the touch! \"Go get him girls.\"\n\nWith that, they moved to him and began to massage his body as they had mine. I was amazed that I actually missed their touches when they moved to him. \n\nThey began to move him up the stairs. He stopped and looked back at me. \"But what are you going to do while we're gone?\"\n\nI grinned again. \"Don't worry. We're going to be right there, making sure you have a good time. If that's OK with you, of course?\"\n\nHe gasped. \"You and Fran are gonna watch??\"\n\nFran stepped in. \"What's wrong, stud, can't handle it?\"\n\nWe were at the top of the stairs already, just a short distance from the master bedroom. But before they could push him into the room, Paul stopped and backed away. \"Wait. I need to talk to Donna, privately, OK?\" Before anyone could object, he pulled me into the bathroom and closed the door.\n\n\"What the hell is going on?\" he whispered. \"I feel like I'm in the middle of a damned Twilight Zone episode!\"\n\nI smiled. \"Erin and Valerie asked me last week if they could do this for you. I agreed. What's the problem?\"\n\nHe glared at me. \"I'm stunned that you agreed to it!\"\n\nI shrugged. \"Truth be told, at first, they wanted it to be me and Valerie with you.\" I saw THAT look cross his face and chuckled. \"But you know that being with a woman just doesn't do it for me sweetheart.\" \n\nHe ran his hand over my breasts, where both nipples were now protruding through my dress and silk bra and a small gasp escaped my lips. \"Looks like you were getting a kick out of it downstairs.\"\n\nI frowned. He knew, but I refused to admit it. \"It was just part of the act, honey. You know I'm not into other women.\" But inwardly, I wondered, \"If that's true, why did Erin's touch turn me on so much?\"\n\nHe shook his head. \"I just don't know what to think.\"\n\nI reached up and took his jaw in my hand. \"Then don't think.\" With that, I laid the most passionate kiss I could on him. My whole body tingled as our lips pressed together, our bodies melting into one another. I had the urge to strip him naked myself, but I pulled away and opened the door. \"Now, get out there and enjoy yourself. I'll be right there, rooting for you.\"\n\nHe smiled. \"God, I love you!\"\n\n\"I know.\" I reached down and stroked his penis through the pants. \"Just make sure you save some for me later on, OK?\"\n\nHe nodded and took my hand in his. We walked out into the hallway and both stopped in our tracks. There was Fran, in the middle of a three way embrace. Valerie stood behind her, kissing her neck and running her hands down over Fran's ass. Meanwhile, Erin was passionately kissing my best friend, all the while squeezing and working on her breasts. I cleared my throat, and after a minute, Fran looked at us, her face flushed with excitement. She grinned lustily.\n\n\"Sorry folks. Just keeping the band warmed up.\" With a final kiss for both women, she walked over by me and pushed Paul into their arms. \"I've got 'em ready, hon. You go to work, hmm?\"\n\nWe walked in and my breath was taken away. A four-post waterbed stood against one wall, satin sheets stretched across the frame. Candles were lit all around the room, and sexy club music hummed at a low level. A small plush couch sat to one side, close enough that a person on the bed could stretch out and touch it.\n\nFran and I took out seats and waited for the show to begin. As the girls swayed and began to undress Paul, I leaned over and whispered, \"What was all that about in the hallway?\"\n\nShe showed me that devil grin again. \"Just living out a fantasy of mine, hon. Valerie and Erin agreed to let me be the next in their threesome tonight, after they're done with Paul.\" We both looked over as Paul was already on his back, Valerie kissing her way down to his groin, with Erin planting kisses all over his neck and chest. \"I hope you don't mind.\"\n\n\"How could I mind? If it's OK with you three, go for it.\" I eyed Paul again and I felt a wetness begin to slowly spread between my legs. \"While you take on the ladies, I fully plan to take my turn with Paul.\"\n\nShe chuckled and reached over to placed a hand on my bare thigh. The slit in my dress had moved to reveal my legs. \"Don't worry, I'm a big girl. You and Paul can go do whatever it is you two wanna do. If he isn't all worn out, that is.\"\n\nBefore I could answer, I heard a gasp as Valerie straddled Paul's cock, which was the hardest I'd ever seen it. She slowly lowered herself down onto him, as Erin knelt behind her and guided her on. The short haired woman played with her breasts as Valerie closed her eyes and began to rock slowly along his member.\n\nI was so caught up in the action that I barely noticed Fran's hand massaging my inner thigh. She hadn't removed it a minute before. My legs had separated slightly and her fingers were inching ever closer to my lap. I looked over at her in shock. She grinned sheepishly and removed her hand. \"Sorry, caught up in the moment, hon.\"\n\nWhat she didn't realize was, I was actually kinda sorry that she had stopped. The sheer amount of sexual activity going on around me had me incredibly aroused. Her touch was only stoking my own fire. A flush had spread up my neck and my ears were burning as if I had a fever. I was shocked that I had an urge to put her hand back and see what would happen! \n\nInstead of exploring that thought, I settled instead on the action going on in front of me. Valerie was already on the verge of a massive orgasm. Her breaths came in short, quick pants, and her moans filled the room. Erin straddled Paul's stomach and faced towards her lover, kissing her deeply. Her hands glided down to the junction of her pussy and Paul's cock while he was busy cupping her ass in both hands. She must have found Valerie's clit, because the taller woman suddenly straightened, her hands gripping Erin's shoulders tightly. I saw her back arch, her face burying itself in Erin's hair as she moaned out loud, her first orgasm ripping through her.\n\nI could see that Paul was barely holding off from cumming. I was honestly amazed that he had myself. Erin must have noticed it too. She urged Valerie off of him. Val moved up to kiss him while Erin continued to kiss and caress her partner's body. There was a noticeable groan from Paul, as his erection was no longer being attended to. I'm sure it was all part of their plan. Why rush him over the edge, allowing himself to cum too quickly? But I was dying inside. I wanted nothing more at that moment than to bring him to his climax myself. \n\nIt was that thought that propelled me off of the couch and over to the bed. The girls were blocking his view below his waist. Without a second thought, I bent over and took him fully into my mouth. His hips arched and a low \"Oh Yeah!\" growled at me from above. I could hear the girls giggling, but I was too centered on his cock to care. My left hand gently squeezed his balls in a way that I knew drove him crazy. I licked up and down his shaft, relishing his sweaty taste in my mouth. What happened next shook me to my core!\n\nI felt a hand, obviously a female hand, cupping my right breast. I gasped around my husband's penis as that hand found my nipple and brought it erect again in seconds. My head lifted up for a second to see who was doing this to me, when I felt a second hand slip between my thighs! It was my turn to gasp as that hand easily slid over my pussy, feeling how wet I had become during all of the action I had witnessed. I closed my eyes and tried to remind myself that this was another WOMAN who was feeling me down there. But at that point, I just didn't care. All of my earlier reservations about being with another woman flew out the window. I was wanton with lust, and my body was on fire. I wanted nothing more than to have my own orgasm!\n\nMy head came up and I started gently stroking Paul with one hand, looking around me. Valerie has standing next to me, a sexy grin on her face as she tortured my breast. I assumed that Erin was the one with the hand now slipping my panties aside so that her fingers made direct contact with my lower lips. Turned out I was so dead wrong. You can imagine the double shock when I saw Fran bent over next to me, her eyes wide with her own lust, as she fingered me. It took me a second to realize that Erin had moved behind Frannie. The skirt and panties had hit the floor and her shirt was wide open, showing off her lacey white bra. Erin had one hand busy with Fran's breasts and the other one between Fran's legs now! I was about to ask Fran if she was enjoying herself, when I felt my best friends finger slide into me.\n\nMy body locked and time seemed to stand still as my Frannie's finger found it's way into my vagina. The knuckle of her index finger bumped against my rigid clit and stars exploded in my mind. My mouth opened and I gasped as she began moving rapidly in and out of me. In the mean time, Valerie had managed to edge the neck of my sundress down over my shoulders, allowing my breasts to spill out of my top. She deftly unclasped the front closure of my silk bra and had my tits hanging free in seconds. She knelt down and took one of my nipples in her mouth! Oh, how warm and gently her touch was, and it ignited a fire over that sensitive bud. My body began to shake, receiving stimuli from two directions.\n\nFor just one second my mind screamed out that I was doing something oh so wrong! The thought of being touched by another women, let alone my best friend in the world, would disgust me ninety-nine percent of the time. But under these conditions my brain shut down and my body took over. \n\nMy hand had stopped, and a part of my mind knew I was ignoring Paul. But I looked at him, and he had a HUGE grin on his face. He was thoroughly enjoying this. He slid down the bed and kissed me on the lips. My mouth opened and our tongues collided. Valerie took over for me, massaging Paul's member as she continued suckling on my nipple. I began to moan into his mouth as Fran was bringing me hurtling to the edge of a mammoth orgasm. He broke the kiss and brushed my hair from my left ear and leaned close.\n\n\"Having fun, sexy?\" he whispered devilishly. I simply nodded, shaking and at a loss for words. He cupped my face in his hands and stared into my eyes. \"Look at me.\" It took a second but I finally focused on his eyes. \"I want to see you when you cum.\" \n\nThat did it! \"Oh God Paul, I'm gonna cum!\" Every single muscle in my body locked up as I plunged over the edge. Blood rushed in my ears, and I didn't even hear the cry that came from deep in my throat as I had my orgasm. My God, I can't truly describe the feeling. It was like I was locked in a cell of pleasure, unable to do anything except see those gorgeous green eyes sparkling back at me. Instead of easing, my orgasm actually built, running up and down every single nerve ending of my body. I was shaking, completely out of control. With both Fran and Valerie still working on me, I quickly crested a second orgasm, my toes curling and my body singing.",
        "After what seemed like days, I slumped, Paul's arms holding me tight. I almost cried as I basked in the glow. He kissed my cheek and whispered, \"I love you so much, Donna.\" I smiled and simply soaked him in for a while, laying my head on his chest.\n\nWhen I finally pulled my head up, it was my turn to grin. Fran was naked on the floor, her clothes thrown about her body on the floor. Her hands were busy pinching her nipples hard. Erin was between her legs, her tongue bringing continuous oohs and ahhhs out of her mouth. That lovely head of brunette hair was buried in Fran's crotch, and you could hear the slurping sounds the young woman was producing as she energetically ate Fran up.\n\nValerie was sitting on the bed next to Paul. \"Now might be the time to get Erin while she's preoccupied.\" \n\nHe looked at me, as if for permission. I grinned and arched an eyebrow. \"What are you waiting for hon? Fuck her silly.\"\n\nHe chuckled and gave a mock salute. \"Yes ma'am.\" He moved off the bed and positioned himself behind Erin, running his fingers over her shapely ass. Her head came up and she looked hesitantly at Valerie. The blond shrugged. \"You don't have to, lover. I'd understand.\"\n\nBut Fran took the decision almost out of her hands. \"Hey, back to work! There's some pussy that needs eating down here!\" \n\nPaul looked at Erin. \"It's up to you, kiddo. There's two other women here that I could work on while you shut Frannie up.\" For this, he got a middle finger from my friend, making the rest of us chuckle.\n\nErin didn't take much time to come to a decision. \"Nope, I promised Val I'd give you a try.\" She grinned evilly down at Fran. \"Let's see who cums first.\" With that, she knelt back down, her tongue back at work inside Frannie.\n\nPaul got on his knees and moved in behind Erin, lifting her ass slightly in the air as he gently entered her. Her head came up as she gasped, her very first cock buried deep inside her from behind. Paul began a slow and steady rhythm inside of her, his balls slapping against her ass. \n\nErin attempted to keep eating Fran out, but I knew from personal experience how good Paul felt inside of me. She placed her hands on either side of Fran's hips and quickly gazed over at Valerie. \"Oh my god!\" she panted between strokes. \"That feels incredible Val!\" \n\nThe blonde woman on the bed laughed. \"Wait till he gets going.\"\n\nAs if on command, Paul increased the pace, withdrawing and ramming back inside of her with an increased purpose. Her eyes started to glaze over and she began a slow steady moan. Fran took advantage of this, reaching up and took both of her breasts on her hands. She pinched and rolled her nipples, clearly adding to Erin's pleasure. It was only seconds later that she pushed her ass backwards and came hard onto Paul, nearly screaming her release. Paul couldn't hold back and started to pull out so as not to cum inside of her.\n\nErin moaned out, \"NO! Stay inside. Please!\" He was past the point of arguing. A few strong thrusts later, he came hard. Erin's back arched as he filled her, triggering another quick little spasm between her legs. They stayed locked like that for a few seconds. Paul pulled out with a wet \"plop\" sound and sat down on his ass. His cock had started to soften a bit, but I just knew he wasn't near done yet.\n\nFran still lay on the floor beneath Erin. \"Figures. Everyone is cumming except me. I feel so left out.\"\n\nErin picked her head up with such a blazing hot look that I swore she might be possessed. \"Oh, it's your turn now sweetie!\" With that, she lowered her mouth back down between my best friend's legs, her tongue actually causing Frannie to squeal with pleasure.\n\nAs I grinned and watched the show on the floor, I heard a low moan from the bed next to me. Valerie had one hand on her breast and one between her legs, her fingers inside, working away on her clit. Despite my two tremendous orgasms, I was still incredibly aroused. I stood up, removed the rest of my clothes, and moved onto the bed, pushing Valerie down on her back. The shocked expression almost made he laugh. \"Let me help you,\" I purred. I laid down next to her and kissed her, my very first with a woman. She tasted sweet and her lips felt so soft. I placed my left hand down between her legs, replacing her busy fingers. I couldn't believe I was fingering this beautiful woman!\n\nHer breath caught in her throat. \"Are...you...sure... about...\" was all she got out before I found her clit and began circling it with my index finger. She threw back her head as we continued to kiss. She was already wet from her first orgasm on Paul, but I could feel the walls of her pussy enlarging as my finger continued it's work on her bud. Her hands were out to each side of her and I was actually enjoying all of it.\n\nA loud \"Oh Fuck!\" came from the floor where Frannie was still being eaten by Erin. \"Right there, there!\" she pleaded to the brunette inside of her. I couldn't see her as I was busy with Val, but the moans turned into cries as her orgasm exploded. I liked to think that I was loud during sex, but she put me to shame! If someone had passed by outside the house, I'm sure they would have believed a woman was being murdered! \n\nThis seemed to trigger Valerie, because her legs squeezed tight around my wrist. \"I'm gonna cum Donna!\" she purred. I grinned and slipped my mouth down to her left breast. That did the trick. Her body locked up and she threw her head back, her ass almost bouncing off the bed as she came.\n\nOnce she settled from her peak, we kissed for a few minutes before laying back on the bed. I looked over and saw Frannie fanning her face with her hand, completely flushed and out of breath. Erin lay at her feet, a silly grin plastered on her face. I spotted Paul getting up off the floor and he sat down on the bed next to me. His right hand caressed my breast and brought my nipple back to erect. I simply closed my eyes and sighed, enjoying his touch.\n\n\"So, honey,\" I purred, \"how's it feel to be in a room with four sexy women who have nothing but fucking on their minds?\"\n\n\"Like I hit the damned lottery!\" His shoulders sagged. \"I just wish I could have lasted longer.\"\n\nHis breath caught as Frannie's hand caressed his dick. \"Don't worry stud, we're only just starting with you!\" We all looked and her and laughed. \"What? You didn't think he was getting out of here without fucking me too, did you?\" She looked over at Erin. \"No offense hon.\"\n\nErin grinned. \"None taken. Believe me, and I'm amazed I'm saying this, but I want to take another ride on him myself tonight.\"\n\nI laughed at the slack jawed look on his face. \"Poor boy.\" I patted him on the head. \"Maybe we should have gotten you some Viagra for tonight.\"\n\nAn evil gleam flashed in his eyes. \"I'll show you fucking Viagra,\" he growled. He stood up quickly, causing Fran's hand to slip off of his now fully erect member. Bending over, he quickly picked Fran up off the floor by the hands and pulled her into a fierce kiss. Her eyes flew wide open in shock, but she quickly melted into his embrace. I knew she'd had a crush on him for years now, and she was surely going to enjoy fucking him. \n\nHis hands grabbed hold of her ass cheeks and lifted her easily up off her feet. He backed her against the wall and rammed his penis right up inside of her already soaked pussy. Her legs wrapped around his ass as he began to fuck her standing up. \n\n\"Fuck!\" she gasped as her pistoned in and out of her. \"He's an animal, Don!\" She moaned and held onto his shoulders, her fingers digging into his skin. \"I think... we created... a monster!\" With the last word, she cried out again and kissed him with reckless abandon.\n\nValerie was still sitting next to me, grinning from ear to ear. \"Guess you're not hung up on being with a woman now, huh?\"\n\nI shrugged. \"Technically, I was only fingered by Fran. I'm not so sure that really counts.\"\n\nA pair of hands reached around me from behind and cupped my breasts, thumbs running gently over my sensitive nipples. I gasped and felt Erin's breath on my neck. \"Time to change that, right Val?\" Her lips descended on my neck, causing goosebumps to form. \n\nValerie took my face in her hands. \"I'd say so lover.\" I got a glimpse of sexual hunger in those beautiful brown eyes just before her lips crushed against mine. For the briefest of moments, my mind screamed that these were two WOMEN that were on me. But my body quickly silenced any lingering protests.\n\nI felt hands on both the back and front of my body. Erin's fingers slid up and down my shoulders, back, and all the way to my ass. Meanwhile, Valerie's hands were teasing my stomach, my thighs and my breasts. At one point I could feel one breast being caressed from in front, while the other was being driven crazy from behind. I quickly lost track of whose hands were whose, and in the end not honestly caring. \n\nThey soon had me down on the bed, each with a nipple in a mouth. My chest heaved upward and my moans were almost non-stop. Normally sensitive, they were like a connection directly between my legs. I couldn't believe when I felt a mini orgasm wrack my body just from their onslaught of my breasts!\n\nI felt the bed shake and realized that Frannie was now laying right next to me. Paul had thrown her down and was now on top of her, his dick sliding deep inside of her. She looked over at me and simply panted, a steady rhythm that grew as her orgasm neared.\n\nAt that very same instant, I noticed that the Twin's were both kissing and licking their way up from my inner thighs and meeting right at my soaked pussy. They took turns sliding their tongues over my nether lips, causing them to swell and the juices to run. Erin's tongue slid inside of me and found my clit. My ass lifted up off the bed and I cried out. I knew I was seconds away from erupting yet again.\n\nI glanced over and caught Fran's gaze. We were both lost in our approaching releases. I could hear Frannie repeating, \"Oh fuck, oh fuck, oh fuck,\" as Paul drove into her like a machine. Her lips parted and she whimpered, \"Donna, I'm gonna cum!\" \n\nI reached over and grabbed a hold of her hand, holding it tight in mine. \"So am I Frannie!\" Her fingers spasmed in mine as her orgasm took hold of her. This triggered my own, as Erin's mouth had latched onto my clit and I was cresting my own wave of pleasure. I nearly lost my mind as I came with my best friend, our moans mingling and blending.\n\nAs I started to come down from my high, I noticed Paul laying next to us, a shit-eating grin on his face. I was about to ask if he had cum inside of Fran, but it was obvious that he was still fully erect. I was about to comment when Val beat me to it. \n\n\"Awwww. Poor Paul, still hard are we? I have a solution for that!\" She quickly moved over and pushed him flat on his back, kissing him with reckless abandon. Her lips quickly traveled down his body until she had taken him into her mouth. He must have still been close from fucking Frannie, as his breathing was coming in quick, short bursts. But just as it seemed he was about to blow, Val stopped and sat back.\n\n\"What the fuck...\" he began to complain. But Val just put a finger over his lips. \n\n\"Hush, stud. I have something better in mind.\" She reached over and took hold of Erin's hand. \"I wanna see you make him cum, sweetie.\"\n\nI could see the hesitation on her face. She had just had her first fuck and now Val was urging her to suck her first cock. Val saw this too and whispered, \"It's OK hon. I won't push you. I love you too much for that.\"\n\nErin shook her head and took Paul's member in her hands, seeming almost unsure what to do with it. \"No, I wanna try it. But I'm gonna need your help.\"\n\nVal smiled and kissed her deeply. \"It's easy. First off start off by kissing the tip to get a taste.\"\n\nPaul groaned as Erin kissed his penis a few times, applying more pressure with each kiss. She moved up and down his shaft as Val was gently fondling his balls. My poor baby was being tortured. I was loving every second!\n\n\"Now take just the tip in your mouth. Don't try to take too much as first.\"\n\nErin did as instructed, her eyes closing as she took maybe an inch into her mouth. Paul's hips lifted up off the bed and he grunted again. This gave the young lesbian encouragement and she took more of him, starting to bob up and down on him.\n\n\"You're doing great, sexy.\" She gave an evil grin as she looked up at Paul. \"How's that feel big guy?\"\n\nHe grinned, looking down at the sight of the two women concentrating on him. \"She's a natural, Val.\" He grunted again as Erin took almost all of him down her throat. \"Fuck, but she's gonna make me cum quick if she keeps that up!\"\n\nVal caressed Erin's ass as she pulled off of him for a second. \"Sorry,\" the young brunette said, looking worried.\n\nVal kissed her. \"You're doing great. But seeing as how this is her first time, Paul, let me know just before you're about to blow.\"\n\nHe nodded. \"I'll do my best.\"\n\nErin went back to work on him, her head bobbing up and down as she drove my husband crazy. Amazingly, despite having already had three orgasms of my own already, I was getting even wetter watching.\n\nIt didn't take long before Paul's grunts became ragged. \"I'm gonna blow Erin...\"\n\nVal put her hands on Erin's shoulders and eased her up. \"Let me finish this sweetheart.\" With that, she took Paul deep and started to milk his cock like a champion.\n\nPaul snorted and I knew he was seconds from cumming. I quickly moved up and kissed him deeply. I could feel him moaning into my mouth, our tongues dancing as Val brought him over the edge. His ass lifted completely off the bed as he blew into her mouth. I knew all too well how good he tasted when he came, and I was suddenly very jealous of Valerie.\n\nShe gently eased him down, completely cleaning him off of every last drop of semen. He sagged back onto the mattress, spent.\n\nShe grinned and patted his thigh. \"Poor guy. We wore him out.\" She suddenly glared over at Frannie, how had been quietly fingering herself slowly during the entire blow job. \"But now I'm all worked up. Time for me to get some action for myself!\" Like a crazed animal, she nearly launched herself to Fran, their bodies crushing together as they kissed madly. \n\nErin giggled. \"Oh I know how THAT feels. She's super horny now, Frannie. Watch yourself!\" Fran's only response was a quick whimper as Val's finger entered her pussy.\n\nErin wasn't paying attention as I reached out and slid a finger deep into her pussy. She gasped loudly in surprise. I slithered up and kissed her deeply, tasting Paul as our tongues danced. I was good and worked up once again, and seeing as how I hadn't had my first taste of pussy, I decided to make Erin my first time.\n\nI pushed her back onto the bed and kept slowly fingering her as my mouth descended towards her breasts. I took a nipple into my mouth and slowly sucked on it, savoring how her nipple shriveled up between my lips. She must have really been worked up, because her pussy lips clamped down on my finger and she cried out in ecstasy.\n\nOnce again I felt the bed shake and looked over to see Valerie and Frannie making out like mad. It was almost as though they were fighting over who was going to bring whom to an orgasm first. However, it didn't take long before they decided on a good old fashioned sixty-nine, with Val on top, her head buried between my friend's legs as Frannie was returning the favor.\n\nErin moaned as she saw what was happening too. \"That is SO HOT!\" She was cut short as my tongue slipped between the folds of her pussy. The air was heavily scented with female musk as three kitties were being eaten at once. I slid two fingers deep inside of her as I sucked on her clit and flicked the tip with my tongue. Erin was bouncing all over the bed as I brought her closer to her second orgasm. She nearly screamed as her body locked. Her hands flew up to her breasts and tugged roughly on her nipples. She tasted so sweet and I just couldn't get enough. I lapped up every last ounce of wetness that flowed from her even as I created more from her. She was panting heavily. I knew she was almost going over the edge again. I teased a finger just a bit into her ass and she lost her mind. It was as if she had been electrocuted. She thrashed about and moaned so loud that even Val and Fran stopped to watch. \n\nAs I let her down gently, she got a round of applause from Paul, Val and Frannie. She blushed deeply as her breathing slowed.\n\nThe other two women quickly went back to work and it was turning into a race to see who was going to get who off first. Erin rolled over and played with Val's nipples, causing her back to arch. I evened things out by sucking on Frannie's nipples, making her squirm and constantly lose her concentration on eating Val.\n\nAfter five good solid minutes, Frannie couldn't hold out anymore and screamed through a powerful orgasm. This triggered Valerie, who also locked up a moment later with her own orgasm. The four of us collapsed on the bed together, exhausted but happy. \n\nVal and Erin gently played with my nipples, seeming to never get enough of turning someone on. Val moved up and kissed me deeply. \n\n\"Thank you for saying yes to all of this, Donna. This has been a night I doubt I'll ever forget!\"\n\nErin did likewise, kissing me so passionately that I thought I might orgasm again simply from her lip lock. \"Feel free to come over anytime and play again.\"\n\nI smiled, still jumping at the touch of the Twins on my breasts. All of a sudden I heard Paul clear his throat. \"We're not done ladies. There's someone here I haven't fucked yet tonight.\" With that, my husband pulled me up into a smothering embrace. Despite everything that I had experienced this night, I still wanted to fuck him silly.\n\nI pushed him back onto the bed and grinned evilly down at him as I straddled his once more erect penis. Not wanted to waste anymore time, I impaled myself down on him and gasped as he sunk deep inside of me. I leaned forward to kiss him, rocking my hips back and forth, when I saw him grin back at me with an evil smile. I felt hands pulling me back upright so that I was still on top of him. Erin and Valerie were on either side of me and started to move me up and down on him. Their hands roamed over my body and set fire to my already inflamed skin. \n\nSeemingly out of nowhere, Frannie straddled Paul's chest and faced me. \"C'mon big guy. Let's fuck the wifey together!\" She slid forward and kissed me deeply, her hands finding my clit as it slid against Paul's erection. I ground down onto him every time she flicked my overly sensitive bud. I noticed her jumped every few seconds as well. Seemed that Paul slid his unoccupied hands under her legs and was fingering her. Her eyes closed but she didn't let up on driving me crazy.\n\nJust when I thought I couldn't take the sensory overload, I felt two warm mouths latch onto my nipples. Erin and Val started sucking on my breasts like they were starving, driving me even higher. I didn't know which way to turn and raced towards my orgasm. My moans filled the room, but no one let up. My hair was plastered to my head and I was panting non stop.\n\nFrannie's fingers let up for a moment as she neared her orgasm. She supported her hands on my shoulders and closed her eyes as she moaned. I kissed her deeply and she went over the edge. She rolled off of Paul, contented and satisfied. \n\nThe twins continued assaulting my breasts, but moved so that Paul could finger each one of them as well. I reached out and fondled one breast from each woman while still moving up and down on Paul. Almost as the same instant, they both climaxed, their mouths clamping down on my nipples as they came.\n\nI looked down at Paul and could see he was close. I nodded and really ground against him. That did the trick. With a grunt, he blew deep inside of me. This triggered the biggest orgasm I'd had all night. I screamed until my throat was raw. I finally collapsed on top of him, kissing him deeply. What a way to end an evening!",
        "As always, feel free to send feedback "
    ],
    "authorname": "Mandymomma",
    "tags": [
        "lesbian",
        "threesome",
        "moresome"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-offer-4"
}