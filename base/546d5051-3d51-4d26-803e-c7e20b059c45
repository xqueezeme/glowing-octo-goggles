{
    "title": "Barbarian Bound Ch. 03",
    "pages": [
        "Authors Note: This is an erotic fantasy by Lyssabyss. In an effort to try and post new content every week, Chapters will be roughly 10-20 pages long (about 2-3 Literotica pages.) Ideally it will be more! :D I really hope you enjoy this Chapter, there is still an element of reluctance to it, but it is not as pronounced as Ch. 02. I will also be seeking out an Editor, to make sure the sections are a bit more polished. Again I hope you enjoy reading as much as I enjoyed writing it. \n\n**** \n\n\"Who am I?\" I whispered, tears threatening once more to escape. \n\n\"You are mine.\" His mouth covering mine once more. \n\nI bit his lip hard, the copper taste of his blood on my tongue. Oro recoiled back with a howl, his hand instinctively raising to his mouth. When he withdrew that hand a bloodied smile remained. \n\n\"I belong to no one.\" I mustered. I knew then by the smile on his face that this would be a constant battle until one of us submitted. With Pelor's blessing, I hoped it would not be me. \n\nI was then consciously aware of Oro's seed still within me and a new chill ran through me. I was about to return to the well when Oro grabbed me by the arm, a mask of suspicion over his face. \n\n\"Let go of me.\" I threatened. \n\n\"First you bite me, then you issue me commands.\" He scoffed. \n\n\"You have proven your point!\" I hissed. \"I cannot escape this! Now let me go, so I can clean myself!\" I was beyond the point of being tactful, my emotions flaring dangerously. \n\n\"I don't think I have.\" He snarled twisting my arm up with one hand and gripped my shoulder with the other. His strength overpowered me as he forced me to my knees in front of him. I gasped in pain as I felt the horrible stretching of the injured flesh on my knees. \n\nI looked up at his cruel face, a rampant fire building within me. Yes! Hate him! I urged hoping to replace the doubt from my previous betrayal. \n\n\"You belong to me, Esyld. Whatever you think you hold, forget it now.\" His voice held a chilling menace. \"You are alive because of my claim on you. There is no life for you without this.\" He said pressing his hand against the brand, bringing another gasp from the tenderness of it. \n\nTears welled up, transforming my immediate world into a blur of swirling shapes and colors. Momentary relief was dashed away as the salty tears breached my lashes and the world around me settled back into place. He let go of my arm which I rubbed gingerly, \"May I wash myself?\" His arrogance would demand I ask for permission to complete this menial task. \n\n\"Say it.\" His voice had a certain weight to it, that made him sound bestial in his commands. \n\nSay what? I looked at him with question in my eyes. \"Please, Oro, may I wash?\" I would not beg and plead for this courtesy, my pride was bruised enough. \n\n\"You may, if you accept me as your Master, my pet.\" His eyes had a look of yearning etched into them. \n\nMy lips drew into an angry line, \"I bare your mark, but you are not my Master.\" \n\nHe released my shoulder, his hands clutching into fists and huffed his exasperation. \"I accept that this is hard for you, but your defiance cannot stand.\" \n\n\"You will receive nothing else from me.\" My trembling lips ruined the confidence I was trying to project. \n\n\"Oh but I already have, pet.\" He sneered and nearly dragged me by the arm towards the camp before I was able to gather my footing. \n\nThe camp was now bustling with motion and I caught the eyes of a fellow Lamorian woman who had a pitied look on her face. How must I have looked? Bruised and bandaged with a mixture of seed and blood between my legs, being dragged into camp by a towering barbarian. Yes let her pity me, let her pity shadow the truth, that for the briefest a moments I enjoyed his sweet torture. \n\n\"Kaptan! Lamorian group spotted eastward.\" The grunt from yesterday blurted before he could be dismissed away again. \n\nOro only grumbled and shouted to the rest of camp \"Break camp. Prepare to move out!\" \n\n\"Oro, no!\" I pleaded, wriggling. How far east? Could my father be among that group? \n\nOro hoisted me the rest of the way into his tent when my legs gave out beneath me. He tossed me onto his bed, \"Get ready.\" \n\nI had to stop him from hunting any more of my people. I bounded off the bed and clutched his dark firm arms, \"Home, Oro, let us go home.\" I implored. \n\n\"I am not so easily manipulated Esyld. Get ready.\" He reiterated. \n\nI fell to my knees at his feet, grimacing with pain. Could I say the words? Would I mean it? Yes, if it meant saving my people from more death. \"I beg you!\" I swallowed the pride that I boasted just minutes earlier; I knew that my people would be no match for these men. \"Please leave them, what harm could they possibly do? There are few left, and they are weak.\" \n\n\"Your loyalty is admirable, my pet. Shall we strike a bargain for their lives, Esyld?\" He reached over to the fresh pale of water, and began washing his face, cleaning the blood from his dried lip. He walked around me, my eyes trailing him with apprehension as he moved to sit on the bed. \n\n\"What do you want?\" I whispered. \n\nHe patted his hand down on the bed, and my heart thumped wildly. I walked warily to him and sat down facing him, feeling a measure of discomfort in my nudity. He trailed a hand down my back inspiring gooseflesh to sprawl across my skin. \n\n\"You know what I want.\" He traced up my spine with his fingertips, \"But I also want something you are not yet willing to give, Esyld.\" He eyed me cautiously, \"I do not want to break your spirit, but your defiance must be curbed.\" \n\n\"You want my submission.\" I stated indifferently. My people's lives were surely worth the cost of my pride and servitude. \n\n\"No, your devotion to me, as your Master.\" His hand was pulling at the tendrils of my disheveled plait, coaxing my blonde hair to flow down my back naturally. \n\nMy earlier words rebounded through the walls of my memory. I bare your mark, but you are not my master...You will receive nothing else from me. I was wrong, I would do much worse to save my people. My defeat, oh how it burned my stomach now and fanned the flames of my humiliation. Forced to take back and swallow the words I forged in a moment of self awareness. However with his request, he proved one thing to me, though it may not be easy as he so righteously contested, he could be manipulated. \n\nThis was the beginning, a small step forward in the right direction. I had turned my back on my fellow countryman already; abandoning our camp, fleeing the invaders, and allowing that poor woman to be hunted and brutalized. I could not run from this responsibility, however small or insignificant it may seem to be. Pelor demands penance, and this would be mine. \n\nI closed my eyes and nodded. \"I am yours, Master.\" Let him have this victory of my submission. We will have our own in time. \n\nA slow steady breath blew from Oro's mouth. \"Actions speak louder than words. For now I will accept this pressed show of faith.\" He used his fingers to tilt my chin upwards, \"I would like to kiss you again, no teeth.\" He said with a trace of humor. \n\nHis lips brushed mine which trembled with suppressed emotion. \"You are shaking.\" He whispered against my lips. \n\nI begged my frayed nerves to calm. \"It will pass.\" \n\n\"Come lay back.\" He motioned me to lay down on the bed, and he moved to the water pale which was being warmed by the nearby fire. \n\nHe sat down near my waist on the bed and dunked a new cloth into the pale. He took my hand into his own, and placed the rag against it. \"Too warm?\" \n\n\"No.\" My teeth chattered. \n\n\"I do not want you to fear my touch, Esyld. I told you that I would not wash you anymore, do you remember? One of our first bargains.\" \n\n\"I remember.\" \n\n\"Good. You may wash now, I will give you privacy, and will return shortly.\" He dropped the rag back in the bucket and slipped on some breeches before leaving his tent. \n\nWith the total privacy I craved I shifted on the bed and let my emotions rage into the pillow. Help me endure this farce, Pelor. I sniffled getting up from the bed, and ran the warm damp cloth over my face several times, until I felt a bit more calmed. I took the canvas wraps from my legs and gingerly dabbed the warm cloth against the healing wounds, grimacing as pain would occasionally lash out. \n\nWith great indignity I squatted over the bucket and swooshed water against my fair sex, rubbing carefully with the cloth to clean the remaining tackiness from my skin. \n\nI found the shirt from yesterday and draped it over my head once more and crawled back onto the bed. My stomach grumbled to remind me that I required food, but in the end after such a grueling start to the day, and such emotional turmoil, my body fell swiftly into reverie. \n\nThe smell of food woke me, and I rubbed my hand against my sleep crusted eyes and tried to focus on my surroundings. It seemed darker now despite the warm glow of the fire. \n\nOro looked over at me with a smile, \"Food Esyld. Come, I know you are hungry.\" \n\nI sat up and felt an unfamiliar soreness between my legs and a stiffness in my hips. I sat next to him by the fire and reached out and grabbed a stick with skewered meat on it. \"Spiced?\" \n\n\"Only a little. It is sis kebap and that there is pilav.\" He indicated a small bundle of white and brown grains far too small to eat individually. \n\nHe used his fingers to scoop up some of the pilav and had great success with eating it that way. It smelled wonderful and despite my worry of its spice I bit into the skewered meat and chewed it graciously. \n\n\"Thank you.\" I whispered. \n\n\"You will need your strength, in the morning we will ride for most of the day before we reach the forward camp.\" \n\n\"In the morning? What time is it?\" \n\n\"It is late, my pet, the days are getting shorter.\" He ate more of the sis kebap and took a swig from a nearby jug. \n\n\"I was asleep all day?\" I muttered, still trying to rub the sand from my eyes. \n\n\"Yes, but that is no matter.\" He smiled, continuing his consumption of the delicious meal. \n\n\"What did you do while I rested?\" I asked softly, plucking at some of the pilav. \n\n\"I held my end of the bargain, Esyld, beyond that I will not say.\" His voice was not as warm as it had been a moment ago, but I trusted despite his status as a barbarian, he would be true to his word. \n\nThe rest of the meal was finished in silence. We took time to go about our other business before settling back next to the fire. He rubbed newly procured salve on my brand and knees before wrapping canvas against each section. \n\n\"You are healing nicely, my pet, though you still look tired, do you feel ill?\" Oro asked. \n\n\"I feel tired, though I think my nerves will make me too restless to sleep.\" I yawned. \n\n\"Do you want to sleep?\" He questioned. \n\n\"Yes. A dreaming mind is at peace more than a waking one.\" If only I could be a babe once more, curled up in the clutches of my mother's arms, not a care in the world. \n\nI had not noticed the familiar morsel he brought until he placed it in my hand. \"This will help you sleep.\" \n\nThe taste was much worse than I remembered, probably due to the lack of my stout aid. I waited for the effect to wash over me, which did not take long and I became quite drowsy. \n\nOro helped me up and guided me to the bed. He slowly grabbed the edge of my shirt and began lifting it upwards. \"I want to feel your skin against mine. I know you must be sore, so I ask for nothing else.\" \n\nI lifted my arms so that the shirt could be removed, once again leaving me naked in his presence. He sucked in a deep breath and hugged me tightly from behind. Shivers ran over my skin as I felt his hot breath on my neck. This will undo me if it continues much longer. I thought. How easily he sparked arousal within me, casting powerful ripples to my toes and fingers. No, it was only the effects of that strange dried bud, nothing more. \n\n\"You were made for me.\" His earlier words spoke once more in my head, demanding my lustful acknowledgment. \n\nHe ushered me under the covers and climbed in naked behind me. \"Sleep well, my pet.\" \n\nOro's soft snoring woke me as morning began to break through a small tear in the tent. I carefully adjusted myself and wiggled my way off the bed, closing the covers behind me. I got dressed quietly and made my way outside. \n\nIt was still a bit chilly which ruined my hopes of a fresh water bath, but I set out towards the well anyway. I moved quickly so that my limbs would warm up, and shivering like a frail leaf pulled a full bucket from the well. I took a few drinks and splashed some against my face which brought a stark gasp from my lips. Teeth now once more chattering I lowered the bucket back into the well. \n\nI stretched lazily before drawing into myself to conserve body heat and began my slow walk back to the camp. Some of the other Barbaros men were beginning to rise, and so I wasted no more time getting back to the tent. \n\nAs I prepared to open the flap, Oro nearly knocked me over, a look a fury on his face that immediately softened as he crashed into me. \"There you are.\" His voice was still a little thick with sleep. \n\nI cleared my throat, \"I wanted fresh water, you were asleep.\" \n\nHe pulled me back inside the tent, rubbing my cold arms, \"I do not like that you left like that.\" \n\n\"You were asleep, I was only gone a moment.\" I tried to withhold the dissent from my tone. \n\n\"I know Esyld.\" He brought me over to the fire pit and began to strike it up again. \"You were gone, a moment yes, but alone.\" He kept striking at the flint absently. \"I do not like it.\" \n\n\"Here,\" I said, taking the flint from him and striking it into a small tinder nest. Once it caught I placed it carefully in the pit and coaxed it into a warm flame. \"I have no intention of running again.\" \n\n\"That is not the point Esyld!\" He growled. \n\n\"We are in a camp full of your people! When will I ever truly be alone?\" I countered. \n\n\"It is a dangerous world Esyld.\" He said trying to calm himself. \n\n\"You have shown me this personally.\" Gods, my temper was getting the best of me. I took a deep breath to calm myself. \n\n\"Esyld, you are mine, to protect and care for. That is my duty as your Master. If I am not at your side, I am unable to defend you.\" He stood naked before me and my eyes fell to the sizable soft manhood between his legs. I looked away abruptly trying to thwart the heat creeping into my cheeks. \n\n\"Y-your men, were just a shout away.\" I managed. \n\n\"I trust them with my life, that does not mean I trust them with yours.\" He expelled a labored breath. \"We will be leaving soon. I will see Jora about more fitting garments for you. You will stay here.\" \n\n\"As you wish, Master.\" I nearly choked on the words. Oro smiled at my effort and slipped on some leathers before leaving the tent. \n\nI took the time to braid my hair in a design my father said reminded him of fishbones. It was an odd comparison to be sure, but it was really quite lovely and shortened the length of my dangling mass. \n\nI am not sure at what point I thought it would be a good idea to start snooping around through Oro's things, but before I knew it I was elbows deep in a chest of papers and books. The books seemed quite old and I dared not fuss with them too much or risk the bindings. \n\nPerhaps what intrigued me most was the various drawings I found etched on thick parchment. I began cycling through them, reviewing an artful portrayal of a lush garden and my heart nearly stopped as Oro barged back into the tent talking to someone along the way. \n\nHe quickly surveyed the room and tisked as he saw what I was up to. \"Close that, my pet, and come stand over here.\" He pointed to a space in front of him. \n\nI dropped the drawings back into the chest and latched it closed, pressing it back up against the tent's edge. I walked to stand in front of him without saying a word about my prying curiosity. \n\n\"Jora, as I said she has a small frame, but will need accommodation here.\" He said, using a hand to caress the side of my breast. I stepped back reflexively from him to which I received a raised eyebrow. You are mine to touch. Another of his ideas I had nearly forgotten. I returned to my position and looked over at Jora's appraising obsidian eyes. \n\n\"Aye Kaptan.\" Her voice was gruff despite her pleasant features. Her hair was cropped short and black as Oro's but without his natural curls. Her body had a lovely tawny glow and boasted the lines of her toned muscle. She was unlike any other woman I had ever seen - \"...your arms.\" My wandering thought was interrupted by her words. I had hardly noticed the red cloth she held out as she stepped forward. \n\n\"My arms?\" I asked. \n\nShe sighed impatiently, giving an annoyed sidewards glance to Oro. \"Raise your arms little girl.\" \n\n\"Uh, a-are you a seamstress too?\" I stammered, raising my arms. \n\nOro burst out into thunderous laughter, doubling over and slapping his knee. By the look on her face I knew that I had insulted her in some way. \n\n\"I am a warrior, slave!\" She growled. She turned to Oro who was still laughing obnoxiously and punched his arm, toppling him over like a unbalanced toddler. She then tossed the cloth at him, \"See how you fair!\" She yelled and stomped out of the tent with gusto. \n\nMy mouth quirked to the side as I looked down at him, trying to stifle my own laughter. I was amazed that she had managed to fell him, the towering man that he was. I picked up the red cloth, which felt quite similar to wool but was a much softer textile. I inspected it closely \"Is this sheep's wool?\" \n\n\"No, fine goat's hair. Kashmir. Very warm.\" He replied, sitting up having successfully recovered from laughing like a fool. \n\nI separated out the two sections of cloth and took them to the bed laying them out. \n\n\"I will go fetch her back.\" He smiled and got to his feet. \n\n\"No need. I would like a leather belt and tie.\" I said still considering how to properly utilize the wonderful fabric. \n\nI wrapped the fabric around my torso and was pleased that it would cover most of my body quite well. Oro returned with my requested supplies and a pair of fur lined moccasins, which I slipped on gratefully, wiggling my toes inside their warm confines. \n\nI used the first piece to make a shawl that took minimal effort and would keep my arms fairly warm. The dress tied behind my neck, overlapping in the back secured by Oro's large belt around my small hips. \n\n\"You are as good with fabric as I am with a sword, my pet.\" \n\n\"Fabric is hardly a weapon.\" I retorted. \n\n\"True, but you disarm me just the same.\" \n\nOro's knowing smile brought a blush to my cheeks. This is a game Esyld, nothing more. \n\n\"H-how long until we leave?\" My voice came out too soft for my liking, trying to change the subject. \n\n\"We have another hour yet, my group must eat, so must the animals before we can move on.\" He moved with purpose next to me, untying the thong at my neck, whispering into my ear \"Plenty of time.\" \n\nI caught his meaning immediately. Was this man's abyssal desires truly bottomless? You cannot deny him this. It is expected. I sucked in a shaky breath and tried to exhale slowly to calm myself. You do what you must. \"Yes.\" I whispered. \n\nThe weight of that one word clung in the air. The heat of his chest and swell of his manhood pressed against me. He slowly and carefully stripped me bare, my fair body trembling before him. I did not shiver for lack of heat, because the warmth of his body was overwhelming. No I shivered from the anticipation of once again be touched more intimately than I had ever dared dream. \n\n\"Uncover me, Esyld.\" His voice strained with arousal. \n\nMy eyes met his in a moment of truth before my shaking hands moved to his belt. My knuckles rubbing against his taught burning skin. A moan caught in his throat and my eyes flicked back up to his face. ",
        "Gods I do not think I can do this. Fear and doubt struggled to drown out all other emotion. \n\nHe must have seen the worry play across my features because he cupped my face in his hands and secured my lips in a heated wet kiss. He fumbled with the clasp of his belt and loosened the ties of his breeches. \"Esyld.\" He moaned into my mouth. He pressed my hand to his breeches and helped me guide them down his hips and thighs. Another moan from his lips to mine. \n\nHe stepped out of his breeches and with his hands still around mine brought them up to his hairy chest. \"Touch me.\" He whispered before pressing his lips once more against me, inviting his tongue to play with mine. \n\nHis hands left mine and moved to palm the cheeks of my bottom, massaging them, his forefingers achingly close to my netherlips. My hands moved of their own accord, traveling through the soft hair of his chest to find his small dark nipples. I circled them once or twice before running my fingers down the ridges of his abdomen. I was rewarded as his hands moved lower on my cheeks, rubbing the outside of my sensitive folds. \n\nMy mouth broke from his in a gasp and I unintentionally pressed our bodies closer together, trapping his velvet member between us. A pearl of his viscous fluid smeared just below my belly button and I wiped my fingers against it, rubbing it between them. Another pearl was already seeping from his thick shaft, waiting to be received. Instinctively my fingers went to touch the twin pearl, his moan encouraging me to smear it across the head of his manhood. \n\n\"Esyld.\" He growled my name, grinding himself against my hand, which I responded by rubbing my fingers down the rippled length of him. He jerked forward again, spreading my cheeks slightly and I moaned softly, pressing my head against his shoulder. \n\nSuddenly we were moving, my senses dulled by the pulse of my arousal. He was laying on his back and I had a brief moment to stare at his battle hardened body before he pulled me atop him. I was straddling his waist, his manhood pressed firmly against my bottom and his hands rising to massage my sensitive breasts. \n\n\"Give yourself to me, pet.\" His voice strained, \"Actions speak louder than words.\" \n\nMy hands lay flat against his chest. I submitted to his intentions and I have now given myself over to the arousal of our fevered bodies. What else is there to give? His cock throbbed against me. Oh... I trembled in anticipation as I wiggled my hips to align with his. I waited for him to take me in a sweeping motion, as he had before in the forest but beyond the twitching of his sex against my thighs he lay motionless. \n\nThis submission perhaps was the cruelest of all. There would be no blame or denial of consent... \n\nYou can stop this right now; leave him aching on the bed... \n\nNo, that wasn't true at all. The desire to feel his fullness once more was consuming me. \n\nPast the point of no return and with a heaving chest, I clasped my hand around his girth and angled it towards the aching heat of my core. I reseated myself a couple times until I felt him firmly at my entrance and lowered myself slowly upon him. We both moaned as he stretched my tight hold, my consuming desire demanding more, there would be no turning back. At this angle the tip of him nudged painfully deep inside of me which made me shift uncomfortably. \n\nHe clutched my hips and gyrated my body against his. I moaned from the circular caresses of his cock, my depths fastening tightly around him. I made small mewling sounds as sensation ran wild through my body. He fixed his thumb against my precious nub, using my slick arousal to work tiny circles around it. \n\nI felt an intense tingling at the base of my head that sent shivers across my skin, my eyes fluttering closed, body unable to process all of these sensations. My breathing turning into loud gasps, I was on the precipice of something extraordinary. \n\n\"Your so tight.\" He growled, his movement somewhere between a rotating and pumping motion. \"I am close.\" His words came out in ragged bursts. \n\nI felt like a coil was being tightened within me, and my moans became much louder. \"I-I\u2014Gods.\" I cried clinging feverishly to the edge of my undoing. \n\n\"You are close.\" His voice husky with promise. I could only nod my head in response. He slowed his pacing, bringing us back from that maddening bliss. \"Beg me for your release, pet.\" \n\n\"Oro.\" I whimpered. This is too far. I warned myself. \n\nHe pumped inside me bringing a cry from my lips. I squeezed around him. \n\n\"Please Oro.\" I begged. Deep down I knew that I crossed a line I would be unable to draw again. \n\n\"Closer.\" His voice encouraged. \n\nGods he was going to drive me mad! So unbelievably close to release I felt a slave to my desire more than I felt a slave to this man. \"P-please, Master!\" I cried in near agony for the torture of my suspension as he lazily fingered my swollen bud. \n\n\"You may cum for me, pet.\" Oro growled plowing deep inside of me, rubbing my bud in a slick fury. \n\nMy eyes clutched tightly, a piercing moan ravaging my throat, my muscles tensed in sheer bliss. I faintly heard Oro's own cry in the pounding of blood in my ears as he joined me in this delicious rapture. After many beats, my body slumped forward against his, our chests heaving wildly against one another. Bliss fading into an intoxicating afterglow. \n\nAs mind numbing and pleasurable as this was, I feared the fact that I wanted more. That craving somewhere inside of me, demanding yet another release, then another, and another until I was a shell merely holding the puddle of bliss together. \n\nI felt his girth start to shrink within me, uncorking his fluid from my clutches, releasing a pressure I had not realized was there until it was dribbling out of me. \n\nAs the flush faded from my cheeks, and my mind cleared, panic seized hold again. I slipped off of him, standing a bit bow legged, \"Do we have fresh water?\" \n\n\"Wha-?\" He slurred. \n\n\"I need to clean.\" An edge of panic was detected in my voice. \n\n\"Leave it.\" The command, clear in his voice. \n\nI could not risk the chance of catching from him. He read my face easily enough and started to sit up; his eyes captured mine and he gave a single shake of his head. My heart fluttered as I stepped back, quickly probing with my fingers to coax his spending from me, he moved so quickly, before I could discard what I dredged, he had caught my hands. \n\nMy right hand glistened with his seed and a look of displeasure marred his face. I could see the look of contemplation in his eyes, his mouth opening to speak, before he was interrupted from a voice outside. \n\n\"Kaptan?\" \n\nOro released me roughly and pointed to a bucket in the corner, \"Fresh water. Wash and get ready.\" As I turned to move towards the bucket, he slapped my bare bottom, hard. I squealed, rubbing my bottom and running to the bucket before I could give him a chance to hit my other cheek. \n\nOro was mumbling to a man outside and after a few moments walked over to me also taking a rag to clean himself. \n\nIt took a few moments for us to dress and soon he was directing me to a brown spotted stallion which he ushered me onto. Men were already packing up the Kaptan's tent and belongings into a wagon with other other items. \n\nI received many knowing winks and jeers from many of the Barbaros men, and even a few choice names from my fellow Lamorian women. Tears stung my eyes, my cries of ecstasy revealed my true nature to those around me. There would be no more pitied glances for the barbarian whore. \n\n\"Ignore them, my pet. \" Oro said, rubbing my thigh before he mounted behind me. I bunched the dress high to sit properly and thankfully Oro gave me a blanket to cover my lap and legs. \"C'mon, Bo. Hyah!\" the strong beast cantered forward and Oro tightened his arms against me to steady me. \n\nEach third tromp jolted my smarting behind and I grimaced with discomfort. \"Do not be so rigid, you will be too sore to ride by half day.\" Oro recommended. I felt his thighs tighten behind me as he twisted his frame to whistle loudly to the side and signaled his left hand forward. \"Hold on.\" His voice was laced with excitement. He spurred Bo into a full on gallop, the speed of which brought a giddy yelp from my lips. \n\nThe cool air rushing against my face made my eyes water, and so I leaned my head forward to break the wind. My breasts bounced sorely without support in the Kashmir dress and Oro was right not even half the day had passed and my body was an aching mass. \n\n\"How much longer.\" I groaned. \n\nOro laughed, \"We have made good ground with our speed, but it will be sundown before we get there.\" He released a hand from the reigns to rub my left thigh and hip, \"Do you need a break?\" \n\nI nodded reluctantly, \"You do not?\" \n\n\"No.\" He laughed. \"We are trained for this.\" He began to slow Bo down and whispered against the shell of my ear, \"I do not fault your fragility, my pet, it is very arousing.\" \n\nAfter a short while we had pulled off into a field and he helped me dismount. I nearly crumbled to the ground, my legs a shaky mess, but Oro held me tight against him, practically propping me up. \n\n\"Kaptan?\" One of the men questioned. \n\n\"Graze the horses, and enjoy a short break, we will move out again soon.\" Oro directed. \n\n\"Aye Kaptan.\" The barbarian gave a grateful smile and went to the rest of the group to relay the message. \n\n\"I am unsure that I have ever seen him smile before.\" Oro mused with a laugh. \"Come, let us work out those legs, hmm?\" He practically carried me nearby to a thick patch of grass, and forced me to lay back against its padding. \"Raise your dress to your hips.\" His toothy grin made my stomach flutter. \n\nI trembled slightly with the thought of my aching abyssal need and bunched the edges of my dress in my hands, slowly beginning to move it upwards. The hunger in his own eyes tightened my core and hitched my breathing. The fabric was nearly to the juncture of my womanhood before Oro's strained voice bid me to stop. \n\n\"My willpower cannot outlast the sight of your weeping slit, I would not be able to stop myself from having you, and we are pressed for time.\" His voice rumbled and piqued my own desire. \"Give me your leg.\" His hand reached forward to hold my offered limb. \n\nHe began to bend and massage it, splaying it lewdly to the side baring my lower lips if not for the dress I clutched against it. The stretching eased some of the pain held in my thighs and hips, offering blessed relief. As he finished on the other side I wished a moment that he would take me once more. My body pliant and willing to receive him. \n\nInfernal heat! My mind cried. The threat to my people had been abated, furthering my debasement would be unnecessary. I released a long sigh and used his extended hand to get up. We walked back much easier than before towards the group, and I took a brief measure to enjoy a few pieces of jerky and an apple. The sun was quite warm now outside the shade of the canopied foliage, and despite its radiating comfort I could not shake the sadness of drifting farther away from the familiarity of my people. \n\nThe path that we were on seemed familiar to me, though most often when we moved about it had been under the cover of night. I dispelled the thought, and instead committed the route to memory so that when the time came I could make my way back. \n\nWe paced forward a bit slower than before, my skin turning a bright pink under the hot sun. I used the shawl to cover my arms and face as best I could to prevent further burn. \"Does it hurt?\" Oro asked a fleck of concern in his voice. \n\n\"Not yet.\" \n\n\"Not yet? But it will hurt later?\" He probed. \n\nI laughed, \"Have you never been burned by the sun?\" \n\n\"By fire, yes, by the sun, no.\" His voice steeled, obviously hurt by my poke at his ignorance. \n\nIt must be the difference of our skin, mine fair like a pool of milk, and his a warm bronze. \"You are fortunate then. I envy you.\" The words soured in my mouth, to envy a man such as him, but I did and it angered me. \n\n\"Good breeding.\" He boasted an obvious grin on his face, though I could not see it behind me. I rolled my eyes and decided not to engage him further. \n\nThe rest of our journey was an uncomfortable silence with the exception of a few far off whistles or hoots. It seemed even the wildlife new well enough to stay hidden from this horde as I failed to spot any along our way. \n\nThe sun was beginning to set and despite having done nothing more than ride all day I was exhausted. I pushed back the shawl from my face, and peered groggily around. It took me a moment, but then I realized why the area looked so familiar. I strained my eyes further down the eastern road and spotted the tall walls of Lamoria, our fallen Capital. \n\nMy body stiffened, memories sweeping over me. \n\nSo loud. The crying, the screaming. Oh gods! My body shook, my mother...her lips moving...I cannot hear her over the screaming. Gods it was so loud. Another shake. Where was I? \"Esyld!\" My mother's voice, she was crying, both of us were so scared. \n\n\"Esyld.\" A heavy hand was on my shoulder, \"Esyld!\" Oro's growl snapped me out of my horrible trance. \n\n\"N-no.\" My voice trembled, tears spilling down my cheeks. He truly was a brute to bring me back here, after all that I had lost. \n\n\"We are only staying a day at most.\" His voice trying to reassure me, rubbing a hand on my arm. \n\n\"No!\" I yelled, I jerked at the reigns of the stallion and pulled back hard making him buck, sending both me and Oro tumbling off of him. \n\nMy landing was less than graceful and the wind was forced painfully from my lungs. Before I had even a moment to recover, Oro was looming over me, a frightening mask over his face. \"You should not have done that, Esyld.\" He took out a familiar thong, forced me onto my stomach and tied my hands behind my back. My dress was dusted from the red dirt road and he heaved me up to my feet. \n\nBo came obediently back to his master's side, and Oro motioned him into a prone position. He hoisted me under the armpits back onto Bo, and I teetered a moment as my legs dangled off to one side. Soon after Oro climbed back onto the steed, his chest pressed against my arm, and to prevent myself from falling off as Bo was spurred back into motion I had to nestle against Oro's chest. \n\nI dared not look at his face, not wishing to see the rage there, and not wanting him to see the tears painting my cheeks. \"You should not have done that.\" He threatened. \"They saw you knock me off my horse. My position requires- I will have to punish you for your outburst.\" \n\n\"Do what you will, Master.\" I spitefully hissed. \n\nThe walls were much closer now, only furthering my panic and grief. We left my mother here. It was my fault, I was too scared to move. I blinked back the tears. I never wanted to come back here. It is too soon, a year is not enough time to heal this wound. \n\nBarbarosan Guards were stationed outside and let us pass through with a polite nod to the strong Kaptan. Cheers broke out as we passed through the gate, torches lighting the night sky, the tanned faces of Barbarosan settlers welcoming back their brutish warriors. \n\nLamoria was truly occupied, gone were the fair faces of my people, replaced by the surly mass around me. There are so many of them. Not all warriors to be sure, but surely matching the thousands that previously lived here. There were less than a few hundred free Lamorians left. Lamoria existed no more. \n\nMy mind and body went numb. It was all for nothing. I was a fool to think we could retake our land. I had not foreseen the mass of their empire, how could I have? \n\nI barely recognized the streets for what they once were as we approached the town's square. Most of the camp had already separated off, presumably to settle in after their long journey. All that remained besides the Kaptan and I, were four of his kinsman. \n\nOnce we were in the square a man glittering with adornments hailed, \"Kaptan Oro the Conqueror!\" \n\n\"Ho! Is that a fair maiden?\" Oro jeered. \"Oh it is only you, Sarin, your jewels and finery deceived me.\" I felt numb even to his amusement and jostling of his laughter. \n\n\"Ha! Kaptan, leave the battlefield behind and you too could be rich!\" Sarin came closer, and took a moment to look me over. \"Lamorian?\" \n\n\"She was.\" Oro replied. \n\n\"Are they all so small? This is the first time I have seen one in the flesh.\" Sarin's voice brimming with excitement as if I were some exotic animal. His fingers twitched as he stroked Bo's mane as if he might like to touch me as well. \n\n\"We can talk more about that later, I am quite tired.\" Oro said gruffly, skipping Bo to the side. \n\n\"Ah, yes of course Kaptan! You will be staying at the main estate with the Governor. I was of course sent by him to fetch you.\" \n\nI had never been in the Governor's manse before, but always admired the beautifully carved stone and well tended gardens. I wonder what shambles it would be in now. Oro nodded towards Sarin before kicking off and heading towards the Governor's manse. Much of our buildings and statues appeared untouched, quite unlike what I expected the ruins of my former city to look like. \n\nThe road to the estate was lined with tall cypress trees and occasional braziers which were lit for our arrival. The estate was exactly as I remembered, though now red and gold banners crested it's entrance. Oro untied my hands and helped me down from the steed, allowing a stable boy to take Bo away. \n\nSarin arrive moments later and ushered us quietly inside. \"Of course Governor Aryn would have been delighted to see you, but he has been quite busy with his new babe. I believe they rest as we speak.\" \n\nOro's arm was wrapped around my waist and his grip tightened gently as we walked through the large halls. Sarin guided us to a west wing on the lower level and asked, \"Is there anything you would like me to fetch? The water boilers are still running Kaptan.\" \n\n\"A nice hot bath would be very generous.\" \n\n\"I will have them draw it up for you.\" Sarin gave a slight bow and shut the door behind him. \n\nEven my own home near the market district was not as nice as this single room. A fire was already lit in the brick fireplace and fresh fruit was laid out on a nearby table, which was expertly hand crafted. I sat in a plush chair near the fireplace and forgot for a moment that anyone was even in the room with me. \n\nIt is more beautiful than I imagined. I caressed the velvet armrests of the dark wooden chair and jumped when Oro's hand rested on my shoulder. \"I did not mean to alarm you.\" His voice was deep and soothing, and for a moment I lost myself in the flicker of the fire. \"Do you like the room?\" He asked. \n\nI nodded, \"It is beautiful.\" My voice bore a sadness I could not hide. \"I did not expect that the Barbaros would have kept so much of Lamoria the way that it was.\" \n\nOro gave a heavy sigh, \"Before we leave this place, I want to show you something, it is important to learn about the past before you judge the present or decide the future.\" He knelt down next to me by the fire, \"I regret-\" Oro cleared his throat, \"Your words earlier, to 'do what I will', I-I will not punish you, Esyld. To be thrown from my own steed is my folly, not yours.\" He waited a moment, \"I just wanted to say that.\" \n\n\"Thank you.\" I whispered. \n\nFor many moments we just sat staring at the fire as it popped and flared, a small tap on the door catching our attention. \"Kaptan, your bath is ready.\" \n\n\"Yes, many thanks.\" He said with a tired smile. The servant shut the door softly and Oro reached out for my hand, \"Come.\" \n\nI took it and followed him to the adjoining bath room. A very large alabaster tub was positioned in the corner and steam was wafting off of it invitingly. I did not resist as Oro disrobed me, and then himself, guiding us to the large pool of water. He held my hand as I stepped into the deep tub and I gasped at the sensation of hot water caressing my skin once more. ",
        "He gave a happy sigh as he stepped in behind me and settled into the tub. \"Sit, my pet.\" He beckoned, holding his arms open. \n\nMy face flushed at the sight. It is the heat, nothing more. I begged myself to believe. I sat down in front of him, laying against his chest, the water line nearly reaching the nape of my neck. I tugged at the tie that fastened my plait together and began to loosen my blonde locks into the water. \n\nOro dropped some oils into the bathwater, and the room filled with the scent of roses. My eyes brightened with the luxurious smell and I shifted to fully submerge myself in the water. I rose up with a slight sputter and collected my hair to drape down my back. Oro reached around me and handed me a small chunk of soap which I eagerly took and slowly worked over my soft skin. He applied something to my hair and began massaging the strands together, running his fingers against my scalp, I had never felt so pampered that I completely forgot what brought me to this place, after all this time. \n\nHe scooted me forward and took another bit of soap and began to wash himself, and I almost dared to watch him as he did so. My hair smelled of roses and was unbelievably soft; I dipped my body once more beneath the water to rub the mixture out of my strands. I squeezed out the excess water to check my thoroughness and was quite pleased that I managed on the first try. \n\nOro pulled me back against him now that our bathing was finished and ran a bold hand across my breasts, and then down my stomach, waiting to go even lower. My body shivered briefly against his and heat crept back into my cheeks. \n\n\"I want to expose you,\" he kissed my neck, \"to all a man has to offer.\" His hand traveled lower until his hand rested above my mound. He would not be able to gain access without moving, and I had no intention of making it easy on him, by making that first move. \n\n\"I think you have exposed me to that already, Kaptan.\" I laughed. \n\n\"No, there is much more I want to show you, to teach you.\" He whispered against my neck, biting my flesh gently. My nipples hardened under the murky water, and I was grateful he would be unable to see my lustful response. \n\nI felt the length of him grow against my back, which sat me upright. \"I am turning into a prune.\" I fussed, trying to make my excuses, \"The bath has lost its appeal.\" I stood and got out of the tub, painfully aware of my exposed sex. \n\n\"Hmm. You are right, I can think of something much more enjoyable.\" Oro grinned. \n\n\"Sleep, on an actual bed?\" I feigned innocence. \n\n\"Eventually.\" He countered, standing, rivulets of water running over his hard body. Hard was the word best used to describe him, as he was indeed aching in plain sight. \n\nI sucked in a breath as he stepped out of the water which brought a huge knowing grin to his face. He stalked forward slowly, like a true predator, his body ready to spring at any moment. My belly began to flutter in anticipation and as he dashed forward, a squeal of excitement burst from my lips and I darted towards the bedroom. \n\nMy stride was much shorter than his, he caught me easily up in his arms, which brought a scream from my lips and a deep chuckle from his. \"Shh.\" He admonished, placing a hand over my mouth. \"I have captured you again, my pet.\" He tossed me playfully onto the large plush bed, \"What shall I do with you?\""
    ],
    "authorname": "Lyssabyss",
    "tags": [
        "submission",
        "master",
        "reluctance",
        "barbarian",
        "defeat",
        "conquered",
        "seduction",
        "cum",
        "orgasm denial"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/barbarian-bound-ch-03"
}