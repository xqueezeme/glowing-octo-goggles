{
    "title": "Big League Dreams Ch. 03",
    "pages": [
        "Big League Dreams: Chapter 03\n\nI started this story a while ago, before COVID-19 and before the likely contraction of baseball's minor leagues. So, it exists in a fantasy world where these things didn't happen. I hope that the quality of the story allows you to ignore that. Also, while I never specifically say what baseball organization is featured, it is based on one team, which is pretty obvious, especially if you have read some of my earlier stories. But I've taken liberties with locations of minor league teams, and my descriptions of the minor league cities and towns are completely fictional. \n\n \n\nI'd suggest reading the prior chapters to understand what's going on. As with all of my stories, they are not submitted until completed, so the chapters will appear every few days. Thanks for reading!\n\n \n\nThe next year was another crossroads year for me. I had a strong spring, and even pitched in a couple of major league exhibition games, allowing my parents to see me pitch for the first time as a pro on TV, although my appearances were late in the game when both teams had removed most of the major leaguers from the lineup. I hoped to have a full year at AAA, and if I was lucky, I might even get a shot to pitch in a major league game that counted. But if I didn't have a good year, I might get sent back down, and at my age, I was getting to the point that I ran the risk of getting released so that younger, more highly touted prospects could take my roster spot. At that point, I'd have to pray that some other organization was interested in me, or finally get a real job.\n\nAt the start of the season, I was penciled in as a setup man\u2014one of the guys who pitched after the starter was out, but not the closer. At least I wasn't supposed to be a \"long reliever,\" which would have meant that I would only be used if the starter had to come out earlier than expected, and I hoped that my success during the season would prevent me from ending up only getting mop up work, when the game was so far lost (or occasionally, if we had a huge lead), that the manager wouldn't want to waste one of the successful pitchers. Ending up in that role for any length of time did not bode well for a long career.\n\nBack when my dad was younger, the setup man role was also not prestigious. The glamour guys were the starters and closers, but over the years, as analytics began to demonstrate starters' decreasing effectiveness the longer they pitched, and pitch counts took on more importance to preserving arms, teams began to rely more and more on effective set up pitchers. The big money for relievers was still for the closers, but you could have a long and lucrative career if you were a reliable pitcher in the 7<sup>th</sup> or 8<sup>th</sup> inning, and occasionally close a game.\n\nI had been happy when I got moved up to AAA to reunite with Teo, who appeared to be working his way up the ladder, too, and occasionally got mentioned when big league jobs opened up. Not only had he been successful in the minors, but being Hispanic and fluent in Spanish was a plus. We also had a great pitching coach, Bobby Parker, who had spent five years on the big league team before injuring his shoulder and turning to coaching. He was a keen student of all aspects of pitching, including the physical, mental and analytical parts, and like me, was a college graduate, from Vanderbilt. We hit it off immediately, and I planned on taking as much wisdom from Bobby as possible for as long as he was my coach.\n\nThe city where our team was based had seen better days, back when there were active factories and mills, but there was a large college outside of town which provided some jobs, so it wasn't completely depressed. But there was a glut of housing in some neighborhoods, so I was able to rent a small one bedroom apartment in an ungentrified neighborhood for the season, on a month to month basis, for a reasonable price. The landlord, an older widower named Marco Balvetti, had been a machinist in his youth, and was a big baseball fan who rented the apartment to ballplayers each season. He was a nice guy, but private, so it wasn't like having the Pullmans around, which was fine with me at that point.\n\nOur team looked to be strong. We had a bunch of the guys I played with before, including Roscoe Brownlow, Jamari Post, Caden Burris, Fonzie Arroyo, Al Balboa, Luis Correa, and Ramon Cardenas, who we all expected to be called up soon, some highly ranked prospects who I only knew from spring training, and a handful of veteran guys, who were considered \"AAAA\" players (although you would never say that to their face)\u2014guys good enough to play in the majors, but not regularly, and who were stashed at AAA to fill in when the big team needed short term injury replacements. I think it was the great baseball writer Roger Kahn who once wrote something like the lowest level minor leaguer was better than any player that most people had ever seen, and I realized that even a fringe major leaguer was better than almost any minor leaguer, so I treated these guys with respect, and never made fun of them behind their backs, like some of my teammates. I did observe that a few of them really didn't want to be with us, and were a little standoffish. I was not on the top prospect lists, but was considered to be someone who, if things broke right, could help a major league team's bullpen. Which was a fuck of a long way from \"organizations need a lot of arms,\" a phrase that I often considered getting tattooed on my arm, if I wasn't afraid of getting something tattooed on my arm.\n\nWe were not quite clicking early in the season, as Teo and Bobby tried to figure out the right mix on the field and on the mound. We were winning more than we were losing, but not as much as we had expected, and were hovering around third place. I was doing OK in my setup role, mostly retaining leads, or keeping us in close games when we were losing, although like most pitchers, I did have one game where I couldn't get anyone out. Bobby kept me in longer than he should have, telling me later that he wanted to see me work out of it, but it was still embarrassing. But maybe he was right, because it didn't happen again that season.\n\nAnd it was then that I met Erin Connolly, a stereotypical, red haired, fair skinned Irish beauty. To be fair, Erin's family emigrated from Ireland in the 1800s, but she looked the part. I met her the way ballplayers often met women, in a bar, after a game, and while it wasn't the same instant infatuation I had felt with Jillian, I couldn't keep my eyes off of her. She was sitting at a table with two men and another woman, and from the second I set eyes on her, I watched to see whether there was any indication that she was with any of the men in the group. Or, I guess, the women.\n\nI was drinking with some of my teammates. We had won our third in a row, I had pitched effectively in the first and third games, we were in second place, and had a rare day off the next day, so we were drinking pretty heavily.\n\n\"Earth to Ray,\" Roscoe said to me as I continued to stare at the redheaded beauty at the table across the bar. \"Dude, are you still with us?\"\n\nI nodded, \"Yeah, dude. All good.\" I took a swig of my beer and turned to stare again.\n\n\"Shit, Ray. Either stop starin' or go over and say something to her.\"\n\n\"What are you talking about?\" I responded unsteadily.\n\n\"Here we go again,\" said Jamari Post.\n\n\"What the fuck are you talking about?\"\n\nBrownlow responded, \"Dude, it's like that super hot chick you met in that bar playing pool. The one who hustled you. You're looking at her the same way.\"\n\n\"No, I'm not.\"\n\n\"Bullshit,\" Jamari replied. \"And then you were banging her the rest of the season.\"\n\nMemories of Jillian flooded into my drunken brain, and I felt surprisingly warm all of a sudden. \"One thing I do remember from that night, Jamari, was leaving with Jillian, while you were passed out on a table with, shit, what's his name. Oh yeah, Tyler Parks.\"\n\n\"Whatever happened to him?\" Roscoe asked.\n\n\"Hurt his knee, and never made it back,\" Jamari responded. \"Moved back to Cali, I think.\"\n\nWe all drank from our beers as we contemplated the knife edge that our careers sat upon, although I don't think either of my drinking buddies would have used that metaphor.\n\n\"Wait, Poole, stop trying to change the subject. Are you going to make a move, or are you just going to act like a stalker?\" Jamari asked.\n\nEddie Bolton, who none of us knew before this season, but was a good guy, had appeared to be asleep, but woke up and slurred at me, \"Who were you banging?\" before his head slumped down on his chest again. We all laughed, but he didn't wake up.\n\nAt that moment, I noticed that the redhead stood up and went to the bar, and I could see that she looked incredible in a pair of tight jeans. It was time to put up or shut up. I stood up, and when I stopped swaying, I headed toward the bar, hearing my so called friends whooping it up behind me.\n\nI heard her order only one beer, which was strange, since she was with three other people, and I made it to the bar in time to say to the bartender, \"Let me get that for you, and I'll have one of the same.\" The bartender, Gerry O'Sullivan, was a great guy, and a fan of the team, so he often didn't charge us for every drink. He eyed me in a funny way, and said, \"Are you sure, Ray?\"\n\n\"I don't need you to buy me a drink,\" the woman responded before I could answer.\n\n\"I'm not saying that you do. I'm just asking if I can,\" I replied with a smile, and felt like I had come up with a pretty good line under the circumstances.\n\nShe picked up her beer. \"Suit yourself,\" she replied before turning and heading back to her table without another word. I stood there, watching her ass as she walked away and thinking that I just wasted money on a beer.\n\n\"Don't worry, Ray, I won't charge you for that. I tried to warn you.\"\n\n\"Warn me about what?\"\n\n\"About Erin Connolly.\"\n\n\"Her?\" I asked, motioning with my head toward the table where she was sitting, but now only with the other woman. I took a drink from the beer I had ordered.\n\n\"Yeah. She's here a lot, but I've never seen her leave with anyone who tried to pick her up.\"\n\n\"What's her story?\"\n\n\"Not really sure. I think she works at the college. She might live in the neighborhood.\"\n\n\"Thanks for the intel, Gerry.\"\n\n\"Any time, Ray. And congrats on the winning streak. I think you guys are gonna catch 'em.\"\n\n\"I hope so. And hey, let me know if you want tickets again.\"\n\n\"Thanks, Ray. I'm off in a few days, so let me check with my wife and see if she wants to go.\"\n\n\"OK. You have my number, right.\"\n\n\"Yep. Thanks.\"\n\nI walked unsteadily back to the table sneaking a glance over at Erin, and was surprised to see her doing the same to me, looking away, as if she was embarrassed at being caught.\n\n\"Struck out, dude?\" Roscoe asked.\n\n\"Never been known for my hitting, Roscoe,\" I responded, trying to laugh it off.\n\n\"Just gonna let her go?\" Jamari asked, draining a beer.\n\nI took a quick glance over to her table, and noticed that she was sitting there with only the other woman and considered taking another shot. There was something about her, beyond the fact that she was hot as fuck, that made me want to get to know her. But I decided not to take the risk of getting shot down again in public, especially after what Gerry had told me. \"Yeah, guys. Gerry told me she never leaves with anyone from here.\"\n\n\"Not even a modestly talented minor league ballplayer?\" teased Roscoe.\n\n\"Apparently not. But I guess that means neither of you losers would have a chance either.\" I took a drink waiting for the response.\n\n\"Fuck you, Poole,\" Jamari responded, laughing.\n\n\"What he said.\" Roscoe added, finishing his drink and slamming the glass on the table. He looked at his phone. \"I'm done.\" He threw down a few bills on the table.\n\nJamari looked surprised. \"Off day tomorrow, dude.\"\n\n\"I know. I'm fucking beat. And I don't think I'm getting laid here tonight.\"\n\nEddie woke up for a second. \"What? Who's getting laid?\"\n\n\"You are, Eddie,\" I answered with a smile.\n\n\"What? Really. With who?\" Before anyone could answer, his head dropped to his chest, and he was out again.\n\nRoscoe started to leave. \"One a you assholes get Bolton home, OK?\"\n\n\"He's on my way. I'll take him,\" I offered.\n\nJamari and I finished our drinks, paid the tab, woke Eddie up and wrangled him out the door. I stole another glance at Erin on the way out, and noticed that she was at the bar, talking to Gerry.\n\n*\n\n\"Erin Connelly, who is this?\"\n\n\"Ray Poole.\"\n\n\"That name isn't familiar. Are you in one of my sections?\"\n\n\"No, Erin. I'm the guy who bought you a beer last night.\"\n\n\"The one I didn't ask for?\"\n\n\"That would be the one.\"\n\n\"And now you're harassing me at work?\"\n\nI couldn't tell over the phone whether or not she was serious, but I figured I needed to find out fast.\n\n\"No, I just wanted to meet you.\"\n\n\"Who are you, Ray Poole?\"\n\nThat she didn't hang up was a good sign, I thought. \"I'm a pitcher for the team.\"\n\n\"Are you any good?\"\n\nI could sense that she was playing with me a little, and I figured I had nothing to lose. \"Good enough for AAA. I hope good enough for the majors soon, but honestly, I don't know.\"\n\n\"Wow, a non-arrogant jock. I'm impressed.\"\n\n\"So we've already gotten past the part of the story where Lizzie realizes that Mr. Darcy isn't a jerk.\"\n\n\"What the fuck, Ray? A Jane Austen reference. From Google?\"\n\n\"No, Erin, once upon a time, before I decided to try to throw a ball for a living, I was an English major. I even have a degree from a real college.\"\n\nI could hear her typing. \"I guess you do, Ray, and not a bad one at that.\" She paused. \"So, you bribed Gerry with free tickets to get my name, Googled me, realized that I'm a TA in the English Literature department, and figured dropping a little Austen would get me into bed?\"\n\n\"Erin, when you're a minor league ballplayer, all you do is dream. So, yeah.\"\n\nShe laughed out loud. \"Very funny.\"\n\n\"And you asked Gerry about me, pretended not to recognize my name when I called, and pretended not to know that I'm a ballplayer.\"\n\n\"Busted, Ray.\"\n\nOne thing I've learned as a pitcher, is if the count is in your favor, you need to press the advantage. \"So, would you have dinner with me tonight?\"\n\n\"Wow. Tonight?\"\n\n\"Yeah, we have a rare off day today, so I'm free.\"\n\n\"Well, Ray, I happen to be free tonight, too. How about I meet you at the bar at 7, and we can have a drink, and if you turn out to be more Darcy than Wickham, we can walk around the corner to the burger place. Best in town.\"\n\n\"I've been there, and you're right. And I'm definitely no Wickham\u2014I have no interest in your sister, if you even have a sister. It's a date.\"\n\n\"I guess it is, Ray. And I only have brothers. Big, mean brothers. See you then.\" She hung up.\n\n*\n\nI was waiting at a table, facing the door when Erin arrived. It looked like she had come straight from school, because she was dressed more for work than she was for a date. Or, I thought, maybe she was not someone who went overboard for a date. Or, she did, and she didn't care enough about this date to make more of an effort. I guess the only way to find out was to see how things went. She still looked amazing. I stood up, and she came over and reached out her hand.\n\n\"I'm Erin,\" she said grabbing my offered hand. She had a strong grip, which I appreciated, and we sat down.\n\n\"Ray.\" She nodded. It was awkward, but I still felt something that I hadn't felt about a woman for a few years\u2014not since my few weeks with Jillian. \"Now, can I buy you a drink?\"\n\n\"You can, but we're splitting dinner, OK?\"\n\n\"That's really not necessary, Erin.\"\n\n\"Ray, we don't know each other, but Gerry might have told you that I have a nasty independent streak. I can't imagine in this era that any man thinks that buying a woman dinner means that he gets to sleep with her, but as I said, I don't know you.\"\n\n\"No, Erin\u2014that's not why at all. No. I asked you out. I should pay.\"\n\nShe shook her head, her shoulder length red hair flying freely. \"Nope. It's a deal breaker, Ray. Agree to split dinner, or I'm outta here.\"\n\n\"No pitcher ever likes to hear 'outta here,'\" I replied laughing. \"OK. You win.\"\n\n\"I usually do,\" she replied, smiling a big smile that lit up her face. If I was interested before, I was totally smitten now.\n\n\"Let me guess,\" I ventured. \"High school athlete, but had to choose between academics and sports.\"\n\n\"Good guess. I played softball in high school, but knew I wasn't good enough for D-I. And I really wanted to go here. And since you've seen that I don't like to lose, I gave up the game for English Lit.\"\n\n\"Do you miss it?\"\n\n\"Yeah. I play in a coed beer league during the summers, but it really isn't the same. Those were a few teammates I was here with last night.\"\n\n\"Me, too.\"\n\n\"I figured.\"\n\n\"You noticed, then?\"\n\nI could see a little blush rise on her pale cheeks. \"How could I not. That tall guy you were with was hot.\"\n\nI smiled. \"I can get you Roscoe's number, if you want.\"\n\n\"Let's see how tonight goes. I'll let you know. Does he like Austen, or is he more of a Bront\u00eb kind of guy?\"\n\n\"I think Roscoe is more of a Big Lebowski guy. Not that there's anything wrong with that.\"\n\n\"No, nothing at all.\"\n\n\"What are you drinking, Erin?\"\n\n\"Just a draft beer, Ray. Thanks.\"\n\nI got up and ordered two drafts from Gerry.\n\n\"I don't know how you did it, Ray, but good luck,\" Gerry said, as he passed me the beers. I dropped a 20 on the bar and waited for my change, leaving a few bucks tip before returning to the table.\n\nI apparently passed the Darcy/Wickham test, and after the drink and some good conversation, we went around the corner for burgers. I liked the fact that Erin wasn't the kind of woman who only ate salad\u2014she dug right into their Piggy in the Middle burger (a cheeseburger with a slab of pork belly and bacon onion jam)\u2014but the only curves she had were in the best places.\n\nUnlike most women I'd been with, we didn't talk too much about my baseball career or my chances to make the big leagues, although we did touch on that. Instead, we talked about our families, our childhoods and our hopes for the future. I found out that her area of specialty was feminist literary criticism, and she spent 15 minutes completely changing my understanding of Pride &amp; Prejudice between mouthfuls of burger and fries, and slugs of beer. I found that I couldn't keep my eyes off of her face\u2014the animated way she explained things, the way her eyes lit up when she was interested in something. Even the way she chewed was fascinating to me.\n\nEventually, though, dinner was over, and I had no idea what was going to happen next. We walked out of the restaurant, and she put her arm though mine as we walked back toward the bar.\n\n\"Where do you live, Ray?\"\n\n\"About three blocks that way,\" I said, indicating toward my left. \"You?\"\n\n\"Two blocks that way,\" she replied, motioning with her head to the right.\n\n\"That's OK, I'll walk you home.\"\n\nShe stopped and took her arm out of mine. \"Ray, I've lived in this neighborhood my whole life, and I don't need you to protect me.\"\n\nThat damned independence. I had forgotten. But we had a connection, and I figured I'd be honest. \"I wasn't offering to protect you. I was offering because I hoped the night wasn't over.\"\n\nShe smiled at me, and I just about melted. \"Ah. Well, Ray, the night is pretty much over, since whether or not you walk me home, you weren't getting an invitation inside.\"\n\nMy face fell in disappointment. \"But I was going to do this,\" she said, leaning in to me and pressing her lips against mine. I felt a shock that ran straight to my cock, and I kissed her back, wrapping my arms around her and she did the same. We kissed for I had no idea how long, but I never wanted it to end. But eventually, she pulled away. \"Not tonight Ray, but I'm definitely not saying never.\"",
        "In the streetlight, I could see that she was a little flushed, and her lips were red from kissing. Then she turned and walked toward her apartment. I watched for a couple of seconds before turning in the opposite direction, heading back to my apartment, with a new spring in my step.\n\n*\n\nThe next day, before I had to get to the stadium, I called her office, because I realized that I had forgotten to get her cell number.\n\n\"Erin Connelly, who is this?\"\n\n\"Darcy.\"\n\nThere was a pause before she answered. \"Sorry, Mr. Darcy, but I met someone last night. He's not quite up to your standards, but he has the advantage of not being fictional.\" She hung up.\n\nOf course, I immediately called back. \"Very funny, Erin.\"\n\n\"I thought so,\" she replied.\n\n\"So you'd turn Darcy down for me?\"\n\n\"Don't push your luck, Ray. It isn't hard to beat out a fictional character, no matter how charming or rich.\"\n\n\"Fair point, Erin.\" I paused. \"I wanted to tell you how much fun I had last night, and I hope I can see you again, soon.\"\n\n\"I had fun, too, Ray, and yeah, we should get together again. What's your schedule?\"\n\n\"We've got night games tonight and the rest of the weekend, and then we're on the road for a week. I could meet you at the bar, or wherever, for a late drink after the game. Or I could leave you a ticket and you could come one night, and we could go out after.\"\n\n\"So, what you're saying, is that we could see each other late this weekend after the game, and I have the option of sitting through a minor league baseball game or not?\"\n\n\"Pretty much. I mean, I can get you two tickets, so you don't have to sit alone.\"\n\n\"Very thoughtful of you to allow me to bring a date to the game before our date,\" she said, and I could hear the teasing tone in her voice.\n\nI figured that I'd try to respond in kind. \"Actually, I was kind of hoping you'd bring a hot friend.\" There was what seemed like a long silence. I figured that I had gone too far.\n\nErin laughed. \"Probably thought that you just blew it, right?\"\n\nSheepishly, I responded, \"Yeah.\"\n\n\"Nah. It was funny. Not gonna happen, but still funny.\" She paused. \"How about two tickets for tonight. My brother will probably be available, and we can take it from there, OK?\"\n\n\"Perfect. They'll be at Will Call. And I'm looking forward to meeting your brother.\"\n\n\"No, Ray, you really shouldn't be.\" And with that ominous statement, she hung up.\n\nWhy, I thought, do I always fall for women who like to mess with me?\n\n*\n\nI got two key outs in the seventh with men on base before leaving for a lefty, and we won, so I was feeling pretty good. After showering, shaving, and making sure that every part of me looked and smelled as good as possible, I made my way to the player's entrance. Behind the kids and their parents looking for autographs, I saw Erin, wearing a team T-shirt probably a size too small for her and a pair of tight jeans. She was standing next to an enormous man, maybe 6' 4\", with muscles, short red hair and a red beard, marking him as likely Erin's brother. As much as I wanted to go straight to her, I took the time to sign a few balls and programs for kids. I remembered how excited I was to get autographs from players, and always made sure to sign.\n\nBut when the kids got bored with me and turned to my teammates, I made a bee-line for Erin and her enormous brother. Since we had barely kissed each other, I awkwardly kissed her cheek and kind of squeezed her arm before turning to the giant next to her. \"Ray. Ray Poole.\"\n\n\"Liam. Connolly. Erin's overprotective brother,\" he rumbled, in a deep menacing voice. I guess the look I gave him was pretty funny, because he burst out laughing, as did Erin, and he clapped me on the back, almost knocking the wind out of me. \"The look on your face, Ray. What did you think I was going to do to you?\"\n\n\"Frankly, I'm not sure. I have a little sister, too...\"\n\n\"Ray, if you think that this one needs me to protect her, you've got a lot to learn.\"\n\nI nodded, having already figured that out. But still, the idea that I might get on this behemoth's bad side was troubling.\n\n\"Actually, Ray,\" Erin interrupted, putting her hand on my arm, \"Liam here is the gentle sensitive brother. It's Sean that you have to worry about.\"\n\nMy reaction again must have been hilarious, because both of them burst out laughing again. I am so fucked, I thought to myself.\n\n\"You did a nice job tonight, Ray,\" Erin said, apparently moving past the \"fuck with Ray's head\" part of the evening.\n\n\"Yeah, Ray. That out pitch of yours looks unhittable.\"\n\n\"Thanks. Believe it or not, I learned it from a 17 year old girl.\"\n\n\"No fucking way,\" Liam responded.\n\n\"Yep. it's a pretty good story, I think. How about I tell it over a beer.\"\n\n\"Ray, are you inviting my brother on our date?\" Erin responded with what I hoped was mock unhappiness.\"\n\n\"I'm sucking up, Erin. And I couldn't stop him from joining us if he wanted to, could I?\"\n\nLiam guffawed. \"You're learning fast, Ray.\"\n\n\"With my arm, I've always had to be 'coachable.'\"\n\nLiam looked at his sister. \"I see why you like this one, E.\"\n\nIn the parking lot light, I could see Erin's face turn pink, but she didn't wait before responding, \"He seems alright, so far, but we'll see.\" She shot me a gut melting smile to let me know that she was joking, although I wasn't sure how much.\n\n\"Great, then. I'll meet you at the bar.\"\n\n\"I'm going to ride with you, Ray, if that's OK?\" She looked at Liam, who nodded.\n\n\"Of course, Erin.\"\n\nWe walked toward the players' parking lot, not saying anything, and I just enjoyed her presence next to mine. We made small talk in the car, and while it was free and easy, I felt an undercurrent of tension, and not in a bad way. I parked the car, and we walked to the bar, where Liam was already seated, already drinking a beer. Erin sat down next to her brother, and she let me head to the bar to get a beer. Gerry smiled as he poured the amber liquid into pint glasses. \"Two nights in a row, Ray? Impressive.\"\n\n\"I don't know, Gerry. There's something there, I think.\"\n\nHe shrugged. \"Liam's a gentle giant, too.\"\n\n\"So I've heard.\"\n\n\"Still, I'd stay on his good side.\"\n\n\"I plan on it.\" I paid for the beers and left a nice tip, returning to the table. As I approached, the Connellys stopped talking, so I figured they were talking about me.\n\nWe sat and drank our beer. I told them the story of Allison and Will and the changeup, and how it resurrected my career. Liam told some stories of his work as a firefighter, and he told a couple of slightly embarrassing stories about Erin, although I sensed that he was a little afraid of going too far and pissing her off.\n\nAfter draining his beer, Liam stood, looming over the table and said, \"Good to meet ya, Ray. I'm out. Early shift tomorrow.\"\n\nI noticed that he and Erin shared a look, and Erin nodded subtly. I stood and let Liam surround my hand with his much bigger hand, which he shook, before pulling me in for a back clapping man hug.\n\n\"Have fun, kids,\" he said, smiling as he left the bar.\n\n\"Want another?\" Erin asked.\n\n\"Sure.\" I knew better by now than to offer to pay. Instead, I enjoyed watching Erin walk to the bar, and watching pretty much every man join me. I saw her chat briefly with Gerry, both laughing, before she returned with two fresh beers. She sat down next to me, put down the beers, and briefly stroked my arm before taking a drink.\n\nI couldn't tell you what we talked about, but Erin was mesmerizing to me. And it was hard to force myself to look at her eyes only, when her too-small t-shirt strained to restrain her full breasts.\n\nWe finished the beers, and Erin said, \"OK, I think I'm done.\"\n\nStanding, we walked out of the bar to the street. I desperately wanted to spend the night with her, but before I could say anything, she turned to me and said, pointing to our left, \"Three blocks that way?\" I nodded. \"That's the crappier direction,\" she stated, matter of factly.\n\n\"Is it?\"\n\n\"It used to be. Why don't we head that way and see if it still is.\"\n\nIt took me a second to understand what she was saying, and when I did, I must have grinned so goofily that Erin laughed. \"A little slow on the uptake, Poole?\"\n\n\"Apparently. I'll make it up to you.\"\n\n\"Yes, you will.\"\n\nShe took my hand and we walked, maybe faster than normally, toward my apartment, which, thankfully, I had cleaned.\n\nWe started kissing before the apartment door was closed, and I sensed that her hunger was equal to mine. It didn't seem worth wasting time making out in the living room, so I took Erin's hand and led her back to my bedroom. I could see the smile on her beautiful face as she put her purse down on my dresser and without any further words, pulled the t-shirt over her head. I was transfixed by the sight of her pale skin, sprinkled with freckles, and the pale pink lacy bra that supported her large breasts, her hard nipples distorting the thin fabric of the bra. She reached behind her back, unhooked the bra and wriggled out of it.\n\nHer breasts were spectacular. Full and round, they sagged slightly, and were tipped by perfect-sized pale areolae and large pink nipples that I desperately wanted to suck on. She let me gawk at her for a few seconds, before unbuttoning her jeans and pulling them down, revealing a matching set of tiny panties and long, slender legs.\n\n\"Are you just going to watch, Ray, or are you planning on getting undressed yourself?\" she asked, in a tone of voice that mixed desire and bemusement.\n\nI woke from my lustful reverie and quickly removed all of my clothing, which allowed my steel-hard cock to spring to attention. Erin licked her lips, sexily, and removed her panties, giving me my first view at her pink labia, with a small patch of red hair remaining above the otherwise shaved pubic area.\n\n\"On your back, on the bed, Ray,\" Erin demanded, and I saw no reason not to comply. I pulled back the comforter and blanket, revealing my good set of white sheets and laid back against the pillows. Erin walked toward me, her breasts swaying a little as she walked, and she sat on the bed next to me. I attempted to sit up and kiss her, or, even better, her hard nipples, but she pushed me back.\n\n\"Ray, life is too short for us to try to figure out what we like in bed. So, here's how it's going to go. I'm going to suck your cock until you come, which I expect will not take very long, based on how hard you are, and how attracted to me I know that you are.\" I nodded. \"Then, you're going to go down on me, and follow my directions until you bring me off, at least once. Then, once we get that out of the way, we're going to make love as long as both of us can take it. OK?\"\n\nWhat else could I say, but \"OK.\" And with that, Erin took my throbbing cock in her hand, leaned down, and put the tip in her mouth. I felt shocks of pleasure as she used her tongue, hands and lips to hit all of my most sensitive spots. After some time attending to the tip, Erin began to take more and more of my cock into her warm, wet mouth, until I could feel the tip touch the back of her throat, before she eased back. I was in ecstasy as she bobbed her head up and down, her red hair obscuring her face, so that I could only feel, not see what she was doing.\n\nI began to feel myself reaching my climax, and my hips began rocking in rhythm to her bobbing, when Erin reached over with her free hand and lightly stroked my balls. That was enough to bring me right to the edge. \"Erin, I'm gonna come,\" I blurted out, and in response, she increased her pace, stroked my balls more, and then, as I started shooting my cum into her mouth, she clamped her lips against my cock, taking every drop.\n\nSpent, I sunk into the bed, and watched as Erin lifted her head, swallowed what was in her mouth, and smiled at me. Her face and upper chest were flushed red, and her eyes looked wild with what I think was lust. Before I could say anything, she turned and ran toward the bathroom. I watched her perfect ass as she closed the door. I could hear water running, and she returned to bed, crawling over me and lying on her back next to me, legs slightly parted.\n\nI took a few seconds to survey the stunning woman next to me. Long legs, what appeared to be a beautiful pussy, flat stomach leading to those two large breasts, falling slightly to the side, long neck and gorgeous face. Her pale skin, with its all over freckling, and the slightly darker skin of her areolae and nipples called to me, and all I wanted to do was kiss every freckle, from her forehead to her toes. Rolling to my side, I began to do exactly that, with long detours spent kissing her pink lips and her neck before lavishing attention on both of her breasts.\n\n\"Good, Ray, like that,\" Erin whispered as I licked and sucked her nipples. \"Now, Ray, gently bite them.\" I must have done it right, because she moaned, saying, \"Yes, Ray. Yes. Harder.\" While doing that, I reached down, and ran my hand over her hairless mound, feeling the moisture that came with her arousal. I slowly kissed my way down her body, as she spread her legs wider to accommodate my body, and I could smell her scent, which turned me on even more, if such a thing were possible.\n\nI placed a kiss below her small unshaven patch of pubic hair, and felt one of Erin's hands rest itself gently on my head. \"Ray, go slowly, work your way around and don't touch my clit until I tell you.\" I nodded in agreement. I slowly kissed, licked, and nibbled my way around her labia, and could hear Erin moaning softly, occasionally using her hand, or a subtle shift of her hips to get me to the spot that she wanted. Although she didn't tell me to do so, I slowly slipped a finger inside her slick pussy.\n\n\"Umm. Good Ray, yes, like that,\" Erin purred as I continued to lick her and move my finger in and out. I could feel her hips begin to move in rhythm with my finger.\n\n\"Now, Ray. Now!\" Erin demanded, and I switched my attention to her small, sensitive nub, first licking slowly, then faster, as Erin's hips began to thrash, and her moans began to get louder. I continued thrusting my finger, then a second finger, inside her while working my tongue against her clit. Feeling that she might be getting close to an orgasm, I began to gently suck and nibble on her clit.\n\n\"Yes, Ray! Yes! Yes! Yes!\" Erin yelled, as I could feel her legs shake and her pussy clamp against my fingers. I kept working over her clit as she thrashed against me and the bed, yelling and panting until I felt her go rigid, then collapse on the bed, breathing hard.\n\n\"Wow, Ray. That was amazing,\" she whispered, as she tried to control her breathing. I realized that I was also out of breath, and that my face was covered in Erin's deliciously fragrant juices. Remembering her actions after her blow job, I went into the bathroom and rinsed my face before returning to bed. I was still hard as a rock from getting Erin off, and as I approached the bed, she smiled.\n\n\"Make love to me, Ray.\"\n\nI didn't need more encouragement. \"Should I get a condom?\"\n\nErin shook her head, her hair rustling against the pillow. \"I'm clean and on the pill. Assuming that you're clean, we don't need it. And if you're not clean, I'm out of here.\" She smiled to let me know that she was joking.\n\nI nodded. \"Clean as a whistle. Whatever that means.\" I smiled.\n\n\"Then get into bed, Ray.\"\n\nI climbed in, and on top of her, kissing her lips, feeling her breasts against my chest, and her legs wrapping around me. She reached down, grabbed my cock and guided it into her still lubricated hole, and it felt incredible.\n\nAs Erin had promised, we made love as long as both of us were able, before we passed out, sweaty, exhausted and sticky, entwined in each other's arms and legs. I had never had a woman so clear and specific about what she wanted in bed\u2014most women I had been with were willing to allow me to attempt to find out their likes and dislikes by the tried and true trial and error method. But there was much to be said about having Erin eliminate all of the wasted time by telling me specifically what she wanted me to do, and not do, and the results seemed to prove her system's value.\n\n*\n\nWe made love again in the morning before Erin took me to her favorite breakfast place in the neighborhood, a nondescript hole in the wall that I had walked past a few times, but never considered entering, which turned out to be a mistake. Erin, who had grown up in the neighborhood, knew everyone there, it seemed, and was treated as sort of a local celebrity. I guess it was some combination of her beauty, the fact that she was a college professor, or close to it, despite what seemed to be relatively humble roots, and her personality. Nobody seemed to know who I was, even when my name was given, which was a fair commentary on the celebrity value of a minor league player who was not a top prospect. And that was fine with me. Just being with Erin, and watching her engage the workers and other customers in the place, was more than enough for me. And the prospect of more time with her, clothed and otherwise, was exciting.\n\nAfter breakfast, we kissed on the street as she headed back to her apartment and I went to mine. It being Saturday, she didn't have to work, but I had a game to prepare for. She declined my offer of tickets, claiming a family obligation, and told me to text her after the game to see if she was free for any post-game activities. I began to pray for a rainout, but the weather was great, and there was no precipitation in the forecast.\n\nI didn't pitch that night, because our starter threw a shutout for 8, and Arroyo, who had been having a great season closing, shut them down. I think I was the first one out of the locker room that night, and I was willing to endure the ribbing from the guys if it meant a chance to spend another night with Erin. As I walked to the parking lot, I texted her, and she responded that she'd meet me at my place. Driving as fast as I felt I could get away with, I screeched to a halt in front of my apartment, jumped out of the car, and nearly ran to the door, where I was greeted by the sight of Erin, smiling, wearing a tight tank top and shorts that showed off her long, shapely legs. As I approached, she stood, and I pulled her close for a kiss. We barely made it inside before our clothing was disappearing, and we fell into bed, naked and breathing hard as Erin directed me on exactly how she wanted me to fuck her from behind, while she was on her hands and knees, and her perfect butt raised in the air. And my apparent ability to successfully follow her directions led to another spectacular blow job that ended not with my cumming in her mouth, but with her riding me to mutual orgasms, as I stared at her swaying tits.\n\nFrom then on, we spent as much time together as possible. She came to games and even out drinking with some of my teammates, and I went to lectures and plays at the college, and even spent some time in art museums. And, of course, there was amazing sex.\n\nTo me, the only strange thing was that we always went back to my place at night. I knew that her parents were dead and that she lived with her grandmother, but after that one time, I never saw Liam again, and I never met Sean. I never dwelled on that because I was totally infatuated with her, and between my time with Erin, and my time at the stadium or on the road, I had enough going on.\n\nOne Saturday night, after I had pitched well and Erin had completely rocked my world, we were lying in bed as I counted my blessings when she asked me to have lunch with her and her family at her apartment the next day. We had a night game, and I could squeeze in lunch but had to head out to the stadium right after. In retrospect, she seemed nervous, but I didn't give it much thought. The only downside was that Erin wouldn't stay overnight, saying that she needed to help her grandmother get ready for lunch, and despite my desperate attempts to dissuade her, as usual, Erin did exactly what she wanted.",
        "The next afternoon, I showed up at the address that I had been given. It was what looked like a single family row house, not dilapidated by any means, but a little worse for wear. I noticed that the building had ramps leading up to the front door. Erin had told me that her grandparents had bought it, and her parents also lived there when she was little. I was nervous, in part because I sensed that Erin was nervous, because I knew that Liam would be busting my chops, and because I was not only meeting Erin's grandmother, but also Sean. Everyone warned me about Sean.\n\nI rang the bell, and nervously shifted from leg to leg as I waited, wearing my best casual clothes, and carrying two bouquets of flowers. Footsteps approached, and I was happy to see that it was Erin who was letting me in, giving me a few seconds with her before having to meet her family. I realized that I hadn't met the parents of a woman that I was seeing since Liz in college, if you didn't count meeting Jillian's parents right before we drove north together, and I didn't. I kissed her briefly on the lips before handing her one of the bouquets.\n\n\"Thanks, Ray. They're beautiful. Is the other one for Grandma?\"\n\n\"Actually, Sean.\"\n\nAfter a brief pause, she laughed loudly. \"Better give them to Grandma. Sean's more of a chocolates and scented candle kind of guy,\" she replied, smiling.\n\nWe had entered into a vestibule, with a flight of stairs leading upstairs. Erin led me past the stairs towards the back of the house, where something smelled good.\n\n\"Smells like Italian food,\" I ventured.\n\n\"Yep. Grandma's famous lasagna.\" I must have looked surprised. \"Ray, just because we're Irish doesn't mean we eat corned beef and cabbage and potatoes every day.\" I nodded, and she continued. \"Although Grandma does make a mean corned beef and cabbage.\"\n\nWe turned off the hallway into the kitchen. Sitting at the table was Liam, who made the room look tiny, and an overweight gray haired woman, sitting in a wheelchair attached to an oxygen tank, which, I assumed, explained the ramps. I could see through the next room, where the table was set for lunch. Liam jumped to his feet, somehow made his way around the kitchen table, and reached out to pump my hand.\n\n\"Good to see you, Ray.\"\n\n\"You, too, Liam.\"\n\n\"Grandma, this is my friend Ray,\" Erin said.\n\nShe reached out her arm, and I took her hand and shook it. \"Nice to meet you, ma'am. These are for you.\" I handed her the flowers.\n\n\"They're beautiful, Ray. Thanks.\" She handed them to Erin, who had already pulled two vases down from a cabinet.\n\n\"Everything smells so good. I rarely get a home cooked meal during the season.\"\n\nErin's grandmother smiled. \"That's right. Erin told me you're a ballplayer. My Frank used to love to go to games, but I haven't been in a long time. Anyway, Ray, you aren't leaving here without some leftovers.\"\n\n\"That would be great, ma'am. And if you want to come to a game, I can get you tickets whenever you want.\"\n\nShe smiled, but I noticed out of the corner of my eyes both Liam and Erin subtly shaking their heads.\n\n\"Thanks, Ray. Let me discuss that with my kids here, and we'll let you know.\"\n\nThere was an awkward pause in the conversation, as Erin busied herself getting drinks, a beer for Liam, and cold water for the rest of us. She already knew that I didn't like to drink before a game. A timer went off, and Erin said, \"Liam, take Ray into the dining room, and call Sean.\"\n\nLiam obediently rose from the table and I followed in his wake into the dining room. He pointed to a seat and said, \"That's for you, Ray. Next to Erin.\"\n\nI sat where I was told, and waited, alone, as Liam walked into the hallway and turned toward the back of the house, yelling, \"Sean, get your fucking ass out here now. It's lunch time.\"\n\nLiam returned and sat across from me, and I noticed that there were two places set with no chairs. As I pondered the meaning of that, I heard the sound of wheels on floor, and a huge man in a wheelchair rolled into the room, pulling up to the table and stopping. He was, possibly, bigger than Liam, but with long, dark hair, and tattoos covering almost all of his huge, muscular arms. He wore gloves on both hands, and stared at me as if I had killed his dog.\n\n\"Sean, this is Ray, E's friend,\" Liam said, in a pleasant voice.\n\nSean looked at me and nodded.\n\n\"Nice to meet you, Sean.\"\n\n\"Is it, Ray?\" he replied, spitting my name out as if it were a curse. \"Erin,\" he yelled toward the kitchen, \"bring me a fuckin' beer, OK?\"\n\nErin came into the dining room. She looked a little flustered, but no less beautiful. Holding a bottle of beer in her hand, she stood a few feet away from her brother. \"Are you going to behave, Sean?\" she asked sternly. Sean glared at Erin. \"Are. You. Going. To. Behave. In. Front. Of. My. Guest?\" Erin asked, enunciating every word. Sean said nothing. Erin turned on her heel, carrying the beer back to the kitchen.\n\n\"Fine, Erin. Bring me the fucking beer, and I'll be a good boy.\"\n\nErin returned and handed Sean the beer. \"You'd better,\" she said in a low, menacing tone, which I immediately filed away as something I never wanted her to use with me. As Erin returned to the kitchen, Sean drained half the beer in one swig and banged it down on the table.\n\nErin rolled her grandmother into the dining room, to the head of the table, and she took her napkin and put in on her lap. \"You OK, Seanie?\" she asked her grandson.\n\n\"Yes, Grandma,\" Sean responded gently.\n\nI was beginning to understand why Erin hadn't invited me to her house before this, and I hoped that I'd make it out alive.\n\nLuckily, Erin appeared carrying a bowl, filled with salad, and handed it to me. I took a portion and passed the bowl across to Liam, who did the same, passing it to Sean, who filled his plate and his grandmother's before putting the bowl in front of Erin's place. We ate the salad, and I answered Erin's grandmother's questions about where I was from, and about the team. Liam occasionally interrupted to keep his grandmother on topic, while Sean ate, drank his beer and glared at everyone. As we all were finishing the salad, I saw Erin shoot Liam a look, and he nodded before standing and clearing our plates. He returned with a huge tray of lasagna which looked and smelled incredible.\n\n\"Wow,\" I exclaimed. \"That smells incredible.\"\n\n\"Wait until you taste it, Ray,\" Liam responded. He cut the lasagna and put a hunk on everyone's plate\u2014bigger ones on the men's plates and smaller ones on the women's. It was clear that they were waiting for me to start, so I cut off a small piece and stuck it in my mouth. It was as delicious as expected.\n\n\"That's incredible. Wow,\" was the best I could muster.\n\nErin's grandmother responded, \"Thanks, Ray, but the credit goes to Erin. She made it.\"\n\nI looked at her, a little surprised. \"Really?\"\n\nA little defensively, Erin replied, \"Grandma walked me through every step. It's her recipe, but I just put it together.\"\n\n\"Oh, Erin, don't be ashamed,\" her grandmother responded. \"You can be a modern woman and still cook.\"\n\nI watched Erin turn bright red, and I reached out and touched her arm. \"It's delicious. Thanks,\" I whispered.\n\n\"So, what's so great about this guy, Erin, that you fucking cook for him?\" Sean demanded.\n\n\"Can it, Sean,\" Erin responded.\n\n\"No, really, E. A mediocre minor league pitcher? What's so great about him?\"\n\nErin's color, which had faded, rushed back into her face as she stood up and walked around the table to her brother. \"What's great about him, Sean, is that unlike you, he's a gentleman, and not a drunken idiot who is filled with anger and self-pity.\" Showing surprising strength, she pulled Sean's chair from the table, and wheeled him out of the room. I could hear Sean cursing at her, and then a door slam, followed by the sound of her footsteps before she reentered the dining room and sat down at her seat.\n\n\"So, where were we?\" Erin asked, taking a bite of the lasagna.\n\n*\n\nAfter dessert, I was stuffed, and needed to get to the stadium. I kind of hoped not to have to pitch because I felt like the Pillsbury Dough Boy. Erin offered to walk me home, and after saying good bye to everyone except Sean, and carrying a heavy package of leftover lasagna, we headed back to my place.\n\nAbout a block into our walk, Erin turned to me. \"Sean wasn't always like that, y'know.\"\n\n\"Really?\"\n\n\"Yeah. He used to be like Liam. Imposing, but sweet. Sure, he wasn't afraid to mix it up\u2014none of us was\u2014but he was a great big brother to both of us.\"\n\n\"What happened?\"\n\n\"Sean and Liam are a year apart, and were inseparable. In high school, they were defensive ends on the football team, and played together in college. When Sean graduated, he followed my dad into the Fire Department, and a year later, Liam joined up. After my parents died, my brothers took care of me and Grandma. Long story short, Sean was at a fire\u2014he went into a house to save some kids\u2014and a wall came down on him. We thought he was dead, but he recovered, but was paralyzed from the waist down. That's when he started to drink, and get angry, and fight. Even from his chair, he was getting into it with people, and it rarely ended well.\"\n\n\"That's terrible.\"\n\n\"Yeah. But instead of trying to overcome his problems, he just wallows in self-pity. He and Grandma spend most of their time alone in the house. We have someone come by a couple of days a week to take Grandma out for air, and keep her active, and Sean will roll himself out whenever he wants. Sometimes he comes back drunk, sometimes he's bruised and bloody, and sometimes he's gone for a few days. Luckily, we know a bunch of local cops, and the firefighters all look out for him, but he's become really toxic. I'm sorry you had to see that.\"\n\n\"Really, it was no problem. He seems afraid of you.\"\n\nShe smiled a devilish smile at me. \"He should be, right?\"\n\n\"Yes, ma'm,\" I replied with a grin.\n\n\"I don't take his shit, and I'm not going to let him insult my friends, or make life harder for Grandma, who has emphysema and other problems of her own.\"\n\n\"Sorry.\"\n\n\"There's nothing to be sorry about, Ray. It is what it is. And I deal with it. Although you probably understand why I haven't invited you over before.\"\n\nI nodded. \"It's really OK. But I expect you to be making me that lasagna again soon.\"\n\n\"Don't push your luck, buddy.\" Her harsh tone was belied by the big smile on her beautiful face and the twinkle in her blue eyes.\n\nAt that point, we had reached my place. We kissed, and Erin turned to head back. Of course, I watched her walk away for a few seconds before heading into my apartment to change and head to the park.\n\n*\n\nA week or so later, we were returning from a reasonably successful road trip, still in second, but keeping it close, when Teo called me aside after we had gotten off the buses and asked me to come to his office. I was no longer worried about getting cut\u2014I'd been having a good season\u2014but I thought maybe Arroyo was being called up and they would be making me the closer, which would be great for both of us. I entered his office, and he and Bobby were waiting.\n\nTeo smiled at me. \"Poole, you lucky motherfucker. Pack your shit, you need to be on a flight to Los Angeles first thing tomorrow.\"\n\nIt took me a second to realize what he was saying. The big club was in LA, which meant that I was going to the major leagues. \"Wait. What the fuck? Why not Fonzie?\"\n\nBobby laughed. \"Good point, Ray. Let me call them back and suggest that.\" I must have looked horrified. \"Look, kid, I'll be straight with you. They're grooming Fonzie to close for them, and they need a long man/setup guy. They don't want to mess up Arroyo by changing his role. You've been doing great in that role all year.\"\n\n\"Sorry, I'm in shock, guys.\"\n\n\"Me, too,\" said Teo. \"Remember, I saw you pitch in the low minors.\" He smiled broadly at me. \"Look, Ray, Cal turned his ankle, and they expect him to be out for a couple of weeks, so that's probably the maximum time you'll be up. But depending on how you do, and how much you pitch, they might send you back earlier, or keep you longer.\"\n\nI nodded. I understood how teams managed their relief pitchers, and someone like me, who could throw multiple innings, or just one, and had minor league options, could be shuttled back and forth. The goal was, at least, to stay on the shuttle and not let this be my only shot.\n\nAs I was thinking, Bobby interrupted my reverie. \"Ray, I have faith in you. You've pitched with and against a lot of these guys in spring training, so you know what to expect. Do the work, listen to the coaches and the veterans, fit in, and pitch like your life depends on it. Because it fucking does.\"\n\n\"Thanks, Bobby.\"\n\n\"And one more thing.\"\n\n\"What?\"\n\n\"Enjoy yourself. You're about to realize your childhood dream.\"\n\nHoly shit, I thought to myself. He's right. \"I need to call my parents.\"\n\nTeo chuckled. \"You're right. And that hot girl who's been hanging around with you for some reason.\"\n\nI nodded again, still dumbfounded.\n\n\"The ticket will be emailed to you later, and make sure you're at the airport fucking early.\"\n\n\"Thanks, guys.\"\n\nBobby stood up and shook my hand. \"Although I'm probably going to see you in a couple of weeks, I hope I don't see you until spring training.\"\n\n\"Same here,\" I said, laughing, and walked out into the now empty locker room in a daze to pack up my stuff and make some very happy phone calls.\n\n*\n\nSomehow, I ended up sitting in the dugout in Dodger Stadium, wearing a major league uniform with my name on it and an unfamiliar number, 62.\n\nThe flights were a blur, as was the ride to the stadium, my brief meeting with Tommy Burleson, the veteran manager, and a slightly longer meeting with Jason Cordero, the pitching coach, who I had worked with a little during the spring. I was told to be ready to pitch at any time, but also to be ready to be sent back without throwing a single pitch, which I understood, but hoped would not be the case. I got my uniform and other equipment and was given a locker with the other pitchers, a few of whom I knew from the minors or the spring, but it was still all bizarre. I jogged in the outfield and stretched to get loose as the crowd began to arrive, although Dodger crowds were notorious for their late arrival and early departure, all blamed on the traffic.\n\nI followed the other relievers to the pen, and found myself a seat toward the edge of the group. I was trying to look like I belonged, when I heard a vaguely familiar voice yelling, \"Ray. Ray Poole.\"\n\nTurning toward the sound, I saw two young, attractive women. The one yelling looked familiar, but it wasn't until she stopped yelling that I realized who it was.\n\n\"Allison?\"\n\nA big smile broke out across her face, as she whispered something to her friend.\n\n\"Go, on rook. Talk to the lady,\" Sammy O'Leary, a veteran reliever, grunted to me, so I walked over to the fence.\n\nI noticed that both Allison and the other woman, who appeared to be Latina, and poured into a skin tight dress, were wearing lanyards with official credentials.\n\n\"Allison Pullman. What are you doing here?\"\n\n\"I'm an intern with the Dodgers. I work in the promotions department.\"\n\n\"Wow, that's great.\"\n\n\"Yeah. But wow, Ray, you made it. I'm so proud of you.\"\n\n\"Thanks, Allison.\" I paused. \"You know, I owe it all to you. And Will.\" I noticed her face cloud over when I mentioned his name.\n\n\"I told you that was a good pitch.\" She paused. \"Will, on the other hand turned out to be an asshole.\"\n\n\"I'm sorry.\"\n\n\"Yeah, whatever,\" she said, but the expression on her pretty face belied her true feelings. \"By the way, this is Maria Fernandez, one of the other interns. She's from L.A., and has shown me around.\"\n\n\"Nice to meet you, Maria.\"\n\n\"You too, Ray. Allison told me all about when you stayed with her family.\"\n\n\"They took good care of me.\"\n\n\"By the way, Ray, Mom and Dad told me to say congratulations to you.\"\n\n\"Tell them I say hi.\"\n\n\"I will.\" She paused and looked a little embarrassed, as Maria gave her a look. \"Uh, Ray, Maria really wants to meet Edwin Rosario. Could you ask him to come over?\"\n\nI barely knew Rosario. He had signed with the team from the DR when he was 16, and he shot up to the majors. We were never on the same team, but did meet during spring training. I had no idea if he had a girlfriend or a wife, but I figured, why not try to introduce him. \"Sure. Let me get him.\" I turned and found Edwin speaking in Spanish with one of the other pitchers and the bullpen catcher.\n\n\"Edwin, remember me? Ray Poole?\"\n\n\"Yeah. Sure. Welcome.\" His English was still spotty, but I assumed he'd understand the next part. \"That girl over there,\" I pointed, \"Is a friend of a friend, and she wants to meet you.\" His big smile, as he appreciated Maria's curves, made it clear that he understood my meaning, if not necessarily all of the words. He stood and followed me to the fence.\n\n\"Maria, Edwin. Edwin, Maria.\" They started speaking in rapid Spanish, and I turned to Allison.\n\n\"College is good?\"\n\n\"Yeah, it's great. I'm majoring in sports management, I pledged a sorority, I love it.\"\n\n\"That's great. I'm happy for you. Look, I have to go, the game's about to start, and I don't want to mess up on my first day.\"\n\n\"Can we catch up after the game? I can take you to the best taco truck. Maria introduced me to it.\"\n\nI thought about it. \"I'd love to. But this is my first night. I don't even know where I'm staying tonight.\"\n\n\"Oh, you're at the Hyatt Regency. It's nice. Most of the visiting teams stay there.\"\n\n\"Thanks. How about we do it tomorrow? I'll feel more settled in, OK?\"\n\nShe looked a little disappointed, but put on a smile. \"OK. Then how about tomorrow morning? There's a cool breakfast place near the hotel. Good pancakes\u2014and before you ask, not as good as Betty's.\" I laughed. \"I can pick you up at, say, 8\u2014is that OK? I have to get to work.\"\n\n\"That'll be fine. I'll still be on east coast time anyway.\"\n\n\"Poole, stop flirting with that girl and sit your ass down,\" bellowed the bullpen coach, and he was right.\n\n\"See you tomorrow, Allison,\"\n\n\"Bye, Ray.\"\n\nI went back to the bench and took the appropriate shit from everyone, except Edwin, who had a big smile on his face. Even after I explained who Allison was, the teasing continued, until Sammy O'Leary came over to me. \"Wait, that's Allie Pullman?\"\n\n\"Yeah, Sammy. Goes by 'Allison' now.\"\n\n\"Shit, she was just a kid when I stayed with the Pullmans.\"\n\n\"I stayed with them, too.\"\n\n\"Nice family. Girl's really grown up.\"\n\n\"She's in college now. Clemson.\"\n\n\"No shit.\"\n\n\"Yeah. I'm having breakfast with her tomorrow morning.\"\n\n\"Tell her I said, hi, and to say hi to Sandy and Terry.\"\n\n\"Will do.\"\n\nThe game had started, and we tried to pay attention from our vantage point. Every once in a while, I had to remind myself where I was. And that if I stayed for more than a few days, I'd make more money than in the whole AAA season.\n\n*\n\nBreakfast with Allison was fun. It was a classic Los Angeles morning, where the light filtered through the smog, and the temperature was comfortable, but you knew that it was going to get hot later. But of course, the restaurant was well air-conditioned as we settled into our booth. She caught me up on her life. She loved college, loved her classes, loved her sorority. She brought me up to date on her parents, who continued to rent out the room to players, although she claimed they never liked anyone as much as they liked me. I told her to pass along regards from Sammy.\n\nWhile we ate the good, but not Betty's good, pancakes, I told her a little about my last couple of years, although really, it was just pitching and moving to new places.\n\nAllison told me about her job with the Dodgers, which was pretty low level, but if she did her work, and didn't interrupt, she could pretty much wander around the offices and even sit in on meetings. She told me that her goal was to be a GM someday. I was encouraging, but understood that considering the few available jobs, and the lack of any women holding them, it was even less likely than my making the majors. But I was proof that there was no reason not to try to live your dream.",
        "The only uncomfortable part was when she asked me if I was dating anyone, and I told her about Erin, and that I thought that there was a future for us. Allison seemed disappointed, but only briefly, and I remembered back to what Jillian had said about her having a crush on me all those years ago. But when I asked her about her social life, she was vague, mentioning that she had dated a few boys in college, but none of them for any length of time.\n\nEventually, I had to get back to the hotel to get ready and catch the bus, and while Allison offered to drive me to the stadium, it was too early, and I wanted to ride the bus with the guys, anyway. She dropped me at the Hyatt Regency, and I went upstairs to get my stuff and be ready.\n\n*\n\nThe lights seemed a hundred times brighter than on any baseball field that I had ever played on, and the crowd a thousand times louder. I took the ball from Jason, who said, \"Just throw strikes, Ray. It's the same game you've been playing since you were a kid.\" I nodded because my mouth was too dry to say anything.\n\n\"Ray, we're losing by 8. You can't fuck things up much worse,\" said Corey Calhoun, the veteran catcher, clearly trying to break my obvious tension. He patted me on the butt and returned to the plate, where a major league hitter was standing in the batter's box, in a game that counted.\n\nI looked in and got the signs from Corey, and took a glance at the runner leading off first. Normally, I might toss one over, but I was worried I might heave it into the stands. Focusing on Corey's mitt, I threw a fastball, up and in. It was a little more up and a little more in than I planned, and the batter, who I realized was All-Star second baseman Alex Tavares, jackknifed backwards. Corey took off his mask and smiled at me and made the universal signal with his glove for me to calm the fuck down.\n\nTavares was glaring at me from the box, and I threw a slider low and away, which he swung at and missed. He fouled off my next pitch, and I threw another ball. Corey signaled for the change up, running in, and I threw it perfectly. Tavares swung hard, and missed by a foot. I noticed him looking at me funny when he walked away.\n\nI had just struck out my first batter in the major leagues. No matter what ever happened in my life, my name would appear in a big league box score. Fuck you, Mr. \"organizations need lots of arms.\"\n\nSince I had come into the game with one out and a man on first, after our starter had given up 6 runs in the sixth, all I needed was a ground ball. The next batter was a light hitter, their shortstop, Paul Hogarth. Corey called for a fastball outside, and he swung and missed. He then called for the change, running left, and it did exactly what it was supposed to. Hogarth topped the ball to our first baseman, Orlando Vargas, who fielded it and stepped on the bag to end the inning. I had done what had been asked of me, and I trotted off the field, although I'm not sure that my feet were actually touching the ground. (When I checked the video later, though, they were.)\n\nJason clapped me on the shoulder. \"Good job, kid. You're done for the night.\"\n\nThat was it. My debut was over, and I had no idea what was going to happen next. I decided to stay on the bench and watch the rest of the game, which didn't get any better for us.\n\nThe locker room was quiet after the blowout loss. A few of the guys that I had come up with came by to quietly congratulate me, as did a couple of the veterans, which I really appreciated. When I checked my phone, I had messages from former teammates, my parents, friends, old coaches, Erin, and Allison.\n\nI started to respond to the texts when the bus was ready to head back to the hotel. Some of the guys were going out, but others just wanted to get back. I spent the ride talking with some of them, and texting, mostly with Erin. When we got back to the hotel, a couple of the guys offered to buy me a celebratory beer at the hotel bar, and I couldn't say no.\n\nWhile we were drinking, my phone dinged with a message from Erin.\n\n\"I hope you're enjoying tonight!\"\n\nI quickly responded, \"I am, but wish you were here.\"\n\nA few seconds later, the phone dinged, and the message was a smiley face, a baseball and a thumbs up.\n\n\"Texting with your girlfriend?\" Sammy O'Leary asked.\n\nI nodded sheepishly.\n\n\"OK, Rook, let's see a picture,\" Corey demanded.\n\nI scrolled through my pictures until I found one that was good, but not at all suggestive. I turned the screen around.\n\n\"Whoa, Ray!\" Corey exclaimed, leaning in to get a better look. \"What's her story?\"\n\n\"Grad student. Teaches at the college.\"\n\n\"Shit, man, if I knew there were women like that teaching in college, I woulda gone,\" said Jimmy Ellison, our backup infielder.\n\n\"Trust me, Jimmy, I did go to college, and I never had a professor who looked like Erin.\"\n\nSammy looked at me. \"So, you probably can't wait to get back and see her, right?\"\n\nAnd that was the rub. \"I think I'd rather stay up here as long as possible, honestly.\"\n\n\"Don't fucking tell her that,\" Corey interjected, laughing.\n\n\"Hey, if I stick around, maybe she'll join me.\"\n\n\"Lemme see that picture again, Rook,\" demanded Jimmy. After looking at it, he said, \"You better hope so.\"\n\nI shrugged. \"Look, I know that I'm probably here for a couple of weeks, max. But who knows?\"\n\n\"Kid, that changeup might keep you here. If not this time, then some time,\" Corey stated.\n\n\"Thanks, Corey. I hope so.\" I turned to Sammy. Y'know, I learned that pitch from Allison Pullman.\"\n\nHe looked shocked. \"No fuckin' way, Ray.\"\n\nSo, I told them the story, after which, we finished our beers and went to our rooms to sleep. I knew that I had to savor every minute in the luxury hotel before my likely return trip back to my apartment.\n\n \n"
    ],
    "authorname": "JayDavid",
    "tags": [
        "life",
        "relationships"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/big-league-dreams-ch-03"
}