{
    "title": "Just Cole And Jen",
    "pages": [
        "I punched viciously at my iPhone, resigned to the fact that I wouldn't be flying out tomorrow; not at those prices. My ridiculous weekend trip would end on Sunday evening no matter what I did. There was no way to bail out early. I was stuck here.\n\nIt had taken eleven long months for my divorce to be final. By Washington State law, it could have been over in ninety days, but Kelly, as always, was in the mood to give me a hard time. I couldn't understand it. She came from money, I didn't. We both earned roughly the same salary, which, combined, was a beyond respectable household income. Our only child was out of the house. We should have been able to walk away relatively unscathed, everything being even.\n\nBut that wasn't how it went down. Long, expensive, wasteful months followed my discovery of her clandestine texts to a vendor at her work and everything that came with them. They were still together, and you'd think she wouldn't be able to get rid of me fast enough. Not so. She fought me over every little thing, especially items we both knew she didn't care about, just to make me miserable. In the end, she couldn't really touch me, and I maintained an excellent standard of living anyway, unlike most divorced guys. We did still have contact, but only on matters regarding Brandon, nothing else.\n\nI hadn't seen him much in all that time, and that's why I was sitting here in Champaign Urbana, Illinois. He was a freshman at the U of I, and we'd had standing plans for me to visit him the first weekend the divorce was final.\n\n\"Had\" being the operative word. He wasn't at the airport, and when I finally got hold of him, he didn't even pretend that he forgot. You could hear the party sounds in the background. Normal for eleven thirty on a Friday, except it was eleven thirty a.m.\n\nHe then informed me that he wouldn't have much time for me this weekend. Oh, he took my hotel info and all, but he'd made a lot of commitments to \"the guys,\" and he could maybe - maybe- squeeze me in on Sunday for brunch. He didn't even flinch when I martyred a little and reminded him I'd flown in all the way from Seattle.\n\n\"Jesus, Dad,\" he said, \"It's not like I asked you to come.\"\n\n~~~~~\n\nAnd there you have it. I sat at a table in a small sandwich shop whose claim to fame was allegedly Roger Ebert's favorite sub sandwich, wondering what in hell I was going to do for the next couple of days. I don't want to offend you if you're from that area, but as I stared out the window watching the college kids shambling by, desperate to escape the cold, I didn't see a lot for a fifty year old to do.\n\nFeminine arms suddenly encircled my body. I became aware of two enormous breasts pushing into my back as the arms squeezed me tighter and a soft cheek pushed into the side of my neck. \n\n\"Mr. Pickinpaugh, what are you doing here?\" a quavering voice whispered as I was treated to a familiar lavender scent.\n\n\"Jen,\" I exclaimed, breaking free so I could stand up and give her a real hug. \"I was going to try and find some time for you this weekend.\"\n\nBrandon and Jen had known each other since the fifth grade and made the journey from Seattle together. Sort of. Brandon had always planned on attending the U. of I. It was his grandfather's Alma matter, and it was a law set in stone from an early age that Brandon would go there too. Jen followed to be with him.\n\nI didn't complain too much. It's a good school, and Grandpa Jack, Kelly's father, insisted on footing the fifty K out of state tuition. Sold. Jen wasn't so lucky. I don't know how her parents swung it, but there was no denying that she and Brandon would be together. They had been an item for over three years, almost four.\n\n\"You look great, Mr. P. Are you here to see Brandon?\" she asked as we finally broke apart. The hug had lasted too long, was too tight and her whole body had been quivering. She looked about to cry.\n\n\"Hey, hey,\" I said, pulling her back towards me. She threw her arms around me again, squeezing tightly and started crying softly into my chest. \"Do you want to get out of here and...\"\n\n\"She needs to get back to work.\" a cold voice said behind me. I noticed for the first time that Jen was wearing unflattering brown slacks and a polyester white shirt. I had been so focused on her gorgeous face and teary eyes that I hadn't even noticed.\n\n\"She's obviously upset,\" I said, turning to face a short, burly woman. Her face was round and scarred from years of problem acne.\n\n\"So what? We're all upset. Life's hard. She ain't even worked her way up to server yet. Then it gets hard.\"\n\nC'mon,\" she said, grabbing at Jen's arm. \"Those tables ain't gonna clear themselves.\"\n\n\"Let's give her a minute to go to the restroom and compose herself,\" I said, putting myself between them. \"Do you want someone bussing tables while they're crying?\"\n\n\"Don't care.\" she said. \"As long as the table gets cleared. She'd better stop crying soon. She needs to toughen up.\"\n\nI saw red. Jen was probably the sweetest person I knew, an excellent product of exceptional parenting. She was plenty tough enough and certainly didn't deserve to be treated this way by that bitch.\n\n\"How much do you make in this dump, Jen?\" I growled, \"It can't be more than a hundred a week, right?\"\n\n\"Not even,\" she said, wiping her eyes. See? She was already mostly put back together.\n\n\"Well, you just quit then,\" I said, tearing the nametag off her shirt and throwing it in the rotund manager's outraged face. \"I'll hire you right now, and you're getting a raise. Do you have anything here you need?\"\n\n\"Just my purse and coat,\" she said, her rich brown eyes wide and staring at me.\n\n\"Would you go get them, please?\"\n\n\"Laura,\" yelled the manager. \"Go back there with her and make sure she don't take nothing.\"\n\n\"Oh, please,\" I said. \"What could she possibly steal from here? Your face razor?\"\n\n\"Sir, I'm going to have to ask you to leave. Right now.\" \n\n\"If you think I'm waiting out there while Jen's in here, you're crazy,\" I snapped. \"And here she is.\"\n\nJen was back with her coat already on, her purse clutched under her arm, and another coat over it.\n\n\"I found this in back,\" she said, indicating the coat. \"It's been missing since I started working here last fall. It was in HER locker that was, fortunately, open.\"\n\nI looked over her shoulder to see Laura smirking. Maybe I had fomented a revolt.\n\n\"I hope Fat Ass here didn't ever wear it, or her whale back will have ruined it.\" I said. \n\n\"Get out of here,\" Fat Ass yelled.\n\n\"With pleasure,\" I said. \"And, ma'am, subs aside, you're not going to get a positive Yelp review from me.\"\n\nGiggling, Jen grabbed my elbow and propelled me out the door, making sure she flipped a spectacular bird on her way out. As we walked towards my rental sedan, I noticed all eyes in the diner window on us. They might not have approved, but they were definitely entertained.\n\n\"Holy crap, Mr. Pickinpaugh,\" Jen said through her giggles. \"What brought that on?\"\n\n\"Jen,\" I said as I opened the door for her, taking her purse and extra coat from her so she could easily slip into the seat. \"I may not have given you the best life lesson there. You should learn to stick things out no matter how shitty it gets, but that fat bitch's lack of respect for you pissed me off too much.\"\n\n\"I had no idea you hated heavy people so much.\"\n\n\"Well, now you know,\" I said, waiting for her look of surprise. I wasn't disappointed. \"Hah, hah. Come on, Jen, you've known me forever. It's not like I have any room to talk. I don't care about that. It's just that I could tell she was insecure and I thought I'd hit her where it hurts. Nobody messes with our Jen.\"\n\n\"Our Jen,\" she sighed. \"Well, thanks. My hero. I think.\"\n\n\"How much were you making there?\" I asked as I turned the car towards campus.\n\n\"I couldn't get any hours.\" she said. \"I was lucky if I cleared one fifty a paycheck.\"\n\n\"Tell you what, I'll pay you two hundred a week to be my assistant. All you have to do is keep your grades up and keep that useless son of mine in line.\"\n\n\"Oh, Mr. P.,\" she said with a catch in her voice. \"There's a lot you don't know, isn't there?\"\n\n\"What do you mean?\" I asked.\n\n\"First off, I would never take that much money from you.\"\n\n\"Oh yes you would.\" I said, firmly.\n\n\"Oh, no, I wouldn't.\" she replied, firmer. \"And I can't watch Brandon for you. I'm leaving school.\"\n\n\"What?\" I sputtered. \"Why?\"\n\n\"A lot of reasons.\" she said. \"First...\"\n\n\"Hold on,\" I said, \"is this going to take a while?\"\n\n\"Probably.\"\n\n\"Then let's go somewhere decent so we can get a bite. I stormed out of there without eating and I'm HUNGRY.\" \n\n\"Men,\" she smiled. \"Okay, but can I change first? These pants suck, and I think I need to change my shirt.\"\n\nIt was then I finally noticed that I'd ripped her polyester shirt when I'd pulled the tag off. The torn part was hanging down, exposing a sizable portion of her even more sizable upper breast restrained by a utilitarian bra. She could have covered it or closed her coat, but, for some reason, she didn't.\n\nAs we drove the five minutes back to campus, I kept the mood light by telling her stories about my first college roommate, affectionately nicknamed Earth Pig, and his aversion to the whole shower experience.\n\n\"Okay, okay,\" she giggled as we pulled up. \"Park over there and wait. I'll only be five minutes, I promise.\"\n\nI tried to reach Brandon while I waited. He should have told me about Jen. As expected, it went straight to voicemail. I already knew he'd never answer a text. Been there, done that.\n\n\"Here I am,\" Jen said as she opened the car. As she leaned in, I was captivated once again by her magnificent breasts. Her coat was hanging open and they were practically spilling out of her inappropriate-for-the-weather tank top. As she brought her leg in, I pondered how she could even pull on a pair of jeans that tight in such a short time. Was there some sort of mechanical device or butthorn, like a shoehorn?\n\nAs we ate lunch, I learned what a sacrifice her parents had made to send her to such an expensive school, a price they apparently couldn't pay anymore.\n\n\"They missed the last payment,\" she explained. \"They're going to miss the next one. And the school's been pretty nice about it, but money's money, ya know? I should be gone already before any more fees are charged, but my dad can't afford to rent a truck to get me until the twenty-eighth when he gets his next paycheck. They're being so cool here and letting me stay until then.\"\n\n\"What about student loans or Pell Grants, or something, anything?\" I asked, and seeing the look on her face immediately began to backpedal. \"Okay, okay...sorry. I'm sure you've exhausted every resource possible.\"\n\n\"Yup,\" she said, stealing one of my Greek fries. \"It took all that just to get me here. That's why I had that shitty job. They could never really afford to send me here. I was a selfish bitch insisting on it.\"\n\n\"You mean you're not mad?\"\n\n\"At them?\" she snorted, \"Hell, no. Look what they tried to do. They screwed up their credit even more for me. It's not their fault it didn't work out.\"\n\n\"What does Brandon think about all this?\" I asked.\n\n\"I don't think he knows,\" she said, looking at me carefully. \"I don't know why he would.\"\n\n\"Why? What do you mean?\" I asked. Why was she giving me such a funny look?\n\n\"Like I said, I think there's a lot you don't know, Mr. P.\" she said. \"We broke up about a month after we got here.\"\n\n\"You two what?\" I couldn't believe it. I had come to believe Jen would be my daughter-in-law some day. She was a keeper.\n\n\"So, that's why,\" she said. \n\n\"Why what?\"\n\n\"Why I never heard from you. I thought you'd probably want to know how I was doing. I was expecting your call. I was pretty hurt when I never got one. \"\n\n\"Jen, sweetie, I promise this is the first I've heard anything.\" I said. \"But why would you think I would call? You know I care for you, but I hardly think that would be my place.\"\n\nShe cleared her throat and took a deep breath.\n\n\"Mr. P., I'm going to tell you something you aren't going to like. You might even hate me when you hear it, but I swear it's the truth.\"\n\n\"Let's have it, then.\" I said. \"And I could never hate you, sweetie.\"\n\n\"We'll see,\" she said, pursing her lips. \"As soon as we got here, Brandon pledged the SAE's, you know, legacy, because of Grampa Jack.\"\n\n\"Sure.\"\n\n\"Well, he was pledging, right? And I hardly ever saw him. It was quite a letdown, because before, we were always together so much, you know?\"\n\n\"Yeah, it must have been hard.\" I said. I never thought he treated her particularly well - I'd even spoken to him about it - but she was so sweet and seemed to really love him. Her plan seemed to be to wait long enough for him to grow up and figure it out. I didn't know if I really wanted to hear all the details of a teenage breakup, but she seemed determined to tell me.\n\n\"It was, but I had classes, and my roommate, Nikki -she's my bestie now - is a lot of fun, so it wasn't so bad. He left me on my own for the first few weekends, but Brandon told me he was going to take me to a big SAE/Delta Zeta mixer and that I should dress as sexy as possible so all his frat brothers would be impressed.\"\n\n\"Okay.\"\n\n\"So you know me, Mr. P. I'm all right looking, but I don't really whore it out like a lot of the other girls. But this time, I went and got a dress I couldn't really afford. I practically maxed out my credit card. And it's so slutty, Mr. P., it has...\"\n\n\"Let me stop you right there, Jen,\" I said. \"I don't really need to hear about the particulars of your outfit. And I'm sure you're just as pretty, prettier even, than all those other girls.\"\n\n\"I know you think that,\" she said, blushing, \"That's why you always called me 'Miss Model Material.' \"\n\n\"But not in a creepy way,\" I said, defensively.\n\n\"Did I ever make you feel that way?\" Jen looked at me in surprise. \"If I did, I'm sorry. No, you've always been sweet and complimentary, not like Brandon, who always liked to point out my flaws.\"\n\n\"Jen, I find it hard to believe you have any flaws.\" I said, not believing how much I was gushing, but unable to stop. \"I mean, you were a cute kid, but now, as a young woman, I think you're perfect.\"\n\n\"It has all kind've come together, hasn't it?\" she asked, smiling. \"But I've let you get me sidetracked, and I have to tell you this.\"\n\n\"Okay.\"\n\n\"So we went to the party, and I was going to bring Nikki, but Brandon said he wanted it to be just him and me. So we went and we danced, and I don't remember too much after my second glass of punch.\n\n\"Brandon said he was horny and we could go to a room upstairs, and I hadn't seen him in so long, I was really happy to go up with him.\"\n\n\"Jen, really....\n\n\"No! You have to hear this part. So we...we did it, and it seemed like the party was really loud, but I was too messed up to notice it so much, and then when we were done - it didn't take long - he got off me and I saw that there were, like, five other guys in the room. They had been cheering him on; that was what I was hearing.\"\n\n\"That little shit,\" I said, \"Wait 'til I get a hold of him.\"\n\n\"Wait,\" she said, \"there's more. So I started screaming bloody murder, you know, yelling that they all should leave, but instead of that, they started pulling their pants down. Brandon leaned over me and held my arms above my head, shushing me. He told me they were all going to fuck me, but that I'd really enjoy it if I just let it happen.\"\n\n\"Oh, my god!\" I was horrified. \"Jen, did they...\"\n\n\"It didn't happen, Mr. P. Lucky for me, I wasn't as fucked up as I was supposed to be, I don't know why. I think they were all just going to rape my passed out body, but I was able to put up a fight. I kicked the first one in the face, and he got really mad and slapped my thigh as hard as he could. It hurt so bad, but it also woke me up a little. \n\n\"So I was able to keep my legs together and make it hard on them. And then, suddenly, there was Nikki and this guy named D'Andre. He's a black guy in our Intro Soc course and he's huge. Anyway, they came into the room and got me out of there. Nikki was screaming at the top of her lungs. I haven't spoken to Brandon in person ever since.\"\n\n\"Hope not,\" I said. \"But you didn't press charges? I'd think I would have heard about that, at least.\"\n\n\"It would have been our word against the whole frat. And, anyway, don't you watch the news? That's not how colleges work. Besides,\" she said, suddenly the weariest looking person in the world. \"I just wanted it all to go away.\"\n\n\"You're remarkably calm telling me this.\" I said. \"Not like before.\"\n\n\"Well, it all seemed to come bubbling up when I saw you, and I did cry a lot at first. Thank God for Nikki. I still don't understand how Brandon, of all people, could do that to me. I told my mom, and she was furious. My dad wanted me to move forward legally, but I just couldn't.\"\n\n\"Maybe you should have,\" I said, pensively. \"And don't worry about me protecting Brandon. I can't defend him on this. Maybe you still can. Prosecute him, I mean. Everybody records everything on their phones nowadays, maybe we could still subpoena...\"\n\n\"I said I don't want to, all right?\" Jen suddenly yelled at me. The whole restaurant was looking at us, me especially.\n\n\"Sorry, everybody,\" Jen said sheepishly to everyone around us. \"I just got a little excited. Everything's fine. He's fine.\"\n\nIt was then I noticed a couple of large, young gentlemen heading back to their seats. They looked interested in pounding me into a pulp.\n\n\"Sorry, really, \" I said.\n\n\"No, I'm sorry,\" she said. \"I didn't mean to blow up like that. This is still hard stuff for me.\"\n\n\"Is there anything I can do?\" I asked. \"I'm so sorry. I raised him better than that. Did you ever find out why all this happened?\"\n\n\"Finally.\" she said. \"I wouldn't talk to him, but three days later I got a call, and it was from back home. I didn't recognize the number so I picked it up. It was Kelly.\"\n\n\"Kelly?\"\n\n\"Yeah, she begged me, Mr. P., BEGGED me to talk to Brandon, said he would explain everything to me, make it all right; so, like a total idiot, I did.\"\n\n\"What did he say?\"\n\n\"What do you think he said?\" she asked sourly. \"He actually had the nerve to tell me he was forced to do it by his pledge master and that he thought I'd be okay with it.\"\n\n\"You've got to be kidding me,\" I said. I couldn't believe my son. He should be rotting in jail right now.\n\n\"I think he really thought I'd be passed out and never figure it out. So I told him to fuck off and hung up. Not ten minutes later Kelly called back. She didn't exactly threaten me, but she implied that Grampa Jack could make things hard for my dad at work, and you know how bad it is for him there already. I didn't even know he had anything to do with that place, but I guess he does.\"\n\nI sat back and surveyed her warily. I found this story almost impossible to believe. I had divorced Kelly for being a cheating slut, but this was going too far, even for her. And while her father did have that \"boys will be boys\" mentality, he had known Jen almost as long as I had. It didn't seem reasonable. Could Brandon do what she said he did? Unfortunately, that was the thing I found easiest to believe. I don't know if the divorce had something to do with it, but he'd changed since going away to school.\n\n\"So now you know,\" Jen said so softly I could hardly hear her over the restaurant's din.\n\n\"Jen, I'm going to get to the bottom of this.\" I promised.\n\n\"Please, please, can we just let it all be over?\" Jen asked, further fueling my doubts about her story. \"I followed a boy halfway across the country. It didn't work out, so I'm going back. Oldest story ever told.\"\n\n\"Okay,\" I said, \"but if you ever need anything from me...\"\n\n\"I know you've always liked me,\" she said. \"Even before I got hot, you were always so nice and so positive about me. Brandon's other friends' dads always used to ignore me, and then they started to perv out on me. With you, it was always respectful and loving.\"",
        "\"I'm glad, because that's the way it was meant,\" I said, looking at my phone. I still hadn't checked into my hotel. \"Well, kiddo, why don't I give you my cell? You can give me a call when you get back and maybe your parents will invite me over when your mother makes her famous tamales, hint, hint, hint.\"\n\n\"Okay,\" she smiled, grabbing my phone. \"So, what are you going to do this weekend?\"\n\n\"I have no idea,\" I admitted. \"I was supposed to spend time with my worthless son, but he bailed on me. Now that I'm in the loop, I'd rather not even see him, but I'm stuck here 'til Sunday evening, bored out of my mind.\"\n\n\"Hmmm,\" she said, \"I can't let that happen.\" She was quiet for a moment. \"Mr. P., can I ask you for a big favor?\"\n\n\"Sure, anything.\"\n\n\"Well, I noticed you have a suit bag with you in the car.\"\n\n\"Yes, I'm not going straight home. I'm taking a detour to visit a client.\"\n\n\"This is going to make me look bad,\" she said, obviously afraid to ask, but looking excited too. \"I always wanted to go to Whaley Inn for dinner when I was here. Brandon promised me that before we even got here.\"\n\n\"And what, pray tell, is Whaley Inn?\" I asked.\n\n\"It's the best restaurant in this part of Illinois,\" she said. \"And it's real expensive, so if you don't want to take me, I understand, but I have this other dress - a whole outfit really - that I've wanted to wear forever. It's not slutty like the other one - it's classy, you'll like it - and they have these amazing asparagus appetizers and the most glorious salad bar in the Midwest. They have dancing with a live jazz band, not just some deejay, and it would be so cool to go there, but I know it'll be a lot, so just say no if...\"\n\n\"Stop! Please!\" I said, putting up my hands. \"Do you have any idea how fast you talk when you get excited?\"\n\n\"Umm, yes?\" she said demurely, head down but looking up at me with those radiant eyes of hers and the cutest little smile.\n\n\"Jen, I would love to take you there, but I'm not sure we'll be able to get in if it's as popular as you say.\"\n\n\"You let me worry about that,\" she said. \"I know people. I'm just not sure whether it'll be tonight or tomorrow. Do you care?\"\n\n\"Hey, I'm stuck here,\" I said. \"Anything you can do to help amuse me would be greatly appreciated. Well worth the cost of dinner.\"\n\n\"Okay, then,\" she said, giving me a crooked smile I'd never seen before as I signed the receipt. \"I'll find out what's up and get back to you later this afternoon.\"\n\n~~~~~\n\nI was desperate to call Kelly, but I made myself wait until I'd checked in and unpacked so there would be no distractions.\n\n\"What do YOU want?\" she asked when she picked up. I suppose I should have been grateful she answered at all.\n\n\"Hello to you, too.\" I said. \"This isn't business, exactly, but it is about Brandon. I need to talk to you.\"\n\n\"About what?\"\n\n\"Well, I'm here in lovely Chambana, and he's ignoring me...\"\n\n\"What do you expect me to do about it?\" she cut in. \"You're relationship with your son is your own business. Leave me out of it. I'm not here to fix it for you.\"\n\n\"I am leaving you out of it.\" I said, doing my best to keep a civil tone. \"I'm calling because, just now, I had an interesting conversation with Jen.\"\n\n\"With Jen,\" she said after a moment. \"Oh.\"\n\n\"Yeah, mother fucking right, 'Oh'. How much of this is true?\"\n\n\"I'm not sure,\" she said, swinging hard at the softball I had just lobbed. \"You know she always was a little liar.\"\n\n\"Really? Hmm.\" My heart sank. It was all true, then. \"Do tell, Kelly. Name me one time she ever lied to us. About anything.\"\n\n\"It was stuff I never bothered you with,\" she said defensively. \"High school stuff.\"\n\n\"Nice try,\" I said. \"You've never liked her, I don't know why, and you would have gladly ratted her out to me if she had. As far as I know, Jen's never lied to me, but we both know about your track record, don't we?\"\n\n\"Why are you calling?\" she asked in an icy tone. I knew she was seconds away from terminating the call.\n\n\"So it's all true? And you haven't pulled Brandon out of school?\"\n\n\"Pulled him out?\" she sounded shocked. \"Whatever for?\"\n\n\"What for? Kelly, he was going to let his frat buddies RAPE her.\"\n\n\"That's what she says,\" she said. \"You'll notice she's lying pretty low.\"\n\n\"That's what rape victims do,\" I said tersely. \"So you and your father didn't threaten her, then?\"\n\n\"I just pointed out a few things.\" she said smugly.\n\n\"Okay, so now it's my turn,\" I said. \"I'm going over to his dorm and drag his sorry ass out of there. He's coming home with me. I'll cancel my ticket and rent a U-Haul for all of his worthless shit.\"\n\n\"You'll do no such thing!\" Kelly screeched. \"He's nineteen now. You have nothing to do with his college. Nothing. You were all too happy to let Daddy pay for it, weren't you? So now you have NO SAY, no input whatsoever. Daddy and I want him right where he is.\"\n\n\"Well then, I'll...\"\n\n\"And don't even think you're going to go to the school or anything. Nothing can happen if she doesn't push it forward, and she won't.\"\n\n\"You made sure of that, didn't you?\" I knew I was beaten.\n\n\"What if I did?\" she asked, once again all superior and self-satisfied, God, I hated that about her. \"I'm not going to let her ruin his life.\"\n\n\"Kelly,\" I said, after counting to ten. I could have counted to a hundred for all the good it would do me. \"What kind of life lesson are we giving here? That you can just skate by with no consequences?\"\n\n\"Oh, you and your 'life lessons.' It was just a drunk frat boy thing. Nothing really happened. She'll get over it.\"\n\n\"How do you know?\" I asked, outraged. \"This could traumatize her for life.\"\n\n\"Boo hoo,\" she said coldly. \"Why don't you go comfort her, then? You've always had the hots for her.\"\n\n\"You know what? Go to hell.\" I said. \"I can't believe I married you. How could I have missed how...how evil you and your family are? You got what you wanted, didn't you? You couldn't hammer me with the divorce since you're the one who cheated and Brandon's gone, so you've corrupted him, put this awful thing between us.\n\n\"He's an adult now, God help us, so you and I are done. If I'm invited to his wedding, I'll smile and stand next to you and even take pictures, all for the sake of the bride, who I'm sure won't deserve any of what she'll be getting. Aside from that, I look forward to never speaking to you again.\"\n\nShe was yelling something, but I didn't hear it. I had already pressed OFF.\n\n~~~~~\n\nIt was over an hour later when I heard the ringtone. I hadn't moved a muscle. My back was sore, my heart was broken, and my head felt like it had been stomped like a vat of grapes.\n\n\"Mr. P.\" Jen's perky voice was not a welcome intrusion right now. Nothing was. \"We can't go until tomorrow night. I hope that's okay.\"\n\n\"Not a problem, Jen,\" I sighed. \"It's for the best. I'm really tired. I'll just grab something around here and crash.\"\n\n\"No way,\" she said. \"No way. I know. I know I dropped a major bomb on you today, and by now you probably know it's all true. I'm not going to let you sit around and mope, especially since I started it all.\"\n\n\"No you didn't.\" I said.\n\n\"I know, I just meant the messenger part. So here's what's going to happen. You like Italian, right? Who doesn't like Italian?\"\n\n\"I love Italian.\"\n\n\"Right, so you're going to pick me up at six thirty and we're going to go to this great, little dive. You're going to love it. Dress super casual. After that, we'll go do something that you might find a little lame at first, but if you let it, I think you'll have a fun time.\"\n\nI was no match for this bundle of energy. \"Okay, six thirty.\"\n\n\"Six thirty, Mr. P. Bye now.\"\n\n\"Wait, wait,\" I called. \"Don't hang up.\"\n\n\"What?\"\n\n\"I'm getting awfully tired of this 'Mr. P.' crap. How many times have I asked you to call me Cole?\"\n\n\"Like, a lot.\"\n\n\"I thought so.\" I said. \"That's the way I remember it. It's Cole from now on, or no Wharfey Inn.\"\n\n\"It's Whaley Inn.\"\n\n\"Whatever. You're not with Brandon anymore. As a matter of fact, I'll try to never bring him up again.\"\n\n\"That would be great, Cole,\" she said.\n\n\"See, that was easy. But if YOU feel like it, you can talk about him whenever you want. No eggshells.\"\n\n\"Perfect,\" she giggled. \"Now be on time, COLE. I'll be waiting and it's cold out there.\"\n\n~~~~~\n\nShe was true to her word. She smiled as she slid in the seat. \"Cole, did you get here five minutes early just for lil' ol' me?\"\n\n\"Well, yeah,\" I replied. \"Can't have my Jen shivering in the dark.\"\n\n\"'Your Jen,' \" she sighed, leaning over and kissing my cheek. Her breast pushed accidentally into my arm, but maybe it wasn't so accidental, because it sure took a long time for her to pull it away. \"Always the charmer.\"\n\n\"Cole coming easier now?\" I asked.\n\n\"It always was easy,\" she said, murmuring something as she turned her head to find the seatbelt. \n\n\"What's that?\" I asked.\n\n\"It's what I've always called you in my head.\" she said, looking flushed. Was she blushing?\n\n\"Then why didn't you ever use it?\" I asked. \"God knows I asked you to enough.\"\n\n\"Brandon didn't like it.\" she said. \"He didn't mind if I called your wife Kelly, but he never wanted me to call you by your first name.\"\n\n\"Why not?\" I asked.\n\n\"Can we talk about something else, please?\" she asked.\n\n\"Um, sure.\"\n\nWe talked about a lot of something elses. It went easy, because we'd had so many conversations when she was younger. I had always considered her an intelligent, mature girl, but now, at the ripe age of nineteen, she was an impressive young woman, indeed. She hadn't grown up in poverty, but she hadn't been so far from it, and that life experience had made her wiser than her years. She had developed an impressive core of self-reliance, a refreshing lack of entitlement and a wary acceptance of life on life's terms.\n\nWe continued talking as we waited in line inside the popular restaurant. I had a hard time concentrating on anything else when she took off her long coat to reveal illegally tight black yoga pants leading to white UGs one way and an orange and white Illini sweatshirt the other. My eyes kept involuntarily dropping to that delectable, round teenage ass as we stood there, and she never reacted. She either didn't notice or didn't care, because she never let on. It was big and round, but perfectly shaped and tight at the same time. I felt like a creep.\n\nThe food wasn't bad; it was one of those Italian places with slow service that placated their patrons with bread and dipping sauce. After much coercion, I took a little nibble.\n\n\"What's the matter, Cole?\" Jen asked. \"I don't remember you not liking bread.\"\n\n\"I like it too much, that's my problem.\" I said. I'd started working out when I moved out. What the hell, nothing else to do besides watch ESPN Classic, the divorced guys channel, and I began assiduously watching my carbs and sweets.\n\n\"How much have you lost?\" she asked. \n\n\"Forty three pounds, as of this morning,\" I said. \"Pushing for fifty, then I maintain.\"\n\n\"I don't know if you need to lose any more. You might lose some of that sexy, new muscle mass,\" she said, reaching out to squeeze my bicep. \"But you do look a lot better,\" she said, tilting her head to critique me. \"You always carried your weight well. You were always cute, but now that you've lost this...\" and she reached under my chin and rubbed where my jowls used to be, \"you've gotten hot. And not 'hot for a dad' hot, but just flat out, 'this guy is hot when he walks into a room' hot.\"\n\nI was embarrassed but also pleased with her compliment. \"What about you?\" I asked. \"Are you just perfect because you're young, or do you have to do anything for it?\"\n\n\"So far things are where they're supposed to be,\" she said with a proud smile. \"But I'm working hard so everything stays the same. Gotta maintain, too. I don't want to wake up one morning with an ass the size of Kansas.\n\n\"And I love bread, too, although I never eat any,\" she said, slathering a piece with butter, \"but this weekend we're celebrating. Or commemorating, or something.\"\n\n\"What?\"\n\n\"I don't know if I'll ever see you again.\" she said, sounding forlorn. \"So I'm going to spend as much time with you as I can. I want to be with you as much as possible over the next two days. I'm not his, and you're not married to his mother anymore, so now we're just Cole and Jen, and we can have a great weekend together.\"\n\nShe was looking at me with such hope. I looked back at her, realizing that I didn't want this to be the last time I saw her either. I hadn't seen her much this last year since I moved out, hadn't thought about her much, really, and yet, and yet...\n\n\"I'm sure we'll see each other,\" I said, knowing I was shining her even as the words were leaving my mouth. \"We're both going back to the same place, aren't we? I'm sure our paths will cross somewhere.\"\n\n\"Of course they will,\" she said, smiling, letting me get away with it.\n\nAnd suddenly she was off to the races again, telling me all about her new BFF, Nikki, and how they had bonded over gymnastics. I was never aware Jen was into that.\n\n\"Oh, I was,\" she said seriously as she reached across the table and speared one of my tortellini. \"This was before you really knew me. I know everybody says they were good, but I really was. You can ask my mom. But one day I woke up, and I was tall, like five ten, and then the next week I suddenly had boobs, and then the NEXT week I had BIG boobs. My ass too.\"\n\n\"You don't have a big ass,\" I protested. \n\n\"It's big and round, Cole,\" she said, smiling mischievously. \"But I think you like it anyway.\"\n\nAhhhh, damn! Busted.\n\n\"You couldn't have kept on?\" I asked quickly, trying to move on.\n\n\"I guess,\" she shrugged, \"but I wanted to be great. You just can't move the way you need to with these, so my gymnastics career was over in a month.\"\n\n\"That must've been hard.\"\n\n\"So hard,\" she sighed. \"I cried for months. I eventually moved over to dance, you've seen me do that, but it's not the same. And anyway, when I dance now, built the way I am, I look like I should be on a pole, which I have considered, by the way.\"\n\nI gasped. \"You can't do that, Jen.\" Trying to keep it light, I said, \"You can't do that. Your father didn't molest you...or DID he?\" I batted my eyelashes at her.\n\n\"Of course not, you dork,\" she laughed, punching my arm.\n\n\"An uncle perhaps? Maybe it was a janitor, or maybe that creepy youth pastor at your church?\"\n\n\"While I admit Pastor Antonio was a little creepy, nothing like that ever happened to me,\" she answered primly. \"Seriously, though, I have considered it.\"\n\n\"Why?\"\n\n\"Because of the MONEY, Cole,\" she said. \"It's always been such a struggle, and I see how much some of those girls make. It would make paying for school cake.\"\n\n\"It would destroy you,\" I said. \"I know what I'm talking about.\"\n\n\"Oh, really?\" she asked, giving me that crooked smile again, which I now interpreted as her naughty look, \"Have you been making it rain?\"\n\n\"Twice since I moved out, dragged there both times.\" I said. \"I felt stupid. But I know because my last girlfriend before Kelly was one.\"\n\n\"Really, what was her name?\"\n\n\"Gina,\" I said.\n\n\"No, no,\" she said, grinning. \"Her stripper name.\"\n\n\"Oh,\" I said, embarrassed. \"Dynamite.\"\n\n\"You dog, you...\" she smirked. \"What was that like?\"\n\n\"Total chaos. I think that's why I fell so hard for Kelly. Law and order for the last twenty six years.\"\n\n\"Yeah, she's a real rule follower all right,\" Jen said darkly. \"If I'd known about her, I would've told you.\"\n\n\"Ahh, nah,\" I said. \"You didn't need to get in the middle of all that.\"\n\n\"But I like being in the middle,\" she purred. I suddenly felt a soft foot gliding slowly up my left leg. \n\n\"Jen...\" I said.\n\n\"Oh, lighten up, Francis,\" she said, pulling away slowly. \"C'mon, we're going to be late.\"\n\n\"It'll be faster to walk; no parking, \" she said as I began to steer us towards my rental, \"No, it's this way.\"\n\nTaking my hand, she lead me towards the home of the men's gymnastic team. \n\n\"This is girl porn, right here,\" she said, gripping me tightly as if she never wanted me to let go. It felt nice.\n\n\"Here, we'll go up here,\" she said, pulling me up the risers near the back. \"This is where we always sit.\"\n\nThe place was almost full already. We got the last two seats at the end of the row among a mixed group of rowdy teenagers. Jen introduced me around as Cole, and I received a few suspicious looks for a while, but they soon lost interest in me and went back to what they were doing, whatever that was. Mostly their phones.\n\n\"Nikki's running late,\" Jen told me after checking hers. \"I can't wait for you to meet her.\"\n\nWe each had our own seat, but she snuggled up next to me, repeatedly pushing her breast into my upper arm. The meet turned out to be fascinating. I was especially impressed by the strength of the guys on the rings. Jen continued to press close, pointing out technical details to explain why one performance was better than another. I was too wrapped up in her and the scent of lavender to pay much attention, and then something else happened.\n\n\"Hot in here,\" she said, making an X with her arms and slowly peeling her sweatshirt off. Something in my mind, a beautiful thing, slowed the motion down even further. It's something I'll remember until I die, and probably after that, even.\n\nHer arms crossed, and she pulled the sides of her sweatshirt up. Her black shirt got caught in the motion and bared her midriff for an instant. It was flat and light brown, not that fake orange. No way should her stomach be that dark this time of year in the Midwest, unless she tanned. I happened to know it was her natural skin tone because of her Latin heritage. The sweatshirt continued up, pulling her breasts higher until it finally let them free. They each fell with an impressive, independent bounce. I was spellbound.\n\nShe turned to me and smiled. She wasn't wearing a t-shirt as I'd first thought. It was a black camisole top with tiny spaghetti straps. No bra under there. It might as well have been a tube top, showing way, way, WAY too much cleavage. If she moved too quickly, I knew a nipple would be exposed. I found myself desperately needing to know whether it would be brown or red. Maybe something delightfully in between. Pink wasn't even an option with her dark skin.\n\nJen knew what she was doing. She crossed her arms under her breasts, pushing those babies up until they were practically falling out of her top. I finally pulled my eyes away and looked up to her face. She was grinning from ear to ear. We turned back to watch the meet; well, maybe she did, but I was gone. How can you concentrate on anything else when a gorgeous young thing is attaching herself to you more and more as each minute passes? Her boobs were like magnets to my iron eyes, and all I can say about her is that, well, she let me. I got caught perving I don't know how many times. I would get flushed, but she only looked back with that knowing, crooked grin. I was starting to like that, too.\n\n\"What happened to the gentleman I used to know?\" she whispered in my ear.\n\n\"What happened to your bra? Hell, Jen, I'm only human.\" I whispered back.\n\n\"I know,\" she said, patting my arm. We returned to watching the crazy young men swinging around. She pulled away and I quit looking. I don't think either of us was happy about it.\n\n\"Here she is,\" Jen said.\n\nNikki turned out to be a pixie. Four ten at the most, her poor, little legs had trouble with the deep stairs in the gym. No problem. She hopped up the steps like a grasshopper.\n\n\"This him?\" she asked, after giving Jen a hug. I was still sitting, so she gave me a big one, too, nuzzling my ear. She hardly had to lean over.\n\n\"I've heard about you since the first day I met her,\" she whispered so only I could hear. \"Your son is a rapist pig, which makes me wonder about you. You fuck with her, I'll gut you both, I swear.\"",
        "\"I'm not him.\" I said, pushing her away. \"You have nothing to worry about with me.\"\n\n\"Is she in mama bear mode?\" Jen asked. \"Get off him, Nik, he's one of the good guys.\"\n\n\"That's what you said about Asshole,\" Nikki said.\n\n\"Message received, Nikki,\" I said.\n\n\"Okay, just remember. I have mace, a Taser and giant mothefucking friends.\" she said, smiling. \"Glad to finally meet you.\"\n\n\"Me too,\" I said, standing to give her a cautious side hug.\n\n\"So where do I sit?\" Nikki asked. \"Looks like all the seats are taken.\"\n\n\"You got here late, bitch.\" Jen said airily. \"You can sit on the step.\"\n\n\"Nah,\" I said, getting up. \"You take my seat. I can sit on the step.\"\n\n\"I appreciate you being such a gentleman and all, but please,\" said Nikki. \"Like that's going to happen. You won't be able to get your old ass up if you sit down there.\"\n\n\"Didn't we just meet?\" I asked her. \"Shouldn't we get to know each other better before you dog me like that?\" She gave me a sweet smile.\n\n\"She likes you,\" Jen said. \"But let's not be stupid. You sit here,\" she said, getting out of her seat and pulling Nikki into it. \"You sit here,\" she said, pushing me back down, \"and I sit here.\"\n\nShe sat down, placing her inimitable ass directly on my crotch. My erection had gone down a little when we pulled apart earlier, but now it was granite again, and, as she wiggled on top of me, it got even harder. I hadn't been this hard in twenty years, maybe my whole life.\n\n\"Jen...\" I said, leaning forward, trying to push her forward onto my thighs.\n\n\"Shhhh,\" she said, taking my arms and putting them around her waist. \"Let's watch.\" \n\nAnd we did. She spent most of the time chatting with Nikki and me, but her butt never stopped moving the whole time. Sometimes it was subtle, a slight flexing or a small circle, but other times it was almost full on dry humping. I looked over at Nikki and saw her trying to suppress a laugh.\n\n\"Is she 'amusing you'?\" she asked. \n\n\"You heard?\"\n\n\"Yeah, you're going to see a lot of her. Enjoy.\"\n\n\"I guess I will,\" I said, leaning back, not even pretending to pay attention.\n\n\"Oh, you will,\" Jen said, grinding down especially hard.\n\nShe continued to torture me. I think she was hoping to make me pop, but I'm not a kid and she was out of luck. She wouldn't let me remove my arms and occasionally leaned forward to brush the bottom of her breasts against the back of my hands and forearms. I leaned back and closed my eyes, surrendering to the sensations on my groin, the smell of lavender and the sweet feeling that something so wrong, but so delicious, was taking place. I couldn't believe I was letting this happen. I must've been more tired than I thought to let my boundaries get this porous.\n\n\"Hey, hey.\" I was being shaken. \"I think we need to get you back to your room.\"\n\n\"What...\" I looked up to see beautiful brown eyes. \n\n\"I'm sorry,\" Jen said. \"I thought you'd be okay because of the time change, but you've been up for a long time, haven't you?\"\n\n\"About twenty hours,\" I said, yawning. \n\n\"I can go get your car and drive you back to your room if you're too tired.\"\n\n\"Nah,\" I said, yawning some more. \"I can walk to the car. This ungodly cold will wake me up and I'll be fine to drive back to my room, no worries.\"\n\n\"So you don't want to go out with us?\" she asked, sounding disappointed.\n\n\"If I remember when I was your age, y'all will want to go out and drink, and I would drop like a rock with my first beer. Where are you going, anyway?\"\n\n\"Partayyyy,\" Nikki said loudly. \"That's how we get booze at our age.\"\n\n\"Definitely not for me,\" I said. \"Not to be a wet blanket, but no driving, right? I don't even have to say it, right?\"\n\n\"I'll hardly be able to walk,\" Nikki said. \"Don't worry, gramps, we stagger home every weekend.\"\n\n\"Not quite as bad as all that,\" Jen said, pulling her sweatshirt back on. \"And don't worry, we don't even have a car.\"\n\nOnce again I was treated to a glimpse of her dark, sexy stomach. Not by accident, I thought, not after all her teasing tonight.\n\n\"Okay, so we'll walk you back to your car; it's on the way,\" Nikki said. \n\n\"I was looking forward to taking you there with us,\" Jen said, taking my hand. \n\n\"Jen,\" I said, \"I wouldn't go anyway. I'm a little too old for a college party, don't you think?\"\n\n\"You're not too old for anything,\" she shot back. \"Nik! Check out his guns.\"\n\nSo the walk back to my car turned into a fun, if somewhat embarrassing, flirty time with two sensational coeds. They refused to allow me to zip up my coat, insisting they rub my chest or stick their hands down the arms to squeeze my biceps, all with flattering color commentary. Someone brushed the back of her hand against my groin, but when I looked at their faces, Jen had put on her now familiar crooked, enigmatic smile and Nikki projected an air of faux innocence.\n\nWhen we parted, Nikki managed to wrap her short arms around my waist and give me a squeeze. Jen, though, practically crawled inside my jacket as she put her arms around my neck. Her coat was also magically open, now, and she pressed her soft breasts against me, hard.\n\n\"I'm going to miss you tonight,\" she said, and then kissed my neck.\n\n\"Jen...\"\n\n\"I know, I know,\" she said, pulling back. \"I have a study group in the morning, so I won't be able to have breakfast with you.\"\n\n\"You have a study group?\" I asked, surprised. \"Why bother if you're leaving?\"\n\n\"Cuz my girl's smart AND sweet,\" said Nikki.\n\n\"Not really,\" Jen said, embarrassed. \"I did most of the early research, so they'd be lost if I didn't catch them up.\"\n\n\"She IS the group,\" said Nikki proudly. \"They'd fail the project if she bailed. Her professor said she's the smartest student he's had in...\"\n\n\"Okay, so that's it,\" Jen interrupted. \"Plan on spending the day together after eleven or so. Then we'll get dressed and go out to dinner, yay!\"\n\n\"Looking forward to all of it,\" I said.\n\n\"Me too,\" Jen said, letting go of my hand slowly as she walked away so that our fingertips brushed. She acted like she didn't want to let go, a feeling I could relate to. \n\n\"Come on,\" Nikki urged. \"The boys await.\"\n\n~~~\n\nAs I lay in bed later, my erection made its painful presence felt. I wanted to take it in hand, but I knew that even if I watched some porn on my laptop, I would be beating off to Jen, and the shame of that would be just too much. I couldn't get her out of my mind. I pictured her dancing in that skimpy black outfit of hers, imagining a wardrobe malfunction and the eyes of every male in the place trained on her. Would she dance close to one of those boys, giving them the worldview of her cleavage I had gotten earlier? Would she take one of them home? It surprised me to realize how jealous I would be if I found out she had. I had never been jealous of her and Brandon. I had never looked at her that way at all. I tossed and turned, eventually falling into a fitful sleep, waking several times.\n\nI'm usually an early riser, but exhaustion and the time zones worked against me, so I didn't wake up until almost ten, which was only eight my time. Okay for a Saturday. I was showered and had just finished shaving, towel wrapped around my waist, when there was a soft knock on my door.\n\n\"You're early,\" I said, as Jen pushed her way past me to sprawl on the unmade bed.\n\n\"I know,\" she said lazily, \"Only one girl showed up for the group. I showed her what I could, but I'm not going back. If they're gonna blow me off, fuck 'em.\"\n\n\"Absolutely,\" I said. \"You're only as valuable as you let yourself be.\"\n\n\"You too.\"\n\n\"What do you mean?\" I asked. Her eyes were on me hard as I knelt and pulled some jeans and a button up shirt from my suitcase.\n\n\"How are you doing, Cole? Since the whole Kelly thing?\"\n\nThe whole Kelly thing. Nice. What an interesting way to distill and discard over twenty-five years of marriage.\n\n\"In what way?\" I called, ducking around the corner in the bathroom so I could put on my underwear in peace.\n\n\"Well,\" she hollered back, \"Financially, I hope you're okay, I hope she didn't take everything, you know, but I was wondering more about how you're doing emotionally, spiritually, romantically...you know.\"\n\n\"I've been on a few dates, if that's what you're asking,\" I admitted. \"I know it's been almost a year, but I haven't had any real desire to hook up with anyone, especially not long term, and I think most women are able to see that, so now I don't even try. It's a trust thing, you know? I'll wait until I'm ready.\"\n\n\"You're a confident man,\" Jen said, \"Something I've always liked about you. That's still there.\"\n\n\"I don't feel confident,\" I said as I finished dressing. Why was I unburdening myself to this kid? \"To quote a funny man in a funny movie, 'I'm a cuckold.' \"\n\n\"Yeah, but in the end they got back together.\"\n\n\"That's why that's a fucking movie!\" I said tersely, spitting in the sink, surprised by the level of vehemence I still had in me. Jesus, I needed to move on. \"No WAY that's happening.\"\n\nJen lay sideways on the bed, her head propped up as she looked up at me. She wasn't in a sexy pose, or even trying to be sexy for that matter, I don't think, but the sight of her on my bed took my breath away. If last night was a cleavage night, today was all about how tight her outfit could get. Her jeans looked even tighter than yesterday's and, in this position, displayed her gracefully rounded hip. There was a sexy gap between her upper thighs. Her top was a green long-sleeved tee with a white shirt poking out underneath. I'd often heard the term 'painted on'. Now I was living it. Well, next to it, anyway.\n\n\"I'm glad,\" she said. \"But we're not talking about her today.\"\n\n\"Good deal,\" I said, sitting in my chair as I finished the truly horrible room coffee.\n\n\"And no Brandon, either,\" she promised. \"Let's go have a fun day.\"\n\nAnd it was fun. What did we do? A lot of bullshit, actually, but it was fun bullshit. She really tried. For example, we went to a Lego contest sponsored by the library. Unfortunately, kids made most of the exhibits, but there were a few exceptions. I became fascinated with the life size Iron Man.\n\n\"You're all just a bunch of little boys,\" Jen said, smiling.\n\nAs the day wore on, I don't think anyone observing us would confuse Jen for my daughter or niece. She stuck too close. She didn't overtly flirt with me like she had the night before, but she was never far away, and there was always a hand resting lightly on my arm, or she was fiddling with my hair; things like that. She touched me whenever we were close, and if we weren't, she got close. We couldn't go from one place to another without her taking my hand to lead me there. I didn't understand why she was showing me this kind of attention, but I was enjoying it immensely. Of course I couldn't take it seriously. \n\nAnd man, what a great time we had. She was a delight. There wasn't a moment where she wasn't flashing me a smile of some sort. She had so many different ones. It was such a contrast to Kelly, who developed those little frown lines around her mouth in her twenties. \n\nI watched this young woman with both delight and despair. The women my age I had met this last year, the ones I had any chance with, were either sullen or desperate, and let's not even talk about how much they'd let their bodies go. Life had beaten them down, and they couldn't mask their bitterness, even when a first date would be turned off by it, as I certainly was. \n\nJen might have had this youthful, exuberant quality about her, but she was all woman. One would hope she possessed this same effervescence when she hit, say, sixty, but I knew it couldn't last; life would grind her up in it's own way soon enough. Look at what my son had already tried to pull. But maybe it didn't have to be like that. I knew her mother slightly, and I would say that life had polished her instead. Maybe it could be that way for Jen.\n\nSomething happened between us that afternoon. It gradually became second nature to hold her hand. I don't even know when it started, and I wouldn't even notice we were attached unless she squeezed me or interlocked her fingers with mine, something that felt even more intimate. At some point she put her arm around my waist, snuggling close, and it was the most natural thing to put my arm around her shoulder. It would have felt wrong to pull apart. \n\nShe had stopped trying to be this flirty bombshell and was just being my Jen, someone I had so admired for her sweetness. I'd known her for years, watched her grow up, but now I was finally starting to appreciate her as a woman, as was her intention, I'm sure. A woman way too young for me, of course, but it was nice to be here with her, so companionable, so low maintenance, so much fun. I keep using that word a lot, I know, but that's what she was, and I hadn't had a lot of that lately.\n\n\"Okay, my merry old Cole,\" she said, giving my waist a squeeze and finally disengaging. My shirt was infused with her lavender scent. \"You need to get me back so I can be ready in time for our reservations.\"\n\n\"I've had a great day,\" I said, looking down, captivated once again by her perfect smile.\n\n\"Oh, me too,\" she replied. \"But it's not over yet. You haven't even seen my dress.\"\n\n~~~~~\n\nI will not deny that it was one spectacular dress, not that I saw it right away. She came to the car swathed in an imposing Matrix-y leather duster that reached all the way down to her ankles.\n\n\"Not mine,\" she said as she climbed into the car, \"and really not warm enough, but I wanted to surprise you. Turn up the heat. Please.\"\n\n\"Well, it is surprising,\" I said.\n\n\"Not this, silly,\" she giggled. \"What's underneath.\"\n\nHer LBD was tasteful. I think she was aiming for demure, but with her curvy body it was next to impossible. That dress probably had a reasonably high neckline, but it wasn't up to containing her immense breasts, and there was a noticeable expanse of cleavage. Her heels were just high enough to accentuate her long, nylon-covered legs.\n\nI spent a bit of time trying to figure out how a dress could be so elegant and erection inducing at the same time as I surveyed her flawless skin. Finally, I decided that it wasn't just Jen's sculpted body that made the difference, and not the cleavage, either. Her years of gymnastics and dance had given her a feline grace. She didn't walk so much as prowl; her lines were long and lean, but at the same time, those lush curves would not be denied. It didn't matter what she was wearing, her very demeanor made it sexy, but with an undeniable air of sophistication. She would be at home in the most elegant setting. Most men's' eyes in the restaurant never left her, including mine.\n\n\"I finally decided what your major should be,\" I said as she presented herself for my inspection. \"Fitness model. You'll make a fortune.\"\n\n\"Miss Model Material,\" she said, making a graceful pirouette. \"You just never stop complimenting me. What do you think about the dress? The dress.\"\n\n\"Of course I love the dress,\" I said. \"It's lovely. You're lovely in it. If this is the classy dress, I'm afraid to see the slutty one, you look so sexy.\"\n\n\"You just keep talking, buster,\" she giggled. \"You're pretty good for a girl's self-esteem.\"\n\n~~~~~\n\nIt turned out Jen knew most of the wait staff from school; that's how we got in. The Ma\u00eetre d' was the brother of Nikki's old boyfriend back home in Springfield, or something like that. We were well taken care of.\n\n\"So...\" I said, after the admittedly delicious yet overpriced meal was over. \"I see why you wanted to come here.\"\n\n\"And why's that?\" she asked.\n\n\"The dance floor, the band. You didn't tell me we came here to dance.\"\n\n\"I thought I did,\" she said, \"and I know it's something we both like to do, so I thought...\"\n\n\"And you thought correctly,\" I said, standing up, taking her hand and pulling her to her feet. \"I'm sure I'll be a little rusty, but would you do me the honor, Miss Villanueva?\"\n\n\"I would be delighted, Mr. Pickinpaugh,\" she said with an impish smile.\n\n~~~~~\n\nMy family moved to Seattle in the late seventies when I was thirteen. To say I was bummed is an understatement. All my friends were gone, and I hated the overcast days. My mother, in a misguided attempt to get me to \"socialize,\" enrolled me in ballroom dancing classes. She thought I'd make friends there.\n\nIt didn't turn out that way, of course. The girls were all snooty bitches who never gave me the time of day, and there were only two other guys there. One was super gay and a snooty bitch in his own right, and the other one was so weird the girls wouldn't dance with him unless forced to at gunpoint. He spent most of his time paired with the instructor.\n\nI was surprised to find out that I had a natural flair for dancing, all styles, and, since most teenagers like it when things come easy, It became my life's obsession until I turned sixteen. It suddenly became more important to get a job so I could buy a car. I was too tall to ever dance professionally, but I never stopped completely, and I always loved it.\n\nIt wasn't cool to know how to foxtrot and rhumba at fifteen, but five short years later I was in demand when the college girls learned what I could do. The fact that I cleaned up well and looked good in a tux was merely a bonus. That was how I met Kelly later on, and I can honestly say that I twirled her off her feet. I taught her a lot, and when we went out dancing we were pretty good together.\n\nJen and I were great together. Our first turn felt like we'd been bopping together for years and years. We were perfectly in sync from minute one. She was the most responsive partner, moving effortlessly where I directed her with the slightest pressure. She smiled happily the whole time, which made everything feel even better.\n\n\"God, you're good,\" she said breathlessly after the third number. \"I thought you said you were rusty.\"\n\n\"A perfect partner is everything,\" I said. \"You make it too easy.\"\n\n\"Right back 'atcha.\"\n\nWhen a slow number finally came around, she immediately moved close, filling up the space between us I had purposely created. It wasn't long before she gave up any pretense of actual dancing and put her head in my chest. I moved my head down and smelled lavender and whatever floral scent her shampoo was. To my horror, I started getting hard, pressed against her the way I was. I tried to move away, but she scooted right back.\n\n\"Ah ah ah,\" she said. \"That's not going anywhere.\"\n\n\"Jen...\" \n\n\"Shhhh,\" she said. \"Don't worry about it. I'm having a great time. You're having a great time. Don't spoil it.\"\n\nI was proud of how long I was able to stay out there with her. Of course she could dance all night, but I'm not a young guy, no matter how much I'd been working out, and I finally got winded and asked if we could sit down for a while. \n\nAfter we found a table and ordered mineral water for the both of us, I was able to glance around the place a bit. The crowd was an interesting mix. The band, by its nature, would draw an older crowd, but the number of college students there surprised me. They weren't great dancers, most of them, but were very, very earnest, much to my amusement. I asked Jen why they were there.\n\n\"These are the rich kids,\" she said. \"Hipster douchebags, most of them.\"\n\n\"Here to see and be seen?\" I asked. \n\n\"Exactly,\" she said. \"It's the new karaoke. This is a very expensive place, like I have to tell you, so it's a status thing to come here.\"\n\n\"Is that why you wanted to come?\" I asked.\n\n\"Oh, gawd no,\" she replied. \"I came here to dance. And be with you.\"\n\n\"I'll be ready to get back out there in just a minute,\" I said.\n\n\" 'And be with you,' \" she repeated. \"I would love it if we danced some more, but I'll be happy to sit here and hang out with you all night if that's what you want to do.\"\n\nSo we chatted for a few minutes, swapping war stories about dance recitals and the like. She was asked to dance many times, and each time she answered with a polite \"No thank you\" or an \"I'm with him\" as she held my hand.",
        "\"You know, you can dance with someone else if you want to,\" I said after about the twentieth request when the band came back from a break, announcing they were going to play a few fast ones. \"Don't let me hold you back.\"\n\n\" 'And be with you,' \" she said again. \"What part of that aren't you getting, Cole? This is our night.\"\n\n\"Excellent,\" I said. \"So how about we see if they'll play something more...\"\n\n\"JEN!!\" a big voice boomed from behind us. \"What are you doing here?\"\n\n\"Oh, hi, Cameron,\" she said, looking pointedly unenthused. \"This is my date, Cole.\"\n\n\"Eh,\" he grunted at me, cataloging and dismissing me as he pulled up a chair. This was an enormous person, obviously on the football or basketball team. He tried to push in between us and cut me out, but he couldn't fit, so he sat a little behind us, forcing us to turn around to talk to him.\n\n\"So you heard I was coming here tonight and came to dance with me, right, girl?\" he asked with a cocky grin. \"Remember, you promised.\"\n\n\"I didn't know you'd be here,\" Jen said, \"and this is a special night for Cole and me. Maybe next time, okay?\"\n\n\"That's what you always say,\" he said. \"C'mon, you look so sexy in that dress, I want to see you shake that thang,\" His laugh was so lecherous it made my flesh crawl.\n\n\"I think the lady has made her feelings plain,\" I said.\n\n\"And you can shut the FUCK up, grandpa,\" he said, \"This is between me and her. She owes me.\"\n\nCameron grabbed her arm as if he intended to physically pull her out onto the dance floor. I was starting to move to intervene when, with a violent wrench, she pulled her arm away herself.\n\n\"Owe you?\" she spat at him. \"OWE YOU? I don't owe you shit, asshole. I've said 'next time' the last five times you've asked me. Can't you take a hint? You don't dance; you just use it as an excuse to put your big meaty mitts on a girl's ass or tits and grind all over them. Well, not me. Conversation over.\"\n\nShe turned her chair back around and picked up her drink.\n\n\"As I said before, I think the lady has made her feelings plain,\" I said as I turned my chair back around. \"You have a nice night, now.\"\n\nThe next thing I knew, my head was smashed into the table. He had hit me from behind on the side of the head, just above my ear. I had to hand it to him; that was one impressive punch. He obviously knew what he was doing. He sure did ring my bell.\n\nI turned around to look up at him. He was towering over me, smirking, and looking like he was ready to dish out another one.\n\n\"Cole,\" Jen screamed, leaping out of her seat and practically laying herself all over me. \"Are you all right?\"\n\n\"Fine,\" I said, pushing her gently out of harm's way as I stood up, shaking out the cobwebs.\n\n\"Okay, pussy,\" I said. \"That one you got for free. No more of those. So look, I don't want to bust up this nice place. I'm tempted to take you outside and grow you up some, but a chickenshit like you probably has a bunch of pussy friends with him.\"\n\n\"Yeah, I bet you're afraid to go out there with me, you old fuck,\" he said.\n\n\"It depends,\" I said. This guy was way bigger, had a longer reach than me and obviously wasn't afraid to throw down. I knew how to handle myself, and I knew I'd have my hands full with him, but fuck if I was going to back down. \"Are your friends willing to stand around and watch while I hand you your bitch ass?\"\n\nHe was pissed, so much so I thought I saw him readying another one, and then I felt something pulling on my upper arm, restricting it.\n\n\"Cole, will you please cool it with this macho crap?\" Jen shouted at me. \"I don't like it.\"\n\nIt was as if a gallon of ice water landed on me. My fight or flight instinct was doused in an instant. What was I doing? I didn't come here to fight, but I might end up having to anyway. Even so, I backed up, and he could see the fight go out of me.\n\n\"Humph, I THOUGHT so,\" he said. \"I knew you'd puss out.\"\n\nSuddenly four - count 'em four - gigantic bouncers appeared and surrounded Cameron. Each of them was as big as him, if not bigger.\n\n\"You're out of here, dickhead,\" the largest one said, \"Just walk out of here with us and don't come back for a while, say a month.\"\n\nThey began to make moves to escort him out, not giving him much of a choice, but he still stood his ground.\n\n\"So what are you, his little whore?\" He asked loudly with a cruel smile. \"Daddy pay you to fuck him good?\" \n\n\"Start moving, asswipe,\" the largest bouncer said, \"or you'll be leaving some pieces of you behind.\"\n\n\"What about him?\" he yelled, pointing at me as he finally started leaving.\n\n\"Cole didn't do anything,\" Jen cried, \"we were just sitting here and he hit him.\"\n\n\"We know,\" a well-dressed man appeared from the other side of the table. \"You have a lot of witnesses here, sir. Do you want to press charges?\"\n\nI looked over at Jen, who had her lips pressed together and was shaking her head ever so slightly. I saw that she was a person who avoided conflict, but in this case I agreed with her. Our night had been ruined enough.\n\n\"I really should, \" I said. \"God knows he deserves it. He certainly owes the lady an apology, but I think we'd both rather just try to get back to our wonderful evening here at your fine establishment, if that's all right with you. That's the important thing.\"\n\nI thought I'd seen Jen smile before, but the wattage of the look she gave me could put the sun to shame. \n\n\"That's perfectly understandable, sir,\" he said. \"It would be a crime to have our two best dancers cut their evening short.\" He gave me a big smile, too. \"I'm Anthony, I'm the manager here. Could I have a drink sent to you, in appreciation for not letting that unfortunate situation turn into a scuffle and possibly injuring our other patrons?\"\n\n\"Uhhh, sure, why not?\" I said. \"I'm pretty adrenalated right now; it would probably soothe my nerves.\"\n\n\"Absolutely, sir, what would you like?\"\n\n\"What's your special drink here? Do you have one?\"\n\n\"That we do,\" he said, smiling broadly. \"It's called the Illini. Let me warn you, it's got quite a kick.\"\n\n\"That's okay,\" I said. \"I'll have one of those. Thank you.\"\n\n\"And what about you, miss?\" he asked, turning to Jen.\n\n\"If he's having one of those, I think I'll just have another mineral water, please.\"\n\n\"I think that's very wise of you,\" he said. \"They'll be here in a jiff.\"\n\n\"Awesome,\" she said, giggling.\n\n\"Are you okay?\" she asked after Anthony left. \"Did it hurt when he hit you?\"\n\n\"You bet it did, but I'm fine now.\" I said. \"Listen, I appreciate you putting the brakes on back there, but if something like that ever happens again, do NOT, I repeat, DO NOT grab hold of somebody's arm like that. You had me pinned down and I wouldn't have been able to defend myself. He'd already sucker punched me once.\"\n\n\"Oh, God,\" she said, bringing her hands to her face. \"I'm so, so sorry, Cole. I was afraid he'd kill you.\"\n\n\"Well, to be honest, so was I,\" I admitted. \"I doubt it would be quite as one-sided as you think, but, hey, I'm a dancer, not a fighter.\"\n\n\"Lover,\" she said.\n\n\"Hmmm?\"\n\n\"Its 'I'm a lover, not a fighter.' \"\n\n\"I meant what I said.\"\n\n\"Well, we'll just have to see. Look,\" she said, giving me that adorably crooked, coquettish look I now craved. \"Did you mean what you said? Are you okay enough to dance with me? You still want to, right?\"\n\n\"Absolutely.\" I said.\n\n\"Good,\" she said, grabbing my hand yet again, \"Let's use some of that adrenaline up before they bring you that awful drink.\"\n\nThe next couple of hours were some of the greatest of my life, truly. I was back on the dance floor with the most perfect dance partner ever. She knew every move, but she also knew all about eye contact and how to caress me with light touches that drove me nearly out of my mind. Every slow dance brought our bodies closer together, if that was possible. We didn't grind or anything - we were both much too respectable for that - but body parts were definitely extended into the personal space of the other. Neither one of us was complaining.\n\nWe rarely took a break. Jen was hot during every dance, but she was positively scorching whenever there was a Latin or Brazilian number, obviously her specialty. Much to my surprise, her LBD had a slit up one side that I hadn't noticed until she started dancing all out. She danced like Cyd Charisse with her long gam sticking out like that. \n\nShe was at a professional level, and I'm not so bad either. A couple times the dance floor cleared out and we were dancing alone as the awestruck club patrons watched us perform, but let's get real here, they were watching her.\n\nI would snatch a few sips of my drink here and there, but I was dancing and sweating up a storm, so I knew it wouldn't hit me that hard. I figured, what the hell, so I ordered another and knocked it down the same way.\n\nI finally needed to sit down, and Jen did too, I think. We sat at our table and just beamed at each other. There's no greater pleasure than dancing with a willing and equal partner. Kelly and I rarely danced with others when we went out. Kelly always claimed that she'd never get me back if I dared to share my talents with other women, and it's not like I wanted her dancing with other guys anyway, so we stuck with each other. It had been well over twenty-five years since I'd had an experience like tonight's with someone at or above my level.\n\n\"Wow, Cole,\" Jen panted. \"I'm sure glad I never danced with you before tonight.\"\n\n\"Why would you say that?\" I asked.\n\n\"Because I'd probably be in jail. I would've killed that bitch for a chance to do this with you.\"\n\n\"You're funny,\" I said, taking my menu and fanning her a little. She was one of those lucky people who didn't sweat, she perspired, and when she did that, she glowed.\n\n\"Seriously, Cole, when I heard what happened with you two - I hate to say this - but I was glad that you were able to get free from her. Didn't you ever notice how she treated you? I sure did.\"\n\n\"I guess over time you just learn to accept things,\" I replied. \"It was gradual, you know, like slowly raising the temperature to boil a frog. Honestly, it was like I turned around one day and realized I was just some meal ticket to her.\"\n\n\"Was it the affair? Was that when?\"\n\n\"No,\" I said. \"It's funny, it was the other way around. I never suspected anything by her actions. It was the way she was treating me, the disrespect, that's what made me begin to wonder if she was cheating on me. She was real shitty to me one time in front of her friends, and it's not like it was the first time. I was nothing more than her dog. She made me write a check, and a big one, to help her friend's husband's new business. I'd hated that prick for years and she knew it, and she still ordered me to do it in front of a whole group of our friends, well, her friends, as I later found out. And the things she said. It was humiliating.\"\n\n\"Oh, God.\"\n\n\"Yeah, so, that fundamental level of disrespect was just one public putdown too many, and I decided to start snooping around. I found out everything I needed to know that same afternoon and met with a lawyer two days later. She wasn't even trying to be careful.\"\n\n\"Why not?\"\n\n\"Why should she?\" I asked, bitterly. \"You know what kind of dog I was? I was a trusting, stupid, little puppy dog, just a stupid fuck. Everybody, and I mean everybody, in our little circle knew what she was doing and didn't tell me.\"\n\n\"I'm sorry. It's not stupid to trust someone if you love them, it was just stupid to trust her.\" Jen said. She pulled her chair closer to mine and rested her head on my shoulder. \"Can I tell you something?\"\n\n\"Sure,\" I said, \"but can I ask you something first?\"\n\n\"Okay.\"\n\n\"You say you never knew, but do you think Brandon did?\"\n\nShe pulled back and looked at me sadly. \"He never said anything to me at the time, but I think he did. He didn't act surprised when everything happened.\"\n\n\"Fucking mama's boy,\" I said, starting to feel a little flushed. \"Anyway, how'd we end up talking about them? This night's for us, right?\"\n\n\"That's for sure,\" Jen said. \"Are you okay?\"\n\n\"I am suddenly drunk off my ass,\" I said, feeling the sweat pouring off me. \"And only off of two drinks. What's in those things anyway?\"\n\n\"Everything,\" she said. \"It's like a Long Island Iced Tea, but, like, triple that. I told you it was awful.\"\n\n\"I'm afraid I've ruined our night,\" I slurred. \"We'll have to get taxis to get us both home.\"\n\n\"You haven't ruined anything,\" Jen said. \"Mineral water, remember? I can drive.\"\n\n\"Okay,\" I was relieved. My Jen. \"You can drop me off and take the car to your dorm. You can return it in the morning. What a hassle. I'm sorry.\"\n\n\"No hassle, sweetie,\" Jen, said, rubbing my neck. \"Let's get out of here.\"\n\nI had one moment of trepidation as we left the restaurant. I hoped Cameron and his friends weren't waiting for us somewhere, because I wasn't in any condition to even bluff. Jen didn't seem worried, innocent cutie that she was, but, thankfully, there was no one out there.\n\n\"I don't need any help in,\" I said when Jen cut the engine at my motel.\n\n\"I think you do,\" she said. \"C'mon, Cole, I'm not taking no for an answer.\"\n\nShe slipped herself under my arm and wrapped her arms around my waist. I don't know if I needed her help, but it felt nice to get it.\n\n\"Now lay down and let me get you some water,\" she said when we got inside and threw off our coats.\n\n\"Seriously,\" I'm okay...\" I started to protest.\n\n\"And, seriously, you've had enough booze to kill an elephant,\" she said, not to be denied. \"Do you want to still be hung over tomorrow night when you fly? You will be, I guarantee it. You don't drink much, right? Unless that's changed this last year.\"\n\n\"No, I'm still a lightweight.\"\n\n\"Nothing wrong with that,\" she said from the bathroom, filling a plastic cup with water. \"You're going to chug two or three of these and it'll help. You've sweated out most of the alcohol, I'm sure, and I'm going to give you aspirin now and for the morning.\"\n\n\"You're awesome,\" I said, so grateful. God, I hated getting drunk.\n\n\"I know, I know,\" she said, handing me the first cup. \"Now drink up.\"\n\nI lay back on the bed. Funny, I felt better already. The bed didn't seem to be spinning nearly as much. Jen smiled at me and sat on the chair next to the bed, tucking her feet under in that cute way girls do. I saw her heels on the floor.\n\n\"Aren't you taking off?\" I asked.\n\n\"Not yet,\" she replied. \"Remember I was going to tell you something back at the Inn?\"\n\n\"Oh, yeah.\"\n\n\"I still need to tell you.\" she said. \n\n\"Can't it wait? I'm pretty out of it.\" \n\n\"Nope, this is night time stuff.\" she said. Suddenly she put both hands on her mouth in alarm.\n\n\"Jen, what's the matter?\" I asked, concerned.\n\n\"Oh, nothing,\" she said, obviously upset. \"I'm just an ungrateful bitch, is all.\"\n\n\"What do you mean?\" \n\n\"This has been, without a doubt, the best night of my life.\" she said. \"Even that asshole idiot Cameron couldn't screw it up.\"\n\n\"Easy for you to say,\" I smirked.\n\n\"Oh, god, see? I am such a BITCH!\" she cried. \"How's your poor head? God, I just hate myself...\"\n\n\"Jen, seriously, shut up.\" I said. \"And I mean that in the nicest way.\" I smiled at her. \"My head is fine. I can't remember the last time I had such a great night. Thank you.\"\n\n\"No, no, no...\"she moaned. \"Thank YOU. That's what I'm talking about. That's why I'm such a bitch. I didn't even thank you. I should've been thanking you all night long. You must think I'm so stuck up.\"\n\n\"Stuck up?\" I couldn't help smiling. \"Yup, you sure are. And you took my chocolate milk.\"\n\n\"Shut up, dork,\" she laughed, \"You know what I mean. Thank you, thank you, thank you. I loved tonight, and I love the way you treated me, like you really care about me.\"\n\n\"Well, I do, Jen.\" I said. \"How could I not?\"\n\n\"Okay,\" she smiled. \"So I'm going to tell you this...thing, and you're going to listen. It's going to be embarrassing for both of us, but there's a super, super important reason why I'm telling you. You have to PROMISE me that you'll let me finish, okay?\"\n\n\"Well...\" I said, taken aback a little. \"I think it depends on what you're talking about...\"\n\n\"No, you have to promise,\" she said.\n\n\"Do I have a choice?\" I asked, already knowing the answer.\n\n\"None, whatsoever,\" she said with a smirk... \"I'm glad you already recognize that.\"\n\n\"Okay,\" I said, settling back, \"fire away.\"\n\n\"All right,\" she said, \"but you have to prop yourself up. If you fall asleep or pass out while I'm saying this, I think I'll die.\"\n\n\"Okay,\" I said, making the arrangements. \"Please don't die. I've grown rather fond of you.\"\n\n\"Thanks. So, to start with...\" she said, \"Okay, wait a minute while I get you more.\" \n\nShe brought two more glasses to me and stood over me with a no nonsense expression on her face. Only when I'd finished chugging one down did her face return to that nervous look, licking her lips.\n\n\"Cole, I've wanted to tell you this forever, and now that I'm here I don't know what to say.\"\n\nI smiled at her, hopefully backing the pressure off a little so she could find her own way to whatever it was she needed to tell me.\n\n\"All right...\" she said. \"I know that you have a really high opinion of me, that I'm a really good girl.\"\n\n\"And you're not?\" I asked.\n\n\"Well, I am, mostly,\" she said. \"As a dancer, I consider myself an athlete...\"\n\n\"Absolutely,\" I said.\n\n\"Shh, dahling, shh, so I don't drink much, don't smoke pot, won't ever do anything harder.\"\n\n\"Excellent.\"\n\n\"But I am a healthy young woman, right, so I do have, um, urges, no, that's not right; I have needs.\"\n\n\"Okay.\"\n\n\"Cole, will you PLEASE stop commenting every time I say something? I'm begging here.\"\n\nShe wasn't kidding. She looked like she wanted to crawl out of her skin.\n\n\"I'm sorry, Jen,\" I said. \"It's the booze making me rude. I'll be good from now on.\"\n\n\"Thank you. Okay, so, your house floor plan was like a big L, right?\"\n\nI nodded.\n\n\"Well, Brandon's room was so far from yours that you couldn't hear a thing on his side, I'm pretty sure.\"\n\n\"That was on purpose,\" I said. \"He liked to play his stereo pretty loud. Self defense.\"\n\n\"Same for him,\" she said. \"All right, here it is; I used to sneak into his room after you guys went to bed.\"\n\n\"You did?\" I was dumbfounded. \"How? We dead bolted every night.\"\n\n\"Through his window,\" she said. \"I'm very...flexible.\"\n\n\"Well, you'd have to be,\" I said. \"I'm still not sure how you pulled that off.\"\n\n\"I have a weird body,\" she said. \"I'm tall, I have a big ass and tits, but I'm actually kind of petite. I made it work.\"\n\n\"Curvy, not big,\" I said. \"Okay, I guess I'm wrapping my head around that, but isn't that the boy's, um, responsibility? And why are you telling me this?\"\n\n\"There's no way we could have done it at our apartment. It's pretty small, and my room is right across from my parents. And I'm telling you because of this one night,\" she said. \"I got in, and Brandon was really excited. He told me to be very quiet and led me down the hall to your bedroom.\"\n\n\"He WHAT?\" I asked, not liking this at all.\n\n\"Cole, come on, you promised.\" she said. \"You must've accidentally left your door open, or he opened it, or whatever, but, anyway, there you two were, doing it doggy.\"\n\n\"Oh, God,\" I moaned, putting my face in my hands. \"Please stop.\"\n\n\"No, I have to tell you this.\" Jen said. \"So we watched you for a while. You were going slow; you were stretched out completely over her, touching every part of her body with yours, and you were whispering in her ear and kissing the back of her neck. You had your hand on her titty and you were playing with her nipple, pulling on it a little.\"\n\nWell, she wasn't lying. That sounded like me to a T.\n\n\"Brandon kept poking me and pointing at you, grinning like an idiot. He whispered and told me he'd seen you eat her pussy from behind for the longest time before you started. You might even have stuck your tongue up her ass.\" she continued. ",
        "I said nothing.\n\n\"After a minute he started pulling me away. I wanted to stay and watch, but he just kept pulling on me until I went with him. So we went back to his room and he was raring to go, and so was I. That was the sexiest thing I'd ever seen.\"\n\n\"I'm glad we could help,\" I said dryly.\n\n\"I was excited,\" she said, \"I was excited because I thought maybe he would take a few pointers, right? He never ate me out, but of course he expected me to blow him forever, you know?\"\n\n\"He's young,\" I said. \"Young men are always selfish. It takes a while to figure that out.\"\n\n\"Were you ever selfish like that, Cole,\" she asked me, leaning towards me. Her cleavage, already spectacular, was almost falling out of that supposedly demure dress. I just might find out what color her nipples were after all if she kept this up.\n\n\"No,\" I admitted. \"I got started late, don't ask why, and it was always very important to me that my partner was satisfied too. And I've always liked going down there anyway.\"\n\n\"Of course you have,\" she said, smiling wanly. \"Let's just say that the apple fell pretty far from the tree on that one.\"\n\n\"Sorry.\"\n\n\"Yeah, me too.\" she said. \"Anyway, he didn't want head this time. He just pushed me down onto his bed, pulled my sweats off and climbed on as fast as he could and started plugging away.\"\n\n\"Sorry again,\" I said.\n\n\"I know.\" she said. \"Well, he finished up and fell asleep almost before he got done. He basically rolled off me and went right out.\"\n\n\"I don't know what to say,\" I said. \"Especially since I can't believe we're having this conversation at all.\"\n\n\"There's a reason, I promise,\" she asked, sitting back in the chair and rearranging her pretty little feet. \"I was a little pissed. Not as much as you would think, and probably not for why you think.\"\n\n\"Okay.\"\n\n\"Him not taking long, well, that was par for the course. He never got any better, never even bothered to try, I don't think. He never got me off, not even once, but I was used to that. It still felt good, and I loved having his arms around me, loved the weight of his body on me.\n\n\"No, the reason I was mad was because he fell asleep so fast. I wanted to cuddle. I know guys don't like to do it, but damn it, I had snuck out of my house, pushed my scooter two blocks before starting it and snuck through that damn window. I know I acted all cool about that a second ago, but it wasn't easy.\"\n\n\"I'm sure,\" I said.\n\n\"And I felt he was treating me kind of like a whore, you know? A girl likes to be appreciated.\"\n\n\"Of course you do,\" I said.\n\n\"I laid there for the longest time, my body all tensed up because I didn't cum, and then I got the idea of going and watching you cuddle. I was sure you did that. Did you usually do that?\"\n\n\"Most of the time I did,\" I said. \"It depended on how sweaty we got. Sometimes Kelly wasn't into it. So did I?\"\n\n\"You did,\" she smiled at me. \"But I was shocked to find that you two were STILL DOING IT!\"\n\n\"Oh, well,\" I said, shrugging it away. \"We'd probably finished and were starting again. No big deal.\"\n\n\"I don't think so,\" she said, playing with her hair. \"You were still doing it doggy, but now you were on your knees and holding yourself straight up. You had your hands on her hips, pulling her back on you, and at the same time your were ramming her so hard. You were fucking the ever-loving shit out of her. You even slapped her ass a couple of times.\"\n\nI looked at her and took another gulp of water. I was sobering up and just about ready to stop this whole embarrassing story. It was getting to be too much. Way too much. Plus, I hated to admit it, but it was turning me on that she had watched us, that she had watched me. \n\n\"Please don't be mad,\" she said in a soft voice. She instinctively hunched back into her chair, putting some distance between us. \"You look mad.\"\n\n\"No, I'm not mad,\" I sighed, \"I'm embarrassed. I don't know why you're not. I can't believe you're telling me this, and in such graphic detail. I wish you'd stop.\"\n\n\"There is a reason, trust me,\" she said, smiling, suddenly more at ease for no reason I could fathom. \"You guys eventually finished. And she was loving it, Cole, LOVING IT. She was clawing the sheets and drooling onto the pillow in front of her.\"\n\n\"Well, I do aim to please,\" I said.\n\n\"Your aim is true, Elvis.\" she said. \"And after you were done, you kissed her on the neck again. She giggled and just lay there, stretching, looking like the cat that ate the canary. And then, do you know what you did?\"\n\n\"Enlighten me,\" I said, dryly.\n\n\"Oh, come on, Cole, lighten up,' she said. \"You got some cream and rubbed it all over her butt, which was very, very red, I might add, you bad boy.\" she said slyly, giving me her crooked smile. \"And I haven't even told you the best part, at least for me.\"\n\n\"And what's that?\" I asked.\n\n\"I jilled myself off like crazy,\" she said. \"I was still naked down there. I've never cum that hard, before or since. It was the first and only time I ever came in that house.\"\n\n\"Like I said, I'm glad we could help.\" I said, hoping this was finally over.\n\n\"Cole, I want that.\" she said quickly.\n\n\"Want what?\" I asked.\n\n\"All of it.\" she said breathily. \"I want you.\"\n\n\"Oh, Jen,\" I said. She was the sexiest thing alive, but there was just no way, no way....right? \"I'm your ex-boyfriend's father. I'm over thirty years older than you.\"\n\n\" 'Age ain't nothing but a number.' \" she said. \"I'm an adult. I know what I want. I've wanted it forever. I can't believe you never knew how long I've been crushing on you. Both Kelly and Brandon knew it. He hated it. I'm sure she did too. Maybe that's why she was always so shitty to me.\"\n\n\"Well, I never saw it.\" I said. \"And, on a totally unrelated topic, how come you know so many eighties and nineties references?\"\n\n\"My dad is so cool,\" she said, smiling. \"My whole life, when I got home from gymnastics and then dance class, we would watch old movies and play their old cassettes and records and he would massage my feet. My mom demanded equal time, so he pampered both of us. I really, really missed that when I moved here.\"\n\n\"I bet.\"\n\n\"Cole, I know this isn't romantic or anything, me practically begging you...\" she said.\n\n\"Well...\"\n\n\"But I knew it would have to be like this,\" she said. \"You're too nice a guy - too honorable - to just bang me, just let it happen, no matter how much you want to.\"\n\n\"That is true.\" I said.\n\n\"I came on to you so hard last night, and I could tell I was offending you. I was, wasn't I?\"\n\n\"A little,\" I said. \"It's not because I don't find you desirable, because I do.\"\n\n\"Of course you do,\" she smiled. \"You're 'only human', right?\"\n\n\"Can I ask you something?\" I asked. Maybe I could use a little deflection. \"Was Brandon your first?\"\n\n\"Yup, he was. It happened when...\"\n\n\"Oh, no,\" I said, holding my hand up. \"Don't even. I don't want to hear about it. You tell long stories. You'd give me every excruciating detail. No thank you.\"\n\n\"Okay,\" she giggled. \n\n\"I think all you need is to be with somebody else. I wish you'd hold off for a while, but I know that's not realistic.\"\n\n\"Right about that,\" she said.\n\n\"So why don't you just take it slow, and pretty soon you'll find the right guy who'll treat you better than my idiot son, like the princess you are?\"\n\n\"Okay, so here's another part you probably won't like,\" she said. \"It's been a few months since Brandon and I split, and I've slept with two boys.\"\n\n\"Well,\" I said, annoyed with myself for being jealous. Because I was. \"That's fine. I'm glad that whole experience didn't give you PTSD or something. As long as you stayed safe. That's good.\"\n\n\"No, Cole, it is NOT good,\" she said acidly. Was she upset that I didn't seem upset?\n\n\"It was terrible. The first guy I really liked, and he was a little better than Brandon - marginally - but I found out he already had a girlfriend after we did it. I was just his pump 'n dump.\"\n\n\"I'm sorry, sweetie.\"\n\n\"Yeah, well, it was really embarrassing, but I went and apologized to his girlfriend.\"\n\n\"Really, how'd that go?\" \n\n\"About how you'd expect,\" she said, wrinkling her nose. \"She called me a slut and said it was all my fault.\"\n\n\"She'll learn,\" I promised. \n\n\"Oh, she already has,\" Jen said. \"After that, I thought that maybe my 'picker' was wrong, so I started going out with this really nice guy in my Bio class. He wasn't my normal type, but he was nice.\"\n\n\"Oh, that IS nice,\" I said. I didn't want to hear all this, but at least maybe the deflection thing was working.\n\n\"Cole,\" Jen said, \"Would you please stop saying everything is nice when it's not?\n\n\"Sorry again,\" I said. \"I'm saying that a lot tonight.\"\n\n\"So...I made him wait for a while, and when we finally did it, well...\"\n\n\"Well what?\"\n\n\"He said he wasn't a virgin, but I think he was. And he was just as selfish as the others.\"\n\n\"Okay, Jen, you've had some bad luck here, true, but that doesn't change anything about what I said.\" I replied. \"Just give it some time.\"\n\n\"Well, here's the final part,\" she said.\n\n\"Finally,\" I said.\n\n\"Shut up,\" she said. \"This has been really hard.\"\n\n\"I know,\" I said. \"More for me, trust me.\"\n\n\"There's this professor that's been giving me the eye. The one Nikki started talking about.\"\n\n\"Oh.\"\n\n\"And I started thinking, well, maybe I just need an older guy who knows what he's doing. So I started giving him the 'come and get me', and he wanted to, believe me.\"\n\n\"I'm sure,\" I said darkly. \"I hope I have time to kick his worthless ass before I leave here.\"\n\n\"Nothing happened, Cole,\" Jen said. \"You know why? Because I realized that if I was going to do it with somebody older, I wanted it to be with you.\"\n\n\"Really?\" I asked. \"You want some old guy and I'll do, huh? Well now, that's quite a compliment. Look at me, I'm blushing.\"\n\n\"No!\" she said sharply. \"That didn't come out right. That's not what I meant.\"\n\n\"How else am I supposed to take it?\"\n\n\"Damn it!\" she snapped, jumping off the chair and crawling on top of me, sliding those delicious breasts of hers up my body in the process. \n\n\"You, Cole,\" she said as she rained kisses on my neck and cheek and chest, \"are the sexiest\" -kiss- \"hottest\" -kiss- \"most amazing dancer\" -kiss kiss- \"and the GREATEST man I know, tied with my dad.\" \n\n\"Jen, look,\" I said, trying to disengage.\n\n\"No, YOU look,\" she pleaded. \"That came out wrong. I've had feelings for you for years, even since I got to know you, okay? Kelly and Brandon threw us both away. When I realized I was going back home, I dared to hope about us.\"\n\n\"Jen, I'm older than your father.\"\n\n\"I don't care,\" she said, and she gave me the most surprising kiss of my life.\n\nI've said it here several times; that Jen seemed older than her years, that I admired her, that she was one in a million. When she kissed me, I expected something heated, something passionate, lots of tongue as she tried to entice me to fuck her.\n\nWell, the kiss was heated, there was some tongue, all that and more, but that's not how it started.\n\nShe kissed me with love.\n\nIt was obvious from our lips' first touch. It was tentative, it was honest, and it wasn't the kiss of someone trying to knock my socks off. No, this was a kiss of honesty, of vulnerability. She trusted me enough to let me see her and everything she felt about me. It was easily the bravest thing I'd ever seen.\n\nI had to respond in kind. Could I love her? I thought maybe I could. She had wanted me for years. Kelly had seen it, was jealous of it, but what also spurred that jealousy was my intense regard for this young woman. Since she was a cheating bitch with no insight, Kelly couldn't conceive that my interest in Jen was in no way sexual, and since it never occurred to me to view her as sexually desirable, I got to know the real Jen. \n\nI remembered all the times I sat at our kitchen table with her while Brandon ignored her, choosing to spend his time with his buddies in the other room or his true love, his X-Box 360. Jen hated the violence of the first person shooter, his favorite, but he expected her to just sit there and watch. She tried for a while, and probably would have continued if he would have talked to her even a little bit, but he ignored her completely, except to demand drinks and snacks. He had campaigns to win, dammit.\n\nInstead of leaving, she retreated to the kitchen table, and I remembered now how sorry I had felt for her then. I tried to get Kelly to help, but there was no help there, so Jen and I played cribbage and gin rummy and talked and talked about everything under the sun for over two years. \n\nI was a married man, so it never occurred to me to look at her in any romantic way, but I guess it was different for her. I didn't treat her like she was my daughter, but I think we became friends, at least as much as we could through that age gap. I think maybe uncle/niece would have been more accurate.\n\nShe'd been mercilessly teasing and attempting to seduce me for the past two days. Which of us would be more surprised that it had worked? I had never ever thought about laying a finger on her, but now things were different, weren't they? Was it really such a long way from my total regard for her to lust, even love? I could resist, set up every roadblock I could, but I didn't really want to, not anymore. \n\nAll that hit me in a flash, and I kissed her back. She opened her eyes with such a look of surprise, of joy and desire, and everything got all intense as our tongues met and our hands began to explore each other's bodies. I rolled us over, ready to move forward.\n\n\"No...wait, wait, wait...\" she said as she broke our kiss. \"Let me up. Please, Cole.\"\n\n\"All right,\" I said, confused, rolling over to let her scoot out from under me. \n\n\"I've been waiting for this for forever; it has to be perfect. Wait here, I'll be right back,\" she said. \n\n\"You wait,\" I said. \"I have to tell you something.\"\n\n\"What?\"\n\n\"I haven't been with anyone in over a year,\" I said.\n\n\"Wow,\" she said. \"I thought you dated.\"\n\n\"I did,\" I said. \"I didn't want to be with anyone for a long time, and...\"\n\n\"I get that.\" She framed both my cheeks with her fingertips and gave me a gentle kiss. \"Let me see if I can guess.\"\n\n\"Okay.\"\n\n\"You're worried,\" she said, \"worried that it's been so long that you can't get it up, or you'll come too soon, or lose your erection or something.\"\n\n\"Umm...\"\n\n\"You're worried that I've put you, and sex with you, on a pedestal so high you won't be able to drag your wrinkled, old ass up there.\"\n\n\"Well, yeah.\" That one hurt. A lot.\n\n\"Cole,\" she said, kneeling in between my knees, laying her head on my lap and giving my thighs an affectionate squeeze. \"I didn't mean to hurt your feelings. I don't feel that way about you, YOU'RE the one who's scared. Well, I'm not. None of those things will happen. You'll see.\"\n\n\"You seem pretty confident.\"\n\n\"Oh, I am,\" she said, smiling that crooked smile. She stood up, leaned over and kissed my forehead, accidentally -or not- exposing more of her bountiful cleavage than she had all night. \"Don't you dare fall asleep on me.\"\n\n\"Oh, I won't,\" I mumbled, relieved, but wondering if I could keep my promise. God, I was old.\n\n\"I mean it, mister,\" she said, kissing my forehead again and skipping into the bathroom. \"Put on some music.\"\n\nI had just put a mellow R&B playlist on my laptop when she emerged, looking the same, but somehow...sexier.\n\n\"What did you do?\" I asked. \"You look fantastic, not like you didn't before, but wow...\"\n\n\"A girl never tells,\" she said with a mischievous grin, \"but thank you.\"\n\n\"Now...\" she said, and melted into my arms. We slow danced again, this time without an audience. After a while we gave up and just swayed the sway of every junior high school dance. We kissed for long, enchanting lengths; sometimes our tongues hungrily explored, sometimes our lips joined lighter than a feather. \n\nIt was slow. You might call it dry humping, except it was more about the press than the grind, like at the Inn. Soon my hands stroked the small of her back, her derri\u00e8re, until, finally, I was gently cupping her left breast, not tweaking her nipple so much as massaging it with extreme prejudice through her dress and bra.\n\nShe was not idle either. Her slim hands first moved up to play with my hair and then moved slowly down my back to pull gently on my bum and bring our bodies even closer. After a time of that, combined with an extra juicy kiss, she pulled back a little so she could massage my cock, first with her palm and then lightly stroking it as much as she could with her fingertips through my slacks. It was the hardest it had been in years.\n\nBy unsaid mutual consent, we pulled apart. Jen turned around and pulled her luxurious curls aside to reveal her graceful neck framed by delicate shoulders. I couldn't help but lean forward to kiss it and was enveloped once again in lavender.\n\n\"Oh, that's nice,\" she sighed, \"but could you...\"\n\nOf course I could. I slowly pulled the zipper down her back, delighting in both the sensual sound and the gradual revelation of her honey back. She delicately wiggled out of her dress and let it pool at her feet.\n\nShe turned around to face me, pushed me until I sat on the bed and backed away. \n\n\"I like this music,\" she said as she began to move. \"Very much.\"\n\nJen danced for me, and it was a special thing. It was sexy, but not in a specifically stripper kind of way, although there was some element of that in there somewhere. She smiled that crooked smile, and there was almost an air of challenge to it, as if daring me to look away, knowing I couldn't.\n\nAnd why would I? Her body was as close to perfection as a woman's could be, fresh in the bloom of youth, but any baby fat she could possibly have possessed was burned away in the fire of her new adulthood and obvious attention.\n\nShe did have a dancer's body, but, I was realizing, not in the traditional sense. As I had noticed earlier, she was long and lean and lush and curvy, all at the same time. In point of fact, she could be the perfect fitness model if she chose, because her body was the perfect balance of muscular and feminine. She was a Latina Wonder Woman.\n\nSomehow, she had discovered how to sculpt her body to the peak of sensuous desirability. The stripper I had lived with so long ago was too muscular at first, and then she let herself go after I was paying all her bills, the bitch. Her back had been impressive in a road map way, but when I put my arm around her it felt like hugging my brother. \n\nJen wouldn't feel that way. Her stomach was obscenely flat, and while you couldn't see the six pick underneath, the definition was there. She had put her heels back on, which accentuated her calves, sheathed in delicious thigh highs. They were round and strong, but not so diamond-like as to mar their feline glory. So, too, with her arms, her back, her shoulders, her ass, everything an example of discipline and restraint.\n\nAs she moved sinuously to \"Super Duper Love\" by Joss Stone, I came to realize that this private dance was a continuation of her earlier vulnerable kiss, the one that had gotten this whole thing started tonight. She was unselfconscious, unashamed of what she was and what I would see. She wanted me to look. She wanted me to see her. She knew, somehow, that I would appreciate her inner beauty that much more if I let everything else soak in. She knew I was thirsty for her, and she wanted me to drink it all.\n\n\"Were you wearing that all night long?\" I asked in a hoarse voice. Her legs were sheathed in those dark thigh high stockings, her thong was so minuscule it disappeared from behind, and her bra was one step from a demi, still barely covering her areolas. I still didn't know what color they were. Damn.\n\n\"Oh, no,\" she said and glided towards me. \"Earlier tonight I needed a little more, um, reinforcement, yeah. I hoped we'd dance the way we did tonight, all crazy, and I needed a little help for that. They were still sexy, but not like this little set. That's one reason I needed to go get ready.\"",
        "\"Well, I sure like it,\" I said as I ran my hands over her breasts, fondling them gently. We kissed for a little while. \"There were more reasons to get ready?\"\n\n\"Maybe you'll just find out,\" she said as she pushed me back onto the bed and lay on top of me again. Our lips met, and the passion began to amp up, gradually at first, but soon we were sucking face with utter abandon. All the while I was teasing her nipples and gently caressing her breasts.\n\n\"Cole,\" she groaned as she pulled her face off me. \"You have to, you HAVE to...\"\n\n\"Have to what, doll?\" I asked, stroking her hair and losing myself in her mahogany eyes.\n\n\"Suck them, Cole. You have to. Love my tits with your mouth. I can't stand it.\"\n\nI reached my hands behind her back to unsnap her and found her already there. We did it together and I slipped the straps off her shoulders to finally reveal her treasures, and there was no disappointment, believe you me.\n\nAs I've said how many times now, they were big, double D's at least, but that wasn't what took my breath away at first. I was mesmerized by their perfect shape. They were round and full, with not even a hint of sag. How could such large natural tits be like that, you ask? How the hell would I know? I guess I'd surmise some godlike genetic predisposition, which I didn't understand. Her parents were slight people. As large as those babies were, they fit her long body so perfectly that she would have looked wrong were they any larger or smaller. In my experience, girls as tall as her had flat asses and minimal tits. \n\nOh, and her nipples were nut brown and larger than a pencil eraser when aroused, as they were now. Her aureoles were slightly lighter in color and as perfectly formed and sized as could be. This girl was perfection.\n\nShe leaned forward and desperately shoved them into my face, smothering me in the sexiest way possible. Of course I wanted to dive in and suck them hard, but I knew that was the extent of her previous experience, so I deliberately slowed everything down and teased, teased, teased.\n\nI ran my tongue around and in between her breasts, avoiding the nipples, depositing copious amounts of saliva, only to occasionally take one or the other between my lips and very gently tug before returning to the tease.\n\n\"Cole, please,\" she whimpered. I had rolled over on top of her so I could take complete control of her pleasure. Her hands cradled my head, fingers playing with my hair as she tried to push me into her tits harder.\n\n\"What, it doesn't feel good?\" I asked slyly. We both knew the answer to that.\n\n\"Of course it does,\" she whined. \"But...\"\n\n\"Shhh...\" I said. \"These are mine. These are all mine, right?\"\n\n\"You didn't even have to say it,\" she said weakly. Her hands went back to gently caressing my hair.\n\nI did take pity on her, but I did it at my pace. Her breasts were flawless, and there was a lot of real estate to work with. I'd read somewhere that women with overly large breasts weren't all that sensitive, but that certainly wasn't the case with my Jen. By the end, I was pulling hard on her nipples with my teeth while I flicked them quickly and firmly with my tongue. Then, as I'd hoped and suspected might happen after her initial reaction, her whole body tensed for a moment as her hands pulled my hair tightly. I slowed down until I was softly, so softly, and slowly, so slowly, caressing her nipples with the flat of my tongue.\n\n\"Oh, Cole,\" she breathed. \"Thank you, thank you. Oh, thank you.\"\n\n\"You're welcome,\" I said, smiling as I moved my body up to look down at her. \"It was my pleasure.\"\n\n\"I came, Cole, just from you on my tits. I actually came.\" The wonder in her voice was adorable.\n\n\"I'm glad.\" I said. We were both smiling, and then I saw a trace of a tear in the corner of her eye.\n\n\"Baby?\" I asked.\n\n\"Everyone's always been so rough with them,\" she said, choking with emotion. \"You're the first person to treat them, treat me, with any kind of respect.\"\n\n\"I'm so, so sorry, baby,\" I said. \"I haven't met your pussy yet, but until then, these are the two most perfect presents the world has ever received, and I'm going to treat them accordingly.\"\n\n\"You are such a dork,\" she giggled. I was pleased. The good mood was restored.\n\n\"So now I have a question for you, mister,\" she said after we'd kissed a little more. \"Why are you still dressed?\"\n\n\"Look at all that,\" I said, waving my hand to indicate her body, naked now except for those stockings. \"It's been all you so far, honey.\"\n\n\"That ends now,\" she growled. \"Everything off. Now. Right now. Everything.\"\n\n\"Okay, okay,\" I said. I'd taken off my jacket, loosened my tie and kicked off my shoes, but the rest was still intact. I sat up to unbutton my shirt, but was obviously taking too long for Jen. She hopped off the bed to come around and pull my pants off quickly, which caused me to fall back onto my back, still unbuttoning. My socks were off before I knew it, and she had my underwear down before I could get my arms out of my shirt.\n\n\"I knew it,\" she said delightedly and swooped down to engulf my entire rigid cock in one long stroke. I'd rarely been deep-throated all the way, and no one had ever been able to take all of me without working it in for a while. It felt great, it was amazing, but it was too much too soon.\n\n\"Baby, baby,\" I said and put my hand on the top of her head. \"Go slower at the beginning, okay? I'm sensitive at first.\"\n\n\"Sawwy,\" she said, mouth full of cock. \"I got a little too excited,\" she said, pulling off. \"Don't worry, I really do know how to do this.\"\n\nShe wasn't lying. She did slow down for a while, but soon she was back to deep throating me, obviously her specialty. She did this thing where she'd take me all the way, clamp her lips down hard and then shake her head like a dog. It drove me fucking nuts. It wasn't too long before I started to feel the impending rush.\n\n\"Jen,\" I said, putting my hand back on her head. \"Jen, I'm going to cum.\"\n\n\"Ummm hmmm,\" she groaned happily.\n\n\"No, I mean it,\" I said. \"Stop. I don't want to come in your mouth. It might be my only one for tonight.\"\n\n\"Huh uh,\" she said, taking me out of her mouth but continuing to slowly stroke me. \"You'll be back up in less than five minutes, I'll bet you anything.\"\n\nShe dropped down and took the whole thing in her mouth again, pulling off with a loud pop.\n\n\"So. Give. Me. Your. CUM!\"\n\nJen started bobbing up and down at breakneck speed, her hands cupping my ass. I'd never felt anyone blow me like this before. How could she be this amazing so young? I came in less than a minute, shooting rope after rope after rope into her mouth. She snorted loudly through her nose as she took every last bit of it. She smiled up at me and opened her mouth to show me she still had it all, then swallowed and licked her lips.\n\n\"You are one yummy man,\" she said, and squealed a little when I swooped down myself and kissed her, hard. She struggled for just an instant and then gave in, kissing me back with as much ardor.\n\n\"You don't think that's gross?\" she asked when we finally came up for air.\n\n\"Not if it's mine,\" I said. \"You are some kind of wonderful.\"\n\n\"Oh, baby, you're the wonderful one,\" she said, pushing me back so she could lie in the crook of my arm.\n\n\"Time for me to return the favor.\" I said, brushing her hip. \n\nShe was silent a moment, idly playing with my chest hair. \"Cole, I can tell by the way that you took care of my boobs that you're an amazing, attentive lover. I'm sure you're trying to make love to me tonight to show me how it can be.\"\n\nShe looked me in the eye. Busted again.\n\n\"I love you for that, I really do,\" she said, \"and I want to do all that, but right now...\" she kissed my chest, \"Right now I wanna fuck. I want you to take me as hard as you can, as long as you can. Make love to me later, I just want to fuck you so bad.\" \n\n\"Okay,\" I said. \"I think that can be arranged, but right now you have a bet to win, young lady.\"\n\n\"What are we betting, my ass?\" she asked with an impish grin.\n\n\"I didn't know that was on the table,\" I said, not sure where this would end up.\n\n\"Cole, it's your table. Everything's on it,\" she said as she kissed her way down my body. She reached down beside the bed and came up with a blue bottle. My breath caught a little. Could she really mean it? I hadn't done that since, yeah, you guessed it, since I was with Gina.\n\nJen squirted a liberal amount on her hand and started rubbing it on and between her breasts. She crawled forward, but ignored my flaccid cock, instead making a slick trail up my body, kissing and sucking as she went, smearing oil all over my body with her tits.\n\nShe moved all around, finally rubbing them over my cock, which was already starting to stiffen. She wrapped her pendulous mams around it and began pumping my cock. Oh, it was so good. By the time she moved back up and kissed my neck, my rod was already turning into a bar of steel in her lightly stroking hand.\n\n\"Okay, now for the special treatment. Move up here,\" she said, pulling me up and scooting me to the side of the bed facing the door.\n\n\"Scoot down a little,\" she said, and I moved so I was sitting on the edge of the bed. I felt absurd sitting there with my semi-hard cock waving in the air.\n\n\"Now, watch this,\" she said, giving me another deep kiss. She walked away from me and I couldn't help admiring that full ass of hers as it swayed back and forth. It was so round, so tight, just a work of art, a force of nature...\n\nAnd out of nowhere she performed a graceful back bend, folding backward and placing her hands on the carpet. Gravity pulled her enormous breasts down past her head, but I hardly noticed, because as she went down, she took my entire cock smoothly into her mouth. \n\nShe stayed there, bent like a pretzel, with my cock in all the way, massaging it with her throat muscles, her tongue moving all around. I couldn't resist and reached forward to knead her stupefying breasts, squeezing and pulling on the nipples. She responded by clamping her lips around me even harder. After several mind-blowing minutes, my cock was as hard as it had ever been in my life.\n\n\"Who won?\" I asked after she finally took my cock out of her mouth, performed a handstand and vaulted onto the bed to land beside me.\n\n\"Who cares? We both did,\" she said. \"Now fuck me. God, please do it.\"\n\nShe had asked me not to earlier, but I had to at least have a little lick down there. I kissed my way down her body, imitating the way she did it, and was presented with a beautiful sight. It smelled delicious. I put my tongue in there, just for a little taste. Just to check it out, you know.\n\n\"Cole...\" she grumbled, but she changed her tune after I paid some delicate attention to her clit. \"Okay, you win. You don't have to stop. Do whatever you want to...Oh, fuck, oh, Cole...\"\n\nIt didn't take me long to bring her almost there. She was already dripping when I started, and her squirming under me graduated from writhing to senseless thrashing until I stopped, letting her gasp a moment, and then dove back in to suck her clit and stroke it with the tip of my pointed tongue at the same time. My face was covered in her juice. It was a swamp down there, a delicious, tasty swamp.\n\n\"Unghh,\" she half cried, half sighed as her body went totally rigid and shook, no, it vibrated with an intense cum. I waited it out until it was almost over and then moved up quickly to slowly ease my aching shaft into her pussy.\n\nAs soon as I entered, I knew I was in for it. She was tight, easily my tightest ever, but I slid it in slowly with almost no resistance. She was gushingly wet, and her young pussy gripped me with so many delightful squeezes and surprises. But, most impressive, it was HOT! She was a virtual furnace, something I'd never experienced. \n\n\"Oh my god, Cole,\" she was still gasping. \"What are you doing to me?\"\n\n\"Good stuff, I hope,\" I said, and began to fuck her in earnest. I said a little prayer of thanks for all those recent hours in the gym. I had already cum once, so I was in no danger of embarrassing myself that way, and I knew I had the physical endurance to give her what she so desperately craved; a nice long ride.\n\nI'm happy to say I really did give it to her good. I started with long, slow strokes, and after a while I began to give her an extra push at the end of each one, just like you do an extension at the end of a movement with free weights. It drove her wild, but soon I was just pounding away at her without abandon, forgoing technique for pure force. I reached down to maul her breasts, maybe roll or pull at a nipple, but I never stayed with one thing long enough to bore her. By the end, we were fucking so hard that we were both making rutting, animal noises. I never make much noise during sex, something Kelly would complain about, but I was just so into it, you know? Never had I been so consumed with this act.\n\nAs you can imagine by now, Jen was not passive underneath me. Her hands fluttered everywhere, stroking my back, cupping my face, cupping my ass and pulling our bodies closer. Her nails raked my back, but with perfect pressure so I felt the excitement of them without being pierced. Her red-hot pussy accepted me to the hilt, but she would constantly rotate her ass underneath me, spreading her legs wider to get even more of me in her. I was only too happy to oblige. Her body stiffened twice and got all out of rhythm, so I was pretty sure she was cumming.\n\nAll the while, she kept up a continuous play by play, telling me how big my cock was, how good it all felt, or just grunting and groaning in delight. She let me know when she came, actually she shrieked when she did. She was the absolute hottest fuck, and this was only missionary. \n\nWith that thought, I pulled out, much to her dismay, but I had her turned over with her ass in the air before she knew what hit her. I so wanted to bury my face between those luscious globes, but that would have to be later. Now I had to satisfy my primal urge, OUR primal urge, to get my cock back inside her as soon as possible.\n\nShe was dripping with sweat now. This was what she had been waiting for, and I wanted to give her the best I could. She began perched on her hands and knees, but as I desperately spread her legs further, she fell forward and laid her head in her arms. When I tried to dig in the covers to reach her amazing tits, she pushed herself back up on her hands and began thrusting back on her own, our bodies meeting with ever increasing crashes. I would probably have bruises tomorrow, but an earned bruise is a badge of honor, right? \n\nAll the while, she was reaching back and cupping my ass, stroking my hip, always remaining in contact as if to reassure her it was really me.\n\nHer constant talk died out suddenly, so the only sounds in the room were our labored breathing, her moans and the heavy slaps of body against body. I was in my own little world as I pulled her onto my cock over and over, not paying attention for a minute, until I suddenly realized she wasn't moaning, she was crying.\n\n\"Babe, are you all right?\" I asked, slowing down to almost a stop.\n\n\"No! Don't stop!\" she gasped. \"I've never cum this hard. Ever. It's just one long CUM! Fuck! Fuck me, Cole! Fuck me hard!\"\n\nWell, at that, I gripped her hips more firmly and picked up my pace even more, rammed her even harder, and, when I felt the time was right, let go with my left and and slapped her quivering ass hard, once, then twice, on each cheek.\n\nThat was it for her.\n\n\"Aieeee!\" she cried, collapsing on the bed. I rode her down, still pounding her as hard as I could until I felt the beginning of the end.\n\n\"Jen, I'm gonna cum!\" I panted into her ear as I kissed the back of her neck.\n\n\"No! No!\" she hissed, scrambling forward to pull herself off me. Fuck me. Of course. Here I was, thirty years older, and she had to be the one to think about birth control.\n\nBut then she rolled over, flopped onto her back and spread her legs, holding them behind her knees, opening them to me as wide as possible.\n\n\"Cum inside me, cum, cum inside me,\" she was panting, too. \"But I have to see your face, Cole, I have to see your beautiful eyes when you cum. Keep them open. Please, look in my eyes when you cum.\"\n\nI had cooled down a bit, and I was expecting to last a long time again, but after I buried my cock back in her pussy furnace, I realized it wouldn't be long at all. I skipped the slow buildup and soon started slamming into her as hard as I could.\n\n\"That's it, baby, ohhh,\" she breathed. \"Cum, give it to me, cum in me.\"\n\nThis was a scene right out of a porno, but it didn't feel like that. Jen really wanted me to cum, wanted to share in that with me, wanted me to feel good.\n\nI banged away as hard as I possibly could, and I felt her quiver again, albeit a smaller one than before, and an explosion soon started in my toes, erupting with more force than I could ever have imagined. Jen had both hands on my face again, cupping and stroking it as we made soul deep eye contact. Not wanting to crush her, I tried to fall on my side next to her, but she pulled me down on top of her, wrapping her arms and legs around me in a tender death grip, our sweaty bodies plastered together. I was going nowhere, not as if I wanted to. \n\nJen closed her eyes and laid her head back, leaving me to rest my head beside her and oh, so gently nuzzle her neck. I don't think she was passed out exactly; I think she just felt too good to move right then. I could relate.\n\nIn our day, Kelly and I had had a very satisfying, even wild, sex life, but I had never experienced anything like this. Anal aside, that stripper, Gina, wasn't nearly as good as Kelly, believe it or not, and I thought I'd had it as good as it would ever get. I couldn't have been more wrong. Jen was the embodiment of the wild Latin chick, all crazy and uninhibited with that rock hard dancer's body and sensationally rounded curves. Add affection and romance. Perfection.\n\nAs she slowly came to herself, rolling to her side and smiling at me weakly, I realized what had made this the greatest fuck of my life. As our hands instinctively reached for each other to entwine our fingers, I knew. \n\nIt was love.\n\nI had been screwed well and thoroughly before, many times, but never, ever with so much love. So much so that I wondered if Kelly had ever loved me at all. Certainly not as totally as Jen. As for me, I had never had lovemaking feel so completely right before. Not with Kelly, not with Gina, not with any of my high school girlfriends or the few one nighters I'd had before I met Kelly.\n\n\"You really do love me, don't you?\" I asked.\n\nHer whole body tensed for a moment, and a cloud seemed to pass over her face. Finally, she looked like she had reached a decision.\n\n\"Yes,\" she said simply. \"I would never have said it, never have told you so soon, probably not ever, but, since you asked, yes. And I'm glad you asked.\"\n\n\"Since when?\" I asked.\n\n\"Since our first game at your kitchen table.\" she said. \"You took one look at me, saw how upset I was about how Brandon was treating me, and you took care of me. I realized then and there you were the most wonderful man in the world and I loved you. It's only gotten stronger since.\"\n\n\"Oh,\" I said. It was a lot to take in. That was a long time ago.\n\n\"You always treated me like a person,\" she said, stroking my face again and pushing my hair out of my eyes. \"You never did talk down to me, even when I was little, but that day you treated me like a woman. Like your would your woman.\"\n\n\"Jen...\" \n\n\"Look, I'm not stupid.\" she said. \"I don't know if you could ever have the same feelings for me. You were always my ideal, something I could never have. I stuck with Brandon a lot longer than I should have, hoping he would turn into a younger version of you, but instead he turned into HER.\""
    ],
    "authorname": "LittleDonny",
    "tags": [
        "older man",
        "younger woman",
        "nineteen-year-old",
        "anal",
        "blowjob",
        "titty fuck"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/just-cole-and-jen"
}