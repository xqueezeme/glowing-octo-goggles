{
    "title": "There and Back Again Ch. 063-064",
    "pages": [
        "Chapter Sixty-Three: Making a Deal \n\nI spoke to Greagoir, Irving, Alim, Tanar, and the nameless templar. \"There's more. Because it turns out that I am not a mage; I'm a templar. Without training, without Lyrium, and without the Chantry.\" \n\nTanar smiled slightly, and Irving nodded thoughtfully; Alim looked a little bit nervous, but glanced at Irving and the lack of panic seemed to calm him. By contrast, Greagoir jumped up from where he sat and spluttered loudly. I sat quietly and watched, amused by his shock. Irving glanced at my face, and I could see him suppress a smirk of his own. \n\nWhen Greagoir regained control of his voice and began berating me for wasting his time with nonsense, I smiled sardonically. \"I will give you answers, Ser, when you sit down. That is why I am here, after all. And when I have explained, we will discuss the next steps.\" \n\nMy calm manner seemed to soothe him to some extent; my years as a business consultant taught me that the way to respond to someone who was ranting was to get quieter and quieter, without appearing to be afraid. It feels extremely awkward to shout at someone who does not either respond in kind or cower. He paced back and forth a couple of times in front of his seat, face red, and then finally sat back down with a sigh. \n\n\"I met a scholar recently who knows things about the templar order that the Chantry seems to have forgotten, and it has been an eye opener. I will not waste your time with the entire story of how I came to find out I am a templar, but rather just give you the information I think is relevant. \n\n\"During recent research, I learned that the Chantry does not seem to know why some templars seem exceptionally talented, while others who work just as hard remain ineffective, at best.\" \n\nTanar interrupted me. \"Before you get excited, Knight-Commander, I told her that. In Redcliffe.\" \n\nI nodded. \"Indeed. The scholar, who I met recently, was able to explain some things I suspect you do not know. The reason some templars abilities are stronger than others isn't something that can be taught, and it has nothing to do with morals or character or faith. What it does have to do with is magic, or rather, the resistance to it.\" \n\nTanar's eyes lit up, and Irving looked intrigued; even Greagoir appeared to be listening avidly, though his countenance was still angry. \n\n\"We are all born with a certain amount of resistance to magic. Dwarves have a lot of resistance, obviously, but in humans and elves, the amount is quite variable. And it is hereditary; if you come from parents with strong resistance, it is more likely you will have strong resistance. It is this resistance that determines to what extent a templar can develop their skills. Regardless of how hard you work, if you have low resistance to magic, you will never become a good templar. And apparently, if your resistance is high enough, you will manifest templar abilities without training. \n\n\"The scholar reasoned that I may have extremely high magical resistance, given that I grew up in a world with no magic. I wonder if all people where I grew up have it? And Wynne has confirmed it - what did you say, Wynne? Worse than healing a dwarf?\" \n\nThe elderly mage nodded, chuckling. \"Indeed.\" She turned to Irving. \"Afterwards you need to try this - I cast a rejuvenation spell on Sierra, and I probably used twice the mana that I would for anyone else. Healing her was much more difficult, as well, and the lightheadedness caused by healing was far worse than normal.\" \n\nI was surprised; I hadn't thought about my blackout in Honnleath for a while. But she was right - even the more minor healing she'd done since, after sparring with Tomas, made me a bit dizzy. I was drawn from my thoughts by Tanar's excited muttering. \n\n\"That would explain the Lyrium's effect, as well!\" When he looked up and realised everyone was staring at him, he flushed. \"Ingested Lyrium - it would increase a subject's resistance to magic. It's why dwarves have so much magic resistance - all the Lyrium in the stone.\" \n\n\"It seems the Chantry has forgotten a few other details, as well, over the centuries,\" I continued, after a pause. \"For one thing, in the distant past, more people in Thedas must have understood the magical resistance, because it was purposefully bred into the royal families, and I suspect many of the noble families, in the nations across Thedas. This is why, I bet you'll find on average, that the younger sons and bastards of noble families who become templars are more effective than the commoners. It has nothing to do with upbringing or worthiness, but is something they have no more control over than their eye colour. This higher inherent magical resistance probably also decreases the number of mage children born into the royal families. \n\n\"In addition, there are abilities, which the strongest of templars should be able to learn, that I do not believe you are aware of. They likely won't make much difference to the average initiate, but those who advance through the ranks may benefit. \n\n\"I am not a master at these skills, by any means. They are mostly instinctual for me, as I was not trained in how to be a templar. I initially used them during periods of intense fear. I have, however, learned to control several of them.\" I held a hand up to forestall Greagoir, who was about to interrupt me. \"And I am willing to show you, even to teach you, if you will accede to my request.\" \n\nGreagoir did not jump to his feet again, but his complexion, which had returned to normal during my tale, flushed again. \"You have information that should only be privy to the Chantry, and if I do not give you what you want, you would refuse to share it?\" \n\n\"Yes,\" I replied, softly. \"I do not believe that your Chantry has sole dominion over knowledge, nor any inherent right to take it from those who do not fall under their purview. That said, I believe there is a role for templars in Thedas, and I am willing to aid them in their task. However, there are more important things that we are dealing with than the Chantry's knowledge, or lack thereof. I have freely given you the information I know, so far, and I suspect even knowing that information will allow you to research into new templar abilities if you can test the untrained initiates for resistance, and allow the most promising to work together. \n\n\"However, if you wish us to take time away from our very critical task of ending the Blight, you must make it worth our time. I am asking for something of value to me, that inherently does not hurt you in any way. Perhaps you would like, now, to hear my request?\" \n\nWhen he finally nodded, I took a deep breath. \"I wish for you to release Anders to be conscripted into the Grey Wardens.\" \n\nI managed to avoid flinching at the inevitable explosion that came from Greagoir as he leapt to his feet. \n\n\"Of all the...arrogant...! You don't know what you're asking for! He's a menace. He's escaped the Circle six times, and is currently being held in the dungeon. I will not risk the safety of countless innocents by letting that...maleficar...out of our control.\" \n\nIrving stood and objected. \"Anders is no maleficar, Greagoir, and you know it. Yes, he has escaped the Circle, but has he ever hurt someone to escape? Attacked a templar? Turned to blood magic? Just because he cannot tolerate being confined, does not mean he is a maleficar.\" \n\nGreagoir started to shout back, and then Tanar stood and joined the fray; I sat on my log and watched, amused, as it looked like the three adult men would come to blows. It was when the templar behind Greagoir gripped the pommel of his sword that finally, Tomas had had enough. \n\n\"Gentleman!\" he shouted, over-riding even Greagoir's ranting. \"Sit down this instant and we will discuss this like adults.\" \n\nDespite his short hair and smooth chin, Tomas didn't lack for commanding presence. All three men fell silent, and finally sat down, sulking like children. I appealed to Greagoir once again. \n\n\"I know exactly what I am asking for, Knight-Commander. Because of the book I told you about, I know exactly what will happen to Anders in the future. He will escape again, after the Blight, and be conscripted into the Grey Wardens then instead of now. And in the meantime, he will have been damaged by the year of solitary confinement you are currently punishing him with, and you will have to put up with the embarrassment of yet another escape. Instead, he can come with us, be useful against the darkspawn, help end the Blight, and be out of your hair. I will personally take responsibility for him, and I will be able to demonstrate why you need not fear him while in my company.\" \n\nGreagoir looked slightly calmer, but not entirely pacified. He turned to Wynne, and I tried not to cringe. \n\n\"What do you think, Senior Enchanter?\" \n\nWynne looked at me, expression inscrutable. I nodded; she needed to tell the truth. I wouldn't ask her to lie about disagreeing with me. \n\n\"You know very well that I do not trust that young man. All of those escapes, and then his reputation in the tower even before that...\" Irving grimaced, and I sighed. \"That said, I do trust Sierra. She is well able to deal with an abomination, should something happen; ask Irving about how Uldred died, sometime, if you doubt it. She feels strongly that letting Anders become a Warden is the best course of action. While I am not so sure, I find it difficult to argue effectively. These are not normal times, and extraordinary measures may be required.\" \n\nI smiled gratefully, blushing at the compliment of complete trust she paid me. I mouthed 'Thanks Mom,' at her, and she winked at me. \n\n\"From you, Wynne, that's high praise.\" Greagoir sat, looking thoughtful; I took it as a good sign he hadn't refused outright. After a few moments, he asked Irving and Tomas to walk with him, and they took off toward the shore, talking quietly under their breath. Irving gestured as he spoke, and I smiled at his animation. He was sort of cute, in a grandfatherly way. \n\nWhile we waited, Tanar slid over to be nearer to me. \"Where did you learn all this information about templars?\" \n\nI looked up, judging the distance between us and the helmeted templar; he was facing Irving and Greagoir, and I doubted he'd be able to hear, but I whispered anyway. \n\n\"A mage. A Grey Warden who'd stayed alive for centuries using blood magic.\" \n\nHe looked horrified, and I nodded. \"Yeah, that's what we thought too. But he was certainly knowledgeable. Apparently, two or three hundred years ago, this was all common knowledge.\" \n\nI said he was knowledgeable, and allowed Tanar to think what he would, knowing he'd assume I meant that the apostate was dead. He managed to look both disappointed and relieved at the same time. I chuckled. Welcome to my life. \n\nI answered Tanar's questions as best I could, though for the most part I didn't know the answers. After a few minutes, I decided I wanted to know what was going on with Alim. He had yet to speak, and I was curious not only why he was with them, but also whether he knew Jowan and was involved in his escape. I could have asked Tanar - he was clearly the gossipy type - but instead I got up and sat down in Irving's vacated spot. \n\n\"Alim, is it?\" \n\nHe nodded, eyes widening. \"Yes, my lady?\" \n\n\"Just Sierra, please. I have less interest in a title than you can imagine.\" I smiled, and his lips turned up slightly. \"I was just wondering why on Earth they brought you with them.\" I smiled as he seemed to work through my strange jargon. \n\nHe sighed. \"The Knight-Commander has decided that I am the only trustworthy mage in the Tower.\" I looked confused, and he explained, \"I was the one who told him one of the apprentices was a blood mage.\" \n\nI gasped. \"Jowan?\" \n\nHe nodded, clearly confused that I knew who that was. I couldn't figure out what to say. Good job? You're an asshole? I couldn't decide. I still wasn't sure where I stood on the Jowan situation. Fortunately, Alim chose not to ask. \n\n\"I think he and Irving are grooming me to be the next First Enchanter, and Greagoir's decided to keep me close. I don't know if it's so he gets to know me, or maybe to try and intimidate me into being more cooperative than Irving is...either way, lately I've had to follow him about almost everywhere.\" \n\n\"Were you in the Harrowing chamber, when Uldred...\" \n\nHe confirmed it, looking ill. \"Yes. I saw you there. I was only too glad I passed out before it was over, though I could have lived without the headache.\" \n\nMy face flushed. \"Uh, sorry about that. That might have been my fault.\" \n\nHe looked at me, and his eyebrows climbed up his forehead. \"You killed Uldred? You were the templar who drained all our mana.\" \n\nI nodded. \"Yeah, although I didn't know it then. I still don't exactly know how I killed him.\" His eyes were wide, and I realised suddenly that he was afraid. \"Hey, wait. I'm not like other templars. I have unique powers, but I don't hate mages. I wasn't raised an Andrastian. I would never use my powers on you, well, assuming you don't get all bulbous and gross and demony.\" \n\nHe sputtered out a laugh. \"Demony?\" \n\nI blushed. \"What else should I call it? I'm not exactly familiar with the nuances of the names for the various types of possessed mages.\" \n\nHe laughed, and when he was done, we talked for a few more minutes about the Circle and the Chantry. When I told him I thought the templars were wrong to isolate mages, not warn them what they faced in the Harrowing, and that I didn't believe anyone should ever be made Tranquil, he seemed to relax and open up a bit more. We had a pleasant 'wouldn't it be nice' conversation, dreaming of a world where the Circle was there to protect mages, not imprison them. I hoped he was right and did become the First Enchanter when Irving retired. He wasn't an idiot, and he was willing to spend the time and effort to effect change. He was likely only my age, but I was impressed with his wisdom. \n\nIrving and Greagoir spoke for probably half an hour, alternating between calm discussion and obviously angry arguments, with Tomas apparently only interjecting when things became too heated, but they eventually came back. Greagoir informed me, in a gruff voice, that Anders would be released into the custody of the Grey Wardens. I smiled gratefully, repressing my shout of joy. \n\nOf course, Greagoir wanted to begin training right away to learn the abilities I could show him. It occurred to me, for the first time, that without an Emissary around, training was going to be difficult. \n\n\"I...have a small problem. I need a mage to, uh, borrow mana from.\" He looked revolted, and I tried to placate him. \"My abilities allow me to drain a mage's mana, but then sometimes, I can...do things with it. I am all-but-untrained; I can barely perform a basic smite, but if I have access to a mage...\" \n\nIrving, who'd been listening, walked over. \"You may use my mana, Sierra.\" \n\nWynne hustled over, interrupting anything else he was going to say. \"No, Irving! You have not been well; I will not allow it.\" She turned to me. \"Use mine, dear.\" \n\n\"Wynne...\" \n\n\"I insist. You need mana, so use mine.\" \n\nTo my relief, Aedan spoke. \"Wynne, we need you in top form when we're done here, in case healing is required. We can't have you drained of mana.\" \n\nShe seemed to consider this, and then turned to Tanar. \"Don't look at me!\" he exclaimed. \"Once was enough.\" \n\nAlim, who'd been listening silently, approached. \"Use mine. I am not needed for healing, and I am certainly healthy enough to withstand it.\" \n\n\"I...do not wish to cause you discomfort.\" I was not keen on the idea, by any means. I knew it wouldn't damage anything - Avernus had been fine, when I gave him his mana back - but I didn't know if it could have a negative impact on Wynne's Spirit, and I had just barely gotten the elf to stop being afraid of me. \n\n\"Can it kill me?\" \n\n\"I don't believe so.\" \n\n\"Does it hurt more than a smite?\" \n\n\"No, at least, I don't think so. I've been told it's mostly very uncomfortable - you will be able to feel your mana, but not access it.\" \n\n\"I'll live,\" he drawled, wryly. \"Let's get this over with.\" \n\nAlim, Greagoir, and I went to sit together, some distance from everyone else. The first thing I did was what I had done with Alistair, having Alim create small fireballs and showing Greagoir what I could see when he did it. He was a little slower to pick it up than Alistair, but we got to the point where he could detect a spell that was being visualised, even before it was cast, and I figured he'd have plenty of opportunities to practice once we left. Then, with an apologetic warning to Alim, I robbed the elf of his mana entirely, and just held it. \n\nAlim grunted, but Greagoir's mouth hung open in surprise. His shock was sort of amusing, and I grinned. \"Right? Can you feel the mana?\" \n\n\"How did you...\" \n\n\"No idea. It just happened. Now watch.\" \n\nLike I had done for Avernus, I let a small trickle of the mana flow back, and then more, until I held perhaps half. \"Now you try. Take what I'm not using.\" \n\nUnlike Alistair's smooth ability to share with me, Greagoir's attempts were clumsy. I wondered just how much stronger Alistair's abilities must be, and what that would have meant for him had he stayed at the Chantry. He could have been the next Knight-Commander, if they truly promote by skill. Greagoir tried to grab the mana with what felt like brute force, knocking the wind out of Alim and even jolting me. I growled, and Greagoir flinched apologetically. \n\n\"Alim?\" \n\n\"I've had worse. I'll be fine.\" \n\nI made Greagoir practice picking up the mana and putting it back again several times until he could do it less roughly. Once I was convinced he had it, I dropped the rest of Alim's mana and bade Greagoir try it on his own. It took a while, and Alim looked a lot more uncomfortable than when I did it, but he finally had it. \n\nThen I showed him the shield. His eyes were huge as I convinced Tomas to try to strike me with his sword - it bounced right off. Greagoir could see what I'd done, but he couldn't seem to master it. He would take Alim's mana, and the air around his target would sort of shimmer, but the shield wouldn't stay. He finally stopped, panting in exhaustion. \n\nI told him of the other two abilities I had - one, which seemed like a super-powered, area-of-effect smite - and the other, which made Uldred's orifices start leaking blood. I explained that I had not yet learned how to do either with any sort of control, in addition to which I couldn't try because of the lack of those that I wanted dead in the immediate vicinity. \n\nFinally finished, the three of us rejoined the rest of the group. Wynne, Irving, and Tanar all took turns casting minor spells - rejuvenations and small heals, for the most part - on each other, Alistair, Greagoir, and me. I was unsurprised to discover that while my resistance was clearly much, much higher than the rest, Alistair's was the next highest - noticeably higher than Greagoir's. The Knight-Commander scowled at Alistair, and no one could miss the twinkle in Alistair's eye. He opened his mouth, most likely to make some witty comment, but a harsh glare from Tomas shut him up abruptly. \n\nI knew exactly what he was going to say, and I almost blurted it out too: Aren't you sorry you weren't all nicer to Alistair when he was in the Chantry? Tomas' gaze swivelled to me, and I turned away to hide my amusement. \n\nChapter Sixty-Four: Tattling and Embarrassment \n\nGreagoir followed through with his end of the deal, and even offered us one better - the use of the Circle's boat to get to Redcliffe. We agreed gratefully, and decided to meet in the morning to greet Anders, recruit him, and board the boat. Wynne would accompany Irving and Greagoir back to the Tower to make sure Anders was ready to travel. ",
        "Before they left, I decided to broach the subject of Meredith. I wanted only Irving and Greagoir to hear, so I asked the two men for a minute of their time. \n\n\"So, I'm hoping now you can concede that I am what I say, that I'm not from here.\" Both men nodded, looking slightly puzzled. \"That book I told you about? The one that predicts the future here? It keeps going, well past the events of the Blight. And it's not good news.\" \n\nI must have looked as nauseous as I felt when I thought about Kirkwall, because Irving looked concerned. \"What is the matter, my dear? Surely it cannot be so dire. You've already said we defeat the Blight.\" \n\n\"We do. But after that...there's going to be a war. Between mages and templars. The specifics don't matter, particularly, but there are two things that can, possibly, slow things down and restore some sanity. One I am taking care of, and I will not tell you. But the other...you need to know that the trigger, the one who truly starts the war, is Kirkwall's Knight-Commander - Meredith Stannard.\" \n\nIrving looked horrified, but I noted Greagoir only looked thoughtful. \"You don't look surprised, Knight-Commander. I'm guessing you've met Meredith?\" \n\nHe nodded. \"She's...devout, I'll give her that.\" The way he said devout, it sounded like 'crazy'. I couldn't disagree. \n\nIrving's frown deepened. I sighed. \"She'll become much worse, if you can imagine. She's going to be exposed to a magical artifact made out of Red Lyrium; she'll have it made into a sword, actually. Red Lyrium is extremely toxic; it will drive her mad - deepen her paranoia, remove her ability to reason. She'll end up executing dozens of mages or making them Tranquil, even ones that have passed their Harrowing and are not practicing blood magic; she will turn the Gallows into an actual prison, again, allowing abuse to happen, getting involved in Lyrium smuggling... She will push the mages to their breaking points, quite literally forcing many innocent people to turn to blood magic, because it's that, Tranquility, or death. \n\n\"Because of her, a mage underground will spring up, dedicated to freeing the mages, and when she goes too far, it will explode into war. And after the Kirkwall Circle falls, the others will start to fall, one by one. It's possible to prevent the Circle here from falling, with the right reforms, but the rest are doomed. \n\n\"The only way I can see to prevent some of the bloodshed is for Meredith to be removed as Knight-Commander. And I don't mean years from now, when the damage is already done; I mean now. Before she gets her hands on that Idol. Before she goes completely mad. She needs to be kept away from mages at all costs.\" \n\nGreagoir turned to pace, but I was happy to see he hadn't dismissed my claims out of hand. \"What you suggest is not an easy thing. With no evidence of wrongdoing, I will never be able to convince the Grand Cleric, never mind the Divine, that she must be reassigned.\" \n\n\"Actually, if you're talking to Elthina, you might try telling her to pander less to the nobility, send her sisters and brothers to help the poor once in a while, and stop assuming that a miracle will happen on her doorstep. Andraste favours those who use their position and abilities to help others, and those who do their duty; all she ever seems to do is avoid hers, leaving it 'in the Maker's Hands'.\" \n\nIrving snickered, and Greagoir shot him an annoyed glance. \"You're speaking of the Grand Cleric, woman. Show some respect.\" \n\n\"I respect those who deserve it, Knight-Commander. Neither Meredith nor Elthina do.\" \n\nHe shook his head irritably. \"If we get back to Meredith, what would you suggest I do? You know that no one will believe me when I tell them she's a danger.\" \n\nI thought about it, and inspiration struck. \"Have you sent Cullen to Kirkwall yet?\" \n\nHis shocked expression morphed into a wry chuckle. \"That's very disconcerting, you know. I have not. I haven't even mentioned it yet.\" \n\n\"Well, he needs a bit of time to...recover, but once he has, he should be the new Knight-Commander. My suggestion? Get him on your side, warn him about Meredith, and have him send you reports. He won't have the confidence to report a superior for misuse of command, not until she's stark raving mad at any rate. Encourage him to write to you about anything he sees as being...not right, and perhaps you can use that as evidence?\" Greagoir nodded, deep in thought. \"Or frankly, just have someone assassinate her now. It would probably be easier.\" \n\nGreagoir looked up sharply, but relaxed when he saw me grinning. I won't tell him I'm half-serious. \"I'm not sure that would help, honestly; she'd just end up a martyr for mage-haters.\" \n\nI grinned. \"You do have a sense of humour! Well done.\" \n\nHe smirked. \"What should I tell Ser Cullen to look for?\" \n\n\"Tell him to keep count of the number of Tranquil, and ask the pretty ones about their sex lives. There was a strong implication some of the Tranquil were being used as sex slaves. And find a way to have her sword examined, by mages or the Tranquil or someone, whoever can recognise it for what it is. I suspect the rest will be obvious.\" \n\nGreagoir finally left, with Wynne and Irving in tow; I was happy that they hadn't dismissed my concerns, but remained unconvinced that anything would come of it. Sighing, I returned to my spot near the fire. \n\nIt was near supper, and all the concentrating I'd been doing with Greagoir had given me a headache. I picked at some food, suddenly nervous to meet Anders, still anxious about Alistair, and overall irritable. Leli had asked for my phone, so I wandered off to sit on the shore until sunset. Zev joined me, this time, and I wondered if they'd drawn straws for who would come find me; nevertheless I was grateful for his company. \n\nHe didn't ask, didn't push, just sat quietly beside me and let me think. \n\n\"Zev?\" \n\n\"Yes, my dove?\" \n\n\"Am I being too hard on him?\" I couldn't say his name, but I knew Zev would understand who I meant. \n\n\"No, Bellissima. He made a mistake, a grave one, and it is entirely up to you to decide how to respond. There is no such thing as a 'standard' amount of harshness in situations like this, yes?\" \n\nI sighed. \"That doesn't help.\" \n\n\"I know. I am sorry. If I may ask...do you love him still?\" \n\nI nodded, then buried my face in my hands. He put one arm around my shoulders and waited. When I looked up, he continued. \n\n\"He is set on pursuing you. He wishes to make amends.\" \n\n\"I know.\" \n\n\"Do you wish him to stop?\" \n\nI paused, watching the sunset reflect beautiful colours on the water of Lake Calenhad. \n\n\"I just don't know.\" \n\nWe sat quietly again until the sun finally set, and I clambered to my feet to head back to camp. On my way back, I heard music playing softly from Alistair's tent, and I smiled sadly. I could have sung along, not that I would have where anyone could hear me. The song he'd chosen was \"Let her go\" by Passenger. \n\n<p align=\"center\">Staring at the bottom of your glass \n\nHoping one day you'll make a dream last \n\nBut dreams come slow, and they go so fast \n\nYou only need the light when it's burning low \n\nOnly miss the sun when it starts to snow \n\nOnly know you love her when you let her go \n\nOnly know you've been high when you're feeling low \n\nOnly hate the road when you're missing home \n\nOnly know you love her when you let her go \n\nAnd you let her go...</p>\n\nMy gaze found Leliana, the last person I knew had my phone, and she tilted her head, gesturing toward my tent. I sighed and followed her through the flap, sitting cross-legged on my bedroll. \n\n\"He asked for my phone?\" \n\n\"No. I gave it to him. I told him that I'd figured out what he'd been doing, with the songs, and that I had chosen one he should listen to. I think you heard it, yes?\" \n\n\"Leli! I asked you not to do anything. I asked you to give me some time.\" \n\n\"I know, but, my friend...he is hurting you. Both of you. I didn't understand just how badly until today. Every time one of you picks a song and sends it to the other, both of your hearts bleed. It would be kinder just to use a dagger, and be done with it, no?\" \n\nI knew I was going to lose my temper, and I'd taken it out on Leliana before. I wasn't going to do it again. I was already tired and irritable, not acting rationally; she was trying to help me, despite expressly ignoring my wishes. I held my tongue, and asked her to leave me alone. She complied, reluctantly, and departed. \n\nI thought about her words, and my reaction to her essentially telling Alistair to let me go. I thought about how I felt when I heard him listening to that song. I thought about what Zevran had asked me. \n\nSuddenly I was very tired. I changed out of armour and curled up in my blankets, falling straight asleep. \n\nI woke several hours later with a scream. The darkspawn dreams were horrific, and in this one, I could have sworn it was a vision...of a dwarf being turned into a broodmother. I wondered if it was Laryn. I stumbled out of my tent over to the edge of camp, where I retched into the bushes. I'd heard a saying once - 'I have learned that you can keep vomiting long after you think you're done' - and I'd always thought it only applied to drinking. I had tears running down my face, and probably snot too, given how congested I felt; the whole thing was humiliating. When my stomach finally settled, someone handed me a rag, and I wiped my nose and mouth before sitting back with a gasp. My stomach hurt, and my mouth tasted like I was the one eating darkspawn flesh mixed into a gruel with Maker-knew what else. My benefactor handed me a waterskin, and I rinsed out my mouth and spat before taking a big drink. \n\nI finally turned to see who had been unfortunate enough to witness my gastrointestinal pyrotechnics, and to no one's surprise, ever, it was Alistair. Really, it's like my life is being orchestrated for maximum humiliation. I sighed and thanked him softly. \n\n\"Darkspawn?\" \n\nI nodded. \"Broodmother.\" \n\nHe shuddered, and then took my hands to pull me to my feet. \"I'm sorry.\" \n\nI stepped towards the fire; I knew I was not going to sleep anymore, not for a while, so I planned to take over watch and send Alistair to bed. I only got a couple of steps closer to the fire, however, when I heard Alistair gasp. \n\n\"Sierra, Maker, what happened?\" I looked down at my legs, where he was staring in horror, and realised that my trousers were stained with blood. I was oddly detached, looking at the spreading redness; I knew I should have been scared, but my emotions just couldn't seem to catch up with the rest of me. \n\nAfter a few moments, I noticed Morrigan approach, Alistair practically dragging her by the arm. I was dazed; I hadn't even noticed that he ran off to get the mage. She took one look at me, told Alistair to go back to the fire, and then took one of my hands, pulling me into my tent. I tried to object, but she just tugged harder, and I followed her without fighting it. \n\nShe pushed me back on my bedroll, which was also stained, I noticed abstractly; I couldn't seem to focus on any of the details. I felt her aura and then a green glow came from her hands, hovering over my midsection. I put my head back and closed my eyes, wondering if I was in shock from blood loss. Morrigan didn't look frightened, however, so it couldn't have been that bad. \n\nSome discomfort I had barely registered eased, and I recognised what it had been: cramps. When Morrigan finished, she allowed me to sit up. I ran my hands through my hair, trying to collect my wits. \n\n\"Sierra?\" Her soft voice interrupted my confused train of thought, and I looked up at her. She was holding a small yellow ball that shed soft light through the tent. \n\n\"Well, this is embarrassing.\" \n\n\"Sierra, you are far too old not to know what is going on. What has come over you?\" \n\n\"I...\" I paused, thinking. \"I've been taking medicine, at home, for years, to prevent my period from coming.\" She looked confused, so I clarified, \"My uh, girly bleeding thing. Whatever you call it here.\" \n\n\"Monthlies.\" \n\n\"Right. Well, I haven't had one in five years. I sort of forgot what they were like. When I was back, before, the doctor asked me if I wanted to keep taking the medication, and I said no, I didn't think I needed it. Alistair was using protection, and...well, I guess I didn't think that through very well.\" \n\n\"Are your monthlies always this heavy?\" \n\n\"They used to be. Before. That's why I took the medicine.\" \n\n\"Why did they never fix this?\" \n\n\"It can't be fixed. Some women are just like that.\" The incredulous look on her face almost made me laugh. \"No magic, where I come from, remember?\" \n\n\"I am no healer; though I now know one spell, it is not sufficient for this. Wynne should be more than capable, however.\" \n\n\"I'll talk to her tomorrow on the boat.\" Morrigan nodded and rose to leave; I raised my hand to stall her. \"Um, Morrigan?\" \n\nShe nodded. \n\n\"What do I do about...\" I gestured to my lap. \n\n\"What do you mean?\" \n\n\"Well, I'm guessing there are no tampons in Thedas. What do I use to prevent it from bleeding through my clothes?\" \n\n\"What is a tampon?\" \n\n\"A little absorbent thing that you put...up...it keeps the blood from making a mess. You throw them away when they're soiled.\" \n\n\"Ah. Well, most women here use rags. You have to wash them out and reuse them. However, I can, temporarily, suspend your bleeding until you talk to Wynne. I know how to make a potion.\" \n\n\"Oh, would you? I'd love you forever. I'm already mortified, I don't know how I'd be able to manage.\" \n\n\"You should know - you should not get pregnant within a month of taking the potion. The baby could have birth defects.\" \n\n\"That shouldn't be a problem.\" I looked away, and she got up to go again. \"Morrigan?\" \n\nShe sighed and settled again. \"Yes, Sierra?\" \n\n\"Is...is there any chance this is a miscarriage?\" \n\n\"No. That was the first thing I checked.\" \n\nI was flooded with a feeling I couldn't quite place, and then I realised it was a jumble of emotions, not just one. Relief that nothing was wrong, that I wasn't pregnant, that I wasn't having a miscarriage; embarrassment that I didn't know how to manage my own bodily functions in this ridiculous world, and that Alistair had seen me; and a deep sadness - for just one moment, I'd hoped that I could be having Alistair's baby. \n\nMorrigan finally left, leaving me reeling as I analysed my own emotions. Clearly I was not even close to having figured out this Alistair thing, if I could seriously be hoping for that. As an obligation was not the way I wanted to move forward there, thank you very much. \n\nI changed into a loose nightdress, balling my soiled smalls inside a fresh pair until Morrigan came back with her potion. I stripped the bloody blankets off my bedroll, grabbed my soiled trousers, and bundled them together. Between the dream I'd had and my acute embarrassment, sleep was just not going to happen; I decided that when Morrigan returned, I would take my things down to the lake and try to get the stains out while they were fresh. \n\nI didn't have to wait long - Morrigan's slender arm came through the flap of my tent holding a flask of some green concoction that smelled like death. I tried to chug it, but it was thick and resisted being drunk quickly; I gagged my way through it and then spent a couple of minutes hoping not to throw up again, before I managed to settle my stomach. \n\nI crept out of my tent, holding a bundle of soiled cloth, only to have Alistair approach anxiously. \n\n\"I want to thank you for not waking everyone.\" I couldn't imagine how much worse it would have been if Aedan or Tomas saw. \n\n\"Are you alright? Morrigan wouldn't tell me anything.\" \n\n\"I'm fine.\" We hadn't spoken almost at all in days; it felt weird to do so now. \n\n\"You're not fine! That was a lot of blood, Sierra. How did you get injured?\" \n\nI looked at him, incredulous. How could anyone be that na\u00efve...it occurred to me to wonder if the Chantry taught even basic sex ed. \n\nPlease, Maker, don't force me to teach Alistair about female bodily functions. \n\n\"It wasn't an injury, Alistair. I...well, women in general, I suppose, have these, um, things that happen. Every month or so.\" \n\nHis faced flushed scarlet - I could tell even in the very dim firelight. He stammered. \"I know that! But you never.,..I mean, before I didn't think you...had that.\" \n\n\"I was on medication. Back on Earth. I told you about that before?\" He nodded. \"It stopped them.\" \n\n\"So what's gone wrong then?\" \n\n\"They asked me if I needed it anymore, and I said no.\" \n\n\"Why?\" He looked so vulnerable, then, his expression open and puzzled, and I almost gave in. Almost. Because some day I wanted your baby. There was no way I was going to admit that out loud. \n\n\"Alistair, if you don't know the answer to that question, I am certainly not going to enlighten you. Perhaps you can ask Wynne about it later. She seems to enjoy discussing personal matters with you. For now, I'm going to go clean up, and you're going to stay on watch.\" \n\n\"But you can't go down there alone. I'll wake Aedan and come with you.\" \n\n\"No you won't. You won't wake him at all. When I'm done washing, it's my watch, and that's final. I do not want you down there with me, Alistair. I don't want anyone down there. Contrary to popular belief, I am not helpless. It's close enough that I can shout if I need help, and I have my dagger in case the local wildlife get curious. Now go sit down.\" \n\n\"Sierra...\" \n\n\"Please, Alistair.\" I was on the verge of hysterics. I couldn't have this conversation any more. \"Please just leave me be. Please.\" \n\nI turned and walked away, pumping my kinetic flashlight to light my path. I didn't hear armour clanking, so he must have let me go. I made it to the shore and sank down, trying to bottle everything up. I was sick of being so fragile. \n\nAfter a moment I started my trousers soaking as I pulled off my smalls and washed myself carefully. That done, I started scrubbing my soiled clothes against a rock with some soap, rinsing frequently to remove the blood. After all the fighting I'd seen so far, I was more than knowledgeable of how to get blood out of cloth. \n\nFinally satisfied that my trousers and blankets were salvaged, I tucked my wet panties inside them and took my bundle of wet things back to the fire. Alistair didn't object when I sent him to get some sleep, and once I was alone except for Shale, as usual, I spread my wet clothes and blankets on rocks as close to the fire as I could. \n\nI was chilly; my blankets were damp, and I really should have been wearing more than a nightgown, so I crawled to the opening of my tent, pulled out my armour and my heavy cloak, and dressed hurriedly by the fire. Then I sat, for the rest of the night, staring into the flames and trying not to think anymore."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-63-64"
}