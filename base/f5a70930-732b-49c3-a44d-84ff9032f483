{
    "title": "Fourth Vector Ch. 35",
    "pages": [
        "Chapter 35: Fatherhood\n\nAuthor's Note: This chapter is dedicated to my father, who passed away while I was writing Chapter 34. I struggled with how to outline this chapter for quite some time, but recent events quickly showed me the best possible theme.\n\nThis one is for you, Dad.\n\n*****\n\nIt was only early evening and Jack was already getting frustrated. He tried not to let it show on his face just for Kat's benefit, but it was becoming increasingly harder to contain.\n\n\"It's all right,\" she said in a low voice. \"You're doing great!\"\n\nJack gave her a deadpan look that told her just how wrong she was. Before she could respond again, he looked down to see an upset baby wailing to get back to his mother. John's face was contorted into a look of pain as his cries managed to shake most of his body.\n\n\"Try to shift him in your arm,\" coached Kat. \"Move him closer to you, but angle him so he's not flat on his back.\"\n\n\"I've been trying that,\" said Jack with some frustration. \"I've put him in a few different positions and he still cries every time.\"\n\n\"Here, shift him lower.\" Kat closed the distance between them and shifted baby John lower on Jack's arm. For a split second, their child glimpsed a sight of his mother and stopped crying. Jack knew how this worked so he didn't get his hopes up that something had changed.\n\nJohn always stopped crying when Kat took him in her arms but the second that she moved away, he would start again. There were some women within the group who he would sit nicely for, including Jack's sister, Vera, as well as Queen Ciara and Abigail, but that small group was limited to only women. Ever since John had demonstrated more awareness in his surroundings, he'd refused to let his father hold him for any length of time.\n\nSure enough, as soon as Kat walked away, John's lower lip started to tremble and fresh tears began anew.\n\nJack tried to hold in a sigh but it escaped his lips regardless. He let his head fall back against the headrest of the chair, feeling completely defeated.\n\nIt was hard not to feel that way. After all, he'd bested just about every foe he'd come across in the past year and a half. He'd defeated Swabian armies in Andalucia, Picardy, and Apulia, and that wasn't mentioning that action back in Java against the Occitanians.\n\nSo now why was it that a twelve pound baby could be the one to finally defeat him?\n\n\"This is getting hopeless, Kat,\" said Jack with another sigh. \"He just won't sit with me no matter what we do.\"\n\nKat shook her head vehemently. \"It's not you, Jack. He still cries for me plenty of times. We just need to figure out how you can hold him without reducing him to tears.\"\n\n\"I think we've tried just about everything, don't you think? No matter which way I hold him or which angle or balancing on one foot with the stars aligned, he doesn't want to sit.\" Jack was exaggerating but that's how it felt. They'd run through so many different holds that he was finally coming to the truth of the matter--his son didn't like him.\n\nThat thought stung, and it had a bad habit of making Jack feel entirely useless. He could lead a country and command a fleet but when it came to childcare, he was about as able as a dead man. Up until now, he'd not said those words out loud to Kat, knowing she'd find them upsetting, but he was ready to face the facts at this point.\n\n\"I'm going to give him back to you,\" said Jack as he offered John back to Kat. \"I don't know what it is but he just doesn't like me. That's the only reason he won't sit with me. He hates me.\"\n\nKat gave him a shocked look and once more began to shake her head. \"That's not it at all, Jack. How can you think that? He's just a baby that doesn't know any better. Half the time I think he only likes me because I give him food anyway.\" She grabbed her enlarged breast just for emphasis.\n\n\"He loves you because you're his mother who's nurtured him for his entire existence,\" said Jack. \"I'm just the sperm donor who was absent most of the time he was in your womb. He doesn't know me and he doesn't like me.\"\n\nJack couldn't help but hang his head after uttering the words. In a way, it was relieving to get them out finally, words that had for so long bounced around his head. If he was being truthful, fatherhood was nothing like he'd expected. In his thoughts, he'd always pictured what it would look like but that never included the baby phase for some reason. He'd imagined playing around with a toddler or a young boy once they were old enough to hold their own.\n\nEven though he never knew why he didn't picture this phase, it became obvious why his subconscious grazed over it--he felt useless at this stage. John still needed to be around Kat for every hour of the day. He couldn't even take his son away for a brief moment without him crying to get back to Kat.\n\nSo far, fatherhood was turning out quite differently than he'd pictured.\n\nUnfortunately, his words had brought tears to Kat's eyes.\n\n\"It's not like that at all, Jack,\" she said with a sniffle as she rocked baby John. \"He loves you but he's just a baby. He just needs some time to figure things out.\"\n\nJack spread his hands apart. \"It already feels to me like he has it figured out. He just doesn't like me.\"\n\nNo matter how hard Kat protested, Jack still couldn't shake the feelings of uselessness that were now abundant internally. Especially when he saw how quickly John quieted down once he was suckling from Kat's breast.\n\n\"Maybe I'm just not cut out for fatherhood,\" said Jack finally. \"Maybe I don't have that fatherly instinct. I was adopted and raised by someone who wasn't my father so maybe it runs in the family too. Perhaps my father thought the same thing when I was just a baby.\"\n\n\"Jack, that line of thinking won't do you any good. Nobody picks up a baby from the beginning and knows how to do everything. It's a learning experience. Every baby is different too. What works well for one will be terrible for another. We just have to keep trying.\"\n\nJack shook his head slightly. \"I don't know how much longer I can take it if he keeps rejecting me, Kat. That isn't a pride thing at all. I just want to know that my son accepts me. That he recognizes it's his father holding him. I'm just not getting that.\"\n\nThose last words left a significant lump in his throat. Despite Kat having the occasional setback, there was no doubt there was a bond between mother and child even after such a short time. John was never happier than when he was in his mother's arms, something that Jack noticed quite astutely whenever they were together.\n\nHowever, it was something he couldn't say the same about. So far, he hadn't felt much of a bond with his son, and that part just killed him inside.\n\nIt was the ultimate expression of inadequacy.\n\n\"We'll keep trying,\" said Kat, putting on a brave face as John soon released her nipple and closed his eyes. He was asleep in a matter of minutes, resting peacefully beside her.\n\nThis is how things should be, thought Jack as he watched them. Mother and child. It still didn't make him feel much better.\n\nHe stuck around until Kat deposited the now sleeping John into a small bassinet. Once the infant was comfortable, she moved to the other side of the room and put her arms around Jack.\n\n\"Don't stop believing in yourself,\" she said, her voice muffled by his chest. \"I know this is really hard right now but we've faced down tougher enemies together.\"\n\n\"I'd almost rather face another Swabian army right now,\" muttered Jack. \"At least I know they can be beaten.\"\n\n\"We'll get through this,\" Kat repeated, never slackening her grip on him.\n\nJack let out a sigh. \"I just never expected it to be this way. I'd always pictured what it would be like to hold my child in my arms. Those pictures never included tears. I thought it would be a lot easier than this. Anymore, it just makes me want to give up.\"\n\nHer head tilted toward his and her eyes locked on his face. \"Don't even say that, Jack.\"\n\n\"I'm not going to give up, Kat. I just... I just want... I guess I just want some space right now.\"\n\nIt was the last words that Kat wanted to hear judging by the expression on her face but she understood. She wiped away her tears and nodded her head quickly, doing her best to be supportive.\n\n\"Whatever you need, babe,\" she said finally. \"Just come back to us later, okay?\"\n\nJack leaned in and kissed her forehead. \"I will, but I just want some time to think, that's all. I'll be back before you go to bed.\"\n\nNo more words needed to be said. Kat's arms pulled away and she returned to her chair while Jack stepped outside the room.\n\nDespite not wanting to talk about his failure as a father any longer, he still felt the need to talk to someone who might understand what he was going through. That's why he found himself walking down the street to the house that served Bill's family.\n\nThat street was just one of many in the small Apulian town that made up the headquarters of Jack's army. It was telling that this Apulian town was only a few miles west of Marmora. Ever since Jack had defeated the Swabian Army at the Battle of the Apulian Plane, he'd followed their retreat all the way back to the ancient Apulian capital city.\n\nFor now though, there was nowhere else for the Swabians to run. Their army was pinned down on a small peninsula near the city, with Jack's force cutting off any further line of retreat.\n\nThe last battle was finally at hand, and Jack expected that to happen within a few days.\n\nFor now though, his army was enjoying some of the comfort that came with having an urban headquarters, and that meant houses for all the major figures and real beds to sleep in. The Callands took a small house to call their own, providing enough rooms for both Bill and Lisa as well as Will and Lindsay.\n\nHowever, as Jack approached the house, he heard the sound of raised voices coming from the rear of the house. He skipped the knock on the door and made his way along the garden path to the rear, where another scene of frustration was taking place.\n\nThis time, it was the elder Calland having an intense argument with his younger son, something that Jack hadn't borne witness to before.\n\n\"You didn't have to leave Galicia,\" argued Will, his hands on his hips and looking incredibly stern for a twenty-something young man. \"That was the whole point of my mission, wasn't it? When you left, you lost every possession we had. Even if we do get back to Galicia, we'll be destitute!\"\n\nNot to be outdone, Bill Calland pointed his finger at his son. \"What else would you have me do? Let Jack die? It was either that or our manor. Manors can be rebuilt, Will. People can't!\"\n\n\"I'm just saying there were probably other options,\" shot back Will. \"Think of all the things we'll have to replace. Someone could have stayed behind!\"\n\n\"Will, you don't know what you're talking about,\" said Bill as he crossed his arms in front of his chest. \"It was always going to come to this whether we wanted it to or not.\"\n\nJack crept closer without announcing his presence. This was quite the change from the welcome homecoming that the elder man had thrown his son when they arrived in Apulia weeks ago. It wasn't entirely a surprise to hear though--Bill had mentioned before that his son was bullheaded and that trait led to them having their share of arguments.\n\nIt was something else entirely to witness it firsthand though.\n\n\"You made a selfish move for our family and that's the end of it,\" said Will as he threw his hands up and walked past his father. He opened the door to the house but before he could slam it, Bill had one more thing to say.\n\n\"Maybe when you have a family of your own someday, you'll understand why I did what I did!\"\n\nThe next sound was the slamming of the door. Jack could hear Bill take a deep breath as he continued to mutter under his breath. At that moment, Jack sympathized with the man.\n\nOf all people, Bill would know exactly what he was going through.\n\nWithout any fanfare, Jack decided to keep walking, emerging onto the back porch area and catching Bill's attention. The elder Calland's eyes went wide at seeing Jack, no doubt from equal amounts of surprise and embarrassment.\n\n\"Oh, Jack, you're here,\" said Bill as he reached behind him to scratch the back of his head. \"When did you get here?\"\n\nJack nodded toward the house. \"Long enough ago to hear a few things being said. Is everything all right here?\"\n\nBill blew air through his lips and sat down. \"Just another evening at the Calland residence. My son seems to think he would make a better patriarch of the family than me.\"\n\nJack moved closer and sat down next to Bill. \"It sounded a little heated. From what I gather, he wasn't happy that all of you left Galicia?\"\n\nBill rolled his eyes. \"Yes, that's exactly right. He thinks Eric Rosdahl will have confiscated all of our possessions by now. He thinks someone should have stayed to maintain what's left of the family's name and fortune. In doing so, I hate to imagine what would have become of you.\"\n\nJack hated to think of such things as well. He doubted he would be alive if not for Bill's intervention.\n\n\"It's fine though,\" said Bill with a dismissive wave. \"He'll come around, I suppose. Or I will. It happens quite frequently with us. Sometimes I forget that my son is his own man now. He's a lot more combative than he was when he was a child.\"\n\n\"I suppose they have a tendency of growing up on us,\" said Jack.\n\n\"That they do,\" confirmed Bill. \"But anyway, you didn't come this way to hear about my troubles. What brings you over?\"\n\n\"Truthfully?\" asked Jack. \"I was having the same problems myself. I'm afraid my issues with my son are very similar to yours right now.\"\n\n\"Ah,\" said Bill with a knowing nod. \"Tell me what you mean.\"\n\nJack spent the next fifteen minutes filling him in on his lack of progress with John. He spared no detail, including telling Bill about his thoughts on the matter and why it bothered him so much.\n\n\"I just feel like a failure,\" said Jack finally, near the end of his monologue. \"Does it ever get easier?\"\n\nBill cracked a grin and pointed toward the house. \"Unfortunately, no. It only gets more complicated with time. One thing I enjoyed the most about his younger years was that he couldn't argue back with me. It's a nice time when they just do what you said without questioning it, a time that doesn't last forever.\"\n\n\"What was Will like as a baby? Did you have trouble bonding with him?\"\n\n\"I don't know if I would say bonding per se,\" said Bill. \"I always felt a bond with him, even when he was a baby. Although I will say that I played second fiddle to Lisa for quite a long time, similar to your problem.\"\n\nJack found himself nodding his head vehemently. \"How did you deal with it? What worked for you? What changed it around?\"\n\nBill shrugged. \"Hell if I can remember from that long ago. I feel like it just changed one day but I'm not sure if I can pinpoint exactly when it did. It might just be when he was old enough that things just happened on their own.\"\n\nJack felt his shoulders slump forward. \"That's hardly the answer I was hoping for.\"\n\nBill chuckled and put his hand on Jack's back. \"I'm sorry, Jack. Unfortunately, they don't give you a manual on how to handle children when they arrive. Most of it is just trial and error. It tests your patience the majority of the time but it eventually gets easier. It just takes time before it does.\"\n\n\"I have to admit I've never felt more helpless in my life,\" said Jack.\n\nBill laughed at that one. \"Why do you think we only had one? Lisa wanted more but I put my foot down on that one. One baby was tough enough but two? They probably would have killed me at the time. Looking back, I don't know if I was ready to be a father when Will arrived. I was pushing thirty, and Lisa and I had been together for several years so it seemed like the next step, but I'll admit I felt anything but prepared the moment he arrived.\"\n\n\"So how did you get through it? What helped you?\"\n\nAgain, Bill shrugged. \"Time, I suppose. It helps me now that Will is old enough to tell me when he's upset but when you're dealing with an infant, you're dealing with two weaknesses--they can't tell you why they're sad and you still don't know your child yet. Those two things will make it infinitely harder. You have to come to know your child, Jack. That doesn't happen overnight. It will only take time.\"\n\nJack let out a long sigh at the end of it. \"I came here hoping that you would have another answer for me. Much the same way you've had answers for all my questions before. You always seem to know just the right thing to say.\"\n\n\"I'm sorry, my friend,\" said Bill, who managed to look genuinely upset. \"But as you can see, fatherhood isn't something you learn one time and then you get it for the rest of your life. As you just heard with Will, there are things I still don't understand. It's something we have to work on constantly. Even when you think you have a good understanding, something will show you that you don't have any clue at all.\"\n\n\"It almost sounds like we just fumble through it forever,\" noted Jack. \"Like there's never any mastery to it.\"\n\nBill started to nod. \"That's a good way to put it. In the end, we just do the best we can. Motherhood comes easier to women. That bonding with a child is more intrinsic and intuitive than we give them credit for. Fatherhood is something that we make a conscious effort to do every day. Some days are worse than others but as long as you don't give up, there's hope for you at the very end.\"\n\nJack reflected on those words without giving a response. There would be no magic solution to the situation with John, but internally, he believed he always knew that would be the case. Every morning, he would have to keep trying, despite his frustration, to be the father that John needed. In the end, it still might not change anything with the boy but at least he tried.\n\nWas there anything else that he could do?\n\n\"You know, for what it's worth, you don't have so much to worry about,\" said Bill finally after several minutes of silence. \"You're here right now, Jack.\"\n\nJack blinked a few times. \"What do you mean?\"\n\n\"I mean you're here seeking answers on how to do better instead of walking away,\" said Bill. \"That tells me everything I need to know about the kind of father you'll be. The best father is the one that tries, the one that makes the effort. You could be a great man but if you spend no time with your children, you won't be much of a father. Even so, the father that's always there but makes mistakes will still be the better father all around. It's being present that's the key, Jack.\"\n\nBill then relaxed deeper in his chair as his eyes rolled upward. \"I remember there was a time when I almost left. I hate to even think of this memory, and I tried for so long to push it deep down inside, but I almost left Lisa one time. Not because of her but because of Will. I just couldn't cut it. I was in much the same position as you are right now, thinking I wasn't cut out for the responsibility. I remembered how my life used to be--so carefree and fun. Babies are neither and it really tested my patience.\"\n\n\"What did you do? What stopped you?\" asked Jack.\n\nBill smiled fondly before pointing inside the house. \"Will did. I was still half a mind to leave but I had to see the boy one last time before I left. I stopped in his room when he was still sleeping in his crib. All I wanted to do was take one last mental image of him sleeping. I used my finger to gently touch his arm and he used his whole hand to wrap around it. I still remember how it felt to see his tiny hand wrapped around my one finger.\"\n\nBill took a deep sigh before he continued. \"I lost it there. I questioned who would look after him if I didn't? He was just so little and he needed a protector. That was me, Jack. I was his protector. If I left, no one else would be there to do it. So I stayed. I stayed and I never looked back. When he was a little older, I used to curse myself for ever getting to that point. I wondered how I could have even let it develop but I think every new father goes through that phase at some point.\"",
        "Jack nodded his head in acknowledgment. \"I can't say it hasn't crossed my mind.\"\n\n\"See what I mean?\" said Bill with a grin. \"It hits every father at some point. The weak ones leave like the cowards that they are. It takes next to nothing to leave, Jack. It takes all of your strength to stay. Remember that for me please. The stronger route is to stay.\"\n\nJack found himself staring at the floor as he once more reflected on the words. He was thankful he had Bill here with him to help navigate fatherhood, but he had to wonder what things would have been like to talk to his own father. His adopted father or even his real one.\n\n\"I'm grateful that I have you to break this down for me,\" said Jack finally. \"I don't have the luxury of asking my biological father or even my adoptive one any longer.\"\n\nBill smiled fondly. \"I'll always be here for you if you need to talk. Being a father figure doesn't just exist to those of your own blood, Jack. It also means guiding the next generation.\" Bill put his hand on Jack's shoulder again. \"In this case, that means you.\"\n\nJack had a good chuckle at that. \"Well, as a surrogate father and friend, you're much appreciated, Bill.\"\n\n\"Hopefully I did more good than harm,\" joked Bill.\n\n\"We'll find out the next time I hold John how wise your words are,\" joked Jack in return.\n\nThe two men continued to talk for the next hour before it was late enough to get some sleep. Jack thanked Bill for all the advice and wished him well with resolving his argument with Will. By the time Jack returned to the small house he shared with Kat, she was already sleeping. John was as well, but it didn't stop Jack from sneaking into the room quietly and looking at the sleeping infant.\n\nThere was a lot of truth to Bill's words about them needing protectors. Just like in the story, Jack used his finger to gently rub John's arm. Even in his sleep, the baby let out a sigh of content.\n\nPerhaps I can learn this after all, thought Jack. Maybe there's hope for me yet.\n\n*****\n\nThe next morning, Jack had to put his personal issues aside so they could focus on the larger strategic situation in Apulia. Even though the Swabian Army was blocked off on the peninsula, it still existed and it could still be deadly under the right circumstances. Apulia wouldn't truly be free until they found out a solution to that army's continued existence, and that was why Jack had called a meeting to discuss their possibilities for removing such an army.\n\nBefore that could happen though, Jack and Bill felt the need to touch base with another commander who wouldn't be able to make the meeting.\n\n\"Lindy, how's the shoulder this morning?\" asked Jack as he stopped inside Lindy's tent on the outskirts of town.\n\nLindy grumbled loudly. \"It's perfectly fine now, Jack. I've been telling you that for the past few days. I'm ready to get off this light duty shit and back into action! When are we assaulting these last remaining Swabians?\"\n\nJack and Bill looked at each other and laughed. Lindy was always the same man, no matter if he had a serious wound in the shoulder or was perfectly fine. It had only been a couple weeks since the battle and his shoulder was still far from \"perfectly fine\" but he wasn't going to let that stop him from participating in the next battle.\n\n\"We're going to figure that out shortly,\" said Jack. \"Art and Greg will be joining us midmorning, and we're going to have to figure out how to deal with that army, especially if they are content to remain penned in on the peninsula.\"\n\nLindy growled out loud. \"Bunch of cowards. Why won't they come out and fight? Feeling all safe and sound hiding from the enemy. And they call themselves an army.\"\n\nBill raised an eyebrow. \"You know, Lindy, it wasn't that long ago that we were doing the same thing back in Arezzo. We didn't exactly come out and fight back then either.\"\n\nLindy blew a raspberry through his lips. \"Big difference there. We were outnumbered over three-to-one! We also moved out of Arezzo once our numbers reached rough parity. We only slightly outnumber them now so why are they too chickenshit to fight us? I think it's because they're scared and they should be. Who wouldn't be scared of facing the combined might of six countries as well as the Galician King himself?\"\n\nJack couldn't help but grin at those words. \"Amen to that, Lindy. Just focus on getting that shoulder healed and you can fight in this next battle with us. Sound good?\"\n\n\"Sounds great, Jack. I appreciate it!\"\n\nWith those final words, Jack and Bill left the feisty Galician colonel and made their way back to Jack's accommodations. The war meeting would take place in the kitchen of the tiny cottage because that was all the space they had to work with in the small town. Even still, for four men, it would have to make do.\n\nShortly after Jack and Bill had arrived, Art and Greg made their entrance, chuckling to themselves about a shared joke the moment before arrival. For Jack, that was a sight that made him smile. He wasn't sure how Art would take to Greg being made a general seemingly out of nowhere but to witness the two military giants bonding together was just what Jack needed to see.\n\nThere was only a short amount of small talk before all of them dived into the strategic situation.\n\n\"Well, we all seem to know what we're up against,\" said Art as he rolled out a crude map in front of all of them. It was a map of the immediate environs of the city of Marmora, which was dead center on the map. Directly to the west was the small peninsula as well as the position of the Swabian Army. \"The Swabian Army is trapped. In front of them is our army, which now outnumbers them after our last battle. To their backs is the sea itself, which at this time could either be a blessing or a curse for them depending on whether our fleet or theirs gets there first.\"\n\n\"It'll be a curse if the Swabian fleet can evacuate that army,\" grumbled Bill. \"That's a decent-sized force that they can use to rebuild around. If they are permitted to evacuate, our plans could all be for naught.\"\n\n\"We're not sure of the whereabouts of the Swabian fleet but we do know that our naval forces are on the way to Marmora as we speak,\" said Jack. \"I gave the order for Russell and Abigail to converge on the city with all possible speed. Being that they are on the other side of the island though, it will still take them three days at very least until they'll be in position.\"\n\n\"Three days is a lot of time that something can happen,\" said Greg. \"Especially if we have a Swabian fleet out there whose whereabouts we know nothing about. They could be rounding the crest around Marmora right now. Would we even know any better?\"\n\n\"We still have the daily airplane patrols around the city and its immediate environs to rely on,\" said Jack. \"That would see any Swabian activity a long way off but to really increase our range, we'd need the fleet.\"\n\n\"So then we really have three days of uncertainty ahead of us,\" said Art. \"Three days to work with before our fleet arrives. We need to force this battle as quickly as possible then.\"\n\n\"I imagine they still aren't showing much in the way of aggression?\" asked Bill. \"Not like what we saw before the last battle?\"\n\nGreg shook his head. \"They seem content to remain on the defensive. My men have caught a few scouts but that's about it. They seem to know they're outnumbered and they aren't taking chances.\"\n\n\"They let themselves be trapped on the peninsula though,\" said Bill. \"That's a pretty big chance to take for a force their size.\"\n\n\"Which all points to a possible rescue force on the way,\" chimed Art. \"Which is why we need to move quickly. My feeling on the matter is they wouldn't put themselves into such a position unless they knew something we didn't.\"\n\n\"As long as that army is in place, they block our route into Marmora as well,\" said Jack. \"I don't need to tell all of you that Santino is bugging me to no end about finally freeing the city. I'd like to get that off my plate as well.\"\n\nGreg and Art looked at each other, but neither man wore a confident expression. To Jack's discerning eyes, it seemed likely that they were trying to figure out which one would have the misfortune of speaking next.\n\n\"The problem that we face is the terrain of the peninsula,\" said Art as he gestured on the map. \"The Swabians block off the entire portion with their army but the peninsula sweeps upland the further it gets away from connecting to the rest of the mainland. This makes it harder for us as an attacker and easier for them to defend.\"\n\n\"What about drawing them out?\" asked Bill. \"Can we hope to pull them out to attack us?\"\n\nGreg flinched and then shook his head. \"I don't know any force that would let themselves abandon a good defensive position in the face of a superior force. My guess is that they will resist any invitations to battle and just wait for rescue.\"\n\n\"Which we can't allow to happen,\" said Jack, putting his fist firmly down on the table. \"We need to think of something. We can't let the Swabian Army escape.\"\n\nSilence reigned. No one seemed to know what to say to force such a battle within a short time frame. Jack was starting to wonder if it was just beyond them and if they might have to live with a free Apulia without destroying the Swabian Army.\n\n\"It's too bad they know our numbers,\" said Bill finally. \"Too bad we can't tempt them into thinking we're a smaller force.\"\n\n\"Trick them is more like it,\" mumbled Art under his breath.\n\nBefore anyone else could say anything, Greg slammed his hand down on the table, startling all of them.\n\n\"I got it,\" said Greg with a twinkle in his eye. \"I know how we can do it.\"\n\nJack started to chuckle at seeing his sudden excitement. \"We're all ears.\"\n\n\"Bullies,\" said Greg simply, not expanding on anything else.\n\nJack, Bill, and Art all looked at each other with confused expressions. Finally, it was Bill that spoke up.\n\n\"Bullies? I'm not following you, Greg. Can you explain?\"\n\n\"I can but how about I start with a short story first,\" said Greg. \"And that will help you follow my line of thinking.\"\n\nDespite not knowing where this would go, they all found themselves nodding their heads in agreement, waiting for the general to begin.\n\n\"I remember back in my schooling days, when I was still in my early teens, that we had a bully in our school,\" said Greg, starting off the story. \"One that wasn't too bright but he often picked on those that were smaller or weaker than he was. Simple schoolyard stuff but lots of the smaller kids went home with busted knees or missing money, that sort of thing.\"\n\n\"Anyway, this bully reigned supreme until another new bully moved into our school. One that was bigger and meaner than the original one. The old bully didn't like it that this newcomer came and was stepping on his turf but there was nothing he could do about it. The new bully was bigger, stronger, and slightly older. And when the new bully started to even pick on the old bully, it was only a matter of time before something drastic happened. However, the old bully found a way he could hit back at the bigger bully.\"\n\n\"How was that, Greg?\" asked Bill.\n\n\"The new bully's kid brother,\" answered Greg. \"Now, I mentioned before the old bully wasn't too bright. One day, he was tired of taking shit from the new bully and waited until his younger kid brother was around and he beat the kid's ass. Broke his glasses, took his money, and turned him entirely black and blue. It was his way of getting some vengeance against the new bully that turned his life around.\"\n\n\"It wasn't that smart either,\" said Art. \"What did he think was going to happen when the kid told his brother, the new bully?\"\n\nGreg chuckled. \"Like I said, he wasn't too bright. He got his ass beat the next day so badly that we never saw him again. But therein lies the resolution to our problems.\"\n\nJack blinked. \"Are we one of the bullies in this situation you have envisioned, Greg?\"\n\n\"I hope we're not the younger bully,\" muttered Bill.\n\n\"No, we're the older bully,\" said Greg. \"And the Swabian force is the younger one. How can we get the Swabians to come out and play? We throw them a weak target to pounce on. What if we throw out a decoy force that tempts them from their positions? Much like we did with the weakened flank during the last battle? We use this small force to get them to come out from the peninsula and once they're engaged, then we bring the rest of the army to the battle while the Swabians are still attacking. Then they won't be able to get away and we can defeat them finally before they can escape!\"\n\nJack, Bill, and Art all looked at each other as they appraised Greg's plan. For Jack, he could see what Greg was trying to insinuate. Use a small force as bait to bring in the Swabians but there were several variables that would need to be taken care of first before it could work.\n\n\"The way I see it, we would need to pull back from our current position,\" said Jack. \"They won't dare attack the decoy force if we're still in the picture. Much like your schoolyard bully, he had to wait until the bigger bully was away before he attacked. It would be the same with the Swabians. We need to pull back far enough away that they think we left but close enough that we can reach the decoy before they are overwhelmed.\"\n\n\"And just how far back is too far?\" asked Bill. \"How far can the army march in one day to support the decoy force but not arouse the suspicions of the Swabians?\"\n\n\"You'd be surprised, Bill,\" said Art. \"We can cover quite a bit of ground but to me, this only works if we get the official story straight. We could say we've gone off to liberate Marmora, leaving a small token force behind to watch the Swabians. Perhaps we send over a few captured soldiers to tell their leadership the same story. That way, when they see the decoy, they'll be more likely to attack without reservation.\"\n\n\"Do you think this is something we can get working on today?\" asked Jack. \"With three days, we don't have much time.\"\n\nGreg nodded. \"Just leave this one to me, Jack. We can use a little schoolyard tactic to finally destroy the Swabian Army.\"\n\nBill let out a low whistle. \"Let's just hope it works as well in practice as it did on the playground.\"\n\n*****\n\nThat hardest part of preparing for the battle was choosing which men to use in the decoy force. Most of the individual components of the army wanted to be part of the force, knowing it was where the action would be thickest and most intense, however there were some components that wanted no part of it.\n\n\"I was hoping the Picards and the Carinthians could avoid being part of the decoy,\" said Neil Fagan after pulling Jack to the side that afternoon. \"Many of them are still in rough shape after taking the full brunt of the Swabian attack in the last battle. I still have many that are wounded. I thought perhaps we could put them in a quieter portion of the battlefield this time around?\"\n\nJack wasn't surprised by the request and he found himself agreeing with Neil. \"I wouldn't ask your men to suffer that kind of hardship so quickly after the last battle,\" he replied. \"I have other men in mind for the decoy.\"\n\nThat answer seemed to relieve Neil but it didn't make Jack's job any easier for whom to select. With the Swabians having approximately 18,000 men, he needed a force that was small enough to attract their attention but strong enough to hold on until help arrived.\n\nIt was for that reason that Jack pulled Greg and Dustin aside just a little while later.\n\n\"See, I told you,\" said Dustin to Greg before Jack could even get out his request. \"I knew he'd come to us to be the decoy.\"\n\nJack started to chuckle. \"Of all the men under my command, there's no force I trust more to do their jobs than the Javan marines. What do you think? Are you able to stand up to the Swabians?\"\n\n\"Not only can we stand up to them, but if you don't arrive at the field of battle fast enough, you might find that we've licked all of them on our own,\" boasted Dustin proudly.\n\n\"Well, I still need to get you some help though,\" said Jack. \"Two thousand Javan marines won't be enough to withstand that force by themselves.\"\n\n\"What about the Samarans?\" asked Greg. \"They'll be able to stand their ground and they're impressive soldiers from what I've seen.\"\n\nJack considered the request but ultimately he started to shake his head. \"I like the Samarans but their reputation is well-known. I'm afraid if I put them in the decoy force, we might just scare away the Swabians from attacking. I want someone without such an impressive reputation.\"\n\nIn the end, the choice was between the Galicians and the Apulians, and Jack suspected putting the Apulians with the Javans would be the best combination. His reasoning was that the Swabians wouldn't have much respect for the Apulians alone since they were almost conquered before he arrived with reinforcements.\n\nSo it was settled. A small force of five thousand men composed of Apulians and Javan marines were put into a defensive position opposite the Swabian Army on the peninsula. They were in charge of digging out their own defensive works while Jack had a very public showing of the rest of the army marching off in the direction of Marmora.\n\nHe also put in some scouts that allowed themselves to be caught by the Swabians as well from approaching too closely to their lines. Their mission was to reinforce the belief that Jack was leaving a small force to watch over the Swabians, believing them beaten, while the rest of the army marched over to liberate Marmora in the meantime.\n\nIn reality, Jack went nowhere close to Marmora. He pulled back about a few hours' hard march from the peninsula and awaited word of what was happening. By the distance alone, Art assured him the Swabians wouldn't be able to see his forces visually but they'd still be close enough to help the decoys before they were overwhelmed.\n\nOnce the plan was fully in motion, the only thing they could do was wait.\n\nAnd wait they did.\n\nIt was on the morning of the second day that Jack began to wonder if they'd blundered in their plan. There was still no sight of the Swabian fleet for evacuation but he began to think that they made the decoy force too strong to consider an attack.\n\nIt was during a meeting with Art about what to do if their plan failed that the booming sound of artillery was heard on the horizon. The radio at Jack's waist soon went off with Greg's voice.\n\n\"Jack, we have Swabian pressure opening up on our lines. They're taking the bait!\"\n\nThe sound of artillery and mortar fire soon became intense. Even from their distance away, it sounded loud enough to get the whole army's attention, and judging by Greg and Dustin's fierce cries to their men, the decoy force was soon under incredible pressure.\n\n\"The entire Swabian Army is attacking us now, Jack!\" yelled Greg into the radio. \"We need the rest of you here now! As soon as you can get here!\"\n\nGreg's words set off the plan of action for reinforcement--a plan that had two parts.\n\nWith the distance between Jack's remaining force and the field of battle, there were going to be two methods of transportation to get them to where they were needed. The first was that Jack's force requisitioned any wagon or motor-operated vehicle they could find, using them for quick speed to transport men to the peninsula.\n\nUltimately though, the size of the army was the biggest factor in the need for a second method, which meant many of them had to force march their way to the peninsula. Without most of their equipment, the forced marchers could be there within a few hours, but it still left a gap of time when such a small force had to hold their position against a much larger Swabian force.\n\nJack arranged for the Samarans to be one of the groups with the fastest transportation, and he hitched himself along with Art to their small convoy, arriving at the battlefield about forty-five minutes after the first request.",
        "What he found was total carnage.\n\nThe Swabians had surely taken the bait and had pounced on the decoy position, surrounding it on all but one side as they tried to overwhelm the defensive works. Inside that position, Jack could see the Javans and Apulians having a terrible time just trying to maintain their own ground.\n\nThey would need relief quickly if they were to continue to be a capable force.\n\nWith only fifteen hundred Samarans in the first wave, Jack found the soft flank of the Swabian beast and threw his men headfirst into the attack.\n\nThe effect on the surprised Swabians was instant confusion and fear. The Samarans mowed down those rear echelons of gray-cloaked Swabians easily before the threat was finally realized by the enemy army. As his convoy left to bring in more men, Jack saw the fiercest fighting of the entire war as his growing force just tried to hold their ground.\n\nDespite achieving surprise on the flank, it was tantamount to a wasp sting on an enraged dog. The dog might have been temporarily surprised but his fury was only doubled afterwards.\n\nIt was only as the second wave arrived with more Samarans that Jack felt they would stop being pushed back finally, and they started to make the Swabians pay with more casualties of their own. The third wave arrived with the last of the Samarans as well as some of the Galicians, and now the Swabians only slightly outnumbered his force. With the rest of the forced march troops only being a short distance away, the battle could begin to turn.\n\nIt wasn't a moment too soon. Greg's men were in bad shape from the continued sustained attacks, and even though the Swabians were now being pushed on the defensive, Jack needed fresh men to take over the brunt of the attack.\n\nA full three hours after the attack began in earnest, the rest of the force arrived. Picards and Carinthians poured into the fight, many of them attacking the soft flanks of their Swabian foes and pushing them back to the peninsula.\n\nThe Swabians had a terrible time trying to reform their lines after such repeated strikes in the flanks. They were pushed back steadily to the northwest, their lines haphazardly maintained after uneven pressure coming from the east.\n\nIn time, a small gap appeared between part of their forces, a gap that was noticed by Art as he directed the Galicians to exploit it as much as possible. Steady cohesion within the Swabian ranks was almost lost at that point as Jack hoped to see the makings of a rout.\n\nIt wasn't meant to be. The gap was closed off by the Swabians before more of the Allies could rush into it, and for the next half hour, it was the scene of the hottest fighting in the battle until Art finally directed the men to try another spot in their lines. It was early afternoon now, and with the full forces of both armies involved in the fighting, Jack was hoping for a moment when they could get their next break against the enemy.\n\nThat came just over an hour later when many of the Samarans and Picards on the flank managed to penetrate the original defenses of the Swabians on the peninsula, fully taking a hill that had anchored their force. With their original positions now being overrun, the Swabians continued to execute a fighting withdrawal, pulling back deeper into the peninsula.\n\nFor Jack, it was a beautiful sight to see. With no reports yet of the Swabian fleet, there would be nowhere for them to go soon enough.\n\nIndeed, the Swabian flanks soon began to cave in on themselves as the defenders formed a rough half-circle, moving backwards steadily but fighting for every inch of ground they gave up.\n\nThere would only be so much room they could work with though. The ocean was in sight and very soon they would run out of land.\n\nIt was late afternoon when the Allies received their next big break. Jack was overseeing the fighting in the Carinthian section with General Barca when several soldiers carried over the dead body of a Swabian in a small litter. Jack could tell by the distinctive dress and markings that he was someone important to their cause, and judging by his silver hair and wrinkles, he was someone in charge.\n\n\"Who is that?\" he asked as they laid the man at his feet.\n\n\"It's a Swabian lord, Your Majesty,\" answered the Carinthian private. \"We found his body just over there, surrounded by many of his men. We had to kill a good many of them before they could get the body back behind their lines but we were able to do it!\"\n\n\"The only Swabian lord here was Godric Katla of the island of Selz,\" said Jack as he appraised the body. \"From what I heard, he was an older man. That's surely him.\"\n\nCloser examination of the body confirmed the identity. In the thick of the fighting, the Swabian lord had gotten cut off with a body of his troops. He was killed by a single bullet to the chest, causing his men incredible grief but they were all killed to the man before they could get back to friendly lines.\n\nWith the death of the Swabian lord, Jack had to wonder if the fighting would soon cease however he was in for a shock.\n\nIt continued with just the same intensity as had persisted for most of the day, and it wasn't until nightfall that most of the serious fighting slackened (but didn't end).\n\nBy that point, Jack had to guess that the situation behind Swabian lines was near catastrophic. With a good portion of their men dead, as well as their commanding officer, the only thing that remained for them was to surrender.\n\n\"Swabians aren't permitted to surrender though, Jack,\" said Art as they talked about the situation near midnight. \"They are only allowed to win or fight to the death. Surrendering Swabians are given no quarter by their own people. Once they show the white flag, they effectively become not Swabian anymore.\"\n\n\"The barbarity of these people continues to surprise me,\" said Jack with a heavy eye roll. \"How many more of them have to die before they see the situation is hopeless?\"\n\n\"For them? All of them will,\" said Art succinctly.\n\nJack hoped it would not come to that. Despite not liking them as people, the Swabians didn't deserve to be annihilated completely, and it was a heavy task to ask any officer to do just that. However, as morning soon dawned and the heavy fighting resumed, Jack had to wonder if it would indeed come to that.\n\nWould they have to kill all the Swabians today?\n\nThat question didn't have an easy answer especially once contact was made by Abigail and the rest of the fleet an hour later.\n\n\"Jack, we should be there in no more than three hours,\" she said through the radio. \"How are you holding up over there?\"\n\n\"As best we can,\" said Jack. \"We have them pulled back to the end of the peninsula and victory is all but assured. It just remains to be seen what they will do. Whether they fight to the end or if they will surrender.\"\n\n\"I'm sure a few volleys from the fleet will make any hopes of fighting to the end fleeting,\" said Abigail. \"That will surely make them surrender.\"\n\n\"We are dealing with Swabians here, Abigail,\" said Jack with a chuckle. \"Who knows what goes through their brains?\"\n\n\"You're right about that,\" she replied. \"Doesn't mean we can't try it anyway!\"\n\nJack never got the chance to take her up on the offer. His fleet was still a good two hours out when word was brought to him that the Swabians were tying their gray cloaks to their rifles and waving them in the air. Since it was the closest thing to white they had, the meaning was obvious.\n\n\"They're surrendering, Jack,\" said Greg with excitement. \"You actually got the Swabians to surrender! All of them are throwing down their weapons!\"\n\nIndeed, it appeared Greg was entirely right. The remains of the Apulian invasion force, the same one that had taken all three islands so easily and seemed poached on the edge of victory when Jack arrived, was now admitting defeat.\n\nThe Swabian Army could be beaten decisively.\n\nApulia was now free.\n\n*****\n\nThe Battle of Marmora, as men began to call it that evening as the cleanup began, wasn't without grievous casualties on both sides. All told, Jack lost about twice as many men in the battle as he had in the Battle of the Apulian Plain two weeks prior. His army now stood at about 17,000 strong but there wasn't an individual component of the army that hadn't felt the sting of loss, including the Javans and the Apulians who took the brunt of the attack.\n\nThe Swabian Army, starting the previous morning at over 18,000 men, lost over ten thousand of them during the course of twenty-four hours to death and injury. Those that were left to surrender were just about eight thousand in total--a ragged bunch that would spend the rest of the conflict as prisoners of war.\n\nDespite the high casualties, spirits were soaring on the Allied side. With the battle not technically taking place in Marmora, it was so named because it meant freedom for the ancient city, as well as freedom for Apulia at large. It also took a significant chunk out of the Swabians' fighting ability--the loss of so many trained and well-supplied men would be next to impossible to replace quickly.\n\nEven still, the war was bound to go on but for now, Jack and his allies had won a hard-fought campaign, one that at times seemed like they were just trading time for another day of life. Yet it was the winning of the campaign in Apulia that caused a euphoria that Jack hadn't seen in some time.\n\nThe first one he sought out on return was Kat. Tears of joy streamed down her eyes as she hugged him tightly, the baby still clutched to her chest.\n\n\"You did it, Jack,\" she said between sobs. \"You really did it!\"\n\n\"We did it,\" he corrected. \"The whole alliance did. And we just showed the rest of the world that the Swabians can be beaten. That they won't be able to bully the West without consequence.\"\n\n\"There's so many possibilities now,\" she said, looking into his eyes. \"We could go back to Picardy! Or we could even invade Swabia and bring this war to a close. Jack, we could even go to Galicia.\"\n\nHe kissed her forehead and hugged her close to him. \"There will be time soon to decide our next course. For now, let's just celebrate success while we have it.\"\n\nThose words were good enough for Kat and they stayed pressed together for close to half an hour, just enjoying the feel of each other. Jack even tried to hold John in that time, thinking of all times for the baby to allow himself to be held by his father, this would be the one when he wouldn't cry.\n\nHe was mistaken in that thought as John's little lungs soon started to wail, forcing Jack to quickly hand him back to Kat. Today though, he wouldn't let it dampen his spirits.\n\nInstead, Jack sought out his other friends. Vera gave him the tightest hug he'd ever received from her. Santino kissed both of his cheeks in a stunning display of unsuspecting affection. Even Greg and Art were both in tears at the recovery of their fortunes. That wasn't even mentioning the celebrations of the soldiers. Apulians and Picards celebrated with the same amount of revelry, both having felt the specters of Swabian evil in different fashions.\n\nIt was once the celebrations died down that Santino approached Jack that evening, still wearing the beaming smile from before.\n\n\"Jack, might I have a word?\"\n\nJack nodded quickly and gestured for the Director to sit. Santino did so while carefully balancing his glass of wine, which Jack suspected was probably one of many that he'd had for that day.\n\n\"What an incredible day,\" said Santino without a single slur of his words. \"What an incredible life! To see all of our struggles mean something and to see an end to the fighting is the best present any leader could see.\"\n\nJack raised an eyebrow. \"The fighting isn't over yet. We still have a long way to go before the Swabians are defeated.\"\n\nSantino waved his hand dismissively. \"Right but I meant in Apulia! The fighting here is over and there's only one thing left to do. We need to liberate Marmora!\"\n\nJack nodded to that request. \"Once the dead are buried and the wounded taken care of, we can set off toward the city. I know you're anxious to get back to your capital but it won't be much longer.\"\n\n\"I hope not, Jack,\" replied Santino. \"I want my people to know that the threat of Swabia has been defeated. I want them to know our alliance has beat back the menace for good!\"\n\nJack didn't know how to respond to that. He hated to correct Santino but the fact of the matter was the war wasn't over yet. Apulia was just one country where the Swabians were. There were still Swabian armies in Picardy, Andalucia, Sorella, as well as in Swabia. Sure, they could celebrate the victory that was had here, but they hadn't achieved the final victory just yet.\n\nUltimately though, Santino was right about one thing--Marmora did need to be liberated. While the next day was used for rest for the men, the following day the entire army marched the short distance down the coast until they spotted the ancient capital city of Apulia waiting for them.\n\nIt was a clear and gorgeous morning, and the sun bounced off the stonework of the buildings to make the city take on an otherworldly glow. It was like the city was waiting on this time for them and now seemed determined to give them the welcome they deserved.\n\nAs Jack and his forces drew closer, the sounds of excitement could be heard even from the outer suburbs. Men, women, and children began to pour out into the streets at seeing the flags of Galicia and Apulia held front and center by the advancing troops. Children screamed with excitement while those women that were young and single enough exchanged carefree kisses with the soldiers as they walked by.\n\nExhilaration was everywhere. That could be seen no further than the behavior of the Apulian Director as he shook hands with every Apulian citizen who would have him, all the while giving thanks to the alliance that brought him back to his city.\n\nThe crowds thickened as the front ranks reached the middle of the city. The roads became thick with people, leaving only a small avenue for the army to travel through as discipline slackened. Soon the soldiers were responding to the revelry as well, especially the Apulians, many of whom knew the civilians in the crowd.\n\nThe celebration came to a head once the main square of the city was reached. For Jack, it looked like the main square was nearly half a mile long by the same distance wide, an incredible area of size where it seemed that most of the city could congregate.\n\nTo that end, Santino was determined to reach the center of the city where he was hoisted up to the cement walls that made up a giant ornamental fountain. It was here that his skills as an orator were used for good measure.\n\n\"Apulians! Citizens! My countrymen!\" boomed Santino, making the most of his loud voice to reach as many in the crowd as possible. \"Today our army stands in Marmora on the cusp of victory! After so many months of struggle--of seeing our homes, our children, our friends, brothers, fathers, and sons crushed by the soulless boots of a foreign invader, today we celebrate our vengeance!\"\n\nThe crowd closest to Santino raised up with loud cheers, clapping in delirious approval of his message.\n\n\"Apulia is free today! Apulia lives on because of the strength of our own soldiers but also because of the strength of our allies! I'm talking of the good people of Samara! I'm talking about the noble warriors of Carinthia! I'm talking about the trusted populace of Picardy! And last but not least, I'm talking about the great friends we have in Galicia! For it is because of the Galician King that Apulia is once more free!\"\n\nWith those words, Santino scanned the crowd theatrically before his eyes settled on Jack. \"Where is he? Where is the Galician King? Jack, come up here with me please?\"\n\nJust like that, Jack felt the assembled weight of many Apulian hands on him, urging him to join the Director near the top of the fountain wall. He went willingly, climbing up in the same path Santino stood until the Director helped him the last way.\n\nSantino threw his arms around Jack's shoulders and yelled out to the crowd. \"It is only because of this man that Apulia is free today. With thankful blessings and good fortune, we wish long life and friendship to the Galician King, Jack Kincardine. All hail King Jack Kincardine!\"\n\nWith him, the crowd boomed. \"All hail King Jack Kincardine!\"\n\nSantino boomed again. \"Hail King Jack!\"\n\nAnd once more, the crowd answered back with the same cheer.\n\nJack couldn't help but grin and wave to the crowd in return.\n\nThere was no sweeter taste than victory.\n\n*****\n\nLater on that evening, Jack had a private dinner with Santino at the Director's Mansion, located not far from the center of Marmora. The city was still reeling with celebration, and every so often, the sounds of cheering and excitement could be heard even inside the walls of the stately manor.\n\nFor now though, Jack was content to enjoy the hospitality of Santino as his servants and aides rushed to make the mansion a home again for the Director's family.\n\n\"I hope you don't mind that I got a little carried away today,\" said Santino as he sipped some Apulian red wine. \"There's something about speaking to a crowd that just arouses my passion.\"\n\nJack grinned. \"You're a politician through and through, Santino. Nothing could be less surprising to me.\"\n\nSantino nodded and then took a deep breath, looking around his surroundings. \"I didn't know how long it would be until I was back in this room again. I thought it might be years. I thought I might never see it. You've given that to me, Jack. You've given this all back to us. You're the savior of Apulia.\"\n\n\"I'm just glad we could make it to this day,\" replied Jack. \"There were many times when I thought victory wouldn't come. That the odds against us were too great. If I'm being honest, it was hard to keep the faith sometimes.\"\n\n\"But you did keep the faith,\" said Santino. \"And we are where we are right now because of your leadership. Yours, Jack, not mine. If it weren't for you, I'd hate to think what would have become of us. You're like a father to this country now. Those are just as much your children out there as they are mine.\"\n\nJack smiled politely. \"That's a kind thing for you to say, but they cheered the loudest when they saw you, Santino. You're their leader. You're the one they need right now.\"\n\nSantino started to chuckle. \"You underestimate yourself, Jack. They cheered the loudest when you joined me. I'm the politician, remember? I know how to read a crowd. The Apulian people are with you, Jack. I think they'll surprise you with the level of their support.\"\n\n\"It's a good thing then,\" replied Jack. \"Because we'll need their continued support in this war. The fighting is far from over, and I'm sure we'll need many good Apulian soldiers before the end.\"\n\nJack wasn't sure what Santino might say to that, especially given their conversation from the previous evening. Part of him wondered if Santino would balk at that request, especially since the fighting in Apulia was over, however, Santino's loyalty had no limits once earned.\n\n\"We'll raise new forces then,\" promised the Director. \"And we'll send them wherever you decide to go next, Jack. You have my promise on that. Apulia is with you until the very end.\"\n\nWith those words, the Director reached his hand across the table. He grabbed Jack's hand tightly and squeezed, his appreciation visible on his face.\n\nWith allies like the Apulians, the Swabians had every right to fear their next move.\n\n*****\n\nDespite the festivities in Marmora, not everyone was in a pleasant mood that evening.\n\nEspecially not John, as Jack was reminded for what felt like the hundredth time as the small baby wailed at the top of his lungs that moment that he was deposited into Jack's arms.\n\n\"Just don't hold him so tightly,\" cautioned Kat as a nervous look appeared on her face. She knew as well as Jack did how sensitive he was about the subject.",
        "\"I'm not holding him tightly at all. Just enough,\" said Jack loudly, over the wails of the child.\n\n\"What if you sit down while holding him?\" suggested Abigail, newly arrived to their chambers after the fleet docked in Marmora several hours ago. \"Maybe the change in position will settle him?\"\n\nJack tried what she suggested and sat down in a chair next to the bed. There was no change in John though, and he still continued to cry.\n\nAs his infant son continued to complain, Jack felt the cold sting of rejection in his heart. Why wouldn't the child sit with him? Was there something wrong with him? Or with Jack? What could possess the boy to not want to be held by his father?\n\nFinally, Jack let out a long sigh. It was hopeless. No amount of patience would ever manifest to let the boy sit with him without anguish. He felt cursed to this lot. Did any other father ever have it so hard?\n\nAt that moment, he remembered the words that Bill told him before the battle. The part about trial and error. How many times would he have to error before he figured it out?\n\nAt long last, Jack could take it no longer. He stood up from the chair and handed John over to Kat. Like turning off a switch, the infant stopped his pathetic wails and clutched at his mother, but not before taking the chance to glare at Jack for so daring to hold him.\n\nJack felt his shoulders slump forward. \"I just wish I knew what I was doing wrong.\"\n\nHe felt Abigail press her way into his arms. \"You're not doing anything wrong, Jack.\"\n\n\"I'm doing something wrong,\" he snapped. \"He can't even stand to be touched by me. What did I ever do? Is it how I look? Is it because I'm not either of you? What is it? I just need to know what it is so I can have a chance to fix it!\"\n\nEven though he wouldn't admit it out loud, he was close to breaking down. All Jack wanted to do was hold his son in his arms and hope the boy knew that he loved him already. Such a task remained completely out of reach. Jack could win battles and defeat his enemies, but he couldn't even hold his own son.\n\n\"We just need more time,\" said Kat as she attempted to breastfeed once more. The baby took his untrusting eyes off of Jack and turned his focus to her breast. \"It's probably something I'm doing. Maybe we need to be trying this more often. If we try to get him to sit with you more often, we can break down whatever is frightening him I bet.\"\n\nJack shook his head. \"Or it'll just traumatize the kid into never wanting to sit with me. Then we'll never have a chance of this working.\"\n\nBoth Kat and Abigail shared the same look of concern with each other but neither voiced anything out loud.\n\nIt was all too frustrating, enough so that Jack wanted to be anywhere else but in this room staring his defeat in his eyes. He moved to sit back down again and started to put on his boots.\n\n\"Where are you going, Jack?\" asked Abigail.\n\nHe shrugged. \"I don't know. Outside? Somewhere? Just somewhere where I don't have to deal with my failure.\"\n\n\"It's not your failure,\" insisted Kat. \"You're being too hard on yourself. Babies are finicky, Jack. You can't blame them for not knowing any better.\"\n\n\"Nor do I,\" he said while shaking his head. \"I don't blame John. Or you, Kat, or you, Abigail. I blame myself more than anything. Maybe if I did something different. Maybe if I was better, I don't know. But one thing's for certain. I'm not going to find the answer in this room.\"\n\nWithout any further words, he pushed up from the chair and left the room.\n\nOnce the door closed behind him, Jack let out a small sigh. His legs started walking forward but he had no destination in mind. It was only with reluctance that he admitted that the further he got from the room he shared with his family, the better he felt. Why did it have to be this way?\n\nHe got down one long corridor of the Director's Mansion and turned toward another. The halls of the manor were quiet at this time as most were getting ready for bed in some fashion. Jack bumped into several servants along the way, many of them going about their task making the mansion liveable again now that it was reoccupied by the Director.\n\nWhat he really needed was some fresh air. Jack had spotted an open-air balcony that looked over the city on his way in, and that's the direction he found himself walking that night. However, when he got to the balcony, he quickly realized he wasn't the only one not able to achieve any peace.\n\n\"Will, what are you doing out here?\" Jack asked as he closed the distance between the two men.\n\nThe young Galician looked shocked for a brief moment before he recovered his composure. He looked out on the city and gestured. \"I didn't know you were coming, Jack. Couldn't sleep?\"\n\n\"In a manner of speaking,\" grumbled Jack as he reached the railing next to the other man. He rested his weight upon his forearms and looked out. \"You?\n\n\"You could say that,\" said Will in a reluctant tone. Jack got the impression immediately that he wasn't hearing the full story. Will looked out on the city. \"Just remembering my last time in Marmora.\"\n\n\"When was that, Will?\"\n\n\"Before the war,\" he answered. \"I guess in the events leading up to it, before we landed in Picardy to find Katherine. Lindsay and I stopped here for supplies using my father's old yacht. At the time, I don't think we expected what would happen to us in the next year. It just felt like we were on a grand mission, similar to childhood without any real consequences.\" Will let out a small sigh. \"And then all this happened.\"\n\n\"It's fortunate that we're able to return to Marmora at all,\" said Jack. \"At least we were able to make something right from all of this.\"\n\n\"There are a lot of things that still need to be made right,\" shot back Will. \"Especially in Galicia. My father and I... well, let's just say we don't see eye to eye on that.\"\n\nJack found himself nodding easily. \"I've heard something about that.\"\n\nWill started shaking his head. \"My father can be so bullheaded sometimes. So stubborn! He always thinks that he knows best or that his way is the only right way. It can get frustrating at times to deal with it.\"\n\nTo those words, Jack couldn't help but let a small smile fill his lips. \"I think that's the nature of fatherhood. The man that raised me often did something similar. He used to say there were two ways to do things--his way and the wrong way.\" Jack stopped for a moment to let out a soft chuckle. \"Fathers have a way like that.\"\n\n\"It sounds like he would've gotten along well with mine,\" grumbled Will.\n\n\"Will, I don't think there's a father alive who wouldn't agree with that statement,\" said Jack lightheartedly. \"But he was more than often right. He knew the best way to do things, and when I failed, he was always ready to show me why it was wrong and what I could have done to make it right. For someone who wasn't my biological father, it was a huge thing to willingly take on that task.\"\n\n\"I just wish he wasn't so black and white sometimes,\" said Will. \"There are shades of gray in everything we do. Honestly, I just wish he would take the time to understand me a bit more. Sometimes, I think he thinks that I'm just an extension of him.\"\n\n\"So do all fathers of their sons, at least initially,\" argued Jack. \"The will to see your son as the completer of your unfinished dreams is a strong one.\"\n\n\"That's my father, no doubt about that,\" replied Will.\n\nJack put his hand on Will's shoulders. \"It's because he wants the best for you. It's because he doesn't want anything bad to happen to you. He may seem inflexible but it's because he's been down the same paths before you and has the experience of failure to learn from. In a way, he's trying to protect you when he seems most inflexible.\"\n\n\"You seem to know a lot about that,\" said Will with a small smile. \"Do you still have regular fights with your old man?\"\n\nJack shook his head. \"My adoptive father died when I was eighteen. I've lived more of my life without a father now than the time I had with one.\"\n\n\"Sorry, Jack,\" said Will. \"You just seem to have a good grasp of it where I don't.\"\n\nJack couldn't resist the urge to laugh. \"Tell that to my infant son. He wants nothing to do with me.\" Jack took a few minutes to fill in Will on his struggles with John.\n\n\"It would seem then that we both have a lot to learn,\" said Will after hearing the full story.\n\n\"It would also appear that we have the same problems, except we are viewing them from the opposite ends,\" noted Jack with a wry smile.\n\n\"Perhaps,\" conceded Will. \"I think your problem has an easier solution though.\"\n\n\"I guess we'll see,\" said Jack. \"But know this. You have a good father, Will. And you have the luxury of still having in him your life. Your father might be rough around the edges and he might not always seem to have the best answer, but he's always looking out for what's best for you or for the family at large. Remember that, Will.\"\n\nWill nodded only grudgingly. \"It's going to be hard for me to cut the man some slack. Or to admit that I was wrong.\"\n\nJack started to laugh. \"You sure you're not a father already? It seems like you're on your way there with that admission.\"\n\nWill joined in with the laughter. It took a minute for him to respond, but he turned to Jack finally.\n\n\"Maybe I have more of him in me than I'd care to admit.\"\n\nJack shrugged. \"I think every son realizes that sooner or later.\"\n\nWill didn't respond to that, but he simply looked out on the city. He was too quiet, and the silence was long enough that Jack felt he could finally find the source of the young man's anger.\n\n\"Why don't you tell me what has made you so upset with your father, Will? What's really troubling you?\"\n\nWill sighed heavily and didn't answer at first. Jack was tempted to leave the subject alone when Will began to speak a minute later.\n\n\"I told you my whole purpose for coming to Picardy was to find Katherine, right?\" he started. \"My father put me up to that. He's the one that gave me the men and the yacht and told me to go find her and bring her back to Galicia. He wanted to right the wrong that he made all those years ago.\"\n\n\"Seems like a noble plan,\" said Jack. \"And one that was given to the right hands.\"\n\nWill smirked. \"That's what I thought. I thought he'd finally given over some responsibility to me. My father chose me to help in saving Galicia and then what does he do? I'm off searching for the old regent and he finds a king!\"\n\nJack blinked. \"Technically, Will, you met me first. You knew about me before he did.\"\n\n\"You're right, Jack, but I wanted to be the one to be the hero. I wanted to be the one with the responsibility. I wanted to bring the rightful rulership back to Galicia, and I felt like he robbed me of that. I feel like he's been doing that my entire life. He gives me a little bit of responsibility but the second that I get into trouble, he swings in to save the day. It's like he can't trust me to make my own mistakes! He still treats me like a kid!\"\n\n\"Sounds like a father if you ask me,\" said Jack. \"That sounds like what a father should be doing.\"\n\n\"Well, I didn't want it to happen this time,\" said Will angrily. \"I wanted him to leave it to me. I wanted to finish the task that he gave me.\"\n\n\"Will, you know that if he hadn't intervened back in Kalmar, I wouldn't be standing here right now. I'd very likely be dead and our cause would be no better off for it.\"\n\n\"That's not a guarantee,\" grumbled Will.\n\n\"It is, I assure you,\" replied Jack. \"Will, I'm not doubting the depth of your commitment but your father saved my life. Without him, I surely would have died.\"\n\nWill pursed his lips. \"Others could have helped.\"\n\nJack shook his head. \"No one would have but that doesn't mean that your father doesn't trust you. The situation changed. His original mission was before anyone knew anything about me. He had to step in, Will, not because he didn't trust you but because he was trying to help you. And if I had to guess, he does that with some regularity in your life because he loves you. Because he wants to help you.\"\n\n\"I don't always need help, Jack,\" said Will with calm eyes. \"I'm not a little boy anymore. I'm my own man, and I can make my own mistakes and learn from them.\"\n\nJack gave him a small smile. \"Now that sounds like a conversation that needs to happen between father and son. Perhaps the father hasn't yet accepted that his son has grown up completely. Perhaps the son hasn't yet realized that no matter how old, his father is always going to swoop in when help is needed.\"\n\nWill didn't respond to that last message. Jack wondered if any of it struck a chord but he heard Will sniffle a moment later and then use his hand to wipe at his face. When he was ready to speak again, he put his hand on Jack's back.\n\n\"You're going to be a good father yourself, Jack. Don't lose hope with John. Things will start to turn around, I just know it.\"\n\nJack could only nod in appreciation. He didn't trust his voice with an answer.\n\n*****\n\nThe conversation with Will didn't last much longer than that. The younger man excused him a few minutes later to retire, leaving Jack on his own on the balcony. For another hour or so, Jack stared out at the city of Marmora, digesting the words that had been said. By the time he returned to his room, Kat, Abigail, and John were all sleeping. He climbed into bed and didn't take long to fall asleep.\n\nThe next morning started off with something of consequence when Russell Taylor reached out about some new arrivals to Marmora. Jack's radio crackled with the message while he and the women sat having breakfast with the elder Callands.\n\n\"What kind of new arrivals, Russ?\" asked Jack into the radio. \"Friendly or foe?\"\n\n\"Friendly, Jack,\" replied Russell. \"It looks like we have some more Galician defectors who'd like to join their king. We picked up radio transmission from two more cruisers that will be here within a couple hours.\"\n\n\"Two cruisers?\" repeated Bill. \"Now that's a great way to start the morning.\"\n\n\"It is indeed,\" replied Jack before he turned back to the radio. \"Who's in command of those vessels, Russ?\"\n\n\"An old friend of mine,\" replied the admiral. \"I'll bring him to shore once they get here.\"\n\nThat stoked everyone's curiosity but Jack had to wait until after lunch to meet with the admiral, who brought along a Galician captain to Jack's quarters. The Galician captain was close to Jack's age but about a foot shorter overall. He was stocky too judging by the tighter fit of his uniform but he had an easy smile on his face.\n\n\"Jack, I'd like you to meet Captain Tom Dorne of the cruiser Victory,\" said Russell as he gestured to the new arrival. \"Tom, this is our king. This is His Majesty, Jack Kincardine.\"\n\nCaptain Dorne didn't wait very long before assuming a bow before Jack. After the customary greetings, Jack beckoned him to his feet.\n\n\"I must say, Captain, that your arrival is most fortunate,\" said Jack. \"We always have a use for more cruisers in the fleet.\"\n\n\"Thank you for having me, Your Majesty,\" said Tom. \"My ships are at your immediate disposal.\n\nIt took Jack a couple minutes to get Tom to dispense with the titles but what he was most interested in was the situation inside Galicia.\n\n\"Tell me about our country,\" said Jack. \"What's going on there? We haven't had any recent defections come to us but the last I heard, Eric Rosdahl was going mad.\"\n\nTom nodded eagerly. \"Madder than anything, I'd say. He's entirely lost his mind. Everyone in the country now is tense, especially those serving in the armed forces. Every day, he rants about something new and outlaws something else. I've never seen a man more paranoid.\"\n\n\"How were you able to escape?\" asked Russell.\n\n\"At great risk to myself and my men,\" answered Tom. \"Most of our fleet is centered around Kalmar because the Regent believes that the King will return to attack him there.\" Tom centered his gaze on Jack. \"He believes you will attack any minute.\"\n\nJack found himself shrugging. \"He's not entirely wrong. That thought had crossed my mind but he has the majority of Galician forces under him. I'm not strong enough to take him head-on.\"\n\n\"He doesn't believe that,\" said Tom while shaking his head. \"He's convinced himself that you have the full armies of Apulia, Picardy, and Carinthia at your disposal, as well as their fleets. He thinks you outnumber him quite severely.\"\n\nJack rolled his eyes. \"All the while fighting the Swabians? Perhaps if there wasn't another war, we'd be in better shape but that's simply not the case.\"\n\nTom pursed his lips and then leaned in closer. \"Permission to speak frankly, Your Majesty?\"\n\n\"Granted, go ahead, Tom. What's on your mind?\"\n\n\"Sire, the men won't fight you,\" said Tom. \"Everyone that I've talked to feels the bond, or felt it when you were in Kalmar. They know you're alive and they know who you are most importantly. At first everyone was troubled. You were there for a few days and then you were gone but Eric Rosdahl is ramping up the rhetoric against you. He claims you're a usurper and not the real king.\"\n\n\"How preposterous,\" said Russell with a sour expression. \"You can't fake the bond. Everyone feels it the same.\"\n\n\"That's what the men say,\" said Tom. \"They know it's bullshit but no one is calling it out against him because he's so bloodthirsty right now. He's killing those that aren't following his every order and whim at the drop of a hat. People are scared for their families and don't know what else to do.\"\n\n\"Are you sure this is most of the armed forces?\" asked Jack. \"This isn't just the men on your cruiser?\"\n\nTom nodded emphatically. \"I've tried to make the rounds when I could, talking to the men at the naval base in Kalmar. It's the largest open secret in the city. They won't fight you, Your Majesty. They know what you represent, and Galicians have been wanting their king back for centuries. It's not just navy men who feel this way, Sire. I've heard the army regulars saying the same thing. I've even heard the city guards saying it when they thought no one else was listening. It's pervaded the entire armed forces.\"\n\n\"I would say that means they've been compromised on their defenses then,\" said Russell as he looked at Jack. \"That could be very interesting to our side. If Eric Rosdahl's men won't fight for him, what's to stop us from reclaiming our homeland?\"\n\nWhat indeed, thought Jack. He stayed to ask more questions of Captain Dorne but it soon became obvious that he wasn't exaggerating. An incredible moral affliction was now affecting Galicia's soldiers and sailors, and in doing so, it opened up another possibility.\n\nThere was a war council set for the following morning about where to go now that the war in Apulia was over. With this new information, he now knew that Galicia would be an option for them. How he would love to see Eric Rosdahl thrown out of power but even if what he heard today was true, it was still asking them to take a significant gamble.\n\nCould they take their entire armed forces to Galicia and hope that Rosdahl's forces stood down? When threatened with a credible invasion force, would the Galician soldiers finally find a backbone? How far could he trust the words of men he'd never met before?\n\nMore importantly, could it be a trap? Russell vouched for Tom many times over before the captain was even presented to Jack but what if Tom had been compromised? What if this was just some plan by Eric Rosdahl to eliminate Jack once again?\n\nOne thing was for certain--it wouldn't be as easy as simply sailing to Kalmar.\n\n*****\n\nThe next morning kicked off with the long-awaited war council to determine where to go after Apulia. It was a beautiful late fall day in the ancient city of Marmora, and there wasn't a single cloud on the horizon as Jack made his way to the central meeting hall of the Director's Mansion.",
        "Inside the hall was one large circular table with seating for at least twenty people, symbolic of how many were invited to take part in the council. In fact, Jack was one of the first arrivals and watched all of them enter the room and take their seat at the table.\n\nThe second to arrive after Jack was Santino, and seeing as it was his mansion, he took the seat of honor right beside Jack where the two men would officially lead the council. On Jack's other side, he had many of his own personal allies, including Kat and Abigail, but also added in were his leading generals, Art and Greg, as well as his leading admiral, Russell.\n\nBill was invited as well and he took a seat opposite of Jack. Sitting next to him were Aedan and Ciara, looking incomplete without the addition of Prince Davin (whom Ciara assured was in good hands with his nanny). Also in attendance were generals Neil Fagan and Luis Barca, both leaders of their countries' individual contingents.\n\nThe last person to arrive was also the one least well-known, and that was the leader of the Samaran portion of the army, General Dion Vinke. Jack only knew the man from brief conversations with him after he'd arrived in Apulia but for the most part, Dion was what he expected in a general--calm, resolute, and entirely logical, and so far, the general had focused only on leading his men without getting involved in bigger picture items.\n\nWith all the arrivals now accounted for, Jack stood up to start the council.\n\n\"Thank you all for coming. This is probably the largest council we've had to this point and that points to the fact that we've been so successful in the conduct of this war,\" said Jack as he looked at each face in the room. \"With our recent actions, we can now call the country of Apulia free and independent once again.\"\n\nSantino rapped his knuckles against the wooden table in excitement but otherwise the rest were content to let Jack continue speaking.\n\n\"We've been struggling through this war and now we finally have a taste of strategic success,\" continued Jack. \"But with that in mind, the war is not over. There are still Swabians in many of our homelands and we need to decide our next course of action. We need to choose where this army goes next in order to keep fighting. That's why I've asked all of you to gather now so that as a group, we can decide our best course.\"\n\nWith those final words, Jack sat down to let the discussion begin. Beside him, Santino seemed to easily pick up the role of moderator as he began to speak next.\n\n\"Is there anyone that feels strongly about where we ought to go next? Anyone that has something to say?\" asked the Director.\n\nTo no one's surprise, the one that stood up next was Aedan.\n\n\"I can answer that question with a definitive yes,\" said the Picard King. \"As you know, we had to leave my country of Picardy in the face of Swabian aggression. My beloved capital city is occupied by a foreign power and my people struggle daily under their persecution. I would ask that we strongly consider Picardy as the next place to take this force. It's the most logical suggestion that we have.\"\n\nNeil was the next to speak up in favor of his sovereign's plan. \"A good portion of our army is Picard in nature. The men clamor to get back to their homes and will fight like devils to free their country. My men are ready to board the ships to Picardy if you will have us.\"\n\nNo sooner had Neil sat down did Ciara stand up. It quickly became apparent to Jack that this was planned between the three of them by the elegance of their speech and coordination of their movements.\n\n\"I'd like to add weight to that request as well,\" said Ciara with sorrowful eyes. \"I see the faces of our countrymen every day. I see their struggles and their pains, as well as eyes that yearn to return to their homes. Picardy can be strong again once freed, and I think it important that we put an end to the suffering of our people.\"\n\nWhen Ciara sat down, there was a moment of silence. No one seemed to want to tackle the passionate pleas of the three Picards right away but judging by the looks on many faces, there weren't many others in the room that were fans of the Picardy option.\n\n\"Thank you for your words just now, all three of you,\" said Jack as he opened his palm. \"Now let's hear out a Picardy plan. Can we get to Picardy next?\"\n\n\"As far as ferrying over the men, we could do that,\" said Russell Taylor. \"It might take two or three crossings but we could do it. My main objection to that would be that the Swabian Army on Picardy is slated to be strong. I'm not sure how long any first wave could stand there on their own before eventually getting overwhelmed.\"\n\n\"I'd have to echo a similar concern,\" said Art. \"Even if we did three invasion waves, the first wave would only be about six thousand men or so fitted comfortably on the fleet. If they landed anywhere that the Swabians could strike back with force, they would quickly be in trouble before we could make the next crossing.\"\n\n\"And that would even be before we achieved parity,\" added Greg. \"If the force on Picardy is the same size as ours, we wouldn't be in a spot to get an advantage over the defenders for a long time. If ever. The Swabians would always have the advantage.\"\n\nTo that, Aedan had only brief words. \"War is sometimes fought at a disadvantage. Look what happened here in Apulia. We turned a disadvantage into an advantage.\"\n\n\"Because we had to,\" shot back Art. \"We had to fight here in Apulia but now we have the luxury of choosing our next option. We shouldn't choose something that carries an obvious disadvantage from the start.\"\n\nAedan stood up as if offended by the general's words. \"Are you saying it's not worthwhile to free my homeland?\"\n\nJack reached his hand out to Aedan. \"We're just looking at the strategic situation, Aedan. We need to be wise with our men, and the fact of the matter is that we might be going to Picardy without any advantages. We know that strategically the Swabians outnumber us. We're unlikely to get more men in an invasion of Picardy.\"\n\n\"The common Picard citizen will swarm to our banners the second we land in the country,\" argued Aedan.\n\n\"I do not doubt your words,\" conceded Jack. \"But we need trained soldiers, not novices. The war in Picardy has gone on for so long that we are short on Picard soldiers. Many of them are already dead and those that are left on Picardy are not in the best shape.\"\n\nAedan grumbled something under his breath but didn't seriously challenge the issue again.\n\n\"Well, it seems that we've come up against our first main shortfall,\" said Greg to break the silence. \"Wherever we go, we have to make do with the army we have, not the army we want.\"\n\n\"That will rule out Swabia then,\" said Kat. \"We won't be strong enough to invade the main islands of Swabia.\"\n\n\"Especially not with their fleet still out there somewhere,\" added Abigail. \"A fleet that we still haven't located and will be more defensive in nature after this loss in Apulia. A strong fleet and strong army will block Swabia as an option for the time being.\"\n\n\"Our list of options grows thinner,\" said Jack. \"What other areas do we have left? Naxos? Andalucia?\"\n\nAedan shook his head firmly. \"I won't waste the lives of my men to invade Naxos or Andalucia, especially not as long as Picardy remains under occupation. Picardy will come before either of those countries.\"\n\nTo Jack's surprise, the Samaran General Dion Vinke added onto Aedan's statement. \"I would have to agree with King Aedan on that. Samaran troops were only supposed to be used in Apulia. I do not have authorization to take them anywhere else.\"\n\nJack gave him a surprised look. \"I'm sure if Tribune Hendrick Tysen were to weigh in, he would agree that we need to keep taking the war to Swabia. We can't remain on the defensive for them to get strong enough to strike back at us.\"\n\nVinke shrugged. \"That may be so but again, I would need approval from the Tribunes. Our deployment here is already highly irregular so I would want explicit orders before I board any other ships.\"\n\n\"I would add weight to General Vinke's words as well,\" said Aedan, finally finding someone to match his level of discontent. \"The Picard Army is going to Picardy or they aren't leaving Apulia.\"\n\nJack was worried by this display of stubbornness. His eyes drifted over to Bill, who quickly vocalized what he was feeling. \"Without the Picard and Samaran contingents to the army, we will be down to about half of our current size. It would make even an Andalucian invasion unmanageable at that level.\"\n\nThose were numbers that would squash any offensive action indeed, so Jack had to move quickly to stifle their discontent.\n\n\"I will send an immediate dispatch to Tribune Tysen about his wishes,\" said Jack to Vinke. \"We will know for sure whether you will be coming with us where we go next but if I know the Tribune, I will say he'll authorize your men for immediate redeployment.\"\n\nWith those words, Jack also swung around to Aedan. \"To that end, even with the full army, we don't have enough men to free Picardy right now. I know that's not the answer that you want to hear but that's the reality of our situation. If we want to free Picardy, we need a bigger army.\"\n\n\"And where are you going to get a bigger army?\" countered Aedan. \"More Apulian recruits?\"\n\n\"We could get them from Galicia,\" said Russell quietly, quickly earning the attention of the entire room.\n\nAedan actually snorted. \"I'm sure Eric Rosdahl will only be too willing to lend us a few men.\"\n\nRussell shook his head before looking at Jack. \"Can I tell them what we heard yesterday?\"\n\nJack nodded, and soon Russell expanded on Captain Dorne and his defection, as well as the general status of Galician forces and their lack of morale. As he continued to speak, he caused some excitement in the room, mainly as those assembled figured out that they might have an actual option on the table.\n\n\"Galicia is the best target for us right now,\" ended Russell finally. \"Her men won't fight against Jack. If we can land there and depose Eric Rosdahl, we can bring the full force of the Galician Army to play against the Swabians.\"\n\nJack looked at Art afterwards. \"What's the current size of the Galician Army? How many regiments?\"\n\n\"The current figures when I left Galicia were for forty regiments in the standing army,\" answered Art. \"Those include one regiment of guards for the city of Kalmar as well as five regiments of marines. But it is sizeable, that's for sure, as well as well-trained, and we have a strong reason to believe they would desert Eric Rosdahl to fight on the side of their true king.\"\n\n\"What if you're wrong?\" challenged Aedan from across the room. \"What if they fight against us? What if we put together an entire invasion force only to find that they don't want to fight for Jack at all?\"\n\nThe room was quiet at that particular question but it was the coolness of Russell that answered it. \"I believe my men when they tell me their morale is poor. I believe them when they tell me they don't want to fight for an autocratic despot like Eric Rosdahl. This may seem like the riskiest option on paper, but in practice, I think we'll find that it's our best chance of getting a larger army.\"\n\n\"I'll hope for your sake then that you're right,\" grumbled Aedan. \"I see it as another likely path for us to find our army destroyed--a risk that would be greater than going to Picardy.\"\n\n\"Neither option comes without a risk, Aedan,\" said Jack calmly. \"But we're going to go with the option that least risks our army and our cause.\"\n\nThat seemed to quiet the Picard King for the time being and as silence descended on the group once again, Jack threw out another question.\n\n\"So are those our only two options? Picardy or Galicia? Does anyone else wish to add a land to our consideration?\"\n\nHe scanned the crowd waiting for anyone else to speak up. Jack suspected that someone would offer something. He expected Luis Barca to talk about Carinthia being an option for regrouping but the general never spoke up. He even expected Santino to argue for the army's continued presence on Apulia to keep the country safe but the Director was oddly quiet during the rest of the meeting, never once piping up when they were discussing options.\n\nYet it seemed the room was now divided into two camps and it wasn't hard to tell which camp was bigger. The Galicians had more numbers than the Picards, and with the rewards of getting more men tied to the Galician option, it wasn't hard to see why it was currently winning. However, Jack had no wish to proceed without it being a democratic decision from everyone.\n\nAs a group, they would decide their next course by vote.\n\n\"All right then, seeing as we only have the two options, then we are going to put it to a vote,\" said Jack as he looked around the room. \"Everyone here will have exactly one vote. I want everyone's vote to be heard because at the end of the day, this army stays together because we all get a say in its existence. We are all in this together and united against the Swabian threat. With that in mind, let's tally up the numbers.\n\nBill took over for Jack at this moment. \"Please raise your hand into the air if you believe an invasion of Picardy is our next best option.\"\n\nSeveral hands shot into the air. There were no surprises that Aedan, Ciara, and Neil were amongst the first, but they were given only begrudging support by General Vinke as well. Even Luis Barca didn't support the Picardy plan and kept his hand lowered.\n\nBy numbers alone, it wasn't hard to tell which plan would have the most approval.\n\n\"Now, let's see a show of hands for the Galicia option,\" said Bill.\n\nThe rest of the room raised their hands, with only the absence of Jack as the overall arbitrator of the council. There was no need to even count at this point, and the depressed look on Aedan's face spoke volumes about his true feelings inside.\n\n\"The Galician option it is,\" said Bill as he gestured back to Jack.\n\n\"Galicia it is,\" repeated Jack loudly as he once more scanned the crowd. \"I will follow the will of this council. We will prepare our force to leave Apulia in the coming week and sail to Galicia. And there, we will finally rid Eric Rosdahl of his power.\"\n\nJack's words had an interesting effect on the room at large. The Galicians in the room seemed the most excited at the prospect of return but a small percentage of those there looked distraught at not getting their way.\n\nIn effect, it reflected his thoughts internally about returning to Galicia. Part of him was excited to return to his homeland but a small part wondered about a final showdown with Eric Rosdahl. Could the morale of the Galician soldiers really be the deciding point in this next fight?\n\nCaptain Dorne better be right about this, thought Jack as he brought the council to a close.\n\n*****\n\nIn the days after the war council, the Allied Army started to prepare for the move to Galicia. Jack found himself inundated with the logistics of the move, with it being no small order to provide for the supplies of so many people as well as their immediate coordination in the grand scheme of the plan.\n\nIn all, it was exhausting work, and Jack found himself working into the small hours of the morning only to rise with the sun. At least this day, he would be able to go see some familiar faces, and that was why he and Abigail found themselves on a launch boat in Marmora harbor on the way to see the Destiny.\n\nFor Jack, it had been the first time he'd been on the ship in months, the last time being back in Picardy shortly before his captivity. As they rode the waves closer to the mighty cruiser, the smile on his face grew.\n\n\"I think you're really enjoying seeing your ship again,\" said Abigail with a wry grin. \"And I was wondering if you might have forgotten all about the Destiny!\"\n\n\"The Destiny? No way,\" said Jack while shaking his head. \"How could anyone forget such a majestic ship? I only regret that it took me this long to get back to her.\n\nAbigail pressed into his side and wrapped her arms around him. \"It's been missing its admiral for quite some time.\"\n\nAs Abigail spoke, it reminded Jack of something he wanted to talk to her about after they reached the ship. He filed it away for later, not wanting to do it in the harbor.\n\nAs they reached the ship, Jack reached out to touch her steel hull, glad that his parting from the cruiser was finally over. His feet hit the deck and immediately he was surrounded by faces he hadn't seen in months--sailors that threatened to overwhelm their position with their enthusiasm. Jack found himself shaking many hands of the men who kept the Destiny afloat, and it was only with great reluctance were they separated from the common sailors.\n\n\"As you can see, Kat and I weren't the only ones that missed you,\" said Abigail with a coy smile.\n\n\"They might not be so eager to see me if they knew what I had in mind for them next,\" replied Jack. \"Going to Galicia isn't going to be as easy as it was coming to Apulia.\"\n\nAbigail shrugged carelessly. \"They've always done everything we've asked. Why not this too?\"\n\nHer words couldn't be more prophetic and Jack found his worries lessening as they walked toward his old conference room. With all the dangers they'd faced in the past two years, why wouldn't they answer the call again?\n\nStepping into that room was like stepping back in time. Jack was instantly transported back to the last time he'd been in there, when he last addressed the same group of people. He found excited looks on their faces, the first time in months that he'd personally laid eyes on them.\n\nThe ones he was most excited to see were Luke and Kim of the Valiant, and they were waiting closest to the door when Jack arrived. Kim was the first to throw her arms around him, followed shortly after by Luke.\n\n\"You have no idea how much we missed you,\" she said after the customary greeting.\n\nJack laughed and patted her back. \"A lot has happened in the last six months, hasn't it?\"\n\n\"Has that been about how long since we've seen you?\" asked Luke.\n\n\"A little more than that actually,\" said Jack.\n\nLuke grinned. \"Not long enough if you ask me.\" He elbowed Jack in the ribs in the form of good-natured teasing.\n\nJack laughed again. \"Well, you think you know a guy and everything...\"\n\n\"All of us are glad to see you back,\" said Luke in a more serious tone. \"There were days when we thought we'd never see you again.\"\n\n\"I surely felt the same,\" replied Jack. \"It's been a trying time, no more so than with what's happened at home.\"\n\nLuke and Kim didn't need to say anything to that. All of them knew they were rebels from the Javan Empire, as well as what fate awaited them should they ever be captured.\n\nFor now though, those sentiments were put firmly behind them. Jack said a few more words to Luke and Kim before moving toward Mike Cutter of the Stardust.\n\n\"Mike, how are you? How's my old sea dog doing after all this time?\" asked Jack.\n\n\"The years keep going by but I'm still here,\" said Mike with a rare grin.\n\n\"Isn't that the truth for all of us?\"\n\n\"It seems you've been busy in all that time, Jack. Or should I say Your Majesty?\"\n\nJack playfully rolled his eyes. \"Don't start that in here. I have to work hard enough to get the rest of them not to use that title as it is. I couldn't stand it if you all started to do it.\"\n\n\"Ah, better not let Luke hear that then,\" said Mike. \"I'd imagine he'd be prone to having a lot of fun with it.\"\n\nJack started to chuckle. \"No doubt about that.\"\n\nMoving around the room, Jack took a moment to greet all his destroyer commanders--Laura Pollard of the Maddox, Alex McGrath of the Wickes, Thomas Wentz of the Stingray, and lastly Amy Franklin of the Hutchins. As usual they were a lively group, amongst the last to take their seats before the meeting was about to begin.",
        "One person that Jack was glad was gone was Captain Barnabas. In his place was his second-in-command, Commander Jonas Roegart, someone that Jack found himself instantly taking a liking to.\n\n\"So glad to see you again, sir,\" said Jonas as he shook his hand. \"I'm grateful to serve under you. You're becoming a legend with the men on the Centurion.\"\n\nFrom Jack's side, Abigail rolled her eyes. \"Please, Jonas, don't say another word. His head is big enough already.\"\n\nJack held up his hand to Abigail while a grin filled his face. \"Just a second now, Abigail. Let the man talk.\"\n\n\"It's a real honor, sir,\" said Jonas again.\n\n\"I'm liking you a lot better than your predecessor, Jonas,\" said Jack finally. \"Abigail tells me that you're a damn good officer.\"\n\n\"I do what I can, sir,\" said Jonas, always a stickler for the chain of command. \"And in regards to my predecessor, I would say that's not a hard thing to do. Captain Barnabas certainly had a way about him.\"\n\nJack growled. \"To say the least. Anyway, we're glad to have you, Jonas.\"\n\nWith the greetings now over, they all took their seats while Jack stood in front of them.\n\n\"I meant it when I said it was wonderful to see all of you again,\" started Jack as he looked around the room. \"There were many times in the past six months when I thought I'd never get to see the faces of this task force again. The strategic situation has changed many times as well, and for the first time that most likely anyone in this room can say, we find ourselves in a position of changed loyalties.\"\n\nThere were a few head nods in the room but no one said anything out loud. No one wanted to tackle such a sour subject head-on, and so Jack continued.\n\n\"With that being said, it's time for us to talk about this fleet's next deployment,\" said Jack. \"There were many who asked whether we might be going back to Picardy, well, I can tell you with certainty that Picardy will have to wait for us. Our next deployment will be to the country of Galicia.\"\n\nJack heard Kim suck in her breath, and judging by the looks of many of them in the room, the news was surprising indeed.\n\n\"All of you know what Galicia now means to this force,\" said Jack as he looked around. \"For better or worse, we are aligned to Galicia now. As strange as it sounds to have those words come out of my mouth, that is our reality. As part of that reality, Galicia is still ruled by a tyrant regent that needs to be removed. We're just the force to do that job.\"\n\n\"Will the entire fleet be coming with us or is this just for the Javan portion of the fleet?\" asked Laura Pollard.\n\nJack shook his head. \"This is for all of us, Galicians included. We'll need every vessel we can get our hands on to do the Galician invasion, however, our sources within the country tell us that they won't fight for Eric Rosdahl. That they have significant qualms about fighting against their king.\"\n\n\"As they should,\" said Luke out loud. \"I wouldn't want to fight against us either.\"\n\nThat earned a round of laughter in the room and Jack found himself grinning as well.\n\n\"They'd be wise not to fight us, but if they do, they'll still be formidable,\" said Jack. \"My hope is that it never gets to that point. It's more than a hope actually. We're being told they won't oppose us.\"\n\n\"And if they do, Jack?\" asked Kim. \"What then?\"\n\nJack took a moment to answer her question. \"Then we do what we're trained to do. At the end of the day, Eric Rosdahl is a threat that needs to be removed. Because of him, the bulk of the Galician armed forces is held back from our use, and we can't prosecute the wider war without them. He needs to go.\"\n\n\"That all sounds pretty simple to me then,\" said Mike Cutter. \"If we can force them to blink then all the better but if they want a fight with us, I think they'll find we'll be worthy adversaries.\"\n\n\"They will outnumber us slightly,\" said Jack. \"By our recon, the fleet that protects Kalmar is bigger than our entire fleet, and that's just one that the Galicians rely on to protect the capital. They have other fleets around the waters of Galicia. However, I'd rather have one ship with a dedicated crew than have a hundred with crews that won't fight, and it's that reckoning that is fueling our decision to go to Galicia.\"\n\n\"What about the army?\" asked Kim. \"Are we transporting them with us too?\"\n\n\"As many of them as we can carry,\" said Jack. \"But we'll have obvious limitations for the first wave. That's why I'm asking that we carry the Javan marines and the Galicians as part of that wave. They are the soldiers I trust the most as well as being the most experienced and disciplined. I'm not counting on overall numbers there to overwhelm the Galicians because if we have to fight them, we've already lost.\"\n\n\"It seems risky,\" said Alex McGrath. \"We're certain about the Galician morale under Rosdahl?\"\n\n\"As certain as we can be,\" said Jack. \"But nothing is certain in wartime. I won't lie to any of you. This is a bold gamble that if it works out, it'll see our chances of victory in this war multiplied.\"\n\n\"And if it fails?\" asked Amy Franklin.\n\nJack let out a low sigh. \"Then there's a chance that none of us will come back to Apulia.\"\n\nThat statement made all of them silent. Jack watched their faces as each of them processed the news, coming to peace with their chances with this next mission. Jack wouldn't have blamed any of them if they weren't onboard with the plan but it wasn't that kind of force.\n\nLike Abigail had said, this was a force that had done everything he'd asked them to do.\n\n\"The Valiant and her crew will go wherever you need us to go, Jack,\" said Luke quietly. He followed it up with a friendly nod of the head. \"We really mean that--wherever.\"\n\nJack gave a grin to his old friend. \"Thank you, Luke.\"\n\n\"Well, I can't have the Valiant taking all the glory of this mission,\" said Mike Cutter. \"That Stardust is in too.\"\n\n\"So is the Maddox,\" said Laura Pollard.\n\nOne by one, all the commanders in the room echoed their support until Abigail remained as the last one who hadn't spoken yet. Jack's expectant eyes fell on her finally, and she didn't disappoint.\n\n\"Jack isn't going anywhere unless it's transported by the Destiny,\" she said as she crossed her arms in front of her chest. \"As well as with me by his side.\"\n\nThat earned some laughter from the rest of the officers but with all of them now approving of the mission, it was time to start working on the deployment. Jack thanked all of them for seeing him and wished them good luck in the next operation. One by one, the officers began to leave the room until it was only Luke, Kim, and Abigail left.\n\nOf course, Luke was still in his playful mood. \"I'd say that went pretty well, Jack. In fact, I bet if you asked Jonas to assault Java with you, I'd already be halfway across the ocean.\"\n\nJack gave him a serious look. \"Be thankful that's not what it's come to today. Java might be too occupied now with the Ruthenians and the Occies but one day, they will come for us. I have no doubt about that.\"\n\nLuke didn't seem as bothered by that possibility but the worry showed on Kim's face. \"Do you really think we would have to fight our own people, Jack?\" she asked.\n\n\"I wish I could say no,\" he answered honestly. \"But we know what kind of person Bancroft is. And with him on the imperial throne, there's no telling what he might do once the war wraps up. I wouldn't put it past him to send a fleet after us.\"\n\n\"Then if that's the case, we'll wish good fortune to the Occies and the Ruthenians,\" said Abigail.\n\nLuke snorted. \"I never thought I'd hear the day when those words came from a Javan officer.\"\n\n\"Let's put it behind us now,\" said Jack finally. \"No reason to discuss Java today. If everything goes well with this, we'll be many times more fortunate with reinforcements to continue this war.\"\n\n\"Aye, Jack, I can drink to that,\" said Luke. \"But if we are successful, you'll be making me admiral finally, right?\"\n\nJack couldn't hold back his laughter. \"What in the name of all that's good made you think that?\"\n\n\"Well, since Greg got promoted to general, I was thinking your friends might also benefit from some nepotism,\" said Luke with a grin.\n\n\"You'll be the last I promote,\" said Jack with an eye roll. \"In fact, one more word on the subject and you might just find yourself a lieutenant again.\"\n\nLuke let out a playful sigh. \"You think you know a guy until one day he finds himself a power-hungry king.\" He narrowly avoided being swatted at by both Jack and Kim.\n\n\"Just do the job well and maybe I'll find a captain's position for you,\" said Jack finally, letting slip plans that he'd been thinking about for some time now.\n\n\"Now you're talking,\" said Luke as his face brightened. \"We'll be ready to go to Galicia as soon as you are, Jack.\"\n\nJack chuckled. \"Same old Luke. What would I do without you, huh?\"\n\nLuke patted Jack's back. \"Let's hope we never have to find out!\"\n\nJack made small talk with Luke and Kim for a few more minutes until it was time for them to go back to the Valiant. With their leaving, it reminded Jack of something he wanted to talk about with Abigail. With just a little prodding, he brought her back to their shared headquarters on the ship but not before arousing her suspicion.\n\n\"Is this what you're up to?\" she asked with untrusting eyes as he closed the door. \"Are you hoping to score a little sex before we go back to the city?\"\n\nJack chuckled but shook his head. \"Not at all. I just wanted to talk to you about something.\"\n\nShe actually looked disappointed. \"Are you sure we can't have a quickie before we leave? That bed hasn't seen any action in a long time.\"\n\nHis laughter continued. \"You realize we just had sex this morning, remember?\"\n\nAbigail put on her best pout. \"But that was hours ago.\"\n\nEven with the uncertainty of much of the events surrounding his life, one area where he was truly blessed was with Abigail and Kat. A happier man he could not have been, and as much as he wanted to take her up on the offer right now, there was something else more important that he wanted to talk about.\n\n\"Come here,\" he said, gesturing to the desk they shared. Abigail gave him a confused look but sat down opposite from him. \"There's something I've been meaning to talk about with you lately.\"\n\nAbigail's wheels were already turning. \"Is it about John?\"\n\nJack flinched slightly but ultimately shook his head. \"Not at all. I wanted to talk about your rank.\"\n\nHer eyes showed some signs of surprise. \"My rank? You mean in the navy?\"\n\n\"Well, your rank in the Javan Navy,\" replied Jack. \"You've been a commander for over a year now and you've seen so many battles since that time. If anything, I'd say you were due for a promotion just from how much skill you've attained.\"\n\nAbigail actually smiled. \"I'll make sure to bring that up the next time the Admiralty sends us a threatening dispatch. I'm sure they'll get right on that.\"\n\nJack started to chuckle. \"Well, let's forget about Java for the time being. Javan ranks are no longer relevant to us because we don't fight for Java anymore. We're Galician now.\"\n\nAbigail nodded her head in acknowledgment but didn't say anything in response.\n\n\"So that means we need to reevaluate an appropriate rank for you now that you're in the Galician Navy,\" continued Jack. \"And let's be honest, you're too experienced to just be a commander anymore.\"\n\nHer eyes went wide. \"So does that mean...\"\n\n\"Correct,\" said Jack with a smile. \"Effective immediately, I'm promoting you to the level of commodore. You'll be Commodore Abigail Wainwright moving forward.\"\n\nAbigail let out a shriek of surprise as her hands went to her mouth. She pushed out of her chair and quickly crossed to the other side and collapsed into his chair.\n\n\"You're sure about this?\" she asked with uncertain eyes.\n\nHe nodded. \"There's no other officer I trust more,\" said Jack truthfully. \"I need someone that I can trust in the highest echelons of command. Not that I don't trust Admiral Taylor but I will always trust you before anyone else. Plus, let's not mince facts. You deserve this, Abigail.\"\n\n\"But it's two full ranks, Jack,\" she said quietly. \"You sure you don't want me to be a captain first?\"\n\nHe shook his head. \"No, I think commodore is appropriate for you now. After all, you're not the first person to skip ranks.\"\n\nAbigail grinned, knowing that he was talking about himself. She leaned in to kiss him tenderly. When she pulled away, her hand reached up to caress his face. \"I love you, Jack.\"\n\n\"I love you too,\" he replied as he gazed into her eyes.\n\n\"You're wrong about one thing though,\" she said after a moment of silence.\n\n\"Oh? What's that?\"\n\n\"I don't want to be Commodore Abigail Wainwright,\" she said with a straight face.\n\nJack managed to look confused for a minute. \"You don't?\"\n\nShe shook her head. \"No, I'd rather be Commodore Abigail Kincardine. Can you make that happen too?\"\n\nJack could only smile. He kissed her again. \"In due time, love. In due time.\"\n\nShe giggled and threw her arms around his neck. The next time that she whispered, it was several minutes later. \"Luke is really going to be pissed once he hears about this.\"\n\nJack couldn't hold back his laughter. \"I might have to make him a captain just to get him to shut up about it.\"\n\n\"Oh, that's a near certainty,\" she said with a throaty laugh before turning more serious. \"Are you going to keep me on the Destiny? Or did you have another assignment in mind?\"\n\nJack shook his head. \"For now, I need you on the Destiny. There's no one I trust more to handle this ship but I'm thinking in the action ahead, I might keep you in overall command of the formerly Javan contingent of the fleet. Russell can control the others. How does that sound to you?\"\n\n\"Daunting,\" she answered honestly. \"But I think I can handle it.\"\n\nHe kissed her again. \"You'll be just fine. You'll be great even. How could you not be?\"\n\nAbigail stared back into his eyes. They continued to soften as he spoke until at one point, they crossed the line between love and lust. With fire in her gaze, Abigail looked back over at the empty bed.\n\n\"Now I'm certainly not letting you leave until you give me a good fucking,\" she growled as she started to fish for his zipper.\n\nJack could only grin. It was one request that he could now easily oblige.\n\n*****\n\nEmperor Regaulfus Avila was enraged.\n\nHe couldn't remember the last time he was this angry but he suspected it was probably when Aurelius was still alive.\n\nNo servant was safe from his rage, and quite a few had already been hit by shattered bits of fine china in the process. One of them now had a nasty cut on his throat, and judging by the amount of blood on his fine tiled floors, the servant wouldn't be much longer for this world.\n\nAvila couldn't care less for that fact. Servants were a dime a dozen but it was men like Godric Katla that didn't come around very often. Only this morning he'd received the report of the Lord of Selz's death, as well as the complete destruction of his army in Apulia. For several minutes after the fact, Avila had barely reacted.\n\nHe simply didn't know how to react to the fact that a good portion of the Swabian Army had now perished and was of no use to him. A key component of his invasion plan was now damaged irrevocably, and he wouldn't be able to maintain any hold on Apulia. That also meant that the invasion of Samara was shelved for the time being, now being completely out of reach.\n\nAvila growled at the thought and hurled a fine mug directly into the back of one of the older servants, causing the man to fall forward. The sound of the servant's knees smacking into the tile was enough to make anyone flinch but no one was brave enough to react to it in any audible fashion.\n\nAvila almost wished one of them would have slipped up. A good beating or whipping was in order and he wanted to be the one to wield the weapon to get out his frustration. It would also give him time to think about his next moves as there were now several questions that needed answered.\n\nWhat was he to do about Apulia?\n\nWho would fill the shoes of Godric now that he was dead?\n\nLastly, what did this mean for the Swabian long-term plan?\n\nNone of the questions had an easy answer. Apulia was certainly shelved for the time being but what was he to do about the loss of such a distinguished commander? Godric had a number of sons over the years, both legitimate sons and bastards, but could even the best of them match their father's years of experience?\n\nThe last question was the most troubling. Despite the invasions of Picardy, Andalucia, and Sorella being complete, the loss in Apulia left the Swabians dreadfully exposed. It also meant that the forces of Jack Easterbrook could have the full resources of the Apulian islands with which to continue to fight, something that had been denied to him by the loss of Picardy.\n\nIt also meant that if Easterbrook so wanted to, he could now directly invade the Swabian islands, with no Swabian Army to block his path.\n\nIt was a troubling situation to be in and it was the reason behind Avila's next set of orders.\n\n\"Otto! Get over here now!\" yelled Avila, taking a temporary break from wrecking the room.\n\nNever too far away, Otto scampered to the emperor's side and put on a brave face.\n\n\"Yes, Your Imperial Majesty?\"\n\n\"Put out orders immediately,\" said Avila. \"I want a mass mustering of men here on the home islands to face a potential invasion. Put the word out to the main island as well as Selz and Cormfeld to do the same. If the Galicians invade, I want to be ready. There should also be a focus on supply. I want every potential soldier to have a full uniform and rifle should we see an invasion.\"\n\n\"I will get the orders out at once,\" said Otto before he added, \"I will send the message to Katla manor on Selz so one of his sons can fulfill your order.\"\n\nAvila didn't respond to that directly. In retrospect, it was a good move. Let the son that was strong enough take over his father's mantle do the job. Perhaps he would step back completely and let them figure it out amongst themselves. If they managed to shed their own blood in the process, all the better to ensure the strongest took over for his father.\n\nAfter Otto had scampered away, Avila stepped into his private study and looked at the great map of the West. Swabian power had definitively expanded eastward but was markedly absent to the north. To the west, the traitorous Galicians were quiet under his former ally, Eric Rosdahl, but Avila wouldn't be surprised if they united with Easterbrook moving forward after so carelessly letting him escape.\n\nThe strategic situation was becoming more tenuous. With his foes multiplying, the chances for victory had narrowed somewhat. No longer could Avila say that his forces were the undisputed masters of the West, a thought that annoyed him to no end.\n\nHowever, he wouldn't allow his annoyance to make him do anything stupid. He wouldn't reinvade Apulia at this time, not without having a significant advantage. He would have to be more careful with his remaining forces, especially until this mass muster of men bore fruit.\n\nThis was now a dangerous time for the Swabian Empire. With the taste of blood on his lips, it was critical now that they responded in such a way that the West understood that the empire wouldn't retreat from this simple reversal.\n\nEveryone had to understand that the Swabian Empire would continue to conquer, no matter the setback.\n\nThere was simply no other way.\n\n*****\n\n\"Nikias, get down!\"\n\nThe words rippled through the darkness just in time for the minister-turned-king of the island to duck back into the shadows. It was only a moment later that a Swabian patrol came walking not more than two feet from Nikias' position, a distance where even the sound of breathing could attract attention."
    ],
    "authorname": "CJMcCormick",
    "tags": [
        "fatherhood",
        "father",
        "war",
        "battle",
        "navy",
        "army",
        "king",
        "prophecy",
        "action",
        "adventure"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/fourth-vector-ch-35"
}